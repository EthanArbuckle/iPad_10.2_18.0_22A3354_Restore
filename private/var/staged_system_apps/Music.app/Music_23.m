_QWORD *sub_100C52598(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v4;
  unint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  size_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  _OWORD *v21;
  _OWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _OWORD *v30;
  _OWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  size_t v41;
  size_t v42;
  size_t v43;
  unint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  unsigned int v55;
  uint64_t v56;
  char v57;

  *a1 = *a2;
  v4 = ((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8;
  v5 = ((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8;
  v6 = *(_OWORD *)v5;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v5 + 16);
  *(_OWORD *)v4 = v6;
  v7 = *(_QWORD *)(a3 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (_QWORD *)((v4 + (v9 | 7) + 24) & ~(v9 | 7));
  v11 = (_QWORD *)((v5 + (v9 | 7) + 24) & ~(v9 | 7));
  v12 = ~v9;
  v13 = (v9 + 16) & ~v9;
  v14 = *(_QWORD *)(v8 + 64);
  v15 = (uint64_t *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  if ((*(_DWORD *)(v8 + 84) & 0x80000000) != 0)
  {
    v17 = v13 + v14;
    if ((*(unsigned int (**)(unint64_t))(v8 + 48))(((unint64_t)v15 + v9 + 8) & v12))
    {
LABEL_5:
      memcpy(v10, v11, v17);
      goto LABEL_8;
    }
  }
  else
  {
    v16 = *v15;
    if ((unint64_t)*v15 >= 0xFFFFFFFF)
      LODWORD(v16) = -1;
    v17 = v13 + v14;
    if ((_DWORD)v16 != -1)
      goto LABEL_5;
  }
  *v10 = *v11;
  v18 = (_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v18 = *v15;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))(((unint64_t)v18 + v9 + 8) & v12, ((unint64_t)v15 + v9 + 8) & v12, v7);
LABEL_8:
  *((_BYTE *)v10 + v17) = *((_BYTE *)v11 + v17);
  v19 = ((unint64_t)v10 + v17) & 0xFFFFFFFFFFFFFFF8;
  v20 = ((unint64_t)v11 + v17) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)(v19 + 8) = *(_OWORD *)(v20 + 8);
  v21 = (_OWORD *)((v19 + 31) & 0xFFFFFFFFFFFFF8);
  v22 = (_OWORD *)((v20 + 31) & 0xFFFFFFFFFFFFF8);
  *v21 = *v22;
  v23 = (_QWORD *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
  v24 = (_QWORD *)(((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v23 = *v24;
  v25 = (_QWORD *)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFF8);
  v26 = (_QWORD *)(((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFF8);
  *v25 = *v26;
  v27 = ((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8;
  v28 = ((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)v28 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)v27 = *(_OWORD *)v28;
  }
  else
  {
    v29 = *(_QWORD *)(v28 + 8);
    *(_QWORD *)v27 = *(_QWORD *)v28;
    *(_QWORD *)(v27 + 8) = v29;
  }
  v30 = (_OWORD *)((v27 + 23) & 0xFFFFFFFFFFFFFFF8);
  v31 = (_OWORD *)((v28 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v30 = *v31;
  v32 = type metadata accessor for ScrollViewProxy(0);
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(_DWORD *)(v33 + 80) & 0xF8;
  v35 = v34 + 23;
  v36 = (unint64_t)v30 + v34 + 23;
  v37 = ~v34 & 0xFFFFFFFFFFFFFFF8;
  v38 = v36 & v37;
  v39 = ((unint64_t)v31 + v35) & v37;
  if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v33 + 48))(v39, 1, v32))
  {
    v40 = *(_DWORD *)(v33 + 84);
    v41 = *(_QWORD *)(v33 + 64);
    if (v40)
      v42 = v41;
    else
      v42 = v41 + 1;
    memcpy((void *)v38, (const void *)v39, v42);
  }
  else
  {
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v33 + 32))(v38, v39, v32);
    (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v33 + 56))(v38, 0, 1, v32);
    v40 = *(_DWORD *)(v33 + 84);
    v41 = *(_QWORD *)(v33 + 64);
  }
  if (v40)
    v43 = v41;
  else
    v43 = v41 + 1;
  *(_QWORD *)(((v38 | 7) + v43) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((v39 | 7) + v43) & 0xFFFFFFFFFFFFF8);
  v44 = ((v43 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v45 = (_QWORD *)(v44 + v38);
  v46 = (_QWORD *)(v44 + v39);
  *v45 = *v46;
  v47 = *(_QWORD *)(type metadata accessor for LayoutDirection(0) - 8);
  v48 = *(_DWORD *)(v47 + 80) & 0xF8;
  v49 = v48 + 15;
  v50 = (unint64_t)v45 + v48 + 15;
  v51 = ~v48 & 0xFFFFFFFFFFFFFFF8;
  v52 = (_QWORD *)(v50 & v51);
  v53 = (_QWORD *)(((unint64_t)v46 + v49) & v51);
  if (*(_QWORD *)(v47 + 64) <= 8uLL)
    v54 = 8;
  else
    v54 = *(_QWORD *)(v47 + 64);
  v55 = *((unsigned __int8 *)v53 + v54);
  if (v55 >= 2)
  {
    if (v54 <= 3)
      v56 = v54;
    else
      v56 = 4;
    __asm { BR              X13 }
  }
  if (v55 == 1)
  {
    (*(void (**)(_QWORD *))(v47 + 32))(v52);
    v57 = 1;
  }
  else
  {
    v57 = 0;
    *v52 = *v53;
  }
  *((_BYTE *)v52 + v54) = v57;
  return a1;
}

_QWORD *sub_100C5292C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v5;
  uint64_t v6;
  __n128 *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  size_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  __n128 v27;
  uint64_t (*v28)(unint64_t, uint64_t, uint64_t, __n128);
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  __int128 v36;
  _QWORD *v37;
  _QWORD *v38;
  _QWORD *v39;
  _QWORD *v40;
  unint64_t *v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t (*v57)(unint64_t, uint64_t, uint64_t);
  int v58;
  int v59;
  size_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  unint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  unint64_t v72;
  _QWORD *v73;
  char *v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  unsigned int v78;
  uint64_t v79;
  __n128 v80;
  unsigned int v81;
  uint64_t v82;
  char v83;
  int v85;
  size_t v86;
  uint64_t v87;
  _QWORD *v88;

  v5 = (unint64_t)a2 + 15;
  v6 = *a1;
  v88 = a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v6);
  v7 = (__n128 *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v8 = (unint64_t *)(v5 & 0xFFFFFFFFFFFFFFF8);
  if (v7->n128_u64[1] >= 0xFFFFFFFF)
  {
    v9 = v7->n128_u64[0];
    if (v8[1] >= 0xFFFFFFFF)
    {
      v7->n128_u64[0] = *v8;
      swift_release(v9);
      v10 = v7->n128_i64[1];
      v7->n128_u64[1] = v8[1];
      v11 = swift_release(v10);
      v7[1].n128_u64[0] = v8[2];
      goto LABEL_6;
    }
    swift_release(v9);
    swift_release(v7->n128_u64[1]);
  }
  v11 = *(__n128 *)v8;
  v7[1].n128_u64[0] = v8[2];
  *v7 = v11;
LABEL_6:
  v12 = *(_QWORD *)(a3 + 16);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = (_QWORD *)(((unint64_t)&v7[1].n128_u64[1] + (v14 | 7)) & ~(v14 | 7));
  v16 = (_QWORD *)(((unint64_t)v8 + (v14 | 7) + 24) & ~(v14 | 7));
  v17 = *(unsigned int *)(v13 + 84);
  v18 = ~v14;
  v19 = *(_QWORD *)(v13 + 64);
  v20 = ((v14 + 16) & ~v14) + v19;
  v21 = (_QWORD *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8);
  v87 = ~v14;
  if ((v17 & 0x80000000) == 0)
  {
    v22 = v12;
    v23 = (uint64_t *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8);
    v24 = *v23;
    if ((unint64_t)*v23 >= 0xFFFFFFFF)
      LODWORD(v24) = -1;
    v25 = v24 + 1;
    if (*v21 > 0xFFFFFFFEuLL)
      goto LABEL_10;
LABEL_13:
    if (v25)
      goto LABEL_14;
    *v15 = *v16;
    *v21 = *v23;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v13 + 32))(((unint64_t)v21 + v14 + 8) & v87, ((unint64_t)v23 + v14 + 8) & v87, v22);
    goto LABEL_17;
  }
  v86 = ((v14 + 16) & ~v14) + v19;
  v28 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v13 + 48);
  v85 = v28(((unint64_t)v21 + v14 + 8) & v18, v17, v12, v11);
  v23 = (uint64_t *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8);
  v29 = v17;
  v22 = v12;
  v25 = ((uint64_t (*)(unint64_t, uint64_t, uint64_t))v28)(((unint64_t)v23 + v14 + 8) & v18, v29, v12);
  v20 = v86;
  if (v85)
    goto LABEL_13;
LABEL_10:
  v26 = *v15;
  if (v25)
  {
    swift_release(*v15);
    v27 = swift_release(*v21);
    (*(void (**)(unint64_t, uint64_t, __n128))(v13 + 8))(((unint64_t)v21 + v14 + 8) & v87, v22, v27);
LABEL_14:
    memcpy(v15, v16, v20);
    goto LABEL_17;
  }
  *v15 = *v16;
  swift_release(v26);
  v30 = *v21;
  *v21 = *v23;
  swift_release(v30);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v13 + 40))(((unint64_t)v21 + v14 + 8) & v87, ((unint64_t)v23 + v14 + 8) & v87, v22);
LABEL_17:
  *((_BYTE *)v15 + v20) = *((_BYTE *)v16 + v20);
  v31 = ((unint64_t)v15 + v20) & 0xFFFFFFFFFFFFFFF8;
  v32 = ((unint64_t)v16 + v20) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v31 + 8) = *(_QWORD *)(v32 + 8);
  *(_QWORD *)(v31 + 16) = *(_QWORD *)(v32 + 16);
  v33 = (v31 + 31) & 0xFFFFFFFFFFFFFFF8;
  v34 = (v32 + 31) & 0xFFFFFFFFFFFFFFF8;
  v35 = *(_QWORD *)(v33 + 8);
  v36 = *(_OWORD *)v34;
  v34 += 23;
  *(_OWORD *)v33 = v36;
  swift_release(v35);
  v37 = (_QWORD *)((v33 + 23) & 0xFFFFFFFFFFFFF8);
  *v37 = *(_QWORD *)(v34 & 0xFFFFFFFFFFFFF8);
  v38 = (_QWORD *)(((unint64_t)v37 + 15) & 0xFFFFFFFFFFFFF8);
  v39 = (_QWORD *)(((v34 & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8);
  *v38 = *v39;
  v40 = (_QWORD *)(((unint64_t)v38 + 15) & 0xFFFFFFFFFFFFFFF8);
  v41 = (unint64_t *)(((unint64_t)v39 + 15) & 0xFFFFFFFFFFFFFFF8);
  v42 = *v41;
  if (*v40 < 0xFFFFFFFFuLL)
  {
    if (v42 >= 0xFFFFFFFF)
    {
      v45 = v41[1];
      *v40 = v42;
      v40[1] = v45;
      goto LABEL_24;
    }
  }
  else
  {
    if (v42 >= 0xFFFFFFFF)
    {
      v43 = v41[1];
      v44 = v40[1];
      *v40 = v42;
      v40[1] = v43;
      swift_release(v44);
      goto LABEL_24;
    }
    swift_release(v40[1]);
  }
  *(_OWORD *)v40 = *(_OWORD *)v41;
LABEL_24:
  v46 = (_QWORD *)(((unint64_t)v40 + 23) & 0xFFFFFFFFFFFFFFF8);
  v47 = (_QWORD *)(((unint64_t)v41 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v46 = *v47;
  v48 = v46[1];
  v46[1] = v47[1];
  swift_release(v48);
  v49 = type metadata accessor for ScrollViewProxy(0);
  v50 = *(_QWORD *)(v49 - 8);
  v51 = *(_DWORD *)(v50 + 80) & 0xF8;
  v52 = v51 + 23;
  v53 = (unint64_t)v46 + v51 + 23;
  v54 = ~v51 & 0xFFFFFFFFFFFFFFF8;
  v55 = v53 & v54;
  v56 = ((unint64_t)v47 + v52) & v54;
  v57 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v50 + 48);
  v58 = v57(v53 & v54, 1, v49);
  v59 = v57(v56, 1, v49);
  if (v58)
  {
    if (!v59)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v50 + 32))(v55, v56, v49);
      (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v50 + 56))(v55, 0, 1, v49);
      goto LABEL_33;
    }
  }
  else
  {
    if (!v59)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v50 + 40))(v55, v56, v49);
      goto LABEL_33;
    }
    (*(void (**)(unint64_t, uint64_t))(v50 + 8))(v55, v49);
  }
  if (*(_DWORD *)(v50 + 84))
    v60 = *(_QWORD *)(v50 + 64);
  else
    v60 = *(_QWORD *)(v50 + 64) + 1;
  memcpy((void *)v55, (const void *)v56, v60);
LABEL_33:
  if (*(_DWORD *)(v50 + 84))
    v61 = *(_QWORD *)(v50 + 64);
  else
    v61 = *(_QWORD *)(v50 + 64) + 1;
  v62 = (uint64_t *)(((v55 | 7) + v61) & 0xFFFFFFFFFFFFFFF8);
  v63 = *v62;
  *v62 = *(_QWORD *)(((v56 | 7) + v61) & 0xFFFFFFFFFFFFF8);
  swift_release(v63);
  v64 = ((v61 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v65 = (char *)(v64 + v55);
  v66 = (char *)(v64 + v56);
  *(_QWORD *)(v64 + v55) = *(_QWORD *)(v64 + v56);
  v67 = type metadata accessor for LayoutDirection(0);
  v68 = *(_QWORD *)(v67 - 8);
  v69 = *(_DWORD *)(v68 + 80) & 0xF8;
  v70 = v69 + 15;
  v71 = &v65[v69 + 15];
  v72 = ~v69 & 0xFFFFFFFFFFFFFFF8;
  v73 = (_QWORD *)((unint64_t)v71 & v72);
  v74 = &v66[v70];
  v75 = (_QWORD *)((unint64_t)v74 & v72);
  if (((unint64_t)v71 & v72) != ((unint64_t)v74 & v72))
  {
    v76 = v67;
    if (*(_QWORD *)(v68 + 64) <= 8uLL)
      v77 = 8;
    else
      v77 = *(_QWORD *)(v68 + 64);
    v78 = *((unsigned __int8 *)v73 + v77);
    if (v78 >= 2)
    {
      if (v77 <= 3)
        v79 = v77;
      else
        v79 = 4;
      __asm { BR              X12 }
    }
    if (v78 == 1)
      (*(void (**)(_QWORD *, uint64_t))(v68 + 8))(v73, v67);
    else
      v80 = swift_release(*v73);
    v81 = *((unsigned __int8 *)v75 + v77);
    if (v81 >= 2)
    {
      if (v77 <= 3)
        v82 = v77;
      else
        v82 = 4;
      __asm { BR              X12 }
    }
    if (v81 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t, __n128))(v68 + 32))(v73, v75, v76, v80);
      v83 = 1;
    }
    else
    {
      v83 = 0;
      *v73 = *v75;
    }
    *((_BYTE *)v73 + v77) = v83;
  }
  return v88;
}

uint64_t sub_100C52F4C(_QWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  int v27;
  unsigned int v29;
  int v30;
  int v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  unsigned int v36;
  uint64_t v37;

  v37 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v37 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  v8 = v7 - 1;
  v9 = type metadata accessor for ScrollViewProxy(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int *)(v10 + 84);
  v12 = v11 - 1;
  if (!(_DWORD)v11)
    v12 = 0;
  if (v12 <= 0x7FFFFFFE)
    v12 = 2147483646;
  if (v8 <= v12)
    v13 = v12;
  else
    v13 = v8;
  if (v13 <= 0x7FFFFFFF)
    v14 = 0x7FFFFFFF;
  else
    v14 = v13;
  v15 = *(_QWORD *)(type metadata accessor for LayoutDirection(0) - 8);
  if (*(_QWORD *)(v15 + 64) <= 8uLL)
    v16 = 8;
  else
    v16 = *(_QWORD *)(v15 + 64);
  if ((_DWORD)v11)
    v17 = 7;
  else
    v17 = 8;
  if (!a2)
    return 0;
  v18 = *(unsigned __int8 *)(v5 + 80);
  v19 = v18 | 7;
  v20 = ((v18 + 16) & ~v18) + *(_QWORD *)(v5 + 64);
  v21 = *(_DWORD *)(v10 + 80) & 0xF8;
  v22 = ~v21 & 0xFFFFFFFFFFFFFFF8;
  v23 = v21 + 23;
  if (a2 <= v14)
    goto LABEL_40;
  v24 = *(_DWORD *)(v15 + 80) & 0xF8 | 7;
  v25 = v16
      + ((((v17 + *(_QWORD *)(v10 + 64)) & 0xFFFFFFFFFFFFFFF8)
        + v24
        + ((v23
          + ((((((((((((v20 + ((v18 + 32) & ~v19)) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                + 15) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)) & v22)
        + 16) & ~v24)
      + 1;
  v26 = 8 * v25;
  if (v25 <= 3)
  {
    v29 = ((a2 - v14 + ~(-1 << v26)) >> v26) + 1;
    if (HIWORD(v29))
    {
      v27 = *(_DWORD *)((char *)a1 + v25);
      if (!v27)
        goto LABEL_40;
      goto LABEL_31;
    }
    if (v29 > 0xFF)
    {
      v27 = *(unsigned __int16 *)((char *)a1 + v25);
      if (!*(_WORD *)((char *)a1 + v25))
        goto LABEL_40;
      goto LABEL_31;
    }
    if (v29 < 2)
    {
LABEL_40:
      if ((v13 & 0x80000000) != 0)
      {
        v33 = ((((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v19 + 24) & ~v19;
        if (v8 == v14)
        {
          v34 = (uint64_t *)((v33 + 15) & 0xFFFFFFFFFFFFFFF8);
          if ((v6 & 0x80000000) != 0)
          {
            v36 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(((unint64_t)v34 + v18 + 8) & ~v18, v6, v37);
          }
          else
          {
            v35 = *v34;
            if ((unint64_t)*v34 >= 0xFFFFFFFF)
              LODWORD(v35) = -1;
            v36 = v35 + 1;
          }
        }
        else
        {
          v36 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))((v23+ ((((((((((((v33 + v20) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)) & v22, v11, v9);
        }
        if (v36 >= 2)
          return v36 - 1;
        else
          return 0;
      }
      else
      {
        v32 = *a1;
        if (*a1 >= 0xFFFFFFFFuLL)
          LODWORD(v32) = -1;
        return (v32 + 1);
      }
    }
  }
  v27 = *((unsigned __int8 *)a1 + v25);
  if (!*((_BYTE *)a1 + v25))
    goto LABEL_40;
LABEL_31:
  v30 = (v27 - 1) << v26;
  if (v25 > 3)
    v30 = 0;
  if ((_DWORD)v25)
  {
    if (v25 <= 3)
      v31 = v25;
    else
      v31 = 4;
    __asm { BR              X11 }
  }
  return v14 + v30 + 1;
}

void sub_100C5326C(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  size_t v21;
  unsigned int v22;
  int v23;
  int v24;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_DWORD *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  v7 = v6 - 1;
  v8 = *(_QWORD *)(type metadata accessor for ScrollViewProxy(0) - 8);
  v9 = *(_DWORD *)(v8 + 84);
  if (v9)
    v10 = v9 - 1;
  else
    v10 = 0;
  if (v10 <= 0x7FFFFFFE)
    v11 = 2147483646;
  else
    v11 = v10;
  if (v7 <= v11)
    v12 = v11;
  else
    v12 = v7;
  if (v12 <= 0x7FFFFFFF)
    v13 = 0x7FFFFFFF;
  else
    v13 = v12;
  v14 = 0;
  v15 = *(_QWORD *)(type metadata accessor for LayoutDirection(0) - 8);
  if (*(_QWORD *)(v15 + 64) <= 8uLL)
    v16 = 8;
  else
    v16 = *(_QWORD *)(v15 + 64);
  v19 = *(_QWORD *)(v8 + 64);
  if (!v9)
    ++v19;
  v20 = *(_DWORD *)(v15 + 80) & 0xF8 | 7;
  v18 = *(_DWORD *)(v8 + 80) & 0xF8;
  v17 = *(unsigned __int8 *)(v5 + 80);
  v21 = v16
      + ((((v19 + 7) & 0xFFFFFFFFFFFFFFF8)
        + v20
        + ((v18
          + 23
          + ((((((((((((((v17 + 16) & ~v17) + *(_QWORD *)(v5 + 64) + ((v17 + 32) & ~(v17 | 7))) & 0xFFFFFFFFFFFFFFF8)
                    + 31) & 0xFFFFFFFFFFFFFFF8)
                  + 23) & 0xFFFFFFFFFFFFFFF8)
                + 15) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v18 & 0xFFFFFFFFFFFFFFF8)
        + 16) & ~v20)
      + 1;
  if (a3 > v13)
  {
    if (v21 <= 3)
    {
      v22 = ((a3 - v13 + ~(-1 << (8 * v21))) >> (8 * v21)) + 1;
      if (HIWORD(v22))
      {
        v14 = &dword_100000004;
      }
      else if (v22 >= 0x100)
      {
        v14 = 2;
      }
      else
      {
        v14 = v22 > 1;
      }
    }
    else
    {
      v14 = &_mh_execute_header.magic + 1;
    }
  }
  if (v13 < a2)
  {
    v23 = ~v13 + a2;
    if (v21 < 4)
    {
      if ((_DWORD)v21)
      {
        v24 = v23 & ~(-1 << (8 * v21));
        bzero(a1, v21);
        if ((_DWORD)v21 == 3)
        {
          *(_WORD *)a1 = v24;
          a1[2] = BYTE2(v24);
        }
        else if ((_DWORD)v21 == 2)
        {
          *(_WORD *)a1 = v24;
        }
        else
        {
          *a1 = v24;
        }
      }
    }
    else
    {
      bzero(a1, v21);
      *(_DWORD *)a1 = v23;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X17 }
}

void sub_100C5363C()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v1 + v2) = v0;
}

void sub_100C53644()
{
  __int16 v0;
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v1 + v2) = v0;
}

void sub_100C536C8()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

void sub_100C536D8()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_100C536E0()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

void sub_100C53718(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1011E2CE0)
  {
    v2 = sub_100044B54(&qword_1011E2B80);
    v3 = type metadata accessor for State(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1011E2CE0);
  }
}

void sub_100C53770(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1011E2CE8)
  {
    v2 = type metadata accessor for LayoutDirection(255);
    v3 = type metadata accessor for Environment.Content(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1011E2CE8);
  }
}

uint64_t sub_100C537C4(_QWORD *a1)
{
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t WitnessTable;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t OpaqueTypeConformance2;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t TupleTypeMetadata2;
  uint64_t v58;
  uint64_t v59;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  unint64_t v65;
  void *v66;
  uint64_t v67;

  v1 = (void *)*a1;
  v2 = a1[1];
  v4 = a1[3];
  v3 = a1[4];
  swift_getTupleTypeMetadata2(255, &type metadata for Int, *a1, 0, 0);
  v5 = type metadata accessor for Array(255);
  v63 = v2;
  v64 = &type metadata for Int;
  v65 = v3;
  v66 = &protocol witness table for Int;
  v7 = type metadata accessor for IDView(255, &v63, v6);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for IDView<A, B>, v7);
  v63 = v7;
  v64 = (void *)WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v63, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 0);
  v61 = v5;
  v62 = swift_getWitnessTable(&protocol conformance descriptor for [A], v5);
  v63 = v5;
  v64 = v1;
  v65 = OpaqueTypeMetadata2;
  v66 = (void *)v62;
  v67 = v4;
  v10 = v4;
  v11 = type metadata accessor for ForEach(255, &v63);
  v63 = v7;
  v64 = (void *)WitnessTable;
  swift_getOpaqueTypeConformance2(&v63, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v12 = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v11);
  v13 = type metadata accessor for LazyHStack(255, v11, v12);
  v14 = sub_100044B54(&qword_1011E2B88);
  v15 = type metadata accessor for ModifiedContent(255, v13, v14);
  v16 = type metadata accessor for ModifiedContent(255, v15, &type metadata for _PaddingLayout);
  v17 = sub_100044B54(&qword_1011E2B90);
  v18 = type metadata accessor for ModifiedContent(255, v16, v17);
  v19 = type metadata accessor for ModifiedContent(255, v18, &type metadata for _AppearanceActionModifier);
  v20 = sub_100044B54(&qword_1011E2B98);
  swift_getWitnessTable(&protocol conformance descriptor for LazyHStack<A>, v13);
  sub_100049F28(&qword_1011E2BA0, &qword_1011E2B88, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v15);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v16);
  sub_100049F28(&qword_1011E2BA8, &qword_1011E2B90, (uint64_t)&protocol conformance descriptor for _PreferenceActionModifier<A>);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v18);
  v21 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v19);
  v22 = sub_100C50BC4();
  v63 = v19;
  v64 = (void *)v20;
  v65 = v21;
  v66 = (void *)v22;
  v23 = swift_getOpaqueTypeMetadata2(255, &v63, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v24 = type metadata accessor for Optional(255, v1);
  v63 = v19;
  v64 = (void *)v20;
  v65 = v21;
  v66 = (void *)v22;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v63, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v26 = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v24);
  v63 = v23;
  v64 = (void *)v24;
  v65 = OpaqueTypeConformance2;
  v66 = (void *)v26;
  v27 = swift_getOpaqueTypeMetadata2(255, &v63, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v63 = v23;
  v64 = (void *)v24;
  v65 = OpaqueTypeConformance2;
  v66 = (void *)v26;
  v28 = swift_getOpaqueTypeConformance2(&v63, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v29 = type metadata accessor for PagingScrollView(255, v27, v28);
  v30 = sub_100044B54(&qword_1011E2BB8);
  v31 = type metadata accessor for ModifiedContent(255, v29, v30);
  swift_getWitnessTable(&protocol conformance descriptor for PagingScrollView<A>, v29);
  sub_100049F28(&qword_1011E2BC0, &qword_1011E2BB8, (uint64_t)&protocol conformance descriptor for _CoordinateSpaceModifier<A>);
  v32 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v31);
  v63 = v31;
  v64 = (void *)v32;
  v33 = swift_getOpaqueTypeMetadata2(255, &v63, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 0);
  v63 = v31;
  v64 = (void *)v32;
  v34 = swift_getOpaqueTypeConformance2(&v63, &opaque type descriptor for <<opaque return type of View.scrollIndicators(_:axes:)>>, 1);
  v63 = v33;
  v64 = (void *)v34;
  v35 = swift_getOpaqueTypeMetadata2(255, &v63, &opaque type descriptor for <<opaque return type of View.scrollClipDisabled(_:)>>, 0);
  v63 = v33;
  v64 = (void *)v34;
  v36 = swift_getOpaqueTypeConformance2(&v63, &opaque type descriptor for <<opaque return type of View.scrollClipDisabled(_:)>>, 1);
  v63 = v35;
  v64 = (void *)v36;
  v37 = swift_getOpaqueTypeMetadata2(255, &v63, &opaque type descriptor for <<opaque return type of View.scrollDisabled(_:)>>, 0);
  v63 = v35;
  v64 = (void *)v36;
  v38 = swift_getOpaqueTypeConformance2(&v63, &opaque type descriptor for <<opaque return type of View.scrollDisabled(_:)>>, 1);
  v39 = type metadata accessor for GeometryReader(255, v37, v38);
  v40 = type metadata accessor for ModifiedContent(255, v39, &type metadata for _FrameLayout);
  swift_getWitnessTable(&protocol conformance descriptor for GeometryReader<A>, v39);
  v41 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v40);
  v42 = type metadata accessor for ScrollViewReader(255, v40, v41);
  v43 = type metadata accessor for ModifiedContent(255, v42, &type metadata for _FrameLayout);
  v44 = sub_100044B54(&qword_1011E2BC8);
  v63 = v61;
  v64 = v1;
  v65 = v44;
  v66 = (void *)v62;
  v67 = v10;
  v45 = type metadata accessor for ForEach(255, &v63);
  v46 = sub_100044B54(&qword_1011E2BD0);
  v47 = sub_100044B54(&qword_1011E2BD8);
  v49 = type metadata accessor for AutomaticHoverEffect(255, v48);
  v50 = sub_100C50C20();
  v51 = sub_100048748(qword_1011E2C58, (uint64_t (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect, (uint64_t)&protocol conformance descriptor for AutomaticHoverEffect);
  v63 = v47;
  v64 = (void *)v49;
  v65 = v50;
  v66 = (void *)v51;
  v52 = swift_getOpaqueTypeConformance2(&v63, &opaque type descriptor for <<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>, 1);
  v63 = v46;
  v64 = (void *)v52;
  swift_getOpaqueTypeConformance2(&v63, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v53 = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v45);
  v54 = type metadata accessor for HStack(255, v45, v53);
  v55 = type metadata accessor for ModifiedContent(255, v54, &type metadata for _FrameLayout);
  v56 = type metadata accessor for Optional(255, v55);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v43, v56, 0, 0);
  v58 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v58);
  v59 = type metadata accessor for VStack(255, v58);
  return swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v59);
}

ValueMetadata *type metadata accessor for ScrollViewOffsetKey()
{
  return &type metadata for ScrollViewOffsetKey;
}

void sub_100C53E0C()
{
  qword_1011E2B78 = 0;
}

double sub_100C53E18@<D0>(_QWORD *a1@<X8>)
{
  double result;

  if (qword_1011DE148 != -1)
    swift_once(&qword_1011DE148, sub_100C53E0C);
  result = *(double *)&qword_1011E2B78;
  *a1 = qword_1011E2B78;
  return result;
}

double sub_100C53E68(double *a1, void (*a2)(double *__return_ptr))
{
  double result;
  double v4;

  a2(&v4);
  result = v4 + *a1;
  *a1 = result;
  return result;
}

double sub_100C53EAC@<D0>(char *a1@<X0>, uint64_t *a2@<X8>)
{
  _QWORD *v2;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD v12[5];

  v6 = (void *)v2[3];
  v7 = v2[4];
  v8 = (_QWORD *)v2[5];
  v9 = (_QWORD *)v2[6];
  v12[0] = v2[2];
  v5 = v12[0];
  v12[1] = v6;
  v12[2] = v7;
  v12[3] = v8;
  v12[4] = v9;
  v10 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CarouselView(0, (uint64_t)v12) - 8) + 80);
  return sub_100C4C15C(a1, (uint64_t)v2 + ((v10 + 56) & ~v10), v5, v6, v7, v8, v9, a2);
}

uint64_t sub_100C53F40()
{
  return sub_1004D9A80((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100C4F890);
}

double sub_100C53F4C()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  id v4;

  v0 = (void *)objc_opt_self(UITraitCollection);
  v1 = objc_msgSend(v0, "currentTraitCollection");
  v2 = objc_msgSend(v1, "userInterfaceIdiom");

  if (v2 == (id)6)
    v3 = 10;
  else
    v3 = 8;
  v4 = objc_msgSend(v0, "currentTraitCollection");
  objc_msgSend(v4, "userInterfaceIdiom");

  return (double)v3;
}

unint64_t sub_100C54000()
{
  unint64_t result;

  result = qword_1011E2D00;
  if (!qword_1011E2D00)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Int, &type metadata for Int);
    atomic_store(result, (unint64_t *)&qword_1011E2D00);
  }
  return result;
}

uint64_t sub_100C54048(uint64_t a1, uint64_t a2)
{
  return sub_100C548A4(a1, a2, (uint64_t (*)(uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_100C4FD70);
}

uint64_t sub_100C54060()
{
  uint64_t v0;

  return sub_100C508B0(*(_QWORD **)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_100C54098@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  _QWORD *v2;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[5];

  v6 = v2[3];
  v7 = v2[4];
  v8 = (_QWORD *)v2[5];
  v9 = v2[6];
  v15[0] = v2[2];
  v5 = (void *)v15[0];
  v15[1] = v6;
  v15[2] = v7;
  v15[3] = v8;
  v15[4] = v9;
  v10 = *(_QWORD *)(type metadata accessor for CarouselView(0, (uint64_t)v15) - 8);
  v11 = (*(unsigned __int8 *)(v10 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v12 = *(_QWORD *)(v10 + 64);
  v13 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ScrollViewProxy(0) - 8) + 80);
  return sub_100C4C88C(a1, (_QWORD *)((char *)v2 + v11), (uint64_t)v2 + ((v11 + v12 + v13) & ~v13), v5, v6, v7, v8, v9, a2);
}

uint64_t sub_100C54158@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_100C4D244(*(_QWORD **)(v1 + 56), *(void (**)(char *, char *, uint64_t))(v1 + 72), *(double (**)@<D0>(uint64_t@<X8>))(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD **)(v1 + 40), *(_QWORD *)(v1 + 48), a1, *(double *)(v1 + 64));
}

uint64_t sub_100C54170()
{
  return sub_1004D9A80((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100C4E118);
}

uint64_t sub_100C54180(double *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[5];

  v4 = v1[3];
  v5 = v1[4];
  v6 = v1[5];
  v7 = v1[6];
  v10[0] = v1[2];
  v3 = v10[0];
  v10[1] = v4;
  v10[2] = v5;
  v10[3] = v6;
  v10[4] = v7;
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CarouselView(0, (uint64_t)v10) - 8) + 80);
  return sub_100C4EAFC(a1, (_QWORD *)((char *)v1 + ((v8 + 56) & ~v8)), v3, v4, v5, v6, v7);
}

unint64_t sub_100C5420C()
{
  unint64_t result;

  result = qword_1011E2D40;
  if (!qword_1011E2D40)
  {
    result = swift_getWitnessTable(&unk_100EF0134, &type metadata for ScrollViewOffsetKey);
    atomic_store(result, (unint64_t *)&qword_1011E2D40);
  }
  return result;
}

unint64_t sub_100C54250()
{
  unint64_t result;

  result = qword_1011E2D48;
  if (!qword_1011E2D48)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CGFloat, &type metadata for CGFloat);
    atomic_store(result, (unint64_t *)&qword_1011E2D48);
  }
  return result;
}

uint64_t sub_100C54298()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  int *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  __int128 v25;
  _OWORD v26[2];
  uint64_t v27;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_OWORD *)(v0 + 32);
  v25 = *(_OWORD *)(v0 + 16);
  v26[0] = v25;
  v26[1] = v2;
  v27 = v1;
  v3 = (int *)type metadata accessor for CarouselView(0, (uint64_t)v26);
  v4 = *((_QWORD *)v3 - 1);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v23 = *(_QWORD *)(v4 + 64);
  v6 = type metadata accessor for ScrollViewProxy(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v22 = *(_QWORD *)(v7 + 64);
  v24 = v5;
  v9 = v0 + v5;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + v5 + 16))
  {
    swift_release();
    swift_release();
  }
  v10 = v9 + v3[16];
  v11 = type metadata accessor for Binding(0, v25);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
  {
    swift_release();
    v12 = swift_release();
    (*(void (**)(uint64_t, _QWORD, __n128))(*(_QWORD *)(v25 - 8) + 8))(v10 + *(int *)(v11 + 32), v25, v12);
  }
  swift_release();
  if (*(_QWORD *)(v9 + v3[22]))
    swift_release();
  v13 = swift_release();
  v14 = v9 + v3[24];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v7 + 48))(v14, 1, v6, v13))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v14, v6);
  sub_100007E8C(&qword_1011E2CF0);
  swift_release();
  v15 = v9 + v3[26];
  v16 = sub_100007E8C((uint64_t *)&unk_1011DE420);
  if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
  {
    v17 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v15, v17);
  }
  else
  {
    v18 = swift_release();
  }
  v19 = (v24 + v23 + v8) & ~v8;
  v20 = v19 + v22;
  (*(void (**)(unint64_t, uint64_t, __n128))(v7 + 8))(v0 + v19, v6, v18);
  return swift_deallocObject(v0, v20);
}

uint64_t sub_100C544CC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[5];

  v2 = v0[3];
  v3 = v0[4];
  v4 = v0[5];
  v5 = v0[6];
  v11[0] = v0[2];
  v1 = v11[0];
  v11[1] = v2;
  v11[2] = v3;
  v11[3] = v4;
  v11[4] = v5;
  v6 = *(_QWORD *)(type metadata accessor for CarouselView(0, (uint64_t)v11) - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ScrollViewProxy(0) - 8) + 80);
  return sub_100C4EFBC((_QWORD *)((char *)v0 + v7), (uint64_t)v0 + ((v7 + v8 + v9) & ~v9), v1, v2, v3, v4, v5);
}

double sub_100C54578(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[5];

  v6 = v2[3];
  v7 = v2[4];
  v8 = v2[5];
  v9 = v2[6];
  v12[0] = v2[2];
  v5 = v12[0];
  v12[1] = v6;
  v12[2] = v7;
  v12[3] = v8;
  v12[4] = v9;
  v10 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CarouselView(0, (uint64_t)v12) - 8) + 80);
  return sub_100C4F614(a1, a2, (uint64_t)v2 + ((v10 + 56) & ~v10), v5, v6, v7, v8, v9);
}

uint64_t sub_100C54610(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[5];

  v6 = v2[3];
  v7 = v2[4];
  v8 = v2[5];
  v9 = v2[6];
  v12[0] = v2[2];
  v5 = v12[0];
  v12[1] = v6;
  v12[2] = v7;
  v12[3] = v8;
  v12[4] = v9;
  v10 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CarouselView(0, (uint64_t)v12) - 8) + 80);
  return sub_100C4F6B0(a1, a2, (_QWORD *)((char *)v2 + ((v10 + 56) & ~v10)), v5, v6, v7, v8, v9);
}

uint64_t sub_100C546A8()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  int *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v18;
  _OWORD v19[2];
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_OWORD *)(v0 + 32);
  v18 = *(_OWORD *)(v0 + 16);
  v19[0] = v18;
  v19[1] = v2;
  v20 = v1;
  v3 = (int *)type metadata accessor for CarouselView(0, (uint64_t)v19);
  v4 = *((_QWORD *)v3 - 1);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = v0 + v5;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + v5 + 16))
  {
    swift_release();
    swift_release();
  }
  v8 = v7 + v3[16];
  v9 = type metadata accessor for Binding(0, v18);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    swift_release();
    v10 = swift_release();
    (*(void (**)(uint64_t, _QWORD, __n128))(*(_QWORD *)(v18 - 8) + 8))(v8 + *(int *)(v9 + 32), v18, v10);
  }
  swift_release();
  if (*(_QWORD *)(v7 + v3[22]))
    swift_release();
  swift_release();
  v11 = v7 + v3[24];
  v12 = type metadata accessor for ScrollViewProxy(0);
  v13 = *(_QWORD *)(v12 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  sub_100007E8C(&qword_1011E2CF0);
  swift_release();
  v14 = v7 + v3[26];
  v15 = sub_100007E8C((uint64_t *)&unk_1011DE420);
  if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
  {
    v16 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v14, v16);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject(v0, v5 + v6);
}

uint64_t sub_100C54898(uint64_t a1, uint64_t a2)
{
  return sub_100C548A4(a1, a2, (uint64_t (*)(uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_100C4E5F8);
}

uint64_t sub_100C548A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v14[5];

  v7 = *((_QWORD *)v3 + 3);
  v8 = *((_QWORD *)v3 + 4);
  v9 = *((_QWORD *)v3 + 5);
  v10 = *((_QWORD *)v3 + 6);
  v14[0] = *((_QWORD *)v3 + 2);
  v6 = v14[0];
  v14[1] = v7;
  v14[2] = v8;
  v14[3] = v9;
  v14[4] = v10;
  v11 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CarouselView(0, (uint64_t)v14) - 8) + 80);
  return a3(a1, a2, &v3[(v11 + 56) & ~v11], v6, v7, v8, v9, v10);
}

uint64_t sub_100C5494C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 64));
  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_100C54970(char *a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, char *);
  uint64_t v4;
  uint64_t TupleTypeMetadata2;

  v3 = *(uint64_t (**)(uint64_t, char *))(v1 + 56);
  v4 = *(_QWORD *)a1;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, &type metadata for Int, *(_QWORD *)(v1 + 16), 0, 0);
  return v3(v4, &a1[*(int *)(TupleTypeMetadata2 + 48)]);
}

uint64_t sub_100C549DC()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  int *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v18;
  _OWORD v19[2];
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_OWORD *)(v0 + 32);
  v18 = *(_OWORD *)(v0 + 16);
  v19[0] = v18;
  v19[1] = v2;
  v20 = v1;
  v3 = (int *)type metadata accessor for CarouselView(0, (uint64_t)v19);
  v4 = *((_QWORD *)v3 - 1);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = v0 + v5;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + v5 + 16))
  {
    swift_release();
    swift_release();
  }
  v8 = v7 + v3[16];
  v9 = type metadata accessor for Binding(0, v18);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    swift_release();
    v10 = swift_release();
    (*(void (**)(uint64_t, _QWORD, __n128))(*(_QWORD *)(v18 - 8) + 8))(v8 + *(int *)(v9 + 32), v18, v10);
  }
  swift_release();
  if (*(_QWORD *)(v7 + v3[22]))
    swift_release();
  swift_release();
  v11 = v7 + v3[24];
  v12 = type metadata accessor for ScrollViewProxy(0);
  v13 = *(_QWORD *)(v12 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  sub_100007E8C(&qword_1011E2CF0);
  swift_release();
  v14 = v7 + v3[26];
  v15 = sub_100007E8C((uint64_t *)&unk_1011DE420);
  if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
  {
    v16 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v14, v16);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject(v0, ((v6 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
}

double sub_100C54BD8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = v0[3];
  v3 = v0[4];
  v4 = v0[5];
  v5 = v0[6];
  v10 = v0[2];
  v1 = v10;
  v11 = v2;
  v12 = v3;
  v13 = v4;
  v14 = v5;
  v6 = type metadata accessor for CarouselView(0, (uint64_t)&v10);
  v7 = *(_QWORD *)((char *)v0
                 + ((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64)
                   + ((*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80))
                   + 7) & 0xFFFFFFFFFFFFF8));
  v10 = v1;
  v11 = v2;
  v12 = v3;
  v13 = v4;
  v14 = v5;
  v8 = type metadata accessor for CarouselView(0, (uint64_t)&v10);
  return sub_100C4E91C(v7, 1, v8);
}

char *CircularProgressView.__allocating_init(size:)(double a1, double a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return CircularProgressView.init(size:)(a1, a2);
}

void CircularProgressView.setState(_:animated:)(uint64_t a1, int a2, char a3, double a4)
{
  _BYTE *v4;
  double v6;
  __int16 v7;
  char *v8;
  void *v9;
  double v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  double v20;
  __int16 v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  NSNumber v31;
  uint64_t v32;
  Class isa;

  v6 = *(double *)&a1;
  LOBYTE(v7) = a2;
  v8 = &v4[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state];
  if ((a2 & 0x10000) != 0)
  {
    if ((v4[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state + 10] & 1) != 0)
      return;
    *(double *)v8 = *(double *)&a1;
    *((_WORD *)v8 + 4) = a2;
    v8[10] = 1;
    if ((a3 & 1) != 0)
    {
      v9 = *(void **)&v4[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_progressLayer];
      goto LABEL_12;
    }
LABEL_11:
    v16 = (void *)objc_opt_self(CATransaction);
    objc_msgSend(v16, "begin");
    objc_msgSend(v16, "setDisableActions:", 1);
    v9 = *(void **)&v4[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_progressLayer];
    if ((v8[10] & 1) == 0)
    {
      v6 = *(double *)v8;
      v7 = *((_WORD *)v8 + 4);
      if ((v7 & 0x100) == 0)
        goto LABEL_5;
      goto LABEL_21;
    }
LABEL_12:
    objc_msgSend(v9, "setLineDashPattern:", 0);
    v17 = *(_QWORD *)&v4[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_spinAnimator];
    if (!v17)
      goto LABEL_33;
    v18 = swift_allocObject(&unk_10110B290, 24, 7);
    *(_QWORD *)(v18 + 16) = v4;
    v19 = v4;
    swift_retain(v17);
    sub_100C568C4((uint64_t)sub_100C55E6C, v18, 0.0);
    swift_release(v17);
    goto LABEL_31;
  }
  if ((v4[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state + 10] & 1) != 0)
  {
LABEL_3:
    *(double *)v8 = *(double *)&a1;
    *((_WORD *)v8 + 4) = a2;
    v8[10] = 0;
    if ((a3 & 1) != 0)
    {
      v9 = *(void **)&v4[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_progressLayer];
      if ((a2 & 0x100) == 0)
      {
LABEL_5:
        objc_msgSend(v9, "setLineDashPattern:", 0);
        LODWORD(v10) = 1.0;
        objc_msgSend(v9, "setOpacity:", v10);
        if ((v7 & 1) == 0)
        {
          v11 = v6;
          v12 = *(_QWORD *)&v4[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_spinAnimator];
          if (v12)
          {
            v13 = swift_allocObject(&unk_10110B2E0, 24, 7);
            *(_QWORD *)(v13 + 16) = v4;
            swift_retain(v12);
            v14 = v4;
            sub_100C568C4((uint64_t)sub_100C5740C, v13, v11);
            swift_release(v12);
            v15 = v13;
LABEL_32:
            swift_release(v15);
            goto LABEL_33;
          }
          objc_msgSend(v9, "setStrokeEnd:", v11);
LABEL_33:
          if ((a3 & 1) == 0)
            objc_msgSend((id)objc_opt_self(CATransaction), "commit");
          return;
        }
        v22 = OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_spinAnimator;
        v18 = *(_QWORD *)&v4[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_spinAnimator];
        if (!v18)
        {
          v23 = type metadata accessor for CircularProgressView.SpinAnimator();
          v18 = swift_allocObject(v23, 41, 7);
          *(_BYTE *)(v18 + 40) = 0;
          *(_QWORD *)(v18 + 16) = 0xD000000000000010;
          *(_QWORD *)(v18 + 24) = 0x8000000100E56440;
          *(_QWORD *)(v18 + 32) = v9;
          v24 = v9;
        }
        *(_QWORD *)&v4[v22] = v18;
        if (!v18)
          goto LABEL_33;
        swift_retain(v18);
        sub_100C56580();
LABEL_31:
        v15 = v18;
        goto LABEL_32;
      }
LABEL_21:
      if (*(_QWORD *)&v6 | v7)
      {
        LODWORD(a4) = 0;
        objc_msgSend(v9, "setOpacity:", a4);
        goto LABEL_33;
      }
      v25 = *(_QWORD *)&v4[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_spinAnimator];
      if (v25)
      {
        v26 = swift_allocObject(&unk_10110B2B8, 32, 7);
        *(_QWORD *)(v26 + 16) = v4;
        *(_QWORD *)(v26 + 24) = v9;
        v27 = v4;
        v28 = v9;
        swift_retain(v25);
        sub_100C568C4((uint64_t)sub_100C56DF4, v26, 1.0);
        swift_release(v25);
        v15 = v26;
        goto LABEL_32;
      }
      objc_msgSend(v9, "setStrokeEnd:", 1.0);
      v29 = sub_100007E8C(&qword_1011DF520);
      v30 = swift_allocObject(v29, 40, 7);
      *(_OWORD *)(v30 + 16) = xmmword_100EA7A90;
      sub_10004A07C(0, &qword_1011DF128, NSNumber_ptr);
      v31.super.super.isa = NSNumber.init(integerLiteral:)(4).super.super.isa;
      *(NSNumber *)(v30 + 32) = v31;
      specialized Array._endMutation()(v31.super.super.isa);
      v32 = v30;
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v9, "setLineDashPattern:", isa, swift_bridgeObjectRelease(v32).n128_f64[0]);

      goto LABEL_33;
    }
    goto LABEL_11;
  }
  v20 = *(double *)v8;
  v21 = *((_WORD *)v8 + 4);
  if ((a2 & 0x100) != 0)
  {
    if (a1 | a2)
    {
      if ((*((_WORD *)v8 + 4) & 0x100) == 0 || !(*(_QWORD *)&v20 | *((_WORD *)v8 + 4)))
        goto LABEL_3;
    }
    else if ((*((_WORD *)v8 + 4) & 0x100) == 0 || *(_QWORD *)&v20 | *((_WORD *)v8 + 4))
    {
      goto LABEL_3;
    }
  }
  else
  {
    if ((*((_WORD *)v8 + 4) & 0x100) != 0)
      goto LABEL_3;
    if ((a2 & 1) != 0)
    {
      if ((v21 & 1) != 0)
        return;
      goto LABEL_3;
    }
    if ((v21 & 1) != 0)
      goto LABEL_3;
    HIDWORD(a4) = HIDWORD(a1);
    if (*(double *)&a1 != v20)
      goto LABEL_3;
  }
}

uint64_t static CircularProgressView.State.__derived_enum_equals(_:_:)(uint64_t a1, __int16 a2, uint64_t a3, __int16 a4)
{
  _BOOL4 v5;
  _BOOL4 v6;

  if ((a2 & 0x100) != 0)
  {
    v5 = (a3 | a4) == 0;
    if ((a4 & 0x100) != 0)
    {
      v6 = (a3 | a4) != 0;
    }
    else
    {
      v5 = 0;
      v6 = 0;
    }
    if (a1 | a2)
      return v6;
    else
      return v5;
  }
  else
  {
    if ((a4 & 0x100) == 0)
    {
      if ((a2 & 1) != 0)
      {
        if ((a4 & 1) != 0)
          return 1;
      }
      else if ((a4 & 1) == 0 && *(double *)&a1 == *(double *)&a3)
      {
        return 1;
      }
    }
    return 0;
  }
}

BOOL sub_100C55194(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;
  double v4;
  uint64_t v5;

  v2 = *(double *)a1;
  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = *(double *)a2;
  v5 = *(unsigned __int8 *)(a2 + 8);
  if (*(_BYTE *)(a1 + 9) == 1)
  {
    if (*(_QWORD *)&v2 | v3)
    {
      if (*(_BYTE *)(a2 + 9))
        return (*(_QWORD *)&v4 | v5) != 0;
    }
    else if (*(_BYTE *)(a2 + 9))
    {
      return (*(_QWORD *)&v4 | v5) == 0;
    }
    return 0;
  }
  if ((*(_BYTE *)(a2 + 9) & 1) != 0)
    return 0;
  if ((v3 & 1) != 0)
    return (v5 & 1) != 0;
  return (v5 & 1) == 0 && v2 == v4;
}

char *CircularProgressView.init(size:)(double a1, double a2)
{
  char *v2;
  objc_class *ObjectType;
  char *v6;
  uint64_t v7;
  id v8;
  char *v9;
  uint64_t v10;
  double *v11;
  char *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  char *v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  objc_super v30;

  ObjectType = (objc_class *)swift_getObjectType();
  v6 = &v2[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state];
  *(_QWORD *)v6 = 0;
  *((_WORD *)v6 + 4) = 0;
  v6[10] = 1;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_image] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageView] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageScale] = 0x3FE0000000000000;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_spinAnimator] = 0;
  v7 = OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_progressLayer;
  v8 = objc_allocWithZone((Class)CAShapeLayer);
  v9 = v2;
  *(_QWORD *)&v2[v7] = objc_msgSend(v8, "init");
  v10 = OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_trackLayer;
  *(_QWORD *)&v9[v10] = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
  v11 = (double *)&v9[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_preferredSize];
  *v11 = a1;
  v11[1] = a2;

  v30.receiver = v9;
  v30.super_class = ObjectType;
  v12 = (char *)objc_msgSendSuper2(&v30, "initWithFrame:", 0.0, 0.0, a1, a2);
  v13 = OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_trackLayer;
  v14 = *(void **)&v12[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_trackLayer];
  v15 = (void *)objc_opt_self(UIColor);
  v16 = v12;
  v17 = v14;
  v18 = objc_msgSend(v15, "clearColor");
  v19 = objc_msgSend(v18, "CGColor");

  objc_msgSend(v17, "setFillColor:", v19);
  v20 = *(void **)&v12[v13];
  objc_msgSend(v20, "setLineWidth:", 2.5);
  v21 = objc_msgSend(v16, "layer");
  objc_msgSend(v21, "addSublayer:", v20);

  v22 = OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_progressLayer;
  v23 = *(void **)&v16[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_progressLayer];
  objc_msgSend(v23, "setLineCap:", kCALineCapRound);
  objc_msgSend(v23, "setStrokeEnd:", 0.0);
  v24 = v23;
  v25 = objc_msgSend(v15, "clearColor");
  v26 = objc_msgSend(v25, "CGColor");

  objc_msgSend(v24, "setFillColor:", v26);
  v27 = *(void **)&v16[v22];
  objc_msgSend(v27, "setLineWidth:", 2.5);
  objc_msgSend(v27, "setLineDashPhase:", 6.0);
  v28 = objc_msgSend(v16, "layer");
  objc_msgSend(v28, "addSublayer:", v27);

  sub_100C55500();
  return v16;
}

void sub_100C55500()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v1 = *(void **)&v0[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_trackLayer];
  v2 = objc_msgSend((id)objc_opt_self(UIColor), "tertiarySystemFillColor");
  v3 = objc_msgSend(v2, "CGColor");

  objc_msgSend(v1, "setStrokeColor:", v3);
  v4 = *(void **)&v0[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_progressLayer];
  v5 = objc_msgSend(v0, "tintColor");
  if (v5)
  {
    v6 = v5;
    v7 = objc_msgSend(v5, "CGColor");

    objc_msgSend(v4, "setStrokeColor:", v7);
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall CircularProgressView.tintColorDidChange()()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v1, "tintColorDidChange");
  sub_100C55500();
}

Swift::Void __swiftcall CircularProgressView.layoutSubviews()()
{
  char *v0;
  double x;
  double y;
  double width;
  double height;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  CGFloat v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  double v20;
  double v21;
  double *v22;
  id v23;
  _BYTE v24[24];
  objc_super v25;
  CGRect v26;
  CGRect v27;
  CGRect v28;
  CGRect v29;
  CGRect v30;
  CGRect v31;

  v25.receiver = v0;
  v25.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v25, "layoutSubviews");
  objc_msgSend(v0, "bounds");
  x = v26.origin.x;
  y = v26.origin.y;
  width = v26.size.width;
  height = v26.size.height;
  v5 = CGRectGetWidth(v26);
  v27.origin.x = x;
  v27.origin.y = y;
  v27.size.width = width;
  v27.size.height = height;
  v6 = CGRectGetHeight(v27);
  if (v6 >= v5)
    v6 = v5;
  v7 = (v6 + -2.5) * 0.5;
  v8 = CGRect.center.getter(x, y, width, height);
  v10 = objc_msgSend((id)objc_opt_self(UIBezierPath), "bezierPathWithArcCenter:radius:startAngle:endAngle:clockwise:", 1, v8, v9, v7, -1.57079633, 4.71238898);
  v11 = *(void **)&v0[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_trackLayer];
  v12 = objc_msgSend(v10, "CGPath");
  objc_msgSend(v11, "setPath:", v12);

  v13 = *(void **)&v0[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_progressLayer];
  v14 = objc_msgSend(v10, "CGPath");
  objc_msgSend(v13, "setPath:", v14);

  objc_msgSend(v13, "setBounds:", x, y, width, height);
  v28.origin.x = x;
  v28.origin.y = y;
  v28.size.width = width;
  v28.size.height = height;
  v15 = CGRectGetWidth(v28) * 0.5;
  v29.origin.x = x;
  v29.origin.y = y;
  v29.size.width = width;
  v29.size.height = height;
  objc_msgSend(v13, "setPosition:", v15, CGRectGetHeight(v29) * 0.5);
  v16 = OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageView;
  v17 = *(void **)&v0[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageView];
  if (v17)
  {
    objc_msgSend(v17, "setFrame:", x, y, width, height);
    v18 = *(void **)&v0[v16];
    if (v18)
    {
      v19 = v18;
      objc_msgSend(v19, "frame");
      v20 = CGRectGetWidth(v30);
      objc_msgSend(v19, "frame");
      v21 = CGRectGetHeight(v31);
      if (v21 < v20)
        v20 = v21;
      v22 = (double *)&v0[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageScale];
      swift_beginAccess(v22, v24, 0, 0);
      v23 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:", v20 * *v22);
      objc_msgSend(v19, "setPreferredSymbolConfiguration:", v23);

      v10 = v23;
    }
  }

}

double CircularProgressView.sizeThatFits(_:)()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_preferredSize;
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_preferredSize, v3, 0, 0);
  return *(double *)v1;
}

void CircularProgressView.preferredSize.setter(double a1, double a2)
{
  char *v2;
  double *v5;
  double v6;
  double v7;
  _BYTE v9[24];

  v5 = (double *)&v2[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_preferredSize];
  swift_beginAccess(&v2[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_preferredSize], v9, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  if (v6 != a1 || v7 != a2)
    objc_msgSend(v2, "invalidateIntrinsicContentSize");
}

void (*CircularProgressView.preferredSize.modify(_QWORD *a1))(id **a1)
{
  uint64_t v1;
  char *v3;
  uint64_t v4;
  _OWORD *v5;

  v3 = (char *)malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_preferredSize;
  *((_QWORD *)v3 + 5) = v1;
  *((_QWORD *)v3 + 6) = v4;
  v5 = (_OWORD *)(v1 + v4);
  swift_beginAccess(v1 + v4, v3, 1, 0);
  *(_OWORD *)(v3 + 24) = *v5;
  return sub_100C55B5C;
}

void sub_100C55B5C(id **a1)
{
  id *v1;
  double v2;
  double *v3;
  double v4;
  double v5;
  double v6;

  v1 = *a1;
  v2 = *((double *)*a1 + 3);
  v3 = (double *)((char *)(*a1)[6] + (_QWORD)(*a1)[5]);
  v4 = *((double *)*a1 + 4);
  v5 = *v3;
  v6 = v3[1];
  *v3 = v2;
  v3[1] = v4;
  if (v2 != v5 || v4 != v6)
    objc_msgSend(v1[5], "invalidateIntrinsicContentSize");
  free(v1);
}

uint64_t CircularProgressView.state.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state);
}

void CircularProgressView.state.setter(uint64_t a1, int a2, double a3)
{
  CircularProgressView.setState(_:animated:)(a1, a2 & 0x1FFFF, 0, a3);
}

void (*CircularProgressView.state.modify(uint64_t a1))(uint64_t a1, double a2)
{
  uint64_t v1;
  __int16 v2;
  char v3;

  *(_QWORD *)(a1 + 16) = v1;
  v2 = *(_WORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state + 8);
  v3 = *(_BYTE *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state + 10);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state);
  *(_WORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 10) = v3;
  return sub_100C55C28;
}

void sub_100C55C28(uint64_t a1, double a2)
{
  CircularProgressView.setState(_:animated:)(*(_QWORD *)a1, *(unsigned __int16 *)(a1 + 8) | (*(unsigned __int8 *)(a1 + 10) << 16), 0, a2);
}

double sub_100C55C68(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  NSNumber v9;
  uint64_t v10;
  Class isa;
  uint64_t v12;
  double result;
  double v14;
  __int16 v15;

  v5 = *(_QWORD *)(a2 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_spinAnimator);
  if (v5)
    v6 = v5 == a1;
  else
    v6 = 0;
  if (v6)
  {
    *(_QWORD *)(a2 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_spinAnimator) = 0;
    swift_release(a1);
  }
  v7 = sub_100007E8C(&qword_1011DF520);
  v8 = swift_allocObject(v7, 40, 7);
  *(_OWORD *)(v8 + 16) = xmmword_100EA7A90;
  sub_10004A07C(0, &qword_1011DF128, NSNumber_ptr);
  v9.super.super.isa = NSNumber.init(integerLiteral:)(4).super.super.isa;
  *(NSNumber *)(v8 + 32) = v9;
  specialized Array._endMutation()(v9.super.super.isa);
  v10 = v8;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(a3, "setLineDashPattern:", isa, swift_bridgeObjectRelease(v10).n128_f64[0]);

  v12 = a2 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state;
  result = 0.0;
  if ((*(_BYTE *)(a2 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state + 10) & 1) == 0)
  {
    v14 = *(double *)v12;
    v15 = *(_WORD *)(v12 + 8);
    if ((v15 & 0x100) != 0)
    {
      if (!(*(_QWORD *)&v14 | v15))
        return 1.0;
    }
    else
    {
      result = v14;
      if ((v15 & 1) != 0)
        return 0.6;
    }
  }
  return result;
}

double sub_100C55DB0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  double result;
  double v7;
  __int16 v8;

  v3 = *(_QWORD *)(a2 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_spinAnimator);
  if (v3)
    v4 = v3 == a1;
  else
    v4 = 0;
  if (v4)
  {
    *(_QWORD *)(a2 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_spinAnimator) = 0;
    swift_release(a1);
  }
  v5 = a2 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state;
  result = 0.0;
  if ((*(_BYTE *)(a2 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state + 10) & 1) == 0)
  {
    v7 = *(double *)v5;
    v8 = *(_WORD *)(v5 + 8);
    if ((v8 & 0x100) != 0)
    {
      if (!(*(_QWORD *)&v7 | v8))
        return 1.0;
    }
    else
    {
      result = v7;
      if ((v8 & 1) != 0)
        return 0.6;
    }
  }
  return result;
}

uint64_t sub_100C55E48()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

double sub_100C55E6C(uint64_t a1)
{
  uint64_t v1;

  return sub_100C55DB0(a1, *(_QWORD *)(v1 + 16));
}

void sub_100C55E84()
{
  uint64_t v0;
  void **v1;
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  double Width;
  double Height;
  double *v15;
  id v16;
  void *v17;
  uint64_t v18;
  _BYTE v19[24];
  CGRect v20;
  CGRect v21;

  v1 = (void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_image);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_image, v19, 0, 0);
  v2 = *v1;
  if (v2)
  {
    v3 = OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageView;
    v4 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageView);
    if (v4)
    {
      v5 = v2;
      v6 = v4;
    }
    else
    {
      v8 = objc_allocWithZone((Class)UIImageView);
      v9 = v2;
      v6 = objc_msgSend(v8, "init");
    }
    v10 = v4;
    objc_msgSend(v6, "setImage:", v2);
    v11 = *(void **)(v0 + v3);
    if (v11)
    {
      v12 = v11;
      objc_msgSend(v12, "frame");
      Width = CGRectGetWidth(v20);
      objc_msgSend(v12, "frame");
      Height = CGRectGetHeight(v21);
      if (Height < Width)
        Width = Height;
      v15 = (double *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageScale);
      swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageScale, &v18, 0, 0);
      v16 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:", Width * *v15);
      objc_msgSend(v12, "setPreferredSymbolConfiguration:", v16);

      v17 = *(void **)(v0 + v3);
    }
    else
    {
      v17 = 0;
    }
    *(_QWORD *)(v0 + v3) = v6;
    v7 = v6;
    sub_100C56164(v17);

  }
  else
  {
    v7 = *(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageView);
    *(_QWORD *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageView) = 0;
    sub_100C56164(v7);
  }

}

void *CircularProgressView.image.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_image);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_image, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void CircularProgressView.image.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  id v5;
  _BYTE v6[24];

  v3 = (void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_image);
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_image, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  v5 = a1;

  sub_100C55E84();
}

void (*CircularProgressView.image.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_image, a1, 33, 0);
  return sub_100C56134;
}

void sub_100C56134(uint64_t a1, char a2)
{
  swift_endAccess(a1);
  if ((a2 & 1) == 0)
    sub_100C55E84();
}

void sub_100C56164(void *a1)
{
  char *v1;
  char *v2;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  char v7;
  id v8;
  id v9;
  void *v10;
  char *v11;
  id v12;
  id v13;

  v2 = v1;
  v3 = a1;
  v4 = OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageView;
  v5 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageView];
  if (v5)
  {
    if (!a1)
    {
LABEL_10:
      v13 = v5;
      objc_msgSend(v13, "setContentMode:", 4);
      objc_msgSend(v2, "addSubview:", v13);

      return;
    }
    sub_10004A07C(0, (unint64_t *)&unk_1011E2F48, UIImageView_ptr);
    v6 = v5;
    v3 = v3;
    v7 = static NSObject.== infix(_:_:)(v6, v3);

    if ((v7 & 1) != 0)
      return;
  }
  else if (!a1)
  {
    return;
  }
  v8 = v3;
  v9 = objc_msgSend(v8, "superview");
  if (v9)
  {
    v10 = v9;
    sub_10004A07C(0, (unint64_t *)&qword_1011E2F40, UIView_ptr);
    v11 = v2;
    v12 = v10;
    LOBYTE(v10) = static NSObject.== infix(_:_:)(v12, v11);

    if ((v10 & 1) != 0)
      objc_msgSend(v8, "removeFromSuperview");
  }

  v5 = *(void **)&v2[v4];
  if (v5)
    goto LABEL_10;
}

double CircularProgressView.imageScale.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageScale;
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageScale, v3, 0, 0);
  return *(double *)v1;
}

void CircularProgressView.imageScale.setter(double a1)
{
  uint64_t v1;
  double *v3;
  double v4;
  void *v5;
  id v6;
  double Width;
  double Height;
  id v9;
  _BYTE v10[24];
  CGRect v11;
  CGRect v12;

  v3 = (double *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageScale);
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageScale, v10, 1, 0);
  v4 = *v3;
  *v3 = a1;
  if (v4 != a1)
  {
    v5 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageView);
    if (v5)
    {
      v6 = v5;
      objc_msgSend(v6, "frame");
      Width = CGRectGetWidth(v11);
      objc_msgSend(v6, "frame");
      Height = CGRectGetHeight(v12);
      if (Height >= Width)
        Height = Width;
      v9 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:", *v3 * Height);
      objc_msgSend(v6, "setPreferredSymbolConfiguration:", v9);

    }
  }
}

void (*CircularProgressView.imageScale.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageScale;
  v3[4] = v1;
  v3[5] = v4;
  v5 = (_QWORD *)(v1 + v4);
  swift_beginAccess(v1 + v4, v3, 1, 0);
  v3[3] = *v5;
  return sub_100C56484;
}

void sub_100C56484(uint64_t a1, char a2)
{
  _QWORD *v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  double Width;
  double Height;
  id v13;
  CGRect v14;
  CGRect v15;

  v2 = *(_QWORD **)a1;
  v3 = *(double *)(*(_QWORD *)a1 + 24);
  if ((a2 & 1) != 0)
  {
    CircularProgressView.imageScale.setter(v3);
  }
  else
  {
    v5 = v2[4];
    v4 = v2[5];
    v6 = *(double *)(v5 + v4);
    *(double *)(v5 + v4) = v3;
    if (v3 != v6)
    {
      v7 = v2[4];
      v8 = *(void **)(v7 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageView);
      if (v8)
      {
        v9 = v2[5];
        v10 = v8;
        objc_msgSend(v10, "frame");
        Width = CGRectGetWidth(v14);
        objc_msgSend(v10, "frame");
        Height = CGRectGetHeight(v15);
        if (Height >= Width)
          Height = Width;
        v13 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:", *(double *)(v7 + v9) * Height);
        objc_msgSend(v10, "setPreferredSymbolConfiguration:", v13);

      }
    }
  }
  free(v2);
}

void sub_100C56580()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  NSString v4;
  Swift::String v5;
  NSString v6;
  NSString v7;
  id v8;
  id v9;
  NSString v10;
  id v11;
  Class isa;
  Class v13;
  double v14;
  CFTimeInterval v15;
  id v16;
  long double v17;
  NSString v18;
  uint64_t v19;
  _OWORD v20[2];
  _QWORD v21[4];

  *(_BYTE *)(v0 + 40) = 0;
  v2 = *(_QWORD *)(v0 + 24);
  v1 = *(void **)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "removeAnimationForKey:", v4);

  v21[0] = v3;
  v21[1] = v2;
  swift_bridgeObjectRetain();
  v5._countAndFlagsBits = 0x676E69646E65;
  v5._object = (void *)0xE600000000000000;
  String.append(_:)(v5);
  v6 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "removeAnimationForKey:", v6, swift_bridgeObjectRelease(v2).n128_f64[0]);

  objc_msgSend(v1, "setStrokeEnd:", 0.6);
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend((id)objc_opt_self(CABasicAnimation), "animationWithKeyPath:", v7);

  v9 = objc_msgSend(v1, "presentationLayer");
  if (!v9)
    v9 = v1;
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend(v9, "valueForKeyPath:", v10);

  if (v11)
  {
    _bridgeAnyObjectToAny(_:)(v20, v11);
    swift_unknownObjectRelease(v11);
  }
  else
  {
    memset(v20, 0, sizeof(v20));
  }
  sub_100BC2F00((uint64_t)v20, (uint64_t)v21);
  if (v21[3])
    swift_dynamicCast(&v19, v21, (char *)&type metadata for Any + 8, &type metadata for Double, 6);
  else
    sub_100BC2F48((uint64_t)v21);
  isa = Double._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v8, "setFromValue:", isa);

  if (qword_1011DE150 != -1)
    swift_once(&qword_1011DE150, sub_100C56F7C);
  v13 = Double._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v8, "setToValue:", v13);

  objc_msgSend(v8, "setRemovedOnCompletion:", 1);
  objc_msgSend(v8, "setFillMode:", kCAFillModeBoth);
  objc_msgSend(v8, "setDuration:", 1.0);
  LODWORD(v14) = 2139095040;
  objc_msgSend(v8, "setRepeatCount:", v14);
  v15 = CACurrentMediaTime();
  v16 = v8;
  objc_msgSend(v16, "duration");
  objc_msgSend(v16, "setBeginTime:", (double)(v15 - fmod(v15, v17)));

  v18 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "addAnimation:forKey:", v16, v18);

}

void sub_100C568C4(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v7;
  id v8;
  NSString v9;
  id v10;
  double v11;
  NSString v12;
  void *v13;
  id v14;
  double v15;
  Class isa;
  Class v17;
  NSString v18;
  id v19;
  Class v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  Class v27;
  objc_class *v28;
  char *v29;
  char *v30;
  id v31;
  char *v32;
  uint64_t v33;
  void (**v34)(uint64_t);
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  NSString v40;
  Swift::String v41;
  uint64_t v42;
  NSString v43;
  uint64_t v45;
  objc_super v46;
  _OWORD v47[2];
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  if ((*(_BYTE *)(v3 + 40) & 1) == 0)
  {
    v4 = v3;
    *(_BYTE *)(v3 + 40) = 1;
    v7 = *(void **)(v3 + 32);
    v8 = objc_msgSend(v7, "presentationLayer");
    if (!v8)
      v8 = v7;
    v9 = String._bridgeToObjectiveC()();
    v10 = objc_msgSend(v8, "valueForKeyPath:", v9);

    if (v10)
    {
      _bridgeAnyObjectToAny(_:)(v47, v10);
      swift_unknownObjectRelease(v10);
    }
    else
    {
      memset(v47, 0, sizeof(v47));
    }
    sub_100BC2F00((uint64_t)v47, (uint64_t)&v48);
    if (v50)
      swift_dynamicCast(&v45, &v48, (char *)&type metadata for Any + 8, &type metadata for Double, 6);
    else
      sub_100BC2F48((uint64_t)&v48);
    v11 = fmin(a3, 0.1);
    v12 = String._bridgeToObjectiveC()();
    v13 = (void *)objc_opt_self(CABasicAnimation);
    v14 = objc_msgSend(v13, "animationWithKeyPath:", v12);

    if (qword_1011DE150 != -1)
      swift_once(&qword_1011DE150, sub_100C56F7C);
    v15 = *(double *)&qword_1011E2D60 - (6.28318531 - (1.0 - (0.6 - v11)) * 6.28318531);
    isa = Double._bridgeToObjectiveC()().super.super.isa;
    objc_msgSend(v14, "setFromValue:", isa);

    v17 = Double._bridgeToObjectiveC()().super.super.isa;
    objc_msgSend(v14, "setToValue:", v17);

    v18 = String._bridgeToObjectiveC()();
    v19 = objc_msgSend(v13, "animationWithKeyPath:", v18);

    v20 = CGFloat._bridgeToObjectiveC()().super.super.isa;
    objc_msgSend(v19, "setToValue:", v20);

    v21 = objc_msgSend(objc_allocWithZone((Class)CAAnimationGroup), "init");
    v22 = sub_100007E8C(&qword_1011DF520);
    v23 = swift_allocObject(v22, 48, 7);
    *(_OWORD *)(v23 + 16) = xmmword_100EA7DB0;
    *(_QWORD *)(v23 + 32) = v14;
    *(_QWORD *)(v23 + 40) = v19;
    v48 = v23;
    specialized Array._endMutation()(v23);
    v24 = v48;
    sub_10004A07C(0, &qword_1011E2F58, CAAnimation_ptr);
    v25 = v14;
    v26 = v19;
    v27 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v21, "setAnimations:", v27, swift_bridgeObjectRelease(v24).n128_f64[0]);

    objc_msgSend(v21, "setDuration:", v15 * (1.0 / *(double *)&qword_1011E2D60));
    objc_msgSend(v21, "setFillMode:", kCAFillModeForwards);
    objc_msgSend(v21, "setRemovedOnCompletion:", 0);
    v28 = (objc_class *)type metadata accessor for CircularProgressView.SpinAnimator.Delegate();
    v29 = (char *)objc_allocWithZone(v28);
    v30 = &v29[OBJC_IVAR____TtCCC11MusicCoreUI20CircularProgressViewP33_2327D9925563EEC9FF3A63D4DED4721D12SpinAnimator8Delegate_onAnimationDidStop];
    *(_QWORD *)v30 = 0;
    *((_QWORD *)v30 + 1) = 0;
    v46.receiver = v29;
    v46.super_class = v28;
    v31 = v21;
    v32 = (char *)objc_msgSendSuper2(&v46, "init");
    objc_msgSend(v31, "setDelegate:", v32);

    v33 = swift_allocObject(&unk_10110B398, 64, 7);
    *(_QWORD *)(v33 + 16) = v32;
    *(_QWORD *)(v33 + 24) = v4;
    *(double *)(v33 + 32) = v11;
    *(_QWORD *)(v33 + 40) = a1;
    *(_QWORD *)(v33 + 48) = a2;
    *(double *)(v33 + 56) = a3;
    v34 = (void (**)(uint64_t))&v32[OBJC_IVAR____TtCCC11MusicCoreUI20CircularProgressViewP33_2327D9925563EEC9FF3A63D4DED4721D12SpinAnimator8Delegate_onAnimationDidStop];
    v35 = *(_QWORD *)&v32[OBJC_IVAR____TtCCC11MusicCoreUI20CircularProgressViewP33_2327D9925563EEC9FF3A63D4DED4721D12SpinAnimator8Delegate_onAnimationDidStop];
    v36 = *(_QWORD *)&v32[OBJC_IVAR____TtCCC11MusicCoreUI20CircularProgressViewP33_2327D9925563EEC9FF3A63D4DED4721D12SpinAnimator8Delegate_onAnimationDidStop
                        + 8];
    *v34 = sub_100C573F8;
    v34[1] = (void (*)(uint64_t))v33;
    v37 = v32;
    swift_retain(v4);
    swift_retain(a2);
    sub_10004BA30(v35, v36);
    v38 = *(_QWORD *)(v4 + 16);
    v39 = *(_QWORD *)(v4 + 24);
    v40 = String._bridgeToObjectiveC()();
    objc_msgSend(v7, "removeAnimationForKey:", v40);

    v48 = v38;
    v49 = v39;
    swift_bridgeObjectRetain();
    v41._countAndFlagsBits = 0x676E69646E65;
    v41._object = (void *)0xE600000000000000;
    String.append(_:)(v41);
    v42 = v49;
    v43 = String._bridgeToObjectiveC()();
    objc_msgSend(v7, "addAnimation:forKey:", v31, v43, swift_bridgeObjectRelease(v42).n128_f64[0]);

  }
}

uint64_t sub_100C56DC8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

double sub_100C56DF4(uint64_t a1)
{
  uint64_t v1;

  return sub_100C55C68(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t type metadata accessor for CircularProgressView.SpinAnimator()
{
  return objc_opt_self(_TtCC11MusicCoreUI20CircularProgressViewP33_2327D9925563EEC9FF3A63D4DED4721D12SpinAnimator);
}

void sub_100C56E1C(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t))
{
  void *v10;
  void *v11;
  Swift::String v12;
  NSString v13;
  double v14;
  char v15;
  uint64_t v16;
  uint64_t v17;

  if (*(_BYTE *)(a5 + 40) == 1)
  {
    v10 = (void *)objc_opt_self(CATransaction);
    objc_msgSend(v10, "begin");
    objc_msgSend(v10, "setDisableActions:", 1);
    v11 = *(void **)(a5 + 32);
    v16 = *(_QWORD *)(a5 + 16);
    v17 = *(_QWORD *)(a5 + 24);
    swift_bridgeObjectRetain();
    v12._countAndFlagsBits = 0x676E69646E65;
    v12._object = (void *)0xE600000000000000;
    String.append(_:)(v12);
    v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v17);
    objc_msgSend(v11, "removeAnimationForKey:", v13, v16);

    objc_msgSend(v11, "setStrokeStart:", 0.0);
    objc_msgSend(v11, "setStrokeEnd:", a1);
    objc_msgSend(v10, "commit");
    v14 = COERCE_DOUBLE(a6(a5));
    if ((v15 & 1) != 0)
      v14 = a2;
    objc_msgSend(v11, "setStrokeEnd:", v14);
  }
}

void sub_100C56F7C()
{
  qword_1011E2D60 = 0x401921FB54442D18;
}

id sub_100C57058()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CircularProgressView.SpinAnimator.Delegate();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100C570A0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  return swift_deallocClassInstance(v0, 41, 7);
}

void CircularProgressView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer("MusicCoreUI.CircularProgressView", 32, "init(frame:)", 12, 0);
  __break(1u);
}

void _s11MusicCoreUI20CircularProgressViewC5coderACSgSo7NSCoderC_tcfc_0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = &v0[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state];
  *(_QWORD *)v1 = 0;
  *((_WORD *)v1 + 4) = 0;
  v1[10] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_image] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageScale] = 0x3FE0000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_spinAnimator] = 0;
  v2 = OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_progressLayer;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
  v3 = OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_trackLayer;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100E2B820, "MusicCoreUI/CircularProgressView.swift", 38, 2, 45, 0);
  __break(1u);
}

uint64_t type metadata accessor for CircularProgressView()
{
  return objc_opt_self(_TtC11MusicCoreUI20CircularProgressView);
}

uint64_t initializeBufferWithCopyOfBuffer for CircularProgressView.State(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for CircularProgressView.State(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 10))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CircularProgressView.State(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_WORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 10) = v3;
  return result;
}

uint64_t sub_100C57354(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_100C57370(uint64_t result, int a2)
{
  if (a2)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    *(_BYTE *)(result + 9) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for CircularProgressView.State()
{
  return &type metadata for CircularProgressView.State;
}

uint64_t type metadata accessor for CircularProgressView.SpinAnimator.Delegate()
{
  return objc_opt_self(_TtCCC11MusicCoreUI20CircularProgressViewP33_2327D9925563EEC9FF3A63D4DED4721D12SpinAnimator8Delegate);
}

uint64_t sub_100C573C4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 64, 7);
}

void sub_100C573F8(uint64_t a1)
{
  uint64_t v1;

  sub_100C56E1C(*(double *)(v1 + 32), *(double *)(v1 + 56), a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(uint64_t (**)(uint64_t))(v1 + 40));
}

void sub_100C57414(uint64_t a1)
{
  size_t *v1;
  uint64_t v2;
  size_t v3;
  int64_t v4;
  int64_t v5;
  size_t isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  int64_t v13;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_13;
  }
  if (v4 <= v5)
    v13 = v4 + v2;
  else
    v13 = v4;
  v3 = sub_100BCBF7C(isUniquelyReferenced_nonNull_native, v13, 1, (char *)v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_13:
    if (!v2)
      goto LABEL_14;
    goto LABEL_16;
  }
LABEL_5:
  v8 = *(_QWORD *)(v3 + 16);
  if ((*(_QWORD *)(v3 + 24) >> 1) - v8 < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v9 = sub_100007E8C(&qword_1011DE770);
  swift_arrayInitWithCopy(v3+ ((*(unsigned __int8 *)(*(_QWORD *)(v9 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v9 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * v8);
  if (!v2)
  {
LABEL_14:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
  v10 = *(_QWORD *)(v3 + 16);
  v11 = __OFADD__(v10, v2);
  v12 = v10 + v2;
  if (!v11)
  {
    *(_QWORD *)(v3 + 16) = v12;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
}

void sub_100C57518(uint64_t a1)
{
  sub_100C57584(a1, (unint64_t *)_s5GlyphCMa, &qword_1011E3CA0, &qword_1011E3C98, (uint64_t *)sub_100BE3E18);
}

void sub_100C5753C(uint64_t a1)
{
  sub_100C57584(a1, (unint64_t *)_s8SyllableCMa, &qword_1011E3CB0, &qword_1011E3CA8, (uint64_t *)sub_100BE3E18);
}

void sub_100C57560(uint64_t a1)
{
  sub_100C57584(a1, (unint64_t *)_s4WordCMa, &qword_1011E3CC0, &qword_1011E3CB8, (uint64_t *)sub_100812B34);
}

void sub_100C57584(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t *v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v23 = a1;
    else
      v23 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v11 = _CocoaArrayWrapper.endIndex.getter(v23);
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v12 = *v5;
  if (!((unint64_t)*v5 >> 62))
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    v14 = v13 + v11;
    if (!__OFADD__(v13, v11))
      goto LABEL_5;
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v12 < 0)
    v24 = *v5;
  else
    v24 = v12 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v13 = _CocoaArrayWrapper.endIndex.getter(v24);
  swift_bridgeObjectRelease();
  v14 = v13 + v11;
  if (__OFADD__(v13, v11))
    goto LABEL_29;
LABEL_5:
  v12 = *v5;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v5);
  *v5 = v12;
  v13 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject
    && (v12 & 0x8000000000000000) == 0
    && (v12 & 0x4000000000000000) == 0)
  {
    v16 = v12 & 0xFFFFFFFFFFFFFF8;
    if (v14 <= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v13 = 1;
  }
  v26 = v11;
  v11 = (uint64_t)a2;
  a2 = a3;
  a3 = (unint64_t *)a4;
  a4 = a5;
  if ((unint64_t)v12 >> 62)
    goto LABEL_31;
  v17 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v17 <= v14)
      v17 = v14;
    swift_bridgeObjectRetain();
    v12 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v13, v17, 1, v12);
    swift_bridgeObjectRelease();
    *v5 = v12;
    v16 = v12 & 0xFFFFFFFFFFFFFF8;
    a5 = a4;
    a4 = (uint64_t *)a3;
    a3 = a2;
    a2 = (unint64_t *)v11;
    v11 = v26;
LABEL_15:
    sub_100C7022C(v16 + 8 * *(_QWORD *)(v16 + 16) + 32, (*(_QWORD *)(v16 + 24) >> 1) - *(_QWORD *)(v16 + 16), a1, (void (*)(_QWORD))a2, a3, a4, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))a5);
    if (v18 >= v11)
      break;
LABEL_30:
    __break(1u);
LABEL_31:
    if (v12 < 0)
      v25 = v12;
    else
      v25 = v12 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v17 = _CocoaArrayWrapper.endIndex.getter(v25);
    swift_bridgeObjectRelease();
  }
  if (v18 < 1)
    goto LABEL_19;
  v19 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v20 = __OFADD__(v19, v18);
  v21 = v19 + v18;
  if (!v20)
  {
    *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10) = v21;
LABEL_19:
    swift_bridgeObjectRelease();
    specialized Array._endMutation()(v22);
    return;
  }
  __break(1u);
}

void sub_100C57794(uint64_t a1)
{
  size_t *v1;
  uint64_t v2;
  size_t v3;
  int64_t v4;
  int64_t v5;
  size_t isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_13;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_100BCCC4C(isUniquelyReferenced_nonNull_native, v14, 1, (char *)v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_13:
    if (!v2)
      goto LABEL_14;
    goto LABEL_16;
  }
LABEL_5:
  v8 = *(_QWORD *)(v3 + 16);
  v9 = (*(_QWORD *)(v3 + 24) >> 1) - v8;
  v10 = type metadata accessor for Playlist.Collaborator(0);
  if (v9 < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  swift_arrayInitWithCopy(v3+ ((*(unsigned __int8 *)(*(_QWORD *)(v10 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v10 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * v8);
  if (!v2)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    *v1 = v3;
    return;
  }
  v11 = *(_QWORD *)(v3 + 16);
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    *(_QWORD *)(v3 + 16) = v13;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
}

uint64_t Collaboration.Management.Model.__allocating_init(manager:playlist:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  v5 = sub_100C70714(a1, a2);
  swift_release();
  return v5;
}

uint64_t Collaboration.Management.Model.init(manager:playlist:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = sub_100C70714(a1, a2);
  swift_release();
  return v2;
}

uint64_t property wrapper backing initializer of Collaboration.Management.Model.pendingCollaborators(uint64_t a1)
{
  return sub_100AE8948(a1, &qword_1011E3020);
}

uint64_t property wrapper backing initializer of Collaboration.Management.Model.transientCollaborators(uint64_t a1)
{
  return sub_100AE8948(a1, &qword_1011E3028);
}

uint64_t property wrapper backing initializer of Collaboration.Management.Model.playlist(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = type metadata accessor for Playlist(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  Published.init(initialValue:)(v5, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

uint64_t sub_100C579D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char v5;
  uint64_t KeyPath;
  uint64_t v7;
  char v8;
  _BYTE v9[24];
  _QWORD v10[15];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  result = swift_weakLoadStrong(v2);
  if (result)
  {
    v4 = result;
    static ApplicationCapabilities.shared.getter((uint64_t)v10);
    sub_100065184(v10);
    v5 = BYTE1(v10[0]);
    KeyPath = swift_getKeyPath(&unk_100EF0B48);
    v7 = swift_getKeyPath(&unk_100EF0B70);
    v8 = v5;
    return static Published.subscript.setter(&v8, v4, KeyPath, v7);
  }
  return result;
}

uint64_t sub_100C57A6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v5[5] = a4;
  v5[6] = a5;
  v6 = sub_100007E8C(&qword_1011E42D8);
  v5[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011E42E0);
  v5[8] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v5[9] = v8;
  v5[10] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011E42E8);
  v5[11] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v5[12] = v10;
  v5[13] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011E42F0);
  v5[14] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v5[15] = v12;
  v13 = (*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[16] = swift_task_alloc(v13);
  v5[17] = swift_task_alloc(v13);
  return swift_task_switch(sub_100C57B5C, 0, 0);
}

uint64_t sub_100C57B5C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;

  v2 = v0[16];
  v1 = v0[17];
  v3 = v0[14];
  v4 = v0[15];
  v5 = type metadata accessor for Playlist(0);
  v6 = type metadata accessor for Playlist.Collaborator(0);
  v7 = sub_100048748(&qword_1011E42F8, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Collaborator, (uint64_t)&protocol conformance descriptor for Playlist.Collaborator);
  MusicLibrarySectionedRequest.init()(v5, v6, &protocol witness table for Playlist, v7);
  KeyPath = swift_getKeyPath(&unk_100EF0DB8);
  v0[2] = Playlist.id.getter(KeyPath);
  v0[3] = v9;
  MusicLibrarySectionedRequest.filterSections<A>(matching:equalTo:)(KeyPath, v0 + 2, v3, &protocol witness table for Playlist, &protocol witness table for MusicItemID);
  swift_bridgeObjectRelease();
  v10 = swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v4 + 16))(v2, v1, v3, v10);
  v11 = type metadata accessor for MainActor(0);
  v0[18] = static MainActor.shared.getter(v12);
  v13 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor);
  return swift_task_switch(sub_100C57CA0, v13, v14);
}

uint64_t sub_100C57CA0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v2 = v0[15];
  v1 = v0[16];
  v3 = v0[14];
  swift_release();
  v4 = sub_100049F28((unint64_t *)&unk_1011E4300, &qword_1011E42F0, (uint64_t)&protocol conformance descriptor for MusicLibrarySectionedRequest<A, B>);
  v0[19] = MusicAutoupdatableRequest.autoupdatingResponse.getter(v3, v4);
  v5 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v0[20] = v5;
  v5(v1, v3);
  return swift_task_switch(sub_100C57D2C, 0, 0);
}

uint64_t sub_100C57D2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model_autoupdatingResponse;
  *(_QWORD *)(v1 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model_autoupdatingResponse) = *(_QWORD *)(v0 + 152);
  v3 = swift_release();
  v4 = *(_QWORD *)(v1 + v2);
  if (v4)
  {
    v5 = *(_QWORD *)(v0 + 104);
    v7 = *(_QWORD *)(v0 + 80);
    v6 = *(_QWORD *)(v0 + 88);
    v9 = *(_QWORD *)(v0 + 64);
    v8 = *(_QWORD *)(v0 + 72);
    v10 = *(_QWORD *)(v0 + 56);
    v33 = *(_QWORD *)(v0 + 48);
    v34 = *(_QWORD *)(v0 + 96);
    v11 = swift_retain();
    dispatch thunk of MusicAutoupdatingResponse.$response.getter(v11);
    swift_release();
    v12 = sub_10004A07C(0, (unint64_t *)&qword_1011DF580, OS_dispatch_queue_ptr);
    *(_QWORD *)(v0 + 32) = static OS_dispatch_queue.main.getter(v12, v13, v14, v15, v16, v17, v18, v19);
    v20 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v10, 1, 1, v20);
    v21 = sub_100049F28(&qword_1011E4310, &qword_1011E42E0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    v22 = sub_100C77628();
    Publisher.receive<A>(on:options:)(v0 + 32, v10, v9, v12, v21, v22);
    sub_10004FF60(v10, &qword_1011E42D8);

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    v23 = swift_allocObject(&unk_10110BAD8, 24, 7);
    swift_weakInit(v23 + 16, v33);
    v24 = sub_100049F28(&qword_1011E4320, &qword_1011E42E8, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    v4 = Publisher<>.sink(receiveValue:)(sub_100C77680, v23, v6, v24);
    v25 = swift_release();
    (*(void (**)(uint64_t, uint64_t, __n128))(v34 + 8))(v5, v6, v25);
  }
  v27 = *(_QWORD *)(v0 + 128);
  v26 = *(_QWORD *)(v0 + 136);
  v28 = *(_QWORD *)(v0 + 104);
  v29 = *(_QWORD *)(v0 + 80);
  v31 = *(_QWORD *)(v0 + 48);
  v30 = *(_QWORD *)(v0 + 56);
  (*(void (**)(uint64_t, _QWORD, __n128))(v0 + 160))(v26, *(_QWORD *)(v0 + 112), v3);
  *(_QWORD *)(v31
            + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model_autoupdatingResponseSubscription) = v4;
  swift_release();
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100C57F54(void (*a1)(char *), uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t Strong;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t KeyPath;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  __n128 v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(char *);
  void (*v67)(_QWORD, _QWORD, _QWORD);
  uint64_t v68;
  NSObject *v69;
  os_log_type_t v70;
  _BOOL4 v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(char *, uint64_t);
  char *v81;
  char *v82;
  char *v83;
  uint64_t v84;
  unsigned int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  __n128 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  char v100;
  void (*v101)(char *, uint64_t);
  char *v102;
  uint64_t v103;
  NSObject *v104;
  os_log_type_t v105;
  _BOOL4 v106;
  uint64_t v107;
  void (*v108)(char *, uint64_t);
  uint8_t *v109;
  uint8_t *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unsigned int (*v137)(uint64_t, uint64_t, uint64_t);
  uint64_t v138;
  char *v139;
  uint64_t v140;
  void (*v141)(char *, uint64_t);
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  __n128 v158;
  uint64_t v159;
  uint64_t v160;
  char v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  uint64_t v185;
  void (*v186)(char *, uint64_t, uint64_t);
  uint64_t v187;
  NSObject *v188;
  os_log_type_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  char *v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  BOOL v203;
  void (*v204)(char *, uint64_t);
  void (*v205)(uint64_t *, _QWORD);
  uint64_t v206;
  uint64_t v207;
  void (*v208)(char *);
  uint64_t v209;
  char *v210;
  uint64_t (*v211)(uint64_t, char *, uint64_t);
  uint64_t v212;
  uint64_t v213;
  char *v214;
  unint64_t v215;
  unint64_t v216;
  unint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  void (*v222)(uint64_t *, _QWORD);
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  __n128 v227;
  char *v228;
  unint64_t v229;
  unint64_t v230;
  unint64_t v231;
  uint64_t v232;
  char *v233;
  void (*v234)(char *, uint64_t, __n128);
  char *v235;
  char *v236;
  uint64_t v237;
  NSObject *v238;
  os_log_type_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  char *v244;
  char *v245;
  char *v246;
  __n128 v247;
  uint64_t v248;
  uint64_t v249;
  char *v250;
  unsigned int (*v251)(char *, uint64_t, uint64_t);
  uint64_t v252;
  char *v253;
  char *v254;
  uint64_t v255;
  char *v256;
  _QWORD *v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  char *v264;
  char *v265;
  uint64_t v266;
  uint64_t v267;
  char *v268;
  char *v269;
  uint64_t v270;
  uint64_t v271;
  char *v272;
  char *v273;
  char *v274;
  char *v275;
  char *v276;
  uint64_t v277;
  char *v278;
  uint64_t v279;
  void (*v280)(char *, uint64_t);
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  char *v284;
  _QWORD *v285;
  void (*v286)(char *);
  char *v287;
  char *v288;
  char *v289;
  char *v290;
  char *v291;
  char *v292;
  uint64_t v293;
  uint64_t v294;
  char *v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  char v304[8];
  char v305[8];
  uint64_t v306;
  char *v307;
  uint64_t v308;
  char v309[8];
  char v310[8];
  char v311[8];
  char v312[8];
  char v313[8];

  v286 = a1;
  sub_100007E8C(&qword_1011E0640);
  __chkstk_darwin();
  v282 = (uint64_t)&v248 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v300 = type metadata accessor for Playlist.Collaborator(0);
  v277 = *(_QWORD *)(v300 - 8);
  __chkstk_darwin();
  v290 = (char *)&v248 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v289 = (char *)&v248 - v5;
  __chkstk_darwin();
  v296 = (uint64_t)&v248 - v6;
  __chkstk_darwin();
  v276 = (char *)&v248 - v7;
  v293 = sub_100007E8C(&qword_1011E4328);
  v271 = *(_QWORD *)(v293 - 8);
  __chkstk_darwin();
  v292 = (char *)&v248 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v270 = sub_100007E8C(&qword_1011E4330);
  __chkstk_darwin();
  v269 = (char *)&v248 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v291 = (char *)&v248 - v10;
  v259 = type metadata accessor for Date(0);
  v258 = *(_QWORD *)(v259 - 8);
  __chkstk_darwin();
  v254 = (char *)&v248 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v260 = sub_100007E8C(&qword_1011E4338);
  __chkstk_darwin();
  v261 = (uint64_t)&v248 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v267 = type metadata accessor for Playlist(0);
  v266 = *(_QWORD *)(v267 - 8);
  __chkstk_darwin();
  v264 = (char *)&v248 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v265 = (char *)&v248 - v14;
  __chkstk_darwin();
  v257 = (uint64_t *)((char *)&v248 - v15);
  sub_100007E8C(&qword_1011E3C68);
  __chkstk_darwin();
  v255 = (uint64_t)&v248 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v263 = (uint64_t)&v248 - v17;
  __chkstk_darwin();
  v262 = (uint64_t)&v248 - v18;
  sub_100007E8C(&qword_1011E3C80);
  __chkstk_darwin();
  v275 = (char *)&v248 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v283 = type metadata accessor for Playlist.Collaborator.Status(0);
  v288 = *(char **)(v283 - 8);
  __chkstk_darwin();
  v273 = (char *)&v248 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v274 = (char *)&v248 - v21;
  v294 = type metadata accessor for Playlist.Collaboration(0);
  v297 = *(_QWORD *)(v294 - 8);
  __chkstk_darwin();
  v278 = (char *)&v248 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v302 = sub_100007E8C(&qword_1011E4340);
  v301 = *(_QWORD *)(v302 - 8);
  __chkstk_darwin();
  v295 = (char *)&v248 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v298 = type metadata accessor for Logger(0);
  v24 = *(_QWORD *)(v298 - 8);
  __chkstk_darwin();
  v284 = (char *)&v248 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v268 = (char *)&v248 - v26;
  __chkstk_darwin();
  v272 = (char *)&v248 - v27;
  __chkstk_darwin();
  v29 = (char *)&v248 - v28;
  v280 = (void (*)(char *, uint64_t))sub_100007E8C(&qword_1011E3C60);
  __chkstk_darwin();
  v256 = (char *)&v248 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v281 = (uint64_t)&v248 - v31;
  __chkstk_darwin();
  v279 = (uint64_t)&v248 - v32;
  __chkstk_darwin();
  v285 = (uint64_t *)((char *)&v248 - v33);
  __chkstk_darwin();
  v35 = (char *)&v248 - v34;
  sub_100007E8C(&qword_1011E4348);
  __chkstk_darwin();
  v37 = (char *)&v248 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_100007E8C(&qword_1011E4350);
  __chkstk_darwin();
  v287 = (char *)&v248 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v41 = (char *)&v248 - v40;
  __chkstk_darwin();
  v43 = (char *)&v248 - v42;
  __chkstk_darwin();
  v45 = (char *)&v248 - v44;
  __chkstk_darwin();
  v303 = (uint64_t)&v248 - v46;
  a2 += 16;
  swift_beginAccess(a2, v313, 0, 0);
  v299 = a2;
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v48 = *(_QWORD *)(Strong
                    + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model_autoupdatingResponse);
    swift_retain();
    swift_release();
    if (v48)
    {
      v50 = dispatch thunk of MusicAutoupdatingResponse.isLoaded.getter(v49);
      swift_release();
      if ((v50 & 1) != 0)
      {
        v253 = v35;
        sub_10004A160((uint64_t)v286, (uint64_t)v37, &qword_1011E4348);
        v51 = sub_100007E8C(&qword_1011E4358);
        v52 = *(_QWORD *)(v51 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v37, 1, v51) == 1)
        {
          sub_10004FF60((uint64_t)v37, &qword_1011E4348);
          v53 = v301;
          v54 = v303;
          v55 = v302;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v301 + 56))(v303, 1, 1, v302);
        }
        else
        {
          v56 = MusicLibrarySectionedResponse.sections.getter(v51);
          (*(void (**)(char *, uint64_t))(v52 + 8))(v37, v51);
          v53 = v301;
          v54 = v303;
          v57 = v302;
          if (*(_QWORD *)(v56 + 16))
          {
            (*(void (**)(uint64_t, unint64_t, uint64_t))(v301 + 16))(v303, v56 + ((*(unsigned __int8 *)(v301 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v301 + 80)), v302);
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v53 + 56))(v54, 0, 1, v57);
          }
          else
          {
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v301 + 56))(v303, 1, 1, v302);
          }
          v55 = v57;
          swift_bridgeObjectRelease();
        }
        sub_10004A160(v54, (uint64_t)v45, &qword_1011E4350);
        v251 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48);
        if (v251(v45, 1, v55) == 1)
        {
          sub_10004FF60((uint64_t)v45, &qword_1011E4350);
          v58 = (uint64_t)v253;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v297 + 56))(v253, 1, 1, v294);
        }
        else
        {
          KeyPath = swift_getKeyPath(&unk_100EF0DE0);
          v60 = v29;
          v61 = v24;
          v62 = (uint64_t)v253;
          MusicLibrarySection.subscript.getter(KeyPath, v55);
          v58 = v62;
          v24 = v61;
          v29 = v60;
          v63 = swift_release();
          (*(void (**)(char *, uint64_t, __n128))(v301 + 8))(v45, v302, v63);
        }
        v64 = v298;
        v250 = v29;
        v65 = Logger.collaboration.unsafeMutableAddressor();
        v66 = *(void (**)(char *))(v24 + 16);
        v252 = v65;
        v66(v29);
        sub_10004A160(v54, (uint64_t)v43, &qword_1011E4350);
        v67 = (void (*)(_QWORD, _QWORD, _QWORD))v285;
        v68 = sub_10004A160(v58, (uint64_t)v285, &qword_1011E3C60);
        v69 = Logger.logObject.getter(v68);
        v70 = static os_log_type_t.default.getter();
        v71 = os_log_type_enabled(v69, v70);
        v286 = v66;
        if (v71)
        {
          v72 = swift_slowAlloc(22, -1);
          v249 = swift_slowAlloc(64, -1);
          v308 = v249;
          *(_DWORD *)v72 = 136446466;
          sub_10004A160((uint64_t)v43, (uint64_t)v41, &qword_1011E4350);
          v73 = (char *)String.init<A>(describing:)(v41, v38);
          *(_QWORD *)(v72 + 4) = sub_100BBDE38(v73, v74, &v308);
          swift_bridgeObjectRelease();
          sub_10004FF60((uint64_t)v43, &qword_1011E4350);
          *(_WORD *)(v72 + 12) = 2082;
          v75 = v279;
          sub_10004A160((uint64_t)v67, v279, &qword_1011E3C60);
          v76 = (char *)String.init<A>(describing:)(v75, v280);
          *(_QWORD *)(v72 + 14) = sub_100BBDE38(v76, v77, &v308);
          swift_bridgeObjectRelease();
          v64 = v298;
          sub_10004FF60((uint64_t)v67, &qword_1011E3C60);
          _os_log_impl((void *)&_mh_execute_header, v69, v70, "    [Management] Did update collaborative playlist with:\n        playlist=%{public}s\")\n        collaboration=%{public}s", (uint8_t *)v72, 0x16u);
          v78 = v249;
          swift_arrayDestroy(v249, 2, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v78, -1, -1);
          v79 = v72;
          v66 = v286;
          swift_slowDealloc(v79, -1, -1);
        }
        else
        {
          sub_10004FF60((uint64_t)v43, &qword_1011E4350);
          sub_10004FF60((uint64_t)v67, &qword_1011E3C60);
        }

        v80 = *(void (**)(char *, uint64_t))(v24 + 8);
        v80(v250, v64);
        v81 = v295;
        v82 = v288;
        v83 = v287;
        sub_10004A160(v303, (uint64_t)v287, &qword_1011E4350);
        v84 = v302;
        v85 = v251(v83, 1, v302);
        v86 = v297;
        v87 = v301;
        if (v85 == 1)
        {
          sub_10004FF60((uint64_t)v83, &qword_1011E4350);
LABEL_26:
          v102 = v284;
          v103 = ((uint64_t (*)(char *, uint64_t, uint64_t))v66)(v284, v252, v64);
          v104 = Logger.logObject.getter(v103);
          v105 = static os_log_type_t.default.getter();
          v106 = os_log_type_enabled(v104, v105);
          v107 = v303;
          if (v106)
          {
            v108 = v80;
            v109 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v109 = 0;
            _os_log_impl((void *)&_mh_execute_header, v104, v105, "[Management] Dismissing management sheet", v109, 2u);
            v110 = v109;
            v80 = v108;
            swift_slowDealloc(v110, -1, -1);
          }

          v80(v102, v64);
          v111 = v299;
          swift_beginAccess(v299, &v308, 0, 0);
          v112 = swift_weakLoadStrong(v111);
          if (v112)
          {
            v113 = v112;
            v114 = swift_getKeyPath(&unk_100EF0320);
            v115 = swift_getKeyPath(&unk_100EF0348);
            v312[0] = 1;
            static Published.subscript.setter(v312, v113, v114, v115);
          }
          sub_10004FF60((uint64_t)v253, &qword_1011E3C60);
          v116 = v107;
LABEL_31:
          sub_10004FF60(v116, &qword_1011E4350);
          return;
        }
        (*(void (**)(char *, char *, uint64_t))(v301 + 32))(v81, v83, v84);
        v88 = v281;
        sub_10004A160((uint64_t)v253, v281, &qword_1011E3C60);
        v89 = v294;
        v288 = *(char **)(v86 + 48);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v288)(v88, 1, v294) == 1)
        {
          (*(void (**)(char *, uint64_t))(v87 + 8))(v81, v84);
          sub_10004FF60(v88, &qword_1011E3C60);
LABEL_25:
          v66 = v286;
          goto LABEL_26;
        }
        v280 = v80;
        v90 = v278;
        v91.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t))(v86 + 32))(v278, v88, v89);
        v92 = (uint64_t)v275;
        Playlist.Collaboration.collaboratorStatus.getter(v91);
        v93 = v89;
        v94 = v283;
        if ((*((unsigned int (**)(uint64_t, uint64_t, uint64_t))v82 + 6))(v92, 1, v283) == 1)
        {
          (*(void (**)(char *, uint64_t))(v86 + 8))(v90, v93);
          (*(void (**)(char *, uint64_t))(v87 + 8))(v295, v302);
          sub_10004FF60(v92, &qword_1011E3C80);
LABEL_24:
          v80 = v280;
          goto LABEL_25;
        }
        v95 = v274;
        (*((void (**)(char *, uint64_t, uint64_t))v82 + 4))(v274, v92, v94);
        v96 = v273;
        (*((void (**)(char *, _QWORD, uint64_t))v82 + 13))(v273, enum case for Playlist.Collaborator.Status.notJoined(_:), v94);
        v97 = sub_100048748(&qword_1011E3C88, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Collaborator.Status, (uint64_t)&protocol conformance descriptor for Playlist.Collaborator.Status);
        v98 = dispatch thunk of static Equatable.== infix(_:_:)(v95, v96, v283, v97);
        v99 = v283;
        v100 = v98;
        v101 = (void (*)(char *, uint64_t))*((_QWORD *)v82 + 1);
        v101(v96, v283);
        if ((v100 & 1) != 0)
        {
          v101(v95, v99);
          (*(void (**)(char *, uint64_t))(v86 + 8))(v278, v294);
          (*(void (**)(char *, uint64_t))(v87 + 8))(v295, v302);
          goto LABEL_24;
        }
        v117 = v299;
        swift_beginAccess(v299, v312, 0, 0);
        v118 = swift_weakLoadStrong(v117);
        v119 = (uint64_t)v291;
        if (!v118
          || (v120 = v118,
              v121 = swift_getKeyPath(&unk_100EF0BD8),
              swift_getKeyPath(&unk_100EF0C00),
              static Published.subscript.getter(&v308, v120, v121),
              swift_release(),
              swift_release(),
              swift_release(),
              v308 != 1))
        {
LABEL_49:
          v147 = v299;
          swift_beginAccess(v299, v311, 0, 0);
          v148 = swift_weakLoadStrong(v147);
          if (v148)
          {
            v149 = v148;
            v150 = v265;
            MusicLibrarySection.item.getter(v302);
            v151 = swift_getKeyPath(&unk_100EF0998);
            v152 = swift_getKeyPath(&unk_100EF09C0);
            v153 = v266;
            v154 = v264;
            v155 = v267;
            (*(void (**)(char *, char *, uint64_t))(v266 + 16))(v264, v150, v267);
            swift_retain();
            static Published.subscript.setter(v154, v149, v151, v152);
            (*(void (**)(char *, uint64_t))(v153 + 8))(v150, v155);
            swift_release();
          }
          v156 = v299;
          swift_beginAccess(v299, v310, 0, 0);
          v157 = swift_weakLoadStrong(v156);
          v159 = v293;
          if (v157)
          {
            v160 = v157;
            v161 = Playlist.Collaboration.isOpenInvitation.getter();
            v162 = swift_getKeyPath(&unk_100EF0B90);
            v163 = swift_getKeyPath(&unk_100EF0BB8);
            LOBYTE(v308) = v161 & 1;
            static Published.subscript.setter(&v308, v160, v162, v163);
          }
          v164 = v292;
          MusicLibrarySection.items.getter(v302, v158);
          v165 = v271;
          v166 = (uint64_t)v269;
          v285 = *(_QWORD **)(v271 + 16);
          ((void (*)(char *, char *, uint64_t))v285)(v269, v164, v159);
          v167 = sub_100049F28(&qword_1011E4360, &qword_1011E4328, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
          dispatch thunk of Collection.startIndex.getter(v159);
          v284 = *(char **)(v165 + 8);
          ((void (*)(char *, uint64_t))v284)(v164, v159);
          v168 = v270;
          *(_QWORD *)(v166 + *(int *)(v270 + 36)) = v308;
          sub_100065228(v166, v119, &qword_1011E4330);
          v169 = (uint64_t *)(v119 + *(int *)(v168 + 36));
          swift_beginAccess(v299, v309, 0, 0);
          v170 = *v169;
          dispatch thunk of Collection.endIndex.getter(&v308, v159, v167);
          if (v170 == v308)
          {
            v288 = (char *)_swiftEmptyArrayStorage;
            v287 = (char *)_swiftEmptyArrayStorage;
          }
          else
          {
            v287 = (char *)_swiftEmptyArrayStorage;
            v288 = (char *)_swiftEmptyArrayStorage;
            v198 = v277;
            v199 = v276;
            do
            {
              v204 = v101;
              v205 = (void (*)(uint64_t *, _QWORD))dispatch thunk of Collection.subscript.read(&v308, v169, v159, v167);
              v206 = v119;
              v207 = v159;
              v208 = *(void (**)(char *))(v198 + 16);
              v209 = v300;
              v208(v199);
              v205(&v308, 0);
              v210 = v292;
              ((void (*)(char *, uint64_t, uint64_t))v285)(v292, v206, v207);
              dispatch thunk of Collection.formIndex(after:)(v169, v207, v167);
              ((void (*)(char *, uint64_t))v284)(v210, v207);
              v211 = *(uint64_t (**)(uint64_t, char *, uint64_t))(v198 + 32);
              v212 = v296;
              v213 = v211(v296, v199, v209);
              if ((Playlist.Collaborator.isPending.getter(v213) & 1) != 0)
              {
                ((void (*)(char *, uint64_t, uint64_t))v208)(v289, v212, v209);
                if ((swift_isUniquelyReferenced_nonNull_native(v288) & 1) == 0)
                  v288 = (char *)sub_100BCCC4C(0, *((_QWORD *)v288 + 2) + 1, 1, v288);
                v101 = v204;
                v228 = v288;
                v230 = *((_QWORD *)v288 + 2);
                v229 = *((_QWORD *)v288 + 3);
                if (v230 >= v229 >> 1)
                  v228 = (char *)sub_100BCCC4C(v229 > 1, v230 + 1, 1, v288);
                *((_QWORD *)v228 + 2) = v230 + 1;
                v231 = (*(unsigned __int8 *)(v198 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v198 + 80);
                v288 = v228;
                v232 = v300;
                v211((uint64_t)&v228[v231 + *(_QWORD *)(v198 + 72) * v230], v289, v300);
                (*(void (**)(uint64_t, uint64_t))(v198 + 8))(v212, v232);
              }
              else
              {
                ((void (*)(char *, uint64_t, uint64_t))v208)(v290, v212, v209);
                v214 = v287;
                if ((swift_isUniquelyReferenced_nonNull_native(v287) & 1) == 0)
                  v214 = (char *)sub_100BCCC4C(0, *((_QWORD *)v214 + 2) + 1, 1, v214);
                v216 = *((_QWORD *)v214 + 2);
                v215 = *((_QWORD *)v214 + 3);
                if (v216 >= v215 >> 1)
                  v214 = (char *)sub_100BCCC4C(v215 > 1, v216 + 1, 1, v214);
                *((_QWORD *)v214 + 2) = v216 + 1;
                v217 = (*(unsigned __int8 *)(v198 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v198 + 80);
                v287 = v214;
                v211((uint64_t)&v214[v217 + *(_QWORD *)(v198 + 72) * v216], v290, v209);
                v218 = swift_weakLoadStrong(v299);
                if (v218)
                {
                  v219 = v218;
                  v220 = swift_getKeyPath(&unk_100EF0A10);
                  v221 = swift_getKeyPath(&unk_100EF0A38);
                  v222 = (void (*)(uint64_t *, _QWORD))static Published.subscript.modify(&v308, v219, v220, v221);
                  v223 = v282;
                  v224 = v296;
                  sub_100C6FB6C(v296, v282);
                  v225 = v223;
                  v198 = v277;
                  sub_10004FF60(v225, &qword_1011E0640);
                  v222(&v308, 0);
                  swift_release();
                  swift_release();
                  v226 = v224;
                  v199 = v276;
                  v227 = swift_release();
                  (*(void (**)(uint64_t, uint64_t, __n128))(v198 + 8))(v226, v300, v227);
                }
                else
                {
                  (*(void (**)(uint64_t, uint64_t))(v198 + 8))(v296, v209);
                  v200 = v282;
                  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v198 + 56))(v282, 1, 1, v209);
                  sub_10004FF60(v200, &qword_1011E0640);
                }
                v101 = v204;
              }
              v201 = *v169;
              v202 = v291;
              v159 = v293;
              dispatch thunk of Collection.endIndex.getter(&v308, v293, v167);
              v203 = v201 == v308;
              v119 = (uint64_t)v202;
            }
            while (!v203);
          }
          sub_10004FF60(v119, &qword_1011E4330);
          v171 = v299;
          swift_beginAccess(v299, &v308, 0, 0);
          v172 = swift_weakLoadStrong(v171);
          v173 = v287;
          if (v172)
          {
            v174 = v172;
            v175 = swift_getKeyPath(&unk_100EF0B00);
            v176 = swift_getKeyPath(&unk_100EF0B28);
            v307 = v173;
            swift_bridgeObjectRetain();
            static Published.subscript.setter(&v307, v174, v175, v176);
          }
          v177 = v299;
          swift_beginAccess(v299, &v307, 0, 0);
          v178 = swift_weakLoadStrong(v177);
          v179 = v252;
          v180 = v288;
          if (v178)
          {
            v181 = v178;
            v182 = swift_getKeyPath(&unk_100EF0AB8);
            v183 = swift_getKeyPath(&unk_100EF0AE0);
            v306 = (uint64_t)v180;
            swift_bridgeObjectRetain();
            static Published.subscript.setter(&v306, v181, v182, v183);
          }
          v184 = v272;
          v185 = v298;
          v186 = (void (*)(char *, uint64_t, uint64_t))v286;
          ((void (*)(char *, uint64_t, uint64_t))v286)(v272, v179, v298);
          v187 = swift_bridgeObjectRetain();
          v188 = Logger.logObject.getter(v187);
          v189 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v188, v189))
          {
            v190 = swift_slowAlloc(12, -1);
            v191 = swift_slowAlloc(32, -1);
            v306 = v191;
            *(_DWORD *)v190 = 136315138;
            v192 = swift_bridgeObjectRetain();
            v193 = Array.description.getter(v192, v300);
            v195 = v194;
            swift_bridgeObjectRelease();
            v196 = (char *)v193;
            v179 = v252;
            *(_QWORD *)(v190 + 4) = sub_100BBDE38(v196, v195, &v306);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n(v180, 2);
            _os_log_impl((void *)&_mh_execute_header, v188, v189, "[Management] pendingCollaborators=%s", (uint8_t *)v190, 0xCu);
            swift_arrayDestroy(v191, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v191, -1, -1);
            v197 = v190;
            v186 = (void (*)(char *, uint64_t, uint64_t))v286;
            swift_slowDealloc(v197, -1, -1);
          }
          else
          {
            swift_bridgeObjectRelease_n(v180, 2);
          }

          v233 = v184;
          v234 = (void (*)(char *, uint64_t, __n128))v280;
          v280(v233, v185);
          v235 = v268;
          v186(v268, v179, v185);
          v236 = v287;
          v237 = swift_bridgeObjectRetain();
          v238 = Logger.logObject.getter(v237);
          v239 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v238, v239))
          {
            v240 = swift_slowAlloc(12, -1);
            v241 = v185;
            v242 = swift_slowAlloc(32, -1);
            v306 = v242;
            *(_DWORD *)v240 = 136315138;
            v243 = swift_bridgeObjectRetain();
            v244 = (char *)Array.description.getter(v243, v300);
            v246 = v245;
            swift_bridgeObjectRelease();
            *(_QWORD *)(v240 + 4) = sub_100BBDE38(v244, v246, &v306);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n(v236, 2);
            _os_log_impl((void *)&_mh_execute_header, v238, v239, "[Management] activeCollaborators=%s", (uint8_t *)v240, 0xCu);
            swift_arrayDestroy(v242, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v242, -1, -1);
            swift_slowDealloc(v240, -1, -1);

            v280(v235, v241);
          }
          else
          {

            v247 = swift_bridgeObjectRelease_n(v236, 2);
            v234(v235, v185, v247);
          }
          v101(v274, v283);
          (*(void (**)(char *, uint64_t))(v297 + 8))(v278, v294);
          (*(void (**)(char *, uint64_t))(v301 + 8))(v295, v302);
          sub_10004FF60((uint64_t)v253, &qword_1011E3C60);
          v116 = v303;
          goto LABEL_31;
        }
        v122 = v299;
        swift_beginAccess(v299, v305, 0, 0);
        v123 = swift_weakLoadStrong(v122);
        v124 = v262;
        if (v123)
        {
          v125 = v123;
          v126 = swift_getKeyPath(&unk_100EF0998);
          swift_getKeyPath(&unk_100EF09C0);
          v127 = v257;
          static Published.subscript.getter(v257, v125, v126);
          swift_release();
          swift_release();
          swift_release();
          v128 = (uint64_t)v256;
          Playlist.collaboration.getter(v129);
          (*(void (**)(_QWORD *, uint64_t))(v266 + 8))(v127, v267);
          v130 = v294;
          if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v288)(v128, 1, v294) != 1)
          {
            ((void (*)(void))Playlist.Collaboration.invitationExpirationDate.getter)();
            v133 = (*(uint64_t (**)(uint64_t, uint64_t))(v86 + 8))(v128, v130);
            v132 = v259;
            v131 = v258;
LABEL_40:
            v134 = v263;
            Playlist.Collaboration.invitationExpirationDate.getter(v133);
            v135 = v261;
            v136 = v261 + *(int *)(v260 + 48);
            sub_10004A160(v124, v261, &qword_1011E3C68);
            sub_10004A160(v134, v136, &qword_1011E3C68);
            v137 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v131 + 48);
            if (v137(v135, 1, v132) == 1)
            {
              sub_10004FF60(v134, &qword_1011E3C68);
              sub_10004FF60(v124, &qword_1011E3C68);
              if (v137(v136, 1, v132) == 1)
              {
                sub_10004FF60(v135, &qword_1011E3C68);
                goto LABEL_49;
              }
            }
            else
            {
              v138 = v255;
              sub_10004A160(v135, v255, &qword_1011E3C68);
              if (v137(v136, 1, v132) != 1)
              {
                v139 = v254;
                (*(void (**)(char *, uint64_t, uint64_t))(v131 + 32))(v254, v136, v132);
                v140 = sub_100048748(&qword_1011E4368, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
                LODWORD(v288) = dispatch thunk of static Equatable.== infix(_:_:)(v138, v139, v132, v140);
                v141 = *(void (**)(char *, uint64_t))(v131 + 8);
                v141(v139, v132);
                sub_10004FF60(v263, &qword_1011E3C68);
                sub_10004FF60(v262, &qword_1011E3C68);
                v141((char *)v138, v132);
                sub_10004FF60(v135, &qword_1011E3C68);
                if ((v288 & 1) != 0)
                  goto LABEL_49;
LABEL_47:
                v142 = v299;
                swift_beginAccess(v299, v304, 0, 0);
                v143 = swift_weakLoadStrong(v142);
                if (v143)
                {
                  v144 = v143;
                  v145 = swift_getKeyPath(&unk_100EF0BD8);
                  v146 = swift_getKeyPath(&unk_100EF0C00);
                  LOBYTE(v308) = 0;
                  static Published.subscript.setter(&v308, v144, v145, v146);
                }
                goto LABEL_49;
              }
              sub_10004FF60(v263, &qword_1011E3C68);
              sub_10004FF60(v124, &qword_1011E3C68);
              (*(void (**)(uint64_t, uint64_t))(v131 + 8))(v138, v132);
            }
            sub_10004FF60(v135, &qword_1011E4338);
            goto LABEL_47;
          }
          sub_10004FF60(v128, &qword_1011E3C60);
        }
        v131 = v258;
        v132 = v259;
        v133 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v258 + 56))(v124, 1, 1, v259);
        goto LABEL_40;
      }
    }
  }
}

uint64_t sub_100C59D90()
{
  return sub_100AE9DC8((uint64_t)&unk_100EF0AB8, (uint64_t)&unk_100EF0AE0);
}

uint64_t sub_100C59DA4()
{
  return sub_100AE9DC8((uint64_t)&unk_100EF0B00, (uint64_t)&unk_100EF0B28);
}

uint64_t sub_100C59DB8()
{
  return sub_100AE9DC8((uint64_t)&unk_100EF0A10, (uint64_t)&unk_100EF0A38);
}

double sub_100C59DCC@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  double result;

  KeyPath = swift_getKeyPath(&unk_100EF0998);
  v4 = swift_getKeyPath(&unk_100EF09C0);
  static Published.subscript.getter(a1, v1, KeyPath, v4);
  swift_release(v4);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

uint64_t sub_100C59E30()
{
  return sub_1003E805C((uint64_t)&unk_100EF0B90, (uint64_t)&unk_100EF0BB8);
}

uint64_t sub_100C59E44()
{
  return sub_1003E805C((uint64_t)&unk_100EF0BD8, (uint64_t)&unk_100EF0C00);
}

uint64_t sub_100C59E58()
{
  return sub_1003E805C((uint64_t)&unk_100EF0320, (uint64_t)&unk_100EF0348);
}

uint64_t sub_100C59E6C()
{
  return sub_1003E805C((uint64_t)&unk_100EF0B48, (uint64_t)&unk_100EF0B70);
}

double sub_100C59E80@<D0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100EF0998);
  v5 = swift_getKeyPath(&unk_100EF09C0);
  static Published.subscript.getter(a2, v3, KeyPath, v5);
  swift_release(v5);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

uint64_t sub_100C59EE8(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t v16;

  v4 = type metadata accessor for Playlist(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v16 - v9;
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v11((char *)&v16 - v9, a1, v4);
  v12 = *a2;
  KeyPath = swift_getKeyPath(&unk_100EF0998);
  v14 = swift_getKeyPath(&unk_100EF09C0);
  v11(v8, (uint64_t)v10, v4);
  swift_retain(v12);
  static Published.subscript.setter(v8, v12, KeyPath, v14);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v4);
}

uint64_t sub_100C59FEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t KeyPath;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  char v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v0 = type metadata accessor for Playlist.Collaborator.Status(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin();
  v31 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_100007E8C(&qword_1011E3C78);
  __chkstk_darwin();
  v35 = (uint64_t)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Playlist(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (uint64_t *)((char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100007E8C(&qword_1011E3C60);
  __chkstk_darwin();
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011E3C80);
  __chkstk_darwin();
  v32 = (uint64_t)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v12 = (char *)&v30 - v11;
  __chkstk_darwin();
  v14 = (char *)&v30 - v13;
  KeyPath = swift_getKeyPath(&unk_100EF0998);
  swift_getKeyPath(&unk_100EF09C0);
  static Published.subscript.getter(v7, v33, KeyPath);
  swift_release();
  swift_release();
  Playlist.collaboration.getter(v16);
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  v17 = type metadata accessor for Playlist.Collaboration(0);
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v9, 1, v17) == 1)
  {
    sub_10004FF60((uint64_t)v9, &qword_1011E3C60);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56))(v14, 1, 1, v0);
  }
  else
  {
    Playlist.Collaboration.collaboratorStatus.getter(v19);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v9, v17);
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v12, enum case for Playlist.Collaborator.Status.pending(_:), v0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1 + 56))(v12, 0, 1, v0);
  v20 = v35;
  v21 = v35 + *(int *)(v34 + 48);
  v22 = &qword_1011E3C80;
  sub_10004A160((uint64_t)v14, v35, &qword_1011E3C80);
  sub_10004A160((uint64_t)v12, v21, &qword_1011E3C80);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
  if (v23(v20, 1, v0) == 1)
  {
    sub_10004FF60((uint64_t)v12, &qword_1011E3C80);
    sub_10004FF60((uint64_t)v14, &qword_1011E3C80);
    if (v23(v21, 1, v0) == 1)
    {
      v24 = -1;
    }
    else
    {
      v22 = &qword_1011E3C78;
      v24 = 0;
    }
  }
  else
  {
    v25 = v32;
    sub_10004A160(v20, v32, &qword_1011E3C80);
    if (v23(v21, 1, v0) == 1)
    {
      sub_10004FF60((uint64_t)v12, &qword_1011E3C80);
      sub_10004FF60((uint64_t)v14, &qword_1011E3C80);
      (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v25, v0);
      v24 = 0;
      v22 = &qword_1011E3C78;
    }
    else
    {
      v26 = v31;
      (*(void (**)(char *, uint64_t, uint64_t))(v1 + 32))(v31, v21, v0);
      v27 = sub_100048748(&qword_1011E3C88, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Collaborator.Status, (uint64_t)&protocol conformance descriptor for Playlist.Collaborator.Status);
      v24 = dispatch thunk of static Equatable.== infix(_:_:)(v25, v26, v0, v27);
      v28 = *(void (**)(char *, uint64_t))(v1 + 8);
      v28(v26, v0);
      v22 = &qword_1011E3C80;
      sub_10004FF60((uint64_t)v12, &qword_1011E3C80);
      sub_10004FF60((uint64_t)v14, &qword_1011E3C80);
      v28((char *)v25, v0);
    }
  }
  sub_10004FF60(v20, v22);
  return v24 & 1;
}

uint64_t sub_100C5A430()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for Playlist(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin();
  v4 = (uint64_t *)((char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  KeyPath = swift_getKeyPath(&unk_100EF0B90);
  swift_getKeyPath(&unk_100EF0BB8);
  static Published.subscript.getter(&v11, v0, KeyPath);
  swift_release();
  swift_release();
  if (v11 == 1 && (sub_100C5AA90() & 1) == 0)
    return 1;
  v6 = swift_getKeyPath(&unk_100EF0998);
  swift_getKeyPath(&unk_100EF09C0);
  static Published.subscript.getter(v4, v0, v6);
  swift_release();
  swift_release();
  v8 = Playlist.isOwner.getter(v7);
  (*(void (**)(_QWORD *, uint64_t))(v2 + 8))(v4, v1);
  if (v8 == 2)
    return 0;
  else
    return v8 & 1;
}

uint64_t sub_100C5A570()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  KeyPath = swift_getKeyPath(&unk_100EF0B48);
  swift_getKeyPath(&unk_100EF0B70);
  static Published.subscript.getter(&v8, v0, KeyPath);
  swift_release();
  swift_release();
  if (v8 == 1)
  {
    v2 = swift_getKeyPath(&unk_100EF0AB8);
    swift_getKeyPath(&unk_100EF0AE0);
    static Published.subscript.getter(&v8, v0, v2);
    swift_release();
    swift_release();
    v3 = v8;
    v4 = swift_getKeyPath(&unk_100EF0B00);
    swift_getKeyPath(&unk_100EF0B28);
    static Published.subscript.getter(&v8, v0, v4);
    swift_release();
    swift_release();
    v5 = v8;
    v8 = v3;
    sub_100C57794(v5);
  }
  else
  {
    v6 = swift_getKeyPath(&unk_100EF0B00);
    swift_getKeyPath(&unk_100EF0B28);
    static Published.subscript.getter(&v8, v0, v6);
    swift_release();
    swift_release();
  }
  return v8;
}

uint64_t sub_100C5A6D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  Swift::String v16;
  unint64_t v17;
  unint64_t v18;
  Swift::String v19;
  Swift::String v20;
  uint64_t v21;
  Swift::String v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for String.LocalizationValue(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v9 = (char *)&v25 - v8;
  type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  __chkstk_darwin();
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100EF0AB8);
  swift_getKeyPath(&unk_100EF0AE0);
  static Published.subscript.getter(&v26, v1, KeyPath);
  swift_release();
  swift_release();
  v13 = *(_QWORD *)(v26 + 16);
  swift_bridgeObjectRelease();
  v14 = swift_getKeyPath(&unk_100EF0B00);
  swift_getKeyPath(&unk_100EF0B28);
  static Published.subscript.getter(&v26, v1, v14);
  swift_release();
  swift_release();
  v15 = *(_QWORD *)(v26 + 16);
  swift_bridgeObjectRelease();
  if (v15 == 1)
  {
    if (!v13)
      return 0;
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(18, 1);
    v16._countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v16);
    v26 = v13;
    String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(&v26, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
    v17 = 0xD000000000000012;
    v18 = 0x8000000100E56BF0;
  }
  else if (v13)
  {
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(20, 2);
    v19._countAndFlagsBits = 0;
    v19._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v19);
    v26 = v15;
    String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(&v26, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
    v20._countAndFlagsBits = 0x2064656E696F6A20;
    v20._object = (void *)0xAC00000020A280E2;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v20);
    v26 = v13;
    String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(&v26, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
    v17 = 0x676E69646E657020;
    v18 = 0xE800000000000000;
  }
  else
  {
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(17, 1);
    v22._countAndFlagsBits = 0;
    v22._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v22);
    v26 = v15;
    String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(&v26, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
    v18 = 0x8000000100E56BD0;
    v17 = 0xD000000000000011;
  }
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v17);
  String.LocalizationValue.init(stringInterpolation:)(v11);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v9, v4);
  if (qword_1011DDE30 != -1)
    swift_once(&qword_1011DDE30, sub_100BA7618);
  v23 = qword_10124F040;
  static Locale.current.getter((id)qword_10124F040);
  v21 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v23, v3, 0, 0, 256);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
  return v21;
}

uint64_t sub_100C5AA90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  _QWORD v22[2];

  v0 = type metadata accessor for Playlist(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin();
  v3 = (_QWORD *)((char *)v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100007E8C(&qword_1011E3C60);
  __chkstk_darwin();
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011E3C68);
  __chkstk_darwin();
  v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin();
  v22[0] = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v12 = (char *)v22 - v11;
  KeyPath = swift_getKeyPath(&unk_100EF0998);
  swift_getKeyPath(&unk_100EF09C0);
  static Published.subscript.getter(v3, v22[1], KeyPath);
  swift_release();
  swift_release();
  Playlist.collaboration.getter(v14);
  (*(void (**)(_QWORD *, uint64_t))(v1 + 8))(v3, v0);
  v15 = type metadata accessor for Playlist.Collaboration(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v5, 1, v15) == 1)
  {
    sub_10004FF60((uint64_t)v5, &qword_1011E3C60);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
  }
  else
  {
    Playlist.Collaboration.invitationExpirationDate.getter();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v15);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
    {
      v18 = (*(uint64_t (**)(char *, char *, uint64_t))(v9 + 32))(v12, v7, v8);
      v19 = v22[0];
      Date.init()(v18);
      v17 = static Date.> infix(_:_:)(v19, v12);
      v20 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
      v20(v19, v8);
      v20((uint64_t)v12, v8);
      return v17 & 1;
    }
  }
  sub_10004FF60((uint64_t)v7, &qword_1011E3C68);
  v17 = 1;
  return v17 & 1;
}

uint64_t sub_100C5AD28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t KeyPath;
  uint64_t v27;
  void (*v28)(_QWORD *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  void *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  __n128 v56;
  void (*v57)(char *, uint64_t, __n128);
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  char *v65;
  Swift::String v66;
  unint64_t v67;
  unint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  id v74;
  char *v75;
  Swift::String v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  id v82;
  char *v83;
  uint64_t v84;
  _QWORD *v85;
  char *v86;
  _QWORD *v87;
  char *v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  _QWORD v103[2];

  v1 = v0;
  type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  __chkstk_darwin();
  v86 = (char *)&v84 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Calendar(0);
  v95 = *(_QWORD *)(v3 - 8);
  v96 = v3;
  v4 = __chkstk_darwin();
  v94 = (char *)&v84 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DateComponents(0, v4);
  v98 = *(_QWORD *)(v6 - 8);
  v99 = v6;
  __chkstk_darwin();
  v97 = (char *)&v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v89 = (char *)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  v91 = *(_QWORD *)(v9 - 8);
  v92 = v9;
  __chkstk_darwin();
  v88 = (char *)&v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v90 = (char *)&v84 - v11;
  v12 = type metadata accessor for Playlist(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin();
  v85 = (uint64_t *)((char *)&v84 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  v87 = (uint64_t *)((char *)&v84 - v15);
  __chkstk_darwin();
  v17 = (uint64_t *)((char *)&v84 - v16);
  sub_100007E8C(&qword_1011E3C60);
  __chkstk_darwin();
  v19 = (char *)&v84 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011E3C68);
  __chkstk_darwin();
  v21 = (char *)&v84 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for Date(0);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin();
  v93 = (char *)&v84 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v102 = (char *)&v84 - v25;
  KeyPath = swift_getKeyPath(&unk_100EF0998);
  swift_getKeyPath(&unk_100EF09C0);
  v101 = v1;
  static Published.subscript.getter(v17, v1, KeyPath);
  swift_release();
  swift_release();
  Playlist.collaboration.getter(v27);
  v28 = *(void (**)(_QWORD *, uint64_t))(v13 + 8);
  v100 = v12;
  v28(v17, v12);
  v29 = type metadata accessor for Playlist.Collaboration(0);
  v30 = *(_QWORD *)(v29 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v19, 1, v29) == 1)
  {
    sub_10004FF60((uint64_t)v19, &qword_1011E3C60);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v21, 1, 1, v22);
LABEL_4:
    sub_10004FF60((uint64_t)v21, &qword_1011E3C68);
    return 0;
  }
  Playlist.Collaboration.invitationExpirationDate.getter();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v19, v29);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
    goto LABEL_4;
  v33 = v22;
  v34 = v23;
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v102, v21, v22);
  v35 = v101;
  v36 = sub_100C5AA90();
  if ((v36 & 1) == 0)
    goto LABEL_9;
  v37 = swift_getKeyPath(&unk_100EF0998);
  swift_getKeyPath(&unk_100EF09C0);
  v38 = v87;
  static Published.subscript.getter(v87, v35, v37);
  swift_release();
  swift_release();
  LOBYTE(v37) = Playlist.isOwner.getter(v39);
  v36 = ((uint64_t (*)(_QWORD *, uint64_t))v28)(v38, v100);
  if ((v37 & 1) != 0)
  {
    v69 = v90;
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000069, 0x8000000100E56B60);
    v71 = v91;
    v70 = v92;
    v72 = v88;
    (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v88, v69, v92);
    if (qword_1011DDE30 != -1)
      swift_once(&qword_1011DDE30, sub_100BA7618);
    v73 = qword_10124F040;
    v74 = (id)qword_10124F040;
    v75 = v89;
    static Locale.current.getter(v74);
    v31 = String.init(localized:table:bundle:locale:comment:)(v72, 0, 0, v73, v75, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v71 + 8))(v69, v70);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v102, v33);
  }
  else
  {
LABEL_9:
    v40 = v94;
    static Calendar.autoupdatingCurrent.getter(v36);
    v41 = sub_100007E8C(&qword_1011E3C70);
    v43 = type metadata accessor for Calendar.Component(0, v42);
    v44 = *(_QWORD *)(v43 - 8);
    v45 = *(unsigned __int8 *)(v44 + 80);
    v46 = (v45 + 32) & ~v45;
    v47 = swift_allocObject(v41, v46 + *(_QWORD *)(v44 + 72), v45 | 7);
    *(_OWORD *)(v47 + 16) = xmmword_100EA7AA0;
    v48 = v47 + v46;
    v49.n128_f64[0] = (*(double (**)(uint64_t, _QWORD, uint64_t))(v44 + 104))(v48, enum case for Calendar.Component.day(_:), v43);
    v50 = sub_100BC01CC(v47, v49);
    swift_setDeallocating(v47);
    swift_arrayDestroy(v48, 1, v43);
    v51 = swift_deallocClassInstance(v47, 32, 7);
    v52 = v93;
    Date.init()(v51);
    v53 = v97;
    v54 = v102;
    Calendar.dateComponents(_:from:to:)(v50, v52, v102);
    v55 = v22;
    v56 = swift_bridgeObjectRelease();
    v57 = *(void (**)(char *, uint64_t, __n128))(v34 + 8);
    v57(v52, v22, v56);
    v58 = (*(uint64_t (**)(char *, uint64_t))(v95 + 8))(v40, v96);
    v59 = DateComponents.day.getter(v58);
    if ((v60 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t))(v98 + 8))(v53, v99);
      ((void (*)(char *, uint64_t))v57)(v54, v22);
      return 0;
    }
    v61 = v59;
    v62 = swift_getKeyPath(&unk_100EF0998);
    swift_getKeyPath(&unk_100EF09C0);
    v63 = v85;
    static Published.subscript.getter(v85, v101, v62);
    swift_release();
    swift_release();
    LOBYTE(v62) = Playlist.isOwner.getter(v64);
    v28(v63, v100);
    if ((v62 & 1) != 0)
    {
      v65 = v86;
      String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(124, 1);
      v76._object = (void *)0x8000000100E56AD0;
      v76._countAndFlagsBits = 0xD000000000000010;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v76);
      v103[0] = v61;
      String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(v103, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
      v67 = 0xD00000000000006CLL;
      v68 = 0x8000000100E56AF0;
    }
    else
    {
      v65 = v86;
      String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(24, 1);
      v66._object = (void *)0x8000000100E56AD0;
      v66._countAndFlagsBits = 0xD000000000000010;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v66);
      v103[0] = v61;
      String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(v103, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
      v67 = 0x2E29732879616420;
      v68 = 0xE800000000000000;
    }
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v67);
    v77 = v90;
    String.LocalizationValue.init(stringInterpolation:)(v65);
    v79 = v91;
    v78 = v92;
    v80 = v88;
    (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v88, v77, v92);
    if (qword_1011DDE30 != -1)
      swift_once(&qword_1011DDE30, sub_100BA7618);
    v81 = qword_10124F040;
    v82 = (id)qword_10124F040;
    v83 = v89;
    static Locale.current.getter(v82);
    v31 = String.init(localized:table:bundle:locale:comment:)(v80, 0, 0, v81, v83, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v79 + 8))(v77, v78);
    (*(void (**)(char *, uint64_t))(v98 + 8))(v53, v99);
    ((void (*)(char *, uint64_t))v57)(v54, v55);
  }
  return v31;
}

uint64_t sub_100C5B5B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = type metadata accessor for Playlist(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v6 = (uint64_t *)((char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100007E8C(&qword_1011E3C60);
  __chkstk_darwin();
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_100C5AA90() & 1) != 0)
  {
    v9 = type metadata accessor for URL(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a1, 1, 1, v9);
  }
  else
  {
    KeyPath = swift_getKeyPath(&unk_100EF0998);
    swift_getKeyPath(&unk_100EF09C0);
    static Published.subscript.getter(v6, v1, KeyPath);
    swift_release();
    swift_release();
    Playlist.collaboration.getter(v12);
    (*(void (**)(_QWORD *, uint64_t))(v4 + 8))(v6, v3);
    v13 = type metadata accessor for Playlist.Collaboration(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v8, 1, v13) == 1)
    {
      sub_10004FF60((uint64_t)v8, &qword_1011E3C60);
      v15 = type metadata accessor for URL(0);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a1, 1, 1, v15);
    }
    else
    {
      Playlist.Collaboration.invitationURL.getter();
      return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v8, v13);
    }
  }
}

uint64_t sub_100C5B784@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v11[24];
  _BYTE v12[24];

  sub_100007E8C(&qword_1011E3098);
  __chkstk_darwin();
  v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  v6 = &v11[-v5];
  v7 = v1
     + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model____lazy_storage___artworkViewModel;
  swift_beginAccess(v1 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model____lazy_storage___artworkViewModel, v12, 0, 0);
  sub_10004A160(v7, (uint64_t)v6, &qword_1011E3098);
  v8 = sub_100007E8C((uint64_t *)&unk_1011E4DA0);
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1)
    return sub_100065228((uint64_t)v6, (uint64_t)a1, (uint64_t *)&unk_1011E4DA0);
  sub_10004FF60((uint64_t)v6, &qword_1011E3098);
  sub_100C5B908(v1, a1);
  sub_10004A160((uint64_t)a1, (uint64_t)v4, (uint64_t *)&unk_1011E4DA0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v4, 0, 1, v8);
  swift_beginAccess(v7, v11, 33, 0);
  sub_1000A5508((uint64_t)v4, v7, &qword_1011E3098);
  return swift_endAccess(v11);
}

uint64_t sub_100C5B908@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t KeyPath;
  uint64_t v16;
  uint64_t v17;
  void (*v19)(char *, char *, uint64_t);
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;

  v29 = a2;
  sub_100007E8C(&qword_1011DEFB0);
  __chkstk_darwin();
  v28 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C((uint64_t *)&unk_1011E4A00);
  __chkstk_darwin();
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Playlist(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = (uint64_t *)((char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = type metadata accessor for Artwork(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin();
  v27 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v14 = (char *)&v26 - v13;
  KeyPath = swift_getKeyPath(&unk_100EF0998);
  swift_getKeyPath(&unk_100EF09C0);
  static Published.subscript.getter(v9, a1, KeyPath);
  swift_release();
  swift_release();
  Playlist.artwork.getter(v16);
  (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v5, 1, v10) == 1)
  {
    sub_10004FF60((uint64_t)v5, (uint64_t *)&unk_1011E4A00);
    v17 = type metadata accessor for ArtworkImage.ViewModel(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v29, 1, 1, v17);
  }
  else
  {
    v19 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v19(v14, v5, v10);
    v20 = v27;
    v21 = (*(uint64_t (**)(char *, char *, uint64_t))(v11 + 16))(v27, v14, v10);
    v22 = (uint64_t)v28;
    static Artwork.CropStyle.boundedBox.getter(v21);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    v23 = type metadata accessor for Artwork.CropStyle(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 0, 1, v23);
    v24 = v29;
    v19(v29, v20, v10);
    v25 = type metadata accessor for ArtworkImage.ViewModel(0);
    sub_100065228(v22, (uint64_t)&v24[*(int *)(v25 + 20)], &qword_1011DEFB0);
    return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v24, 0, 1, v25);
  }
}

uint64_t sub_100C5BBC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v5 + 80) = a5;
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a4;
  v6 = type metadata accessor for Playlist(0);
  *(_QWORD *)(v5 + 32) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 40) = v7;
  *(_QWORD *)(v5 + 48) = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100C5BC28, 0, 0);
}

uint64_t sub_100C5BC28()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t KeyPath;
  _QWORD *v4;

  v1 = *(_QWORD **)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(v0 + 56) = *(_QWORD *)(v2 + 16);
  KeyPath = swift_getKeyPath(&unk_100EF0998);
  swift_getKeyPath(&unk_100EF09C0);
  swift_retain();
  static Published.subscript.getter(v1, v2, KeyPath);
  swift_release();
  swift_release();
  v4 = (_QWORD *)swift_task_alloc(dword_1011D68F4);
  *(_QWORD *)(v0 + 64) = v4;
  *v4 = v0;
  v4[1] = sub_100C5BCEC;
  return Collaboration.Manager.updateShareOption(_:for:)(*(_BYTE *)(v0 + 80), *(_QWORD *)(v0 + 48));
}

uint64_t sub_100C5BCEC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 64);
  *(_QWORD *)(*v1 + 72) = v0;
  swift_task_dealloc(v3);
  v4 = *(_QWORD *)(v2 + 48);
  v7 = v2 + 32;
  v5 = *(_QWORD *)(v2 + 32);
  v6 = *(_QWORD *)(v7 + 8);
  if (v0)
  {
    swift_release();
    swift_errorRelease(v0);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    v8 = sub_100C77E30;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    swift_release();
    v8 = sub_100C5BDA0;
  }
  return swift_task_switch(v8, 0, 0);
}

uint64_t sub_100C5BDA0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  **(_BYTE **)(v0 + 16) = *(_QWORD *)(v0 + 72) != 0;
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_100C5BDE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t *v7;
  int v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  double result;
  _QWORD v22[4];

  v1 = v0;
  sub_100007E8C(&qword_1011E0490);
  __chkstk_darwin();
  v3 = (char *)v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TaskPriority(0);
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
  v6 = (_QWORD *)swift_allocObject(&unk_10110B740, 40, 7);
  v6[2] = 0;
  v7 = v6 + 2;
  v6[3] = 0;
  v6[4] = v1;
  v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  v9 = swift_retain();
  if (v8 == 1)
  {
    sub_10004FF60((uint64_t)v3, &qword_1011E0490);
    v10 = 0;
    v11 = 0;
    v12 = 7168;
  }
  else
  {
    v13 = TaskPriority.rawValue.getter(v9);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
    v12 = v13 | 0x1C00;
    v14 = *v7;
    if (*v7)
    {
      v15 = v6[3];
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v14, v17);
      v10 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v15);
      v11 = v18;
      swift_unknownObjectRelease(v14);
    }
    else
    {
      v10 = 0;
      v11 = 0;
    }
  }
  v19 = swift_allocObject(&unk_10110B768, 32, 7);
  *(_QWORD *)(v19 + 16) = &unk_1011E3C50;
  *(_QWORD *)(v19 + 24) = v6;
  if (v11 | v10)
  {
    v22[0] = 0;
    v22[1] = 0;
    v20 = v22;
    v22[2] = v10;
    v22[3] = v11;
  }
  else
  {
    v20 = 0;
  }
  swift_task_create(v12, v20, (char *)&type metadata for () + 8, &unk_1011E0708, v19);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100C5BFB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v4[2] = a4;
  v5 = type metadata accessor for Playlist(0);
  v4[3] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[4] = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[5] = swift_task_alloc(v7);
  v4[6] = swift_task_alloc(v7);
  return swift_task_switch(sub_100C5C028, 0, 0);
}

uint64_t sub_100C5C028()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t KeyPath;
  _QWORD *v4;

  v1 = (_QWORD *)v0[5];
  v2 = v0[2];
  v0[7] = *(_QWORD *)(v2 + 16);
  KeyPath = swift_getKeyPath(&unk_100EF0998);
  swift_getKeyPath(&unk_100EF09C0);
  swift_retain();
  static Published.subscript.getter(v1, v2, KeyPath);
  swift_release();
  swift_release();
  v4 = (_QWORD *)swift_task_alloc(dword_1011D68CC);
  v0[8] = v4;
  *v4 = v0;
  v4[1] = sub_100C5C0E8;
  return Collaboration.Manager.end(_:)(v0[6], v0[5]);
}

uint64_t sub_100C5C0E8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)();
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  __n128 v10;
  void (*v11)(uint64_t, uint64_t, __n128);

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    (*(void (**)(_QWORD, _QWORD))(v2[4] + 8))(v2[5], v2[3]);
    swift_release();
    v4 = sub_100C5C1DC;
  }
  else
  {
    v6 = v2[5];
    v5 = v2[6];
    v9 = v2 + 3;
    v7 = v2[3];
    v8 = v9[1];
    v10 = swift_release();
    v11 = *(void (**)(uint64_t, uint64_t, __n128))(v8 + 8);
    v11(v6, v7, v10);
    ((void (*)(uint64_t, uint64_t))v11)(v5, v7);
    v4 = sub_100C5C1A4;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100C5C1A4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 48));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100C5C1DC()
{
  _QWORD *v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;

  v0[10] = *(_QWORD *)(v0[2] + 16);
  v1 = type metadata accessor for MainActor(0);
  v2 = swift_retain();
  v0[11] = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_100C5C258, v3, v4);
}

uint64_t sub_100C5C258()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 72);
  swift_release();
  Collaboration.Manager.handleError(_:)(v1);
  swift_release();
  return swift_task_switch(sub_100C5C2A8, 0, 0);
}

uint64_t sub_100C5C2A8()
{
  uint64_t v0;
  uint64_t v1;

  swift_errorRelease(*(_QWORD *)(v0 + 72));
  v1 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 48));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100C5C2E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[2] = a4;
  v5 = type metadata accessor for Playlist(0);
  v4[3] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[4] = v6;
  v4[5] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for URL(0);
  v4[6] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[7] = v8;
  v4[8] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100C5C370, 0, 0);
}

uint64_t sub_100C5C370()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t KeyPath;
  _QWORD *v4;

  v1 = (_QWORD *)v0[5];
  v2 = v0[2];
  v0[9] = *(_QWORD *)(v2 + 16);
  KeyPath = swift_getKeyPath(&unk_100EF0998);
  swift_getKeyPath(&unk_100EF09C0);
  swift_retain();
  static Published.subscript.getter(v1, v2, KeyPath);
  swift_release();
  swift_release();
  v4 = (_QWORD *)swift_task_alloc(dword_1011D68EC);
  v0[10] = v4;
  *v4 = v0;
  v4[1] = sub_100C5C434;
  return Collaboration.Manager.resetInvitationURL(_:)(v0[8], v0[5]);
}

uint64_t sub_100C5C434()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)();
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  __n128 v12;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    (*(void (**)(_QWORD, _QWORD))(v2[4] + 8))(v2[5], v2[3]);
    swift_release();
    v4 = sub_100C5C53C;
  }
  else
  {
    v6 = v2[7];
    v5 = v2[8];
    v8 = v2[5];
    v7 = v2[6];
    v11 = v2 + 3;
    v9 = v2[3];
    v10 = v11[1];
    v12 = swift_release();
    (*(void (**)(uint64_t, uint64_t, __n128))(v10 + 8))(v8, v9, v12);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    v4 = sub_100C5C500;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100C5C500()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 64));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100C5C53C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 16);
  KeyPath = swift_getKeyPath(&unk_100EF0BD8);
  v3 = swift_getKeyPath(&unk_100EF0C00);
  *(_BYTE *)(v0 + 112) = 0;
  swift_retain();
  static Published.subscript.setter(v0 + 112, v1, KeyPath, v3);
  *(_QWORD *)(v0 + 96) = *(_QWORD *)(v1 + 16);
  v4 = type metadata accessor for MainActor(0);
  v5 = swift_retain();
  *(_QWORD *)(v0 + 104) = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  return swift_task_switch(sub_100C5C604, v6, v7);
}

uint64_t sub_100C5C604()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 88);
  swift_release();
  Collaboration.Manager.handleError(_:)(v1);
  swift_release();
  return swift_task_switch(sub_100C5C654, 0, 0);
}

uint64_t sub_100C5C654()
{
  uint64_t v0;
  uint64_t v1;

  swift_errorRelease(*(_QWORD *)(v0 + 88));
  v1 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 64));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100C5C698(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __n128 v18;
  uint64_t result;
  uint64_t v20;

  sub_100007E8C(&qword_1011E0490);
  __chkstk_darwin();
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011E0640);
  __chkstk_darwin();
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Playlist.Collaborator(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin();
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v12 = (char *)&v20 - v11;
  sub_10004A160(a1, (uint64_t)v6, &qword_1011E0640);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_10004FF60((uint64_t)v6, &qword_1011E0640);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x73736F7020746F4ELL, 0xEC000000656C6269, "MusicCoreUI/CollaborationUI.swift", 33, 2, 211, 0);
    __break(1u);
  }
  else
  {
    v13 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v13(v12, v6, v7);
    v14 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v4, 1, 1, v14);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v12, v7);
    v15 = *(unsigned __int8 *)(v8 + 80);
    v16 = (v15 + 40) & ~v15;
    v17 = (char *)swift_allocObject(&unk_10110B718, v16 + v9, v15 | 7);
    *((_QWORD *)v17 + 2) = 0;
    *((_QWORD *)v17 + 3) = 0;
    *((_QWORD *)v17 + 4) = v1;
    v13(&v17[v16], v10, v7);
    swift_retain();
    sub_100BF76B8((uint64_t)v4, (uint64_t)&unk_1011E3C40, (uint64_t)v17);
    v18 = swift_release();
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v8 + 8))(v12, v7, v18);
  }
  return result;
}

uint64_t sub_100C5C8EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v5[2] = a4;
  v5[3] = a5;
  v6 = type metadata accessor for Playlist(0);
  v5[4] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[5] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[6] = swift_task_alloc(v8);
  v5[7] = swift_task_alloc(v8);
  return swift_task_switch(sub_100C5C95C, 0, 0);
}

uint64_t sub_100C5C95C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t KeyPath;
  _QWORD *v4;

  v1 = (_QWORD *)v0[6];
  v2 = v0[2];
  v0[8] = *(_QWORD *)(v2 + 16);
  KeyPath = swift_getKeyPath(&unk_100EF0998);
  swift_getKeyPath(&unk_100EF09C0);
  swift_retain();
  static Published.subscript.getter(v1, v2, KeyPath);
  swift_release();
  swift_release();
  v4 = (_QWORD *)swift_task_alloc(dword_1011D68E4);
  v0[9] = v4;
  *v4 = v0;
  v4[1] = sub_100C5CA20;
  return Collaboration.Manager.remove(collaborator:in:)(v0[7], v0[3], v0[6]);
}

uint64_t sub_100C5CA20()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)();
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  __n128 v10;
  void (*v11)(uint64_t, uint64_t, __n128);

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    (*(void (**)(_QWORD, _QWORD))(v2[5] + 8))(v2[6], v2[4]);
    swift_release();
    v4 = sub_100C5CB14;
  }
  else
  {
    v6 = v2[6];
    v5 = v2[7];
    v9 = v2 + 4;
    v7 = v2[4];
    v8 = v9[1];
    v10 = swift_release();
    v11 = *(void (**)(uint64_t, uint64_t, __n128))(v8 + 8);
    v11(v6, v7, v10);
    ((void (*)(uint64_t, uint64_t))v11)(v5, v7);
    v4 = sub_100C5CADC;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100C5CADC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 56));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100C5CB14()
{
  _QWORD *v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;

  v0[11] = *(_QWORD *)(v0[2] + 16);
  v1 = type metadata accessor for MainActor(0);
  v2 = swift_retain();
  v0[12] = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_100C5CB90, v3, v4);
}

uint64_t sub_100C5CB90()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  swift_release();
  Collaboration.Manager.handleError(_:)(v1);
  swift_release();
  return swift_task_switch(sub_100C5CBE0, 0, 0);
}

uint64_t sub_100C5CBE0()
{
  uint64_t v0;
  uint64_t v1;

  swift_errorRelease(*(_QWORD *)(v0 + 80));
  v1 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 56));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_100C5CC20(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t, uint64_t, __n128);
  uint64_t KeyPath;
  uint64_t v16;
  void (*v17)(_BYTE *, _QWORD);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  _BYTE v27[32];

  v3 = v2;
  v24 = a1;
  v26 = a2 & 1;
  sub_100007E8C(&qword_1011E0490);
  __chkstk_darwin();
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Playlist.Collaborator(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin();
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin();
  v13 = (char *)&v23 - v12;
  v14 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16);
  v14(v10, a1, v7, v11);
  KeyPath = swift_getKeyPath(&unk_100EF0A10);
  v16 = swift_getKeyPath(&unk_100EF0A38);
  v17 = (void (*)(_BYTE *, _QWORD))static Published.subscript.modify(v27, v3, KeyPath, v16);
  sub_100C6E544((uint64_t)v13, (uint64_t)v10);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  v17(v27, 0);
  swift_release();
  swift_release();
  v18 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v6, 1, 1, v18);
  ((void (*)(char *, uint64_t, uint64_t))v14)(v13, v24, v7);
  v19 = *(unsigned __int8 *)(v8 + 80);
  v20 = (v19 + 41) & ~v19;
  v21 = swift_allocObject(&unk_10110B6C8, v20 + v9, v19 | 7);
  *(_QWORD *)(v21 + 16) = 0;
  *(_QWORD *)(v21 + 24) = 0;
  *(_QWORD *)(v21 + 32) = v25;
  *(_BYTE *)(v21 + 40) = v26;
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v21 + v20, v13, v7);
  swift_retain();
  sub_100BF76B8((uint64_t)v6, (uint64_t)&unk_1011E3C08, v21);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100C5CE2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_BYTE *)(v6 + 136) = a5;
  *(_QWORD *)(v6 + 16) = a4;
  *(_QWORD *)(v6 + 24) = a6;
  v7 = type metadata accessor for Playlist.Collaborator(0);
  *(_QWORD *)(v6 + 32) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v6 + 40) = v8;
  v9 = *(_QWORD *)(v8 + 64);
  *(_QWORD *)(v6 + 48) = v9;
  *(_QWORD *)(v6 + 56) = swift_task_alloc((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011E0490);
  *(_QWORD *)(v6 + 64) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Playlist(0);
  *(_QWORD *)(v6 + 72) = v11;
  v12 = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v6 + 80) = v12;
  *(_QWORD *)(v6 + 88) = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100C5CEE0, 0, 0);
}

uint64_t sub_100C5CEE0()
{
  uint64_t v0;
  _QWORD *v1;
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  _QWORD *v5;

  v1 = *(_QWORD **)(v0 + 88);
  v2 = *(_BYTE *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 96) = *(_QWORD *)(v3 + 16);
  KeyPath = swift_getKeyPath(&unk_100EF0998);
  swift_getKeyPath(&unk_100EF09C0);
  swift_retain();
  static Published.subscript.getter(v1, v3, KeyPath);
  swift_release();
  swift_release();
  v5 = (_QWORD *)swift_task_alloc(dword_1011D68D4);
  *(_QWORD *)(v0 + 104) = v5;
  *v5 = v0;
  v5[1] = sub_100C5CFAC;
  return Collaboration.Manager.moderate(_:collaborator:in:)(v2 & 1, *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 88));
}

uint64_t sub_100C5CFAC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(*v1 + 104);
  v4 = *(_QWORD *)(*v1 + 80);
  v3 = *(_QWORD *)(*v1 + 88);
  v5 = *(_QWORD *)(*v1 + 72);
  v6 = *v1;
  *(_QWORD *)(v6 + 112) = v0;
  swift_task_dealloc(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  swift_release();
  if (v0)
    return swift_task_switch(sub_100C5D06C, 0, 0);
  v8 = *(_QWORD *)(v6 + 56);
  v9 = *(_QWORD *)(v6 + 64);
  swift_task_dealloc(*(_QWORD *)(v6 + 88));
  swift_task_dealloc(v9);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v6 + 8))();
}

uint64_t sub_100C5D06C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;

  v2 = v0[7];
  v1 = v0[8];
  v4 = v0[5];
  v3 = v0[6];
  v5 = v0[3];
  v6 = v0[4];
  v7 = v0[2];
  v8 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v1, 1, 1, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v5, v6);
  v9 = type metadata accessor for MainActor(0);
  v10 = swift_retain();
  v11 = static MainActor.shared.getter(v10);
  v12 = *(unsigned __int8 *)(v4 + 80);
  v13 = (v12 + 40) & ~v12;
  v14 = (char *)swift_allocObject(&unk_10110B6F0, v13 + v3, v12 | 7);
  *((_QWORD *)v14 + 2) = v11;
  *((_QWORD *)v14 + 3) = &protocol witness table for MainActor;
  *((_QWORD *)v14 + 4) = v7;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(&v14[v13], v2, v6);
  sub_100BF7820(v1, (uint64_t)&unk_1011E3C18, (uint64_t)v14);
  swift_release();
  v0[15] = *(_QWORD *)(v7 + 16);
  v15 = swift_retain();
  v0[16] = static MainActor.shared.getter(v15);
  v16 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  return swift_task_switch(sub_100C5D1BC, v16, v17);
}

uint64_t sub_100C5D1BC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 112);
  swift_release();
  Collaboration.Manager.handleError(_:)(v1);
  swift_release();
  return swift_task_switch(sub_100C5D20C, 0, 0);
}

uint64_t sub_100C5D20C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_errorRelease(*(_QWORD *)(v0 + 112));
  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 88));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100C5D258(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v5[7] = a4;
  v5[8] = a5;
  v5[6] = a1;
  v6 = type metadata accessor for MainActor(0);
  v5[9] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_100C5D2C8, v8, v9);
}

uint64_t sub_100C5D2C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  void (*v6)(uint64_t, _QWORD);
  __n128 v7;

  v1 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  swift_release();
  KeyPath = swift_getKeyPath(&unk_100EF0A10);
  v5 = swift_getKeyPath(&unk_100EF0A38);
  v6 = (void (*)(uint64_t, _QWORD))static Published.subscript.modify(v0 + 16, v2, KeyPath, v5);
  sub_100C6FB6C(v1, v3);
  v6(v0 + 16, 0);
  swift_release();
  v7 = swift_release();
  return (*(uint64_t (**)(__n128))(v0 + 8))(v7);
}

uint64_t Collaboration.Management.Model.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);

  swift_release();
  v1 = v0 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__pendingCollaborators;
  v2 = sub_100007E8C(&qword_1011E3038);
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__activeCollaborators, v2);
  v4 = v0 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__transientCollaborators;
  v5 = sub_100007E8C(&qword_1011E3050);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = v0 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__playlist;
  v7 = sub_100007E8C(&qword_1011E3060);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = v0 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__isOpen;
  v9 = sub_100007E8C(&qword_1011E3070);
  v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
  v10(v8, v9);
  v10(v0 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__isResetingURL, v9);
  v10(v0 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__shouldDismiss, v9);
  v10(v0 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__hasNetworkConnectivity, v9);
  sub_10004FF60(v0 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model____lazy_storage___artworkViewModel, &qword_1011E3098);
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t Collaboration.Management.Model.__deallocating_deinit()
{
  uint64_t v0;

  Collaboration.Management.Model.deinit();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100C5D514@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for Collaboration.Management.Model(0);
  result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

uint64_t Collaboration.Management.View.init(model:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  int *v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;

  v4 = (int *)type metadata accessor for Collaboration.Management.View(0);
  v5 = (uint64_t *)((char *)a2 + v4[5]);
  *v5 = swift_getKeyPath(&unk_100EF0290);
  v6 = sub_100007E8C(&qword_1011E4D50);
  swift_storeEnumTagMultiPayload(v5, v6, 0);
  v7 = (uint64_t *)((char *)a2 + v4[6]);
  *v7 = swift_getKeyPath(&unk_100EF02C0);
  v8 = sub_100007E8C(&qword_1011DE430);
  swift_storeEnumTagMultiPayload(v7, v8, 0);
  v9 = (uint64_t *)((char *)a2 + v4[7]);
  *v9 = swift_getKeyPath(&unk_100EF02F0);
  v10 = sub_100007E8C(&qword_1011DE438);
  swift_storeEnumTagMultiPayload(v9, v10, 0);
  v11 = v4[8];
  v25 = 0;
  v12 = sub_100007E8C(&qword_1011E30C0);
  State.init(wrappedValue:)(&v25, v12);
  *(_OWORD *)((char *)a2 + v11) = v26;
  v13 = (char *)a2 + v4[9];
  LOBYTE(v25) = 0;
  State.init(wrappedValue:)(&v25, &type metadata for Bool);
  v14 = *((_QWORD *)&v26 + 1);
  *v13 = v26;
  *((_QWORD *)v13 + 1) = v14;
  v15 = (char *)a2 + v4[10];
  LOBYTE(v25) = 0;
  State.init(wrappedValue:)(&v25, &type metadata for Bool);
  v16 = *((_QWORD *)&v26 + 1);
  *v15 = v26;
  *((_QWORD *)v15 + 1) = v16;
  v17 = (char *)a2 + v4[11];
  LOBYTE(v25) = 0;
  State.init(wrappedValue:)(&v25, &type metadata for Bool);
  v18 = *((_QWORD *)&v26 + 1);
  *v17 = v26;
  *((_QWORD *)v17 + 1) = v18;
  v19 = (char *)a2 + v4[12];
  LOBYTE(v25) = 0;
  State.init(wrappedValue:)(&v25, &type metadata for Bool);
  v20 = *((_QWORD *)&v26 + 1);
  *v19 = v26;
  *((_QWORD *)v19 + 1) = v20;
  v21 = type metadata accessor for Collaboration.Management.Model(0);
  v22 = sub_100048748(&qword_1011E30C8, type metadata accessor for Collaboration.Management.Model, (uint64_t)&protocol conformance descriptor for Collaboration.Management.Model);
  result = ObservedObject.init(wrappedValue:)(a1, v21, v22);
  *a2 = result;
  a2[1] = v24;
  return result;
}

uint64_t property wrapper backing initializer of Collaboration.Management.View.shareSheet(uint64_t a1)
{
  uint64_t v1;
  _QWORD v3[2];

  v3[0] = a1;
  v1 = sub_100007E8C(&qword_1011E30C0);
  State.init(wrappedValue:)(v3, v1);
  return v3[1];
}

uint64_t property wrapper backing initializer of Collaboration.Management.View.viewModel(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for Collaboration.Management.Model(0);
  v3 = sub_100048748(&qword_1011E30C8, type metadata accessor for Collaboration.Management.Model, (uint64_t)&protocol conformance descriptor for Collaboration.Management.Model);
  return ObservedObject.init(wrappedValue:)(a1, v2, v3);
}

uint64_t Collaboration.Management.View.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t OpaqueTypeConformance2;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t KeyPath;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[16];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  void *v35;

  v2 = v1;
  v29 = a1;
  v27 = *(_QWORD *)(type metadata accessor for Collaboration.Management.View(0) - 8);
  v3 = *(_QWORD *)(v27 + 64);
  __chkstk_darwin();
  v4 = sub_100007E8C(&qword_1011E30D0);
  v28 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = v2;
  v26 = sub_100007E8C(&qword_1011E30D8);
  v7 = sub_100044B54(&qword_1011E30E0);
  v8 = sub_100044B54(&qword_1011E30E8);
  v9 = sub_100044B54(&qword_1011E30F0);
  v11 = type metadata accessor for InsetGroupedListStyle(255, v10);
  v12 = sub_100C70E88();
  v32 = v9;
  v33 = v11;
  v34 = v12;
  v35 = &protocol witness table for InsetGroupedListStyle;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v32, &opaque type descriptor for <<opaque return type of View.listStyle<A>(_:)>>, 1);
  v14 = sub_100044B54((uint64_t *)&unk_1011E3120);
  v15 = sub_100049F28(&qword_1011E4E40, (uint64_t *)&unk_1011E3120, (uint64_t)&protocol conformance descriptor for Button<A>);
  v32 = v14;
  v33 = v15;
  v16 = swift_getOpaqueTypeConformance2(&v32, &opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>, 1);
  v32 = v7;
  v33 = v8;
  v34 = OpaqueTypeConformance2;
  v35 = (void *)v16;
  v17 = swift_getOpaqueTypeConformance2(&v32, &opaque type descriptor for <<opaque return type of View.navigationBarItems<A>(trailing:)>>, 1);
  NavigationStack.init<>(root:)(sub_100C70E80, v30, v26, v17);
  v18 = *(_QWORD *)(v2 + 8);
  KeyPath = swift_getKeyPath(&unk_100EF0320);
  swift_getKeyPath(&unk_100EF0348);
  static Published.subscript.getter(&v32, v18, KeyPath);
  swift_release();
  swift_release();
  sub_10005B704(v2, (uint64_t)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for Collaboration.Management.View);
  v20 = *(unsigned __int8 *)(v27 + 80);
  v21 = (v20 + 16) & ~v20;
  v22 = swift_allocObject(&unk_10110B3D0, v21 + v3, v20 | 7);
  sub_10005B6C0((uint64_t)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v22 + v21, type metadata accessor for Collaboration.Management.View);
  v23 = sub_100049F28(&qword_1011E3130, &qword_1011E30D0, (uint64_t)&protocol conformance descriptor for NavigationStack<A, B>);
  View.onChange<A>(of:initial:_:)(&v32, 0, sub_100C70F70, v22, v4, &type metadata for Bool, v23, &protocol witness table for Bool);
  v24 = swift_release();
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v28 + 8))(v6, v4, v24);
}

uint64_t sub_100C5DAA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t KeyPath;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  unint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char *v47;
  __n128 v48;
  uint64_t v49;
  double v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t OpaqueTypeConformance2;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char v79[16];
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  void *v84;

  v77 = a2;
  v68 = *(_QWORD *)(type metadata accessor for Collaboration.Management.View(0) - 8);
  __chkstk_darwin();
  v70 = v3;
  v72 = (uint64_t)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v64 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = type metadata accessor for String.LocalizationValue(0);
  v62 = *(_QWORD *)(v63 - 8);
  __chkstk_darwin();
  v78 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v61 = (char *)&v59 - v6;
  v74 = sub_100007E8C((uint64_t *)&unk_1011E3120);
  v69 = *(_QWORD *)(v74 - 8);
  __chkstk_darwin();
  v67 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011E30E8);
  v75 = *(_QWORD *)(v8 - 8);
  v76 = v8;
  v9 = __chkstk_darwin();
  v73 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for InsetGroupedListStyle(0, v9);
  v60 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin();
  v13 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100007E8C(&qword_1011E3108);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin();
  v17 = (char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100007E8C(&qword_1011E30F0);
  __chkstk_darwin();
  v20 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_100007E8C(&qword_1011E30E0);
  v65 = *(_QWORD *)(v66 - 8);
  __chkstk_darwin();
  v22 = (char *)&v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = a1;
  v80 = a1;
  v23 = sub_100007E8C(&qword_1011E3E38);
  v24 = sub_100049F28(&qword_1011E3E40, &qword_1011E3E38, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  List<>.init(content:)(sub_100C76270, v79, v23, v24);
  KeyPath = swift_getKeyPath(&unk_100EF0CC8);
  if (qword_1011DE170 != -1)
    swift_once(&qword_1011DE170, sub_100C6650C);
  v26 = qword_1011E2F78;
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v20, v17, v14);
  v27 = (uint64_t *)&v20[*(int *)(v18 + 36)];
  *v27 = KeyPath;
  v27[1] = v26;
  v28 = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  InsetGroupedListStyle.init()(v28);
  v29 = sub_100C70E88();
  View.listStyle<A>(_:)(v13, v18, v11, v29, &protocol witness table for InsetGroupedListStyle);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v13, v11);
  sub_10004FF60((uint64_t)v20, &qword_1011E30F0);
  v30 = v61;
  String.LocalizationValue.init(stringLiteral:)(1701736260, 0xE400000000000000);
  v31 = v62;
  v32 = v63;
  (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v78, v30, v63);
  v33 = v22;
  v34 = v30;
  v35 = v18;
  if (qword_1011DDE30 != -1)
    swift_once(&qword_1011DDE30, sub_100BA7618);
  v36 = qword_10124F040;
  v37 = (id)qword_10124F040;
  v38 = v64;
  static Locale.current.getter(v37);
  v39 = String.init(localized:table:bundle:locale:comment:)(v78, 0, 0, v36, v38, 0, 0, 256);
  v41 = v40;
  (*(void (**)(char *, uint64_t))(v31 + 8))(v34, v32);
  v81 = v39;
  v82 = v41;
  v42 = v72;
  sub_10005B704(v71, v72, type metadata accessor for Collaboration.Management.View);
  v43 = *(unsigned __int8 *)(v68 + 80);
  v44 = (v43 + 16) & ~v43;
  v45 = swift_allocObject(&unk_10110B808, v44 + v70, v43 | 7);
  sub_10005B6C0(v42, v45 + v44, type metadata accessor for Collaboration.Management.View);
  v46 = sub_100BBF2FC();
  v47 = v67;
  v49 = Button<>.init<A>(_:action:)(&v81, sub_100C76480, v45, &type metadata for String, v46, v48);
  v50 = static Font.Weight.semibold.getter(v49);
  v51 = sub_100049F28(&qword_1011E4E40, (uint64_t *)&unk_1011E3120, (uint64_t)&protocol conformance descriptor for Button<A>);
  v53 = v73;
  v52 = v74;
  View.fontWeight(_:)(*(_QWORD *)&v50, 0, v74, v51);
  (*(void (**)(char *, uint64_t))(v69 + 8))(v47, v52);
  v81 = v35;
  v82 = v11;
  v83 = v29;
  v84 = &protocol witness table for InsetGroupedListStyle;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v81, &opaque type descriptor for <<opaque return type of View.listStyle<A>(_:)>>, 1);
  v81 = v52;
  v82 = v51;
  v55 = swift_getOpaqueTypeConformance2(&v81, &opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>, 1);
  v56 = v76;
  v57 = v66;
  View.navigationBarItems<A>(trailing:)(v53, v66, v76, OpaqueTypeConformance2, v55);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v53, v56);
  return (*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v33, v57);
}

uint64_t sub_100C5E0D0@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void (**v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t OpaqueTypeConformance2;
  unint64_t v39;
  void (**v40)(char *, uint64_t);
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  void (*v44)(void (**)(char *, uint64_t), char *, uint64_t);
  void (**v45)(char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t KeyPath;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  id v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  char *v89;
  void (*v90)(char *, char *, uint64_t);
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(char *, char *, uint64_t);
  char *v96;
  uint64_t v97;
  uint64_t v98;
  void (*v99)(char *, uint64_t);
  void (*v100)(char *, uint64_t);
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  id v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  char v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void (*v128)(char *, void (**)(char *, uint64_t), uint64_t);
  void (**v129)(char *, uint64_t);
  void (**v130)(char *, uint64_t);
  uint64_t v131;
  char *v132;
  uint64_t v133;
  void (*v134)(_QWORD, uint64_t);
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  char *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  void (**v163)(char *, uint64_t);
  _QWORD *v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  char *v168;
  char *v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char v176[8];
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  unint64_t v180;
  uint64_t v181;
  _QWORD v182[2];
  char v183;
  uint64_t v184;

  v171 = a2;
  v166 = type metadata accessor for Playlist(0);
  v165 = *(_QWORD *)(v166 - 8);
  __chkstk_darwin();
  v164 = (uint64_t *)((char *)&v138 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100007E8C(&qword_1011E3E48);
  __chkstk_darwin();
  v170 = (uint64_t)&v138 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v169 = (char *)&v138 - v5;
  v145 = sub_100007E8C(&qword_1011E3E50);
  v143 = *(_QWORD *)(v145 - 8);
  __chkstk_darwin();
  v144 = (char *)&v138 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v141 = (char *)&v138 - v7;
  sub_100007E8C(&qword_1011E3E58);
  __chkstk_darwin();
  v142 = (uint64_t)&v138 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v149 = (uint64_t)&v138 - v9;
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v150 = (char *)&v138 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v162 = type metadata accessor for String.LocalizationValue(0);
  v155 = *(_QWORD *)(v162 - 8);
  __chkstk_darwin();
  v161 = (char *)&v138 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v160 = (char *)&v138 - v12;
  v148 = sub_100007E8C(&qword_1011E3E60);
  v153 = *(_QWORD *)(v148 - 8);
  __chkstk_darwin();
  v140 = (char *)&v138 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v139 = (char *)&v138 - v14;
  __chkstk_darwin();
  v151 = (char *)&v138 - v15;
  sub_100007E8C(&qword_1011E0640);
  __chkstk_darwin();
  v146 = (char *)&v138 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v154 = type metadata accessor for Playlist.Collaborator(0);
  v152 = *(_QWORD *)(v154 - 8);
  __chkstk_darwin();
  v147 = (char *)&v138 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011E3E68);
  __chkstk_darwin();
  v168 = (char *)&v138 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin();
  v174 = (uint64_t)&v138 - v20;
  v175 = type metadata accessor for Prominence(0, v19);
  v163 = *(void (***)(char *, uint64_t))(v175 - 8);
  __chkstk_darwin();
  v22 = (char *)&v138 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v157 = sub_100007E8C(&qword_1011E3E70);
  __chkstk_darwin();
  v24 = (char *)&v138 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v158 = sub_100007E8C(&qword_1011E3E78);
  v159 = *(_QWORD *)(v158 - 8);
  __chkstk_darwin();
  v26 = (char *)&v138 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_100007E8C(&qword_1011E3E80);
  v172 = *(_QWORD *)(v27 - 8);
  v173 = v27;
  __chkstk_darwin();
  v167 = (char *)&v138 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v30 = (char *)&v138 - v29;
  __chkstk_darwin();
  v32 = (void (**)(char *, uint64_t))((char *)&v138 - v31);
  v177 = a1;
  sub_100C619B0(a1, (uint64_t)v24);
  v156 = sub_100007E8C(&qword_1011E3E88);
  v33 = sub_100044B54(&qword_1011E3E90);
  v34 = sub_100044B54(&qword_1011E3E98);
  v35 = sub_100C7649C();
  v36 = sub_10062A594(&qword_1011E3EC8, &qword_1011E3E98, (void (*)(void))sub_100C76538);
  v178 = v33;
  v179 = v34;
  v180 = v35;
  v181 = v36;
  v37 = a1;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v178, &opaque type descriptor for <<opaque return type of View.fullScreenCover<A>(isPresented:onDismiss:content:)>>, 1);
  v39 = sub_100C765DC();
  Section<>.init(header:content:)(v24, sub_100C76494, v176, v157, v156, OpaqueTypeConformance2, v39);
  v40 = v163;
  v41 = v175;
  ((void (*)(char *, _QWORD, uint64_t))v163[13])(v22, enum case for Prominence.increased(_:), v175);
  v42 = sub_100C76658();
  v43 = v158;
  View.headerProminence(_:)(v22, v158, v42);
  v40[1](v22, v41);
  (*(void (**)(char *, uint64_t))(v159 + 8))(v26, v43);
  v44 = *(void (**)(void (**)(char *, uint64_t), char *, uint64_t))(v172 + 32);
  v163 = v32;
  v45 = v32;
  v46 = v174;
  v44(v45, v30, v173);
  v175 = v37;
  v47 = *(_QWORD *)(v37 + 8);
  if ((sub_100C59FEC() & 1) == 0)
    goto LABEL_7;
  KeyPath = swift_getKeyPath(&unk_100EF0AB8);
  swift_getKeyPath(&unk_100EF0AE0);
  static Published.subscript.getter(&v178, v47, KeyPath);
  swift_release();
  v49 = swift_release();
  if (*(_QWORD *)(v178 + 16))
  {
    v50 = v152;
    v51 = (uint64_t)v146;
    v52 = v154;
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v152 + 16))(v146, v178 + ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80)), v154, v49);
    v53 = 0;
    v54 = v155;
  }
  else
  {
    v53 = 1;
    v54 = v155;
    v52 = v154;
    v50 = v152;
    v51 = (uint64_t)v146;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 56))(v51, v53, 1, v52);
  v55 = swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v50 + 48))(v51, 1, v52, v55) == 1)
  {
    sub_10004FF60(v51, &qword_1011E0640);
    v46 = v174;
LABEL_7:
    v56 = sub_100007E8C(&qword_1011E3F20);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v46, 1, 1, v56);
    v57 = (uint64_t)v168;
    v58 = (uint64_t)v169;
    goto LABEL_14;
  }
  v59 = v147;
  (*(void (**)(char *, uint64_t, uint64_t))(v50 + 32))(v147, v51, v52);
  __chkstk_darwin();
  v136 = (uint64_t)v59;
  v137 = v175;
  v60 = v160;
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000010, 0x8000000100E56C10);
  (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v161, v60, v162);
  if (qword_1011DDE30 != -1)
    swift_once(&qword_1011DDE30, sub_100BA7618);
  v61 = qword_10124F040;
  v62 = (id)qword_10124F040;
  v63 = v150;
  static Locale.current.getter(v62);
  v64 = String.init(localized:table:bundle:locale:comment:)(v161, 0, 0, v61, v63, 0, 0, 256);
  v66 = v65;
  (*(void (**)(char *, uint64_t))(v54 + 8))(v160, v162);
  v178 = v64;
  v179 = v66;
  v67 = sub_100BBF2FC();
  v178 = Text.init<A>(_:)(&v178, &type metadata for String, v67);
  v179 = v68;
  LOBYTE(v180) = v69 & 1;
  v181 = v70;
  v71 = _s10ManagementO4ViewV19CollaboratorRowViewVMa(0);
  v72 = sub_100048748(&qword_1011E3F68, _s10ManagementO4ViewV19CollaboratorRowViewVMa, (uint64_t)&unk_100EF0948);
  v73 = v139;
  Section<>.init(header:content:)(&v178, sub_100C767D4, &v138 - 4, &type metadata for Text, v71, &protocol witness table for Text, v72);
  (*(void (**)(char *, char *, uint64_t))(v153 + 32))(v151, v73, v148);
  v74 = *(_QWORD *)(v175 + 8);
  v75 = swift_getKeyPath(&unk_100EF0B48);
  swift_getKeyPath(&unk_100EF0B70);
  static Published.subscript.getter(&v178, v74, v75);
  swift_release();
  swift_release();
  if (v178 == 1)
  {
    __chkstk_darwin();
    v136 = v175;
    v76 = sub_100007E8C(&qword_1011E3F90);
    v77 = sub_100044B54(&qword_1011E3F98);
    v78 = sub_100044B54(&qword_1011E3FA0);
    v79 = type metadata accessor for BorderlessButtonStyle(255);
    v80 = sub_100049F28(&qword_1011E3FA8, &qword_1011E3FA0, (uint64_t)&protocol conformance descriptor for Button<A>);
    v81 = sub_100048748(&qword_1011E3FB0, (uint64_t (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle, (uint64_t)&protocol conformance descriptor for BorderlessButtonStyle);
    v178 = v78;
    v179 = v79;
    v180 = v80;
    v181 = v81;
    v82 = swift_getOpaqueTypeConformance2(&v178, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    v178 = v77;
    v179 = v82;
    v83 = swift_getOpaqueTypeConformance2(&v178, &opaque type descriptor for <<opaque return type of View.alert(isPresented:content:)>>, 1);
    v84 = v149;
    Section<>.init(content:)(sub_100C76870, &v138 - 4, v76, v83);
    v85 = sub_100007E8C(&qword_1011E3F70);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 56))(v84, 0, 1, v85);
  }
  else
  {
    v86 = sub_100007E8C(&qword_1011E3F70);
    v84 = v149;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 56))(v149, 1, 1, v86);
  }
  v57 = (uint64_t)v168;
  __chkstk_darwin();
  v136 = v175;
  sub_100C65790(v175, (uint64_t)&v178);
  v87 = sub_100007E8C(&qword_1011E3F78);
  v88 = sub_100C767F4();
  v89 = v141;
  Section<>.init(header:content:)(&v178, sub_100C767EC, &v138 - 4, &type metadata for Text, v87, &protocol witness table for Text, v88);
  v90 = *(void (**)(char *, char *, uint64_t))(v153 + 16);
  v91 = v140;
  v92 = v148;
  v90(v140, v151, v148);
  v93 = v142;
  sub_10004A160(v84, v142, &qword_1011E3E58);
  v94 = v143;
  v95 = *(void (**)(char *, char *, uint64_t))(v143 + 16);
  v96 = v144;
  v97 = v145;
  v95(v144, v89, v145);
  v90((char *)v57, v91, v92);
  v98 = sub_100007E8C(&qword_1011E3F88);
  sub_10004A160(v93, v57 + *(int *)(v98 + 48), &qword_1011E3E58);
  v95((char *)(v57 + *(int *)(v98 + 64)), v96, v97);
  v99 = *(void (**)(char *, uint64_t))(v94 + 8);
  v99(v89, v97);
  sub_10004FF60(v149, &qword_1011E3E58);
  v100 = *(void (**)(char *, uint64_t))(v153 + 8);
  v100(v151, v92);
  v99(v96, v97);
  sub_10004FF60(v93, &qword_1011E3E58);
  v100(v91, v92);
  v101 = sub_100007E8C(&qword_1011E3F20);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v101 - 8) + 56))(v57, 0, 1, v101);
  v46 = v174;
  sub_100065228(v57, v174, &qword_1011E3E68);
  (*(void (**)(char *, uint64_t))(v152 + 8))(v147, v154);
  v58 = (uint64_t)v169;
LABEL_14:
  v102 = *(_QWORD *)(v175 + 8);
  v103 = swift_getKeyPath(&unk_100EF0998);
  swift_getKeyPath(&unk_100EF09C0);
  v104 = v164;
  static Published.subscript.getter(v164, v102, v103);
  swift_release();
  swift_release();
  LOBYTE(v102) = Playlist.isOwner.getter(v105);
  (*(void (**)(_QWORD *, uint64_t))(v165 + 8))(v104, v166);
  if ((v102 & 1) != 0
    && (v106 = *(_QWORD *)(v175 + 8),
        v107 = swift_getKeyPath(&unk_100EF0B48),
        swift_getKeyPath(&unk_100EF0B70),
        static Published.subscript.getter(&v178, v106, v107),
        swift_release(),
        swift_release(),
        v178 == 1))
  {
    __chkstk_darwin();
    v136 = v175;
    v108 = v160;
    String.LocalizationValue.init(stringLiteral:)(0x704F206572616853, 0xED0000736E6F6974);
    v109 = v155;
    (*(void (**)(char *, char *, uint64_t))(v155 + 16))(v161, v108, v162);
    if (qword_1011DDE30 != -1)
      swift_once(&qword_1011DDE30, sub_100BA7618);
    v110 = qword_10124F040;
    v111 = (id)qword_10124F040;
    v112 = v150;
    static Locale.current.getter(v111);
    v113 = String.init(localized:table:bundle:locale:comment:)(v161, 0, 0, v110, v112, 0, 0, 256);
    v115 = v114;
    (*(void (**)(char *, uint64_t))(v109 + 8))(v160, v162);
    v178 = v113;
    v179 = v115;
    v116 = sub_100BBF2FC();
    v182[0] = Text.init<A>(_:)(&v178, &type metadata for String, v116);
    v182[1] = v117;
    v183 = v118 & 1;
    v184 = v119;
    sub_100C65D84(v175, (uint64_t)&v178);
    v120 = sub_100007E8C(&qword_1011E3F38);
    v121 = sub_100007E8C(&qword_1011E3F40);
    v122 = sub_100049F28(&qword_1011E3F48, &qword_1011E3F38, (uint64_t)&protocol conformance descriptor for HStack<A>);
    v123 = sub_100C76744();
    Section<>.init(header:footer:content:)(v182, &v178, sub_100C7673C, &v138 - 4, &type metadata for Text, v120, v121, &protocol witness table for Text, v122, v123);
    v124 = sub_100007E8C(&qword_1011E3F28);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v124 - 8) + 56))(v58, 0, 1, v124);
  }
  else
  {
    v125 = sub_100007E8C(&qword_1011E3F28);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v125 - 8) + 56))(v58, 1, 1, v125);
  }
  v126 = v172;
  v127 = v173;
  v128 = *(void (**)(char *, void (**)(char *, uint64_t), uint64_t))(v172 + 16);
  v129 = v167;
  v130 = v163;
  v128(v167, v163, v173);
  sub_10004A160(v46, v57, &qword_1011E3E68);
  v131 = v170;
  sub_10004A160(v58, v170, &qword_1011E3E48);
  v132 = v171;
  v128((char *)v171, (void (**)(char *, uint64_t))v129, v127);
  v133 = sub_100007E8C(&qword_1011E3F30);
  sub_10004A160(v57, v132 + *(int *)(v133 + 48), &qword_1011E3E68);
  sub_10004A160(v131, v132 + *(int *)(v133 + 64), &qword_1011E3E48);
  sub_10004FF60(v58, &qword_1011E3E48);
  sub_10004FF60(v174, &qword_1011E3E68);
  v134 = *(void (**)(_QWORD, uint64_t))(v126 + 8);
  v134(v130, v127);
  sub_10004FF60(v131, &qword_1011E3E48);
  sub_10004FF60(v57, &qword_1011E3E68);
  return ((uint64_t (*)(_QWORD, uint64_t))v134)(v129, v127);
}

uint64_t sub_100C5F21C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  char v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  void (*v61)(char *, char *, uint64_t);
  char *v62;
  char *v63;
  uint64_t v64;
  void (*v65)(char *, char *, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t);
  void (*v70)(char *, uint64_t);
  uint64_t v71;
  __int128 v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;

  sub_100007E8C(&qword_1011E3E88);
  __chkstk_darwin();
  v86 = (char *)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = *(_QWORD *)(type metadata accessor for Collaboration.Management.View(0) - 8);
  __chkstk_darwin();
  v79 = v5;
  v81 = (uint64_t)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = sub_100007E8C(&qword_1011E3F78);
  v83 = *(_QWORD *)(v85 - 8);
  __chkstk_darwin();
  v84 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v82 = (char *)&v72 - v7;
  v8 = type metadata accessor for AccessibilityChildBehavior(0);
  v75 = *(_QWORD *)(v8 - 8);
  v76 = v8;
  __chkstk_darwin();
  v74 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011E4188);
  __chkstk_darwin();
  v11 = (char *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011E4190);
  __chkstk_darwin();
  v14 = (char *)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C(&qword_1011E4198);
  __chkstk_darwin();
  v17 = (char *)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100007E8C(&qword_1011E41A0);
  __chkstk_darwin();
  v20 = (char *)&v72 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = sub_100007E8C(&qword_1011E41A8);
  v87 = *(_QWORD *)(v80 - 8);
  __chkstk_darwin();
  v22 = (char *)&v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v77 = (char *)&v72 - v23;
  v88 = a1;
  v24 = sub_100C59FEC();
  if ((v24 & 1) != 0)
  {
    v25 = sub_100007E8C(&qword_1011E3F10);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(a2, 1, 1, v25);
  }
  else
  {
    v73 = a2;
    *(_QWORD *)v11 = static VerticalAlignment.center.getter(v24);
    *((_QWORD *)v11 + 1) = 0x4028000000000000;
    v11[16] = 0;
    v27 = sub_100007E8C(&qword_1011E41B0);
    v28 = sub_100C5F914(v88, (uint64_t)&v11[*(int *)(v27 + 44)]);
    v29 = static Edge.Set.horizontal.getter(v28);
    v30 = EdgeInsets.init(_all:)(20.0);
    v32 = v31;
    v34 = v33;
    v36 = v35;
    sub_10004A160((uint64_t)v11, (uint64_t)v14, &qword_1011E4188);
    v37 = &v14[*(int *)(v12 + 36)];
    *v37 = v29;
    *((double *)v37 + 1) = v30;
    *((_QWORD *)v37 + 2) = v32;
    *((_QWORD *)v37 + 3) = v34;
    *((_QWORD *)v37 + 4) = v36;
    v37[40] = 0;
    sub_10004FF60((uint64_t)v11, &qword_1011E4188);
    if (qword_1011DDEE0 != -1)
      swift_once(&qword_1011DDEE0, sub_100BBE79C);
    v72 = static EdgeInsets.zero;
    v38 = qword_10124F278;
    v39 = unk_10124F280;
    sub_10004A160((uint64_t)v14, (uint64_t)v17, &qword_1011E4190);
    v40 = &v17[*(int *)(v15 + 36)];
    *(_OWORD *)v40 = v72;
    *((_QWORD *)v40 + 2) = v38;
    *((_QWORD *)v40 + 3) = v39;
    v40[32] = 0;
    v41 = sub_10004FF60((uint64_t)v14, &qword_1011E4190);
    v42 = static HorizontalAlignment.listRowSeparatorLeading.getter(v41);
    sub_10004A160((uint64_t)v17, (uint64_t)v20, &qword_1011E4198);
    v43 = (uint64_t *)&v20[*(int *)(v18 + 36)];
    *v43 = v42;
    v43[1] = (uint64_t)sub_100798188;
    v43[2] = 0;
    v44 = sub_10004FF60((uint64_t)v17, &qword_1011E4198);
    v45 = v74;
    static AccessibilityChildBehavior.combine.getter(v44);
    v46 = sub_100C75E38(&qword_1011E41B8, &qword_1011E41A0, (void (*)(void))sub_100C76FD4, (void (*)(void))sub_100C770DC);
    View.accessibilityElement(children:)(v45, v18, v46);
    (*(void (**)(char *, uint64_t))(v75 + 8))(v45, v76);
    sub_10004FF60((uint64_t)v20, &qword_1011E41A0);
    v47 = v87;
    v48 = v77;
    v49 = v80;
    (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v77, v22, v80);
    v50 = v88;
    v89 = sub_100C5A570();
    v51 = v81;
    sub_10005B704(v50, v81, type metadata accessor for Collaboration.Management.View);
    v52 = *(unsigned __int8 *)(v78 + 80);
    v53 = (v52 + 16) & ~v52;
    v54 = swift_allocObject(&unk_10110BA60, v53 + v79, v52 | 7);
    sub_10005B6C0(v51, v54 + v53, type metadata accessor for Collaboration.Management.View);
    v55 = sub_100007E8C(&qword_1011E3020);
    v56 = _s10ManagementO4ViewV19CollaboratorRowViewVMa(0);
    v57 = sub_100049F28(&qword_1011E3FD8, &qword_1011E3020, (uint64_t)&protocol conformance descriptor for [A]);
    v58 = sub_100048748(&qword_1011E3F68, _s10ManagementO4ViewV19CollaboratorRowViewVMa, (uint64_t)&unk_100EF0948);
    v59 = sub_100048748(&qword_1011E3FE0, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Collaborator, (uint64_t)&protocol conformance descriptor for Playlist.Collaborator);
    v60 = v82;
    ForEach<>.init(_:content:)(&v89, sub_100C769B4, v54, v55, &type metadata for MusicItemID, v56, v57, v58, v59);
    v61 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
    v62 = v48;
    v61(v22, v48, v49);
    v64 = v83;
    v63 = v84;
    v65 = *(void (**)(char *, char *, uint64_t))(v83 + 16);
    v66 = v85;
    v65(v84, v60, v85);
    v67 = (uint64_t)v86;
    v61(v86, v22, v49);
    v68 = sub_100007E8C(&qword_1011E41E0);
    v65((char *)(v67 + *(int *)(v68 + 48)), v63, v66);
    v69 = *(void (**)(char *, uint64_t))(v64 + 8);
    v69(v60, v66);
    v70 = *(void (**)(char *, uint64_t))(v87 + 8);
    v70(v62, v49);
    v69(v63, v66);
    v70(v22, v49);
    v71 = sub_100007E8C(&qword_1011E3F10);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 56))(v67, 0, 1, v71);
    return sub_100065228(v67, v73, &qword_1011E3E88);
  }
}

uint64_t sub_100C5F914@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t KeyPath;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  char *v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  char *v97;
  __n128 v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t v107;
  double v108;
  unint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _OWORD *v123;
  __int128 v124;
  uint64_t v125;
  double v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  char v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t OpaqueTypeConformance2;
  char *v162;
  uint64_t v163;
  __n128 v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  void (*v168)(char *, char *, uint64_t);
  uint64_t v169;
  void (*v170)(char *, uint64_t);
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  char v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v184;
  int v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  _QWORD *v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  char *v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  uint64_t v204;
  uint64_t v205;
  char *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  char *v215;
  uint64_t v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  char *v221;
  char *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  uint64_t *v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  char *v235;
  _QWORD *v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  unint64_t v243;
  uint64_t v244;
  char v245;
  uint64_t v246;
  __int128 v247;
  __int128 v248;
  __int128 v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  unsigned __int8 v253;
  uint64_t v254;
  char v255;
  uint64_t v256;
  uint64_t v257;

  v237 = a2;
  v227 = sub_100007E8C(&qword_1011E3BA8);
  __chkstk_darwin();
  v4 = (char *)&v184 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Capsule(0);
  __chkstk_darwin();
  v6 = (char *)&v184 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Collaboration.Management.View(0);
  v197 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin();
  v198 = v8;
  v199 = (uint64_t)&v184 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v205 = sub_100007E8C((uint64_t *)&unk_1011E3120);
  v202 = *(_QWORD *)(v205 - 8);
  __chkstk_darwin();
  v200 = (char *)&v184 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v204 = sub_100007E8C(&qword_1011E41E8);
  __chkstk_darwin();
  v203 = (char *)&v184 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v208 = sub_100007E8C(&qword_1011E41F0);
  v207 = *(_QWORD *)(v208 - 8);
  __chkstk_darwin();
  v206 = (char *)&v184 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v201 = sub_100007E8C(&qword_1011E41F8);
  __chkstk_darwin();
  v211 = (char *)&v184 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v209 = sub_100007E8C(&qword_1011E4200);
  __chkstk_darwin();
  v212 = (uint64_t)&v184 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v210 = sub_100007E8C(&qword_1011E4208);
  __chkstk_darwin();
  v235 = (char *)&v184 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v213 = sub_100007E8C(&qword_1011E4210);
  __chkstk_darwin();
  v214 = (uint64_t)&v184 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v216 = sub_100007E8C(&qword_1011E4218);
  __chkstk_darwin();
  v215 = (char *)&v184 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v219 = sub_100007E8C(&qword_1011E4220);
  v218 = *(_QWORD *)(v219 - 8);
  __chkstk_darwin();
  v217 = (char *)&v184 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v224 = sub_100007E8C(&qword_1011E4228);
  v223 = *(_QWORD *)(v224 - 8);
  __chkstk_darwin();
  v222 = (char *)&v184 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v220 = (char *)&v184 - v19;
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v193 = (char *)&v184 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v196 = type metadata accessor for String.LocalizationValue(0);
  v195 = *(_QWORD *)(v196 - 8);
  __chkstk_darwin();
  v192 = (char *)&v184 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v194 = (char *)&v184 - v22;
  v191 = type metadata accessor for Playlist(0);
  v190 = *(_QWORD *)(v191 - 8);
  __chkstk_darwin();
  v189 = (uint64_t *)((char *)&v184 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100007E8C(&qword_1011E4230);
  __chkstk_darwin();
  v236 = (uint64_t *)((char *)&v184 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  v239 = (uint64_t)&v184 - v25;
  v229 = sub_100007E8C(&qword_1011E4238);
  __chkstk_darwin();
  v231 = (uint64_t *)((char *)&v184 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100007E8C(&qword_1011E4240);
  __chkstk_darwin();
  v230 = (char *)&v184 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v228 = sub_100007E8C(&qword_1011E4248);
  __chkstk_darwin();
  v29 = (char *)&v184 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v234 = sub_100007E8C(&qword_1011E4250);
  v233 = *(_QWORD *)(v234 - 8);
  __chkstk_darwin();
  v232 = (uint64_t)&v184 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for DynamicTypeSize(0);
  v32 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin();
  v34 = (char *)&v184 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v36 = (char *)&v184 - v35;
  sub_100007E8C(&qword_1011E4258);
  __chkstk_darwin();
  v238 = (uint64_t)&v184 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v240 = (uint64_t)&v184 - v38;
  sub_100C31810((uint64_t)v36);
  if (qword_1011DE1C8 != -1)
    swift_once(&qword_1011DE1C8, sub_100C668F0);
  v39 = sub_100048B14(v31, (uint64_t)qword_1011E2FD0);
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v34, v39, v31);
  v40 = sub_100048748((unint64_t *)&qword_1011E3AD0, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  v41 = dispatch thunk of static Comparable.< infix(_:_:)(v34, v36, v31, v40);
  v42 = *(void (**)(char *, uint64_t))(v32 + 8);
  v42(v34, v31);
  v42(v36, v31);
  v226 = (uint64_t *)v4;
  v225 = v7;
  v221 = v6;
  if ((v41 & 1) != 0)
  {
    v43 = 1;
    v44 = v240;
    v45 = (uint64_t)v235;
    v46 = v234;
  }
  else
  {
    v187 = Image.init(systemName:)(0x322E6E6F73726570, 0xED00006C6C69662ELL);
    if (qword_1011DE168 != -1)
      swift_once(&qword_1011DE168, sub_100C66490);
    v188 = a1;
    v47 = qword_1011E2F70;
    KeyPath = swift_getKeyPath(&unk_100EF0A88);
    v49 = qword_1011DE1B8;
    swift_retain();
    if (v49 != -1)
      v50 = swift_once(&qword_1011DE1B8, sub_100C667FC);
    v51 = qword_1011E2FC0;
    v52 = static Alignment.center.getter(v50);
    _FrameLayout.init(width:height:alignment:)(&v252, v51, 0, v51, 0, v52, v53);
    v186 = v252;
    v185 = v253;
    v184 = v254;
    v54 = v255;
    v55 = v256;
    v56 = v257;
    v57 = (uint64_t)v230;
    static SymbolRenderingMode.hierarchical.getter(v58);
    v59 = type metadata accessor for SymbolRenderingMode(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v57, 0, 1, v59);
    v60 = swift_getKeyPath(&unk_100EF0D88);
    v61 = v231;
    sub_10004A160(v57, (uint64_t)v231 + *(int *)(v229 + 28), &qword_1011E4240);
    *v61 = v60;
    sub_10004A160((uint64_t)v61, (uint64_t)&v29[*(int *)(v228 + 36)], &qword_1011E4238);
    *(_QWORD *)v29 = v187;
    *((_QWORD *)v29 + 1) = KeyPath;
    v62 = v186;
    *((_QWORD *)v29 + 2) = v47;
    *((_QWORD *)v29 + 3) = v62;
    v29[32] = v185;
    *((_QWORD *)v29 + 5) = v184;
    v29[48] = v54;
    *((_QWORD *)v29 + 7) = v55;
    *((_QWORD *)v29 + 8) = v56;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_10004FF60((uint64_t)v61, &qword_1011E4238);
    sub_10004FF60(v57, &qword_1011E4240);
    swift_release();
    swift_release();
    swift_release();
    if (qword_1011DE1C0 != -1)
      swift_once(&qword_1011DE1C0, sub_100C6685C);
    v63 = qword_1011E2FC8;
    v64 = swift_getKeyPath(&unk_100EF0A58);
    v65 = v232;
    sub_10004A160((uint64_t)v29, v232, &qword_1011E4248);
    v46 = v234;
    v66 = (uint64_t *)(v65 + *(int *)(v234 + 36));
    *v66 = v64;
    v66[1] = v63;
    swift_retain();
    sub_10004FF60((uint64_t)v29, &qword_1011E4248);
    v44 = v240;
    sub_100065228(v65, v240, &qword_1011E4250);
    v43 = 0;
    a1 = v188;
    v45 = (uint64_t)v235;
  }
  v67 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v233 + 56))(v44, v43, 1, v46);
  v68 = static HorizontalAlignment.leading.getter(v67);
  sub_100C60F24(a1, (uint64_t)&v247);
  v229 = *((_QWORD *)&v247 + 1);
  v230 = (char *)v247;
  LODWORD(v228) = v248;
  v231 = (uint64_t *)*((_QWORD *)&v248 + 1);
  v234 = *((_QWORD *)&v249 + 1);
  v235 = (char *)v249;
  v233 = v250;
  v232 = v251;
  v69 = *(_QWORD *)(a1 + 8);
  v70 = swift_getKeyPath(&unk_100EF0B48);
  swift_getKeyPath(&unk_100EF0B70);
  static Published.subscript.getter(&v247, v69, v70);
  swift_release();
  swift_release();
  if (v247 == 1)
  {
    v188 = v68;
    v71 = *(_QWORD *)(a1 + 8);
    v72 = swift_getKeyPath(&unk_100EF0998);
    swift_getKeyPath(&unk_100EF09C0);
    v73 = v189;
    static Published.subscript.getter(v189, v71, v72);
    swift_release();
    swift_release();
    LOBYTE(v71) = Playlist.isOwner.getter(v74);
    (*(void (**)(_QWORD *, uint64_t))(v190 + 8))(v73, v191);
    v75 = v194;
    if ((v71 & 1) != 0)
    {
      v76 = 1886352467;
      v77 = 0xE400000000000000;
    }
    else
    {
      v76 = 0x657661654CLL;
      v77 = 0xE500000000000000;
    }
    String.LocalizationValue.init(stringLiteral:)(v76, v77);
    v82 = v195;
    v83 = v192;
    v84 = v196;
    (*(void (**)(char *, char *, uint64_t))(v195 + 16))(v192, v75, v196);
    v85 = (uint64_t)v215;
    if (qword_1011DDE30 != -1)
      swift_once(&qword_1011DDE30, sub_100BA7618);
    v86 = qword_10124F040;
    v87 = (id)qword_10124F040;
    v88 = v193;
    static Locale.current.getter(v87);
    v89 = String.init(localized:table:bundle:locale:comment:)(v83, 0, 0, v86, v88, 0, 0, 256);
    v91 = v90;
    (*(void (**)(char *, uint64_t))(v82 + 8))(v75, v84);
    v196 = v89;
    *(_QWORD *)&v247 = v89;
    *((_QWORD *)&v247 + 1) = v91;
    v92 = v199;
    sub_10005B704(a1, v199, type metadata accessor for Collaboration.Management.View);
    v93 = *(unsigned __int8 *)(v197 + 80);
    v94 = (v93 + 16) & ~v93;
    v95 = swift_allocObject(&unk_10110BA88, v94 + v198, v93 | 7);
    sub_10005B6C0(v92, v95 + v94, type metadata accessor for Collaboration.Management.View);
    v96 = sub_100BBF2FC();
    v215 = v91;
    swift_bridgeObjectRetain();
    v97 = v200;
    v99 = Button<>.init<A>(_:action:)(&v247, sub_100C7719C, v95, &type metadata for String, v96, v98);
    v100 = static Font.subheadline.getter(v99);
    v101 = swift_getKeyPath(&unk_100EF0A88);
    v102 = v202;
    v103 = (uint64_t)v203;
    v104 = v205;
    (*(void (**)(char *, char *, uint64_t))(v202 + 16))(v203, v97, v205);
    v105 = v204;
    v106 = (uint64_t *)(v103 + *(int *)(v204 + 36));
    *v106 = v101;
    v106[1] = v100;
    v107 = (*(uint64_t (**)(char *, uint64_t))(v102 + 8))(v97, v104);
    v108 = static Font.Weight.semibold.getter(v107);
    v109 = sub_100C771B0();
    v110 = v206;
    View.fontWeight(_:)(*(_QWORD *)&v108, 0, v105, v109);
    v111 = sub_10004FF60(v103, &qword_1011E41E8);
    v112 = static Color.white.getter(v111);
    v113 = swift_getKeyPath(&unk_100EF0A58);
    v114 = v207;
    v115 = (uint64_t)v211;
    v116 = v208;
    (*(void (**)(char *, char *, uint64_t))(v207 + 16))(v211, v110, v208);
    v117 = (uint64_t *)(v115 + *(int *)(v201 + 36));
    *v117 = v113;
    v117[1] = v112;
    v118 = (*(uint64_t (**)(char *, uint64_t))(v114 + 8))(v110, v116);
    if (qword_1011DE1A8 != -1)
      v118 = swift_once(&qword_1011DE1A8, sub_100C66738);
    v119 = qword_1011E2FB0;
    v120 = static Alignment.center.getter(v118);
    _FrameLayout.init(width:height:alignment:)(&v247, 0, 1, v119, 0, v120, v121);
    v122 = v212;
    sub_10004A160(v115, v212, &qword_1011E41F8);
    v123 = (_OWORD *)(v122 + *(int *)(v209 + 36));
    v124 = v248;
    *v123 = v247;
    v123[1] = v124;
    v123[2] = v249;
    v125 = sub_10004FF60(v115, &qword_1011E41F8);
    LOBYTE(v119) = static Edge.Set.horizontal.getter(v125);
    v126 = EdgeInsets.init(_all:)(14.0);
    v128 = v127;
    v130 = v129;
    v132 = v131;
    sub_10004A160(v122, v45, &qword_1011E4200);
    v133 = v45 + *(int *)(v210 + 36);
    *(_BYTE *)v133 = v119;
    *(double *)(v133 + 8) = v126;
    *(_QWORD *)(v133 + 16) = v128;
    *(_QWORD *)(v133 + 24) = v130;
    *(_QWORD *)(v133 + 32) = v132;
    *(_BYTE *)(v133 + 40) = 0;
    sub_10004FF60(v122, &qword_1011E4200);
    v134 = (uint64_t)v226;
    v135 = v225;
    v136 = (uint64_t)v221;
    if (qword_1011DDEF0 != -1)
      swift_once(&qword_1011DDEF0, sub_100BC20E8);
    v137 = Color.init(_:)((id)static UIColor.MusicTint.normal);
    v138 = static Edge.Set.all.getter(v137);
    v139 = v45;
    v140 = v45;
    v141 = v214;
    sub_10004A160(v139, v214, &qword_1011E4208);
    v142 = v141 + *(int *)(v213 + 36);
    *(_QWORD *)v142 = v137;
    *(_BYTE *)(v142 + 8) = v138;
    sub_10004FF60(v140, &qword_1011E4208);
    v143 = enum case for RoundedCornerStyle.continuous(_:);
    v144 = type metadata accessor for RoundedCornerStyle(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v144 - 8) + 104))(v136, v143, v144);
    v145 = v216;
    v146 = v85 + *(int *)(v216 + 36);
    sub_10005B704(v136, v146, (uint64_t (*)(_QWORD))&type metadata accessor for Capsule);
    *(_WORD *)(v146 + *(int *)(sub_100007E8C(&qword_1011E4278) + 36)) = 256;
    sub_10004A160(v141, v85, &qword_1011E4210);
    sub_10005B748(v136, (uint64_t (*)(_QWORD))&type metadata accessor for Capsule);
    sub_10004FF60(v141, &qword_1011E4210);
    v147 = v145;
    if (qword_1011DE1D0 != -1)
      swift_once(&qword_1011DE1D0, sub_100C66948);
    v148 = v227;
    v149 = sub_100048B14(v227, (uint64_t)qword_1011E2FE8);
    sub_10004A160(v149, v134, &qword_1011E3BA8);
    v150 = sub_100C7724C();
    v151 = sub_100049F28(&qword_1011E3BE0, &qword_1011E3BA8, (uint64_t)&protocol conformance descriptor for PartialRangeThrough<A>);
    v152 = v217;
    View.dynamicTypeSize<A>(_:)(v134, v147, v148, v150, v151);
    sub_10004FF60(v134, &qword_1011E3BA8);
    sub_10004FF60(v85, &qword_1011E4218);
    v153 = a1 + *(int *)(v135 + 44);
    v154 = *(_BYTE *)v153;
    v155 = *(_QWORD *)(v153 + 8);
    v245 = v154;
    v246 = v155;
    v156 = sub_100007E8C(&qword_1011E1B98);
    State.projectedValue.getter(&v241, v156);
    v226 = &v184;
    v157 = v241;
    v158 = v242;
    v159 = v243;
    __chkstk_darwin();
    v160 = v196;
    *(&v184 - 4) = a1;
    *(&v184 - 3) = v160;
    *(&v184 - 2) = (uint64_t)v215;
    v241 = v147;
    v242 = v148;
    v243 = v150;
    v244 = v151;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v241, &opaque type descriptor for <<opaque return type of View.dynamicTypeSize<A>(_:)>>, 1);
    v162 = v222;
    v163 = v219;
    View.alert(isPresented:content:)(v157, v158, v159, sub_100C77444, &v184 - 6, v219, OpaqueTypeConformance2);
    swift_bridgeObjectRelease();
    swift_release();
    v164 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v218 + 8))(v152, v163, v164);
    v165 = v223;
    v166 = v220;
    v167 = v224;
    (*(void (**)(char *, char *, uint64_t))(v223 + 32))(v220, v162, v224);
    v168 = *(void (**)(char *, char *, uint64_t))(v165 + 16);
    v168(v162, v166, v167);
    v81 = (uint64_t)v236;
    *v236 = 0;
    *(_BYTE *)(v81 + 8) = 1;
    v169 = sub_100007E8C(&qword_1011E42C0);
    v168((char *)(v81 + *(int *)(v169 + 48)), v162, v167);
    v170 = *(void (**)(char *, uint64_t))(v165 + 8);
    v170(v166, v167);
    v170(v162, v167);
    v171 = sub_100007E8C(&qword_1011E4260);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v171 - 8) + 56))(v81, 0, 1, v171);
    v79 = v239;
    sub_100065228(v81, v239, &qword_1011E4230);
    v80 = v240;
    v68 = v188;
  }
  else
  {
    v78 = sub_100007E8C(&qword_1011E4260);
    v79 = v239;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 56))(v239, 1, 1, v78);
    v80 = v44;
    v81 = (uint64_t)v236;
  }
  v172 = v238;
  sub_10004A160(v80, v238, &qword_1011E4258);
  sub_10004A160(v79, v81, &qword_1011E4230);
  v173 = v237;
  sub_10004A160(v172, v237, &qword_1011E4258);
  v174 = sub_100007E8C(&qword_1011E4268);
  v175 = v173 + *(int *)(v174 + 48);
  *(_QWORD *)v175 = v68;
  *(_QWORD *)(v175 + 8) = 0;
  *(_BYTE *)(v175 + 16) = 1;
  v176 = (uint64_t)v230;
  v177 = v229;
  *(_QWORD *)(v175 + 24) = v230;
  *(_QWORD *)(v175 + 32) = v177;
  v178 = v228;
  *(_BYTE *)(v175 + 40) = v228;
  v179 = (uint64_t)v235;
  *(_QWORD *)(v175 + 48) = v231;
  *(_QWORD *)(v175 + 56) = v179;
  v180 = v234;
  v181 = v233;
  *(_QWORD *)(v175 + 64) = v234;
  *(_QWORD *)(v175 + 72) = v181;
  v182 = v232;
  *(_QWORD *)(v175 + 80) = v232;
  sub_10004A160(v81, v173 + *(int *)(v174 + 64), &qword_1011E4230);
  sub_100055BBC(v176, v177, v178);
  swift_bridgeObjectRetain();
  sub_1000E4440(v179, v180, v181, v182);
  sub_10004FF60(v239, &qword_1011E4230);
  sub_10004FF60(v240, &qword_1011E4258);
  sub_10004FF60(v81, &qword_1011E4230);
  sub_100055BAC(v176, v177, v178);
  swift_bridgeObjectRelease();
  sub_1000E450C(v179, v180, v181, v182);
  return sub_10004FF60(v238, &qword_1011E4258);
}

double sub_100C60F24@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  char v65;
  uint64_t v66;
  double result;
  _BYTE v68[12];
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  v72 = a1;
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v4 = &v68[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for String.LocalizationValue(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = &v68[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  v10 = &v68[-v9];
  String.LocalizationValue.init(stringLiteral:)(0x726F62616C6C6F43, 0xED00006E6F697461);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(v8, v10, v5);
  if (qword_1011DDE30 != -1)
    swift_once(&qword_1011DDE30, sub_100BA7618);
  v11 = qword_10124F040;
  static Locale.current.getter((id)qword_10124F040);
  v12 = String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, v11, v4, 0, 0, 256);
  v14 = v13;
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v10, v5);
  v73 = v12;
  v74 = v14;
  v15 = sub_100BBF2FC();
  v35 = Text.init<A>(_:)(&v73, &type metadata for String, v15);
  v17 = v16;
  v19 = v18;
  v21 = v20 & 1;
  LODWORD(v73) = static HierarchicalShapeStyle.primary.getter(v22);
  v23 = Text.foregroundStyle<A>(_:)(&v73, v35, v17, v21, v19, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v25 = v24;
  v27 = v26;
  v29 = v28 & 1;
  sub_100055BAC(v35, v17, v21);
  v30 = swift_bridgeObjectRelease();
  v31 = static Font.callout.getter(v30);
  v32 = Text.font(_:)(v31, v23, v25, v29, v27);
  v71 = v33;
  LODWORD(v35) = v34;
  v37 = v36;
  swift_release();
  sub_100055BAC(v23, v25, v29);
  swift_bridgeObjectRelease();
  v38 = sub_100C5A6D0();
  if (v39)
  {
    v73 = v38;
    v74 = v39;
    v40 = Text.init<A>(_:)(&v73, &type metadata for String, v15);
    v42 = v41;
    v44 = v43;
    v46 = v45 & 1;
    LODWORD(v73) = static HierarchicalShapeStyle.secondary.getter(v40);
    v47 = Text.foregroundStyle<A>(_:)(&v73, v40, v42, v46, v44, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
    v69 = v35;
    v35 = v48;
    v72 = v37;
    v50 = v49;
    v70 = v32;
    v52 = v51 & 1;
    sub_100055BAC(v40, v42, v46);
    v53 = swift_bridgeObjectRelease();
    v54 = static Font.caption.getter(v53);
    v55 = Text.font(_:)(v54, v47, v35, v52, v50);
    v57 = v56;
    v59 = v58;
    v61 = v60;
    swift_release();
    v62 = v59 & 1;
    v63 = v35;
    LOBYTE(v35) = v69;
    v64 = v52;
    v32 = v70;
    sub_100055BAC(v47, v63, v64);
    v37 = v72;
    swift_bridgeObjectRelease();
  }
  else
  {
    v55 = 0;
    v57 = 0;
    v62 = 0;
    v61 = 0;
  }
  v65 = v35 & 1;
  v66 = v71;
  *(_QWORD *)a2 = v32;
  *(_QWORD *)(a2 + 8) = v66;
  *(_BYTE *)(a2 + 16) = v65;
  *(_QWORD *)(a2 + 24) = v37;
  *(_QWORD *)(a2 + 32) = v55;
  *(_QWORD *)(a2 + 40) = v57;
  *(_QWORD *)(a2 + 48) = v62;
  *(_QWORD *)(a2 + 56) = v61;
  sub_100055BBC(v32, v66, v65);
  swift_bridgeObjectRetain();
  sub_1000E4440(v55, v57, v62, v61);
  sub_1000E450C(v55, v57, v62, v61);
  sub_100055BAC(v32, v66, v65);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_100C612FC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  char *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  _BYTE v17[9];
  uint64_t v18;

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin();
  v5 = &v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 1];
  v6 = (char *)(a1 + *(int *)(type metadata accessor for Collaboration.Management.View(0) + 44));
  v7 = *v6;
  v8 = *((_QWORD *)v6 + 1);
  v17[1] = v7;
  v18 = v8;
  v17[0] = 1;
  v9 = sub_100007E8C(&qword_1011E1B98);
  State.wrappedValue.setter(v17, v9);
  v10 = Logger.collaboration.unsafeMutableAddressor();
  v11 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v3 + 16))(v5, v10, v2);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "[Management] Stop/Leave button tapped", v14, 2u);
    swift_slowDealloc(v14, -1, -1);
  }

  return (*(uint64_t (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_100C61444@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t KeyPath;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  id v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  __n128 v63;
  char *v64;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;

  v72 = a2;
  v73 = a3;
  v80 = a4;
  v74 = *(_QWORD *)(type metadata accessor for Collaboration.Management.View(0) - 8);
  v5 = __chkstk_darwin();
  v75 = v6;
  v77 = (uint64_t)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Alert.Button(0, v5);
  __chkstk_darwin();
  v79 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v78 = (char *)&v66 - v8;
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v71 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for String.LocalizationValue(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin();
  v13 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v15 = (char *)&v66 - v14;
  v16 = type metadata accessor for Playlist(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin();
  v19 = (uint64_t *)((char *)&v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v76 = a1;
  v20 = *(_QWORD *)(a1 + 8);
  KeyPath = swift_getKeyPath(&unk_100EF0998);
  swift_getKeyPath(&unk_100EF09C0);
  static Published.subscript.getter(v19, v20, KeyPath);
  swift_release();
  swift_release();
  LOBYTE(v20) = Playlist.isOwner.getter(v22);
  (*(void (**)(_QWORD *, uint64_t))(v17 + 8))(v19, v16);
  if ((v20 & 1) != 0)
  {
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000013, 0x8000000100E56E90);
    v23 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    v23(v13, v15, v10);
    if (qword_1011DDE30 != -1)
      swift_once(&qword_1011DDE30, sub_100BA7618);
    v33 = qword_10124F040;
    v34 = (id)qword_10124F040;
    v26 = v71;
    static Locale.current.getter(v34);
    v27 = String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, v33, v26, 0, 0, 256);
    v29 = v35;
    v30 = *(void (**)(char *, uint64_t))(v11 + 8);
    v30(v15, v10);
    v32 = 0xD00000000000005ELL;
    v31 = 0x8000000100E56EB0;
  }
  else
  {
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000014, 0x8000000100E56DF0);
    v23 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    v23(v13, v15, v10);
    if (qword_1011DDE30 != -1)
      swift_once(&qword_1011DDE30, sub_100BA7618);
    v24 = qword_10124F040;
    v25 = (id)qword_10124F040;
    v26 = v71;
    static Locale.current.getter(v25);
    v27 = String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, v24, v26, 0, 0, 256);
    v29 = v28;
    v30 = *(void (**)(char *, uint64_t))(v11 + 8);
    v30(v15, v10);
    v31 = 0x8000000100E56E10;
    v32 = 0x1000000000000079;
  }
  String.LocalizationValue.init(stringLiteral:)(v32, v31);
  v23(v13, v15, v10);
  v36 = qword_10124F040;
  static Locale.current.getter((id)qword_10124F040);
  v37 = String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, v36, v26, 0, 0, 256);
  v39 = v38;
  v30(v15, v10);
  v81 = v27;
  v82 = v29;
  v40 = sub_100BBF2FC();
  v41 = Text.init<A>(_:)(&v81, &type metadata for String, v40);
  v70 = v42;
  v71 = (char *)v41;
  v68 = v43;
  v69 = v44;
  v81 = v37;
  v82 = v39;
  v45 = Text.init<A>(_:)(&v81, &type metadata for String, v40);
  v66 = v46;
  v67 = v45;
  v48 = v47;
  v50 = v49 & 1;
  v81 = v72;
  v82 = v73;
  swift_bridgeObjectRetain();
  v51 = Text.init<A>(_:)(&v81, &type metadata for String, v40);
  v53 = v52;
  v55 = v54;
  v57 = v56 & 1;
  v58 = v77;
  sub_10005B704(v76, v77, type metadata accessor for Collaboration.Management.View);
  v59 = *(unsigned __int8 *)(v74 + 80);
  v60 = (v59 + 16) & ~v59;
  v61 = swift_allocObject(&unk_10110BAB0, v60 + v75, v59 | 7);
  sub_10005B6C0(v58, v61 + v60, type metadata accessor for Collaboration.Management.View);
  v62 = v78;
  static Alert.Button.destructive(_:action:)(v51, v53, v57, v55, sub_100C769AC, v61);
  sub_100055BAC(v51, v53, v57);
  swift_release();
  v63 = swift_bridgeObjectRelease();
  v64 = v79;
  static Alert.Button.cancel(_:)(UIScreen.Dimensions.size.getter, 0, v63);
  return Alert.init(title:message:primaryButton:secondaryButton:)(v71, v70, v68 & 1, v69, v67, v48, v50, v66, v62, v64);
}

uint64_t sub_100C619B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v28;
  char v29;
  uint64_t v30;
  _QWORD v31[2];
  unsigned __int8 v32;

  v28 = a2;
  v3 = type metadata accessor for Collaboration.Management.View(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin();
  sub_100007E8C((uint64_t *)&unk_1011E3EB0);
  __chkstk_darwin();
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011E3E90);
  __chkstk_darwin();
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v7 = static HorizontalAlignment.center.getter(v11);
  *((_QWORD *)v7 + 1) = 0x4028000000000000;
  v7[16] = 0;
  v12 = sub_100007E8C((uint64_t *)&unk_1011E4000);
  sub_100C61C24(a1, (uint64_t)&v7[*(int *)(v12 + 44)]);
  sub_10004A160((uint64_t)v7, (uint64_t)v10, (uint64_t *)&unk_1011E3EB0);
  v13 = &v10[*(int *)(v8 + 36)];
  v13[32] = 0;
  *(_OWORD *)v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  sub_10004FF60((uint64_t)v7, (uint64_t *)&unk_1011E3EB0);
  v14 = a1 + *(int *)(v3 + 40);
  v15 = *(_BYTE *)v14;
  v16 = *(_QWORD *)(v14 + 8);
  v29 = v15;
  v30 = v16;
  v17 = sub_100007E8C(&qword_1011E1B98);
  State.projectedValue.getter(v31, v17);
  v19 = v31[0];
  v18 = v31[1];
  v20 = v32;
  sub_10005B704(a1, (uint64_t)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for Collaboration.Management.View);
  v21 = *(unsigned __int8 *)(v4 + 80);
  v22 = (v21 + 16) & ~v21;
  v23 = swift_allocObject(&unk_10110B920, v22 + v5, v21 | 7);
  sub_10005B6C0((uint64_t)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v23 + v22, type metadata accessor for Collaboration.Management.View);
  v24 = sub_100007E8C(&qword_1011E3E98);
  v25 = sub_100C7649C();
  v26 = sub_10062A594(&qword_1011E3EC8, &qword_1011E3E98, (void (*)(void))sub_100C76538);
  View.fullScreenCover<A>(isPresented:onDismiss:content:)(v19, v18, v20, 0, 0, sub_100C76C88, v23, v8, v24, v25, v26);
  swift_release();
  swift_release();
  swift_release();
  return sub_10004FF60((uint64_t)v10, &qword_1011E3E90);
}

uint64_t sub_100C61C24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t KeyPath;
  _QWORD *v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  __n128 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  double v97;
  _QWORD *v98;
  int v99;
  int v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  uint64_t v110;
  uint64_t v111;
  double v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  __n128 v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t *v138;
  uint64_t v139;
  double v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char v150;
  double v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  int *v171;
  uint64_t v172;
  uint64_t v173;
  _QWORD *v174;
  uint64_t v175;
  uint64_t v177;
  uint64_t *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  _QWORD *v206;
  uint64_t v207;
  uint64_t v208;
  char *v209;
  char *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  _QWORD v215[2];
  _OWORD v216[3];
  uint64_t v217;
  char v218;
  uint64_t v219;
  char v220;
  uint64_t v221;
  __int16 v222;

  v211 = a2;
  sub_100007E8C(&qword_1011E4E50);
  __chkstk_darwin();
  v185 = (uint64_t)&v177 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011E4020);
  __chkstk_darwin();
  v188 = (uint64_t)&v177 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v182 = sub_100007E8C(&qword_1011E4028);
  __chkstk_darwin();
  v186 = (uint64_t)&v177 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v181 = sub_100007E8C(&qword_1011E4030);
  __chkstk_darwin();
  v187 = (uint64_t)&v177 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v183 = sub_100007E8C(&qword_1011E4038);
  __chkstk_darwin();
  v190 = (uint64_t)&v177 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v184 = sub_100007E8C(&qword_1011E4040);
  __chkstk_darwin();
  v191 = (uint64_t)&v177 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v189 = sub_100007E8C(&qword_1011E4048);
  __chkstk_darwin();
  v195 = (uint64_t)&v177 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v193 = sub_100007E8C(&qword_1011E4050);
  __chkstk_darwin();
  v197 = (uint64_t)&v177 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v196 = (uint64_t)&v177 - v11;
  sub_100007E8C(&qword_1011E4058);
  __chkstk_darwin();
  v178 = (uint64_t *)((char *)&v177 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v177 = sub_100007E8C(&qword_1011E4060);
  __chkstk_darwin();
  v180 = (uint64_t)&v177 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v179 = sub_100007E8C(&qword_1011E4068);
  __chkstk_darwin();
  v194 = (uint64_t)&v177 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v192 = (uint64_t)&v177 - v15;
  sub_100007E8C((uint64_t *)&unk_1011E4070);
  __chkstk_darwin();
  v210 = (char *)&v177 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v209 = (char *)&v177 - v17;
  v208 = type metadata accessor for Playlist(0);
  v207 = *(_QWORD *)(v208 - 8);
  __chkstk_darwin();
  v206 = (uint64_t *)((char *)&v177 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v199 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v198 = *(_QWORD *)(v199 - 8);
  __chkstk_darwin();
  v20 = (char *)&v177 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  v22 = (char *)&v177 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C((uint64_t *)&unk_1011E4DA0);
  __chkstk_darwin();
  v24 = (char *)&v177 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v203 = sub_100007E8C(&qword_1011E1AD0);
  v201 = *(_QWORD *)(v203 - 8);
  __chkstk_darwin();
  v26 = (char *)&v177 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v200 = sub_100007E8C((uint64_t *)&unk_1011E4DB0);
  __chkstk_darwin();
  v28 = (char *)&v177 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v202 = sub_100007E8C(&qword_1011E4080);
  __chkstk_darwin();
  v30 = (char *)&v177 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v204 = sub_100007E8C(&qword_1011E4088);
  __chkstk_darwin();
  v32 = (char *)&v177 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v205 = sub_100007E8C(&qword_1011E4090);
  __chkstk_darwin();
  v214 = (uint64_t)&v177 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v212 = (uint64_t)&v177 - v34;
  v213 = a1;
  sub_100C5B784(v24);
  v35 = enum case for Playlist.Variant.regular(_:);
  v36 = type metadata accessor for Playlist.Variant(0);
  v37 = *(_QWORD *)(v36 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 104))(v22, v35, v36);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v22, 0, 1, v36);
  v38 = sub_100007E8C(&qword_1011E4DE0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v22, 0, 10, v38);
  v217 = 0;
  v218 = 1;
  v219 = 0;
  v220 = 1;
  v221 = 0;
  v222 = 513;
  v39 = v198;
  v40 = v199;
  (*(void (**)(char *, _QWORD, uint64_t))(v198 + 104))(v20, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v199);
  static ArtworkImage.with(_:placeholder:size:reusePolicy:)((uint64_t)v24, (uint64_t)v22, (uint64_t)&v217, (uint64_t)v20, (uint64_t)v26);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v20, v40);
  sub_10005B748((uint64_t)v22, type metadata accessor for ArtworkImage.Placeholder);
  v41 = sub_10004FF60((uint64_t)v24, (uint64_t *)&unk_1011E4DA0);
  if (qword_1011DE1B0 != -1)
    v41 = swift_once(&qword_1011DE1B0, sub_100C66798);
  v42 = qword_1011E2FB8;
  v43 = static Alignment.center.getter(v41);
  _FrameLayout.init(width:height:alignment:)(v216, v42, 0, v42, 0, v43, v44);
  v45 = v201;
  v46 = v203;
  (*(void (**)(char *, char *, uint64_t))(v201 + 16))(v28, v26, v203);
  v47 = &v28[*(int *)(v200 + 36)];
  v48 = v216[1];
  *(_OWORD *)v47 = v216[0];
  *((_OWORD *)v47 + 1) = v48;
  *((_OWORD *)v47 + 2) = v216[2];
  (*(void (**)(char *, uint64_t))(v45 + 8))(v26, v46);
  if (qword_1011DE050 != -1)
    swift_once(&qword_1011DE050, sub_100C09D1C);
  v49 = static Corner.small;
  v50 = unk_10124FDB0;
  v51 = byte_10124FDB8;
  sub_10004A160((uint64_t)v28, (uint64_t)v30, (uint64_t *)&unk_1011E4DB0);
  v52 = &v30[*(int *)(v202 + 36)];
  *(_QWORD *)v52 = v49;
  *((_QWORD *)v52 + 1) = v50;
  v52[16] = v51;
  sub_10004FF60((uint64_t)v28, (uint64_t *)&unk_1011E4DB0);
  if (qword_1011DE070 != -1)
    swift_once(&qword_1011DE070, sub_100C0A0CC);
  v53 = static Border.artwork;
  v54 = qword_10124FE10;
  v55 = byte_10124FE18;
  v56 = static Corner.small;
  v57 = unk_10124FDB0;
  v58 = byte_10124FDB8;
  sub_10004A160((uint64_t)v30, (uint64_t)v32, &qword_1011E4080);
  v59 = &v32[*(int *)(v204 + 36)];
  *(_QWORD *)v59 = v53;
  *((_QWORD *)v59 + 1) = v54;
  v59[16] = v55;
  *((_QWORD *)v59 + 3) = v56;
  *((_QWORD *)v59 + 4) = v57;
  v59[40] = v58;
  swift_retain();
  v60 = sub_10004FF60((uint64_t)v30, &qword_1011E4080);
  static Color.black.getter(v60);
  v61 = Color.opacity(_:)(0.15);
  swift_release();
  v62 = v214;
  sub_10004A160((uint64_t)v32, v214, &qword_1011E4088);
  v63 = v62 + *(int *)(v205 + 36);
  *(_QWORD *)v63 = v61;
  *(_OWORD *)(v63 + 8) = xmmword_100EE8B30;
  *(_QWORD *)(v63 + 24) = 0x4000000000000000;
  sub_10004FF60((uint64_t)v32, &qword_1011E4088);
  sub_100065228(v62, v212, &qword_1011E4090);
  v64 = *(_QWORD *)(v213 + 8);
  KeyPath = swift_getKeyPath(&unk_100EF0998);
  swift_getKeyPath(&unk_100EF09C0);
  v66 = v206;
  static Published.subscript.getter(v206, v64, KeyPath);
  swift_release();
  v67 = swift_release();
  v68 = Playlist.name.getter(v67);
  v70 = v69;
  (*(void (**)(_QWORD *, uint64_t))(v207 + 8))(v66, v208);
  v215[0] = v68;
  v215[1] = v70;
  v71 = sub_100BBF2FC();
  v72 = Text.init<A>(_:)(v215, &type metadata for String, v71);
  v74 = v73;
  v76 = v75;
  v78 = v77 & 1;
  LODWORD(v215[0]) = static HierarchicalShapeStyle.primary.getter(v79);
  v80 = Text.foregroundStyle<A>(_:)(v215, v72, v74, v78, v76, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v82 = v81;
  v84 = v83;
  v86 = v85;
  sub_100055BAC(v72, v74, v78);
  swift_bridgeObjectRelease();
  if (qword_1011DE160 != -1)
    swift_once(&qword_1011DE160, sub_100C66474);
  swift_retain();
  v87 = v84 & 1;
  v89 = Text.font(_:)(v88, v80, v82, v87, v86);
  v91 = v90;
  v93 = v92;
  v95 = v94;
  swift_release();
  sub_100055BAC(v80, v82, v87);
  swift_bridgeObjectRelease();
  v97 = static Font.Weight.semibold.getter(v96);
  v207 = Text.fontWeight(_:)(*(_QWORD *)&v97, 0, v89, v91, v93 & 1, v95);
  v206 = v98;
  v100 = v99;
  v208 = v101;
  sub_100055BAC(v89, v91, v93 & 1);
  swift_bridgeObjectRelease();
  v102 = v213;
  v103 = sub_100C5A430();
  if ((v103 & 1) != 0)
  {
    LODWORD(v205) = v100;
    v104 = static VerticalAlignment.bottom.getter(v103);
    v105 = (uint64_t)v178;
    *v178 = v104;
    *(_QWORD *)(v105 + 8) = 0x4020000000000000;
    *(_BYTE *)(v105 + 16) = 0;
    v106 = sub_100007E8C(&qword_1011E40A8);
    sub_100C62E68(v102, (char *)(v105 + *(int *)(v106 + 44)));
    v107 = v180;
    sub_10004A160(v105, v180, &qword_1011E4058);
    *(_WORD *)(v107 + *(int *)(v177 + 36)) = 256;
    v108 = sub_10004FF60(v105, &qword_1011E4058);
    v109 = static Edge.Set.top.getter(v108);
    v110 = (uint64_t)v210;
    v111 = (uint64_t)v209;
    if (qword_1011DE198 != -1)
      swift_once(&qword_1011DE198, sub_100C66688);
    v112 = EdgeInsets.init(_all:)(*(double *)&qword_1011E2FA0);
    v114 = v113;
    v116 = v115;
    v118 = v117;
    v119 = v194;
    sub_10004A160(v107, v194, &qword_1011E4060);
    v120 = v119 + *(int *)(v179 + 36);
    *(_BYTE *)v120 = v109;
    *(double *)(v120 + 8) = v112;
    *(_QWORD *)(v120 + 16) = v114;
    *(_QWORD *)(v120 + 24) = v116;
    *(_QWORD *)(v120 + 32) = v118;
    *(_BYTE *)(v120 + 40) = 0;
    sub_10004FF60(v107, &qword_1011E4060);
    v121 = v192;
    sub_100065228(v119, v192, &qword_1011E4068);
    v122 = v185;
    v123 = sub_100C63C18(v102, v185);
    v124 = static Alignment.leading.getter(v123);
    v125 = v188;
    sub_100C87A00(0, 1, 0.0, 1, INFINITY, 0, 0, 1, v188, v127, 0.0, 1, 0.0, 1, v124, v126);
    sub_10004FF60(v122, &qword_1011E4E50);
    v128 = swift_getKeyPath(&unk_100EF0C20);
    v129 = v186;
    sub_10004A160(v125, v186, &qword_1011E4020);
    v130 = v129 + *(int *)(v182 + 36);
    *(_QWORD *)v130 = v128;
    *(_QWORD *)(v130 + 8) = 0;
    *(_BYTE *)(v130 + 16) = 1;
    sub_10004FF60(v125, &qword_1011E4020);
    v131 = v187;
    sub_10004A160(v129, v187, &qword_1011E4028);
    *(_WORD *)(v131 + *(int *)(v181 + 36)) = 256;
    v132 = sub_10004FF60(v129, &qword_1011E4028);
    LODWORD(v128) = static HierarchicalShapeStyle.secondary.getter(v132);
    v133 = v190;
    sub_10004A160(v131, v190, &qword_1011E4030);
    *(_DWORD *)(v133 + *(int *)(v183 + 36)) = v128;
    v134 = sub_10004FF60(v131, &qword_1011E4030);
    v135 = static Font.footnote.getter(v134);
    v136 = swift_getKeyPath(&unk_100EF0A88);
    v137 = v191;
    sub_10004A160(v133, v191, &qword_1011E4038);
    v138 = (uint64_t *)(v137 + *(int *)(v184 + 36));
    *v138 = v136;
    v138[1] = v135;
    v139 = sub_10004FF60(v133, &qword_1011E4038);
    LOBYTE(v135) = static Edge.Set.horizontal.getter(v139);
    v140 = EdgeInsets.init(_all:)(18.0);
    v142 = v141;
    v144 = v143;
    v146 = v145;
    v147 = v195;
    sub_10004A160(v137, v195, &qword_1011E4040);
    v148 = v147 + *(int *)(v189 + 36);
    *(_BYTE *)v148 = v135;
    *(double *)(v148 + 8) = v140;
    *(_QWORD *)(v148 + 16) = v142;
    *(_QWORD *)(v148 + 24) = v144;
    *(_QWORD *)(v148 + 32) = v146;
    *(_BYTE *)(v148 + 40) = 0;
    v149 = sub_10004FF60(v137, &qword_1011E4040);
    v150 = static Edge.Set.top.getter(v149);
    if (qword_1011DE1A0 != -1)
      swift_once(&qword_1011DE1A0, sub_100C666E0);
    v151 = EdgeInsets.init(_all:)(*(double *)&qword_1011E2FA8);
    v153 = v152;
    v155 = v154;
    v157 = v156;
    v158 = v197;
    sub_10004A160(v147, v197, &qword_1011E4048);
    v159 = v158 + *(int *)(v193 + 36);
    *(_BYTE *)v159 = v150;
    *(double *)(v159 + 8) = v151;
    *(_QWORD *)(v159 + 16) = v153;
    *(_QWORD *)(v159 + 24) = v155;
    *(_QWORD *)(v159 + 32) = v157;
    *(_BYTE *)(v159 + 40) = 0;
    sub_10004FF60(v147, &qword_1011E4048);
    v160 = v196;
    sub_100065228(v158, v196, &qword_1011E4050);
    sub_10004A160(v121, v119, &qword_1011E4068);
    sub_10004A160(v160, v158, &qword_1011E4050);
    sub_10004A160(v119, v110, &qword_1011E4068);
    v161 = sub_100007E8C(&qword_1011E40B0);
    sub_10004A160(v158, v110 + *(int *)(v161 + 48), &qword_1011E4050);
    v162 = v110 + *(int *)(v161 + 64);
    *(_QWORD *)v162 = 0x3FF0000000000000;
    *(_BYTE *)(v162 + 8) = 0;
    sub_10004FF60(v160, &qword_1011E4050);
    sub_10004FF60(v121, &qword_1011E4068);
    sub_10004FF60(v158, &qword_1011E4050);
    sub_10004FF60(v119, &qword_1011E4068);
    v163 = sub_100007E8C(&qword_1011E4098);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v163 - 8) + 56))(v110, 0, 1, v163);
    v164 = sub_100065228(v110, v111, (uint64_t *)&unk_1011E4070);
    LOBYTE(v100) = v205;
  }
  else
  {
    v165 = sub_100007E8C(&qword_1011E4098);
    v111 = (uint64_t)v209;
    v164 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v165 - 8) + 56))(v209, 1, 1, v165);
    v110 = (uint64_t)v210;
  }
  v166 = v100 & 1;
  v213 = static VerticalAlignment.center.getter(v164);
  v167 = v212;
  v168 = v214;
  sub_10004A160(v212, v214, &qword_1011E4090);
  sub_10004A160(v111, v110, (uint64_t *)&unk_1011E4070);
  v169 = v211;
  sub_10004A160(v168, v211, &qword_1011E4090);
  v170 = v111;
  v171 = (int *)sub_100007E8C(&qword_1011E40A0);
  v172 = v169 + v171[12];
  v173 = v207;
  v174 = v206;
  *(_QWORD *)v172 = v207;
  *(_QWORD *)(v172 + 8) = v174;
  *(_BYTE *)(v172 + 16) = v166;
  *(_QWORD *)(v172 + 24) = v208;
  sub_10004A160(v110, v169 + v171[16], (uint64_t *)&unk_1011E4070);
  v175 = v169 + v171[20];
  *(_QWORD *)v175 = v213;
  *(_QWORD *)(v175 + 8) = 0;
  *(_BYTE *)(v175 + 16) = 1;
  *(_QWORD *)(v175 + 24) = 0;
  *(_BYTE *)(v175 + 32) = 1;
  sub_100055BBC(v173, (uint64_t)v174, v166);
  swift_bridgeObjectRetain();
  sub_10004FF60(v170, (uint64_t *)&unk_1011E4070);
  sub_10004FF60(v167, &qword_1011E4090);
  sub_10004FF60(v110, (uint64_t *)&unk_1011E4070);
  sub_100055BAC(v173, (uint64_t)v174, v166);
  swift_bridgeObjectRelease();
  return sub_10004FF60(v168, &qword_1011E4090);
}

uint64_t sub_100C62E68@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t KeyPath;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  unsigned int (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  BOOL v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t (**v74)();
  uint64_t v75;
  uint64_t v76;
  void (*v77)(char *, char *, uint64_t);
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  void (*v82)(char *, uint64_t);
  uint64_t v84;
  char *v85;
  unsigned int (*v86)(uint64_t, uint64_t, uint64_t);
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  _BYTE *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  unsigned int v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  uint64_t v114;
  _QWORD v115[2];
  unsigned __int8 v116;

  v108 = a2;
  v104 = sub_100007E8C(&qword_1011E4130);
  v106 = *(_QWORD *)(v104 - 8);
  __chkstk_darwin();
  v96 = (uint64_t)&v85 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v95 = (uint64_t)&v85 - v4;
  sub_100007E8C(&qword_1011E4138);
  __chkstk_darwin();
  v107 = (uint64_t)&v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v103 = (char *)&v85 - v6;
  sub_100007E8C(&qword_1011DE770);
  __chkstk_darwin();
  v94 = (uint64_t)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v9 = (char *)&v85 - v8;
  sub_100007E8C(&qword_1011E3920);
  __chkstk_darwin();
  v11 = (uint64_t *)((char *)&v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v100 = type metadata accessor for Collaboration.Management.View(0);
  v12 = *(_QWORD *)(v100 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin();
  v14 = (char *)&v85 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = _s10ManagementO4ViewV5ShareO6ButtonVMa(0);
  __chkstk_darwin();
  v93 = (char *)&v85 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v18 = (char *)&v85 - v17;
  v112 = sub_100007E8C(&qword_1011E4140);
  __chkstk_darwin();
  v92 = (uint64_t)&v85 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v97 = (uint64_t)&v85 - v20;
  v21 = sub_100007E8C(&qword_1011E4148);
  v22 = *(_QWORD *)(v21 - 8);
  v101 = v21;
  v102 = v22;
  __chkstk_darwin();
  v105 = (char *)&v85 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v99 = (char *)&v85 - v24;
  __chkstk_darwin();
  v98 = (char *)&v85 - v25;
  sub_10005B704(a1, (uint64_t)v14, type metadata accessor for Collaboration.Management.View);
  v26 = *(unsigned __int8 *)(v12 + 80);
  v27 = (v26 + 16) & ~v26;
  v110 = v26 | 7;
  v111 = v27 + v13;
  v28 = swift_allocObject(&unk_10110B998, v27 + v13, v26 | 7);
  sub_10005B6C0((uint64_t)v14, v28 + v27, type metadata accessor for Collaboration.Management.View);
  *v11 = swift_getKeyPath(&unk_100EF0CF8);
  v88 = sub_100007E8C(&qword_1011DE4A8);
  swift_storeEnumTagMultiPayload(v11, v88, 0);
  KeyPath = swift_getKeyPath(&unk_100EF0D28);
  *v18 = 0;
  *((_QWORD *)v18 + 1) = sub_100C76E94;
  *((_QWORD *)v18 + 2) = v28;
  v30 = (uint64_t)&v18[*(int *)(v15 + 24)];
  v91 = v11;
  sub_100065228((uint64_t)v11, v30, &qword_1011E3920);
  v90 = v15;
  v31 = &v18[*(int *)(v15 + 28)];
  *(_QWORD *)v31 = KeyPath;
  v31[8] = 0;
  sub_100C5B5B8((uint64_t)v9);
  v32 = type metadata accessor for URL(0);
  v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48);
  v109 = 1;
  v87 = v32;
  v86 = v33;
  LOBYTE(KeyPath) = ((unsigned int (*)(char *, uint64_t))v33)(v9, 1) == 1;
  sub_10004FF60((uint64_t)v9, &qword_1011DE770);
  v34 = swift_getKeyPath(&unk_100EF0D58);
  v35 = swift_allocObject(&unk_10110B9C0, 17, 7);
  *(_BYTE *)(v35 + 16) = KeyPath;
  v36 = v97;
  sub_10005B704((uint64_t)v18, v97, _s10ManagementO4ViewV5ShareO6ButtonVMa);
  v37 = v112;
  v38 = (uint64_t *)(v36 + *(int *)(v112 + 36));
  *v38 = v34;
  v38[1] = (uint64_t)sub_100447DFC;
  v38[2] = v35;
  sub_10005B748((uint64_t)v18, _s10ManagementO4ViewV5ShareO6ButtonVMa);
  v39 = a1;
  v40 = a1 + *(int *)(v100 + 36);
  v41 = *(_BYTE *)v40;
  v42 = *(_QWORD *)(v40 + 8);
  v113 = v41;
  v114 = v42;
  v43 = sub_100007E8C(&qword_1011E1B98);
  State.projectedValue.getter(v115, v43);
  v44 = v115[0];
  v45 = v115[1];
  v46 = v116;
  v100 = v39;
  sub_10005B704(v39, (uint64_t)v14, type metadata accessor for Collaboration.Management.View);
  v47 = swift_allocObject(&unk_10110B9E8, v111, v110);
  v89 = v27;
  v85 = v14;
  sub_10005B6C0((uint64_t)v14, v47 + v27, type metadata accessor for Collaboration.Management.View);
  v48 = sub_100007E8C(&qword_1011E4150);
  v49 = sub_100C76F10();
  v50 = sub_10062A594(&qword_1011E4178, &qword_1011E4150, (void (*)(void))sub_100C74C34);
  v84 = v48;
  v52 = v98;
  v51 = v99;
  View.sheet<A>(isPresented:onDismiss:content:)(v44, v45, v46, 0, 0, sub_100C76ED4, v47, v37, v84, v49, v50);
  v53 = v101;
  swift_release();
  swift_release();
  v54 = (uint64_t)v103;
  swift_release();
  v55 = v102;
  sub_10004FF60(v36, &qword_1011E4140);
  v56 = v104;
  (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v52, v51, v53);
  v57 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  v58 = objc_msgSend(v57, "userInterfaceIdiom");

  if (v58 != (id)6)
  {
    v59 = (uint64_t)v85;
    sub_10005B704(v100, (uint64_t)v85, type metadata accessor for Collaboration.Management.View);
    v60 = swift_allocObject(&unk_10110BA10, v111, v110);
    sub_10005B6C0(v59, v60 + v89, type metadata accessor for Collaboration.Management.View);
    v61 = swift_getKeyPath(&unk_100EF0CF8);
    v62 = (uint64_t)v91;
    *v91 = v61;
    swift_storeEnumTagMultiPayload(v62, v88, 0);
    v63 = swift_getKeyPath(&unk_100EF0D28);
    v64 = (uint64_t)v93;
    *v93 = 1;
    *(_QWORD *)(v64 + 8) = sub_100C76FB0;
    *(_QWORD *)(v64 + 16) = v60;
    v65 = v90;
    sub_100065228(v62, v64 + *(int *)(v90 + 24), &qword_1011E3920);
    v66 = v64 + *(int *)(v65 + 28);
    *(_QWORD *)v66 = v63;
    *(_BYTE *)(v66 + 8) = 0;
    v67 = v94;
    sub_100C5B5B8(v94);
    v68 = v86(v67, 1, v87) == 1;
    sub_10004FF60(v67, &qword_1011DE770);
    v69 = swift_getKeyPath(&unk_100EF0D58);
    v70 = swift_allocObject(&unk_10110BA38, 17, 7);
    *(_BYTE *)(v70 + 16) = v68;
    v71 = v92;
    sub_10005B704(v64, v92, _s10ManagementO4ViewV5ShareO6ButtonVMa);
    v72 = (uint64_t *)(v71 + *(int *)(v112 + 36));
    *v72 = v69;
    v72[1] = (uint64_t)sub_100500040;
    v72[2] = v70;
    sub_10005B748(v64, _s10ManagementO4ViewV5ShareO6ButtonVMa);
    v73 = v96;
    sub_10004A160(v71, v96, &qword_1011E4140);
    v74 = (uint64_t (**)())(v73 + *(int *)(v56 + 36));
    *v74 = sub_100C63BF4;
    v74[1] = 0;
    sub_10004FF60(v71, &qword_1011E4140);
    v75 = v73;
    v76 = v95;
    sub_100065228(v75, v95, &qword_1011E4130);
    sub_100065228(v76, v54, &qword_1011E4130);
    v109 = 0;
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v106 + 56))(v54, v109, 1, v56);
  v77 = *(void (**)(char *, char *, uint64_t))(v55 + 16);
  v78 = v105;
  v77(v105, v52, v53);
  v79 = v107;
  sub_10004A160(v54, v107, &qword_1011E4138);
  v80 = v108;
  v77(v108, v78, v53);
  v81 = sub_100007E8C(&qword_1011E4180);
  sub_10004A160(v79, (uint64_t)&v80[*(int *)(v81 + 48)], &qword_1011E4138);
  sub_10004FF60(v54, &qword_1011E4138);
  v82 = *(void (**)(char *, uint64_t))(v55 + 8);
  v82(v52, v53);
  sub_10004FF60(v79, &qword_1011E4138);
  return ((uint64_t (*)(char *, uint64_t))v82)(v78, v53);
}

uint64_t sub_100C63780(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  char *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  _BYTE v17[9];
  uint64_t v18;

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin();
  v5 = &v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 1];
  v6 = (char *)(a1 + *(int *)(type metadata accessor for Collaboration.Management.View(0) + 36));
  v7 = *v6;
  v8 = *((_QWORD *)v6 + 1);
  v17[1] = v7;
  v18 = v8;
  v17[0] = 1;
  v9 = sub_100007E8C(&qword_1011E1B98);
  State.wrappedValue.setter(v17, v9);
  v10 = Logger.collaboration.unsafeMutableAddressor();
  v11 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v3 + 16))(v5, v10, v2);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "[Management] Share Sheet button tapped", v14, 2u);
    swift_slowDealloc(v14, -1, -1);
  }

  return (*(uint64_t (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_100C638C8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;

  v4 = type metadata accessor for Collaboration.Object(0);
  __chkstk_darwin();
  v6 = (uint64_t *)((char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100007E8C(&qword_1011DE770);
  __chkstk_darwin();
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin();
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a1 + 8);
  sub_100C5B5B8((uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    result = sub_10004FF60((uint64_t)v8, &qword_1011DE770);
    v15 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    KeyPath = swift_getKeyPath(&unk_100EF0998);
    swift_getKeyPath(&unk_100EF09C0);
    static Published.subscript.getter(v6, v13, KeyPath);
    swift_release();
    swift_release();
    swift_storeEnumTagMultiPayload(v6, v4, 1);
    swift_retain();
    v15 = Collaboration.Manager.activityViewController(for:url:)((uint64_t)v6, (uint64_t)v12);
    swift_release();
    sub_10005B748((uint64_t)v6, type metadata accessor for Collaboration.Object);
    result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  *a2 = v15;
  return result;
}

uint64_t sub_100C63AAC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  char *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  _BYTE v17[9];
  uint64_t v18;

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin();
  v5 = &v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 1];
  v6 = (char *)(a1 + *(int *)(type metadata accessor for Collaboration.Management.View(0) + 40));
  v7 = *v6;
  v8 = *((_QWORD *)v6 + 1);
  v17[1] = v7;
  v18 = v8;
  v17[0] = 1;
  v9 = sub_100007E8C(&qword_1011E1B98);
  State.wrappedValue.setter(v17, v9);
  v10 = Logger.collaboration.unsafeMutableAddressor();
  v11 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v3 + 16))(v5, v10, v2);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "[Management] QRCode button tapped", v14, 2u);
    swift_slowDealloc(v14, -1, -1);
  }

  return (*(uint64_t (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_100C63BF4()
{
  return Transaction.disablesAnimations.setter(1);
}

uint64_t sub_100C63C18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v57;
  _BYTE v58[4];
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE *v63;
  _BYTE *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _BYTE *v70;
  uint64_t v71;
  uint64_t v72;
  _BYTE *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  _BYTE *v77;
  uint64_t v78;
  uint64_t v79;

  v78 = a2;
  v72 = sub_100007E8C(&qword_1011E40B8);
  __chkstk_darwin();
  v76 = (uint64_t *)&v58[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v68 = *(_QWORD *)(type metadata accessor for Collaboration.Management.View(0) - 8);
  __chkstk_darwin();
  v69 = v4;
  v70 = &v58[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for OpenURLAction(0);
  v74 = *(_QWORD *)(v5 - 8);
  v75 = v5;
  __chkstk_darwin();
  v73 = &v58[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_100007E8C(&qword_1011E40C0);
  __chkstk_darwin();
  v9 = &v58[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  v77 = &v58[-v10];
  v11 = sub_100007E8C(&qword_1011E40C8);
  __chkstk_darwin();
  v13 = &v58[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100007E8C(&qword_1011E40D0);
  __chkstk_darwin();
  v15 = &v58[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = sub_100007E8C(&qword_1011E40D8);
  __chkstk_darwin();
  v18 = &v58[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v71 = a1;
  v19 = *(_QWORD *)(a1 + 8);
  KeyPath = swift_getKeyPath(&unk_100EF0BD8);
  swift_getKeyPath(&unk_100EF0C00);
  static Published.subscript.getter(&v79, v19, KeyPath);
  swift_release();
  swift_release();
  if (v79 == 1)
  {
    *(_QWORD *)v18 = static VerticalAlignment.center.getter(v21);
    *((_QWORD *)v18 + 1) = 0x4020000000000000;
    v18[16] = 0;
    v22 = sub_100007E8C(&qword_1011E4110);
    sub_100C641F8(&v18[*(int *)(v22 + 44)]);
    sub_10004A160((uint64_t)v18, (uint64_t)v13, &qword_1011E40D8);
    swift_storeEnumTagMultiPayload(v13, v11, 0);
    v23 = sub_100049F28(&qword_1011E40E8, &qword_1011E40D8, (uint64_t)&protocol conformance descriptor for HStack<A>);
    v24 = sub_100C76D14();
    _ConditionalContent<>.init(storage:)(v13, v16, v7, v23, v24);
    sub_10004FF60((uint64_t)v18, &qword_1011E40D8);
    v25 = sub_100007E8C(&qword_1011E40E0);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v15, 0, 1, v25);
    v26 = (uint64_t)v15;
    return sub_100065228(v26, v78, &qword_1011E40D0);
  }
  v63 = v15;
  v64 = v13;
  v65 = v11;
  v66 = v16;
  v67 = v7;
  v27 = sub_100C5AD28();
  if (v28)
  {
    v29 = LocalizedStringKey.init(_:)(v27);
    v30 = Text.init(_:tableName:bundle:comment:)(v29);
    v61 = v31;
    v62 = v30;
    v33 = v32;
    v35 = v34 & 1;
    v36 = static Color.accentColor.getter(v30, v31);
    v37 = swift_getKeyPath(&unk_100EF09E0);
    v60 = swift_getKeyPath(&unk_100EF02F0);
    v38 = v70;
    sub_10005B704(v71, (uint64_t)v70, type metadata accessor for Collaboration.Management.View);
    v39 = *(unsigned __int8 *)(v68 + 80);
    v40 = (v39 + 16) & ~v39;
    v41 = swift_allocObject(&unk_10110B948, v40 + v69, v39 | 7);
    sub_10005B6C0((uint64_t)v38, v41 + v40, type metadata accessor for Collaboration.Management.View);
    v42 = v73;
    OpenURLAction.init(handler:)(sub_100C76CC8, v41);
    v44 = v75;
    v43 = v76;
    v45 = v74;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v74 + 16))((_BYTE *)v76 + *(int *)(v72 + 28), v42, v75);
    *v43 = v60;
    sub_10004A160((uint64_t)v43, (uint64_t)&v9[*(int *)(v67 + 36)], &qword_1011E40B8);
    v47 = v61;
    v46 = v62;
    *(_QWORD *)v9 = v62;
    *((_QWORD *)v9 + 1) = v47;
    v48 = v35;
    v59 = v35;
    v9[16] = v35;
    *((_QWORD *)v9 + 3) = v33;
    *((_QWORD *)v9 + 4) = v37;
    *((_QWORD *)v9 + 5) = v36;
    v49 = v46;
    sub_100055BBC(v46, v47, v48);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_10004FF60((uint64_t)v43, &qword_1011E40B8);
    (*(void (**)(_BYTE *, uint64_t))(v45 + 8))(v42, v44);
    sub_100055BAC(v49, v47, v59);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    v50 = v77;
    sub_100065228((uint64_t)v9, (uint64_t)v77, &qword_1011E40C0);
    v51 = (uint64_t)v64;
    sub_10004A160((uint64_t)v50, (uint64_t)v64, &qword_1011E40C0);
    swift_storeEnumTagMultiPayload(v51, v65, 1);
    v52 = sub_100049F28(&qword_1011E40E8, &qword_1011E40D8, (uint64_t)&protocol conformance descriptor for HStack<A>);
    v53 = sub_100C76D14();
    v54 = (uint64_t)v63;
    _ConditionalContent<>.init(storage:)(v51, v66, v67, v52, v53);
    sub_10004FF60((uint64_t)v50, &qword_1011E40C0);
    v55 = sub_100007E8C(&qword_1011E40E0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v54, 0, 1, v55);
    v26 = v54;
    return sub_100065228(v26, v78, &qword_1011E40D0);
  }
  v57 = sub_100007E8C(&qword_1011E40E0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v78, 1, 1, v57);
}

uint64_t sub_100C641F8@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  void (*v27)(char *, char *, uint64_t);
  char *v28;
  char *v29;
  void (*v30)(char *, uint64_t);
  __n128 v31;
  char *v33;
  _QWORD v34[3];

  v33 = a1;
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v2 = (char *)&v34[-1] - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v6 = (char *)&v34[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v8 = (char *)&v34[-1] - v7;
  v9 = sub_100007E8C(&qword_1011E3A88);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin();
  v12 = (char *)&v34[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin();
  v15 = (char *)&v34[-1] - v14;
  ProgressView<>.init<>()(v13);
  String.LocalizationValue.init(stringLiteral:)(0x1000000000000018, 0x8000000100E56DD0);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v8, v3);
  if (qword_1011DDE30 != -1)
    swift_once(&qword_1011DDE30, sub_100BA7618);
  v16 = qword_10124F040;
  static Locale.current.getter((id)qword_10124F040);
  v17 = String.init(localized:table:bundle:locale:comment:)(v6, 0, 0, v16, v2, 0, 0, 256);
  v19 = v18;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v8, v3);
  v34[0] = v17;
  v34[1] = v19;
  v20 = sub_100BBF2FC();
  v21 = Text.init<A>(_:)(v34, &type metadata for String, v20);
  v23 = v22;
  v25 = v24;
  LOBYTE(v19) = v26 & 1;
  v27 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v27(v12, v15, v9);
  v28 = v33;
  v27(v33, v12, v9);
  v29 = &v28[*(int *)(sub_100007E8C(&qword_1011E4118) + 48)];
  *(_QWORD *)v29 = v21;
  *((_QWORD *)v29 + 1) = v23;
  v29[16] = v19;
  *((_QWORD *)v29 + 3) = v25;
  sub_100055BBC(v21, v23, v19);
  v30 = *(void (**)(char *, uint64_t))(v10 + 8);
  swift_bridgeObjectRetain();
  v30(v15, v9);
  sub_100055BAC(v21, v23, v19);
  v31 = swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t, __n128))v30)(v12, v9, v31);
}

uint64_t sub_100C64490(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10086DA64(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for OpenURLAction, (uint64_t (*)(char *))&EnvironmentValues.openURL.setter);
}

uint64_t sub_100C644A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  __n128 v10;
  uint64_t v12;
  char v13;

  sub_100007E8C(&qword_1011E0490);
  __chkstk_darwin();
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(a2 + 8);
  KeyPath = swift_getKeyPath(&unk_100EF0BD8);
  v7 = swift_getKeyPath(&unk_100EF0C00);
  v13 = 1;
  swift_retain();
  static Published.subscript.setter(&v13, v5, KeyPath, v7);
  v8 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v4, 1, 1, v8);
  v9 = (_QWORD *)swift_allocObject(&unk_10110B970, 40, 7);
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = v5;
  swift_retain();
  sub_100BF76B8((uint64_t)v4, (uint64_t)&unk_1011E4128, (uint64_t)v9);
  v10 = swift_release();
  return static OpenURLAction.Result.handled.getter(v10);
}

uint64_t sub_100C645C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28;
  _BYTE v29[8];
  uint64_t v30;
  unint64_t v31;
  void *v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  sub_100007E8C(&qword_1011DE770);
  __chkstk_darwin();
  v3 = &v29[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = &v29[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_100C5B5B8((uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    result = sub_10004FF60((uint64_t)v3, &qword_1011DE770);
    v9 = 0;
    v10 = 0;
LABEL_6:
    v17 = 0;
    v20 = 0;
    v27 = 0;
    v23 = 0;
    v25 = 0;
    v26 = 0uLL;
    goto LABEL_7;
  }
  v11 = (*(uint64_t (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
  v12 = URL.dataRepresentation.getter(v11);
  QRCode.init(data:errorCorrectionLevel:)(v12, v13, 76, (uint64_t)v29);
  v14 = v30;
  v15 = v31;
  v16 = v32;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  result = sub_100065228((uint64_t)v29, (uint64_t)&v33, (uint64_t *)&unk_1011E4010);
  v10 = v35;
  if (!v35)
  {
    v9 = 0;
    goto LABEL_6;
  }
  v28 = v33;
  v9 = v34;
  v17 = v36;
  sub_100079DE4(v14, v15);
  v18 = v16;
  v20 = static SafeAreaRegions.all.getter(v19);
  v21 = static Edge.Set.all.getter(v20);
  v22 = v21;
  v23 = static Alignment.center.getter(v21);
  v25 = v24;
  result = sub_1007C5020((uint64_t)v29);
  v26 = v28;
  v27 = v22;
LABEL_7:
  *(_OWORD *)a1 = v26;
  *(_QWORD *)(a1 + 16) = v9;
  *(_QWORD *)(a1 + 24) = v10;
  *(_QWORD *)(a1 + 32) = v17;
  *(_QWORD *)(a1 + 40) = v20;
  *(_QWORD *)(a1 + 48) = v27;
  *(_QWORD *)(a1 + 56) = v23;
  *(_QWORD *)(a1 + 64) = v25;
  return result;
}

uint64_t sub_100C647A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _BYTE v26[15];
  _BYTE v27[9];
  uint64_t v28;

  v6 = sub_100007E8C(&qword_1011E0640);
  __chkstk_darwin();
  v8 = &v26[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  v10 = &v26[-v9];
  sub_100007E8C(&qword_1011E3530);
  __chkstk_darwin();
  v12 = &v26[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for Playlist.Collaborator(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin();
  v17 = &v26[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v14 + 16))(v17, a1, v13, v15);
  v18 = *(_QWORD *)(a2 + 8);
  *v12 = swift_getKeyPath(&unk_100EF02F0);
  v19 = sub_100007E8C(&qword_1011DE438);
  swift_storeEnumTagMultiPayload(v12, v19, 0);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v14 + 32))(a3, v17, v13);
  v20 = (int *)_s10ManagementO4ViewV19CollaboratorRowViewVMa(0);
  *(_QWORD *)(a3 + v20[5]) = v18;
  v21 = a3 + v20[6];
  v27[0] = 0;
  swift_retain();
  State.init(wrappedValue:)(v27, &type metadata for Bool);
  v22 = v28;
  *(_BYTE *)v21 = v27[1];
  *(_QWORD *)(v21 + 8) = v22;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v10, 1, 1, v13);
  sub_10004A160((uint64_t)v10, (uint64_t)v8, &qword_1011E0640);
  State.init(wrappedValue:)(v8, v6);
  sub_10004FF60((uint64_t)v10, &qword_1011E0640);
  v23 = (_QWORD *)(a3 + v20[8]);
  *v23 = swift_getKeyPath(&unk_100EF02C0);
  v24 = sub_100007E8C(&qword_1011DE430);
  swift_storeEnumTagMultiPayload(v23, v24, 0);
  return sub_100065228((uint64_t)v12, a3 + v20[9], &qword_1011E3530);
}

uint64_t sub_100C649F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t OpaqueTypeConformance2;
  uint64_t v33;
  __n128 v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42[16];
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;

  v41 = a2;
  v3 = type metadata accessor for BorderlessButtonStyle(0);
  v38 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = type metadata accessor for Collaboration.Management.View(0);
  v6 = *(_QWORD *)(v37 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin();
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011E3FA0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin();
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011E3F98);
  v14 = *(_QWORD *)(v13 - 8);
  v39 = v13;
  v40 = v14;
  __chkstk_darwin();
  v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B704(a1, (uint64_t)v8, type metadata accessor for Collaboration.Management.View);
  v17 = *(unsigned __int8 *)(v6 + 80);
  v18 = (v17 + 16) & ~v17;
  v19 = swift_allocObject(&unk_10110B830, v18 + v7, v17 | 7);
  sub_10005B6C0((uint64_t)v8, v19 + v18, type metadata accessor for Collaboration.Management.View);
  v20 = sub_100007E8C(&qword_1011E3FB8);
  v21 = sub_100C76890();
  v22 = Button.init(action:label:)(sub_100C7687C, v19, sub_100C64E38, 0, v20, v21);
  BorderlessButtonStyle.init()(v22);
  v23 = sub_100049F28(&qword_1011E3FA8, &qword_1011E3FA0, (uint64_t)&protocol conformance descriptor for Button<A>);
  v24 = sub_100048748(&qword_1011E3FB0, (uint64_t (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle, (uint64_t)&protocol conformance descriptor for BorderlessButtonStyle);
  View.buttonStyle<A>(_:)(v5, v9, v3, v23, v24);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v25 = a1 + *(int *)(v37 + 48);
  v26 = *(_BYTE *)v25;
  v27 = *(_QWORD *)(v25 + 8);
  v48 = v26;
  v49 = v27;
  v28 = sub_100007E8C(&qword_1011E1B98);
  State.projectedValue.getter(&v44, v28);
  v29 = v44;
  v30 = v45;
  v31 = v46;
  v43 = a1;
  v44 = v9;
  v45 = v3;
  v46 = v23;
  v47 = v24;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v44, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
  v33 = v39;
  View.alert(isPresented:content:)(v29, v30, v31, sub_100C769A0, v42, v39, OpaqueTypeConformance2);
  swift_release();
  v34 = swift_release();
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v40 + 8))(v16, v33, v34);
}

uint64_t sub_100C64CF0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  char *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  _BYTE v17[9];
  uint64_t v18;

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin();
  v5 = &v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 1];
  v6 = (char *)(a1 + *(int *)(type metadata accessor for Collaboration.Management.View(0) + 48));
  v7 = *v6;
  v8 = *((_QWORD *)v6 + 1);
  v17[1] = v7;
  v18 = v8;
  v17[0] = 1;
  v9 = sub_100007E8C(&qword_1011E1B98);
  State.wrappedValue.setter(v17, v9);
  v10 = Logger.collaboration.unsafeMutableAddressor();
  v11 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v3 + 16))(v5, v10, v2);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "[Management] Remove Join Request button tapped", v14, 2u);
    swift_slowDealloc(v14, -1, -1);
  }

  return (*(uint64_t (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
}

__n128 sub_100C64E38@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t KeyPath;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __n128 result;
  _BYTE v30[16];
  _OWORD v31[9];
  __int128 v32;
  __n128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;

  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v3 = &v30[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for String.LocalizationValue(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = &v30[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  v9 = &v30[-v8];
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000013, 0x8000000100E56C90);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 16))(v7, v9, v4);
  if (qword_1011DDE30 != -1)
    swift_once(&qword_1011DDE30, sub_100BA7618);
  v10 = qword_10124F040;
  static Locale.current.getter((id)qword_10124F040);
  v11 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v10, v3, 0, 0, 256);
  v13 = v12;
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v9, v4);
  *(_QWORD *)&v32 = v11;
  *((_QWORD *)&v32 + 1) = v13;
  v14 = sub_100BBF2FC();
  v15 = Text.init<A>(_:)(&v32, &type metadata for String, v14);
  v17 = v16;
  v19 = v18;
  LOBYTE(v13) = v20 & 1;
  v21 = static Alignment.center.getter(v15);
  sub_100149C8C(0, 1, 0.0, 1, INFINITY, 0, 0, 1, (uint64_t)v31, v23, 0.0, 1, 0.0, 1, v21, v22, v15, v17, v13, v19);
  sub_100055BAC(v15, v17, v13);
  swift_bridgeObjectRelease();
  v38 = v31[6];
  v39 = v31[7];
  v40 = v31[8];
  v34 = v31[2];
  v35 = v31[3];
  v36 = v31[4];
  v37 = v31[5];
  v32 = v31[0];
  v33 = (__n128)v31[1];
  v24 = static Color.red.getter();
  KeyPath = swift_getKeyPath(&unk_100EF0A58);
  v26 = v39;
  *(_OWORD *)(a1 + 96) = v38;
  *(_OWORD *)(a1 + 112) = v26;
  *(_OWORD *)(a1 + 128) = v40;
  v27 = v35;
  *(_OWORD *)(a1 + 32) = v34;
  *(_OWORD *)(a1 + 48) = v27;
  v28 = v37;
  *(_OWORD *)(a1 + 64) = v36;
  *(_OWORD *)(a1 + 80) = v28;
  result = v33;
  *(_OWORD *)a1 = v32;
  *(__n128 *)(a1 + 16) = result;
  *(_QWORD *)(a1 + 144) = KeyPath;
  *(_QWORD *)(a1 + 152) = v24;
  return result;
}

uint64_t sub_100C650BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  __n128 v50;
  char *v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v62 = a1;
  v66 = a2;
  v60 = *(_QWORD *)(type metadata accessor for Collaboration.Management.View(0) - 8);
  v2 = __chkstk_darwin();
  v61 = v3;
  v63 = (uint64_t)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Alert.Button(0, v2);
  __chkstk_darwin();
  v65 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v64 = (char *)&v53 - v5;
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v7 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for String.LocalizationValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin();
  v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v13 = (char *)&v53 - v12;
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000017, 0x8000000100E56C30);
  v14 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v14(v11, v13, v8);
  if (qword_1011DDE30 != -1)
    swift_once(&qword_1011DDE30, sub_100BA7618);
  v15 = qword_10124F040;
  static Locale.current.getter((id)qword_10124F040);
  v16 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v15, v7, 0, 0, 256);
  v18 = v17;
  v19 = *(void (**)(char *, uint64_t))(v9 + 8);
  v19(v13, v8);
  v67 = v16;
  v68 = v18;
  v20 = sub_100BBF2FC();
  v21 = Text.init<A>(_:)(&v67, &type metadata for String, v20);
  v58 = v22;
  v59 = v21;
  v56 = v23;
  v57 = v24;
  String.LocalizationValue.init(stringLiteral:)(0x1000000000000037, 0x8000000100E56C50);
  v14(v11, v13, v8);
  v25 = qword_10124F040;
  static Locale.current.getter((id)qword_10124F040);
  v26 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v25, v7, 0, 0, 256);
  v28 = v27;
  v19(v13, v8);
  v67 = v26;
  v68 = v28;
  v29 = Text.init<A>(_:)(&v67, &type metadata for String, v20);
  v54 = v30;
  v55 = v29;
  v53 = v31;
  v33 = v32 & 1;
  String.LocalizationValue.init(stringLiteral:)(0x522065766F6D6552, 0xEE00747365757165);
  v14(v11, v13, v8);
  v34 = qword_10124F040;
  static Locale.current.getter((id)qword_10124F040);
  v35 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v34, v7, 0, 0, 256);
  v37 = v36;
  v19(v13, v8);
  v67 = v35;
  v68 = v37;
  v38 = Text.init<A>(_:)(&v67, &type metadata for String, v20);
  v40 = v39;
  v42 = v41;
  v44 = v43 & 1;
  v45 = v63;
  sub_10005B704(v62, v63, type metadata accessor for Collaboration.Management.View);
  v46 = *(unsigned __int8 *)(v60 + 80);
  v47 = (v46 + 16) & ~v46;
  v48 = swift_allocObject(&unk_10110B858, v47 + v61, v46 | 7);
  sub_10005B6C0(v45, v48 + v47, type metadata accessor for Collaboration.Management.View);
  v49 = v64;
  static Alert.Button.destructive(_:action:)(v38, v40, v44, v42, sub_100C769AC, v48);
  sub_100055BAC(v38, v40, v44);
  swift_release();
  v50 = swift_bridgeObjectRelease();
  v51 = v65;
  static Alert.Button.cancel(_:)(UIScreen.Dimensions.size.getter, 0, v50);
  return Alert.init(title:message:primaryButton:secondaryButton:)(v59, v58, v56 & 1, v57, v55, v54, v33, v53, v49, v51);
}

uint64_t sub_100C65524()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = type metadata accessor for DismissAction(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin();
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100C5BDE4();
  type metadata accessor for Collaboration.Management.View(0);
  sub_100C313F4((uint64_t)v3);
  DismissAction.callAsFunction()();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_100C655C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v2 = *(_QWORD *)(type metadata accessor for Collaboration.Management.View(0) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  __chkstk_darwin();
  v4 = *(_QWORD *)(a1 + 8);
  KeyPath = swift_getKeyPath(&unk_100EF0B00);
  swift_getKeyPath(&unk_100EF0B28);
  static Published.subscript.getter(&v16, v4, KeyPath);
  swift_release();
  swift_release();
  sub_10005B704(a1, (uint64_t)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for Collaboration.Management.View);
  v6 = *(unsigned __int8 *)(v2 + 80);
  v7 = (v6 + 16) & ~v6;
  v8 = swift_allocObject(&unk_10110B880, v7 + v3, v6 | 7);
  sub_10005B6C0((uint64_t)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7, type metadata accessor for Collaboration.Management.View);
  v9 = sub_100007E8C(&qword_1011E3020);
  v10 = _s10ManagementO4ViewV19CollaboratorRowViewVMa(0);
  v11 = sub_100049F28(&qword_1011E3FD8, &qword_1011E3020, (uint64_t)&protocol conformance descriptor for [A]);
  v12 = sub_100048748(&qword_1011E3F68, _s10ManagementO4ViewV19CollaboratorRowViewVMa, (uint64_t)&unk_100EF0948);
  v13 = sub_100048748(&qword_1011E3FE0, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Collaborator, (uint64_t)&protocol conformance descriptor for Playlist.Collaborator);
  return ForEach<>.init(_:content:)(&v16, sub_100C769B4, v8, v9, &type metadata for MusicItemID, v10, v11, v12, v13);
}

uint64_t sub_100C65790@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t v16;
  Swift::String v17;
  Swift::String v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t result;
  uint64_t v25;
  char v26;
  uint64_t v27;
  _QWORD v29[3];

  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v5 = (char *)&v29[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for String.LocalizationValue(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = (char *)&v29[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v11 = (char *)&v29[-1] - v10;
  type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  __chkstk_darwin();
  v13 = (char *)&v29[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a1 + 8);
  KeyPath = swift_getKeyPath(&unk_100EF0B00);
  swift_getKeyPath(&unk_100EF0B28);
  static Published.subscript.getter(v29, v14, KeyPath);
  swift_release();
  swift_release();
  v16 = *(_QWORD *)(v29[0] + 16);
  swift_bridgeObjectRelease();
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(16, 1);
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v17);
  v29[0] = v16;
  String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(v29, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
  v18._object = (void *)0x8000000100E56CB0;
  v18._countAndFlagsBits = 0xD000000000000010;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v18);
  String.LocalizationValue.init(stringInterpolation:)(v13);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v11, v6);
  if (qword_1011DDE30 != -1)
    swift_once(&qword_1011DDE30, sub_100BA7618);
  v19 = qword_10124F040;
  static Locale.current.getter((id)qword_10124F040);
  v20 = String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, v19, v5, 0, 0, 256);
  v22 = v21;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
  v29[0] = v20;
  v29[1] = v22;
  v23 = sub_100BBF2FC();
  result = Text.init<A>(_:)(v29, &type metadata for String, v23);
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v25;
  *(_BYTE *)(a2 + 16) = v26 & 1;
  *(_QWORD *)(a2 + 24) = v27;
  return result;
}

uint64_t sub_100C65A0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  _QWORD v20[2];
  unsigned __int8 v21;

  v4 = *(_QWORD *)(type metadata accessor for Collaboration.Management.View(0) - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin();
  v6 = (char *)&v20[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)a2 = static VerticalAlignment.center.getter(v7);
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  v19 = a2 + *(int *)(sub_100007E8C(&qword_1011E3FE8) + 44);
  sub_10005B704(a1, (uint64_t)v6, type metadata accessor for Collaboration.Management.View);
  type metadata accessor for MainActor(0);
  v9 = static MainActor.shared.getter(v8);
  v10 = *(unsigned __int8 *)(v4 + 80);
  v11 = (v10 + 32) & ~v10;
  v12 = v11 + v5;
  v13 = v10 | 7;
  v14 = swift_allocObject(&unk_10110B8A8, v12, v10 | 7);
  *(_QWORD *)(v14 + 16) = v9;
  *(_QWORD *)(v14 + 24) = &protocol witness table for MainActor;
  sub_10005B6C0((uint64_t)v6, v14 + v11, type metadata accessor for Collaboration.Management.View);
  sub_10005B704(a1, (uint64_t)v6, type metadata accessor for Collaboration.Management.View);
  v16 = static MainActor.shared.getter(v15);
  v17 = swift_allocObject(&unk_10110B8D0, v12, v13);
  *(_QWORD *)(v17 + 16) = v16;
  *(_QWORD *)(v17 + 24) = &protocol witness table for MainActor;
  sub_10005B6C0((uint64_t)v6, v17 + v11, type metadata accessor for Collaboration.Management.View);
  Binding.init(get:set:)(v20, sub_100C769BC, v14, sub_100C76BC0, v17, &type metadata for Bool);
  return Toggle.init(isOn:label:)(v20[0], v20[1], v21, sub_100C65D68, 0, &type metadata for Text, &protocol witness table for Text);
}

void sub_100C65BBC(uint64_t a1@<X2>, BOOL *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a1 + 8);
  KeyPath = swift_getKeyPath(&unk_100EF0B90);
  v5 = swift_getKeyPath(&unk_100EF0BB8);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  *a2 = (v6 & 1) == 0;
}

double sub_100C65C40(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  double result;
  uint64_t v16;
  BOOL v17;

  sub_100007E8C(&qword_1011E0490);
  __chkstk_darwin();
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a1;
  v9 = *(_QWORD *)(a4 + 8);
  KeyPath = swift_getKeyPath(&unk_100EF0B90);
  v11 = swift_getKeyPath(&unk_100EF0BB8);
  v12 = (v8 & 1) == 0;
  v17 = v12;
  swift_retain();
  static Published.subscript.setter(&v17, v9, KeyPath, v11);
  v13 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v7, 1, 1, v13);
  v14 = swift_allocObject(&unk_10110B8F8, 41, 7);
  *(_QWORD *)(v14 + 16) = 0;
  *(_QWORD *)(v14 + 24) = 0;
  *(_QWORD *)(v14 + 32) = v9;
  *(_BYTE *)(v14 + 40) = v12;
  swift_retain();
  sub_100BF7804((uint64_t)v7, (uint64_t)&unk_1011E3FF8, v14);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100C65D68@<X0>(uint64_t a1@<X8>)
{
  return sub_100C691F0(0xD000000000000015, 0x8000000100E56DB0, a1);
}

void sub_100C65D84(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  unsigned __int8 v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE v51[16];
  __int128 v52;
  __int128 v53;
  __int16 v54;
  __int128 v55;
  __int128 v56;
  unsigned __int8 v57;
  char v58;

  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v5 = &v51[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for String.LocalizationValue(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = &v51[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  v11 = &v51[-v10];
  v12 = *(_QWORD *)(a1 + 8);
  KeyPath = swift_getKeyPath(&unk_100EF0B90);
  swift_getKeyPath(&unk_100EF0BB8);
  static Published.subscript.getter(&v55, v12, KeyPath);
  swift_release();
  swift_release();
  if ((v55 & 1) == 0)
  {
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000047, 0x8000000100E56CD0);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 16))(v9, v11, v6);
    if (qword_1011DDE30 != -1)
      swift_once(&qword_1011DDE30, sub_100BA7618);
    v28 = qword_10124F040;
    static Locale.current.getter((id)qword_10124F040);
    v29 = String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, v28, v5, 0, 0, 256);
    v31 = v30;
    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v11, v6);
    *(_QWORD *)&v55 = v29;
    *((_QWORD *)&v55 + 1) = v31;
    v32 = sub_100BBF2FC();
    v21 = Text.init<A>(_:)(&v55, &type metadata for String, v32);
    v23 = v21;
    v24 = v22;
    *(_QWORD *)&v52 = v21;
    *((_QWORD *)&v52 + 1) = v22;
    v26 = v33 & 1;
    *(_QWORD *)&v53 = v33 & 1;
    *((_QWORD *)&v53 + 1) = v34;
    LOBYTE(v54) = 0;
    goto LABEL_9;
  }
  v14 = swift_getKeyPath(&unk_100EF0AB8);
  swift_getKeyPath(&unk_100EF0AE0);
  static Published.subscript.getter(&v55, v12, v14);
  swift_release();
  swift_release();
  v15 = *(_QWORD *)(v55 + 16);
  swift_bridgeObjectRelease();
  if (v15)
  {
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000045, 0x8000000100E56D20);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 16))(v9, v11, v6);
    if (qword_1011DDE30 != -1)
      swift_once(&qword_1011DDE30, sub_100BA7618);
    v16 = qword_10124F040;
    static Locale.current.getter((id)qword_10124F040);
    v17 = String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, v16, v5, 0, 0, 256);
    v19 = v18;
    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v11, v6);
    *(_QWORD *)&v55 = v17;
    *((_QWORD *)&v55 + 1) = v19;
    v20 = sub_100BBF2FC();
    v21 = Text.init<A>(_:)(&v55, &type metadata for String, v20);
    v23 = v21;
    v24 = v22;
    v26 = v25 & 1;
    *(_QWORD *)&v52 = v21;
    *((_QWORD *)&v52 + 1) = v22;
    *(_QWORD *)&v53 = v25 & 1;
    *((_QWORD *)&v53 + 1) = v27;
    LOBYTE(v54) = 1;
LABEL_9:
    sub_100055BBC(v21, v22, v26);
    swift_bridgeObjectRetain();
    _ConditionalContent<>.init(storage:)(&v52, &type metadata for Text, &type metadata for Text, &protocol witness table for Text, &protocol witness table for Text);
    v52 = v55;
    v53 = v56;
    v54 = v57;
    v35 = sub_100007E8C(&qword_1011E3F60);
    v36 = sub_100C7693C((unint64_t *)&qword_1011E3F58, &qword_1011E3F60, (uint64_t)&protocol witness table for Text, (uint64_t)&protocol conformance descriptor for <> _ConditionalContent<A, B>);
    _ConditionalContent<>.init(storage:)(&v52, v35, &type metadata for Text, v36, &protocol witness table for Text);
    sub_100055BAC(v23, v24, v26);
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  String.LocalizationValue.init(stringLiteral:)(0xD00000000000003BLL, 0x8000000100E56D70);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 16))(v9, v11, v6);
  if (qword_1011DDE30 != -1)
    swift_once(&qword_1011DDE30, sub_100BA7618);
  v41 = qword_10124F040;
  static Locale.current.getter((id)qword_10124F040);
  v42 = String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, v41, v5, 0, 0, 256);
  v44 = v43;
  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v11, v6);
  *(_QWORD *)&v55 = v42;
  *((_QWORD *)&v55 + 1) = v44;
  v45 = sub_100BBF2FC();
  *(_QWORD *)&v52 = Text.init<A>(_:)(&v55, &type metadata for String, v45);
  *((_QWORD *)&v52 + 1) = v46;
  *(_QWORD *)&v53 = v47 & 1;
  *((_QWORD *)&v53 + 1) = v48;
  v54 = 256;
  v49 = sub_100007E8C(&qword_1011E3F60);
  v50 = sub_100C7693C((unint64_t *)&qword_1011E3F58, &qword_1011E3F60, (uint64_t)&protocol witness table for Text, (uint64_t)&protocol conformance descriptor for <> _ConditionalContent<A, B>);
  _ConditionalContent<>.init(storage:)(&v52, v49, &type metadata for Text, v50, &protocol witness table for Text);
LABEL_10:
  v37 = *((_QWORD *)&v55 + 1);
  v38 = v56;
  v39 = v57;
  v40 = v58;
  *(_QWORD *)a2 = v55;
  *(_QWORD *)(a2 + 8) = v37;
  *(_OWORD *)(a2 + 16) = v38;
  *(_BYTE *)(a2 + 32) = v39;
  *(_BYTE *)(a2 + 33) = v40;
}

uint64_t sub_100C662D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = type metadata accessor for DismissAction(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin();
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Collaboration.Management.View(0);
  sub_100C313F4((uint64_t)v3);
  DismissAction.callAsFunction()();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

void sub_100C6636C(uint64_t a1, _BYTE *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v3 = type metadata accessor for DismissAction(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v6 = (char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a2 == 1)
  {
    type metadata accessor for Collaboration.Management.View(0);
    sub_100C313F4((uint64_t)v6);
    DismissAction.callAsFunction()();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

void sub_100C66414()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  v1 = objc_msgSend(v0, "userInterfaceIdiom");

  byte_1011E2F60 = v1 == (id)6;
}

uint64_t sub_100C66474(uint64_t a1)
{
  return sub_100C665C0(a1, (uint64_t (*)(void))&static Font.largeTitle.getter, (uint64_t (*)(void))&static Font.title.getter, &qword_1011E2F68);
}

void sub_100C66490(uint64_t a1, __n128 a2)
{
  uint64_t v2;

  if (qword_1011DE158 != -1)
    a1 = swift_once(&qword_1011DE158, sub_100C66414);
  if (byte_1011E2F60 == 1)
  {
    v2 = static Font.largeTitle.getter(a2);
  }
  else
  {
    static Font.title2.getter(a1);
    v2 = Font.bold()();
    swift_release();
  }
  qword_1011E2F70 = v2;
}

uint64_t sub_100C6650C()
{
  double v0;
  uint64_t result;

  if (qword_1011DE158 != -1)
    result = swift_once(&qword_1011DE158, sub_100C66414);
  v0 = 56.0;
  if (byte_1011E2F60)
    v0 = 68.0;
  qword_1011E2F78 = *(_QWORD *)&v0;
  return result;
}

uint64_t sub_100C6656C(uint64_t a1)
{
  return sub_100C665C0(a1, (uint64_t (*)(void))&static Font.body.getter, (uint64_t (*)(void))&static Font.callout.getter, &qword_1011E2F80);
}

uint64_t sub_100C66588(uint64_t a1)
{
  return sub_100C665C0(a1, (uint64_t (*)(void))&static Font.footnote.getter, (uint64_t (*)(void))&static Font.caption.getter, &qword_1011E2F88);
}

uint64_t sub_100C665A4(uint64_t a1)
{
  return sub_100C665C0(a1, (uint64_t (*)(void))&static Font.body.getter, (uint64_t (*)(void))&static Font.caption2.getter, &qword_1011E2F90);
}

uint64_t sub_100C665C0(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void), uint64_t *a4)
{
  uint64_t (*v7)(void);
  uint64_t result;

  if (qword_1011DE158 != -1)
    swift_once(&qword_1011DE158, sub_100C66414);
  if (byte_1011E2F60)
    v7 = a2;
  else
    v7 = a3;
  result = v7();
  *a4 = result;
  return result;
}

void sub_100C6662C(uint64_t a1)
{
  double v1;

  if (qword_1011DE158 != -1)
    a1 = swift_once(&qword_1011DE158, sub_100C66414);
  if (byte_1011E2F60 == 1)
    v1 = static Font.Weight.semibold.getter(a1);
  else
    v1 = static Font.Weight.regular.getter(a1);
  qword_1011E2F98 = *(_QWORD *)&v1;
}

uint64_t sub_100C66688()
{
  double v0;
  uint64_t result;

  if (qword_1011DE158 != -1)
    result = swift_once(&qword_1011DE158, sub_100C66414);
  v0 = 12.0;
  if (byte_1011E2F60)
    v0 = 0.0;
  qword_1011E2FA0 = *(_QWORD *)&v0;
  return result;
}

uint64_t sub_100C666E0()
{
  double v0;
  uint64_t result;

  if (qword_1011DE158 != -1)
    result = swift_once(&qword_1011DE158, sub_100C66414);
  v0 = -4.0;
  if (byte_1011E2F60)
    v0 = 0.0;
  qword_1011E2FA8 = *(_QWORD *)&v0;
  return result;
}

uint64_t sub_100C66738()
{
  double v0;
  uint64_t result;

  if (qword_1011DE158 != -1)
    result = swift_once(&qword_1011DE158, sub_100C66414);
  v0 = 32.0;
  if (byte_1011E2F60)
    v0 = 44.0;
  qword_1011E2FB0 = *(_QWORD *)&v0;
  return result;
}

uint64_t sub_100C66798()
{
  double v0;
  uint64_t result;

  if (qword_1011DE158 != -1)
    result = swift_once(&qword_1011DE158, sub_100C66414);
  v0 = 84.0;
  if (byte_1011E2F60)
    v0 = 169.0;
  qword_1011E2FB8 = *(_QWORD *)&v0;
  return result;
}

uint64_t sub_100C667FC()
{
  double v0;
  uint64_t result;

  if (qword_1011DE158 != -1)
    result = swift_once(&qword_1011DE158, sub_100C66414);
  v0 = 38.0;
  if (byte_1011E2F60)
    v0 = 48.0;
  qword_1011E2FC0 = *(_QWORD *)&v0;
  return result;
}

uint64_t sub_100C6685C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (qword_1011DE158 != -1)
    a1 = swift_once(&qword_1011DE158, sub_100C66414);
  if (byte_1011E2F60 == 1)
  {
    result = static Color.accentColor.getter(a1, a2);
  }
  else
  {
    if (qword_1011DDEF0 != -1)
      swift_once(&qword_1011DDEF0, sub_100BC20E8);
    result = Color.init(_:)((id)static UIColor.MusicTint.normal);
  }
  qword_1011E2FC8 = result;
  return result;
}

uint64_t sub_100C668F0()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for DynamicTypeSize(0);
  sub_10004FACC(v0, qword_1011E2FD0);
  v1 = sub_100048B14(v0, (uint64_t)qword_1011E2FD0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v1, enum case for DynamicTypeSize.accessibility2(_:), v0);
}

uint64_t sub_100C66948()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v0 = type metadata accessor for DynamicTypeSize(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin();
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100007E8C(&qword_1011E3BA8);
  sub_10004FACC(v4, qword_1011E2FE8);
  v5 = sub_100048B14(v4, (uint64_t)qword_1011E2FE8);
  if (qword_1011DE1C8 != -1)
    swift_once(&qword_1011DE1C8, sub_100C668F0);
  v6 = sub_100048B14(v0, (uint64_t)qword_1011E2FD0);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v6, v0);
  v7 = sub_100048748((unint64_t *)&unk_1011E3BF0, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  result = dispatch thunk of static Equatable.== infix(_:_:)(v3, v3, v0, v7);
  if ((result & 1) != 0)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
  __break(1u);
  return result;
}

uint64_t sub_100C66A74@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t OpaqueTypeConformance2;
  char *v29;
  __n128 v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55[16];
  uint64_t v56;
  char v57[16];
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;

  v53 = a1;
  v54 = type metadata accessor for AccessibilityTraits(0);
  v52 = *(_QWORD *)(v54 - 8);
  __chkstk_darwin();
  v51 = (char *)&v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for AccessibilityChildBehavior(0);
  v49 = *(_QWORD *)(v3 - 8);
  v50 = v3;
  __chkstk_darwin();
  v48 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011E39E8);
  __chkstk_darwin();
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011E39F0);
  __chkstk_darwin();
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011E39F8);
  v43 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin();
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_100007E8C(&qword_1011E3A00);
  v45 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin();
  v41 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = sub_100007E8C(&qword_1011E3A08);
  v47 = *(_QWORD *)(v46 - 8);
  __chkstk_darwin();
  v42 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v6 = static VerticalAlignment.center.getter(v15);
  *((_QWORD *)v6 + 1) = 0x4028000000000000;
  v6[16] = 0;
  v16 = sub_100007E8C(&qword_1011E3A10);
  sub_100C66F08(v1, (uint64_t)&v6[*(int *)(v16 + 44)]);
  sub_10004A160((uint64_t)v6, (uint64_t)v9, &qword_1011E39E8);
  v9[*(int *)(v7 + 36)] = 0;
  sub_10004FF60((uint64_t)v6, &qword_1011E39E8);
  v58 = v1;
  v17 = v1;
  v18 = sub_100007E8C(&qword_1011E3A18);
  v19 = sub_100C74D20();
  v20 = sub_10062A594(&qword_1011E3A40, &qword_1011E3A18, (void (*)(void))sub_100C74DBC);
  View.swipeActions<A>(edge:allowsFullSwipe:content:)(1, 1, sub_100C74D18, v57, v7, v18, v19, v20);
  sub_10004FF60((uint64_t)v9, &qword_1011E39F0);
  v21 = v1 + *(int *)(_s10ManagementO4ViewV19CollaboratorRowViewVMa(0) + 24);
  v22 = *(_BYTE *)v21;
  v23 = *(_QWORD *)(v21 + 8);
  v63 = v22;
  v64 = v23;
  v24 = sub_100007E8C(&qword_1011E1B98);
  State.projectedValue.getter(&v59, v24);
  v25 = v59;
  v26 = v60;
  v27 = v61;
  v56 = v17;
  v59 = v7;
  v60 = v18;
  v61 = v19;
  v62 = v20;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v59, &opaque type descriptor for <<opaque return type of View.swipeActions<A>(edge:allowsFullSwipe:content:)>>, 1);
  v29 = v41;
  View.alert(isPresented:content:)(v25, v26, v27, sub_100C74E58, v55, v10, OpaqueTypeConformance2);
  swift_release();
  v30 = swift_release();
  v31 = (*(uint64_t (**)(char *, uint64_t, __n128))(v43 + 8))(v12, v10, v30);
  v32 = v48;
  static AccessibilityChildBehavior.combine.getter(v31);
  v59 = v10;
  v60 = OpaqueTypeConformance2;
  v33 = swift_getOpaqueTypeConformance2(&v59, &opaque type descriptor for <<opaque return type of View.alert(isPresented:content:)>>, 1);
  v34 = v42;
  v35 = v44;
  View.accessibilityElement(children:)(v32, v44, v33);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v32, v50);
  v36 = (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v29, v35);
  v37 = v51;
  static AccessibilityTraits.isButton.getter(v36);
  v59 = v35;
  v60 = v33;
  v38 = swift_getOpaqueTypeConformance2(&v59, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v39 = v46;
  View.accessibilityAddTraits(_:)(v37, v46, v38);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v37, v54);
  return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v34, v39);
}

uint64_t sub_100C66F08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t KeyPath;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __n128 v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _OWORD *v80;
  __int128 v81;
  uint64_t v82;
  _BYTE *v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _BYTE *v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  int *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  uint64_t v108;
  uint64_t v109;
  unsigned __int8 v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  _BYTE *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  _QWORD *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  uint64_t v154;
  uint64_t v155;
  unsigned __int8 v156;
  _OWORD v157[3];
  uint64_t v158;
  char v159;
  uint64_t v160;
  char v161;
  uint64_t v162;
  __int16 v163;

  v146 = a2;
  v3 = _s10ManagementO4ViewV19CollaboratorRowViewVMa(0);
  v118 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v119 = v4;
  v123 = (uint64_t)&v115 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = sub_100007E8C(&qword_1011E3A80);
  __chkstk_darwin();
  v128 = (char *)&v115 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = sub_100007E8C(&qword_1011E3A88);
  v121 = *(_QWORD *)(v122 - 8);
  __chkstk_darwin();
  v120 = (char *)&v115 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = sub_100007E8C(&qword_1011E3A90);
  __chkstk_darwin();
  v117 = (char *)&v115 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v124 = (uint64_t)&v115 - v8;
  v145 = sub_100007E8C(&qword_1011E3A98);
  v144 = *(_QWORD *)(v145 - 8);
  __chkstk_darwin();
  v126 = (char *)&v115 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142 = type metadata accessor for Playlist(0);
  v141 = *(_QWORD *)(v142 - 8);
  __chkstk_darwin();
  v140 = (uint64_t *)((char *)&v115 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100007E8C((uint64_t *)&unk_1011E3AA0);
  __chkstk_darwin();
  v148 = (uint64_t)&v115 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v149 = (uint64_t)&v115 - v12;
  v138 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v136 = *(_QWORD *)(v138 - 8);
  __chkstk_darwin();
  v134 = (char *)&v115 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  v133 = (char *)&v115 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C((uint64_t *)&unk_1011E4DA0);
  __chkstk_darwin();
  v16 = (char *)&v115 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = sub_100007E8C(&qword_1011E1AD0);
  v131 = *(_QWORD *)(v132 - 8);
  __chkstk_darwin();
  v130 = (uint64_t)&v115 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = sub_100007E8C(&qword_1011E3AB0);
  __chkstk_darwin();
  v19 = (char *)&v115 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = sub_100007E8C(&qword_1011E3AB8);
  __chkstk_darwin();
  v21 = (char *)&v115 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100007E8C(&qword_1011E3AC0);
  v139 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin();
  v137 = (uint64_t)&v115 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for DynamicTypeSize(0);
  v25 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin();
  v27 = (char *)&v115 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v29 = (char *)&v115 - v28;
  sub_100007E8C(&qword_1011E3AC8);
  __chkstk_darwin();
  v147 = (uint64_t)&v115 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v150 = (uint64_t)&v115 - v31;
  v143 = v3;
  v32 = a1;
  sub_100C31810((uint64_t)v29);
  if (qword_1011DE1C8 != -1)
    swift_once(&qword_1011DE1C8, sub_100C668F0);
  v33 = sub_100048B14(v24, (uint64_t)qword_1011E2FD0);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v27, v33, v24);
  v34 = sub_100048748((unint64_t *)&qword_1011E3AD0, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  v35 = dispatch thunk of static Comparable.< infix(_:_:)(v27, v29, v24, v34);
  v36 = *(void (**)(char *, uint64_t))(v25 + 8);
  v36(v27, v24);
  v36(v29, v24);
  v37 = 1;
  v38 = v32;
  v39 = v150;
  if ((v35 & 1) == 0)
  {
    v116 = v22;
    sub_100C67D84(v16);
    v40 = sub_100007E8C(&qword_1011E4DE0);
    v41 = (uint64_t)v133;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v133, 7, 10, v40);
    v158 = 0;
    v159 = 1;
    v160 = 0;
    v161 = 1;
    v162 = 0;
    v163 = 513;
    v42 = v136;
    v43 = (uint64_t)v134;
    v44 = v138;
    (*(void (**)(char *, _QWORD, uint64_t))(v136 + 104))(v134, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v138);
    v45 = v130;
    static ArtworkImage.with(_:placeholder:size:reusePolicy:)((uint64_t)v16, v41, (uint64_t)&v158, v43, v130);
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v43, v44);
    sub_10005B748(v41, type metadata accessor for ArtworkImage.Placeholder);
    sub_10004FF60((uint64_t)v16, (uint64_t *)&unk_1011E4DA0);
    v46 = v131;
    v47 = v132;
    (*(void (**)(char *, uint64_t, uint64_t))(v131 + 16))(v19, v45, v132);
    v48 = &v19[*(int *)(v129 + 36)];
    *(_QWORD *)v48 = 0;
    *((_QWORD *)v48 + 1) = 0;
    v48[16] = 1;
    v49 = (*(uint64_t (**)(uint64_t, uint64_t))(v46 + 8))(v45, v47);
    if (qword_1011DE1B8 != -1)
      v49 = swift_once(&qword_1011DE1B8, sub_100C667FC);
    v50 = qword_1011E2FC0;
    v51 = static Alignment.center.getter(v49);
    _FrameLayout.init(width:height:alignment:)(v157, v50, 0, v50, 0, v51, v52);
    sub_10004A160((uint64_t)v19, (uint64_t)v21, &qword_1011E3AB0);
    v53 = &v21[*(int *)(v135 + 36)];
    v54 = v157[1];
    *(_OWORD *)v53 = v157[0];
    *((_OWORD *)v53 + 1) = v54;
    *((_OWORD *)v53 + 2) = v157[2];
    sub_10004FF60((uint64_t)v19, &qword_1011E3AB0);
    v55 = v137;
    sub_10004A160((uint64_t)v21, v137, &qword_1011E3AB8);
    v22 = v116;
    v56 = v55 + *(int *)(v116 + 36);
    *(_QWORD *)v56 = 0;
    *(_WORD *)(v56 + 8) = 257;
    sub_10004FF60((uint64_t)v21, &qword_1011E3AB8);
    v39 = v150;
    sub_100065228(v55, v150, &qword_1011E3AC0);
    v37 = 0;
  }
  v57 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v139 + 56))(v39, v37, 1, v22);
  v133 = (char *)static HorizontalAlignment.leading.getter(v57);
  sub_100C68164(v38, (uint64_t *)&v151);
  v136 = *((_QWORD *)&v151 + 1);
  v137 = v151;
  v135 = v152;
  v58 = v153;
  v134 = (char *)*((_QWORD *)&v152 + 1);
  v59 = *((_QWORD *)&v153 + 1);
  v60 = v154;
  v139 = v155;
  LODWORD(v138) = v156;
  v61 = *(int *)(v143 + 20);
  v62 = *(_QWORD *)(v38 + v61);
  KeyPath = swift_getKeyPath(&unk_100EF0998);
  swift_getKeyPath(&unk_100EF09C0);
  v64 = v140;
  static Published.subscript.getter(v140, v62, KeyPath);
  swift_release();
  swift_release();
  LOBYTE(v62) = Playlist.isOwner.getter(v65);
  v66 = (*(uint64_t (**)(_QWORD *, uint64_t))(v141 + 8))(v64, v142);
  v67 = 1;
  if ((v62 & 1) != 0)
  {
    if ((Playlist.Collaborator.isPending.getter(v66) & 1) != 0)
    {
      v68 = *(_QWORD *)(v38 + v61);
      v69 = swift_getKeyPath(&unk_100EF0A10);
      swift_getKeyPath(&unk_100EF0A38);
      static Published.subscript.getter(&v151, v68, v69);
      swift_release();
      swift_release();
      LOBYTE(v69) = sub_100BD6944(v38, v151);
      v70 = swift_bridgeObjectRelease();
      if ((v69 & 1) != 0)
      {
        v71 = v120;
        v72 = ProgressView<>.init<>()(v70);
        if (qword_1011DE1A8 != -1)
          v72 = swift_once(&qword_1011DE1A8, sub_100C66738);
        v73 = qword_1011E2FB0;
        v74 = static Alignment.center.getter(v72);
        _FrameLayout.init(width:height:alignment:)(&v151, v73, 0, v73, 0, v74, v75);
        v76 = v121;
        v77 = (uint64_t)v117;
        v78 = v122;
        (*(void (**)(char *, char *, uint64_t))(v121 + 16))(v117, v71, v122);
        v79 = v127;
        v80 = (_OWORD *)(v77 + *(int *)(v127 + 36));
        v81 = v152;
        *v80 = v151;
        v80[1] = v81;
        v80[2] = v153;
        (*(void (**)(char *, uint64_t))(v76 + 8))(v71, v78);
        v82 = v124;
        sub_100065228(v77, v124, &qword_1011E3A90);
        v83 = v128;
        sub_10004A160(v82, (uint64_t)v128, &qword_1011E3A90);
        swift_storeEnumTagMultiPayload(v83, v125, 0);
        v84 = sub_100007E8C(&qword_1011E3AE8);
        v85 = sub_100C75118();
        v86 = sub_100049F28((unint64_t *)&unk_1011E3B00, &qword_1011E3AE8, (uint64_t)&protocol conformance descriptor for TupleView<A>);
        v87 = (uint64_t)v126;
        _ConditionalContent<>.init(storage:)(v83, v79, v84, v85, v86);
        sub_10004FF60(v82, &qword_1011E3A90);
        v39 = v150;
      }
      else
      {
        v88 = v123;
        sub_10005B704(v38, v123, _s10ManagementO4ViewV19CollaboratorRowViewVMa);
        v89 = *(unsigned __int8 *)(v118 + 80);
        v90 = (v89 + 16) & ~v89;
        v91 = v90 + v119;
        v92 = v89 | 7;
        v93 = swift_allocObject(&unk_10110B650, v90 + v119, v89 | 7);
        sub_10005B6C0(v88, v93 + v90, _s10ManagementO4ViewV19CollaboratorRowViewVMa);
        sub_10005B704(v38, v88, _s10ManagementO4ViewV19CollaboratorRowViewVMa);
        v94 = swift_allocObject(&unk_10110B678, v91, v92);
        sub_10005B6C0(v88, v94 + v90, _s10ManagementO4ViewV19CollaboratorRowViewVMa);
        swift_retain();
        v95 = v128;
        *v128 = 1;
        *((_QWORD *)v95 + 1) = sub_100C750A4;
        *((_QWORD *)v95 + 2) = v93;
        v95[24] = 0;
        *((_QWORD *)v95 + 4) = sub_100C750B8;
        *((_QWORD *)v95 + 5) = v94;
        swift_retain();
        swift_storeEnumTagMultiPayload(v95, v125, 1);
        v96 = sub_100007E8C(&qword_1011E3AE8);
        v97 = sub_100C75118();
        v98 = sub_100049F28((unint64_t *)&unk_1011E3B00, &qword_1011E3AE8, (uint64_t)&protocol conformance descriptor for TupleView<A>);
        v99 = v97;
        v87 = (uint64_t)v126;
        _ConditionalContent<>.init(storage:)(v95, v127, v96, v99, v98);
        swift_release();
        swift_release();
      }
      sub_100065228(v87, v149, &qword_1011E3A98);
      v67 = 0;
    }
    else
    {
      v67 = 1;
    }
  }
  v100 = v149;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v144 + 56))(v149, v67, 1, v145);
  v101 = v147;
  sub_10004A160(v39, v147, &qword_1011E3AC8);
  sub_10004A160(v100, v148, (uint64_t *)&unk_1011E3AA0);
  v102 = v146;
  sub_10004A160(v101, v146, &qword_1011E3AC8);
  v103 = (int *)sub_100007E8C(&qword_1011E3AE0);
  v104 = v102 + v103[12];
  *(_QWORD *)v104 = v133;
  *(_QWORD *)(v104 + 8) = 0;
  *(_BYTE *)(v104 + 16) = 1;
  v105 = v137;
  v106 = v136;
  *(_QWORD *)(v104 + 24) = v137;
  *(_QWORD *)(v104 + 32) = v106;
  v107 = v135;
  v108 = (uint64_t)v134;
  *(_QWORD *)(v104 + 40) = v135;
  *(_QWORD *)(v104 + 48) = v108;
  *(_QWORD *)(v104 + 56) = v58;
  *(_QWORD *)(v104 + 64) = v59;
  v109 = v139;
  *(_QWORD *)(v104 + 72) = v60;
  *(_QWORD *)(v104 + 80) = v109;
  v110 = v138;
  *(_BYTE *)(v104 + 88) = v138;
  v111 = v102 + v103[16];
  *(_QWORD *)v111 = 0;
  *(_BYTE *)(v111 + 8) = 1;
  v112 = v102 + v103[20];
  v113 = v148;
  sub_10004A160(v148, v112, (uint64_t *)&unk_1011E3AA0);
  sub_1000E4440(v105, v106, v107, v108);
  sub_100C75028(v58, v59, v60, v109, v110);
  sub_10004FF60(v149, (uint64_t *)&unk_1011E3AA0);
  sub_10004FF60(v150, &qword_1011E3AC8);
  sub_10004FF60(v113, (uint64_t *)&unk_1011E3AA0);
  sub_1000E450C(v105, v106, v107, v108);
  sub_100C75040(v58, v59, v60, v109, v110);
  return sub_10004FF60(v147, &qword_1011E3AC8);
}

uint64_t sub_100C67D84@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  void (*v27)(char *, char *, uint64_t);
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  char *v37;
  char *v38;

  v38 = a1;
  sub_100007E8C(&qword_1011DEFB0);
  __chkstk_darwin();
  v37 = (char *)&v35 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for Artwork(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin();
  v36 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v35 = (char *)&v35 - v5;
  __chkstk_darwin();
  v7 = (char *)&v35 - v6;
  sub_100007E8C((uint64_t *)&unk_1011E4A00);
  __chkstk_darwin();
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v11 = (char *)&v35 - v10;
  __chkstk_darwin();
  v13 = (char *)&v35 - v12;
  v14 = __chkstk_darwin();
  v16 = (char *)&v35 - v15;
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v3 + 56);
  v18 = v17((char *)&v35 - v15, 1, 1, v2, v14);
  Playlist.Collaborator.artwork.getter(v18);
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48);
  if (v19(v13, 1, v2) == 1)
  {
    sub_10004FF60((uint64_t)v13, (uint64_t *)&unk_1011E4A00);
    v20 = sub_10004A07C(0, (unint64_t *)&qword_1011E3B10, MPArtworkCatalog_ptr);
    v21 = Playlist.Collaborator.name.getter(v20);
    v23 = static MPArtworkCatalog.monogram(for:layoutDirection:)(v21, v22, 0, 1);
    swift_bridgeObjectRelease();
    if (v23)
    {
      Artwork.init(_:)(v23);
      sub_10004FF60((uint64_t)v16, (uint64_t *)&unk_1011E4A00);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v17)(v11, 0, 1, v2);
      sub_100065228((uint64_t)v11, (uint64_t)v16, (uint64_t *)&unk_1011E4A00);
    }
  }
  else
  {
    sub_10004FF60((uint64_t)v16, (uint64_t *)&unk_1011E4A00);
    v24 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
    v24(v7, v13, v2);
    v24(v16, v7, v2);
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v17)(v16, 0, 1, v2);
  }
  sub_10004A160((uint64_t)v16, (uint64_t)v9, (uint64_t *)&unk_1011E4A00);
  if (v19(v9, 1, v2) == 1)
  {
    sub_10004FF60((uint64_t)v16, (uint64_t *)&unk_1011E4A00);
    sub_10004FF60((uint64_t)v9, (uint64_t *)&unk_1011E4A00);
    v25 = type metadata accessor for ArtworkImage.ViewModel(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v38, 1, 1, v25);
  }
  else
  {
    v27 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
    v28 = v35;
    v27(v35, v9, v2);
    v29 = v36;
    v30 = (*(uint64_t (**)(char *, char *, uint64_t))(v3 + 16))(v36, v28, v2);
    v31 = (uint64_t)v37;
    static Artwork.CropStyle.boundedBox.getter(v30);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v28, v2);
    sub_10004FF60((uint64_t)v16, (uint64_t *)&unk_1011E4A00);
    v32 = type metadata accessor for Artwork.CropStyle(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v31, 0, 1, v32);
    v33 = v38;
    v27(v38, v29, v2);
    v34 = type metadata accessor for ArtworkImage.ViewModel(0);
    sub_100065228(v31, (uint64_t)&v33[*(int *)(v34 + 20)], &qword_1011DEFB0);
    return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v33, 0, 1, v34);
  }
}

double sub_100C68164@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  void *v45;
  uint64_t v46;
  Swift::String v47;
  Swift::String v48;
  Swift::String v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  id v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unsigned __int8 v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  id v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  char v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char v118;
  char v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char v138;
  uint64_t v139;
  uint64_t v140;
  void *v141;
  uint64_t v142;
  unsigned __int8 v143;

  v133 = a2;
  type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  __chkstk_darwin();
  v4 = (char *)&v125 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v129 = (char *)&v125 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for String.LocalizationValue(0);
  v130 = *(_QWORD *)(v6 - 8);
  v131 = v6;
  __chkstk_darwin();
  v127 = (char *)&v125 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v128 = (char *)&v125 - v8;
  v9 = type metadata accessor for Playlist(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin();
  v12 = (uint64_t *)((char *)&v125 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v126 = *(int *)(_s10ManagementO4ViewV19CollaboratorRowViewVMa(0) + 20);
  v13 = *(_QWORD *)(a1 + v126);
  KeyPath = swift_getKeyPath(&unk_100EF0998);
  swift_getKeyPath(&unk_100EF09C0);
  static Published.subscript.getter(v12, v13, KeyPath);
  swift_release();
  swift_release();
  LOBYTE(v13) = Playlist.isOwner.getter(v15);
  (*(void (**)(_QWORD *, uint64_t))(v10 + 8))(v12, v9);
  v16 = sub_100C68958(v13 & 1);
  if (v17)
  {
    v139 = v16;
    v140 = v17;
    v18 = sub_100BBF2FC();
    v19 = Text.init<A>(_:)(&v139, &type metadata for String, v18);
    v21 = v20;
    v23 = v22;
    v25 = v24 & 1;
    LODWORD(v139) = static HierarchicalShapeStyle.primary.getter(v26);
    v27 = Text.foregroundStyle<A>(_:)(&v139, v19, v21, v25, v23, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
    v29 = v28;
    v31 = v30;
    v33 = v32;
    sub_100055BAC(v19, v21, v25);
    swift_bridgeObjectRelease();
    if (qword_1011DE178 != -1)
      swift_once(&qword_1011DE178, sub_100C6656C);
    swift_retain();
    v34 = v31 & 1;
    v36 = Text.font(_:)(v35, v27, v29, v34, v33);
    v38 = v37;
    v40 = v39;
    v132 = v41;
    swift_release();
    v42 = v40 & 1;
    sub_100055BAC(v27, v29, v34);
    swift_bridgeObjectRelease();
  }
  else
  {
    v36 = 0;
    v38 = 0;
    v42 = 0;
    v132 = 0;
  }
  if ((Playlist.Collaborator.isPending.getter(v16) & 1) != 0 && (sub_100C59FEC() & 1) == 0)
  {
    v125 = v42;
    v88 = v128;
    String.LocalizationValue.init(stringLiteral:)(0x6F742073746E6157, 0xED00006E696F4A20);
    v90 = v130;
    v89 = v131;
    v91 = v127;
    (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v127, v88, v131);
    if (qword_1011DDE30 != -1)
      swift_once(&qword_1011DDE30, sub_100BA7618);
    v126 = v38;
    v92 = qword_10124F040;
    v93 = (id)qword_10124F040;
    v94 = v129;
    static Locale.current.getter(v93);
    v95 = String.init(localized:table:bundle:locale:comment:)(v91, 0, 0, v92, v94, 0, 0, 256);
    v97 = v96;
    (*(void (**)(char *, uint64_t))(v90 + 8))(v88, v89);
    v139 = v95;
    v140 = v97;
    v98 = sub_100BBF2FC();
    v99 = Text.init<A>(_:)(&v139, &type metadata for String, v98);
    v101 = v100;
    v103 = v102;
    v105 = v104 & 1;
    LODWORD(v139) = static HierarchicalShapeStyle.secondary.getter(v99);
    v106 = Text.foregroundStyle<A>(_:)(&v139, v99, v101, v105, v103, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
    v108 = v107;
    v110 = v109;
    v112 = v111;
    sub_100055BAC(v99, v101, v105);
    swift_bridgeObjectRelease();
    if (qword_1011DE180 != -1)
      swift_once(&qword_1011DE180, sub_100C66588);
    swift_retain();
    v113 = v110 & 1;
    v115 = Text.font(_:)(v114, v106, v108, v113, v112);
    v117 = v116;
    v119 = v118;
    v121 = v120;
    swift_release();
    sub_100055BAC(v106, v108, v113);
    swift_bridgeObjectRelease();
    v134 = v115;
    v135 = v117;
    v136 = v119 & 1;
    v137 = v121;
    v138 = 0;
    goto LABEL_20;
  }
  v43 = Playlist.Collaborator.handle.getter();
  v45 = v44;
  if (v44)
  {
    v46 = v43;
    v125 = v42;
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(1, 1);
    v47._countAndFlagsBits = 64;
    v47._object = (void *)0xE100000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v47);
    v48._countAndFlagsBits = v46;
    v48._object = v45;
    String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v48);
    swift_bridgeObjectRelease();
    v49._countAndFlagsBits = 0;
    v49._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v49);
    v50 = v128;
    String.LocalizationValue.init(stringInterpolation:)(v4);
    v52 = v130;
    v51 = v131;
    v53 = v127;
    (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v127, v50, v131);
    if (qword_1011DDE30 != -1)
      swift_once(&qword_1011DDE30, sub_100BA7618);
    v126 = v38;
    v54 = qword_10124F040;
    v55 = (id)qword_10124F040;
    v56 = v129;
    static Locale.current.getter(v55);
    v57 = String.init(localized:table:bundle:locale:comment:)(v53, 0, 0, v54, v56, 0, 0, 256);
    v59 = v58;
    (*(void (**)(char *, uint64_t))(v52 + 8))(v50, v51);
    v139 = v57;
    v140 = v59;
    v60 = sub_100BBF2FC();
    v61 = Text.init<A>(_:)(&v139, &type metadata for String, v60);
    v63 = v62;
    v65 = v64;
    v67 = v66 & 1;
    LODWORD(v139) = static HierarchicalShapeStyle.secondary.getter(v61);
    v68 = Text.foregroundStyle<A>(_:)(&v139, v61, v63, v67, v65, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
    v70 = v69;
    v72 = v71;
    v74 = v73;
    sub_100055BAC(v61, v63, v67);
    swift_bridgeObjectRelease();
    if (qword_1011DE180 != -1)
      swift_once(&qword_1011DE180, sub_100C66588);
    swift_retain();
    v75 = v72 & 1;
    v77 = Text.font(_:)(v76, v68, v70, v75, v74);
    v79 = v78;
    v81 = v80;
    v83 = v82;
    swift_release();
    sub_100055BAC(v68, v70, v75);
    swift_bridgeObjectRelease();
    v134 = v77;
    v135 = v79;
    v136 = v81 & 1;
    v137 = v83;
    v138 = 1;
LABEL_20:
    _ConditionalContent<>.init(storage:)(&v134, &type metadata for Text, &type metadata for Text, &protocol witness table for Text, &protocol witness table for Text);
    v84 = v139;
    v85 = v140;
    v45 = v141;
    v86 = v142;
    v87 = v143;
    v38 = v126;
    v42 = v125;
    goto LABEL_21;
  }
  v84 = 0;
  v85 = 0;
  v86 = 0;
  v87 = -1;
LABEL_21:
  v123 = v132;
  v122 = v133;
  *v133 = v36;
  v122[1] = v38;
  v122[2] = v42;
  v122[3] = v123;
  v122[4] = v84;
  v122[5] = v85;
  v122[6] = (uint64_t)v45;
  v122[7] = v86;
  *((_BYTE *)v122 + 64) = v87;
  sub_1000E4440(v36, v38, v42, v123);
  sub_100C75028(v84, v85, (char)v45, v86, v87);
  sub_100C75040(v84, v85, (char)v45, v86, v87);
  return sub_1000E450C(v36, v38, v42, v123);
}

uint64_t sub_100C68958(char a1)
{
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  uint64_t v15;
  _BYTE v18[16];

  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v3 = &v18[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin();
  v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  __chkstk_darwin();
  v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = Playlist.Collaborator.name.getter(v8);
  v11 = v10;
  if (v10 && (Playlist.Collaborator.isHost.getter() & 1) != 0)
  {
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(8, 1);
    v12._countAndFlagsBits = 0;
    v12._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v12);
    v13._countAndFlagsBits = v9;
    v13._object = v11;
    String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v13);
    swift_bridgeObjectRelease();
    v14._countAndFlagsBits = 0x2972656E774F2820;
    v14._object = (void *)0xE800000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v14);
    v15 = String.LocalizationValue.init(stringInterpolation:)(v7);
    static Locale.current.getter(v15);
    if ((a1 & 1) != 0)
      return String.init(localized:defaultValue:table:bundle:locale:comment:)("device host owner", 17, 2, v5, 0, 0, 0, v3, "Variable is user name", 21, 2);
    else
      return String.init(localized:defaultValue:table:bundle:locale:comment:)("playlist host owner", 19, 2, v5, 0, 0, 0, v3, "Variable is user name", 21, 2);
  }
  return v9;
}

double sub_100C68B28(uint64_t a1, const char *a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v16;

  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = Logger.collaboration.unsafeMutableAddressor();
  v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, a2, v14, 2u);
    swift_slowDealloc(v14, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  _s10ManagementO4ViewV19CollaboratorRowViewVMa(0);
  return sub_100C5CC20(a1, a3);
}

uint64_t sub_100C68C54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v44 = a2;
  v3 = _s10ManagementO4ViewV19CollaboratorRowViewVMa(0);
  v37 = *(_QWORD *)(v3 - 8);
  v4 = *(_QWORD *)(v37 + 64);
  __chkstk_darwin();
  v40 = (uint64_t)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C((uint64_t *)&unk_1011E4D20);
  __chkstk_darwin();
  v38 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C((uint64_t *)&unk_1011E3120);
  v42 = *(_QWORD *)(v6 - 8);
  v43 = v6;
  __chkstk_darwin();
  v41 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C((uint64_t *)&unk_1011E3A50);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin();
  v39 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Playlist(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin();
  v14 = (uint64_t *)((char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = *(_QWORD *)(a1 + *(int *)(v3 + 20));
  KeyPath = swift_getKeyPath(&unk_100EF0998);
  swift_getKeyPath(&unk_100EF09C0);
  static Published.subscript.getter(v14, v15, KeyPath);
  swift_release();
  swift_release();
  LOBYTE(v15) = Playlist.isOwner.getter(v17);
  (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v14, v11);
  if ((v15 & 1) != 0)
  {
    v20 = Playlist.Collaborator.isHost.getter();
    v19 = v44;
    if ((v20 & 1) != 0)
    {
      v18 = 1;
    }
    else
    {
      v21 = Playlist.Collaborator.isPending.getter(v20);
      v18 = 1;
      if (v21 != 2 && (v21 & 1) == 0)
      {
        v22 = v38;
        static ButtonRole.cancel.getter(v21);
        v23 = type metadata accessor for ButtonRole(0);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 0, 1, v23);
        v24 = v40;
        sub_10005B704(a1, v40, _s10ManagementO4ViewV19CollaboratorRowViewVMa);
        v25 = *(unsigned __int8 *)(v37 + 80);
        v26 = (v25 + 16) & ~v25;
        v27 = swift_allocObject(&unk_10110B628, v26 + v4, v25 | 7);
        sub_10005B6C0(v24, v27 + v26, _s10ManagementO4ViewV19CollaboratorRowViewVMa);
        v28 = v41;
        v29 = Button.init(role:action:label:)(v22, sub_100C7500C, v27, sub_100C691DC, 0, &type metadata for Text, &protocol witness table for Text);
        v30 = static Color.red.getter(v29);
        v31 = swift_getKeyPath(&unk_100EF09E0);
        v33 = v42;
        v32 = v43;
        v34 = (uint64_t)v39;
        (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v39, v28, v43);
        v35 = (uint64_t *)(v34 + *(int *)(v8 + 36));
        *v35 = v31;
        v35[1] = v30;
        (*(void (**)(char *, uint64_t))(v33 + 8))(v28, v32);
        sub_100065228(v34, v19, (uint64_t *)&unk_1011E3A50);
        v18 = 0;
      }
    }
  }
  else
  {
    v18 = 1;
    v19 = v44;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v19, v18, 1, v8);
}

uint64_t sub_100C68FB0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  _BYTE v24[15];
  _BYTE v25[9];
  uint64_t v26;

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin();
  v5 = &v24[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100007E8C(&qword_1011E0640);
  __chkstk_darwin();
  v7 = &v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  v9 = &v24[-v8];
  v10 = type metadata accessor for Playlist.Collaborator(0);
  v11 = *(_QWORD *)(v10 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v9, a1, v10);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
  v12 = _s10ManagementO4ViewV19CollaboratorRowViewVMa(0);
  sub_10004A160((uint64_t)v9, (uint64_t)v7, &qword_1011E0640);
  v13 = sub_100007E8C(&qword_1011E3868);
  State.wrappedValue.setter(v7, v13);
  sub_10004FF60((uint64_t)v9, &qword_1011E0640);
  v14 = (char *)(a1 + *(int *)(v12 + 24));
  v15 = *v14;
  v16 = *((_QWORD *)v14 + 1);
  v25[1] = v15;
  v26 = v16;
  v25[0] = 1;
  v17 = sub_100007E8C(&qword_1011E1B98);
  State.wrappedValue.setter(v25, v17);
  v18 = Logger.collaboration.unsafeMutableAddressor();
  v19 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v3 + 16))(v5, v18, v2);
  v20 = Logger.logObject.getter(v19);
  v21 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v22 = 0;
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "[Management] Remove swipe action triggered", v22, 2u);
    swift_slowDealloc(v22, -1, -1);
  }

  return (*(uint64_t (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_100C691DC@<X0>(uint64_t a1@<X8>)
{
  return sub_100C691F0(0x65766F6D6552, 0xE600000000000000, a1);
}

uint64_t sub_100C691F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t result;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD v24[3];

  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v7 = (char *)&v24[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for String.LocalizationValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin();
  v11 = (char *)&v24[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v13 = (char *)&v24[-1] - v12;
  String.LocalizationValue.init(stringLiteral:)(a1, a2);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v13, v8);
  if (qword_1011DDE30 != -1)
    swift_once(&qword_1011DDE30, sub_100BA7618);
  v14 = qword_10124F040;
  static Locale.current.getter((id)qword_10124F040);
  v15 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v14, v7, 0, 0, 256);
  v17 = v16;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v13, v8);
  v24[0] = v15;
  v24[1] = v17;
  v18 = sub_100BBF2FC();
  result = Text.init<A>(_:)(v24, &type metadata for String, v18);
  *(_QWORD *)a3 = result;
  *(_QWORD *)(a3 + 8) = v20;
  *(_BYTE *)(a3 + 16) = v21 & 1;
  *(_QWORD *)(a3 + 24) = v22;
  return result;
}

uint64_t sub_100C69384@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  __n128 v50;
  char *v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v62 = a1;
  v66 = a2;
  v60 = *(_QWORD *)(_s10ManagementO4ViewV19CollaboratorRowViewVMa(0) - 8);
  v2 = __chkstk_darwin();
  v61 = v3;
  v63 = (uint64_t)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Alert.Button(0, v2);
  __chkstk_darwin();
  v65 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v64 = (char *)&v53 - v5;
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v7 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for String.LocalizationValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin();
  v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v13 = (char *)&v53 - v12;
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000014, 0x8000000100E568F0);
  v14 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v14(v11, v13, v8);
  if (qword_1011DDE30 != -1)
    swift_once(&qword_1011DDE30, sub_100BA7618);
  v15 = qword_10124F040;
  static Locale.current.getter((id)qword_10124F040);
  v16 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v15, v7, 0, 0, 256);
  v18 = v17;
  v19 = *(void (**)(char *, uint64_t))(v9 + 8);
  v19(v13, v8);
  v67 = v16;
  v68 = v18;
  v20 = sub_100BBF2FC();
  v21 = Text.init<A>(_:)(&v67, &type metadata for String, v20);
  v58 = v22;
  v59 = v21;
  v56 = v23;
  v57 = v24;
  String.LocalizationValue.init(stringLiteral:)(0x10000000000000BCLL, 0x8000000100E56910);
  v14(v11, v13, v8);
  v25 = qword_10124F040;
  static Locale.current.getter((id)qword_10124F040);
  v26 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v25, v7, 0, 0, 256);
  v28 = v27;
  v19(v13, v8);
  v67 = v26;
  v68 = v28;
  v29 = Text.init<A>(_:)(&v67, &type metadata for String, v20);
  v54 = v30;
  v55 = v29;
  v53 = v31;
  v33 = v32 & 1;
  String.LocalizationValue.init(stringLiteral:)(0x65766F6D6552, 0xE600000000000000);
  v14(v11, v13, v8);
  v34 = qword_10124F040;
  static Locale.current.getter((id)qword_10124F040);
  v35 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v34, v7, 0, 0, 256);
  v37 = v36;
  v19(v13, v8);
  v67 = v35;
  v68 = v37;
  v38 = Text.init<A>(_:)(&v67, &type metadata for String, v20);
  v40 = v39;
  v42 = v41;
  v44 = v43 & 1;
  v45 = v63;
  sub_10005B704(v62, v63, _s10ManagementO4ViewV19CollaboratorRowViewVMa);
  v46 = *(unsigned __int8 *)(v60 + 80);
  v47 = (v46 + 16) & ~v46;
  v48 = swift_allocObject(&unk_10110B600, v47 + v61, v46 | 7);
  sub_10005B6C0(v45, v48 + v47, _s10ManagementO4ViewV19CollaboratorRowViewVMa);
  v49 = v64;
  static Alert.Button.destructive(_:action:)(v38, v40, v44, v42, sub_100C74E64, v48);
  sub_100055BAC(v38, v40, v44);
  swift_release();
  v50 = swift_bridgeObjectRelease();
  v51 = v65;
  static Alert.Button.cancel(_:)(UIScreen.Dimensions.size.getter, 0, v50);
  return Alert.init(title:message:primaryButton:secondaryButton:)(v59, v58, v56 & 1, v57, v55, v54, v33, v53, v49, v51);
}

uint64_t sub_100C697DC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;

  sub_100007E8C(&qword_1011E0640);
  __chkstk_darwin();
  v1 = (uint64_t *)((char *)&v4 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0));
  _s10ManagementO4ViewV19CollaboratorRowViewVMa(0);
  v2 = sub_100007E8C(&qword_1011E3868);
  State.wrappedValue.getter(v1, v2);
  sub_100C5C698((uint64_t)v1);
  return sub_10004FF60((uint64_t)v1, &qword_1011E0640);
}

uint64_t sub_100C69890(char a1)
{
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[16];

  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v3 = &v15[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for String.LocalizationValue(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  v9 = &v15[-v8];
  if ((a1 & 1) != 0)
  {
    v11 = 0x65646F43205251;
    v10 = 0xE700000000000000;
  }
  else
  {
    v10 = 0x8000000100E56A80;
    v11 = 0xD000000000000011;
  }
  String.LocalizationValue.init(stringLiteral:)(v11, v10);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 16))(v7, v9, v4);
  if (qword_1011DDE30 != -1)
    swift_once(&qword_1011DDE30, sub_100BA7618);
  v12 = qword_10124F040;
  static Locale.current.getter((id)qword_10124F040);
  v13 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v12, v3, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v9, v4);
  return v13;
}

uint64_t sub_100C69A20@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  id v33;
  uint64_t KeyPath;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char v40;
  void (*v41)(char *, uint64_t);
  void *v42;
  char **v43;
  uint64_t v44;
  _OWORD *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char v70[16];
  uint64_t v71;

  v2 = v1;
  v69 = a1;
  v67 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin();
  v68 = (char *)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ColorScheme(0);
  v65 = *(_QWORD *)(v4 - 8);
  v66 = v4;
  __chkstk_darwin();
  v64 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v61 = (uint64_t)&v58 - v6;
  v7 = _s10ManagementO4ViewV5ShareO6ButtonVMa(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin();
  v10 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_100007E8C(&qword_1011E3B30);
  v11 = *(_QWORD *)(v59 - 8);
  __chkstk_darwin();
  v13 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011E3B38);
  __chkstk_darwin();
  v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_100007E8C(&qword_1011E3B40);
  __chkstk_darwin();
  v17 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_100007E8C(&qword_1011E3B48);
  __chkstk_darwin();
  v63 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B704(v2, (uint64_t)v10, _s10ManagementO4ViewV5ShareO6ButtonVMa);
  v19 = *(unsigned __int8 *)(v8 + 80);
  v20 = (v19 + 16) & ~v19;
  v21 = swift_allocObject(&unk_10110B6A0, v20 + v9, v19 | 7);
  sub_10005B6C0((uint64_t)v10, v21 + v20, _s10ManagementO4ViewV5ShareO6ButtonVMa);
  v71 = v2;
  v22 = sub_100007E8C(&qword_1011E3B50);
  v23 = sub_10005610C(&qword_1011E3B58, &qword_1011E3B50, (void (*)(void))sub_100C753B0);
  v24 = Button.init(action:label:)(sub_100C7536C, v21, sub_100C753A8, v70, v22, v23);
  v25 = static Alignment.center.getter(v24);
  v28 = sub_100C87C24(0, 1, 0.0, 1, INFINITY, 0, 0, 1, (uint64_t)v15, v27, 0.0, 1, 0.0, 1, v25, v26);
  (*(void (**)(char *, uint64_t, double))(v11 + 8))(v13, v59, v28);
  v29 = v2 + *(int *)(v7 + 28);
  v30 = *(_QWORD *)v29;
  LOBYTE(v10) = *(_BYTE *)(v29 + 8);
  sub_10006B3F8(*(_QWORD *)v29, (char)v10);
  v31 = sub_100C31844(v30, (char)v10);
  sub_10006B604(v30, (char)v10);
  if ((v31 & 1) != 0)
  {
    if (qword_1011DE1C0 != -1)
      swift_once(&qword_1011DE1C0, sub_100C6685C);
    v32 = qword_1011E2FC8;
    swift_retain();
  }
  else
  {
    v33 = objc_msgSend((id)objc_opt_self(UIColor), "tertiaryLabelColor");
    v32 = Color.init(_:)(v33);
  }
  KeyPath = swift_getKeyPath(&unk_100EF0A58);
  sub_10004A160((uint64_t)v15, (uint64_t)v17, &qword_1011E3B38);
  v35 = (uint64_t *)&v17[*(int *)(v60 + 36)];
  *v35 = KeyPath;
  v35[1] = v32;
  sub_10004FF60((uint64_t)v15, &qword_1011E3B38);
  v36 = v61;
  sub_100C319D0(v61);
  v38 = v64;
  v37 = v65;
  v39 = v66;
  (*(void (**)(char *, _QWORD, uint64_t))(v65 + 104))(v64, enum case for ColorScheme.light(_:), v66);
  v40 = static ColorScheme.== infix(_:_:)(v36, v38);
  v41 = *(void (**)(char *, uint64_t))(v37 + 8);
  v41(v38, v39);
  v41((char *)v36, v39);
  v42 = (void *)objc_opt_self(UIColor);
  v43 = &selRef_systemBackgroundColor;
  if ((v40 & 1) == 0)
    v43 = &selRef_secondarySystemBackgroundColor;
  v44 = Color.init(_:)(objc_msgSend(v42, *v43));
  v45 = v68;
  v46 = &v68[*(int *)(v67 + 20)];
  v47 = enum case for RoundedCornerStyle.continuous(_:);
  v48 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 104))(v46, v47, v48);
  __asm { FMOV            V0.2D, #10.0 }
  *v45 = _Q0;
  v54 = (uint64_t)v63;
  v55 = (uint64_t *)&v63[*(int *)(v62 + 36)];
  v56 = sub_100007E8C(&qword_1011E3BA0);
  sub_10005B704((uint64_t)v45, (uint64_t)v55 + *(int *)(v56 + 52), (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *v55 = v44;
  *(_WORD *)((char *)v55 + *(int *)(v56 + 56)) = 256;
  sub_10004A160((uint64_t)v17, v54, &qword_1011E3B40);
  sub_10005B748((uint64_t)v45, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  sub_10004FF60((uint64_t)v17, &qword_1011E3B40);
  return sub_100065228(v54, v69, &qword_1011E3B48);
}

uint64_t sub_100C69F7C@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v20;

  v4 = sub_100007E8C(&qword_1011E3B78);
  __chkstk_darwin();
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C((uint64_t *)&unk_1011E4D00);
  __chkstk_darwin();
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011E3B50);
  __chkstk_darwin();
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v6 = static HorizontalAlignment.center.getter(v12);
  *((_QWORD *)v6 + 1) = 0x4008000000000000;
  v6[16] = 0;
  sub_100C6A14C(a1, &v6[*(int *)(v4 + 44)]);
  if (*a1)
    v13 = 2.5;
  else
    v13 = 0.0;
  sub_10004A160((uint64_t)v6, (uint64_t)v9, &qword_1011E3B78);
  v14 = &v9[*(int *)(v7 + 36)];
  *(_QWORD *)v14 = 0;
  *((double *)v14 + 1) = v13;
  v15 = sub_10004FF60((uint64_t)v6, &qword_1011E3B78);
  v16 = static Alignment.center.getter(v15);
  sub_100C87C7C(0, 1, 0.0, 1, INFINITY, 0, 0, 1, (uint64_t)v11, v18, 0.0, 1, 0.0, 1, v16, v17);
  sub_10004FF60((uint64_t)v9, (uint64_t *)&unk_1011E4D00);
  return sub_100065228((uint64_t)v11, a2, &qword_1011E3B50);
}

uint64_t sub_100C6A14C@<X0>(unsigned __int8 *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t KeyPath;
  double v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t OpaqueTypeConformance2;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  void (*v28)(_BYTE *, _BYTE *, uint64_t);
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char v53;
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, _BYTE *, uint64_t);
  _BYTE *v58;
  uint64_t v59;
  _QWORD *v60;
  int *v61;
  char *v62;
  char *v63;
  void (*v64)(uint64_t, uint64_t);
  __n128 v65;
  _BYTE v67[4];
  int v68;
  _BYTE *v69;
  uint64_t v70;
  uint64_t v71;
  _BYTE *v72;
  _BYTE *v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;

  v74 = a2;
  v72 = (_BYTE *)sub_100007E8C(&qword_1011E3BA8);
  __chkstk_darwin();
  v4 = &v67[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_100007E8C(&qword_1011E3BB0);
  v70 = *(_QWORD *)(v5 - 8);
  v71 = v5;
  __chkstk_darwin();
  v7 = &v67[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_100007E8C(&qword_1011E3BB8);
  v9 = *(_QWORD *)(v8 - 8);
  v75 = v8;
  v76 = v9;
  __chkstk_darwin();
  v73 = &v67[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  v69 = &v67[-v11];
  __chkstk_darwin();
  v13 = &v67[-v12];
  v68 = *a1;
  if (v68)
    v14 = 0x65646F637271;
  else
    v14 = 0xD000000000000013;
  if (v68)
    v15 = 0xE600000000000000;
  else
    v15 = 0x8000000100E2F3F0;
  v16 = Image.init(systemName:)(v14, v15);
  v17 = static Font.body.getter(v16);
  KeyPath = swift_getKeyPath(&unk_100EF0A88);
  v77 = v16;
  v78 = KeyPath;
  v79 = v17;
  v19 = static Font.Weight.semibold.getter(KeyPath);
  v20 = sub_100007E8C((uint64_t *)&unk_1011E3BC0);
  v21 = sub_100C50E20();
  View.fontWeight(_:)(*(_QWORD *)&v19, 0, v20, v21);
  swift_release();
  swift_release();
  swift_release();
  if (qword_1011DE1D0 != -1)
    swift_once(&qword_1011DE1D0, sub_100C66948);
  v22 = (uint64_t)v72;
  v23 = sub_100048B14((uint64_t)v72, (uint64_t)qword_1011E2FE8);
  sub_10004A160(v23, (uint64_t)v4, &qword_1011E3BA8);
  v77 = v20;
  v78 = v21;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v77, &opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>, 1);
  v25 = sub_100049F28(&qword_1011E3BE0, &qword_1011E3BA8, (uint64_t)&protocol conformance descriptor for PartialRangeThrough<A>);
  v26 = v69;
  v27 = v71;
  View.dynamicTypeSize<A>(_:)(v4, v71, v22, OpaqueTypeConformance2, v25);
  sub_10004FF60((uint64_t)v4, &qword_1011E3BA8);
  (*(void (**)(_BYTE *, uint64_t))(v70 + 8))(v7, v27);
  v28 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v76 + 32);
  v72 = v13;
  v28(v13, v26, v75);
  v77 = sub_100C69890(v68);
  v78 = v29;
  v30 = sub_100BBF2FC();
  v31 = Text.init<A>(_:)(&v77, &type metadata for String, v30);
  v33 = v32;
  v35 = v34;
  v37 = v36;
  if (qword_1011DE188 != -1)
    swift_once(&qword_1011DE188, sub_100C665A4);
  swift_retain();
  v38 = v35 & 1;
  v40 = Text.font(_:)(v39, v31, v33, v35 & 1, v37);
  v42 = v41;
  v44 = v43;
  v46 = v45;
  swift_release();
  sub_100055BAC(v31, v33, v38);
  swift_bridgeObjectRelease();
  if (qword_1011DE190 != -1)
    swift_once(&qword_1011DE190, sub_100C6662C);
  v47 = v44 & 1;
  v48 = Text.fontWeight(_:)(qword_1011E2F98, 0, v40, v42, v44 & 1, v46);
  v50 = v49;
  v71 = v51;
  v53 = v52 & 1;
  sub_100055BAC(v40, v42, v47);
  v54 = swift_bridgeObjectRelease();
  v55 = v75;
  v56 = v76;
  v57 = *(void (**)(char *, _BYTE *, uint64_t))(v76 + 16);
  v59 = (uint64_t)v72;
  v58 = v73;
  ((void (*)(_BYTE *, _BYTE *, uint64_t, __n128))v57)(v73, v72, v75, v54);
  v60 = v74;
  *v74 = 0;
  *((_BYTE *)v60 + 8) = 1;
  v61 = (int *)sub_100007E8C(&qword_1011E3BE8);
  v57((char *)v60 + v61[12], v58, v55);
  v62 = (char *)v60 + v61[16];
  *(_QWORD *)v62 = v48;
  *((_QWORD *)v62 + 1) = v50;
  v62[16] = v53;
  *((_QWORD *)v62 + 3) = v71;
  v63 = (char *)v60 + v61[20];
  *(_QWORD *)v63 = 0x4020000000000000;
  v63[8] = 0;
  sub_100055BBC(v48, v50, v53);
  v64 = *(void (**)(uint64_t, uint64_t))(v56 + 8);
  swift_bridgeObjectRetain();
  v64(v59, v55);
  sub_100055BAC(v48, v50, v53);
  v65 = swift_bridgeObjectRelease();
  return ((uint64_t (*)(_BYTE *, uint64_t, __n128))v64)(v58, v55, v65);
}

uint64_t sub_100C6A618@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t OpaqueTypeConformance2;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t KeyPath;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE v51[24];
  uint64_t v52;
  uint64_t v53;
  _QWORD v54[5];

  v49 = a4;
  v6 = a1 & 1;
  v50 = type metadata accessor for ButtonBorderShape(0);
  v48 = *(_QWORD *)(v50 - 8);
  __chkstk_darwin();
  v47 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for BorderlessButtonStyle(0);
  v9 = *(_QWORD *)(v8 - 8);
  v43 = v8;
  v44 = v9;
  __chkstk_darwin();
  v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011E43C8);
  v42 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin();
  v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100007E8C(&qword_1011E43D0);
  v45 = *(_QWORD *)(v15 - 8);
  v46 = v15;
  __chkstk_darwin();
  v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = swift_allocObject(&unk_10110BC38, 40, 7);
  *(_BYTE *)(v18 + 16) = v6;
  *(_QWORD *)(v18 + 24) = a2;
  *(_QWORD *)(v18 + 32) = a3;
  v51[16] = v6;
  v52 = a2;
  v53 = a3;
  swift_retain();
  v19 = sub_100007E8C(&qword_1011E43D8);
  v20 = sub_100044B54(&qword_1011E43E0);
  v21 = sub_100044B54(&qword_1011E3BA8);
  v22 = sub_100C77B08();
  v23 = sub_100049F28(&qword_1011E3BE0, &qword_1011E3BA8, (uint64_t)&protocol conformance descriptor for PartialRangeThrough<A>);
  v54[0] = v20;
  v54[1] = v21;
  v54[2] = v22;
  v54[3] = v23;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v54, &opaque type descriptor for <<opaque return type of View.dynamicTypeSize<A>(_:)>>, 1);
  v25 = Button.init(action:label:)(sub_100C77AF0, v18, sub_100C77AFC, v51, v19, OpaqueTypeConformance2);
  BorderlessButtonStyle.init()(v25);
  v26 = sub_100049F28(&qword_1011E4430, &qword_1011E43C8, (uint64_t)&protocol conformance descriptor for Button<A>);
  v27 = sub_100048748(&qword_1011E3FB0, (uint64_t (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle, (uint64_t)&protocol conformance descriptor for BorderlessButtonStyle);
  v28 = v43;
  View.buttonStyle<A>(_:)(v11, v12, v43, v26, v27);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v11, v28);
  v29 = (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v14, v12);
  v30 = v47;
  static ButtonBorderShape.circle.getter(v29);
  KeyPath = swift_getKeyPath(&unk_100EF0ED0);
  v32 = sub_100007E8C(&qword_1011E4438);
  v33 = v49;
  v34 = (uint64_t *)(v49 + *(int *)(v32 + 36));
  v35 = sub_100007E8C(&qword_1011E4440);
  v36 = v48;
  v37 = v50;
  (*(void (**)(char *, char *, uint64_t))(v48 + 16))((char *)v34 + *(int *)(v35 + 28), v30, v50);
  *v34 = KeyPath;
  v39 = v45;
  v38 = v46;
  (*(void (**)(uint64_t, char *, uint64_t))(v45 + 16))(v33, v17, v46);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v30, v37);
  return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v17, v38);
}

double sub_100C6A950(char a1, uint64_t a2, uint64_t a3)
{
  char v5;
  uint64_t v6;
  double result;
  _BYTE v8[24];
  uint64_t v9;
  uint64_t v10;

  v5 = a1 & 1;
  v6 = static Animation.spring(response:dampingFraction:blendDuration:)(0.25, 1.0, 0.0);
  v8[16] = v5;
  v9 = a2;
  v10 = a3;
  withAnimation<A>(_:_:)(v6, sub_100C77CF8, v8, (char *)&type metadata for () + 8);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100C6A9C8@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char *v29;
  __n128 v30;
  uint64_t KeyPath;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  __int16 v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;

  v39 = a2;
  v35 = sub_100007E8C(&qword_1011E3BA8);
  __chkstk_darwin();
  v4 = (char *)&KeyPath - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_100007E8C(&qword_1011E43D8);
  v37 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin();
  v36 = (char *)&KeyPath - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
    v6 = 0x6B72616D78;
  else
    v6 = 0x72616D6B63656863;
  if ((a1 & 1) != 0)
    v7 = 0xE500000000000000;
  else
    v7 = 0xE90000000000006BLL;
  v34 = Image.init(systemName:)(v6, v7);
  static Font.subheadline.getter(v34);
  v33 = Font.bold()();
  swift_release();
  KeyPath = swift_getKeyPath(&unk_100EF0A88);
  v8 = static Color.white.getter(KeyPath);
  v9 = swift_getKeyPath(&unk_100EF0A58);
  v10 = v9;
  if (qword_1011DE1A8 != -1)
    v9 = swift_once(&qword_1011DE1A8, sub_100C66738);
  v11 = qword_1011E2FB0;
  v12 = static Alignment.center.getter(v9);
  v14 = _FrameLayout.init(width:height:alignment:)(&v54, v11, 0, v11, 0, v12, v13);
  v15 = v54;
  v16 = v55;
  v17 = v56;
  v18 = v57;
  v19 = v58;
  v20 = v59;
  if ((a1 & 1) != 0)
    v21 = static Color.red.getter(v14);
  else
    v21 = static Color.green.getter(v14);
  v22 = v21;
  v23 = static Edge.Set.all.getter(v21);
  v40 = v34;
  v41 = KeyPath;
  v42 = v33;
  v43 = v10;
  v44 = v8;
  v45 = v15;
  v46 = v16;
  v47 = v17;
  v48 = v18;
  v49 = v19;
  v50 = v20;
  v51 = v22;
  v52 = v23;
  v53 = 256;
  if (qword_1011DE1D0 != -1)
    swift_once(&qword_1011DE1D0, sub_100C66948);
  v24 = v35;
  v25 = sub_100048B14(v35, (uint64_t)qword_1011E2FE8);
  sub_10004A160(v25, (uint64_t)v4, &qword_1011E3BA8);
  v26 = sub_100007E8C(&qword_1011E43E0);
  v27 = sub_100C77B08();
  v28 = sub_100049F28(&qword_1011E3BE0, &qword_1011E3BA8, (uint64_t)&protocol conformance descriptor for PartialRangeThrough<A>);
  v29 = v36;
  View.dynamicTypeSize<A>(_:)(v4, v26, v24, v27, v28);
  sub_10004FF60((uint64_t)v4, &qword_1011E3BA8);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v30 = swift_release();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t, __n128))(v37 + 32))(v39, v29, v38, v30);
}

uint64_t sub_100C6ACF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100C6A618(*(_BYTE *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), a1);
}

uint64_t Collaboration.Management.ViewController.__allocating_init(model:)()
{
  objc_class *v0;
  uint64_t v1;
  uint64_t *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  type metadata accessor for Collaboration.Management.View(0);
  __chkstk_darwin();
  v2 = (uint64_t *)((char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = objc_allocWithZone(v0);
  swift_retain();
  Collaboration.Management.View.init(model:)(v4, v2);
  v5 = UIHostingController.init(rootView:)(v2);
  swift_release();
  return v5;
}

uint64_t Collaboration.Management.ViewController.init(model:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v0 = type metadata accessor for Collaboration.Management.View(0);
  __chkstk_darwin(v0);
  v2 = (uint64_t *)((char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_retain();
  Collaboration.Management.View.init(model:)(v3, v2);
  v4 = UIHostingController.init(rootView:)(v2);
  swift_release();
  return v4;
}

void sub_100C6AE18()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100E2B820, "MusicCoreUI/CollaborationUI.swift", 33, 2, 718, 0);
  __break(1u);
}

Swift::Void __swiftcall Collaboration.Management.ViewController.viewDidLayoutSubviews()()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  objc_super v6;

  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for Collaboration.Management.ViewController(0);
  objc_msgSendSuper2(&v6, "viewDidLayoutSubviews");
  v1 = objc_msgSend(v0, "view");
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, "window");

    if (v3)
    {
      v4 = objc_msgSend(v3, "windowScene");

      if (v4)
      {
        v5 = objc_msgSend(v4, "coordinateSpace");

        objc_msgSend(v5, "bounds");
        swift_unknownObjectRelease(v5);
      }
    }
    sub_100C70FD0();
  }
  else
  {
    __break(1u);
  }
}

void sub_100C6AF58(void *a1)
{
  id v1;

  v1 = a1;
  Collaboration.Management.ViewController.viewDidLayoutSubviews()();

}

id Collaboration.Management.ViewController.viewWillTransition(to:with:)(uint64_t a1, double a2, double a3)
{
  void *v3;
  objc_super v8;

  sub_100C70FD0();
  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for Collaboration.Management.ViewController(0);
  return objc_msgSendSuper2(&v8, "viewWillTransitionToSize:withTransitionCoordinator:", a1, a2, a3);
}

void sub_100C6AFEC(void *a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  id v9;
  objc_super v10;

  swift_unknownObjectRetain(a3, a2);
  v9 = a1;
  sub_100C70FD0();
  v10.receiver = v9;
  v10.super_class = (Class)type metadata accessor for Collaboration.Management.ViewController(0);
  objc_msgSendSuper2(&v10, "viewWillTransitionToSize:withTransitionCoordinator:", a3, a4, a5);
  swift_unknownObjectRelease(a3);

}

void Collaboration.Management.ViewController.init(coder:rootView:)()
{
  PlaylistCurators.ViewController.__allocating_init(coder:rootView:)();
}

id Collaboration.Management.ViewController.__deallocating_deinit()
{
  return sub_10015C40C(type metadata accessor for Collaboration.Management.ViewController);
}

uint64_t sub_100C6B084(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100C75254();
  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100C6B0D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100C75254();
  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_100C6B124(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C75254();
  UIViewControllerRepresentable.body.getter(a1, v2);
  __break(1u);
}

char *sub_100C6B148()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  __int128 v10;
  void (*v11)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v12;
  void (*v13)(_BYTE *, uint64_t);
  uint64_t v14;
  id v15;
  _BYTE v17[16];
  _OWORD v18[2];
  uint64_t v19;

  v1 = v0;
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v3 = &v17[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for String.LocalizationValue(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  v9 = &v17[-v8];
  v10 = *(_OWORD *)(v1 + 16);
  v18[0] = *(_OWORD *)v1;
  v18[1] = v10;
  v19 = *(_QWORD *)(v1 + 32);
  sub_100C751E0((_QWORD *)v1);
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000014, 0x8000000100E454E0);
  v11 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 16);
  v11(v7, v9, v4);
  if (qword_1011DDE30 != -1)
    swift_once(&qword_1011DDE30, sub_100BA7618);
  v12 = qword_10124F040;
  static Locale.current.getter((id)qword_10124F040);
  String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v12, v3, 0, 0, 256);
  v13 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
  v13(v9, v4);
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000048, 0x8000000100E56A30);
  v11(v7, v9, v4);
  v14 = qword_10124F040;
  static Locale.current.getter((id)qword_10124F040);
  String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v14, v3, 0, 0, 256);
  v13(v9, v4);
  v15 = objc_allocWithZone((Class)type metadata accessor for QRCodeOverlayViewController());
  return QRCodeOverlayViewController.init(qrCode:title:subtitle:)(v18);
}

char *sub_100C6B380()
{
  return sub_100C6B148();
}

uint64_t sub_100C6B3B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100C75210();
  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100C6B408(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100C75210();
  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_100C6B458(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C75210();
  UIViewControllerRepresentable.body.getter(a1, v2);
  __break(1u);
}

uint64_t PlaylistCurators.Curator.init(name:artwork:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v6;

  *a4 = a1;
  a4[1] = a2;
  v6 = type metadata accessor for PlaylistCurators.Curator(0);
  return sub_100065228(a3, (uint64_t)a4 + *(int *)(v6 + 20), (uint64_t *)&unk_1011E4A00);
}

uint64_t sub_100C6B4C0@<X0>(char *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  id v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  void (*v25)(char *, char *, uint64_t);
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  char *v36;

  v36 = a1;
  sub_100007E8C(&qword_1011DEFB0);
  __chkstk_darwin();
  v35 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Artwork(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v34 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v33 = (char *)&v33 - v6;
  __chkstk_darwin();
  v8 = (char *)&v33 - v7;
  sub_100007E8C((uint64_t *)&unk_1011E4A00);
  __chkstk_darwin();
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v12 = (char *)&v33 - v11;
  __chkstk_darwin();
  v14 = (char *)&v33 - v13;
  v15 = __chkstk_darwin();
  v17 = (char *)&v33 - v16;
  v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v4 + 56);
  v18((char *)&v33 - v16, 1, 1, v3, v15);
  v19 = type metadata accessor for PlaylistCurators.Curator(0);
  sub_10004A160((uint64_t)v1 + *(int *)(v19 + 20), (uint64_t)v14, (uint64_t *)&unk_1011E4A00);
  v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48);
  if (v20(v14, 1, v3) == 1)
  {
    sub_10004FF60((uint64_t)v14, (uint64_t *)&unk_1011E4A00);
    sub_10004A07C(0, (unint64_t *)&qword_1011E3B10, MPArtworkCatalog_ptr);
    v21 = static MPArtworkCatalog.monogram(for:layoutDirection:)(*v1, v1[1], 0, 1);
    if (v21)
    {
      Artwork.init(_:)(v21);
      sub_10004FF60((uint64_t)v17, (uint64_t *)&unk_1011E4A00);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v18)(v12, 0, 1, v3);
      sub_100065228((uint64_t)v12, (uint64_t)v17, (uint64_t *)&unk_1011E4A00);
    }
  }
  else
  {
    sub_10004FF60((uint64_t)v17, (uint64_t *)&unk_1011E4A00);
    v22 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
    v22(v8, v14, v3);
    v22(v17, v8, v3);
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v18)(v17, 0, 1, v3);
  }
  sub_10004A160((uint64_t)v17, (uint64_t)v10, (uint64_t *)&unk_1011E4A00);
  if (v20(v10, 1, v3) == 1)
  {
    sub_10004FF60((uint64_t)v17, (uint64_t *)&unk_1011E4A00);
    sub_10004FF60((uint64_t)v10, (uint64_t *)&unk_1011E4A00);
    v23 = type metadata accessor for ArtworkImage.ViewModel(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v36, 1, 1, v23);
  }
  else
  {
    v25 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
    v26 = v33;
    v25(v33, v10, v3);
    v27 = v34;
    v28 = (*(uint64_t (**)(char *, char *, uint64_t))(v4 + 16))(v34, v26, v3);
    v29 = (uint64_t)v35;
    static Artwork.CropStyle.boundedBox.getter(v28);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v26, v3);
    sub_10004FF60((uint64_t)v17, (uint64_t *)&unk_1011E4A00);
    v30 = type metadata accessor for Artwork.CropStyle(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v29, 0, 1, v30);
    v31 = v36;
    v25(v36, v27, v3);
    v32 = type metadata accessor for ArtworkImage.ViewModel(0);
    sub_100065228(v29, (uint64_t)&v31[*(int *)(v32 + 20)], &qword_1011DEFB0);
    return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v31, 0, 1, v32);
  }
}

uint64_t PlaylistCurators.View.configuration.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease(*v1);
  *v1 = a1;
  return result;
}

uint64_t sub_100C6B8D4(uint64_t *a1, uint64_t *a2)
{
  return _s11MusicCoreUI16PlaylistCuratorsO4ViewV13ConfigurationV23__derived_struct_equalsySbAG_AGtFZ_0(*a1, *a2);
}

uint64_t PlaylistCurators.View.init(configuration:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t result;

  v4 = (_QWORD *)((char *)a2 + *(int *)(type metadata accessor for PlaylistCurators.View(0) + 20));
  *v4 = swift_getKeyPath(&unk_100EF0368);
  v5 = sub_100007E8C(&qword_1011DE440);
  result = swift_storeEnumTagMultiPayload(v4, v5, 0);
  *a2 = a1;
  return result;
}

uint64_t PlaylistCurators.View.body.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = sub_100007E8C(&qword_1011E3138);
  __chkstk_darwin();
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v3 = static VerticalAlignment.center.getter(v4);
  *((_QWORD *)v3 + 1) = 0;
  v3[16] = 0;
  v5 = sub_100007E8C(&qword_1011E3140);
  sub_100C6BA38(v0, (uint64_t)&v3[*(int *)(v5 + 44)]);
  v6 = sub_100049F28(&qword_1011E3148, &qword_1011E3138, (uint64_t)&protocol conformance descriptor for HStack<A>);
  View.artworkCaching(id:limit:)(0xD000000000000010, 0x8000000100EF0380, 3, 0, v1, v6);
  return sub_10004FF60((uint64_t)v3, &qword_1011E3138);
}

uint64_t sub_100C6BA38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  double v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(char *, uint64_t, uint64_t);
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char v37;
  void (*v38)(char *, uint64_t);
  char v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v55 = a2;
  v3 = type metadata accessor for UserInterfaceSizeClass(0);
  v52 = *(_QWORD *)(v3 - 8);
  v53 = v3;
  __chkstk_darwin();
  v47 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_100007E8C((uint64_t *)&unk_1011E3150);
  __chkstk_darwin();
  v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011DE740);
  __chkstk_darwin();
  v48 = (uint64_t)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v9 = (char *)&v46 - v8;
  __chkstk_darwin();
  v49 = (uint64_t)&v46 - v10;
  sub_100007E8C(&qword_1011E3CC8);
  __chkstk_darwin();
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011E3CD0);
  __chkstk_darwin();
  v54 = (uint64_t)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v16 = (char *)&v46 - v15;
  __chkstk_darwin();
  v18 = (char *)&v46 - v17;
  *(_QWORD *)v12 = static VerticalAlignment.center.getter(v19);
  *((_QWORD *)v12 + 1) = 0x4018000000000000;
  v12[16] = 0;
  v20 = (uint64_t)&v12[*(int *)(sub_100007E8C(&qword_1011E3CD8) + 44)];
  v51 = (char *)a1;
  sub_100C6BF84(a1, v20);
  if (qword_1011DE058 != -1)
    swift_once(&qword_1011DE058, sub_100C09E08);
  v21 = *(_QWORD *)algn_10124FDC8;
  v22 = byte_10124FDD0;
  if (byte_10124FDD0)
    v23 = *(double *)&static Corner.medium;
  else
    v23 = *(double *)&static Corner.medium + -3.0;
  sub_10004A160((uint64_t)v12, (uint64_t)v16, &qword_1011E3CC8);
  v24 = &v16[*(int *)(v13 + 36)];
  *(double *)v24 = v23;
  *((_QWORD *)v24 + 1) = v21;
  v24[16] = v22;
  *((_QWORD *)v24 + 3) = 0x4008000000000000;
  *((_QWORD *)v24 + 4) = 0;
  *((_WORD *)v24 + 20) = 257;
  sub_10004FF60((uint64_t)v12, &qword_1011E3CC8);
  sub_100065228((uint64_t)v16, (uint64_t)v18, &qword_1011E3CD0);
  type metadata accessor for PlaylistCurators.View(0);
  v25 = v49;
  sub_100C31A00(v49);
  v27 = v52;
  v26 = v53;
  (*(void (**)(char *, _QWORD, uint64_t))(v52 + 104))(v9, enum case for UserInterfaceSizeClass.regular(_:), v53);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v9, 0, 1, v26);
  v28 = (uint64_t)&v6[*(int *)(v50 + 48)];
  sub_10004A160(v25, (uint64_t)v6, &qword_1011DE740);
  sub_10004A160((uint64_t)v9, v28, &qword_1011DE740);
  v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48);
  v30 = v29(v6, 1, v26);
  v51 = v18;
  v31 = (uint64_t)v6;
  v32 = v26;
  if (v30 != 1)
  {
    v33 = v27;
    v34 = v48;
    sub_10004A160(v31, v48, &qword_1011DE740);
    if (v29((char *)v28, 1, v26) != 1)
    {
      v35 = v47;
      (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(v47, v28, v26);
      v36 = sub_100048748(&qword_1011E3160, (uint64_t (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass, (uint64_t)&protocol conformance descriptor for UserInterfaceSizeClass);
      v37 = dispatch thunk of static Equatable.== infix(_:_:)(v34, v35, v26, v36);
      v38 = *(void (**)(char *, uint64_t))(v33 + 8);
      v38(v35, v32);
      sub_10004FF60((uint64_t)v9, &qword_1011DE740);
      sub_10004FF60(v25, &qword_1011DE740);
      v38((char *)v34, v32);
      sub_10004FF60(v31, &qword_1011DE740);
      if ((v37 & 1) != 0)
        goto LABEL_13;
LABEL_14:
      v40 = 0;
      v39 = 1;
      goto LABEL_15;
    }
    sub_10004FF60((uint64_t)v9, &qword_1011DE740);
    sub_10004FF60(v25, &qword_1011DE740);
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v34, v26);
LABEL_11:
    sub_10004FF60(v31, (uint64_t *)&unk_1011E3150);
    goto LABEL_14;
  }
  sub_10004FF60((uint64_t)v9, &qword_1011DE740);
  sub_10004FF60(v25, &qword_1011DE740);
  if (v29((char *)v28, 1, v26) != 1)
    goto LABEL_11;
  sub_10004FF60(v31, &qword_1011DE740);
LABEL_13:
  v39 = 0;
  v40 = 1;
LABEL_15:
  v41 = (uint64_t)v51;
  v42 = v54;
  sub_10004A160((uint64_t)v51, v54, &qword_1011E3CD0);
  v43 = v55;
  sub_10004A160(v42, v55, &qword_1011E3CD0);
  v44 = v43 + *(int *)(sub_100007E8C((uint64_t *)&unk_1011E3CE0) + 48);
  *(_QWORD *)v44 = 0;
  *(_BYTE *)(v44 + 8) = v40;
  *(_BYTE *)(v44 + 9) = v39;
  sub_10004FF60(v41, &qword_1011E3CD0);
  return sub_10004FF60(v42, &qword_1011E3CD0);
}

uint64_t sub_100C6BF84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  double *v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t KeyPath;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v72;
  char *v73;
  char *v74;
  char *v75;
  double *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  uint64_t v99;

  v95 = a2;
  sub_100007E8C(&qword_1011E1C98);
  __chkstk_darwin();
  v92 = (char *)&v72 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Font.TextStyle(0);
  v93 = *(_QWORD *)(v4 - 8);
  v94 = v4;
  __chkstk_darwin();
  v91 = (uint64_t)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = type metadata accessor for Image.Scale(0);
  v86 = *(_QWORD *)(v88 - 8);
  v6 = __chkstk_darwin();
  v85 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = type metadata accessor for Text.Suffix(0, v6);
  v78 = *(_QWORD *)(v80 - 8);
  __chkstk_darwin();
  v73 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = sub_100007E8C(&qword_1011E3CF0);
  v81 = *(_QWORD *)(v83 - 8);
  __chkstk_darwin();
  v74 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = sub_100007E8C(&qword_1011E3CF8);
  __chkstk_darwin();
  v75 = (char *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = sub_100007E8C(&qword_1011E3D00);
  __chkstk_darwin();
  v79 = (char *)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = sub_100007E8C(&qword_1011E3D08);
  __chkstk_darwin();
  v87 = (uint64_t)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v89 = (uint64_t)&v72 - v13;
  sub_100007E8C(&qword_1011DE740);
  __chkstk_darwin();
  v15 = (char *)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011E3D10);
  __chkstk_darwin();
  v84 = (uint64_t)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v18 = (double *)((char *)&v72 - v17);
  type metadata accessor for PlaylistCurators.View(0);
  sub_100C31A00((uint64_t)v15);
  v19 = sub_100C75920((uint64_t)v15);
  v20 = sub_10004FF60((uint64_t)v15, &qword_1011DE740);
  *(_QWORD *)v18 = static VerticalAlignment.center.getter(v20);
  v18[1] = v19;
  *((_BYTE *)v18 + 16) = 0;
  v76 = v18;
  sub_100007E8C(&qword_1011E3D18);
  v72 = a1;
  sub_100C6C714(a1);
  v96 = sub_100C6CF78();
  v97 = v21;
  v22 = sub_100BBF2FC();
  v96 = Text.init<A>(_:)(&v96, &type metadata for String, v22);
  v97 = v23;
  v98 = v24 & 1;
  v99 = v25;
  v26 = (uint64_t *)String.nonBreakingSpace.unsafeMutableAddressor();
  v27 = *v26;
  v28 = v26[1];
  swift_bridgeObjectRetain();
  Image.init(systemName:)(0x2E6E6F7276656863, 0xEF64726177726F66);
  swift_retain();
  v30 = Text.init(_:)(v29);
  v32 = v31;
  v34 = v33 & 1;
  v36 = static Text.+ infix(_:_:)(v27, v28, 0, _swiftEmptyArrayStorage, v30, v31, v34, v35);
  v38 = v37;
  v40 = v39;
  v42 = v41 & 1;
  sub_100055BAC(v30, v32, v34);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  v43 = v73;
  static Text.Suffix.alwaysVisible(_:)(v36, v38, v42, v40);
  sub_100055BAC(v36, v38, v42);
  swift_bridgeObjectRelease();
  v44 = v74;
  View.textSuffix(_:)(v43, &type metadata for Text, &protocol witness table for Text);
  (*(void (**)(char *, uint64_t))(v78 + 8))(v43, v80);
  sub_100055BAC(v96, v97, v98);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath(&unk_100EF0C20);
  v46 = v81;
  v47 = (uint64_t)v75;
  v48 = v44;
  v49 = v44;
  v50 = v83;
  (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v75, v48, v83);
  v51 = v47 + *(int *)(v77 + 36);
  *(_QWORD *)v51 = KeyPath;
  *(_QWORD *)(v51 + 8) = 1;
  *(_BYTE *)(v51 + 16) = 0;
  (*(void (**)(char *, uint64_t))(v46 + 8))(v49, v50);
  v53 = v85;
  v52 = v86;
  v54 = v88;
  (*(void (**)(char *, _QWORD, uint64_t))(v86 + 104))(v85, enum case for Image.Scale.small(_:), v88);
  v55 = swift_getKeyPath(&unk_100EF0C50);
  v56 = (uint64_t)v79;
  v57 = (uint64_t *)&v79[*(int *)(v82 + 36)];
  v58 = sub_100007E8C(&qword_1011E3D20);
  (*(void (**)(char *, char *, uint64_t))(v52 + 16))((char *)v57 + *(int *)(v58 + 28), v53, v54);
  *v57 = v55;
  sub_10004A160(v47, v56, &qword_1011E3CF8);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v53, v54);
  sub_10004FF60(v47, &qword_1011E3CF8);
  v59 = v91;
  PlaylistCurators.View.fontTextStyle.getter(v91);
  v60 = type metadata accessor for Font.Design(0);
  v61 = (uint64_t)v92;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v92, 1, 1, v60);
  v62 = static Font.system(_:design:weight:)(v59, v61, 0, 1);
  sub_10004FF60(v61, &qword_1011E1C98);
  (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v59, v94);
  v63 = swift_getKeyPath(&unk_100EF0A88);
  v64 = v87;
  sub_10004A160(v56, v87, &qword_1011E3D00);
  v65 = (uint64_t *)(v64 + *(int *)(v90 + 36));
  *v65 = v63;
  v65[1] = v62;
  sub_10004FF60(v56, &qword_1011E3D00);
  v66 = v89;
  sub_100065228(v64, v89, &qword_1011E3D08);
  v67 = (uint64_t)v76;
  v68 = v84;
  sub_10004A160((uint64_t)v76, v84, &qword_1011E3D10);
  sub_10004A160(v66, v64, &qword_1011E3D08);
  v69 = v95;
  sub_10004A160(v68, v95, &qword_1011E3D10);
  v70 = sub_100007E8C(&qword_1011E3D28);
  sub_10004A160(v64, v69 + *(int *)(v70 + 48), &qword_1011E3D08);
  sub_10004FF60(v66, &qword_1011E3D08);
  sub_10004FF60(v67, &qword_1011E3D10);
  sub_10004FF60(v64, &qword_1011E3D08);
  return sub_10004FF60(v68, &qword_1011E3D10);
}

uint64_t sub_100C6C714(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;

  v2 = *(_QWORD *)(type metadata accessor for PlaylistCurators.View(0) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  __chkstk_darwin();
  v4 = *(_QWORD *)a1;
  if (*(_QWORD *)(*(_QWORD *)a1 + 16) >= 3uLL)
    v5 = 3;
  else
    v5 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  v6 = type metadata accessor for __ContiguousArrayStorageBase(0);
  v7 = swift_bridgeObjectRetain();
  v8 = swift_unknownObjectRetain_n(v7, 2);
  v9 = (_QWORD *)swift_dynamicCastClass(v8, v6);
  if (!v9)
  {
    swift_bridgeObjectRelease();
    v9 = _swiftEmptyArrayStorage;
  }
  v10 = v9[2];
  swift_release();
  if (v10 == v5)
  {
    v11 = (_QWORD *)swift_dynamicCastClass(v4, v6);
    if (!v11)
    {
      swift_bridgeObjectRelease();
      v11 = _swiftEmptyArrayStorage;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    v25 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PlaylistCurators.Curator(0) - 8) + 80);
    sub_100BB9570(v4, v4 + ((v25 + 32) & ~v25), 0, (2 * v5) | 1);
    v11 = v26;
  }
  swift_bridgeObjectRelease();
  v12 = swift_bridgeObjectRetain();
  sub_100CE93D0(v12);
  v14 = v13;
  swift_release();
  v28 = v14;
  KeyPath = swift_getKeyPath(&unk_100EF0C80);
  sub_10005B704(a1, (uint64_t)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for PlaylistCurators.View);
  v16 = *(unsigned __int8 *)(v2 + 80);
  v17 = (v16 + 24) & ~v16;
  v18 = swift_allocObject(&unk_10110B790, v17 + v3, v16 | 7);
  *(_QWORD *)(v18 + 16) = v11;
  sub_10005B6C0((uint64_t)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17, type metadata accessor for PlaylistCurators.View);
  v19 = swift_allocObject(&unk_10110B7B8, 32, 7);
  *(_QWORD *)(v19 + 16) = sub_100C75CC0;
  *(_QWORD *)(v19 + 24) = v18;
  v20 = sub_100007E8C(&qword_1011E3D30);
  v21 = sub_100007E8C(&qword_1011E3D38);
  v22 = sub_100049F28(&qword_1011E3D40, &qword_1011E3D30, (uint64_t)&protocol conformance descriptor for [A]);
  v23 = sub_100C75D94();
  return ForEach<>.init(_:id:content:)(&v28, KeyPath, sub_100C75D3C, v19, v20, v21, v22, &protocol witness table for Int, v23);
}

void sub_100C6C978(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  double v13;
  uint64_t v14;

  sub_100007E8C(&qword_1011E3D58);
  __chkstk_darwin();
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a3 + 16);
  v11 = __OFSUB__(v10, a1);
  v12 = v10 - a1;
  if (v11)
  {
    __break(1u);
  }
  else
  {
    v13 = (double)v12;
    sub_100C6CA50(a2, (uint64_t)v9);
    sub_10004A160((uint64_t)v9, a4, &qword_1011E3D58);
    *(double *)(a4 + *(int *)(sub_100007E8C(&qword_1011E3D38) + 36)) = v13;
    sub_10004FF60((uint64_t)v9, &qword_1011E3D58);
  }
}

uint64_t sub_100C6CA50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (**v26)(uint64_t);
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  __int128 v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (**v45)(uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _OWORD v52[3];
  double v53;
  char v54;
  double v55;
  char v56;
  uint64_t v57;
  __int16 v58;

  v43 = a1;
  v51 = a2;
  v50 = type metadata accessor for PlaceholderStyleModifier(0);
  __chkstk_darwin();
  v45 = (uint64_t (**)(uint64_t))((char *)&v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v44 = *(_QWORD *)(v3 - 8);
  v4 = v3;
  __chkstk_darwin();
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C((uint64_t *)&unk_1011E4DA0);
  __chkstk_darwin();
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011E1AD0);
  v48 = *(_QWORD *)(v11 - 8);
  v49 = v11;
  __chkstk_darwin();
  v41 = (uint64_t)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_100007E8C(&qword_1011E3D88);
  __chkstk_darwin();
  v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = sub_100007E8C(&qword_1011E3D78);
  __chkstk_darwin();
  v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_100007E8C(&qword_1011E3D68);
  __chkstk_darwin();
  v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011DE740);
  __chkstk_darwin();
  v20 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PlaylistCurators.View(0);
  sub_100C31A00((uint64_t)v20);
  v21 = sub_100C75F9C((uint64_t)v20);
  sub_10004FF60((uint64_t)v20, &qword_1011DE740);
  sub_100C6B4C0(v10);
  v22 = sub_100007E8C(&qword_1011E4DE0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v8, 7, 10, v22);
  v53 = v21;
  v54 = 0;
  v55 = v21;
  v56 = 0;
  v57 = 0;
  v58 = 257;
  v23 = v44;
  v24 = v4;
  (*(void (**)(char *, _QWORD, uint64_t))(v44 + 104))(v6, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v4);
  v25 = v41;
  static ArtworkImage.with(_:placeholder:size:reusePolicy:)((uint64_t)v10, (uint64_t)v8, (uint64_t)&v53, (uint64_t)v6, v41);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v24);
  sub_10005B748((uint64_t)v8, type metadata accessor for ArtworkImage.Placeholder);
  sub_10004FF60((uint64_t)v10, (uint64_t *)&unk_1011E4DA0);
  v26 = v45;
  v27 = (char *)v45 + *(int *)(v50 + 20);
  *(_QWORD *)v27 = swift_getKeyPath(&unk_100EF0CA0);
  v28 = sub_100007E8C(&qword_1011DE408);
  swift_storeEnumTagMultiPayload(v27, v28, 0);
  *v26 = sub_100C6D5D0;
  v26[1] = 0;
  sub_10005B6C0((uint64_t)v26, (uint64_t)&v14[*(int *)(v42 + 36)], type metadata accessor for PlaceholderStyleModifier);
  v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v48 + 32))(v14, v25, v49);
  v30 = static Alignment.center.getter(v29);
  _FrameLayout.init(width:height:alignment:)(v52, *(_QWORD *)&v21, 0, *(_QWORD *)&v21, 0, v30, v31);
  sub_10004A160((uint64_t)v14, (uint64_t)v16, &qword_1011E3D88);
  v32 = &v16[*(int *)(v46 + 36)];
  v33 = v52[1];
  *(_OWORD *)v32 = v52[0];
  *((_OWORD *)v32 + 1) = v33;
  *((_OWORD *)v32 + 2) = v52[2];
  sub_10004FF60((uint64_t)v14, &qword_1011E3D88);
  sub_10004A160((uint64_t)v16, (uint64_t)v18, &qword_1011E3D78);
  v34 = &v18[*(int *)(v47 + 36)];
  *(_QWORD *)v34 = 0;
  *((_QWORD *)v34 + 1) = 0;
  v34[16] = 1;
  sub_10004FF60((uint64_t)v16, &qword_1011E3D78);
  if (qword_1011DE1E0 != -1)
    swift_once(&qword_1011DE1E0, sub_100C6D774);
  v35 = qword_1011E3008;
  v36 = qword_1011E3010;
  v37 = byte_1011E3018;
  v38 = v51;
  sub_10004A160((uint64_t)v18, v51, &qword_1011E3D68);
  v39 = v38 + *(int *)(sub_100007E8C(&qword_1011E3D58) + 36);
  *(_QWORD *)v39 = v35;
  *(_QWORD *)(v39 + 8) = v36;
  *(_BYTE *)(v39 + 16) = v37;
  *(_QWORD *)(v39 + 24) = 0;
  *(_QWORD *)(v39 + 32) = 0;
  *(_BYTE *)(v39 + 40) = 1;
  swift_retain();
  return sub_10004FF60((uint64_t)v18, &qword_1011E3D68);
}

uint64_t sub_100C6CF78()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  Swift::String v19;
  uint64_t v20;
  void *v21;
  Swift::String v22;
  Swift::String v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;

  v1 = v0;
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v3 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for String.LocalizationValue(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v9 = (char *)&v27 - v8;
  type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  __chkstk_darwin();
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PlaylistCurators.Curator(0);
  __chkstk_darwin();
  v14 = (uint64_t *)((char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = *v1;
  v16 = *(_QWORD *)(*v1 + 16);
  if (v16)
  {
    sub_10005B704(v15 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)), (uint64_t)v14, type metadata accessor for PlaylistCurators.Curator);
    v17 = v16 - 1;
    if (v16 == 1)
    {
      v18 = *v14;
      swift_bridgeObjectRetain();
    }
    else
    {
      String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(12, 2);
      v19._countAndFlagsBits = 0;
      v19._object = (void *)0xE000000000000000;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v19);
      v20 = *v14;
      v21 = (void *)v14[1];
      swift_bridgeObjectRetain();
      v22._countAndFlagsBits = v20;
      v22._object = v21;
      String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v22);
      swift_bridgeObjectRelease();
      v23._countAndFlagsBits = 2106912;
      v23._object = (void *)0xE300000000000000;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v23);
      v28 = v17;
      String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)(&v28, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
      v24._countAndFlagsBits = 0x7328726568744F20;
      v24._object = (void *)0xE900000000000029;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v24);
      String.LocalizationValue.init(stringInterpolation:)(v11);
      (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v9, v4);
      if (qword_1011DDE30 != -1)
        swift_once(&qword_1011DDE30, sub_100BA7618);
      v25 = qword_10124F040;
      static Locale.current.getter((id)qword_10124F040);
      v18 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v25, v3, 0, 0, 256);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
    }
    sub_10005B748((uint64_t)v14, type metadata accessor for PlaylistCurators.Curator);
    return v18;
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x73736F5020746F4ELL, 0xEC000000656C6269, "MusicCoreUI/CollaborationUI.swift", 33, 2, 878, 0);
    __break(1u);
  }
  return result;
}

uint64_t PlaylistCurators.View.fontTextStyle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unsigned int (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  char v20;
  void (*v21)(char *, uint64_t);
  unsigned int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;

  v27 = a1;
  v1 = type metadata accessor for UserInterfaceSizeClass(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C((uint64_t *)&unk_1011E3150);
  __chkstk_darwin(v5);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011DE740);
  __chkstk_darwin(v8);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v26 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v26 - v15;
  type metadata accessor for PlaylistCurators.View(0);
  sub_100C31A00((uint64_t)v16);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v13, enum case for UserInterfaceSizeClass.compact(_:), v1);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v2 + 56))(v13, 0, 1, v1);
  v17 = (uint64_t)&v7[*(int *)(v5 + 48)];
  sub_10004A160((uint64_t)v16, (uint64_t)v7, &qword_1011DE740);
  sub_10004A160((uint64_t)v13, v17, &qword_1011DE740);
  v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  if (v18((uint64_t)v7, 1, v1) != 1)
  {
    sub_10004A160((uint64_t)v7, (uint64_t)v10, &qword_1011DE740);
    if (v18(v17, 1, v1) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v2 + 32))(v4, v17, v1);
      v19 = sub_100048748(&qword_1011E3160, (uint64_t (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass, (uint64_t)&protocol conformance descriptor for UserInterfaceSizeClass);
      v20 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v4, v1, v19);
      v21 = *(void (**)(char *, uint64_t))(v2 + 8);
      v21(v4, v1);
      sub_10004FF60((uint64_t)v13, &qword_1011DE740);
      sub_10004FF60((uint64_t)v16, &qword_1011DE740);
      v21(v10, v1);
      sub_10004FF60((uint64_t)v7, &qword_1011DE740);
      if ((v20 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v22 = (unsigned int *)&enum case for Font.TextStyle.title(_:);
      goto LABEL_10;
    }
    sub_10004FF60((uint64_t)v13, &qword_1011DE740);
    sub_10004FF60((uint64_t)v16, &qword_1011DE740);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v10, v1);
LABEL_6:
    sub_10004FF60((uint64_t)v7, (uint64_t *)&unk_1011E3150);
    goto LABEL_9;
  }
  sub_10004FF60((uint64_t)v13, &qword_1011DE740);
  sub_10004FF60((uint64_t)v16, &qword_1011DE740);
  if (v18(v17, 1, v1) != 1)
    goto LABEL_6;
  sub_10004FF60((uint64_t)v7, &qword_1011DE740);
LABEL_8:
  v22 = (unsigned int *)&enum case for Font.TextStyle.title3(_:);
LABEL_10:
  v23 = *v22;
  v24 = type metadata accessor for Font.TextStyle(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v27, v23, v24);
}

uint64_t sub_100C6D5D0(uint64_t a1)
{
  id v2;
  _QWORD v4[5];

  v2 = objc_msgSend((id)objc_opt_self(UIColor), "secondarySystemBackgroundColor");
  v4[3] = &type metadata for Color;
  v4[4] = &protocol witness table for Color;
  v4[0] = Color.init(_:)(v2);
  return sub_1000A5508((uint64_t)v4, a1 + 40, (uint64_t *)&unk_1011E3E20);
}

void sub_100C6D644()
{
  id v0;
  void *v1;
  id v2;
  _QWORD v3[6];

  v0 = objc_allocWithZone((Class)UIColor);
  v3[4] = sub_100C6D6E8;
  v3[5] = 0;
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 1107296256;
  v3[2] = sub_100264780;
  v3[3] = &unk_10110B7D0;
  v1 = _Block_copy(v3);
  v2 = objc_msgSend(v0, "initWithDynamicProvider:", v1);
  _Block_release(v1);
  swift_release();
  qword_1011E3000 = (uint64_t)v2;
}

id sub_100C6D6E8(void *a1)
{
  void *v2;
  char **v3;
  id v4;

  if (objc_msgSend(a1, "userInterfaceIdiom") == (id)6)
  {
    v2 = (void *)objc_opt_self(UIColor);
    v3 = &selRef_whiteColor;
  }
  else
  {
    v4 = objc_msgSend(a1, "userInterfaceStyle");
    v2 = (void *)objc_opt_self(UIColor);
    v3 = &selRef_whiteColor;
    if (v4 == (id)2)
      v3 = &selRef_blackColor;
  }
  return objc_msgSend(v2, *v3);
}

uint64_t sub_100C6D774()
{
  id v0;
  __n128 v1;
  uint64_t result;

  if (qword_1011DE1D8 != -1)
    swift_once(&qword_1011DE1D8, sub_100C6D644);
  v0 = (id)qword_1011E3000;
  result = Color.init(uiColor:)(v0, v1);
  qword_1011E3008 = result;
  qword_1011E3010 = 0x3FF0000000000000;
  byte_1011E3018 = 1;
  return result;
}

uint64_t PlaylistCurators.ViewController.configuration.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + direct field offset for PlaylistCurators.ViewController.configuration, v2, 0, 0);
  return swift_bridgeObjectRetain();
}

uint64_t PlaylistCurators.ViewController.configuration.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_BYTE *, _QWORD);
  uint64_t *v7;
  uint64_t v8;
  _BYTE v10[32];
  _BYTE v11[24];

  v3 = (uint64_t *)(v1 + direct field offset for PlaylistCurators.ViewController.configuration);
  swift_beginAccess(v1 + direct field offset for PlaylistCurators.ViewController.configuration, v11, 1, 0);
  v4 = *v3;
  *v3 = a1;
  swift_bridgeObjectRelease(v4);
  v5 = *v3;
  swift_bridgeObjectRetain();
  v6 = (uint64_t (*)(_BYTE *, _QWORD))dispatch thunk of UIHostingController.rootView.modify(v10);
  v8 = *v7;
  *v7 = v5;
  swift_bridgeObjectRelease(v8);
  return v6(v10, 0);
}

void (*PlaylistCurators.ViewController.configuration.modify(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = direct field offset for PlaylistCurators.ViewController.configuration;
  v3[4] = v1;
  v3[5] = v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  return sub_100C6D900;
}

void sub_100C6D900(_QWORD *a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  void (*v5)(_QWORD *, _QWORD);
  uint64_t *v6;
  uint64_t v7;

  v3 = (_QWORD *)*a1;
  swift_endAccess(*a1);
  if ((a2 & 1) == 0)
  {
    v4 = *(_QWORD *)(v3[4] + v3[5]);
    swift_bridgeObjectRetain();
    v5 = (void (*)(_QWORD *, _QWORD))dispatch thunk of UIHostingController.rootView.modify(v3);
    v7 = *v6;
    *v6 = v4;
    swift_bridgeObjectRelease(v7);
    v5(v3, 0);
  }
  free(v3);
}

uint64_t PlaylistCurators.ViewController.__allocating_init(configuration:)(uint64_t a1)
{
  objc_class *v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v12;

  v3 = type metadata accessor for PlaylistCurators.View(0);
  __chkstk_darwin();
  v5 = (uint64_t *)((char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  v7 = (char *)&v12 - v6;
  v8 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v8[direct field offset for PlaylistCurators.ViewController.configuration] = a1;
  v9 = (_QWORD *)((char *)v5 + *(int *)(v3 + 20));
  *v9 = swift_getKeyPath(&unk_100EF0368);
  v10 = sub_100007E8C(&qword_1011DE440);
  swift_storeEnumTagMultiPayload(v9, v10, 0);
  *v5 = a1;
  sub_10005B6C0((uint64_t)v5, (uint64_t)v7, type metadata accessor for PlaylistCurators.View);
  swift_bridgeObjectRetain();
  return UIHostingController.init(rootView:)(v7);
}

uint64_t PlaylistCurators.ViewController.init(configuration:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v11;

  type metadata accessor for PlaylistCurators.View(0);
  __chkstk_darwin();
  v4 = (uint64_t *)((char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  v6 = (char *)&v11 - v5;
  *(_QWORD *)(v1 + direct field offset for PlaylistCurators.ViewController.configuration) = a1;
  v8 = (_QWORD *)((char *)v4 + *(int *)(v7 + 20));
  *v8 = swift_getKeyPath(&unk_100EF0368);
  v9 = sub_100007E8C(&qword_1011DE440);
  swift_storeEnumTagMultiPayload(v8, v9, 0);
  *v4 = a1;
  sub_10005B6C0((uint64_t)v4, (uint64_t)v6, type metadata accessor for PlaylistCurators.View);
  swift_bridgeObjectRetain();
  return UIHostingController.init(rootView:)(v6);
}

void sub_100C6DB54()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100E2B820, "MusicCoreUI/CollaborationUI.swift", 33, 2, 915, 0);
  __break(1u);
}

void PlaylistCurators.ViewController.init(rootView:)()
{
  _swift_stdlib_reportUnimplementedInitializer("MusicCoreUI.ViewController", 26, "init(rootView:)", 15, 0);
  __break(1u);
}

void PlaylistCurators.ViewController.__allocating_init(coder:rootView:)()
{
  _swift_stdlib_reportUnimplementedInitializer("MusicCoreUI.ViewController", 26, "init(coder:rootView:)", 21, 0);
  __break(1u);
}

uint64_t sub_100C6DC04()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(*(_QWORD *)(v0 + direct field offset for PlaylistCurators.ViewController.configuration));
}

id PlaylistCurators.ViewController.__deallocating_deinit()
{
  return sub_10015C40C(type metadata accessor for PlaylistCurators.ViewController);
}

uint64_t sub_100C6DC20(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + direct field offset for PlaylistCurators.ViewController.configuration));
}

id sub_100C6DEAC()
{
  return sub_10015C40C((uint64_t (*)(_QWORD))type metadata accessor for ClearBackground.Controller);
}

id sub_100C6DEB8()
{
  type metadata accessor for ClearBackground.Controller();
  return objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
}

uint64_t sub_100C6DEE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100C7519C();
  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100C6DF30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100C7519C();
  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_100C6DF80(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100C7519C();
  UIViewControllerRepresentable.body.getter(a1, v2);
  __break(1u);
}

void sub_100C6DFA4(uint64_t *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, _QWORD *a4@<X8>)
{
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;

  v6 = *a1;
  KeyPath = swift_getKeyPath(a2);
  v8 = swift_getKeyPath(a3);
  static Published.subscript.getter(&v9, v6, KeyPath, v8);
  swift_release(v8);
  swift_release(KeyPath);
  *a4 = v9;
}

uint64_t sub_100C6E01C(Swift::Int *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  __n128 v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  Swift::Int v15;
  Swift::Int v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  char v20;
  uint64_t v21;
  id v22;
  char v23;
  void *v24;
  id v25;
  Swift::Int v26;
  unint64_t v27;
  uint64_t v28;
  id v29;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v31;
  id v32;
  uint64_t v33;
  Swift::Int v34;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v10 = __CocoaSet.member(for:)(v9);

    if (v10)
    {
      swift_bridgeObjectRelease();

      v33 = v10;
      v12 = sub_10004A07C(0, (unint64_t *)&qword_1011DF118, MSVLyricsAgent_ptr);
      swift_unknownObjectRetain(v10, v13);
      swift_dynamicCast(&v34, &v33, (char *)&type metadata for Swift.AnyObject + 8, v12, 7);
      *a1 = v34;
      swift_unknownObjectRelease(v10);
      return 0;
    }
    result = __CocoaSet.count.getter(v7, v11);
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v26 = sub_100C6E7A0(v7, result + 1);
    v34 = v26;
    v27 = *(_QWORD *)(v26 + 16);
    if (*(_QWORD *)(v26 + 24) <= v27)
    {
      v31 = v27 + 1;
      v32 = v8;
      sub_10019AF40(v31, (uint64_t *)&unk_1011E4370);
      v28 = v34;
    }
    else
    {
      v28 = v26;
      v29 = v8;
    }
    sub_1006A1224((uint64_t)v8, v28);
    *v3 = v28;
  }
  else
  {
    v15 = *(_QWORD *)(v6 + 40);
    swift_bridgeObjectRetain();
    v16 = NSObject._rawHashValue(seed:)(v15);
    v17 = -1 << *(_BYTE *)(v6 + 32);
    v18 = v16 & ~v17;
    if (((*(_QWORD *)(v6 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) != 0)
    {
      sub_10004A07C(0, (unint64_t *)&qword_1011DF118, MSVLyricsAgent_ptr);
      v19 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v18);
      v20 = static NSObject.== infix(_:_:)(v19, a2);

      if ((v20 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v24 = *(void **)(*(_QWORD *)(*v3 + 48) + 8 * v18);
        *a1 = (Swift::Int)v24;
        v25 = v24;
        return 0;
      }
      v21 = ~v17;
      while (1)
      {
        v18 = (v18 + 1) & v21;
        if (((*(_QWORD *)(v6 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
          break;
        v22 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v18);
        v23 = static NSObject.== infix(_:_:)(v22, a2);

        if ((v23 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v34 = *v3;
    *v3 = 0x8000000000000000;
    v8 = a2;
    sub_100C6EF18((uint64_t)v8, v18, isUniquelyReferenced_nonNull_native);
    *v3 = v34;
  }
  swift_bridgeObjectRelease();
  *a1 = (Swift::Int)v8;
  return 1;
}

uint64_t sub_100C6E2C0(Swift::Int *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  __n128 v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  Swift::Int v15;
  Swift::Int v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  char v20;
  uint64_t v21;
  id v22;
  char v23;
  void *v24;
  id v25;
  Swift::Int v26;
  unint64_t v27;
  uint64_t v28;
  id v29;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v31;
  id v32;
  uint64_t v33;
  Swift::Int v34;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v10 = __CocoaSet.member(for:)(v9);

    if (v10)
    {
      swift_bridgeObjectRelease();

      v33 = v10;
      v12 = type metadata accessor for SyncedLyricsLineView();
      swift_unknownObjectRetain(v10, v13);
      swift_dynamicCast(&v34, &v33, (char *)&type metadata for Swift.AnyObject + 8, v12, 7);
      *a1 = v34;
      swift_unknownObjectRelease(v10);
      return 0;
    }
    result = __CocoaSet.count.getter(v7, v11);
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v26 = sub_100C6E9A8(v7, result + 1);
    v34 = v26;
    v27 = *(_QWORD *)(v26 + 16);
    if (*(_QWORD *)(v26 + 24) <= v27)
    {
      v31 = v27 + 1;
      v32 = v8;
      sub_10019AF40(v31, &qword_1011E3C90);
      v28 = v34;
    }
    else
    {
      v28 = v26;
      v29 = v8;
    }
    sub_1006A1224((uint64_t)v8, v28);
    *v3 = v28;
  }
  else
  {
    v15 = *(_QWORD *)(v6 + 40);
    swift_bridgeObjectRetain();
    v16 = NSObject._rawHashValue(seed:)(v15);
    v17 = -1 << *(_BYTE *)(v6 + 32);
    v18 = v16 & ~v17;
    if (((*(_QWORD *)(v6 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) != 0)
    {
      type metadata accessor for SyncedLyricsLineView();
      v19 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v18);
      v20 = static NSObject.== infix(_:_:)(v19, a2);

      if ((v20 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v24 = *(void **)(*(_QWORD *)(*v3 + 48) + 8 * v18);
        *a1 = (Swift::Int)v24;
        v25 = v24;
        return 0;
      }
      v21 = ~v17;
      while (1)
      {
        v18 = (v18 + 1) & v21;
        if (((*(_QWORD *)(v6 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
          break;
        v22 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v18);
        v23 = static NSObject.== infix(_:_:)(v22, a2);

        if ((v23 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v34 = *v3;
    *v3 = 0x8000000000000000;
    v8 = a2;
    sub_100C6F0BC((uint64_t)v8, v18, isUniquelyReferenced_nonNull_native);
    *v3 = v34;
  }
  swift_bridgeObjectRelease();
  *a1 = (Swift::Int)v8;
  return 1;
}

uint64_t sub_100C6E544(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  uint64_t v21;
  void (*v22)(_QWORD, _QWORD, _QWORD);
  uint64_t v23;
  char v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v28;
  __n128 v29;
  __n128 v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v3 = v2;
  v6 = type metadata accessor for Playlist.Collaborator(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  v11 = *(_QWORD *)(*v3 + 40);
  v13 = sub_100048748((unint64_t *)&unk_1011E3C20, v12, (uint64_t)&protocol conformance descriptor for Playlist.Collaborator);
  swift_bridgeObjectRetain();
  v36 = a2;
  v14 = dispatch thunk of Hashable._rawHashValue(seed:)(v11, v6, v13);
  v15 = -1 << *(_BYTE *)(v10 + 32);
  v16 = v14 & ~v15;
  v17 = v10;
  v18 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
  {
    v32 = v3;
    v33 = a1;
    v34 = ~v15;
    v35 = v7;
    v19 = *(_QWORD *)(v7 + 72);
    v20 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v21 = v17;
      v22 = v20;
      v20(v9, *(_QWORD *)(v17 + 48) + v19 * v16, v6);
      v23 = sub_100048748(&qword_1011DF690, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Collaborator, (uint64_t)&protocol conformance descriptor for Playlist.Collaborator);
      v24 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v36, v6, v23);
      v25 = *(void (**)(char *, uint64_t))(v35 + 8);
      v25(v9, v6);
      if ((v24 & 1) != 0)
        break;
      v16 = (v16 + 1) & v34;
      v17 = v21;
      v20 = v22;
      if (((*(_QWORD *)(v18 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v32;
        a1 = v33;
        v26 = v35;
        goto LABEL_7;
      }
    }
    v31 = swift_bridgeObjectRelease();
    ((void (*)(uint64_t, uint64_t, __n128))v25)(v36, v6, v31);
    v22(v33, *(_QWORD *)(*v32 + 48) + v19 * v16, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v20 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v26 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v28 = v36;
    v20(v9, v36, v6);
    v37 = *v3;
    *v3 = 0x8000000000000000;
    sub_100C6F250((uint64_t)v9, v16, isUniquelyReferenced_nonNull_native);
    *v3 = v37;
    v29 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v26 + 32))(a1, v28, v6, v29);
    return 1;
  }
}

Swift::Int sub_100C6E7A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Int result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  if (a2)
  {
    sub_100007E8C((uint64_t *)&unk_1011E4370);
    v4 = static _SetStorage.convert(_:capacity:)(a1, a2);
    v23 = v4;
    v5 = __CocoaSet.makeIterator()(a1);
    v6 = __CocoaSet.Iterator.next()(v5);
    if (v6)
    {
      v7 = v6;
      v8 = sub_10004A07C(0, (unint64_t *)&qword_1011DF118, MSVLyricsAgent_ptr);
      do
      {
        v21 = v7;
        swift_dynamicCast(&v22, &v21, (char *)&type metadata for Swift.AnyObject + 8, v8, 7);
        v4 = v23;
        v16 = *(_QWORD *)(v23 + 16);
        if (*(_QWORD *)(v23 + 24) <= v16)
        {
          sub_10019AF40(v16 + 1, (uint64_t *)&unk_1011E4370);
          v4 = v23;
        }
        v9 = v22;
        result = NSObject._rawHashValue(seed:)(*(_QWORD *)(v4 + 40));
        v11 = v4 + 56;
        v12 = -1 << *(_BYTE *)(v4 + 32);
        v13 = result & ~v12;
        v14 = v13 >> 6;
        if (((-1 << v13) & ~*(_QWORD *)(v4 + 56 + 8 * (v13 >> 6))) != 0)
        {
          v15 = __clz(__rbit64((-1 << v13) & ~*(_QWORD *)(v4 + 56 + 8 * (v13 >> 6)))) | v13 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v17 = 0;
          v18 = (unint64_t)(63 - v12) >> 6;
          do
          {
            if (++v14 == v18 && (v17 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v19 = v14 == v18;
            if (v14 == v18)
              v14 = 0;
            v17 |= v19;
            v20 = *(_QWORD *)(v11 + 8 * v14);
          }
          while (v20 == -1);
          v15 = __clz(__rbit64(~v20)) + (v14 << 6);
        }
        *(_QWORD *)(v11 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
        *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = v9;
        ++*(_QWORD *)(v4 + 16);
        v7 = __CocoaSet.Iterator.next()(result);
      }
      while (v7);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease(a1);
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v4;
}

Swift::Int sub_100C6E9A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Int result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  if (a2)
  {
    sub_100007E8C(&qword_1011E3C90);
    v4 = static _SetStorage.convert(_:capacity:)(a1, a2);
    v23 = v4;
    v5 = __CocoaSet.makeIterator()(a1);
    v6 = __CocoaSet.Iterator.next()(v5);
    if (v6)
    {
      v7 = v6;
      v8 = type metadata accessor for SyncedLyricsLineView();
      do
      {
        v21 = v7;
        swift_dynamicCast(&v22, &v21, (char *)&type metadata for Swift.AnyObject + 8, v8, 7);
        v4 = v23;
        v16 = *(_QWORD *)(v23 + 16);
        if (*(_QWORD *)(v23 + 24) <= v16)
        {
          sub_10019AF40(v16 + 1, &qword_1011E3C90);
          v4 = v23;
        }
        v9 = v22;
        result = NSObject._rawHashValue(seed:)(*(_QWORD *)(v4 + 40));
        v11 = v4 + 56;
        v12 = -1 << *(_BYTE *)(v4 + 32);
        v13 = result & ~v12;
        v14 = v13 >> 6;
        if (((-1 << v13) & ~*(_QWORD *)(v4 + 56 + 8 * (v13 >> 6))) != 0)
        {
          v15 = __clz(__rbit64((-1 << v13) & ~*(_QWORD *)(v4 + 56 + 8 * (v13 >> 6)))) | v13 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v17 = 0;
          v18 = (unint64_t)(63 - v12) >> 6;
          do
          {
            if (++v14 == v18 && (v17 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v19 = v14 == v18;
            if (v14 == v18)
              v14 = 0;
            v17 |= v19;
            v20 = *(_QWORD *)(v11 + 8 * v14);
          }
          while (v20 == -1);
          v15 = __clz(__rbit64(~v20)) + (v14 << 6);
        }
        *(_QWORD *)(v11 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
        *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = v9;
        ++*(_QWORD *)(v4 + 16);
        v7 = __CocoaSet.Iterator.next()(result);
      }
      while (v7);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease(a1);
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v4;
}

void sub_100C6EBA0(uint64_t a1)
{
  sub_10019AF40(a1, (uint64_t *)&unk_1011E4370);
}

void sub_100C6EBAC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  __n128 v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, unint64_t, uint64_t, __n128);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t v41;

  v2 = v1;
  v4 = type metadata accessor for Playlist.Collaborator(0);
  v41 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v2;
  if (*(_QWORD *)(*v2 + 24) > a1)
    a1 = *(_QWORD *)(*v2 + 24);
  sub_100007E8C(&qword_1011E3C30);
  v8 = static _SetStorage.resize(original:capacity:move:)(v7, a1, 1);
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
    goto LABEL_39;
  v10 = 1 << *(_BYTE *)(v7 + 32);
  v11 = *(_QWORD *)(v7 + 56);
  v40 = (_QWORD *)(v7 + 56);
  if (v10 < 64)
    v12 = ~(-1 << v10);
  else
    v12 = -1;
  v13 = v12 & v11;
  v38 = v2;
  v39 = (unint64_t)(v10 + 63) >> 6;
  v14 = v8 + 56;
  v15 = swift_retain();
  v16 = 0;
  while (1)
  {
    if (v13)
    {
      v18 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v19 = v18 | (v16 << 6);
      goto LABEL_26;
    }
    v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      return;
    }
    if (v20 >= v39)
      goto LABEL_35;
    v21 = v40[v20];
    ++v16;
    if (!v21)
    {
      v16 = v20 + 1;
      if (v20 + 1 >= v39)
        goto LABEL_35;
      v21 = v40[v16];
      if (!v21)
      {
        v16 = v20 + 2;
        if (v20 + 2 >= v39)
          goto LABEL_35;
        v21 = v40[v16];
        if (!v21)
          break;
      }
    }
LABEL_25:
    v13 = (v21 - 1) & v21;
    v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_26:
    v23 = v7;
    v24 = *(_QWORD *)(v7 + 48);
    v25 = *(_QWORD *)(v41 + 72);
    v26 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v41 + 32);
    v26(v6, v24 + v25 * v19, v4, v15);
    v27 = *(_QWORD *)(v9 + 40);
    v28 = sub_100048748((unint64_t *)&unk_1011E3C20, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Collaborator, (uint64_t)&protocol conformance descriptor for Playlist.Collaborator);
    v29 = dispatch thunk of Hashable._rawHashValue(seed:)(v27, v4, v28);
    v30 = -1 << *(_BYTE *)(v9 + 32);
    v31 = v29 & ~v30;
    v32 = v31 >> 6;
    if (((-1 << v31) & ~*(_QWORD *)(v14 + 8 * (v31 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v31) & ~*(_QWORD *)(v14 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v33 = 0;
      v34 = (unint64_t)(63 - v30) >> 6;
      do
      {
        if (++v32 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_40;
        }
        v35 = v32 == v34;
        if (v32 == v34)
          v32 = 0;
        v33 |= v35;
        v36 = *(_QWORD *)(v14 + 8 * v32);
      }
      while (v36 == -1);
      v17 = __clz(__rbit64(~v36)) + (v32 << 6);
    }
    *(_QWORD *)(v14 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    ((void (*)(unint64_t, char *, uint64_t))v26)(*(_QWORD *)(v9 + 48) + v17 * v25, v6, v4);
    ++*(_QWORD *)(v9 + 16);
    v7 = v23;
  }
  v22 = v20 + 3;
  if (v22 < v39)
  {
    v21 = v40[v22];
    if (!v21)
    {
      while (1)
      {
        v16 = v22 + 1;
        if (__OFADD__(v22, 1))
          goto LABEL_41;
        if (v16 >= v39)
          goto LABEL_35;
        v21 = v40[v16];
        ++v22;
        if (v21)
          goto LABEL_25;
      }
    }
    v16 = v22;
    goto LABEL_25;
  }
LABEL_35:
  swift_release();
  v2 = v38;
  v37 = 1 << *(_BYTE *)(v7 + 32);
  if (v37 > 63)
    bzero(v40, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v40 = -1 << v37;
  *(_QWORD *)(v7 + 16) = 0;
LABEL_39:
  swift_release();
  *v2 = v9;
}

void sub_100C6EF18(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v4 = v3;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_14;
  v9 = v7 + 1;
  if ((a3 & 1) != 0)
  {
    sub_10019AF40(v9, (uint64_t *)&unk_1011E4370);
  }
  else
  {
    if (v8 > v7)
    {
      sub_10019F184((uint64_t *)&unk_1011E4370);
      goto LABEL_14;
    }
    sub_1001A2C8C(v9, (uint64_t *)&unk_1011E4370);
  }
  v10 = *v3;
  v11 = NSObject._rawHashValue(seed:)(*(_QWORD *)(*v3 + 40));
  v12 = -1 << *(_BYTE *)(v10 + 32);
  a2 = v11 & ~v12;
  if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v13 = sub_10004A07C(0, (unint64_t *)&qword_1011DF118, MSVLyricsAgent_ptr);
    v14 = *(id *)(*(_QWORD *)(v10 + 48) + 8 * a2);
    v15 = static NSObject.== infix(_:_:)(v14, a1);

    if ((v15 & 1) != 0)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v13);
      __break(1u);
    }
    else
    {
      v16 = ~v12;
      while (1)
      {
        a2 = (a2 + 1) & v16;
        if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v10 + 48) + 8 * a2);
        v18 = static NSObject.== infix(_:_:)(v17, a1);

        if ((v18 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v19 = *v4;
  *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v19 + 48) + 8 * a2) = a1;
  v20 = *(_QWORD *)(v19 + 16);
  v21 = __OFADD__(v20, 1);
  v22 = v20 + 1;
  if (v21)
    __break(1u);
  else
    *(_QWORD *)(v19 + 16) = v22;
}

void sub_100C6F0BC(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v4 = v3;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_14;
  v9 = v7 + 1;
  if ((a3 & 1) != 0)
  {
    sub_10019AF40(v9, &qword_1011E3C90);
  }
  else
  {
    if (v8 > v7)
    {
      sub_10019F184(&qword_1011E3C90);
      goto LABEL_14;
    }
    sub_1001A2C8C(v9, &qword_1011E3C90);
  }
  v10 = *v3;
  v11 = NSObject._rawHashValue(seed:)(*(_QWORD *)(*v3 + 40));
  v12 = -1 << *(_BYTE *)(v10 + 32);
  a2 = v11 & ~v12;
  if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v13 = type metadata accessor for SyncedLyricsLineView();
    v14 = *(id *)(*(_QWORD *)(v10 + 48) + 8 * a2);
    v15 = static NSObject.== infix(_:_:)(v14, a1);

    if ((v15 & 1) != 0)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v13);
      __break(1u);
    }
    else
    {
      v16 = ~v12;
      while (1)
      {
        a2 = (a2 + 1) & v16;
        if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v10 + 48) + 8 * a2);
        v18 = static NSObject.== infix(_:_:)(v17, a1);

        if ((v18 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v19 = *v4;
  *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v19 + 48) + 8 * a2) = a1;
  v20 = *(_QWORD *)(v19 + 16);
  v21 = __OFADD__(v20, 1);
  v22 = v20 + 1;
  if (v21)
    __break(1u);
  else
    *(_QWORD *)(v19 + 16) = v22;
}

uint64_t sub_100C6F250(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, unint64_t, uint64_t);
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;

  v31 = a1;
  v6 = type metadata accessor for Playlist.Collaborator(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin();
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(*v3 + 16);
  v12 = *(_QWORD *)(*v3 + 24);
  v30 = v3;
  if (v12 > v11 && (a3 & 1) != 0)
    goto LABEL_12;
  v13 = v11 + 1;
  if ((a3 & 1) != 0)
  {
    sub_100C6EBAC(v13);
  }
  else
  {
    if (v12 > v11)
    {
      sub_100C6F454();
      goto LABEL_12;
    }
    sub_100C6F678(v13);
  }
  v14 = *v3;
  v15 = *(_QWORD *)(*v3 + 40);
  v16 = sub_100048748((unint64_t *)&unk_1011E3C20, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Collaborator, (uint64_t)&protocol conformance descriptor for Playlist.Collaborator);
  v17 = dispatch thunk of Hashable._rawHashValue(seed:)(v15, v6, v16);
  v18 = -1 << *(_BYTE *)(v14 + 32);
  a2 = v17 & ~v18;
  if (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v19 = ~v18;
    v20 = *(_QWORD *)(v7 + 72);
    v21 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v21(v10, *(_QWORD *)(v14 + 48) + v20 * a2, v6);
      v22 = sub_100048748(&qword_1011DF690, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Collaborator, (uint64_t)&protocol conformance descriptor for Playlist.Collaborator);
      v23 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v31, v6, v22);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      if ((v23 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v19;
    }
    while (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v24 = v31;
  v25 = *v30;
  *(_QWORD *)(*v30 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v7 + 32))(*(_QWORD *)(v25 + 48) + *(_QWORD *)(v7 + 72) * a2, v24, v6, v8);
  v27 = *(_QWORD *)(v25 + 16);
  v28 = __OFADD__(v27, 1);
  v29 = v27 + 1;
  if (!v28)
  {
    *(_QWORD *)(v25 + 16) = v29;
    return result;
  }
  __break(1u);
LABEL_15:
  result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v6);
  __break(1u);
  return result;
}

void sub_100C6F454()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;

  v1 = v0;
  v2 = type metadata accessor for Playlist.Collaborator(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin();
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011E3C30);
  v6 = *v0;
  v7 = static _SetStorage.copy(original:)(*v0);
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    swift_release();
LABEL_30:
    *v1 = v8;
    return;
  }
  v25 = v1;
  v9 = (void *)(v7 + 56);
  v10 = v6 + 56;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)v9 >= v6 + 56 + 8 * v11)
    memmove(v9, (const void *)(v6 + 56), 8 * v11);
  v13 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v14 = 1 << *(_BYTE *)(v6 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v6 + 56);
  v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v21 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v21);
    ++v13;
    if (!v22)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v17)
        goto LABEL_28;
      v22 = *(_QWORD *)(v10 + 8 * v13);
      if (!v22)
      {
        v13 = v21 + 2;
        if (v21 + 2 >= v17)
          goto LABEL_28;
        v22 = *(_QWORD *)(v10 + 8 * v13);
        if (!v22)
          break;
      }
    }
LABEL_27:
    v16 = (v22 - 1) & v22;
    v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v3 + 72) * v19;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v20, v2);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v20, v5, v2);
  }
  v23 = v21 + 3;
  if (v23 >= v17)
  {
LABEL_28:
    swift_release();
    v1 = v25;
    goto LABEL_30;
  }
  v22 = *(_QWORD *)(v10 + 8 * v23);
  if (v22)
  {
    v13 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v13);
    ++v23;
    if (v22)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
}

void sub_100C6F678(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  __n128 v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  int64_t v38;

  v2 = v1;
  v4 = type metadata accessor for Playlist.Collaborator(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  if (*(_QWORD *)(*v2 + 24) > a1)
    a1 = *(_QWORD *)(*v2 + 24);
  sub_100007E8C(&qword_1011E3C30);
  v9 = static _SetStorage.resize(original:capacity:move:)(v8, a1, 0);
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
  {
    swift_release();
LABEL_37:
    *v2 = v10;
    return;
  }
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 56);
  v36 = v2;
  v37 = v8 + 56;
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v38 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 56;
  v16 = swift_retain();
  v17 = 0;
  while (1)
  {
    if (v14)
    {
      v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v20 = v19 | (v17 << 6);
      goto LABEL_26;
    }
    v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v21 >= v38)
      goto LABEL_35;
    v22 = *(_QWORD *)(v37 + 8 * v21);
    ++v17;
    if (!v22)
    {
      v17 = v21 + 1;
      if (v21 + 1 >= v38)
        goto LABEL_35;
      v22 = *(_QWORD *)(v37 + 8 * v17);
      if (!v22)
      {
        v17 = v21 + 2;
        if (v21 + 2 >= v38)
          goto LABEL_35;
        v22 = *(_QWORD *)(v37 + 8 * v17);
        if (!v22)
          break;
      }
    }
LABEL_25:
    v14 = (v22 - 1) & v22;
    v20 = __clz(__rbit64(v22)) + (v17 << 6);
LABEL_26:
    v24 = *(_QWORD *)(v5 + 72);
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v5 + 16))(v7, *(_QWORD *)(v8 + 48) + v24 * v20, v4, v16);
    v25 = *(_QWORD *)(v10 + 40);
    v26 = sub_100048748((unint64_t *)&unk_1011E3C20, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Collaborator, (uint64_t)&protocol conformance descriptor for Playlist.Collaborator);
    v27 = dispatch thunk of Hashable._rawHashValue(seed:)(v25, v4, v26);
    v28 = -1 << *(_BYTE *)(v10 + 32);
    v29 = v27 & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v15 + 8 * (v29 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v15 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v15 + 8 * v30);
      }
      while (v34 == -1);
      v18 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v10 + 48) + v18 * v24, v7, v4);
    ++*(_QWORD *)(v10 + 16);
  }
  v23 = v21 + 3;
  if (v23 >= v38)
  {
LABEL_35:
    swift_release_n(v8, 2, v16);
    v2 = v36;
    goto LABEL_37;
  }
  v22 = *(_QWORD *)(v37 + 8 * v23);
  if (v22)
  {
    v17 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v17 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v17 >= v38)
      goto LABEL_35;
    v22 = *(_QWORD *)(v37 + 8 * v17);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_39:
  __break(1u);
}

uint64_t sub_100C6F9A0(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Int v10;
  Swift::Int v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  uint64_t v22;

  v2 = v1;
  v4 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    if (v4 < 0)
      v5 = *v1;
    else
      v5 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v6 = a1;
    v7 = __CocoaSet.contains(_:)(v6, v5);

    if ((v7 & 1) != 0)
    {
      sub_100C6FDA8(v5, (uint64_t)v6);
      v9 = v8;
      swift_bridgeObjectRelease();
      return v9;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    return 0;
  }
  v10 = *(_QWORD *)(v4 + 40);
  swift_bridgeObjectRetain();
  v11 = NSObject._rawHashValue(seed:)(v10);
  v12 = -1 << *(_BYTE *)(v4 + 32);
  v13 = v11 & ~v12;
  if (((*(_QWORD *)(v4 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
    goto LABEL_15;
  type metadata accessor for SyncedLyricsLineView();
  v14 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v13);
  v15 = static NSObject.== infix(_:_:)(v14, a1);

  if ((v15 & 1) == 0)
  {
    v16 = ~v12;
    do
    {
      v13 = (v13 + 1) & v16;
      if (((*(_QWORD *)(v4 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
        goto LABEL_15;
      v17 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v13);
      v18 = static NSObject.== infix(_:_:)(v17, a1);

    }
    while ((v18 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  v20 = *v2;
  v22 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10019F184(&qword_1011E3C90);
    v20 = v22;
  }
  v9 = *(_QWORD *)(*(_QWORD *)(v20 + 48) + 8 * v13);
  sub_1001A5200(v13);
  *v2 = v22;
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_100C6FB6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, unint64_t, uint64_t);
  unint64_t v20;
  uint64_t v21;
  char v22;
  __n128 v23;
  uint64_t v24;
  uint64_t *v25;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v27;
  unint64_t v28;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v3 = v2;
  v6 = type metadata accessor for Playlist.Collaborator(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  v11 = *(_QWORD *)(*v3 + 40);
  v13 = sub_100048748((unint64_t *)&unk_1011E3C20, v12, (uint64_t)&protocol conformance descriptor for Playlist.Collaborator);
  swift_bridgeObjectRetain();
  v33 = a1;
  v14 = dispatch thunk of Hashable._rawHashValue(seed:)(v11, v6, v13);
  v15 = -1 << *(_BYTE *)(v10 + 32);
  v16 = v14 & ~v15;
  if (((*(_QWORD *)(v10 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
  {
    v31 = v3;
    v32 = a2;
    v17 = ~v15;
    v18 = *(_QWORD *)(v7 + 72);
    v34 = v7;
    v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    while (1)
    {
      v20 = v18 * v16;
      v19(v9, *(_QWORD *)(v10 + 48) + v18 * v16, v6);
      v21 = sub_100048748(&qword_1011DF690, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Collaborator, (uint64_t)&protocol conformance descriptor for Playlist.Collaborator);
      v22 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v33, v6, v21);
      (*(void (**)(char *, uint64_t))(v34 + 8))(v9, v6);
      if ((v22 & 1) != 0)
        break;
      v16 = (v16 + 1) & v17;
      if (((*(_QWORD *)(v10 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
      {
        v23 = swift_bridgeObjectRelease();
        v24 = 1;
        a2 = v32;
        v7 = v34;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v7 + 56))(a2, v24, 1, v6, v23);
      }
    }
    swift_bridgeObjectRelease();
    v25 = v31;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v31);
    v27 = *v25;
    v35 = *v25;
    *v25 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_100C6F454();
      v27 = v35;
    }
    v28 = *(_QWORD *)(v27 + 48) + v20;
    v7 = v34;
    a2 = v32;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v34 + 32))(v32, v28, v6);
    sub_100C6FF30(v16);
    *v25 = v35;
    v23 = swift_bridgeObjectRelease();
    v24 = 0;
  }
  else
  {
    v23 = swift_bridgeObjectRelease();
    v24 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v7 + 56))(a2, v24, 1, v6, v23);
}

void sub_100C6FDA8(uint64_t a1, uint64_t a2)
{
  Swift::Int *v2;
  Swift::Int *v3;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Int v10;
  Swift::Int v11;
  Swift::Int v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  id v18;
  char v19;
  uint64_t v20;
  Swift::Int v21;

  v3 = v2;
  v6 = swift_bridgeObjectRelease();
  v7 = __CocoaSet.count.getter(a1, v6);
  v9 = swift_unknownObjectRetain(a1, v8);
  v10 = sub_100C6E9A8(v9, v7);
  v21 = v10;
  v11 = *(_QWORD *)(v10 + 40);
  swift_retain();
  v12 = NSObject._rawHashValue(seed:)(v11);
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    type metadata accessor for SyncedLyricsLineView();
    v15 = *(id *)(*(_QWORD *)(v10 + 48) + 8 * v14);
    v16 = static NSObject.== infix(_:_:)(v15, a2);

    if ((v16 & 1) != 0)
    {
LABEL_6:
      swift_release();
      v20 = *(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * v14);
      sub_1001A5200(v14);
      if ((static NSObject.== infix(_:_:)(a2, v20) & 1) != 0)
      {
        *v3 = v21;
        return;
      }
      __break(1u);
    }
    else
    {
      v17 = ~v13;
      while (1)
      {
        v14 = (v14 + 1) & v17;
        if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
          break;
        v18 = *(id *)(*(_QWORD *)(v10 + 48) + 8 * v14);
        v19 = static NSObject.== infix(_:_:)(v18, a2);

        if ((v19 & 1) != 0)
          goto LABEL_6;
      }
    }
    swift_release();
    __break(1u);
  }
  swift_release();
  __break(1u);
}

void sub_100C6FF30(int64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t *v28;
  void (*v29)(char *, unint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;

  v3 = type metadata accessor for Playlist.Collaborator(0);
  v31 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1;
  v7 = *v1 + 56;
  v8 = -1 << *(_BYTE *)(*v1 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(v7 + 8 * (v9 >> 6))) != 0)
  {
    v28 = v1;
    v10 = ~v8;
    swift_retain();
    v11 = _HashTable.previousHole(before:)(a1, v7, v10);
    v30 = v7;
    if ((*(_QWORD *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v12 = (v11 + 1) & v10;
      v13 = *(_QWORD *)(v31 + 72);
      v29 = *(void (**)(char *, unint64_t, uint64_t))(v31 + 16);
      do
      {
        v14 = v13 * v9;
        v29(v5, *(_QWORD *)(v6 + 48) + v13 * v9, v3);
        v15 = *(_QWORD *)(v6 + 40);
        v16 = sub_100048748((unint64_t *)&unk_1011E3C20, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Collaborator, (uint64_t)&protocol conformance descriptor for Playlist.Collaborator);
        v17 = dispatch thunk of Hashable._rawHashValue(seed:)(v15, v3, v16);
        (*(void (**)(char *, uint64_t))(v31 + 8))(v5, v3);
        v18 = v17 & v10;
        if (a1 >= (uint64_t)v12)
        {
          if (v18 < v12 || a1 < (uint64_t)v18)
            goto LABEL_6;
        }
        else if (v18 < v12 && a1 < (uint64_t)v18)
        {
          goto LABEL_6;
        }
        v21 = *(_QWORD *)(v6 + 48);
        v22 = v13 * a1;
        v23 = v21 + v13 * a1;
        if (v13 * a1 < v14 || v23 >= v21 + v14 + v13)
        {
          swift_arrayInitWithTakeFrontToBack(v23);
        }
        else
        {
          a1 = v9;
          if (v22 == v14)
            goto LABEL_6;
          swift_arrayInitWithTakeBackToFront(v23);
        }
        a1 = v9;
LABEL_6:
        v9 = (v9 + 1) & v10;
      }
      while (((*(_QWORD *)(v30 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    *(_QWORD *)(v30 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    swift_release();
    v1 = v28;
  }
  else
  {
    *(_QWORD *)(v7 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  v24 = *v1;
  v25 = *(_QWORD *)(*v1 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v24 + 16) = v27;
    ++*(_DWORD *)(v24 + 36);
  }
}

uint64_t sub_100C701AC(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v5;

  sub_100007E8C(&qword_1011E4240);
  __chkstk_darwin();
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A160(a1, (uint64_t)v3, &qword_1011E4240);
  return EnvironmentValues.symbolRenderingMode.setter(v3);
}

void sub_100C7022C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD), unint64_t *a5, uint64_t *a6, uint64_t (*a7)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t i;
  uint64_t v20;
  void (*v21)(_BYTE *, _QWORD, __n128);
  uint64_t *v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  _BYTE v26[32];

  v14 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v25 = a3;
    else
      v25 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v15 = _CocoaArrayWrapper.endIndex.getter(v25);
    swift_bridgeObjectRelease();
    if (!v15)
      return;
  }
  else
  {
    v15 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v15)
      return;
  }
  if (!a1)
  {
LABEL_23:
    __break(1u);
    return;
  }
  if (!v14)
  {
    if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a2)
    {
      a4(0);
      swift_arrayInitWithCopy(a1);
      return;
    }
    __break(1u);
    goto LABEL_21;
  }
  if (a3 < 0)
    v16 = a3;
  else
    v16 = a3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v17 = _CocoaArrayWrapper.endIndex.getter(v16);
  swift_bridgeObjectRelease();
  if (v17 > a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v15 < 1)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v18 = sub_100049F28(a5, a6, (uint64_t)&protocol conformance descriptor for [A]);
  swift_bridgeObjectRetain();
  for (i = 0; i != v15; ++i)
  {
    v20 = sub_100007E8C(a6);
    v21 = (void (*)(_BYTE *, _QWORD, __n128))a7(v26, i, a3, v20, v18);
    v23 = *v22;
    v24 = swift_retain();
    v21(v26, 0, v24);
    *(_QWORD *)(a1 + 8 * i) = v23;
  }
  swift_bridgeObjectRelease();
}

BOOL _s11MusicCoreUI16PlaylistCuratorsO7CuratorV23__derived_struct_equalsySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _BOOL8 result;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  char *v24;
  uint64_t v25;
  char v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  char *v29;

  v4 = type metadata accessor for Artwork(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011DF428);
  __chkstk_darwin();
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C((uint64_t *)&unk_1011E4A00);
  __chkstk_darwin();
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v14 = (char *)&v28 - v13;
  __chkstk_darwin();
  v16 = (char *)&v28 - v15;
  v17 = a1[1];
  v18 = a2[1];
  if (*a1 == *a2 && v17 == v18
    || (v19 = _stringCompareWithSmolCheck(_:_:expecting:)(*a1, v17, *a2, v18, 0), result = 0, (v19 & 1) != 0))
  {
    v29 = v7;
    v21 = type metadata accessor for PlaylistCurators.Curator(0);
    sub_10004A160((uint64_t)a1 + *(int *)(v21 + 20), (uint64_t)v16, (uint64_t *)&unk_1011E4A00);
    sub_10004A160((uint64_t)a2 + *(int *)(v21 + 20), (uint64_t)v14, (uint64_t *)&unk_1011E4A00);
    v22 = (uint64_t)&v10[*(int *)(v8 + 48)];
    sub_10004A160((uint64_t)v16, (uint64_t)v10, (uint64_t *)&unk_1011E4A00);
    sub_10004A160((uint64_t)v14, v22, (uint64_t *)&unk_1011E4A00);
    v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (v23((uint64_t)v10, 1, v4) == 1)
    {
      sub_10004FF60((uint64_t)v14, (uint64_t *)&unk_1011E4A00);
      sub_10004FF60((uint64_t)v16, (uint64_t *)&unk_1011E4A00);
      if (v23(v22, 1, v4) == 1)
      {
        sub_10004FF60((uint64_t)v10, (uint64_t *)&unk_1011E4A00);
        return 1;
      }
    }
    else
    {
      sub_10004A160((uint64_t)v10, (uint64_t)v12, (uint64_t *)&unk_1011E4A00);
      if (v23(v22, 1, v4) != 1)
      {
        v24 = v29;
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v29, v22, v4);
        v25 = sub_100048748(&qword_1011E3E30, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork, (uint64_t)&protocol conformance descriptor for Artwork);
        v26 = dispatch thunk of static Equatable.== infix(_:_:)(v12, v24, v4, v25);
        v27 = *(void (**)(char *, uint64_t))(v5 + 8);
        v27(v24, v4);
        sub_10004FF60((uint64_t)v14, (uint64_t *)&unk_1011E4A00);
        sub_10004FF60((uint64_t)v16, (uint64_t *)&unk_1011E4A00);
        v27(v12, v4);
        sub_10004FF60((uint64_t)v10, (uint64_t *)&unk_1011E4A00);
        return (v26 & 1) != 0;
      }
      sub_10004FF60((uint64_t)v14, (uint64_t *)&unk_1011E4A00);
      sub_10004FF60((uint64_t)v16, (uint64_t *)&unk_1011E4A00);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v12, v4);
    }
    sub_10004FF60((uint64_t)v10, &qword_1011DF428);
    return 0;
  }
  return result;
}

uint64_t sub_100C70714(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, char *, _QWORD *);
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  void (*v39)(char *, uint64_t, uint64_t);
  __n128 v40;
  char *v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  __n128 v61;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  _QWORD *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char v75;
  _BYTE v76[24];
  _QWORD v77[16];

  v3 = v2;
  v69 = a2;
  v70 = a1;
  v4 = sub_100007E8C(&qword_1011E0490);
  __chkstk_darwin(v4);
  v72 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011E3C60);
  __chkstk_darwin(v6);
  v65 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = type metadata accessor for Playlist(0);
  v74 = *(_QWORD *)(v64 - 8);
  __chkstk_darwin(v64);
  v68 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = v8;
  __chkstk_darwin(v9);
  v73 = (char *)&v63 - v10;
  v67 = (_QWORD *)sub_100007E8C(&qword_1011E3070);
  v66 = *(v67 - 1);
  __chkstk_darwin(v67);
  v12 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_100007E8C(&qword_1011E3050);
  v13 = *(_QWORD *)(v63 - 8);
  __chkstk_darwin(v63);
  v15 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C(&qword_1011E3038);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = v3 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__pendingCollaborators;
  v77[0] = _swiftEmptyArrayStorage;
  v21 = sub_100007E8C(&qword_1011E3020);
  Published.init(initialValue:)(v77, v21);
  v22 = *(void (**)(uint64_t, char *, uint64_t))(v17 + 32);
  v22(v20, v19, v16);
  v23 = v3 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__activeCollaborators;
  v77[0] = _swiftEmptyArrayStorage;
  Published.init(initialValue:)(v77, v21);
  v22(v23, v19, v16);
  v24 = v64;
  v25 = v3 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__transientCollaborators;
  v77[0] = &_swiftEmptySetSingleton;
  v26 = sub_100007E8C(&qword_1011E3028);
  Published.init(initialValue:)(v77, v26);
  v27 = v25;
  v28 = (uint64_t)v65;
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v27, v15, v63);
  v29 = v3 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__isResetingURL;
  LOBYTE(v77[0]) = 0;
  Published.init(initialValue:)(v77, &type metadata for Bool);
  v30 = *(void (**)(uint64_t, char *, _QWORD *))(v66 + 32);
  v31 = v67;
  v30(v29, v12, v67);
  v32 = v3 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__shouldDismiss;
  LOBYTE(v77[0]) = 0;
  Published.init(initialValue:)(v77, &type metadata for Bool);
  v30(v32, v12, v31);
  v33 = v3 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__hasNetworkConnectivity;
  static ApplicationCapabilities.shared.getter((uint64_t)v77);
  sub_100065184(v77);
  v76[0] = BYTE1(v77[0]);
  Published.init(initialValue:)(v76, &type metadata for Bool);
  v30(v33, v12, v31);
  v34 = v69;
  v35 = v3
      + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model____lazy_storage___artworkViewModel;
  v36 = sub_100007E8C((uint64_t *)&unk_1011E4DA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v35, 1, 1, v36);
  *(_QWORD *)(v3 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model_autoupdatingResponse) = 0;
  *(_QWORD *)(v3
            + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model_autoupdatingResponseSubscription) = 0;
  v66 = OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model_networkConnectivityNotificationObserver;
  *(_QWORD *)(v3
            + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model_networkConnectivityNotificationObserver) = 0;
  *(_QWORD *)(v3 + 16) = v70;
  v38 = v73;
  v37 = v74;
  v39 = *(void (**)(char *, uint64_t, uint64_t))(v74 + 16);
  v39(v73, v34, v24);
  v40 = swift_beginAccess(v3 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__playlist, v76, 33, 0);
  v41 = v68;
  v67 = v39;
  ((void (*)(char *, char *, uint64_t, __n128))v39)(v68, v38, v24, v40);
  swift_retain();
  Published.init(initialValue:)(v41, v24);
  v42 = *(void (**)(char *, uint64_t))(v37 + 8);
  v42(v38, v24);
  v43 = swift_endAccess(v76);
  v44 = v34;
  Playlist.collaboration.getter(v43);
  v45 = type metadata accessor for Playlist.Collaboration(0);
  v46 = *(_QWORD *)(v45 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v28, 1, v45) == 1)
  {
    sub_10004FF60(v28, &qword_1011E3C60);
    v47 = 0;
  }
  else
  {
    v47 = Playlist.Collaboration.isOpenInvitation.getter();
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v28, v45);
  }
  swift_beginAccess(v3 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__isOpen, v76, 33, 0);
  v75 = v47 & 1;
  Published.init(initialValue:)(&v75, &type metadata for Bool);
  swift_endAccess(v76);
  v48 = (id)*ApplicationCapabilities.NotificationNames.hasNetworkConnectivityDidChange.unsafeMutableAddressor();
  v49 = *ApplicationCapabilities.Controller.shared.unsafeMutableAddressor();
  v50 = swift_allocObject(&unk_10110BAD8, 24, 7);
  swift_weakInit(v50 + 16, v3);
  v51 = type metadata accessor for NotificationObserver();
  swift_allocObject(v51, 64, 7);
  swift_retain();
  v52 = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(v48, v49, 1, 1, (uint64_t)sub_100C774A8, v50);
  *(_QWORD *)(v3 + v66) = v52;
  swift_release();
  v53 = type metadata accessor for TaskPriority(0);
  v54 = (uint64_t)v72;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v72, 1, 1, v53);
  v55 = v73;
  ((void (*)(char *, uint64_t, uint64_t))v67)(v73, v34, v24);
  v56 = v74;
  v57 = *(unsigned __int8 *)(v74 + 80);
  v58 = (v57 + 32) & ~v57;
  v59 = (v71 + v58 + 7) & 0xFFFFFFFFFFFFFFF8;
  v60 = swift_allocObject(&unk_10110BB00, v59 + 8, v57 | 7);
  *(_QWORD *)(v60 + 16) = 0;
  *(_QWORD *)(v60 + 24) = 0;
  (*(void (**)(uint64_t, char *, uint64_t))(v56 + 32))(v60 + v58, v55, v24);
  *(_QWORD *)(v60 + v59) = v3;
  swift_retain();
  sub_100BF76B8(v54, (uint64_t)&unk_1011E42D0, v60);
  v61 = swift_release();
  ((void (*)(uint64_t, uint64_t, __n128))v42)(v44, v24, v61);
  return v3;
}

uint64_t type metadata accessor for Collaboration.Management.View(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011E3590, (uint64_t)&nominal type descriptor for Collaboration.Management.View);
}

uint64_t sub_100C70DE4()
{
  return EnvironmentValues.dynamicTypeSize.getter();
}

uint64_t sub_100C70E04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10086DA64(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(char *))&EnvironmentValues.dynamicTypeSize.setter);
}

uint64_t sub_100C70E28()
{
  return EnvironmentValues.openURL.getter();
}

uint64_t sub_100C70E48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10086DA64(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for OpenURLAction, (uint64_t (*)(char *))&EnvironmentValues.openURL.setter);
}

uint64_t type metadata accessor for Collaboration.Management.Model(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011E31A0, (uint64_t)&nominal type descriptor for Collaboration.Management.Model);
}

uint64_t sub_100C70E80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100C5DAA4(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_100C70E88()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E30F8;
  if (!qword_1011E30F8)
  {
    v1 = sub_100044B54(&qword_1011E30F0);
    sub_100049F28(&qword_1011E3100, &qword_1011E3108, (uint64_t)&protocol conformance descriptor for List<A, B>);
    sub_100049F28(&qword_1011E3110, &qword_1011E3118, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E30F8);
  }
  return result;
}

uint64_t sub_100C70F24@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1003F0944(a1, (uint64_t)&unk_100EF0320, (uint64_t)&unk_100EF0348, a2);
}

uint64_t sub_100C70F48(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1003F08C4(a1, a2, a3, a4, (uint64_t)&unk_100EF0320, (uint64_t)&unk_100EF0348);
}

void sub_100C70F70(uint64_t a1, _BYTE *a2)
{
  type metadata accessor for Collaboration.Management.View(0);
  sub_100C6636C(a1, a2);
}

uint64_t type metadata accessor for Collaboration.Management.ViewController(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011E3600, (uint64_t)&nominal type descriptor for Collaboration.Management.ViewController);
}

void sub_100C70FD0()
{
  void *v0;
  id v1;
  id v2;
  double v3;
  double v4;
  double v5;
  double v6;
  id v8;
  id v9;

  v1 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  v2 = objc_msgSend(v1, "userInterfaceIdiom");

  if (v2 == (id)6)
    v3 = 512.0;
  else
    v3 = 540.0;
  if (v2 == (id)6)
    v4 = 620.0;
  else
    v4 = 700.0;
  objc_msgSend(v0, "preferredContentSize");
  if (v3 != v6 || v4 != v5)
  {
    objc_msgSend(v0, "setPreferredContentSize:", v3, v4);
    v8 = objc_msgSend(v0, "navigationController");
    if (v8)
    {
      v9 = v8;
      objc_msgSend(v8, "setPreferredContentSize:", v3, v4);

    }
  }
}

uint64_t type metadata accessor for PlaylistCurators.Curator(uint64_t a1)
{
  return sub_100055934(a1, qword_1011E3708, (uint64_t)&nominal type descriptor for PlaylistCurators.Curator);
}

uint64_t type metadata accessor for PlaylistCurators.View(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011E37A8, (uint64_t)&nominal type descriptor for PlaylistCurators.View);
}

uint64_t type metadata accessor for PlaylistCurators.ViewController(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011E37E8, (uint64_t)&nominal type descriptor for PlaylistCurators.ViewController);
}

uint64_t sub_100C71134(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of Collaboration.Management.View.body>>, 1);
}

uint64_t sub_100C71144(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of PlaylistCurators.View.body>>, 1);
}

uint64_t sub_100C71154(uint64_t a1)
{
  uint64_t result;

  result = sub_100048748(&qword_1011E3170, type metadata accessor for PlaylistCurators.View, (uint64_t)&protocol conformance descriptor for PlaylistCurators.View);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

ValueMetadata *type metadata accessor for Collaboration.Management()
{
  return &type metadata for Collaboration.Management;
}

uint64_t sub_100C711A0()
{
  return type metadata accessor for Collaboration.Management.Model(0);
}

void sub_100C711A8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  const char *v22;
  const char *v23;
  const char *v24;

  v12 = (char *)&value witness table for Builtin.NativeObject + 64;
  sub_1003F02CC(319, &qword_1011E31B0, &qword_1011E3020, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Published);
  if (v3 <= 0x3F)
  {
    v13 = *(_QWORD *)(v2 - 8) + 64;
    v14 = v13;
    sub_1003F02CC(319, &qword_1011E31B8, &qword_1011E3028, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Published);
    if (v5 <= 0x3F)
    {
      v15 = *(_QWORD *)(v4 - 8) + 64;
      sub_1000E3A44(319, &qword_1011E31C0, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Published);
      if (v7 <= 0x3F)
      {
        v16 = *(_QWORD *)(v6 - 8) + 64;
        sub_100C71300();
        if (v9 <= 0x3F)
        {
          v17 = *(_QWORD *)(v8 - 8) + 64;
          v18 = v17;
          v19 = v17;
          v20 = v17;
          sub_1003F02CC(319, qword_1011E31D0, (uint64_t *)&unk_1011E4DA0, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
          if (v11 <= 0x3F)
          {
            v21 = *(_QWORD *)(v10 - 8) + 64;
            v22 = "\b";
            v23 = "\b";
            v24 = "\b";
            swift_updateClassMetadata2(a1, 256, 13, &v12, a1 + 80);
          }
        }
      }
    }
  }
}

void sub_100C71300()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1011E31C8)
  {
    v0 = type metadata accessor for Published(0, &type metadata for Bool);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1011E31C8);
  }
}

uint64_t *_s10ManagementO4ViewVwCP(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  char *v30;
  void *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  id v44;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = a2[1];
    *v4 = *a2;
    v4[1] = v7;
    v8 = a3[5];
    v9 = (uint64_t *)((char *)v4 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    swift_retain();
    v11 = sub_100007E8C(&qword_1011E4D50);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for DismissAction(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
      v13 = 1;
    }
    else
    {
      *v9 = *v10;
      swift_retain();
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v11, v13);
    v15 = a3[6];
    v16 = (uint64_t *)((char *)v4 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    v18 = sub_100007E8C(&qword_1011DE430);
    if (swift_getEnumCaseMultiPayload(v17, v18) == 1)
    {
      v19 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v16, v17, v19);
      v20 = 1;
    }
    else
    {
      *v16 = *v17;
      swift_retain();
      v20 = 0;
    }
    swift_storeEnumTagMultiPayload(v16, v18, v20);
    v21 = a3[7];
    v22 = (uint64_t *)((char *)v4 + v21);
    v23 = (uint64_t *)((char *)a2 + v21);
    v24 = sub_100007E8C(&qword_1011DE438);
    if (swift_getEnumCaseMultiPayload(v23, v24) == 1)
    {
      v25 = type metadata accessor for OpenURLAction(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v22, v23, v25);
      v26 = 1;
    }
    else
    {
      *v22 = *v23;
      swift_retain();
      v26 = 0;
    }
    swift_storeEnumTagMultiPayload(v22, v24, v26);
    v27 = a3[8];
    v28 = a3[9];
    v29 = (uint64_t *)((char *)v4 + v27);
    v30 = (char *)a2 + v27;
    v31 = *(void **)v30;
    v32 = *((_QWORD *)v30 + 1);
    *v29 = *(_QWORD *)v30;
    v29[1] = v32;
    v33 = (char *)v4 + v28;
    v34 = (char *)a2 + v28;
    *v33 = *v34;
    *((_QWORD *)v33 + 1) = *((_QWORD *)v34 + 1);
    v35 = a3[10];
    v36 = a3[11];
    v37 = (char *)v4 + v35;
    v38 = (char *)a2 + v35;
    *v37 = *v38;
    *((_QWORD *)v37 + 1) = *((_QWORD *)v38 + 1);
    v39 = (char *)v4 + v36;
    v40 = (char *)a2 + v36;
    *v39 = *v40;
    *((_QWORD *)v39 + 1) = *((_QWORD *)v40 + 1);
    v41 = a3[12];
    v42 = (char *)v4 + v41;
    v43 = (char *)a2 + v41;
    *v42 = *v43;
    *((_QWORD *)v42 + 1) = *((_QWORD *)v43 + 1);
    v44 = v31;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

double _s10ManagementO4ViewVwxx(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double result;

  swift_release();
  v4 = a1 + a2[5];
  v5 = sub_100007E8C(&qword_1011E4D50);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for DismissAction(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    swift_release();
  }
  v7 = a1 + a2[6];
  v8 = sub_100007E8C(&qword_1011DE430);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
  }
  else
  {
    swift_release();
  }
  v10 = a1 + a2[7];
  v11 = sub_100007E8C(&qword_1011DE438);
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v12 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v10, v12);
  }
  else
  {
    swift_release();
  }

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

_QWORD *_s10ManagementO4ViewVwcp(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  char *v28;
  void *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  id v42;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  swift_retain();
  v10 = sub_100007E8C(&qword_1011E4D50);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for DismissAction(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, v9, v11);
    v12 = 1;
  }
  else
  {
    *v8 = *v9;
    swift_retain();
    v12 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v10, v12);
  v13 = a3[6];
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  v16 = sub_100007E8C(&qword_1011DE430);
  if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
  {
    v17 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v14, v15, v17);
    v18 = 1;
  }
  else
  {
    *v14 = *v15;
    swift_retain();
    v18 = 0;
  }
  swift_storeEnumTagMultiPayload(v14, v16, v18);
  v19 = a3[7];
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  v22 = sub_100007E8C(&qword_1011DE438);
  if (swift_getEnumCaseMultiPayload(v21, v22) == 1)
  {
    v23 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v20, v21, v23);
    v24 = 1;
  }
  else
  {
    *v20 = *v21;
    swift_retain();
    v24 = 0;
  }
  swift_storeEnumTagMultiPayload(v20, v22, v24);
  v25 = a3[8];
  v26 = a3[9];
  v27 = (_QWORD *)((char *)a1 + v25);
  v28 = (char *)a2 + v25;
  v29 = *(void **)v28;
  v30 = *((_QWORD *)v28 + 1);
  *v27 = *(_QWORD *)v28;
  v27[1] = v30;
  v31 = (char *)a1 + v26;
  v32 = (char *)a2 + v26;
  *v31 = *v32;
  *((_QWORD *)v31 + 1) = *((_QWORD *)v32 + 1);
  v33 = a3[10];
  v34 = a3[11];
  v35 = (char *)a1 + v33;
  v36 = (char *)a2 + v33;
  *v35 = *v36;
  *((_QWORD *)v35 + 1) = *((_QWORD *)v36 + 1);
  v37 = (char *)a1 + v34;
  v38 = (char *)a2 + v34;
  *v37 = *v38;
  *((_QWORD *)v37 + 1) = *((_QWORD *)v38 + 1);
  v39 = a3[12];
  v40 = (char *)a1 + v39;
  v41 = (char *)a2 + v39;
  *v40 = *v41;
  *((_QWORD *)v40 + 1) = *((_QWORD *)v41 + 1);
  v42 = v29;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *_s10ManagementO4ViewVwca(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v6 = a3[5];
    v7 = (_QWORD *)((char *)a1 + v6);
    v8 = (_QWORD *)((char *)a2 + v6);
    sub_10004FF60((uint64_t)a1 + v6, &qword_1011E4D50);
    v9 = sub_100007E8C(&qword_1011E4D50);
    if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
    {
      v10 = type metadata accessor for DismissAction(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v7, v8, v10);
      v11 = 1;
    }
    else
    {
      *v7 = *v8;
      swift_retain();
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v7, v9, v11);
    v12 = a3[6];
    v13 = (_QWORD *)((char *)a1 + v12);
    v14 = (_QWORD *)((char *)a2 + v12);
    sub_10004FF60((uint64_t)a1 + v12, &qword_1011DE430);
    v15 = sub_100007E8C(&qword_1011DE430);
    if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
    {
      v16 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v13, v14, v16);
      v17 = 1;
    }
    else
    {
      *v13 = *v14;
      swift_retain();
      v17 = 0;
    }
    swift_storeEnumTagMultiPayload(v13, v15, v17);
    v18 = a3[7];
    v19 = (_QWORD *)((char *)a1 + v18);
    v20 = (_QWORD *)((char *)a2 + v18);
    sub_10004FF60((uint64_t)a1 + v18, &qword_1011DE438);
    v21 = sub_100007E8C(&qword_1011DE438);
    if (swift_getEnumCaseMultiPayload(v20, v21) == 1)
    {
      v22 = type metadata accessor for OpenURLAction(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v19, v20, v22);
      v23 = 1;
    }
    else
    {
      *v19 = *v20;
      swift_retain();
      v23 = 0;
    }
    swift_storeEnumTagMultiPayload(v19, v21, v23);
  }
  v24 = a3[8];
  v25 = (_QWORD *)((char *)a1 + v24);
  v26 = (char *)a2 + v24;
  v27 = *(void **)((char *)a1 + v24);
  v28 = *(void **)((char *)a2 + v24);
  *v25 = v28;
  v29 = v28;

  v25[1] = *((_QWORD *)v26 + 1);
  swift_retain();
  swift_release();
  v30 = a3[9];
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  *v31 = *v32;
  *((_QWORD *)v31 + 1) = *((_QWORD *)v32 + 1);
  swift_retain();
  swift_release();
  v33 = a3[10];
  v34 = (char *)a1 + v33;
  v35 = (char *)a2 + v33;
  *v34 = *v35;
  *((_QWORD *)v34 + 1) = *((_QWORD *)v35 + 1);
  swift_retain();
  swift_release();
  v36 = a3[11];
  v37 = (char *)a1 + v36;
  v38 = (char *)a2 + v36;
  *v37 = *v38;
  *((_QWORD *)v37 + 1) = *((_QWORD *)v38 + 1);
  swift_retain();
  swift_release();
  v39 = a3[12];
  v40 = (char *)a1 + v39;
  v41 = (char *)a2 + v39;
  *v40 = *v41;
  *((_QWORD *)v40 + 1) = *((_QWORD *)v41 + 1);
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *_s10ManagementO4ViewVwtk(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_100007E8C(&qword_1011E4D50);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for DismissAction(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v11 = a3[6];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_100007E8C(&qword_1011DE430);
  if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
  {
    v15 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v12, v13, v15);
    swift_storeEnumTagMultiPayload(v12, v14, 1);
  }
  else
  {
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  v16 = a3[7];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = sub_100007E8C(&qword_1011DE438);
  if (swift_getEnumCaseMultiPayload(v18, v19) == 1)
  {
    v20 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v17, v18, v20);
    swift_storeEnumTagMultiPayload(v17, v19, 1);
  }
  else
  {
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  v21 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  *(_OWORD *)((char *)a1 + v21) = *(_OWORD *)((char *)a2 + v21);
  v22 = a3[11];
  *(_OWORD *)((char *)a1 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
  *(_OWORD *)((char *)a1 + v22) = *(_OWORD *)((char *)a2 + v22);
  *(_OWORD *)((char *)a1 + a3[12]) = *(_OWORD *)((char *)a2 + a3[12]);
  return a1;
}

_QWORD *_s10ManagementO4ViewVwta(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  void *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release();
  if (a1 != a2)
  {
    v7 = a3[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    sub_10004FF60((uint64_t)a1 + v7, &qword_1011E4D50);
    v10 = sub_100007E8C(&qword_1011E4D50);
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v11 = type metadata accessor for DismissAction(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload(v8, v10, 1);
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_10004FF60((uint64_t)a1 + v12, &qword_1011DE430);
    v15 = sub_100007E8C(&qword_1011DE430);
    if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
    {
      v16 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v13, v14, v16);
      swift_storeEnumTagMultiPayload(v13, v15, 1);
    }
    else
    {
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    v17 = a3[7];
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    sub_10004FF60((uint64_t)a1 + v17, &qword_1011DE438);
    v20 = sub_100007E8C(&qword_1011DE438);
    if (swift_getEnumCaseMultiPayload(v19, v20) == 1)
    {
      v21 = type metadata accessor for OpenURLAction(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v18, v19, v21);
      swift_storeEnumTagMultiPayload(v18, v20, 1);
    }
    else
    {
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
  }
  v22 = a3[8];
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)((char *)a2 + v22);
  v25 = *(void **)((char *)a1 + v22);
  *v23 = *v24;

  v23[1] = v24[1];
  swift_release();
  v26 = a3[9];
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  *v27 = *v28;
  *((_QWORD *)v27 + 1) = *((_QWORD *)v28 + 1);
  swift_release();
  v29 = a3[10];
  v30 = (char *)a1 + v29;
  v31 = (char *)a2 + v29;
  *v30 = *v31;
  *((_QWORD *)v30 + 1) = *((_QWORD *)v31 + 1);
  swift_release();
  v32 = a3[11];
  v33 = (char *)a1 + v32;
  v34 = (char *)a2 + v32;
  *v33 = *v34;
  *((_QWORD *)v33 + 1) = *((_QWORD *)v34 + 1);
  swift_release();
  v35 = a3[12];
  v36 = (char *)a1 + v35;
  v37 = (char *)a2 + v35;
  *v36 = *v37;
  *((_QWORD *)v36 + 1) = *((_QWORD *)v37 + 1);
  swift_release();
  return a1;
}

uint64_t _s10ManagementO4ViewVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C720F0);
}

uint64_t sub_100C720F0(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011E3520);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[5];
    }
    else
    {
      v12 = sub_100007E8C(&qword_1011E3528);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[6];
      }
      else
      {
        v10 = sub_100007E8C(&qword_1011E3530);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a3[7];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t _s10ManagementO4ViewVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C721CC);
}

uint64_t sub_100C721CC(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011E3520);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[5];
    }
    else
    {
      v12 = sub_100007E8C(&qword_1011E3528);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[6];
      }
      else
      {
        v10 = sub_100007E8C(&qword_1011E3530);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[7];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_100C72298(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[9];

  v8[0] = &unk_100EF0548;
  sub_1000E3A44(319, (unint64_t *)&qword_1011E35A0, (uint64_t (*)(uint64_t))&type metadata accessor for DismissAction, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v3 <= 0x3F)
  {
    v8[1] = *(_QWORD *)(v2 - 8) + 64;
    sub_1000E3A44(319, &qword_1011E35A8, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v5 <= 0x3F)
    {
      v8[2] = *(_QWORD *)(v4 - 8) + 64;
      sub_1000E3A44(319, (unint64_t *)&unk_1011E35B0, (uint64_t (*)(uint64_t))&type metadata accessor for OpenURLAction, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
      if (v7 <= 0x3F)
      {
        v8[3] = *(_QWORD *)(v6 - 8) + 64;
        v8[4] = &unk_100EF0560;
        v8[5] = &unk_100EF0560;
        v8[6] = &unk_100EF0560;
        v8[7] = &unk_100EF0560;
        v8[8] = &unk_100EF0560;
        swift_initStructMetadata(a1, 256, 9, v8, a1 + 16);
      }
    }
  }
}

uint64_t sub_100C7239C(uint64_t a1)
{
  _BYTE v2[8];

  return swift_initClassMetadata2(a1, 0, 0, v2, a1 + class metadata base offset for Collaboration.Management.ViewController);
}

uint64_t sub_100C723D8()
{
  return type metadata accessor for Collaboration.Management.ViewController(0);
}

ValueMetadata *type metadata accessor for PlaylistCurators()
{
  return &type metadata for PlaylistCurators;
}

uint64_t *initializeBufferWithCopyOfBuffer for PlaylistCurators.Curator(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v13 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = type metadata accessor for Artwork(0);
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      v12 = sub_100007E8C((uint64_t *)&unk_1011E4A00);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v3;
}

uint64_t destroy for PlaylistCurators.Curator(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for Artwork(0);
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

_QWORD *initializeWithCopy for PlaylistCurators.Curator(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(char *, uint64_t, uint64_t);
  uint64_t v11;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = type metadata accessor for Artwork(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  if (v10(v7, 1, v8))
  {
    v11 = sub_100007E8C((uint64_t *)&unk_1011E4A00);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

_QWORD *assignWithCopy for PlaylistCurators.Curator(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Artwork(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = sub_100007E8C((uint64_t *)&unk_1011E4A00);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_OWORD *initializeWithTake for PlaylistCurators.Curator(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for Artwork(0);
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = sub_100007E8C((uint64_t *)&unk_1011E4A00);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

_QWORD *assignWithTake for PlaylistCurators.Curator(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Artwork(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = sub_100007E8C((uint64_t *)&unk_1011E4A00);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaylistCurators.Curator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C72938);
}

uint64_t sub_100C72938(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011E4A00);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for PlaylistCurators.Curator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C729C4);
}

uint64_t sub_100C729C4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_100007E8C((uint64_t *)&unk_1011E4A00);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

void sub_100C72A3C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = &unk_100EF0548;
  sub_1000E3A44(319, &qword_1011E22C0, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for PlaylistCurators.View(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v6 = *(int *)(a3 + 20);
    v7 = (uint64_t *)((char *)a1 + v6);
    v8 = (uint64_t *)((char *)a2 + v6);
    swift_bridgeObjectRetain();
    v9 = sub_100007E8C(&qword_1011DE440);
    if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
    {
      v10 = type metadata accessor for UserInterfaceSizeClass(0);
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
      {
        v12 = sub_100007E8C(&qword_1011DE740);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v11 + 16))(v7, v8, v10);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
      }
      v13 = v7;
      v14 = v9;
      v15 = 1;
    }
    else
    {
      *v7 = *v8;
      swift_retain();
      v13 = v7;
      v14 = v9;
      v15 = 0;
    }
    swift_storeEnumTagMultiPayload(v13, v14, v15);
  }
  return a1;
}

void destroy for PlaylistCurators.View(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_100007E8C(&qword_1011DE440);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for UserInterfaceSizeClass(0);
    v7 = *(_QWORD *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v4, v6);
  }
  else
  {
    swift_release();
  }
}

_QWORD *initializeWithCopy for PlaylistCurators.View(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (_QWORD *)((char *)a1 + v4);
  v6 = (_QWORD *)((char *)a2 + v4);
  swift_bridgeObjectRetain();
  v7 = sub_100007E8C(&qword_1011DE440);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for UserInterfaceSizeClass(0);
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8))
    {
      v10 = sub_100007E8C(&qword_1011DE740);
      memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      v11 = 1;
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v9 + 16))(v5, v6, v8);
      v11 = 1;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v8);
    }
  }
  else
  {
    *v5 = *v6;
    swift_retain();
    v11 = 0;
  }
  swift_storeEnumTagMultiPayload(v5, v7, v11);
  return a1;
}

_QWORD *assignWithCopy for PlaylistCurators.View(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (_QWORD *)((char *)a1 + v6);
    v8 = (_QWORD *)((char *)a2 + v6);
    sub_10004FF60((uint64_t)a1 + v6, &qword_1011DE440);
    v9 = sub_100007E8C(&qword_1011DE440);
    if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
    {
      v10 = type metadata accessor for UserInterfaceSizeClass(0);
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
      {
        v12 = sub_100007E8C(&qword_1011DE740);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        v13 = 1;
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v11 + 16))(v7, v8, v10);
        v13 = 1;
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
      }
    }
    else
    {
      *v7 = *v8;
      swift_retain();
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v7, v9, v13);
  }
  return a1;
}

_QWORD *initializeWithTake for PlaylistCurators.View(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_100007E8C(&qword_1011DE440);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for UserInterfaceSizeClass(0);
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8))
    {
      v10 = sub_100007E8C(&qword_1011DE740);
      memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v5, v6, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v8);
    }
    swift_storeEnumTagMultiPayload(v5, v7, 1);
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

_QWORD *assignWithTake for PlaylistCurators.View(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    sub_10004FF60((uint64_t)a1 + v6, &qword_1011DE440);
    v9 = sub_100007E8C(&qword_1011DE440);
    if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
    {
      v10 = type metadata accessor for UserInterfaceSizeClass(0);
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
      {
        v12 = sub_100007E8C(&qword_1011DE740);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v7, v8, v10);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
      }
      swift_storeEnumTagMultiPayload(v7, v9, 1);
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaylistCurators.View(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C7313C);
}

uint64_t sub_100C7313C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011E3748);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for PlaylistCurators.View(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C731C8);
}

char *sub_100C731C8(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_100007E8C(&qword_1011E3748);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

void sub_100C73240(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  sub_1003F02CC(319, (unint64_t *)&unk_1011E37B8, &qword_1011DE740, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
  }
}

ValueMetadata *type metadata accessor for PlaylistCurators.View.Configuration()
{
  return &type metadata for PlaylistCurators.View.Configuration;
}

uint64_t sub_100C732E0(uint64_t a1)
{
  char *v2;

  v2 = (char *)&value witness table for Builtin.BridgeObject + 64;
  return swift_initClassMetadata2(a1, 0, 1, &v2, a1 + class metadata base offset for PlaylistCurators.ViewController);
}

uint64_t sub_100C7332C()
{
  return type metadata accessor for PlaylistCurators.ViewController(0);
}

uint64_t type metadata accessor for ClearBackground.Controller()
{
  return objc_opt_self(_TtCV11MusicCoreUIP33_BED032AFC26D7293E5DA491DDAECC51415ClearBackground10Controller);
}

uint64_t sub_100C73354()
{
  _QWORD v1[4];

  v1[0] = sub_100044B54(&qword_1011E30D0);
  v1[1] = &type metadata for Bool;
  v1[2] = sub_100049F28(&qword_1011E3130, &qword_1011E30D0, (uint64_t)&protocol conformance descriptor for NavigationStack<A, B>);
  v1[3] = &protocol witness table for Bool;
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
}

uint64_t sub_100C733CC()
{
  _QWORD v1[2];

  v1[0] = sub_100044B54(&qword_1011E3138);
  v1[1] = sub_100049F28(&qword_1011E3148, &qword_1011E3138, (uint64_t)&protocol conformance descriptor for HStack<A>);
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.artworkCaching(id:limit:)>>, 1);
}

uint64_t *sub_100C73430(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t, __n128);
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for Playlist.Collaborator(0);
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    v10 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    *v11 = *v12;
    *((_QWORD *)v11 + 1) = *((_QWORD *)v12 + 1);
    v13 = a3[7];
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v8 + 48);
    swift_retain();
    v17 = swift_retain();
    if (v16(v15, 1, v7, v17))
    {
      v18 = sub_100007E8C(&qword_1011E0640);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      v9((uint64_t *)v14, (uint64_t *)v15, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v14, 0, 1, v7);
    }
    v20 = sub_100007E8C(&qword_1011E3868);
    *(_QWORD *)&v14[*(int *)(v20 + 28)] = *(_QWORD *)&v15[*(int *)(v20 + 28)];
    v21 = a3[8];
    v22 = (uint64_t *)((char *)a1 + v21);
    v23 = (uint64_t *)((char *)a2 + v21);
    swift_retain();
    v24 = sub_100007E8C(&qword_1011DE430);
    if (swift_getEnumCaseMultiPayload(v23, v24) == 1)
    {
      v25 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v22, v23, v25);
      v26 = 1;
    }
    else
    {
      *v22 = *v23;
      swift_retain();
      v26 = 0;
    }
    swift_storeEnumTagMultiPayload(v22, v24, v26);
    v27 = a3[9];
    v28 = (uint64_t *)((char *)a1 + v27);
    v29 = (uint64_t *)((char *)a2 + v27);
    v30 = sub_100007E8C(&qword_1011DE438);
    if (swift_getEnumCaseMultiPayload(v29, v30) == 1)
    {
      v31 = type metadata accessor for OpenURLAction(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v28, v29, v31);
      v32 = v28;
      v33 = v30;
      v34 = 1;
    }
    else
    {
      *v28 = *v29;
      swift_retain();
      v32 = v28;
      v33 = v30;
      v34 = 0;
    }
    swift_storeEnumTagMultiPayload(v32, v33, v34);
  }
  return a1;
}

double sub_100C73674(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double result;

  v4 = type metadata accessor for Playlist.Collaborator(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  swift_release();
  v7 = swift_release();
  v8 = a1 + a2[7];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v5 + 48))(v8, 1, v4, v7))
    v6(v8, v4);
  sub_100007E8C(&qword_1011E3868);
  swift_release();
  v9 = a1 + a2[8];
  v10 = sub_100007E8C(&qword_1011DE430);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v9, v11);
  }
  else
  {
    swift_release();
  }
  v12 = a1 + a2[9];
  v13 = sub_100007E8C(&qword_1011DE438);
  if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
  {
    v14 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v12, v14);
  }
  else
  {
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_100C737CC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t, __n128);
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;

  v6 = type metadata accessor for Playlist.Collaborator(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  v9 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_BYTE *)v10 = *(_BYTE *)v11;
  *(_QWORD *)(v10 + 8) = *(_QWORD *)(v11 + 8);
  v12 = a3[7];
  v13 = (char *)(a1 + v12);
  v14 = (char *)(a2 + v12);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v7 + 48);
  swift_retain();
  v16 = swift_retain();
  if (v15(v14, 1, v6, v16))
  {
    v17 = sub_100007E8C(&qword_1011E0640);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v8((uint64_t)v13, (uint64_t)v14, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
  }
  v18 = sub_100007E8C(&qword_1011E3868);
  *(_QWORD *)&v13[*(int *)(v18 + 28)] = *(_QWORD *)&v14[*(int *)(v18 + 28)];
  v19 = a3[8];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (_QWORD *)(a2 + v19);
  swift_retain();
  v22 = sub_100007E8C(&qword_1011DE430);
  if (swift_getEnumCaseMultiPayload(v21, v22) == 1)
  {
    v23 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v20, v21, v23);
    v24 = 1;
  }
  else
  {
    *v20 = *v21;
    swift_retain();
    v24 = 0;
  }
  swift_storeEnumTagMultiPayload(v20, v22, v24);
  v25 = a3[9];
  v26 = (_QWORD *)(a1 + v25);
  v27 = (_QWORD *)(a2 + v25);
  v28 = sub_100007E8C(&qword_1011DE438);
  if (swift_getEnumCaseMultiPayload(v27, v28) == 1)
  {
    v29 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v26, v27, v29);
    v30 = v26;
    v31 = v28;
    v32 = 1;
  }
  else
  {
    *v26 = *v27;
    swift_retain();
    v30 = v26;
    v31 = v28;
    v32 = 0;
  }
  swift_storeEnumTagMultiPayload(v30, v31, v32);
  return a1;
}

uint64_t sub_100C739E4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t, __n128);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;

  v6 = type metadata accessor for Playlist.Collaborator(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_retain();
  swift_release();
  v9 = a3[6];
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_BYTE *)v10 = *(_BYTE *)v11;
  *(_QWORD *)(v10 + 8) = *(_QWORD *)(v11 + 8);
  swift_retain();
  v12 = swift_release();
  v13 = a3[7];
  v14 = (char *)(a1 + v13);
  v15 = (char *)(a2 + v13);
  v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v7 + 48);
  v17 = v16(a1 + v13, 1, v6, v12);
  v18 = ((uint64_t (*)(char *, uint64_t, uint64_t))v16)(v15, 1, v6);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v14, v15, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v14, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);
LABEL_6:
    v19 = sub_100007E8C(&qword_1011E0640);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  v8((uint64_t)v14, (uint64_t)v15, v6);
LABEL_7:
  v20 = sub_100007E8C(&qword_1011E3868);
  *(_QWORD *)&v14[*(int *)(v20 + 28)] = *(_QWORD *)&v15[*(int *)(v20 + 28)];
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v21 = a3[8];
    v22 = (_QWORD *)(a1 + v21);
    v23 = (_QWORD *)(a2 + v21);
    sub_10004FF60(a1 + v21, &qword_1011DE430);
    v24 = sub_100007E8C(&qword_1011DE430);
    if (swift_getEnumCaseMultiPayload(v23, v24) == 1)
    {
      v25 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v22, v23, v25);
      v26 = 1;
    }
    else
    {
      *v22 = *v23;
      swift_retain();
      v26 = 0;
    }
    swift_storeEnumTagMultiPayload(v22, v24, v26);
    v27 = a3[9];
    v28 = (_QWORD *)(a1 + v27);
    v29 = (_QWORD *)(a2 + v27);
    sub_10004FF60(a1 + v27, &qword_1011DE438);
    v30 = sub_100007E8C(&qword_1011DE438);
    if (swift_getEnumCaseMultiPayload(v29, v30) == 1)
    {
      v31 = type metadata accessor for OpenURLAction(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v28, v29, v31);
      v32 = v28;
      v33 = v30;
      v34 = 1;
    }
    else
    {
      *v28 = *v29;
      swift_retain();
      v32 = v28;
      v33 = v30;
      v34 = 0;
    }
    swift_storeEnumTagMultiPayload(v32, v33, v34);
  }
  return a1;
}

uint64_t sub_100C73C8C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const void *v22;
  uint64_t v23;
  uint64_t v24;

  v6 = type metadata accessor for Playlist.Collaborator(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v9 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v9) = *(_OWORD *)(a2 + v9);
  v10 = a3[7];
  v11 = (char *)(a1 + v10);
  v12 = (char *)(a2 + v10);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a2 + v10, 1, v6))
  {
    v13 = sub_100007E8C(&qword_1011E0640);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v8((uint64_t)v11, (uint64_t)v12, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  v14 = sub_100007E8C(&qword_1011E3868);
  *(_QWORD *)&v11[*(int *)(v14 + 28)] = *(_QWORD *)&v12[*(int *)(v14 + 28)];
  v15 = a3[8];
  v16 = (void *)(a1 + v15);
  v17 = (const void *)(a2 + v15);
  v18 = sub_100007E8C(&qword_1011DE430);
  if (swift_getEnumCaseMultiPayload(v17, v18) == 1)
  {
    v19 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v16, v17, v19);
    swift_storeEnumTagMultiPayload(v16, v18, 1);
  }
  else
  {
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  v20 = a3[9];
  v21 = (void *)(a1 + v20);
  v22 = (const void *)(a2 + v20);
  v23 = sub_100007E8C(&qword_1011DE438);
  if (swift_getEnumCaseMultiPayload(v22, v23) == 1)
  {
    v24 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v21, v22, v24);
    swift_storeEnumTagMultiPayload(v21, v23, 1);
  }
  else
  {
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100C73E7C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t, __n128);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const void *v28;
  uint64_t v29;
  uint64_t v30;

  v6 = type metadata accessor for Playlist.Collaborator(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_release();
  v9 = a3[6];
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_BYTE *)v10 = *(_BYTE *)v11;
  *(_QWORD *)(v10 + 8) = *(_QWORD *)(v11 + 8);
  v12 = swift_release();
  v13 = a3[7];
  v14 = (char *)(a1 + v13);
  v15 = (char *)(a2 + v13);
  v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v7 + 48);
  v17 = v16(a1 + v13, 1, v6, v12);
  v18 = ((uint64_t (*)(char *, uint64_t, uint64_t))v16)(v15, 1, v6);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v14, v15, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v14, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);
LABEL_6:
    v19 = sub_100007E8C(&qword_1011E0640);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  v8((uint64_t)v14, (uint64_t)v15, v6);
LABEL_7:
  v20 = sub_100007E8C(&qword_1011E3868);
  *(_QWORD *)&v14[*(int *)(v20 + 28)] = *(_QWORD *)&v15[*(int *)(v20 + 28)];
  swift_release();
  if (a1 != a2)
  {
    v21 = a3[8];
    v22 = (void *)(a1 + v21);
    v23 = (const void *)(a2 + v21);
    sub_10004FF60(a1 + v21, &qword_1011DE430);
    v24 = sub_100007E8C(&qword_1011DE430);
    if (swift_getEnumCaseMultiPayload(v23, v24) == 1)
    {
      v25 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v22, v23, v25);
      swift_storeEnumTagMultiPayload(v22, v24, 1);
    }
    else
    {
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    v26 = a3[9];
    v27 = (void *)(a1 + v26);
    v28 = (const void *)(a2 + v26);
    sub_10004FF60(a1 + v26, &qword_1011DE438);
    v29 = sub_100007E8C(&qword_1011DE438);
    if (swift_getEnumCaseMultiPayload(v28, v29) == 1)
    {
      v30 = type metadata accessor for OpenURLAction(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v27, v28, v30);
      swift_storeEnumTagMultiPayload(v27, v29, 1);
    }
    else
    {
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100C7410C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C74118);
}

uint64_t sub_100C74118(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = type metadata accessor for Playlist.Collaborator(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v13 = sub_100007E8C(&qword_1011E3868);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
    {
      v8 = v13;
      v15 = a3[7];
    }
    else
    {
      v16 = sub_100007E8C(&qword_1011E3528);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
      {
        v8 = v16;
        v15 = a3[8];
      }
      else
      {
        v8 = sub_100007E8C(&qword_1011E3530);
        v14 = *(_QWORD *)(v8 - 8);
        v15 = a3[9];
      }
    }
    v10 = a1 + v15;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + a3[5]);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_100C74214(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C74220);
}

uint64_t sub_100C74220(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  result = type metadata accessor for Playlist.Collaborator(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[5]) = (a2 - 1);
      return result;
    }
    v13 = sub_100007E8C(&qword_1011E3868);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[7];
    }
    else
    {
      v16 = sub_100007E8C(&qword_1011E3528);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[8];
      }
      else
      {
        v10 = sub_100007E8C(&qword_1011E3530);
        v14 = *(_QWORD *)(v10 - 8);
        v15 = a4[9];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t _s10ManagementO4ViewV19CollaboratorRowViewVMa(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011E38C8, (uint64_t)&_s10ManagementO4ViewV19CollaboratorRowViewVMn);
}

void sub_100C7432C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[6];

  v2 = type metadata accessor for Playlist.Collaborator(319);
  if (v3 <= 0x3F)
  {
    v10[0] = *(_QWORD *)(v2 - 8) + 64;
    v10[1] = (char *)&value witness table for Builtin.NativeObject + 64;
    v10[2] = &unk_100EF0560;
    sub_1003F02CC(319, (unint64_t *)&unk_1011E38D8, &qword_1011E0640, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for State);
    if (v5 <= 0x3F)
    {
      v10[3] = *(_QWORD *)(v4 - 8) + 64;
      sub_1000E3A44(319, &qword_1011E35A8, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
      if (v7 <= 0x3F)
      {
        v10[4] = *(_QWORD *)(v6 - 8) + 64;
        sub_1000E3A44(319, (unint64_t *)&unk_1011E35B0, (uint64_t (*)(uint64_t))&type metadata accessor for OpenURLAction, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
        if (v9 <= 0x3F)
        {
          v10[5] = *(_QWORD *)(v8 - 8) + 64;
          swift_initStructMetadata(a1, 256, 6, v10, a1 + 16);
        }
      }
    }
  }
}

ValueMetadata *type metadata accessor for ClearBackground()
{
  return &type metadata for ClearBackground;
}

ValueMetadata *_s10ManagementO10QRCodeViewVMa()
{
  return &_s10ManagementO10QRCodeViewVN;
}

ValueMetadata *_s10ManagementO22ActivityViewControllerVMa()
{
  return &_s10ManagementO22ActivityViewControllerVN;
}

ValueMetadata *_s10ManagementO4ViewV5ShareOMa()
{
  return &_s10ManagementO4ViewV5ShareON;
}

uint64_t *sub_100C7448C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char v19;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = a2[2];
    v4[1] = a2[1];
    v4[2] = v7;
    v8 = *(int *)(a3 + 24);
    v9 = (uint64_t *)((char *)v4 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    swift_retain();
    v11 = sub_100007E8C(&qword_1011DE4A8);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for ColorScheme(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
      v13 = 1;
    }
    else
    {
      *v9 = *v10;
      swift_retain();
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v11, v13);
    v15 = *(int *)(a3 + 28);
    v16 = (char *)v4 + v15;
    v17 = (char *)a2 + v15;
    v18 = *(_QWORD *)v17;
    v19 = v17[8];
    sub_10006B3F8(*(_QWORD *)v17, v19);
    *(_QWORD *)v16 = v18;
    v16[8] = v19;
  }
  return v4;
}

uint64_t sub_100C745A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_release();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_100007E8C(&qword_1011DE4A8);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for ColorScheme(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    swift_release();
  }
  return sub_10006B604(*(_QWORD *)(a1 + *(int *)(a2 + 28)), *(_BYTE *)(a1 + *(int *)(a2 + 28) + 8));
}

uint64_t sub_100C74630(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  v7 = *(int *)(a3 + 24);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  swift_retain();
  v10 = sub_100007E8C(&qword_1011DE4A8);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, v9, v11);
    v12 = 1;
  }
  else
  {
    *v8 = *v9;
    swift_retain();
    v12 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v10, v12);
  v13 = *(int *)(a3 + 28);
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = *(_QWORD *)v15;
  v17 = *(_BYTE *)(v15 + 8);
  sub_10006B3F8(*(_QWORD *)v15, v17);
  *(_QWORD *)v14 = v16;
  *(_BYTE *)(v14 + 8) = v17;
  return a1;
}

uint64_t sub_100C74718(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 24);
    v8 = (_QWORD *)(a1 + v7);
    v9 = (_QWORD *)(a2 + v7);
    sub_10004FF60(a1 + v7, &qword_1011DE4A8);
    v10 = sub_100007E8C(&qword_1011DE4A8);
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v11 = type metadata accessor for ColorScheme(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, v9, v11);
      v12 = 1;
    }
    else
    {
      *v8 = *v9;
      swift_retain();
      v12 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v10, v12);
  }
  v13 = *(int *)(a3 + 28);
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = *(_QWORD *)v15;
  v17 = *(_BYTE *)(v15 + 8);
  sub_10006B3F8(*(_QWORD *)v15, v17);
  v18 = *(_QWORD *)v14;
  v19 = *(_BYTE *)(v14 + 8);
  *(_QWORD *)v14 = v16;
  *(_BYTE *)(v14 + 8) = v17;
  sub_10006B604(v18, v19);
  return a1;
}

uint64_t sub_100C74830(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v6 = *(int *)(a3 + 24);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_100007E8C(&qword_1011DE4A8);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for ColorScheme(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v11 = *(int *)(a3 + 28);
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(v13 + 8);
  return a1;
}

uint64_t sub_100C7490C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 24);
    v7 = (void *)(a1 + v6);
    v8 = (const void *)(a2 + v6);
    sub_10004FF60(a1 + v6, &qword_1011DE4A8);
    v9 = sub_100007E8C(&qword_1011DE4A8);
    if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
    {
      v10 = type metadata accessor for ColorScheme(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload(v7, v9, 1);
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
  }
  v11 = *(int *)(a3 + 28);
  v12 = a1 + v11;
  v13 = (uint64_t *)(a2 + v11);
  v14 = *v13;
  LOBYTE(v13) = *((_BYTE *)v13 + 8);
  v15 = *(_QWORD *)v12;
  v16 = *(_BYTE *)(v12 + 8);
  *(_QWORD *)v12 = v14;
  *(_BYTE *)(v12 + 8) = (_BYTE)v13;
  sub_10006B604(v15, v16);
  return a1;
}

uint64_t sub_100C74A14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C74A20);
}

uint64_t sub_100C74A20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011E3920);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_100C74AA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C74AAC);
}

uint64_t sub_100C74AAC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_100007E8C(&qword_1011E3920);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t _s10ManagementO4ViewV5ShareO6ButtonVMa(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011E3980, (uint64_t)&_s10ManagementO4ViewV5ShareO6ButtonVMn);
}

void sub_100C74B38(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = &unk_100EF0608;
  v4[1] = (char *)&value witness table for () + 64;
  sub_1000E3A44(319, (unint64_t *)&unk_1011E3990, (uint64_t (*)(uint64_t))&type metadata accessor for ColorScheme, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    v4[3] = &unk_100EF0620;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
  }
}

uint64_t sub_100C74BD8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FBDBAC, 1);
}

unint64_t sub_100C74BEC()
{
  unint64_t result;

  result = qword_1011E39C8;
  if (!qword_1011E39C8)
  {
    result = swift_getWitnessTable(&unk_100EF06C8, &_s10ManagementO4ViewV5ShareON);
    atomic_store(result, (unint64_t *)&qword_1011E39C8);
  }
  return result;
}

unint64_t sub_100C74C34()
{
  unint64_t result;

  result = qword_1011E39D0;
  if (!qword_1011E39D0)
  {
    result = swift_getWitnessTable(&unk_100EF06F0, &_s10ManagementO22ActivityViewControllerVN);
    atomic_store(result, (unint64_t *)&qword_1011E39D0);
  }
  return result;
}

unint64_t sub_100C74C7C()
{
  unint64_t result;

  result = qword_1011E39D8;
  if (!qword_1011E39D8)
  {
    result = swift_getWitnessTable(&unk_100EF07B8, &_s10ManagementO10QRCodeViewVN);
    atomic_store(result, (unint64_t *)&qword_1011E39D8);
  }
  return result;
}

unint64_t sub_100C74CC4()
{
  unint64_t result;

  result = qword_1011E39E0;
  if (!qword_1011E39E0)
  {
    result = swift_getWitnessTable(&unk_100EF0880, &type metadata for ClearBackground);
    atomic_store(result, (unint64_t *)&qword_1011E39E0);
  }
  return result;
}

uint64_t sub_100C74D08(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FBDB84, 1);
}

uint64_t sub_100C74D18@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100C68C54(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_100C74D20()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E3A20;
  if (!qword_1011E3A20)
  {
    v1 = sub_100044B54(&qword_1011E39F0);
    sub_100049F28(&qword_1011E3A28, &qword_1011E39E8, (uint64_t)&protocol conformance descriptor for HStack<A>);
    sub_100049F28(&qword_1011E3A30, &qword_1011E3A38, (uint64_t)&protocol conformance descriptor for _ContentShapeModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E3A20);
  }
  return result;
}

unint64_t sub_100C74DBC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E3A48;
  if (!qword_1011E3A48)
  {
    v1 = sub_100044B54((uint64_t *)&unk_1011E3A50);
    sub_100049F28(&qword_1011E4E40, (uint64_t *)&unk_1011E3120, (uint64_t)&protocol conformance descriptor for Button<A>);
    sub_100049F28(&qword_1011E2B30, (uint64_t *)&unk_1011E3A60, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E3A48);
  }
  return result;
}

uint64_t sub_100C74E58@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100C69384(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_100C74E64()
{
  return sub_1001C6DD4(_s10ManagementO4ViewV19CollaboratorRowViewVMa, (uint64_t (*)(uint64_t))sub_100C697DC);
}

uint64_t sub_100C74E84()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(unint64_t, uint64_t);
  __n128 v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = (int *)_s10ManagementO4ViewV19CollaboratorRowViewVMa(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = v0 + v3;
  v6 = type metadata accessor for Playlist.Collaborator(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(unint64_t, uint64_t))(v7 + 8);
  v8(v0 + v3, v6);
  swift_release();
  v9 = swift_release();
  v10 = v0 + v3 + v1[7];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t, __n128))(v7 + 48))(v10, 1, v6, v9))
    v8(v10, v6);
  sub_100007E8C(&qword_1011E3868);
  swift_release();
  v11 = v5 + v1[8];
  v12 = sub_100007E8C(&qword_1011DE430);
  if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
  {
    v13 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v11, v13);
  }
  else
  {
    swift_release();
  }
  v14 = v5 + v1[9];
  v15 = sub_100007E8C(&qword_1011DE438);
  if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
  {
    v16 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v14, v16);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject(v0, v3 + v4);
}

uint64_t sub_100C7500C()
{
  return sub_1001C6DD4(_s10ManagementO4ViewV19CollaboratorRowViewVMa, sub_100C68FB0);
}

uint64_t sub_100C75028(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 != 255)
    return sub_10034A204(a1, a2, a3);
  return a1;
}

double sub_100C75040(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unsigned __int8 a5)
{
  double result;

  if (a5 != 255)
    return sub_10034A22C(a1, a2, a3, a4);
  return result;
}

void sub_100C75058(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  sub_100C6DFA4(a1, (uint64_t)&unk_100EF0A10, (uint64_t)&unk_100EF0A38, a2);
}

uint64_t sub_100C7507C(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1004FE080(a1, a2, a3, a4, (uint64_t)&unk_100EF0A10, (uint64_t)&unk_100EF0A38);
}

double sub_100C750A4()
{
  return sub_100C750C8("[Management] Decline button tapped", 1);
}

double sub_100C750B8()
{
  return sub_100C750C8("[Management] Approve button tapped", 0);
}

double sub_100C750C8(const char *a1, char a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(_s10ManagementO4ViewV19CollaboratorRowViewVMa(0) - 8) + 80);
  return sub_100C68B28(v2 + ((v5 + 16) & ~v5), a1, a2);
}

unint64_t sub_100C75118()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E3AF0;
  if (!qword_1011E3AF0)
  {
    v1 = sub_100044B54(&qword_1011E3A90);
    sub_100049F28(&qword_1011E3AF8, &qword_1011E3A88, (uint64_t)&protocol conformance descriptor for ProgressView<A, B>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E3AF0);
  }
  return result;
}

unint64_t sub_100C7519C()
{
  unint64_t result;

  result = qword_1011E3B18;
  if (!qword_1011E3B18)
  {
    result = swift_getWitnessTable(&unk_100EF08D0, &type metadata for ClearBackground);
    atomic_store(result, (unint64_t *)&qword_1011E3B18);
  }
  return result;
}

_QWORD *sub_100C751E0(_QWORD *a1)
{
  void *v2;
  id v3;

  v2 = (void *)a1[3];
  sub_100079DE4(a1[1], a1[2]);
  v3 = v2;
  return a1;
}

unint64_t sub_100C75210()
{
  unint64_t result;

  result = qword_1011E3B20;
  if (!qword_1011E3B20)
  {
    result = swift_getWitnessTable(&unk_100EF0808, &_s10ManagementO10QRCodeViewVN);
    atomic_store(result, (unint64_t *)&qword_1011E3B20);
  }
  return result;
}

unint64_t sub_100C75254()
{
  unint64_t result;

  result = qword_1011E3B28;
  if (!qword_1011E3B28)
  {
    result = swift_getWitnessTable(&unk_100EF0740, &_s10ManagementO22ActivityViewControllerVN);
    atomic_store(result, (unint64_t *)&qword_1011E3B28);
  }
  return result;
}

uint64_t sub_100C75298()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = _s10ManagementO4ViewV5ShareO6ButtonVMa(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  swift_release();
  v5 = v0 + v3 + *(int *)(v1 + 24);
  v6 = sub_100007E8C(&qword_1011DE4A8);
  if (swift_getEnumCaseMultiPayload(v5, v6) == 1)
  {
    v7 = type metadata accessor for ColorScheme(0);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
  }
  else
  {
    swift_release();
  }
  sub_10006B604(*(_QWORD *)(v0 + v3 + *(int *)(v1 + 28)), *(_BYTE *)(v0 + v3 + *(int *)(v1 + 28) + 8));
  return swift_deallocObject(v0, v3 + v4);
}

uint64_t sub_100C7536C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(_s10ManagementO4ViewV5ShareO6ButtonVMa(0) - 8) + 80);
  return (*(uint64_t (**)(void))(v0 + ((v1 + 16) & ~v1) + 8))();
}

uint64_t sub_100C753A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100C69F7C(*(unsigned __int8 **)(v1 + 16), a1);
}

uint64_t sub_100C753B0()
{
  return sub_10005610C((unint64_t *)&unk_1011E3B60, (uint64_t *)&unk_1011E4D00, (void (*)(void))sub_100C753D4);
}

unint64_t sub_100C753D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E3B70;
  if (!qword_1011E3B70)
  {
    v1 = sub_100044B54(&qword_1011E3B78);
    sub_100049F28(&qword_1011E3B80, &qword_1011E3B88, (uint64_t)&protocol conformance descriptor for _LayoutRoot<A>);
    sub_100049F28(&qword_1011E3B90, &qword_1011E3B98, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _VariadicView.Tree<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E3B70);
  }
  return result;
}

uint64_t sub_100C75480()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v1 = type metadata accessor for Playlist.Collaborator(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 41) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v7 = swift_release(*(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100C754FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Playlist.Collaborator(0) - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = *(_QWORD *)(v1 + 32);
  v8 = *(_BYTE *)(v1 + 40);
  v9 = v1 + ((v4 + 41) & ~v4);
  v10 = (_QWORD *)swift_task_alloc(dword_1011E3C04);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10006AEE4;
  return sub_100C5CE2C(a1, v5, v6, v7, v8, v9);
}

uint64_t sub_100C7559C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Playlist.Collaborator(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_1011E3C14);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10006AEE4;
  return sub_100C5D258(a1, v5, v6, v7, v8);
}

uint64_t sub_100C75634()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v1 = type metadata accessor for Playlist.Collaborator(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v7 = swift_release(*(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100C756B0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Playlist.Collaborator(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_1011E3C3C);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10006AEE4;
  return sub_100C5C8EC(a1, v5, v6, v7, v8);
}

uint64_t sub_100C75744()
{
  return sub_100335524(40);
}

uint64_t sub_100C7574C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1011E3C4C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10006AEE4;
  return sub_100C5BFB8(a1, v4, v5, v6);
}

void sub_100C757B8(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  sub_100C6DFA4(a1, (uint64_t)&unk_100EF0AB8, (uint64_t)&unk_100EF0AE0, a2);
}

uint64_t sub_100C757DC(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1004FE080(a1, a2, a3, a4, (uint64_t)&unk_100EF0AB8, (uint64_t)&unk_100EF0AE0);
}

void sub_100C75800(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  sub_100C6DFA4(a1, (uint64_t)&unk_100EF0B00, (uint64_t)&unk_100EF0B28, a2);
}

uint64_t sub_100C75824(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1004FE080(a1, a2, a3, a4, (uint64_t)&unk_100EF0B00, (uint64_t)&unk_100EF0B28);
}

uint64_t sub_100C75848@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1003F0944(a1, (uint64_t)&unk_100EF0B48, (uint64_t)&unk_100EF0B70, a2);
}

uint64_t sub_100C7586C(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1003F08C4(a1, a2, a3, a4, (uint64_t)&unk_100EF0B48, (uint64_t)&unk_100EF0B70);
}

uint64_t sub_100C75890@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1003F0944(a1, (uint64_t)&unk_100EF0B90, (uint64_t)&unk_100EF0BB8, a2);
}

uint64_t sub_100C758B4(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1003F08C4(a1, a2, a3, a4, (uint64_t)&unk_100EF0B90, (uint64_t)&unk_100EF0BB8);
}

uint64_t sub_100C758D8@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1003F0944(a1, (uint64_t)&unk_100EF0BD8, (uint64_t)&unk_100EF0C00, a2);
}

uint64_t sub_100C758FC(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1003F08C4(a1, a2, a3, a4, (uint64_t)&unk_100EF0BD8, (uint64_t)&unk_100EF0C00);
}

double sub_100C75920(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unsigned int (*v15)(uint64_t, uint64_t, uint64_t);
  double result;
  uint64_t v17;
  char v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;

  v2 = type metadata accessor for UserInterfaceSizeClass(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin();
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C((uint64_t *)&unk_1011E3150);
  __chkstk_darwin();
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011DE740);
  __chkstk_darwin();
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin();
  v13 = (char *)&v20 - v12;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v3 + 104))((char *)&v20 - v12, enum case for UserInterfaceSizeClass.compact(_:), v2, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v13, 0, 1, v2);
  v14 = (uint64_t)&v8[*(int *)(v6 + 48)];
  sub_10004A160(a1, (uint64_t)v8, &qword_1011DE740);
  sub_10004A160((uint64_t)v13, v14, &qword_1011DE740);
  v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (v15((uint64_t)v8, 1, v2) == 1)
  {
    sub_10004FF60((uint64_t)v13, &qword_1011DE740);
    if (v15(v14, 1, v2) == 1)
    {
      sub_10004FF60((uint64_t)v8, &qword_1011DE740);
      return -9.0;
    }
  }
  else
  {
    sub_10004A160((uint64_t)v8, (uint64_t)v10, &qword_1011DE740);
    if (v15(v14, 1, v2) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v5, v14, v2);
      v17 = sub_100048748(&qword_1011E3160, (uint64_t (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass, (uint64_t)&protocol conformance descriptor for UserInterfaceSizeClass);
      v18 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v5, v2, v17);
      v19 = *(void (**)(char *, uint64_t))(v3 + 8);
      v19(v5, v2);
      sub_10004FF60((uint64_t)v13, &qword_1011DE740);
      v19(v10, v2);
      sub_10004FF60((uint64_t)v8, &qword_1011DE740);
      result = -9.0;
      if ((v18 & 1) != 0)
        return result;
      return -12.0;
    }
    sub_10004FF60((uint64_t)v13, &qword_1011DE740);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
  }
  sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011E3150);
  return -12.0;
}

uint64_t sub_100C75BE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for PlaylistCurators.View(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = v0 + v3 + *(int *)(v1 + 20);
  v6 = sub_100007E8C(&qword_1011DE440);
  if (swift_getEnumCaseMultiPayload(v5, v6) == 1)
  {
    v7 = type metadata accessor for UserInterfaceSizeClass(0);
    v8 = *(_QWORD *)(v7 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7))
      (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v5, v7);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject(v0, v3 + v4);
}

void sub_100C75CC0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  type metadata accessor for PlaylistCurators.View(0);
  sub_100C6C978(a1, a2, *(_QWORD *)(v3 + 16), a3);
}

uint64_t sub_100C75D18()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100C75D3C(char *a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, char *);
  uint64_t v4;
  uint64_t v5;

  v3 = *(uint64_t (**)(uint64_t, char *))(v1 + 16);
  v4 = *(_QWORD *)a1;
  v5 = sub_100007E8C((uint64_t *)&unk_1011E3E10);
  return v3(v4, &a1[*(int *)(v5 + 48)]);
}

unint64_t sub_100C75D94()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E3D48;
  if (!qword_1011E3D48)
  {
    v1 = sub_100044B54(&qword_1011E3D38);
    sub_100C75E38(&qword_1011E3D50, &qword_1011E3D58, (void (*)(void))sub_100C75EA8, (void (*)(void))sub_100C0A63C);
    sub_100049F28(&qword_1011E3E00, &qword_1011E3E08, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E3D48);
  }
  return result;
}

uint64_t sub_100C75E38(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v8 = sub_100044B54(a2);
    a3();
    a4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100C75EA8()
{
  return sub_100C75E38(&qword_1011E3D60, &qword_1011E3D68, (void (*)(void))sub_100C75ECC, (void (*)(void))sub_100C0A5E4);
}

uint64_t sub_100C75ECC()
{
  return sub_10005610C(&qword_1011E3D70, &qword_1011E3D78, (void (*)(void))sub_100C75EF0);
}

unint64_t sub_100C75EF0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1011E3D80;
  if (!qword_1011E3D80)
  {
    v1 = sub_100044B54(&qword_1011E3D88);
    v2[0] = sub_100044B54((uint64_t *)&unk_1011E3D90);
    v2[1] = sub_100C39DFC();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>, 1);
    sub_100048748(&qword_1011E25E8, type metadata accessor for PlaceholderStyleModifier, (uint64_t)&protocol conformance descriptor for PlaceholderStyleModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E3D80);
  }
  return result;
}

double sub_100C75F9C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unsigned int (*v15)(uint64_t, uint64_t, uint64_t);
  double result;
  uint64_t v17;
  char v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;

  v2 = type metadata accessor for UserInterfaceSizeClass(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin();
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C((uint64_t *)&unk_1011E3150);
  __chkstk_darwin();
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011DE740);
  __chkstk_darwin();
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin();
  v13 = (char *)&v20 - v12;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v3 + 104))((char *)&v20 - v12, enum case for UserInterfaceSizeClass.compact(_:), v2, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v13, 0, 1, v2);
  v14 = (uint64_t)&v8[*(int *)(v6 + 48)];
  sub_10004A160(a1, (uint64_t)v8, &qword_1011DE740);
  sub_10004A160((uint64_t)v13, v14, &qword_1011DE740);
  v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (v15((uint64_t)v8, 1, v2) == 1)
  {
    sub_10004FF60((uint64_t)v13, &qword_1011DE740);
    if (v15(v14, 1, v2) == 1)
    {
      sub_10004FF60((uint64_t)v8, &qword_1011DE740);
      return 25.0;
    }
  }
  else
  {
    sub_10004A160((uint64_t)v8, (uint64_t)v10, &qword_1011DE740);
    if (v15(v14, 1, v2) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v5, v14, v2);
      v17 = sub_100048748(&qword_1011E3160, (uint64_t (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass, (uint64_t)&protocol conformance descriptor for UserInterfaceSizeClass);
      v18 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v5, v2, v17);
      v19 = *(void (**)(char *, uint64_t))(v3 + 8);
      v19(v5, v2);
      sub_10004FF60((uint64_t)v13, &qword_1011DE740);
      v19(v10, v2);
      sub_10004FF60((uint64_t)v8, &qword_1011DE740);
      result = 25.0;
      if ((v18 & 1) != 0)
        return result;
      return 29.0;
    }
    sub_10004FF60((uint64_t)v13, &qword_1011DE740);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
  }
  sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011E3150);
  return 29.0;
}

uint64_t sub_100C76258(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100C76268(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_100C76270@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_100C5E0D0(*(_QWORD *)(v1 + 16), a1);
}

void sub_100C76278(double *a1@<X8>)
{
  *a1 = EnvironmentValues.defaultMinListRowHeight.getter();
}

uint64_t sub_100C762A0(double *a1)
{
  return EnvironmentValues.defaultMinListRowHeight.setter(*a1);
}

uint64_t sub_100C762C8()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = (int *)type metadata accessor for Collaboration.Management.View(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = v0 + v3;
  swift_release();
  v6 = v0 + v3 + v1[5];
  v7 = sub_100007E8C(&qword_1011E4D50);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for DismissAction(0);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {
    swift_release();
  }
  v9 = v5 + v1[6];
  v10 = sub_100007E8C(&qword_1011DE430);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v9, v11);
  }
  else
  {
    swift_release();
  }
  v12 = v5 + v1[7];
  v13 = sub_100007E8C(&qword_1011DE438);
  if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
  {
    v14 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v12, v14);
  }
  else
  {
    swift_release();
  }

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject(v0, v3 + v4);
}

uint64_t sub_100C76480()
{
  return sub_1001C6DD4(type metadata accessor for Collaboration.Management.View, (uint64_t (*)(uint64_t))sub_100C662D4);
}

uint64_t sub_100C76494@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100C5F21C(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_100C7649C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E3EA0;
  if (!qword_1011E3EA0)
  {
    v1 = sub_100044B54(&qword_1011E3E90);
    sub_100049F28(&qword_1011E3EA8, (uint64_t *)&unk_1011E3EB0, (uint64_t)&protocol conformance descriptor for VStack<A>);
    sub_100049F28(&qword_1011E1AB8, &qword_1011E3EC0, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E3EA0);
  }
  return result;
}

unint64_t sub_100C76538()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E3ED0;
  if (!qword_1011E3ED0)
  {
    v1 = sub_100044B54(&qword_1011E3ED8);
    sub_10005610C(&qword_1011E3EE0, &qword_1011E3EE8, (void (*)(void))sub_100C74C7C);
    sub_100049F28(&qword_1011E3EF0, &qword_1011E3EF8, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E3ED0);
  }
  return result;
}

unint64_t sub_100C765DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E3F00;
  if (!qword_1011E3F00)
  {
    v1 = sub_100044B54(&qword_1011E3E88);
    sub_100049F28(&qword_1011E3F08, &qword_1011E3F10, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1011E3F00);
  }
  return result;
}

unint64_t sub_100C76658()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1011E3F18;
  if (!qword_1011E3F18)
  {
    v1 = sub_100044B54(&qword_1011E3E78);
    v2[0] = sub_100044B54(&qword_1011E3E90);
    v2[1] = sub_100044B54(&qword_1011E3E98);
    v2[2] = sub_100C7649C();
    v2[3] = sub_10062A594(&qword_1011E3EC8, &qword_1011E3E98, (void (*)(void))sub_100C76538);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.fullScreenCover<A>(isPresented:onDismiss:content:)>>, 1);
    sub_100C765DC();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E3F18);
  }
  return result;
}

uint64_t sub_100C7673C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100C65A0C(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_100C76744()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E3F50;
  if (!qword_1011E3F50)
  {
    v1 = sub_100044B54(&qword_1011E3F40);
    sub_100C7693C((unint64_t *)&qword_1011E3F58, &qword_1011E3F60, (uint64_t)&protocol witness table for Text, (uint64_t)&protocol conformance descriptor for <> _ConditionalContent<A, B>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E3F50);
  }
  return result;
}

uint64_t sub_100C767D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100C647A0(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_100C767EC()
{
  uint64_t v0;

  return sub_100C655C4(*(_QWORD *)(v0 + 16));
}

unint64_t sub_100C767F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E3F80;
  if (!qword_1011E3F80)
  {
    v1 = sub_100044B54(&qword_1011E3F78);
    sub_100048748(&qword_1011E3F68, _s10ManagementO4ViewV19CollaboratorRowViewVMa, (uint64_t)&unk_100EF0948);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E3F80);
  }
  return result;
}

uint64_t sub_100C76870@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100C649F8(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_100C7687C()
{
  return sub_1001C6DD4(type metadata accessor for Collaboration.Management.View, sub_100C64CF0);
}

unint64_t sub_100C76890()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E3FC0;
  if (!qword_1011E3FC0)
  {
    v1 = sub_100044B54(&qword_1011E3FB8);
    sub_100C7693C(&qword_1011E3FC8, &qword_1011E3FD0, (uint64_t)&protocol witness table for _FlexFrameLayout, (uint64_t)&protocol conformance descriptor for <> ModifiedContent<A, B>);
    sub_100049F28(&qword_1011E2B30, (uint64_t *)&unk_1011E3A60, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E3FC0);
  }
  return result;
}

uint64_t sub_100C7693C(unint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = sub_100044B54(a2);
    result = swift_getWitnessTable(a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100C769A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100C650BC(*(_QWORD *)(v1 + 16), a1);
}

void sub_100C769BC(BOOL *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Collaboration.Management.View(0) - 8) + 80);
  sub_100C65BBC(v1 + ((v3 + 32) & ~v3), a1);
}

uint64_t sub_100C76A00()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = (int *)type metadata accessor for Collaboration.Management.View(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v5 = v0 + v3;
  swift_release();
  v6 = v0 + v3 + v1[5];
  v7 = sub_100007E8C(&qword_1011E4D50);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for DismissAction(0);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {
    swift_release();
  }
  v9 = v5 + v1[6];
  v10 = sub_100007E8C(&qword_1011DE430);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v9, v11);
  }
  else
  {
    swift_release();
  }
  v12 = v5 + v1[7];
  v13 = sub_100007E8C(&qword_1011DE438);
  if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
  {
    v14 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v12, v14);
  }
  else
  {
    swift_release();
  }

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject(v0, v3 + v4);
}

double sub_100C76BC0(char *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Collaboration.Management.View(0) - 8) + 80);
  return sub_100C65C40(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + ((v3 + 32) & ~v3));
}

uint64_t sub_100C76C00()
{
  return sub_100335524(41);
}

uint64_t sub_100C76C08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _QWORD *v8;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_BYTE *)(v1 + 40);
  v8 = (_QWORD *)swift_task_alloc(dword_1011E3FF4);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10005AEE4;
  return sub_100C5BBC4(a1, v4, v5, v6, v7);
}

uint64_t sub_100C76C88@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for Collaboration.Management.View(0);
  return sub_100C645C8(a1);
}

uint64_t sub_100C76CC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Collaboration.Management.View(0) - 8) + 80);
  return sub_100C644A4(a1, v1 + ((v3 + 16) & ~v3));
}

unint64_t sub_100C76D14()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E40F0;
  if (!qword_1011E40F0)
  {
    v1 = sub_100044B54(&qword_1011E40C0);
    sub_100C76D98();
    sub_100049F28(&qword_1011E4108, &qword_1011E40B8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E40F0);
  }
  return result;
}

unint64_t sub_100C76D98()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E40F8;
  if (!qword_1011E40F8)
  {
    v1 = sub_100044B54(&qword_1011E4100);
    sub_100049F28(&qword_1011E2B30, (uint64_t *)&unk_1011E3A60, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E40F8);
  }
  return result;
}

uint64_t sub_100C76E1C()
{
  return sub_100335524(40);
}

uint64_t sub_100C76E24(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1011E4124);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10006AEE4;
  return sub_100C5C2E8(a1, v4, v5, v6);
}

uint64_t sub_100C76E94()
{
  return sub_1001C6DD4(type metadata accessor for Collaboration.Management.View, sub_100C63780);
}

uint64_t sub_100C76EC0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100C76ED4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Collaboration.Management.View(0) - 8) + 80);
  return sub_100C638C8(v1 + ((v3 + 16) & ~v3), a1);
}

unint64_t sub_100C76F10()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E4158;
  if (!qword_1011E4158)
  {
    v1 = sub_100044B54(&qword_1011E4140);
    sub_100048748(&qword_1011E4160, _s10ManagementO4ViewV5ShareO6ButtonVMa, (uint64_t)&unk_100EF0638);
    sub_100049F28(&qword_1011E4168, &qword_1011E4170, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyTransformModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E4158);
  }
  return result;
}

uint64_t sub_100C76FB0()
{
  return sub_1001C6DD4(type metadata accessor for Collaboration.Management.View, sub_100C63AAC);
}

uint64_t sub_100C76FC4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

unint64_t sub_100C76FD4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E41C0;
  if (!qword_1011E41C0)
  {
    v1 = sub_100044B54(&qword_1011E4198);
    sub_100C77058();
    sub_100049F28(&qword_1011E1AB8, &qword_1011E3EC0, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E41C0);
  }
  return result;
}

unint64_t sub_100C77058()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E41C8;
  if (!qword_1011E41C8)
  {
    v1 = sub_100044B54(&qword_1011E4190);
    sub_100049F28(&qword_1011E41D0, &qword_1011E4188, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E41C8);
  }
  return result;
}

unint64_t sub_100C770DC()
{
  unint64_t result;

  result = qword_1011E41D8;
  if (!qword_1011E41D8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for _AlignmentWritingModifier, &type metadata for _AlignmentWritingModifier);
    atomic_store(result, (unint64_t *)&qword_1011E41D8);
  }
  return result;
}

uint64_t sub_100C77124@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Collaboration.Management.View(0) - 8) + 80);
  return sub_100C647A0(a1, v2 + ((v5 + 16) & ~v5), a2);
}

uint64_t sub_100C77174()
{
  return EnvironmentValues.symbolRenderingMode.getter();
}

uint64_t sub_100C7719C()
{
  return sub_1001C6DD4(type metadata accessor for Collaboration.Management.View, sub_100C612FC);
}

unint64_t sub_100C771B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E4270;
  if (!qword_1011E4270)
  {
    v1 = sub_100044B54(&qword_1011E41E8);
    sub_100049F28(&qword_1011E4E40, (uint64_t *)&unk_1011E3120, (uint64_t)&protocol conformance descriptor for Button<A>);
    sub_100049F28((unint64_t *)&unk_1011E3BD0, &qword_1011E0EA8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E4270);
  }
  return result;
}

unint64_t sub_100C7724C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E4280;
  if (!qword_1011E4280)
  {
    v1 = sub_100044B54(&qword_1011E4218);
    sub_100C772D0();
    sub_100049F28(&qword_1011E42B8, &qword_1011E4278, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E4280);
  }
  return result;
}

unint64_t sub_100C772D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E4288;
  if (!qword_1011E4288)
  {
    v1 = sub_100044B54(&qword_1011E4210);
    sub_10005610C(&qword_1011E4290, &qword_1011E4208, (void (*)(void))sub_100C77374);
    sub_100049F28((unint64_t *)&unk_1011E4AE0, &qword_1011E42B0, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E4288);
  }
  return result;
}

uint64_t sub_100C77374()
{
  return sub_10005610C(&qword_1011E4298, &qword_1011E4200, (void (*)(void))sub_100C77398);
}

unint64_t sub_100C77398()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1011E42A0;
  if (!qword_1011E42A0)
  {
    v1 = sub_100044B54(&qword_1011E41F8);
    v2[0] = sub_100044B54(&qword_1011E41E8);
    v2[1] = sub_100C771B0();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>, 1);
    sub_100049F28(&qword_1011E2B30, (uint64_t *)&unk_1011E3A60, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E42A0);
  }
  return result;
}

uint64_t sub_100C77444@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_100C61444(v1[2], v1[3], v1[4], a1);
}

uint64_t sub_100C77454()
{
  type metadata accessor for Collaboration.Management.View(0);
  return sub_100C65524();
}

uint64_t sub_100C77484()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100C774A8(uint64_t a1)
{
  uint64_t v1;

  return sub_100C579D4(a1, v1);
}

uint64_t sub_100C774B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  __n128 v7;

  v1 = type metadata accessor for Playlist(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_100C77540(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(type metadata accessor for Playlist(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc(dword_1011E42CC);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10006AEE4;
  return sub_100C57A6C(a1, v6, v7, v8, v9);
}

uint64_t sub_100C775E4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v3 = a1[3];
  v4 = a1[4];
  sub_100007E68(a1, v3);
  result = dispatch thunk of LibraryPlaylistFilter.id.getter(v3, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

unint64_t sub_100C77628()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E4318;
  if (!qword_1011E4318)
  {
    v1 = sub_10004A07C(255, (unint64_t *)&qword_1011DF580, OS_dispatch_queue_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for OS_dispatch_queue, v1);
    atomic_store(result, (unint64_t *)&qword_1011E4318);
  }
  return result;
}

void sub_100C77680(void (*a1)(char *))
{
  uint64_t v1;

  sub_100C57F54(a1, v1);
}

uint64_t sub_100C77688()
{
  return Playlist.collaboration.getter();
}

uint64_t _s10ManagementO4ViewV5ShareOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100C776F4 + 4 * byte_100EF0285[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100C77728 + 4 * asc_100EF0280[v4]))();
}

uint64_t sub_100C77728(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100C77730(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100C77738);
  return result;
}

uint64_t sub_100C77744(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100C7774CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100C77750(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100C77758(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s10ManagementO4ViewV10ModerationOMa()
{
  return &_s10ManagementO4ViewV10ModerationON;
}

__n128 initializeWithTake for SymbolButton.Badge(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

ValueMetadata *_s10ManagementO4ViewV10ModerationO6ButtonVMa()
{
  return &_s10ManagementO4ViewV10ModerationO6ButtonVN;
}

unint64_t sub_100C7779C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  result = qword_1011E4380;
  if (!qword_1011E4380)
  {
    v1 = sub_100044B54(&qword_1011E4388);
    v2 = sub_100044B54(&qword_1011E3A00);
    v3 = sub_100044B54(&qword_1011E39F8);
    v6 = sub_100044B54(&qword_1011E39F0);
    v7 = sub_100044B54(&qword_1011E3A18);
    v8 = sub_100C74D20();
    v9 = sub_10062A594(&qword_1011E3A40, &qword_1011E3A18, (void (*)(void))sub_100C74DBC);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.swipeActions<A>(edge:allowsFullSwipe:content:)>>, 1);
    v6 = v3;
    v7 = OpaqueTypeConformance2;
    v5 = swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.alert(isPresented:content:)>>, 1);
    v6 = v2;
    v7 = v5;
    swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    sub_100048748(&qword_1011E4390, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E4380);
  }
  return result;
}

unint64_t sub_100C778E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E4398;
  if (!qword_1011E4398)
  {
    v1 = sub_100044B54(&qword_1011E3B48);
    sub_100C7796C();
    sub_100049F28(&qword_1011E43B8, &qword_1011E3BA0, (uint64_t)&protocol conformance descriptor for _InsettableBackgroundShapeModifier<A, B>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E4398);
  }
  return result;
}

unint64_t sub_100C7796C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E43A0;
  if (!qword_1011E43A0)
  {
    v1 = sub_100044B54(&qword_1011E3B40);
    sub_100C779F0();
    sub_100049F28(&qword_1011E2B30, (uint64_t *)&unk_1011E3A60, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E43A0);
  }
  return result;
}

unint64_t sub_100C779F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E43A8;
  if (!qword_1011E43A8)
  {
    v1 = sub_100044B54(&qword_1011E3B38);
    sub_100049F28(&qword_1011E43B0, &qword_1011E3B30, (uint64_t)&protocol conformance descriptor for Button<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E43A8);
  }
  return result;
}

uint64_t sub_100C77A74(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FBDBD4, 1);
}

unint64_t sub_100C77A88()
{
  unint64_t result;

  result = qword_1011E43C0;
  if (!qword_1011E43C0)
  {
    result = swift_getWitnessTable(&unk_100EF0EA8, &_s10ManagementO4ViewV10ModerationON);
    atomic_store(result, (unint64_t *)&qword_1011E43C0);
  }
  return result;
}

uint64_t sub_100C77ACC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

double sub_100C77AF0()
{
  uint64_t v0;

  return sub_100C6A950(*(_BYTE *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_100C77AFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100C6A9C8(*(_BYTE *)(v1 + 16), a1);
}

unint64_t sub_100C77B08()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E43E8;
  if (!qword_1011E43E8)
  {
    v1 = sub_100044B54(&qword_1011E43E0);
    sub_100C77B8C();
    sub_100049F28((unint64_t *)&unk_1011E4420, &qword_1011E4E20, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E43E8);
  }
  return result;
}

unint64_t sub_100C77B8C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E43F0;
  if (!qword_1011E43F0)
  {
    v1 = sub_100044B54(&qword_1011E43F8);
    sub_10005610C(&qword_1011E4400, &qword_1011E4408, (void (*)(void))sub_100C77C30);
    sub_100049F28((unint64_t *)&unk_1011E4AE0, &qword_1011E42B0, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E43F0);
  }
  return result;
}

unint64_t sub_100C77C30()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E4410;
  if (!qword_1011E4410)
  {
    v1 = sub_100044B54(&qword_1011E4418);
    sub_100C50E20();
    sub_100049F28(&qword_1011E2B30, (uint64_t *)&unk_1011E3A60, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E4410);
  }
  return result;
}

uint64_t sub_100C77CB4()
{
  return EnvironmentValues._buttonBorderShape.getter();
}

uint64_t sub_100C77CD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10086DA64(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for ButtonBorderShape, (uint64_t (*)(char *))&EnvironmentValues._buttonBorderShape.setter);
}

uint64_t sub_100C77CF8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 24))();
}

unint64_t sub_100C77D24()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1011E4448;
  if (!qword_1011E4448)
  {
    v1 = sub_100044B54(&qword_1011E4438);
    v2[0] = sub_100044B54(&qword_1011E43C8);
    v2[1] = type metadata accessor for BorderlessButtonStyle(255);
    v2[2] = sub_100049F28(&qword_1011E4430, &qword_1011E43C8, (uint64_t)&protocol conformance descriptor for Button<A>);
    v2[3] = sub_100048748(&qword_1011E3FB0, (uint64_t (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle, (uint64_t)&protocol conformance descriptor for BorderlessButtonStyle);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    sub_100049F28((unint64_t *)&unk_1011E4450, &qword_1011E4440, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E4448);
  }
  return result;
}

void Collaboration.Management.ViewController.init(rootView:)()
{
  PlaylistCurators.ViewController.init(rootView:)();
}

uint64_t Collaboration.Flow.Collaborator.init(name:handle:artwork:canCollaborate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, _QWORD *a7@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;

  v14 = type metadata accessor for Collaboration.Flow.Collaborator(0);
  v15 = (uint64_t)a7 + *(int *)(v14 + 24);
  v16 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  v17 = *(int *)(v14 + 28);
  *((_BYTE *)a7 + v17) = 0;
  *a7 = a1;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  result = sub_100C77F00(a5, v15);
  *((_BYTE *)a7 + v17) = a6;
  return result;
}

uint64_t type metadata accessor for Collaboration.Flow.Collaborator(uint64_t a1)
{
  return sub_100055934(a1, qword_1011E45D0, (uint64_t)&nominal type descriptor for Collaboration.Flow.Collaborator);
}

uint64_t sub_100C77F00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C((uint64_t *)&unk_1011E4A00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t Collaboration.Flow.Collaborator.artwork.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Collaboration.Flow.Collaborator(0);
  return sub_10004A160(v1 + *(int *)(v3 + 24), a1, (uint64_t *)&unk_1011E4A00);
}

uint64_t Collaboration.Flow.Collaborator.artwork.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for Collaboration.Flow.Collaborator(0) + 24);
  return sub_100C77F00(a1, v3);
}

double (*Collaboration.Flow.Collaborator.artwork.modify())(_QWORD)
{
  type metadata accessor for Collaboration.Flow.Collaborator(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t Collaboration.Flow.Collaborator.canCollaborate.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Collaboration.Flow.Collaborator(0) + 28));
}

uint64_t Collaboration.Flow.Collaborator.canCollaborate.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Collaboration.Flow.Collaborator(0);
  *(_BYTE *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

double (*Collaboration.Flow.Collaborator.canCollaborate.modify())(_QWORD)
{
  type metadata accessor for Collaboration.Flow.Collaborator(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t Collaboration.Flow.title.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t (*v16)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  char *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v41[2];

  v1 = v0;
  v41[0] = type metadata accessor for Playlist.Collaborator(0);
  v2 = *(_QWORD *)(v41[0] - 8);
  __chkstk_darwin();
  v4 = (char *)v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v6 = (char *)v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin();
  v10 = (char *)v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v12 = (char *)v41 - v11;
  v13 = type metadata accessor for Collaboration.Flow(0);
  __chkstk_darwin();
  v15 = (char *)v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B704(v1, (uint64_t)v15, v16);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v15, v13);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v18 = v41[0];
      (*(void (**)(char *, char *, _QWORD))(v2 + 32))(v4, v15, v41[0]);
      String.LocalizationValue.init(stringLiteral:)(0xD000000000000010, 0x8000000100E56F10);
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v12, v7);
      if (qword_1011DDE30 != -1)
        swift_once(&qword_1011DDE30, sub_100BA7618);
      v19 = qword_10124F040;
      static Locale.current.getter((id)qword_10124F040);
      v20 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v19, v6, 0, 0, 256);
      v22 = v21;
      (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
      v23 = sub_100007E8C(&qword_1011E4498);
      v24 = swift_allocObject(v23, 72, 7);
      *(_OWORD *)(v24 + 16) = xmmword_100EA7AA0;
      v25 = Playlist.Collaborator.name.getter(v24);
      v27 = v26;
      *(_QWORD *)(v24 + 56) = &type metadata for String;
      *(_QWORD *)(v24 + 64) = sub_100C818E8();
      if (v27)
        v28 = v25;
      else
        v28 = 0;
      v29 = 0xE000000000000000;
      if (v27)
        v29 = v27;
      *(_QWORD *)(v24 + 32) = v28;
      *(_QWORD *)(v24 + 40) = v29;
      v30 = static String.localizedStringWithFormat(_:_:)(v20, v22, v24);
      swift_bridgeObjectRelease();
      v31 = swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t, __n128))(v2 + 8))(v4, v18, v31);
    }
    else
    {
      String.LocalizationValue.init(stringLiteral:)(0xD000000000000015, 0x8000000100E56F50);
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v12, v7);
      if (qword_1011DDE30 != -1)
        swift_once(&qword_1011DDE30, sub_100BA7618);
      v36 = qword_10124F040;
      static Locale.current.getter((id)qword_10124F040);
      v30 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v36, v6, 0, 0, 256);
      (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v12, v7, v37);
    }
  }
  else
  {
    v32 = sub_100007E8C(&qword_1011E44A8);
    v33 = &v15[*(int *)(v32 + 48)];
    if (v15[*(int *)(v32 + 64)] == 1)
    {
      v34 = 0x616C50206E696F4ALL;
      v35 = 0xEE003F7473696C79;
    }
    else
    {
      v34 = 0xD000000000000017;
      v35 = 0x8000000100E56F30;
    }
    String.LocalizationValue.init(stringLiteral:)(v34, v35);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v12, v7);
    if (qword_1011DDE30 != -1)
      swift_once(&qword_1011DDE30, sub_100BA7618);
    v38 = qword_10124F040;
    static Locale.current.getter((id)qword_10124F040);
    v30 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v38, v6, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
    v39 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v39 - 8) + 8))(v33, v39);
    sub_10004FF60((uint64_t)v15, &qword_1011E44B0);
  }
  return v30;
}

Swift::String __swiftcall Collaboration.Flow.subtitle(hasProfileEdit:)(Swift::Bool hasProfileEdit)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  Swift::String *v5;
  uint64_t v6;
  Swift::String *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t (*v21)(_QWORD);
  int EnumCaseMultiPayload;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  char *v27;
  uint64_t v28;
  id v29;
  char *v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  unint64_t v45;
  const char *v46;
  uint64_t v47;
  Swift::String *v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  id v52;
  char *v53;
  void *v54;
  void (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  char *v57;
  uint64_t v58;
  id v59;
  char *v60;
  void *v61;
  void (*v62)(char *, char *, uint64_t);
  uint64_t v63;
  char *v64;
  uint64_t v65;
  id v66;
  char *v67;
  char *v68;
  uint64_t countAndFlagsBits;
  void *object;
  char *v71;
  char *v72;
  Swift::String v73;
  Swift::String v74;
  Swift::String v75;
  unint64_t v76;
  const char *v77;
  void *v78;
  Swift::String v79;
  Swift::String v80;
  Swift::String v81;
  unint64_t v82;
  void (*v83)(char *, char *, uint64_t);
  id v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  uint64_t v89;
  const char *v90;
  uint64_t v91;
  uint64_t v92;
  id v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void *v100;
  uint64_t v101;
  void *v102;
  Swift::String result;
  Swift::String *v104;
  uint64_t v105;
  uint64_t v106;
  _BOOL4 v107;
  char *v108;
  char *v109;
  char *v110;
  uint64_t v111;

  v107 = hasProfileEdit;
  type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  __chkstk_darwin();
  v2 = (char *)&v104 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Collaboration.Flow.Collaborator(0);
  v105 = *(_QWORD *)(v3 - 8);
  v106 = v3;
  __chkstk_darwin();
  v5 = (Swift::String *)((char *)&v104 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  v7 = (Swift::String *)((char *)&v104 - v6);
  v8 = sub_100007E8C(&qword_1011E44B8);
  __chkstk_darwin();
  v10 = (char *)&v104 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011E44B0);
  __chkstk_darwin();
  v12 = (char *)&v104 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v108 = (char *)&v104 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = type metadata accessor for String.LocalizationValue(0);
  v14 = *(_QWORD *)(v111 - 8);
  __chkstk_darwin();
  v110 = (char *)&v104 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v17 = (char *)&v104 - v16;
  v18 = type metadata accessor for Collaboration.Flow(0);
  __chkstk_darwin();
  v20 = (char *)&v104 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B704((uint64_t)v109, (uint64_t)v20, v21);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v20, v18);
  if (!EnumCaseMultiPayload)
  {
    v104 = v5;
    v34 = sub_100007E8C(&qword_1011E44A8);
    v109 = &v20[*(int *)(v34 + 48)];
    v35 = v20[*(int *)(v34 + 64)];
    sub_100065228((uint64_t)v20, (uint64_t)v12, &qword_1011E44B0);
    v36 = *(int *)(v8 + 48);
    sub_10004A160((uint64_t)v12, (uint64_t)v10, &qword_1011E44B0);
    v10[v36] = v35;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v105 + 48))(v10, 1, v106) == 1)
    {
      v37 = v17;
      v38 = v14;
      if (v35)
      {
        v39 = 0x8000000100E57040;
        v40 = 0x100000000000005BLL;
      }
      else
      {
        v39 = 0x8000000100E56FC0;
        v40 = 0xD00000000000007ELL;
      }
      String.LocalizationValue.init(stringLiteral:)(v40, v39);
      v55 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
      v57 = v110;
      v56 = v111;
      v55(v110, v37, v111);
      if (qword_1011DDE30 != -1)
        swift_once(&qword_1011DDE30, sub_100BA7618);
      v58 = qword_10124F040;
      v59 = (id)qword_10124F040;
      v60 = v108;
      static Locale.current.getter(v59);
      v31 = String.init(localized:table:bundle:locale:comment:)(v57, 0, 0, v58, v60, 0, 0, 256);
      v33 = v61;
      (*(void (**)(char *, uint64_t))(v38 + 8))(v37, v56);
      sub_10004FF60((uint64_t)v12, &qword_1011E44B0);
      goto LABEL_36;
    }
    v47 = v14;
    if (v35)
    {
      v48 = v7;
      sub_10005B6C0((uint64_t)v10, (uint64_t)v7, type metadata accessor for Collaboration.Flow.Collaborator);
      if (v107)
      {
        v49 = 0x8000000100E57040;
        v50 = 0x100000000000005BLL;
LABEL_24:
        String.LocalizationValue.init(stringLiteral:)(v50, v49);
        v62 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
        v64 = v110;
        v63 = v111;
        v62(v110, v17, v111);
        if (qword_1011DDE30 != -1)
          swift_once(&qword_1011DDE30, sub_100BA7618);
        v65 = qword_10124F040;
        v66 = (id)qword_10124F040;
        v67 = v108;
        static Locale.current.getter(v66);
        v68 = v64;
LABEL_34:
        v31 = String.init(localized:table:bundle:locale:comment:)(v68, 0, 0, v65, v67, 0, 0, 256);
        v33 = v85;
        (*(void (**)(char *, uint64_t))(v47 + 8))(v17, v63);
LABEL_35:
        sub_10004FF60((uint64_t)v12, &qword_1011E44B0);
        sub_10005B748((uint64_t)v48, type metadata accessor for Collaboration.Flow.Collaborator);
LABEL_36:
        v86 = type metadata accessor for URL(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v86 - 8) + 8))(v109, v86);
        goto LABEL_37;
      }
      countAndFlagsBits = v7[1]._countAndFlagsBits;
      object = v48[1]._object;
      v71 = v110;
      if (object)
      {
        v72 = v2;
        String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(98, 2);
        v73._countAndFlagsBits = 0x100000000000002ELL;
        v73._object = (void *)0x8000000100E57210;
        String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v73);
        String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(*v48);
        v74._countAndFlagsBits = 4204576;
        v74._object = (void *)0xE300000000000000;
        String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v74);
        v75._countAndFlagsBits = countAndFlagsBits;
        v75._object = object;
        String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v75);
        v76 = 0xD000000000000031;
        v77 = ") and the playlist will be added to your library.";
LABEL_31:
        v82 = (unint64_t)(v77 - 32) | 0x8000000000000000;
        String.LocalizationValue.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v76);
        String.LocalizationValue.init(stringInterpolation:)(v72);
        v83 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
        v63 = v111;
        v83(v71, v17, v111);
        if (qword_1011DDE30 != -1)
          swift_once(&qword_1011DDE30, sub_100BA7618);
        v65 = qword_10124F040;
        v84 = (id)qword_10124F040;
        v67 = v108;
        static Locale.current.getter(v84);
        v68 = v71;
        goto LABEL_34;
      }
      v89 = 0x1000000000000060;
      v90 = "You’ll be able to edit and reorder songs as %@ and the playlist will be added to your library.";
    }
    else
    {
      v48 = v104;
      sub_10005B6C0((uint64_t)v10, (uint64_t)v104, type metadata accessor for Collaboration.Flow.Collaborator);
      if (v107)
      {
        v49 = 0x8000000100E56FC0;
        v50 = 0xD00000000000007ELL;
        goto LABEL_24;
      }
      countAndFlagsBits = v48[1]._countAndFlagsBits;
      v78 = v48[1]._object;
      v71 = v110;
      if (v78)
      {
        v72 = v2;
        String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(117, 2);
        v79._countAndFlagsBits = 0x100000000000002ALL;
        v79._object = (void *)0x8000000100E57120;
        String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v79);
        String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(*v48);
        v80._countAndFlagsBits = 4204576;
        v80._object = (void *)0xE300000000000000;
        String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v80);
        v81._countAndFlagsBits = countAndFlagsBits;
        v81._object = v78;
        String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v81);
        v76 = 0xD000000000000048;
        v77 = "). The playlist will be added to your library after you request to join.";
        goto LABEL_31;
      }
      v89 = 0x1000000000000073;
      v90 = "Once the owner approves, you’ll join as %@. The playlist will be added to your library after you request to join.";
    }
    String.LocalizationValue.init(stringLiteral:)(v89, (unint64_t)(v90 - 32) | 0x8000000000000000);
    v91 = v111;
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v71, v17, v111);
    if (qword_1011DDE30 != -1)
      swift_once(&qword_1011DDE30, sub_100BA7618);
    v92 = qword_10124F040;
    v93 = (id)qword_10124F040;
    v94 = v108;
    static Locale.current.getter(v93);
    v95 = String.init(localized:table:bundle:locale:comment:)(v71, countAndFlagsBits, 0, v92, v94, 0, 0, 256);
    v97 = v96;
    (*(void (**)(char *, uint64_t))(v47 + 8))(v17, v91);
    v98 = sub_100007E8C(&qword_1011E4498);
    v99 = swift_allocObject(v98, 72, 7);
    *(_OWORD *)(v99 + 16) = xmmword_100EA7AA0;
    v101 = v48->_countAndFlagsBits;
    v100 = v48->_object;
    *(_QWORD *)(v99 + 56) = &type metadata for String;
    *(_QWORD *)(v99 + 64) = sub_100C818E8();
    *(_QWORD *)(v99 + 32) = v101;
    *(_QWORD *)(v99 + 40) = v100;
    swift_bridgeObjectRetain();
    v31 = static String.localizedStringWithFormat(_:_:)(v95, v97, v99);
    v33 = v102;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_35;
  }
  if (EnumCaseMultiPayload == 1)
  {
    v23 = v17;
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000004BLL, 0x8000000100E56F70);
    v24 = v14;
    v25 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
    v27 = v110;
    v26 = v111;
    v25(v110, v23, v111);
    if (qword_1011DDE30 != -1)
      swift_once(&qword_1011DDE30, sub_100BA7618);
    v28 = qword_10124F040;
    v29 = (id)qword_10124F040;
    v30 = v108;
    static Locale.current.getter(v29);
    v31 = String.init(localized:table:bundle:locale:comment:)(v27, 0, 0, v28, v30, 0, 0, 256);
    v33 = v32;
    (*(void (**)(char *, uint64_t))(v24 + 8))(v23, v26);
    sub_10005B748((uint64_t)v20, type metadata accessor for Collaboration.Flow);
  }
  else
  {
    v41 = v17;
    v42 = v14;
    v43 = v110;
    v44 = v111;
    if (v107)
    {
      v45 = 0xD00000000000006CLL;
      v46 = "Anyone with the link will be able to edit and reorder songs and your name and photo will be shown to others.";
    }
    else
    {
      v45 = 0xD00000000000003CLL;
      v46 = "Anyone with the link will be able to edit and reorder songs.";
    }
    String.LocalizationValue.init(stringLiteral:)(v45, (unint64_t)(v46 - 32) | 0x8000000000000000);
    (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v43, v41, v44);
    if (qword_1011DDE30 != -1)
      swift_once(&qword_1011DDE30, sub_100BA7618);
    v51 = qword_10124F040;
    v52 = (id)qword_10124F040;
    v53 = v108;
    static Locale.current.getter(v52);
    v31 = String.init(localized:table:bundle:locale:comment:)(v43, 0, 0, v51, v53, 0, 0, 256);
    v33 = v54;
    (*(void (**)(char *, uint64_t))(v42 + 8))(v41, v44);
  }
LABEL_37:
  v87 = v31;
  v88 = v33;
  result._object = v88;
  result._countAndFlagsBits = v87;
  return result;
}

uint64_t Collaboration.Flow.buttonActionTitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t (*v13)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v24[16];

  v1 = v0;
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v3 = &v24[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for String.LocalizationValue(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = &v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  v9 = &v24[-v8];
  v10 = type metadata accessor for Collaboration.Flow(0);
  __chkstk_darwin();
  v12 = &v24[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10005B704(v1, (uint64_t)v12, v13);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v12, v10);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_10005B748((uint64_t)v12, type metadata accessor for Collaboration.Flow);
      return 0;
    }
    else
    {
      String.LocalizationValue.init(stringLiteral:)(0xD000000000000013, 0x8000000100E57330);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 16))(v7, v9, v4);
      if (qword_1011DDE30 != -1)
        swift_once(&qword_1011DDE30, sub_100BA7618);
      v20 = qword_10124F040;
      static Locale.current.getter((id)qword_10124F040);
      v15 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v20, v3, 0, 0, 256);
      (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v9, v4);
    }
  }
  else
  {
    v16 = sub_100007E8C(&qword_1011E44A8);
    v17 = &v12[*(int *)(v16 + 48)];
    if (v12[*(int *)(v16 + 64)] == 1)
    {
      v18 = 1852403530;
      v19 = 0xE400000000000000;
    }
    else
    {
      v18 = 0x2074736575716552;
      v19 = 0xEF6E696F4A206F74;
    }
    String.LocalizationValue.init(stringLiteral:)(v18, v19);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 16))(v7, v9, v4);
    if (qword_1011DDE30 != -1)
      swift_once(&qword_1011DDE30, sub_100BA7618);
    v21 = qword_10124F040;
    static Locale.current.getter((id)qword_10124F040);
    v15 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v21, v3, 0, 0, 256);
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v9, v4);
    v22 = type metadata accessor for URL(0);
    (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v17, v22);
    sub_10004FF60((uint64_t)v12, &qword_1011E44B0);
  }
  return v15;
}

uint64_t Collaboration.Flow.View.init(_:object:manager:showProfileCreation:profileUpdateHandler:completion:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  uint64_t v16;
  int *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  uint64_t result;
  _QWORD *v25;
  char v28;
  char v29;
  uint64_t v30;

  *a9 = swift_getKeyPath(&unk_100EF0F10);
  v16 = sub_100007E8C(&qword_1011E4D50);
  swift_storeEnumTagMultiPayload(a9, v16, 0);
  v17 = (int *)type metadata accessor for Collaboration.Flow.View(0);
  v18 = (char *)a9 + v17[5];
  v28 = _s9MusicCore13CollaborationO0aB2UIE4FlowO4ViewV13_isRestricted33_4FA82EB282576B4095E3FA5F35E498B805SwiftD05StateVySbGvpfi_0() & 1;
  State.init(wrappedValue:)(&v28, &type metadata for Bool);
  v19 = v30;
  *v18 = v29;
  *((_QWORD *)v18 + 1) = v19;
  v20 = (char *)a9 + v17[6];
  v28 = 0;
  State.init(wrappedValue:)(&v28, &type metadata for Bool);
  v21 = v30;
  *v20 = v29;
  *((_QWORD *)v20 + 1) = v21;
  v22 = (_QWORD *)((char *)a9 + v17[11]);
  v23 = (char *)a9 + v17[13];
  *(_QWORD *)v23 = sub_100C7EC4C;
  *((_QWORD *)v23 + 1) = 0;
  v23[16] = 0;
  sub_10005B6C0(a1, (uint64_t)a9 + v17[7], type metadata accessor for Collaboration.Flow);
  result = sub_10005B6C0(a2, (uint64_t)a9 + v17[8], type metadata accessor for Collaboration.Object);
  *(_QWORD *)((char *)a9 + v17[9]) = a3;
  *((_BYTE *)a9 + v17[10]) = a4;
  *v22 = a5;
  v22[1] = a6;
  v25 = (_QWORD *)((char *)a9 + v17[12]);
  *v25 = a7;
  v25[1] = a8;
  return result;
}

uint64_t (*variable initialization expression of Collaboration.Flow.View._profileContext())()
{
  return sub_100C7EC4C;
}

uint64_t Collaboration.Flow.View.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  *(_QWORD *)a2 = static HorizontalAlignment.center.getter(a1);
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 0;
  v4 = sub_100007E8C(&qword_1011E44C0);
  return sub_100C79334(v2, a2 + *(int *)(v4 + 44));
}

uint64_t sub_100C79334@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t OpaqueTypeConformance2;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  char v72;
  void *v73;
  void *v74;
  uint64_t v75;
  uint64_t KeyPath;
  uint64_t v77;
  unint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  double v88;
  double v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  int v102;
  int v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  double v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  double v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  int v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t *v133;
  uint64_t v134;
  double v135;
  double v136;
  double v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  int v155;
  uint64_t v156;
  int EnumCaseMultiPayload;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  Swift::String *v173;
  Swift::String v174;
  uint64_t v175;
  uint64_t v176;
  double v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  id v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  unint64_t *v200;
  uint64_t v201;
  double v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  unint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t *v215;
  uint64_t v216;
  double v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  unint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  char *v242;
  void (*v243)(char *, uint64_t, uint64_t);
  uint64_t v244;
  uint64_t v245;
  unint64_t v246;
  uint64_t v247;
  uint64_t v248;
  char *v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  void *v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  unint64_t *v259;
  unint64_t v260;
  uint64_t v261;
  uint64_t v262;
  unint64_t v263;
  uint64_t v264;
  uint64_t v265;
  unint64_t v266;
  uint64_t v267;
  __n128 v268;
  uint64_t v269;
  uint64_t v270;
  char *v271;
  uint64_t v272;
  char v273;
  double v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  char *v286;
  uint64_t v287;
  char v288;
  uint64_t v289;
  uint64_t v290;
  char *v291;
  uint64_t v292;
  _OWORD *v293;
  char *v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  _OWORD *v308;
  __int128 v309;
  __int128 v310;
  __int128 v311;
  void *v312;
  char *v313;
  uint64_t v314;
  unint64_t v315;
  unint64_t v316;
  char *v317;
  uint64_t v318;
  unint64_t v319;
  uint64_t v320;
  id v321;
  char *v322;
  uint64_t v323;
  void *v324;
  void *v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  char v330;
  char v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  __n128 v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  double v340;
  uint64_t v341;
  uint64_t v342;
  char *v343;
  uint64_t v344;
  double v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  char *v354;
  char *v355;
  uint64_t v356;
  unint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  void *v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  char v368;
  uint64_t v369;
  __int128 v370;
  uint64_t v371;
  uint64_t v372;
  char *v373;
  uint64_t v374;
  uint64_t v375;
  char *v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  void *v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  char *v384;
  uint64_t v385;
  uint64_t v386;
  void (*v387)(char *, uint64_t);
  unint64_t *v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  unint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  int *v398;
  uint64_t v399;
  uint64_t v400;
  __int128 v401;
  __int128 v402;
  __int128 v403;
  __int128 v404;
  __int128 v405;
  __int128 v406;
  __int128 v407;
  __int128 v408;
  __int128 v409;
  uint64_t v410;
  uint64_t v411;
  char *v412;
  char *v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v417;
  int v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t *v423;
  uint64_t v424;
  uint64_t v425;
  char *v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  char *v430;
  char *v431;
  uint64_t v432;
  char *v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  char *v438;
  char *v439;
  uint64_t v440;
  char *v441;
  uint64_t v442;
  uint64_t v443;
  char *v444;
  uint64_t v445;
  char *v446;
  uint64_t v447;
  char *v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  char *v455;
  char *v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  double v460;
  double v461;
  char *v462;
  uint64_t v463;
  uint64_t v464;
  uint64_t v465;
  char *v466;
  char *v467;
  char *v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t v471;
  char *v472;
  uint64_t v473;
  uint64_t v474;
  unint64_t *v475;
  void (*v476)(char *, char *, uint64_t);
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  void (*v485)(char *, uint64_t);
  uint64_t v486;
  char *v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  char *v496;
  int v497;
  uint64_t v498;
  uint64_t v499;
  char *v500;
  uint64_t v501;
  unint64_t v502;
  uint64_t v503;
  uint64_t v504;
  uint64_t *v505;
  uint64_t v506;
  uint64_t v507;
  uint64_t v508;
  uint64_t v509;
  uint64_t v510;
  char *v511;
  uint64_t v512;
  uint64_t v513;
  uint64_t v514;
  uint64_t v515;
  char *v516;
  uint64_t v517;
  uint64_t v518;
  char *v519;
  uint64_t v520;
  uint64_t v521;
  char *v522;
  uint64_t v523;
  uint64_t v524;
  uint64_t v525;
  unint64_t object;
  _DWORD v527[2];
  uint64_t v528;
  Swift::String v529;
  Swift::String v530;
  Swift::String v531;
  __int128 v532;
  __int128 v533;
  __int128 v534;
  __int128 v535;
  __int128 v536;
  __int128 v537;
  __int128 v538;
  __int128 v539;
  uint64_t v540;
  Swift::String v541;
  Swift::String v542;
  Swift::String v543;
  __int128 v544;
  __int128 v545;
  __int128 v546;
  __int128 v547;
  __int128 v548;
  __int128 v549;
  __int128 v550;
  __int128 v551;
  uint64_t v552;
  _OWORD v553[21];
  Swift::String v554;
  Swift::String v555;
  Swift::String v556;
  __int128 v557;
  __int128 v558;
  __int128 v559;
  __int128 v560;
  __int128 v561;
  __int128 v562;
  __int128 v563;
  __int128 v564;
  uint64_t v565;
  char v566;
  _BYTE v567[7];
  uint64_t v568;
  uint64_t v569;
  uint64_t v570;
  char *v571;
  char v572;
  _BYTE v573[7];
  char v574;
  _BYTE v575[7];
  double v576;
  uint64_t v577;
  uint64_t v578;
  uint64_t v579;
  char v580;
  _BYTE v581[7];
  char v582;
  _BYTE v583[7];
  unint64_t v584;
  uint64_t v585;
  char *v586;
  char *v587;
  char v588;
  _OWORD v589[9];
  uint64_t v590;
  unsigned __int8 v591[8];
  unsigned __int8 v592[8];
  unsigned __int8 v593[12];
  _DWORD v594[2];
  int v595;
  __int16 v596;
  _DWORD v597[3];
  unsigned __int8 v598;
  unsigned __int8 v599;
  unsigned __int8 v600;
  _BYTE v601[7];
  _BYTE v602[7];
  _BYTE v603[7];
  int v604;
  __int16 v605;
  _OWORD v606[7];
  uint64_t v607;
  uint64_t v608;
  char v609;
  uint64_t v610;
  __int16 v611;

  v520 = a1;
  v499 = a2;
  v493 = sub_100007E8C(&qword_1011E4830);
  __chkstk_darwin();
  v471 = (uint64_t)&v420 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v452 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v450 = *(_QWORD *)(v452 - 8);
  __chkstk_darwin();
  v448 = (char *)&v420 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  v444 = (char *)&v420 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C((uint64_t *)&unk_1011E4DA0);
  __chkstk_darwin();
  v496 = (char *)&v420 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v451 = sub_100007E8C(&qword_1011E1AD0);
  v449 = *(_QWORD *)(v451 - 8);
  __chkstk_darwin();
  v447 = (uint64_t)&v420 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v442 = sub_100007E8C((uint64_t *)&unk_1011E4DB0);
  __chkstk_darwin();
  v446 = (char *)&v420 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v443 = sub_100007E8C(&qword_1011E4838);
  __chkstk_darwin();
  v453 = (uint64_t)&v420 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v445 = sub_100007E8C(&qword_1011E4DC0);
  __chkstk_darwin();
  v482 = (uint64_t)&v420 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v484 = (uint64_t)&v420 - v10;
  v501 = type metadata accessor for Playlist.Collaborator(0);
  v483 = *(_QWORD *)(v501 - 8);
  __chkstk_darwin();
  v454 = v11;
  v455 = (char *)&v420 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v500 = (char *)&v420 - v12;
  v13 = type metadata accessor for URL(0);
  v463 = *(_QWORD *)(v13 - 8);
  v464 = v13;
  __chkstk_darwin();
  v440 = v14;
  v441 = (char *)&v420 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v462 = (char *)&v420 - v15;
  v490 = sub_100007E8C(&qword_1011E4840);
  __chkstk_darwin();
  v492 = (uint64_t)&v420 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v473 = sub_100007E8C(&qword_1011E4848);
  __chkstk_darwin();
  v475 = (unint64_t *)((char *)&v420 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v474 = sub_100007E8C(&qword_1011E4850);
  __chkstk_darwin();
  v457 = (uint64_t)&v420 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v491 = sub_100007E8C(&qword_1011E4858);
  __chkstk_darwin();
  v476 = (void (*)(char *, char *, uint64_t))((char *)&v420 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = type metadata accessor for Collaboration.Flow.View(0);
  v486 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin();
  v487 = v21;
  v489 = (uint64_t)&v420 - ((unint64_t)(v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v488 = sub_100007E8C(&qword_1011E4860);
  v470 = *(_QWORD *)(v488 - 8);
  __chkstk_darwin();
  v456 = (char *)&v420 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v472 = (char *)&v420 - v23;
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v467 = (char *)&v420 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v481 = type metadata accessor for String.LocalizationValue(0);
  v465 = *(_QWORD *)(v481 - 8);
  __chkstk_darwin();
  v466 = (char *)&v420 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v468 = (char *)&v420 - v26;
  v437 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin();
  v439 = (char *)&v420 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v434 = type metadata accessor for Material(0);
  v432 = *(_QWORD *)(v434 - 8);
  __chkstk_darwin();
  v431 = (char *)&v420 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_100007E8C(&qword_1011E4868);
  v427 = *(_QWORD *)(v29 - 8);
  v428 = v29;
  __chkstk_darwin();
  v426 = (char *)&v420 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v424 = sub_100007E8C(&qword_1011E4870);
  __chkstk_darwin();
  v430 = (char *)&v420 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v425 = sub_100007E8C(&qword_1011E4878);
  __chkstk_darwin();
  v433 = (char *)&v420 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v429 = sub_100007E8C(&qword_1011E4880);
  __chkstk_darwin();
  v438 = (char *)&v420 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v435 = sub_100007E8C(&qword_1011E4888);
  __chkstk_darwin();
  v469 = (uint64_t)&v420 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v436 = (uint64_t)&v420 - v35;
  __chkstk_darwin();
  v485 = (void (*)(char *, uint64_t))((char *)&v420 - v36);
  sub_100007E8C(&qword_1011E4890);
  __chkstk_darwin();
  v524 = (uint64_t)&v420 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v39 = (char *)&v420 - v38;
  v421 = _s4FlowO18ProfileEditingViewVMa(0);
  __chkstk_darwin();
  v423 = (uint64_t *)((char *)&v420 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0));
  v495 = sub_100007E8C(&qword_1011E4898);
  v494 = *(_QWORD *)(v495 - 8);
  __chkstk_darwin();
  v422 = (uint64_t)&v420 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011E48A0);
  __chkstk_darwin();
  v518 = (uint64_t)&v420 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v525 = (uint64_t)&v420 - v43;
  v513 = sub_100007E8C(&qword_1011E48A8);
  v512 = *(_QWORD *)(v513 - 8);
  __chkstk_darwin();
  v511 = (char *)&v420 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v510 = sub_100007E8C(&qword_1011E48B0);
  __chkstk_darwin();
  v522 = (char *)&v420 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v521 = sub_100007E8C(&qword_1011E48B8);
  __chkstk_darwin();
  v517 = (uint64_t)&v420 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v514 = (uint64_t)&v420 - v47;
  __chkstk_darwin();
  v523 = (uint64_t)&v420 - v48;
  v49 = sub_100007E8C(&qword_1011E48C0);
  v506 = *(_QWORD *)(v49 - 8);
  __chkstk_darwin();
  v51 = (char *)&v420 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v508 = sub_100007E8C(&qword_1011E48C8);
  v507 = *(_QWORD *)(v508 - 8);
  __chkstk_darwin();
  v53 = (char *)&v420 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = type metadata accessor for Collaboration.Flow(0);
  __chkstk_darwin();
  v503 = (uint64_t)&v420 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v509 = (uint64_t)&v420 - v56;
  __chkstk_darwin();
  v58 = (char *)&v420 - v57;
  sub_100007E8C(&qword_1011E48D0);
  __chkstk_darwin();
  v515 = (uint64_t)&v420 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v61 = (char *)&v420 - v60;
  v504 = v20;
  object = v520 + *(int *)(v20 + 28);
  sub_10005B704(object, (uint64_t)v58, type metadata accessor for Collaboration.Flow);
  v505 = (uint64_t *)v54;
  LODWORD(v20) = swift_getEnumCaseMultiPayload(v58, v54);
  sub_10005B748((uint64_t)v58, type metadata accessor for Collaboration.Flow);
  v516 = v39;
  v519 = v61;
  if ((_DWORD)v20 == 1)
  {
    v62 = 1;
  }
  else
  {
    if (qword_1011DE210 != -1)
      swift_once(&qword_1011DE210, sub_100C80760);
    v63 = qword_1011E4488;
    v554._countAndFlagsBits = swift_getKeyPath(&unk_100EF1228);
    v554._object = (void *)v63;
    swift_retain();
    v64 = sub_100007E8C(&qword_1011E48D8);
    v65 = sub_100C85E14();
    View.bold(_:)(1, v64, v65);
    swift_release();
    swift_release();
    v554._countAndFlagsBits = v64;
    v554._object = (void *)v65;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v554, &opaque type descriptor for <<opaque return type of View.bold(_:)>>, 1);
    View.accessibilityHidden(_:)(1, v49, OpaqueTypeConformance2);
    (*(void (**)(char *, uint64_t))(v506 + 8))(v51, v49);
    v61 = v519;
    sub_100065228((uint64_t)v53, (uint64_t)v519, &qword_1011E48C8);
    v62 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v507 + 56))(v61, v62, 1, v508);
  v554._countAndFlagsBits = Collaboration.Flow.title.getter();
  v554._object = v67;
  v502 = sub_100BBF2FC();
  v68 = Text.init<A>(_:)(&v554, &type metadata for String, v502);
  v70 = v69;
  v72 = v71;
  v74 = v73;
  if (qword_1011DE208 != -1)
    swift_once(&qword_1011DE208, sub_100C80664);
  v75 = qword_1011E4480;
  KeyPath = swift_getKeyPath(&unk_100EF1228);
  v554._countAndFlagsBits = v68;
  v554._object = (void *)v70;
  LOBYTE(v555._countAndFlagsBits) = v72 & 1;
  v555._object = v74;
  LOWORD(v556._countAndFlagsBits) = 256;
  v556._object = (void *)KeyPath;
  *(_QWORD *)&v557 = v75;
  swift_retain();
  v77 = sub_100007E8C(&qword_1011E48F0);
  v78 = sub_100C85EDC();
  v79 = v511;
  View.bold(_:)(1, v77, v78);
  sub_100055BAC(v68, v70, v72 & 1);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v80 = swift_getKeyPath(&unk_100EF1258);
  v81 = v512;
  v82 = (uint64_t)v522;
  v83 = v513;
  (*(void (**)(char *, char *, uint64_t))(v512 + 16))(v522, v79, v513);
  v84 = v82 + *(int *)(v510 + 36);
  *(_QWORD *)v84 = v80;
  *(_BYTE *)(v84 + 8) = 1;
  v85 = (*(uint64_t (**)(char *, uint64_t))(v81 + 8))(v79, v83);
  v86 = static Edge.Set.top.getter(v85);
  v87 = v509;
  sub_10005B704(object, v509, type metadata accessor for Collaboration.Flow);
  if (swift_getEnumCaseMultiPayload(v87, v505) == 1)
    v88 = 24.0;
  else
    v88 = 10.0;
  sub_10005B748(v87, type metadata accessor for Collaboration.Flow);
  v89 = EdgeInsets.init(_all:)(v88);
  v91 = v90;
  v93 = v92;
  v95 = v94;
  v96 = v514;
  sub_10004A160(v82, v514, &qword_1011E48B0);
  v97 = v96 + *(int *)(v521 + 36);
  *(_BYTE *)v97 = v86;
  *(double *)(v97 + 8) = v89;
  *(_QWORD *)(v97 + 16) = v91;
  *(_QWORD *)(v97 + 24) = v93;
  *(_QWORD *)(v97 + 32) = v95;
  *(_BYTE *)(v97 + 40) = 0;
  sub_10004FF60(v82, &qword_1011E48B0);
  sub_100065228(v96, v523, &qword_1011E48B8);
  v98 = v504;
  v99 = *(int *)(v504 + 40);
  v100 = v520;
  v554 = Collaboration.Flow.subtitle(hasProfileEdit:)(*(_BYTE *)(v520 + v99));
  v498 = Text.init<A>(_:)(&v554, &type metadata for String, v502);
  v510 = v101;
  v103 = v102;
  v513 = v104;
  v105 = qword_1011E4480;
  v512 = swift_getKeyPath(&unk_100EF1228);
  v511 = (char *)swift_getKeyPath(&unk_100EF1258);
  v514 = v105;
  swift_retain();
  v522 = (char *)static Color.secondary.getter(v106);
  v521 = swift_getKeyPath(&unk_100EF1198);
  LODWORD(v509) = static Edge.Set.top.getter(v521);
  v107 = EdgeInsets.init(_all:)(10.0);
  v109 = v108;
  v111 = v110;
  v113 = v112;
  v497 = v103;
  v599 = v103 & 1;
  v598 = 0;
  LODWORD(v508) = static Edge.Set.bottom.getter(v114);
  if (qword_1011DE200 != -1)
    swift_once(&qword_1011DE200, sub_100C8060C);
  v115 = EdgeInsets.init(_all:)(*(double *)&qword_1011E4478);
  v117 = v116;
  v119 = v118;
  v121 = v120;
  LODWORD(v506) = v599;
  LODWORD(v507) = v598;
  v600 = 0;
  v122 = *(unsigned __int8 *)(v100 + v99);
  v123 = v496;
  v124 = v495;
  v479 = v111;
  v480 = v109;
  v477 = v120;
  v478 = v113;
  if (v122 == 1 && *(_QWORD *)(v100 + *(int *)(v98 + 44)))
  {
    v125 = v100 + *(int *)(v98 + 52);
    v126 = *(_QWORD *)v125;
    v127 = *(_QWORD *)(v125 + 8);
    v128 = *(unsigned __int8 *)(v125 + 16);
    v129 = type metadata accessor for InlineProfileEditingView.Context(0);
    v130 = sub_100048748(&qword_1011E4A50, type metadata accessor for InlineProfileEditingView.Context, (uint64_t)&protocol conformance descriptor for InlineProfileEditingView.Context);
    v131 = v129;
    v98 = v504;
    v132 = StateObject.wrappedValue.getter(v126, v127, v128, v131, v130);
    v133 = v423;
    v134 = sub_10005B704(object, (uint64_t)v423 + *(int *)(v421 + 20), type metadata accessor for Collaboration.Flow);
    *v133 = v132;
    LOBYTE(v132) = static Edge.Set.bottom.getter(v134);
    v135 = v107;
    v136 = v115;
    v137 = EdgeInsets.init(_all:)(12.0);
    v138 = v117;
    v140 = v139;
    v141 = v119;
    v143 = v142;
    v145 = v144;
    v146 = v422;
    sub_10005B704((uint64_t)v133, v422, _s4FlowO18ProfileEditingViewVMa);
    v147 = v146 + *(int *)(v124 + 36);
    *(_BYTE *)v147 = v132;
    *(double *)(v147 + 8) = v137;
    *(_QWORD *)(v147 + 16) = v140;
    v115 = v136;
    v107 = v135;
    v117 = v138;
    v109 = v480;
    *(_QWORD *)(v147 + 24) = v143;
    *(_QWORD *)(v147 + 32) = v145;
    v119 = v141;
    v113 = v478;
    v111 = v479;
    v121 = v477;
    *(_BYTE *)(v147 + 40) = 0;
    sub_10005B748((uint64_t)v133, _s4FlowO18ProfileEditingViewVMa);
    sub_100065228(v146, v525, &qword_1011E4898);
    v148 = 0;
  }
  else
  {
    v148 = 1;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v494 + 56))(v525, v148, 1, v124);
  v149 = v100 + *(int *)(v98 + 52);
  v150 = *(_QWORD *)v149;
  v151 = *(_QWORD *)(v149 + 8);
  v152 = *(unsigned __int8 *)(v149 + 16);
  v153 = type metadata accessor for InlineProfileEditingView.Context(0);
  v154 = sub_100048748(&qword_1011E4A50, type metadata accessor for InlineProfileEditingView.Context, (uint64_t)&protocol conformance descriptor for InlineProfileEditingView.Context);
  StateObject.wrappedValue.getter(v150, v151, v152, v153, v154);
  LODWORD(v151) = InlineProfileEditingView.Context.canValidate.getter();
  swift_release();
  v155 = v151 ^ 1;
  v156 = v503;
  sub_10005B704(object, v503, type metadata accessor for Collaboration.Flow);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v156, v505);
  if (EnumCaseMultiPayload)
  {
    v460 = v115;
    v461 = v107;
    v458 = v119;
    v459 = v117;
    if (EnumCaseMultiPayload == 1)
    {
      v505 = *(uint64_t **)(v483 + 32);
      ((void (*)(char *, uint64_t, uint64_t))v505)(v500, v156, v501);
      sub_100C67D84(v123);
      v158 = sub_100007E8C(&qword_1011E4DE0);
      v159 = (uint64_t)v123;
      v160 = (uint64_t)v444;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v158 - 8) + 56))(v444, 7, 10, v158);
      v161 = v465;
      if (qword_1011DE1F8 != -1)
        swift_once(&qword_1011DE1F8, sub_100C805A4);
      v529._countAndFlagsBits = qword_1011E4470;
      LOBYTE(v529._object) = 0;
      v530._countAndFlagsBits = qword_1011E4470;
      LOBYTE(v530._object) = 0;
      v531._countAndFlagsBits = 0;
      LOWORD(v531._object) = 257;
      v162 = v450;
      v163 = (uint64_t)v448;
      v164 = v452;
      (*(void (**)(char *, _QWORD, uint64_t))(v450 + 104))(v448, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v452);
      v165 = v447;
      static ArtworkImage.with(_:placeholder:size:reusePolicy:)(v159, v160, (uint64_t)&v529, v163, v447);
      (*(void (**)(uint64_t, uint64_t))(v162 + 8))(v163, v164);
      sub_10005B748(v160, type metadata accessor for ArtworkImage.Placeholder);
      v166 = sub_10004FF60(v159, (uint64_t *)&unk_1011E4DA0);
      v167 = qword_1011E4470;
      v168 = static Alignment.center.getter(v166);
      _FrameLayout.init(width:height:alignment:)(&v541, v167, 0, v167, 0, v168, v169);
      v170 = v449;
      v171 = (uint64_t)v446;
      v172 = v451;
      (*(void (**)(char *, uint64_t, uint64_t))(v449 + 16))(v446, v165, v451);
      v173 = (Swift::String *)(v171 + *(int *)(v442 + 36));
      v174 = v542;
      *v173 = v541;
      v173[1] = v174;
      v173[2] = v543;
      (*(void (**)(uint64_t, uint64_t))(v170 + 8))(v165, v172);
      v175 = v453;
      sub_10004A160(v171, v453, (uint64_t *)&unk_1011E4DB0);
      *(_WORD *)(v175 + *(int *)(v443 + 36)) = 256;
      v176 = sub_10004FF60(v171, (uint64_t *)&unk_1011E4DB0);
      LOBYTE(v172) = static Edge.Set.top.getter(v176);
      v177 = EdgeInsets.init(_all:)(8.0);
      v179 = v178;
      v181 = v180;
      v183 = v182;
      v184 = v482;
      sub_10004A160(v175, v482, &qword_1011E4838);
      v185 = v184 + *(int *)(v445 + 36);
      *(_BYTE *)v185 = v172;
      *(double *)(v185 + 8) = v177;
      *(_QWORD *)(v185 + 16) = v179;
      *(_QWORD *)(v185 + 24) = v181;
      *(_QWORD *)(v185 + 32) = v183;
      *(_BYTE *)(v185 + 40) = 0;
      sub_10004FF60(v175, &qword_1011E4838);
      sub_100065228(v184, v484, &qword_1011E4DC0);
      v186 = v468;
      String.LocalizationValue.init(stringLiteral:)(0x65766F72707041, 0xE700000000000000);
      v187 = v466;
      v188 = v481;
      v502 = *(_QWORD *)(v161 + 16);
      ((void (*)(char *, char *, uint64_t))v502)(v466, v186, v481);
      if (qword_1011DDE30 != -1)
        swift_once(&qword_1011DDE30, sub_100BA7618);
      v189 = qword_10124F040;
      v190 = (id)qword_10124F040;
      v191 = v467;
      static Locale.current.getter(v190);
      v496 = (char *)String.init(localized:table:bundle:locale:comment:)(v187, 0, 0, v189, v191, 0, 0, 256);
      v504 = v192;
      v485 = *(void (**)(char *, uint64_t))(v161 + 8);
      v485(v186, v188);
      v193 = v489;
      sub_10005B704(v100, v489, type metadata accessor for Collaboration.Flow.View);
      v476 = *(void (**)(char *, char *, uint64_t))(v483 + 16);
      v194 = v483;
      v195 = v455;
      v196 = v501;
      v476(v455, v500, v501);
      v197 = *(unsigned __int8 *)(v486 + 80);
      v198 = (v197 + 16) & ~v197;
      v199 = *(unsigned __int8 *)(v194 + 80);
      v200 = (unint64_t *)((unint64_t)&v487[v199 + v198] & ~v199);
      v475 = v200;
      v487 = (char *)v200 + v454;
      v486 = v197 | v199 | 7;
      v201 = swift_allocObject(&unk_10110BEC0, (char *)v200 + v454, v486);
      v495 = v201;
      sub_10005B6C0(v193, v201 + v198, type metadata accessor for Collaboration.Flow.View);
      ((void (*)(char *, char *, uint64_t))v505)((char *)v200 + v201, v195, v196);
      LOBYTE(v553[0]) = 0;
      State.init(wrappedValue:)(v553, &type metadata for Bool);
      LODWORD(v494) = LOBYTE(v554._countAndFlagsBits);
      object = (unint64_t)v554._object;
      v503 = swift_getKeyPath(&unk_100EF1288);
      LODWORD(v488) = static Edge.Set.top.getter(v503);
      v202 = EdgeInsets.init(_all:)(32.0);
      v204 = v203;
      v206 = v205;
      v208 = v207;
      String.LocalizationValue.init(stringLiteral:)(0x656E696C636544, 0xE700000000000000);
      v209 = v481;
      ((void (*)(char *, char *, uint64_t))v502)(v187, v186, v481);
      v210 = qword_10124F040;
      static Locale.current.getter((id)qword_10124F040);
      v211 = String.init(localized:table:bundle:locale:comment:)(v187, 0, 0, v210, v191, 0, 0, 256);
      v502 = v212;
      v485(v186, v209);
      sub_10005B704(v520, v193, type metadata accessor for Collaboration.Flow.View);
      v213 = v501;
      v476(v195, v500, v501);
      v214 = swift_allocObject(&unk_10110BEE8, v487, v486);
      sub_10005B6C0(v193, v214 + v198, type metadata accessor for Collaboration.Flow.View);
      ((void (*)(char *, char *, uint64_t))v505)((char *)v475 + v214, v195, v213);
      LOBYTE(v553[0]) = 0;
      State.init(wrappedValue:)(v553, &type metadata for Bool);
      LODWORD(v489) = LOBYTE(v554._countAndFlagsBits);
      v215 = (uint64_t *)v554._object;
      v216 = swift_getKeyPath(&unk_100EF1288);
      v520 = v216;
      LOBYTE(v191) = static Edge.Set.top.getter(v216);
      v217 = EdgeInsets.init(_all:)(8.0);
      v219 = v218;
      v221 = v220;
      v223 = v222;
      v224 = v482;
      sub_10004A160(v484, v482, &qword_1011E4DC0);
      LOBYTE(v554._countAndFlagsBits) = 0;
      v225 = v224;
      v226 = v471;
      sub_10004A160(v225, v471, &qword_1011E4DC0);
      v227 = sub_100007E8C(&qword_1011E4910);
      v228 = v226;
      v229 = v226 + *(int *)(v227 + 48);
      v230 = v504;
      *(_QWORD *)v229 = v496;
      *(_QWORD *)(v229 + 8) = v230;
      *(_BYTE *)(v229 + 16) = 0;
      v231 = v495;
      *(_QWORD *)(v229 + 24) = sub_100C85F7C;
      *(_QWORD *)(v229 + 32) = v231;
      *(_BYTE *)(v229 + 40) = v494;
      v232 = v503;
      *(_QWORD *)(v229 + 48) = object;
      *(_QWORD *)(v229 + 56) = v232;
      *(_BYTE *)(v229 + 64) = 0;
      *(_BYTE *)(v229 + 72) = v488;
      *(double *)(v229 + 80) = v202;
      *(_QWORD *)(v229 + 88) = v204;
      *(_QWORD *)(v229 + 96) = v206;
      *(_QWORD *)(v229 + 104) = v208;
      *(_BYTE *)(v229 + 112) = 0;
      v233 = v228 + *(int *)(v227 + 64);
      *(_QWORD *)v233 = v211;
      *(_QWORD *)(v233 + 8) = v502;
      *(_BYTE *)(v233 + 16) = 1;
      *(_QWORD *)(v233 + 24) = sub_100C86294;
      *(_QWORD *)(v233 + 32) = v214;
      *(_BYTE *)(v233 + 40) = v489;
      *(_QWORD *)(v233 + 48) = v215;
      *(_QWORD *)(v233 + 56) = v216;
      *(_BYTE *)(v233 + 64) = 0;
      *(_BYTE *)(v233 + 72) = (_BYTE)v191;
      *(double *)(v233 + 80) = v217;
      *(_QWORD *)(v233 + 88) = v219;
      *(_QWORD *)(v233 + 96) = v221;
      *(_QWORD *)(v233 + 104) = v223;
      *(_BYTE *)(v233 + 112) = 0;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_10006B3F8(v232, 0);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      v234 = v520;
      sub_10006B3F8(v520, 0);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      sub_10006B3F8(v232, 0);
      swift_bridgeObjectRetain();
      v487 = (char *)v214;
      swift_retain();
      v505 = v215;
      swift_retain();
      sub_10006B3F8(v234, 0);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      sub_10006B604(v234, 0);
      LOBYTE(v231) = v554._countAndFlagsBits;
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      v235 = v503;
      sub_10006B604(v503, v231);
      sub_10004FF60(v482, &qword_1011E4DC0);
      v236 = v471;
      v237 = v492;
      sub_10004A160(v471, v492, &qword_1011E4830);
      swift_storeEnumTagMultiPayload(v237, v490, 1);
      v238 = sub_100C86344();
      v239 = sub_100049F28(&qword_1011E4940, &qword_1011E4830, (uint64_t)&protocol conformance descriptor for TupleView<A>);
      v240 = (uint64_t)v516;
      _ConditionalContent<>.init(storage:)(v237, v491, v493, v238, v239);
      sub_10004FF60(v236, &qword_1011E4830);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      sub_10006B604(v520, 0);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      sub_10006B604(v235, 0);
      sub_10004FF60(v484, &qword_1011E4DC0);
      (*(void (**)(char *, uint64_t))(v483 + 8))(v500, v501);
    }
    else
    {
      LODWORD(v484) = v155;
      v269 = v100 + *(int *)(v504 + 20);
      v270 = *(_QWORD *)(v269 + 8);
      LOBYTE(v553[0]) = *(_BYTE *)v269;
      *((_QWORD *)&v553[0] + 1) = v270;
      v505 = (uint64_t *)sub_100007E8C(&qword_1011E1B98);
      State.projectedValue.getter(&v554, v505);
      v271 = v426;
      v272 = Toggle.init(isOn:label:)(v554._countAndFlagsBits, v554._object, LOBYTE(v555._countAndFlagsBits), sub_100C7C078, 0, &type metadata for Text, &protocol witness table for Text);
      v273 = static Edge.Set.all.getter(v272);
      v274 = EdgeInsets.init(_all:)(12.0);
      v276 = v275;
      v278 = v277;
      v280 = v279;
      v282 = v427;
      v281 = v428;
      v283 = (uint64_t)v430;
      (*(void (**)(char *, char *, uint64_t))(v427 + 16))(v430, v271, v428);
      v284 = v283 + *(int *)(v424 + 36);
      *(_BYTE *)v284 = v273;
      *(double *)(v284 + 8) = v274;
      *(_QWORD *)(v284 + 16) = v276;
      *(_QWORD *)(v284 + 24) = v278;
      *(_QWORD *)(v284 + 32) = v280;
      *(_BYTE *)(v284 + 40) = 0;
      v285 = (*(uint64_t (**)(char *, uint64_t))(v282 + 8))(v271, v281);
      v286 = v431;
      v287 = static Material.thick.getter(v285);
      v288 = static Edge.Set.all.getter(v287);
      v290 = v432;
      v289 = (uint64_t)v433;
      v291 = &v433[*(int *)(v425 + 36)];
      v292 = v434;
      (*(void (**)(char *, char *, uint64_t))(v432 + 16))(v291, v286, v434);
      v291[*(int *)(sub_100007E8C(&qword_1011E2B40) + 36)] = v288;
      sub_10004A160(v283, v289, &qword_1011E4870);
      (*(void (**)(char *, uint64_t))(v290 + 8))(v286, v292);
      sub_10004FF60(v283, &qword_1011E4870);
      v293 = v439;
      v294 = &v439[*(int *)(v437 + 20)];
      v295 = enum case for RoundedCornerStyle.continuous(_:);
      v296 = type metadata accessor for RoundedCornerStyle(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v296 - 8) + 104))(v294, v295, v296);
      __asm { FMOV            V0.2D, #16.0 }
      *v293 = _Q0;
      v302 = (uint64_t)v438;
      v303 = (uint64_t)&v438[*(int *)(v429 + 36)];
      sub_10005B704((uint64_t)v293, v303, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
      *(_WORD *)(v303 + *(int *)(sub_100007E8C((uint64_t *)&unk_1011E4AA0) + 36)) = 256;
      sub_10004A160(v289, v302, &qword_1011E4878);
      sub_10005B748((uint64_t)v293, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
      v304 = sub_10004FF60(v289, &qword_1011E4878);
      v305 = static Alignment.center.getter(v304);
      LOBYTE(v418) = 1;
      _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v606, 0, 1, 0, 1, 0, 1, 0x404B000000000000, 0, 0, 1, 0, v418, v305, v306);
      v307 = v436;
      sub_10004A160(v302, v436, &qword_1011E4880);
      v308 = (_OWORD *)(v307 + *(int *)(v435 + 36));
      v309 = v606[5];
      v308[4] = v606[4];
      v308[5] = v309;
      v308[6] = v606[6];
      v310 = v606[1];
      *v308 = v606[0];
      v308[1] = v310;
      v311 = v606[3];
      v308[2] = v606[2];
      v308[3] = v311;
      sub_10004FF60(v302, &qword_1011E4880);
      sub_100065228(v307, (uint64_t)v485, &qword_1011E4888);
      v312 = *(void **)(v269 + 8);
      LOBYTE(v554._countAndFlagsBits) = *(_BYTE *)v269;
      v554._object = v312;
      State.wrappedValue.getter(v553, v505);
      v314 = v465;
      v313 = v466;
      if (LOBYTE(v553[0]) == 1)
      {
        v315 = 0xD000000000000047;
        v316 = 0x8000000100E56CD0;
        v317 = v468;
      }
      else
      {
        v316 = 0x8000000100E56D70;
        v317 = v468;
        v315 = 0xD00000000000003BLL;
      }
      String.LocalizationValue.init(stringLiteral:)(v315, v316);
      v318 = v481;
      (*(void (**)(char *, char *, uint64_t))(v314 + 16))(v313, v317, v481);
      v319 = v502;
      if (qword_1011DDE30 != -1)
        swift_once(&qword_1011DDE30, sub_100BA7618);
      v320 = qword_10124F040;
      v321 = (id)qword_10124F040;
      v322 = v467;
      static Locale.current.getter(v321);
      v323 = String.init(localized:table:bundle:locale:comment:)(v313, 0, 0, v320, v322, 0, 0, 256);
      v325 = v324;
      v326 = v520;
      (*(void (**)(char *, uint64_t))(v314 + 8))(v317, v318);
      v554._countAndFlagsBits = v323;
      v554._object = v325;
      v327 = Text.init<A>(_:)(&v554, &type metadata for String, v319);
      v329 = v328;
      v331 = v330 & 1;
      v607 = v327;
      v608 = v328;
      v609 = v330 & 1;
      v610 = v332;
      v611 = 256;
      v333 = static Alignment.leading.getter(v327);
      sub_10014B4B8(0, 1, 0.0, 1, INFINITY, 0, 0, 1, (uint64_t)v589, v335, 0.0, 1, 0.0, 1, v333, v334);
      sub_100055BAC(v327, v329, v331);
      swift_bridgeObjectRelease();
      v336 = swift_getKeyPath(&unk_100EF1258);
      v337 = static HierarchicalShapeStyle.secondary.getter(v336);
      LODWORD(v327) = v337;
      v338 = static Font.footnote.getter(v337);
      v339 = swift_getKeyPath(&unk_100EF1228);
      v536 = v589[7];
      v537 = v589[8];
      v531 = (Swift::String)v589[2];
      v532 = v589[3];
      v533 = v589[4];
      v534 = v589[5];
      v535 = v589[6];
      v529 = (Swift::String)v589[0];
      v530 = (Swift::String)v589[1];
      *(_QWORD *)&v538 = v590;
      *((_QWORD *)&v538 + 1) = v336;
      LOBYTE(v539) = 0;
      *(_WORD *)((char *)&v539 + 1) = v594[0];
      BYTE3(v539) = BYTE2(v594[0]);
      DWORD1(v539) = v327;
      *((_QWORD *)&v539 + 1) = v339;
      v540 = v338;
      LODWORD(v483) = static Edge.Set.horizontal.getter(v339);
      v340 = EdgeInsets.init(_all:)(10.0);
      v481 = v341;
      v482 = *(_QWORD *)&v340;
      v471 = v342;
      v468 = v343;
      v549 = v537;
      v550 = v538;
      v551 = v539;
      v552 = v540;
      v545 = v533;
      v546 = v534;
      v547 = v535;
      v548 = v536;
      v541 = v529;
      v542 = v530;
      v543 = v531;
      v544 = v532;
      v591[0] = 0;
      LODWORD(v467) = static Edge.Set.top.getter(v344);
      if (qword_1011DE218 != -1)
        swift_once(&qword_1011DE218, sub_100C80858);
      v345 = EdgeInsets.init(_all:)(*(double *)&qword_1011E4490);
      v347 = v346;
      v349 = v348;
      v351 = v350;
      LODWORD(v495) = v591[0];
      v592[0] = 0;
      LODWORD(v503) = static Edge.Set.bottom.getter(v352);
      v502 = EdgeInsets.init(_all:)(24.0);
      v501 = v353;
      v500 = v354;
      v496 = v355;
      LODWORD(v494) = v592[0];
      v593[0] = 0;
      v356 = Collaboration.Flow.buttonActionTitle.getter();
      object = v357;
      v358 = v489;
      sub_10005B704(v326, v489, type metadata accessor for Collaboration.Flow.View);
      v359 = *(unsigned __int8 *)(v486 + 80);
      v360 = (v359 + 16) & ~v359;
      v361 = v326;
      v362 = swift_allocObject(&unk_10110BF60, &v487[v360], v359 | 7);
      sub_10005B6C0(v358, v362 + v360, type metadata accessor for Collaboration.Flow.View);
      LOBYTE(v553[0]) = 0;
      State.init(wrappedValue:)(v553, &type metadata for Bool);
      LOBYTE(v360) = v554._countAndFlagsBits;
      v363 = v554._object;
      v364 = swift_getKeyPath(&unk_100EF1288);
      v365 = swift_getKeyPath(&unk_100EF12B8);
      v366 = swift_allocObject(&unk_10110BF88, 17, 7);
      *(_BYTE *)(v366 + 16) = v484 & 1;
      v554._countAndFlagsBits = v356;
      v554._object = (void *)object;
      LOBYTE(v555._countAndFlagsBits) = 0;
      v555._object = sub_100C8687C;
      v556._countAndFlagsBits = v362;
      LOBYTE(v556._object) = v360;
      *(_QWORD *)&v557 = v363;
      *((_QWORD *)&v557 + 1) = v364;
      LOBYTE(v558) = 0;
      *((_QWORD *)&v558 + 1) = v365;
      *(_QWORD *)&v559 = sub_100500040;
      *((_QWORD *)&v559 + 1) = v366;
      v367 = v361 + *(int *)(v504 + 24);
      v368 = *(_BYTE *)v367;
      v369 = *(_QWORD *)(v367 + 8);
      LOBYTE(v527[0]) = v368;
      v528 = v369;
      State.projectedValue.getter(v553, v505);
      v505 = &v420;
      v370 = v553[0];
      v371 = LOBYTE(v553[1]);
      __chkstk_darwin();
      v419 = v361;
      v372 = sub_100007E8C(&qword_1011E4930);
      v520 = v372;
      object = sub_100C863C8();
      v373 = v472;
      View.alert(isPresented:content:)(v370, *((_QWORD *)&v370 + 1), v371, sub_100C868C8, &v417, v372, object);
      swift_release();
      swift_release();
      v374 = *((_QWORD *)&v557 + 1);
      LOBYTE(v362) = v558;
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      sub_10006B604(v374, v362);
      swift_release();
      swift_release();
      v375 = v469;
      sub_10004A160((uint64_t)v485, v469, &qword_1011E4888);
      LOBYTE(v360) = v593[0];
      LODWORD(v505) = v593[0];
      v504 = *(_QWORD *)(v470 + 16);
      v376 = v456;
      ((void (*)(char *, char *, uint64_t))v504)(v456, v373, v488);
      v377 = v375;
      v378 = v457;
      sub_10004A160(v377, v457, &qword_1011E4888);
      v379 = sub_100007E8C(&qword_1011E4950);
      v380 = (void *)(v378 + *(int *)(v379 + 48));
      v553[8] = v549;
      v553[9] = v550;
      v553[10] = v551;
      *(_QWORD *)&v553[11] = v552;
      v553[4] = v545;
      v553[5] = v546;
      v553[6] = v547;
      v553[7] = v548;
      v553[0] = v541;
      v553[1] = v542;
      v553[2] = v543;
      v553[3] = v544;
      LOBYTE(v362) = v483;
      BYTE8(v553[11]) = v483;
      *(_DWORD *)((char *)&v553[11] + 9) = v597[0];
      HIDWORD(v553[11]) = *(_DWORD *)((char *)v597 + 3);
      v382 = v481;
      v381 = v482;
      *(_QWORD *)&v553[12] = v482;
      *((_QWORD *)&v553[12] + 1) = v481;
      v383 = v471;
      v384 = v468;
      *(_QWORD *)&v553[13] = v471;
      *((_QWORD *)&v553[13] + 1) = v468;
      LOBYTE(v553[14]) = v495;
      *(_DWORD *)((char *)&v553[14] + 1) = *(_DWORD *)v602;
      DWORD1(v553[14]) = *(_DWORD *)&v602[3];
      LOBYTE(v372) = (_BYTE)v467;
      BYTE8(v553[14]) = (_BYTE)v467;
      HIDWORD(v553[14]) = *(_DWORD *)&v601[3];
      *(_DWORD *)((char *)&v553[14] + 9) = *(_DWORD *)v601;
      *(double *)&v553[15] = v345;
      *((_QWORD *)&v553[15] + 1) = v347;
      *(_QWORD *)&v553[16] = v349;
      *((_QWORD *)&v553[16] + 1) = v351;
      LOBYTE(v553[17]) = v494;
      *(_DWORD *)((char *)&v553[17] + 1) = v527[0];
      DWORD1(v553[17]) = *(_DWORD *)((char *)v527 + 3);
      BYTE8(v553[17]) = v503;
      *(_DWORD *)((char *)&v553[17] + 9) = *(_DWORD *)v603;
      HIDWORD(v553[17]) = *(_DWORD *)&v603[3];
      *(_QWORD *)&v553[18] = v502;
      *((_QWORD *)&v553[18] + 1) = v501;
      *(_QWORD *)&v553[19] = v500;
      *((_QWORD *)&v553[19] + 1) = v496;
      LOBYTE(v553[20]) = v360;
      memcpy(v380, v553, 0x141uLL);
      v385 = v378 + *(int *)(v379 + 64);
      v386 = v488;
      ((void (*)(uint64_t, char *, uint64_t))v504)(v385, v376, v488);
      sub_100C868D0((uint64_t)v553);
      sub_100C868D0((uint64_t)&v529);
      v387 = *(void (**)(char *, uint64_t))(v470 + 8);
      v387(v376, v386);
      v562 = v549;
      v563 = v550;
      v564 = v551;
      v565 = v552;
      v558 = v545;
      v559 = v546;
      v560 = v547;
      v561 = v548;
      v554 = v541;
      v555 = v542;
      v556 = v543;
      v557 = v544;
      v566 = v362;
      *(_DWORD *)v567 = v597[0];
      *(_DWORD *)&v567[3] = *(_DWORD *)((char *)v597 + 3);
      v568 = v381;
      v569 = v382;
      v570 = v383;
      v571 = v384;
      v572 = v495;
      *(_DWORD *)v573 = *(_DWORD *)v602;
      *(_DWORD *)&v573[3] = *(_DWORD *)&v602[3];
      v574 = v372;
      *(_DWORD *)&v575[3] = *(_DWORD *)&v601[3];
      *(_DWORD *)v575 = *(_DWORD *)v601;
      v576 = v345;
      v577 = v347;
      v578 = v349;
      v579 = v351;
      v580 = v494;
      *(_DWORD *)v581 = v527[0];
      *(_DWORD *)&v581[3] = *(_DWORD *)((char *)v527 + 3);
      v582 = v503;
      *(_DWORD *)v583 = *(_DWORD *)v603;
      *(_DWORD *)&v583[3] = *(_DWORD *)&v603[3];
      v584 = v502;
      v585 = v501;
      v586 = v500;
      v587 = v496;
      v588 = (char)v505;
      sub_100C8693C((uint64_t)&v554);
      sub_10004FF60(v469, &qword_1011E4888);
      v388 = v475;
      sub_10004A160(v378, (uint64_t)v475, &qword_1011E4850);
      swift_storeEnumTagMultiPayload(v388, v473, 0);
      v389 = sub_100049F28(&qword_1011E4920, &qword_1011E4850, (uint64_t)&protocol conformance descriptor for TupleView<A>);
      v390 = (uint64_t)v476;
      _ConditionalContent<>.init(storage:)(v388, v474, v520, v389, object);
      sub_10004FF60(v378, &qword_1011E4850);
      v391 = v492;
      sub_10004A160(v390, v492, &qword_1011E4858);
      swift_storeEnumTagMultiPayload(v391, v490, 0);
      v392 = sub_100C86344();
      v393 = sub_100049F28(&qword_1011E4940, &qword_1011E4830, (uint64_t)&protocol conformance descriptor for TupleView<A>);
      v240 = (uint64_t)v516;
      _ConditionalContent<>.init(storage:)(v391, v491, v493, v392, v393);
      sub_10004FF60(v390, &qword_1011E4858);
      v387(v472, v488);
      sub_100C8693C((uint64_t)&v529);
      sub_10004FF60((uint64_t)v485, &qword_1011E4888);
    }
    v115 = v460;
    v107 = v461;
    v111 = v479;
    v109 = v480;
    v121 = v477;
    v113 = v478;
    v119 = v458;
    v117 = v459;
  }
  else
  {
    v241 = sub_100007E8C(&qword_1011E44A8);
    v242 = v462;
    v243 = *(void (**)(char *, uint64_t, uint64_t))(v463 + 32);
    v244 = v463;
    v245 = v464;
    v243(v462, v156 + *(int *)(v241 + 48), v464);
    v502 = Collaboration.Flow.buttonActionTitle.getter();
    object = v246;
    v247 = v489;
    sub_10005B704(v100, v489, type metadata accessor for Collaboration.Flow.View);
    v248 = v244;
    v249 = v441;
    (*(void (**)(char *, char *, uint64_t))(v244 + 16))(v441, v242, v245);
    v250 = *(unsigned __int8 *)(v486 + 80);
    v251 = (v250 + 16) & ~v250;
    v252 = *(unsigned __int8 *)(v248 + 80);
    v253 = (unint64_t)&v487[v252 + v251] & ~v252;
    v254 = swift_allocObject(&unk_10110BF10, v253 + v440, v250 | v252 | 7);
    sub_10005B6C0(v247, v254 + v251, type metadata accessor for Collaboration.Flow.View);
    v243((char *)(v254 + v253), (uint64_t)v249, v245);
    LOBYTE(v553[0]) = 0;
    State.init(wrappedValue:)(v553, &type metadata for Bool);
    LOBYTE(v249) = v554._countAndFlagsBits;
    v255 = v554._object;
    v505 = (uint64_t *)v554._object;
    v256 = swift_getKeyPath(&unk_100EF1288);
    v257 = swift_getKeyPath(&unk_100EF12B8);
    v258 = swift_allocObject(&unk_10110BF38, 17, 7);
    *(_BYTE *)(v258 + 16) = v155 & 1;
    v259 = v475;
    v260 = object;
    *v475 = v502;
    v259[1] = v260;
    *((_BYTE *)v259 + 16) = 0;
    v259[3] = (unint64_t)sub_100C86844;
    v259[4] = v254;
    *((_BYTE *)v259 + 40) = (_BYTE)v249;
    v259[6] = (unint64_t)v255;
    v259[7] = v256;
    v504 = v256;
    *((_BYTE *)v259 + 64) = 0;
    v259[9] = v257;
    v259[10] = (unint64_t)sub_100447DFC;
    v520 = v257;
    v259[11] = v258;
    swift_storeEnumTagMultiPayload(v259, v473, 1);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_10006B3F8(v256, 0);
    swift_retain();
    swift_retain();
    v261 = sub_100007E8C(&qword_1011E4930);
    v262 = sub_100049F28(&qword_1011E4920, &qword_1011E4850, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    v263 = sub_100C863C8();
    v264 = (uint64_t)v476;
    _ConditionalContent<>.init(storage:)(v259, v474, v261, v262, v263);
    v265 = v492;
    sub_10004A160(v264, v492, &qword_1011E4858);
    swift_storeEnumTagMultiPayload(v265, v490, 0);
    v266 = sub_100C86344();
    v267 = sub_100049F28(&qword_1011E4940, &qword_1011E4830, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    v240 = (uint64_t)v516;
    _ConditionalContent<>.init(storage:)(v265, v491, v493, v266, v267);
    sub_10004FF60(v264, &qword_1011E4858);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    sub_10006B604(v504, 0);
    swift_release();
    v268 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v463 + 8))(v462, v464, v268);
    sub_10004FF60(v503, &qword_1011E44B0);
  }
  v394 = v515;
  sub_10004A160((uint64_t)v519, v515, &qword_1011E48D0);
  v395 = v517;
  sub_10004A160(v523, v517, &qword_1011E48B8);
  v597[0] = v589[0];
  *(_DWORD *)((char *)v597 + 3) = *(_DWORD *)((char *)v589 + 3);
  v595 = v604;
  v596 = v605;
  v594[0] = v527[0];
  *(_DWORD *)((char *)v594 + 3) = *(_DWORD *)((char *)v527 + 3);
  *(_DWORD *)&v593[3] = *(_DWORD *)&v603[3];
  *(_DWORD *)v593 = *(_DWORD *)v603;
  *(_DWORD *)&v592[3] = *(_DWORD *)&v602[3];
  *(_DWORD *)v592 = *(_DWORD *)v602;
  *(_DWORD *)&v591[3] = *(_DWORD *)&v601[3];
  *(_DWORD *)v591 = *(_DWORD *)v601;
  LODWORD(object) = v600;
  v396 = v518;
  sub_10004A160(v525, v518, &qword_1011E48A0);
  sub_10004A160(v240, v524, &qword_1011E4890);
  v397 = v499;
  sub_10004A160(v394, v499, &qword_1011E48D0);
  v398 = (int *)sub_100007E8C(&qword_1011E4948);
  sub_10004A160(v395, v397 + v398[12], &qword_1011E48B8);
  v399 = v397 + v398[16];
  v400 = v498;
  *(_QWORD *)&v553[0] = v498;
  *((_QWORD *)&v553[0] + 1) = v510;
  LOBYTE(v553[1]) = v506;
  *(_DWORD *)((char *)&v553[1] + 1) = v589[0];
  DWORD1(v553[1]) = *(_DWORD *)((char *)v589 + 3);
  *((_QWORD *)&v553[1] + 1) = v513;
  LOWORD(v553[2]) = 256;
  *(_DWORD *)((char *)&v553[2] + 2) = v604;
  WORD3(v553[2]) = v605;
  *((_QWORD *)&v553[2] + 1) = v512;
  *(_QWORD *)&v553[3] = v514;
  *((_QWORD *)&v553[3] + 1) = v511;
  LOBYTE(v553[4]) = 1;
  *(_DWORD *)((char *)&v553[4] + 1) = v527[0];
  DWORD1(v553[4]) = *(_DWORD *)((char *)v527 + 3);
  *((_QWORD *)&v553[4] + 1) = v521;
  *(_QWORD *)&v553[5] = v522;
  BYTE8(v553[5]) = v509;
  *(_DWORD *)((char *)&v553[5] + 9) = *(_DWORD *)v603;
  HIDWORD(v553[5]) = *(_DWORD *)&v603[3];
  *(double *)&v553[6] = v107;
  *((_QWORD *)&v553[6] + 1) = v109;
  *(_QWORD *)&v553[7] = v111;
  *((_QWORD *)&v553[7] + 1) = v113;
  LOBYTE(v553[8]) = v507;
  DWORD1(v553[8]) = *(_DWORD *)&v602[3];
  *(_DWORD *)((char *)&v553[8] + 1) = *(_DWORD *)v602;
  BYTE8(v553[8]) = v508;
  HIDWORD(v553[8]) = *(_DWORD *)&v601[3];
  *(_DWORD *)((char *)&v553[8] + 9) = *(_DWORD *)v601;
  *(double *)&v553[9] = v115;
  *((_QWORD *)&v553[9] + 1) = v117;
  *(_QWORD *)&v553[10] = v119;
  *((_QWORD *)&v553[10] + 1) = v121;
  LOBYTE(v553[11]) = object;
  v402 = v553[8];
  v401 = v553[9];
  v403 = v553[10];
  *(_BYTE *)(v399 + 176) = object;
  *(_OWORD *)(v399 + 144) = v401;
  *(_OWORD *)(v399 + 160) = v403;
  v404 = v553[0];
  v405 = v553[1];
  v406 = v553[3];
  *(_OWORD *)(v399 + 32) = v553[2];
  *(_OWORD *)(v399 + 48) = v406;
  *(_OWORD *)v399 = v404;
  *(_OWORD *)(v399 + 16) = v405;
  v407 = v553[4];
  v408 = v553[5];
  v409 = v553[6];
  *(_OWORD *)(v399 + 112) = v553[7];
  *(_OWORD *)(v399 + 128) = v402;
  *(_OWORD *)(v399 + 80) = v408;
  *(_OWORD *)(v399 + 96) = v409;
  *(_OWORD *)(v399 + 64) = v407;
  sub_10004A160(v396, v397 + v398[20], &qword_1011E48A0);
  sub_10004A160(v524, v397 + v398[24], &qword_1011E4890);
  sub_100C86490((uint64_t)v553);
  LOBYTE(v398) = v497 & 1;
  v410 = v510;
  sub_100055BBC(v400, v510, v497 & 1);
  swift_bridgeObjectRetain();
  swift_retain();
  v411 = v514;
  swift_retain();
  v412 = v511;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10004FF60((uint64_t)v516, &qword_1011E4890);
  sub_10004FF60(v525, &qword_1011E48A0);
  sub_100055BAC(v400, v410, (char)v398);
  swift_release();
  swift_release();
  v413 = v412;
  swift_release();
  swift_release();
  v414 = v512;
  swift_release();
  v415 = v513;
  swift_bridgeObjectRelease();
  sub_10004FF60(v523, &qword_1011E48B8);
  sub_10004FF60((uint64_t)v519, &qword_1011E48D0);
  sub_10004FF60(v524, &qword_1011E4890);
  sub_10004FF60(v518, &qword_1011E48A0);
  v554._countAndFlagsBits = v400;
  v554._object = (void *)v410;
  LOBYTE(v555._countAndFlagsBits) = v506;
  *(_DWORD *)((char *)&v555._countAndFlagsBits + 1) = v597[0];
  HIDWORD(v555._countAndFlagsBits) = *(_DWORD *)((char *)v597 + 3);
  v555._object = (void *)v415;
  LOWORD(v556._countAndFlagsBits) = 256;
  *(_DWORD *)((char *)&v556._countAndFlagsBits + 2) = v595;
  HIWORD(v556._countAndFlagsBits) = v596;
  v556._object = (void *)v414;
  *(_QWORD *)&v557 = v411;
  *((_QWORD *)&v557 + 1) = v413;
  LOBYTE(v558) = 1;
  DWORD1(v558) = *(_DWORD *)((char *)v594 + 3);
  *(_DWORD *)((char *)&v558 + 1) = v594[0];
  *((_QWORD *)&v558 + 1) = v521;
  *(_QWORD *)&v559 = v522;
  BYTE8(v559) = v509;
  HIDWORD(v559) = *(_DWORD *)&v593[3];
  *(_DWORD *)((char *)&v559 + 9) = *(_DWORD *)v593;
  *(double *)&v560 = v107;
  *((_QWORD *)&v560 + 1) = v109;
  *(_QWORD *)&v561 = v111;
  *((_QWORD *)&v561 + 1) = v113;
  LOBYTE(v562) = v507;
  DWORD1(v562) = *(_DWORD *)&v592[3];
  *(_DWORD *)((char *)&v562 + 1) = *(_DWORD *)v592;
  BYTE8(v562) = v508;
  HIDWORD(v562) = *(_DWORD *)&v591[3];
  *(_DWORD *)((char *)&v562 + 9) = *(_DWORD *)v591;
  *(double *)&v563 = v115;
  *((_QWORD *)&v563 + 1) = v117;
  *(_QWORD *)&v564 = v119;
  *((_QWORD *)&v564 + 1) = v121;
  LOBYTE(v565) = object;
  sub_100C86518((uint64_t)&v554);
  sub_10004FF60(v517, &qword_1011E48B8);
  return sub_10004FF60(v515, &qword_1011E48D0);
}

uint64_t sub_100C7C078@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t result;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _QWORD v20[3];

  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v3 = (char *)&v20[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for String.LocalizationValue(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v20[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v9 = (char *)&v20[-1] - v8;
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000015, 0x8000000100E56DB0);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v9, v4);
  if (qword_1011DDE30 != -1)
    swift_once(&qword_1011DDE30, sub_100BA7618);
  v10 = qword_10124F040;
  static Locale.current.getter((id)qword_10124F040);
  v11 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v10, v3, 0, 0, 256);
  v13 = v12;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
  v20[0] = v11;
  v20[1] = v13;
  v14 = sub_100BBF2FC();
  result = Text.init<A>(_:)(v20, &type metadata for String, v14);
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v16;
  *(_BYTE *)(a1 + 16) = v17 & 1;
  *(_QWORD *)(a1 + 24) = v18;
  return result;
}

double sub_100C7C214(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double result;
  uint64_t v15;

  v3 = *(_QWORD *)(type metadata accessor for Collaboration.Flow.View(0) - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin();
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011E0490);
  __chkstk_darwin();
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  sub_10005B704(a2, (uint64_t)v5, type metadata accessor for Collaboration.Flow.View);
  type metadata accessor for MainActor(0);
  v10 = static MainActor.shared.getter(v9);
  v11 = *(unsigned __int8 *)(v3 + 80);
  v12 = (v11 + 32) & ~v11;
  v13 = swift_allocObject(&unk_10110C028, v12 + v4, v11 | 7);
  *(_QWORD *)(v13 + 16) = v10;
  *(_QWORD *)(v13 + 24) = &protocol witness table for MainActor;
  sub_10005B6C0((uint64_t)v5, v13 + v12, type metadata accessor for Collaboration.Flow.View);
  sub_100BF76B8((uint64_t)v7, (uint64_t)&unk_1011E4988, v13);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100C7C358()
{
  _QWORD *v0;
  __n128 v1;
  _QWORD *v2;

  v0[2] = type metadata accessor for MainActor(0);
  v0[3] = static MainActor.shared.getter(v1);
  v2 = (_QWORD *)swift_task_alloc(dword_1011E497C);
  v0[4] = v2;
  *v2 = v0;
  v2[1] = sub_100088284;
  return sub_100C7C3C0(0);
}

uint64_t sub_100C7C3C0(char a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  _QWORD *v10;
  _QWORD *v12;

  v2[10] = v1;
  v4 = type metadata accessor for DismissAction(0);
  v2[11] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[12] = v5;
  v2[13] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011E4958);
  v2[14] = v6;
  v2[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Collaboration.Object(0);
  v2[16] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[17] = v8;
  v2[18] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v2[19] = type metadata accessor for MainActor(0);
  v2[20] = static MainActor.shared.getter(v9);
  type metadata accessor for Collaboration.Flow.View(0);
  if ((a1 & 1) != 0)
  {
    v10 = (_QWORD *)swift_task_alloc(dword_1011D6884);
    v2[21] = v10;
    *v10 = v2;
    v10[1] = sub_100C7C4F8;
    return Collaboration.Object.duplicate()();
  }
  else
  {
    v12 = (_QWORD *)swift_task_alloc(dword_1011D680C);
    v2[23] = v12;
    *v12 = v2;
    v12[1] = sub_100C7C70C;
    return Collaboration.Object.hasUnsupportedContent.getter();
  }
}

uint64_t sub_100C7C4F8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 168);
  *(_QWORD *)(*v1 + 176) = v0;
  swift_task_dealloc(v3);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(*(_QWORD *)(v2 + 152), &protocol witness table for MainActor);
  if (v0)
    v6 = sub_100C7CDEC;
  else
    v6 = sub_100C7C57C;
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_100C7C57C()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  int *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;
  char *v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  _QWORD *v19;
  uint64_t (*v20)(uint64_t);

  v1 = *(_QWORD *)(v0 + 80);
  v2 = (int *)type metadata accessor for Collaboration.Flow.View(0);
  *(_QWORD *)(v0 + 192) = v2;
  if (*(_BYTE *)(v1 + v2[10]) == 1 && (v3 = *(int **)(v1 + v2[11])) != 0)
  {
    v4 = (uint64_t *)(v1 + v2[13]);
    v5 = *v4;
    v6 = v4[1];
    v7 = *((unsigned __int8 *)v4 + 16);
    v8 = type metadata accessor for InlineProfileEditingView.Context(0);
    v9 = sub_100048748(&qword_1011E4A50, type metadata accessor for InlineProfileEditingView.Context, (uint64_t)&protocol conformance descriptor for InlineProfileEditingView.Context);
    v10 = StateObject.wrappedValue.getter(v5, v6, v7, v8, v9);
    *(_QWORD *)(v0 + 200) = v10;
    v20 = (uint64_t (*)(uint64_t))((char *)v3 + *v3);
    v11 = (_QWORD *)swift_task_alloc(v3[1]);
    *(_QWORD *)(v0 + 208) = v11;
    *v11 = v0;
    v11[1] = sub_100C7CAF0;
    return v20(v10);
  }
  else
  {
    v13 = v1 + v2[8];
    v14 = (char *)(v1 + v2[5]);
    v15 = *v14;
    v16 = *((_QWORD *)v14 + 1);
    *(_BYTE *)(v0 + 40) = v15;
    *(_QWORD *)(v0 + 48) = v16;
    v17 = sub_100007E8C(&qword_1011E1B98);
    State.wrappedValue.getter((_QWORD *)(v0 + 33), v17);
    v18 = *(_BYTE *)(v0 + 33);
    v19 = (_QWORD *)swift_task_alloc(dword_1011D689C);
    *(_QWORD *)(v0 + 224) = v19;
    *v19 = v0;
    v19[1] = sub_100C7CC44;
    return Collaboration.Manager.start(_:isOpen:)(*(_QWORD *)(v0 + 144), v13, (v18 & 1) == 0);
  }
}

uint64_t sub_100C7C70C(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 184);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 152);
  *(_BYTE *)(*(_QWORD *)v1 + 35) = a1;
  swift_task_dealloc(v2);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  return swift_task_switch(sub_100C7C784, v4, v5);
}

uint64_t sub_100C7C784()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  int *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  char *v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t);

  if (*(_BYTE *)(v0 + 35) == 1)
  {
    swift_release();
    v1 = sub_100C86C4C();
    v2 = swift_allocError(&type metadata for Collaboration.Error, v1, 0, 0);
    *(_OWORD *)v3 = xmmword_100EE8B40;
    *(_BYTE *)(v3 + 16) = 3;
    swift_willThrow((__n128)xmmword_100EE8B40);
    *(_QWORD *)(v0 + 72) = v2;
    swift_errorRetain(v2);
    v4 = sub_100007E8C(&qword_1011DF550);
    if ((swift_dynamicCast(v0 + 16, v0 + 72, v4, &type metadata for Collaboration.Error, 0) & 1) != 0)
    {
      v5 = *(_QWORD *)(v0 + 16);
      v6 = *(_QWORD *)(v0 + 24);
      v7 = *(unsigned __int8 *)(v0 + 32);
      if (v7 == 3 && v5 == 8 && !v6)
      {
        v8 = *(_QWORD *)(v0 + 80);
        swift_errorRelease(v2);
        v9 = (char *)(v8 + *(int *)(type metadata accessor for Collaboration.Flow.View(0) + 24));
        v10 = *v9;
        v11 = *((_QWORD *)v9 + 1);
        *(_BYTE *)(v0 + 56) = v10;
        *(_QWORD *)(v0 + 64) = v11;
        *(_BYTE *)(v0 + 34) = 1;
        v12 = sub_100007E8C(&qword_1011E1B98);
        State.wrappedValue.setter(v0 + 34, v12);
        swift_errorRelease(*(_QWORD *)(v0 + 72));
LABEL_13:
        v39 = *(_QWORD *)(v0 + 120);
        v40 = *(_QWORD *)(v0 + 104);
        swift_task_dealloc(*(_QWORD *)(v0 + 144));
        swift_task_dealloc(v39);
        swift_task_dealloc(v40);
        return (*(uint64_t (**)(void))(v0 + 8))();
      }
      sub_10044BB60(v5, v6, v7);
    }
    v32 = *(_QWORD *)(v0 + 112);
    v33 = *(uint64_t **)(v0 + 120);
    v35 = *(_QWORD *)(v0 + 96);
    v34 = *(_QWORD *)(v0 + 104);
    v37 = *(_QWORD *)(v0 + 80);
    v36 = *(_QWORD *)(v0 + 88);
    swift_errorRelease(*(_QWORD *)(v0 + 72));
    *v33 = v2;
    swift_storeEnumTagMultiPayload(v33, v32, 1);
    swift_errorRetain(v2);
    sub_100C313F4(v34);
    DismissAction.callAsFunction()();
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v36);
    v38 = type metadata accessor for Collaboration.Flow.View(0);
    (*(void (**)(uint64_t *))(v37 + *(int *)(v38 + 48)))(v33);
    swift_errorRelease(v2);
    sub_10004FF60((uint64_t)v33, &qword_1011E4958);
    goto LABEL_13;
  }
  v13 = *(_QWORD *)(v0 + 80);
  v14 = (int *)type metadata accessor for Collaboration.Flow.View(0);
  *(_QWORD *)(v0 + 192) = v14;
  if (*(_BYTE *)(v13 + v14[10]) == 1 && (v15 = *(int **)(v13 + v14[11])) != 0)
  {
    v16 = (uint64_t *)(v13 + v14[13]);
    v17 = *v16;
    v18 = v16[1];
    v19 = *((unsigned __int8 *)v16 + 16);
    v20 = type metadata accessor for InlineProfileEditingView.Context(0);
    v21 = sub_100048748(&qword_1011E4A50, type metadata accessor for InlineProfileEditingView.Context, (uint64_t)&protocol conformance descriptor for InlineProfileEditingView.Context);
    v22 = StateObject.wrappedValue.getter(v17, v18, v19, v20, v21);
    *(_QWORD *)(v0 + 200) = v22;
    v41 = (uint64_t (*)(uint64_t))((char *)v15 + *v15);
    v23 = (_QWORD *)swift_task_alloc(v15[1]);
    *(_QWORD *)(v0 + 208) = v23;
    *v23 = v0;
    v23[1] = sub_100C7CAF0;
    return v41(v22);
  }
  else
  {
    v25 = v13 + v14[8];
    v26 = (char *)(v13 + v14[5]);
    v27 = *v26;
    v28 = *((_QWORD *)v26 + 1);
    *(_BYTE *)(v0 + 40) = v27;
    *(_QWORD *)(v0 + 48) = v28;
    v29 = sub_100007E8C(&qword_1011E1B98);
    State.wrappedValue.getter((_QWORD *)(v0 + 33), v29);
    v30 = *(_BYTE *)(v0 + 33);
    v31 = (_QWORD *)swift_task_alloc(dword_1011D689C);
    *(_QWORD *)(v0 + 224) = v31;
    *v31 = v0;
    v31[1] = sub_100C7CC44;
    return Collaboration.Manager.start(_:isOpen:)(*(_QWORD *)(v0 + 144), v25, (v30 & 1) == 0);
  }
}

uint64_t sub_100C7CAF0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();
  uint64_t v8;
  uint64_t v9;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 208);
  *(_QWORD *)(*v1 + 216) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = dispatch thunk of Actor.unownedExecutor.getter(*(_QWORD *)(v2 + 152), &protocol witness table for MainActor);
    v6 = v5;
    v7 = sub_100C7CF9C;
  }
  else
  {
    v8 = *(_QWORD *)(v2 + 152);
    swift_release();
    v4 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
    v6 = v9;
    v7 = sub_100C7CB90;
  }
  return swift_task_switch(v7, v4, v6);
}

uint64_t sub_100C7CB90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _QWORD *v8;

  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = v2 + *(int *)(v1 + 32);
  v4 = v2 + *(int *)(v1 + 20);
  LOBYTE(v2) = *(_BYTE *)v4;
  v5 = *(_QWORD *)(v4 + 8);
  *(_BYTE *)(v0 + 40) = v2;
  *(_QWORD *)(v0 + 48) = v5;
  v6 = sub_100007E8C(&qword_1011E1B98);
  State.wrappedValue.getter((_QWORD *)(v0 + 33), v6);
  v7 = *(_BYTE *)(v0 + 33);
  v8 = (_QWORD *)swift_task_alloc(dword_1011D689C);
  *(_QWORD *)(v0 + 224) = v8;
  *v8 = v0;
  v8[1] = sub_100C7CC44;
  return Collaboration.Manager.start(_:isOpen:)(*(_QWORD *)(v0 + 144), v3, (v7 & 1) == 0);
}

uint64_t sub_100C7CC44()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 224);
  *(_QWORD *)(*v1 + 232) = v0;
  swift_task_dealloc(v3);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(*(_QWORD *)(v2 + 152), &protocol witness table for MainActor);
  if (v0)
    v6 = sub_100C7D15C;
  else
    v6 = sub_100C7CCC8;
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_100C7CCC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v13 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 136);
  v1 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 128);
  v6 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 112);
  v7 = *(_QWORD *)(v0 + 88);
  v8 = *(_QWORD *)(v0 + 96);
  v9 = *(_QWORD *)(v0 + 80);
  swift_release();
  sub_10005B704(v1, v4, type metadata accessor for Collaboration.Object);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v2 + 56))(v4, 0, 1, v3);
  swift_storeEnumTagMultiPayload(v4, v5, 0);
  sub_100C313F4(v6);
  DismissAction.callAsFunction()();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  (*(void (**)(uint64_t))(v9 + *(int *)(v13 + 48)))(v4);
  sub_10004FF60(v4, &qword_1011E4958);
  sub_10005B748(v1, type metadata accessor for Collaboration.Object);
  v10 = *(_QWORD *)(v0 + 120);
  v11 = *(_QWORD *)(v0 + 104);
  swift_task_dealloc(*(_QWORD *)(v0 + 144));
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100C7CDEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char *v19;
  char v20;
  uint64_t v21;
  uint64_t v22;

  swift_release();
  v1 = *(_QWORD *)(v0 + 176);
  *(_QWORD *)(v0 + 72) = v1;
  swift_errorRetain(v1);
  v2 = sub_100007E8C(&qword_1011DF550);
  if ((swift_dynamicCast(v0 + 16, v0 + 72, v2, &type metadata for Collaboration.Error, 0) & 1) != 0)
  {
    v3 = *(_QWORD *)(v0 + 16);
    v4 = *(_QWORD *)(v0 + 24);
    v5 = *(unsigned __int8 *)(v0 + 32);
    if (v5 == 3 && v3 == 8 && v4 == 0)
    {
      v18 = *(_QWORD *)(v0 + 80);
      swift_errorRelease(v1);
      v19 = (char *)(v18 + *(int *)(type metadata accessor for Collaboration.Flow.View(0) + 24));
      v20 = *v19;
      v21 = *((_QWORD *)v19 + 1);
      *(_BYTE *)(v0 + 56) = v20;
      *(_QWORD *)(v0 + 64) = v21;
      *(_BYTE *)(v0 + 34) = 1;
      v22 = sub_100007E8C(&qword_1011E1B98);
      State.wrappedValue.setter(v0 + 34, v22);
      swift_errorRelease(*(_QWORD *)(v0 + 72));
      goto LABEL_11;
    }
    sub_10044BB60(v3, v4, v5);
  }
  v8 = *(_QWORD *)(v0 + 112);
  v9 = *(_QWORD **)(v0 + 120);
  v11 = *(_QWORD *)(v0 + 96);
  v10 = *(_QWORD *)(v0 + 104);
  v13 = *(_QWORD *)(v0 + 80);
  v12 = *(_QWORD *)(v0 + 88);
  swift_errorRelease(*(_QWORD *)(v0 + 72));
  *v9 = v1;
  swift_storeEnumTagMultiPayload(v9, v8, 1);
  swift_errorRetain(v1);
  sub_100C313F4(v10);
  DismissAction.callAsFunction()();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  v14 = type metadata accessor for Collaboration.Flow.View(0);
  (*(void (**)(_QWORD *))(v13 + *(int *)(v14 + 48)))(v9);
  swift_errorRelease(v1);
  sub_10004FF60((uint64_t)v9, &qword_1011E4958);
LABEL_11:
  v15 = *(_QWORD *)(v0 + 120);
  v16 = *(_QWORD *)(v0 + 104);
  swift_task_dealloc(*(_QWORD *)(v0 + 144));
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100C7CF9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  swift_release();
  swift_release();
  v1 = *(_QWORD *)(v0 + 216);
  *(_QWORD *)(v0 + 72) = v1;
  swift_errorRetain(v1);
  v2 = sub_100007E8C(&qword_1011DF550);
  if ((swift_dynamicCast(v0 + 16, v0 + 72, v2, &type metadata for Collaboration.Error, 0) & 1) == 0)
    goto LABEL_7;
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = *(unsigned __int8 *)(v0 + 32);
  if (v5 != 3 || v3 != 8 || v4)
  {
    sub_10044BB60(v3, v4, v5);
LABEL_7:
    v11 = *(_QWORD *)(v0 + 112);
    v12 = *(_QWORD **)(v0 + 120);
    v14 = *(_QWORD *)(v0 + 96);
    v13 = *(_QWORD *)(v0 + 104);
    v16 = *(_QWORD *)(v0 + 80);
    v15 = *(_QWORD *)(v0 + 88);
    swift_errorRelease(*(_QWORD *)(v0 + 72));
    *v12 = v1;
    swift_storeEnumTagMultiPayload(v12, v11, 1);
    swift_errorRetain(v1);
    sub_100C313F4(v13);
    DismissAction.callAsFunction()();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    v17 = type metadata accessor for Collaboration.Flow.View(0);
    (*(void (**)(_QWORD *))(v16 + *(int *)(v17 + 48)))(v12);
    swift_errorRelease(v1);
    sub_10004FF60((uint64_t)v12, &qword_1011E4958);
    goto LABEL_8;
  }
  v6 = *(_QWORD *)(v0 + 80);
  swift_errorRelease(v1);
  v7 = (char *)(v6 + *(int *)(type metadata accessor for Collaboration.Flow.View(0) + 24));
  v8 = *v7;
  v9 = *((_QWORD *)v7 + 1);
  *(_BYTE *)(v0 + 56) = v8;
  *(_QWORD *)(v0 + 64) = v9;
  *(_BYTE *)(v0 + 34) = 1;
  v10 = sub_100007E8C(&qword_1011E1B98);
  State.wrappedValue.setter(v0 + 34, v10);
  swift_errorRelease(*(_QWORD *)(v0 + 72));
LABEL_8:
  v18 = *(_QWORD *)(v0 + 120);
  v19 = *(_QWORD *)(v0 + 104);
  swift_task_dealloc(*(_QWORD *)(v0 + 144));
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100C7D15C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char *v19;
  char v20;
  uint64_t v21;
  uint64_t v22;

  swift_release();
  v1 = *(_QWORD *)(v0 + 232);
  *(_QWORD *)(v0 + 72) = v1;
  swift_errorRetain(v1);
  v2 = sub_100007E8C(&qword_1011DF550);
  if ((swift_dynamicCast(v0 + 16, v0 + 72, v2, &type metadata for Collaboration.Error, 0) & 1) != 0)
  {
    v3 = *(_QWORD *)(v0 + 16);
    v4 = *(_QWORD *)(v0 + 24);
    v5 = *(unsigned __int8 *)(v0 + 32);
    if (v5 == 3 && v3 == 8 && v4 == 0)
    {
      v18 = *(_QWORD *)(v0 + 80);
      swift_errorRelease(v1);
      v19 = (char *)(v18 + *(int *)(type metadata accessor for Collaboration.Flow.View(0) + 24));
      v20 = *v19;
      v21 = *((_QWORD *)v19 + 1);
      *(_BYTE *)(v0 + 56) = v20;
      *(_QWORD *)(v0 + 64) = v21;
      *(_BYTE *)(v0 + 34) = 1;
      v22 = sub_100007E8C(&qword_1011E1B98);
      State.wrappedValue.setter(v0 + 34, v22);
      swift_errorRelease(*(_QWORD *)(v0 + 72));
      goto LABEL_11;
    }
    sub_10044BB60(v3, v4, v5);
  }
  v8 = *(_QWORD *)(v0 + 112);
  v9 = *(_QWORD **)(v0 + 120);
  v11 = *(_QWORD *)(v0 + 96);
  v10 = *(_QWORD *)(v0 + 104);
  v13 = *(_QWORD *)(v0 + 80);
  v12 = *(_QWORD *)(v0 + 88);
  swift_errorRelease(*(_QWORD *)(v0 + 72));
  *v9 = v1;
  swift_storeEnumTagMultiPayload(v9, v8, 1);
  swift_errorRetain(v1);
  sub_100C313F4(v10);
  DismissAction.callAsFunction()();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  v14 = type metadata accessor for Collaboration.Flow.View(0);
  (*(void (**)(_QWORD *))(v13 + *(int *)(v14 + 48)))(v9);
  swift_errorRelease(v1);
  sub_10004FF60((uint64_t)v9, &qword_1011E4958);
LABEL_11:
  v15 = *(_QWORD *)(v0 + 120);
  v16 = *(_QWORD *)(v0 + 104);
  swift_task_dealloc(*(_QWORD *)(v0 + 144));
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100C7D30C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  __n128 v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;

  v68 = a1;
  v69 = a2;
  v64 = *(_QWORD *)(type metadata accessor for Collaboration.Flow.View(0) - 8);
  v2 = __chkstk_darwin();
  v65 = v3;
  v66 = (uint64_t)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Alert.Button(0, v2);
  __chkstk_darwin();
  v67 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v70 = (char *)&v55 - v5;
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v7 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for String.LocalizationValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin();
  v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v13 = (char *)&v55 - v12;
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000027, 0x8000000100E573B0);
  v14 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v14(v11, v13, v8);
  if (qword_1011DDE30 != -1)
    swift_once(&qword_1011DDE30, sub_100BA7618);
  v15 = qword_10124F040;
  static Locale.current.getter((id)qword_10124F040);
  v16 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v15, v7, 0, 0, 256);
  v18 = v17;
  v19 = *(void (**)(char *, uint64_t))(v9 + 8);
  v19(v13, v8);
  v71 = v16;
  v72 = v18;
  v20 = sub_100BBF2FC();
  v21 = Text.init<A>(_:)(&v71, &type metadata for String, v20);
  v62 = v22;
  v63 = v21;
  v60 = v23;
  v61 = v24;
  String.LocalizationValue.init(stringLiteral:)(0xD00000000000008ELL, 0x8000000100E573E0);
  v14(v11, v13, v8);
  v25 = qword_10124F040;
  static Locale.current.getter((id)qword_10124F040);
  v26 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v25, v7, 0, 0, 256);
  v28 = v27;
  v19(v13, v8);
  v71 = v26;
  v72 = v28;
  v29 = Text.init<A>(_:)(&v71, &type metadata for String, v20);
  v58 = v30;
  v59 = v29;
  v56 = v31 & 1;
  v57 = v32;
  String.LocalizationValue.init(stringLiteral:)(0x65756E69746E6F43, 0xE800000000000000);
  v14(v11, v13, v8);
  v33 = qword_10124F040;
  static Locale.current.getter((id)qword_10124F040);
  v34 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v33, v7, 0, 0, 256);
  v36 = v35;
  v19(v13, v8);
  v71 = v34;
  v72 = v36;
  v37 = Text.init<A>(_:)(&v71, &type metadata for String, v20);
  v39 = v38;
  v41 = v40;
  v43 = v42 & 1;
  v44 = v68;
  v45 = v66;
  sub_10005B704(v68, v66, type metadata accessor for Collaboration.Flow.View);
  v46 = *(unsigned __int8 *)(v64 + 80);
  v47 = (v46 + 16) & ~v46;
  v48 = v47 + v65;
  v49 = v46 | 7;
  v50 = swift_allocObject(&unk_10110BFB0, v47 + v65, v46 | 7);
  sub_10005B6C0(v45, v50 + v47, type metadata accessor for Collaboration.Flow.View);
  static Alert.Button.default(_:action:)(v37, v39, v43, v41, sub_100C86BF4, v50);
  sub_100055BAC(v37, v39, v43);
  swift_release();
  swift_bridgeObjectRelease();
  sub_10005B704(v44, v45, type metadata accessor for Collaboration.Flow.View);
  v51 = swift_allocObject(&unk_10110BFD8, v48, v49);
  sub_10005B6C0(v45, v51 + v47, type metadata accessor for Collaboration.Flow.View);
  v52 = v67;
  static Alert.Button.cancel(_:)(sub_100C86C04, v51, v53);
  swift_release();
  return Alert.init(title:message:primaryButton:secondaryButton:)(v63, v62, v60 & 1, v61, v59, v58, v56, v57, v70, v52);
}

double sub_100C7D7BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double result;
  uint64_t v14;

  v2 = *(_QWORD *)(type metadata accessor for Collaboration.Flow.View(0) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  __chkstk_darwin();
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011E0490);
  __chkstk_darwin();
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  sub_10005B704(a1, (uint64_t)v4, type metadata accessor for Collaboration.Flow.View);
  type metadata accessor for MainActor(0);
  v9 = static MainActor.shared.getter(v8);
  v10 = *(unsigned __int8 *)(v2 + 80);
  v11 = (v10 + 32) & ~v10;
  v12 = swift_allocObject(&unk_10110C000, v11 + v3, v10 | 7);
  *(_QWORD *)(v12 + 16) = v9;
  *(_QWORD *)(v12 + 24) = &protocol witness table for MainActor;
  sub_10005B6C0((uint64_t)v4, v12 + v11, type metadata accessor for Collaboration.Flow.View);
  sub_100BF76B8((uint64_t)v6, (uint64_t)&unk_1011E4970, v12);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100C7D900()
{
  _QWORD *v0;
  __n128 v1;
  _QWORD *v2;

  v0[2] = type metadata accessor for MainActor(0);
  v0[3] = static MainActor.shared.getter(v1);
  v2 = (_QWORD *)swift_task_alloc(dword_1011E497C);
  v0[4] = v2;
  *v2 = v0;
  v2[1] = sub_100088358;
  return sub_100C7C3C0(1);
}

uint64_t sub_100C7D968(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v2 = type metadata accessor for DismissAction(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin();
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011E4958);
  __chkstk_darwin();
  v8 = (uint64_t *)((char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_100C86C4C();
  v10 = swift_allocError(&type metadata for Collaboration.Error, v9, 0, 0);
  *(_OWORD *)v11 = xmmword_100EE8B40;
  *(_BYTE *)(v11 + 16) = 3;
  *v8 = v10;
  swift_storeEnumTagMultiPayload(v8, v6, 1);
  sub_100C313F4((uint64_t)v5);
  DismissAction.callAsFunction()();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v12 = type metadata accessor for Collaboration.Flow.View(0);
  (*(void (**)(uint64_t *))(a1 + *(int *)(v12 + 48)))(v8);
  return sub_10004FF60((uint64_t)v8, &qword_1011E4958);
}

uint64_t sub_100C7DAA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;

  v5[2] = a4;
  v5[3] = a5;
  v6 = type metadata accessor for DismissAction(0);
  v5[4] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[5] = v7;
  v5[6] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011E4958);
  v5[7] = v8;
  v5[8] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MainActor(0);
  v5[9] = static MainActor.shared.getter(v10);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  v5[10] = v11;
  v5[11] = v12;
  return swift_task_switch(sub_100C7DB64, v11, v12);
}

uint64_t sub_100C7DB64()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  int *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;
  _QWORD *v14;
  uint64_t (*v15)(uint64_t);

  v1 = v0[2];
  v2 = (int *)type metadata accessor for Collaboration.Flow.View(0);
  v0[12] = v2;
  if (*(_BYTE *)(v1 + v2[10]) == 1 && (v3 = *(int **)(v1 + v2[11])) != 0)
  {
    v4 = (uint64_t *)(v1 + v2[13]);
    v5 = *v4;
    v6 = v4[1];
    v7 = *((unsigned __int8 *)v4 + 16);
    v8 = type metadata accessor for InlineProfileEditingView.Context(0);
    v9 = sub_100048748(&qword_1011E4A50, type metadata accessor for InlineProfileEditingView.Context, (uint64_t)&protocol conformance descriptor for InlineProfileEditingView.Context);
    v10 = StateObject.wrappedValue.getter(v5, v6, v7, v8, v9);
    v0[13] = v10;
    v15 = (uint64_t (*)(uint64_t))((char *)v3 + *v3);
    v11 = (_QWORD *)swift_task_alloc(v3[1]);
    v0[14] = v11;
    *v11 = v0;
    v11[1] = sub_100C7DCAC;
    return v15(v10);
  }
  else
  {
    v13 = v1 + v2[8];
    v14 = (_QWORD *)swift_task_alloc(dword_1011D68C4);
    v0[16] = v14;
    *v14 = v0;
    v14[1] = sub_100C7DD7C;
    return Collaboration.Manager.join(_:url:)(v13, v0[3]);
  }
}

uint64_t sub_100C7DCAC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 112);
  *(_QWORD *)(*v1 + 120) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 80);
    v5 = *(_QWORD *)(v2 + 88);
    v6 = sub_100C7DEC4;
  }
  else
  {
    swift_release();
    v4 = *(_QWORD *)(v2 + 80);
    v5 = *(_QWORD *)(v2 + 88);
    v6 = sub_100C7DD18;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_100C7DD18()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = v0[2] + *(int *)(v0[12] + 32);
  v2 = (_QWORD *)swift_task_alloc(dword_1011D68C4);
  v0[16] = v2;
  *v2 = v0;
  v2[1] = sub_100C7DD7C;
  return Collaboration.Manager.join(_:url:)(v1, v0[3]);
}

uint64_t sub_100C7DD7C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 128);
  *(_QWORD *)(*v1 + 136) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100C7DFA8;
  else
    v4 = sub_100C7DDDC;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88));
}

uint64_t sub_100C7DDDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 32);
  v6 = *(_QWORD *)(v0 + 40);
  v7 = *(_QWORD *)(v0 + 16);
  swift_release();
  v8 = type metadata accessor for Collaboration.Object(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v2, 1, 1, v8);
  swift_storeEnumTagMultiPayload(v2, v3, 0);
  sub_100C313F4(v4);
  DismissAction.callAsFunction()();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t))(v7 + *(int *)(v1 + 48)))(v2);
  sub_10004FF60(v2, &qword_1011E4958);
  v9 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 64));
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100C7DEC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_release();
  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD **)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 56);
  v6 = *(_QWORD *)(v0 + 32);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 16);
  swift_release();
  *v3 = v1;
  swift_storeEnumTagMultiPayload(v3, v4, 1);
  swift_errorRetain(v1);
  sub_100C313F4(v5);
  DismissAction.callAsFunction()();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  (*(void (**)(_QWORD *))(v8 + *(int *)(v2 + 48)))(v3);
  swift_errorRelease(v1);
  sub_10004FF60((uint64_t)v3, &qword_1011E4958);
  v9 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 64));
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100C7DFA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD **)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 56);
  v6 = *(_QWORD *)(v0 + 32);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 16);
  swift_release();
  *v3 = v1;
  swift_storeEnumTagMultiPayload(v3, v4, 1);
  swift_errorRetain(v1);
  sub_100C313F4(v5);
  DismissAction.callAsFunction()();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  (*(void (**)(_QWORD *))(v8 + *(int *)(v2 + 48)))(v3);
  swift_errorRelease(v1);
  sub_10004FF60((uint64_t)v3, &qword_1011E4958);
  v9 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 64));
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100C7E084(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;

  v5[2] = a4;
  v5[3] = a5;
  v6 = type metadata accessor for DismissAction(0);
  v5[4] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[5] = v7;
  v5[6] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011E4958);
  v5[7] = v8;
  v5[8] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011E49B0);
  v5[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Playlist(0);
  v5[10] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v5[11] = v11;
  v5[12] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MainActor(0);
  v5[13] = static MainActor.shared.getter(v13);
  v14 = dispatch thunk of Actor.unownedExecutor.getter(v12, &protocol witness table for MainActor);
  v5[14] = v14;
  v5[15] = v15;
  return swift_task_switch(sub_100C7E18C, v14, v15);
}

uint64_t sub_100C7E18C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v19;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 72);
  *(_QWORD *)(v0 + 128) = type metadata accessor for Collaboration.Flow.View(0);
  Collaboration.Object.musicItem.getter(v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    v4 = *(_QWORD *)(v0 + 72);
    swift_release();
    sub_10004FF60(v4, &qword_1011E49B0);
    v5 = sub_100C86C4C();
    v6 = swift_allocError(&type metadata for Collaboration.Error, v5, 0, 0);
    *(_OWORD *)v7 = xmmword_100ED8620;
    *(_BYTE *)(v7 + 16) = 3;
    swift_willThrow((__n128)xmmword_100ED8620);
    v8 = *(_QWORD *)(v0 + 128);
    v9 = *(_QWORD *)(v0 + 56);
    v10 = *(uint64_t **)(v0 + 64);
    v12 = *(_QWORD *)(v0 + 40);
    v11 = *(_QWORD *)(v0 + 48);
    v13 = *(_QWORD *)(v0 + 32);
    v14 = *(_QWORD *)(v0 + 16);
    *v10 = v6;
    swift_storeEnumTagMultiPayload(v10, v9, 1);
    swift_errorRetain(v6);
    sub_100C313F4(v11);
    DismissAction.callAsFunction()();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
    (*(void (**)(uint64_t *))(v14 + *(int *)(v8 + 48)))(v10);
    swift_errorRelease(v6);
    sub_10004FF60((uint64_t)v10, &qword_1011E4958);
    v15 = *(_QWORD *)(v0 + 64);
    v16 = *(_QWORD *)(v0 + 72);
    v17 = *(_QWORD *)(v0 + 48);
    swift_task_dealloc(*(_QWORD *)(v0 + 96));
    swift_task_dealloc(v16);
    swift_task_dealloc(v15);
    swift_task_dealloc(v17);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 32))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
    v19 = (_QWORD *)swift_task_alloc(dword_1011D68D4);
    *(_QWORD *)(v0 + 136) = v19;
    *v19 = v0;
    v19[1] = sub_100C7E384;
    return Collaboration.Manager.moderate(_:collaborator:in:)(0, *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 96));
  }
}

uint64_t sub_100C7E384()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 136);
  *(_QWORD *)(*v1 + 144) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100C7E504;
  else
    v4 = sub_100C7E3E4;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 112), *(_QWORD *)(v2 + 120));
}

uint64_t sub_100C7E3E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 128);
  v15 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 40);
  v7 = *(_QWORD *)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 32);
  v9 = *(_QWORD *)(v0 + 16);
  swift_release();
  v10 = type metadata accessor for Collaboration.Object(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v5, 1, 1, v10);
  swift_storeEnumTagMultiPayload(v5, v4, 0);
  sub_100C313F4(v7);
  DismissAction.callAsFunction()();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v8);
  (*(void (**)(uint64_t))(v9 + *(int *)(v1 + 48)))(v5);
  sub_10004FF60(v5, &qword_1011E4958);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v15, v2);
  v11 = *(_QWORD *)(v0 + 64);
  v12 = *(_QWORD *)(v0 + 72);
  v13 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 96));
  swift_task_dealloc(v12);
  swift_task_dealloc(v11);
  swift_task_dealloc(v13);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100C7E504()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 88);
  v4 = swift_release();
  (*(void (**)(uint64_t, uint64_t, __n128))(v3 + 8))(v1, v2, v4);
  v5 = *(_QWORD *)(v0 + 144);
  v6 = *(_QWORD *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 56);
  v8 = *(_QWORD **)(v0 + 64);
  v10 = *(_QWORD *)(v0 + 40);
  v9 = *(_QWORD *)(v0 + 48);
  v11 = *(_QWORD *)(v0 + 32);
  v12 = *(_QWORD *)(v0 + 16);
  *v8 = v5;
  swift_storeEnumTagMultiPayload(v8, v7, 1);
  swift_errorRetain(v5);
  sub_100C313F4(v9);
  DismissAction.callAsFunction()();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  (*(void (**)(_QWORD *))(v12 + *(int *)(v6 + 48)))(v8);
  swift_errorRelease(v5);
  sub_10004FF60((uint64_t)v8, &qword_1011E4958);
  v13 = *(_QWORD *)(v0 + 64);
  v14 = *(_QWORD *)(v0 + 72);
  v15 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 96));
  swift_task_dealloc(v14);
  swift_task_dealloc(v13);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_100C7E608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v28 = a5;
  v29 = a6;
  v27 = a3;
  v7 = a4(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin();
  v11 = (char *)&v26 - v10;
  v12 = *(_QWORD *)(type metadata accessor for Collaboration.Flow.View(0) - 8);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin();
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011E0490);
  __chkstk_darwin();
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  sub_10005B704(a2, (uint64_t)v14, type metadata accessor for Collaboration.Flow.View);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v27, v7);
  type metadata accessor for MainActor(0);
  v19 = static MainActor.shared.getter(v18);
  v20 = *(unsigned __int8 *)(v12 + 80);
  v21 = (v20 + 32) & ~v20;
  v22 = *(unsigned __int8 *)(v8 + 80);
  v23 = (v13 + v22 + v21) & ~v22;
  v24 = swift_allocObject(v28, v23 + v9, v20 | v22 | 7);
  *(_QWORD *)(v24 + 16) = v19;
  *(_QWORD *)(v24 + 24) = &protocol witness table for MainActor;
  sub_10005B6C0((uint64_t)v14, v24 + v21, type metadata accessor for Collaboration.Flow.View);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v24 + v23, v11, v7);
  sub_100BF76B8((uint64_t)v16, v29, v24);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100C7E7D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;

  v5[2] = a4;
  v5[3] = a5;
  v6 = type metadata accessor for DismissAction(0);
  v5[4] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[5] = v7;
  v5[6] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100007E8C(&qword_1011E4958);
  v5[7] = v8;
  v5[8] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011E49B0);
  v5[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Playlist(0);
  v5[10] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v5[11] = v11;
  v5[12] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MainActor(0);
  v5[13] = static MainActor.shared.getter(v13);
  v14 = dispatch thunk of Actor.unownedExecutor.getter(v12, &protocol witness table for MainActor);
  v5[14] = v14;
  v5[15] = v15;
  return swift_task_switch(sub_100C7E8E0, v14, v15);
}

uint64_t sub_100C7E8E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v19;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 72);
  *(_QWORD *)(v0 + 128) = type metadata accessor for Collaboration.Flow.View(0);
  Collaboration.Object.musicItem.getter(v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    v4 = *(_QWORD *)(v0 + 72);
    swift_release();
    sub_10004FF60(v4, &qword_1011E49B0);
    v5 = sub_100C86C4C();
    v6 = swift_allocError(&type metadata for Collaboration.Error, v5, 0, 0);
    *(_OWORD *)v7 = xmmword_100ED8620;
    *(_BYTE *)(v7 + 16) = 3;
    swift_willThrow((__n128)xmmword_100ED8620);
    v8 = *(_QWORD *)(v0 + 128);
    v9 = *(_QWORD *)(v0 + 56);
    v10 = *(uint64_t **)(v0 + 64);
    v12 = *(_QWORD *)(v0 + 40);
    v11 = *(_QWORD *)(v0 + 48);
    v13 = *(_QWORD *)(v0 + 32);
    v14 = *(_QWORD *)(v0 + 16);
    *v10 = v6;
    swift_storeEnumTagMultiPayload(v10, v9, 1);
    swift_errorRetain(v6);
    sub_100C313F4(v11);
    DismissAction.callAsFunction()();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
    (*(void (**)(uint64_t *))(v14 + *(int *)(v8 + 48)))(v10);
    swift_errorRelease(v6);
    sub_10004FF60((uint64_t)v10, &qword_1011E4958);
    v15 = *(_QWORD *)(v0 + 64);
    v16 = *(_QWORD *)(v0 + 72);
    v17 = *(_QWORD *)(v0 + 48);
    swift_task_dealloc(*(_QWORD *)(v0 + 96));
    swift_task_dealloc(v16);
    swift_task_dealloc(v15);
    swift_task_dealloc(v17);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 32))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
    v19 = (_QWORD *)swift_task_alloc(dword_1011D68D4);
    *(_QWORD *)(v0 + 136) = v19;
    *v19 = v0;
    v19[1] = sub_100C7EAD8;
    return Collaboration.Manager.moderate(_:collaborator:in:)(1, *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 96));
  }
}

uint64_t sub_100C7EAD8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 136);
  *(_QWORD *)(*v1 + 144) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100C879A0;
  else
    v4 = sub_100C879A4;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 112), *(_QWORD *)(v2 + 120));
}

id _s9MusicCore13CollaborationO0aB2UIE4FlowO4ViewV13_isRestricted33_4FA82EB282576B4095E3FA5F35E498B8LL05SwiftD05StateVySbGvpfi_0()
{
  id v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  __n128 v8;
  id v10;

  v0 = objc_msgSend((id)objc_opt_self(ICUserIdentityStore), "defaultIdentityStore");
  sub_100C87770();
  v1 = static ICUserIdentity.active.getter();
  v10 = 0;
  v2 = objc_msgSend(v0, "getPropertiesForUserIdentity:error:", v1, &v10);

  v3 = v10;
  if (v2)
  {
    v4 = v10;
    v5 = objc_msgSend(v2, "isU18MinorAccount");

  }
  else
  {
    v6 = v10;
    v7 = _convertNSErrorToError(_:)(v3);

    swift_willThrow(v8);
    swift_errorRelease(v7);
    return 0;
  }
  return v5;
}

uint64_t sub_100C7EC4C()
{
  uint64_t v0;

  v0 = type metadata accessor for InlineProfileEditingView.Context(0);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  return InlineProfileEditingView.Context.init()();
}

uint64_t sub_100C7EC80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100C7F9C4(a1, 0, &qword_1011E44C0, (uint64_t (*)(uint64_t))sub_100C79334, a2);
}

uint64_t sub_100C7EC98@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  sub_100007E8C(&qword_1011E4240);
  __chkstk_darwin();
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = Image.init(systemName:)(0x322E6E6F73726570, 0xED00006C6C69662ELL);
  static SymbolRenderingMode.hierarchical.getter(v5);
  v6 = type metadata accessor for SymbolRenderingMode(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v3, 0, 1, v6);
  v7 = Image.symbolRenderingMode(_:)(v3, v4);
  swift_release();
  v8 = sub_10004FF60((uint64_t)v3, &qword_1011E4240);
  v10 = static Color.accentColor.getter(v8, v9);
  result = swift_getKeyPath(&unk_100EF1198);
  *a1 = v7;
  a1[1] = result;
  a1[2] = v10;
  return result;
}

uint64_t sub_100C7ED98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, __n128 a3@<Q0>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t KeyPath;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  double v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  __n128 v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  double v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  char v112;
  uint64_t v113;
  char v114;
  uint64_t v115;
  char v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  void *v123;
  uint64_t v124;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t *v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  _BYTE v155[133];
  _BYTE v156[133];
  char v157;
  _BYTE v158[11];
  __int16 v159;
  char v160;
  _QWORD v161[2];
  char v162;
  _BYTE v163[7];
  uint64_t v164;
  __int16 v165;
  int v166;
  __int16 v167;
  uint64_t v168;
  char v169;
  _BYTE v170[7];
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  char v175;
  _BYTE v176[7];
  double v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char v181;
  uint64_t v182;
  uint64_t v183;
  __n128 v184;
  char v185;
  uint64_t v186;
  char v187;
  uint64_t v188;
  char v189;
  uint64_t v190;
  unint64_t v191;
  uint64_t v192;
  uint64_t v193;

  v151 = a2;
  v152 = a1;
  v3 = type metadata accessor for Font.Leading(0, a3);
  v149 = *(_QWORD *)(v3 - 8);
  v150 = v3;
  __chkstk_darwin();
  v142 = (char *)&v126 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = sub_100007E8C(&qword_1011E0E58);
  __chkstk_darwin();
  v136 = (uint64_t *)((char *)&v126 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100007E8C(&qword_1011E0E60);
  __chkstk_darwin();
  v134 = (char *)&v126 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v8 = (char *)&v126 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v148 = type metadata accessor for String.LocalizationValue(0);
  v9 = *(_QWORD *)(v148 - 8);
  __chkstk_darwin();
  v11 = (char *)&v126 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v13 = (char *)&v126 - v12;
  v127 = sub_100007E8C(&qword_1011E0E68);
  __chkstk_darwin();
  v130 = (char *)&v126 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = sub_100007E8C(&qword_1011E0E70);
  __chkstk_darwin();
  v131 = (uint64_t)&v126 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = sub_100007E8C((uint64_t *)&unk_1011E4CF0);
  __chkstk_darwin();
  v133 = (uint64_t)&v126 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011E47E8);
  __chkstk_darwin();
  v137 = (uint64_t)&v126 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100007E8C(&qword_1011E47F0);
  v145 = *(_QWORD *)(v18 - 8);
  v146 = v18;
  __chkstk_darwin();
  v135 = (uint64_t)&v126 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for Collaboration.Flow(0);
  __chkstk_darwin();
  v22 = (char *)&v126 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v24 = (char *)&v126 - v23;
  sub_100007E8C(&qword_1011E47F8);
  __chkstk_darwin();
  v154 = (uint64_t)&v126 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v27 = (char *)&v126 - v26;
  v143 = v152 + *(int *)(_s4FlowO18ProfileEditingViewVMa(0) + 20);
  sub_10005B704(v143, (uint64_t)v24, type metadata accessor for Collaboration.Flow);
  v147 = v20;
  swift_storeEnumTagMultiPayload(v22, v20, 2);
  LOBYTE(v20) = _s9MusicCore13CollaborationO0aB2UIE4FlowO21__derived_enum_equalsySbAF_AFtFZ_0((uint64_t)v24, (uint64_t)v22);
  v144 = v22;
  sub_10005B748((uint64_t)v22, type metadata accessor for Collaboration.Flow);
  sub_10005B748((uint64_t)v24, type metadata accessor for Collaboration.Flow);
  v153 = v27;
  v140 = v9;
  v141 = v8;
  v138 = v11;
  v139 = v13;
  if ((v20 & 1) != 0)
  {
    v28 = 1;
    v30 = v149;
    v29 = v150;
    v31 = v146;
  }
  else
  {
    String.LocalizationValue.init(stringLiteral:)(0x7341206E696F4ALL, 0xE700000000000000);
    v32 = v148;
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v13, v148);
    v33 = v32;
    if (qword_1011DDE30 != -1)
      swift_once(&qword_1011DDE30, sub_100BA7618);
    v34 = qword_10124F040;
    static Locale.current.getter((id)qword_10124F040);
    v35 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v34, v8, 0, 0, 256);
    v37 = v36;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v13, v33);
    v182 = v35;
    v183 = v37;
    v38 = sub_100BBF2FC();
    v39 = Text.init<A>(_:)(&v182, &type metadata for String, v38);
    v41 = v40;
    v43 = v42;
    v45 = v44 & 1;
    v46 = enum case for Text.Case.uppercase(_:);
    v47 = type metadata accessor for Text.Case(0);
    v48 = *(_QWORD *)(v47 - 8);
    v49 = (uint64_t)v134;
    (*(void (**)(char *, uint64_t, uint64_t))(v48 + 104))(v134, v46, v47);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v48 + 56))(v49, 0, 1, v47);
    KeyPath = swift_getKeyPath(&unk_100EF11F8);
    v51 = v136;
    sub_10004A160(v49, (uint64_t)v136 + *(int *)(v132 + 28), &qword_1011E0E60);
    *v51 = KeyPath;
    v52 = (uint64_t)v130;
    sub_10004A160((uint64_t)v51, (uint64_t)&v130[*(int *)(v127 + 36)], &qword_1011E0E58);
    *(_QWORD *)v52 = v39;
    *(_QWORD *)(v52 + 8) = v41;
    *(_BYTE *)(v52 + 16) = v45;
    *(_QWORD *)(v52 + 24) = v43;
    sub_100055BBC(v39, v41, v45);
    swift_bridgeObjectRetain();
    sub_10004FF60((uint64_t)v51, &qword_1011E0E58);
    sub_10004FF60(v49, &qword_1011E0E60);
    sub_100055BAC(v39, v41, v45);
    swift_bridgeObjectRelease();
    v54 = static Font.footnote.getter(v53);
    v55 = swift_getKeyPath(&unk_100EF1228);
    v56 = v131;
    sub_10004A160(v52, v131, &qword_1011E0E68);
    v57 = (uint64_t *)(v56 + *(int *)(v128 + 36));
    *v57 = v55;
    v57[1] = v54;
    v58 = sub_10004FF60(v52, &qword_1011E0E68);
    v59 = static Color.secondary.getter(v58);
    v60 = swift_getKeyPath(&unk_100EF1198);
    v61 = v133;
    sub_10004A160(v56, v133, &qword_1011E0E70);
    v62 = (uint64_t *)(v61 + *(int *)(v129 + 36));
    *v62 = v60;
    v62[1] = v59;
    v63 = sub_10004FF60(v56, &qword_1011E0E70);
    v64 = static Alignment.leading.getter(v63);
    v65 = v137;
    sub_100C87CD4(0, 1, 0.0, 1, INFINITY, 0, 0, 1, v137, v67, 0.0, 1, 0.0, 1, v64, v66);
    v68 = sub_10004FF60(v61, (uint64_t *)&unk_1011E4CF0);
    LOBYTE(v59) = static Edge.Set.horizontal.getter(v68);
    v69 = EdgeInsets.init(_all:)(12.0);
    v71 = v70;
    v73 = v72;
    v75 = v74;
    v76 = v135;
    sub_10004A160(v65, v135, &qword_1011E47E8);
    v31 = v146;
    v77 = v76 + *(int *)(v146 + 36);
    *(_BYTE *)v77 = v59;
    *(double *)(v77 + 8) = v69;
    *(_QWORD *)(v77 + 16) = v71;
    *(_QWORD *)(v77 + 24) = v73;
    *(_QWORD *)(v77 + 32) = v75;
    *(_BYTE *)(v77 + 40) = 0;
    sub_10004FF60(v65, &qword_1011E47E8);
    v78 = v76;
    v27 = v153;
    sub_100065228(v78, (uint64_t)v153, &qword_1011E47F0);
    v28 = 0;
    v30 = v149;
    v29 = v150;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v145 + 56))(v27, v28, 1, v31);
  swift_retain();
  sub_100C8C898(v79, &v184);
  sub_10005B704(v143, (uint64_t)v24, type metadata accessor for Collaboration.Flow);
  v80 = (uint64_t)v144;
  swift_storeEnumTagMultiPayload(v144, v147, 2);
  v81 = _s9MusicCore13CollaborationO0aB2UIE4FlowO21__derived_enum_equalsySbAF_AFtFZ_0((uint64_t)v24, v80);
  sub_10005B748(v80, type metadata accessor for Collaboration.Flow);
  sub_10005B748((uint64_t)v24, type metadata accessor for Collaboration.Flow);
  if ((v81 & 1) != 0)
  {
    sub_100C85DF8((uint64_t)v161);
    sub_100065228((uint64_t)v161, (uint64_t)&v182, &qword_1011E4800);
  }
  else
  {
    v82 = v139;
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000054, 0x8000000100E57350);
    v83 = v140;
    v84 = v138;
    v85 = v148;
    (*(void (**)(char *, char *, uint64_t))(v140 + 16))(v138, v82, v148);
    if (qword_1011DDE30 != -1)
      swift_once(&qword_1011DDE30, sub_100BA7618);
    v86 = qword_10124F040;
    v87 = (id)qword_10124F040;
    v88 = v141;
    static Locale.current.getter(v87);
    v89 = String.init(localized:table:bundle:locale:comment:)(v84, 0, 0, v86, v88, 0, 0, 256);
    v91 = v90;
    (*(void (**)(char *, uint64_t))(v83 + 8))(v82, v85);
    v182 = v89;
    v183 = v91;
    v92 = sub_100BBF2FC();
    v93 = Text.init<A>(_:)(&v182, &type metadata for String, v92);
    v95 = v94;
    v97 = v96;
    v152 = v98;
    v150 = swift_getKeyPath(&unk_100EF1258);
    v99 = static Font.footnote.getter(v150);
    v100 = v142;
    (*(void (**)(char *, _QWORD, uint64_t))(v30 + 104))(v142, enum case for Font.Leading.tight(_:), v29);
    v101 = Font.leading(_:)(v100, v99);
    v102 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v30 + 8))(v100, v29, v102);
    v103 = swift_getKeyPath(&unk_100EF1228);
    v104 = static Color.secondary.getter(v103);
    v105 = swift_getKeyPath(&unk_100EF1198);
    LOBYTE(v100) = static Edge.Set.horizontal.getter(v105);
    v106 = EdgeInsets.init(_all:)(12.0);
    v160 = v97 & 1;
    v157 = 0;
    v161[0] = v93;
    v161[1] = v95;
    v162 = v97 & 1;
    *(_DWORD *)v163 = *(_DWORD *)v156;
    *(_DWORD *)&v163[3] = *(_DWORD *)&v156[3];
    v164 = v152;
    v165 = 256;
    v166 = *(_DWORD *)&v158[7];
    v167 = v159;
    v168 = v150;
    v169 = 1;
    *(_DWORD *)&v170[3] = *(_DWORD *)&v155[3];
    *(_DWORD *)v170 = *(_DWORD *)v155;
    v171 = v103;
    v172 = v101;
    v173 = v105;
    v174 = v104;
    v175 = (char)v100;
    *(_DWORD *)&v176[3] = *(_DWORD *)&v158[3];
    *(_DWORD *)v176 = *(_DWORD *)v158;
    v177 = v106;
    v178 = v107;
    v179 = v108;
    v180 = v109;
    v181 = 0;
    UIScreen.Dimensions.size.getter(v161);
    sub_100065228((uint64_t)v161, (uint64_t)&v182, &qword_1011E4800);
    v27 = v153;
  }
  v110 = v154;
  sub_10004A160((uint64_t)v27, v154, &qword_1011E47F8);
  v111 = v184.n128_u64[1];
  v112 = v185;
  v113 = v186;
  v114 = v187;
  v115 = v188;
  v116 = v189;
  v117 = v191;
  v152 = v190;
  v118 = v193;
  v148 = v192;
  v149 = v184.n128_u64[0];
  sub_100065228((uint64_t)&v182, (uint64_t)v155, &qword_1011E4800);
  v119 = v110;
  v120 = v151;
  sub_10004A160(v119, v151, &qword_1011E47F8);
  v121 = sub_100007E8C(&qword_1011E4808);
  v122 = v120 + *(int *)(v121 + 48);
  *(_QWORD *)v122 = v149;
  *(_QWORD *)(v122 + 8) = v111;
  v150 = v111;
  *(_BYTE *)(v122 + 16) = v112 & 1;
  *(_QWORD *)(v122 + 24) = v113;
  *(_BYTE *)(v122 + 32) = v114 & 1;
  *(_QWORD *)(v122 + 40) = v115;
  *(_BYTE *)(v122 + 48) = v116 & 1;
  *(_QWORD *)(v122 + 56) = v152;
  *(_QWORD *)(v122 + 64) = v117;
  v123 = (void *)v148;
  *(_QWORD *)(v122 + 72) = v148;
  *(_QWORD *)(v122 + 80) = v118;
  v124 = v120 + *(int *)(v121 + 64);
  sub_100065228((uint64_t)v155, (uint64_t)v156, &qword_1011E4800);
  sub_100065228((uint64_t)v156, v124, &qword_1011E4800);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1004FF974(v117, v123);
  swift_retain();
  sub_100C85D1C((uint64_t)v156, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_100C85CA4);
  sub_10004FF60((uint64_t)v153, &qword_1011E47F8);
  sub_100065228((uint64_t)v155, (uint64_t)v161, &qword_1011E4800);
  sub_100C85D1C((uint64_t)v161, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_100C85D80);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1004FFB58(v117, v123);
  swift_release();
  return sub_10004FF60(v154, &qword_1011E47F8);
}

uint64_t sub_100C7F9AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100C7F9C4(a1, 0x4018000000000000, &qword_1011E47E0, (uint64_t (*)(uint64_t))sub_100C7ED98, a2);
}

uint64_t sub_100C7F9C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X3>, uint64_t (*a4)(uint64_t)@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5;

  *(_QWORD *)a5 = static HorizontalAlignment.center.getter(a1);
  *(_QWORD *)(a5 + 8) = a2;
  *(_BYTE *)(a5 + 16) = 0;
  sub_100007E8C(a3);
  return a4(v5);
}

uint64_t sub_100C7FA20@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t KeyPath;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  unint64_t v44;
  char *v45;
  double v46;
  double *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  int v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  double *v80;
  uint64_t v81;
  uint64_t v82;
  char v83[16];
  uint64_t v84;
  _OWORD v85[7];

  v2 = v1;
  v82 = a1;
  v74 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin();
  v80 = (double *)((char *)&v71 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v79 = sub_100007E8C(&qword_1011E4760);
  __chkstk_darwin();
  v81 = (uint64_t)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C((uint64_t *)&unk_1011E4CE0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011E4768);
  __chkstk_darwin();
  v10 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011E4770);
  __chkstk_darwin();
  v13 = (char *)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_100007E8C(&qword_1011E4778);
  __chkstk_darwin();
  v15 = (char *)&v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = sub_100007E8C(&qword_1011E4780);
  v77 = *(_QWORD *)(v78 - 8);
  __chkstk_darwin();
  v76 = (char *)&v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = sub_100007E8C(&qword_1011E4788);
  __chkstk_darwin();
  v75 = (char *)&v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = swift_allocObject(&unk_10110BE98, 81, 7);
  v19 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v18 + 48) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v18 + 64) = v19;
  *(_BYTE *)(v18 + 80) = *(_BYTE *)(v2 + 64);
  v20 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v18 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v18 + 32) = v20;
  v84 = v2;
  sub_100C858F8(v2);
  v21 = sub_100007E8C(&qword_1011E4790);
  v22 = sub_100C8595C();
  v23 = Button.init(action:label:)(sub_100C858E8, v18, sub_100C858F0, v83, v21, v22);
  v24 = static Alignment.center.getter(v23);
  v27 = sub_100C87D2C(0, 1, 0.0, 1, INFINITY, 0, 0, 1, (uint64_t)v10, v26, 0.0, 1, 0.0, 1, v24, v25);
  v28 = (*(uint64_t (**)(char *, uint64_t, double))(v6 + 8))(v8, v5, v27);
  v30 = *(_BYTE *)(v2 + 16);
  if ((v30 & 1) != 0)
    v31 = static Color.accentColor.getter(v28, v29);
  else
    v31 = static Color.white.getter(v28);
  v32 = v31;
  KeyPath = swift_getKeyPath(&unk_100EF1198);
  sub_10004A160((uint64_t)v10, (uint64_t)v13, &qword_1011E4768);
  v34 = (uint64_t *)&v13[*(int *)(v11 + 36)];
  *v34 = KeyPath;
  v34[1] = v32;
  v35 = sub_10004FF60((uint64_t)v10, &qword_1011E4768);
  if (qword_1011DE1E8 != -1)
    v35 = swift_once(&qword_1011DE1E8, sub_100C80494);
  v36 = qword_1011E4460;
  v37 = static Alignment.center.getter(v35);
  LOBYTE(v70) = 1;
  LOBYTE(v69) = 1;
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v85, 0, 1, 0, 1, 0, 1, v36, 0, 0, v69, 0, v70, v37, v38);
  sub_10004A160((uint64_t)v13, (uint64_t)v15, &qword_1011E4770);
  v39 = v72;
  v40 = &v15[*(int *)(v72 + 36)];
  v41 = v85[5];
  *((_OWORD *)v40 + 4) = v85[4];
  *((_OWORD *)v40 + 5) = v41;
  *((_OWORD *)v40 + 6) = v85[6];
  v42 = v85[1];
  *(_OWORD *)v40 = v85[0];
  *((_OWORD *)v40 + 1) = v42;
  v43 = v85[3];
  *((_OWORD *)v40 + 2) = v85[2];
  *((_OWORD *)v40 + 3) = v43;
  sub_10004FF60((uint64_t)v13, &qword_1011E4770);
  v44 = sub_100C85A84();
  v45 = v76;
  View.bold(_:)(1, v39, v44);
  sub_10004FF60((uint64_t)v15, &qword_1011E4778);
  v46 = *(double *)&qword_1011E4460 * 0.5;
  v47 = v80;
  v48 = (char *)v80 + *(int *)(v74 + 20);
  v49 = enum case for RoundedCornerStyle.continuous(_:);
  v50 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 104))(v48, v49, v50);
  *v47 = v46;
  v47[1] = v46;
  v51 = *(_QWORD *)(v2 + 56);
  LOBYTE(v49) = *(_BYTE *)(v2 + 64);
  sub_10006B3F8(v51, v49);
  LOBYTE(v39) = sub_100C31844(v51, v49);
  v52 = sub_10006B604(v51, v49);
  if ((v39 & 1) != 0)
  {
    if ((v30 & 1) != 0)
      v54 = static Color.clear.getter(v52);
    else
      v54 = static Color.accentColor.getter(v52, v53);
  }
  else
  {
    v55 = objc_msgSend((id)objc_opt_self(UIColor), "systemFillColor");
    v54 = Color.init(_:)(v55);
  }
  v56 = v54;
  v57 = v81;
  sub_10005B704((uint64_t)v47, v81, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v58 = v79;
  *(_QWORD *)(v57 + *(int *)(v79 + 52)) = v56;
  *(_WORD *)(v57 + *(int *)(v58 + 56)) = 256;
  v59 = sub_10005B748((uint64_t)v47, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v60 = static Alignment.center.getter(v59);
  v62 = v61;
  v63 = (uint64_t)v75;
  v64 = (uint64_t)&v75[*(int *)(v73 + 36)];
  sub_10004A160(v57, v64, &qword_1011E4760);
  v65 = (uint64_t *)(v64 + *(int *)(sub_100007E8C(&qword_1011E47D0) + 36));
  *v65 = v60;
  v65[1] = v62;
  v66 = v77;
  v67 = v78;
  (*(void (**)(uint64_t, char *, uint64_t))(v77 + 16))(v63, v45, v78);
  sub_10004FF60(v57, &qword_1011E4760);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v45, v67);
  return sub_100065228(v63, v82, &qword_1011E4788);
}

uint64_t sub_100C800C0(uint64_t a1)
{
  uint64_t v2;
  char v4;
  __int128 v5;

  v5 = *(_OWORD *)(a1 + 40);
  v4 = 1;
  v2 = sub_100007E8C(&qword_1011E1B98);
  State.wrappedValue.setter(&v4, v2);
  return (*(uint64_t (**)(uint64_t))(a1 + 24))(a1);
}

uint64_t sub_100C8011C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  _QWORD v46[2];
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  _OWORD v57[10];

  v46[1] = a2;
  v46[0] = sub_100007E8C(&qword_1011E47D8);
  __chkstk_darwin();
  v4 = (_OWORD *)((char *)v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_100007E8C(&qword_1011E3A88);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_100007E8C(&qword_1011E47A8);
  __chkstk_darwin();
  v10 = (char *)v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v12 = (char *)v46 - v11;
  v57[0] = *(_OWORD *)(a1 + 40);
  v13 = sub_100007E8C(&qword_1011E1B98);
  State.wrappedValue.getter(&v48, v13);
  if (v48 == 1)
  {
    v15 = ProgressView<>.init<>()(v14);
    v16 = static Color.white.getter(v15);
    KeyPath = swift_getKeyPath(&unk_100EF11C8);
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v10, v8, v5);
    v18 = (uint64_t *)&v10[*(int *)(v47 + 36)];
    *v18 = KeyPath;
    v18[1] = v16;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_100065228((uint64_t)v10, (uint64_t)v12, &qword_1011E47A8);
    sub_10004A160((uint64_t)v12, (uint64_t)v4, &qword_1011E47A8);
    swift_storeEnumTagMultiPayload(v4, v46[0], 0);
    v19 = sub_100007E8C(&qword_1011E3FD0);
    v20 = sub_100C859E0();
    v21 = sub_1003ACA30(&qword_1011E3FC8, &qword_1011E3FD0);
    _ConditionalContent<>.init(storage:)(v4, v47, v19, v20, v21);
    return sub_10004FF60((uint64_t)v12, &qword_1011E47A8);
  }
  else
  {
    v23 = *(_QWORD *)(a1 + 8);
    *(_QWORD *)&v57[0] = *(_QWORD *)a1;
    *((_QWORD *)&v57[0] + 1) = v23;
    v24 = sub_100BBF2FC();
    swift_bridgeObjectRetain();
    v25 = Text.init<A>(_:)(v57, &type metadata for String, v24);
    v27 = v26;
    v29 = v28;
    v31 = v30 & 1;
    v32 = static Alignment.center.getter(v25);
    sub_100149C8C(0, 1, 0.0, 1, INFINITY, 0, 0, 1, (uint64_t)&v48, v34, 0.0, 1, 0.0, 1, v32, v33, v25, v27, v31, v29);
    sub_100055BAC(v25, v27, v31);
    swift_bridgeObjectRelease();
    v35 = v55;
    v57[6] = v54;
    v57[7] = v55;
    v36 = v56;
    v57[8] = v56;
    v37 = v50;
    v38 = v51;
    v57[2] = v50;
    v57[3] = v51;
    v40 = v52;
    v39 = v53;
    v57[4] = v52;
    v57[5] = v53;
    v42 = v48;
    v41 = v49;
    v57[0] = v48;
    v57[1] = v49;
    v4[6] = v54;
    v4[7] = v35;
    v4[8] = v36;
    v4[2] = v37;
    v4[3] = v38;
    v4[4] = v40;
    v4[5] = v39;
    *v4 = v42;
    v4[1] = v41;
    swift_storeEnumTagMultiPayload(v4, v46[0], 1);
    v43 = sub_100007E8C(&qword_1011E3FD0);
    v44 = sub_100C859E0();
    v45 = sub_1003ACA30(&qword_1011E3FC8, &qword_1011E3FD0);
    return _ConditionalContent<>.init(storage:)(v4, v47, v43, v44, v45);
  }
}

void sub_100C80494()
{
  id v0;
  id v1;
  double v2;

  v0 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  v1 = objc_msgSend(v0, "userInterfaceIdiom");

  v2 = 50.0;
  if (v1 == (id)6)
    v2 = 44.0;
  qword_1011E4460 = *(_QWORD *)&v2;
}

uint64_t sub_100C80504@<X0>(uint64_t a1@<X8>)
{
  return sub_100C7FA20(a1);
}

void sub_100C80544()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  v1 = objc_msgSend(v0, "userInterfaceIdiom");

  byte_1011E4468 = v1 == (id)6;
}

uint64_t sub_100C805A4()
{
  double v0;
  uint64_t result;

  if (qword_1011DE1F0 != -1)
    result = swift_once(&qword_1011DE1F0, sub_100C80544);
  v0 = 180.0;
  if (byte_1011E4468)
    v0 = 140.0;
  qword_1011E4470 = *(_QWORD *)&v0;
  return result;
}

uint64_t sub_100C8060C()
{
  double v0;
  uint64_t result;

  if (qword_1011DE1F0 != -1)
    result = swift_once(&qword_1011DE1F0, sub_100C80544);
  v0 = 24.0;
  if (byte_1011E4468)
    v0 = 16.0;
  qword_1011E4478 = *(_QWORD *)&v0;
  return result;
}

uint64_t sub_100C80664(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;

  v1 = type metadata accessor for Font.Leading(0, a1);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin();
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1011DE1F0 != -1)
    v3 = swift_once(&qword_1011DE1F0, sub_100C80544);
  if (byte_1011E4468 == 1)
  {
    result = static Font.subheadline.getter(v3);
    v7 = result;
  }
  else
  {
    v8 = static Font.body.getter(v3);
    (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v5, enum case for Font.Leading.tight(_:), v1);
    v7 = Font.leading(_:)(v5, v8);
    v9 = swift_release();
    result = (*(uint64_t (**)(char *, uint64_t, __n128))(v2 + 8))(v5, v1, v9);
  }
  qword_1011E4480 = v7;
  return result;
}

uint64_t sub_100C80760()
{
  uint64_t v0;
  char *v1;
  double v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  sub_100007E8C(&qword_1011E1C98);
  __chkstk_darwin();
  v1 = (char *)&v6 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1011DE1F0 != -1)
    swift_once(&qword_1011DE1F0, sub_100C80544);
  if (byte_1011E4468)
    v2 = 58.0;
  else
    v2 = 52.0;
  v3 = type metadata accessor for Font.Design(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v1, 1, 1, v3);
  v4 = static Font.system(size:weight:design:)(0, 1, v1, v2);
  result = sub_10004FF60((uint64_t)v1, &qword_1011E1C98);
  qword_1011E4488 = v4;
  return result;
}

uint64_t sub_100C80858()
{
  double v0;
  uint64_t result;

  if (qword_1011DE1F0 != -1)
    result = swift_once(&qword_1011DE1F0, sub_100C80544);
  v0 = 6.0;
  if (byte_1011E4468)
    v0 = 9.0;
  qword_1011E4490 = *(_QWORD *)&v0;
  return result;
}

uint64_t ICMusicUserProfile.collaborator.getter@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  __n128 v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;

  v2 = v1;
  v36 = a1;
  v3 = type metadata accessor for Collaboration.Flow.Collaborator(0);
  __chkstk_darwin(v3);
  v5 = (uint64_t *)((char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_100007E8C((uint64_t *)&unk_1011E4A00);
  __chkstk_darwin(v6);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v33 - v10;
  v12 = type metadata accessor for Artwork(0);
  v34 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
  v35 = v12;
  v34(v11, 1, 1);
  v13 = objc_msgSend(v2, "artworkInfo");
  if (v13)
  {
    v14 = v13;
    v15 = objc_msgSend(v13, "responseDictionary");

    if (v15)
    {
      v16 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v15, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

      v17 = sub_100C80B60(v16);
      v18 = swift_bridgeObjectRelease();
      if (v17)
      {
        Artwork.init(_:)(v17, v18);
        sub_10004FF60((uint64_t)v11, (uint64_t *)&unk_1011E4A00);
        sub_100065228((uint64_t)v8, (uint64_t)v11, (uint64_t *)&unk_1011E4A00);
      }
    }
  }
  v19 = objc_msgSend(v2, "name");
  v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  v21 = v20;

  v22 = objc_msgSend(v2, "handle");
  if (v22)
  {
    v23 = v22;
    v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
    v26 = v25;

  }
  else
  {
    v24 = 0;
    v26 = 0;
  }
  sub_10004A160((uint64_t)v11, (uint64_t)v8, (uint64_t *)&unk_1011E4A00);
  v27 = objc_msgSend(v2, "collaborationAllowed");
  v28 = (uint64_t)v8;
  v29 = v3;
  v30 = (uint64_t)v5 + *(int *)(v3 + 24);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v34)(v30, 1, 1, v35);
  v31 = *(int *)(v29 + 28);
  *((_BYTE *)v5 + v31) = 0;
  *v5 = v33;
  v5[1] = v21;
  v5[2] = v24;
  v5[3] = v26;
  sub_100C77F00(v28, v30);
  *((_BYTE *)v5 + v31) = v27;
  sub_10005B6C0((uint64_t)v5, v36, type metadata accessor for Collaboration.Flow.Collaborator);
  return sub_10004FF60((uint64_t)v11, (uint64_t *)&unk_1011E4A00);
}

unint64_t sub_100C80B60(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t result;
  int64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD v29[2];
  _OWORD v30[2];
  __int128 v31;
  _OWORD v32[2];
  _OWORD v33[2];
  _OWORD v34[2];
  _OWORD v35[2];
  uint64_t v36;
  _OWORD v37[2];
  _OWORD v38[2];
  uint64_t v39;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_100007E8C(&qword_1011E4810);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v26 = a1 + 64;
  v4 = -1;
  v5 = -1 << *(_BYTE *)(a1 + 32);
  if (-v5 < 64)
    v4 = ~(-1 << -(char)v5);
  v6 = v4 & *(_QWORD *)(a1 + 64);
  v25 = (unint64_t)(63 - v5) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v11 = (v6 - 1) & v6;
      v12 = __clz(__rbit64(v6)) | (v8 << 6);
      v13 = v8;
    }
    else
    {
      v14 = v8 + 1;
      if (__OFADD__(v8, 1))
        goto LABEL_37;
      if (v14 >= v25)
      {
LABEL_33:
        sub_10004FA7C(a1);
        return (unint64_t)v3;
      }
      v15 = *(_QWORD *)(v26 + 8 * v14);
      v13 = v8 + 1;
      if (!v15)
      {
        v13 = v8 + 2;
        if (v8 + 2 >= v25)
          goto LABEL_33;
        v15 = *(_QWORD *)(v26 + 8 * v13);
        if (!v15)
        {
          v13 = v8 + 3;
          if (v8 + 3 >= v25)
            goto LABEL_33;
          v15 = *(_QWORD *)(v26 + 8 * v13);
          if (!v15)
          {
            v13 = v8 + 4;
            if (v8 + 4 >= v25)
              goto LABEL_33;
            v15 = *(_QWORD *)(v26 + 8 * v13);
            if (!v15)
            {
              v16 = v8 + 5;
              if (v8 + 5 >= v25)
                goto LABEL_33;
              v15 = *(_QWORD *)(v26 + 8 * v16);
              if (!v15)
              {
                while (1)
                {
                  v13 = v16 + 1;
                  if (__OFADD__(v16, 1))
                    goto LABEL_38;
                  if (v13 >= v25)
                    goto LABEL_33;
                  v15 = *(_QWORD *)(v26 + 8 * v13);
                  ++v16;
                  if (v15)
                    goto LABEL_26;
                }
              }
              v13 = v8 + 5;
            }
          }
        }
      }
LABEL_26:
      v11 = (v15 - 1) & v15;
      v12 = __clz(__rbit64(v15)) + (v13 << 6);
    }
    sub_100051FEC(*(_QWORD *)(a1 + 48) + 40 * v12, (uint64_t)v37);
    sub_10004FA40(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v38 + 8);
    v35[0] = v38[0];
    v35[1] = v38[1];
    v36 = v39;
    v34[0] = v37[0];
    v34[1] = v37[1];
    sub_100051FEC((uint64_t)v34, (uint64_t)v29);
    if (!swift_dynamicCast(&v27, v29, &type metadata for AnyHashable, &type metadata for String, 6))
    {
      v27 = 0;
      v28 = 0;
      sub_10004FF60((uint64_t)v34, &qword_1011E4818);
      swift_bridgeObjectRelease(v28);
      sub_10004FA7C(a1);
      swift_release();
      return 0;
    }
    v17 = v27;
    v18 = v28;
    sub_10004FA40((uint64_t)v35 + 8, (uint64_t)v29);
    sub_10004FF60((uint64_t)v34, &qword_1011E4818);
    sub_100048ABC(v29, v30);
    *(_QWORD *)&v31 = v17;
    *((_QWORD *)&v31 + 1) = v18;
    sub_100048ABC(v30, v32);
    v19 = v31;
    sub_100048ABC(v32, v33);
    sub_100048ABC(v33, &v31);
    result = sub_10079C2C4(v19, *((uint64_t *)&v19 + 1));
    v20 = result;
    if ((v21 & 1) != 0)
    {
      v9 = v3[6] + 16 * result;
      swift_bridgeObjectRelease(*(_QWORD *)(v9 + 8));
      *(_OWORD *)v9 = v19;
      v10 = (_QWORD *)(v3[7] + 32 * v20);
      _s5Music18DragDropToPlaylistV6OriginVwxx_0(v10);
      result = (unint64_t)sub_100048ABC(&v31, v10);
      goto LABEL_8;
    }
    if (v3[2] >= v3[3])
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_OWORD *)(v3[6] + 16 * result) = v19;
    result = (unint64_t)sub_100048ABC(&v31, (_OWORD *)(v3[7] + 32 * result));
    v22 = v3[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
      goto LABEL_36;
    v3[2] = v24;
LABEL_8:
    v8 = v13;
    v6 = v11;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t _s9MusicCore13CollaborationO0aB2UIE4FlowO21__derived_enum_equalsySbAF_AFtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  int EnumCaseMultiPayload;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  char v30;
  void (*v31)(_BYTE *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  int v38;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int (*v49)(uint64_t, uint64_t, uint64_t);
  uint64_t v50;
  _QWORD *v51;
  void (*v52)(uint64_t, uint64_t);
  _QWORD *v53;
  char v54;
  char v55;
  void (*v56)(uint64_t, uint64_t);
  char v57;
  _BYTE v58[12];
  int v59;
  _BYTE *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _BYTE *v64;
  _BYTE *v65;
  _BYTE *v66;
  _BYTE *v67;
  uint64_t v68;
  uint64_t v69;
  _BYTE *v70;
  _BYTE *v71;

  v70 = (_BYTE *)a1;
  v71 = (_BYTE *)a2;
  v2 = type metadata accessor for Playlist.Collaborator(0);
  v66 = *(_BYTE **)(v2 - 8);
  v67 = (_BYTE *)v2;
  __chkstk_darwin();
  v65 = &v58[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Collaboration.Flow.Collaborator(0);
  v62 = *(_QWORD *)(v4 - 8);
  v63 = v4;
  __chkstk_darwin();
  v60 = &v58[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v61 = sub_100007E8C(&qword_1011E4820);
  __chkstk_darwin();
  v64 = &v58[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for URL(0);
  v8 = *(_QWORD *)(v7 - 8);
  v68 = v7;
  v69 = v8;
  __chkstk_darwin();
  v10 = &v58[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  v12 = &v58[-v11];
  sub_100007E8C(&qword_1011E44B0);
  __chkstk_darwin();
  v14 = &v58[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  v16 = &v58[-v15];
  v17 = type metadata accessor for Collaboration.Flow(0);
  __chkstk_darwin();
  v19 = &v58[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  v21 = &v58[-v20];
  sub_100007E8C(&qword_1011E4828);
  __chkstk_darwin();
  v23 = &v58[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v25 = (uint64_t)&v23[*(int *)(v24 + 48)];
  sub_10005B704((uint64_t)v70, (uint64_t)v23, type metadata accessor for Collaboration.Flow);
  sub_10005B704((uint64_t)v71, v25, type metadata accessor for Collaboration.Flow);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v23, v17);
  if (!EnumCaseMultiPayload)
  {
    v66 = v14;
    v67 = v16;
    v70 = v10;
    v71 = v12;
    v33 = v68;
    v32 = v69;
    sub_10005B704((uint64_t)v23, (uint64_t)v21, type metadata accessor for Collaboration.Flow);
    v34 = sub_100007E8C(&qword_1011E44A8);
    v35 = *(int *)(v34 + 48);
    v36 = &v21[v35];
    v37 = *(int *)(v34 + 64);
    v38 = v21[v37];
    if (swift_getEnumCaseMultiPayload(v25, v17))
    {
      (*(void (**)(_BYTE *, uint64_t))(v32 + 8))(&v21[v35], v33);
      sub_10004FF60((uint64_t)v21, &qword_1011E44B0);
LABEL_10:
      sub_10004FF60((uint64_t)v23, &qword_1011E4828);
LABEL_11:
      v30 = 0;
      return v30 & 1;
    }
    LODWORD(v65) = v38;
    v40 = (_BYTE *)(v25 + v35);
    v59 = *(unsigned __int8 *)(v25 + v37);
    v41 = (uint64_t)v67;
    sub_100065228(v25, (uint64_t)v67, &qword_1011E44B0);
    v42 = v32;
    v43 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v32 + 32);
    v44 = v33;
    v43(v71, v36, v33);
    v45 = (uint64_t)v70;
    v43(v70, v40, v44);
    v46 = v64;
    v47 = (uint64_t)&v64[*(int *)(v61 + 48)];
    sub_100065228((uint64_t)v21, (uint64_t)v64, &qword_1011E44B0);
    sub_10004A160(v41, v47, &qword_1011E44B0);
    v48 = v63;
    v49 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48);
    if (v49((uint64_t)v46, 1, v63) == 1)
    {
      if (v49(v47, 1, v48) == 1)
      {
        sub_10004FF60((uint64_t)v46, &qword_1011E44B0);
        v50 = (uint64_t)v71;
        goto LABEL_21;
      }
    }
    else
    {
      v51 = v66;
      sub_10004A160((uint64_t)v46, (uint64_t)v66, &qword_1011E44B0);
      if (v49(v47, 1, v48) != 1)
      {
        v53 = v60;
        sub_10005B6C0(v47, (uint64_t)v60, type metadata accessor for Collaboration.Flow.Collaborator);
        v54 = _s9MusicCore13CollaborationO0aB2UIE4FlowO12CollaboratorV23__derived_struct_equalsySbAH_AHtFZ_0(v51, v53);
        sub_10005B748((uint64_t)v53, type metadata accessor for Collaboration.Flow.Collaborator);
        sub_10005B748((uint64_t)v51, type metadata accessor for Collaboration.Flow.Collaborator);
        sub_10004FF60((uint64_t)v46, &qword_1011E44B0);
        v50 = (uint64_t)v71;
        if ((v54 & 1) != 0)
        {
LABEL_21:
          v55 = static URL.== infix(_:_:)(v50, v45);
          v56 = *(void (**)(uint64_t, uint64_t))(v42 + 8);
          v56(v45, v44);
          v56(v50, v44);
          sub_10004FF60(v41, &qword_1011E44B0);
          if ((v55 & 1) != 0)
          {
            v57 = v65 ^ v59;
            sub_10005B748((uint64_t)v23, type metadata accessor for Collaboration.Flow);
            v30 = v57 ^ 1;
            return v30 & 1;
          }
          goto LABEL_23;
        }
LABEL_19:
        v52 = *(void (**)(uint64_t, uint64_t))(v42 + 8);
        v52(v45, v44);
        v52(v50, v44);
        sub_10004FF60(v41, &qword_1011E44B0);
LABEL_23:
        sub_10005B748((uint64_t)v23, type metadata accessor for Collaboration.Flow);
        goto LABEL_11;
      }
      sub_10005B748((uint64_t)v51, type metadata accessor for Collaboration.Flow.Collaborator);
    }
    sub_10004FF60((uint64_t)v46, &qword_1011E4820);
    v50 = (uint64_t)v71;
    goto LABEL_19;
  }
  if (EnumCaseMultiPayload != 1)
  {
    if (swift_getEnumCaseMultiPayload(v25, v17) == 2)
    {
      sub_10005B748((uint64_t)v23, type metadata accessor for Collaboration.Flow);
      v30 = 1;
      return v30 & 1;
    }
    goto LABEL_10;
  }
  sub_10005B704((uint64_t)v23, (uint64_t)v19, type metadata accessor for Collaboration.Flow);
  if (swift_getEnumCaseMultiPayload(v25, v17) != 1)
  {
    (*((void (**)(_BYTE *, _BYTE *))v66 + 1))(v19, v67);
    goto LABEL_10;
  }
  v28 = v65;
  v27 = (uint64_t)v66;
  v29 = (uint64_t)v67;
  (*((void (**)(_BYTE *, uint64_t, _BYTE *))v66 + 4))(v65, v25, v67);
  v30 = static Playlist.Collaborator.== infix(_:_:)(v19, v28);
  v31 = *(void (**)(_BYTE *, uint64_t))(v27 + 8);
  v31(v28, v29);
  v31(v19, v29);
  sub_10005B748((uint64_t)v23, type metadata accessor for Collaboration.Flow);
  return v30 & 1;
}

uint64_t _s9MusicCore13CollaborationO0aB2UIE4FlowO12CollaboratorV23__derived_struct_equalsySbAH_AHtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  void (*v35)(_BYTE *, uint64_t);
  _BYTE v37[4];
  int v38;
  _BYTE *v39;
  uint64_t v40;
  _BYTE *v41;

  v4 = type metadata accessor for Artwork(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = &v37[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_100007E8C(&qword_1011DF428);
  __chkstk_darwin();
  v10 = &v37[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100007E8C((uint64_t *)&unk_1011E4A00);
  __chkstk_darwin();
  v12 = &v37[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  v14 = &v37[-v13];
  __chkstk_darwin();
  v16 = &v37[-v15];
  v17 = a1[1];
  v18 = a2[1];
  if (*a1 == *a2 && v17 == v18
    || (v19 = _stringCompareWithSmolCheck(_:_:expecting:)(*a1, v17, *a2, v18, 0), v20 = 0, (v19 & 1) != 0))
  {
    v21 = a1[3];
    v22 = a2[3];
    if (v21)
    {
      if (!v22)
        goto LABEL_19;
      v23 = a1[2];
      v24 = a2[2];
      if (v23 != v24 || v21 != v22)
      {
        v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v23, v21, v24, v22, 0);
        v20 = 0;
        if ((v25 & 1) == 0)
          return v20 & 1;
      }
    }
    else if (v22)
    {
      goto LABEL_19;
    }
    v41 = v12;
    v39 = v7;
    v26 = v5;
    v27 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    sub_10004A160((uint64_t)a1 + *(int *)(v27 + 24), (uint64_t)v16, (uint64_t *)&unk_1011E4A00);
    v40 = v27;
    v28 = *(int *)(v27 + 24);
    v29 = v26;
    sub_10004A160((uint64_t)a2 + v28, (uint64_t)v14, (uint64_t *)&unk_1011E4A00);
    v30 = (uint64_t)&v10[*(int *)(v8 + 48)];
    sub_10004A160((uint64_t)v16, (uint64_t)v10, (uint64_t *)&unk_1011E4A00);
    sub_10004A160((uint64_t)v14, v30, (uint64_t *)&unk_1011E4A00);
    v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
    if (v31((uint64_t)v10, 1, v4) == 1)
    {
      sub_10004FF60((uint64_t)v14, (uint64_t *)&unk_1011E4A00);
      sub_10004FF60((uint64_t)v16, (uint64_t *)&unk_1011E4A00);
      if (v31(v30, 1, v4) == 1)
      {
        sub_10004FF60((uint64_t)v10, (uint64_t *)&unk_1011E4A00);
LABEL_18:
        v20 = *((_BYTE *)a1 + *(int *)(v40 + 28)) ^ *((_BYTE *)a2 + *(int *)(v40 + 28)) ^ 1;
        return v20 & 1;
      }
      goto LABEL_16;
    }
    v32 = (uint64_t)v41;
    sub_10004A160((uint64_t)v10, (uint64_t)v41, (uint64_t *)&unk_1011E4A00);
    if (v31(v30, 1, v4) == 1)
    {
      sub_10004FF60((uint64_t)v14, (uint64_t *)&unk_1011E4A00);
      sub_10004FF60((uint64_t)v16, (uint64_t *)&unk_1011E4A00);
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v32, v4);
LABEL_16:
      sub_10004FF60((uint64_t)v10, &qword_1011DF428);
      goto LABEL_19;
    }
    v33 = v39;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v29 + 32))(v39, v30, v4);
    v34 = sub_100048748(&qword_1011E3E30, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork, (uint64_t)&protocol conformance descriptor for Artwork);
    v38 = dispatch thunk of static Equatable.== infix(_:_:)(v32, v33, v4, v34);
    v35 = *(void (**)(_BYTE *, uint64_t))(v29 + 8);
    v35(v33, v4);
    sub_10004FF60((uint64_t)v14, (uint64_t *)&unk_1011E4A00);
    sub_10004FF60((uint64_t)v16, (uint64_t *)&unk_1011E4A00);
    v35((_BYTE *)v32, v4);
    sub_10004FF60((uint64_t)v10, (uint64_t *)&unk_1011E4A00);
    if ((v38 & 1) != 0)
      goto LABEL_18;
LABEL_19:
    v20 = 0;
  }
  return v20 & 1;
}

uint64_t type metadata accessor for Collaboration.Flow(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011E4538, (uint64_t)&nominal type descriptor for Collaboration.Flow);
}

unint64_t sub_100C818E8()
{
  unint64_t result;

  result = qword_1011E44A0;
  if (!qword_1011E44A0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_1011E44A0);
  }
  return result;
}

uint64_t type metadata accessor for Collaboration.Flow.View(uint64_t a1)
{
  return sub_100055934(a1, qword_1011E4668, (uint64_t)&nominal type descriptor for Collaboration.Flow.View);
}

uint64_t sub_100C81944(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of Collaboration.Flow.View.body>>, 1);
}

uint64_t *_s4FlowOwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v30;
  char *__dst;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v13 = type metadata accessor for Playlist.Collaborator(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
      v14 = a1;
      v15 = a3;
      v16 = 1;
LABEL_14:
      swift_storeEnumTagMultiPayload(v14, v15, v16);
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      v9 = type metadata accessor for Collaboration.Flow.Collaborator(0);
      v10 = *(_QWORD *)(v9 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
      {
        v11 = sub_100007E8C(&qword_1011E44B0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        v17 = a2[1];
        *a1 = *a2;
        a1[1] = v17;
        v18 = a2[3];
        a1[2] = a2[2];
        a1[3] = v18;
        v19 = *(int *)(v9 + 24);
        __dst = (char *)a1 + v19;
        v20 = (char *)a2 + v19;
        v21 = type metadata accessor for Artwork(0);
        v30 = *(_QWORD *)(v21 - 8);
        v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v22(v20, 1, v21))
        {
          v23 = sub_100007E8C((uint64_t *)&unk_1011E4A00);
          memcpy(__dst, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v30 + 16))(__dst, v20, v21);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(__dst, 0, 1, v21);
        }
        *((_BYTE *)a1 + *(int *)(v9 + 28)) = *((_BYTE *)a2 + *(int *)(v9 + 28));
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
      }
      v24 = sub_100007E8C(&qword_1011E44A8);
      v25 = *(int *)(v24 + 48);
      v26 = (char *)a1 + v25;
      v27 = (char *)a2 + v25;
      v28 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
      *((_BYTE *)a1 + *(int *)(v24 + 64)) = *((_BYTE *)a2 + *(int *)(v24 + 64));
      v14 = a1;
      v15 = a3;
      v16 = 0;
      goto LABEL_14;
    }
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t _s4FlowOwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = a1;
  result = swift_getEnumCaseMultiPayload(a1, a2);
  if ((_DWORD)result == 1)
  {
    v8 = type metadata accessor for Playlist.Collaborator(0);
  }
  else
  {
    if ((_DWORD)result)
      return result;
    v4 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v2, 1, v4))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v5 = v2 + *(int *)(v4 + 24);
      v6 = type metadata accessor for Artwork(0);
      v7 = *(_QWORD *)(v6 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
        (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    }
    v2 += *(int *)(sub_100007E8C(&qword_1011E44A8) + 48);
    v8 = type metadata accessor for URL(0);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v2, v8);
}

_QWORD *_s4FlowOwcp(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v27;
  char *__dst;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 1)
  {
    v10 = type metadata accessor for Playlist.Collaborator(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
    v11 = a1;
    v12 = a3;
    v13 = 1;
LABEL_12:
    swift_storeEnumTagMultiPayload(v11, v12, v13);
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    v7 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_100007E8C(&qword_1011E44B0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v14 = a2[1];
      *a1 = *a2;
      a1[1] = v14;
      v15 = a2[3];
      a1[2] = a2[2];
      a1[3] = v15;
      v16 = *(int *)(v7 + 24);
      __dst = (char *)a1 + v16;
      v17 = (char *)a2 + v16;
      v18 = type metadata accessor for Artwork(0);
      v27 = *(_QWORD *)(v18 - 8);
      v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v19(v17, 1, v18))
      {
        v20 = sub_100007E8C((uint64_t *)&unk_1011E4A00);
        memcpy(__dst, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v27 + 16))(__dst, v17, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(__dst, 0, 1, v18);
      }
      *((_BYTE *)a1 + *(int *)(v7 + 28)) = *((_BYTE *)a2 + *(int *)(v7 + 28));
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v21 = sub_100007E8C(&qword_1011E44A8);
    v22 = *(int *)(v21 + 48);
    v23 = (char *)a1 + v22;
    v24 = (char *)a2 + v22;
    v25 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
    *((_BYTE *)a1 + *(int *)(v21 + 64)) = *((_BYTE *)a2 + *(int *)(v21 + 64));
    v11 = a1;
    v12 = a3;
    v13 = 0;
    goto LABEL_12;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_QWORD *_s4FlowOwca(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v25;
  char *__dst;

  if (a1 != a2)
  {
    sub_10005B748((uint64_t)a1, type metadata accessor for Collaboration.Flow);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v10 = type metadata accessor for Playlist.Collaborator(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      v11 = a1;
      v12 = a3;
      v13 = 1;
LABEL_13:
      swift_storeEnumTagMultiPayload(v11, v12, v13);
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      v7 = type metadata accessor for Collaboration.Flow.Collaborator(0);
      v8 = *(_QWORD *)(v7 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        v9 = sub_100007E8C(&qword_1011E44B0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        v14 = *(int *)(v7 + 24);
        __dst = (char *)a1 + v14;
        v15 = (char *)a2 + v14;
        v16 = type metadata accessor for Artwork(0);
        v25 = *(_QWORD *)(v16 - 8);
        v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v17(v15, 1, v16))
        {
          v18 = sub_100007E8C((uint64_t *)&unk_1011E4A00);
          memcpy(__dst, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v25 + 16))(__dst, v15, v16);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(__dst, 0, 1, v16);
        }
        *((_BYTE *)a1 + *(int *)(v7 + 28)) = *((_BYTE *)a2 + *(int *)(v7 + 28));
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      v19 = sub_100007E8C(&qword_1011E44A8);
      v20 = *(int *)(v19 + 48);
      v21 = (char *)a1 + v20;
      v22 = (char *)a2 + v20;
      v23 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
      *((_BYTE *)a1 + *(int *)(v19 + 64)) = *((_BYTE *)a2 + *(int *)(v19 + 64));
      v11 = a1;
      v12 = a3;
      v13 = 0;
      goto LABEL_13;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *_s4FlowOwtk(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 1)
  {
    v10 = type metadata accessor for Playlist.Collaborator(0);
    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
    v11 = a1;
    v12 = a3;
    v13 = 1;
LABEL_12:
    swift_storeEnumTagMultiPayload(v11, v12, v13);
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    v7 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_100007E8C(&qword_1011E44B0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v14 = a2[1];
      *a1 = *a2;
      a1[1] = v14;
      v15 = *(int *)(v7 + 24);
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      v18 = type metadata accessor for Artwork(0);
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      {
        v20 = sub_100007E8C((uint64_t *)&unk_1011E4A00);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      }
      *((_BYTE *)a1 + *(int *)(v7 + 28)) = *((_BYTE *)a2 + *(int *)(v7 + 28));
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v21 = sub_100007E8C(&qword_1011E44A8);
    v22 = *(int *)(v21 + 48);
    v23 = (char *)a1 + v22;
    v24 = (char *)a2 + v22;
    v25 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
    *((_BYTE *)a1 + *(int *)(v21 + 64)) = *((_BYTE *)a2 + *(int *)(v21 + 64));
    v11 = a1;
    v12 = a3;
    v13 = 0;
    goto LABEL_12;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_OWORD *_s4FlowOwta(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  if (a1 != a2)
  {
    sub_10005B748((uint64_t)a1, type metadata accessor for Collaboration.Flow);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v10 = type metadata accessor for Playlist.Collaborator(0);
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
      v11 = a1;
      v12 = a3;
      v13 = 1;
LABEL_13:
      swift_storeEnumTagMultiPayload(v11, v12, v13);
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      v7 = type metadata accessor for Collaboration.Flow.Collaborator(0);
      v8 = *(_QWORD *)(v7 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        v9 = sub_100007E8C(&qword_1011E44B0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        v14 = a2[1];
        *a1 = *a2;
        a1[1] = v14;
        v15 = *(int *)(v7 + 24);
        v16 = (char *)a1 + v15;
        v17 = (char *)a2 + v15;
        v18 = type metadata accessor for Artwork(0);
        v19 = *(_QWORD *)(v18 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
        {
          v20 = sub_100007E8C((uint64_t *)&unk_1011E4A00);
          memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
        }
        *((_BYTE *)a1 + *(int *)(v7 + 28)) = *((_BYTE *)a2 + *(int *)(v7 + 28));
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      v21 = sub_100007E8C(&qword_1011E44A8);
      v22 = *(int *)(v21 + 48);
      v23 = (char *)a1 + v22;
      v24 = (char *)a2 + v22;
      v25 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
      *((_BYTE *)a1 + *(int *)(v21 + 64)) = *((_BYTE *)a2 + *(int *)(v21 + 64));
      v11 = a1;
      v12 = a3;
      v13 = 0;
      goto LABEL_13;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100C8252C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _BYTE v10[32];
  _QWORD v11[2];

  sub_1000E3A44(319, (unint64_t *)&unk_1011E4548, type metadata accessor for Collaboration.Flow.Collaborator, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  v3 = v2;
  if (v4 <= 0x3F)
  {
    v5 = type metadata accessor for URL(319);
    if (v6 > 0x3F)
    {
      return v5;
    }
    else
    {
      swift_getTupleTypeLayout3(v10, *(_QWORD *)(v3 - 8) + 64, *(_QWORD *)(v5 - 8) + 64, &unk_100EF0FF8);
      v11[0] = v10;
      v7 = type metadata accessor for Playlist.Collaborator(319);
      v3 = v7;
      if (v8 <= 0x3F)
      {
        v11[1] = *(_QWORD *)(v7 - 8) + 64;
        swift_initEnumMetadataMultiPayload(a1, 256, 2, v11);
        return 0;
      }
    }
  }
  return v3;
}

_QWORD *_s4FlowO12CollaboratorVwCP(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = *(int *)(a3 + 24);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for Artwork(0);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      v15 = sub_100007E8C((uint64_t *)&unk_1011E4A00);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    *((_BYTE *)v4 + *(int *)(a3 + 28)) = *((_BYTE *)a2 + *(int *)(a3 + 28));
  }
  return v4;
}

uint64_t _s4FlowO12CollaboratorVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  v4 = a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for Artwork(0);
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

_QWORD *_s4FlowO12CollaboratorVwcp(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for Artwork(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    v14 = sub_100007E8C((uint64_t *)&unk_1011E4A00);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  *((_BYTE *)a1 + *(int *)(a3 + 28)) = *((_BYTE *)a2 + *(int *)(a3 + 28));
  return a1;
}

_QWORD *_s4FlowO12CollaboratorVwca(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Artwork(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = sub_100007E8C((uint64_t *)&unk_1011E4A00);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *((_BYTE *)a1 + *(int *)(a3 + 28)) = *((_BYTE *)a2 + *(int *)(a3 + 28));
  return a1;
}

_OWORD *_s4FlowO12CollaboratorVwtk(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Artwork(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = sub_100007E8C((uint64_t *)&unk_1011E4A00);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *((_BYTE *)a1 + *(int *)(a3 + 28)) = *((_BYTE *)a2 + *(int *)(a3 + 28));
  return a1;
}

_QWORD *_s4FlowO12CollaboratorVwta(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for Artwork(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v16 = sub_100007E8C((uint64_t *)&unk_1011E4A00);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  *((_BYTE *)a1 + *(int *)(a3 + 28)) = *((_BYTE *)a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t _s4FlowO12CollaboratorVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C82C24);
}

uint64_t sub_100C82C24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C((uint64_t *)&unk_1011E4A00);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t _s4FlowO12CollaboratorVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C82CB0);
}

uint64_t sub_100C82CB0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_100007E8C((uint64_t *)&unk_1011E4A00);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

void sub_100C82D28(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = &unk_100EF1020;
  v4[1] = &unk_100EF1038;
  sub_1000E3A44(319, &qword_1011E22C0, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    v4[3] = &unk_100EF0FF8;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
  }
}

_QWORD *_s4FlowO4ViewVwCP(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  int EnumCaseMultiPayload;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  void **v42;
  void **v43;
  uint64_t v44;
  uint64_t v45;
  void **v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v68;
  unsigned int (*v69)(char *, uint64_t, uint64_t);
  char *v70;
  uint64_t v71;
  char *__dst;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  v7 = sub_100007E8C(&qword_1011E4D50);
  if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
  {
    v8 = type metadata accessor for DismissAction(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    v9 = a1;
    v10 = v7;
    v11 = 1;
  }
  else
  {
    *a1 = *a2;
    swift_retain();
    v9 = a1;
    v10 = v7;
    v11 = 0;
  }
  swift_storeEnumTagMultiPayload(v9, v10, v11);
  v13 = a3[5];
  v14 = a3[6];
  v15 = (char *)a1 + v13;
  v16 = (char *)a2 + v13;
  *v15 = *v16;
  *((_QWORD *)v15 + 1) = *((_QWORD *)v16 + 1);
  v17 = (char *)a1 + v14;
  v18 = (char *)a2 + v14;
  *v17 = *v18;
  *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
  v19 = a3[7];
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  v22 = type metadata accessor for Collaboration.Flow(0);
  swift_retain();
  swift_retain();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v21, v22);
  if (EnumCaseMultiPayload == 1)
  {
    v27 = type metadata accessor for Playlist.Collaborator(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v20, v21, v27);
    v28 = v20;
    v29 = v22;
    v30 = 1;
LABEL_17:
    swift_storeEnumTagMultiPayload(v28, v29, v30);
    goto LABEL_18;
  }
  if (!EnumCaseMultiPayload)
  {
    v24 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    v25 = *(_QWORD *)(v24 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v25 + 48))(v21, 1, v24))
    {
      v26 = sub_100007E8C(&qword_1011E44B0);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      v71 = v25;
      v31 = v21[1];
      *v20 = *v21;
      v20[1] = v31;
      v32 = v21[3];
      v20[2] = v21[2];
      v20[3] = v32;
      v33 = *(int *)(v24 + 24);
      __dst = (char *)v20 + v33;
      v70 = (char *)v21 + v33;
      v34 = type metadata accessor for Artwork(0);
      v68 = *(_QWORD *)(v34 - 8);
      v69 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v69(v70, 1, v34))
      {
        v35 = sub_100007E8C((uint64_t *)&unk_1011E4A00);
        memcpy(__dst, v70, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v68 + 16))(__dst, v70, v34);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(__dst, 0, 1, v34);
      }
      *((_BYTE *)v20 + *(int *)(v24 + 28)) = *((_BYTE *)v21 + *(int *)(v24 + 28));
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v20, 0, 1, v24);
    }
    v36 = sub_100007E8C(&qword_1011E44A8);
    v37 = *(int *)(v36 + 48);
    v38 = (char *)v20 + v37;
    v39 = (char *)v21 + v37;
    v40 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v38, v39, v40);
    *((_BYTE *)v20 + *(int *)(v36 + 64)) = *((_BYTE *)v21 + *(int *)(v36 + 64));
    v28 = v20;
    v29 = v22;
    v30 = 0;
    goto LABEL_17;
  }
  memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
LABEL_18:
  v41 = a3[8];
  v42 = (void **)((char *)a1 + v41);
  v43 = (void **)((char *)a2 + v41);
  v44 = type metadata accessor for Collaboration.Object(0);
  if (swift_getEnumCaseMultiPayload(v43, v44) == 1)
  {
    v45 = type metadata accessor for Playlist(0);
    (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v42, v43, v45);
    v46 = v42;
    v47 = v44;
    v48 = 1;
  }
  else
  {
    v49 = *v43;
    *v42 = *v43;
    v50 = v49;
    v46 = v42;
    v47 = v44;
    v48 = 0;
  }
  swift_storeEnumTagMultiPayload(v46, v47, v48);
  v51 = a3[10];
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  *((_BYTE *)a1 + v51) = *((_BYTE *)a2 + v51);
  v52 = a3[11];
  v53 = (_QWORD *)((char *)a1 + v52);
  v54 = (char *)a2 + v52;
  v55 = *(_QWORD *)((char *)a2 + v52);
  swift_retain();
  if (v55)
  {
    v56 = *((_QWORD *)v54 + 1);
    *v53 = v55;
    v53[1] = v56;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v53 = *(_OWORD *)v54;
  }
  v57 = a3[12];
  v58 = a3[13];
  v59 = (_QWORD *)((char *)a1 + v57);
  v60 = (_QWORD *)((char *)a2 + v57);
  v61 = v60[1];
  *v59 = *v60;
  v59[1] = v61;
  v62 = (char *)a1 + v58;
  v63 = (char *)a2 + v58;
  v64 = *(_QWORD *)((char *)a2 + v58);
  v65 = *((_QWORD *)v63 + 1);
  v66 = v63[16];
  swift_retain();
  KeyValueObservationTrigger.keyPath.getter(v64, v65);
  *(_QWORD *)v62 = v64;
  *((_QWORD *)v62 + 1) = v65;
  v62[16] = v66;
  return a1;
}

uint64_t _s4FlowO4ViewVwxx(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id *v14;
  uint64_t v15;
  uint64_t v16;

  v4 = sub_100007E8C(&qword_1011E4D50);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for DismissAction(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  v6 = a1 + a2[7];
  v7 = type metadata accessor for Collaboration.Flow(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v6, v7);
  if (EnumCaseMultiPayload == 1)
  {
    v13 = type metadata accessor for Playlist.Collaborator(0);
  }
  else
  {
    if (EnumCaseMultiPayload)
      goto LABEL_12;
    v9 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v6, 1, v9))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v10 = v6 + *(int *)(v9 + 24);
      v11 = type metadata accessor for Artwork(0);
      v12 = *(_QWORD *)(v11 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
        (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
    }
    v6 += *(int *)(sub_100007E8C(&qword_1011E44A8) + 48);
    v13 = type metadata accessor for URL(0);
  }
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v6, v13);
LABEL_12:
  v14 = (id *)(a1 + a2[8]);
  v15 = type metadata accessor for Collaboration.Object(0);
  if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
  {
    v16 = type metadata accessor for Playlist(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v14, v16);
  }
  else
  {

  }
  swift_release();
  if (*(_QWORD *)(a1 + a2[11]))
    swift_release();
  swift_release();
  return sub_1000A6174(*(_QWORD *)(a1 + a2[13]), *(_QWORD *)(a1 + a2[13] + 8));
}

_QWORD *_s4FlowO4ViewVwcp(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  int EnumCaseMultiPayload;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  void **v40;
  void **v41;
  uint64_t v42;
  uint64_t v43;
  void **v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v66;
  uint64_t v67;
  unsigned int (*v68)(char *, uint64_t, uint64_t);
  char *v69;
  char *__dst;

  v6 = sub_100007E8C(&qword_1011E4D50);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for DismissAction(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    *a1 = *a2;
    swift_retain();
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  v11 = a3[5];
  v12 = a3[6];
  v13 = (char *)a1 + v11;
  v14 = (char *)a2 + v11;
  *v13 = *v14;
  *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
  v15 = (char *)a1 + v12;
  v16 = (char *)a2 + v12;
  *v15 = *v16;
  *((_QWORD *)v15 + 1) = *((_QWORD *)v16 + 1);
  v17 = a3[7];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  v20 = type metadata accessor for Collaboration.Flow(0);
  swift_retain();
  swift_retain();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v19, v20);
  if (EnumCaseMultiPayload == 1)
  {
    v25 = type metadata accessor for Playlist.Collaborator(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v18, v19, v25);
    v26 = v18;
    v27 = v20;
    v28 = 1;
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      goto LABEL_16;
    }
    v22 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v23 + 48))(v19, 1, v22))
    {
      v24 = sub_100007E8C(&qword_1011E44B0);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      v67 = v23;
      v29 = v19[1];
      *v18 = *v19;
      v18[1] = v29;
      v30 = v19[3];
      v18[2] = v19[2];
      v18[3] = v30;
      v31 = *(int *)(v22 + 24);
      v69 = (char *)v19 + v31;
      __dst = (char *)v18 + v31;
      v32 = type metadata accessor for Artwork(0);
      v66 = *(_QWORD *)(v32 - 8);
      v68 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v68(v69, 1, v32))
      {
        v33 = sub_100007E8C((uint64_t *)&unk_1011E4A00);
        memcpy(__dst, v69, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v66 + 16))(__dst, v69, v32);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56))(__dst, 0, 1, v32);
      }
      *((_BYTE *)v18 + *(int *)(v22 + 28)) = *((_BYTE *)v19 + *(int *)(v22 + 28));
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v18, 0, 1, v22);
    }
    v34 = sub_100007E8C(&qword_1011E44A8);
    v35 = *(int *)(v34 + 48);
    v36 = (char *)v18 + v35;
    v37 = (char *)v19 + v35;
    v38 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
    *((_BYTE *)v18 + *(int *)(v34 + 64)) = *((_BYTE *)v19 + *(int *)(v34 + 64));
    v26 = v18;
    v27 = v20;
    v28 = 0;
  }
  swift_storeEnumTagMultiPayload(v26, v27, v28);
LABEL_16:
  v39 = a3[8];
  v40 = (void **)((char *)a1 + v39);
  v41 = (void **)((char *)a2 + v39);
  v42 = type metadata accessor for Collaboration.Object(0);
  if (swift_getEnumCaseMultiPayload(v41, v42) == 1)
  {
    v43 = type metadata accessor for Playlist(0);
    (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v40, v41, v43);
    v44 = v40;
    v45 = v42;
    v46 = 1;
  }
  else
  {
    v47 = *v41;
    *v40 = *v41;
    v48 = v47;
    v44 = v40;
    v45 = v42;
    v46 = 0;
  }
  swift_storeEnumTagMultiPayload(v44, v45, v46);
  v49 = a3[10];
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  *((_BYTE *)a1 + v49) = *((_BYTE *)a2 + v49);
  v50 = a3[11];
  v51 = (_QWORD *)((char *)a1 + v50);
  v52 = (char *)a2 + v50;
  v53 = *(_QWORD *)((char *)a2 + v50);
  swift_retain();
  if (v53)
  {
    v54 = *((_QWORD *)v52 + 1);
    *v51 = v53;
    v51[1] = v54;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v51 = *(_OWORD *)v52;
  }
  v55 = a3[12];
  v56 = a3[13];
  v57 = (_QWORD *)((char *)a1 + v55);
  v58 = (_QWORD *)((char *)a2 + v55);
  v59 = v58[1];
  *v57 = *v58;
  v57[1] = v59;
  v60 = (char *)a1 + v56;
  v61 = (char *)a2 + v56;
  v62 = *(_QWORD *)((char *)a2 + v56);
  v63 = *((_QWORD *)v61 + 1);
  v64 = v61[16];
  swift_retain();
  KeyValueObservationTrigger.keyPath.getter(v62, v63);
  *(_QWORD *)v60 = v62;
  *((_QWORD *)v60 + 1) = v63;
  v60[16] = v64;
  return a1;
}

_QWORD *_s4FlowO4ViewVwca(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  int EnumCaseMultiPayload;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void **v38;
  void **v39;
  uint64_t v40;
  uint64_t v41;
  void **v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  id v46;
  uint64_t v47;
  _QWORD *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v67;
  unsigned int (*v68)(char *, uint64_t, uint64_t);
  char *v69;
  char *__dst;

  if (a1 != a2)
  {
    sub_10004FF60((uint64_t)a1, &qword_1011E4D50);
    v6 = sub_100007E8C(&qword_1011E4D50);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for DismissAction(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  v11 = a3[5];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  *v12 = *v13;
  *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
  swift_retain();
  swift_release();
  v14 = a3[6];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  *v15 = *v16;
  *((_QWORD *)v15 + 1) = *((_QWORD *)v16 + 1);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v17 = a3[7];
    v18 = (_QWORD *)((char *)a1 + v17);
    v19 = (_QWORD *)((char *)a2 + v17);
    sub_10005B748((uint64_t)a1 + v17, type metadata accessor for Collaboration.Flow);
    v20 = type metadata accessor for Collaboration.Flow(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v19, v20);
    if (EnumCaseMultiPayload == 1)
    {
      v25 = type metadata accessor for Playlist.Collaborator(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v18, v19, v25);
      v26 = v18;
      v27 = v20;
      v28 = 1;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
LABEL_19:
        v37 = a3[8];
        v38 = (void **)((char *)a1 + v37);
        v39 = (void **)((char *)a2 + v37);
        sub_10005B748((uint64_t)a1 + v37, type metadata accessor for Collaboration.Object);
        v40 = type metadata accessor for Collaboration.Object(0);
        if (swift_getEnumCaseMultiPayload(v39, v40) == 1)
        {
          v41 = type metadata accessor for Playlist(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v38, v39, v41);
          v42 = v38;
          v43 = v40;
          v44 = 1;
        }
        else
        {
          v45 = *v39;
          *v38 = *v39;
          v46 = v45;
          v42 = v38;
          v43 = v40;
          v44 = 0;
        }
        swift_storeEnumTagMultiPayload(v42, v43, v44);
        goto LABEL_23;
      }
      v22 = type metadata accessor for Collaboration.Flow.Collaborator(0);
      v23 = *(_QWORD *)(v22 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v23 + 48))(v19, 1, v22))
      {
        v24 = sub_100007E8C(&qword_1011E44B0);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        *v18 = *v19;
        v18[1] = v19[1];
        v18[2] = v19[2];
        v18[3] = v19[3];
        v29 = *(int *)(v22 + 24);
        __dst = (char *)v18 + v29;
        v69 = (char *)v19 + v29;
        v30 = type metadata accessor for Artwork(0);
        v67 = *(_QWORD *)(v30 - 8);
        v68 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v68(v69, 1, v30))
        {
          v31 = sub_100007E8C((uint64_t *)&unk_1011E4A00);
          memcpy(__dst, v69, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v67 + 16))(__dst, v69, v30);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(__dst, 0, 1, v30);
        }
        *((_BYTE *)v18 + *(int *)(v22 + 28)) = *((_BYTE *)v19 + *(int *)(v22 + 28));
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v18, 0, 1, v22);
      }
      v32 = sub_100007E8C(&qword_1011E44A8);
      v33 = *(int *)(v32 + 48);
      v34 = (char *)v18 + v33;
      v35 = (char *)v19 + v33;
      v36 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v34, v35, v36);
      *((_BYTE *)v18 + *(int *)(v32 + 64)) = *((_BYTE *)v19 + *(int *)(v32 + 64));
      v26 = v18;
      v27 = v20;
      v28 = 0;
    }
    swift_storeEnumTagMultiPayload(v26, v27, v28);
    goto LABEL_19;
  }
LABEL_23:
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  swift_retain();
  swift_release();
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  v47 = a3[11];
  v48 = (_QWORD *)((char *)a1 + v47);
  v49 = (char *)a2 + v47;
  v50 = *(_QWORD *)((char *)a1 + v47);
  v51 = *(_QWORD *)((char *)a2 + v47);
  if (!v50)
  {
    if (v51)
    {
      v53 = *((_QWORD *)v49 + 1);
      *v48 = v51;
      v48[1] = v53;
      swift_retain();
      goto LABEL_30;
    }
LABEL_29:
    *(_OWORD *)v48 = *(_OWORD *)v49;
    goto LABEL_30;
  }
  if (!v51)
  {
    swift_release();
    goto LABEL_29;
  }
  v52 = *((_QWORD *)v49 + 1);
  *v48 = v51;
  v48[1] = v52;
  swift_retain();
  swift_release();
LABEL_30:
  v54 = a3[12];
  v55 = (_QWORD *)((char *)a1 + v54);
  v56 = (_QWORD *)((char *)a2 + v54);
  v57 = v56[1];
  *v55 = *v56;
  v55[1] = v57;
  swift_retain();
  swift_release();
  v58 = a3[13];
  v59 = (char *)a1 + v58;
  v60 = (char *)a2 + v58;
  v61 = *(_QWORD *)v60;
  v62 = *((_QWORD *)v60 + 1);
  v63 = v60[16];
  KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)v60, v62);
  v64 = *(_QWORD *)v59;
  v65 = *((_QWORD *)v59 + 1);
  *(_QWORD *)v59 = v61;
  *((_QWORD *)v59 + 1) = v62;
  v59[16] = v63;
  sub_1000A6174(v64, v65);
  return a1;
}

char *_s4FlowO4ViewVwtk(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v46;
  char *v47;

  v6 = sub_100007E8C(&qword_1011E4D50);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for DismissAction(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  *(_OWORD *)&a1[v8] = *(_OWORD *)&a2[v8];
  v9 = a3[7];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = type metadata accessor for Collaboration.Flow(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v11, v12);
  if (EnumCaseMultiPayload == 1)
  {
    v17 = type metadata accessor for Playlist.Collaborator(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v10, v11, v17);
    v18 = v10;
    v19 = v12;
    v20 = 1;
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      goto LABEL_16;
    }
    v14 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v11, 1, v14))
    {
      v16 = sub_100007E8C(&qword_1011E44B0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      v21 = *((_OWORD *)v11 + 1);
      *(_OWORD *)v10 = *(_OWORD *)v11;
      *((_OWORD *)v10 + 1) = v21;
      v22 = *(int *)(v14 + 24);
      v47 = &v10[v22];
      v23 = &v11[v22];
      v24 = type metadata accessor for Artwork(0);
      v46 = *(_QWORD *)(v24 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v23, 1, v24))
      {
        v25 = sub_100007E8C((uint64_t *)&unk_1011E4A00);
        memcpy(v47, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v47, v23, v24);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v47, 0, 1, v24);
      }
      v10[*(int *)(v14 + 28)] = v11[*(int *)(v14 + 28)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v10, 0, 1, v14);
    }
    v26 = sub_100007E8C(&qword_1011E44A8);
    v27 = *(int *)(v26 + 48);
    v28 = &v10[v27];
    v29 = &v11[v27];
    v30 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
    v10[*(int *)(v26 + 64)] = v11[*(int *)(v26 + 64)];
    v18 = v10;
    v19 = v12;
    v20 = 0;
  }
  swift_storeEnumTagMultiPayload(v18, v19, v20);
LABEL_16:
  v31 = a3[8];
  v32 = &a1[v31];
  v33 = &a2[v31];
  v34 = type metadata accessor for Collaboration.Object(0);
  if (swift_getEnumCaseMultiPayload(v33, v34) == 1)
  {
    v35 = type metadata accessor for Playlist(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v32, v33, v35);
    swift_storeEnumTagMultiPayload(v32, v34, 1);
  }
  else
  {
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  v36 = a3[10];
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  a1[v36] = a2[v36];
  v37 = a3[11];
  v38 = &a1[v37];
  v39 = &a2[v37];
  v40 = *(_QWORD *)v39;
  if (*(_QWORD *)v39)
  {
    v41 = *((_QWORD *)v39 + 1);
    *(_QWORD *)v38 = v40;
    *((_QWORD *)v38 + 1) = v41;
  }
  else
  {
    *(_OWORD *)v38 = *(_OWORD *)v39;
  }
  v42 = a3[13];
  *(_OWORD *)&a1[a3[12]] = *(_OWORD *)&a2[a3[12]];
  v43 = &a1[v42];
  v44 = &a2[v42];
  *(_OWORD *)v43 = *(_OWORD *)v44;
  v43[16] = v44[16];
  return a1;
}

char *_s4FlowO4ViewVwta(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  char *v55;

  if (a1 != a2)
  {
    sub_10004FF60((uint64_t)a1, &qword_1011E4D50);
    v6 = sub_100007E8C(&qword_1011E4D50);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for DismissAction(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  *v9 = *v10;
  *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
  swift_release();
  v11 = a3[6];
  v12 = &a1[v11];
  v13 = &a2[v11];
  *v12 = *v13;
  *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
  swift_release();
  if (a1 != a2)
  {
    v14 = a3[7];
    v15 = &a1[v14];
    v16 = &a2[v14];
    sub_10005B748((uint64_t)&a1[v14], type metadata accessor for Collaboration.Flow);
    v17 = type metadata accessor for Collaboration.Flow(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v16, v17);
    if (EnumCaseMultiPayload == 1)
    {
      v22 = type metadata accessor for Playlist.Collaborator(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v15, v16, v22);
      v23 = v15;
      v24 = v17;
      v25 = 1;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
        goto LABEL_18;
      }
      v19 = type metadata accessor for Collaboration.Flow.Collaborator(0);
      v20 = *(_QWORD *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v16, 1, v19))
      {
        v21 = sub_100007E8C(&qword_1011E44B0);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        v26 = *((_OWORD *)v16 + 1);
        *(_OWORD *)v15 = *(_OWORD *)v16;
        *((_OWORD *)v15 + 1) = v26;
        v27 = *(int *)(v19 + 24);
        v55 = &v15[v27];
        v28 = &v16[v27];
        v29 = type metadata accessor for Artwork(0);
        v54 = *(_QWORD *)(v29 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v28, 1, v29))
        {
          v30 = sub_100007E8C((uint64_t *)&unk_1011E4A00);
          memcpy(v55, v28, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v55, v28, v29);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v55, 0, 1, v29);
        }
        v15[*(int *)(v19 + 28)] = v16[*(int *)(v19 + 28)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v15, 0, 1, v19);
      }
      v31 = sub_100007E8C(&qword_1011E44A8);
      v32 = *(int *)(v31 + 48);
      v33 = &v15[v32];
      v34 = &v16[v32];
      v35 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
      v15[*(int *)(v31 + 64)] = v16[*(int *)(v31 + 64)];
      v23 = v15;
      v24 = v17;
      v25 = 0;
    }
    swift_storeEnumTagMultiPayload(v23, v24, v25);
LABEL_18:
    v36 = a3[8];
    v37 = &a1[v36];
    v38 = &a2[v36];
    sub_10005B748((uint64_t)&a1[v36], type metadata accessor for Collaboration.Object);
    v39 = type metadata accessor for Collaboration.Object(0);
    if (swift_getEnumCaseMultiPayload(v38, v39) == 1)
    {
      v40 = type metadata accessor for Playlist(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v37, v38, v40);
      swift_storeEnumTagMultiPayload(v37, v39, 1);
    }
    else
    {
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
  }
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  swift_release();
  v41 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  v42 = &a1[v41];
  v43 = &a2[v41];
  v44 = *(_QWORD *)&a2[v41];
  if (!*(_QWORD *)&a1[v41])
  {
    if (v44)
    {
      v46 = *((_QWORD *)v43 + 1);
      *(_QWORD *)v42 = v44;
      *((_QWORD *)v42 + 1) = v46;
      goto LABEL_28;
    }
LABEL_27:
    *(_OWORD *)v42 = *(_OWORD *)v43;
    goto LABEL_28;
  }
  if (!v44)
  {
    swift_release();
    goto LABEL_27;
  }
  v45 = *((_QWORD *)v43 + 1);
  *(_QWORD *)v42 = v44;
  *((_QWORD *)v42 + 1) = v45;
  swift_release();
LABEL_28:
  *(_OWORD *)&a1[a3[12]] = *(_OWORD *)&a2[a3[12]];
  swift_release();
  v47 = a3[13];
  v48 = &a1[v47];
  v49 = &a2[v47];
  v50 = v49[16];
  v51 = *(_QWORD *)v48;
  v52 = *((_QWORD *)v48 + 1);
  *(_OWORD *)v48 = *(_OWORD *)v49;
  v48[16] = v50;
  sub_1000A6174(v51, v52);
  return a1;
}

uint64_t _s4FlowO4ViewVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C8447C);
}

uint64_t sub_100C8447C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v16;

  v6 = sub_100007E8C(&qword_1011E3520);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = type metadata accessor for Collaboration.Flow(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[7];
LABEL_7:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = type metadata accessor for Collaboration.Object(0);
  v12 = *(_QWORD *)(v14 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v14;
    v13 = a3[8];
    goto LABEL_7;
  }
  v16 = *(_QWORD *)(a1 + a3[9]);
  if (v16 >= 0xFFFFFFFF)
    LODWORD(v16) = -1;
  return (v16 + 1);
}

uint64_t _s4FlowO4ViewVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C84558);
}

uint64_t sub_100C84558(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;

  v8 = sub_100007E8C(&qword_1011E3520);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  v13 = type metadata accessor for Collaboration.Flow(0);
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v13;
    v15 = a4[7];
LABEL_7:
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  result = type metadata accessor for Collaboration.Object(0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v15 = a4[8];
    goto LABEL_7;
  }
  *(_QWORD *)(a1 + a4[9]) = (a2 - 1);
  return result;
}

void sub_100C84624(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[10];

  sub_1000E3A44(319, (unint64_t *)&qword_1011E35A0, (uint64_t (*)(uint64_t))&type metadata accessor for DismissAction, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    v8[1] = &unk_100EF1038;
    v8[2] = &unk_100EF1038;
    v4 = type metadata accessor for Collaboration.Flow(319);
    if (v5 <= 0x3F)
    {
      v8[3] = *(_QWORD *)(v4 - 8) + 64;
      v6 = type metadata accessor for Collaboration.Object(319);
      if (v7 <= 0x3F)
      {
        v8[4] = *(_QWORD *)(v6 - 8) + 64;
        v8[5] = (char *)&value witness table for Builtin.NativeObject + 64;
        v8[6] = &unk_100EF0FF8;
        v8[7] = &unk_100EF1038;
        v8[8] = (char *)&value witness table for () + 64;
        v8[9] = &unk_100EF1058;
        swift_initStructMetadata(a1, 256, 10, v8, a1 + 16);
      }
    }
  }
}

uint64_t sub_100C84718()
{
  return sub_100049F28(&qword_1011E46C0, &qword_1011E46C8, (uint64_t)&protocol conformance descriptor for VStack<A>);
}

uint64_t _s4FlowO12ActionButtonVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return sub_10006B604(*(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64));
}

uint64_t _s4FlowO12ActionButtonVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v6 = *(_BYTE *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_10006B3F8(v5, v6);
  *(_QWORD *)(a1 + 56) = v5;
  *(_BYTE *)(a1 + 64) = v6;
  return a1;
}

uint64_t _s4FlowO12ActionButtonVwca(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v2 = a2;
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *((_BYTE *)v2 + 16);
  v4 = v2[4];
  *(_QWORD *)(a1 + 24) = v2[3];
  *(_QWORD *)(a1 + 32) = v4;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 40) = *((_BYTE *)v2 + 40);
  *(_QWORD *)(a1 + 48) = v2[6];
  swift_retain();
  swift_release();
  v5 = v2[7];
  LOBYTE(v2) = *((_BYTE *)v2 + 64);
  sub_10006B3F8(v5, (char)v2);
  v6 = *(_QWORD *)(a1 + 56);
  v7 = *(_BYTE *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = v5;
  *(_BYTE *)(a1 + 64) = (_BYTE)v2;
  sub_10006B604(v6, v7);
  return a1;
}

__n128 initializeWithTake for SymbolButton.Title(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t _s4FlowO12ActionButtonVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_release();
  v5 = *(_BYTE *)(a2 + 64);
  v6 = *(_QWORD *)(a1 + 56);
  v7 = *(_BYTE *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = v5;
  sub_10006B604(v6, v7);
  return a1;
}

uint64_t _s4FlowO12ActionButtonVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 65))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s4FlowO12ActionButtonVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 64) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 65) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 65) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s4FlowO12ActionButtonVMa()
{
  return &_s4FlowO12ActionButtonVN;
}

uint64_t *sub_100C84A08(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v30;
  unsigned int (*v31)(char *, uint64_t, uint64_t);
  char *__dst;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = *(int *)(a3 + 20);
    v7 = (uint64_t *)((char *)a1 + v6);
    v8 = (uint64_t *)((char *)a2 + v6);
    v9 = type metadata accessor for Collaboration.Flow(0);
    swift_retain();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v8, v9);
    if (EnumCaseMultiPayload == 1)
    {
      v14 = type metadata accessor for Playlist.Collaborator(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v7, v8, v14);
      v15 = v7;
      v16 = v9;
      v17 = 1;
LABEL_14:
      swift_storeEnumTagMultiPayload(v15, v16, v17);
      return v5;
    }
    if (!EnumCaseMultiPayload)
    {
      v11 = type metadata accessor for Collaboration.Flow.Collaborator(0);
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11))
      {
        v13 = sub_100007E8C(&qword_1011E44B0);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        v18 = v8[1];
        *v7 = *v8;
        v7[1] = v18;
        v19 = v8[3];
        v7[2] = v8[2];
        v7[3] = v19;
        v20 = *(int *)(v11 + 24);
        __dst = (char *)v7 + v20;
        v21 = (char *)v8 + v20;
        v22 = type metadata accessor for Artwork(0);
        v30 = *(_QWORD *)(v22 - 8);
        v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v31(v21, 1, v22))
        {
          v23 = sub_100007E8C((uint64_t *)&unk_1011E4A00);
          memcpy(__dst, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v30 + 16))(__dst, v21, v22);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(__dst, 0, 1, v22);
        }
        *((_BYTE *)v7 + *(int *)(v11 + 28)) = *((_BYTE *)v8 + *(int *)(v11 + 28));
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, v11);
      }
      v24 = sub_100007E8C(&qword_1011E44A8);
      v25 = *(int *)(v24 + 48);
      v26 = (char *)v7 + v25;
      v27 = (char *)v8 + v25;
      v28 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
      *((_BYTE *)v7 + *(int *)(v24 + 64)) = *((_BYTE *)v8 + *(int *)(v24 + 64));
      v15 = v7;
      v16 = v9;
      v17 = 0;
      goto LABEL_14;
    }
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  return v5;
}

uint64_t sub_100C84C88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  swift_release();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for Collaboration.Flow(0);
  result = swift_getEnumCaseMultiPayload(v4, v5);
  if ((_DWORD)result == 1)
  {
    v11 = type metadata accessor for Playlist.Collaborator(0);
  }
  else
  {
    if ((_DWORD)result)
      return result;
    v7 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v4, 1, v7))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v8 = v4 + *(int *)(v7 + 24);
      v9 = type metadata accessor for Artwork(0);
      v10 = *(_QWORD *)(v9 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
        (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    }
    v4 += *(int *)(sub_100007E8C(&qword_1011E44A8) + 48);
    v11 = type metadata accessor for URL(0);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v4, v11);
}

_QWORD *sub_100C84DA0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v28;
  char *__dst;
  unsigned int (*v30)(char *, uint64_t, uint64_t);

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (_QWORD *)((char *)a1 + v4);
  v6 = (_QWORD *)((char *)a2 + v4);
  v7 = type metadata accessor for Collaboration.Flow(0);
  swift_retain();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v6, v7);
  if (EnumCaseMultiPayload == 1)
  {
    v12 = type metadata accessor for Playlist.Collaborator(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v5, v6, v12);
    v13 = v5;
    v14 = v7;
    v15 = 1;
LABEL_12:
    swift_storeEnumTagMultiPayload(v13, v14, v15);
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    v9 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    v10 = *(_QWORD *)(v9 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9))
    {
      v11 = sub_100007E8C(&qword_1011E44B0);
      memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      v16 = v6[1];
      *v5 = *v6;
      v5[1] = v16;
      v17 = v6[3];
      v5[2] = v6[2];
      v5[3] = v17;
      v18 = *(int *)(v9 + 24);
      __dst = (char *)v5 + v18;
      v19 = (char *)v6 + v18;
      v20 = type metadata accessor for Artwork(0);
      v28 = *(_QWORD *)(v20 - 8);
      v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v30(v19, 1, v20))
      {
        v21 = sub_100007E8C((uint64_t *)&unk_1011E4A00);
        memcpy(__dst, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v28 + 16))(__dst, v19, v20);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(__dst, 0, 1, v20);
      }
      *((_BYTE *)v5 + *(int *)(v9 + 28)) = *((_BYTE *)v6 + *(int *)(v9 + 28));
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v5, 0, 1, v9);
    }
    v22 = sub_100007E8C(&qword_1011E44A8);
    v23 = *(int *)(v22 + 48);
    v24 = (char *)v5 + v23;
    v25 = (char *)v6 + v23;
    v26 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
    *((_BYTE *)v5 + *(int *)(v22 + 64)) = *((_BYTE *)v6 + *(int *)(v22 + 64));
    v13 = v5;
    v14 = v7;
    v15 = 0;
    goto LABEL_12;
  }
  memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  return a1;
}

_QWORD *sub_100C84FF4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v28;
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  char *__dst;

  *a1 = *a2;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (_QWORD *)((char *)a1 + v6);
    v8 = (_QWORD *)((char *)a2 + v6);
    sub_10005B748((uint64_t)a1 + v6, type metadata accessor for Collaboration.Flow);
    v9 = type metadata accessor for Collaboration.Flow(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v8, v9);
    if (EnumCaseMultiPayload == 1)
    {
      v14 = type metadata accessor for Playlist.Collaborator(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v7, v8, v14);
      v15 = v7;
      v16 = v9;
      v17 = 1;
LABEL_13:
      swift_storeEnumTagMultiPayload(v15, v16, v17);
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      v11 = type metadata accessor for Collaboration.Flow.Collaborator(0);
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11))
      {
        v13 = sub_100007E8C(&qword_1011E44B0);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        *v7 = *v8;
        v7[1] = v8[1];
        v7[2] = v8[2];
        v7[3] = v8[3];
        v18 = *(int *)(v11 + 24);
        __dst = (char *)v7 + v18;
        v19 = (char *)v8 + v18;
        v20 = type metadata accessor for Artwork(0);
        v28 = *(_QWORD *)(v20 - 8);
        v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v29(v19, 1, v20))
        {
          v21 = sub_100007E8C((uint64_t *)&unk_1011E4A00);
          memcpy(__dst, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v28 + 16))(__dst, v19, v20);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(__dst, 0, 1, v20);
        }
        *((_BYTE *)v7 + *(int *)(v11 + 28)) = *((_BYTE *)v8 + *(int *)(v11 + 28));
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, v11);
      }
      v22 = sub_100007E8C(&qword_1011E44A8);
      v23 = *(int *)(v22 + 48);
      v24 = (char *)v7 + v23;
      v25 = (char *)v8 + v23;
      v26 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
      *((_BYTE *)v7 + *(int *)(v22 + 64)) = *((_BYTE *)v8 + *(int *)(v22 + 64));
      v15 = v7;
      v16 = v9;
      v17 = 0;
      goto LABEL_13;
    }
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_100C85284(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  _OWORD *v5;
  _OWORD *v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (_OWORD *)((char *)a1 + v4);
  v6 = (_OWORD *)((char *)a2 + v4);
  v7 = type metadata accessor for Collaboration.Flow(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v6, v7);
  if (EnumCaseMultiPayload == 1)
  {
    v12 = type metadata accessor for Playlist.Collaborator(0);
    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v5, v6, v12);
    v13 = v5;
    v14 = v7;
    v15 = 1;
LABEL_12:
    swift_storeEnumTagMultiPayload(v13, v14, v15);
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    v9 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    v10 = *(_QWORD *)(v9 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9))
    {
      v11 = sub_100007E8C(&qword_1011E44B0);
      memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      v16 = v6[1];
      *v5 = *v6;
      v5[1] = v16;
      v17 = *(int *)(v9 + 24);
      v18 = (char *)v5 + v17;
      v19 = (char *)v6 + v17;
      v20 = type metadata accessor for Artwork(0);
      v21 = *(_QWORD *)(v20 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      {
        v22 = sub_100007E8C((uint64_t *)&unk_1011E4A00);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      }
      *((_BYTE *)v5 + *(int *)(v9 + 28)) = *((_BYTE *)v6 + *(int *)(v9 + 28));
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v5, 0, 1, v9);
    }
    v23 = sub_100007E8C(&qword_1011E44A8);
    v24 = *(int *)(v23 + 48);
    v25 = (char *)v5 + v24;
    v26 = (char *)v6 + v24;
    v27 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
    *((_BYTE *)v5 + *(int *)(v23 + 64)) = *((_BYTE *)v6 + *(int *)(v23 + 64));
    v13 = v5;
    v14 = v7;
    v15 = 0;
    goto LABEL_12;
  }
  memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  return a1;
}

_QWORD *sub_100C85498(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;

  *a1 = *a2;
  swift_release();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (_OWORD *)((char *)a1 + v6);
    v8 = (_OWORD *)((char *)a2 + v6);
    sub_10005B748((uint64_t)a1 + v6, type metadata accessor for Collaboration.Flow);
    v9 = type metadata accessor for Collaboration.Flow(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v8, v9);
    if (EnumCaseMultiPayload == 1)
    {
      v14 = type metadata accessor for Playlist.Collaborator(0);
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v7, v8, v14);
      v15 = v7;
      v16 = v9;
      v17 = 1;
LABEL_13:
      swift_storeEnumTagMultiPayload(v15, v16, v17);
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      v11 = type metadata accessor for Collaboration.Flow.Collaborator(0);
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11))
      {
        v13 = sub_100007E8C(&qword_1011E44B0);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        v18 = v8[1];
        *v7 = *v8;
        v7[1] = v18;
        v19 = *(int *)(v11 + 24);
        v20 = (char *)v7 + v19;
        v21 = (char *)v8 + v19;
        v22 = type metadata accessor for Artwork(0);
        v23 = *(_QWORD *)(v22 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
        {
          v24 = sub_100007E8C((uint64_t *)&unk_1011E4A00);
          memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v20, v21, v22);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
        }
        *((_BYTE *)v7 + *(int *)(v11 + 28)) = *((_BYTE *)v8 + *(int *)(v11 + 28));
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, v11);
      }
      v25 = sub_100007E8C(&qword_1011E44A8);
      v26 = *(int *)(v25 + 48);
      v27 = (char *)v7 + v26;
      v28 = (char *)v8 + v26;
      v29 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
      *((_BYTE *)v7 + *(int *)(v25 + 64)) = *((_BYTE *)v8 + *(int *)(v25 + 64));
      v15 = v7;
      v16 = v9;
      v17 = 0;
      goto LABEL_13;
    }
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100C856D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C856E0);
}

uint64_t sub_100C856E0(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for Collaboration.Flow(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_100C8575C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C85768);
}

char *sub_100C85768(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for Collaboration.Flow(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t _s4FlowO18ProfileEditingViewVMa(uint64_t a1)
{
  return sub_100055934(a1, qword_1011E4728, (uint64_t)&_s4FlowO18ProfileEditingViewVMn);
}

uint64_t sub_100C857F0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  result = type metadata accessor for Collaboration.Flow(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

ValueMetadata *_s4FlowO14GlyphImageViewVMa()
{
  return &_s4FlowO14GlyphImageViewVN;
}

uint64_t sub_100C85878(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FBDD80, 1);
}

uint64_t sub_100C85888(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FBDD58, 1);
}

uint64_t sub_100C85898(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FBDD30, 1);
}

uint64_t sub_100C858A8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_10006B604(*(_QWORD *)(v0 + 72), *(_BYTE *)(v0 + 80));
  return swift_deallocObject(v0, 81);
}

uint64_t sub_100C858E8()
{
  uint64_t v0;

  return sub_100C800C0(v0 + 16);
}

uint64_t sub_100C858F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100C8011C(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_100C858F8(uint64_t a1)
{
  uint64_t v2;
  char v3;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_BYTE *)(a1 + 64);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10006B3F8(v2, v3);
  return a1;
}

unint64_t sub_100C8595C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E4798;
  if (!qword_1011E4798)
  {
    v1 = sub_100044B54(&qword_1011E4790);
    sub_100C859E0();
    sub_1003ACA30(&qword_1011E3FC8, &qword_1011E3FD0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E4798);
  }
  return result;
}

unint64_t sub_100C859E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E47A0;
  if (!qword_1011E47A0)
  {
    v1 = sub_100044B54(&qword_1011E47A8);
    sub_100049F28(&qword_1011E3AF8, &qword_1011E3A88, (uint64_t)&protocol conformance descriptor for ProgressView<A, B>);
    sub_100049F28(&qword_1011E2B30, (uint64_t *)&unk_1011E3A60, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E47A0);
  }
  return result;
}

unint64_t sub_100C85A84()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E47B0;
  if (!qword_1011E47B0)
  {
    v1 = sub_100044B54(&qword_1011E4778);
    sub_100C85AF0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E47B0);
  }
  return result;
}

unint64_t sub_100C85AF0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E47B8;
  if (!qword_1011E47B8)
  {
    v1 = sub_100044B54(&qword_1011E4770);
    sub_100C85B74();
    sub_100049F28(&qword_1011E2B30, (uint64_t *)&unk_1011E3A60, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E47B8);
  }
  return result;
}

unint64_t sub_100C85B74()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E47C0;
  if (!qword_1011E47C0)
  {
    v1 = sub_100044B54(&qword_1011E4768);
    sub_100049F28(&qword_1011E47C8, (uint64_t *)&unk_1011E4CE0, (uint64_t)&protocol conformance descriptor for Button<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E47C0);
  }
  return result;
}

uint64_t sub_100C85BF8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.tintColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100C85C20(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.tintColor.setter(v1);
}

uint64_t sub_100C85C58@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.multilineTextAlignment.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100C85C80(unsigned __int8 *a1)
{
  return EnvironmentValues.multilineTextAlignment.setter(*a1);
}

double sub_100C85CA4(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  double result;

  if (a4)
  {
    sub_100055BBC(a1, a2, a3 & 1);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    *(_QWORD *)&result = swift_retain().n128_u64[0];
  }
  return result;
}

uint64_t sub_100C85D1C(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  char v4;

  v4 = *(_BYTE *)(a1 + 128);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), v4);
  return a1;
}

double sub_100C85D80(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  double result;

  if (a4)
  {
    sub_100055BAC(a1, a2, a3 & 1);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_100C85DF8(uint64_t a1)
{
  double result;

  *(_BYTE *)(a1 + 128) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

unint64_t sub_100C85E14()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E48E0;
  if (!qword_1011E48E0)
  {
    v1 = sub_100044B54(&qword_1011E48D8);
    sub_100C85E98();
    sub_100049F28((unint64_t *)&unk_1011E3BD0, &qword_1011E0EA8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E48E0);
  }
  return result;
}

unint64_t sub_100C85E98()
{
  unint64_t result;

  result = qword_1011E48E8;
  if (!qword_1011E48E8)
  {
    result = swift_getWitnessTable(&unk_100EF10A4, &_s4FlowO14GlyphImageViewVN);
    atomic_store(result, (unint64_t *)&qword_1011E48E8);
  }
  return result;
}

unint64_t sub_100C85EDC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E48F8;
  if (!qword_1011E48F8)
  {
    v1 = sub_100044B54(&qword_1011E48F0);
    sub_1003ACA30(&qword_1011E4900, &qword_1011E4908);
    sub_100049F28((unint64_t *)&unk_1011E3BD0, &qword_1011E0EA8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E48F8);
  }
  return result;
}

double sub_100C85F7C(uint64_t a1)
{
  return sub_100C862B0(a1, (uint64_t (*)(_QWORD))&type metadata accessor for Playlist.Collaborator, (uint64_t)&unk_10110C0A0, (uint64_t)&unk_1011E49C0);
}

uint64_t sub_100C85F98@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.isEnabled.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100C85FC4(unsigned __int8 *a1)
{
  return EnvironmentValues.isEnabled.setter(*a1);
}

uint64_t sub_100C85FEC()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = (int *)type metadata accessor for Collaboration.Flow.View(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = type metadata accessor for Playlist.Collaborator(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v29 = *(_QWORD *)(v6 + 64);
  v8 = v0 + v3;
  v9 = sub_100007E8C(&qword_1011E4D50);
  if (swift_getEnumCaseMultiPayload(v0 + v3, v9) == 1)
  {
    v10 = type metadata accessor for DismissAction(0);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v0 + v3, v10);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  v11 = v8 + v1[7];
  v12 = type metadata accessor for Collaboration.Flow(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v11, v12);
  if (EnumCaseMultiPayload == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v11, v5);
  }
  else if (!EnumCaseMultiPayload)
  {
    v28 = v4;
    v14 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v11, 1, v14))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 = v11 + *(int *)(v14 + 24);
      v16 = type metadata accessor for Artwork(0);
      v26 = *(_QWORD *)(v16 - 8);
      v27 = v15;
      v17 = v15;
      v18 = v16;
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v17, 1, v16))
        (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v27, v18);
    }
    v19 = v11 + *(int *)(sub_100007E8C(&qword_1011E44A8) + 48);
    v20 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
    v4 = v28;
  }
  v21 = (id *)(v8 + v1[8]);
  v22 = type metadata accessor for Collaboration.Object(0);
  if (swift_getEnumCaseMultiPayload(v21, v22) == 1)
  {
    v23 = type metadata accessor for Playlist(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v21, v23);
  }
  else
  {

  }
  swift_release();
  if (*(_QWORD *)(v8 + v1[11]))
    swift_release();
  v24 = (v3 + v4 + v7) & ~v7;
  swift_release();
  sub_1000A6174(*(_QWORD *)(v8 + v1[13]), *(_QWORD *)(v8 + v1[13] + 8));
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v24, v5);
  return swift_deallocObject(v0, v24 + v29);
}

double sub_100C86294(uint64_t a1)
{
  return sub_100C862B0(a1, (uint64_t (*)(_QWORD))&type metadata accessor for Playlist.Collaborator, (uint64_t)&unk_10110C078, (uint64_t)&unk_1011E49A8);
}

double sub_100C862B0(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v9 = *(_QWORD *)(type metadata accessor for Collaboration.Flow.View(0) - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v9 + 64);
  v12 = *(unsigned __int8 *)(*(_QWORD *)(a2(0) - 8) + 80);
  return sub_100C7E608(a1, v4 + v10, v4 + ((v10 + v11 + v12) & ~v12), a2, a3, a4);
}

unint64_t sub_100C86344()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E4918;
  if (!qword_1011E4918)
  {
    v1 = sub_100044B54(&qword_1011E4858);
    sub_100049F28(&qword_1011E4920, &qword_1011E4850, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    sub_100C863C8();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E4918);
  }
  return result;
}

unint64_t sub_100C863C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E4928;
  if (!qword_1011E4928)
  {
    v1 = sub_100044B54(&qword_1011E4930);
    sub_100C8644C();
    sub_100049F28(&qword_1011E4168, &qword_1011E4170, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyTransformModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E4928);
  }
  return result;
}

unint64_t sub_100C8644C()
{
  unint64_t result;

  result = qword_1011E4938;
  if (!qword_1011E4938)
  {
    result = swift_getWitnessTable(&unk_100EF1144, &_s4FlowO12ActionButtonVN);
    atomic_store(result, (unint64_t *)&qword_1011E4938);
  }
  return result;
}

uint64_t sub_100C86490(uint64_t a1)
{
  sub_100055BBC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_100C86518(uint64_t a1)
{
  sub_100055BAC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_100C865A0()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = (int *)type metadata accessor for Collaboration.Flow.View(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v29 = *(_QWORD *)(v6 + 64);
  v8 = v0 + v3;
  v9 = sub_100007E8C(&qword_1011E4D50);
  if (swift_getEnumCaseMultiPayload(v0 + v3, v9) == 1)
  {
    v10 = type metadata accessor for DismissAction(0);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v0 + v3, v10);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  v11 = v8 + v1[7];
  v12 = type metadata accessor for Collaboration.Flow(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v11, v12);
  if (EnumCaseMultiPayload == 1)
  {
    v20 = type metadata accessor for Playlist.Collaborator(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v11, v20);
  }
  else if (!EnumCaseMultiPayload)
  {
    v28 = v4;
    v14 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v11, 1, v14))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 = v11 + *(int *)(v14 + 24);
      v16 = type metadata accessor for Artwork(0);
      v26 = *(_QWORD *)(v16 - 8);
      v27 = v15;
      v17 = v15;
      v18 = v16;
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v17, 1, v16))
        (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v27, v18);
    }
    v19 = sub_100007E8C(&qword_1011E44A8);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v11 + *(int *)(v19 + 48), v5);
    v4 = v28;
  }
  v21 = (id *)(v8 + v1[8]);
  v22 = type metadata accessor for Collaboration.Object(0);
  if (swift_getEnumCaseMultiPayload(v21, v22) == 1)
  {
    v23 = type metadata accessor for Playlist(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v21, v23);
  }
  else
  {

  }
  swift_release();
  if (*(_QWORD *)(v8 + v1[11]))
    swift_release();
  v24 = (v3 + v4 + v7) & ~v7;
  swift_release();
  sub_1000A6174(*(_QWORD *)(v8 + v1[13]), *(_QWORD *)(v8 + v1[13] + 8));
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v24, v5);
  return swift_deallocObject(v0, v24 + v29);
}

double sub_100C86844(uint64_t a1)
{
  return sub_100C862B0(a1, (uint64_t (*)(_QWORD))&type metadata accessor for URL, (uint64_t)&unk_10110C050, (uint64_t)&unk_1011E4998);
}

uint64_t sub_100C86868()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

double sub_100C8687C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Collaboration.Flow.View(0) - 8) + 80);
  return sub_100C7C214(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_100C868B8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100C868C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100C7D30C(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_100C868D0(uint64_t a1)
{
  sub_100055BBC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_100C8693C(uint64_t a1)
{
  sub_100055BAC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return a1;
}

uint64_t sub_100C869AC()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id *v16;
  uint64_t v17;
  uint64_t v18;

  v1 = (int *)type metadata accessor for Collaboration.Flow.View(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = v0 + v3;
  v6 = sub_100007E8C(&qword_1011E4D50);
  if (swift_getEnumCaseMultiPayload(v0 + v3, v6) == 1)
  {
    v7 = type metadata accessor for DismissAction(0);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v0 + v3, v7);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  v8 = v5 + v1[7];
  v9 = type metadata accessor for Collaboration.Flow(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v8, v9);
  if (EnumCaseMultiPayload == 1)
  {
    v15 = type metadata accessor for Playlist.Collaborator(0);
  }
  else
  {
    if (EnumCaseMultiPayload)
      goto LABEL_12;
    v11 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v8, 1, v11))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v12 = v8 + *(int *)(v11 + 24);
      v13 = type metadata accessor for Artwork(0);
      v14 = *(_QWORD *)(v13 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
        (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
    }
    v8 += *(int *)(sub_100007E8C(&qword_1011E44A8) + 48);
    v15 = type metadata accessor for URL(0);
  }
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v8, v15);
LABEL_12:
  v16 = (id *)(v5 + v1[8]);
  v17 = type metadata accessor for Collaboration.Object(0);
  if (swift_getEnumCaseMultiPayload(v16, v17) == 1)
  {
    v18 = type metadata accessor for Playlist(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v16, v18);
  }
  else
  {

  }
  swift_release();
  if (*(_QWORD *)(v5 + v1[11]))
    swift_release();
  swift_release();
  sub_1000A6174(*(_QWORD *)(v5 + v1[13]), *(_QWORD *)(v5 + v1[13] + 8));
  return swift_deallocObject(v0, v3 + v4);
}

uint64_t sub_100C86BF4()
{
  return sub_100C86C10((uint64_t (*)(uint64_t))sub_100C7D7BC);
}

uint64_t sub_100C86C04()
{
  return sub_100C86C10(sub_100C7D968);
}

uint64_t sub_100C86C10(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Collaboration.Flow.View(0) - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

unint64_t sub_100C86C4C()
{
  unint64_t result;

  result = qword_1011E4960;
  if (!qword_1011E4960)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Collaboration.Error, &type metadata for Collaboration.Error);
    atomic_store(result, &qword_1011E4960);
  }
  return result;
}

uint64_t sub_100C86C94()
{
  uint64_t v0;
  _QWORD *v1;

  type metadata accessor for Collaboration.Flow.View(0);
  v1 = (_QWORD *)swift_task_alloc(dword_1011E496C);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10005AEE4;
  return sub_100C7D900();
}

uint64_t sub_100C86D1C()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id *v16;
  uint64_t v17;
  uint64_t v18;

  v1 = (int *)type metadata accessor for Collaboration.Flow.View(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v5 = v0 + v3;
  v6 = sub_100007E8C(&qword_1011E4D50);
  if (swift_getEnumCaseMultiPayload(v0 + v3, v6) == 1)
  {
    v7 = type metadata accessor for DismissAction(0);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v0 + v3, v7);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  v8 = v5 + v1[7];
  v9 = type metadata accessor for Collaboration.Flow(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v8, v9);
  if (EnumCaseMultiPayload == 1)
  {
    v15 = type metadata accessor for Playlist.Collaborator(0);
  }
  else
  {
    if (EnumCaseMultiPayload)
      goto LABEL_12;
    v11 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v8, 1, v11))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v12 = v8 + *(int *)(v11 + 24);
      v13 = type metadata accessor for Artwork(0);
      v14 = *(_QWORD *)(v13 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
        (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
    }
    v8 += *(int *)(sub_100007E8C(&qword_1011E44A8) + 48);
    v15 = type metadata accessor for URL(0);
  }
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v8, v15);
LABEL_12:
  v16 = (id *)(v5 + v1[8]);
  v17 = type metadata accessor for Collaboration.Object(0);
  if (swift_getEnumCaseMultiPayload(v16, v17) == 1)
  {
    v18 = type metadata accessor for Playlist(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v16, v18);
  }
  else
  {

  }
  swift_release();
  if (*(_QWORD *)(v5 + v1[11]))
    swift_release();
  swift_release();
  sub_1000A6174(*(_QWORD *)(v5 + v1[13]), *(_QWORD *)(v5 + v1[13] + 8));
  return swift_deallocObject(v0, v3 + v4);
}

uint64_t sub_100C86F6C()
{
  uint64_t v0;
  _QWORD *v1;

  type metadata accessor for Collaboration.Flow.View(0);
  v1 = (_QWORD *)swift_task_alloc(dword_1011E4984);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10006AEE4;
  return sub_100C7C358();
}

uint64_t sub_100C86FF0()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = (int *)type metadata accessor for Collaboration.Flow.View(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v29 = *(_QWORD *)(v6 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v8 = v0 + v3;
  v9 = sub_100007E8C(&qword_1011E4D50);
  if (swift_getEnumCaseMultiPayload(v0 + v3, v9) == 1)
  {
    v10 = type metadata accessor for DismissAction(0);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v0 + v3, v10);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  v11 = v8 + v1[7];
  v12 = type metadata accessor for Collaboration.Flow(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v11, v12);
  if (EnumCaseMultiPayload == 1)
  {
    v20 = type metadata accessor for Playlist.Collaborator(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v11, v20);
  }
  else if (!EnumCaseMultiPayload)
  {
    v28 = v4;
    v14 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v11, 1, v14))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 = v11 + *(int *)(v14 + 24);
      v16 = type metadata accessor for Artwork(0);
      v26 = *(_QWORD *)(v16 - 8);
      v27 = v15;
      v17 = v15;
      v18 = v16;
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v17, 1, v16))
        (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v27, v18);
    }
    v19 = sub_100007E8C(&qword_1011E44A8);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v11 + *(int *)(v19 + 48), v5);
    v4 = v28;
  }
  v21 = (id *)(v8 + v1[8]);
  v22 = type metadata accessor for Collaboration.Object(0);
  if (swift_getEnumCaseMultiPayload(v21, v22) == 1)
  {
    v23 = type metadata accessor for Playlist(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v21, v23);
  }
  else
  {

  }
  swift_release();
  if (*(_QWORD *)(v8 + v1[11]))
    swift_release();
  v24 = (v3 + v4 + v7) & ~v7;
  swift_release();
  sub_1000A6174(*(_QWORD *)(v8 + v1[13]), *(_QWORD *)(v8 + v1[13] + 8));
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v24, v5);
  return swift_deallocObject(v0, v24 + v29);
}

uint64_t sub_100C8729C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(type metadata accessor for Collaboration.Flow.View(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for URL(0) - 8) + 80);
  v8 = v5 + v6 + v7;
  v9 = *(_QWORD *)(v1 + 16);
  v10 = *(_QWORD *)(v1 + 24);
  v11 = v1 + v5;
  v12 = v1 + (v8 & ~v7);
  v13 = (_QWORD *)swift_task_alloc(dword_1011E4994);
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_10006AEE4;
  return sub_100C7DAA8(a1, v9, v10, v11, v12);
}

uint64_t sub_100C87354(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(type metadata accessor for Collaboration.Flow.View(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Playlist.Collaborator(0) - 8) + 80);
  v8 = v5 + v6 + v7;
  v9 = *(_QWORD *)(v1 + 16);
  v10 = *(_QWORD *)(v1 + 24);
  v11 = v1 + v5;
  v12 = v1 + (v8 & ~v7);
  v13 = (_QWORD *)swift_task_alloc(dword_1011E49A4);
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_10006AEE4;
  return sub_100C7E7D8(a1, v9, v10, v11, v12);
}

uint64_t sub_100C8740C()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = (int *)type metadata accessor for Collaboration.Flow.View(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = type metadata accessor for Playlist.Collaborator(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v29 = *(_QWORD *)(v6 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v8 = v0 + v3;
  v9 = sub_100007E8C(&qword_1011E4D50);
  if (swift_getEnumCaseMultiPayload(v0 + v3, v9) == 1)
  {
    v10 = type metadata accessor for DismissAction(0);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v0 + v3, v10);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  v11 = v8 + v1[7];
  v12 = type metadata accessor for Collaboration.Flow(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v11, v12);
  if (EnumCaseMultiPayload == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v11, v5);
  }
  else if (!EnumCaseMultiPayload)
  {
    v28 = v4;
    v14 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v11, 1, v14))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 = v11 + *(int *)(v14 + 24);
      v16 = type metadata accessor for Artwork(0);
      v26 = *(_QWORD *)(v16 - 8);
      v27 = v15;
      v17 = v15;
      v18 = v16;
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v17, 1, v16))
        (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v27, v18);
    }
    v19 = v11 + *(int *)(sub_100007E8C(&qword_1011E44A8) + 48);
    v20 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
    v4 = v28;
  }
  v21 = (id *)(v8 + v1[8]);
  v22 = type metadata accessor for Collaboration.Object(0);
  if (swift_getEnumCaseMultiPayload(v21, v22) == 1)
  {
    v23 = type metadata accessor for Playlist(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v21, v23);
  }
  else
  {

  }
  swift_release();
  if (*(_QWORD *)(v8 + v1[11]))
    swift_release();
  v24 = (v3 + v4 + v7) & ~v7;
  swift_release();
  sub_1000A6174(*(_QWORD *)(v8 + v1[13]), *(_QWORD *)(v8 + v1[13] + 8));
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v24, v5);
  return swift_deallocObject(v0, v24 + v29);
}

uint64_t sub_100C876BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(type metadata accessor for Collaboration.Flow.View(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Playlist.Collaborator(0) - 8) + 80);
  v8 = v5 + v6 + v7;
  v9 = *(_QWORD *)(v1 + 16);
  v10 = *(_QWORD *)(v1 + 24);
  v11 = v1 + v5;
  v12 = v1 + (v8 & ~v7);
  v13 = (_QWORD *)swift_task_alloc(dword_1011E49BC);
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_10006AEE4;
  return sub_100C7E084(a1, v9, v10, v11, v12);
}

unint64_t sub_100C87770()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E49C8;
  if (!qword_1011E49C8)
  {
    v1 = objc_opt_self(ICUserIdentity);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1011E49C8);
  }
  return result;
}

uint64_t _s4FlowO12ActionButtonV5StyleOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100C877F8 + 4 * byte_100EF0F05[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100C8782C + 4 * byte_100EF0F00[v4]))();
}

uint64_t sub_100C8782C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100C87834(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100C8783CLL);
  return result;
}

uint64_t sub_100C87848(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100C87850);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100C87854(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100C8785C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s4FlowO12ActionButtonV5StyleOMa()
{
  return &_s4FlowO12ActionButtonV5StyleON;
}

unint64_t sub_100C8787C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1011E49D0;
  if (!qword_1011E49D0)
  {
    v1 = sub_100044B54(&qword_1011E4788);
    v2[0] = sub_100044B54(&qword_1011E4778);
    v2[1] = sub_100C85A84();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.bold(_:)>>, 1);
    sub_100049F28(&qword_1011E49D8, &qword_1011E47D0, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E49D0);
  }
  return result;
}

uint64_t sub_100C87928()
{
  return sub_100049F28(&qword_1011E49E0, &qword_1011E49E8, (uint64_t)&protocol conformance descriptor for VStack<A>);
}

unint64_t sub_100C8795C()
{
  unint64_t result;

  result = qword_1011E49F0;
  if (!qword_1011E49F0)
  {
    result = swift_getWitnessTable(&unk_100EF1330, &_s4FlowO12ActionButtonV5StyleON);
    atomic_store(result, (unint64_t *)&qword_1011E49F0);
  }
  return result;
}

double sub_100C879A8@<D0>(unint64_t a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, unint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, __n128 a10@<Q0>, double a11, char a12, double a13, char a14, uint64_t a15, uint64_t a16)
{
  double result;

  *(_QWORD *)&result = sub_100C87A58(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, (uint64_t *)&unk_1011E4D10, &qword_1011E0BB0).n128_u64[0];
  return result;
}

double sub_100C87A00@<D0>(unint64_t a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, unint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, __n128 a10@<Q0>, double a11, char a12, double a13, char a14, uint64_t a15, uint64_t a16)
{
  double result;

  *(_QWORD *)&result = sub_100C87A58(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, &qword_1011E4E50, &qword_1011E4020).n128_u64[0];
  return result;
}

__n128 sub_100C87A58@<Q0>(unint64_t a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, unint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, __n128 a10@<Q0>, double a11, char a12, double a13, char a14, uint64_t a15, uint64_t a16, uint64_t *a17, uint64_t *a18)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  double v33;
  double v34;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __n128 result;
  unsigned int v44;
  unsigned int v45;
  double v46;
  unint64_t v47;
  double v48;
  unint64_t v49;
  _OWORD v50[7];

  v19 = v18;
  v20 = a9;
  v21 = a18;
  v23 = a15;
  v22 = a16;
  v24 = a13;
  v25 = a11;
  v26 = a2 & 1;
  a10.n128_u64[0] = a1;
  if ((_DWORD)v26)
    a10.n128_f64[0] = -INFINITY;
  v27 = a4 & 1;
  v28 = a3;
  if ((_DWORD)v27)
    v28 = a10.n128_f64[0];
  v29 = a6 & 1;
  v30 = a8 & 1;
  v31 = a5;
  if ((a6 & 1) != 0)
    v31 = v28;
  if (a10.n128_f64[0] > v28 || v28 > v31)
    goto LABEL_22;
  a10.n128_u64[0] = a7;
  if ((a8 & 1) != 0)
    a10.n128_f64[0] = -INFINITY;
  v33 = a11;
  if ((a12 & 1) != 0)
    v33 = a10.n128_f64[0];
  v34 = a13;
  if ((a14 & 1) != 0)
    v34 = v33;
  if (a10.n128_f64[0] > v33 || v33 > v34)
  {
LABEL_22:
    v48 = a5;
    v49 = a7;
    v46 = a3;
    v47 = a1;
    v45 = v26;
    v44 = v27;
    v37 = static os_log_type_t.fault.getter(a10);
    v38 = (void *)static Log.runtimeIssuesLog.getter();
    v39 = v37;
    v20 = a9;
    os_log(_:dso:log:_:_:)(v39, &_mh_execute_header, v38, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v27 = v44;
    v23 = a15;
    v22 = a16;
    v26 = v45;
    v25 = a11;
    v24 = a13;
    a3 = v46;
    a1 = v47;
    a5 = v48;
    a7 = v49;
    v21 = a18;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v50, a1, v26, *(_QWORD *)&a3, v27, *(_QWORD *)&a5, v29, a7, v30, *(_QWORD *)&v25, a12 & 1, *(_QWORD *)&v24, a14 & 1, v23, v22);
  sub_10004A160(v19, v20, a17);
  v40 = v20 + *(int *)(sub_100007E8C(v21) + 36);
  v41 = v50[5];
  *(_OWORD *)(v40 + 64) = v50[4];
  *(_OWORD *)(v40 + 80) = v41;
  *(_OWORD *)(v40 + 96) = v50[6];
  v42 = v50[1];
  *(_OWORD *)v40 = v50[0];
  *(_OWORD *)(v40 + 16) = v42;
  result = (__n128)v50[3];
  *(_OWORD *)(v40 + 32) = v50[2];
  *(__n128 *)(v40 + 48) = result;
  return result;
}

double sub_100C87C24@<D0>(unint64_t a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, unint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, __n128 a10@<Q0>, double a11, char a12, double a13, char a14, uint64_t a15, uint64_t a16)
{
  double result;

  *(_QWORD *)&result = sub_10014C51C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, &qword_1011E3B30, &qword_1011E3B38).n128_u64[0];
  return result;
}

double sub_100C87C7C@<D0>(unint64_t a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, unint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, __n128 a10@<Q0>, double a11, char a12, double a13, char a14, uint64_t a15, uint64_t a16)
{
  double result;

  *(_QWORD *)&result = sub_100C87A58(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, (uint64_t *)&unk_1011E4D00, &qword_1011E3B50).n128_u64[0];
  return result;
}

double sub_100C87CD4@<D0>(unint64_t a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, unint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, __n128 a10@<Q0>, double a11, char a12, double a13, char a14, uint64_t a15, uint64_t a16)
{
  double result;

  *(_QWORD *)&result = sub_100C87A58(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, (uint64_t *)&unk_1011E4CF0, &qword_1011E47E8).n128_u64[0];
  return result;
}

double sub_100C87D2C@<D0>(unint64_t a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, unint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, __n128 a10@<Q0>, double a11, char a12, double a13, char a14, uint64_t a15, uint64_t a16)
{
  double result;

  *(_QWORD *)&result = sub_10014C51C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, (uint64_t *)&unk_1011E4CE0, &qword_1011E4768).n128_u64[0];
  return result;
}

uint64_t InlineProfileEditingView.Context.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  InlineProfileEditingView.Context.init()();
  return v1;
}

double InlineProfileEditingView.init(context:)@<D0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  __n128 v3;
  double result;
  __n128 v5;
  __n128 v6[5];
  unint64_t v7;

  sub_100C8C898(a1, v6);
  v3 = v6[3];
  a2[2] = v6[2];
  a2[3] = v3;
  a2[4] = v6[4];
  a2[5].n128_u64[0] = v7;
  result = v6[0].n128_f64[0];
  v5 = v6[1];
  *a2 = v6[0];
  a2[1] = v5;
  return result;
}

uint64_t property wrapper backing initializer of InlineProfileEditingView.Context.artwork(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = sub_100007E8C((uint64_t *)&unk_1011E4A00);
  __chkstk_darwin();
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A160(a1, (uint64_t)v4, (uint64_t *)&unk_1011E4A00);
  Published.init(initialValue:)(v4, v2);
  return sub_10004FF60(a1, (uint64_t *)&unk_1011E4A00);
}

double InlineProfileEditingView.Context.userArtwork.getter@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  double result;

  KeyPath = swift_getKeyPath(&unk_100EF13A8);
  v4 = swift_getKeyPath(&unk_100EF13D0);
  static Published.subscript.getter(a1, v1, KeyPath, v4);
  swift_release(KeyPath);
  *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  return result;
}

uint64_t sub_100C87F10()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100EF1360);
  v2 = swift_getKeyPath(&unk_100EF1388);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t property wrapper backing initializer of Reactions.StackView.Model.userImage(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = a1;
  v1 = sub_100007E8C(&qword_1011DED30);
  return Published.init(initialValue:)(&v3, v1);
}

uint64_t sub_100C87FC4()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100EF13F8);
  v2 = swift_getKeyPath(&unk_100EF1420);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t InlineProfileEditingView.Context.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t KeyPath;
  uint64_t v36;
  id v37;
  void *v38;
  id v39;
  uint64_t v40;
  unint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  NSString *v61;
  id v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  id v66;
  unint64_t v67;
  Class isa;
  double v69;
  id v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  unint64_t v75;
  unint64_t v76;
  double v77;
  uint64_t v78;
  id v79;
  void *v80;
  void *v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  __n128 v89;
  id v90;
  void *v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  id v95;
  Class v96;
  id v97;
  id v98;
  uint64_t v99;
  __n128 v100;
  char *v102;
  char *v103;
  _QWORD *v104;
  _QWORD *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  id v114;
  unint64_t v115;

  v1 = sub_100007E8C((uint64_t *)&unk_1011E4A10);
  v109 = *(_QWORD *)(v1 - 8);
  v110 = v1;
  __chkstk_darwin(v1);
  v106 = (char *)&v102 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100007E8C(&qword_1011E1138);
  v107 = *(_QWORD *)(v3 - 8);
  v108 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v102 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011E4A20);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v102 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C((uint64_t *)&unk_1011E4A00);
  __chkstk_darwin(v10);
  v104 = (char **)((char *)&v102 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v12);
  v105 = (char **)((char *)&v102 - v13);
  __chkstk_darwin(v14);
  v16 = (char *)&v102 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v102 - v18;
  v20 = v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context__artwork;
  v21 = type metadata accessor for Artwork(0);
  v111 = *(_QWORD *)(v21 - 8);
  v112 = v21;
  (*(void (**)(char *, uint64_t, uint64_t))(v111 + 56))(v19, 1, 1);
  sub_10004A160((uint64_t)v19, (uint64_t)v16, (uint64_t *)&unk_1011E4A00);
  v103 = v16;
  Published.init(initialValue:)(v16, v10);
  v102 = v19;
  sub_10004FF60((uint64_t)v19, (uint64_t *)&unk_1011E4A00);
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v20, v9, v6);
  v22 = v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context__name;
  v114 = 0;
  v115 = 0xE000000000000000;
  Published.init(initialValue:)(&v114, &type metadata for String);
  (*(void (**)(uint64_t, char *, uint64_t))(v107 + 32))(v22, v5, v108);
  v23 = v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context__image;
  v114 = 0;
  v24 = sub_100007E8C(&qword_1011DED30);
  v25 = v106;
  Published.init(initialValue:)(&v114, v24);
  v26 = v0;
  (*(void (**)(uint64_t, char *, uint64_t))(v109 + 32))(v23, v25, v110);
  *(_BYTE *)(v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context_hasRemovedImage) = 0;
  v27 = objc_msgSend((id)objc_opt_self(ICMediaUserStateCenter), "shared");
  v28 = objc_msgSend(v27, "activeUserState");

  v29 = objc_msgSend(v28, "music");
  v30 = objc_msgSend(v29, "userProfile");

  if (v30)
  {
    v31 = objc_msgSend(v30, "name");
    v32 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
    v34 = v33;

    KeyPath = swift_getKeyPath(&unk_100EF1360);
    v36 = swift_getKeyPath(&unk_100EF1388);
    v114 = v32;
    v115 = v34;
    swift_retain();
    static Published.subscript.setter(&v114, v26, KeyPath, v36);
    v37 = objc_msgSend(v30, "artworkInfo");
    if (v37)
    {
      v38 = v37;
      v39 = objc_msgSend(v37, "responseDictionary");

      if (v39)
      {
        v40 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v39, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

        v41 = sub_100C80B60(v40);
        v42 = swift_bridgeObjectRelease(v40);
        if (v41)
        {
          v43 = (uint64_t)v102;
          Artwork.init(_:)(v41, v42);
          v44 = swift_getKeyPath(&unk_100EF13A8);
          v45 = swift_getKeyPath(&unk_100EF13D0);
          v46 = (uint64_t)v103;
          sub_10004A160(v43, (uint64_t)v103, (uint64_t *)&unk_1011E4A00);
          swift_retain();
          static Published.subscript.setter(v46, v26, v44, v45);
          sub_10004FF60(v43, (uint64_t *)&unk_1011E4A00);
        }
      }
    }
  }
  v47 = swift_getKeyPath(&unk_100EF1360);
  v48 = swift_getKeyPath(&unk_100EF1388);
  static Published.subscript.getter(&v114, v26, v47, v48);
  swift_release();
  swift_release();
  v50 = (unint64_t)v114;
  v49 = v115;
  swift_bridgeObjectRelease(v115);
  v51 = HIBYTE(v49) & 0xF;
  if ((v49 & 0x2000000000000000) == 0)
    v51 = v50 & 0xFFFFFFFFFFFFLL;
  v53 = v111;
  v52 = v112;
  if (v51)
  {
    v54 = swift_getKeyPath(&unk_100EF13A8);
    v55 = swift_getKeyPath(&unk_100EF13D0);
    v56 = v105;
    static Published.subscript.getter(v105, v26, v54, v55);
    swift_release();
    v57 = swift_release();
    LODWORD(v54) = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, __n128))(v53 + 48))(v56, 1, v52, v57);
    sub_10004FF60((uint64_t)v56, (uint64_t *)&unk_1011E4A00);
    if ((_DWORD)v54 != 1)
      goto LABEL_24;
  }
  v58 = sub_100007E8C(&qword_1011DF520);
  v59 = swift_allocObject(v58, 40, 7);
  *(_OWORD *)(v59 + 16) = xmmword_100EA7A90;
  *(_QWORD *)(v59 + 32) = CNContactThumbnailImageDataKey;
  v114 = (id)v59;
  specialized Array._endMutation()(v59);
  v113 = (unint64_t)v114;
  v60 = (void *)objc_opt_self(CNContactFormatter);
  v61 = CNContactThumbnailImageDataKey;
  v62 = objc_msgSend(v60, "descriptorForRequiredKeysForStyle:", 0);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v62);
  v64 = *(_QWORD *)((v113 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v63 = *(_QWORD *)((v113 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v64 >= v63 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v63 > 1, v64 + 1, 1);
  v65 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v64, v62);
  specialized Array._endMutation()(v65);
  v66 = objc_msgSend(objc_allocWithZone((Class)CNContactStore), "init");
  v67 = v113;
  sub_100007E8C(&qword_1011E4A48);
  isa = Array._bridgeToObjectiveC()().super.isa;
  *(_QWORD *)&v69 = swift_bridgeObjectRelease(v67).n128_u64[0];
  v114 = 0;
  v70 = objc_msgSend(v66, "_ios_meContactWithKeysToFetch:error:", isa, &v114, v69);

  v71 = v114;
  if (!v70)
  {
    v98 = v114;
    v99 = _convertNSErrorToError(_:)(v71);

    swift_willThrow(v100);
    swift_errorRelease(v99);
    return v26;
  }
  v72 = swift_getKeyPath(&unk_100EF1360);
  v73 = swift_getKeyPath(&unk_100EF1388);
  v74 = v71;
  static Published.subscript.getter(&v114, v26, v72, v73);
  swift_release();
  swift_release();
  v76 = (unint64_t)v114;
  v75 = v115;
  *(_QWORD *)&v77 = swift_bridgeObjectRelease(v115).n128_u64[0];
  v78 = HIBYTE(v75) & 0xF;
  if ((v75 & 0x2000000000000000) == 0)
    v78 = v76 & 0xFFFFFFFFFFFFLL;
  if (!v78)
  {
    v79 = objc_msgSend(v60, "stringFromContact:style:", v70, 0, v77);
    if (v79)
    {
      v80 = v79;
      v81 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v79);
      v83 = v82;

      v84 = swift_getKeyPath(&unk_100EF1360);
      v85 = swift_getKeyPath(&unk_100EF1388);
      v114 = v81;
      v115 = v83;
      swift_retain();
      static Published.subscript.setter(&v114, v26, v84, v85);
    }
  }
  v86 = swift_getKeyPath(&unk_100EF13A8);
  v87 = swift_getKeyPath(&unk_100EF13D0);
  v88 = v104;
  static Published.subscript.getter(v104, v26, v86, v87);
  swift_release();
  v89 = swift_release();
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t, __n128))(v53 + 48))(v88, 1, v52, v89) != 1)
  {

    sub_10004FF60((uint64_t)v88, (uint64_t *)&unk_1011E4A00);
    return v26;
  }
  sub_10004FF60((uint64_t)v88, (uint64_t *)&unk_1011E4A00);
  v90 = objc_msgSend(v70, "thumbnailImageData");
  if (!v90)
  {

LABEL_24:
    return v26;
  }
  v91 = v90;
  v92 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v90);
  v94 = v93;

  v95 = objc_allocWithZone((Class)UIImage);
  sub_100079DE4(v92, v94);
  v96 = Data._bridgeToObjectiveC()().super.isa;
  v97 = objc_msgSend(v95, "initWithData:", v96);
  sub_1000652DC(v92, v94);

  sub_100C8C6CC(v97);
  sub_1000652DC(v92, v94);
  return v26;
}

BOOL InlineProfileEditingView.Context.canValidate.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  Swift::String v2;
  unint64_t v3;
  uint64_t v5;

  KeyPath = swift_getKeyPath(&unk_100EF1360);
  swift_getKeyPath(&unk_100EF1388);
  static Published.subscript.getter(&v5, v0, KeyPath);
  swift_release();
  swift_release();
  v2 = String.trim()();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v3 = ((unint64_t)v2._object >> 56) & 0xF;
  if (((uint64_t)v2._object & 0x2000000000000000) == 0)
    v3 = v2._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  return v3 != 0;
}

uint64_t InlineProfileEditingView.Context.userName.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t countAndFlagsBits;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100EF1360);
  swift_getKeyPath(&unk_100EF1388);
  static Published.subscript.getter(&v4, v0, KeyPath);
  swift_release();
  swift_release();
  countAndFlagsBits = String.trim()()._countAndFlagsBits;
  swift_bridgeObjectRelease();
  return countAndFlagsBits;
}

uint64_t InlineProfileEditingView.Context.hasRemovedImage.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context_hasRemovedImage);
  swift_beginAccess(v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context_hasRemovedImage, v3, 0, 0);
  return *v1;
}

void InlineProfileEditingView.Context.hasRemovedImage.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  _BYTE v4[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context_hasRemovedImage);
  swift_beginAccess(v3, v4, 1, 0);
  *v3 = a1;
}

uint64_t (*InlineProfileEditingView.Context.hasRemovedImage.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context_hasRemovedImage, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t InlineProfileEditingView.Context.userImage.getter()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _BYTE *v3;
  uint64_t result;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[24];

  sub_100007E8C((uint64_t *)&unk_1011E4A00);
  __chkstk_darwin();
  v2 = &v9[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v3 = (_BYTE *)(v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context_hasRemovedImage);
  swift_beginAccess(v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context_hasRemovedImage, v9, 0, 0);
  result = 0;
  if ((*v3 & 1) == 0)
  {
    KeyPath = swift_getKeyPath(&unk_100EF13A8);
    swift_getKeyPath(&unk_100EF13D0);
    static Published.subscript.getter(v2, v0, KeyPath);
    swift_release();
    swift_release();
    v6 = type metadata accessor for Artwork(0);
    LODWORD(KeyPath) = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v2, 1, v6);
    sub_10004FF60((uint64_t)v2, (uint64_t *)&unk_1011E4A00);
    result = 0;
    if ((_DWORD)KeyPath == 1)
    {
      v7 = swift_getKeyPath(&unk_100EF13F8);
      swift_getKeyPath(&unk_100EF1420);
      static Published.subscript.getter(&v8, v0, v7);
      swift_release();
      swift_release();
      return v8;
    }
  }
  return result;
}

uint64_t InlineProfileEditingView.Context.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context__artwork;
  v2 = sub_100007E8C(&qword_1011E4A20);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context__name;
  v4 = sub_100007E8C(&qword_1011E1138);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context__image;
  v6 = sub_100007E8C((uint64_t *)&unk_1011E4A10);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return v0;
}

uint64_t InlineProfileEditingView.Context.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context__artwork;
  v2 = sub_100007E8C(&qword_1011E4A20);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context__name;
  v4 = sub_100007E8C(&qword_1011E1138);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context__image;
  v6 = sub_100007E8C((uint64_t *)&unk_1011E4A10);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100C88E08@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for InlineProfileEditingView.Context(0);
  result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

uint64_t property wrapper backing initializer of InlineProfileEditingView.imagePickerSourceType(uint64_t a1, uint64_t a2)
{
  _QWORD v3[3];

  v3[0] = a1;
  v3[1] = a2;
  State.init(wrappedValue:)(v3, &type metadata for ImagePicker.SourceType);
  return v3[2];
}

uint64_t property wrapper backing initializer of InlineProfileEditingView.context(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for InlineProfileEditingView.Context(0);
  v3 = sub_100048748(&qword_1011E4A50, type metadata accessor for InlineProfileEditingView.Context, (uint64_t)&protocol conformance descriptor for InlineProfileEditingView.Context);
  return ObservedObject.init(wrappedValue:)(a1, v2, v3);
}

uint64_t InlineProfileEditingView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  char v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  char *v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  char *v81;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char v108[16];
  uint64_t v109;
  __int128 v110;
  uint64_t v111;
  uint64_t v112;
  unsigned __int8 v113;
  uint64_t v114;
  unint64_t v115;
  _OWORD v116[7];

  v2 = v1;
  v106 = a1;
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v105 = (char *)&v88 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = type metadata accessor for String.LocalizationValue(0);
  v99 = *(_QWORD *)(v104 - 8);
  __chkstk_darwin();
  v100 = (char *)&v88 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v98 = (char *)&v88 - v5;
  v91 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin();
  v7 = (_OWORD *)((char *)&v88 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100007E8C(&qword_1011E4A58);
  __chkstk_darwin();
  v9 = (char *)&v88 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011E4A60);
  __chkstk_darwin();
  v12 = (char *)&v88 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = sub_100007E8C(&qword_1011E4A68);
  __chkstk_darwin();
  v14 = (char *)&v88 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011E4A70);
  __chkstk_darwin();
  v16 = (char *)&v88 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = sub_100007E8C(&qword_1011E4A78);
  __chkstk_darwin();
  v92 = (char *)&v88 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = sub_100007E8C(&qword_1011E4A80);
  v96 = *(_QWORD *)(v97 - 8);
  __chkstk_darwin();
  v94 = (char *)&v88 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = sub_100007E8C(&qword_1011E4A88);
  __chkstk_darwin();
  v93 = (char *)&v88 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = sub_100007E8C(&qword_1011E4A90);
  v102 = *(_QWORD *)(v103 - 8);
  __chkstk_darwin();
  v101 = (char *)&v88 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v9 = static VerticalAlignment.center.getter(v21);
  *((_QWORD *)v9 + 1) = 0;
  v9[16] = 1;
  v22 = sub_100007E8C(&qword_1011E4A98);
  sub_100C897FC(v2, (uint64_t)&v9[*(int *)(v22 + 44)]);
  v23 = objc_msgSend((id)objc_opt_self(UIColor), "quaternarySystemFillColor");
  v24 = Color.init(_:)(v23);
  v25 = static Edge.Set.all.getter(v24);
  sub_10004A160((uint64_t)v9, (uint64_t)v12, &qword_1011E4A58);
  v26 = &v12[*(int *)(v10 + 36)];
  *(_QWORD *)v26 = v24;
  v26[8] = v25;
  v27 = sub_10004FF60((uint64_t)v9, &qword_1011E4A58);
  v28 = static Alignment.center.getter(v27);
  LOBYTE(v85) = 1;
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v116, 0, 1, 0, 1, 0, 1, 0x4052800000000000, 0, 0, 1, 0, v85, v28, v29);
  sub_10004A160((uint64_t)v12, (uint64_t)v14, &qword_1011E4A60);
  v30 = &v14[*(int *)(v90 + 36)];
  v31 = v116[5];
  *((_OWORD *)v30 + 4) = v116[4];
  *((_OWORD *)v30 + 5) = v31;
  *((_OWORD *)v30 + 6) = v116[6];
  v32 = v116[1];
  *(_OWORD *)v30 = v116[0];
  *((_OWORD *)v30 + 1) = v32;
  v33 = v116[3];
  *((_OWORD *)v30 + 2) = v116[2];
  *((_OWORD *)v30 + 3) = v33;
  v34 = sub_10004FF60((uint64_t)v12, &qword_1011E4A60);
  v35 = static Alignment.center.getter(v34);
  sub_100C87A58(0, 1, 0.0, 1, INFINITY, 0, 0, 1, (uint64_t)v16, v37, 0.0, 1, 0.0, 1, v35, v36, &qword_1011E4A68, &qword_1011E4A70);
  sub_10004FF60((uint64_t)v14, &qword_1011E4A68);
  v38 = (char *)v7 + *(int *)(v91 + 20);
  v39 = enum case for RoundedCornerStyle.continuous(_:);
  v40 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 104))(v38, v39, v40);
  __asm { FMOV            V0.2D, #16.0 }
  *v7 = _Q0;
  v46 = (uint64_t)v92;
  v47 = (uint64_t)&v92[*(int *)(v107 + 36)];
  sub_10005B704((uint64_t)v7, v47, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v47 + *(int *)(sub_100007E8C((uint64_t *)&unk_1011E4AA0) + 36)) = 256;
  sub_10004A160((uint64_t)v16, v46, &qword_1011E4A70);
  sub_10005B748((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  sub_10004FF60((uint64_t)v16, &qword_1011E4A70);
  v114 = 0;
  v115 = 0xE000000000000000;
  v48 = v89;
  v110 = *(_OWORD *)(v89 + 16);
  v90 = sub_100007E8C(&qword_1011E1B98);
  State.projectedValue.getter(&v111, v90);
  v50 = v111;
  v49 = v112;
  v51 = v113;
  v109 = v48;
  v52 = sub_100007E8C(&qword_1011E4AB0);
  v53 = sub_100C8CA5C();
  v54 = sub_100BBF2FC();
  v55 = v99;
  v56 = sub_100049F28(&qword_1011E4B00, &qword_1011E4AB0, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  v91 = v54;
  v84 = v53;
  v85 = v54;
  v57 = v100;
  v83 = v52;
  v58 = v98;
  v59 = v94;
  View.confirmationDialog<A, B>(_:isPresented:titleVisibility:actions:)(&v114, v50, v49, v51, 2, sub_100C8CA54, v108, v107, &type metadata for String, v83, v84, v85, v56);
  v60 = (uint64_t)v93;
  swift_release();
  v61 = v48;
  v62 = v95;
  swift_release();
  swift_bridgeObjectRelease();
  v63 = sub_10004FF60(v46, &qword_1011E4A78);
  v64 = static Alignment.center.getter(v63);
  v66 = v65;
  v67 = v60 + *(int *)(v62 + 36);
  sub_100C8B878((uint64_t *)v61, v67);
  v68 = (uint64_t *)(v67 + *(int *)(sub_100007E8C(&qword_1011E4B08) + 36));
  v69 = v104;
  *v68 = v64;
  v68[1] = v66;
  (*(void (**)(uint64_t, char *, uint64_t))(v96 + 32))(v60, v59, v97);
  String.LocalizationValue.init(stringLiteral:)(0x6D614E2074696445, 0xE900000000000065);
  (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v57, v58, v69);
  if (qword_1011DDE30 != -1)
    swift_once(&qword_1011DDE30, sub_100BA7618);
  v70 = qword_10124F040;
  v71 = (id)qword_10124F040;
  v72 = v105;
  static Locale.current.getter(v71);
  v73 = String.init(localized:table:bundle:locale:comment:)(v57, 0, 0, v70, v72, 0, 0, 256);
  v75 = v74;
  (*(void (**)(char *, uint64_t))(v55 + 8))(v58, v69);
  v114 = v73;
  v115 = v75;
  v110 = *(_OWORD *)(v61 + 48);
  State.projectedValue.getter(&v111, v90);
  v77 = v111;
  v76 = v112;
  v78 = v113;
  __chkstk_darwin();
  v79 = sub_100007E8C(&qword_1011E4B10);
  v80 = sub_100C8CBC8();
  v87 = sub_100049F28(&qword_1011E4B28, &qword_1011E4B10, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  v85 = v80;
  v86 = v91;
  v84 = v79;
  v81 = v101;
  ((void (*)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t (*)@<X0>(char *@<X8>), unint64_t *, uint64_t, _QWORD *))View.alert<A, B>(_:isPresented:actions:))(&v114, v77, v76, v78, sub_100C8CBC0, &v84, v62, &type metadata for String);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_10004FF60(v60, &qword_1011E4A88);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v102 + 32))(v106, v81, v103);
}

uint64_t sub_100C897FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  double v41;
  uint64_t v42;
  uint64_t KeyPath;
  id v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  double v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  __n128 v72;
  uint64_t v73;
  uint64_t (*v74)(uint64_t, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  Swift::String v78;
  uint64_t v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _OWORD *v106;
  __int128 v107;
  uint64_t v108;
  double v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  Swift::String v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  Swift::String v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char v134;
  char v135;
  uint64_t v136;
  __n128 v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char v141;
  char v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t *v145;
  char v146;
  unint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  id v152;
  char *v153;
  uint64_t v154;
  void *v155;
  void *v156;
  uint64_t v157;
  uint64_t v158;
  __int128 v159;
  __int128 v160;
  unint64_t v161;
  char *v162;
  __n128 v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t *v171;
  uint64_t v172;
  uint64_t *v173;
  unint64_t v174;
  uint64_t v175;
  Swift::String v176;
  unint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  id v181;
  char *v182;
  uint64_t v183;
  void *v184;
  void *v185;
  uint64_t v186;
  uint64_t v187;
  __int128 v188;
  __int128 v189;
  unint64_t v190;
  char *v191;
  __n128 v192;
  double v193;
  double v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  int *v216;
  uint64_t v217;
  uint64_t v219;
  char *v220;
  char *v221;
  char *v222;
  char *v223;
  uint64_t v224;
  char *v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  char *v229;
  uint64_t v230;
  uint64_t v231;
  char *v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  char *v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  char *v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t *v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  char *v253;
  uint64_t v254;
  char *v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  char *v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  char *v266;
  char *v267;
  uint64_t v268;
  uint64_t v269;
  Swift::String v270;
  __int128 v271;
  __int128 v272;
  __int128 v273;
  uint64_t v274;
  char v275;
  uint64_t v276;
  char v277;
  uint64_t v278;
  __int16 v279;

  v264 = a2;
  v241 = sub_100007E8C(&qword_1011E4D68);
  __chkstk_darwin();
  v245 = (char *)&v219 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v242 = sub_100007E8C(&qword_1011E4D70);
  __chkstk_darwin();
  v244 = (uint64_t)&v219 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v261 = sub_100007E8C(&qword_1011E4D78);
  v260 = *(_QWORD *)(v261 - 8);
  __chkstk_darwin();
  v243 = (uint64_t)&v219 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C((uint64_t *)&unk_1011E4D80);
  __chkstk_darwin();
  v263 = (uint64_t)&v219 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v262 = (char *)&v219 - v7;
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v253 = (char *)&v219 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v254 = type metadata accessor for String.LocalizationValue(0);
  v252 = *(_QWORD *)(v254 - 8);
  __chkstk_darwin();
  v266 = (char *)&v219 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v267 = (char *)&v219 - v10;
  v257 = sub_100007E8C((uint64_t *)&unk_1011E3120);
  v256 = *(_QWORD *)(v257 - 8);
  __chkstk_darwin();
  v255 = (char *)&v219 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v250 = sub_100007E8C((uint64_t *)&unk_1011E3A50);
  __chkstk_darwin();
  v238 = (char *)&v219 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v239 = (uint64_t)&v219 - v13;
  v248 = sub_100007E8C(&qword_1011E4D90);
  __chkstk_darwin();
  v249 = (uint64_t *)((char *)&v219 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100007E8C(&qword_1011E4D98);
  __chkstk_darwin();
  v259 = (uint64_t)&v219 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v269 = (uint64_t)&v219 - v16;
  v235 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v236 = *(_QWORD *)(v235 - 8);
  __chkstk_darwin();
  v223 = (char *)&v219 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  v232 = (char *)&v219 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v224 = type metadata accessor for Artwork(0);
  v240 = *(_QWORD *)(v224 - 8);
  __chkstk_darwin();
  v225 = (char *)&v219 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C((uint64_t *)&unk_1011E4DA0);
  __chkstk_darwin();
  v226 = (char *)&v219 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v233 = sub_100007E8C(&qword_1011E1AD0);
  v234 = *(_QWORD *)(v233 - 8);
  __chkstk_darwin();
  v230 = (uint64_t)&v219 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v227 = sub_100007E8C((uint64_t *)&unk_1011E4DB0);
  __chkstk_darwin();
  v229 = (char *)&v219 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v228 = sub_100007E8C(&qword_1011E4838);
  __chkstk_darwin();
  v222 = (char *)&v219 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v247 = sub_100007E8C(&qword_1011E4DC0);
  __chkstk_darwin();
  v231 = (uint64_t)&v219 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v237 = (uint64_t)&v219 - v25;
  v246 = sub_100007E8C(&qword_1011E4DC8);
  __chkstk_darwin();
  v27 = (char *)&v219 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for Image.ResizingMode(0);
  v29 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin();
  v31 = (char *)&v219 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C((uint64_t *)&unk_1011E4A00);
  __chkstk_darwin();
  v33 = (char *)&v219 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v35 = (uint64_t *)((char *)&v219 - v34);
  __chkstk_darwin();
  v37 = (char *)&v219 - v36;
  sub_100007E8C((uint64_t *)&unk_1011E4DD0);
  __chkstk_darwin();
  v251 = (uint64_t)&v219 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v268 = (uint64_t)&v219 - v39;
  v40 = Int.seconds.getter(54);
  v41 = Int.seconds.getter(10);
  v258 = a1;
  v42 = *(_QWORD *)(a1 + 8);
  KeyPath = swift_getKeyPath(&unk_100EF13F8);
  swift_getKeyPath(&unk_100EF1420);
  v265 = v42;
  static Published.subscript.getter(&v271, v42, KeyPath);
  swift_release();
  swift_release();
  if ((_QWORD)v271)
  {
    v44 = (id)v271;
    v45 = Image.init(uiImage:)(v44);
    (*(void (**)(char *, _QWORD, uint64_t))(v29 + 104))(v31, enum case for Image.ResizingMode.stretch(_:), v28);
    v46 = Image.resizable(capInsets:resizingMode:)(v31, v45, 0.0, 0.0, 0.0, 0.0);
    v47 = swift_release();
    v48 = (*(uint64_t (**)(char *, uint64_t, __n128))(v29 + 8))(v31, v28, v47);
    v49 = static Alignment.center.getter(v48);
    v51 = _FrameLayout.init(width:height:alignment:)(&v271, *(_QWORD *)&v40, 0, *(_QWORD *)&v40, 0, v49, v50);
    v52 = v271;
    v53 = BYTE8(v271);
    v54 = v272;
    v55 = BYTE8(v272);
    v57 = *((_QWORD *)&v273 + 1);
    v56 = v273;
    v58 = static Edge.Set.all.getter(v51);
    v59 = EdgeInsets.init(_all:)(v41);
    *(_QWORD *)v27 = v46;
    *((_QWORD *)v27 + 1) = v52;
    v27[16] = v53;
    *((_QWORD *)v27 + 3) = v54;
    v27[32] = v55;
    *((_QWORD *)v27 + 5) = v56;
    *((_QWORD *)v27 + 6) = v57;
    *((_WORD *)v27 + 28) = 256;
    v27[64] = v58;
    *((double *)v27 + 9) = v59;
    *((_QWORD *)v27 + 10) = v60;
    *((_QWORD *)v27 + 11) = v61;
    *((_QWORD *)v27 + 12) = v62;
    v27[104] = 0;
    swift_storeEnumTagMultiPayload(v27, v246, 0);
    swift_retain();
    v63 = sub_100007E8C(&qword_1011E4DE8);
    v64 = sub_10005610C(&qword_1011E4DF0, &qword_1011E4DE8, (void (*)(void))sub_100C8D3BC);
    v65 = sub_10005610C(&qword_1011E4E28, &qword_1011E4DC0, (void (*)(void))sub_100C8D4A4);
    v66 = v268;
    _ConditionalContent<>.init(storage:)(v27, v63, v247, v64, v65);
    swift_release();

    v67 = v267;
    v68 = v266;
    v69 = v265;
  }
  else
  {
    v220 = v33;
    v221 = v37;
    v70 = v223;
    v71 = swift_getKeyPath(&unk_100EF13A8);
    swift_getKeyPath(&unk_100EF13D0);
    v69 = v265;
    static Published.subscript.getter(v35, v265, v71);
    swift_release();
    v72 = swift_release();
    v73 = v240;
    v74 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v240 + 48);
    v75 = v224;
    v76 = (uint64_t)v35;
    if (((unsigned int (*)(_QWORD *, uint64_t, uint64_t, __n128))v74)(v35, 1, v224, v72) == 1)
    {
      v77 = swift_getKeyPath(&unk_100EF1360);
      swift_getKeyPath(&unk_100EF1388);
      static Published.subscript.getter(&v271, v69, v77);
      swift_release();
      swift_release();
      v78 = String.trim()();
      swift_bridgeObjectRelease();
      sub_100C8D380();
      v79 = 1;
      v80 = static MPArtworkCatalog.monogram(for:layoutDirection:)(v78._countAndFlagsBits, (uint64_t)v78._object, 0, 1);
      v81 = (uint64_t)v70;
      if (v80)
      {
        v82 = (uint64_t)v221;
        Artwork.init(_:)(v80);
        v79 = 0;
        v83 = (uint64_t)v222;
      }
      else
      {
        v83 = (uint64_t)v222;
        v82 = (uint64_t)v221;
      }
      v73 = v240;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v240 + 56))(v82, v79, 1, v75);
      swift_bridgeObjectRelease();
      sub_10004FF60(v76, (uint64_t *)&unk_1011E4A00);
      v69 = v265;
    }
    else
    {
      v82 = (uint64_t)v221;
      (*(void (**)(char *, _QWORD *, uint64_t))(v73 + 32))(v221, v35, v75);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v73 + 56))(v82, 0, 1, v75);
      v81 = (uint64_t)v70;
      v83 = (uint64_t)v222;
    }
    v84 = v82;
    v85 = (uint64_t)v220;
    sub_10004A160(v84, (uint64_t)v220, (uint64_t *)&unk_1011E4A00);
    v86 = v74(v85, 1, v75);
    v87 = v226;
    v88 = v225;
    if (v86 == 1)
    {
      v89 = type metadata accessor for ArtworkImage.ViewModel(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 56))(v87, 1, 1, v89);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v73 + 32))(v225, v85, v75);
      (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v87, v88, v75);
      v90 = type metadata accessor for ArtworkImage.ViewModel(0);
      v91 = v73;
      v92 = &v87[*(int *)(v90 + 20)];
      v93 = type metadata accessor for Artwork.CropStyle(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 56))(v92, 1, 1, v93);
      (*(void (**)(char *, uint64_t))(v91 + 8))(v88, v75);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 56))(v87, 0, 1, v90);
    }
    v67 = v267;
    v94 = v235;
    v95 = v236;
    v96 = (uint64_t)v87;
    v97 = sub_100007E8C(&qword_1011E4DE0);
    v98 = (uint64_t)v232;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v97 - 8) + 56))(v232, 7, 10, v97);
    v274 = 0;
    v275 = 1;
    v276 = 0;
    v277 = 1;
    v278 = 0;
    v279 = 513;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v95 + 104))(v81, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v94);
    v99 = v230;
    static ArtworkImage.with(_:placeholder:size:reusePolicy:)(v96, v98, (uint64_t)&v274, v81, v230);
    (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v81, v94);
    sub_10005B748(v98, type metadata accessor for ArtworkImage.Placeholder);
    v100 = sub_10004FF60(v96, (uint64_t *)&unk_1011E4DA0);
    v101 = static Alignment.center.getter(v100);
    _FrameLayout.init(width:height:alignment:)(&v271, *(_QWORD *)&v40, 0, *(_QWORD *)&v40, 0, v101, v102);
    v103 = v234;
    v104 = (uint64_t)v229;
    v105 = v233;
    (*(void (**)(char *, uint64_t, uint64_t))(v234 + 16))(v229, v99, v233);
    v106 = (_OWORD *)(v104 + *(int *)(v227 + 36));
    v107 = v272;
    *v106 = v271;
    v106[1] = v107;
    v106[2] = v273;
    (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v99, v105);
    sub_10004A160(v104, v83, (uint64_t *)&unk_1011E4DB0);
    *(_WORD *)(v83 + *(int *)(v228 + 36)) = 256;
    v108 = sub_10004FF60(v104, (uint64_t *)&unk_1011E4DB0);
    LOBYTE(v105) = static Edge.Set.all.getter(v108);
    v109 = EdgeInsets.init(_all:)(v41);
    v111 = v110;
    v113 = v112;
    v115 = v114;
    v116 = v231;
    sub_10004A160(v83, v231, &qword_1011E4838);
    v117 = v247;
    v118 = v116 + *(int *)(v247 + 36);
    *(_BYTE *)v118 = v105;
    *(double *)(v118 + 8) = v109;
    *(_QWORD *)(v118 + 16) = v111;
    *(_QWORD *)(v118 + 24) = v113;
    *(_QWORD *)(v118 + 32) = v115;
    *(_BYTE *)(v118 + 40) = 0;
    sub_10004FF60(v83, &qword_1011E4838);
    v119 = v237;
    sub_100065228(v116, v237, &qword_1011E4DC0);
    sub_10004A160(v119, (uint64_t)v27, &qword_1011E4DC0);
    swift_storeEnumTagMultiPayload(v27, v246, 1);
    v120 = v117;
    v121 = sub_100007E8C(&qword_1011E4DE8);
    v122 = sub_10005610C(&qword_1011E4DF0, &qword_1011E4DE8, (void (*)(void))sub_100C8D3BC);
    v123 = sub_10005610C(&qword_1011E4E28, &qword_1011E4DC0, (void (*)(void))sub_100C8D4A4);
    v66 = v268;
    _ConditionalContent<>.init(storage:)(v27, v121, v120, v122, v123);
    sub_10004FF60(v119, &qword_1011E4DC0);
    sub_10004FF60((uint64_t)v221, (uint64_t *)&unk_1011E4A00);
    v68 = v266;
  }
  v124 = swift_getKeyPath(&unk_100EF1360);
  swift_getKeyPath(&unk_100EF1388);
  static Published.subscript.getter(&v270, v69, v124);
  swift_release();
  swift_release();
  v125 = String.trim()();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v126 = ((unint64_t)v125._object >> 56) & 0xF;
  if (((uint64_t)v125._object & 0x2000000000000000) == 0)
    v126 = v125._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  v127 = v66;
  if (v126)
  {
    v128 = swift_getKeyPath(&unk_100EF1360);
    swift_getKeyPath(&unk_100EF1388);
    static Published.subscript.getter(&v270, v69, v128);
    swift_release();
    swift_release();
    v129 = String.trim()();
    swift_bridgeObjectRelease();
    v270 = v129;
    v130 = sub_100BBF2FC();
    v131 = Text.init<A>(_:)(&v270, &type metadata for String, v130);
    v133 = v132;
    v135 = v134 & 1;
    v138 = Text.bold()(v131, v132, v134 & 1, v136, v137);
    v140 = v139;
    v142 = v141;
    v144 = v143;
    sub_100055BAC(v131, v133, v135);
    swift_bridgeObjectRelease();
    v145 = v249;
    *v249 = v138;
    v145[1] = v140;
    v67 = v267;
    v146 = v142 & 1;
    v68 = v266;
    *((_BYTE *)v145 + 16) = v146;
    v145[3] = v144;
    swift_storeEnumTagMultiPayload(v145, v248, 0);
    v147 = sub_100C74DBC();
    _ConditionalContent<>.init(storage:)(v145, &type metadata for Text, v250, &protocol witness table for Text, v147);
    v148 = (uint64_t)v262;
  }
  else
  {
    String.LocalizationValue.init(stringLiteral:)(0x6F59207265746E45, 0xEF656D614E207275);
    v149 = v252;
    v150 = v254;
    (*(void (**)(char *, char *, uint64_t))(v252 + 16))(v68, v67, v254);
    if (qword_1011DDE30 != -1)
      swift_once(&qword_1011DDE30, sub_100BA7618);
    v151 = qword_10124F040;
    v152 = (id)qword_10124F040;
    v153 = v253;
    static Locale.current.getter(v152);
    v154 = String.init(localized:table:bundle:locale:comment:)(v68, 0, 0, v151, v153, 0, 0, 256);
    v156 = v155;
    (*(void (**)(char *, uint64_t))(v149 + 8))(v67, v150);
    v270._countAndFlagsBits = v154;
    v270._object = v156;
    v157 = swift_allocObject(&unk_10110C3A8, 104, 7);
    v158 = v258;
    v159 = *(_OWORD *)(v258 + 48);
    *(_OWORD *)(v157 + 48) = *(_OWORD *)(v258 + 32);
    *(_OWORD *)(v157 + 64) = v159;
    *(_OWORD *)(v157 + 80) = *(_OWORD *)(v158 + 64);
    *(_QWORD *)(v157 + 96) = *(_QWORD *)(v158 + 80);
    v160 = *(_OWORD *)(v158 + 16);
    *(_OWORD *)(v157 + 16) = *(_OWORD *)v158;
    *(_OWORD *)(v157 + 32) = v160;
    sub_100C8D28C(v158);
    v161 = sub_100BBF2FC();
    v162 = v255;
    v164 = Button<>.init<A>(_:action:)(&v270, sub_100C8D358, v157, &type metadata for String, v161, v163);
    v165 = static Color.secondary.getter(v164);
    v166 = swift_getKeyPath(&unk_100EF15A0);
    v167 = v256;
    v168 = (uint64_t)v238;
    v169 = v257;
    (*(void (**)(char *, char *, uint64_t))(v256 + 16))(v238, v162, v257);
    v170 = v250;
    v171 = (uint64_t *)(v168 + *(int *)(v250 + 36));
    *v171 = v166;
    v171[1] = v165;
    (*(void (**)(char *, uint64_t))(v167 + 8))(v162, v169);
    v172 = v239;
    sub_100065228(v168, v239, (uint64_t *)&unk_1011E3A50);
    v173 = v249;
    sub_10004A160(v172, (uint64_t)v249, (uint64_t *)&unk_1011E3A50);
    swift_storeEnumTagMultiPayload(v173, v248, 1);
    v174 = sub_100C74DBC();
    _ConditionalContent<>.init(storage:)(v173, &type metadata for Text, v170, &protocol witness table for Text, v174);
    sub_10004FF60(v172, (uint64_t *)&unk_1011E3A50);
    v148 = (uint64_t)v262;
    v69 = v265;
  }
  v175 = swift_getKeyPath(&unk_100EF1360);
  swift_getKeyPath(&unk_100EF1388);
  static Published.subscript.getter(&v270, v69, v175);
  swift_release();
  swift_release();
  v176 = String.trim()();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v177 = ((unint64_t)v176._object >> 56) & 0xF;
  if (((uint64_t)v176._object & 0x2000000000000000) == 0)
    v177 = v176._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  if (v177)
  {
    String.LocalizationValue.init(stringLiteral:)(1953064005, 0xE400000000000000);
    v178 = v252;
    v179 = v254;
    (*(void (**)(char *, char *, uint64_t))(v252 + 16))(v68, v67, v254);
    if (qword_1011DDE30 != -1)
      swift_once(&qword_1011DDE30, sub_100BA7618);
    v180 = qword_10124F040;
    v181 = (id)qword_10124F040;
    v182 = v253;
    static Locale.current.getter(v181);
    v183 = String.init(localized:table:bundle:locale:comment:)(v68, 0, 0, v180, v182, 0, 0, 256);
    v185 = v184;
    (*(void (**)(char *, uint64_t))(v178 + 8))(v67, v179);
    v270._countAndFlagsBits = v183;
    v270._object = v185;
    v186 = swift_allocObject(&unk_10110C380, 104, 7);
    v187 = v258;
    v188 = *(_OWORD *)(v258 + 48);
    *(_OWORD *)(v186 + 48) = *(_OWORD *)(v258 + 32);
    *(_OWORD *)(v186 + 64) = v188;
    *(_OWORD *)(v186 + 80) = *(_OWORD *)(v187 + 64);
    *(_QWORD *)(v186 + 96) = *(_QWORD *)(v187 + 80);
    v189 = *(_OWORD *)(v187 + 16);
    *(_OWORD *)(v186 + 16) = *(_OWORD *)v187;
    *(_OWORD *)(v186 + 32) = v189;
    sub_100C8D28C(v187);
    v190 = sub_100BBF2FC();
    v191 = v255;
    Button<>.init<A>(_:action:)(&v270, sub_100C8D5C0, v186, &type metadata for String, v190, v192);
    LOBYTE(v186) = static Edge.Set.trailing.getter(v193);
    v194 = EdgeInsets.init(_all:)(24.0);
    v196 = v195;
    v198 = v197;
    v200 = v199;
    v201 = v256;
    v202 = (uint64_t)v245;
    v203 = v257;
    (*(void (**)(char *, char *, uint64_t))(v256 + 16))(v245, v191, v257);
    v204 = v202 + *(int *)(v241 + 36);
    *(_BYTE *)v204 = v186;
    *(double *)(v204 + 8) = v194;
    *(_QWORD *)(v204 + 16) = v196;
    *(_QWORD *)(v204 + 24) = v198;
    *(_QWORD *)(v204 + 32) = v200;
    *(_BYTE *)(v204 + 40) = 0;
    (*(void (**)(char *, uint64_t))(v201 + 8))(v191, v203);
    v205 = swift_getKeyPath(&unk_100EF1570);
    v206 = v244;
    sub_10004A160(v202, v244, &qword_1011E4D68);
    v207 = v206 + *(int *)(v242 + 36);
    *(_QWORD *)v207 = v205;
    *(_QWORD *)(v207 + 8) = 1;
    *(_BYTE *)(v207 + 16) = 0;
    sub_10004FF60(v202, &qword_1011E4D68);
    v208 = v243;
    sub_10004A160(v206, v243, &qword_1011E4D70);
    v209 = v261;
    *(_QWORD *)(v208 + *(int *)(v261 + 36)) = 0x3FF0000000000000;
    sub_10004FF60(v206, &qword_1011E4D70);
    sub_100065228(v208, v148, &qword_1011E4D78);
    v210 = 0;
  }
  else
  {
    v210 = 1;
    v209 = v261;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v260 + 56))(v148, v210, 1, v209);
  v211 = v251;
  sub_10004A160(v127, v251, (uint64_t *)&unk_1011E4DD0);
  v212 = v269;
  v213 = v259;
  sub_10004A160(v269, v259, &qword_1011E4D98);
  v214 = v263;
  sub_10004A160(v148, v263, (uint64_t *)&unk_1011E4D80);
  v215 = v264;
  sub_10004A160(v211, v264, (uint64_t *)&unk_1011E4DD0);
  v216 = (int *)sub_100007E8C(&qword_1011E4E48);
  sub_10004A160(v213, v215 + v216[12], &qword_1011E4D98);
  v217 = v215 + v216[16];
  *(_QWORD *)v217 = 0;
  *(_BYTE *)(v217 + 8) = 1;
  sub_10004A160(v214, v215 + v216[20], (uint64_t *)&unk_1011E4D80);
  sub_10004FF60(v148, (uint64_t *)&unk_1011E4D80);
  sub_10004FF60(v212, &qword_1011E4D98);
  sub_10004FF60(v268, (uint64_t *)&unk_1011E4DD0);
  sub_10004FF60(v214, (uint64_t *)&unk_1011E4D80);
  sub_10004FF60(v213, &qword_1011E4D98);
  return sub_10004FF60(v211, (uint64_t *)&unk_1011E4DD0);
}

uint64_t sub_100C8AF38@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  unint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  char *v54;
  __n128 v55;
  uint64_t v56;
  void (*v57)(char *, char *, uint64_t);
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  int *v64;
  void (*v65)(char *, uint64_t);
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  void (*v77)(char *, char *, uint64_t);
  char *v78;
  uint64_t v79;
  uint64_t v80;

  v73 = a2;
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v4 = (char *)&v67 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for String.LocalizationValue(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v10 = (char *)&v67 - v9;
  v11 = sub_100007E8C((uint64_t *)&unk_1011E3120);
  v69 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin();
  v72 = (char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v71 = (char *)&v67 - v13;
  __chkstk_darwin();
  v70 = (char *)&v67 - v14;
  __chkstk_darwin();
  v76 = (char *)&v67 - v15;
  __chkstk_darwin();
  v68 = (char *)&v67 - v16;
  __chkstk_darwin();
  v75 = (char *)&v67 - v17;
  __chkstk_darwin();
  v78 = (char *)&v67 - v18;
  __chkstk_darwin();
  v20 = (char *)&v67 - v19;
  String.LocalizationValue.init(stringLiteral:)(0x6D614E2074696445, 0xE900000000000065);
  v77 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v77(v8, v10, v5);
  if (qword_1011DDE30 != -1)
    swift_once(&qword_1011DDE30, sub_100BA7618);
  v21 = qword_10124F040;
  static Locale.current.getter((id)qword_10124F040);
  v22 = String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, v21, v4, 0, 0, 256);
  v24 = v23;
  v25 = *(void (**)(char *, uint64_t))(v6 + 8);
  v25(v10, v5);
  v79 = v22;
  v80 = v24;
  v26 = swift_allocObject(&unk_10110C2E0, 104, 7);
  v27 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v26 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v26 + 64) = v27;
  *(_OWORD *)(v26 + 80) = *(_OWORD *)(a1 + 64);
  *(_QWORD *)(v26 + 96) = *(_QWORD *)(a1 + 80);
  v28 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v26 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v26 + 32) = v28;
  sub_100C8D28C(a1);
  v29 = sub_100BBF2FC();
  Button<>.init<A>(_:action:)(&v79, sub_100C8D358, v26, &type metadata for String, v29, v30);
  String.LocalizationValue.init(stringLiteral:)(0x502065736F6F6843, 0xEC0000006F746F68);
  v77(v8, v10, v5);
  v31 = qword_10124F040;
  static Locale.current.getter((id)qword_10124F040);
  v32 = String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, v31, v4, 0, 0, 256);
  v74 = v20;
  v34 = v33;
  v25(v10, v5);
  v79 = v32;
  v80 = v34;
  v35 = swift_allocObject(&unk_10110C308, 104, 7);
  v36 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v35 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v35 + 64) = v36;
  *(_OWORD *)(v35 + 80) = *(_OWORD *)(a1 + 64);
  *(_QWORD *)(v35 + 96) = *(_QWORD *)(a1 + 80);
  v37 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v35 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v35 + 32) = v37;
  sub_100C8D28C(a1);
  Button<>.init<A>(_:action:)(&v79, sub_100C8D360, v35, &type metadata for String, v29, v38);
  String.LocalizationValue.init(stringLiteral:)(0x6F685020656B6154, 0xEA00000000006F74);
  v77(v8, v10, v5);
  v39 = qword_10124F040;
  static Locale.current.getter((id)qword_10124F040);
  v40 = String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, v39, v4, 0, 0, 256);
  v42 = v41;
  v25(v10, v5);
  v79 = v40;
  v80 = v42;
  v43 = swift_allocObject(&unk_10110C330, 104, 7);
  v44 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v43 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v43 + 64) = v44;
  *(_OWORD *)(v43 + 80) = *(_OWORD *)(a1 + 64);
  *(_QWORD *)(v43 + 96) = *(_QWORD *)(a1 + 80);
  v45 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v43 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v43 + 32) = v45;
  sub_100C8D28C(a1);
  Button<>.init<A>(_:action:)(&v79, sub_100C8D36C, v43, &type metadata for String, v29, v46);
  String.LocalizationValue.init(stringLiteral:)(0x502065766F6D6552, 0xEC0000006F746F68);
  v77(v8, v10, v5);
  v47 = qword_10124F040;
  static Locale.current.getter((id)qword_10124F040);
  v48 = String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, v47, v4, 0, 0, 256);
  v50 = v49;
  v25(v10, v5);
  v79 = v48;
  v80 = v50;
  v51 = swift_allocObject(&unk_10110C358, 104, 7);
  v52 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v51 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v51 + 64) = v52;
  *(_OWORD *)(v51 + 80) = *(_OWORD *)(a1 + 64);
  *(_QWORD *)(v51 + 96) = *(_QWORD *)(a1 + 80);
  v53 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v51 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v51 + 32) = v53;
  sub_100C8D28C(a1);
  v54 = v68;
  Button<>.init<A>(_:action:)(&v79, sub_100C8D378, v51, &type metadata for String, v29, v55);
  v56 = v69;
  v57 = *(void (**)(char *, char *, uint64_t))(v69 + 16);
  v58 = v76;
  v57(v76, v74, v11);
  v59 = v70;
  v57(v70, v78, v11);
  v60 = v71;
  v61 = v75;
  v57(v71, v75, v11);
  v62 = v72;
  v57(v72, v54, v11);
  v63 = v73;
  v57(v73, v58, v11);
  v64 = (int *)sub_100007E8C(&qword_1011E4D60);
  v57(&v63[v64[12]], v59, v11);
  v57(&v63[v64[16]], v60, v11);
  v57(&v63[v64[20]], v62, v11);
  v65 = *(void (**)(char *, uint64_t))(v56 + 8);
  v65(v54, v11);
  v65(v61, v11);
  v65(v78, v11);
  v65(v74, v11);
  v65(v62, v11);
  v65(v60, v11);
  v65(v59, v11);
  return ((uint64_t (*)(char *, uint64_t))v65)(v76, v11);
}

uint64_t sub_100C8B630(uint64_t a1)
{
  __int128 v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  v2 = *(_OWORD *)(a1 + 64);
  v8 = *(_QWORD *)(a1 + 80);
  v6 = xmmword_100EA93A0;
  v7 = v2;
  v3 = sub_100007E8C(&qword_1011E4D48);
  State.wrappedValue.setter(&v6, v3);
  v7 = *(_OWORD *)(a1 + 32);
  LOBYTE(v6) = 1;
  v4 = sub_100007E8C(&qword_1011E1B98);
  return State.wrappedValue.setter(&v6, v4);
}

uint64_t sub_100C8B6B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[2];
  __int128 v6;
  uint64_t v7;

  v6 = *(_OWORD *)(a1 + 64);
  v7 = *(_QWORD *)(a1 + 80);
  v5[0] = 0;
  v5[1] = 0;
  v2 = sub_100007E8C(&qword_1011E4D48);
  State.wrappedValue.setter(v5, v2);
  v6 = *(_OWORD *)(a1 + 32);
  LOBYTE(v5[0]) = 1;
  v3 = sub_100007E8C(&qword_1011E1B98);
  return State.wrappedValue.setter(v5, v3);
}

void sub_100C8B734(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  _BYTE *v10;
  _BYTE v12[24];

  sub_100007E8C((uint64_t *)&unk_1011E4A00);
  __chkstk_darwin();
  v3 = &v12[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin();
  v5 = &v12[-v4 - 8];
  v6 = *(_QWORD *)(a1 + 8);
  sub_100C8C6CC(0);
  v7 = type metadata accessor for Artwork(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 1, 1, v7);
  KeyPath = swift_getKeyPath(&unk_100EF13A8);
  v9 = swift_getKeyPath(&unk_100EF13D0);
  sub_10004A160((uint64_t)v5, (uint64_t)v3, (uint64_t *)&unk_1011E4A00);
  swift_retain();
  static Published.subscript.setter(v3, v6, KeyPath, v9);
  sub_10004FF60((uint64_t)v5, (uint64_t *)&unk_1011E4A00);
  v10 = (_BYTE *)(v6 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context_hasRemovedImage);
  swift_beginAccess(v6 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context_hasRemovedImage, v12, 1, 0);
  *v10 = 1;
}

uint64_t sub_100C8B878@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  int *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _OWORD *v32;
  __int128 v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  _QWORD v43[3];
  __int128 v44;
  __int128 v45;
  __int128 v46;

  v40 = a2;
  v3 = (int *)type metadata accessor for ImagePicker(0);
  __chkstk_darwin();
  v5 = (uint64_t *)((char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  v7 = (char *)&v35 - v6;
  v8 = *a1;
  v9 = a1[1];
  v10 = type metadata accessor for InlineProfileEditingView.Context(0);
  v11 = sub_100048748(&qword_1011E4A50, type metadata accessor for InlineProfileEditingView.Context, (uint64_t)&protocol conformance descriptor for InlineProfileEditingView.Context);
  v12 = ObservedObject.projectedValue.getter(v8, v9, v10, v11);
  KeyPath = swift_getKeyPath(&unk_100EF13F8);
  ObservedObject.Wrapper.subscript.getter(v43, KeyPath, v12, v11);
  swift_release();
  swift_release();
  v38 = v43[1];
  v39 = v43[0];
  v37 = v43[2];
  v41 = *((_OWORD *)a1 + 4);
  v42 = a1[10];
  v14 = sub_100007E8C(&qword_1011E4D48);
  State.projectedValue.getter(&v44, v14);
  v36 = *((_QWORD *)&v44 + 1);
  v15 = v44;
  v16 = v45;
  v41 = *((_OWORD *)a1 + 2);
  v17 = sub_100007E8C(&qword_1011E1B98);
  State.projectedValue.getter(&v44, v17);
  v18 = v44;
  v19 = v45;
  if (qword_1011DE220 != -1)
    swift_once(&qword_1011DE220, sub_100C9B278);
  v20 = static UIImagePickerController.profileImagePickerProperties;
  *v5 = swift_getKeyPath(&unk_100EF1540);
  v21 = sub_100007E8C(&qword_1011E4D50);
  swift_storeEnumTagMultiPayload(v5, v21, 0);
  v22 = (_QWORD *)((char *)v5 + v3[7]);
  v23 = v3[9];
  v24 = (_QWORD *)((char *)v5 + v3[5]);
  *v24 = v39;
  v24[1] = v38;
  v24[2] = v37;
  v25 = (char *)v5 + v3[6];
  v26 = v36;
  *(_QWORD *)v25 = v15;
  *((_QWORD *)v25 + 1) = v26;
  *((_OWORD *)v25 + 1) = v16;
  v27 = (char *)v5 + v3[8];
  *(_OWORD *)v27 = v18;
  v27[16] = v19;
  *v22 = 0;
  v22[1] = 0;
  *(_QWORD *)((char *)v5 + v23) = v20;
  sub_100C8D310((uint64_t)v5, (uint64_t)v7);
  v28 = swift_bridgeObjectRetain();
  v29 = static Alignment.center.getter(v28);
  _FrameLayout.init(width:height:alignment:)(&v44, 0, 0, 0, 0, v29, v30);
  v31 = v40;
  sub_10005B704((uint64_t)v7, v40, type metadata accessor for ImagePicker);
  v32 = (_OWORD *)(v31 + *(int *)(sub_100007E8C(&qword_1011E4D58) + 36));
  v33 = v45;
  *v32 = v44;
  v32[1] = v33;
  v32[2] = v46;
  return sub_10005B748((uint64_t)v7, type metadata accessor for ImagePicker);
}

void sub_100C8BB34(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100EF13F8);
  v5 = swift_getKeyPath(&unk_100EF1420);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  *a2 = v6;
}

uint64_t sub_100C8BBB0@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t KeyPath;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  char *v41;
  uint64_t v42;
  Swift::String v43;
  unint64_t v44;
  BOOL v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;
  __int128 v63;
  uint64_t v64;
  char *v65;
  __n128 v66;
  void (*v67)(char *, char *, uint64_t);
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  void (*v72)(uint64_t, char *, uint64_t);
  char *v73;
  uint64_t v74;
  void (*v75)(char *, uint64_t);
  void (*v76)(char *, uint64_t);
  double (*v78)(char *, uint64_t);
  uint64_t v79;
  void (*v80)(char *, char *, uint64_t);
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  _QWORD *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  _QWORD v99[2];
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;

  v94 = a2;
  sub_100007E8C((uint64_t *)&unk_1011E4D20);
  __chkstk_darwin();
  v89 = (char *)&v78 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = sub_100007E8C((uint64_t *)&unk_1011E3120);
  v86 = *(_QWORD *)(v95 - 8);
  __chkstk_darwin();
  v93 = (char *)&v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v92 = (char *)&v78 - v5;
  __chkstk_darwin();
  v85 = (char *)&v78 - v6;
  v84 = sub_100007E8C(&qword_1011E4D30);
  __chkstk_darwin();
  v91 = (uint64_t)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v83 = (char *)&v78 - v8;
  __chkstk_darwin();
  v97 = (uint64_t)&v78 - v9;
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v11 = (char *)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for String.LocalizationValue(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin();
  v15 = (char *)&v78 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v17 = (char *)&v78 - v16;
  v88 = sub_100007E8C(&qword_1011E4D38);
  v96 = *(_QWORD *)(v88 - 8);
  __chkstk_darwin();
  v87 = (char *)&v78 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v98 = (char *)&v78 - v19;
  v90 = a1;
  v21 = *a1;
  v20 = a1[1];
  KeyPath = swift_getKeyPath(&unk_100EF1360);
  swift_getKeyPath(&unk_100EF1388);
  static Published.subscript.getter(&v100, v20, KeyPath);
  swift_release();
  swift_release();
  v82 = v100;
  v81 = v101;
  String.LocalizationValue.init(stringLiteral:)(1701667150, 0xE400000000000000);
  v80 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  v80(v15, v17, v12);
  if (qword_1011DDE30 != -1)
    swift_once(&qword_1011DDE30, sub_100BA7618);
  v23 = qword_10124F040;
  static Locale.current.getter((id)qword_10124F040);
  v24 = String.init(localized:table:bundle:locale:comment:)(v15, 0, 0, v23, v11, 0, 0, 256);
  v26 = v25;
  v78 = *(double (**)(char *, uint64_t))(v13 + 8);
  v78(v17, v12);
  v27 = type metadata accessor for InlineProfileEditingView.Context(0);
  v28 = sub_100048748(&qword_1011E4A50, type metadata accessor for InlineProfileEditingView.Context, (uint64_t)&protocol conformance descriptor for InlineProfileEditingView.Context);
  v29 = ObservedObject.projectedValue.getter(v21, v20, v27, v28);
  v30 = swift_getKeyPath(&unk_100EF1360);
  v79 = v20;
  ObservedObject.Wrapper.subscript.getter(&v100, v30, v29, v28);
  swift_release();
  swift_release();
  v31 = v100;
  v32 = v101;
  v34 = v102;
  v33 = v103;
  v99[0] = v24;
  v99[1] = v26;
  v35 = sub_100BBF2FC();
  TextField<>.init<A>(_:text:onEditingChanged:onCommit:)(v99, v31, v32, v34, v33, UIScreen.Dimensions.size.getter, 0, UIScreen.Dimensions.size.getter, 0, &type metadata for String, v35);
  String.LocalizationValue.init(stringLiteral:)(1701736260, 0xE400000000000000);
  v80(v15, v17, v12);
  v36 = qword_10124F040;
  static Locale.current.getter((id)qword_10124F040);
  v37 = String.init(localized:table:bundle:locale:comment:)(v15, 0, 0, v36, v11, 0, 0, 256);
  v39 = v38;
  v40.n128_f64[0] = v78(v17, v12);
  v100 = v37;
  v101 = v39;
  v41 = v85;
  Button<>.init<A>(_:action:)(&v100, UIScreen.Dimensions.size.getter, 0, &type metadata for String, v35, v40);
  v42 = swift_getKeyPath(&unk_100EF1360);
  swift_getKeyPath(&unk_100EF1388);
  static Published.subscript.getter(&v100, v79, v42);
  swift_release();
  swift_release();
  v43 = String.trim()();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v44 = ((unint64_t)v43._object >> 56) & 0xF;
  if (((uint64_t)v43._object & 0x2000000000000000) == 0)
    v44 = v43._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  v45 = v44 == 0;
  v46 = swift_getKeyPath(&unk_100EF1510);
  v47 = swift_allocObject(&unk_10110C290, 17, 7);
  *(_BYTE *)(v47 + 16) = v45;
  v48 = v86;
  v80 = *(void (**)(char *, char *, uint64_t))(v86 + 16);
  v49 = (uint64_t)v83;
  v50 = v95;
  v80(v83, v41, v95);
  v51 = (uint64_t *)(v49 + *(int *)(v84 + 36));
  *v51 = v46;
  v51[1] = (uint64_t)sub_1006F5584;
  v51[2] = v47;
  v86 = *(_QWORD *)(v48 + 8);
  ((void (*)(char *, uint64_t))v86)(v41, v50);
  v52 = v97;
  sub_100065228(v49, v97, &qword_1011E4D30);
  v53 = String.cancelButtonTitle.unsafeMutableAddressor();
  v55 = *v53;
  v54 = v53[1];
  v100 = v55;
  v101 = v54;
  v56 = swift_bridgeObjectRetain();
  v57 = v89;
  static ButtonRole.cancel.getter(v56);
  v58 = type metadata accessor for ButtonRole(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v57, 0, 1, v58);
  v59 = swift_allocObject(&unk_10110C2B8, 120, 7);
  v60 = (uint64_t)v90;
  v61 = *((_OWORD *)v90 + 3);
  *(_OWORD *)(v59 + 48) = *((_OWORD *)v90 + 2);
  *(_OWORD *)(v59 + 64) = v61;
  *(_OWORD *)(v59 + 80) = *(_OWORD *)(v60 + 64);
  v62 = *(_QWORD *)(v60 + 80);
  v63 = *(_OWORD *)(v60 + 16);
  *(_OWORD *)(v59 + 16) = *(_OWORD *)v60;
  *(_OWORD *)(v59 + 32) = v63;
  v64 = v82;
  *(_QWORD *)(v59 + 96) = v62;
  *(_QWORD *)(v59 + 104) = v64;
  *(_QWORD *)(v59 + 112) = v81;
  sub_100C8D28C(v60);
  v65 = v92;
  Button<>.init<A>(_:role:action:)(&v100, v57, sub_100C8D280, v59, &type metadata for String, v35, v66);
  v67 = *(void (**)(char *, char *, uint64_t))(v96 + 16);
  v69 = v87;
  v68 = v88;
  v67(v87, v98, v88);
  v70 = v91;
  sub_10004A160(v52, v91, &qword_1011E4D30);
  v71 = v93;
  v72 = (void (*)(uint64_t, char *, uint64_t))v80;
  v80(v93, v65, v50);
  v73 = v94;
  v67(v94, v69, v68);
  v74 = sub_100007E8C(&qword_1011E4D40);
  sub_10004A160(v70, (uint64_t)&v73[*(int *)(v74 + 48)], &qword_1011E4D30);
  v72((uint64_t)&v73[*(int *)(v74 + 64)], v71, v50);
  v75 = (void (*)(char *, uint64_t))v86;
  ((void (*)(char *, uint64_t))v86)(v65, v50);
  sub_10004FF60(v97, &qword_1011E4D30);
  v76 = *(void (**)(char *, uint64_t))(v96 + 8);
  v76(v98, v68);
  v75(v71, v50);
  sub_10004FF60(v70, &qword_1011E4D30);
  return ((uint64_t (*)(char *, uint64_t))v76)(v69, v68);
}

void sub_100C8C39C(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[2];

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100EF1360);
  v5 = swift_getKeyPath(&unk_100EF1388);
  static Published.subscript.getter(v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  v6 = v7[1];
  *a2 = v7[0];
  a2[1] = v6;
}

uint64_t sub_100C8C418(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  _QWORD v8[2];

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  KeyPath = swift_getKeyPath(&unk_100EF1360);
  v6 = swift_getKeyPath(&unk_100EF1388);
  v8[0] = v3;
  v8[1] = v2;
  swift_bridgeObjectRetain();
  swift_retain(v4);
  return static Published.subscript.setter(v8, v4, KeyPath, v6);
}

uint64_t sub_100C8C498(__int128 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t KeyPath;
  uint64_t v7;
  _QWORD v9[2];
  __int128 v10;

  v10 = *a1;
  v5 = *((_QWORD *)&v10 + 1);
  KeyPath = swift_getKeyPath(&unk_100EF1360);
  v7 = swift_getKeyPath(&unk_100EF1388);
  v9[0] = a2;
  v9[1] = a3;
  swift_bridgeObjectRetain();
  sub_1003E3468((uint64_t)&v10);
  return static Published.subscript.setter(v9, v5, KeyPath, v7);
}

uint64_t sub_100C8C524@<X0>(uint64_t a1@<X8>)
{
  return InlineProfileEditingView.body.getter(a1);
}

double sub_100C8C56C@<D0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100EF13A8);
  v5 = swift_getKeyPath(&unk_100EF13D0);
  static Published.subscript.getter(a2, v3, KeyPath, v5);
  swift_release(KeyPath);
  *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  return result;
}

uint64_t sub_100C8C5D4(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v12;

  sub_100007E8C((uint64_t *)&unk_1011E4A00);
  __chkstk_darwin();
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v7 = (char *)&v12 - v6;
  sub_10004A160(a1, (uint64_t)&v12 - v6, (uint64_t *)&unk_1011E4A00);
  v8 = *a2;
  KeyPath = swift_getKeyPath(&unk_100EF13A8);
  v10 = swift_getKeyPath(&unk_100EF13D0);
  sub_10004A160((uint64_t)v7, (uint64_t)v5, (uint64_t *)&unk_1011E4A00);
  swift_retain();
  static Published.subscript.setter(v5, v8, KeyPath, v10);
  return sub_10004FF60((uint64_t)v7, (uint64_t *)&unk_1011E4A00);
}

void sub_100C8C6CC(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t KeyPath;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[3];

  v3 = sub_100007E8C((uint64_t *)&unk_1011E4A00);
  __chkstk_darwin(v3);
  v5 = (char *)&v20[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v20[-1] - v7;
  KeyPath = swift_getKeyPath(&unk_100EF13F8);
  v10 = swift_getKeyPath(&unk_100EF1420);
  v20[0] = a1;
  v11 = a1;
  swift_retain();
  static Published.subscript.setter(v20, v1, KeyPath, v10);
  v12 = swift_getKeyPath(&unk_100EF13F8);
  v13 = swift_getKeyPath(&unk_100EF1420);
  static Published.subscript.getter(v20, v1, v12, v13);
  swift_release();
  swift_release();
  v14 = (void *)v20[0];
  if (v20[0])
  {
    v15 = (_BYTE *)(v1 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context_hasRemovedImage);
    swift_beginAccess(v1 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context_hasRemovedImage, v20, 1, 0);
    *v15 = 0;
    v16 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 1, 1, v16);
    v17 = swift_getKeyPath(&unk_100EF13A8);
    v18 = swift_getKeyPath(&unk_100EF13D0);
    sub_10004A160((uint64_t)v8, (uint64_t)v5, (uint64_t *)&unk_1011E4A00);
    swift_retain();
    static Published.subscript.setter(v5, v1, v17, v18);
    sub_10004FF60((uint64_t)v8, (uint64_t *)&unk_1011E4A00);

  }
}

__n128 sub_100C8C898@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  unsigned __int8 v4;
  unint64_t v5;
  unsigned __int8 v6;
  unint64_t v7;
  unsigned __int8 v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  __n128 result;
  __n128 v15;
  __int128 v16;
  __n128 v17;
  unint64_t v18;

  LOBYTE(v16) = 0;
  State.init(wrappedValue:)(&v16, &type metadata for Bool);
  v4 = v17.n128_u8[0];
  v5 = v17.n128_u64[1];
  LOBYTE(v16) = 0;
  State.init(wrappedValue:)(&v16, &type metadata for Bool);
  v6 = v17.n128_u8[0];
  v7 = v17.n128_u64[1];
  LOBYTE(v16) = 0;
  State.init(wrappedValue:)(&v16, &type metadata for Bool);
  v8 = v17.n128_u8[0];
  v9 = v17.n128_u64[1];
  v16 = xmmword_100EA93A0;
  State.init(wrappedValue:)(&v16, &type metadata for ImagePicker.SourceType);
  v15 = v17;
  v10 = v18;
  v11 = type metadata accessor for InlineProfileEditingView.Context(0);
  v12 = sub_100048748(&qword_1011E4A50, type metadata accessor for InlineProfileEditingView.Context, (uint64_t)&protocol conformance descriptor for InlineProfileEditingView.Context);
  a2->n128_u64[0] = ObservedObject.init(wrappedValue:)(a1, v11, v12);
  a2->n128_u64[1] = v13;
  a2[1].n128_u8[0] = v4;
  a2[1].n128_u64[1] = v5;
  a2[2].n128_u8[0] = v6;
  a2[2].n128_u64[1] = v7;
  a2[3].n128_u8[0] = v8;
  a2[3].n128_u64[1] = v9;
  result = v15;
  a2[4] = v15;
  a2[5].n128_u64[0] = v10;
  return result;
}

void sub_100C8C9DC(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  sub_100C8C6CC(v1);

}

uint64_t type metadata accessor for InlineProfileEditingView.Context(uint64_t a1)
{
  uint64_t result;

  result = qword_1011E4B60;
  if (!qword_1011E4B60)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for InlineProfileEditingView.Context);
  return result;
}

uint64_t sub_100C8CA54@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_100C8AF38(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_100C8CA5C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E4AB8;
  if (!qword_1011E4AB8)
  {
    v1 = sub_100044B54(&qword_1011E4A78);
    sub_10005610C(&qword_1011E4AC0, &qword_1011E4A70, (void (*)(void))sub_100C8CB00);
    sub_100049F28((unint64_t *)&unk_1011E4AF0, (uint64_t *)&unk_1011E4AA0, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E4AB8);
  }
  return result;
}

uint64_t sub_100C8CB00()
{
  return sub_10005610C(&qword_1011E4AC8, &qword_1011E4A68, (void (*)(void))sub_100C8CB24);
}

unint64_t sub_100C8CB24()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E4AD0;
  if (!qword_1011E4AD0)
  {
    v1 = sub_100044B54(&qword_1011E4A60);
    sub_100049F28(&qword_1011E4AD8, &qword_1011E4A58, (uint64_t)&protocol conformance descriptor for HStack<A>);
    sub_100049F28((unint64_t *)&unk_1011E4AE0, &qword_1011E42B0, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E4AD0);
  }
  return result;
}

uint64_t sub_100C8CBC0@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_100C8BBB0(*(_QWORD **)(v1 + 16), a1);
}

unint64_t sub_100C8CBC8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[6];

  result = qword_1011E4B18;
  if (!qword_1011E4B18)
  {
    v1 = sub_100044B54(&qword_1011E4A88);
    v2[0] = sub_100044B54(&qword_1011E4A78);
    v2[1] = &type metadata for String;
    v2[2] = sub_100044B54(&qword_1011E4AB0);
    v2[3] = sub_100C8CA5C();
    v2[4] = sub_100BBF2FC();
    v2[5] = sub_100049F28(&qword_1011E4B00, &qword_1011E4AB0, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.confirmationDialog<A, B>(_:isPresented:titleVisibility:actions:)>>, 1);
    sub_100049F28(&qword_1011E4B20, &qword_1011E4B08, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E4B18);
  }
  return result;
}

uint64_t sub_100C8CCCC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of InlineProfileEditingView.body>>, 1);
}

double destroy for InlineProfileEditingView(uint64_t a1)
{
  unint64_t v2;
  double result;

  swift_release(*(_QWORD *)(a1 + 8));
  swift_release(*(_QWORD *)(a1 + 24));
  swift_release(*(_QWORD *)(a1 + 40));
  swift_release(*(_QWORD *)(a1 + 56));
  v2 = *(_QWORD *)(a1 + 64);
  if (v2 >= 3)
  {
    swift_bridgeObjectRelease(v2);

  }
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 80)).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for InlineProfileEditingView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _OWORD *v9;
  void *v10;
  id v11;
  uint64_t v12;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v6;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v7;
  v9 = (_OWORD *)(a2 + 64);
  v8 = *(_QWORD *)(a2 + 64);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  if (v8 >= 3)
  {
    v10 = *(void **)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v8;
    *(_QWORD *)(a1 + 72) = v10;
    swift_bridgeObjectRetain();
    v11 = v10;
  }
  else
  {
    *(_OWORD *)(a1 + 64) = *v9;
  }
  v12 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 80) = v12;
  swift_retain(v12);
  return a1;
}

uint64_t assignWithCopy for InlineProfileEditingView(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_retain();
  swift_release();
  v4 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(a1 + 64) >= 3uLL)
  {
    if (v4 >= 3)
    {
      *(_QWORD *)(a1 + 64) = v4;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v7 = *(void **)(a1 + 72);
      v8 = *(void **)(a2 + 72);
      *(_QWORD *)(a1 + 72) = v8;
      v9 = v8;

      goto LABEL_8;
    }
    sub_10004FF60(a1 + 64, &qword_1011E4B30);
    goto LABEL_6;
  }
  if (v4 < 3)
  {
LABEL_6:
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    goto LABEL_8;
  }
  *(_QWORD *)(a1 + 64) = v4;
  v5 = *(void **)(a2 + 72);
  *(_QWORD *)(a1 + 72) = v5;
  swift_bridgeObjectRetain();
  v6 = v5;
LABEL_8:
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for InlineProfileEditingView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  void *v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_release();
  v5 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(a1 + 64) >= 3uLL)
  {
    if (v5 >= 3)
    {
      *(_QWORD *)(a1 + 64) = v5;
      swift_bridgeObjectRelease();
      v6 = *(void **)(a1 + 72);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);

      goto LABEL_6;
    }
    sub_10004FF60(a1 + 64, &qword_1011E4B30);
  }
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
LABEL_6:
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for InlineProfileEditingView()
{
  return &type metadata for InlineProfileEditingView;
}

uint64_t sub_100C8D048()
{
  return type metadata accessor for InlineProfileEditingView.Context(0);
}

void sub_100C8D050(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[4];

  sub_1000EA54C(319, (unint64_t *)&unk_1011E4B70, (uint64_t *)&unk_1011E4A00);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_100C164B4();
    if (v5 <= 0x3F)
    {
      v8[1] = *(_QWORD *)(v4 - 8) + 64;
      sub_1000EA54C(319, (unint64_t *)&unk_1011E4B80, &qword_1011DED30);
      if (v7 <= 0x3F)
      {
        v8[2] = *(_QWORD *)(v6 - 8) + 64;
        v8[3] = &unk_100EF14F8;
        swift_updateClassMetadata2(a1, 256, 4, v8, a1 + 80);
      }
    }
  }
}

uint64_t sub_100C8D118()
{
  _QWORD v1[6];

  v1[0] = sub_100044B54(&qword_1011E4A88);
  v1[1] = &type metadata for String;
  v1[2] = sub_100044B54(&qword_1011E4B10);
  v1[3] = sub_100C8CBC8();
  v1[4] = sub_100BBF2FC();
  v1[5] = sub_100049F28(&qword_1011E4B28, &qword_1011E4B10, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.alert<A, B>(_:isPresented:actions:)>>, 1);
}

uint64_t sub_100C8D1BC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.isEnabled.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100C8D1E8(unsigned __int8 *a1)
{
  return EnvironmentValues.isEnabled.setter(*a1);
}

uint64_t sub_100C8D20C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100C8D21C()
{
  uint64_t v0;
  unint64_t v1;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 56));
  swift_release(*(_QWORD *)(v0 + 72));
  v1 = *(_QWORD *)(v0 + 80);
  if (v1 >= 3)
  {
    swift_bridgeObjectRelease(v1);

  }
  swift_release(*(_QWORD *)(v0 + 96));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 112));
  return swift_deallocObject(v0, 120, 7);
}

uint64_t sub_100C8D280()
{
  uint64_t v0;

  return sub_100C8C498((__int128 *)(v0 + 16), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112));
}

uint64_t sub_100C8D28C(uint64_t a1)
{
  unint64_t v2;
  void *v3;

  v2 = *(_QWORD *)(a1 + 64);
  v3 = *(void **)(a1 + 72);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1004FF974(v2, v3);
  swift_retain();
  return a1;
}

uint64_t sub_100C8D310(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ImagePicker(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100C8D360()
{
  uint64_t v0;

  return sub_100C8B630(v0 + 16);
}

uint64_t sub_100C8D36C()
{
  uint64_t v0;

  return sub_100C8B6B4(v0 + 16);
}

void sub_100C8D378()
{
  uint64_t v0;

  sub_100C8B734(v0 + 16);
}

unint64_t sub_100C8D380()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E3B10;
  if (!qword_1011E3B10)
  {
    v1 = objc_opt_self(MPArtworkCatalog);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1011E3B10);
  }
  return result;
}

unint64_t sub_100C8D3BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E4DF8;
  if (!qword_1011E4DF8)
  {
    v1 = sub_100044B54(&qword_1011E4E00);
    sub_100C8D440();
    sub_100049F28((unint64_t *)&unk_1011E4420, &qword_1011E4E20, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E4DF8);
  }
  return result;
}

unint64_t sub_100C8D440()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E4E08;
  if (!qword_1011E4E08)
  {
    v1 = sub_100044B54((uint64_t *)&unk_1011E4E10);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E4E08);
  }
  return result;
}

unint64_t sub_100C8D4A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E4E30;
  if (!qword_1011E4E30)
  {
    v1 = sub_100044B54(&qword_1011E4838);
    sub_100C8D528();
    sub_100049F28((unint64_t *)&unk_1011E4420, &qword_1011E4E20, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E4E30);
  }
  return result;
}

unint64_t sub_100C8D528()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1011E4E38;
  if (!qword_1011E4E38)
  {
    v1 = sub_100044B54((uint64_t *)&unk_1011E4DB0);
    v2[0] = sub_100044B54((uint64_t *)&unk_1011E3D90);
    v2[1] = sub_100C39DFC();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E4E38);
  }
  return result;
}

uint64_t sub_100C8D5C0()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  __int128 v4;

  v4 = *(_OWORD *)(v0 + 32);
  v3 = 1;
  v1 = sub_100007E8C(&qword_1011E1B98);
  return State.wrappedValue.setter(&v3, v1);
}

uint64_t sub_100C8D618()
{
  uint64_t v0;
  unint64_t v1;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 56));
  swift_release(*(_QWORD *)(v0 + 72));
  v1 = *(_QWORD *)(v0 + 80);
  if (v1 >= 3)
  {
    swift_bridgeObjectRelease(v1);

  }
  swift_release(*(_QWORD *)(v0 + 96));
  return swift_deallocObject(v0, 104, 7);
}

uint64_t sub_100C8D674()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  __int128 v4;

  v4 = *(_OWORD *)(v0 + 64);
  v3 = 1;
  v1 = sub_100007E8C(&qword_1011E1B98);
  return State.wrappedValue.setter(&v3, v1);
}

uint64_t sub_100C8D6C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char v17;
  char v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __n128 v73[11];
  _BYTE v74[183];
  char v75;
  _OWORD v76[12];
  __int128 v77;

  v3 = v2;
  v68 = a1;
  v72 = a2;
  v4 = sub_100007E8C(&qword_1011E4E58);
  v64 = *(_QWORD *)(v4 - 8);
  v65 = v4;
  __chkstk_darwin();
  v6 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_100007E8C(&qword_1011E4E60);
  __chkstk_darwin();
  v8 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = sub_100007E8C(&qword_1011E4E68);
  __chkstk_darwin();
  v66 = (uint64_t)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v67 = (uint64_t)&v59 - v10;
  v70 = sub_100007E8C(&qword_1011E4E70);
  __chkstk_darwin();
  v69 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100007E8C(&qword_1011E4E78);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin();
  v15 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(v3 + 40);
  v17 = *(_BYTE *)(v3 + 48);
  sub_10006B3F8(v16, v17);
  v18 = sub_100C31844(v16, v17);
  sub_10006B604(v16, v17);
  if ((v18 & 1) != 0)
  {
    v19 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    v19(v15, v68, v12);
    v20 = (uint64_t)v69;
    v19(v69, (uint64_t)v15, v12);
    swift_storeEnumTagMultiPayload(v20, v70, 0);
    v21 = sub_100049F28(&qword_1011E4E80, &qword_1011E4E78, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    v22 = sub_100C8E5B8();
    _ConditionalContent<>.init(storage:)(v20, v12, v71, v21, v22);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  else
  {
    v24 = type metadata accessor for ScrollGeometry(0);
    v77 = *(_OWORD *)(v3 + 24);
    v25 = swift_allocObject(&unk_10110C4D0, 65, 7);
    v26 = *(_OWORD *)(v3 + 16);
    *(_OWORD *)(v25 + 16) = *(_OWORD *)v3;
    *(_OWORD *)(v25 + 32) = v26;
    *(_OWORD *)(v25 + 48) = *(_OWORD *)(v3 + 32);
    *(_BYTE *)(v25 + 64) = *(_BYTE *)(v3 + 48);
    sub_10006B3F8(v16, v17);
    sub_1003E3468((uint64_t)&v77);
    v27 = sub_100049F28(&qword_1011E4E80, &qword_1011E4E78, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    v62 = v27;
    v28 = sub_100C8E528();
    View.onScrollGeometryChange<A>(for:of:action:)(v24, sub_100C8DBF4, 0, sub_100C8E520, v25, v12, v24, v27, v28);
    swift_release();
    v30 = static Alignment.bottom.getter(v29);
    v60 = v31;
    v61 = v30;
    v59 = static VerticalAlignment.center.getter(v30);
    sub_100C8DCC8(v3, (uint64_t)v73);
    *(__n128 *)&v74[119] = v73[7];
    *(__n128 *)&v74[135] = v73[8];
    *(__n128 *)&v74[151] = v73[9];
    *(__n128 *)&v74[167] = v73[10];
    *(__n128 *)&v74[55] = v73[3];
    *(__n128 *)&v74[71] = v73[4];
    *(__n128 *)&v74[87] = v73[5];
    *(__n128 *)&v74[103] = v73[6];
    *(__n128 *)&v74[7] = v73[0];
    *(__n128 *)&v74[23] = v73[1];
    v75 = 0;
    *(__n128 *)&v74[39] = v73[2];
    v32 = static SafeAreaRegions.all.getter(v73[0]);
    LOBYTE(v27) = static Edge.Set.all.getter(v32);
    v68 = v12;
    v34 = v64;
    v33 = v65;
    (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v8, v6, v65);
    v35 = &v8[*(int *)(v63 + 36)];
    v36 = *(_OWORD *)&v74[144];
    *(_OWORD *)(v35 + 161) = *(_OWORD *)&v74[128];
    *(_OWORD *)(v35 + 177) = v36;
    *(_OWORD *)(v35 + 193) = *(_OWORD *)&v74[160];
    v37 = *(_OWORD *)&v74[80];
    *(_OWORD *)(v35 + 97) = *(_OWORD *)&v74[64];
    *(_OWORD *)(v35 + 113) = v37;
    v38 = *(_OWORD *)&v74[112];
    *(_OWORD *)(v35 + 129) = *(_OWORD *)&v74[96];
    *(_OWORD *)(v35 + 145) = v38;
    v39 = *(_OWORD *)&v74[16];
    *(_OWORD *)(v35 + 33) = *(_OWORD *)v74;
    *(_OWORD *)(v35 + 49) = v39;
    v40 = *(_OWORD *)&v74[48];
    *(_OWORD *)(v35 + 65) = *(_OWORD *)&v74[32];
    v41 = v60;
    *(_QWORD *)v35 = v61;
    *((_QWORD *)v35 + 1) = v41;
    *((_QWORD *)v35 + 2) = v59;
    *((_QWORD *)v35 + 3) = 0;
    v35[32] = 0;
    v42 = *(_QWORD *)&v74[175];
    *(_OWORD *)(v35 + 81) = v40;
    *((_QWORD *)v35 + 26) = v42;
    *((_QWORD *)v35 + 27) = v32;
    v35[224] = v27;
    v43 = (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v6, v33);
    v44 = static Alignment.center.getter(v43);
    v46 = v45;
    sub_100C8DF80((uint64_t *)v3, (uint64_t)v76);
    v47 = v66;
    sub_10004A160((uint64_t)v8, v66, &qword_1011E4E60);
    v48 = v71;
    v49 = v47 + *(int *)(v71 + 36);
    v50 = v76[9];
    *(_OWORD *)(v49 + 128) = v76[8];
    *(_OWORD *)(v49 + 144) = v50;
    v51 = v76[11];
    *(_OWORD *)(v49 + 160) = v76[10];
    *(_OWORD *)(v49 + 176) = v51;
    v52 = v76[5];
    *(_OWORD *)(v49 + 64) = v76[4];
    *(_OWORD *)(v49 + 80) = v52;
    v53 = v76[7];
    *(_OWORD *)(v49 + 96) = v76[6];
    *(_OWORD *)(v49 + 112) = v53;
    v54 = v76[1];
    *(_OWORD *)v49 = v76[0];
    *(_OWORD *)(v49 + 16) = v54;
    v55 = v76[3];
    *(_OWORD *)(v49 + 32) = v76[2];
    *(_OWORD *)(v49 + 48) = v55;
    *(_QWORD *)(v49 + 192) = v44;
    *(_QWORD *)(v49 + 200) = v46;
    sub_10004FF60((uint64_t)v8, &qword_1011E4E60);
    v56 = v67;
    sub_100C8E570(v47, v67);
    v57 = (uint64_t)v69;
    sub_10004A160(v56, (uint64_t)v69, &qword_1011E4E68);
    swift_storeEnumTagMultiPayload(v57, v70, 1);
    v58 = sub_100C8E5B8();
    _ConditionalContent<>.init(storage:)(v57, v68, v48, v62, v58);
    return sub_10004FF60(v56, &qword_1011E4E68);
  }
}

uint64_t sub_100C8DBF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = type metadata accessor for ScrollGeometry(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
}

uint64_t sub_100C8DC30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  double v5;
  double v6;
  double MaxY;
  double v8;
  double v9;
  uint64_t v10;
  double v12;
  __int128 v13;
  CGRect v14;

  v4 = ScrollGeometry.contentSize.getter();
  v6 = v5;
  v14.origin.x = ScrollGeometry.visibleRect.getter(v4);
  MaxY = CGRectGetMaxY(v14);
  ScrollGeometry.contentInsets.getter();
  v9 = (v6 - (MaxY - v8)) / *(double *)a3;
  if (v9 > 1.0)
    v9 = 1.0;
  if (v9 < 0.0)
    v9 = 0.0;
  v13 = *(_OWORD *)(a3 + 24);
  v12 = v9;
  v10 = sub_100007E8C(&qword_1011E4EC0);
  return State.wrappedValue.setter(&v12, v10);
}

void sub_100C8DCC8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  __int128 v34;

  v4 = static HorizontalAlignment.center.getter(a1);
  sub_100C8DDFC((uint64_t *)a1, (uint64_t)&v27);
  v6 = v27;
  v7 = v28;
  v8 = v29;
  v9 = v30;
  v10 = v31;
  v11 = v32;
  v12 = v33;
  v13 = v34;
  if ((*(_BYTE *)(a1 + 16) & 1) != 0)
  {
    v14 = 0;
    v15 = 0;
    v16 = 0;
    v17 = 0;
    v18 = 0;
    v19 = 0uLL;
  }
  else
  {
    v20 = *(_QWORD *)(a1 + 8);
    v25 = v28;
    v26 = v27;
    v23 = v34;
    v24 = v29;
    v14 = static Color.black.getter(v5);
    v21 = static Alignment.center.getter(v14);
    _FrameLayout.init(width:height:alignment:)(&v27, v20, 0, 0, 1, v21, v22);
    v13 = v23;
    v8 = v24;
    v7 = v25;
    v6 = v26;
    v15 = v27;
    v16 = BYTE8(v27);
    v17 = v28;
    v18 = BYTE8(v28);
    v19 = v29;
  }
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 0;
  *(_OWORD *)(a2 + 24) = v6;
  *(_OWORD *)(a2 + 40) = v7;
  *(_OWORD *)(a2 + 56) = v8;
  *(_QWORD *)(a2 + 72) = v9;
  *(_BYTE *)(a2 + 80) = v10;
  *(_QWORD *)(a2 + 88) = v11;
  *(_BYTE *)(a2 + 96) = v12;
  *(_OWORD *)(a2 + 104) = v13;
  *(_QWORD *)(a2 + 120) = v14;
  *(_QWORD *)(a2 + 128) = v15;
  *(_QWORD *)(a2 + 136) = v16;
  *(_QWORD *)(a2 + 144) = v17;
  *(_QWORD *)(a2 + 152) = v18;
  *(_OWORD *)(a2 + 160) = v19;
}

double sub_100C8DDFC@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  double v14;
  double v15;
  uint64_t v16;
  double v17;
  double v18;
  double v19;
  _QWORD *v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  double result;
  __int128 v32;
  double v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  char v39;
  __int128 v40;

  v4 = static Color.black.getter(a1);
  v5 = sub_100007E8C(&qword_1011E4EC8);
  v6 = swift_allocObject(v5, 48, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100EA7A80;
  v7 = static Color.black.getter(v6);
  *(_QWORD *)(v6 + 32) = v7;
  static Color.black.getter(v7);
  v37 = *(_OWORD *)(a1 + 3);
  v8 = sub_100007E8C(&qword_1011E4EC0);
  State.wrappedValue.getter(&v33, v8);
  v9 = Color.opacity(_:)(1.0 - v33);
  swift_release();
  *(_QWORD *)(v6 + 40) = v9;
  *(_QWORD *)&v37 = v6;
  v11 = specialized Array._endMutation()(v10);
  v12 = v37;
  v13 = static UnitPoint.top.getter(v11);
  v15 = v14;
  v17 = static UnitPoint.bottom.getter(v16);
  v19 = v18;
  Gradient.init(colors:)(v12);
  v20 = LinearGradient.init(gradient:startPoint:endPoint:)(&v33, v13, v15, v17, v19);
  v21 = v33;
  v32 = v34;
  v22 = v35;
  v23 = v36;
  v24 = *a1;
  v25 = static Alignment.center.getter(v20);
  _FrameLayout.init(width:height:alignment:)(&v37, 0, 1, v24, 0, v25, v26);
  v27 = v37;
  v28 = BYTE8(v37);
  v29 = v38;
  v30 = v39;
  *(_QWORD *)a2 = v4;
  *(double *)(a2 + 8) = v21;
  *(_OWORD *)(a2 + 16) = v32;
  *(_QWORD *)(a2 + 32) = v22;
  *(_QWORD *)(a2 + 40) = v23;
  *(_QWORD *)(a2 + 48) = v27;
  *(_BYTE *)(a2 + 56) = v28;
  *(_QWORD *)(a2 + 64) = v29;
  *(_BYTE *)(a2 + 72) = v30;
  result = *(double *)&v40;
  *(_OWORD *)(a2 + 80) = v40;
  return result;
}

uint64_t sub_100C8DF80@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  char v14;
  char v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  __n128 v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  char v42;
  char v43;
  char v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;

  v36 = static HorizontalAlignment.center.getter(a1);
  v4 = static Alignment.center.getter(v36);
  v37 = v5;
  v38 = v4;
  v6 = *a1;
  v7 = static Alignment.center.getter(v4);
  _FrameLayout.init(width:height:alignment:)(&v45, 0, 1, v6, 0, v7, v8);
  v9 = v46;
  v34 = v47;
  v35 = v45;
  v10 = v48;
  v11 = v49;
  v12 = v50;
  v14 = static Edge.Set.trailing.getter(v13);
  v15 = *((_BYTE *)a1 + 16);
  v16 = 0.0;
  v17 = 0;
  v18 = 0;
  v19 = 0;
  if ((v15 & 1) == 0)
  {
    v16 = EdgeInsets.init(_all:)(*((double *)a1 + 1));
    v17 = v20;
    v18 = v21;
    v19 = v22;
  }
  v44 = 1;
  v43 = 1;
  v42 = v9;
  v41 = v10;
  v40 = v15;
  v23 = sub_100007E8C(&qword_1011E4EC0);
  v24 = State.wrappedValue.getter(&v39, v23);
  v25 = v39;
  v26 = v44;
  v27 = v43;
  v28 = v42;
  v29 = v41;
  v30 = v40;
  v31 = static Edge.Set.bottom.getter(v24);
  result = static SafeAreaRegions.all.getter(v32);
  *(_QWORD *)a2 = v36;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = v26;
  *(_QWORD *)(a2 + 24) = 0;
  *(_BYTE *)(a2 + 32) = v27;
  *(_QWORD *)(a2 + 40) = v38;
  *(_QWORD *)(a2 + 48) = v37;
  *(_QWORD *)(a2 + 56) = 0x4018000000000000;
  *(_BYTE *)(a2 + 64) = 3;
  *(_QWORD *)(a2 + 72) = v35;
  *(_BYTE *)(a2 + 80) = v28;
  *(_QWORD *)(a2 + 88) = v34;
  *(_BYTE *)(a2 + 96) = v29;
  *(_QWORD *)(a2 + 104) = v11;
  *(_QWORD *)(a2 + 112) = v12;
  *(_BYTE *)(a2 + 120) = v14;
  *(double *)(a2 + 128) = v16;
  *(_QWORD *)(a2 + 136) = v17;
  *(_QWORD *)(a2 + 144) = v18;
  *(_QWORD *)(a2 + 152) = v19;
  *(_BYTE *)(a2 + 160) = v30;
  *(_QWORD *)(a2 + 168) = v25;
  *(_QWORD *)(a2 + 176) = result;
  *(_BYTE *)(a2 + 184) = v31;
  return result;
}

uint64_t sub_100C8E12C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100C8D6C8(a1, a2);
}

void sub_100C8E16C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, double a5)
{
  double v10;
  uint64_t v11;
  uint64_t KeyPath;
  double v13;
  uint64_t v14;
  char v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;

  v20 = 0x3FF0000000000000;
  State.init(wrappedValue:)(&v20, &type metadata for CGFloat);
  v10 = v13;
  v11 = v14;
  KeyPath = swift_getKeyPath(&unk_100EF15D0);
  v13 = a5;
  v14 = a1;
  v15 = a2 & 1;
  v16 = v10;
  v17 = v11;
  v18 = KeyPath;
  v19 = 0;
  View.modifier<A>(_:)(&v13, a3, &type metadata for BottomGradientBlurMask, a4);
  swift_release(KeyPath);
  swift_release(v11);
}

uint64_t sub_100C8E240@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.accessibilityReduceTransparency.getter();
  *a1 = result & 1;
  return result;
}

uint64_t destroy for BottomGradientBlurMask(uint64_t a1)
{
  swift_release();
  return sub_10006B604(*(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
}

uint64_t initializeWithCopy for BottomGradientBlurMask(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  v6 = *(_BYTE *)(a2 + 48);
  swift_retain();
  sub_10006B3F8(v5, v6);
  *(_QWORD *)(a1 + 40) = v5;
  *(_BYTE *)(a1 + 48) = v6;
  return a1;
}

uint64_t assignWithCopy for BottomGradientBlurMask(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v2 = a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  v5 = *(_QWORD *)(v2 + 40);
  LOBYTE(v2) = *(_BYTE *)(v2 + 48);
  sub_10006B3F8(v5, v2);
  v6 = *(_QWORD *)(a1 + 40);
  v7 = *(_BYTE *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = v5;
  *(_BYTE *)(a1 + 48) = v2;
  sub_10006B604(v6, v7);
  return a1;
}

__n128 initializeWithTake for BottomGradientBlurMask(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for BottomGradientBlurMask(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  char v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release();
  v4 = *(_BYTE *)(a2 + 48);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_BYTE *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = v4;
  sub_10006B604(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for BottomGradientBlurMask(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 49))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 32);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for BottomGradientBlurMask(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
      *(_QWORD *)(result + 32) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for BottomGradientBlurMask()
{
  return &type metadata for BottomGradientBlurMask;
}

uint64_t sub_100C8E4E0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FBDF18, 1);
}

uint64_t sub_100C8E4F0()
{
  uint64_t v0;

  swift_release();
  sub_10006B604(*(_QWORD *)(v0 + 56), *(_BYTE *)(v0 + 64));
  return swift_deallocObject(v0, 65);
}

uint64_t sub_100C8E520(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100C8DC30(a1, a2, v2 + 16);
}

unint64_t sub_100C8E528()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E4E88;
  if (!qword_1011E4E88)
  {
    v1 = type metadata accessor for ScrollGeometry(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for ScrollGeometry, v1);
    atomic_store(result, (unint64_t *)&qword_1011E4E88);
  }
  return result;
}

uint64_t sub_100C8E570(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011E4E68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100C8E5B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E4E90;
  if (!qword_1011E4E90)
  {
    v1 = sub_100044B54(&qword_1011E4E68);
    sub_100C8E63C();
    sub_100049F28(&qword_1011E4EB0, &qword_1011E4EB8, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E4E90);
  }
  return result;
}

unint64_t sub_100C8E63C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1011E4E98;
  if (!qword_1011E4E98)
  {
    v1 = sub_100044B54(&qword_1011E4E60);
    v2[0] = sub_100044B54(&qword_1011E4E78);
    v2[1] = type metadata accessor for ScrollGeometry(255);
    v2[2] = sub_100049F28(&qword_1011E4E80, &qword_1011E4E78, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    v2[3] = sub_100C8E528();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.onScrollGeometryChange<A>(for:of:action:)>>, 1);
    sub_100049F28(&qword_1011E4EA0, &qword_1011E4EA8, (uint64_t)&protocol conformance descriptor for _MaskAlignmentEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E4E98);
  }
  return result;
}

unint64_t sub_100C8E724()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E4ED0;
  if (!qword_1011E4ED0)
  {
    v1 = sub_100044B54(&qword_1011E4ED8);
    sub_100049F28(&qword_1011E4E80, &qword_1011E4E78, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    sub_100C8E5B8();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E4ED0);
  }
  return result;
}

double ExpandableTextView.init(title:buttonColor:_:sheetContent:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(__n128)@<X3>, void (*a5)(uint64_t)@<X5>, uint64_t a6@<X7>, uint64_t a7@<X8>, __int128 a8, uint64_t a9)
{
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  double result;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  char v23;

  v23 = 0;
  State.init(wrappedValue:)(&v23, &type metadata for Bool);
  v16 = v21;
  *(_BYTE *)a7 = v20;
  *(_QWORD *)(a7 + 8) = v16;
  *(_QWORD *)(a7 + 16) = a1;
  *(_QWORD *)(a7 + 24) = a2;
  v20 = a6;
  v21 = a8;
  v22 = a9;
  *(_QWORD *)(a7 + *(int *)(type metadata accessor for ExpandableTextView(0, (uint64_t)&v20) + 64)) = a3;
  v17 = swift_retain(a3);
  v18 = a4(v17);
  a5(v18);
  *(_QWORD *)&result = swift_release(a3).n128_u64[0];
  return result;
}

uint64_t type metadata accessor for ExpandableTextView(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for ExpandableTextView);
}

double ExpandableTextView.init<>(title:buttonColor:_:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(__n128)@<X3>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  __int128 v8;

  *((_QWORD *)&v8 + 1) = a6;
  *(_QWORD *)&v8 = a5;
  return ExpandableTextView.init(title:buttonColor:_:sheetContent:)(a1, a2, a3, a4, (void (*)(uint64_t))a4, a5, a7, v8, a6);
}

uint64_t ExpandableTextView.body.getter@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t WitnessTable;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t OpaqueTypeConformance2;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  ValueMetadata *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  ValueMetadata *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t, _QWORD *, __n128);
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD v93[2];
  uint64_t v94;
  ValueMetadata *v95;
  uint64_t v96;
  void *v97;

  v3 = v2;
  v79 = a2;
  v65 = *(a1 - 1);
  v69 = *(_QWORD *)(v65 + 64);
  __chkstk_darwin();
  v82 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = *(_QWORD *)(v6 + 16);
  v7 = v63;
  v8 = type metadata accessor for MoreLabel(255);
  v74 = v8;
  v81 = a1[4];
  v9 = v81;
  v71 = (void *)sub_100048748(&qword_1011E4EE0, type metadata accessor for MoreLabel, (uint64_t)&protocol conformance descriptor for MoreLabel);
  v94 = v7;
  v95 = (ValueMetadata *)v8;
  v96 = v9;
  v97 = v71;
  v10 = type metadata accessor for HeightLimitedButtonTextView(0, (uint64_t)&v94);
  v77 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin();
  v70 = (uint64_t)&v57 - v11;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for HeightLimitedButtonTextView<A, B>, v10);
  v94 = v10;
  v95 = (ValueMetadata *)&type metadata for Bool;
  v60 = v10;
  v96 = WitnessTable;
  v97 = &protocol witness table for Bool;
  v61 = WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v94, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v78 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  v72 = OpaqueTypeMetadata2;
  __chkstk_darwin();
  v67 = (char *)&v57 - v14;
  v80 = a1[3];
  v57 = a1[5];
  v16 = type metadata accessor for Sheet(255, v80, v57, v15);
  v17 = swift_getWitnessTable(&unk_100EF17D8, v16);
  v18 = sub_100C8EF84();
  v94 = v16;
  v95 = &type metadata for DescriptionSheetSizing;
  v96 = v17;
  v97 = (void *)v18;
  v19 = swift_getOpaqueTypeMetadata2(255, &v94, &opaque type descriptor for <<opaque return type of View.presentationSizing<A>(_:)>>, 0);
  v64 = v19;
  v94 = v10;
  v95 = (ValueMetadata *)&type metadata for Bool;
  v96 = WitnessTable;
  v97 = &protocol witness table for Bool;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v94, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v68 = OpaqueTypeConformance2;
  v94 = v16;
  v95 = &type metadata for DescriptionSheetSizing;
  v96 = v17;
  v97 = (void *)v18;
  v66 = swift_getOpaqueTypeConformance2(&v94, &opaque type descriptor for <<opaque return type of View.presentationSizing<A>(_:)>>, 1);
  v94 = OpaqueTypeMetadata2;
  v95 = (ValueMetadata *)v19;
  v96 = OpaqueTypeConformance2;
  v97 = (void *)v66;
  v75 = swift_getOpaqueTypeMetadata2(0, &v94, &opaque type descriptor for <<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>, 0);
  v76 = *(_QWORD *)(v75 - 8);
  __chkstk_darwin();
  v62 = (char *)&v57 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __chkstk_darwin();
  v73 = (uint64_t)&v57 - v23;
  v24 = v65;
  v59 = *(void (**)(char *, uint64_t, _QWORD *, __n128))(v65 + 16);
  v25 = v82;
  v59(v82, v3, a1, v22);
  v26 = *(unsigned __int8 *)(v24 + 80);
  v27 = (v26 + 48) & ~v26;
  v69 += v27;
  v58 = v26 | 7;
  v28 = (_QWORD *)swift_allocObject(&unk_10110C540, v69, v26 | 7);
  v29 = v63;
  v30 = v80;
  v28[2] = v63;
  v28[3] = v30;
  v31 = v81;
  v32 = v57;
  v28[4] = v81;
  v28[5] = v32;
  v65 = *(_QWORD *)(v24 + 32);
  ((void (*)(char *, char *, _QWORD *))v65)((char *)v28 + v27, v25, a1);
  v33 = v29;
  v88 = v29;
  v89 = v30;
  v90 = v31;
  v91 = v32;
  v34 = v32;
  v92 = v3;
  v83 = v33;
  v84 = v30;
  v85 = v31;
  v86 = v32;
  v87 = v3;
  v35 = v70;
  HeightLimitedButtonTextView.init(action:body:trailingView:)((uint64_t)sub_100C8EFCC, (uint64_t)v28, (void (*)(void))sub_100C8F090, sub_100C8F214, v33, v74, v70, v31, (uint64_t)v71);
  v36 = *(ValueMetadata **)(v3 + 8);
  LOBYTE(v94) = *(_BYTE *)v3;
  v95 = v36;
  v37 = sub_100007E8C(&qword_1011E1B98);
  State.wrappedValue.getter(v93, v37);
  LOBYTE(v94) = v93[0];
  v38 = v67;
  v39 = v60;
  View.onChange<A>(of:initial:_:)(&v94, 0, UIScreen.Dimensions.size.getter, 0, v60, &type metadata for Bool, v61, &protocol witness table for Bool);
  (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v35, v39);
  v40 = *(_QWORD *)(v3 + 8);
  LOBYTE(v93[0]) = *(_BYTE *)v3;
  v93[1] = v40;
  State.projectedValue.getter(&v94, v37);
  v42 = v94;
  v41 = v95;
  v43 = v96;
  v44 = v82;
  ((void (*)(char *, uint64_t, _QWORD *))v59)(v82, v3, a1);
  v45 = (_QWORD *)swift_allocObject(&unk_10110C568, v69, v58);
  v46 = v80;
  v45[2] = v33;
  v45[3] = v46;
  v45[4] = v81;
  v45[5] = v34;
  ((void (*)(char *, char *, _QWORD *))v65)((char *)v45 + v27, v44, a1);
  v47 = swift_checkMetadataState(0, v64);
  v48 = (void *)v66;
  v49 = v68;
  v50 = (uint64_t)v62;
  v51 = v72;
  View.sheet<A>(isPresented:onDismiss:content:)(v42, v41, v43, 0, 0, sub_100C8F540, v45, v72, v47, v68, v66);
  swift_release();
  swift_release();
  v52 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v78 + 8))(v38, v51, v52);
  v94 = v51;
  v95 = (ValueMetadata *)v47;
  v96 = v49;
  v97 = v48;
  swift_getOpaqueTypeConformance2(&v94, &opaque type descriptor for <<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>, 1);
  v53 = v73;
  v54 = v75;
  sub_10081EB14(v50, v75, v73);
  v55 = *(void (**)(uint64_t, uint64_t))(v76 + 8);
  v55(v50, v54);
  sub_1000EA744(v53, v54, v79);
  return ((uint64_t (*)(uint64_t, uint64_t))v55)(v53, v54);
}

uint64_t type metadata accessor for Sheet(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Sheet);
}

unint64_t sub_100C8EF84()
{
  unint64_t result;

  result = qword_1011E4EE8[0];
  if (!qword_1011E4EE8[0])
  {
    result = swift_getWitnessTable(&unk_100EF17A0, &type metadata for DescriptionSheetSizing);
    atomic_store(result, qword_1011E4EE8);
  }
  return result;
}

uint64_t sub_100C8EFCC()
{
  return sub_100C92C7C(1);
}

uint64_t sub_100C8EFD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[4];

  v6 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin();
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = v9;
  v15[1] = v10;
  v15[2] = v11;
  v15[3] = v12;
  v13 = type metadata accessor for ExpandableTextView(0, (uint64_t)v15);
  sub_10081EB14(a1 + *(int *)(v13 + 56), a2, (uint64_t)v8);
  sub_1000EA744((uint64_t)v8, a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, a2);
}

uint64_t sub_100C8F090()
{
  return sub_10068E2A4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100C8EFD4);
}

double sub_100C8F09C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  char *v24;
  double result;
  _QWORD v26[4];

  v12 = type metadata accessor for MoreLabel(0);
  __chkstk_darwin();
  v14 = (_QWORD *)((char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  v16 = (char *)v26 - v15;
  __chkstk_darwin();
  v18 = (char *)v26 - v17;
  v26[0] = a2;
  v26[1] = a3;
  v26[2] = a4;
  v26[3] = a5;
  v19 = *(int *)(type metadata accessor for ExpandableTextView(0, (uint64_t)v26) + 64);
  if (*(_QWORD *)(a1 + v19))
    v21 = *(_QWORD *)(a1 + v19);
  else
    v21 = static Color.primary.getter(v20);
  v22 = (uint64_t *)((char *)v14 + *(int *)(v12 + 20));
  *v22 = swift_getKeyPath(&unk_100EF1858);
  v23 = sub_100007E8C((uint64_t *)&unk_1011DE420);
  swift_storeEnumTagMultiPayload(v22, v23, 0);
  v24 = (char *)v14 + *(int *)(v12 + 24);
  *(_QWORD *)v24 = swift_getKeyPath(&unk_100EF1888);
  v24[8] = 0;
  *v14 = v21;
  sub_100C92D08((uint64_t)v14, (uint64_t)v16);
  sub_100C92D08((uint64_t)v16, (uint64_t)v18);
  sub_100C92D08((uint64_t)v18, a6);
  *(_QWORD *)&result = swift_retain().n128_u64[0];
  return result;
}

uint64_t sub_100C8F214()
{
  return sub_10068E2A4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100C8F09C);
}

uint64_t sub_100C8F220@<X0>(uint64_t a1@<X0>, int *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t WitnessTable;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (**v38)();
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  int *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int *v61;
  ValueMetadata *v62;
  uint64_t v63;
  unint64_t v64;

  v52 = a2;
  v53 = a4;
  v60 = a6;
  v61 = a2;
  v62 = (ValueMetadata *)a3;
  v63 = a4;
  v64 = a5;
  v50 = a5;
  v9 = type metadata accessor for ExpandableTextView(0, (uint64_t)&v61);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin();
  v13 = (char *)&v46 - v12;
  v47 = a3;
  v15 = (int *)type metadata accessor for Sheet(0, a3, a5, v14);
  v59 = *((_QWORD *)v15 - 1);
  __chkstk_darwin();
  v17 = (uint64_t *)((char *)&v46 - v16);
  WitnessTable = swift_getWitnessTable(&unk_100EF17D8, v15);
  v56 = WitnessTable;
  v55 = sub_100C8EF84();
  v61 = v15;
  v62 = &type metadata for DescriptionSheetSizing;
  v63 = WitnessTable;
  v64 = v55;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v61, &opaque type descriptor for <<opaque return type of View.presentationSizing<A>(_:)>>, 0);
  v20 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  v57 = OpaqueTypeMetadata2;
  v58 = v20;
  __chkstk_darwin();
  v51 = (char *)&v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __chkstk_darwin();
  v54 = (uint64_t)&v46 - v23;
  v24 = a1;
  v48 = *(_QWORD *)(a1 + 16);
  v49 = a1;
  v46 = *(_QWORD *)(a1 + 24);
  v25 = v13;
  v26 = v13;
  v27 = v9;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))(v25, v24, v9, v22);
  v28 = *(unsigned __int8 *)(v10 + 80);
  v29 = (v28 + 48) & ~v28;
  v30 = (char *)swift_allocObject(&unk_10110C700, v29 + v11, v28 | 7);
  v31 = v53;
  *((_QWORD *)v30 + 2) = v52;
  *((_QWORD *)v30 + 3) = a3;
  v32 = v50;
  *((_QWORD *)v30 + 4) = v31;
  *((_QWORD *)v30 + 5) = v32;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v30[v29], v26, v27);
  v33 = v46;
  swift_bridgeObjectRetain();
  v34 = (_QWORD *)((char *)v17 + v15[11]);
  *v34 = swift_getKeyPath(&unk_100EF1828);
  v35 = sub_100007E8C(&qword_1011E4D50);
  swift_storeEnumTagMultiPayload(v34, v35, 0);
  v36 = v49;
  *v17 = v48;
  v17[1] = v33;
  v37 = sub_100C8F5EC(v36, v47, (uint64_t)v17 + v15[9]);
  v38 = (uint64_t (**)())((char *)v17 + v15[10]);
  *v38 = sub_100C92C74;
  v38[1] = (uint64_t (*)())v30;
  v39 = (uint64_t)v51;
  v41 = v55;
  v40 = v56;
  View.presentationSizing<A>(_:)(v37, v15, &type metadata for DescriptionSheetSizing, v56, v55);
  (*(void (**)(_QWORD *, int *))(v59 + 8))(v17, v15);
  v61 = v15;
  v62 = &type metadata for DescriptionSheetSizing;
  v63 = v40;
  v64 = v41;
  swift_getOpaqueTypeConformance2(&v61, &opaque type descriptor for <<opaque return type of View.presentationSizing<A>(_:)>>, 1);
  v42 = v54;
  v43 = v57;
  sub_10081EB14(v39, v57, v54);
  v44 = *(void (**)(uint64_t, uint64_t))(v58 + 8);
  v44(v39, v43);
  sub_1000EA744(v42, v43, v60);
  return ((uint64_t (*)(uint64_t, uint64_t))v44)(v42, v43);
}

uint64_t sub_100C8F540@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[4];

  v4 = v1[3];
  v5 = v1[4];
  v6 = v1[5];
  v9[0] = v1[2];
  v3 = (int *)v9[0];
  v9[1] = v4;
  v9[2] = v5;
  v9[3] = v6;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ExpandableTextView(0, (uint64_t)v9) - 8) + 80);
  return sub_100C8F220((uint64_t)v1 + ((v7 + 48) & ~v7), v3, v4, v5, v6, a1);
}

uint64_t sub_100C8F5B8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  _OWORD v4[2];

  v2 = *(_OWORD *)(a2 + 32);
  v4[0] = *(_OWORD *)(a2 + 16);
  v4[1] = v2;
  return swift_getOpaqueTypeConformance2(v4, &opaque type descriptor for <<opaque return type of ExpandableTextView.body>>, 1);
}

uint64_t sub_100C8F5EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[4];

  v6 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin();
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = v9;
  v15[1] = v10;
  v15[2] = v11;
  v15[3] = v12;
  v13 = type metadata accessor for ExpandableTextView(0, (uint64_t)v15);
  sub_10081EB14(a1 + *(int *)(v13 + 60), a2, (uint64_t)v8);
  sub_1000EA744((uint64_t)v8, a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, a2);
}

uint64_t sub_100C8F6AC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[5];

  v5[0] = &unk_100EF1728;
  v5[1] = &unk_100EF1728;
  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v5[2] = *(_QWORD *)(result - 8) + 64;
    result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 24));
    if (v4 <= 0x3F)
    {
      v5[3] = *(_QWORD *)(result - 8) + 64;
      v5[4] = &unk_100EF1740;
      swift_initStructMetadata(a1, 0, 5, v5, a1 + 48);
      return 0;
    }
  }
  return result;
}

uint64_t *sub_100C8F74C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t *v20;
  uint64_t v21;
  uint64_t v23;

  v3 = a1;
  v5 = *(_QWORD *)(a3 + 16);
  v4 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = *(_QWORD *)(v4 - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = *(_QWORD *)(v6 + 64) + v9;
  v11 = *(_QWORD *)(v8 + 64) + 7;
  if ((v9 | v7) > 7
    || ((*(_DWORD *)(v8 + 80) | *(_DWORD *)(v6 + 80)) & 0x100000) != 0
    || ((v11 + ((v10 + ((v7 + 32) & ~v7)) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v21 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v21 + (((v9 | v7) & 0xF8 ^ 0x1F8) & ((v9 | v7) + 16)));
  }
  else
  {
    v23 = ~v9;
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v14 = a2[1];
    v3[1] = v14;
    v15 = (_QWORD *)(((unint64_t)v3 + 23) & 0xFFFFFFFFFFFFFFF8);
    v16 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v15 = *v16;
    v15[1] = v16[1];
    v17 = ((unint64_t)v15 + v7 + 16) & ~v7;
    v18 = ((unint64_t)v16 + v7 + 16) & ~v7;
    v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    swift_retain(v14);
    swift_bridgeObjectRetain();
    v19(v17, v18, v5);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))((v17 + v10) & v23, (v18 + v10) & v23, v4);
    v20 = (uint64_t *)((v11 + ((v18 + v10) & v23)) & 0xFFFFFFFFFFFFF8);
    v21 = *v20;
    *(_QWORD *)((v11 + ((v17 + v10) & v23)) & 0xFFFFFFFFFFFFF8) = *v20;
  }
  swift_retain(v21);
  return v3;
}

double sub_100C8F8D0(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  double result;

  swift_release(*(_QWORD *)(a1 + 8));
  v4 = (a1 + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease(*(_QWORD *)(v4 + 8));
  v5 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v6 = (v4 + *(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  (*(void (**)(unint64_t))(v5 + 8))(v6);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a2 + 24) - 8);
  v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  (*(void (**)(unint64_t))(v8 + 8))(v9);
  *(_QWORD *)&result = swift_release(*(_QWORD *)((*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFF8)).n128_u64[0];
  return result;
}

uint64_t sub_100C8F970(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v5;
  v6 = (_QWORD *)((a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v7 = (_QWORD *)((a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v6 = *v7;
  v6[1] = v7[1];
  v8 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = ((unint64_t)v6 + v10 + 16) & ~v10;
  v12 = ((unint64_t)v7 + v10 + 16) & ~v10;
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
  swift_retain(v5);
  swift_bridgeObjectRetain();
  v13(v11, v12, v8);
  v14 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = *(_QWORD *)(v9 + 64) + v15;
  v17 = (v16 + v11) & ~v15;
  v18 = (v16 + v12) & ~v15;
  (*(void (**)(uint64_t, uint64_t))(v14 + 16))(v17, v18);
  v19 = *(_QWORD *)(v14 + 64) + 7;
  v20 = (_QWORD *)((v19 + v17) & 0xFFFFFFFFFFFFF8);
  v21 = (uint64_t *)((v19 + v18) & 0xFFFFFFFFFFFFF8);
  v22 = *v21;
  *v20 = *v21;
  swift_retain(v22);
  return a1;
}

uint64_t sub_100C8FA74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  swift_retain(v7);
  swift_release(v6);
  v8 = (_QWORD *)((a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v9 = (_QWORD *)((a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v8 = *v9;
  v10 = v8[1];
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v10);
  v11 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = ((unint64_t)v8 + v12 + 16) & ~v12;
  v14 = ((unint64_t)v9 + v12 + 16) & ~v12;
  (*(void (**)(uint64_t, uint64_t))(v11 + 24))(v13, v14);
  v15 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = *(_QWORD *)(v11 + 64) + v16;
  v18 = (v17 + v13) & ~v16;
  v19 = (v17 + v14) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v15 + 24))(v18, v19);
  v20 = *(_QWORD *)(v15 + 64) + 7;
  v21 = (uint64_t *)((v20 + v18) & 0xFFFFFFFFFFFFFFF8);
  v22 = (uint64_t *)((v20 + v19) & 0xFFFFFFFFFFFFF8);
  v23 = *v22;
  v24 = *v21;
  *v21 = *v22;
  swift_retain(v23);
  swift_release(v24);
  return a1;
}

_OWORD *sub_100C8FB90(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  _OWORD *v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *a1 = *a2;
  v5 = (_OWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v5 = *v6;
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = ((unint64_t)v5 + v8 + 16) & ~v8;
  v10 = ((unint64_t)v6 + v8 + 16) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 32))(v9, v10);
  v11 = *(_QWORD *)(v7 + 64);
  v12 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = v11 + v13;
  v15 = (v14 + v9) & ~v13;
  v16 = (v14 + v10) & ~v13;
  (*(void (**)(uint64_t, uint64_t))(v12 + 32))(v15, v16);
  *(_QWORD *)((*(_QWORD *)(v12 + 64) + 7 + v15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v12 + 64) + 7 + v16) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_100C8FC68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release(v6);
  v7 = (_QWORD *)((a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = v7[1];
  v7[1] = v8[1];
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = ((unint64_t)v7 + v11 + 16) & ~v11;
  v13 = ((unint64_t)v8 + v11 + 16) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v10 + 40))(v12, v13);
  v14 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = *(_QWORD *)(v10 + 64) + v15;
  v17 = (v16 + v12) & ~v15;
  v18 = (v16 + v13) & ~v15;
  (*(void (**)(uint64_t, uint64_t))(v14 + 40))(v17, v18);
  v19 = *(_QWORD *)(v14 + 64) + 7;
  v20 = (uint64_t *)((v19 + v17) & 0xFFFFFFFFFFFFFFF8);
  v21 = *v20;
  *v20 = *(_QWORD *)((v19 + v18) & 0xFFFFFFFFFFFFF8);
  swift_release(v21);
  return a1;
}

uint64_t sub_100C8FD6C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  unint64_t v15;
  int v16;
  unint64_t v17;

  v3 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v4 = *(_DWORD *)(v3 + 84);
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  if (v4 <= *(_DWORD *)(v5 + 84))
    v6 = *(_DWORD *)(v5 + 84);
  else
    v6 = *(_DWORD *)(v3 + 84);
  if (v6 <= 0x7FFFFFFE)
    v7 = 2147483646;
  else
    v7 = v6;
  if (!a2)
    return 0;
  v8 = *(unsigned __int8 *)(v3 + 80);
  v9 = *(_QWORD *)(v3 + 64);
  v10 = *(unsigned __int8 *)(v5 + 80);
  if (v7 >= a2)
  {
    if (v6 > 0x7FFFFFFE)
    {
      v17 = (((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v8 + 16) & ~v8;
      if (v4 == v7)
        return (*(uint64_t (**)(unint64_t, _QWORD))(v3 + 48))(v17, *(unsigned int *)(v3 + 84));
      else
        return (*(uint64_t (**)(unint64_t))(v5 + 48))((v17 + v9 + v10) & ~v10);
    }
    else
    {
      v15 = *(_QWORD *)(a1 + 8);
      if (v15 >= 0xFFFFFFFF)
        LODWORD(v15) = -1;
      v16 = v15 - 1;
      if (v16 < 0)
        v16 = -1;
      return (v16 + 1);
    }
  }
  else
  {
    if (((((*(_QWORD *)(v5 + 64) + ((v9 + v10 + ((v8 + 32) & ~v8)) & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v11 = 2;
    else
      v11 = a2 - v7 + 1;
    if (v11 >= 0x10000)
      v12 = 4;
    else
      v12 = 2;
    if (v11 < 0x100)
      v12 = 1;
    if (v11 >= 2)
      v13 = v12;
    else
      v13 = 0;
    return ((uint64_t (*)(void))((char *)&loc_100C8FE24 + 4 * byte_100EF1670[v13]))();
  }
}

void sub_100C8FEF0(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v5 + 84) <= *(_DWORD *)(v6 + 84))
    v7 = *(_DWORD *)(v6 + 84);
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (v7 <= 0x7FFFFFFE)
    v8 = 2147483646;
  else
    v8 = v7;
  if (v8 >= a3)
  {
    v11 = 0;
    if (a2 <= v8)
      goto LABEL_20;
  }
  else
  {
    if (((*(_DWORD *)(v6 + 64)
         + ((*(_DWORD *)(v5 + 64)
           + *(unsigned __int8 *)(v6 + 80)
           + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~*(unsigned __int8 *)(v5 + 80))) & ~*(unsigned __int8 *)(v6 + 80))
         + 7) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v9 = a3 - v8 + 1;
    else
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    if (a2 <= v8)
LABEL_20:
      __asm { BR              X6 }
  }
  if (((*(_DWORD *)(v6 + 64)
       + ((*(_DWORD *)(v5 + 64)
         + *(unsigned __int8 *)(v6 + 80)
         + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~*(unsigned __int8 *)(v5 + 80))) & ~*(unsigned __int8 *)(v6 + 80))
       + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v12 = ~v8 + a2;
    bzero(a1, ((*(_QWORD *)(v6 + 64)+ ((*(_QWORD *)(v5 + 64)+ *(unsigned __int8 *)(v6 + 80)+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ 7) & 0xFFFFFFFFFFFFFFF8)+ 8);
    *a1 = v12;
  }
  __asm { BR              X10 }
}

void sub_100C90028()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x100C900A8);
}

void sub_100C90030(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x100C90038);
  JUMPOUT(0x100C900A8);
}

void sub_100C90080()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x100C900A8);
}

void sub_100C90088()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x100C900A8);
}

void sub_100C90090(uint64_t a1, unsigned int a2)
{
  int v2;
  int v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (a2)
  {
    if (v4 > 0x7FFFFFFE)
    {
      if (v2 == v3)
        JUMPOUT(0x100C900D0);
      JUMPOUT(0x100C900BCLL);
    }
    if (a2 > 0x7FFFFFFE)
      JUMPOUT(0x100C9009CLL);
    *(_QWORD *)(v5 + 8) = a2;
  }
  JUMPOUT(0x100C900A8);
}

uint64_t sub_100C900E8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t WitnessTable;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t OpaqueTypeConformance2;
  uint64_t v13;
  uint64_t v15;
  ValueMetadata *v16;
  uint64_t v17;
  void *v18;

  v1 = a1[1];
  v3 = a1[2];
  v2 = a1[3];
  v15 = *a1;
  v16 = (ValueMetadata *)type metadata accessor for MoreLabel(255);
  v17 = v3;
  v18 = (void *)sub_100048748(&qword_1011E4EE0, type metadata accessor for MoreLabel, (uint64_t)&protocol conformance descriptor for MoreLabel);
  v4 = type metadata accessor for HeightLimitedButtonTextView(255, (uint64_t)&v15);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for HeightLimitedButtonTextView<A, B>, v4);
  v15 = v4;
  v16 = (ValueMetadata *)&type metadata for Bool;
  v17 = WitnessTable;
  v18 = &protocol witness table for Bool;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v15, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v8 = type metadata accessor for Sheet(255, v1, v2, v7);
  v9 = swift_getWitnessTable(&unk_100EF17D8, v8);
  v10 = sub_100C8EF84();
  v15 = v8;
  v16 = &type metadata for DescriptionSheetSizing;
  v17 = v9;
  v18 = (void *)v10;
  v11 = swift_getOpaqueTypeMetadata2(255, &v15, &opaque type descriptor for <<opaque return type of View.presentationSizing<A>(_:)>>, 0);
  v15 = v4;
  v16 = (ValueMetadata *)&type metadata for Bool;
  v17 = WitnessTable;
  v18 = &protocol witness table for Bool;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v15, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v15 = v8;
  v16 = &type metadata for DescriptionSheetSizing;
  v17 = v9;
  v18 = (void *)v10;
  v13 = swift_getOpaqueTypeConformance2(&v15, &opaque type descriptor for <<opaque return type of View.presentationSizing<A>(_:)>>, 1);
  v15 = OpaqueTypeMetadata2;
  v16 = (ValueMetadata *)v11;
  v17 = OpaqueTypeConformance2;
  v18 = (void *)v13;
  return swift_getOpaqueTypeConformance2(&v15, &opaque type descriptor for <<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>, 1);
}

ValueMetadata *type metadata accessor for DescriptionSheetSizing()
{
  return &type metadata for DescriptionSheetSizing;
}

void sub_100C90288(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[4];

  v6[0] = &unk_100EF1728;
  v2 = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    v6[2] = &unk_100EF1728;
    sub_100C16C14(319);
    if (v5 <= 0x3F)
    {
      v6[3] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 0, 4, v6, a1 + 32);
    }
  }
}

uint64_t *sub_100C9031C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t *v28;
  unsigned int v29;
  uint64_t v30;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = v7;
  v9 = *(_QWORD *)(v6 + 64) + 7;
  v10 = *(_QWORD *)(type metadata accessor for DismissAction(0) - 8);
  v11 = *(_DWORD *)(v10 + 80);
  v12 = v11 & 0xF8 | 7;
  if (*(_QWORD *)(v10 + 64) <= 8uLL)
    v13 = 8;
  else
    v13 = *(_QWORD *)(v10 + 64);
  v14 = (v11 | v7) & 0x100000;
  if ((v12 | v7) != 7
    || v14 != 0
    || v13
     + ((v12
       + ((v9 + ((v7 + 16) & ~(unint64_t)v7)) & 0xFFFFFFFFFFFFFFF8)
       + 16) & ~v12)
     + 1 > 0x18)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + (((v12 | v7) + 16) & ~(v12 | v7)));
LABEL_24:
    swift_retain(v17);
    return a1;
  }
  v18 = ~v12;
  v19 = a2[1];
  *a1 = *a2;
  a1[1] = v19;
  v20 = (char *)a2 + v8;
  v21 = ((unint64_t)a1 + v8 + 16) & ~v8;
  v22 = (unint64_t)(v20 + 16) & ~v8;
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  swift_bridgeObjectRetain();
  v23(v21, v22, v5);
  v24 = (v9 + v21) & 0xFFFFFFFFFFFFFFF8;
  v25 = (v9 + v22) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)v25 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)v24 = *(_OWORD *)v25;
  }
  else
  {
    v26 = *(_QWORD *)(v25 + 8);
    *(_QWORD *)v24 = *(_QWORD *)v25;
    *(_QWORD *)(v24 + 8) = v26;
    swift_retain(v26);
  }
  v27 = (_QWORD *)((v24 + v12 + 16) & v18);
  v28 = (uint64_t *)((v25 + v12 + 16) & v18);
  v29 = *((unsigned __int8 *)v28 + v13);
  if (v29 >= 2)
  {
    if (v13 <= 3)
      v30 = v13;
    else
      v30 = 4;
    __asm { BR              X12 }
  }
  if (v29 != 1)
  {
    v17 = *v28;
    *v27 = *v28;
    *((_BYTE *)v27 + v13) = 0;
    goto LABEL_24;
  }
  (*(void (**)(_QWORD *))(v10 + 16))(v27);
  *((_BYTE *)v27 + v13) = 1;
  return a1;
}

double sub_100C90538(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  unsigned int v11;
  uint64_t v12;
  double result;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v5 = (a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  (*(void (**)(unint64_t))(v4 + 8))(v5);
  v6 = (_QWORD *)((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (*v6 >= 0xFFFFFFFFuLL)
    swift_release(v6[1]);
  v7 = *(_QWORD *)(type metadata accessor for DismissAction(0) - 8);
  v8 = *(_DWORD *)(v7 + 80) & 0xF8 | 7;
  v9 = (_QWORD *)(((unint64_t)v6 + v8 + 16) & ~v8);
  v10 = *(_QWORD *)(v7 + 64);
  if (v10 <= 8)
    v10 = 8;
  v11 = *((unsigned __int8 *)v9 + v10);
  if (v11 >= 2)
  {
    if (v10 <= 3)
      v12 = v10;
    else
      v12 = 4;
    __asm { BR              X14 }
  }
  if (v11 == 1)
    (*(void (**)(void))(v7 + 8))();
  else
    *(_QWORD *)&result = swift_release(*v9).n128_u64[0];
  return result;
}

_QWORD *sub_100C9067C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  char v22;
  uint64_t v23;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)a1 + v7 + 16) & ~v7;
  v9 = ((unint64_t)a2 + v7 + 16) & ~v7;
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  swift_bridgeObjectRetain();
  v10(v8, v9, v5);
  v11 = *(_QWORD *)(v6 + 64) + 7;
  v12 = (v11 + v8) & 0xFFFFFFFFFFFFFFF8;
  v13 = (v11 + v9) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)v13 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)v12 = *(_OWORD *)v13;
  }
  else
  {
    v14 = *(_QWORD *)(v13 + 8);
    *(_QWORD *)v12 = *(_QWORD *)v13;
    *(_QWORD *)(v12 + 8) = v14;
    swift_retain(v14);
  }
  v15 = *(_QWORD *)(type metadata accessor for DismissAction(0) - 8);
  v16 = *(_DWORD *)(v15 + 80) & 0xF8 | 7;
  v17 = (_QWORD *)((v12 + v16 + 16) & ~v16);
  v18 = (uint64_t *)((v13 + v16 + 16) & ~v16);
  if (*(_QWORD *)(v15 + 64) <= 8uLL)
    v19 = 8;
  else
    v19 = *(_QWORD *)(v15 + 64);
  v20 = *((unsigned __int8 *)v18 + v19);
  if (v20 >= 2)
  {
    if (v19 <= 3)
      v21 = v19;
    else
      v21 = 4;
    __asm { BR              X13 }
  }
  if (v20 == 1)
  {
    (*(void (**)(_QWORD *))(v15 + 16))(v17);
    v22 = 1;
  }
  else
  {
    v23 = *v18;
    *v17 = *v18;
    swift_retain(v23);
    v22 = 0;
  }
  *((_BYTE *)v17 + v19) = v22;
  return a1;
}

_QWORD *sub_100C90810(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  __n128 v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;

  *a1 = *a2;
  v6 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = ((unint64_t)a1 + v8 + 16) & ~v8;
  v10 = ((unint64_t)a2 + v8 + 16) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 24))(v9, v10);
  v11 = *(_QWORD *)(v7 + 64) + 7;
  v12 = (_QWORD *)((v11 + v9) & 0xFFFFFFFFFFFFFFF8);
  v13 = (unint64_t *)((v11 + v10) & 0xFFFFFFFFFFFFFFF8);
  v14 = *v13;
  if (*v12 < 0xFFFFFFFFuLL)
  {
    if (v14 >= 0xFFFFFFFF)
    {
      v17 = v13[1];
      *v12 = v14;
      v12[1] = v17;
      swift_retain(v17);
      goto LABEL_8;
    }
  }
  else
  {
    if (v14 >= 0xFFFFFFFF)
    {
      v15 = v13[1];
      v16 = v12[1];
      *v12 = v14;
      v12[1] = v15;
      swift_retain(v15);
      swift_release(v16);
      goto LABEL_8;
    }
    swift_release(v12[1]);
  }
  *(_OWORD *)v12 = *(_OWORD *)v13;
LABEL_8:
  v18 = type metadata accessor for DismissAction(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(_DWORD *)(v19 + 80) & 0xF8 | 7;
  v21 = (char *)v13 + v20;
  v22 = (uint64_t *)(((unint64_t)v12 + v20 + 16) & ~v20);
  v23 = (uint64_t *)((unint64_t)(v21 + 16) & ~v20);
  if (v22 != v23)
  {
    v24 = v18;
    if (*(_QWORD *)(v19 + 64) <= 8uLL)
      v25 = 8;
    else
      v25 = *(_QWORD *)(v19 + 64);
    v26 = *((unsigned __int8 *)v22 + v25);
    if (v26 >= 2)
    {
      if (v25 <= 3)
        v27 = v25;
      else
        v27 = 4;
      __asm { BR              X12 }
    }
    if (v26 == 1)
      (*(void (**)(uint64_t *, uint64_t))(v19 + 8))(v22, v18);
    else
      v28 = swift_release(*v22);
    v29 = *((unsigned __int8 *)v23 + v25);
    if (v29 >= 2)
    {
      if (v25 <= 3)
        v30 = v25;
      else
        v30 = 4;
      __asm { BR              X12 }
    }
    if (v29 == 1)
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t, __n128))(v19 + 16))(v22, v23, v24, v28);
      *((_BYTE *)v22 + v25) = 1;
    }
    else
    {
      v31 = *v23;
      *v22 = *v23;
      *((_BYTE *)v22 + v25) = 0;
      swift_retain(v31);
    }
  }
  return a1;
}

_OWORD *sub_100C90AA0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  char v19;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = ((unint64_t)a1 + v5 + 16) & ~v5;
  v7 = ((unint64_t)a2 + v5 + 16) & ~v5;
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v6, v7);
  v8 = *(_QWORD *)(v4 + 64) + 7;
  v9 = (v8 + v6) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v8 + v7) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)v10 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)v9 = *(_OWORD *)v10;
  }
  else
  {
    v11 = *(_QWORD *)(v10 + 8);
    *(_QWORD *)v9 = *(_QWORD *)v10;
    *(_QWORD *)(v9 + 8) = v11;
  }
  v12 = *(_QWORD *)(type metadata accessor for DismissAction(0) - 8);
  v13 = *(_DWORD *)(v12 + 80) & 0xF8 | 7;
  v14 = (_QWORD *)((v9 + v13 + 16) & ~v13);
  v15 = (_QWORD *)((v10 + v13 + 16) & ~v13);
  if (*(_QWORD *)(v12 + 64) <= 8uLL)
    v16 = 8;
  else
    v16 = *(_QWORD *)(v12 + 64);
  v17 = *((unsigned __int8 *)v15 + v16);
  if (v17 >= 2)
  {
    if (v16 <= 3)
      v18 = v16;
    else
      v18 = 4;
    __asm { BR              X13 }
  }
  if (v17 == 1)
  {
    (*(void (**)(_QWORD *))(v12 + 32))(v14);
    v19 = 1;
  }
  else
  {
    v19 = 0;
    *v14 = *v15;
  }
  *((_BYTE *)v14 + v16) = v19;
  return a1;
}

_QWORD *sub_100C90C1C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  __n128 v28;
  unsigned int v29;
  uint64_t v30;
  char v31;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = ((unint64_t)a1 + v9 + 16) & ~v9;
  v11 = ((unint64_t)a2 + v9 + 16) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v10, v11);
  v12 = *(_QWORD *)(v8 + 64) + 7;
  v13 = (_QWORD *)((v12 + v10) & 0xFFFFFFFFFFFFFFF8);
  v14 = (unint64_t *)((v12 + v11) & 0xFFFFFFFFFFFFFFF8);
  v15 = *v14;
  if (*v13 < 0xFFFFFFFFuLL)
  {
    if (v15 >= 0xFFFFFFFF)
    {
      v18 = v14[1];
      *v13 = v15;
      v13[1] = v18;
      goto LABEL_8;
    }
  }
  else
  {
    if (v15 >= 0xFFFFFFFF)
    {
      v16 = v14[1];
      v17 = v13[1];
      *v13 = v15;
      v13[1] = v16;
      swift_release(v17);
      goto LABEL_8;
    }
    swift_release(v13[1]);
  }
  *(_OWORD *)v13 = *(_OWORD *)v14;
LABEL_8:
  v19 = type metadata accessor for DismissAction(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(_DWORD *)(v20 + 80) & 0xF8 | 7;
  v22 = (_QWORD *)(((unint64_t)v13 + v21 + 16) & ~v21);
  v23 = (_QWORD *)(((unint64_t)v14 + v21 + 16) & ~v21);
  if (v22 != v23)
  {
    v24 = v19;
    if (*(_QWORD *)(v20 + 64) <= 8uLL)
      v25 = 8;
    else
      v25 = *(_QWORD *)(v20 + 64);
    v26 = *((unsigned __int8 *)v22 + v25);
    if (v26 >= 2)
    {
      if (v25 <= 3)
        v27 = v25;
      else
        v27 = 4;
      __asm { BR              X12 }
    }
    if (v26 == 1)
      (*(void (**)(_QWORD *, uint64_t))(v20 + 8))(v22, v19);
    else
      v28 = swift_release(*v22);
    v29 = *((unsigned __int8 *)v23 + v25);
    if (v29 >= 2)
    {
      if (v25 <= 3)
        v30 = v25;
      else
        v30 = 4;
      __asm { BR              X12 }
    }
    if (v29 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t, __n128))(v20 + 32))(v22, v23, v24, v28);
      v31 = 1;
    }
    else
    {
      v31 = 0;
      *v22 = *v23;
    }
    *((_BYTE *)v22 + v25) = v31;
  }
  return a1;
}

uint64_t sub_100C90E8C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v15;
  unsigned int v17;
  int v18;
  unint64_t v19;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  if (v7 <= 0x7FFFFFFE)
    v8 = 2147483646;
  else
    v8 = *(_DWORD *)(v6 + 84);
  v9 = *(_QWORD *)(type metadata accessor for DismissAction(0) - 8);
  v10 = 8;
  if (*(_QWORD *)(v9 + 64) > 8uLL)
    v10 = *(_QWORD *)(v9 + 64);
  if (!a2)
    return 0;
  v11 = *(unsigned __int8 *)(v6 + 80);
  if (a2 <= v8)
    goto LABEL_24;
  v12 = *(_DWORD *)(v9 + 80) & 0xF8 | 7;
  v13 = v10 + ((v12 + ((*(_QWORD *)(v6 + 64) + ((v11 + 16) & ~v11) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v12) + 1;
  v14 = 8 * v13;
  if (v13 <= 3)
  {
    v17 = ((a2 - v8 + ~(-1 << v14)) >> v14) + 1;
    if (HIWORD(v17))
    {
      v15 = *(_DWORD *)(a1 + v13);
      if (!v15)
        goto LABEL_24;
      goto LABEL_17;
    }
    if (v17 > 0xFF)
    {
      v15 = *(unsigned __int16 *)(a1 + v13);
      if (!*(_WORD *)(a1 + v13))
        goto LABEL_24;
      goto LABEL_17;
    }
    if (v17 < 2)
    {
LABEL_24:
      if (v7 > 0x7FFFFFFE)
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))((a1 + v11 + 16) & ~v11, v7, v5);
      v19 = *(_QWORD *)(a1 + 8);
      if (v19 >= 0xFFFFFFFF)
        LODWORD(v19) = -1;
      if ((v19 + 1) >= 2)
        return v19;
      else
        return 0;
    }
  }
  v15 = *(unsigned __int8 *)(a1 + v13);
  if (!*(_BYTE *)(a1 + v13))
    goto LABEL_24;
LABEL_17:
  v18 = (v15 - 1) << v14;
  if (v13 > 3)
    v18 = 0;
  if ((_DWORD)v13)
  {
    if (v13 > 3)
      LODWORD(v13) = 4;
    __asm { BR              X11 }
  }
  return v8 + v18 + 1;
}

void sub_100C91064(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  unsigned int v13;
  int v14;
  unsigned int v15;
  int v16;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v7 + 84) <= 0x7FFFFFFEu)
    v8 = 2147483646;
  else
    v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(type metadata accessor for DismissAction(0) - 8);
  v10 = 8;
  if (*(_QWORD *)(v9 + 64) > 8uLL)
    v10 = *(_QWORD *)(v9 + 64);
  v11 = *(_DWORD *)(v9 + 80) & 0xF8 | 7;
  v12 = v10
      + ((v11
        + ((*(_QWORD *)(v7 + 64)
          + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))
          + 7) & 0xFFFFFFFFFFFFFFF8)
        + 16) & ~v11)
      + 1;
  if (a3 <= v8)
  {
    v13 = 0;
  }
  else if (v12 <= 3)
  {
    v15 = ((a3 - v8 + ~(-1 << (8 * v12))) >> (8 * v12)) + 1;
    if (HIWORD(v15))
    {
      v13 = &dword_100000004;
    }
    else if (v15 >= 0x100)
    {
      v13 = 2;
    }
    else
    {
      v13 = v15 > 1;
    }
  }
  else
  {
    v13 = &_mh_execute_header.magic + 1;
  }
  if (v8 < a2)
  {
    v14 = ~v8 + a2;
    if (v12 < 4)
    {
      if ((_DWORD)v12)
      {
        v16 = v14 & ~(-1 << (8 * v12));
        bzero(a1, v12);
        if ((_DWORD)v12 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if ((_DWORD)v12 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v12);
      *(_DWORD *)a1 = v14;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X12 }
}

uint64_t sub_100C912D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t OpaqueTypeMetadata2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  void (*v28)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE v34[16];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t WitnessTable;
  void *v45;
  uint64_t v46;
  void *v47;

  v33 = a2;
  v31 = type metadata accessor for NavigationPath(255);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = type metadata accessor for ModifiedContent(255, v3, &type metadata for _PaddingLayout);
  v5 = type metadata accessor for ModifiedContent(255, v4, &type metadata for _PaddingLayout);
  v6 = *(_QWORD *)(a1 + 24);
  v46 = v6;
  v47 = &protocol witness table for _PaddingLayout;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v4);
  v45 = &protocol witness table for _PaddingLayout;
  v7 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v5);
  v8 = type metadata accessor for ScrollView(255, v5, v7);
  v9 = swift_getWitnessTable(&protocol conformance descriptor for ScrollView<A>, v8);
  v40 = v8;
  v41 = v9;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v40, &opaque type descriptor for <<opaque return type of View.scrollBounceBehavior(_:axes:)>>, 0);
  v40 = v8;
  v41 = v9;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v40, &opaque type descriptor for <<opaque return type of View.scrollBounceBehavior(_:axes:)>>, 1);
  v40 = OpaqueTypeMetadata2;
  v41 = OpaqueTypeConformance2;
  v12 = swift_getOpaqueTypeMetadata2(255, &v40, &opaque type descriptor for <<opaque return type of View.navigationBarTitleDisplayMode(_:)>>, 0);
  v14 = type metadata accessor for Sheet.Toolbar(255, v3, v6, v13);
  v15 = swift_getWitnessTable(&unk_100EF18E0, v14);
  v40 = v14;
  v41 = v15;
  v16 = swift_getOpaqueTypeMetadata2(255, &v40, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 0);
  v40 = OpaqueTypeMetadata2;
  v41 = OpaqueTypeConformance2;
  v17 = swift_getOpaqueTypeConformance2(&v40, &opaque type descriptor for <<opaque return type of View.navigationBarTitleDisplayMode(_:)>>, 1);
  v40 = v14;
  v41 = v15;
  v18 = swift_getOpaqueTypeConformance2(&v40, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
  v40 = v12;
  v41 = v16;
  v42 = v17;
  v43 = v18;
  v19 = swift_getOpaqueTypeMetadata2(255, &v40, &opaque type descriptor for <<opaque return type of View.toolbar<A>(content:)>>, 0);
  v20 = type metadata accessor for ModifiedContent(255, v19, &type metadata for BottomGradientBlurMask);
  v40 = v12;
  v41 = v16;
  v42 = v17;
  v43 = v18;
  v38 = swift_getOpaqueTypeConformance2(&v40, &opaque type descriptor for <<opaque return type of View.toolbar<A>(content:)>>, 1);
  v39 = sub_100C92A70();
  v21 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v20);
  v22 = type metadata accessor for NavigationStack(0, v31, v20, v21);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin();
  v25 = (char *)&v30 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v27 = (char *)&v30 - v26;
  v35 = v3;
  v36 = v6;
  v37 = v32;
  NavigationStack.init<>(root:)(sub_100C92AB4, v34, v20, v21);
  swift_getWitnessTable(&protocol conformance descriptor for NavigationStack<A, B>, v22);
  sub_10081EB14((uint64_t)v25, v22, (uint64_t)v27);
  v28 = *(void (**)(char *, uint64_t))(v23 + 8);
  v28(v25, v22);
  sub_1000EA744((uint64_t)v27, v22, v33);
  return ((uint64_t (*)(char *, uint64_t))v28)(v27, v22);
}

uint64_t sub_100C915F0@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v16;
  uint64_t OpaqueTypeConformance2;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int v39;
  uint64_t v40;
  int v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t);
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  char v87[16];
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t WitnessTable;
  void *v98;
  uint64_t v99;
  void *v100;

  v85 = a1;
  v83 = a4;
  v6 = type metadata accessor for NavigationBarItem.TitleDisplayMode(0);
  v81 = *(_QWORD *)(v6 - 8);
  v82 = v6;
  __chkstk_darwin();
  v80 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = type metadata accessor for ScrollBounceBehavior(0);
  v78 = *(_QWORD *)(v79 - 8);
  __chkstk_darwin();
  v59 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = (char *)a2;
  v9 = type metadata accessor for ModifiedContent(255, a2, &type metadata for _PaddingLayout);
  v10 = type metadata accessor for ModifiedContent(255, v9, &type metadata for _PaddingLayout);
  v99 = a3;
  v100 = &protocol witness table for _PaddingLayout;
  v86 = a3;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v9);
  v98 = &protocol witness table for _PaddingLayout;
  v63 = v10;
  v62 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v10);
  v11 = type metadata accessor for ScrollView(0, v10, v62);
  v77 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin();
  v13 = (char *)&v59 - v12;
  v14 = swift_getWitnessTable(&protocol conformance descriptor for ScrollView<A>, v11);
  v93 = v11;
  v94 = v14;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v93, &opaque type descriptor for <<opaque return type of View.scrollBounceBehavior(_:axes:)>>, 0);
  v76 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin();
  v74 = (char *)&v59 - v16;
  v93 = v11;
  v94 = v14;
  v71 = v14;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v93, &opaque type descriptor for <<opaque return type of View.scrollBounceBehavior(_:axes:)>>, 1);
  v93 = OpaqueTypeMetadata2;
  v94 = OpaqueTypeConformance2;
  v18 = swift_getOpaqueTypeMetadata2(0, &v93, &opaque type descriptor for <<opaque return type of View.navigationBarTitleDisplayMode(_:)>>, 0);
  v75 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin();
  v72 = (char *)&v59 - v19;
  v21 = type metadata accessor for Sheet.Toolbar(255, a2, a3, v20);
  v22 = swift_getWitnessTable(&unk_100EF18E0, v21);
  v93 = v21;
  v94 = v22;
  v23 = swift_getOpaqueTypeMetadata2(255, &v93, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 0);
  v65 = OpaqueTypeMetadata2;
  v93 = OpaqueTypeMetadata2;
  v94 = OpaqueTypeConformance2;
  v70 = OpaqueTypeConformance2;
  v24 = swift_getOpaqueTypeConformance2(&v93, &opaque type descriptor for <<opaque return type of View.navigationBarTitleDisplayMode(_:)>>, 1);
  v93 = v21;
  v94 = v22;
  v25 = v59;
  v26 = swift_getOpaqueTypeConformance2(&v93, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
  v73 = v18;
  v93 = v18;
  v94 = v23;
  v60 = v23;
  v66 = v24;
  v95 = v24;
  v96 = v26;
  v61 = v26;
  v64 = *(_QWORD *)(swift_getOpaqueTypeMetadata2(0, &v93, &opaque type descriptor for <<opaque return type of View.toolbar<A>(content:)>>, 0)- 8);
  __chkstk_darwin();
  v28 = (char *)&v59 - v27;
  v68 = v29;
  v30 = type metadata accessor for ModifiedContent(0, v29, &type metadata for BottomGradientBlurMask);
  v69 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin();
  v32 = (char *)&v59 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v67 = (uint64_t)&v59 - v33;
  v88 = v84;
  v89 = v86;
  v90 = v85;
  v35 = static Axis.Set.vertical.getter(v34);
  v36 = v13;
  v37 = ScrollView.init(_:showsIndicators:content:)(v35, 1, sub_100C92AC0, v87, v63, v62);
  v38 = static ScrollBounceBehavior.basedOnSize.getter(v37);
  v39 = static Axis.Set.vertical.getter(v38);
  v40 = Axis.Set.init(rawValue:)(0);
  v41 = Axis.Set.init(rawValue:)(v40);
  if (Axis.Set.init(rawValue:)(v41 & v39) != v39)
    v40 = Axis.Set.init(rawValue:)(v40 | v39);
  v42 = v74;
  View.scrollBounceBehavior(_:axes:)(v25, v40, v11, v71);
  (*(void (**)(char *, uint64_t))(v78 + 8))(v25, v79);
  (*(void (**)(char *, uint64_t))(v77 + 8))(v36, v11);
  v44 = v81;
  v43 = v82;
  v45 = v80;
  (*(void (**)(char *, _QWORD, uint64_t))(v81 + 104))(v80, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v82);
  v46 = v72;
  v47 = v65;
  View.navigationBarTitleDisplayMode(_:)(v45, v65, v70);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v43);
  (*(void (**)(char *, uint64_t))(v76 + 8))(v42, v47);
  __chkstk_darwin();
  v48 = (char *)v86;
  *(&v59 - 4) = v84;
  *(&v59 - 3) = v48;
  *(&v59 - 2) = v85;
  v49 = swift_checkMetadataState(0, v60);
  v50 = v73;
  v51 = v66;
  v52 = v61;
  View.toolbar<A>(content:)(sub_100C92ACC, &v59 - 6, v73, v49, v66, v61);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v46, v50);
  v93 = v50;
  v94 = v49;
  v95 = v51;
  v96 = v52;
  v53 = swift_getOpaqueTypeConformance2(&v93, &opaque type descriptor for <<opaque return type of View.toolbar<A>(content:)>>, 1);
  v54 = v68;
  sub_100C8E16C(0x402E000000000000, 0, v68, v53, 64.0);
  (*(void (**)(char *, uint64_t))(v64 + 8))(v28, v54);
  v55 = sub_100C92A70();
  v91 = v53;
  v92 = v55;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v30);
  v56 = v67;
  sub_10081EB14((uint64_t)v32, v30, v67);
  v57 = *(void (**)(char *, uint64_t))(v69 + 8);
  v57(v32, v30);
  sub_1000EA744(v56, v30, v83);
  return ((uint64_t (*)(uint64_t, uint64_t))v57)(v56, v30);
}

uint64_t sub_100C91CCC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t WitnessTable;
  uint64_t (*v20)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;

  v23 = a3;
  v5 = type metadata accessor for ModifiedContent(0, a1, &type metadata for _PaddingLayout);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (uint64_t *)((char *)&v22 - v7);
  v9 = type metadata accessor for ModifiedContent(0, v5, &type metadata for _PaddingLayout);
  v22 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin();
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v13 = (char *)&v22 - v12;
  v15 = type metadata accessor for Sheet(0, a1, a2, v14);
  v16 = static Edge.Set.horizontal.getter(v15);
  v17 = View.padding(_:_:)(v8, v16, 0x4034000000000000, 0, a1, a2);
  v18 = static Edge.Set.vertical.getter(v17);
  v26 = a2;
  v27 = &protocol witness table for _PaddingLayout;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v5);
  View.padding(_:_:)(v11, v18, 0x4038000000000000, 0, v5, WitnessTable);
  (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(v8, v5);
  v24 = WitnessTable;
  v25 = &protocol witness table for _PaddingLayout;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v9);
  sub_10081EB14((uint64_t)v11, v9, (uint64_t)v13);
  v20 = *(uint64_t (**)(char *, uint64_t))(v22 + 8);
  v20(v11, v9);
  sub_1000EA744((uint64_t)v13, v9, v23);
  return v20(v13, v9);
}

double sub_100C91EB0@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)();
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t WitnessTable;
  double result;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)();
  uint64_t v44;
  _QWORD v45[4];

  v40 = a4;
  v36 = type metadata accessor for DismissAction(0);
  v7 = *(_QWORD *)(v36 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin();
  v35 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v10 = (char *)&v35 - v9;
  v38 = a2;
  v39 = a3;
  v12 = type metadata accessor for Sheet(0, a2, a3, v11);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin();
  v16 = (char *)&v35 - v15;
  v17 = a1[1];
  v37 = *a1;
  v19 = (uint64_t *)((char *)a1 + *(int *)(v18 + 40));
  v21 = *v19;
  v20 = v19[1];
  if (*v19)
  {
    v22 = swift_allocObject(&unk_10110C6D8, 32, 7);
    *(_QWORD *)(v22 + 16) = v21;
    *(_QWORD *)(v22 + 24) = v20;
    (*(void (**)(char *, uint64_t *, uint64_t))(v13 + 16))(v16, a1, v12);
    swift_bridgeObjectRetain();
    sub_100048AAC(v21, v20);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
    v23 = sub_10013C910;
  }
  else
  {
    (*(void (**)(char *, uint64_t *, uint64_t, __n128))(v13 + 16))(v16, a1, v12, v14);
    v24 = v17;
    swift_bridgeObjectRetain();
    sub_100048AAC(0, v20);
    sub_100C313F4((uint64_t)v10);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
    v26 = v35;
    v25 = v36;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v35, v10, v36);
    v27 = *(unsigned __int8 *)(v7 + 80);
    v28 = (v27 + 16) & ~v27;
    v29 = swift_allocObject(&unk_10110C660, v28 + v8, v27 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v29 + v28, v26, v25);
    v17 = v24;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v25);
    v22 = swift_allocObject(&unk_10110C688, 32, 7);
    *(_QWORD *)(v22 + 16) = sub_100C92B38;
    *(_QWORD *)(v22 + 24) = v29;
    v23 = sub_10004D5F4;
  }
  v30 = swift_allocObject(&unk_10110C6B0, 32, 7);
  *(_QWORD *)(v30 + 16) = v23;
  *(_QWORD *)(v30 + 24) = v22;
  v41 = v37;
  v42 = v17;
  v43 = sub_10004D5F4;
  v44 = v30;
  v32 = type metadata accessor for Sheet.Toolbar(0, v38, v39, v31);
  WitnessTable = swift_getWitnessTable(&unk_100EF18E0, v32);
  (*(void (**)(_QWORD *, uint64_t *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v45, &v41, v32);
  swift_release();
  swift_bridgeObjectRelease();
  v41 = v45[0];
  v42 = v45[1];
  v43 = (uint64_t (*)())v45[2];
  v44 = v45[3];
  static ToolbarContentBuilder.buildBlock<A>(_:)(&v41, v32, WitnessTable);
  swift_release();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_100C9219C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t WitnessTable;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45[16];
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52[16];
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v35 = a6;
  v43 = a4;
  v33 = a1;
  v42 = a7;
  v34 = a5;
  v40 = type metadata accessor for Sheet.Toolbar.CloseButton(255, a5, a6, a4);
  WitnessTable = swift_getWitnessTable(&unk_100EF19E8, v40);
  v11 = type metadata accessor for ToolbarItem(0, (char *)&type metadata for () + 8, v40, WitnessTable);
  v41 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin();
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v37 = (char *)&v33 - v14;
  v44 = type metadata accessor for ToolbarItemPlacement(0);
  v15 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin();
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v19 = (char *)&v33 - v18;
  v36 = sub_100007E8C(&qword_1011E5078);
  v39 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin();
  v21 = (char *)&v33 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  static ToolbarItemPlacement.principal.getter(v22);
  v53 = a5;
  v23 = v35;
  v54 = v35;
  v55 = a1;
  v56 = a2;
  v57 = a3;
  v24 = a2;
  v58 = v43;
  v25 = sub_100007E8C(&qword_1011E5080);
  v26 = sub_100C9310C();
  v27 = ToolbarItem<>.init(placement:content:)(v19, sub_100C930FC, v52, v25, v26);
  static ToolbarItemPlacement.automatic.getter(v27);
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v17, v19, v44);
  v46 = v34;
  v47 = v23;
  v48 = v33;
  v49 = v24;
  v50 = a3;
  v51 = v43;
  ToolbarItem<>.init(placement:content:)(v17, sub_100C93380, v45, v40, WitnessTable);
  swift_getWitnessTable(&protocol conformance descriptor for ToolbarItem<A, B>, v11);
  v28 = v41;
  v29 = (uint64_t)v37;
  (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v37, v13, v11);
  v30 = *(void (**)(char *, uint64_t))(v28 + 8);
  v30(v13, v11);
  sub_100049F28(qword_1011E50D0, &qword_1011E5078, (uint64_t)&protocol conformance descriptor for ToolbarItem<A, B>);
  v31 = v36;
  sub_100C927A4((uint64_t)v21, v29, v36, v11);
  v30((char *)v29, v11);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v19, v44);
  return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v21, v31);
}

uint64_t sub_100C924D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t KeyPath;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;

  v6 = type metadata accessor for AccessibilityTraits(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011E5098);
  v12 = __chkstk_darwin();
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v11 + 56))(a3, 1, 1, v12);
  v40 = a1;
  v41 = a2;
  v38 = v11;
  v39 = v10;
  v15 = sub_100BBF2FC();
  swift_bridgeObjectRetain();
  v16 = Text.init<A>(_:)(&v40, &type metadata for String, v15);
  v18 = v17;
  v20 = v19;
  v22 = v21;
  KeyPath = swift_getKeyPath(&unk_100EF1928);
  v25 = static Font.headline.getter(v24);
  v37 = a3;
  v26 = v25;
  v27 = swift_getKeyPath(&unk_100EF1958);
  v36 = v6;
  v28 = v27;
  v29 = swift_getKeyPath(&unk_100EF1988);
  v40 = v16;
  v41 = v18;
  v42 = v20 & 1;
  v43 = v22;
  v44 = KeyPath;
  v45 = 1;
  v46 = 0;
  v47 = v28;
  v48 = v26;
  v49 = v29;
  v50 = 1;
  static AccessibilityTraits.isHeader.getter(v30);
  v31 = sub_100007E8C(&qword_1011E50A8);
  v32 = sub_100C931F4();
  View.accessibilityAddTraits(_:)(v9, v31, v32);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v36);
  sub_100055BAC(v40, v41, v42);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  v33 = v37;
  sub_100C933A8((uint64_t)v14, v37);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v33, 0, 1, v39);
}

double sub_100C92714@<D0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v6;
  double result;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[2];

  v8 = a1;
  v9 = a2;
  v6 = type metadata accessor for Sheet.Toolbar.CloseButton(0, a3, a4, a2);
  swift_getWitnessTable(&unk_100EF19E8, v6);
  sub_10081EB14((uint64_t)&v8, v6, (uint64_t)v10);
  v8 = v10[0];
  v9 = v10[1];
  sub_1000EA744((uint64_t)&v8, v6, a5);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100C927A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t TupleTypeMetadata2;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v14;

  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, a3, a4, 0, 0);
  v9 = __chkstk_darwin(TupleTypeMetadata2);
  v11 = (char *)&v14 - v10;
  v12 = (char *)&v14 + *(int *)(v9 + 48) - v10;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))((char *)&v14 - v10, a1, a3);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(v12, a2, a4);
  return TupleToolbarContent.init(_:)(v11, TupleTypeMetadata2);
}

uint64_t sub_100C92878(uint64_t a1, uint64_t a2)
{
  swift_retain();
  return Button.init(action:label:)(a1, a2, sub_100C928D4, 0, &type metadata for Text, &protocol witness table for Text);
}

void sub_100C928D4(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;

  v2 = LocalizedStringKey.init(stringLiteral:)(1701736260, 0xE400000000000000);
  v3 = Text.init(_:tableName:bundle:comment:)(v2);
  v5 = v4;
  v7 = v6 & 1;
  v10 = Text.bold()(v3, v4, v6 & 1, v8, v9);
  v12 = v11;
  v14 = v13;
  v16 = v15;
  sub_100055BAC(v3, v5, v7);
  swift_bridgeObjectRelease();
  *(_QWORD *)a1 = v10;
  *(_QWORD *)(a1 + 8) = v12;
  *(_BYTE *)(a1 + 16) = v14 & 1;
  *(_QWORD *)(a1 + 24) = v16;
}

uint64_t sub_100C929A4()
{
  uint64_t *v0;

  return sub_100C92878(*v0, v0[1]);
}

uint64_t sub_100C929B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_100C9219C(*v2, v2[1], v2[2], v2[3], *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a2);
}

uint64_t sub_100C929D4()
{
  return PresentationSizing.proposedSize(for:context:)();
}

uint64_t sub_100C92A04()
{
  return 0x4080E00000000000;
}

uint64_t sub_100C92A30(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_100FBE084, 1);
}

uint64_t type metadata accessor for Sheet.Toolbar(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Sheet.Toolbar);
}

unint64_t sub_100C92A70()
{
  unint64_t result;

  result = qword_1011E4FF0[0];
  if (!qword_1011E4FF0[0])
  {
    result = swift_getWitnessTable("ٮ!", &type metadata for BottomGradientBlurMask);
    atomic_store(result, qword_1011E4FF0);
  }
  return result;
}

uint64_t sub_100C92AB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100C915F0(*(char **)(v1 + 32), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_100C92AC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100C91CCC(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

double sub_100C92ACC@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100C91EB0(*(uint64_t **)(v1 + 32), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_100C92AD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for DismissAction(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_100C92B38()
{
  type metadata accessor for DismissAction(0);
  DismissAction.callAsFunction()();
}

uint64_t sub_100C92B70()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100C92B98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;

  v2 = *(_QWORD *)(v0 + 40);
  v11 = *(_QWORD *)(v0 + 16);
  v1 = v11;
  v12 = *(_OWORD *)(v0 + 24);
  v10 = v12;
  v13 = v2;
  v3 = type metadata accessor for ExpandableTextView(0, (uint64_t)&v11);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v5 + *(_QWORD *)(v4 + 64);
  v7 = v0 + v5;
  swift_release();
  v8 = swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v1 - 8) + 8))(v7 + *(int *)(v3 + 56), v1, v8);
  (*(void (**)(uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v7 + *(int *)(v3 + 60));
  swift_release();
  return swift_deallocObject(v0, v6);
}

uint64_t sub_100C92C74()
{
  return sub_100C92C7C(0);
}

uint64_t sub_100C92C7C(char a1)
{
  uint64_t v1;
  __int128 v3;
  uint64_t v4;
  char *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD v10[2];
  char v11;

  v3 = *(_OWORD *)(v1 + 32);
  v10[0] = *(_OWORD *)(v1 + 16);
  v10[1] = v3;
  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ExpandableTextView(0, (uint64_t)v10) - 8) + 80);
  v5 = (char *)(v1 + ((v4 + 48) & ~v4));
  v6 = *v5;
  v7 = *((_QWORD *)v5 + 1);
  LOBYTE(v10[0]) = v6;
  *((_QWORD *)&v10[0] + 1) = v7;
  v11 = a1;
  v8 = sub_100007E8C(&qword_1011E1B98);
  return State.wrappedValue.setter(&v11, v8);
}

uint64_t sub_100C92D08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MoreLabel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double sub_100C92D4C(uint64_t a1)
{
  double result;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 24)).n128_u64[0];
  return result;
}

uint64_t sub_100C92D74(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  swift_retain(v3);
  return a1;
}

_QWORD *sub_100C92DBC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  v6 = a2[2];
  v5 = a2[3];
  v7 = a1[3];
  a1[2] = v6;
  a1[3] = v5;
  swift_retain(v5);
  swift_release(v7);
  return a1;
}

_QWORD *sub_100C92E20(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease(a1[1]);
  v4 = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
  v5 = a1[3];
  a1[3] = v4;
  swift_release(v5);
  return a1;
}

uint64_t sub_100C92E6C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t OpaqueTypeMetadata2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t WitnessTable;
  void *v28;
  uint64_t v29;
  void *v30;

  v1 = *a1;
  v2 = a1[1];
  v3 = type metadata accessor for NavigationPath(255);
  v4 = type metadata accessor for ModifiedContent(255, v1, &type metadata for _PaddingLayout);
  v5 = type metadata accessor for ModifiedContent(255, v4, &type metadata for _PaddingLayout);
  v29 = v2;
  v30 = &protocol witness table for _PaddingLayout;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v4);
  v28 = &protocol witness table for _PaddingLayout;
  v6 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v5);
  v7 = type metadata accessor for ScrollView(255, v5, v6);
  v8 = swift_getWitnessTable(&protocol conformance descriptor for ScrollView<A>, v7);
  v23 = v7;
  v24 = v8;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v23, &opaque type descriptor for <<opaque return type of View.scrollBounceBehavior(_:axes:)>>, 0);
  v23 = v7;
  v24 = v8;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v23, &opaque type descriptor for <<opaque return type of View.scrollBounceBehavior(_:axes:)>>, 1);
  v23 = OpaqueTypeMetadata2;
  v24 = OpaqueTypeConformance2;
  v11 = swift_getOpaqueTypeMetadata2(255, &v23, &opaque type descriptor for <<opaque return type of View.navigationBarTitleDisplayMode(_:)>>, 0);
  v13 = type metadata accessor for Sheet.Toolbar(255, v1, v2, v12);
  v14 = swift_getWitnessTable(&unk_100EF18E0, v13);
  v23 = v13;
  v24 = v14;
  v15 = swift_getOpaqueTypeMetadata2(255, &v23, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 0);
  v23 = OpaqueTypeMetadata2;
  v24 = OpaqueTypeConformance2;
  v16 = swift_getOpaqueTypeConformance2(&v23, &opaque type descriptor for <<opaque return type of View.navigationBarTitleDisplayMode(_:)>>, 1);
  v23 = v13;
  v24 = v14;
  v17 = swift_getOpaqueTypeConformance2(&v23, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
  v23 = v11;
  v24 = v15;
  v25 = v16;
  v26 = v17;
  v18 = swift_getOpaqueTypeMetadata2(255, &v23, &opaque type descriptor for <<opaque return type of View.toolbar<A>(content:)>>, 0);
  v19 = type metadata accessor for ModifiedContent(255, v18, &type metadata for BottomGradientBlurMask);
  v23 = v11;
  v24 = v15;
  v25 = v16;
  v26 = v17;
  swift_getOpaqueTypeConformance2(&v23, &opaque type descriptor for <<opaque return type of View.toolbar<A>(content:)>>, 1);
  sub_100C92A70();
  v20 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v19);
  v21 = type metadata accessor for NavigationStack(255, v3, v19, v20);
  return swift_getWitnessTable(&protocol conformance descriptor for NavigationStack<A, B>, v21);
}

uint64_t sub_100C930BC(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_100FBE0F4, 1);
}

uint64_t type metadata accessor for Sheet.Toolbar.CloseButton(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Sheet.Toolbar.CloseButton);
}

uint64_t sub_100C930FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100C924D4(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), a1);
}

unint64_t sub_100C9310C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E5088;
  if (!qword_1011E5088)
  {
    v1 = sub_100044B54(&qword_1011E5080);
    sub_100C93170();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1011E5088);
  }
  return result;
}

unint64_t sub_100C93170()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E5090;
  if (!qword_1011E5090)
  {
    v1 = sub_100044B54(&qword_1011E5098);
    sub_100C931F4();
    sub_100048748(&qword_1011E4390, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E5090);
  }
  return result;
}

unint64_t sub_100C931F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E50A0;
  if (!qword_1011E50A0)
  {
    v1 = sub_100044B54(&qword_1011E50A8);
    sub_100C93278();
    sub_100049F28(&qword_1011E1E40, &qword_1011E1E48, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E50A0);
  }
  return result;
}

unint64_t sub_100C93278()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E50B0;
  if (!qword_1011E50B0)
  {
    v1 = sub_100044B54(&qword_1011E50B8);
    sub_100C932FC();
    sub_100049F28((unint64_t *)&unk_1011E3BD0, &qword_1011E0EA8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E50B0);
  }
  return result;
}

unint64_t sub_100C932FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E50C0;
  if (!qword_1011E50C0)
  {
    v1 = sub_100044B54(&qword_1011E50C8);
    sub_100049F28((unint64_t *)&qword_1011E0E40, &qword_1011E0E48, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E50C0);
  }
  return result;
}

double sub_100C93380@<D0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_100C92714(v1[6], v1[7], v1[2], v1[3], a1);
}

uint64_t sub_100C933A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011E5098);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100C933F0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t WitnessTable;
  uint64_t v7;
  uint64_t TupleTypeMetadata2;
  uint64_t v9;

  v1 = *a1;
  v2 = a1[1];
  v3 = sub_100044B54(&qword_1011E5078);
  v5 = type metadata accessor for Sheet.Toolbar.CloseButton(255, v1, v2, v4);
  WitnessTable = swift_getWitnessTable(&unk_100EF19E8, v5);
  v7 = type metadata accessor for ToolbarItem(255, (char *)&type metadata for () + 8, v5, WitnessTable);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v3, v7, 0, 0);
  v9 = type metadata accessor for TupleToolbarContent(255, TupleTypeMetadata2);
  return swift_getWitnessTable(&protocol conformance descriptor for TupleToolbarContent<A>, v9);
}

uint64_t sub_100C93494(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_100FBE128, 1);
}

uint64_t sub_100C934C8()
{
  return sub_100049F28(&qword_1011E4E40, (uint64_t *)&unk_1011E3120, (uint64_t)&protocol conformance descriptor for Button<A>);
}

uint64_t HeightLimitedButtonTextView.init(action:body:trailingView:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(void)@<X2>, uint64_t (*a4)(void)@<X4>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>, uint64_t a8, uint64_t a9)
{
  uint64_t v15;
  uint64_t result;
  _QWORD *v17;
  _QWORD v18[4];

  a3();
  v18[0] = a5;
  v18[1] = a6;
  v18[2] = a8;
  v18[3] = a9;
  v15 = type metadata accessor for HeightLimitedButtonTextView(0, (uint64_t)v18);
  result = a4();
  v17 = (_QWORD *)(a7 + *(int *)(v15 + 56));
  *v17 = a1;
  v17[1] = a2;
  return result;
}

uint64_t type metadata accessor for HeightLimitedButtonTextView(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for HeightLimitedButtonTextView);
}

uint64_t HeightLimitedButtonTextView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t TupleTypeMetadata2;
  uint64_t v9;
  uint64_t WitnessTable;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  _QWORD v65[7];

  v55 = a2;
  v2 = *(_QWORD *)(a1 + 16);
  v4 = sub_100044B54(&qword_1011E0E48);
  v5 = type metadata accessor for ModifiedContent(255, v2, v4);
  v6 = type metadata accessor for ModifiedContent(255, v5, &type metadata for _FixedSizeLayout);
  v53 = *(_QWORD *)(a1 + 24);
  v7 = a1;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v2, v53, 0, 0);
  v9 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v9);
  v11 = type metadata accessor for ZStack(255, v9, WitnessTable);
  v12 = type metadata accessor for ModifiedContent(255, v11, &type metadata for _CompositingGroupEffect);
  v65[4] = swift_getWitnessTable(&protocol conformance descriptor for ZStack<A>, v11);
  v65[5] = &protocol witness table for _CompositingGroupEffect;
  v13 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v12);
  v65[0] = type metadata accessor for Button(255, v12, v13);
  v65[1] = type metadata accessor for PlainButtonStyle(255);
  v65[2] = swift_getWitnessTable(&protocol conformance descriptor for Button<A>, v65[0]);
  v65[3] = sub_100C939E8();
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, v65, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 0);
  v15 = swift_getTupleTypeMetadata2(255, v6, OpaqueTypeMetadata2, 0, 0);
  v49 = type metadata accessor for TupleView(255, v15);
  v48 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v49);
  v16 = type metadata accessor for ViewThatFits(0, v49, v48);
  v52 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin();
  v45 = (char *)&v44 - v17;
  v18 = type metadata accessor for ModifiedContent(0, v2, &type metadata for _HiddenModifier);
  v51 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin();
  v20 = (char *)&v44 - v19;
  v46 = swift_getWitnessTable(&protocol conformance descriptor for ViewThatFits<A>, v16);
  v47 = type metadata accessor for _OverlayModifier(255, v16, v46);
  v21 = type metadata accessor for ModifiedContent(0, v18, v47);
  v50 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin();
  v23 = (char *)&v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v25 = (char *)&v44 - v24;
  v26 = v7;
  v27 = *(_QWORD *)(v7 + 32);
  v28 = v2;
  v29 = v2;
  v30 = v54;
  v31 = View.hidden()(v29, v27);
  v32 = static Axis.Set.vertical.getter(v31);
  v56 = v28;
  v57 = v53;
  v33 = *(_QWORD *)(v26 + 40);
  v58 = v27;
  v59 = v33;
  v60 = v30;
  v34 = v45;
  v35 = ViewThatFits.init(in:content:)(v32, sub_100C94020);
  v36 = static Alignment.center.getter(v35);
  v38 = v37;
  v39 = sub_100C943F0();
  v63 = v27;
  v64 = v39;
  v40 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v18);
  View.overlay<A>(_:alignment:)(v34, v36, v38, v18, v16, v40, v46);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v34, v16);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v20, v18);
  v41 = swift_getWitnessTable(&protocol conformance descriptor for _OverlayModifier<A>, v47);
  v61 = v40;
  v62 = v41;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v21);
  sub_10081EB14((uint64_t)v23, v21, (uint64_t)v25);
  v42 = *(void (**)(char *, uint64_t))(v50 + 8);
  v42(v23, v21);
  sub_1000EA744((uint64_t)v25, v21, v55);
  return ((uint64_t (*)(char *, uint64_t))v42)(v25, v21);
}

unint64_t sub_100C939E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E2B68;
  if (!qword_1011E2B68)
  {
    v1 = type metadata accessor for PlainButtonStyle(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for PlainButtonStyle, v1);
    atomic_store(result, (unint64_t *)&qword_1011E2B68);
  }
  return result;
}

uint64_t sub_100C93A30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t TupleTypeMetadata2;
  uint64_t v13;
  uint64_t WitnessTable;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t OpaqueTypeConformance2;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t);
  char *v54;
  uint64_t (*v55)(char *, uint64_t);
  uint64_t v57;
  char *v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t);
  char *v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79[16];
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD v87[6];
  char *v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  void *v93;

  v74 = a5;
  v73 = a3;
  v57 = a1;
  v77 = a6;
  v9 = type metadata accessor for PlainButtonStyle(0);
  v76 = *(_QWORD *)(v9 - 8);
  v10 = v9;
  v64 = v9;
  __chkstk_darwin();
  v75 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, a2, a3, 0, 0);
  v13 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v13);
  v15 = type metadata accessor for ZStack(255, v13, WitnessTable);
  v16 = type metadata accessor for ModifiedContent(255, v15, &type metadata for _CompositingGroupEffect);
  v92 = swift_getWitnessTable(&protocol conformance descriptor for ZStack<A>, v15);
  v93 = &protocol witness table for _CompositingGroupEffect;
  v68 = v16;
  v69 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v16);
  v17 = type metadata accessor for Button(0, v16, v69);
  v72 = *(_QWORD *)(v17 - 8);
  v65 = v17;
  __chkstk_darwin();
  v66 = (char *)&v57 - v18;
  v19 = swift_getWitnessTable(&protocol conformance descriptor for Button<A>, v17);
  v63 = v19;
  v62 = sub_100C939E8();
  v88 = (char *)v17;
  v89 = v10;
  v90 = v19;
  v91 = v62;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v88, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 0);
  v71 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin();
  v61 = (char *)&v57 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v67 = (uint64_t)&v57 - v21;
  v22 = sub_100044B54(&qword_1011E0E48);
  v23 = type metadata accessor for ModifiedContent(0, a2, v22);
  v24 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin();
  v26 = (char *)&v57 - v25;
  v27 = type metadata accessor for ModifiedContent(0, v23, &type metadata for _FixedSizeLayout);
  v78 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin();
  v29 = (char *)&v57 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v31 = (char *)&v57 - v30;
  v58 = (char *)&v57 - v30;
  View.lineLimit(_:)(0, 1, a2, a4);
  v32 = sub_100C94E3C();
  v87[4] = a4;
  v87[5] = v32;
  v33 = a4;
  v34 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v23);
  View.fixedSize(horizontal:vertical:)(0, 1, v23, v34);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
  v87[2] = v34;
  v87[3] = &protocol witness table for _FixedSizeLayout;
  v59 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v27);
  sub_10081EB14((uint64_t)v29, v27, (uint64_t)v31);
  v60 = *(void (**)(char *, uint64_t))(v78 + 8);
  v60(v29, v27);
  v35 = v73;
  v88 = (char *)a2;
  v89 = v73;
  v36 = v74;
  v90 = v33;
  v91 = v74;
  v37 = type metadata accessor for HeightLimitedButtonTextView(0, (uint64_t)&v88);
  v38 = (uint64_t *)(v57 + *(int *)(v37 + 56));
  v39 = *v38;
  v40 = v38[1];
  v80 = a2;
  v81 = v35;
  v82 = v33;
  v83 = v36;
  v84 = v57;
  swift_retain();
  v41 = v66;
  v42 = Button.init(action:label:)(v39, v40, sub_100C94E88, v79, v68, v69);
  v43 = v75;
  PlainButtonStyle.init()(v42);
  v44 = (uint64_t)v61;
  v45 = v65;
  v46 = v64;
  v47 = v63;
  v48 = v62;
  View.buttonStyle<A>(_:)(v43, v65, v64, v63, v62);
  (*(void (**)(char *, uint64_t))(v76 + 8))(v43, v46);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v41, v45);
  v88 = (char *)v45;
  v89 = v46;
  v90 = v47;
  v91 = v48;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v88, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
  v50 = v67;
  v51 = OpaqueTypeMetadata2;
  sub_10081EB14(v44, OpaqueTypeMetadata2, v67);
  v52 = v71;
  v53 = *(void (**)(uint64_t, uint64_t))(v71 + 8);
  v53(v44, v51);
  v54 = v58;
  (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v29, v58, v27);
  v88 = v29;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 16))(v44, v50, v51);
  v89 = v44;
  v87[0] = v27;
  v87[1] = v51;
  v85 = v59;
  v86 = OpaqueTypeConformance2;
  sub_1004D49B8((uint64_t *)&v88, 2uLL, (uint64_t)v87);
  v53(v50, v51);
  v55 = (uint64_t (*)(char *, uint64_t))v60;
  v60(v54, v27);
  v53(v44, v51);
  return v55(v29, v27);
}

uint64_t sub_100C94020()
{
  return sub_10068E2A4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100C93A30);
}

uint64_t sub_100C9402C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t TupleTypeMetadata2;
  uint64_t v8;
  uint64_t WitnessTable;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[16];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;

  v28 = a4;
  v29 = a5;
  v25 = a3;
  v27 = a1;
  v30 = a6;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, a2, a3, 0, 0);
  v8 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v8);
  v10 = type metadata accessor for ZStack(0, v8, WitnessTable);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin();
  v13 = (char *)&v25 - v12;
  v14 = type metadata accessor for ModifiedContent(0, v10, &type metadata for _CompositingGroupEffect);
  v26 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin();
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v18 = (char *)&v25 - v17;
  v20 = static HorizontalAlignment.trailing.getter(v19);
  v21 = static VerticalAlignment.lastTextBaseline.getter();
  v32 = a2;
  v33 = v25;
  v34 = v28;
  v35 = v29;
  v36 = v27;
  ZStack.init(alignment:content:)(v20, v21, sub_100C94E94, v31, v8, WitnessTable);
  v22 = swift_getWitnessTable(&protocol conformance descriptor for ZStack<A>, v10);
  View.compositingGroup()(v10, v22);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v37 = v22;
  v38 = &protocol witness table for _CompositingGroupEffect;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v14);
  sub_10081EB14((uint64_t)v16, v14, (uint64_t)v18);
  v23 = *(void (**)(char *, uint64_t))(v26 + 8);
  v23(v16, v14);
  sub_1000EA744((uint64_t)v18, v14, v30);
  return ((uint64_t (*)(char *, uint64_t))v23)(v18, v14);
}

uint64_t sub_100C94240@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  void (*v26)(char *, uint64_t);
  _QWORD v28[4];
  _QWORD v29[2];
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;

  v28[1] = a6;
  v28[0] = *(_QWORD *)(a3 - 8);
  __chkstk_darwin();
  v12 = (char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v14 = (char *)v28 - v13;
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin();
  v18 = (char *)v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v20 = (char *)v28 - v19;
  sub_10081EB14(v21, v22, (uint64_t)v28 - v19);
  v30 = (char *)a2;
  v31 = (char *)a3;
  v32 = a4;
  v33 = a5;
  v23 = type metadata accessor for HeightLimitedButtonTextView(0, (uint64_t)&v30);
  sub_10081EB14(a1 + *(int *)(v23 + 52), a3, (uint64_t)v14);
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v18, v20, a2);
  v30 = v18;
  v24 = v28[0];
  (*(void (**)(char *, char *, uint64_t))(v28[0] + 16))(v12, v14, a3);
  v31 = v12;
  v29[0] = a2;
  v29[1] = a3;
  v28[2] = a4;
  v28[3] = a5;
  sub_1004D49B8((uint64_t *)&v30, 2uLL, (uint64_t)v29);
  v25 = *(void (**)(char *, uint64_t))(v24 + 8);
  v25(v14, a3);
  v26 = *(void (**)(char *, uint64_t))(v16 + 8);
  v26(v20, a2);
  v25(v12, a3);
  return ((uint64_t (*)(char *, uint64_t))v26)(v18, a2);
}

unint64_t sub_100C943F0()
{
  unint64_t result;

  result = qword_1011E5158[0];
  if (!qword_1011E5158[0])
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for _HiddenModifier, &type metadata for _HiddenModifier);
    atomic_store(result, qword_1011E5158);
  }
  return result;
}

uint64_t sub_100C94434(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  _OWORD v4[2];

  v2 = *(_OWORD *)(a2 + 32);
  v4[0] = *(_OWORD *)(a2 + 16);
  v4[1] = v2;
  return swift_getOpaqueTypeConformance2(v4, &opaque type descriptor for <<opaque return type of HeightLimitedButtonTextView.body>>, 1);
}

uint64_t sub_100C9446C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[3];

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 24));
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      v5[2] = (char *)&value witness table for () + 64;
      swift_initStructMetadata(a1, 0, 3, v5, a1 + 48);
      return 0;
    }
  }
  return result;
}

uint64_t *sub_100C94504(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = *(_QWORD *)(v7 + 64) + 7;
  v11 = v8 | *(_DWORD *)(v6 + 80) & 0xF8;
  if (v11 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) != 0
    || ((v10 + (v9 & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v17 + (((v11 | 7) + 16) & ~(unint64_t)(v11 | 7)));
  }
  else
  {
    v14 = ~v8;
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    v15 = ((unint64_t)a2 + v9) & v14;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v9) & v14, v15, v5);
    v16 = (_QWORD *)((v10 + v15) & 0xFFFFFFFFFFFFFFF8);
    v17 = v16[1];
    v18 = (_QWORD *)((v10 + (((unint64_t)v4 + v9) & v14)) & 0xFFFFFFFFFFFFFFF8);
    *v18 = *v16;
    v18[1] = v17;
  }
  swift_retain(v17);
  return v4;
}

double sub_100C94610(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  double result;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  v5 = *(_QWORD *)(v4 + 64) + a1;
  v6 = *(_QWORD *)(*(_QWORD *)(a2 + 24) - 8);
  v7 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t))(v6 + 8))(v7);
  *(_QWORD *)&result = swift_release(*(_QWORD *)(((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFF8) + 8)).n128_u64[0];
  return result;
}

uint64_t sub_100C94684(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (_QWORD *)((v13 + v11) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)((v13 + v12) & 0xFFFFFFFFFFFFFFF8);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  swift_retain(v16);
  return a1;
}

uint64_t sub_100C9471C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (_QWORD *)((v13 + v11) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)((v13 + v12) & 0xFFFFFFFFFFFFFFF8);
  v16 = v15[1];
  v17 = v14[1];
  *v14 = *v15;
  v14[1] = v16;
  swift_retain(v16);
  swift_release(v17);
  return a1;
}

uint64_t sub_100C947C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v11, v12);
  *(_OWORD *)((*(_QWORD *)(v8 + 64) + 7 + v11) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((*(_QWORD *)(v8 + 64) + 7 + v12) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_100C94854(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (v13 + v11) & 0xFFFFFFFFFFFFFFF8;
  v15 = *(_QWORD *)(v14 + 8);
  *(_OWORD *)v14 = *(_OWORD *)((v13 + v12) & 0xFFFFFFFFFFFFF8);
  swift_release(v15);
  return a1;
}

uint64_t sub_100C948F0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v17;
  unint64_t v18;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 84);
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8 <= v6)
    v9 = *(_DWORD *)(v5 + 84);
  else
    v9 = *(_DWORD *)(v7 + 84);
  if (v9 <= 0x7FFFFFFF)
    v9 = 0x7FFFFFFF;
  if (!a2)
    return 0;
  v10 = *(unsigned __int8 *)(v7 + 80);
  v11 = *(_QWORD *)(v5 + 64) + v10;
  v12 = *(_QWORD *)(v7 + 64) + 7;
  if (v9 >= a2)
  {
    if (v6 == v9)
    {
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v5 + 48))(a1, *(unsigned int *)(v5 + 84), v4);
    }
    else
    {
      v17 = (v11 + a1) & ~v10;
      if (v8 == v9)
      {
        return (*(uint64_t (**)(uint64_t))(v7 + 48))(v17);
      }
      else
      {
        v18 = *(_QWORD *)((v12 + v17) & 0xFFFFFFFFFFFFF8);
        if (v18 >= 0xFFFFFFFF)
          LODWORD(v18) = -1;
        return (v18 + 1);
      }
    }
  }
  else
  {
    if (((((v12 + (v11 & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v13 = 2;
    else
      v13 = a2 - v9 + 1;
    if (v13 >= 0x10000)
      v14 = 4;
    else
      v14 = 2;
    if (v13 < 0x100)
      v14 = 1;
    if (v13 >= 2)
      v15 = v14;
    else
      v15 = 0;
    return ((uint64_t (*)(void))((char *)&loc_100C94990 + 4 * byte_100EF1A40[v15]))();
  }
}

void sub_100C94A38(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  v8 = *(unsigned __int8 *)(v6 + 80);
  if (v7 >= a3)
  {
    v11 = 0;
    if (a2 <= v7)
      goto LABEL_19;
  }
  else
  {
    if (((*(_DWORD *)(v6 + 64) + 7 + ((*(_DWORD *)(v5 + 64) + (_DWORD)v8) & ~(_DWORD)v8)) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v9 = a3 - v7 + 1;
    else
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    if (a2 <= v7)
LABEL_19:
      __asm { BR              X0 }
  }
  if (((*(_DWORD *)(v6 + 64) + 7 + ((*(_DWORD *)(v5 + 64) + (_DWORD)v8) & ~(_DWORD)v8)) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v12 = ~v7 + a2;
    bzero(a1, ((*(_QWORD *)(v6 + 64) + 7 + ((*(_QWORD *)(v5 + 64) + v8) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 16);
    *a1 = v12;
  }
  __asm { BR              X10 }
}

void sub_100C94B54()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x100C94BE4);
}

void sub_100C94B5C(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x100C94B64);
  JUMPOUT(0x100C94BE4);
}

void sub_100C94BA8()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x100C94BE4);
}

void sub_100C94BB0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x100C94BE4);
}

uint64_t sub_100C94BB8(uint64_t a1, int a2, int a3)
{
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_WORD *)(v12 + v13) = 0;
  if (!a2)
    JUMPOUT(0x100C94BE4);
  if (v6 == v9)
  {
    v3 = *(uint64_t (**)(uint64_t))(v10 + 56);
    v4 = v12;
  }
  else
  {
    v4 = (v11 + v12) & v7;
    if (a3 != v9)
      JUMPOUT(0x100C94BC4);
    v3 = *(uint64_t (**)(uint64_t))(v8 + 56);
  }
  return v3(v4);
}

uint64_t sub_100C94BFC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t TupleTypeMetadata2;
  uint64_t v8;
  uint64_t WitnessTable;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[6];

  v1 = *a1;
  v2 = a1[1];
  v3 = type metadata accessor for ModifiedContent(255, *a1, &type metadata for _HiddenModifier);
  v4 = sub_100044B54(&qword_1011E0E48);
  v5 = type metadata accessor for ModifiedContent(255, v1, v4);
  v6 = type metadata accessor for ModifiedContent(255, v5, &type metadata for _FixedSizeLayout);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v1, v2, 0, 0);
  v8 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v8);
  v10 = type metadata accessor for ZStack(255, v8, WitnessTable);
  v11 = type metadata accessor for ModifiedContent(255, v10, &type metadata for _CompositingGroupEffect);
  v22[4] = swift_getWitnessTable(&protocol conformance descriptor for ZStack<A>, v10);
  v22[5] = &protocol witness table for _CompositingGroupEffect;
  v12 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v11);
  v22[0] = type metadata accessor for Button(255, v11, v12);
  v22[1] = type metadata accessor for PlainButtonStyle(255);
  v22[2] = swift_getWitnessTable(&protocol conformance descriptor for Button<A>, v22[0]);
  v22[3] = sub_100C939E8();
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, v22, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 0);
  v14 = swift_getTupleTypeMetadata2(255, v6, OpaqueTypeMetadata2, 0, 0);
  v15 = type metadata accessor for TupleView(255, v14);
  v16 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v15);
  v17 = type metadata accessor for ViewThatFits(255, v15, v16);
  v18 = swift_getWitnessTable(&protocol conformance descriptor for ViewThatFits<A>, v17);
  v19 = type metadata accessor for _OverlayModifier(255, v17, v18);
  v20 = type metadata accessor for ModifiedContent(255, v3, v19);
  sub_100C943F0();
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v3);
  swift_getWitnessTable(&protocol conformance descriptor for _OverlayModifier<A>, v19);
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v20);
}

unint64_t sub_100C94E3C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E0E40;
  if (!qword_1011E0E40)
  {
    v1 = sub_100044B54(&qword_1011E0E48);
    result = swift_getWitnessTable(&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E0E40);
  }
  return result;
}

uint64_t sub_100C94E88()
{
  return sub_10068E2A4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100C9402C);
}

uint64_t sub_100C94E94()
{
  return sub_10068E2A4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100C94240);
}

uint64_t MoreLabel.init(color:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  char *v7;
  uint64_t result;

  v4 = type metadata accessor for MoreLabel(0);
  v5 = (_QWORD *)((char *)a2 + *(int *)(v4 + 20));
  *v5 = swift_getKeyPath(&unk_100EF1AE0);
  v6 = sub_100007E8C((uint64_t *)&unk_1011DE420);
  swift_storeEnumTagMultiPayload(v5, v6, 0);
  v7 = (char *)a2 + *(int *)(v4 + 24);
  result = swift_getKeyPath(&unk_100EF1B10);
  *(_QWORD *)v7 = result;
  v7[8] = 0;
  *a2 = a1;
  return result;
}

uint64_t type metadata accessor for MoreLabel(uint64_t a1)
{
  uint64_t result;

  result = qword_1011E5298;
  if (!qword_1011E5298)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MoreLabel);
  return result;
}

uint64_t MoreLabel.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t KeyPath;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  unint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  unint64_t v54;
  char *v55;
  uint64_t v56;
  double v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  double v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  void (*v89)(char *, char *, uint64_t);
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  _QWORD *v120;
  __int128 v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  __int128 v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD *v135;
  char v136;
  uint64_t v137;
  char v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;

  v126 = a1;
  type metadata accessor for _BlendModeEffect(0);
  __chkstk_darwin();
  v125 = (char *)&v103 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = type metadata accessor for BlendMode(0);
  v128 = *(_QWORD *)(v130 - 8);
  __chkstk_darwin();
  v129 = (char *)&v103 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = sub_100007E8C(&qword_1011E51E0);
  v3 = __chkstk_darwin();
  v123 = (char *)&v103 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = type metadata accessor for Text.LineStyle.Pattern(0, v3);
  *(_QWORD *)&v121 = *(_QWORD *)(v122 - 8);
  __chkstk_darwin();
  v119 = (char *)&v103 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100007E8C(&qword_1011E0E58);
  __chkstk_darwin();
  v105 = (char *)&v103 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011E0E60);
  __chkstk_darwin();
  v9 = (char *)&v103 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = sub_100007E8C(&qword_1011E0E68);
  __chkstk_darwin();
  v11 = (char *)&v103 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = sub_100007E8C(&qword_1011E51E8);
  v111 = *(_QWORD *)(v112 - 8);
  __chkstk_darwin();
  v106 = (char *)&v103 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = sub_100007E8C(&qword_1011E51F0);
  __chkstk_darwin();
  v107 = (char *)&v103 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = sub_100007E8C(&qword_1011E51F8);
  __chkstk_darwin();
  v108 = (uint64_t)&v103 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = sub_100007E8C(&qword_1011E5200);
  v116 = *(_QWORD *)(v117 - 8);
  __chkstk_darwin();
  v113 = (char *)&v103 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = sub_100007E8C(&qword_1011E5208);
  __chkstk_darwin();
  v114 = (char *)&v103 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = sub_100007E8C(&qword_1011E5210);
  __chkstk_darwin();
  v127 = (uint64_t)&v103 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = Int.seconds.getter(44);
  v19 = LocalizedStringKey.init(stringLiteral:)(1701998413, 0xE400000000000000);
  v20 = Text.init(_:tableName:bundle:comment:)(v19);
  v22 = v21;
  v24 = v23;
  v26 = v25 & 1;
  v27 = enum case for Text.Case.uppercase(_:);
  v28 = type metadata accessor for Text.Case(0);
  v29 = *(_QWORD *)(v28 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 104))(v9, v27, v28);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v9, 0, 1, v28);
  KeyPath = swift_getKeyPath(&unk_100EF1B40);
  v31 = (uint64_t)v105;
  sub_10004A160((uint64_t)v9, (uint64_t)&v105[*(int *)(v6 + 28)], &qword_1011E0E60);
  *(_QWORD *)v31 = KeyPath;
  v32 = v104;
  sub_10004A160(v31, (uint64_t)&v11[*(int *)(v104 + 36)], &qword_1011E0E58);
  *(_QWORD *)v11 = v20;
  *((_QWORD *)v11 + 1) = v22;
  v11[16] = v26;
  *((_QWORD *)v11 + 3) = v24;
  sub_100055BBC(v20, v22, v26);
  swift_bridgeObjectRetain();
  sub_10004FF60(v31, &qword_1011E0E58);
  sub_10004FF60((uint64_t)v9, &qword_1011E0E60);
  sub_100055BAC(v20, v22, v26);
  swift_bridgeObjectRelease();
  v34 = static Font.Weight.bold.getter(v33);
  v35 = sub_100C14644();
  v36 = v106;
  View.fontWeight(_:)(*(_QWORD *)&v34, 0, v32, v35);
  v37 = sub_10004FF60((uint64_t)v11, &qword_1011E0E68);
  v38 = static Font.footnote.getter(v37);
  v39 = swift_getKeyPath(&unk_100EF1B70);
  v40 = v111;
  v41 = (uint64_t)v107;
  v42 = v112;
  (*(void (**)(char *, char *, uint64_t))(v111 + 16))(v107, v36, v112);
  v43 = (uint64_t *)(v41 + *(int *)(v109 + 36));
  *v43 = v39;
  v43[1] = v38;
  (*(void (**)(char *, uint64_t))(v40 + 8))(v36, v42);
  v44 = v120;
  v45 = *v120;
  v46 = swift_getKeyPath(&unk_100EF1BA0);
  v47 = v108;
  sub_10004A160(v41, v108, &qword_1011E51F0);
  v48 = v110;
  v49 = (uint64_t *)(v47 + *(int *)(v110 + 36));
  *v49 = v46;
  v49[1] = v45;
  swift_retain();
  sub_10004FF60(v41, &qword_1011E51F0);
  v50 = (char *)v44 + *(int *)(type metadata accessor for MoreLabel(0) + 24);
  v51 = *(_QWORD *)v50;
  LOBYTE(v46) = v50[8];
  sub_10006B3F8(*(_QWORD *)v50, v46);
  LOBYTE(v31) = sub_100C31844(v51, v46);
  v52 = sub_10006B604(v51, v46);
  v53 = v119;
  static Text.LineStyle.Pattern.solid.getter(v52);
  v54 = sub_100C95CD0();
  v55 = v113;
  View.underline(_:pattern:color:)(v31 & 1, v53, 0, v48, v54);
  (*(void (**)(char *, uint64_t))(v121 + 8))(v53, v122);
  v56 = sub_10004FF60(v47, &qword_1011E51F8);
  LOBYTE(v53) = static Edge.Set.leading.getter(v56);
  v57 = EdgeInsets.init(_all:)(v18);
  v59 = v58;
  v61 = v60;
  v63 = v62;
  v64 = v116;
  v65 = (uint64_t)v114;
  v66 = v117;
  (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v114, v55, v117);
  v67 = v65 + *(int *)(v115 + 36);
  *(_BYTE *)v67 = (_BYTE)v53;
  *(double *)(v67 + 8) = v57;
  *(_QWORD *)(v67 + 16) = v59;
  *(_QWORD *)(v67 + 24) = v61;
  *(_QWORD *)(v67 + 32) = v63;
  *(_BYTE *)(v67 + 40) = 0;
  v68 = (*(uint64_t (**)(char *, uint64_t))(v64 + 8))(v55, v66);
  LOBYTE(v53) = static Edge.Set.top.getter(v68);
  v69 = EdgeInsets.init(_all:)(4.0);
  v71 = v70;
  v73 = v72;
  v75 = v74;
  v76 = v127;
  sub_10004A160(v65, v127, &qword_1011E5208);
  v77 = v76 + *(int *)(v118 + 36);
  *(_BYTE *)v77 = (_BYTE)v53;
  *(double *)(v77 + 8) = v69;
  *(_QWORD *)(v77 + 16) = v71;
  *(_QWORD *)(v77 + 24) = v73;
  *(_QWORD *)(v77 + 32) = v75;
  *(_BYTE *)(v77 + 40) = 0;
  v78 = sub_10004FF60(v65, &qword_1011E5208);
  v122 = static VerticalAlignment.center.getter(v78);
  sub_100C95920((uint64_t)&v131, v18);
  v79 = v131;
  v121 = v132;
  v80 = v133;
  v81 = v134;
  v120 = v135;
  LOBYTE(v64) = v136;
  v82 = v137;
  LOBYTE(v24) = v138;
  v83 = v139;
  v84 = v140;
  v85 = v141;
  v86 = v128;
  v88 = v129;
  v87 = v130;
  (*(void (**)(char *, _QWORD, uint64_t))(v128 + 104))(v129, enum case for BlendMode.destinationOut(_:), v130);
  v89 = *(void (**)(char *, char *, uint64_t))(v86 + 16);
  v90 = (uint64_t)v125;
  v89(v125, v88, v87);
  v91 = v123;
  sub_100C95E00(v90, (uint64_t)&v123[*(int *)(v124 + 36)]);
  *(_QWORD *)v91 = v122;
  *((_QWORD *)v91 + 1) = 0;
  v91[16] = 0;
  *((_QWORD *)v91 + 3) = v79;
  *((_OWORD *)v91 + 2) = v121;
  *((_QWORD *)v91 + 6) = v80;
  *((_QWORD *)v91 + 7) = v81;
  *((_QWORD *)v91 + 8) = v120;
  v91[72] = v64;
  *((_QWORD *)v91 + 10) = v82;
  v91[88] = v24;
  *((_QWORD *)v91 + 12) = v83;
  *((_QWORD *)v91 + 13) = v84;
  *((_QWORD *)v91 + 14) = v85;
  v92 = (uint64_t)v91;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100C95E44(v90);
  (*(void (**)(char *, uint64_t))(v128 + 8))(v129, v130);
  swift_release();
  swift_bridgeObjectRelease();
  v94 = static Alignment.center.getter(v93);
  v96 = v95;
  v97 = sub_100007E8C(&qword_1011E5228);
  v98 = v126;
  v99 = v126 + *(int *)(v97 + 36);
  sub_10004A160(v92, v99, &qword_1011E51E0);
  v100 = (uint64_t *)(v99 + *(int *)(sub_100007E8C(&qword_1011E5230) + 36));
  *v100 = v94;
  v100[1] = v96;
  v101 = v127;
  sub_10004A160(v127, v98, &qword_1011E5210);
  sub_10004FF60(v92, &qword_1011E51E0);
  return sub_10004FF60(v101, &qword_1011E5210);
}

double sub_100C95920@<D0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char v10;
  void (*v11)(char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  _QWORD *v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  double result;
  __int128 v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;

  v4 = type metadata accessor for LayoutDirection(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v9 = (char *)&v40 - v8;
  type metadata accessor for MoreLabel(0);
  sub_100C315D4((uint64_t)v9);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for LayoutDirection.rightToLeft(_:), v4);
  v10 = static LayoutDirection.== infix(_:_:)(v9, v7);
  v11 = *(void (**)(char *, uint64_t))(v5 + 8);
  v11(v7, v4);
  v11(v9, v4);
  v12 = sub_100007E8C(&qword_1011E4EC8);
  v13 = swift_allocObject(v12, 48, 7);
  v14 = v13;
  *(_OWORD *)(v13 + 16) = xmmword_100EA7A80;
  if ((v10 & 1) != 0)
  {
    v15 = static Color.black.getter(v13);
    *(_QWORD *)(v14 + 32) = v15;
    v16 = static Color.clear.getter(v15);
  }
  else
  {
    v17 = static Color.clear.getter(v13);
    *(_QWORD *)(v14 + 32) = v17;
    v16 = static Color.black.getter(v17);
  }
  *(_QWORD *)(v14 + 40) = v16;
  v45 = v14;
  specialized Array._endMutation()(v16);
  Gradient.init(colors:)(v45);
  v19 = static UnitPoint.leading.getter(v18);
  v21 = v20;
  v22 = static UnitPoint.trailing.getter();
  v24 = LinearGradient.init(gradient:startPoint:endPoint:)(&v41, v19, v21, v22, v23);
  v25 = v41;
  v40 = v42;
  v26 = a2;
  v27 = v43;
  v28 = v44;
  v29 = static Alignment.center.getter(v24);
  v31 = _FrameLayout.init(width:height:alignment:)(&v45, *(_QWORD *)&v26, 0, 0, 1, v29, v30);
  v32 = v45;
  v33 = v46;
  v34 = v47;
  v35 = v48;
  v36 = v49;
  v37 = v50;
  v38 = static Color.black.getter(v31);
  *(_QWORD *)a1 = v25;
  result = *(double *)&v40;
  *(_OWORD *)(a1 + 8) = v40;
  *(_QWORD *)(a1 + 24) = v27;
  *(_QWORD *)(a1 + 32) = v28;
  *(_QWORD *)(a1 + 40) = v32;
  *(_BYTE *)(a1 + 48) = v33;
  *(_QWORD *)(a1 + 56) = v34;
  *(_BYTE *)(a1 + 64) = v35;
  *(_QWORD *)(a1 + 72) = v36;
  *(_QWORD *)(a1 + 80) = v37;
  *(_QWORD *)(a1 + 88) = v38;
  return result;
}

uint64_t sub_100C95B30@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.accessibilityShowButtonShapes.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100C95B5C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.accessibilityShowButtonShapes.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100C95B8C()
{
  return EnvironmentValues.textCase.getter();
}

uint64_t sub_100C95BAC(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v5;

  sub_100007E8C(&qword_1011E0E60);
  __chkstk_darwin();
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A160(a1, (uint64_t)v3, &qword_1011E0E60);
  return EnvironmentValues.textCase.setter(v3);
}

uint64_t sub_100C95C30@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100C95C58(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.font.setter(v1);
}

uint64_t sub_100C95C80@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100C95CA8(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.foregroundColor.setter(v1);
}

unint64_t sub_100C95CD0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E5218;
  if (!qword_1011E5218)
  {
    v1 = sub_100044B54(&qword_1011E51F8);
    sub_100C95D54();
    sub_100049F28(&qword_1011E2B30, (uint64_t *)&unk_1011E3A60, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E5218);
  }
  return result;
}

unint64_t sub_100C95D54()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1011E5220;
  if (!qword_1011E5220)
  {
    v1 = sub_100044B54(&qword_1011E51F0);
    v2[0] = sub_100044B54(&qword_1011E0E68);
    v2[1] = sub_100C14644();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>, 1);
    sub_100049F28((unint64_t *)&unk_1011E3BD0, &qword_1011E0EA8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E5220);
  }
  return result;
}

uint64_t sub_100C95E00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for _BlendModeEffect(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100C95E44(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for _BlendModeEffect(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100C95E80(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of MoreLabel.body>>, 1);
}

uint64_t *initializeBufferWithCopyOfBuffer for MoreLabel(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char v18;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    swift_retain();
    v11 = sub_100007E8C((uint64_t *)&unk_1011DE420);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
      v13 = 1;
    }
    else
    {
      *v9 = *v10;
      swift_retain();
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v11, v13);
    v14 = *(int *)(a3 + 24);
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v17 = *(_QWORD *)v16;
    v18 = v16[8];
    sub_10006B3F8(*(_QWORD *)v16, v18);
    *(_QWORD *)v15 = v17;
    v15[8] = v18;
  }
  return a1;
}

uint64_t destroy for MoreLabel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_release();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_100007E8C((uint64_t *)&unk_1011DE420);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    swift_release();
  }
  return sub_10006B604(*(_QWORD *)(a1 + *(int *)(a2 + 24)), *(_BYTE *)(a1 + *(int *)(a2 + 24) + 8));
}

_QWORD *initializeWithCopy for MoreLabel(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char v16;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  swift_retain();
  v9 = sub_100007E8C((uint64_t *)&unk_1011DE420);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v7, v8, v10);
    v11 = 1;
  }
  else
  {
    *v7 = *v8;
    swift_retain();
    v11 = 0;
  }
  swift_storeEnumTagMultiPayload(v7, v9, v11);
  v12 = *(int *)(a3 + 24);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = *(_QWORD *)v14;
  v16 = v14[8];
  sub_10006B3F8(*(_QWORD *)v14, v16);
  *(_QWORD *)v13 = v15;
  v13[8] = v16;
  return a1;
}

_QWORD *assignWithCopy for MoreLabel(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;

  *a1 = *a2;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (_QWORD *)((char *)a1 + v6);
    v8 = (_QWORD *)((char *)a2 + v6);
    sub_10004FF60((uint64_t)a1 + v6, (uint64_t *)&unk_1011DE420);
    v9 = sub_100007E8C((uint64_t *)&unk_1011DE420);
    if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
    {
      v10 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v7, v8, v10);
      v11 = 1;
    }
    else
    {
      *v7 = *v8;
      swift_retain();
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v7, v9, v11);
  }
  v12 = *(int *)(a3 + 24);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = *(_QWORD *)v14;
  v16 = v14[8];
  sub_10006B3F8(*(_QWORD *)v14, v16);
  v17 = *(_QWORD *)v13;
  v18 = v13[8];
  *(_QWORD *)v13 = v15;
  v13[8] = v16;
  sub_10006B604(v17, v18);
  return a1;
}

_QWORD *initializeWithTake for MoreLabel(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_100007E8C((uint64_t *)&unk_1011DE420);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v11 = *(int *)(a3 + 24);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  *(_QWORD *)v12 = *(_QWORD *)v13;
  v12[8] = v13[8];
  return a1;
}

_QWORD *assignWithTake for MoreLabel(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  *a1 = *a2;
  swift_release();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    sub_10004FF60((uint64_t)a1 + v6, (uint64_t *)&unk_1011DE420);
    v9 = sub_100007E8C((uint64_t *)&unk_1011DE420);
    if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
    {
      v10 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload(v7, v9, 1);
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
  }
  v11 = *(int *)(a3 + 24);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = *(_QWORD *)v13;
  LOBYTE(v13) = v13[8];
  v15 = *(_QWORD *)v12;
  v16 = v12[8];
  *(_QWORD *)v12 = v14;
  v12[8] = (char)v13;
  sub_10006B604(v15, v16);
  return a1;
}

uint64_t getEnumTagSinglePayload for MoreLabel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C963F4);
}

uint64_t sub_100C963F4(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011E5238);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for MoreLabel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C96480);
}

char *sub_100C96480(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_100007E8C(&qword_1011E5238);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

void sub_100C964F8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  sub_100C53770(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = "\t";
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
  }
}

unint64_t sub_100C9657C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E52D8;
  if (!qword_1011E52D8)
  {
    v1 = sub_100044B54(&qword_1011E5228);
    sub_100C96600();
    sub_100049F28(&qword_1011E52F0, &qword_1011E5230, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E52D8);
  }
  return result;
}

unint64_t sub_100C96600()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E52E0;
  if (!qword_1011E52E0)
  {
    v1 = sub_100044B54(&qword_1011E5210);
    sub_100C9666C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E52E0);
  }
  return result;
}

unint64_t sub_100C9666C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1011E52E8;
  if (!qword_1011E52E8)
  {
    v1 = sub_100044B54(&qword_1011E5208);
    v2[0] = sub_100044B54(&qword_1011E51F8);
    v2[1] = sub_100C95CD0();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.underline(_:pattern:color:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E52E8);
  }
  return result;
}

uint64_t Gradient.colors.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v1 + 8));
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

double Gradient.startPoint.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

void Gradient.startPoint.setter(double a1, double a2)
{
  uint64_t v2;

  *(double *)(v2 + 32) = a1;
  *(double *)(v2 + 40) = a2;
}

void Gradient.endPoint.setter(double a1, double a2)
{
  uint64_t v2;

  *(double *)(v2 + 48) = a1;
  *(double *)(v2 + 56) = a2;
}

uint64_t Gradient.init(kind:colors:locations:interpolations:startPoint:endPoint:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>, double a8@<D2>, double a9@<D3>)
{
  *(_QWORD *)a5 = result;
  *(_QWORD *)(a5 + 8) = a2;
  *(_QWORD *)(a5 + 16) = a3;
  *(_QWORD *)(a5 + 24) = a4;
  *(double *)(a5 + 32) = a6;
  *(double *)(a5 + 40) = a7;
  *(double *)(a5 + 48) = a8;
  *(double *)(a5 + 56) = a9;
  return result;
}

char *sub_100C96754(void *a1)
{
  double *v1;
  double *v2;
  _QWORD *v4;
  NSArray v5;
  Class isa;
  Class v7;
  uint64_t v8;
  char *result;
  uint64_t v10;
  _QWORD *v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  _QWORD *v21;
  char v22[8];
  char v23[8];
  uint64_t v24;
  objc_class *v25;

  v2 = v1;
  objc_msgSend(a1, "setType:", *(_QWORD *)v1);
  sub_100065228((uint64_t)(v1 + 2), (uint64_t)v23, &qword_1011E53B8);
  sub_100065228((uint64_t)v23, (uint64_t)&v24, &qword_1011E53B8);
  if (v24)
  {
    v4 = sub_100BC6438(v24);
    sub_10004A07C(0, &qword_1011DF128, NSNumber_ptr);
    v5.super.isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v4);
  }
  else
  {
    v5.super.isa = 0;
  }
  objc_msgSend(a1, "setLocations:", v5.super.isa);

  sub_100065228((uint64_t)(v2 + 3), (uint64_t)v22, &qword_1011E53C0);
  sub_100065228((uint64_t)v22, (uint64_t)&v25, &qword_1011E53C0);
  isa = v25;
  if (v25)
  {
    sub_10004A07C(0, &qword_1011DF420, CAMediaTimingFunction_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
  }
  objc_msgSend(a1, "setInterpolations:", isa);

  v7 = (Class)*((_QWORD *)v2 + 1);
  if (!v7)
    goto LABEL_24;
  if (!((unint64_t)v7 >> 62))
  {
    v8 = *(_QWORD *)(((unint64_t)v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8)
      goto LABEL_9;
LABEL_22:
    swift_bridgeObjectRelease(v7);
    v11 = _swiftEmptyArrayStorage;
LABEL_23:
    v7 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v11);
LABEL_24:
    objc_msgSend(a1, "setColors:", v7);

    objc_msgSend(a1, "setStartPoint:", v2[4], v2[5]);
    return (char *)objc_msgSend(a1, "setEndPoint:", v2[6], v2[7]);
  }
  if ((uint64_t)v7 >= 0)
    v18 = (unint64_t)v7 & 0xFFFFFFFFFFFFFF8;
  else
    v18 = *((_QWORD *)v2 + 1);
  swift_bridgeObjectRetain();
  v8 = _CocoaArrayWrapper.endIndex.getter(v18);
  if (!v8)
    goto LABEL_22;
LABEL_9:
  v21 = _swiftEmptyArrayStorage;
  result = sub_100BCD2F0(0, v8 & ~(v8 >> 63), 0);
  if ((v8 & 0x8000000000000000) == 0)
  {
    v10 = 0;
    v11 = v21;
    do
    {
      if (((unint64_t)v7 & 0xC000000000000001) != 0)
        v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v7);
      else
        v12 = *((id *)v7 + v10 + 4);
      v13 = v12;
      v14 = objc_msgSend(v12, "CGColor");
      _s3__C7CGColorCMa_1(0);
      v20 = v15;

      *(_QWORD *)&v19 = v14;
      v21 = v11;
      v17 = v11[2];
      v16 = v11[3];
      if (v17 >= v16 >> 1)
      {
        sub_100BCD2F0((char *)(v16 > 1), v17 + 1, 1);
        v11 = v21;
      }
      ++v10;
      v11[2] = v17 + 1;
      sub_100048ABC(&v19, &v11[4 * v17 + 4]);
    }
    while (v8 != v10);
    swift_bridgeObjectRelease(v7);
    goto LABEL_23;
  }
  __break(1u);
  return result;
}

id Gradient.View.__allocating_init(configuration:)(uint64_t a1)
{
  objc_class *v1;
  objc_class *v2;
  char *v4;
  char *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  objc_super v14;

  v2 = v1;
  v4 = (char *)objc_allocWithZone(v2);
  v5 = &v4[OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration];
  v6 = *(_OWORD *)(a1 + 48);
  v8 = *(_OWORD *)a1;
  v7 = *(_OWORD *)(a1 + 16);
  *((_OWORD *)v5 + 2) = *(_OWORD *)(a1 + 32);
  *((_OWORD *)v5 + 3) = v6;
  *(_OWORD *)v5 = v8;
  *((_OWORD *)v5 + 1) = v7;
  sub_100C96C00((void **)a1);
  v14.receiver = v4;
  v14.super_class = v2;
  v9 = objc_msgSendSuper2(&v14, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v10 = objc_msgSend(v9, "layer");
  v11 = objc_opt_self(CAGradientLayer);
  v12 = (void *)swift_dynamicCastObjCClassUnconditional(v10, v11, 0, 0, 0);
  sub_100C96754(v12);
  sub_100972090(a1);

  return v9;
}

id Gradient.View.init(configuration:)(uint64_t a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  char *v5;
  __int128 v6;
  __int128 v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  objc_super v13;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = &v2[OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration];
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v5 = *(_OWORD *)a1;
  *((_OWORD *)v5 + 1) = v6;
  v7 = *(_OWORD *)(a1 + 48);
  *((_OWORD *)v5 + 2) = *(_OWORD *)(a1 + 32);
  *((_OWORD *)v5 + 3) = v7;
  sub_100C96C00((void **)a1);
  v13.receiver = v2;
  v13.super_class = ObjectType;
  v8 = objc_msgSendSuper2(&v13, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v9 = objc_msgSend(v8, "layer");
  v10 = objc_opt_self(CAGradientLayer);
  v11 = (void *)swift_dynamicCastObjCClassUnconditional(v9, v10, 0, 0, 0);
  sub_100C96754(v11);
  sub_100972090(a1);

  return v8;
}

void **sub_100C96C00(void **a1)
{
  void *v2;
  id v3;

  v2 = *a1;
  swift_bridgeObjectRetain();
  v3 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void Gradient.View.init(coder:)()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100E2B820, "MusicCoreUI/Gradient.swift", 26, 2, 52, 0);
  __break(1u);
}

uint64_t static Gradient.View.layerClass.getter()
{
  return sub_10004A07C(0, (unint64_t *)&qword_1011E07A0, CAGradientLayer_ptr);
}

uint64_t Gradient.View.typedConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  id v9;
  _BYTE v11[24];

  v3 = v1 + OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration;
  swift_beginAccess(v3, v11, 0, 0);
  v4 = *(void **)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  v8 = *(_OWORD *)(v3 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v3 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  v9 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Gradient.View.typedConfiguration.setter(uint64_t a1)
{
  char *v1;
  char *v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  id v16;
  uint64_t v17;
  void *v18;
  char v20[24];
  _OWORD v21[4];
  _OWORD v22[4];
  _OWORD v23[4];

  v3 = &v1[OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration];
  swift_beginAccess(&v1[OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration], v20, 1, 0);
  v4 = *((_OWORD *)v3 + 1);
  v23[0] = *(_OWORD *)v3;
  v23[1] = v4;
  v5 = *((_OWORD *)v3 + 3);
  v23[2] = *((_OWORD *)v3 + 2);
  v23[3] = v5;
  v7 = *(void **)v3;
  v6 = *((_QWORD *)v3 + 1);
  v8 = *((_QWORD *)v3 + 2);
  v9 = *((_QWORD *)v3 + 3);
  v10 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *((_OWORD *)v3 + 1) = v10;
  v11 = *(_OWORD *)(a1 + 48);
  *((_OWORD *)v3 + 2) = *(_OWORD *)(a1 + 32);
  *((_OWORD *)v3 + 3) = v11;
  sub_100C96C00((void **)v23);
  sub_100C96C00((void **)a1);

  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(v9);
  v12 = *((_OWORD *)v3 + 1);
  v22[0] = *(_OWORD *)v3;
  v22[1] = v12;
  v13 = *((_OWORD *)v3 + 3);
  v22[2] = *((_OWORD *)v3 + 2);
  v22[3] = v13;
  sub_100C96C00((void **)v22);
  LOBYTE(v6) = _s11MusicCoreUI8GradientV23__derived_struct_equalsySbAC_ACtFZ_0((uint64_t)v22, (uint64_t)v23);
  sub_100972090((uint64_t)v22);
  if ((v6 & 1) == 0)
  {
    v14 = *((_OWORD *)v3 + 1);
    v21[0] = *(_OWORD *)v3;
    v21[1] = v14;
    v15 = *((_OWORD *)v3 + 3);
    v21[2] = *((_OWORD *)v3 + 2);
    v21[3] = v15;
    sub_100C96C00((void **)v21);
    v16 = objc_msgSend(v1, "layer");
    v17 = objc_opt_self(CAGradientLayer);
    v18 = (void *)swift_dynamicCastObjCClassUnconditional(v16, v17, 0, 0, 0);
    sub_100C96754(v18);

    sub_100972090((uint64_t)v21);
  }
  sub_100972090(a1);
  return sub_100972090((uint64_t)v23);
}

void (*Gradient.View.typedConfiguration.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  id v10;

  v3 = malloc(0xE0uLL);
  *a1 = v3;
  v3[27] = v1;
  v4 = v1 + OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration;
  swift_beginAccess(v1 + OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration, v3 + 24, 0, 0);
  v6 = *(void **)v4;
  v5 = *(_QWORD *)(v4 + 8);
  v8 = *(_QWORD *)(v4 + 16);
  v7 = *(_QWORD *)(v4 + 24);
  v3[16] = *(_QWORD *)v4;
  v3[17] = v5;
  v3 += 16;
  v3[2] = v8;
  v3[3] = v7;
  v9 = *(_OWORD *)(v4 + 48);
  *((_OWORD *)v3 + 2) = *(_OWORD *)(v4 + 32);
  *((_OWORD *)v3 + 3) = v9;
  swift_bridgeObjectRetain();
  v10 = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_100C96FE0;
}

void sub_100C96FE0(uint64_t *a1, char a2)
{
  uint64_t v2;
  _OWORD *v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;

  v2 = *a1;
  v3 = (_OWORD *)(*a1 + 128);
  v4 = *(_OWORD *)(*a1 + 144);
  if ((a2 & 1) != 0)
  {
    *(_OWORD *)v2 = *v3;
    *(_OWORD *)(v2 + 16) = v4;
    v5 = v3[3];
    *(_OWORD *)(v2 + 32) = v3[2];
    *(_OWORD *)(v2 + 48) = v5;
    sub_100C96C00((void **)v2);
    Gradient.View.typedConfiguration.setter(v2);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_OWORD *)(v2 + 64) = *v3;
    *(_OWORD *)(v2 + 80) = v4;
    v6 = v3[3];
    *(_OWORD *)(v2 + 96) = v3[2];
    *(_OWORD *)(v2 + 112) = v6;
    Gradient.View.typedConfiguration.setter(v2 + 64);
  }
  free((void *)v2);
}

id sub_100C970EC(_OWORD *a1)
{
  objc_class *v1;
  __int128 v3;
  __int128 v4;
  char *v5;
  char *v6;
  __int128 v7;
  __int128 v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  objc_super v14;
  _OWORD v15[4];

  v3 = a1[1];
  v15[0] = *a1;
  v15[1] = v3;
  v4 = a1[3];
  v15[2] = a1[2];
  v15[3] = v4;
  v5 = (char *)objc_allocWithZone(v1);
  v6 = &v5[OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration];
  v7 = a1[1];
  *(_OWORD *)v6 = *a1;
  *((_OWORD *)v6 + 1) = v7;
  v8 = a1[3];
  *((_OWORD *)v6 + 2) = a1[2];
  *((_OWORD *)v6 + 3) = v8;
  sub_100C96C00((void **)v15);
  v14.receiver = v5;
  v14.super_class = v1;
  v9 = objc_msgSendSuper2(&v14, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v10 = objc_msgSend(v9, "layer");
  v11 = objc_opt_self(CAGradientLayer);
  v12 = (void *)swift_dynamicCastObjCClassUnconditional(v10, v11, 0, 0, 0);
  sub_100C96754(v12);
  sub_100972090((uint64_t)v15);

  return v9;
}

uint64_t sub_100C971DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  id v9;
  _BYTE v11[24];

  v3 = v1 + OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration;
  swift_beginAccess(v3, v11, 0, 0);
  v5 = *(void **)v3;
  v4 = *(_QWORD *)(v3 + 8);
  v7 = *(_QWORD *)(v3 + 16);
  v6 = *(_QWORD *)(v3 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v6;
  v8 = *(_OWORD *)(v3 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v3 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRetain();
  v9 = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_100C97260(_OWORD *a1)
{
  __int128 v1;
  __int128 v2;
  _OWORD v4[4];

  v1 = a1[1];
  v4[0] = *a1;
  v4[1] = v1;
  v2 = a1[3];
  v4[2] = a1[2];
  v4[3] = v2;
  return Gradient.View.typedConfiguration.setter((uint64_t)v4);
}

uint64_t sub_100C97290@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  id v10;
  _BYTE v12[24];

  a1[3] = (uint64_t)&type metadata for Gradient;
  a1[4] = sub_100C97B8C();
  v3 = swift_allocObject(&unk_10110CA10, 80, 7);
  *a1 = v3;
  v4 = v1 + OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration;
  swift_beginAccess(v1 + OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration, v12, 0, 0);
  v6 = *(void **)v4;
  v5 = *(_QWORD *)(v4 + 8);
  v8 = *(_QWORD *)(v4 + 16);
  v7 = *(_QWORD *)(v4 + 24);
  *(_QWORD *)(v3 + 16) = *(_QWORD *)v4;
  *(_QWORD *)(v3 + 24) = v5;
  *(_QWORD *)(v3 + 32) = v8;
  *(_QWORD *)(v3 + 40) = v7;
  v9 = *(_OWORD *)(v4 + 48);
  *(_OWORD *)(v3 + 48) = *(_OWORD *)(v4 + 32);
  *(_OWORD *)(v3 + 64) = v9;
  swift_bridgeObjectRetain();
  v10 = v6;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_100C97344(_QWORD *a1)
{
  uint64_t v2;
  _OWORD v4[4];
  _BYTE v5[40];
  _OWORD v6[4];

  sub_100064C78((uint64_t)a1, (uint64_t)v5);
  v2 = sub_100007E8C(&qword_1011DECE0);
  swift_dynamicCast(v4, v5, v2, &type metadata for Gradient, 7);
  v6[0] = v4[0];
  v6[1] = v4[1];
  v6[2] = v4[2];
  v6[3] = v4[3];
  Gradient.View.typedConfiguration.setter((uint64_t)v6);
  return _s5Music18DragDropToPlaylistV6OriginVwxx_0(a1);
}

void (*sub_100C973CC(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  id v11;

  v3 = malloc(0x158uLL);
  *a1 = v3;
  v3[42] = v1;
  v3[32] = &type metadata for Gradient;
  v3[33] = sub_100C97B8C();
  v4 = swift_allocObject(&unk_10110CA10, 80, 7);
  v3[29] = v4;
  v5 = v1 + OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration;
  swift_beginAccess(v5, v3 + 39, 0, 0);
  v7 = *(void **)v5;
  v6 = *(_QWORD *)(v5 + 8);
  v9 = *(_QWORD *)(v5 + 16);
  v8 = *(_QWORD *)(v5 + 24);
  *(_QWORD *)(v4 + 16) = *(_QWORD *)v5;
  *(_QWORD *)(v4 + 24) = v6;
  *(_QWORD *)(v4 + 32) = v9;
  *(_QWORD *)(v4 + 40) = v8;
  v10 = *(_OWORD *)(v5 + 48);
  *(_OWORD *)(v4 + 48) = *(_OWORD *)(v5 + 32);
  *(_OWORD *)(v4 + 64) = v10;
  swift_bridgeObjectRetain();
  v11 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_100C9749C;
}

void sub_100C9749C(void **a1, char a2)
{
  _OWORD *v2;
  _OWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;

  v2 = *a1;
  v3 = (char *)*a1 + 128;
  v4 = (uint64_t)*a1 + 192;
  v5 = (char *)*a1 + 232;
  if ((a2 & 1) != 0)
  {
    sub_100064C78((uint64_t)*a1 + 232, (uint64_t)(v2 + 17));
    sub_100064C78((uint64_t)(v2 + 17), v4);
    v6 = sub_100007E8C(&qword_1011DECE0);
    swift_dynamicCast(v3, v4, v6, &type metadata for Gradient, 7);
    v7 = v3[1];
    *v2 = *v3;
    v2[1] = v7;
    v8 = v3[3];
    v2[2] = v3[2];
    v2[3] = v8;
    Gradient.View.typedConfiguration.setter((uint64_t)v2);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0((_QWORD *)v2 + 34);
  }
  else
  {
    sub_100064C78((uint64_t)*a1 + 232, v4);
    v9 = sub_100007E8C(&qword_1011DECE0);
    swift_dynamicCast(v3, v4, v9, &type metadata for Gradient, 7);
    v10 = v3[1];
    v2[4] = *v3;
    v2[5] = v10;
    v11 = v3[3];
    v2[6] = v3[2];
    v2[7] = v11;
    Gradient.View.typedConfiguration.setter((uint64_t)(v2 + 4));
  }
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(v5);
  free(v2);
}

id sub_100C975A8()
{
  __int128 *v0;
  __int128 v1;
  __int128 v2;
  objc_class *v3;
  char *v4;
  char *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  objc_super v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;

  v1 = v0[1];
  v15 = *v0;
  v16 = v1;
  v2 = v0[3];
  v17 = v0[2];
  v18 = v2;
  v3 = (objc_class *)type metadata accessor for Gradient.View();
  v4 = (char *)objc_allocWithZone(v3);
  v5 = &v4[OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration];
  v6 = v18;
  v8 = v15;
  v7 = v16;
  *((_OWORD *)v5 + 2) = v17;
  *((_OWORD *)v5 + 3) = v6;
  *(_OWORD *)v5 = v8;
  *((_OWORD *)v5 + 1) = v7;
  sub_100C96C00((void **)&v15);
  v14.receiver = v4;
  v14.super_class = v3;
  v9 = objc_msgSendSuper2(&v14, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v10 = objc_msgSend(v9, "layer");
  v11 = objc_opt_self(CAGradientLayer);
  v12 = (void *)swift_dynamicCastObjCClassUnconditional(v10, v11, 0, 0, 0);
  sub_100C96754(v12);

  sub_100C97AE0(&qword_1011E5348, (uint64_t)&protocol conformance descriptor for Gradient.View);
  return v9;
}

uint64_t sub_100C976A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  id v7;

  v3 = *(void **)v1;
  v2 = *(_QWORD *)(v1 + 8);
  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v4;
  v6 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRetain();
  v7 = v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

BOOL sub_100C976F4(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[4];
  _OWORD v8[4];

  v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  v3 = a1[3];
  v7[2] = a1[2];
  v7[3] = v3;
  v4 = a2[1];
  v8[0] = *a2;
  v8[1] = v4;
  v5 = a2[3];
  v8[2] = a2[2];
  v8[3] = v5;
  return _s11MusicCoreUI8GradientV23__derived_struct_equalsySbAC_ACtFZ_0((uint64_t)v7, (uint64_t)v8);
}

uint64_t static Gradient.vertical(colors:locations:interpolations:)@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, __n128 *a4@<X8>)
{
  return sub_100C97764(a1, a2, a3, a4, (__n128)xmmword_100EE8B50, (__n128)xmmword_100EC53F0);
}

uint64_t static Gradient.horizontal(colors:locations:interpolations:)@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, __n128 *a4@<X8>)
{
  return sub_100C97764(a1, a2, a3, a4, (__n128)xmmword_100ED87A0, (__n128)xmmword_100EE8B60);
}

uint64_t sub_100C97764@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, __n128 *a4@<X8>, __n128 a5@<Q0>, __n128 a6@<Q1>)
{
  NSString *v6;

  a4->n128_u64[0] = (unint64_t)kCAGradientLayerAxial;
  a4->n128_u64[1] = a1;
  a4[1].n128_u64[0] = a2;
  a4[1].n128_u64[1] = a3;
  a4[2] = a5;
  a4[3] = a6;
  v6 = kCAGradientLayerAxial;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

Swift::Void __swiftcall Gradient.flip()()
{
  uint64_t v0;
  __int128 v1;

  v1 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 32) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 48) = v1;
}

__n128 Gradient.flipped()@<Q0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  __int128 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 result;
  __int128 v9;
  __n128 v10;

  v2 = v1;
  v4 = *((_QWORD *)v1 + 3);
  v5 = *((_QWORD *)v2 + 2);
  v9 = *v2;
  v10 = (__n128)v2[3];
  v6 = *((_QWORD *)v2 + 4);
  v7 = *((_QWORD *)v2 + 5);
  sub_100C96C00((void **)v2);
  *(_OWORD *)a1 = v9;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v4;
  result = v10;
  *(__n128 *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 48) = v6;
  *(_QWORD *)(a1 + 56) = v7;
  return result;
}

BOOL _s11MusicCoreUI8GradientV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  _BOOL8 result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  id v24;
  id v25;

  v4 = *(void **)a1;
  v24 = *(id *)a2;
  v25 = v4;
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v7 = v6;
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
  if (v5 == v8 && v7 == v9)
  {
    sub_1005518D0(&v25);
    sub_1005518D0(&v24);
    swift_bridgeObjectRelease_n(v7, 2);
    sub_100065200(&v24);
    sub_100065200(&v25);
LABEL_8:
    v14 = *(_QWORD *)(a1 + 8);
    v15 = *(_QWORD *)(a2 + 8);
    if (v14)
    {
      if (!v15)
        return 0;
      swift_bridgeObjectRetain();
      v16 = swift_bridgeObjectRetain();
      v17 = sub_100BC6A50(v16, v15);
      swift_bridgeObjectRelease(v14);
      swift_bridgeObjectRelease(v15);
      if ((v17 & 1) == 0)
        return 0;
    }
    else if (v15)
    {
      return 0;
    }
    v18 = *(_QWORD *)(a1 + 16);
    v19 = *(_QWORD *)(a2 + 16);
    if (v18)
    {
      if (!v19 || !sub_100BC6A64(v18, v19))
        return 0;
    }
    else if (v19)
    {
      return 0;
    }
    v20 = *(_QWORD *)(a1 + 24);
    v21 = *(_QWORD *)(a2 + 24);
    if (v20)
    {
      if (!v21)
        return 0;
      swift_bridgeObjectRetain();
      v22 = swift_bridgeObjectRetain();
      v23 = sub_100BC6AD0(v22, v21);
      swift_bridgeObjectRelease(v20);
      swift_bridgeObjectRelease(v21);
      if ((v23 & 1) == 0)
        return 0;
      return *(double *)(a1 + 32) == *(double *)(a2 + 32)
          && *(double *)(a1 + 40) == *(double *)(a2 + 40)
          && *(double *)(a1 + 48) == *(double *)(a2 + 48)
          && *(double *)(a1 + 56) == *(double *)(a2 + 56);
    }
    if (!v21)
      return *(double *)(a1 + 32) == *(double *)(a2 + 32)
          && *(double *)(a1 + 40) == *(double *)(a2 + 40)
          && *(double *)(a1 + 48) == *(double *)(a2 + 48)
          && *(double *)(a1 + 56) == *(double *)(a2 + 56);
    return 0;
  }
  v11 = v9;
  v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v7, v8, v9, 0);
  sub_1005518D0(&v25);
  sub_1005518D0(&v24);
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v11);
  sub_100065200(&v24);
  sub_100065200(&v25);
  result = 0;
  if ((v12 & 1) != 0)
    goto LABEL_8;
  return result;
}

unint64_t sub_100C97A24()
{
  unint64_t result;

  result = qword_1011E5300;
  if (!qword_1011E5300)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Gradient, &type metadata for Gradient);
    atomic_store(result, (unint64_t *)&qword_1011E5300);
  }
  return result;
}

uint64_t sub_100C97A68(uint64_t a1)
{
  uint64_t result;

  result = sub_100C97AE0(&qword_1011E5348, (uint64_t)&protocol conformance descriptor for Gradient.View);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for Gradient.View()
{
  return objc_opt_self(_TtCV11MusicCoreUI8Gradient4View);
}

uint64_t sub_100C97ABC()
{
  return sub_100C97AE0(&qword_1011E5350, (uint64_t)&protocol conformance descriptor for Gradient.View);
}

uint64_t sub_100C97AE0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for Gradient.View();
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100C97B1C(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_100C97B48();
  result = sub_100C97B8C();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_100C97B48()
{
  unint64_t result;

  result = qword_1011E5380;
  if (!qword_1011E5380)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Gradient, &type metadata for Gradient);
    atomic_store(result, (unint64_t *)&qword_1011E5380);
  }
  return result;
}

unint64_t sub_100C97B8C()
{
  unint64_t result;

  result = qword_1011E5388;
  if (!qword_1011E5388)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Gradient, &type metadata for Gradient);
    atomic_store(result, (unint64_t *)&qword_1011E5388);
  }
  return result;
}

uint64_t destroy for Gradient(uint64_t a1)
{

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
}

uint64_t initializeWithCopy for Gradient(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  id v7;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  v7 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Gradient(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v8);
  v9 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v9);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  return a1;
}

uint64_t assignWithTake for Gradient(uint64_t a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  v5 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];
  swift_bridgeObjectRelease(v5);
  v6 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v6;
  return a1;
}

ValueMetadata *type metadata accessor for Gradient()
{
  return &type metadata for Gradient;
}

uint64_t sub_100C97D78()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 80, 7);
}

uint64_t *UIImagePickerController.profileImagePickerProperties.unsafeMutableAddressor()
{
  if (qword_1011DE220 != -1)
    swift_once(&qword_1011DE220, sub_100C9B278);
  return &static UIImagePickerController.profileImagePickerProperties;
}

int *ImagePicker.init(pickedImage:sourceType:shouldPresent:didPickImage:editingControllerProperties:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v21;
  int *result;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  char *v27;

  *a9 = swift_getKeyPath(&unk_100EF1D50);
  v21 = sub_100007E8C(&qword_1011E4D50);
  swift_storeEnumTagMultiPayload(a9, v21, 0);
  result = (int *)type metadata accessor for ImagePicker(0);
  v23 = (_QWORD *)((char *)a9 + result[7]);
  v24 = result[9];
  v25 = (_QWORD *)((char *)a9 + result[5]);
  *v25 = a1;
  v25[1] = a2;
  v25[2] = a3;
  v26 = (_QWORD *)((char *)a9 + result[6]);
  *v26 = a4;
  v26[1] = a5;
  v26[2] = a6;
  v26[3] = a7;
  v27 = (char *)a9 + result[8];
  *(_QWORD *)v27 = a8;
  *((_QWORD *)v27 + 1) = a10;
  v27[16] = a11;
  *v23 = a12;
  v23[1] = a13;
  *(_QWORD *)((char *)a9 + v24) = a14;
  return result;
}

id ImagePicker.makeUIViewController(context:)()
{
  return objc_msgSend(objc_allocWithZone((Class)UIViewController), "init");
}

void ImagePicker.updateUIViewController(_:context:)(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  uint64_t v31;
  id v32;
  Class isa;
  id v34;
  uint64_t v35;
  void *v36;
  id v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  Class v46;
  Swift::OpaquePointer v47;
  id v48;
  id v49;
  void *v50;
  id v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  id v62;
  void *v63;
  void *v64;
  void *v65;
  id v66;
  void *v67;
  id v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  __int128 v79;
  _QWORD v80[2];

  v3 = v2;
  v76 = a2;
  v71 = type metadata accessor for PHPickerConfiguration.AssetRepresentationMode(0);
  v5 = *(_QWORD *)(v71 - 8);
  __chkstk_darwin();
  v7 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011E53C8);
  v8 = __chkstk_darwin();
  v10 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PHPickerConfiguration(0, v8);
  v72 = *(_QWORD *)(v11 - 8);
  v73 = v11;
  __chkstk_darwin();
  v13 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v75 = (char *)&v69 - v14;
  v74 = type metadata accessor for UTType(0);
  v15 = *(_QWORD *)(v74 - 8);
  __chkstk_darwin();
  v17 = (char *)&v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (int *)type metadata accessor for ImagePicker(0);
  v19 = v2 + v18[8];
  v20 = *(void **)v19;
  v21 = *(_QWORD *)(v19 + 8);
  LOBYTE(v19) = *(_BYTE *)(v19 + 16);
  v77 = v20;
  v78 = v21;
  LOBYTE(v79) = v19;
  v22 = sub_100007E8C(&qword_1011E53D0);
  Binding.wrappedValue.getter(v80, v22);
  if (LOBYTE(v80[0]) != 1)
    return;
  v23 = objc_msgSend(a1, "presentedViewController");

  if (v23)
    return;
  v70 = a1;
  v24 = v3 + v18[6];
  v25 = *(_QWORD *)(v24 + 8);
  v77 = *(void **)v24;
  v78 = v25;
  v79 = *(_OWORD *)(v24 + 16);
  v26 = sub_100007E8C(&qword_1011E53D8);
  Binding.wrappedValue.getter(v80, v26);
  if (v80[0])
  {
    if (v80[0] != 1)
    {
      v27 = v70;
      if (v80[0] != 2)
      {
        v65 = (void *)v80[1];
        v66 = objc_msgSend(v70, "view", swift_bridgeObjectRelease().n128_f64[0]);
        if (v66)
        {
          v67 = v66;
          v68 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
          objc_msgSend(v67, "setBackgroundColor:", v68);

          return;
        }
        goto LABEL_20;
      }
      v28 = objc_msgSend(v70, "view");
      if (v28)
      {
        v29 = v28;
        v30 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
        objc_msgSend(v29, "setBackgroundColor:", v30);

        v31 = sub_100007E8C(&qword_1011E53E0);
        *(_OWORD *)(swift_allocObject(v31, ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ *(_QWORD *)(v15 + 72), *(unsigned __int8 *)(v15 + 80) | 7)+ 16) = xmmword_100EA7AA0;
        static UTType.image.getter();
        v32 = objc_allocWithZone((Class)UIDocumentPickerViewController);
        isa = Array._bridgeToObjectiveC()().super.isa;
        v34 = objc_msgSend(v32, "initForOpeningContentTypes:asCopy:", isa, 1, swift_bridgeObjectRelease().n128_f64[0]);

        v35 = sub_100007E8C(&qword_1011E53E8);
        UIViewControllerRepresentableContext.coordinator.getter(&v77, v35);
        v36 = v77;
        objc_msgSend(v34, "setDelegate:", v77);

        objc_msgSend(v34, "_setAutomaticallyDismissesAfterCompletion:", 0);
        objc_msgSend(v27, "presentViewController:animated:completion:", v34, 1, 0);

        return;
      }
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
      return;
    }
    v48 = v70;
    v49 = objc_msgSend(v70, "view");
    if (!v49)
      goto LABEL_19;
    v50 = v49;
    v51 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
    objc_msgSend(v50, "setBackgroundColor:", v51);

    v52 = objc_msgSend((id)objc_opt_self(PHPhotoLibrary), "sharedPhotoLibrary");
    v53 = v75;
    v54 = PHPickerConfiguration.init(photoLibrary:)(v52);
    static PHPickerFilter.images.getter(v54);
    v55 = type metadata accessor for PHPickerFilter(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v10, 0, 1, v55);
    PHPickerConfiguration.filter.setter(v10);
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for PHPickerConfiguration.AssetRepresentationMode.current(_:), v71);
    PHPickerConfiguration.preferredAssetRepresentationMode.setter(v7);
    sub_10004A07C(0, &qword_1011E53F0, PHPickerViewController_ptr);
    v57 = v72;
    v56 = v73;
    (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v13, v53, v73);
    v58 = (void *)PHPickerViewController.init(configuration:)(v13);
    v59 = sub_100007E8C(&qword_1011E53E8);
    UIViewControllerRepresentableContext.coordinator.getter(&v77, v59);
    v60 = v77;
    v61 = sub_100048748(&qword_1011E53F8, type metadata accessor for ImagePicker.Coordinator, (uint64_t)&protocol conformance descriptor for ImagePicker.Coordinator);
    PHPickerViewController.delegate.setter(v60, v61);
    v62 = objc_msgSend(v58, "presentationController");
    if (v62)
    {
      v63 = v62;
      UIViewControllerRepresentableContext.coordinator.getter(&v77, v59);
      v64 = v77;
      objc_msgSend(v63, "setDelegate:", v77);

    }
    objc_msgSend(v48, "presentViewController:animated:completion:", v58, 1, 0);

    (*(void (**)(char *, uint64_t))(v57 + 8))(v75, v56);
  }
  else
  {
    v37 = objc_msgSend(objc_allocWithZone((Class)UIImagePickerController), "init");
    objc_msgSend(v37, "setSourceType:", 1);
    v38 = sub_100007E8C(&qword_1011E53E8);
    UIViewControllerRepresentableContext.coordinator.getter(&v77, v38);
    v39 = v77;
    objc_msgSend(v37, "setDelegate:", v77);

    objc_msgSend(v37, "setAllowsEditing:", 1);
    v40 = sub_100007E8C(&qword_1011DF560);
    v41 = swift_allocObject(v40, 48, 7);
    *(_OWORD *)(v41 + 16) = xmmword_100EA7AA0;
    v42 = static UTType.image.getter();
    v43 = UTType.identifier.getter(v42);
    v45 = v44;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v74);
    *(_QWORD *)(v41 + 32) = v43;
    *(_QWORD *)(v41 + 40) = v45;
    v46 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v37, "setMediaTypes:", v46, swift_bridgeObjectRelease().n128_f64[0]);

    v47._rawValue = *(void **)(v3 + v18[9]);
    if (v47._rawValue)
      UIImagePickerController.setProperties(_:)(v47);
    objc_msgSend(v70, "presentViewController:animated:completion:", v37, 1, 0);

  }
}

Swift::Void __swiftcall UIImagePickerController.setProperties(_:)(Swift::OpaquePointer a1)
{
  void *v1;
  id v3;
  void *v4;
  _QWORD *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  int64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  char v19;
  uint64_t v20;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v22;
  unint64_t v23;
  uint64_t v24;
  _BOOL8 v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  unint64_t v33;
  NSDictionary v34;
  id v35;
  _OWORD v36[2];
  __int128 v37;
  void *v38;
  _BYTE v39[40];

  v3 = objc_msgSend(v1, "_properties");
  v35 = v1;
  if (v3)
  {
    v4 = v3;
    v5 = (_QWORD *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v3, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  }
  else
  {
    v5 = 0;
  }
  v6 = (char *)a1._rawValue + 64;
  v7 = 1 << *((_BYTE *)a1._rawValue + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *((_QWORD *)a1._rawValue + 8);
  v10 = (unint64_t)(v7 + 63) >> 6;
  swift_bridgeObjectRetain();
  v11 = 0;
  while (1)
  {
    while (1)
    {
      v13 = v5;
      if (!v9)
        break;
      v14 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v15 = v14 | (v11 << 6);
      v5 = 0;
      if (v13)
        goto LABEL_26;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_42;
    if (v16 >= v10)
      break;
    v17 = *(_QWORD *)&v6[8 * v16];
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v10)
        break;
      v17 = *(_QWORD *)&v6[8 * v11];
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v10)
          break;
        v17 = *(_QWORD *)&v6[8 * v11];
        if (!v17)
        {
          v18 = v16 + 3;
          if (v18 >= v10)
            break;
          v17 = *(_QWORD *)&v6[8 * v18];
          if (!v17)
          {
            while (1)
            {
              v11 = v18 + 1;
              if (__OFADD__(v18, 1))
                goto LABEL_44;
              if (v11 >= v10)
                goto LABEL_37;
              v17 = *(_QWORD *)&v6[8 * v11];
              ++v18;
              if (v17)
                goto LABEL_25;
            }
          }
          v11 = v18;
        }
      }
    }
LABEL_25:
    v9 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
    v5 = 0;
    if (v13)
    {
LABEL_26:
      v19 = *(_BYTE *)(*((_QWORD *)a1._rawValue + 7) + v15);
      v20 = *(_QWORD *)(*((_QWORD *)a1._rawValue + 6) + 16 * v15 + 8);
      *(_QWORD *)&v37 = *(_QWORD *)(*((_QWORD *)a1._rawValue + 6) + 16 * v15);
      *((_QWORD *)&v37 + 1) = v20;
      swift_bridgeObjectRetain();
      AnyHashable.init<A>(_:)(&v37, &type metadata for String, &protocol witness table for String);
      v38 = &type metadata for Bool;
      LOBYTE(v37) = v19;
      sub_100048ABC(&v37, v36);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v13);
      v23 = sub_10079C294((uint64_t)v39);
      v24 = v13[2];
      v25 = (v22 & 1) == 0;
      v26 = v24 + v25;
      if (__OFADD__(v24, v25))
      {
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for AnyHashable);
        __break(1u);
        return;
      }
      v27 = v22;
      if (v13[3] >= v26)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v5 = v13;
          if ((v22 & 1) != 0)
            goto LABEL_7;
        }
        else
        {
          sub_100BCFCD4();
          v5 = v13;
          if ((v27 & 1) != 0)
            goto LABEL_7;
        }
      }
      else
      {
        sub_100BCEFF0(v26, isUniquelyReferenced_nonNull_native);
        v28 = sub_10079C294((uint64_t)v39);
        if ((v27 & 1) != (v29 & 1))
          goto LABEL_45;
        v23 = v28;
        v5 = v13;
        if ((v27 & 1) != 0)
        {
LABEL_7:
          v12 = (_QWORD *)(v5[7] + 32 * v23);
          _s5Music18DragDropToPlaylistV6OriginVwxx_0(v12);
          sub_100048ABC(v36, v12);
          goto LABEL_8;
        }
      }
      v5[(v23 >> 6) + 8] |= 1 << v23;
      sub_100051FEC((uint64_t)v39, v5[6] + 40 * v23);
      sub_100048ABC(v36, (_OWORD *)(v5[7] + 32 * v23));
      v30 = v5[2];
      v31 = __OFADD__(v30, 1);
      v32 = v30 + 1;
      if (v31)
        goto LABEL_43;
      v5[2] = v32;
LABEL_8:
      swift_bridgeObjectRelease();
      sub_10004FF2C((uint64_t)v39);
    }
  }
LABEL_37:
  v33 = swift_release().n128_u64[0];
  if (v5)
  {
    swift_bridgeObjectRetain();
    v34.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
    v33 = swift_bridgeObjectRelease().n128_u64[0];
  }
  else
  {
    v34.super.isa = 0;
  }
  objc_msgSend(v35, "_setProperties:", v34.super.isa, *(double *)&v33);
  swift_bridgeObjectRelease();

}

Swift::Void __swiftcall ImagePicker.Coordinator.imagePickerController(_:didFinishPickingMediaWithInfo:)(UIImagePickerController _, Swift::OpaquePointer didFinishPickingMediaWithInfo)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  NSString *v11;
  unint64_t v12;
  char v13;
  NSString *v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  void *v18;
  id v19;
  NSString *v20;
  unint64_t v21;
  char v22;
  Swift::String v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  Swift::String v27;
  Swift::String v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, __n128);
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  __n128 v36;
  id v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  id v49;
  void (*v50)(id, _QWORD);
  uint64_t v51;
  id v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  unint64_t v58;
  id v59;
  void *v60;
  id v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  void *v71;
  id v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD v77[2];
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  char v82;

  v3 = v2;
  v6 = type metadata accessor for ImagePicker(0);
  __chkstk_darwin();
  v8 = (char *)v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v10 = (char *)v77 - v9;
  if (*((_QWORD *)didFinishPickingMediaWithInfo._rawValue + 2))
  {
    v11 = UIImagePickerControllerEditedImage;
    v12 = sub_100A1FBBC((uint64_t)v11);
    if ((v13 & 1) != 0)
    {
      sub_10004FA40(*((_QWORD *)didFinishPickingMediaWithInfo._rawValue + 7) + 32 * v12, (uint64_t)&v78);

      if (*((_QWORD *)&v79 + 1))
      {
        sub_100048ABC(&v78, &v80);
        goto LABEL_13;
      }
    }
    else
    {
      v78 = 0u;
      v79 = 0u;

    }
    if (*((_QWORD *)didFinishPickingMediaWithInfo._rawValue + 2))
    {
      v14 = UIImagePickerControllerOriginalImage;
      v15 = sub_100A1FBBC((uint64_t)v14);
      if ((v16 & 1) != 0)
      {
        sub_10004FA40(*((_QWORD *)didFinishPickingMediaWithInfo._rawValue + 7) + 32 * v15, (uint64_t)&v80);
      }
      else
      {
        v80 = 0u;
        v81 = 0u;
      }

      goto LABEL_12;
    }
  }
  else
  {
    v78 = 0u;
    v79 = 0u;
  }
  v80 = 0u;
  v81 = 0u;
LABEL_12:
  sub_10004FF60((uint64_t)&v78, &qword_1011E0700);
LABEL_13:
  if (!*((_QWORD *)&v81 + 1))
  {
    sub_10004FF60((uint64_t)&v80, &qword_1011E0700);
LABEL_19:
    *(_QWORD *)&v80 = 0;
    *((_QWORD *)&v80 + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(61);
    v23._countAndFlagsBits = 0xD00000000000002ALL;
    v23._object = (void *)0x8000000100E57590;
    String.append(_:)(v23);
    _s3__C7InfoKeyVMa_0(0);
    v25 = v24;
    v26 = sub_100048748(&qword_1011E5400, (uint64_t (*)(uint64_t))_s3__C7InfoKeyVMa_0, (uint64_t)&unk_100EE9D5C);
    v27._countAndFlagsBits = Dictionary.description.getter(didFinishPickingMediaWithInfo._rawValue, v25, (char *)&type metadata for Any + 8, v26);
    String.append(_:)(v27);
    swift_bridgeObjectRelease();
    v28._object = (void *)0x8000000100E575C0;
    v28._countAndFlagsBits = 0xD000000000000011;
    String.append(_:)(v28);
    v29 = *((_QWORD *)&v80 + 1);
    v30 = *(void (**)(uint64_t, uint64_t, __n128))(v3
                                                          + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_pickHandler);
    if (v30)
    {
      v31 = v80;
      v32 = *(_QWORD *)(v3 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_pickHandler + 8);
      v33 = sub_100C9B308();
      v34 = swift_allocError(&type metadata for ImagePicker.Coordinator.ImagePickerError, v33, 0, 0);
      *v35 = v31;
      v35[1] = v29;
      v36 = swift_retain();
      v30(v34, 1, v36);
      sub_10004BA30((uint64_t)v30, v32);
      swift_errorRelease(v34);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    return;
  }
  v17 = sub_10004A07C(0, &qword_1011E5410, UIImage_ptr);
  if ((swift_dynamicCast(&v78, &v80, (char *)&type metadata for Any + 8, v17, 6) & 1) == 0)
    goto LABEL_19;
  v18 = (void *)v78;
  if (!*((_QWORD *)didFinishPickingMediaWithInfo._rawValue + 2))
  {
    v80 = 0u;
    v81 = 0u;
    v37 = (id)v78;
    if (*((_QWORD *)&v81 + 1))
      goto LABEL_27;
LABEL_24:
    sub_10004FF60((uint64_t)&v80, &qword_1011E0700);
LABEL_29:
    v48 = 1;
    v41 = 0;
    v43 = 0;
    v45 = 0;
    v47 = 0;
    goto LABEL_30;
  }
  v19 = (id)v78;
  v20 = UIImagePickerControllerCropRect;
  v21 = sub_100A1FBBC((uint64_t)v20);
  if ((v22 & 1) != 0)
  {
    sub_10004FA40(*((_QWORD *)didFinishPickingMediaWithInfo._rawValue + 7) + 32 * v21, (uint64_t)&v80);
  }
  else
  {
    v80 = 0u;
    v81 = 0u;
  }

  if (!*((_QWORD *)&v81 + 1))
    goto LABEL_24;
LABEL_27:
  v38 = sub_10004A07C(0, (unint64_t *)&unk_1011E5418, NSValue_ptr);
  if ((swift_dynamicCast(&v78, &v80, (char *)&type metadata for Any + 8, v38, 6) & 1) == 0)
    goto LABEL_29;
  v39 = (void *)v78;
  objc_msgSend((id)v78, "CGRectValue");
  v41 = v40;
  v43 = v42;
  v45 = v44;
  v47 = v46;

  v48 = 0;
LABEL_30:
  *(_QWORD *)&v80 = v41;
  *((_QWORD *)&v80 + 1) = v43;
  *(_QWORD *)&v81 = v45;
  *((_QWORD *)&v81 + 1) = v47;
  v82 = v48;
  v49 = UIImage.centerCropIfNeeded(imageRect:)((uint64_t)&v80);

  v50 = *(void (**)(id, _QWORD))(v3 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_pickHandler);
  if (v50)
  {
    v51 = *(_QWORD *)(v3 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_pickHandler + 8);
    v52 = v49;
    sub_100048AAC((uint64_t)v50, v51);
    v50(v49, 0);
    sub_10004BA30((uint64_t)v50, v51);

  }
  v53 = v3 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_imagePicker;
  sub_100C9B34C(v53, (uint64_t)v10);
  v54 = &v10[*(int *)(v6 + 24)];
  v55 = *((_QWORD *)v54 + 1);
  *(_QWORD *)&v78 = *(_QWORD *)v54;
  *((_QWORD *)&v78 + 1) = v55;
  v79 = *((_OWORD *)v54 + 1);
  v56 = sub_100007E8C(&qword_1011E53D8);
  Binding.wrappedValue.getter(v77, v56);
  v58 = v77[0];
  v57 = (void *)v77[1];
  sub_100C9B390((uint64_t)v10);
  if (v58 - 1 < 2)
  {
    v59 = -[objc_class presentingViewController](_.super.super.super.super.isa, "presentingViewController");
    if (!v59
      || (v60 = v59,
          v61 = objc_msgSend(v59, "presentingViewController"),
          v60,
          !v61))
    {

      return;
    }
    sub_100C9B34C(v53, (uint64_t)v8);
    v62 = &v8[*(int *)(v6 + 32)];
    v63 = *(_QWORD *)v62;
    v64 = *((_QWORD *)v62 + 1);
    LOBYTE(v62) = v62[16];
    *(_QWORD *)&v78 = v63;
    *((_QWORD *)&v78 + 1) = v64;
    LOBYTE(v79) = (_BYTE)v62;
    LOBYTE(v77[0]) = 0;
    v65 = sub_100007E8C(&qword_1011E53D0);
    Binding.wrappedValue.setter(v77, v65);
    objc_msgSend(v61, "dismissViewControllerAnimated:completion:", 1, 0);

    goto LABEL_42;
  }
  if (!v58)
  {
    sub_100C9B34C(v53, (uint64_t)v8);
    v66 = &v8[*(int *)(v6 + 32)];
    v67 = *(_QWORD *)v66;
    v68 = *((_QWORD *)v66 + 1);
    LOBYTE(v66) = v66[16];
    *(_QWORD *)&v78 = v67;
    *((_QWORD *)&v78 + 1) = v68;
    LOBYTE(v79) = (_BYTE)v66;
    LOBYTE(v77[0]) = 0;
    v69 = sub_100007E8C(&qword_1011E53D0);
    Binding.wrappedValue.setter(v77, v69);
    -[objc_class dismissViewControllerAnimated:completion:](_.super.super.super.super.isa, "dismissViewControllerAnimated:completion:", 1, 0);

LABEL_42:
    sub_100C9B390((uint64_t)v8);
    return;
  }
  v70 = -[objc_class presentingViewController](_.super.super.super.super.isa, "presentingViewController");
  if (v70)
  {
    v71 = v70;
    v72 = objc_msgSend(v70, "presentingViewController");

    if (v72)
    {
      sub_100C9B34C(v53, (uint64_t)v8);
      v73 = &v8[*(int *)(v6 + 32)];
      v74 = *(_QWORD *)v73;
      v75 = *((_QWORD *)v73 + 1);
      LOBYTE(v73) = v73[16];
      *(_QWORD *)&v78 = v74;
      *((_QWORD *)&v78 + 1) = v75;
      LOBYTE(v79) = (_BYTE)v73;
      LOBYTE(v77[0]) = 0;
      v76 = sub_100007E8C(&qword_1011E53D0);
      Binding.wrappedValue.setter(v77, v76);
      objc_msgSend(v72, "dismissViewControllerAnimated:completion:", 1, 0);

      sub_1004FFB58(v58, v57);
      goto LABEL_42;
    }
  }

  sub_1004FFB58(v58, v57);
}

id UIImage.centerCropIfNeeded(imageRect:)(uint64_t a1)
{
  double v1;
  double v2;
  double v3;
  double v4;
  id result;
  id v6;
  uint64_t v7;
  double v8;
  _BYTE v9[16];
  double v10;
  double v11;
  char v12;

  sub_100C07934(a1, (uint64_t)v9);
  if ((v12 & 1) != 0)
  {
    objc_msgSend(v6, "size");
    v2 = v1;
    v4 = v3;
  }
  else
  {
    v2 = v10;
    v4 = v11;
  }
  v8 = v4;
  v7 = 0;
  if ((static ApproximatelyEquatable.!=~ infix(_:_:)(&v8, &v7, &type metadata for CGFloat) & 1) == 0)
    return v6;
  if (vabdd_f64(1.0, v2 / v4) <= 0.05)
    return v6;
  result = (id)UIImage.byCroppingToUniformCenter()();
  if (!result)
    return v6;
  return result;
}

Swift::Void __swiftcall ImagePicker.Coordinator.imagePickerControllerDidCancel(_:)(UIImagePickerController a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  double v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  Class isa;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  _QWORD v33[2];

  v3 = type metadata accessor for ImagePicker(0);
  __chkstk_darwin();
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v6 = __chkstk_darwin().n128_u64[0];
  v8 = (char *)&v28 - v7;
  v9 = -[objc_class presentingViewController](a1.super.super.super.super.isa, "presentingViewController", v6);
  if (v9)
  {
    v10 = v9;
    objc_opt_self(PHPickerViewController);
    v11 = swift_dynamicCastObjCClass(v10);
    if (v11)
    {
      v12 = (uint64_t *)(v1 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_selectedPhotoIdentifier);
      v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_selectedPhotoIdentifier + 8);
      if (v13)
      {
        v14 = (void *)v11;
        v29 = *v12;
        v15 = sub_100007E8C(&qword_1011DF560);
        v16 = swift_allocObject(v15, 48, 7);
        *(_OWORD *)(v16 + 16) = xmmword_100EA7AA0;
        *(_QWORD *)(v16 + 32) = v29;
        *(_QWORD *)(v16 + 40) = v13;
        swift_bridgeObjectRetain();
        isa = Array._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v14, "deselectAssetsWithIdentifiers:", isa, swift_bridgeObjectRelease().n128_f64[0]);

        *v12 = 0;
        v12[1] = 0;
        objc_msgSend(v14, "setModalInPresentation:", 0, swift_bridgeObjectRelease().n128_f64[0]);
      }
    }

  }
  v18 = v1 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_imagePicker;
  sub_100C9B34C(v1 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_imagePicker, (uint64_t)v8);
  v19 = &v8[*(int *)(v3 + 24)];
  v20 = *((_QWORD *)v19 + 1);
  v30 = *(_QWORD *)v19;
  v31 = v20;
  v32 = *((_OWORD *)v19 + 1);
  v21 = sub_100007E8C(&qword_1011E53D8);
  Binding.wrappedValue.getter(v33, v21);
  v22 = v33[0];
  v23 = (void *)v33[1];
  sub_100C9B390((uint64_t)v8);
  if (v22 - 1 >= 2)
  {
    if (!v22)
    {
      sub_100C9B34C(v18, (uint64_t)v5);
      v24 = &v5[*(int *)(v3 + 32)];
      v25 = *(_QWORD *)v24;
      v26 = *((_QWORD *)v24 + 1);
      LOBYTE(v24) = v24[16];
      v30 = v25;
      v31 = v26;
      LOBYTE(v32) = (_BYTE)v24;
      LOBYTE(v33[0]) = 0;
      v27 = sub_100007E8C(&qword_1011E53D0);
      Binding.wrappedValue.setter(v33, v27);
      -[objc_class dismissViewControllerAnimated:completion:](a1.super.super.super.super.isa, "dismissViewControllerAnimated:completion:", 1, 0);
      sub_100C9B390((uint64_t)v5);
      return;
    }
    sub_1004FFB58(v22, v23);
  }
  -[objc_class dismissViewControllerAnimated:completion:](a1.super.super.super.super.isa, "dismissViewControllerAnimated:completion:", 1, 0);
}

Swift::Void __swiftcall ImagePicker.Coordinator.picker(_:didFinishPicking:)(PHPickerViewController _, Swift::OpaquePointer didFinishPicking)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  Class v23;
  void *v24;
  id v25;
  objc_class *v26;
  void *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  Class isa;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  char v39;

  v5 = type metadata accessor for ImagePicker(0);
  __chkstk_darwin();
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PHPickerResult(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin();
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for UTType(0);
  v14 = __chkstk_darwin();
  v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*((_QWORD *)didFinishPicking._rawValue + 2))
  {
    v17 = *(unsigned __int8 *)(v9 + 80);
    v33 = v2;
    isa = _.super.super.super.isa;
    v18 = (v17 + 32) & ~v17;
    v19 = (char *)didFinishPicking._rawValue + v18;
    v35 = v12;
    v20 = v13;
    v21 = (void *)PHPickerResult.itemProvider.getter(v14);
    static UTType.image.getter();
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))((char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v19, v8);
    v22 = swift_allocObject(&unk_10110CA98, v18 + v10, v17 | 7);
    v24 = v33;
    v23 = isa;
    *(_QWORD *)(v22 + 16) = v33;
    *(_QWORD *)(v22 + 24) = v23;
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v22 + v18, v11, v8);
    v25 = v24;
    v26 = v23;
    v27 = (void *)NSItemProvider.loadDataRepresentation(for:completionHandler:)(v16, sub_100C9B530, v22);
    swift_release();

    (*(void (**)(char *, uint64_t))(v20 + 8))(v16, v35);
  }
  else
  {
    sub_100C9B34C((uint64_t)v2 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_imagePicker, (uint64_t)v7);
    v28 = &v7[*(int *)(v5 + 32)];
    v29 = *(_QWORD *)v28;
    v30 = *((_QWORD *)v28 + 1);
    LOBYTE(v28) = v28[16];
    v37 = v29;
    v38 = v30;
    v39 = (char)v28;
    v36 = 0;
    v31 = sub_100007E8C(&qword_1011E53D0);
    Binding.wrappedValue.setter(&v36, v31);
    -[objc_class dismissViewControllerAnimated:completion:](_.super.super.super.isa, "dismissViewControllerAnimated:completion:", 1, 0);
    sub_100C9B390((uint64_t)v7);
  }
}

double sub_100C996A4(uint64_t a1, unint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  double result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;

  v32 = a5;
  v30 = a1;
  v11 = type metadata accessor for PHPickerResult(0);
  v12 = *(_QWORD *)(v11 - 8);
  v31 = v11;
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin();
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011E0490);
  __chkstk_darwin();
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a6, v11);
  type metadata accessor for MainActor(0);
  v18 = a2;
  sub_1000A0168(a1, a2);
  v19 = a3;
  swift_errorRetain(a3);
  v20 = a4;
  v21 = v32;
  v23 = static MainActor.shared.getter(v22);
  v24 = *(unsigned __int8 *)(v12 + 80);
  v25 = (v24 + 72) & ~v24;
  v26 = (char *)swift_allocObject(&unk_10110CC08, v25 + v13, v24 | 7);
  *((_QWORD *)v26 + 2) = v23;
  *((_QWORD *)v26 + 3) = &protocol witness table for MainActor;
  v27 = v31;
  *((_QWORD *)v26 + 4) = v30;
  *((_QWORD *)v26 + 5) = v18;
  *((_QWORD *)v26 + 6) = v19;
  *((_QWORD *)v26 + 7) = v20;
  *((_QWORD *)v26 + 8) = v21;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v26[v25], v14, v27);
  sub_100BF76B8((uint64_t)v16, (uint64_t)&unk_1011E5698, (uint64_t)v26);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100C9985C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v8[7] = a8;
  v8[8] = v14;
  v8[5] = a6;
  v8[6] = a7;
  v8[3] = a4;
  v8[4] = a5;
  v9 = type metadata accessor for MainActor(0);
  v8[9] = static MainActor.shared.getter(v10);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  return swift_task_switch(sub_100C998D8, v11, v12);
}

uint64_t sub_100C998D8()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  id v4;
  Class isa;
  UIImage *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  NSData *v11;
  NSData *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  double v16;
  double v17;
  double v18;
  double v19;
  id v20;
  void *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  Swift::String v27;
  void (*v28)(uint64_t, uint64_t, __n128);
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  __n128 v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  Class v43;

  v1 = *(_QWORD *)(v0 + 32);
  swift_release();
  if (v1 >> 60 != 15)
  {
    v2 = *(_QWORD *)(v0 + 24);
    v3 = *(_QWORD *)(v0 + 32);
    v4 = objc_allocWithZone((Class)UIImage);
    sub_100079DE4(v2, v3);
    isa = Data._bridgeToObjectiveC()().super.isa;
    v6 = (UIImage *)objc_msgSend(v4, "initWithData:", isa);

    if (v6)
    {
      v7 = *(_QWORD *)(v0 + 48);
      v8 = PHPickerResult.assetIdentifier.getter();
      v9 = (uint64_t *)(v7 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_selectedPhotoIdentifier);
      *v9 = v8;
      v9[1] = v10;
      swift_bridgeObjectRelease();
      v11 = UIImagePNGRepresentation(v6);
      if (v11)
      {
        v12 = v11;
        v13 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v11);
        v15 = v14;

        v16 = UIImage.centeredSquareCropRect.getter();
        v20 = sub_100C9A47C(v16, v17, v18, v19);
        if (v20)
        {
          v21 = v20;
          v23 = *(_QWORD *)(v0 + 24);
          v22 = *(_QWORD *)(v0 + 32);
          objc_msgSend(*(id *)(v0 + 56), "presentViewController:animated:completion:", v20, 1, 0);
          objc_msgSend(v21, "becomeFirstResponder");
          sub_1000822B4(v23, v22);

        }
        else
        {
          sub_1000822B4(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
        }

        sub_1000652DC(v13, v15);
      }
      else
      {
        sub_1000822B4(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));

      }
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    sub_1000822B4(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  }
  v24 = *(_QWORD *)(v0 + 40);
  v25 = *(_QWORD *)(v0 + 48);
  _StringGuts.grow(_:)(49);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 16) = v24;
  swift_errorRetain(v24);
  v26 = sub_100007E8C((uint64_t *)&unk_1011E56A0);
  v27._countAndFlagsBits = String.init<A>(describing:)(v0 + 16, v26);
  String.append(_:)(v27);
  swift_bridgeObjectRelease();
  v28 = *(void (**)(uint64_t, uint64_t, __n128))(v25
                                                        + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_pickHandler);
  if (v28)
  {
    v29 = *(_QWORD *)(v25 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_pickHandler + 8);
    v30 = sub_100C9B308();
    v31 = swift_allocError(&type metadata for ImagePicker.Coordinator.ImagePickerError, v30, 0, 0);
    *v32 = 0xD00000000000002FLL;
    v32[1] = 0x8000000100E577C0;
    v33 = swift_retain();
    v28(v31, 1, v33);
    sub_10004BA30((uint64_t)v28, v29);
    swift_errorRelease(v31);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v34 = *(void **)(v0 + 56);
  v35 = sub_100C9A58C();
  objc_msgSend(v34, "presentViewController:animated:completion:", v35, 1, 0);

  v36 = PHPickerResult.assetIdentifier.getter();
  if (v37)
  {
    v38 = v36;
    v39 = v37;
    v40 = *(void **)(v0 + 56);
    v41 = sub_100007E8C(&qword_1011DF560);
    v42 = swift_allocObject(v41, 48, 7);
    *(_OWORD *)(v42 + 16) = xmmword_100EA7AA0;
    *(_QWORD *)(v42 + 32) = v38;
    *(_QWORD *)(v42 + 40) = v39;
    v43 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v40, "deselectAssetsWithIdentifiers:", v43, swift_bridgeObjectRelease().n128_f64[0]);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double UIImage.centeredSquareCropRect.getter()
{
  void *v0;
  double v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  CGRect v26;
  CGRect v27;

  objc_msgSend(v0, "size");
  v2 = v1;
  objc_msgSend(v0, "size");
  v4 = v3;
  objc_msgSend(v0, "size");
  v6 = v5;
  objc_msgSend(v0, "size");
  v8 = v7;
  objc_msgSend(v0, "size");
  v10 = v9;
  v12 = v11;
  objc_msgSend(v0, "size");
  v14 = (v10 - v13) * 0.5 + 0.0;
  v16 = (v12 - v15) * 0.5 + 0.0;
  if (v6 < v8)
    v17 = v16;
  else
    v17 = 0.0;
  if (v6 < v8)
    v18 = 0.0;
  else
    v18 = v14;
  if (v4 >= v2)
    v19 = v2;
  else
    v19 = v4;
  v20 = v19;
  v26 = CGRectIntegral(*(CGRect *)(&v17 - 1));
  x = v26.origin.x;
  y = v26.origin.y;
  width = v26.size.width;
  height = v26.size.height;
  CGRectGetWidth(v26);
  v27.origin.x = x;
  v27.origin.y = y;
  v27.size.width = width;
  v27.size.height = height;
  CGRectGetHeight(v27);
  return x;
}

Swift::Void __swiftcall ImagePicker.Coordinator.documentPicker(_:didPickDocumentsAt:)(UIDocumentPickerViewController _, Swift::OpaquePointer didPickDocumentsAt)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  objc_class *isa;
  uint64_t v17;
  id v18;
  NSString v19;
  UIImage *v20;
  id v21;
  void *v22;
  NSData *v23;
  NSData *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  double v28;
  double v29;
  double v30;
  double v31;
  id v32;
  void *v33;
  Swift::String v34;
  Swift::String v35;
  Swift::String v36;
  unint64_t v37;
  void (*v38)(uint64_t, uint64_t, __n128);
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  __n128 v44;
  char *v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  unint64_t v53;
  char v54;

  v3 = v2;
  v6 = type metadata accessor for ImagePicker(0);
  __chkstk_darwin();
  v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011DE770);
  __chkstk_darwin();
  v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin();
  v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*((_QWORD *)didPickDocumentsAt._rawValue + 2))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v12 + 56))(v10, 1, 1, v11, v13);
    goto LABEL_9;
  }
  (*(void (**)(char *, char *, uint64_t, __n128))(v12 + 16))(v10, (char *)didPickDocumentsAt._rawValue+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)), v11, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
LABEL_9:
    sub_10004FF60((uint64_t)v10, &qword_1011DE770);
LABEL_10:
    v52 = 0;
    v53 = 0xE000000000000000;
    _StringGuts.grow(_:)(59);
    v34._countAndFlagsBits = 0xD000000000000025;
    v34._object = (void *)0x8000000100E575E0;
    String.append(_:)(v34);
    v35._countAndFlagsBits = Array.description.getter(didPickDocumentsAt._rawValue, v11);
    String.append(_:)(v35);
    swift_bridgeObjectRelease();
    v36._object = (void *)0x8000000100E57610;
    v36._countAndFlagsBits = 0xD000000000000014;
    String.append(_:)(v36);
    v37 = v53;
    v38 = *(void (**)(uint64_t, uint64_t, __n128))(v3
                                                          + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_pickHandler);
    if (v38)
    {
      v39 = v52;
      v40 = *(_QWORD *)(v3 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_pickHandler + 8);
      v41 = sub_100C9B308();
      v42 = swift_allocError(&type metadata for ImagePicker.Coordinator.ImagePickerError, v41, 0, 0);
      *v43 = v39;
      v43[1] = v37;
      v44 = swift_retain();
      v38(v42, 1, v44);
      sub_10004BA30((uint64_t)v38, v40);
      swift_errorRelease(v42);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    sub_100C9B34C(v3 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_imagePicker, (uint64_t)v8);
    v45 = &v8[*(int *)(v6 + 32)];
    v46 = *(_QWORD *)v45;
    v47 = *((_QWORD *)v45 + 1);
    LOBYTE(v45) = v45[16];
    v52 = v46;
    v53 = v47;
    v54 = (char)v45;
    v51 = 0;
    v48 = sub_100007E8C(&qword_1011E53D0);
    Binding.wrappedValue.setter(&v51, v48);
    -[objc_class dismissViewControllerAnimated:completion:](_.super.super.super.isa, "dismissViewControllerAnimated:completion:", 1, 0);
    sub_100C9B390((uint64_t)v8);
    return;
  }
  v50 = v3;
  isa = _.super.super.super.isa;
  v17 = (*(uint64_t (**)(char *, char *, uint64_t))(v12 + 32))(v15, v10, v11);
  URL.path.getter(v17);
  v18 = objc_allocWithZone((Class)UIImage);
  v19 = String._bridgeToObjectiveC()();
  v20 = (UIImage *)objc_msgSend(v18, "initWithContentsOfFile:", v19, swift_bridgeObjectRelease().n128_f64[0]);

  if (!v20)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    _.super.super.super.isa = isa;
    v3 = v50;
    goto LABEL_10;
  }
  v21 = -[objc_class view](isa, "view");
  if (v21)
  {
    v22 = v21;
    objc_msgSend(v21, "endEditing:", 1);

    v23 = UIImagePNGRepresentation(v20);
    if (!v23)
    {

      goto LABEL_17;
    }
    v24 = v23;
    v25 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v23);
    v27 = v26;

    v28 = UIImage.centeredSquareCropRect.getter();
    v32 = sub_100C9A47C(v28, v29, v30, v31);
    if (v32)
    {
      v33 = v32;
      -[objc_class presentViewController:animated:completion:](isa, "presentViewController:animated:completion:", v32, 1, 0);

      sub_1000652DC(v25, v27);
LABEL_17:
      (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
      return;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    sub_1000652DC(v25, v27);

  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall ImagePicker.Coordinator.documentPickerWasCancelled(_:)(UIDocumentPickerViewController a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  v3 = type metadata accessor for ImagePicker(0);
  __chkstk_darwin();
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100C9B34C(v1 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_imagePicker, (uint64_t)v5);
  v6 = &v5[*(int *)(v3 + 32)];
  v7 = *(_QWORD *)v6;
  v8 = *((_QWORD *)v6 + 1);
  LOBYTE(v6) = v6[16];
  v11 = v7;
  v12 = v8;
  v13 = (char)v6;
  HIBYTE(v10) = 0;
  v9 = sub_100007E8C(&qword_1011E53D0);
  Binding.wrappedValue.setter((char *)&v10 + 7, v9);
  -[objc_class dismissViewControllerAnimated:completion:](a1.super.super.super.isa, "dismissViewControllerAnimated:completion:", 1, 0);
  sub_100C9B390((uint64_t)v5);
}

Swift::Void __swiftcall ImagePicker.Coordinator.presentationControllerDidDismiss(_:)(UIPresentationController a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v2 = v1 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_imagePicker;
  v3 = (uint64_t *)(v2 + *(int *)(type metadata accessor for ImagePicker(0) + 32));
  v4 = *v3;
  v5 = v3[1];
  LOBYTE(v3) = *((_BYTE *)v3 + 16);
  v8 = v4;
  v9 = v5;
  v10 = (char)v3;
  v7 = 0;
  v6 = sub_100007E8C(&qword_1011E53D0);
  Binding.wrappedValue.setter(&v7, v6);
}

id sub_100C9A47C(double a1, double a2, double a3, double a4)
{
  uint64_t v4;
  id v9;
  Class isa;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;

  type metadata accessor for ImageEditingViewController();
  v9 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  isa = Data._bridgeToObjectiveC()().super.isa;
  v11 = objc_msgSend(v9, "_initWithSourceImageData:cropRect:", isa, a1, a2, a3, a4);

  if (v11)
  {
    v12 = v11;
    objc_msgSend(v12, "setDelegate:", v4);
    objc_msgSend(v12, "setModalInPresentation:", 1);
    v13 = v4 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_imagePicker;
    if (*(_QWORD *)(v13 + *(int *)(type metadata accessor for ImagePicker(0) + 36)))
    {
      v14 = swift_bridgeObjectRetain();
      UIImagePickerController.setProperties(_:)((Swift::OpaquePointer)v14);
      swift_bridgeObjectRelease();
    }

  }
  return v11;
}

id sub_100C9A58C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator____lazy_storage___downloadFailureAlertController;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator____lazy_storage___downloadFailureAlertController);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator____lazy_storage___downloadFailureAlertController);
  }
  else
  {
    v4 = sub_100C9A5E8();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_100C9A5E8()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE *v7;
  void (*v8)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v9;
  void (*v10)(_BYTE *, uint64_t);
  uint64_t v11;
  NSString v12;
  NSString v13;
  id v14;
  NSString v15;
  id v16;
  _BYTE v18[16];

  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v1 = &v18[-((v0 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v2 = type metadata accessor for String.LocalizationValue(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin();
  v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  v7 = &v18[-v6];
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000018, 0x8000000100E57750);
  v8 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v3 + 16);
  v8(v5, v7, v2);
  if (qword_1011DDE30 != -1)
    swift_once(&qword_1011DDE30, sub_100BA7618);
  v9 = qword_10124F040;
  static Locale.current.getter((id)qword_10124F040);
  String.init(localized:table:bundle:locale:comment:)(v5, 0, 0, v9, v1, 0, 0, 256);
  v10 = *(void (**)(_BYTE *, uint64_t))(v3 + 8);
  v10(v7, v2);
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000042, 0x8000000100E57770);
  v8(v5, v7, v2);
  v11 = qword_10124F040;
  static Locale.current.getter((id)qword_10124F040);
  String.init(localized:table:bundle:locale:comment:)(v5, 0, 0, v11, v1, 0, 0, 256);
  v10(v7, v2);
  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v12, v13, 1);

  String.okButtonTitle.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v16 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v15, 1, 0);

  objc_msgSend(v14, "addAction:", v16);
  return v14;
}

void ImagePicker.Coordinator.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("MusicCoreUI.Coordinator", 23, "init()", 6, 0);
  __break(1u);
}

id ImagePicker.Coordinator.__deallocating_deinit()
{
  return sub_10004D23C(0, (uint64_t (*)(void))type metadata accessor for ImagePicker.Coordinator);
}

char *ImagePicker.makeCoordinator()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  objc_class *v3;
  char *v4;
  char *v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (**v11)(void *, char);
  uint64_t v12;
  uint64_t v13;
  objc_super v15;

  v1 = *(_QWORD *)(type metadata accessor for ImagePicker(0) - 8);
  v2 = *(_QWORD *)(v1 + 64);
  __chkstk_darwin();
  sub_100C9B34C(v0, (uint64_t)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = (objc_class *)type metadata accessor for ImagePicker.Coordinator(0);
  v4 = (char *)objc_allocWithZone(v3);
  v5 = &v4[OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_pickHandler];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  v6 = &v4[OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_selectedPhotoIdentifier];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator____lazy_storage___downloadFailureAlertController] = 0;
  sub_100C9B34C((uint64_t)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)&v4[OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_imagePicker]);
  v15.receiver = v4;
  v15.super_class = v3;
  v7 = (char *)objc_msgSendSuper2(&v15, "init");
  sub_100C9B390((uint64_t)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100C9B34C(v0, (uint64_t)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(unsigned __int8 *)(v1 + 80);
  v9 = (v8 + 16) & ~v8;
  v10 = swift_allocObject(&unk_10110CAC0, v9 + v2, v8 | 7);
  sub_100C8D310((uint64_t)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9);
  v11 = (void (**)(void *, char))&v7[OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_pickHandler];
  v12 = *(_QWORD *)&v7[OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_pickHandler];
  v13 = *(_QWORD *)&v7[OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_pickHandler + 8];
  *v11 = sub_100C9B6C4;
  v11[1] = (void (*)(void *, char))v10;
  sub_10004BA30(v12, v13);
  return v7;
}

void sub_100C9AACC(void *a1, char a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  __int128 *v11;
  __int128 v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  void (*v16)(unint64_t, void *);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  __int128 v31;
  __int128 v32;
  unint64_t v33;
  void *v34;

  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    swift_errorRetain(a1);
    v22 = Logger.playlistCovers.unsafeMutableAddressor();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v22, v6);
    swift_errorRetain(a1);
    v23 = swift_errorRetain(a1);
    v24 = Logger.logObject.getter(v23);
    v25 = static os_log_type_t.error.getter(v24);
    if (os_log_type_enabled(v24, v25))
    {
      v26 = swift_slowAlloc(12, -1);
      v27 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v31 = v27;
      *(_DWORD *)v26 = 136446210;
      v33 = (unint64_t)a1;
      swift_errorRetain(a1);
      v28 = sub_100007E8C(&qword_1011DF550);
      v29 = (char *)String.init<A>(describing:)(&v33, v28);
      *(_QWORD *)(v26 + 4) = sub_100BBDE38(v29, v30, (uint64_t *)&v31);
      swift_bridgeObjectRelease();
      sub_1000652D0(a1, 1);
      sub_1000652D0(a1, 1);
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "ImagePicker failed with error: %{public}s", (uint8_t *)v26, 0xCu);
      swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v27, -1, -1);
      swift_slowDealloc(v26, -1, -1);

      sub_1000652D0(a1, 1);
    }
    else
    {
      sub_1000652D0(a1, 1);
      sub_1000652D0(a1, 1);
      swift_errorRelease(a1);

    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else
  {
    v10 = (int *)type metadata accessor for ImagePicker(0);
    v11 = (__int128 *)(a3 + v10[5]);
    v12 = *v11;
    v13 = *((_QWORD *)v11 + 2);
    v31 = v12;
    *(_QWORD *)&v32 = v13;
    v33 = (unint64_t)a1;
    v14 = a1;
    v15 = sub_100007E8C((uint64_t *)&unk_1011E5680);
    Binding.wrappedValue.setter(&v33, v15);
    v16 = *(void (**)(unint64_t, void *))(a3 + v10[7]);
    if (v16)
    {
      v17 = a3 + v10[6];
      v18 = *(_QWORD *)(v17 + 8);
      *(_QWORD *)&v31 = *(_QWORD *)v17;
      *((_QWORD *)&v31 + 1) = v18;
      v32 = *(_OWORD *)(v17 + 16);
      v19 = sub_100007E8C(&qword_1011E53D8);
      Binding.wrappedValue.getter(&v33, v19);
      v20 = v33;
      v21 = v34;
      v16(v33, v34);
      sub_1004FFB58(v20, v21);
    }
  }
}

uint64_t sub_100C9AD78(uint64_t a1, uint64_t a2)
{
  return _s11MusicCoreUI11ImagePickerV10SourceTypeO21__derived_enum_equalsySbAE_AEtFZ_0(*(_QWORD **)a1, *(void **)(a1 + 8), *(_QWORD **)a2, *(void **)(a2 + 8));
}

char *sub_100C9AD90@<X0>(char **a1@<X8>)
{
  char *result;

  result = ImagePicker.makeCoordinator()();
  *a1 = result;
  return result;
}

uint64_t sub_100C9ADB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_100048748((unint64_t *)&unk_1011E5670, type metadata accessor for ImagePicker, (uint64_t)&protocol conformance descriptor for ImagePicker);
  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100C9AE1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_100048748((unint64_t *)&unk_1011E5670, type metadata accessor for ImagePicker, (uint64_t)&protocol conformance descriptor for ImagePicker);
  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_100C9AE84(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100048748((unint64_t *)&unk_1011E5670, type metadata accessor for ImagePicker, (uint64_t)&protocol conformance descriptor for ImagePicker);
  UIViewControllerRepresentable.body.getter(a1, v2);
  __break(1u);
}

id ImageEditingViewController.__allocating_init(navigationBarClass:toolbarClass:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  uint64_t v3;
  uint64_t ObjCClassFromMetadata;

  v3 = a2;
  if (!a1)
  {
    ObjCClassFromMetadata = 0;
    if (!a2)
      return objc_msgSend(objc_allocWithZone(v2), "initWithNavigationBarClass:toolbarClass:", ObjCClassFromMetadata, v3);
    goto LABEL_3;
  }
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  if (v3)
LABEL_3:
    v3 = swift_getObjCClassFromMetadata();
  return objc_msgSend(objc_allocWithZone(v2), "initWithNavigationBarClass:toolbarClass:", ObjCClassFromMetadata, v3);
}

id ImageEditingViewController.init(navigationBarClass:toolbarClass:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t ObjCClassFromMetadata;
  objc_super v6;

  v3 = a2;
  if (!a1)
  {
    ObjCClassFromMetadata = 0;
    if (!a2)
      goto LABEL_4;
    goto LABEL_3;
  }
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  if (v3)
LABEL_3:
    v3 = swift_getObjCClassFromMetadata();
LABEL_4:
  v6.receiver = v2;
  v6.super_class = (Class)type metadata accessor for ImageEditingViewController();
  return objc_msgSendSuper2(&v6, "initWithNavigationBarClass:toolbarClass:", ObjCClassFromMetadata, v3);
}

id ImageEditingViewController.__allocating_init(rootViewController:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), "initWithRootViewController:", a1);

  return v3;
}

id ImageEditingViewController.init(rootViewController:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for ImageEditingViewController();
  v3 = objc_msgSendSuper2(&v5, "initWithRootViewController:", a1);

  return v3;
}

id ImageEditingViewController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  void *v3;
  NSString v5;
  id v6;
  objc_super v8;

  if (a2)
  {
    v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = 0;
  }
  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for ImageEditingViewController();
  v6 = objc_msgSendSuper2(&v8, "initWithNibName:bundle:", v5, a3);

  return v6;
}

id ImageEditingViewController.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for ImageEditingViewController();
  v3 = objc_msgSendSuper2(&v5, "initWithCoder:", a1);

  return v3;
}

id ImageEditingViewController.__deallocating_deinit(uint64_t a1)
{
  return sub_10004D23C(a1, type metadata accessor for ImageEditingViewController);
}

unint64_t sub_100C9B278()
{
  unint64_t result;

  result = sub_100BA80D8((uint64_t)&off_101102AE0);
  static UIImagePickerController.profileImagePickerProperties = result;
  return result;
}

uint64_t type metadata accessor for ImagePicker(uint64_t a1)
{
  return sub_100055934(a1, qword_1011E54A0, (uint64_t)&nominal type descriptor for ImagePicker);
}

uint64_t type metadata accessor for ImagePicker.Coordinator(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011E5638, (uint64_t)&nominal type descriptor for ImagePicker.Coordinator);
}

uint64_t static UIImagePickerController.profileImagePickerProperties.getter()
{
  if (qword_1011DE220 != -1)
    swift_once(&qword_1011DE220, sub_100C9B278);
  return swift_bridgeObjectRetain();
}

unint64_t sub_100C9B308()
{
  unint64_t result;

  result = qword_1011E5408;
  if (!qword_1011E5408)
  {
    result = swift_getWitnessTable(&unk_100EF1F74, &type metadata for ImagePicker.Coordinator.ImagePickerError);
    atomic_store(result, (unint64_t *)&qword_1011E5408);
  }
  return result;
}

uint64_t sub_100C9B34C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ImagePicker(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100C9B390(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ImagePicker(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t _s11MusicCoreUI11ImagePickerV10SourceTypeO21__derived_enum_equalsySbAE_AEtFZ_0(_QWORD *a1, void *a2, _QWORD *a3, void *a4)
{
  id v7;
  id v8;
  char v9;

  if (!a1)
    return !a3;
  if (a1 == (_QWORD *)1)
    return a3 == (_QWORD *)1;
  if (a1 == (_QWORD *)2)
    return a3 == (_QWORD *)2;
  if ((unint64_t)a3 < 3)
    return 0;
  if ((sub_1002EC0FC(a1, a3) & 1) != 0)
  {
    if (a2)
    {
      if (a4)
      {
        sub_10004A07C(0, &qword_1011E5410, UIImage_ptr);
        v7 = a2;
        v8 = a4;
        v9 = static NSObject.== infix(_:_:)(v7, v8);

        if ((v9 & 1) != 0)
          return 1;
      }
    }
    else if (!a4)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_100C9B4B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for PHPickerResult(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

double sub_100C9B530(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PHPickerResult(0) - 8) + 80);
  return sub_100C996A4(a1, a2, a3, *(void **)(v3 + 16), *(void **)(v3 + 24), v3 + ((v7 + 32) & ~v7));
}

uint64_t sub_100C9B588()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = (int *)type metadata accessor for ImagePicker(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = v0 + v3;
  v6 = sub_100007E8C(&qword_1011E4D50);
  if (swift_getEnumCaseMultiPayload(v0 + v3, v6) == 1)
  {
    v7 = type metadata accessor for DismissAction(0);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v0 + v3, v7);
  }
  else
  {
    swift_release();
  }
  v8 = v5 + v1[5];
  swift_release();
  swift_release();

  v9 = v5 + v1[6];
  swift_release();
  swift_release();
  if (*(_QWORD *)(v9 + 16) >= 3uLL)
  {
    swift_bridgeObjectRelease();

  }
  if (*(_QWORD *)(v5 + v1[7]))
    swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, v3 + v4);
}

void sub_100C9B6C4(void *a1, char a2)
{
  uint64_t v2;
  char v4;
  uint64_t v5;

  v4 = a2 & 1;
  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ImagePicker(0) - 8) + 80);
  sub_100C9AACC(a1, v4, v2 + ((v5 + 16) & ~v5));
}

uint64_t type metadata accessor for ImageEditingViewController()
{
  return objc_opt_self(_TtC11MusicCoreUI26ImageEditingViewController);
}

uint64_t sub_100C9B730()
{
  return sub_100048748(&qword_1011E5440, type metadata accessor for ImagePicker, (uint64_t)&protocol conformance descriptor for ImagePicker);
}

uint64_t *initializeBufferWithCopyOfBuffer for ImagePicker(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  void *v18;
  _QWORD *v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t *v23;
  id v24;
  void *v25;
  id v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  int *v37;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_100007E8C(&qword_1011E4D50);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v8 = type metadata accessor for DismissAction(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = v7;
      v11 = 1;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
      v9 = a1;
      v10 = v7;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    v13 = a3[5];
    v14 = a3[6];
    v37 = a3;
    v15 = (uint64_t *)((char *)a1 + v13);
    v16 = (uint64_t *)((char *)a2 + v13);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    v18 = (void *)v16[2];
    v15[2] = v18;
    v19 = (uint64_t *)((char *)a1 + v14);
    v20 = (char *)a2 + v14;
    v21 = *(uint64_t *)((char *)a2 + v14 + 8);
    *v19 = *(uint64_t *)((char *)a2 + v14);
    v19[1] = v21;
    v23 = (unint64_t *)((char *)a2 + v14 + 16);
    v22 = *v23;
    swift_retain();
    swift_retain();
    v24 = v18;
    swift_retain();
    swift_retain();
    if (v22 >= 3)
    {
      v25 = (void *)*((_QWORD *)v20 + 3);
      v19[2] = v22;
      v19[3] = v25;
      swift_bridgeObjectRetain();
      v26 = v25;
    }
    else
    {
      *((_OWORD *)v19 + 1) = *(_OWORD *)v23;
    }
    v27 = v37[7];
    v28 = (uint64_t *)((char *)a1 + v27);
    v29 = (uint64_t *)((char *)a2 + v27);
    if (*v29)
    {
      v30 = v29[1];
      *v28 = *v29;
      v28[1] = v30;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v28 = *(_OWORD *)v29;
    }
    v31 = v37[8];
    v32 = v37[9];
    v33 = (char *)a1 + v31;
    v34 = (char *)a2 + v31;
    v35 = *((_QWORD *)v34 + 1);
    *(_QWORD *)v33 = *(_QWORD *)v34;
    *((_QWORD *)v33 + 1) = v35;
    v33[16] = v34[16];
    *(uint64_t *)((char *)a1 + v32) = *(uint64_t *)((char *)a2 + v32);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

double destroy for ImagePicker(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double result;

  v4 = sub_100007E8C(&qword_1011E4D50);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for DismissAction(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  else
  {
    swift_release();
  }
  v6 = a1 + a2[5];
  swift_release();
  swift_release();

  v7 = a1 + a2[6];
  swift_release();
  swift_release();
  if (*(_QWORD *)(v7 + 16) >= 3uLL)
  {
    swift_bridgeObjectRelease();

  }
  if (*(_QWORD *)(a1 + a2[7]))
    swift_release();
  swift_release();
  swift_release();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

_QWORD *initializeWithCopy for ImagePicker(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  void *v16;
  _QWORD *v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t *v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  int *v35;

  v6 = sub_100007E8C(&qword_1011E4D50);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for DismissAction(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    *a1 = *a2;
    swift_retain();
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  v11 = a3[5];
  v12 = a3[6];
  v35 = a3;
  v13 = (_QWORD *)((char *)a1 + v11);
  v14 = (_QWORD *)((char *)a2 + v11);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v16 = (void *)v14[2];
  v13[2] = v16;
  v17 = (_QWORD *)((char *)a1 + v12);
  v18 = (char *)a2 + v12;
  v19 = *(_QWORD *)((char *)a2 + v12 + 8);
  *v17 = *(_QWORD *)((char *)a2 + v12);
  v17[1] = v19;
  v21 = (_QWORD *)((char *)a2 + v12 + 16);
  v20 = *v21;
  swift_retain();
  swift_retain();
  v22 = v16;
  swift_retain();
  swift_retain();
  if (v20 >= 3)
  {
    v23 = (void *)*((_QWORD *)v18 + 3);
    v17[2] = v20;
    v17[3] = v23;
    swift_bridgeObjectRetain();
    v24 = v23;
  }
  else
  {
    *((_OWORD *)v17 + 1) = *(_OWORD *)v21;
  }
  v25 = v35[7];
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (_QWORD *)((char *)a2 + v25);
  if (*v27)
  {
    v28 = v27[1];
    *v26 = *v27;
    v26[1] = v28;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v26 = *(_OWORD *)v27;
  }
  v29 = v35[8];
  v30 = v35[9];
  v31 = (char *)a1 + v29;
  v32 = (char *)a2 + v29;
  v33 = *((_QWORD *)v32 + 1);
  *(_QWORD *)v31 = *(_QWORD *)v32;
  *((_QWORD *)v31 + 1) = v33;
  v31[16] = v32[16];
  *(_QWORD *)((char *)a1 + v30) = *(_QWORD *)((char *)a2 + v30);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ImagePicker(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  unint64_t v20;
  void *v21;
  id v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  _QWORD *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;

  if (a1 != a2)
  {
    sub_10004FF60((uint64_t)a1, &qword_1011E4D50);
    v6 = sub_100007E8C(&qword_1011E4D50);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for DismissAction(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  v11 = a3[5];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  *(_QWORD *)((char *)a1 + v11) = *(_QWORD *)((char *)a2 + v11);
  swift_retain();
  swift_release();
  *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
  swift_retain();
  swift_release();
  v14 = (void *)*((_QWORD *)v12 + 2);
  v15 = (void *)*((_QWORD *)v13 + 2);
  *((_QWORD *)v12 + 2) = v15;
  v16 = v15;

  v17 = a3[6];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  *(_QWORD *)((char *)a1 + v17) = *(_QWORD *)((char *)a2 + v17);
  swift_retain();
  swift_release();
  v18[1] = v19[1];
  swift_retain();
  swift_release();
  v20 = v19[2];
  if (v18[2] < 3uLL)
  {
    if (v20 >= 3)
    {
      v18[2] = v20;
      v21 = (void *)v19[3];
      v18[3] = v21;
      swift_bridgeObjectRetain();
      v22 = v21;
      goto LABEL_13;
    }
    goto LABEL_11;
  }
  if (v20 < 3)
  {
    sub_10004FF60((uint64_t)(v18 + 2), &qword_1011E4B30);
LABEL_11:
    *((_OWORD *)v18 + 1) = *((_OWORD *)v19 + 1);
    goto LABEL_13;
  }
  v18[2] = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23 = (void *)v18[3];
  v24 = (void *)v19[3];
  v18[3] = v24;
  v25 = v24;

LABEL_13:
  v26 = a3[7];
  v27 = (_QWORD *)((char *)a1 + v26);
  v28 = (char *)a2 + v26;
  v29 = *(_QWORD *)((char *)a1 + v26);
  v30 = *(_QWORD *)((char *)a2 + v26);
  if (!v29)
  {
    if (v30)
    {
      v32 = *((_QWORD *)v28 + 1);
      *v27 = v30;
      v27[1] = v32;
      swift_retain();
      goto LABEL_20;
    }
LABEL_19:
    *(_OWORD *)v27 = *(_OWORD *)v28;
    goto LABEL_20;
  }
  if (!v30)
  {
    swift_release();
    goto LABEL_19;
  }
  v31 = *((_QWORD *)v28 + 1);
  *v27 = v30;
  v27[1] = v31;
  swift_retain();
  swift_release();
LABEL_20:
  v33 = a3[8];
  v34 = (char *)a1 + v33;
  v35 = (char *)a2 + v33;
  *(_QWORD *)((char *)a1 + v33) = *(_QWORD *)((char *)a2 + v33);
  swift_retain();
  swift_release();
  *((_QWORD *)v34 + 1) = *((_QWORD *)v35 + 1);
  swift_retain();
  swift_release();
  v34[16] = v35[16];
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for ImagePicker(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  __int128 v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;

  v6 = sub_100007E8C(&qword_1011E4D50);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for DismissAction(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = a3[5];
  v9 = a3[6];
  v10 = &a1[v8];
  v11 = &a2[v8];
  *(_OWORD *)v10 = *(_OWORD *)v11;
  *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
  v12 = &a1[v9];
  v13 = &a2[v9];
  v14 = *((_OWORD *)v13 + 1);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v14;
  v15 = a3[7];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = *(_QWORD *)v17;
  if (*(_QWORD *)v17)
  {
    v19 = *((_QWORD *)v17 + 1);
    *(_QWORD *)v16 = v18;
    *((_QWORD *)v16 + 1) = v19;
  }
  else
  {
    *(_OWORD *)v16 = *(_OWORD *)v17;
  }
  v20 = a3[8];
  v21 = a3[9];
  v22 = &a1[v20];
  v23 = &a2[v20];
  *(_OWORD *)v22 = *(_OWORD *)v23;
  v22[16] = v23[16];
  *(_QWORD *)&a1[v21] = *(_QWORD *)&a2[v21];
  return a1;
}

char *assignWithTake for ImagePicker(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  void *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  unint64_t v15;
  void *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;

  if (a1 != a2)
  {
    sub_10004FF60((uint64_t)a1, &qword_1011E4D50);
    v6 = sub_100007E8C(&qword_1011E4D50);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for DismissAction(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  *(_QWORD *)&a1[v8] = *(_QWORD *)&a2[v8];
  swift_release();
  *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
  swift_release();
  v11 = (void *)*((_QWORD *)v9 + 2);
  *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);

  v12 = a3[6];
  v13 = &a1[v12];
  v14 = &a2[v12];
  *(_QWORD *)&a1[v12] = *(_QWORD *)&a2[v12];
  swift_release();
  *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
  swift_release();
  v15 = *((_QWORD *)v14 + 2);
  if (*((_QWORD *)v13 + 2) < 3uLL)
    goto LABEL_8;
  if (v15 < 3)
  {
    sub_10004FF60((uint64_t)(v13 + 16), &qword_1011E4B30);
LABEL_8:
    *((_OWORD *)v13 + 1) = *((_OWORD *)v14 + 1);
    goto LABEL_10;
  }
  *((_QWORD *)v13 + 2) = v15;
  swift_bridgeObjectRelease();
  v16 = (void *)*((_QWORD *)v13 + 3);
  *((_QWORD *)v13 + 3) = *((_QWORD *)v14 + 3);

LABEL_10:
  v17 = a3[7];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = *(_QWORD *)&a1[v17];
  v21 = *(_QWORD *)&a2[v17];
  if (!v20)
  {
    if (v21)
    {
      v23 = *((_QWORD *)v19 + 1);
      *(_QWORD *)v18 = v21;
      *((_QWORD *)v18 + 1) = v23;
      goto LABEL_17;
    }
LABEL_16:
    *(_OWORD *)v18 = *(_OWORD *)v19;
    goto LABEL_17;
  }
  if (!v21)
  {
    swift_release();
    goto LABEL_16;
  }
  v22 = *((_QWORD *)v19 + 1);
  *(_QWORD *)v18 = v21;
  *((_QWORD *)v18 + 1) = v22;
  swift_release();
LABEL_17:
  v24 = a3[8];
  v25 = &a1[v24];
  v26 = &a2[v24];
  *(_QWORD *)&a1[v24] = *(_QWORD *)&a2[v24];
  swift_release();
  *((_QWORD *)v25 + 1) = *((_QWORD *)v26 + 1);
  swift_release();
  v25[16] = v26[16];
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ImagePicker(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C9C1A0);
}

uint64_t sub_100C9C1A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_100007E8C(&qword_1011E3520);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for ImagePicker(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C9C230);
}

uint64_t sub_100C9C230(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_100007E8C(&qword_1011E3520);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

void sub_100C9C2B0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[6];

  sub_100C16C14(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = &unk_100EF1EB0;
    v4[2] = &unk_100EF1EC8;
    v4[3] = &unk_100EF1EE0;
    v4[4] = &unk_100EF1EF8;
    v4[5] = &unk_100EF1F10;
    swift_initStructMetadata(a1, 256, 6, v4, a1 + 16);
  }
}

uint64_t sub_100C9C348()
{
  return type metadata accessor for ImagePicker.Coordinator(0);
}

uint64_t sub_100C9C350(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  result = type metadata accessor for ImagePicker(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100EF1EE0;
    v4[2] = &unk_100EF1EE0;
    v4[3] = &unk_100EF1F10;
    result = swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

void destroy for ImagePicker.SourceType(uint64_t a1)
{
  unint64_t v2;

  v2 = *(_QWORD *)a1;
  if (v2 >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease(v2);

  }
}

uint64_t _s11MusicCoreUI11ImagePickerV10SourceTypeOwCP_0(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    v3 = *(void **)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
    v4 = v3;
  }
  return a1;
}

uint64_t assignWithCopy for ImagePicker.SourceType(uint64_t a1, unint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  id v10;

  v4 = *(_QWORD *)a1;
  v5 = *a2;
  if (v4 < 0xFFFFFFFF)
  {
    if (v5 >= 0xFFFFFFFF)
    {
      *(_QWORD *)a1 = v5;
      v9 = (void *)a2[1];
      *(_QWORD *)(a1 + 8) = v9;
      swift_bridgeObjectRetain();
      v10 = v9;
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v5 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease(v4);

    goto LABEL_7;
  }
  *(_QWORD *)a1 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  v6 = *(void **)(a1 + 8);
  v7 = (void *)a2[1];
  *(_QWORD *)(a1 + 8) = v7;
  v8 = v7;

  return a1;
}

uint64_t assignWithTake for ImagePicker.SourceType(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  void *v5;

  v4 = *(_QWORD *)a1;
  if (v4 < 0xFFFFFFFF)
    goto LABEL_5;
  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {
    swift_bridgeObjectRelease(v4);

LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease(v4);
  v5 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  return a1;
}

uint64_t getEnumTagSinglePayload for ImagePicker.SourceType(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFD && *((_BYTE *)a1 + 16))
    return (*(_DWORD *)a1 + 2147483645);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 2;
  if (v4 >= 4)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ImagePicker.SourceType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 2;
  }
  return result;
}

_QWORD *sub_100C9C630(_QWORD *result, int a2)
{
  uint64_t v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else
  {
    if (!a2)
      return result;
    v2 = (a2 - 1);
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for ImagePicker.SourceType()
{
  return &type metadata for ImagePicker.SourceType;
}

ValueMetadata *type metadata accessor for ImagePicker.Coordinator.ImagePickerError()
{
  return &type metadata for ImagePicker.Coordinator.ImagePickerError;
}

uint64_t sub_100C9C670()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for PHPickerResult(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v5 = *(_QWORD *)(v0 + 40);
  if (v5 >> 60 != 15)
    sub_1000652DC(*(_QWORD *)(v0 + 32), v5);
  v6 = (v3 + 72) & ~v3;
  swift_errorRelease(*(_QWORD *)(v0 + 48));

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v6, v1);
  return swift_deallocObject(v0, v6 + v4);
}

uint64_t sub_100C9C71C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  type metadata accessor for PHPickerResult(0);
  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc(dword_1011E5694);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_10005AEE4;
  return sub_100C9985C(a1, v4, v5, v6, v7, v8, v9, v10);
}

double InteractionFeedbackLoadingView.init(delay:)(double a1)
{
  char v3;

  v3 = 0;
  State.init(wrappedValue:)(&v3, &type metadata for Bool);
  return a1;
}

uint64_t InteractionFeedbackLoadingView.body.getter@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (**v13)();
  uint64_t v15;

  sub_100007E8C(&qword_1011E56B0);
  __chkstk_darwin();
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v9 = static VerticalAlignment.center.getter(v10);
  *((_QWORD *)v9 + 1) = 0;
  v9[16] = 1;
  v11 = sub_100007E8C(&qword_1011E56B8);
  sub_100C9C940(a1, a2, &v9[*(int *)(v11 + 44)]);
  v12 = swift_allocObject(&unk_10110CD18, 40, 7);
  *(double *)(v12 + 16) = a4;
  *(_BYTE *)(v12 + 24) = a1;
  *(_QWORD *)(v12 + 32) = a2;
  sub_10004A160((uint64_t)v9, a3, &qword_1011E56B0);
  v13 = (uint64_t (**)())(a3 + *(int *)(sub_100007E8C(&qword_1011E56C0) + 36));
  *v13 = sub_100C9CF74;
  v13[1] = (uint64_t (*)())v12;
  v13[2] = 0;
  v13[3] = 0;
  swift_retain();
  return sub_10004FF60((uint64_t)v9, &qword_1011E56B0);
}

uint64_t sub_100C9C940@<X0>(char a1@<W0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t KeyPath;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  char *v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;

  v64 = a2;
  v66 = a3;
  v4 = type metadata accessor for OpacityTransition(0);
  v62 = *(_QWORD *)(v4 - 8);
  v63 = v4;
  __chkstk_darwin();
  v60 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v61 = (char *)&v52 - v6;
  v7 = type metadata accessor for ControlSize(0);
  v58 = *(_QWORD *)(v7 - 8);
  v59 = v7;
  v8 = __chkstk_darwin();
  v57 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CircularProgressViewStyle(0, v8);
  v54 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin();
  v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011E3A88);
  v53 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin();
  v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100007E8C(&qword_1011E56E8);
  v55 = *(_QWORD *)(v16 - 8);
  v56 = v16;
  __chkstk_darwin();
  v18 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_100007E8C(&qword_1011E56F0);
  __chkstk_darwin();
  v20 = (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = sub_100007E8C(&qword_1011E56F8);
  v65 = *(_QWORD *)(v67 - 8);
  __chkstk_darwin();
  v22 = (char *)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011E5700);
  __chkstk_darwin();
  v24 = (char *)&v52 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v26 = (char *)&v52 - v25;
  v68 = a1;
  v69 = v64;
  v27 = sub_100007E8C(&qword_1011E1B98);
  State.wrappedValue.getter(&v70, v27);
  v29 = 1;
  if (v70 == 1)
  {
    v30 = ProgressView<>.init<>()(v28);
    CircularProgressViewStyle.init()(v30);
    v31 = sub_100049F28(&qword_1011E3AF8, &qword_1011E3A88, (uint64_t)&protocol conformance descriptor for ProgressView<A, B>);
    v32 = sub_100048748(&qword_1011E5710, (uint64_t (*)(uint64_t))&type metadata accessor for CircularProgressViewStyle, (uint64_t)&protocol conformance descriptor for CircularProgressViewStyle);
    View.progressViewStyle<A>(_:)(v12, v13, v10, v31, v32);
    (*(void (**)(char *, uint64_t))(v54 + 8))(v12, v10);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v15, v13);
    v34 = v57;
    v33 = v58;
    v35 = v59;
    (*(void (**)(char *, _QWORD, uint64_t))(v58 + 104))(v57, enum case for ControlSize.large(_:), v59);
    KeyPath = swift_getKeyPath(&unk_100EF2040);
    v37 = (uint64_t *)&v20[*(int *)(v52 + 36)];
    v38 = sub_100007E8C(&qword_1011E5718);
    (*(void (**)(char *, char *, uint64_t))(v33 + 16))((char *)v37 + *(int *)(v38 + 28), v34, v35);
    *v37 = KeyPath;
    v40 = v55;
    v39 = v56;
    (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v20, v18, v56);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v35);
    v41 = (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v18, v39);
    v42 = v61;
    OpacityTransition.init()(v41);
    v44 = v62;
    v43 = v63;
    v45 = v60;
    (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v60, v42, v63);
    v46 = sub_100048748(&qword_1011E5720, (uint64_t (*)(uint64_t))&type metadata accessor for OpacityTransition, (uint64_t)&protocol conformance descriptor for OpacityTransition);
    v47 = AnyTransition.init<A>(_:)(v45, v43, v46);
    sub_10004A160((uint64_t)v20, (uint64_t)v22, &qword_1011E56F0);
    *(_QWORD *)&v22[*(int *)(v67 + 36)] = v47;
    (*(void (**)(char *, uint64_t))(v44 + 8))(v42, v43);
    sub_10004FF60((uint64_t)v20, &qword_1011E56F0);
    sub_100C9D320((uint64_t)v22, (uint64_t)v26);
    v29 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v65 + 56))(v26, v29, 1, v67);
  sub_10004A160((uint64_t)v26, (uint64_t)v24, &qword_1011E5700);
  v48 = v66;
  *v66 = 0;
  *((_BYTE *)v48 + 8) = 1;
  v49 = sub_100007E8C(&qword_1011E5708);
  sub_10004A160((uint64_t)v24, (uint64_t)v48 + *(int *)(v49 + 48), &qword_1011E5700);
  v50 = (char *)v48 + *(int *)(v49 + 64);
  *(_QWORD *)v50 = 0;
  v50[8] = 1;
  sub_10004FF60((uint64_t)v26, &qword_1011E5700);
  return sub_10004FF60((uint64_t)v24, &qword_1011E5700);
}

uint64_t sub_100C9CE48(char a1, uint64_t a2, double a3)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_100007E8C(&qword_1011E0490);
  __chkstk_darwin();
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = swift_allocObject(&unk_10110CDE8, 40, 7);
  *(double *)(v9 + 16) = a3;
  *(_BYTE *)(v9 + 24) = a1;
  *(_QWORD *)(v9 + 32) = a2;
  swift_retain();
  static Task<>.delayed(by:priority:task:)((uint64_t)v7, (uint64_t)&unk_1011E56E0, v9, (uint64_t)&type metadata for () + 8, a3);
  swift_release();
  swift_release();
  return sub_10004FF60((uint64_t)v7, &qword_1011E0490);
}

uint64_t sub_100C9CF50()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100C9CF74()
{
  uint64_t v0;

  return sub_100C9CE48(*(_BYTE *)(v0 + 24), *(_QWORD *)(v0 + 32), *(double *)(v0 + 16));
}

uint64_t sub_100C9CF84(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of InteractionFeedbackLoadingView.body>>, 1);
}

uint64_t sub_100C9CF94(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 32) = a3;
  *(_BYTE *)(v3 + 41) = a2;
  return swift_task_switch(sub_100C9CFB0, 0, 0);
}

uint64_t sub_100C9CFB0()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v0 + 16) = *(_BYTE *)(v0 + 41);
  *(_QWORD *)(v0 + 24) = *(_QWORD *)(v0 + 32);
  *(_BYTE *)(v0 + 40) = 1;
  v1 = sub_100007E8C(&qword_1011E1B98);
  State.wrappedValue.setter(v0 + 40, v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100C9D014@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (**v11)();
  uint64_t v13;

  sub_100007E8C(&qword_1011E56B0);
  __chkstk_darwin();
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v1;
  v6 = *((_BYTE *)v1 + 8);
  v7 = v1[2];
  *(_QWORD *)v4 = static VerticalAlignment.center.getter(v8);
  *((_QWORD *)v4 + 1) = 0;
  v4[16] = 1;
  v9 = sub_100007E8C(&qword_1011E56B8);
  sub_100C9C940(v6, v7, &v4[*(int *)(v9 + 44)]);
  v10 = swift_allocObject(&unk_10110CDC0, 40, 7);
  *(_QWORD *)(v10 + 16) = v5;
  *(_BYTE *)(v10 + 24) = v6;
  *(_QWORD *)(v10 + 32) = v7;
  sub_10004A160((uint64_t)v4, a1, &qword_1011E56B0);
  v11 = (uint64_t (**)())(a1 + *(int *)(sub_100007E8C(&qword_1011E56C0) + 36));
  *v11 = sub_100C9D370;
  v11[1] = (uint64_t (*)())v10;
  v11[2] = 0;
  v11[3] = 0;
  swift_retain();
  return sub_10004FF60((uint64_t)v4, &qword_1011E56B0);
}

uint64_t sub_100C9D138(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v3;
  swift_retain(v3);
  return a1;
}

uint64_t assignWithCopy for InteractionFeedbackLoadingView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  swift_retain(v4);
  swift_release(v3);
  return a1;
}

uint64_t assignWithTake for InteractionFeedbackLoadingView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release(v3);
  return a1;
}

ValueMetadata *type metadata accessor for InteractionFeedbackLoadingView()
{
  return &type metadata for InteractionFeedbackLoadingView;
}

unint64_t sub_100C9D210()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E56C8;
  if (!qword_1011E56C8)
  {
    v1 = sub_100044B54(&qword_1011E56C0);
    sub_100049F28(&qword_1011E56D0, &qword_1011E56B0, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E56C8);
  }
  return result;
}

uint64_t sub_100C9D294()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_BYTE *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = swift_task_alloc(dword_1011E56DC);
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = sub_10005AEE4;
  *(_QWORD *)(v4 + 32) = v3;
  *(_BYTE *)(v4 + 41) = v2;
  return swift_task_switch(sub_100C9CFB0, 0, 0);
}

uint64_t sub_100C9D2FC()
{
  return EnvironmentValues.controlSize.getter();
}

uint64_t sub_100C9D320(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011E56F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

int *LayoutProviderStack.init(layoutProvider:alignment:spacing:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 a10, uint64_t a11)
{
  int *result;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a8 - 8) + 32))(a9, a1, a8);
  v23 = a8;
  v24 = a10;
  v25 = a11;
  result = (int *)type metadata accessor for LayoutProviderStack(0, (uint64_t)&v23);
  v20 = (_QWORD *)(a9 + result[13]);
  *v20 = a2;
  v20[1] = a3;
  v21 = a9 + result[14];
  *(_QWORD *)v21 = a4;
  *(_BYTE *)(v21 + 8) = a5 & 1;
  v22 = (_QWORD *)(a9 + result[15]);
  *v22 = a6;
  v22[1] = a7;
  return result;
}

uint64_t type metadata accessor for LayoutProviderStack(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for LayoutProviderStack);
}

uint64_t LayoutProviderStack.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[3];
  uint64_t v33;
  uint64_t v34;

  v28 = a2;
  v4 = sub_100044B54(&qword_1011E5728);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = sub_100C9D6B4(&qword_1011E5730, (uint64_t)&protocol conformance descriptor for _LayoutRoot<A>);
  v7 = type metadata accessor for _VariadicView.Tree(0, v4, v5, v6);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin();
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin();
  v13 = (char *)&v27 - v12;
  (*(void (**)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __n128))(*(_QWORD *)(a1 + 32)
                                                                                               + 8))(v32, *(_QWORD *)(v2 + *(int *)(a1 + 52)), *(_QWORD *)(v2 + *(int *)(a1 + 52) + 8), *(_QWORD *)(v2 + *(int *)(a1 + 56)), *(unsigned __int8 *)(v2 + *(int *)(a1 + 56) + 8), *(_QWORD *)(a1 + 16), v11);
  v14 = v33;
  v15 = v34;
  sub_100007E68(v32, v33);
  v16 = __chkstk_darwin();
  v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v19 + 16))(v18, v16);
  v31 = AnyLayout.init<A>(_:)(v18, v14, v15);
  v20 = (uint64_t *)(v2 + *(int *)(a1 + 60));
  v21 = *v20;
  v22 = v20[1];
  v23 = sub_100C9D670();
  v24 = *(_QWORD *)(a1 + 40);
  sub_10061A818(v21, v22, (uint64_t)&type metadata for AnyLayout, v5, v23, v24, (uint64_t)v10);
  swift_release();
  _s5Music18DragDropToPlaylistV6OriginVwxx_0(v32);
  v29 = sub_100C9D6B4(&qword_1011E5740, (uint64_t)&protocol conformance descriptor for _LayoutRoot<A>);
  v30 = v24;
  swift_getWitnessTable(&protocol conformance descriptor for <> _VariadicView.Tree<A, B>, v7);
  sub_10081EB14((uint64_t)v10, v7, (uint64_t)v13);
  v25 = *(void (**)(char *, uint64_t))(v8 + 8);
  v25(v10, v7);
  sub_1000EA744((uint64_t)v13, v7, v28);
  return ((uint64_t (*)(char *, uint64_t))v25)(v13, v7);
}

unint64_t sub_100C9D670()
{
  unint64_t result;

  result = qword_1011E5738;
  if (!qword_1011E5738)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AnyLayout, &type metadata for AnyLayout);
    atomic_store(result, (unint64_t *)&qword_1011E5738);
  }
  return result;
}

uint64_t sub_100C9D6B4(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_100044B54(&qword_1011E5728);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t AxisStack.init(axis:alignment:spacing:content:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  *(_BYTE *)a8 = result & 1;
  *(_QWORD *)(a8 + 8) = a2;
  *(_QWORD *)(a8 + 16) = a3;
  *(_QWORD *)(a8 + 24) = a4;
  *(_BYTE *)(a8 + 32) = a5 & 1;
  *(_QWORD *)(a8 + 40) = a6;
  *(_QWORD *)(a8 + 48) = a7;
  return result;
}

double AxisStack.body.getter@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  _QWORD *v12;
  _BYTE *v13;
  _QWORD *v14;
  uint64_t v15;
  double result;
  _BYTE v18[8];
  __int128 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[8];
  __int128 v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  __int128 v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;

  v18[0] = *(_BYTE *)v2;
  v3 = *(_QWORD *)(v2 + 8);
  v4 = *(_QWORD *)(v2 + 16);
  v5 = *(_QWORD *)(v2 + 24);
  v6 = *(_BYTE *)(v2 + 32);
  v8 = *(_QWORD *)(v2 + 40);
  v7 = *(_QWORD *)(v2 + 48);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  (*(void (**)(_BYTE *, _BYTE *, _QWORD *))(*(&type metadata for Axis - 1) + 32))(v24, v18, &type metadata for Axis);
  v30 = &type metadata for Axis;
  *(_QWORD *)&v31 = v9;
  *((_QWORD *)&v31 + 1) = &protocol witness table for Axis;
  v32 = v10;
  v11 = (int *)type metadata accessor for LayoutProviderStack(0, (uint64_t)&v30);
  v12 = &v24[v11[13]];
  *v12 = v3;
  v12[1] = v4;
  v13 = &v24[v11[14]];
  *(_QWORD *)v13 = v5;
  v13[8] = v6;
  v14 = &v24[v11[15]];
  *v14 = v8;
  v14[1] = v7;
  v18[0] = v24[0];
  v19 = v25;
  v20 = v26;
  v21 = v27;
  v22 = v28;
  v23 = v29;
  v30 = &type metadata for Axis;
  *(_QWORD *)&v31 = v9;
  *((_QWORD *)&v31 + 1) = &protocol witness table for Axis;
  v32 = v10;
  v15 = type metadata accessor for LayoutProviderStack(0, (uint64_t)&v30);
  swift_getWitnessTable(&protocol conformance descriptor for LayoutProviderStack<A, B>, v15);
  sub_10081EB14((uint64_t)v18, v15, (uint64_t)&v30);
  swift_retain();
  swift_release();
  v24[0] = (_BYTE)v30;
  v25 = v31;
  v26 = v32;
  v27 = v33;
  v28 = v34;
  v29 = v35;
  sub_1000EA744((uint64_t)v24, v15, a2);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

unint64_t Axis.layout(alignment:spacing:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, char a5@<W4>, uint64_t a6@<X8>)
{
  unint64_t result;

  if ((a5 & 1) != 0)
  {
    *(_QWORD *)(a6 + 24) = &type metadata for VStackLayout;
    result = sub_100C9D92C();
    *(_QWORD *)(a6 + 32) = result;
    *(_QWORD *)a6 = a1;
  }
  else
  {
    *(_QWORD *)(a6 + 24) = &type metadata for HStackLayout;
    result = sub_100C9D970();
    *(_QWORD *)(a6 + 32) = result;
    *(_QWORD *)a6 = a2;
  }
  *(_QWORD *)(a6 + 8) = a3;
  *(_BYTE *)(a6 + 16) = a4 & 1;
  return result;
}

unint64_t sub_100C9D92C()
{
  unint64_t result;

  result = qword_1011E5748;
  if (!qword_1011E5748)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for VStackLayout, &type metadata for VStackLayout);
    atomic_store(result, (unint64_t *)&qword_1011E5748);
  }
  return result;
}

unint64_t sub_100C9D970()
{
  unint64_t result;

  result = qword_1011E5750[0];
  if (!qword_1011E5750[0])
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for HStackLayout, &type metadata for HStackLayout);
    atomic_store(result, qword_1011E5750);
  }
  return result;
}

uint64_t sub_100C9D9B4(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  _OWORD v4[2];

  v2 = *(_OWORD *)(a2 + 32);
  v4[0] = *(_OWORD *)(a2 + 16);
  v4[1] = v2;
  return swift_getOpaqueTypeConformance2(v4, &opaque type descriptor for <<opaque return type of LayoutProviderStack.body>>, 1);
}

uint64_t sub_100C9D9E8(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &opaque type descriptor for <<opaque return type of AxisStack.body>>, 1);
}

unint64_t sub_100C9DA1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  _BYTE *v5;
  unint64_t result;

  if ((*v5 & 1) != 0)
  {
    *(_QWORD *)(a5 + 24) = &type metadata for VStackLayout;
    result = sub_100C9D92C();
    *(_QWORD *)(a5 + 32) = result;
    *(_QWORD *)a5 = a1;
  }
  else
  {
    *(_QWORD *)(a5 + 24) = &type metadata for HStackLayout;
    result = sub_100C9D970();
    *(_QWORD *)(a5 + 32) = result;
    *(_QWORD *)a5 = a2;
  }
  *(_QWORD *)(a5 + 8) = a3;
  *(_BYTE *)(a5 + 16) = a4 & 1;
  return result;
}

uint64_t sub_100C9DAA0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100EF2168;
    v4[2] = &unk_100EF2180;
    v4[3] = (char *)&value witness table for () + 64;
    swift_initStructMetadata(a1, 0, 4, v4, a1 + 48);
    return 0;
  }
  return result;
}

uint64_t *sub_100C9DB2C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  _OWORD *v9;
  _OWORD *v10;
  unint64_t v11;
  unint64_t v12;
  char v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v9 = (_OWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v10 = (_OWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v9 = *v10;
    v11 = ((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8;
    v12 = ((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8;
    v13 = *(_BYTE *)(v12 + 8);
    *(_QWORD *)v11 = *(_QWORD *)v12;
    *(_BYTE *)(v11 + 8) = v13;
    v14 = (_QWORD *)(((unint64_t)v9 + 39) & 0xFFFFFFFFFFFFFFF8);
    v15 = (_QWORD *)(((unint64_t)v10 + 39) & 0xFFFFFFFFFFFFFFF8);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
  }
  swift_retain(v16);
  return v4;
}

double sub_100C9DC1C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  double result;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  *(_QWORD *)&result = swift_release(*(_QWORD *)(((((a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFF8)
                                               + 8)).n128_u64[0];
  return result;
}

uint64_t sub_100C9DC64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = ((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  v10 = ((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_QWORD *)v9 = v11;
  v12 = (_QWORD *)(((unint64_t)v7 + 39) & 0xFFFFFFFFFFFFFFF8);
  v13 = (_QWORD *)(((unint64_t)v8 + 39) & 0xFFFFFFFFFFFFFFF8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  swift_retain(v14);
  return a1;
}

uint64_t sub_100C9DCFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  char v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  v9 = ((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  v10 = ((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_BYTE *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = v11;
  v12 = (_QWORD *)(((unint64_t)v7 + 39) & 0xFFFFFFFFFFFFFFF8);
  v13 = (_QWORD *)(((unint64_t)v8 + 39) & 0xFFFFFFFFFFFFFFF8);
  v14 = v13[1];
  v15 = v12[1];
  *v12 = *v13;
  v12[1] = v14;
  swift_retain(v14);
  swift_release(v15);
  return a1;
}

uint64_t sub_100C9DDA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = ((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  v10 = ((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_QWORD *)v9 = v11;
  *(_OWORD *)(((unint64_t)v7 + 39) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v8 + 39) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_100C9DE3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  v9 = ((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  v10 = ((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_BYTE *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = v11;
  v12 = ((unint64_t)v7 + 39) & 0xFFFFFFFFFFFFFFF8;
  v13 = *(_QWORD *)(v12 + 8);
  *(_OWORD *)v12 = *(_OWORD *)(((unint64_t)v8 + 39) & 0xFFFFFFFFFFFFF8);
  swift_release(v13);
  return a1;
}

uint64_t sub_100C9DEE0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)((((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFF8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_100C9DF64 + 4 * byte_100EF2070[v10]))();
  }
}

void sub_100C9DFF0(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 39) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 39) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8) + 16);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_100C9E0EC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x100C9E16CLL);
}

void sub_100C9E0F4(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x100C9E0FCLL);
  JUMPOUT(0x100C9E16CLL);
}

void sub_100C9E144()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x100C9E16CLL);
}

void sub_100C9E14C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x100C9E16CLL);
}

uint64_t sub_100C9E154(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (!a2)
    JUMPOUT(0x100C9E16CLL);
  if (a3 < 0x7FFFFFFF)
  {
    if ((a2 & 0x80000000) == 0)
      JUMPOUT(0x100C9E168);
    JUMPOUT(0x100C9E160);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v5);
}

double sub_100C9E184(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 48)).n128_u64[0];
  return result;
}

uint64_t sub_100C9E18C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v3 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v3;
  swift_retain(v3);
  return a1;
}

uint64_t sub_100C9E1D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v3 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v3;
  v4 = *(_QWORD *)(a2 + 48);
  v5 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  swift_retain(v4);
  swift_release(v5);
  return a1;
}

uint64_t sub_100C9E238(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v3 = *(_QWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release(v3);
  return a1;
}

uint64_t type metadata accessor for AxisStack(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AxisStack);
}

uint64_t sub_100C9E294(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = sub_100044B54(&qword_1011E5728);
  v3 = sub_100C9D6B4(&qword_1011E5730, (uint64_t)&protocol conformance descriptor for _LayoutRoot<A>);
  v4 = type metadata accessor for _VariadicView.Tree(255, v2, v1, v3);
  sub_100C9D6B4(&qword_1011E5740, (uint64_t)&protocol conformance descriptor for _LayoutRoot<A>);
  return swift_getWitnessTable(&protocol conformance descriptor for <> _VariadicView.Tree<A, B>, v4);
}

uint64_t sub_100C9E32C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[4];

  v1 = *a1;
  v2 = a1[1];
  v5[0] = &type metadata for Axis;
  v5[1] = v1;
  v5[2] = &protocol witness table for Axis;
  v5[3] = v2;
  v3 = type metadata accessor for LayoutProviderStack(255, (uint64_t)v5);
  return swift_getWitnessTable(&protocol conformance descriptor for LayoutProviderStack<A, B>, v3);
}

char *LoadingView.__allocating_init(title:style:usesSubtitleTextColor:)(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  objc_class *v4;
  id v9;

  v9 = objc_allocWithZone(v4);
  return LoadingView.init(title:style:usesSubtitleTextColor:)(a1, a2, a3 & 0xFFFFFFFFFFLL | (((a3 >> 40) & 1) << 40), a4);
}

char *LoadingView.init(title:style:usesSubtitleTextColor:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _BYTE *v4;
  _BYTE *v5;
  objc_class *ObjectType;
  char *v10;
  _QWORD *v11;
  uint64_t v12;
  id v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  char *v19;
  uint64_t v20;
  id v21;
  double v22;
  NSString v23;
  uint64_t v24;
  id v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  char *v30;
  id v31;
  objc_super v34;
  char v35[24];
  char v36[24];

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v10 = &v5[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_style];
  *(_DWORD *)v10 = 0;
  *((_WORD *)v10 + 2) = 256;
  v5[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_titlePosition] = 1;
  v11 = &v5[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_title];
  *v11 = 0;
  v11[1] = 0;
  v12 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label;
  v13 = objc_allocWithZone((Class)UILabel);
  v14 = v5;
  *(_QWORD *)&v5[v12] = objc_msgSend(v13, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v15 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_activityIndicator;
  *(_QWORD *)&v14[v15] = objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "initWithActivityIndicatorStyle:", 100);
  *(_QWORD *)&v14[OBJC_IVAR____TtC11MusicCoreUI11LoadingView____lazy_storage___progressBar] = 0;
  swift_beginAccess(v11, v36, 1, 0);
  *v11 = a1;
  v11[1] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess(v10, v35, 1, 0);
  v10[4] = BYTE4(a3);
  *(_DWORD *)v10 = a3;
  v10[5] = BYTE5(a3) & 1;

  v34.receiver = v14;
  v34.super_class = ObjectType;
  v16 = (char *)objc_msgSendSuper2(&v34, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v17 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_activityIndicator;
  v18 = *(void **)&v16[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_activityIndicator];
  v19 = v16;
  objc_msgSend(v18, "setHidesWhenStopped:", 1);
  v20 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label;
  v21 = *(id *)&v19[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label];
  if (a2)
  {
    v23 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v22 = swift_bridgeObjectRelease().n128_u64[0];
  }
  else
  {
    v23 = 0;
  }
  objc_msgSend(v21, "setText:", v23, v22);

  objc_msgSend(*(id *)&v19[v20], "setAdjustsFontForContentSizeCategory:", 1);
  v24 = qword_1011DE228;
  v25 = *(id *)&v19[v20];
  if (v24 != -1)
    swift_once(&qword_1011DE228, sub_100C9FAF8);
  objc_msgSend(v25, "setFont:", qword_1011E5858);

  objc_msgSend(*(id *)&v19[v20], "setMaximumContentSizeCategory:", UIContentSizeCategoryAccessibilityMedium);
  objc_msgSend(*(id *)&v19[v20], "setNumberOfLines:", 0);
  objc_msgSend(*(id *)&v19[v20], "setTextAlignment:", 1);
  if ((a4 & 1) != 0)
  {
    v26 = *(void **)&v19[v20];
    v27 = (void *)objc_opt_self(UIColor);
    v28 = v26;
    v29 = objc_msgSend(v27, "secondaryLabelColor");
    objc_msgSend(v28, "setTextColor:", v29);

  }
  sub_100C9E748();
  objc_msgSend(v19, "addSubview:", *(_QWORD *)&v19[v20]);
  objc_msgSend(v19, "addSubview:", *(_QWORD *)&v16[v17]);
  v30 = v19;
  v31 = sub_100C9E8B8();
  objc_msgSend(v30, "addSubview:", v31);

  return v30;
}

void sub_100C9E748()
{
  uint64_t v0;
  unsigned int *v1;
  double v2;
  id v3;
  int v4;
  id v5;
  id v6;
  double v7;
  id v8;
  _BYTE v9[24];

  v1 = (unsigned int *)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_style);
  *(_QWORD *)&v2 = swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_style, v9, 0, 0).n128_u64[0];
  if ((*((_BYTE *)v1 + 5) & 1) != 0)
  {
    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_activityIndicator), "stopAnimating", v2);
    v3 = sub_100C9E8B8();
    objc_msgSend(v3, "setHidden:", 1);

    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label), "setHidden:", 1);
  }
  else if (((*v1 | ((unint64_t)*((unsigned __int8 *)v1 + 4) << 32)) & 0x100000000) != 0)
  {
    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_activityIndicator), "startAnimating", v2);
    v8 = sub_100C9E8B8();
    objc_msgSend(v8, "setHidden:", 1);

    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label), "setHidden:", 0);
  }
  else
  {
    v4 = *v1;
    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_activityIndicator), "stopAnimating", v2);
    v5 = sub_100C9E8B8();
    objc_msgSend(v5, "setHidden:", 0);

    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label), "setHidden:", 0);
    v6 = sub_100C9E8B8();
    LODWORD(v7) = v4;
    objc_msgSend(v6, "setProgress:", v7);

  }
}

id sub_100C9E8B8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView____lazy_storage___progressBar;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView____lazy_storage___progressBar);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView____lazy_storage___progressBar);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UIProgressView), "initWithProgressViewStyle:", 1);
    v5 = objc_msgSend((id)objc_opt_self(UIColor), "systemFillColor");
    objc_msgSend(v4, "setTrackTintColor:", v5);

    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

unint64_t LoadingView.style.getter()
{
  uint64_t v0;
  unsigned int *v1;
  _BYTE v3[24];

  v1 = (unsigned int *)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_style);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_style, v3, 0, 0);
  return *v1 | ((unint64_t)*((unsigned __int8 *)v1 + 4) << 32) | ((unint64_t)*((unsigned __int8 *)v1 + 5) << 40);
}

float LoadingView.style.setter(uint64_t a1)
{
  uint64_t v1;
  unsigned int *v3;
  float result;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  _BYTE v9[24];

  v3 = (unsigned int *)(v1 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_style);
  LODWORD(result) = swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_style, v9, 1, 0).n128_u32[0];
  v5 = *((unsigned __int8 *)v3 + 4);
  v6 = *v3;
  v7 = *((_BYTE *)v3 + 5);
  *v3 = a1;
  *((_BYTE *)v3 + 4) = BYTE4(a1);
  *((_BYTE *)v3 + 5) = BYTE5(a1) & 1;
  if ((a1 & 0x10000000000) != 0)
  {
    if ((v7 & 1) != 0)
      return result;
    goto LABEL_5;
  }
  if ((v7 & 1) != 0)
    goto LABEL_5;
  v8 = v6 | (v5 << 32);
  if ((a1 & 0x100000000) != 0)
  {
    if ((v8 & 0x100000000) != 0)
      return result;
    goto LABEL_5;
  }
  if ((v8 & 0x100000000) != 0 || (result = *(float *)&a1, *(float *)&a1 != *(float *)&v8))
LABEL_5:
    sub_100C9E748();
  return result;
}

void (*LoadingView.style.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_style;
  v3[3] = v1;
  v3[4] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 1, 0);
  v6 = *(_BYTE *)(v5 + 4);
  v7 = *(_BYTE *)(v5 + 5);
  *((_DWORD *)v3 + 10) = *(_DWORD *)v5;
  v3 += 5;
  *((_BYTE *)v3 + 4) = v6;
  *((_BYTE *)v3 + 5) = v7;
  return sub_100C9EB14;
}

void sub_100C9EB14(uint64_t a1, char a2)
{
  void *v2;
  uint64_t v3;
  unsigned int *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  unint64_t v8;
  char v9;

  v2 = *(void **)a1;
  v3 = *(unsigned int *)(*(_QWORD *)a1 + 40);
  v4 = (unsigned int *)(*(_QWORD *)(*(_QWORD *)a1 + 24) + *(_QWORD *)(*(_QWORD *)a1 + 32));
  v5 = *(unsigned __int8 *)(*(_QWORD *)a1 + 44);
  v6 = v3 | (v5 << 32);
  v7 = *(_BYTE *)(*(_QWORD *)a1 + 45);
  v8 = *v4 | ((unint64_t)*((unsigned __int8 *)v4 + 4) << 32);
  v9 = *((_BYTE *)v4 + 5);
  *v4 = v3;
  *((_BYTE *)v4 + 4) = v5;
  *((_BYTE *)v4 + 5) = v7;
  if ((a2 & 1) != 0)
  {
    if ((v7 & 1) == 0)
    {
      if ((v9 & 1) == 0)
      {
        if ((v6 & 0x100000000) != 0)
          goto LABEL_5;
        goto LABEL_12;
      }
LABEL_14:
      sub_100C9E748();
      goto LABEL_15;
    }
LABEL_8:
    if ((v9 & 1) != 0)
      goto LABEL_15;
    goto LABEL_14;
  }
  if ((v7 & 1) != 0)
    goto LABEL_8;
  if ((v9 & 1) != 0)
    goto LABEL_14;
  if ((v6 & 0x100000000) != 0)
  {
LABEL_5:
    if ((v8 & 0x100000000) != 0)
      goto LABEL_15;
    goto LABEL_14;
  }
LABEL_12:
  if ((v8 & 0x100000000) != 0 || *(float *)&v3 != *(float *)&v8)
    goto LABEL_14;
LABEL_15:
  free(v2);
}

uint64_t LoadingView.titlePosition.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_titlePosition);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_titlePosition, v3, 0, 0);
  return *v1;
}

void LoadingView.titlePosition.setter(unsigned __int8 a1)
{
  char *v1;
  char *v3;
  double v4;
  int v5;
  char v6[24];

  v3 = &v1[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_titlePosition];
  *(_QWORD *)&v4 = swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_titlePosition], v6, 1, 0).n128_u64[0];
  v5 = *v3;
  *v3 = a1;
  if (v5 != a1)
    objc_msgSend(v1, "setNeedsLayout", v4);
}

void (*LoadingView.titlePosition.modify(_QWORD *a1))(id **a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _BYTE *v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_titlePosition;
  v3[3] = v1;
  v3[4] = v4;
  v5 = (_BYTE *)(v1 + v4);
  swift_beginAccess(v1 + v4, v3, 1, 0);
  *((_BYTE *)v3 + 40) = *v5;
  return sub_100C9ECD0;
}

void sub_100C9ECD0(id **a1)
{
  id *v1;
  int v2;
  _BYTE *v3;
  id v4;
  int v5;

  v1 = *a1;
  v2 = *((unsigned __int8 *)*a1 + 40);
  v4 = (*a1)[3];
  v3 = (*a1)[4];
  v5 = v3[(_QWORD)v4];
  v3[(_QWORD)v4] = v2;
  if (v2 != v5)
    objc_msgSend(v1[3], "setNeedsLayout");
  free(v1);
}

id LoadingView.font.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label), "font");
}

void LoadingView.font.setter(void *a1)
{
  uint64_t v1;
  id v2;

  v2 = *(id *)(v1 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label);
  objc_msgSend(v2, "setFont:", a1);

}

void (*LoadingView.font.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  uint64_t v2;

  v2 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label;
  a1[1] = v1;
  a1[2] = v2;
  *a1 = objc_msgSend(*(id *)(v1 + v2), "font");
  return sub_100C9EDEC;
}

void sub_100C9EDEC(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;

  v2 = *(void **)a1;
  v3 = *(void **)(*(_QWORD *)(a1 + 8) + *(_QWORD *)(a1 + 16));
  if ((a2 & 1) != 0)
  {
    objc_msgSend(v3, "setFont:", v2);
    v4 = v2;
  }
  else
  {
    v5 = v3;
    objc_msgSend(v5, "setFont:", v2);

    v4 = v5;
  }

}

void sub_100C9EE54(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  id v9;
  NSString v10;
  char v11[24];

  v5 = &v2[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_title];
  swift_beginAccess(&v2[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_title], v11, 0, 0);
  v6 = *((_QWORD *)v5 + 1);
  if (!v6)
  {
    if (!a2)
      return;
    v9 = *(id *)&v2[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label];
    v10 = 0;
    goto LABEL_11;
  }
  v7 = *(_QWORD *)v5;
  if (!a2
    || (v7 == a1 ? (v8 = v6 == a2) : (v8 = 0),
        !v8 && (_stringCompareWithSmolCheck(_:_:expecting:)(v7, v6, a1, a2, 0) & 1) == 0))
  {
    v9 = *(id *)&v2[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label];
    swift_bridgeObjectRetain();
    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v6);
LABEL_11:
    objc_msgSend(v9, "setText:", v10);

    objc_msgSend(v2, "setNeedsLayout");
  }
}

uint64_t LoadingView.title.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_title);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_title, v4, 0, 0);
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

void LoadingView.title.setter(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  id v9;
  NSString v10;
  char v11[24];

  v5 = &v2[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_title];
  swift_beginAccess(&v2[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_title], v11, 1, 0);
  v6 = *(_QWORD *)v5;
  v7 = *((_QWORD *)v5 + 1);
  *(_QWORD *)v5 = a1;
  *((_QWORD *)v5 + 1) = a2;
  if (a2)
  {
    if (v7)
    {
      v8 = v6 == a1 && v7 == a2;
      if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, v6, v7, 0) & 1) != 0)
        goto LABEL_12;
    }
    v9 = *(id *)&v2[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label];
    swift_bridgeObjectRetain();
    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    if (!v7)
      return;
    v9 = *(id *)&v2[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label];
    v10 = 0;
  }
  objc_msgSend(v9, "setText:", v10);

  objc_msgSend(v2, "setNeedsLayout");
LABEL_12:
  swift_bridgeObjectRelease(v7);
}

void (*LoadingView.title.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_title;
  v3[5] = v1;
  v3[6] = v4;
  v5 = (_QWORD *)(v1 + v4);
  swift_beginAccess(v1 + v4, v3, 1, 0);
  v6 = v5[1];
  v3[3] = *v5;
  v3[4] = v6;
  swift_bridgeObjectRetain();
  return sub_100C9F140;
}

void sub_100C9F140(uint64_t a1, char a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 48);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v7 = (uint64_t *)(v5 + v4);
  v9 = *v7;
  v8 = v7[1];
  *v7 = v3;
  v7[1] = v6;
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    sub_100C9EE54(v9, v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100C9EE54(v9, v8);
  }
  swift_bridgeObjectRelease();
  free(v2);
}

Swift::Void __swiftcall LoadingView.layoutSubviews()()
{
  char *v0;
  id v1;
  id v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double x;
  double y;
  double width;
  double height;
  double v29;
  uint64_t v30;
  double v31;
  double v32;
  CGFloat v33;
  id v34;
  double v35;
  double v36;
  uint64_t v37;
  double v38;
  CGFloat v39;
  double v40;
  CGFloat v41;
  double v42;
  double v43;
  double v44;
  char *v45;
  double v46;
  double MaxY;
  double v48;
  double MinY;
  double v50;
  CGFloat v51;
  double v52;
  double v53;
  double v54;
  double v55;
  id v56;
  double v57;
  int v58;
  id v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;
  double v66;
  double v67;
  double v68;
  double v69;
  double v70;
  double v71;
  id v72;
  double v73;
  double v74;
  double v75;
  double v76;
  double v77;
  double v78;
  double v79;
  double v80;
  double v81;
  double v82;
  double v83;
  id v84;
  double v85;
  double v86;
  double v87;
  double v88;
  double v89;
  double v90;
  double v91;
  double v92;
  double v93;
  double v94;
  double v95;
  double v96;
  double v97;
  double v98;
  double v99;
  double v100;
  double v101;
  double v102;
  double v103;
  double v104;
  id v105;
  double v106;
  double v107;
  double v108;
  double v109;
  double v110;
  double v111;
  double v112;
  double v113;
  double v114;
  double v115;
  double v116;
  double v117;
  double v118;
  double v119;
  double v120;
  double v121;
  double v122;
  double v123;
  double v124;
  double v125;
  double v126;
  double v127;
  double v128;
  double v129;
  double v130;
  double v131;
  double v132;
  double v133;
  double v134;
  double v135;
  double v136;
  double MinX;
  double v138;
  double v139;
  double rect;
  double v141;
  double v142;
  double v143;
  double v144;
  double v145;
  char v146[24];
  objc_super v147;
  CGRect v148;
  CGRect v149;
  CGRect v150;
  CGRect v151;
  CGRect v152;
  CGRect v153;
  CGRect v154;
  CGRect v155;
  CGRect v156;
  CGRect v157;

  v147.receiver = v0;
  v147.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v147, "layoutSubviews");
  v1 = objc_msgSend(v0, "effectiveUserInterfaceLayoutDirection");
  v2 = objc_msgSend(v0, "traitCollection");
  objc_msgSend(v2, "displayScale");
  v4 = v3;

  objc_msgSend(v0, "bounds");
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;
  objc_msgSend(v0, "layoutMargins");
  v142 = sub_10004D6A0(v6, v8, v10, v12, v13, v14);
  v143 = v15;
  v144 = v16;
  v145 = v17;
  v18 = LoadingView.sizeThatFits(_:)(v16, v17);
  v20 = v19;
  objc_msgSend(v0, "bounds");
  v141 = v4;
  v148.origin.x = CGRect.centeringAlong(axes:bounds:scale:)(3, v21, v22, v23, v24, v4, 0.0, 0.0, v18, v20);
  x = v148.origin.x;
  y = v148.origin.y;
  width = v148.size.width;
  height = v148.size.height;
  v29 = CGRectGetWidth(v148);
  v30 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label;
  rect = height;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label], "sizeThatFits:", width, height);
  v138 = v32;
  v139 = v31;
  v149.origin.x = 0.0;
  v149.origin.y = 0.0;
  v149.size.height = 0.0;
  v149.size.width = v29;
  v33 = CGRectGetWidth(v149);
  v34 = sub_100C9E8B8();
  objc_msgSend(v34, "intrinsicContentSize");
  v36 = v35;

  v37 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_activityIndicator;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_activityIndicator], "intrinsicContentSize");
  v39 = v38;
  v41 = v40;
  v150.origin.x = 0.0;
  v150.origin.y = 0.0;
  v130 = v33;
  v150.size.width = v33;
  v150.size.height = v36;
  v42 = CGRectGetHeight(v150);
  v151.origin.x = 0.0;
  v151.origin.y = 0.0;
  v131 = v41;
  v133 = v39;
  v151.size.width = v39;
  v151.size.height = v41;
  v43 = CGRectGetHeight(v151);
  if (v42 > v43)
    v44 = v42;
  else
    v44 = v43;
  v45 = &v0[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_titlePosition];
  *(_QWORD *)&v46 = swift_beginAccess(&v0[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_titlePosition], v146, 0, 0).n128_u64[0];
  if (*v45)
  {
    if (*v45 == 1)
    {
      v152.origin.x = x;
      v152.origin.y = y;
      v152.size.width = width;
      v152.size.height = rect;
      MinX = CGRectGetMinX(v152);
      v153.origin.x = x;
      v153.origin.y = y;
      v153.size.width = v29;
      v153.size.height = v44;
      MaxY = CGRectGetMaxY(v153);
      objc_msgSend(*(id *)&v0[v30], "_firstBaselineOffsetFromTop");
      MinY = MaxY + v48 + -8.0;
    }
    else
    {
      objc_msgSend(*(id *)&v0[v37], "intrinsicContentSize", v46);
      v55 = v54;
      v56 = sub_100C9E8B8();
      objc_msgSend(v56, "intrinsicContentSize");
      v29 = v57;

      if (v55 > v29)
        v29 = v55;
      v156.origin.x = x;
      v156.origin.y = y;
      v156.size.width = v29;
      v156.size.height = v44;
      MinX = CGRectGetMaxX(v156) + 8.0;
      v157.origin.x = x;
      v157.origin.y = y;
      v157.size.width = width;
      v157.size.height = rect;
      MinY = CGRectGetMinY(v157);
    }
    v136 = MinY;
    v53 = y;
    v50 = x;
  }
  else
  {
    v154.origin.x = x;
    v154.origin.y = y;
    v154.size.width = width;
    v154.size.height = rect;
    v50 = CGRectGetMinX(v154);
    v155.origin.x = x;
    v155.origin.y = y;
    v155.size.height = v138;
    v155.size.width = v139;
    v51 = CGRectGetMaxY(v155) + 8.0;
    objc_msgSend(*(id *)&v0[v30], "_baselineOffsetFromBottom");
    v53 = v51 - v52;
    v136 = y;
    MinX = x;
  }
  v58 = *v45;
  v59 = sub_100C9E8B8();
  v134 = v53;
  v135 = v44;
  if (v58 == 2)
  {
    v129 = v44;
    v60 = v29;
    v61 = CGRect.centeringAlong(axes:bounds:scale:)(2, x, y, width, rect, v141, v50, v53, v29, v129);
    v63 = v62;
    v132 = v50;
    v65 = v64;
    v67 = v66;
    objc_msgSend(v0, "bounds");
    CGRect.applyingLayoutDirection(_:inBounds:)(v1, v68, v69, v70, v71, v61, v63, v65, v67);
    objc_msgSend(v59, "setFrame:");

    v72 = *(id *)&v0[v37];
    v73 = CGRect.centeringAlong(axes:bounds:scale:)(2, x, y, width, rect, v141, v132, v134, v60, v135);
    v75 = v74;
    v77 = v76;
    v79 = v78;
    objc_msgSend(v0, "bounds");
    CGRect.applyingLayoutDirection(_:inBounds:)(v1, v80, v81, v82, v83, v73, v75, v77, v79);
    objc_msgSend(v72, "setFrame:");

    v84 = *(id *)&v0[v30];
    v85 = CGRect.centeringAlong(axes:bounds:scale:)(2, v142, v143, v144, v145, v141, MinX, v136, v139, v138);
  }
  else
  {
    v89 = CGRect.centeringAlong(axes:bounds:scale:)(2, v50, v53, v29, v44, v141, 0.0, 0.0, v130, v36);
    v93 = CGRect.centeringAlong(axes:bounds:scale:)(1, v142, v143, v144, v145, v141, v89, v90, v91, v92);
    v95 = v94;
    v96 = v29;
    v98 = v97;
    v100 = v99;
    objc_msgSend(v0, "bounds");
    CGRect.applyingLayoutDirection(_:inBounds:)(v1, v101, v102, v103, v104, v93, v95, v98, v100);
    objc_msgSend(v59, "setFrame:");

    v105 = *(id *)&v0[v37];
    v106 = CGRect.centeringAlong(axes:bounds:scale:)(2, v50, v134, v96, v44, v141, 0.0, 0.0, v133, v131);
    v110 = CGRect.centeringAlong(axes:bounds:scale:)(1, v142, v143, v144, v145, v141, v106, v107, v108, v109);
    v112 = v111;
    v114 = v113;
    v116 = v115;
    objc_msgSend(v0, "bounds");
    CGRect.applyingLayoutDirection(_:inBounds:)(v1, v117, v118, v119, v120, v110, v112, v114, v116);
    objc_msgSend(v105, "setFrame:");

    v84 = *(id *)&v0[v30];
    v85 = CGRect.centeringAlong(axes:bounds:scale:)(1, v142, v143, v144, v145, v141, MinX, v136, v139, v138);
  }
  v121 = v85;
  v122 = v86;
  v123 = v87;
  v124 = v88;
  objc_msgSend(v0, "bounds");
  CGRect.applyingLayoutDirection(_:inBounds:)(v1, v125, v126, v127, v128, v121, v122, v123, v124);
  objc_msgSend(v84, "setFrame:");

}

double LoadingView.sizeThatFits(_:)(double a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  id v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  _BYTE *v15;
  double v16;
  double v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  double v21;
  double v22;
  uint64_t v23;
  _QWORD v25[2];
  _QWORD v26[2];
  _BYTE v27[24];

  v3 = v2;
  v6 = sub_100C9E8B8();
  objc_msgSend(v6, "sizeThatFits:", 0.0, 0.0);
  v8 = v7;
  v10 = v9;

  objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_activityIndicator), "sizeThatFits:", 0.0, 0.0);
  v13 = v12;
  if (v8 > v11)
    v14 = v8;
  else
    v14 = v11;
  v15 = (_BYTE *)(v3 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_titlePosition);
  *(_QWORD *)&v16 = swift_beginAccess(v3 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_titlePosition, v27, 0, 0).n128_u64[0];
  if (v10 > v13)
    v17 = v10;
  else
    v17 = v13;
  if (*v15 == 2)
  {
    v18 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label;
    objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label), "intrinsicContentSize", v16);
    objc_msgSend(*(id *)(v3 + v18), "intrinsicContentSize");
    return v14 + v19;
  }
  else
  {
    v20 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label;
    objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label), "sizeThatFits:", 0.0, 0.0);
    v22 = v21;
    _s3__C6CGSizeVMa_1(0);
    *(double *)v26 = a1;
    *(double *)&v26[1] = a2;
    v25[0] = 0;
    v25[1] = 0;
    if ((static ApproximatelyEquatable.!=~ infix(_:_:)(v26, v25, v23) & 1) != 0)
    {
      objc_msgSend(*(id *)(v3 + v20), "sizeThatFits:", a1, a2 - (v17 + 0.0 + 8.0));
    }
    else if (v22 > v14)
    {
      return v22;
    }
    else
    {
      return v14;
    }
  }
  return a1;
}

double LoadingView.intrinsicContentSize.getter()
{
  return LoadingView.sizeThatFits(_:)(0.0, 0.0);
}

BOOL static LoadingView.Style.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  if (((a1 | a2) & (unint64_t)&_mh_execute_header) != 0)
    return BYTE4(a1) & BYTE4(a2) & 1;
  else
    return *(float *)&a1 == *(float *)&a2;
}

uint64_t sub_100C9FAC8(uint64_t a1, uint64_t a2)
{
  int v3;
  unsigned int v4;
  uint64_t result;

  v3 = *(unsigned __int8 *)(a1 + 4);
  v4 = *(unsigned __int8 *)(a2 + 4);
  result = v3 & v4;
  if ((v3 & 1) == 0 && (v4 & 1) == 0)
    return *(float *)a1 == *(float *)a2;
  return result;
}

uint64_t sub_100C9FAF8()
{
  uint64_t result;

  sub_100C9FED4();
  result = static UIFont.preferredFont(forTextStyle:weight:)(UIFontTextStyleSubheadline, UIFontWeightRegular);
  qword_1011E5858 = result;
  return result;
}

void LoadingView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer("MusicCoreUI.LoadingView", 23, "init(frame:)", 12, 0);
  __break(1u);
}

unint64_t sub_100C9FBF8()
{
  unint64_t result;

  result = qword_1011E5890;
  if (!qword_1011E5890)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for LoadingView.TextPosition, &type metadata for LoadingView.TextPosition);
    atomic_store(result, (unint64_t *)&qword_1011E5890);
  }
  return result;
}

uint64_t type metadata accessor for LoadingView()
{
  return objc_opt_self(_TtC11MusicCoreUI11LoadingView);
}

uint64_t storeEnumTagSinglePayload for LoadingView.TextPosition(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100C9FCA8 + 4 * byte_100EF21E5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100C9FCDC + 4 * byte_100EF21E0[v4]))();
}

uint64_t sub_100C9FCDC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100C9FCE4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100C9FCECLL);
  return result;
}

uint64_t sub_100C9FCF8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100C9FD00);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100C9FD04(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100C9FD0C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LoadingView.TextPosition()
{
  return &type metadata for LoadingView.TextPosition;
}

uint64_t initializeBufferWithCopyOfBuffer for LoadingView.Style(uint64_t result, int *a2)
{
  int v2;

  v2 = *a2;
  *(_BYTE *)(result + 4) = *((_BYTE *)a2 + 4);
  *(_DWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for LoadingView.Style(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 5))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for LoadingView.Style(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_BYTE *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 5) = v3;
  return result;
}

uint64_t sub_100C9FD88(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 4))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_100C9FDA4(uint64_t result, int a2)
{
  if (a2)
  {
    *(_DWORD *)result = a2 - 1;
    *(_BYTE *)(result + 4) = 1;
  }
  else
  {
    *(_BYTE *)(result + 4) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for LoadingView.Style()
{
  return &type metadata for LoadingView.Style;
}

void sub_100C9FDD4()
{
  _BYTE *v0;
  char *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = &v0[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_style];
  *((_WORD *)v1 + 2) = 256;
  *(_DWORD *)v1 = 0;
  v0[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_titlePosition] = 1;
  v2 = &v0[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_title];
  *v2 = 0;
  v2[1] = 0;
  v3 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v4 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_activityIndicator;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "initWithActivityIndicatorStyle:", 100);
  *(_QWORD *)&v0[OBJC_IVAR____TtC11MusicCoreUI11LoadingView____lazy_storage___progressBar] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100E2B820, "MusicCoreUI/LoadingView.swift", 29, 2, 42, 0);
  __break(1u);
}

unint64_t sub_100C9FED4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011DE3F8;
  if (!qword_1011DE3F8)
  {
    v1 = objc_opt_self(UIFont);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1011DE3F8);
  }
  return result;
}

uint64_t MarkupView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t result;
  uint64_t v11;
  char v12;
  uint64_t v13;
  _QWORD v14[2];

  type metadata accessor for AttributedString(0);
  __chkstk_darwin();
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[0] = a1;
  v14[1] = a2;
  v8 = sub_100007E8C(&qword_1011E58C0);
  swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  swift_bridgeObjectRetain();
  MarkupRenderer.init(_:)(v14);
  dispatch thunk of MarkupRenderer.attributedString.getter();
  v9 = swift_release();
  result = Text.init(_:)(v7, v9);
  *(_QWORD *)a3 = result;
  *(_QWORD *)(a3 + 8) = v11;
  *(_BYTE *)(a3 + 16) = v12 & 1;
  *(_QWORD *)(a3 + 24) = v13;
  return result;
}

uint64_t sub_100C9FFD8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of MarkupView.body>>, 1);
}

uint64_t sub_100C9FFE8@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t result;
  uint64_t v10;
  char v11;
  uint64_t v12;
  _QWORD v13[2];

  type metadata accessor for AttributedString(0);
  __chkstk_darwin();
  v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v1;
  v6 = v1[1];
  v13[0] = v5;
  v13[1] = v6;
  v7 = sub_100007E8C(&qword_1011E58C0);
  swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
  swift_bridgeObjectRetain();
  MarkupRenderer.init(_:)(v13);
  dispatch thunk of MarkupRenderer.attributedString.getter();
  v8 = swift_release();
  result = Text.init(_:)(v4, v8);
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v10;
  *(_BYTE *)(a1 + 16) = v11 & 1;
  *(_QWORD *)(a1 + 24) = v12;
  return result;
}

ValueMetadata *type metadata accessor for MarkupView()
{
  return &type metadata for MarkupView;
}

void *sub_100CA00BC()
{
  return &protocol witness table for Text;
}

uint64_t NoticeView.init(notice:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;

  v4 = (int *)type metadata accessor for NoticeView(0);
  v5 = a2 + v4[5];
  *(_QWORD *)v5 = swift_getKeyPath(&unk_100EF2320);
  *(_QWORD *)(v5 + 8) = 0;
  *(_WORD *)(v5 + 16) = 0;
  v6 = (_QWORD *)(a2 + v4[6]);
  v17 = 0x3FF0000000000000;
  State.init(wrappedValue:)(&v17, &type metadata for Double);
  v7 = v15;
  *v6 = v14;
  v6[1] = v7;
  v8 = a2 + v4[7];
  LOBYTE(v17) = 0;
  GestureState.init(wrappedValue:)(&v14, &v17, &type metadata for Bool);
  v9 = v15;
  v10 = v16;
  *(_BYTE *)v8 = v14;
  *(_QWORD *)(v8 + 8) = v9;
  *(_OWORD *)(v8 + 16) = v10;
  v11 = a2 + v4[8];
  LOBYTE(v17) = 0;
  State.init(wrappedValue:)(&v17, &type metadata for Bool);
  v12 = v15;
  *(_BYTE *)v11 = v14;
  *(_QWORD *)(v11 + 8) = v12;
  return sub_10005B6C0(a1, a2, type metadata accessor for Notice);
}

uint64_t type metadata accessor for NoticeView(uint64_t a1)
{
  return sub_100055934(a1, qword_1011E5A48, (uint64_t)&nominal type descriptor for NoticeView);
}

uint64_t EnvironmentValues.noticeDismissal.getter()
{
  unint64_t v0;
  uint64_t v2;

  v0 = sub_100CA03DC();
  EnvironmentValues.subscript.getter(&v2, &_s25NoticeDismissalContextKeyVN, &_s25NoticeDismissalContextKeyVN, v0);
  return v2;
}

double sub_100CA0228@<D0>(uint64_t a1@<X8>)
{
  unint64_t v2;
  char v3;
  double result;
  __int128 v5;
  char v6;

  v2 = sub_100CA03DC();
  EnvironmentValues.subscript.getter(&v5, &_s25NoticeDismissalContextKeyVN, &_s25NoticeDismissalContextKeyVN, v2);
  v3 = v6;
  result = *(double *)&v5;
  *(_OWORD *)a1 = v5;
  *(_BYTE *)(a1 + 16) = v3;
  return result;
}

double sub_100CA027C@<D0>(uint64_t a1@<X8>)
{
  unint64_t v2;
  char v3;
  double result;
  __int128 v5;
  char v6;

  v2 = sub_100CA03DC();
  EnvironmentValues.subscript.getter(&v5, &_s25NoticeDismissalContextKeyVN, &_s25NoticeDismissalContextKeyVN, v2);
  v3 = v6;
  result = *(double *)&v5;
  *(_OWORD *)a1 = v5;
  *(_BYTE *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_100CA02D0(uint64_t a1)
{
  uint64_t v1;
  char v2;
  unint64_t v3;
  uint64_t v5[2];
  char v6;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(_BYTE *)(a1 + 16);
  v5[0] = *(_QWORD *)a1;
  v5[1] = v1;
  v6 = v2;
  sub_1002CF810(v5[0], v1);
  v3 = sub_100CA03DC();
  return EnvironmentValues.subscript.setter(v5, &_s25NoticeDismissalContextKeyVN, &_s25NoticeDismissalContextKeyVN, v3);
}

uint64_t EnvironmentValues.noticeDismissal.setter(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v3;
  _QWORD v5[2];
  char v6;

  v5[0] = a1;
  v5[1] = a2;
  v6 = a3;
  v3 = sub_100CA03DC();
  return EnvironmentValues.subscript.setter(v5, &_s25NoticeDismissalContextKeyVN, &_s25NoticeDismissalContextKeyVN, v3);
}

uint64_t property wrapper backing initializer of NoticeView.swapScale(double a1)
{
  _QWORD v2[3];

  *(double *)v2 = a1;
  State.init(wrappedValue:)(v2, &type metadata for Double);
  return v2[2];
}

uint64_t property wrapper backing initializer of NoticeView.isHighlighted(char a1)
{
  char v2;
  uint64_t v3;

  v2 = a1;
  GestureState.init(wrappedValue:)(&v3, &v2, &type metadata for Bool);
  return v3;
}

unint64_t sub_100CA03DC()
{
  unint64_t result;

  result = qword_1011E58C8;
  if (!qword_1011E58C8)
  {
    result = swift_getWitnessTable(&unk_100EF251C, &_s25NoticeDismissalContextKeyVN);
    atomic_store(result, (unint64_t *)&qword_1011E58C8);
  }
  return result;
}

uint64_t NoticeView.notice.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10005B704(v1, a1, type metadata accessor for Notice);
}

uint64_t NoticeView.notice.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_100CA044C(a1, v1);
}

uint64_t sub_100CA044C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Notice(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t NoticeView.dismiss.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  v1 = v0 + *(int *)(type metadata accessor for NoticeView(0) + 20);
  v2 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(unsigned __int8 *)(v1 + 16);
  v5 = *(unsigned __int8 *)(v1 + 17);
  sub_100CA0534(*(_QWORD *)v1, v3, v4, *(_BYTE *)(v1 + 17));
  v6 = sub_100C31C24(v2, v3, v4 | (v5 << 8));
  sub_100C43AEC(v2, v3, v4, v5);
  return v6;
}

double sub_100CA0534(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  double v4;

  if ((a4 & 1) != 0)
    sub_1002CF810(result, a2);
  else
    *(_QWORD *)&v4 = swift_retain().n128_u64[0];
  return v4;
}

uint64_t NoticeView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t KeyPath;
  uint64_t *v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  double v69;
  uint64_t v70;
  char *v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  __n128 v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t OpaqueTypeConformance2;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t *v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  _QWORD *v128;
  uint64_t v129;
  double v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  double *v134;
  uint64_t v135;
  __n128 v136;
  __n128 v137;
  __n128 v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t *v141;
  uint64_t v142;
  _QWORD *v143;
  void (*v144)(char *, _QWORD, uint64_t);
  char *v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t result;
  char *v150;
  uint64_t v151;
  char *v152;
  char *v153;
  void (*v154)(char *, char *, uint64_t);
  char *v155;
  char *v156;
  void (*v157)(char *, char *, uint64_t);
  uint64_t v158;
  void (*v159)(char *, uint64_t);
  char *v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  uint64_t v164;
  char *v165;
  unint64_t v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  __int128 v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  uint64_t v201;
  char *v202;
  uint64_t v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  uint64_t v218;
  char *v219;
  _QWORD *v220;
  char *v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  _QWORD v228[2];
  __int128 v229;
  uint64_t v230;
  char *v231;
  __int128 v232;
  _OWORD v233[7];

  v2 = v1;
  v177 = a1;
  v175 = sub_100007E8C(&qword_1011E58D0);
  __chkstk_darwin();
  v176 = (char *)&v168 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v172 = (char *)&v168 - v4;
  v218 = type metadata accessor for DynamicTypeSize(0);
  v220 = *(_QWORD **)(v218 - 8);
  __chkstk_darwin();
  v219 = (char *)&v168 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v217 = (char *)&v168 - v6;
  v174 = sub_100007E8C(&qword_1011E58D8);
  __chkstk_darwin();
  v171 = (char *)&v168 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v173 = (uint64_t)&v168 - v8;
  v216 = type metadata accessor for ContentTransition(0);
  v215 = *(_QWORD *)(v216 - 8);
  v9 = __chkstk_darwin();
  v214 = (char *)&v168 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v212 = type metadata accessor for TapGesture(0, v9);
  v210 = *(_QWORD *)(v212 - 8);
  __chkstk_darwin();
  v208 = (char *)&v168 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v211 = sub_100007E8C(&qword_1011E58E0);
  v209 = *(_QWORD *)(v211 - 8);
  __chkstk_darwin();
  v207 = (char *)&v168 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v227 = type metadata accessor for NoticeView(0);
  v193 = *(_QWORD *)(v227 - 8);
  __chkstk_darwin();
  v223 = v13;
  v213 = (uint64_t)&v168 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v186 = type metadata accessor for LocalCoordinateSpace(0);
  v14 = __chkstk_darwin();
  v185 = (char *)&v168 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v195 = type metadata accessor for DragGesture(0, v14);
  v194 = *(_QWORD *)(v195 - 8);
  __chkstk_darwin();
  v192 = (char *)&v168 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v188 = sub_100007E8C(&qword_1011E58E8);
  __chkstk_darwin();
  v202 = (char *)&v168 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v206 = sub_100007E8C(&qword_1011E58F0);
  __chkstk_darwin();
  v203 = (uint64_t)&v168 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v184 = type metadata accessor for Material(0);
  v183 = *(_QWORD *)(v184 - 8);
  __chkstk_darwin();
  v178 = (char *)&v168 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011E3528);
  __chkstk_darwin();
  v21 = (char **)((char *)&v168 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v205 = type metadata accessor for Notice(0);
  __chkstk_darwin();
  v23 = (char *)&v168 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for NoticeView.Content(0);
  __chkstk_darwin();
  v26 = (char *)&v168 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v179 = sub_100007E8C(&qword_1011E58F8);
  __chkstk_darwin();
  v28 = (char *)&v168 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v180 = sub_100007E8C(&qword_1011E5900);
  __chkstk_darwin();
  v30 = (char *)&v168 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v181 = sub_100007E8C(&qword_1011E5908);
  __chkstk_darwin();
  v32 = (char *)&v168 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v182 = sub_100007E8C(&qword_1011E5910);
  __chkstk_darwin();
  v34 = (char *)&v168 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v225 = sub_100007E8C(&qword_1011E5918);
  __chkstk_darwin();
  v224 = (uint64_t)&v168 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v191 = sub_100007E8C(&qword_1011E5920);
  v190 = *(_QWORD *)(v191 - 8);
  __chkstk_darwin();
  v189 = (char *)&v168 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v199 = sub_100007E8C(&qword_1011E5928);
  v197 = *(_QWORD *)(v199 - 8);
  __chkstk_darwin();
  v196 = (char *)&v168 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v187 = sub_100007E8C(&qword_1011E5930);
  __chkstk_darwin();
  v200 = (char *)&v168 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v198 = sub_100007E8C(&qword_1011E5938);
  __chkstk_darwin();
  v201 = (uint64_t)&v168 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v222 = sub_100007E8C(&qword_1011E5940);
  __chkstk_darwin();
  v221 = (char *)&v168 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = sub_100007E8C(&qword_1011E5948);
  v169 = *(_QWORD *)(v170 - 8);
  __chkstk_darwin();
  v168 = (char *)&v168 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v226 = v2;
  sub_10005B704(v2, (uint64_t)v23, type metadata accessor for Notice);
  *v21 = swift_getKeyPath(&unk_100EF2348);
  v42 = sub_100007E8C(&qword_1011DE430);
  swift_storeEnumTagMultiPayload(v21, v42, 0);
  KeyPath = swift_getKeyPath(&unk_100EF2378);
  v44 = (uint64_t *)&v26[*(int *)(v24 + 32)];
  *v44 = KeyPath;
  v45 = sub_100007E8C((uint64_t *)&unk_1011DE420);
  swift_storeEnumTagMultiPayload(v44, v45, 0);
  v204 = v23;
  sub_10005B6C0((uint64_t)v23, (uint64_t)v26, type metadata accessor for Notice);
  *(_QWORD *)&v233[0] = 0x4041000000000000;
  v46 = sub_100CA19BC();
  ScaledMetric.init(wrappedValue:)(v233, &type metadata for Double, v46);
  *(_QWORD *)&v233[0] = 0x4010000000000000;
  v47 = sub_100C10714();
  ScaledMetric.init(wrappedValue:)(v233, &type metadata for CGFloat, v47);
  v48 = sub_100065228((uint64_t)v21, (uint64_t)&v26[*(int *)(v24 + 28)], &qword_1011E3528);
  v49 = static Alignment.center.getter(v48);
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v233, 0, 1, 0, 1, 0, 1, 0x404B000000000000, 0, 0, 1, 0, 1, v49, v50);
  sub_10005B704((uint64_t)v26, (uint64_t)v28, type metadata accessor for NoticeView.Content);
  v51 = &v28[*(int *)(v179 + 36)];
  v52 = v233[5];
  *((_OWORD *)v51 + 4) = v233[4];
  *((_OWORD *)v51 + 5) = v52;
  *((_OWORD *)v51 + 6) = v233[6];
  v53 = v233[1];
  *(_OWORD *)v51 = v233[0];
  *((_OWORD *)v51 + 1) = v53;
  v54 = v233[3];
  *((_OWORD *)v51 + 2) = v233[2];
  *((_OWORD *)v51 + 3) = v54;
  v55 = sub_10005B748((uint64_t)v26, type metadata accessor for NoticeView.Content);
  v56 = v178;
  v57 = static Material.regular.getter(v55);
  LOBYTE(v21) = static Edge.Set.all.getter(v57);
  v58 = &v30[*(int *)(v180 + 36)];
  v59 = v183;
  v60 = v184;
  (*(void (**)(char *, char *, _QWORD))(v183 + 16))(v58, v56, v184);
  v58[*(int *)(sub_100007E8C(&qword_1011E2B40) + 36)] = (char)v21;
  sub_10004A160((uint64_t)v28, (uint64_t)v30, &qword_1011E58F8);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v56, v60);
  sub_10004FF60((uint64_t)v28, &qword_1011E58F8);
  if (qword_1011DE068 != -1)
    swift_once(&qword_1011DE068, sub_100C09FE0);
  v61 = static Corner.extraLarge;
  v62 = *(_QWORD *)algn_10124FDF8;
  v63 = byte_10124FE00;
  sub_10004A160((uint64_t)v30, (uint64_t)v32, &qword_1011E5900);
  v64 = &v32[*(int *)(v181 + 36)];
  *(_QWORD *)v64 = v61;
  *((_QWORD *)v64 + 1) = v62;
  v64[16] = v63;
  sub_10004FF60((uint64_t)v30, &qword_1011E5900);
  v65 = v226 + *(int *)(v227 + 28);
  v66 = v226;
  v67 = *(char **)(v65 + 8);
  LOBYTE(v230) = *(_BYTE *)v65;
  v231 = v67;
  v232 = *(_OWORD *)(v65 + 16);
  v68 = sub_100007E8C(&qword_1011E5958);
  GestureState.wrappedValue.getter(v228, v68);
  if (LOBYTE(v228[0]))
    v69 = 0.4;
  else
    v69 = 1.0;
  sub_10004A160((uint64_t)v32, (uint64_t)v34, &qword_1011E5908);
  *(double *)&v34[*(int *)(v182 + 36)] = v69;
  sub_10004FF60((uint64_t)v32, &qword_1011E5908);
  v70 = static Animation.easeIn(duration:)(0.2);
  v71 = *(char **)(v65 + 8);
  LOBYTE(v230) = *(_BYTE *)v65;
  v231 = v71;
  v232 = *(_OWORD *)(v65 + 16);
  GestureState.wrappedValue.getter(v228, v68);
  v72 = v228[0];
  v73 = v224;
  sub_10004A160((uint64_t)v34, v224, &qword_1011E5910);
  v74 = v73 + *(int *)(v225 + 36);
  *(_QWORD *)v74 = v70;
  *(_BYTE *)(v74 + 8) = v72;
  v75 = sub_10004FF60((uint64_t)v34, &qword_1011E5910);
  v76 = v185;
  static CoordinateSpaceProtocol<>.local.getter(v75);
  v77 = v192;
  DragGesture.init<A>(minimumDistance:coordinateSpace:)(v76, v186, &protocol witness table for LocalCoordinateSpace, 0.0);
  v78 = *(_QWORD *)(v65 + 8);
  LOBYTE(v228[0]) = *(_BYTE *)v65;
  v228[1] = v78;
  v229 = *(_OWORD *)(v65 + 16);
  GestureState.projectedValue.getter(&v230, v68);
  LOBYTE(v76) = v230;
  v185 = v231;
  v184 = v232;
  v79 = v66;
  v80 = v213;
  sub_10005B704(v66, v213, type metadata accessor for NoticeView);
  v81 = *(unsigned __int8 *)(v193 + 80);
  v82 = (v81 + 16) & ~v81;
  v83 = v82 + v223;
  v223 = v81 | 7;
  v186 = v83;
  v84 = swift_allocObject(&unk_10110D158, v83, v81 | 7);
  v193 = v82;
  sub_10005B6C0(v80, v84 + v82, type metadata accessor for NoticeView);
  v85 = v194;
  v86 = (uint64_t)v202;
  v87 = v195;
  (*(void (**)(char *, char *, uint64_t))(v194 + 16))(v202, v77, v195);
  v88 = v188;
  v89 = v86 + *(int *)(v188 + 44);
  *(_BYTE *)v89 = (_BYTE)v76;
  *(_QWORD *)(v89 + 8) = v185;
  *(_OWORD *)(v89 + 16) = v184;
  v90 = (_QWORD *)(v86 + *(int *)(v88 + 48));
  *v90 = sub_100CA1BE4;
  v90[1] = v84;
  (*(void (**)(char *, uint64_t))(v85 + 8))(v77, v87);
  v91 = v208;
  TapGesture.init(count:)(1);
  sub_10005B704(v79, v80, type metadata accessor for NoticeView);
  v92 = swift_allocObject(&unk_10110D180, v83, v223);
  v93 = v80;
  sub_10005B6C0(v80, v92 + v82, type metadata accessor for NoticeView);
  v94 = swift_allocObject(&unk_10110D1A8, 32, 7);
  *(_QWORD *)(v94 + 16) = sub_100CA1F30;
  *(_QWORD *)(v94 + 24) = v92;
  v95 = v207;
  v96 = v212;
  Gesture.onEnded(_:)(sub_10004D5F4, v94, v212, &protocol witness table for TapGesture);
  v97 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v210 + 8))(v91, v96, v97);
  v98 = v203;
  sub_10004A160(v86, v203, &qword_1011E58E8);
  v99 = v206;
  (*(void (**)(uint64_t, char *, uint64_t))(v209 + 32))(v98 + *(int *)(v206 + 52), v95, v211);
  v100 = sub_10004FF60(v86, &qword_1011E58E8);
  v101 = static GestureMask.all.getter(v100);
  v102 = sub_100CA1F60();
  v103 = sub_100049F28(&qword_1011E5990, &qword_1011E58F0, (uint64_t)&protocol conformance descriptor for SequenceGesture<A, B>);
  v104 = v189;
  v105 = v225;
  v106 = v224;
  View.gesture<A>(_:including:)(v98, v101, v225, v99, v102, v103);
  sub_10004FF60(v98, &qword_1011E58F0);
  sub_10004FF60(v106, &qword_1011E5918);
  v107 = v226;
  v108 = (uint64_t)v204;
  sub_10005B704(v226, (uint64_t)v204, type metadata accessor for Notice);
  sub_10005B704(v107, v93, type metadata accessor for NoticeView);
  v109 = swift_allocObject(&unk_10110D1D0, v186, v223);
  sub_10005B6C0(v93, v109 + v193, type metadata accessor for NoticeView);
  v230 = v105;
  v231 = (char *)v99;
  *(_QWORD *)&v232 = v102;
  *((_QWORD *)&v232 + 1) = v103;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v230, &opaque type descriptor for <<opaque return type of View.gesture<A>(_:including:)>>, 1);
  v111 = sub_100048748(&qword_1011E5998, type metadata accessor for Notice, (uint64_t)&protocol conformance descriptor for Notice);
  v112 = v196;
  v113 = v191;
  View.onChange<A>(of:initial:_:)(v108, 0, sub_100CA22C0, v109, v191, v205, OpaqueTypeConformance2, v111);
  swift_release();
  sub_10005B748(v108, type metadata accessor for Notice);
  v114 = (*(uint64_t (**)(char *, uint64_t))(v190 + 8))(v104, v113);
  v115 = v214;
  static ContentTransition.opacity.getter(v114);
  v116 = swift_getKeyPath(&unk_100EF23A8);
  v117 = (uint64_t)v200;
  v118 = (uint64_t *)&v200[*(int *)(v187 + 36)];
  v119 = sub_100007E8C(&qword_1011E59A0);
  v120 = v215;
  v121 = v216;
  (*(void (**)(char *, char *, uint64_t))(v215 + 16))((char *)v118 + *(int *)(v119 + 28), v115, v216);
  *v118 = v116;
  v122 = v197;
  v123 = v199;
  (*(void (**)(uint64_t, char *, uint64_t))(v197 + 16))(v117, v112, v199);
  (*(void (**)(char *, uint64_t))(v120 + 8))(v115, v121);
  (*(void (**)(char *, uint64_t))(v122 + 8))(v112, v123);
  v124 = (uint64_t *)(v107 + *(int *)(v227 + 24));
  v125 = *v124;
  v126 = (char *)v124[1];
  v230 = v125;
  v231 = v126;
  v127 = sub_100007E8C(&qword_1011E59A8);
  v128 = State.wrappedValue.getter(v228, v127);
  v129 = v228[0];
  v130 = static UnitPoint.center.getter(v128);
  v132 = v131;
  v133 = v201;
  sub_10004A160(v117, v201, &qword_1011E5930);
  v134 = (double *)(v133 + *(int *)(v198 + 36));
  *(_QWORD *)v134 = v129;
  *((_QWORD *)v134 + 1) = v129;
  v134[2] = v130;
  *((_QWORD *)v134 + 3) = v132;
  v135 = sub_10004FF60(v117, &qword_1011E5930);
  v136.n128_u64[0] = 0x4089900000000000;
  v137.n128_u64[0] = 0x4043000000000000;
  v138.n128_u64[0] = 1.0;
  static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)(v135, v138, v136, v137, 1.0);
  v139 = Animation.delay(_:)(0.05);
  swift_release();
  v140 = (uint64_t)v221;
  v141 = (uint64_t *)&v221[*(int *)(v222 + 36)];
  v142 = sub_100007E8C(&qword_1011E59B0);
  sub_10005B704(v107, (uint64_t)v141 + *(int *)(v142 + 36), type metadata accessor for Notice);
  *v141 = v139;
  sub_100065228(v133, v140, &qword_1011E5938);
  v143 = v220;
  v144 = (void (*)(char *, _QWORD, uint64_t))v220[13];
  v145 = v217;
  v146 = v218;
  v144(v217, enum case for DynamicTypeSize.xSmall(_:), v218);
  v147 = v219;
  v144(v219, enum case for DynamicTypeSize.accessibility2(_:), v146);
  v148 = sub_100048748((unint64_t *)&qword_1011E3AD0, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  result = dispatch thunk of static Comparable.<= infix(_:_:)(v145, v147, v146, v148);
  if ((result & 1) != 0)
  {
    v150 = v147;
    v151 = v175;
    v152 = v172;
    v153 = &v172[*(int *)(v175 + 48)];
    v154 = (void (*)(char *, char *, uint64_t))v143[4];
    v154(v172, v145, v146);
    v154(v153, v150, v146);
    v155 = v176;
    v156 = &v176[*(int *)(v151 + 48)];
    v157 = (void (*)(char *, char *, uint64_t))v143[2];
    v157(v176, v152, v146);
    v157(v156, v153, v146);
    v158 = (uint64_t)v171;
    v154(v171, v155, v146);
    v159 = (void (*)(char *, uint64_t))v143[1];
    v159(v156, v146);
    v160 = &v155[*(int *)(v151 + 48)];
    v154(v155, v152, v146);
    v154(v160, v153, v146);
    v161 = v174;
    v154((char *)(v158 + *(int *)(v174 + 36)), v160, v146);
    v159(v155, v146);
    v162 = v173;
    sub_100065228(v158, v173, &qword_1011E58D8);
    v163 = sub_100CA4A84();
    v164 = sub_100049F28(&qword_1011E59E0, &qword_1011E58D8, (uint64_t)&protocol conformance descriptor for ClosedRange<A>);
    v165 = v168;
    v166 = v163;
    v167 = (uint64_t)v221;
    View.dynamicTypeSize<A>(_:)(v162, v222, v161, v166, v164);
    sub_10004FF60(v162, &qword_1011E58D8);
    sub_10004FF60(v167, &qword_1011E5940);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v169 + 32))(v177, v165, v170);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for NoticeView.Content(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011E5AF0, (uint64_t)&nominal type descriptor for NoticeView.Content);
}

unint64_t sub_100CA19BC()
{
  unint64_t result;

  result = qword_1011E5950;
  if (!qword_1011E5950)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Double, &type metadata for Double);
    atomic_store(result, (unint64_t *)&qword_1011E5950);
  }
  return result;
}

uint64_t sub_100CA1A00(uint64_t a1, _BYTE *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  int v12;
  uint64_t result;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;

  v6 = type metadata accessor for NoticeView(0);
  __chkstk_darwin();
  v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  v10 = &v22[-v9];
  v11 = type metadata accessor for Notice(0);
  v12 = *(unsigned __int8 *)(a4 + *(int *)(v11 + 40));
  sub_10005B704(a4, (uint64_t)v10, type metadata accessor for NoticeView);
  if (v12 == 1)
  {
    result = sub_10005B748((uint64_t)v10, type metadata accessor for NoticeView);
LABEL_5:
    *a2 = 1;
    return result;
  }
  v14 = (uint64_t *)&v10[*(int *)(v11 + 32)];
  v16 = *v14;
  v15 = v14[1];
  if (*v14)
  {
    v17 = swift_allocObject(&unk_10110D2C0, 32, 7);
    *(_QWORD *)(v17 + 16) = v16;
    *(_QWORD *)(v17 + 24) = v15;
    sub_100048AAC(v16, v15);
    sub_10004BA30((uint64_t)sub_10010942C, v17);
    sub_10005B704((uint64_t)v10, (uint64_t)v8, type metadata accessor for NoticeView);
    v18 = &v8[*(int *)(v6 + 32)];
    v19 = *v18;
    v20 = *((_QWORD *)v18 + 1);
    v22[8] = v19;
    v23 = v20;
    v21 = sub_100007E8C(&qword_1011E1B98);
    State.wrappedValue.getter(&v24, v21);
    sub_10005B748((uint64_t)v8, type metadata accessor for NoticeView);
    result = sub_10005B748((uint64_t)v10, type metadata accessor for NoticeView);
    if ((v24 & 1) != 0)
      return result;
    goto LABEL_5;
  }
  sub_100048AAC(0, v14[1]);
  sub_10004BA30(0, 0);
  sub_10005B704((uint64_t)v10, (uint64_t)v8, type metadata accessor for NoticeView);
  sub_10005B748((uint64_t)v8, type metadata accessor for NoticeView);
  return sub_10005B748((uint64_t)v10, type metadata accessor for NoticeView);
}

uint64_t sub_100CA1BE4(uint64_t a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for NoticeView(0) - 8) + 80);
  return sub_100CA1A00(a1, a2, a3, v3 + ((v7 + 16) & ~v7));
}

double sub_100CA1C38(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void (*v4)(void);
  double result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = type metadata accessor for NoticeView(0);
  v3 = sub_100007E8C(&qword_1011E1B98);
  State.wrappedValue.getter(&v14, v3);
  if ((v14 & 1) == 0)
  {
    LOBYTE(v14) = 1;
    State.wrappedValue.setter(&v14, v3);
    v4 = *(void (**)(void))(a1 + *(int *)(type metadata accessor for Notice(0) + 32));
    if (v4)
      v4();
  }
  if (*(_BYTE *)(a1 + *(int *)(type metadata accessor for Notice(0) + 40)) == 1)
  {
    v6 = a1 + *(int *)(v2 + 20);
    v7 = *(_QWORD *)v6;
    v8 = *(_QWORD *)(v6 + 8);
    v9 = *(unsigned __int8 *)(v6 + 16);
    v10 = *(unsigned __int8 *)(v6 + 17);
    sub_100CA0534(*(_QWORD *)v6, v8, v9, *(_BYTE *)(v6 + 17));
    sub_100C31C24(v7, v8, v9 | (v10 << 8));
    v12 = v11;
    result = sub_100C43AEC(v7, v8, v9, v10);
    if (v12)
    {
      LOBYTE(v14) = 0;
      v13 = sub_100007E8C(&qword_1011E53D0);
      Binding.wrappedValue.setter(&v14, v13);
      swift_release();
      *(_QWORD *)&result = swift_release().n128_u64[0];
    }
  }
  return result;
}

uint64_t sub_100CA1DB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int EnumCaseMultiPayload;
  uint64_t v11;

  v1 = type metadata accessor for NoticeView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = v0 + v3;
  swift_bridgeObjectRelease();
  v6 = type metadata accessor for Notice(0);
  v7 = v0 + v3 + *(int *)(v6 + 20);
  v8 = type metadata accessor for Notice.Thumbnail(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v7, v8);
    if (EnumCaseMultiPayload == 1)
    {
      v11 = type metadata accessor for Artwork(0);
      (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v7, v11);
    }
    else if (!EnumCaseMultiPayload)
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v5 + *(int *)(v6 + 32)))
    swift_release();
  sub_100C43AEC(*(_QWORD *)(v5 + *(int *)(v1 + 20)), *(_QWORD *)(v5 + *(int *)(v1 + 20) + 8), *(unsigned __int8 *)(v5 + *(int *)(v1 + 20) + 16), *(_BYTE *)(v5 + *(int *)(v1 + 20) + 17));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject(v0, v3 + v4);
}

uint64_t sub_100CA1F30()
{
  return sub_100CA7D10((uint64_t (*)(uint64_t))sub_100CA1C38);
}

uint64_t sub_100CA1F3C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_100CA1F60()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E5960;
  if (!qword_1011E5960)
  {
    v1 = sub_100044B54(&qword_1011E5918);
    sub_100CA1FE4();
    sub_100049F28(&qword_1011E2C48, &qword_1011E2C50, (uint64_t)&protocol conformance descriptor for _AnimationModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E5960);
  }
  return result;
}

unint64_t sub_100CA1FE4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E5968;
  if (!qword_1011E5968)
  {
    v1 = sub_100044B54(&qword_1011E5910);
    sub_100C75E38(&qword_1011E5970, &qword_1011E5908, (void (*)(void))sub_100CA2070, (void (*)(void))sub_100C0A5E4);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E5968);
  }
  return result;
}

unint64_t sub_100CA2070()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E5978;
  if (!qword_1011E5978)
  {
    v1 = sub_100044B54(&qword_1011E5900);
    sub_100CA20F4();
    sub_100049F28(&qword_1011E2B38, &qword_1011E2B40, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E5978);
  }
  return result;
}

unint64_t sub_100CA20F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E5980;
  if (!qword_1011E5980)
  {
    v1 = sub_100044B54(&qword_1011E58F8);
    sub_100048748(&qword_1011E5988, type metadata accessor for NoticeView.Content, (uint64_t)&unk_100EF24CC);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E5980);
  }
  return result;
}

void sub_100CA2178(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  __n128 v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[16];
  uint64_t v24;

  v4 = *(_QWORD *)(type metadata accessor for NoticeView(0) - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = __chkstk_darwin();
  v7.n128_u64[0] = 0x408A900000000000;
  v8.n128_u64[0] = 0x4048000000000000;
  v6.n128_u64[0] = 1.0;
  v10 = static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)(v9, v6, v7, v8, 1.0);
  v24 = a3;
  withAnimation<A>(_:_:)(v10, sub_100CA7CA4, v23, (char *)&type metadata for () + 8);
  swift_release();
  v11 = sub_100CA7CC4();
  v19 = (void *)static OS_dispatch_queue.main.getter(v11, v12, v13, v14, v15, v16, v17, v18);
  sub_10005B704(a3, (uint64_t)&v23[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], type metadata accessor for NoticeView);
  v20 = *(unsigned __int8 *)(v4 + 80);
  v21 = (v20 + 16) & ~v20;
  v22 = swift_allocObject(&unk_10110D298, v21 + v5, v20 | 7);
  sub_10005B6C0((uint64_t)&v23[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], v22 + v21, type metadata accessor for NoticeView);
  OS_dispatch_queue.asyncAfter(_:block:)((uint64_t)sub_100CA7D04, v22, 0.215);
  swift_release();

}

void sub_100CA22C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for NoticeView(0) - 8) + 80);
  sub_100CA2178(a1, a2, v2 + ((v5 + 16) & ~v5));
}

double sub_100CA230C(uint64_t a1, __n128 a2, __n128 a3, __n128 a4)
{
  uint64_t v5;
  double result;
  _QWORD v7[4];

  a3.n128_u64[0] = 0x406C600000000000;
  a2.n128_u64[0] = 1.0;
  a4.n128_u64[0] = 17.0;
  v5 = static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)(a1, a2, a3, a4, 1.0);
  v7[2] = a1;
  withAnimation<A>(_:_:)(v5, sub_100CA7D4C, v7, (char *)&type metadata for () + 8);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100CA2384(double a1)
{
  uint64_t v2;
  double v4;

  type metadata accessor for NoticeView(0);
  v4 = a1;
  v2 = sub_100007E8C(&qword_1011E59A8);
  return State.wrappedValue.setter(&v4, v2);
}

uint64_t sub_100CA2400@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(_QWORD);
  _BOOL8 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char *v21;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  sub_100007E8C(&qword_1011E5B40);
  __chkstk_darwin();
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011E5B48);
  __chkstk_darwin();
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DynamicTypeSize(0);
  __chkstk_darwin();
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Notice(0);
  __chkstk_darwin();
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B704(v1, (uint64_t)v11, v12);
  type metadata accessor for NoticeView.Content(0);
  sub_100C31810((uint64_t)v9);
  sub_100CA7560((uint64_t)v11, (uint64_t)v9, (double *)&v24);
  v13 = sub_100CA2604();
  if (v13)
    v14 = static VerticalAlignment.top.getter(v13);
  else
    v14 = static VerticalAlignment.center.getter(v13);
  v15 = v27;
  *(_QWORD *)v4 = v14;
  *((_QWORD *)v4 + 1) = v15;
  v4[16] = 0;
  v16 = sub_100007E8C(&qword_1011E5B50);
  v17 = sub_100CA2790(v1, (uint64_t)&v24, (uint64_t)&v4[*(int *)(v16 + 44)]);
  v23 = v24;
  v18 = v25;
  v19 = v26;
  v20 = static Edge.Set.all.getter(v17);
  sub_10004A160((uint64_t)v4, (uint64_t)v7, &qword_1011E5B40);
  v21 = &v7[*(int *)(v5 + 36)];
  *v21 = v20;
  *(_OWORD *)(v21 + 8) = v23;
  *((_QWORD *)v21 + 3) = v18;
  *((_QWORD *)v21 + 4) = v19;
  v21[40] = 0;
  sub_10004FF60((uint64_t)v4, &qword_1011E5B40);
  return sub_100065228((uint64_t)v7, a1, &qword_1011E5B48);
}

BOOL sub_100CA2604()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v18;

  v1 = v0;
  sub_100007E8C(&qword_1011E59E8);
  __chkstk_darwin();
  v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DynamicTypeSize(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for NoticeView.Content(0);
  v8 = sub_100C31810((uint64_t)v7);
  v9 = DynamicTypeSize.isAccessibilitySize.getter(v8);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if ((v9 & 1) != 0)
  {
    v10 = type metadata accessor for Notice(0);
    v11 = (_QWORD *)(v1 + *(int *)(v10 + 28));
    v12 = v11[1];
    if (v12)
    {
      v13 = *v11 & 0xFFFFFFFFFFFFLL;
      if ((v12 & 0x2000000000000000) != 0 ? HIBYTE(v12) & 0xF : v13)
      {
        sub_10004A160(v1 + *(int *)(v10 + 20), (uint64_t)v3, &qword_1011E59E8);
        v15 = type metadata accessor for Notice.Thumbnail(0);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v3, 1, v15) != 1)
        {
          v16 = swift_getEnumCaseMultiPayload(v3, v15) == 1;
          sub_10005B748((uint64_t)v3, type metadata accessor for Notice.Thumbnail);
          return v16;
        }
        sub_10004FF60((uint64_t)v3, &qword_1011E59E8);
      }
    }
  }
  return 0;
}

uint64_t sub_100CA2790@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t KeyPath;
  uint64_t *v25;
  __n128 v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _OWORD v55[7];

  v53 = a2;
  v54 = a3;
  v50 = a1;
  sub_100007E8C(&qword_1011E5B58);
  __chkstk_darwin();
  v52 = (uint64_t)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v6 = (char *)&v46 - v5;
  sub_100007E8C(&qword_1011E5B60);
  __chkstk_darwin();
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = sub_100007E8C(&qword_1011E5B68);
  __chkstk_darwin();
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_100007E8C(&qword_1011E5B70);
  __chkstk_darwin();
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_100007E8C(&qword_1011E5B78);
  __chkstk_darwin();
  v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = sub_100007E8C(&qword_1011E5B80);
  __chkstk_darwin();
  v51 = (uint64_t)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v17 = (char *)&v46 - v16;
  __chkstk_darwin();
  v19 = (char *)&v46 - v18;
  sub_100CA2C08(a1, (uint64_t)v8);
  v21 = static Font.subheadline.getter(v20);
  v22 = static Font.Weight.semibold.getter(v21);
  v23 = Font.weight(_:)(v21, v22);
  swift_release();
  KeyPath = swift_getKeyPath(&unk_100EF2558);
  sub_10004A160((uint64_t)v8, (uint64_t)v10, &qword_1011E5B60);
  v25 = (uint64_t *)&v10[*(int *)(v46 + 36)];
  *v25 = KeyPath;
  v25[1] = v23;
  sub_10004FF60((uint64_t)v8, &qword_1011E5B60);
  v27 = static HierarchicalShapeStyle.primary.getter(v26);
  sub_10004A160((uint64_t)v10, (uint64_t)v12, &qword_1011E5B68);
  *(_DWORD *)&v12[*(int *)(v47 + 36)] = v27;
  v28 = sub_10004FF60((uint64_t)v10, &qword_1011E5B68);
  v29 = static Alignment.center.getter(v28);
  v45 = 1;
  v44 = 1;
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v55, 0x403E000000000000, 0, 0, 1, 0, 1, 0, 1, 0, v44, 0, v45, v29, v30);
  sub_10004A160((uint64_t)v12, (uint64_t)v14, &qword_1011E5B70);
  v31 = &v14[*(int *)(v48 + 36)];
  v32 = v55[5];
  *((_OWORD *)v31 + 4) = v55[4];
  *((_OWORD *)v31 + 5) = v32;
  *((_OWORD *)v31 + 6) = v55[6];
  v33 = v55[1];
  *(_OWORD *)v31 = v55[0];
  *((_OWORD *)v31 + 1) = v33;
  v34 = v55[3];
  *((_OWORD *)v31 + 2) = v55[2];
  *((_OWORD *)v31 + 3) = v34;
  sub_10004FF60((uint64_t)v12, &qword_1011E5B70);
  sub_10004A160((uint64_t)v14, (uint64_t)v17, &qword_1011E5B78);
  v35 = &v17[*(int *)(v49 + 36)];
  *(_QWORD *)v35 = 0x3FF0000000000000;
  *((_WORD *)v35 + 4) = 0;
  sub_10004FF60((uint64_t)v14, &qword_1011E5B78);
  v36 = sub_100065228((uint64_t)v17, (uint64_t)v19, &qword_1011E5B80);
  *(_QWORD *)v6 = static HorizontalAlignment.leading.getter(v36);
  *((_QWORD *)v6 + 1) = 0;
  v6[16] = 1;
  v37 = sub_100007E8C(&qword_1011E5B88);
  sub_100CA36E8(v50, v53, (uint64_t *)&v6[*(int *)(v37 + 44)], v38);
  v39 = v51;
  sub_10004A160((uint64_t)v19, v51, &qword_1011E5B80);
  v40 = v52;
  sub_10004A160((uint64_t)v6, v52, &qword_1011E5B58);
  v41 = v54;
  sub_10004A160(v39, v54, &qword_1011E5B80);
  v42 = sub_100007E8C(&qword_1011E5B90);
  sub_10004A160(v40, v41 + *(int *)(v42 + 48), &qword_1011E5B58);
  sub_10004FF60((uint64_t)v6, &qword_1011E5B58);
  sub_10004FF60((uint64_t)v19, &qword_1011E5B80);
  sub_10004FF60(v40, &qword_1011E5B58);
  return sub_10004FF60(v39, &qword_1011E5B80);
}

void sub_100CA2C08(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t EnumCaseMultiPayload;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _OWORD *v76;
  __int128 v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _OWORD v112[3];

  v111 = a2;
  v109 = sub_100007E8C(&qword_1011E5BD0);
  __chkstk_darwin();
  v4 = (char *)&v83 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = sub_100007E8C(&qword_1011E5BD8);
  __chkstk_darwin();
  v6 = (char *)&v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = type metadata accessor for CircularProgressView.LineStyle(0);
  v88 = *(_QWORD *)(v89 - 8);
  __chkstk_darwin();
  v91 = (char *)&v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = type metadata accessor for CircularProgressView(0);
  v97 = *(_QWORD *)(v98 - 8);
  __chkstk_darwin();
  v96 = (char *)&v83 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011E5BE0);
  __chkstk_darwin();
  v94 = (char *)&v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v100 = (uint64_t)&v83 - v11;
  v93 = type metadata accessor for ArtworkImage(0);
  v92 = *(_QWORD *)(v93 - 8);
  __chkstk_darwin();
  v90 = (char *)&v83 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = sub_100007E8C(&qword_1011E5BE8);
  __chkstk_darwin();
  v99 = (char *)&v83 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = sub_100007E8C(&qword_1011E5BF0);
  __chkstk_darwin();
  v95 = (uint64_t)&v83 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v103 = (uint64_t)&v83 - v15;
  v102 = type metadata accessor for Artwork(0);
  v107 = *(_QWORD *)(v102 - 8);
  __chkstk_darwin();
  v17 = (char *)&v83 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v101 = (char *)&v83 - v18;
  v19 = sub_100007E8C(&qword_1011E5BF8);
  __chkstk_darwin();
  v21 = (char *)&v83 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = sub_100007E8C(&qword_1011E5C00);
  __chkstk_darwin();
  v105 = (uint64_t *)((char *)&v83 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = sub_100007E8C(&qword_1011E5C08);
  __chkstk_darwin();
  v106 = (char *)&v83 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011E59E8);
  __chkstk_darwin();
  v26 = (uint64_t *)((char *)&v83 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  v27 = type metadata accessor for Notice(0);
  sub_10004A160(a1 + *(int *)(v27 + 20), (uint64_t)v26, &qword_1011E59E8);
  v28 = type metadata accessor for Notice.Thumbnail(0);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 48))(v26, 1, v28) == 1)
  {
    swift_storeEnumTagMultiPayload(v4, v109, 1);
    v29 = sub_100CA7B10();
    _ConditionalContent<>.init(storage:)(v4, v9, &type metadata for EmptyView, v29, &protocol witness table for EmptyView);
    sub_10004A160((uint64_t)v6, (uint64_t)v21, &qword_1011E5BD8);
    swift_storeEnumTagMultiPayload(v21, v19, 1);
    v30 = sub_100CA7B94();
    v31 = sub_100CA79B0(&qword_1011E5C40, &qword_1011E5BD8, (void (*)(void))sub_100CA7B10);
    _ConditionalContent<>.init(storage:)(v21, v23, v110, v30, v31);
    v32 = (uint64_t)v6;
    v33 = &qword_1011E5BD8;
LABEL_10:
    sub_10004FF60(v32, v33);
    return;
  }
  v84 = v21;
  v85 = v19;
  v86 = v23;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v26, v28);
  if (!(_DWORD)EnumCaseMultiPayload)
  {
    v60 = v104;
    v61 = v105;
    *v105 = *v26;
    swift_storeEnumTagMultiPayload(v61, v60, 0);
    v62 = sub_100C75E38(&qword_1011E5C28, &qword_1011E5BF0, (void (*)(void))sub_100CA7C20, (void (*)(void))sub_100C0A63C);
    swift_retain();
    v63 = (uint64_t)v106;
    _ConditionalContent<>.init(storage:)(v61, &type metadata for Image, v108, &protocol witness table for Image, v62);
    v64 = (uint64_t)v84;
    sub_10004A160(v63, (uint64_t)v84, &qword_1011E5C08);
    swift_storeEnumTagMultiPayload(v64, v85, 0);
    v65 = sub_100CA7B94();
    v66 = sub_100CA79B0(&qword_1011E5C40, &qword_1011E5BD8, (void (*)(void))sub_100CA7B10);
    _ConditionalContent<>.init(storage:)(v64, v86, v110, v65, v66);
    sub_10004FF60(v63, &qword_1011E5C08);
    swift_release();
    return;
  }
  if ((_DWORD)EnumCaseMultiPayload != 1)
  {
    v67 = static Color.white.getter(EnumCaseMultiPayload);
    v68 = v91;
    (*(void (**)(char *, _QWORD, uint64_t))(v88 + 104))(v91, enum case for CircularProgressView.LineStyle.round(_:), v89);
    LOBYTE(v112[0]) = 1;
    v69 = v96;
    v70 = CircularProgressView.init(value:trackColor:lineWidth:lineStyle:)(0x100000000, v67, v68, 2.5);
    v71 = static Alignment.center.getter(v70);
    _FrameLayout.init(width:height:alignment:)(v112, 0x4030000000000000, 0, 0x4030000000000000, 0, v71, v72);
    v73 = v97;
    v74 = (uint64_t)v94;
    v75 = v98;
    (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v94, v69, v98);
    v76 = (_OWORD *)(v74 + *(int *)(v9 + 36));
    v77 = v112[1];
    *v76 = v112[0];
    v76[1] = v77;
    v76[2] = v112[2];
    (*(void (**)(char *, uint64_t))(v73 + 8))(v69, v75);
    v78 = v100;
    sub_100065228(v74, v100, &qword_1011E5BE0);
    sub_10004A160(v78, (uint64_t)v4, &qword_1011E5BE0);
    swift_storeEnumTagMultiPayload(v4, v109, 0);
    v79 = sub_100CA7B10();
    _ConditionalContent<>.init(storage:)(v4, v9, &type metadata for EmptyView, v79, &protocol witness table for EmptyView);
    v80 = (uint64_t)v84;
    sub_10004A160((uint64_t)v6, (uint64_t)v84, &qword_1011E5BD8);
    swift_storeEnumTagMultiPayload(v80, v85, 1);
    v81 = sub_100CA7B94();
    v82 = sub_100CA79B0(&qword_1011E5C40, &qword_1011E5BD8, (void (*)(void))sub_100CA7B10);
    _ConditionalContent<>.init(storage:)(v80, v86, v110, v81, v82);
    sub_10004FF60((uint64_t)v6, &qword_1011E5BD8);
    v32 = v78;
    v33 = &qword_1011E5BE0;
    goto LABEL_10;
  }
  v36 = v101;
  v35 = v102;
  v37 = v107;
  (*(void (**)(char *, _QWORD *, uint64_t))(v107 + 32))(v101, v26, v102);
  (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v17, v36, v35);
  type metadata accessor for NoticeView.Content(0);
  v38 = sub_100007E8C(&qword_1011E5A90);
  ScaledMetric.wrappedValue.getter(v112, v38);
  v39 = v90;
  ArtworkImage.init(_:height:)(v17, *(double *)v112);
  v40 = sub_100007E8C(&qword_1011E0C40);
  ScaledMetric.wrappedValue.getter(v112, v40);
  v41 = *(_QWORD *)&v112[0];
  v42 = v92;
  v43 = (uint64_t)v99;
  v44 = v93;
  (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v99, v39, v93);
  v45 = v43 + *(int *)(v87 + 36);
  *(_QWORD *)v45 = v41;
  *(_QWORD *)(v45 + 8) = -1;
  *(_BYTE *)(v45 + 16) = 0;
  (*(void (**)(char *, uint64_t))(v42 + 8))(v39, v44);
  if (qword_1011DE070 != -1)
    swift_once(&qword_1011DE070, sub_100C0A0CC);
  v46 = static Border.artwork;
  v47 = qword_10124FE10;
  v48 = byte_10124FE18;
  ScaledMetric.wrappedValue.getter(v112, v40);
  v49 = *(_QWORD *)&v112[0];
  v50 = v95;
  sub_10004A160(v43, v95, &qword_1011E5BE8);
  v51 = v108;
  v52 = v50 + *(int *)(v108 + 36);
  *(_QWORD *)v52 = v46;
  *(_QWORD *)(v52 + 8) = v47;
  *(_BYTE *)(v52 + 16) = v48;
  *(_QWORD *)(v52 + 24) = v49;
  *(_QWORD *)(v52 + 32) = -1;
  *(_BYTE *)(v52 + 40) = 0;
  swift_retain();
  sub_10004FF60(v43, &qword_1011E5BE8);
  v53 = v103;
  sub_100065228(v50, v103, &qword_1011E5BF0);
  v54 = v105;
  sub_10004A160(v53, (uint64_t)v105, &qword_1011E5BF0);
  swift_storeEnumTagMultiPayload(v54, v104, 1);
  v55 = sub_100C75E38(&qword_1011E5C28, &qword_1011E5BF0, (void (*)(void))sub_100CA7C20, (void (*)(void))sub_100C0A63C);
  v56 = (uint64_t)v106;
  _ConditionalContent<>.init(storage:)(v54, &type metadata for Image, v51, &protocol witness table for Image, v55);
  v57 = (uint64_t)v84;
  sub_10004A160(v56, (uint64_t)v84, &qword_1011E5C08);
  swift_storeEnumTagMultiPayload(v57, v85, 0);
  v58 = sub_100CA7B94();
  v59 = sub_100CA79B0(&qword_1011E5C40, &qword_1011E5BD8, (void (*)(void))sub_100CA7B10);
  _ConditionalContent<>.init(storage:)(v57, v86, v110, v58, v59);
  sub_10004FF60(v56, &qword_1011E5C08);
  sub_10004FF60(v53, &qword_1011E5BF0);
  (*(void (**)(char *, uint64_t))(v107 + 8))(v36, v35);
}

void sub_100CA36E8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>, __n128 a4@<Q0>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  double v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char *v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t KeyPath;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  double v94;
  __int128 v95;
  uint64_t v96;
  uint64_t v97;
  unsigned __int8 v98;
  char v99;
  uint64_t v100;
  uint64_t v101;

  v75 = a2;
  v85 = a3;
  v5 = type metadata accessor for Font.Leading(0, a4);
  v78 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v77 = (uint64_t)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011E5B98);
  v89 = *(_QWORD *)(v7 - 8);
  v90 = v7;
  __chkstk_darwin();
  v88 = (char *)&v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = sub_100007E8C(&qword_1011E5BA0);
  __chkstk_darwin();
  v92 = (uint64_t)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v86 = (char *)&v75 - v10;
  __chkstk_darwin();
  v91 = (uint64_t)&v75 - v11;
  v12 = *(int *)(type metadata accessor for Notice(0) + 28);
  v93 = a1;
  v13 = (_QWORD *)(a1 + v12);
  v14 = v13[1];
  if (v14)
  {
    *(_QWORD *)&v95 = *v13;
    *((_QWORD *)&v95 + 1) = v14;
    v15 = sub_100BBF2FC();
    swift_bridgeObjectRetain();
    v16 = Text.init<A>(_:)(&v95, &type metadata for String, v15);
    v18 = v17;
    v20 = v19;
    v22 = v21 & 1;
    v23 = static Font.footnote.getter(v16);
    v24 = Text.font(_:)(v23, v16, v18, v22, v20);
    v26 = v25;
    v28 = v27;
    v76 = v5;
    v30 = v29;
    swift_release();
    sub_100055BAC(v16, v18, v22);
    swift_bridgeObjectRelease();
    LODWORD(v95) = static HierarchicalShapeStyle.secondary.getter(v31);
    v84 = Text.foregroundStyle<A>(_:)(&v95, v24, v26, v28 & 1, v30, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
    v83 = v32;
    v82 = v33;
    v81 = v34 & 1;
    sub_100055BAC(v24, v26, v28 & 1);
    v5 = v76;
    swift_bridgeObjectRelease();
    KeyPath = swift_getKeyPath(&unk_100EF2588);
    v79 = 2;
  }
  else
  {
    v84 = 0;
    v83 = 0;
    v81 = 0;
    v82 = 0;
    KeyPath = 0;
    v79 = 0;
  }
  sub_100CA3C8C(v93, &v95);
  v35 = *((_QWORD *)&v95 + 1);
  v76 = v95;
  v36 = v96;
  v37 = v97;
  v38 = v98;
  v39 = v99;
  v41 = static Font.subheadline.getter(v40);
  v42 = v78;
  v43 = v77;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v78 + 104))(v77, enum case for Font.Leading.tight(_:), v5);
  v44 = Font.leading(_:)(v43, v41);
  v45 = swift_release();
  v46 = v43;
  v47 = v76;
  v48 = v37;
  v49 = v5;
  v50 = v39;
  v51 = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v42 + 8))(v46, v49, v45);
  v52 = static Font.Weight.semibold.getter(v51);
  v53 = Font.weight(_:)(v44, v52);
  swift_release();
  v54 = swift_getKeyPath(&unk_100EF2558);
  *(_QWORD *)&v95 = v47;
  *((_QWORD *)&v95 + 1) = v35;
  v96 = v36;
  v97 = v48;
  v77 = v48;
  LODWORD(v78) = v38;
  v98 = v38;
  v99 = v39;
  v100 = v54;
  v101 = v53;
  v55 = 0.0;
  if (sub_100CA2604())
  {
    type metadata accessor for NoticeView.Content(0);
    v56 = sub_100007E8C(&qword_1011E5A90);
    ScaledMetric.wrappedValue.getter(&v94, v56);
    v55 = v94 + *(double *)(v75 + 32);
  }
  v57 = sub_100007E8C(&qword_1011E5BA8);
  v58 = sub_100CA78A8();
  v59 = v88;
  v60.n128_f64[0] = v55;
  View.bodyHeadOutdent(_:)(v57, v58, v60);
  sub_100CA7A74(v47, v35, v36, v77, v78, v50);
  swift_release();
  swift_release();
  v61 = swift_getKeyPath(&unk_100EF2588);
  v63 = v89;
  v62 = v90;
  v64 = (uint64_t)v86;
  (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v86, v59, v90);
  v65 = v64 + *(int *)(v87 + 36);
  *(_QWORD *)v65 = v61;
  *(_QWORD *)(v65 + 8) = 4;
  *(_BYTE *)(v65 + 16) = 0;
  (*(void (**)(char *, uint64_t))(v63 + 8))(v59, v62);
  v66 = v91;
  sub_100065228(v64, v91, &qword_1011E5BA0);
  v67 = v92;
  sub_10004A160(v66, v92, &qword_1011E5BA0);
  v68 = v84;
  v69 = v85;
  v70 = v83;
  *v85 = v84;
  v69[1] = v70;
  v71 = v81;
  v72 = v82;
  v69[2] = v81;
  v69[3] = v72;
  v73 = v79;
  v69[4] = KeyPath;
  v69[5] = v73;
  *((_BYTE *)v69 + 48) = 0;
  v74 = sub_100007E8C(&qword_1011E5BC8);
  sub_10004A160(v67, (uint64_t)v69 + *(int *)(v74 + 48), &qword_1011E5BA0);
  sub_1003DFEAC(v68, v70, v71, v72);
  sub_10004FF60(v66, &qword_1011E5BA0);
  sub_10004FF60(v67, &qword_1011E5BA0);
  sub_1003DFEE8(v68, v70, v71, v72);
}

double sub_100CA3C8C@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  NSString v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  void (*v30)(char *, uint64_t);
  void *v31;
  _QWORD *v32;
  NSString v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  __n128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  uint64_t v100;
  __n128 v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  _QWORD *v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  void *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char v121;
  uint64_t v122;
  __n128 v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char v129;
  uint64_t v130;
  uint64_t *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  char v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char v158;
  uint64_t v159;
  __int128 v160;
  char v161;
  uint64_t v162;
  uint64_t v163;
  unint64_t v164;
  double result;
  __int128 v166;
  unsigned __int8 v167;
  char v168;
  _OWORD *v169;
  id v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  _OWORD *v176;
  __int128 v177;
  __int128 v178;
  __int16 v179;
  __int128 v180;
  __int128 v181;
  unsigned __int8 v182;
  char v183;

  v176 = a2;
  v3 = type metadata accessor for Locale.Language(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v174 = (char *)&v170 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for LayoutDirection(0);
  v175 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v8 = (char *)&v170 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v10 = (char *)&v170 - v9;
  sub_100007E8C(&qword_1011DF000);
  __chkstk_darwin();
  v12 = (char *)&v170 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Notice(0);
  if (*(_QWORD *)(a1 + *(int *)(v13 + 32)))
  {
    v172 = v4;
    v173 = v3;
    v14 = type metadata accessor for NoticeView.Content(0);
    sub_100C31810((uint64_t)v12);
    v15 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v12, 0, 1, v15);
    v16 = (void *)UIContentSizeCategory.init(_:)(v12);
    v17 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithPreferredContentSizeCategory:", v16);

    v18 = objc_msgSend((id)objc_opt_self(UIFontDescriptor), "preferredFontDescriptorWithTextStyle:compatibleWithTraitCollection:", UIFontTextStyleSubheadline, v17);
    v19 = objc_msgSend(v18, "fontDescriptorWithSymbolicTraits:", 32770);

    v20 = (void *)objc_opt_self(UIFont);
    v171 = v14;
    if (v19)
    {
      v21 = objc_msgSend(v20, "fontWithDescriptor:size:", v19, 0.0);

    }
    else
    {
      v21 = objc_msgSend(v20, "preferredFontForTextStyle:compatibleWithTraitCollection:", UIFontTextStyleSubheadline, v17);
    }
    v22 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:scale:", v21, 1);
    v23 = String._bridgeToObjectiveC()();
    v24 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v23, v22);

    if (v24)
    {
      v25 = objc_msgSend(v24, "imageWithRenderingMode:", 2);

      v26 = v173;
      v27 = v172;
      if (v25)
      {
        sub_100C315D4((uint64_t)v10);
        v28 = v175;
        (*(void (**)(char *, _QWORD, uint64_t))(v175 + 104))(v8, enum case for LayoutDirection.rightToLeft(_:), v6);
        v29 = static LayoutDirection.== infix(_:_:)(v10, v8);
        v30 = *(void (**)(char *, uint64_t))(v28 + 8);
        v30(v8, v6);
        v30(v10, v6);
        v170 = v25;
        if ((v29 & 1) != 0)
        {
          v31 = (void *)objc_opt_self(NLLanguageRecognizer);
          v32 = (_QWORD *)(a1 + *(int *)(v13 + 24));
          v33 = String._bridgeToObjectiveC()();
          v34 = (char *)objc_msgSend(v31, "dominantLanguageForString:", v33, v170, v171);

          if (v34)
          {
            v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
            v36 = v174;
            v38 = Locale.Language.init(identifier:)(v35, v37);
            v39 = Locale.Language.characterDirection.getter(v38);
            (*(void (**)(char *, uint64_t))(v27 + 8))(v36, v26);
            if (v39 == 1)
            {
              v40 = Image.init(uiImage:)(v25);
              v41 = Text.init(_:)(v40);
              v43 = v42;
              v45 = v44;
              v47 = v46 & 1;
              LODWORD(v180) = static HierarchicalShapeStyle.secondary.getter(v41);
              v48 = Text.foregroundStyle<A>(_:)(&v180, v41, v43, v47, v45, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
              v174 = v34;
              v50 = v49;
              v52 = v51;
              v54 = v53 & 1;
              sub_100055BAC(v41, v43, v47);
              swift_bridgeObjectRelease();
              v55 = (uint64_t *)String.nonBreakingSpace.unsafeMutableAddressor();
              v56 = *v55;
              v57 = v55[1];
              swift_bridgeObjectRetain();
              v58 = static Text.+ infix(_:_:)(v48, v50, v54, v52, v56, v57, 0, _swiftEmptyArrayStorage);
              v173 = v59;
              v61 = v60;
              v175 = v62;
              swift_bridgeObjectRelease();
              v63 = v61 & 1;
              sub_100055BAC(v48, v50, v54);
              swift_bridgeObjectRelease();
              v64 = v32[1];
              *(_QWORD *)&v180 = *v32;
              *((_QWORD *)&v180 + 1) = v64;
              v65 = sub_100BBF2FC();
              swift_bridgeObjectRetain();
              v66 = Text.init<A>(_:)(&v180, &type metadata for String, v65);
              v68 = v67;
              v70 = v69;
              v72 = v71 & 1;
              LODWORD(v180) = static HierarchicalShapeStyle.primary.getter(v73);
              v74 = Text.foregroundStyle<A>(_:)(&v180, v66, v68, v72, v70, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
              v76 = v75;
              v78 = v77;
              v80 = v79 & 1;
              LODWORD(v172) = v79 & 1;
              sub_100055BAC(v66, v68, v72);
              swift_bridgeObjectRelease();
              v81 = v58;
              v82 = v58;
              v83 = v173;
              v84 = static Text.+ infix(_:_:)(v82, v173, v63, v175, v74, v76, v80, v78);
              v86 = v85;
              v88 = v87;
              v90 = v89 & 1;
              sub_100055BAC(v74, v76, v172);
              swift_bridgeObjectRelease();
              sub_100055BAC(v81, v83, v63);
              swift_bridgeObjectRelease();
              *(_QWORD *)&v177 = v84;
              *((_QWORD *)&v177 + 1) = v86;
              *(_QWORD *)&v178 = v90;
              *((_QWORD *)&v178 + 1) = v88;
              LOBYTE(v179) = 0;
              sub_100055BBC(v84, v86, v90);
              swift_bridgeObjectRetain();
              sub_100055BBC(v84, v86, v90);
              swift_bridgeObjectRetain();
              _ConditionalContent<>.init(storage:)(&v177, &type metadata for Text, &type metadata for Text, &protocol witness table for Text, &protocol witness table for Text);

              sub_100055BAC(v84, v86, v90);
              swift_bridgeObjectRelease();
              sub_100055BAC(v84, v86, v90);
              swift_bridgeObjectRelease();
LABEL_15:
              v160 = v180;
              v161 = v181;
              v162 = *((_QWORD *)&v181 + 1);
              v177 = v180;
              v178 = v181;
              v179 = v182;
              sub_10034A204(v180, *((uint64_t *)&v180 + 1), v181);
              v163 = sub_100007E8C(&qword_1011E3F60);
              v164 = sub_100CA7A18();
              _ConditionalContent<>.init(storage:)(&v177, v163, &type metadata for Text, v164, &protocol witness table for Text);

              sub_10034A22C(v160, *((uint64_t *)&v160 + 1), v161, v162);
              goto LABEL_16;
            }

          }
        }
        v111 = (_QWORD *)(a1 + *(int *)(v13 + 24));
        v112 = v111[1];
        *(_QWORD *)&v180 = *v111;
        *((_QWORD *)&v180 + 1) = v112;
        v113 = sub_100BBF2FC();
        swift_bridgeObjectRetain();
        v114 = Text.init<A>(_:)(&v180, &type metadata for String, v113);
        v115 = v25;
        v116 = v114;
        v118 = v117;
        v120 = v119;
        v122 = v121 & 1;
        LODWORD(v180) = static HierarchicalShapeStyle.primary.getter(v123);
        v124 = Text.foregroundStyle<A>(_:)(&v180, v116, v118, v122, v120, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
        v126 = v125;
        v128 = v127;
        v130 = v129 & 1;
        sub_100055BAC(v116, v118, v122);
        swift_bridgeObjectRelease();
        v131 = (uint64_t *)String.nonBreakingSpace.unsafeMutableAddressor();
        v132 = *v131;
        v133 = v131[1];
        swift_bridgeObjectRetain();
        v134 = static Text.+ infix(_:_:)(v124, v126, v130, v128, v132, v133, 0, _swiftEmptyArrayStorage);
        v174 = v135;
        LOBYTE(v112) = v136;
        v175 = v137;
        swift_bridgeObjectRelease();
        v138 = v112 & 1;
        sub_100055BAC(v124, v126, v130);
        swift_bridgeObjectRelease();
        v139 = Image.init(uiImage:)(v115);
        v140 = Text.init(_:)(v139);
        v142 = v141;
        v144 = v143;
        v146 = v145 & 1;
        LODWORD(v180) = static HierarchicalShapeStyle.secondary.getter(v140);
        v147 = Text.foregroundStyle<A>(_:)(&v180, v140, v142, v146, v144, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
        v149 = v148;
        v151 = v150;
        v153 = v152 & 1;
        sub_100055BAC(v140, v142, v146);
        swift_bridgeObjectRelease();
        v154 = (uint64_t)v174;
        v173 = static Text.+ infix(_:_:)(v134, v174, v138, v175, v147, v149, v153, v151);
        v172 = v155;
        v157 = v156;
        v159 = v158 & 1;
        sub_100055BAC(v147, v149, v153);
        swift_bridgeObjectRelease();
        sub_100055BAC(v134, v154, v138);
        swift_bridgeObjectRelease();
        *(_QWORD *)&v177 = v173;
        *((_QWORD *)&v177 + 1) = v172;
        *(_QWORD *)&v178 = v159;
        *((_QWORD *)&v178 + 1) = v157;
        LOBYTE(v179) = 1;
        _ConditionalContent<>.init(storage:)(&v177, &type metadata for Text, &type metadata for Text, &protocol witness table for Text, &protocol witness table for Text);
        goto LABEL_15;
      }
    }
    else
    {

    }
  }
  v91 = (_QWORD *)(a1 + *(int *)(v13 + 24));
  v92 = v91[1];
  *(_QWORD *)&v180 = *v91;
  *((_QWORD *)&v180 + 1) = v92;
  v93 = sub_100BBF2FC();
  swift_bridgeObjectRetain();
  v94 = Text.init<A>(_:)(&v180, &type metadata for String, v93);
  v96 = v95;
  v98 = v97;
  v100 = v99 & 1;
  LODWORD(v180) = static HierarchicalShapeStyle.primary.getter(v101);
  v102 = Text.foregroundStyle<A>(_:)(&v180, v94, v96, v100, v98, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v104 = v103;
  v106 = v105;
  v108 = v107 & 1;
  sub_100055BAC(v94, v96, v100);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v177 = v102;
  *((_QWORD *)&v177 + 1) = v104;
  *(_QWORD *)&v178 = v108;
  *((_QWORD *)&v178 + 1) = v106;
  v179 = 256;
  v109 = sub_100007E8C(&qword_1011E3F60);
  v110 = sub_100CA7A18();
  _ConditionalContent<>.init(storage:)(&v177, v109, &type metadata for Text, v110, &protocol witness table for Text);
LABEL_16:
  result = *(double *)&v180;
  v166 = v181;
  v167 = v182;
  v168 = v183;
  v169 = v176;
  *v176 = v180;
  v169[1] = v166;
  *((_BYTE *)v169 + 32) = v167;
  *((_BYTE *)v169 + 33) = v168;
  return result;
}

uint64_t NoticeDismissal.presented.getter()
{
  uint64_t v0;
  uint64_t v2;

  v0 = sub_100007E8C(&qword_1011E53D0);
  Binding.wrappedValue.getter(&v2, v0);
  return v2;
}

uint64_t NoticeDismissal.presented.setter(char a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v7 = a2;
  v8 = a3;
  v9 = a4;
  v6 = a1;
  v4 = sub_100007E8C(&qword_1011E53D0);
  return Binding.wrappedValue.setter(&v6, v4);
}

void (*NoticeDismissal.presented.modify(_QWORD *a1, uint64_t a2, uint64_t a3, char a4))(uint64_t a1)
{
  _BYTE *v8;
  uint64_t v9;

  v8 = malloc(0x30uLL);
  *a1 = v8;
  v8[19] = a4;
  *((_QWORD *)v8 + 3) = a2;
  *((_QWORD *)v8 + 4) = a3;
  *(_QWORD *)v8 = a2;
  *((_QWORD *)v8 + 1) = a3;
  v8[16] = a4;
  swift_retain();
  swift_retain();
  v9 = sub_100007E8C(&qword_1011E53D0);
  *((_QWORD *)v8 + 5) = v9;
  Binding.wrappedValue.getter(v8 + 17, v9);
  return sub_1007DE6CC;
}

uint64_t NoticeDismissal.$presented.getter()
{
  uint64_t v0;
  uint64_t v2;

  v0 = sub_100007E8C(&qword_1011E53D0);
  Binding.projectedValue.getter(&v2, v0);
  return v2;
}

void sub_100CA48D0(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 0;
}

void (*EnvironmentValues.noticeDismissal.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  char *v3;
  unint64_t v4;
  char v5;

  v3 = (char *)malloc(0x40uLL);
  *a1 = v3;
  *((_QWORD *)v3 + 6) = v1;
  v4 = sub_100CA03DC();
  *((_QWORD *)v3 + 7) = v4;
  EnvironmentValues.subscript.getter((_QWORD *)v3 + 3, &_s25NoticeDismissalContextKeyVN, &_s25NoticeDismissalContextKeyVN, v4);
  v5 = v3[40];
  *(_OWORD *)v3 = *(_OWORD *)(v3 + 24);
  v3[16] = v5;
  return sub_100CA4954;
}

void sub_100CA4954(uint64_t **a1, char a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v3 = *a1;
  v4 = **a1;
  v5 = v3[1];
  v3[3] = v4;
  v6 = *((_BYTE *)v3 + 16);
  v7 = v3[7];
  v3[4] = v5;
  *((_BYTE *)v3 + 40) = v6;
  if ((a2 & 1) != 0)
  {
    sub_1002CF810(v4, v5);
    EnvironmentValues.subscript.setter(v3 + 3, &_s25NoticeDismissalContextKeyVN, &_s25NoticeDismissalContextKeyVN, v7);
    sub_1002CF744(*v3, v3[1]);
  }
  else
  {
    EnvironmentValues.subscript.setter(v3 + 3, &_s25NoticeDismissalContextKeyVN, &_s25NoticeDismissalContextKeyVN, v7);
  }
  free(v3);
}

uint64_t sub_100CA49E4()
{
  return EnvironmentValues.contentTransition.getter();
}

uint64_t sub_100CA4A04(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for ContentTransition(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return EnvironmentValues.contentTransition.setter(v4);
}

unint64_t sub_100CA4A84()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E59B8;
  if (!qword_1011E59B8)
  {
    v1 = sub_100044B54(&qword_1011E5940);
    sub_100CA4B08();
    sub_100049F28(&qword_1011E59D8, &qword_1011E59B0, (uint64_t)&protocol conformance descriptor for _AnimationModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E59B8);
  }
  return result;
}

unint64_t sub_100CA4B08()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E59C0;
  if (!qword_1011E59C0)
  {
    v1 = sub_100044B54(&qword_1011E5938);
    sub_100CA4B74();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E59C0);
  }
  return result;
}

unint64_t sub_100CA4B74()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  result = qword_1011E59C8;
  if (!qword_1011E59C8)
  {
    v1 = sub_100044B54(&qword_1011E5930);
    v2 = sub_100044B54(&qword_1011E5920);
    v3 = type metadata accessor for Notice(255);
    v6 = sub_100044B54(&qword_1011E5918);
    v7 = sub_100044B54(&qword_1011E58F0);
    v8 = sub_100CA1F60();
    v9 = sub_100049F28(&qword_1011E5990, &qword_1011E58F0, (uint64_t)&protocol conformance descriptor for SequenceGesture<A, B>);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.gesture<A>(_:including:)>>, 1);
    v5 = sub_100048748(&qword_1011E5998, type metadata accessor for Notice, (uint64_t)&protocol conformance descriptor for Notice);
    v6 = v2;
    v7 = v3;
    v8 = OpaqueTypeConformance2;
    v9 = v5;
    swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
    sub_100049F28(&qword_1011E59D0, &qword_1011E59A0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E59C8);
  }
  return result;
}

uint64_t sub_100CA4CC8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of NoticeView.body>>, 1);
}

_QWORD *initializeBufferWithCopyOfBuffer for NoticeView(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(_QWORD *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  int EnumCaseMultiPayload;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  unsigned __int8 v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = (int *)type metadata accessor for Notice(0);
    v9 = v8[5];
    v10 = (_QWORD *)((char *)v4 + v9);
    v11 = (_QWORD *)((char *)a2 + v9);
    v12 = type metadata accessor for Notice.Thumbnail(0);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      v15 = sub_100007E8C(&qword_1011E59E8);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v11, v12);
      if (EnumCaseMultiPayload == 1)
      {
        v18 = type metadata accessor for Artwork(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v10, v11, v18);
        swift_storeEnumTagMultiPayload(v10, v12, 1);
      }
      else if (EnumCaseMultiPayload)
      {
        memcpy(v10, v11, *(_QWORD *)(v13 + 64));
      }
      else
      {
        *v10 = *v11;
        swift_retain();
        swift_storeEnumTagMultiPayload(v10, v12, 0);
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v19 = v8[6];
    v20 = (_QWORD *)((char *)v4 + v19);
    v21 = (_QWORD *)((char *)a2 + v19);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    v23 = v8[7];
    v24 = (_QWORD *)((char *)v4 + v23);
    v25 = (_QWORD *)((char *)a2 + v23);
    v26 = v25[1];
    *v24 = *v25;
    v24[1] = v26;
    v27 = v8[8];
    v28 = (_QWORD *)((char *)v4 + v27);
    v29 = (char *)a2 + v27;
    v30 = *(_QWORD *)((char *)a2 + v27);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v30)
    {
      v31 = *((_QWORD *)v29 + 1);
      *v28 = v30;
      v28[1] = v31;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v28 = *(_OWORD *)v29;
    }
    v32 = v8[9];
    v33 = (char *)v4 + v32;
    v34 = (char *)a2 + v32;
    *(_QWORD *)v33 = *(_QWORD *)v34;
    v33[8] = v34[8];
    *((_BYTE *)v4 + v8[10]) = *((_BYTE *)a2 + v8[10]);
    v35 = a3[5];
    v36 = (char *)v4 + v35;
    v37 = (char *)a2 + v35;
    v38 = *(_QWORD *)v37;
    v39 = *((_QWORD *)v37 + 1);
    v40 = v37[17];
    v41 = v37[16];
    sub_100CA0534(*(_QWORD *)v37, v39, v41, v40);
    *(_QWORD *)v36 = v38;
    *((_QWORD *)v36 + 1) = v39;
    v36[16] = v41;
    v36[17] = v40;
    v42 = a3[6];
    v43 = a3[7];
    v44 = (_QWORD *)((char *)v4 + v42);
    v45 = (_QWORD *)((char *)a2 + v42);
    v46 = v45[1];
    *v44 = *v45;
    v44[1] = v46;
    v47 = (char *)v4 + v43;
    v48 = (char *)a2 + v43;
    *v47 = *v48;
    v49 = *((_QWORD *)v48 + 3);
    *(_OWORD *)(v47 + 8) = *(_OWORD *)(v48 + 8);
    *((_QWORD *)v47 + 3) = v49;
    v50 = a3[8];
    v51 = (char *)v4 + v50;
    v52 = (char *)a2 + v50;
    *v51 = *v52;
    *((_QWORD *)v51 + 1) = *((_QWORD *)v52 + 1);
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

double destroy for NoticeView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;
  int EnumCaseMultiPayload;
  uint64_t v9;

  swift_bridgeObjectRelease();
  v4 = type metadata accessor for Notice(0);
  v5 = a1 + *(int *)(v4 + 20);
  v6 = type metadata accessor for Notice.Thumbnail(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v5, v6);
    if (EnumCaseMultiPayload == 1)
    {
      v9 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v5, v9);
    }
    else if (!EnumCaseMultiPayload)
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + *(int *)(v4 + 32)))
    swift_release();
  sub_100C43AEC(*(_QWORD *)(a1 + *(int *)(a2 + 20)), *(_QWORD *)(a1 + *(int *)(a2 + 20) + 8), *(unsigned __int8 *)(a1 + *(int *)(a2 + 20) + 16), *(_BYTE *)(a1 + *(int *)(a2 + 20) + 17));
  swift_release();
  swift_release();
  swift_release();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

_QWORD *initializeWithCopy for NoticeView(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(_QWORD *, uint64_t, uint64_t);
  uint64_t v14;
  int EnumCaseMultiPayload;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  unsigned __int8 v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = (int *)type metadata accessor for Notice(0);
  v8 = v7[5];
  v9 = (_QWORD *)((char *)a1 + v8);
  v10 = (_QWORD *)((char *)a2 + v8);
  v11 = type metadata accessor for Notice.Thumbnail(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    v14 = sub_100007E8C(&qword_1011E59E8);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10, v11);
    if (EnumCaseMultiPayload == 1)
    {
      v16 = type metadata accessor for Artwork(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v9, v10, v16);
      swift_storeEnumTagMultiPayload(v9, v11, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v9, v10, *(_QWORD *)(v12 + 64));
    }
    else
    {
      *v9 = *v10;
      swift_retain();
      swift_storeEnumTagMultiPayload(v9, v11, 0);
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v17 = v7[6];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  v21 = v7[7];
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (_QWORD *)((char *)a2 + v21);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  v25 = v7[8];
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (char *)a2 + v25;
  v28 = *(_QWORD *)((char *)a2 + v25);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v28)
  {
    v29 = *((_QWORD *)v27 + 1);
    *v26 = v28;
    v26[1] = v29;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v26 = *(_OWORD *)v27;
  }
  v30 = v7[9];
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  *(_QWORD *)v31 = *(_QWORD *)v32;
  v31[8] = v32[8];
  *((_BYTE *)a1 + v7[10]) = *((_BYTE *)a2 + v7[10]);
  v33 = a3[5];
  v34 = (char *)a1 + v33;
  v35 = (char *)a2 + v33;
  v36 = *(_QWORD *)v35;
  v37 = *((_QWORD *)v35 + 1);
  v38 = v35[17];
  v39 = v35[16];
  sub_100CA0534(*(_QWORD *)v35, v37, v39, v38);
  *(_QWORD *)v34 = v36;
  *((_QWORD *)v34 + 1) = v37;
  v34[16] = v39;
  v34[17] = v38;
  v40 = a3[6];
  v41 = a3[7];
  v42 = (_QWORD *)((char *)a1 + v40);
  v43 = (_QWORD *)((char *)a2 + v40);
  v44 = v43[1];
  *v42 = *v43;
  v42[1] = v44;
  v45 = (char *)a1 + v41;
  v46 = (char *)a2 + v41;
  *v45 = *v46;
  v47 = *((_QWORD *)v46 + 3);
  *(_OWORD *)(v45 + 8) = *(_OWORD *)(v46 + 8);
  *((_QWORD *)v45 + 3) = v47;
  v48 = a3[8];
  v49 = (char *)a1 + v48;
  v50 = (char *)a2 + v48;
  *v49 = *v50;
  *((_QWORD *)v49 + 1) = *((_QWORD *)v50 + 1);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for NoticeView(_QWORD *a1, _QWORD *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD *, uint64_t, uint64_t);
  int v13;
  int v14;
  int v15;
  size_t v16;
  int EnumCaseMultiPayload;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  unsigned __int8 v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v58;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (int *)type metadata accessor for Notice(0);
  v7 = v6[5];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for Notice.Thumbnail(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      if (a1 == a2)
        goto LABEL_17;
      sub_10005B748((uint64_t)v8, type metadata accessor for Notice.Thumbnail);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9, v10);
      if (EnumCaseMultiPayload == 1)
      {
        v58 = type metadata accessor for Artwork(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v8, v9, v58);
        swift_storeEnumTagMultiPayload(v8, v10, 1);
        goto LABEL_17;
      }
      if (!EnumCaseMultiPayload)
      {
        *v8 = *v9;
        swift_retain();
        swift_storeEnumTagMultiPayload(v8, v10, 0);
        goto LABEL_17;
      }
      v16 = *(_QWORD *)(v11 + 64);
LABEL_9:
      memcpy(v8, v9, v16);
      goto LABEL_17;
    }
    sub_10005B748((uint64_t)v8, type metadata accessor for Notice.Thumbnail);
LABEL_8:
    v16 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011E59E8) - 8) + 64);
    goto LABEL_9;
  }
  if (v14)
    goto LABEL_8;
  v15 = swift_getEnumCaseMultiPayload(v9, v10);
  if (v15 == 1)
  {
    v18 = type metadata accessor for Artwork(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v8, v9, v18);
    swift_storeEnumTagMultiPayload(v8, v10, 1);
  }
  else if (v15)
  {
    memcpy(v8, v9, *(_QWORD *)(v11 + 64));
  }
  else
  {
    *v8 = *v9;
    swift_retain();
    swift_storeEnumTagMultiPayload(v8, v10, 0);
  }
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_17:
  v19 = v6[6];
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  *v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = v6[7];
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)((char *)a2 + v22);
  *v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v25 = v6[8];
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (char *)a2 + v25;
  v28 = *(_QWORD *)((char *)a1 + v25);
  v29 = *(_QWORD *)((char *)a2 + v25);
  if (!v28)
  {
    if (v29)
    {
      v31 = *((_QWORD *)v27 + 1);
      *v26 = v29;
      v26[1] = v31;
      swift_retain();
      goto LABEL_24;
    }
LABEL_23:
    *(_OWORD *)v26 = *(_OWORD *)v27;
    goto LABEL_24;
  }
  if (!v29)
  {
    swift_release();
    goto LABEL_23;
  }
  v30 = *((_QWORD *)v27 + 1);
  *v26 = v29;
  v26[1] = v30;
  swift_retain();
  swift_release();
LABEL_24:
  v32 = v6[9];
  v33 = (char *)a1 + v32;
  v34 = (char *)a2 + v32;
  v35 = *(_QWORD *)v34;
  v33[8] = v34[8];
  *(_QWORD *)v33 = v35;
  *((_BYTE *)a1 + v6[10]) = *((_BYTE *)a2 + v6[10]);
  v36 = a3[5];
  v37 = (char *)a1 + v36;
  v38 = (char *)a2 + v36;
  v39 = *(_QWORD *)v38;
  v40 = *((_QWORD *)v38 + 1);
  v41 = v38[17];
  v42 = v38[16];
  sub_100CA0534(*(_QWORD *)v38, v40, v42, v41);
  v43 = *(_QWORD *)v37;
  v44 = *((_QWORD *)v37 + 1);
  v45 = v37[17];
  *(_QWORD *)v37 = v39;
  *((_QWORD *)v37 + 1) = v40;
  v46 = v37[16];
  v37[16] = v42;
  v37[17] = v41;
  sub_100C43AEC(v43, v44, v46, v45);
  v47 = a3[6];
  v48 = (_QWORD *)((char *)a1 + v47);
  v49 = (_QWORD *)((char *)a2 + v47);
  *v48 = *v49;
  v48[1] = v49[1];
  swift_retain();
  swift_release();
  v50 = a3[7];
  v51 = (char *)a1 + v50;
  v52 = (char *)a2 + v50;
  *v51 = *((_BYTE *)a2 + v50);
  *((_QWORD *)v51 + 1) = *(_QWORD *)((char *)a2 + v50 + 8);
  swift_retain();
  swift_release();
  v53 = *((_QWORD *)v52 + 3);
  *((_QWORD *)v51 + 2) = *((_QWORD *)v52 + 2);
  *((_QWORD *)v51 + 3) = v53;
  swift_retain();
  swift_release();
  v54 = a3[8];
  v55 = (char *)a1 + v54;
  v56 = (char *)a2 + v54;
  *v55 = *v56;
  *((_QWORD *)v55 + 1) = *((_QWORD *)v56 + 1);
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *initializeWithTake for NoticeView(_OWORD *a1, _OWORD *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _OWORD *v28;
  _OWORD *v29;
  __int128 v30;

  *a1 = *a2;
  v6 = (int *)type metadata accessor for Notice(0);
  v7 = v6[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Notice.Thumbnail(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = sub_100007E8C(&qword_1011E59E8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v13 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v8, v9, v13);
      swift_storeEnumTagMultiPayload(v8, v10, 1);
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(v11 + 64));
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(_OWORD *)((char *)a1 + v6[6]) = *(_OWORD *)((char *)a2 + v6[6]);
  *(_OWORD *)((char *)a1 + v6[7]) = *(_OWORD *)((char *)a2 + v6[7]);
  v14 = v6[8];
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (uint64_t *)((char *)a2 + v14);
  v17 = *v16;
  if (*v16)
  {
    v18 = v16[1];
    *v15 = v17;
    v15[1] = v18;
  }
  else
  {
    *(_OWORD *)v15 = *(_OWORD *)v16;
  }
  v19 = v6[9];
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  *(_QWORD *)v20 = *(_QWORD *)v21;
  v20[8] = v21[8];
  *((_BYTE *)a1 + v6[10]) = *((_BYTE *)a2 + v6[10]);
  v22 = a3[5];
  v23 = a3[6];
  v24 = (char *)a1 + v22;
  v25 = (char *)a2 + v22;
  *((_WORD *)v24 + 8) = *((_WORD *)v25 + 8);
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *(_OWORD *)((char *)a1 + v23) = *(_OWORD *)((char *)a2 + v23);
  v26 = a3[7];
  v27 = a3[8];
  v28 = (_OWORD *)((char *)a1 + v26);
  v29 = (_OWORD *)((char *)a2 + v26);
  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  *(_OWORD *)((char *)a1 + v27) = *(_OWORD *)((char *)a2 + v27);
  return a1;
}

_QWORD *assignWithTake for NoticeView(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  size_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = (int *)type metadata accessor for Notice(0);
  v8 = v7[5];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for Notice.Thumbnail(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      if (a1 == a2)
        goto LABEL_14;
      sub_10005B748((uint64_t)v9, type metadata accessor for Notice.Thumbnail);
      if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
      {
        v18 = type metadata accessor for Artwork(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v9, v10, v18);
        swift_storeEnumTagMultiPayload(v9, v11, 1);
        goto LABEL_14;
      }
      v17 = *(_QWORD *)(v12 + 64);
LABEL_8:
      memcpy(v9, v10, v17);
      goto LABEL_14;
    }
    sub_10005B748((uint64_t)v9, type metadata accessor for Notice.Thumbnail);
LABEL_7:
    v17 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011E59E8) - 8) + 64);
    goto LABEL_8;
  }
  if (v15)
    goto LABEL_7;
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v16 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v9, v10, v16);
    swift_storeEnumTagMultiPayload(v9, v11, 1);
  }
  else
  {
    memcpy(v9, v10, *(_QWORD *)(v12 + 64));
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_14:
  v19 = v7[6];
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  v23 = *v21;
  v22 = v21[1];
  *v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease();
  v24 = v7[7];
  v25 = (_QWORD *)((char *)a1 + v24);
  v26 = (_QWORD *)((char *)a2 + v24);
  v28 = *v26;
  v27 = v26[1];
  *v25 = v28;
  v25[1] = v27;
  swift_bridgeObjectRelease();
  v29 = v7[8];
  v30 = (_QWORD *)((char *)a1 + v29);
  v31 = (char *)a2 + v29;
  v32 = *(_QWORD *)((char *)a1 + v29);
  v33 = *(_QWORD *)((char *)a2 + v29);
  if (!v32)
  {
    if (v33)
    {
      v35 = *((_QWORD *)v31 + 1);
      *v30 = v33;
      v30[1] = v35;
      goto LABEL_21;
    }
LABEL_20:
    *(_OWORD *)v30 = *(_OWORD *)v31;
    goto LABEL_21;
  }
  if (!v33)
  {
    swift_release();
    goto LABEL_20;
  }
  v34 = *((_QWORD *)v31 + 1);
  *v30 = v33;
  v30[1] = v34;
  swift_release();
LABEL_21:
  v36 = v7[9];
  v37 = (char *)a1 + v36;
  v38 = (char *)a2 + v36;
  *(_QWORD *)v37 = *(_QWORD *)v38;
  v37[8] = v38[8];
  *((_BYTE *)a1 + v7[10]) = *((_BYTE *)a2 + v7[10]);
  v39 = a3[5];
  v40 = (char *)a1 + v39;
  v41 = (char *)a2 + v39;
  v42 = v41[16];
  v43 = v41[17];
  v44 = *(_QWORD *)v40;
  v45 = *((_QWORD *)v40 + 1);
  v46 = v40[17];
  *(_OWORD *)v40 = *(_OWORD *)v41;
  v47 = v40[16];
  v40[16] = v42;
  v40[17] = v43;
  sub_100C43AEC(v44, v45, v47, v46);
  v48 = a3[6];
  v49 = (_QWORD *)((char *)a1 + v48);
  v50 = (_QWORD *)((char *)a2 + v48);
  *v49 = *v50;
  v49[1] = v50[1];
  swift_release();
  v51 = a3[7];
  v52 = (char *)a1 + v51;
  v53 = (char *)a2 + v51;
  *v52 = *((_BYTE *)a2 + v51);
  *((_QWORD *)v52 + 1) = *(_QWORD *)((char *)a2 + v51 + 8);
  swift_release();
  *((_OWORD *)v52 + 1) = *((_OWORD *)v53 + 1);
  swift_release();
  v54 = a3[8];
  v55 = (char *)a1 + v54;
  v56 = (char *)a2 + v54;
  *v55 = *v56;
  *((_QWORD *)v55 + 1) = *((_QWORD *)v56 + 1);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for NoticeView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100CA5C1C);
}

uint64_t sub_100CA5C1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for Notice(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28) + 16);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for NoticeView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100CA5CA8);
}

uint64_t sub_100CA5CA8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Notice(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28) + 16) = (a2 - 1);
  return result;
}

uint64_t sub_100CA5D24(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  result = type metadata accessor for Notice(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100EF2448;
    v4[2] = &unk_100EF2460;
    v4[3] = &unk_100EF2478;
    v4[4] = &unk_100EF2460;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for NoticeDismissal()
{
  return &type metadata for NoticeDismissal;
}

uint64_t sub_100CA5DBC()
{
  _QWORD v1[4];

  v1[0] = sub_100044B54(&qword_1011E5940);
  v1[1] = sub_100044B54(&qword_1011E58D8);
  v1[2] = sub_100CA4A84();
  v1[3] = sub_100049F28(&qword_1011E59E0, &qword_1011E58D8, (uint64_t)&protocol conformance descriptor for ClosedRange<A>);
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.dynamicTypeSize<A>(_:)>>, 1);
}

_QWORD *sub_100CA5E44(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(_QWORD *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  int EnumCaseMultiPayload;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = (int *)type metadata accessor for Notice(0);
    v9 = v8[5];
    v10 = (_QWORD *)((char *)v4 + v9);
    v11 = (_QWORD *)((char *)a2 + v9);
    v12 = type metadata accessor for Notice.Thumbnail(0);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      v15 = sub_100007E8C(&qword_1011E59E8);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v11, v12);
      if (EnumCaseMultiPayload == 1)
      {
        v18 = type metadata accessor for Artwork(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v10, v11, v18);
        swift_storeEnumTagMultiPayload(v10, v12, 1);
      }
      else if (EnumCaseMultiPayload)
      {
        memcpy(v10, v11, *(_QWORD *)(v13 + 64));
      }
      else
      {
        *v10 = *v11;
        swift_retain();
        swift_storeEnumTagMultiPayload(v10, v12, 0);
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v19 = v8[6];
    v20 = (_QWORD *)((char *)v4 + v19);
    v21 = (_QWORD *)((char *)a2 + v19);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    v23 = v8[7];
    v24 = (_QWORD *)((char *)v4 + v23);
    v25 = (_QWORD *)((char *)a2 + v23);
    v26 = v25[1];
    *v24 = *v25;
    v24[1] = v26;
    v27 = v8[8];
    v28 = (_QWORD *)((char *)v4 + v27);
    v29 = (char *)a2 + v27;
    v30 = *(_QWORD *)((char *)a2 + v27);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v30)
    {
      v31 = *((_QWORD *)v29 + 1);
      *v28 = v30;
      v28[1] = v31;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v28 = *(_OWORD *)v29;
    }
    v32 = v8[9];
    v33 = (char *)v4 + v32;
    v34 = (char *)a2 + v32;
    *(_QWORD *)v33 = *(_QWORD *)v34;
    v33[8] = v34[8];
    *((_BYTE *)v4 + v8[10]) = *((_BYTE *)a2 + v8[10]);
    v35 = a3[5];
    v36 = (char *)v4 + v35;
    v37 = (char *)a2 + v35;
    v38 = sub_100007E8C(&qword_1011E5A90);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
    v39 = a3[6];
    v40 = (char *)v4 + v39;
    v41 = (char *)a2 + v39;
    v42 = sub_100007E8C(&qword_1011E0C40);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
    v43 = a3[7];
    v44 = (_QWORD *)((char *)v4 + v43);
    v45 = (_QWORD *)((char *)a2 + v43);
    v46 = sub_100007E8C(&qword_1011DE430);
    if (swift_getEnumCaseMultiPayload(v45, v46) == 1)
    {
      v47 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v44, v45, v47);
      v48 = 1;
    }
    else
    {
      *v44 = *v45;
      swift_retain();
      v48 = 0;
    }
    swift_storeEnumTagMultiPayload(v44, v46, v48);
    v49 = a3[8];
    v50 = (_QWORD *)((char *)v4 + v49);
    v51 = (_QWORD *)((char *)a2 + v49);
    v52 = sub_100007E8C((uint64_t *)&unk_1011DE420);
    if (swift_getEnumCaseMultiPayload(v51, v52) == 1)
    {
      v53 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(v50, v51, v53);
      v54 = v50;
      v55 = v52;
      v56 = 1;
    }
    else
    {
      *v50 = *v51;
      swift_retain();
      v54 = v50;
      v55 = v52;
      v56 = 0;
    }
    swift_storeEnumTagMultiPayload(v54, v55, v56);
  }
  return v4;
}

double sub_100CA6198(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double result;
  int EnumCaseMultiPayload;
  uint64_t v19;

  swift_bridgeObjectRelease();
  v4 = type metadata accessor for Notice(0);
  v5 = a1 + *(int *)(v4 + 20);
  v6 = type metadata accessor for Notice.Thumbnail(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v5, v6);
    if (EnumCaseMultiPayload == 1)
    {
      v19 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v5, v19);
    }
    else if (!EnumCaseMultiPayload)
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + *(int *)(v4 + 32)))
    swift_release();
  v7 = a1 + a2[5];
  v8 = sub_100007E8C(&qword_1011E5A90);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[6];
  v10 = sub_100007E8C(&qword_1011E0C40);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[7];
  v12 = sub_100007E8C(&qword_1011DE430);
  if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
  {
    v13 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v11, v13);
  }
  else
  {
    swift_release();
  }
  v14 = a1 + a2[8];
  v15 = sub_100007E8C((uint64_t *)&unk_1011DE420);
  if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
  {
    v16 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v14, v16);
  }
  else
  {
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

_QWORD *sub_100CA6380(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(_QWORD *, uint64_t, uint64_t);
  uint64_t v14;
  int EnumCaseMultiPayload;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = (int *)type metadata accessor for Notice(0);
  v8 = v7[5];
  v9 = (_QWORD *)((char *)a1 + v8);
  v10 = (_QWORD *)((char *)a2 + v8);
  v11 = type metadata accessor for Notice.Thumbnail(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    v14 = sub_100007E8C(&qword_1011E59E8);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10, v11);
    if (EnumCaseMultiPayload == 1)
    {
      v16 = type metadata accessor for Artwork(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v9, v10, v16);
      swift_storeEnumTagMultiPayload(v9, v11, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v9, v10, *(_QWORD *)(v12 + 64));
    }
    else
    {
      *v9 = *v10;
      swift_retain();
      swift_storeEnumTagMultiPayload(v9, v11, 0);
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v17 = v7[6];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  v21 = v7[7];
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (_QWORD *)((char *)a2 + v21);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  v25 = v7[8];
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (char *)a2 + v25;
  v28 = *(_QWORD *)((char *)a2 + v25);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v28)
  {
    v29 = *((_QWORD *)v27 + 1);
    *v26 = v28;
    v26[1] = v29;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v26 = *(_OWORD *)v27;
  }
  v30 = v7[9];
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  *(_QWORD *)v31 = *(_QWORD *)v32;
  v31[8] = v32[8];
  *((_BYTE *)a1 + v7[10]) = *((_BYTE *)a2 + v7[10]);
  v33 = a3[5];
  v34 = (char *)a1 + v33;
  v35 = (char *)a2 + v33;
  v36 = sub_100007E8C(&qword_1011E5A90);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v34, v35, v36);
  v37 = a3[6];
  v38 = (char *)a1 + v37;
  v39 = (char *)a2 + v37;
  v40 = sub_100007E8C(&qword_1011E0C40);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v38, v39, v40);
  v41 = a3[7];
  v42 = (_QWORD *)((char *)a1 + v41);
  v43 = (_QWORD *)((char *)a2 + v41);
  v44 = sub_100007E8C(&qword_1011DE430);
  if (swift_getEnumCaseMultiPayload(v43, v44) == 1)
  {
    v45 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v42, v43, v45);
    v46 = 1;
  }
  else
  {
    *v42 = *v43;
    swift_retain();
    v46 = 0;
  }
  swift_storeEnumTagMultiPayload(v42, v44, v46);
  v47 = a3[8];
  v48 = (_QWORD *)((char *)a1 + v47);
  v49 = (_QWORD *)((char *)a2 + v47);
  v50 = sub_100007E8C((uint64_t *)&unk_1011DE420);
  if (swift_getEnumCaseMultiPayload(v49, v50) == 1)
  {
    v51 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v48, v49, v51);
    v52 = 1;
  }
  else
  {
    *v48 = *v49;
    swift_retain();
    v52 = 0;
  }
  swift_storeEnumTagMultiPayload(v48, v50, v52);
  return a1;
}

_QWORD *sub_100CA66A0(_QWORD *a1, _QWORD *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD *, uint64_t, uint64_t);
  int v13;
  int v14;
  int v15;
  size_t v16;
  int EnumCaseMultiPayload;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v57;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (int *)type metadata accessor for Notice(0);
  v7 = v6[5];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for Notice.Thumbnail(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      if (a1 == a2)
        goto LABEL_17;
      sub_10005B748((uint64_t)v8, type metadata accessor for Notice.Thumbnail);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9, v10);
      if (EnumCaseMultiPayload == 1)
      {
        v57 = type metadata accessor for Artwork(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v8, v9, v57);
        swift_storeEnumTagMultiPayload(v8, v10, 1);
        goto LABEL_17;
      }
      if (!EnumCaseMultiPayload)
      {
        *v8 = *v9;
        swift_retain();
        swift_storeEnumTagMultiPayload(v8, v10, 0);
        goto LABEL_17;
      }
      v16 = *(_QWORD *)(v11 + 64);
LABEL_9:
      memcpy(v8, v9, v16);
      goto LABEL_17;
    }
    sub_10005B748((uint64_t)v8, type metadata accessor for Notice.Thumbnail);
LABEL_8:
    v16 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011E59E8) - 8) + 64);
    goto LABEL_9;
  }
  if (v14)
    goto LABEL_8;
  v15 = swift_getEnumCaseMultiPayload(v9, v10);
  if (v15 == 1)
  {
    v18 = type metadata accessor for Artwork(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v8, v9, v18);
    swift_storeEnumTagMultiPayload(v8, v10, 1);
  }
  else if (v15)
  {
    memcpy(v8, v9, *(_QWORD *)(v11 + 64));
  }
  else
  {
    *v8 = *v9;
    swift_retain();
    swift_storeEnumTagMultiPayload(v8, v10, 0);
  }
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_17:
  v19 = v6[6];
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  *v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = v6[7];
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)((char *)a2 + v22);
  *v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v25 = v6[8];
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (char *)a2 + v25;
  v28 = *(_QWORD *)((char *)a1 + v25);
  v29 = *(_QWORD *)((char *)a2 + v25);
  if (v28)
  {
    if (v29)
    {
      v30 = *((_QWORD *)v27 + 1);
      *v26 = v29;
      v26[1] = v30;
      swift_retain();
      swift_release();
      goto LABEL_24;
    }
    swift_release();
  }
  else if (v29)
  {
    v31 = *((_QWORD *)v27 + 1);
    *v26 = v29;
    v26[1] = v31;
    swift_retain();
    goto LABEL_24;
  }
  *(_OWORD *)v26 = *(_OWORD *)v27;
LABEL_24:
  v32 = v6[9];
  v33 = (char *)a1 + v32;
  v34 = (char *)a2 + v32;
  v35 = *(_QWORD *)v34;
  v33[8] = v34[8];
  *(_QWORD *)v33 = v35;
  *((_BYTE *)a1 + v6[10]) = *((_BYTE *)a2 + v6[10]);
  v36 = a3[5];
  v37 = (char *)a1 + v36;
  v38 = (char *)a2 + v36;
  v39 = sub_100007E8C(&qword_1011E5A90);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 24))(v37, v38, v39);
  v40 = a3[6];
  v41 = (char *)a1 + v40;
  v42 = (char *)a2 + v40;
  v43 = sub_100007E8C(&qword_1011E0C40);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 24))(v41, v42, v43);
  if (a1 != a2)
  {
    v44 = a3[7];
    v45 = (_QWORD *)((char *)a1 + v44);
    v46 = (_QWORD *)((char *)a2 + v44);
    sub_10004FF60((uint64_t)a1 + v44, &qword_1011DE430);
    v47 = sub_100007E8C(&qword_1011DE430);
    if (swift_getEnumCaseMultiPayload(v46, v47) == 1)
    {
      v48 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v45, v46, v48);
      v49 = 1;
    }
    else
    {
      *v45 = *v46;
      swift_retain();
      v49 = 0;
    }
    swift_storeEnumTagMultiPayload(v45, v47, v49);
    v50 = a3[8];
    v51 = (_QWORD *)((char *)a1 + v50);
    v52 = (_QWORD *)((char *)a2 + v50);
    sub_10004FF60((uint64_t)a1 + v50, (uint64_t *)&unk_1011DE420);
    v53 = sub_100007E8C((uint64_t *)&unk_1011DE420);
    if (swift_getEnumCaseMultiPayload(v52, v53) == 1)
    {
      v54 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v51, v52, v54);
      v55 = 1;
    }
    else
    {
      *v51 = *v52;
      swift_retain();
      v55 = 0;
    }
    swift_storeEnumTagMultiPayload(v51, v53, v55);
  }
  return a1;
}

_OWORD *sub_100CA6B04(_OWORD *a1, _OWORD *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;

  *a1 = *a2;
  v6 = (int *)type metadata accessor for Notice(0);
  v7 = v6[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Notice.Thumbnail(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = sub_100007E8C(&qword_1011E59E8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v13 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v8, v9, v13);
      swift_storeEnumTagMultiPayload(v8, v10, 1);
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(v11 + 64));
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(_OWORD *)((char *)a1 + v6[6]) = *(_OWORD *)((char *)a2 + v6[6]);
  *(_OWORD *)((char *)a1 + v6[7]) = *(_OWORD *)((char *)a2 + v6[7]);
  v14 = v6[8];
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (uint64_t *)((char *)a2 + v14);
  v17 = *v16;
  if (*v16)
  {
    v18 = v16[1];
    *v15 = v17;
    v15[1] = v18;
  }
  else
  {
    *(_OWORD *)v15 = *(_OWORD *)v16;
  }
  v19 = v6[9];
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  *(_QWORD *)v20 = *(_QWORD *)v21;
  v20[8] = v21[8];
  *((_BYTE *)a1 + v6[10]) = *((_BYTE *)a2 + v6[10]);
  v22 = a3[5];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = sub_100007E8C(&qword_1011E5A90);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
  v26 = a3[6];
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  v29 = sub_100007E8C(&qword_1011E0C40);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
  v30 = a3[7];
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  v33 = sub_100007E8C(&qword_1011DE430);
  if (swift_getEnumCaseMultiPayload(v32, v33) == 1)
  {
    v34 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v31, v32, v34);
    swift_storeEnumTagMultiPayload(v31, v33, 1);
  }
  else
  {
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  v35 = a3[8];
  v36 = (char *)a1 + v35;
  v37 = (char *)a2 + v35;
  v38 = sub_100007E8C((uint64_t *)&unk_1011DE420);
  if (swift_getEnumCaseMultiPayload(v37, v38) == 1)
  {
    v39 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v36, v37, v39);
    swift_storeEnumTagMultiPayload(v36, v38, 1);
  }
  else
  {
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_100CA6DD8(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  size_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = (int *)type metadata accessor for Notice(0);
  v8 = v7[5];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for Notice.Thumbnail(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      if (a1 == a2)
        goto LABEL_14;
      sub_10005B748((uint64_t)v9, type metadata accessor for Notice.Thumbnail);
      if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
      {
        v18 = type metadata accessor for Artwork(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v9, v10, v18);
        swift_storeEnumTagMultiPayload(v9, v11, 1);
        goto LABEL_14;
      }
      v17 = *(_QWORD *)(v12 + 64);
LABEL_8:
      memcpy(v9, v10, v17);
      goto LABEL_14;
    }
    sub_10005B748((uint64_t)v9, type metadata accessor for Notice.Thumbnail);
LABEL_7:
    v17 = *(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011E59E8) - 8) + 64);
    goto LABEL_8;
  }
  if (v15)
    goto LABEL_7;
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v16 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v9, v10, v16);
    swift_storeEnumTagMultiPayload(v9, v11, 1);
  }
  else
  {
    memcpy(v9, v10, *(_QWORD *)(v12 + 64));
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_14:
  v19 = v7[6];
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  v23 = *v21;
  v22 = v21[1];
  *v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease();
  v24 = v7[7];
  v25 = (_QWORD *)((char *)a1 + v24);
  v26 = (_QWORD *)((char *)a2 + v24);
  v28 = *v26;
  v27 = v26[1];
  *v25 = v28;
  v25[1] = v27;
  swift_bridgeObjectRelease();
  v29 = v7[8];
  v30 = (_QWORD *)((char *)a1 + v29);
  v31 = (char *)a2 + v29;
  v32 = *(_QWORD *)((char *)a1 + v29);
  v33 = *(_QWORD *)((char *)a2 + v29);
  if (v32)
  {
    if (v33)
    {
      v34 = *((_QWORD *)v31 + 1);
      *v30 = v33;
      v30[1] = v34;
      swift_release();
      goto LABEL_21;
    }
    swift_release();
  }
  else if (v33)
  {
    v35 = *((_QWORD *)v31 + 1);
    *v30 = v33;
    v30[1] = v35;
    goto LABEL_21;
  }
  *(_OWORD *)v30 = *(_OWORD *)v31;
LABEL_21:
  v36 = v7[9];
  v37 = (char *)a1 + v36;
  v38 = (char *)a2 + v36;
  *(_QWORD *)v37 = *(_QWORD *)v38;
  v37[8] = v38[8];
  *((_BYTE *)a1 + v7[10]) = *((_BYTE *)a2 + v7[10]);
  v39 = a3[5];
  v40 = (char *)a1 + v39;
  v41 = (char *)a2 + v39;
  v42 = sub_100007E8C(&qword_1011E5A90);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  v43 = a3[6];
  v44 = (char *)a1 + v43;
  v45 = (char *)a2 + v43;
  v46 = sub_100007E8C(&qword_1011E0C40);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 40))(v44, v45, v46);
  if (a1 != a2)
  {
    v47 = a3[7];
    v48 = (char *)a1 + v47;
    v49 = (char *)a2 + v47;
    sub_10004FF60((uint64_t)a1 + v47, &qword_1011DE430);
    v50 = sub_100007E8C(&qword_1011DE430);
    if (swift_getEnumCaseMultiPayload(v49, v50) == 1)
    {
      v51 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v48, v49, v51);
      swift_storeEnumTagMultiPayload(v48, v50, 1);
    }
    else
    {
      memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    }
    v52 = a3[8];
    v53 = (char *)a1 + v52;
    v54 = (char *)a2 + v52;
    sub_10004FF60((uint64_t)a1 + v52, (uint64_t *)&unk_1011DE420);
    v55 = sub_100007E8C((uint64_t *)&unk_1011DE420);
    if (swift_getEnumCaseMultiPayload(v54, v55) == 1)
    {
      v56 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v53, v54, v56);
      swift_storeEnumTagMultiPayload(v53, v55, 1);
    }
    else
    {
      memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100CA71C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100CA71CC);
}

uint64_t sub_100CA71CC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = type metadata accessor for Notice(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v11 = sub_100007E8C(&qword_1011E5A90);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      v14 = sub_100007E8C(&qword_1011E0C40);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        v15 = sub_100007E8C(&qword_1011E3528);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          v8 = sub_100007E8C(&qword_1011E5238);
          v12 = *(_QWORD *)(v8 - 8);
          v13 = a3[8];
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_100CA72BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100CA72C8);
}

uint64_t sub_100CA72C8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v8 = type metadata accessor for Notice(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v13 = sub_100007E8C(&qword_1011E5A90);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      v16 = sub_100007E8C(&qword_1011E0C40);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        v17 = sub_100007E8C(&qword_1011E3528);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          v10 = sub_100007E8C(&qword_1011E5238);
          v14 = *(_QWORD *)(v10 - 8);
          v15 = a4[8];
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_100CA73C0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD v12[5];

  v2 = type metadata accessor for Notice(319);
  if (v3 <= 0x3F)
  {
    v12[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_100CA74E8(319, (unint64_t *)&unk_1011E5B00, (uint64_t (*)(void))sub_100CA19BC, (uint64_t)&type metadata for Double);
    if (v5 <= 0x3F)
    {
      v12[1] = *(_QWORD *)(v4 - 8) + 64;
      sub_100CA74E8(319, (unint64_t *)&qword_1011E0CD0, (uint64_t (*)(void))sub_100C10714, (uint64_t)&type metadata for CGFloat);
      if (v7 <= 0x3F)
      {
        v12[2] = *(_QWORD *)(v6 - 8) + 64;
        sub_1000A79B0(319, &qword_1011E35A8, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
        if (v9 <= 0x3F)
        {
          v12[3] = *(_QWORD *)(v8 - 8) + 64;
          sub_1000A79B0(319, (unint64_t *)&qword_1011E2CE8, (uint64_t (*)(uint64_t))&type metadata accessor for LayoutDirection);
          if (v11 <= 0x3F)
          {
            v12[4] = *(_QWORD *)(v10 - 8) + 64;
            swift_initStructMetadata(a1, 256, 5, v12, a1 + 16);
          }
        }
      }
    }
  }
}

void sub_100CA74E8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3();
    v8 = type metadata accessor for ScaledMetric(a1, a4, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

ValueMetadata *_s25NoticeDismissalContextKeyVMa()
{
  return &_s25NoticeDismissalContextKeyVN;
}

uint64_t sub_100CA7550(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100FBE6D4, 1);
}

uint64_t sub_100CA7560@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, double *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL4 v14;
  int v15;
  uint64_t result;
  double v18;
  double v19;
  double v20;
  double v21;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;

  v6 = type metadata accessor for DynamicTypeSize(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011E59E8);
  __chkstk_darwin();
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Notice(0);
  sub_10004A160(a1 + *(int *)(v12 + 20), (uint64_t)v11, &qword_1011E59E8);
  v13 = type metadata accessor for Notice.Thumbnail(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v11, 1, v13) == 1)
  {
    sub_10004FF60((uint64_t)v11, &qword_1011E59E8);
    v14 = 0;
  }
  else
  {
    v14 = swift_getEnumCaseMultiPayload(v11, v13) == 1;
    sub_10005B748((uint64_t)v11, type metadata accessor for Notice.Thumbnail);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  v15 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (v15 == enum case for DynamicTypeSize.xSmall(_:) || v15 == enum case for DynamicTypeSize.small(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a2, v6);
    result = sub_10005B748(a1, type metadata accessor for Notice);
    v18 = 4.0;
    v19 = 12.0;
    if (v14)
      v20 = 12.0;
    else
      v20 = 4.0;
    v21 = 0.0;
    if (v14)
      v21 = 6.0;
  }
  else
  {
    if (v15 == enum case for DynamicTypeSize.medium(_:)
      || v15 == enum case for DynamicTypeSize.large(_:)
      || v15 == enum case for DynamicTypeSize.xLarge(_:))
    {
      v24 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
LABEL_32:
      if (*(_QWORD *)(a1 + *(int *)(v12 + 32)))
        v19 = 19.0;
      else
        v19 = 20.0;
      v24(a2, v6);
      result = sub_10005B748(a1, type metadata accessor for Notice);
      v21 = 10.0;
      if (v14)
        v20 = 10.0;
      else
        v20 = 12.0;
      v18 = 4.0;
      if (!v14)
        v21 = 4.0;
      goto LABEL_43;
    }
    v24 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    if (v15 != enum case for DynamicTypeSize.xxLarge(_:)
      && v15 != enum case for DynamicTypeSize.xxxLarge(_:)
      && v15 != enum case for DynamicTypeSize.accessibility1(_:)
      && v15 != enum case for DynamicTypeSize.accessibility2(_:)
      && v15 != enum case for DynamicTypeSize.accessibility3(_:)
      && v15 != enum case for DynamicTypeSize.accessibility4(_:)
      && v15 != enum case for DynamicTypeSize.accessibility5(_:))
    {
      v24((uint64_t)v9, v6);
      goto LABEL_32;
    }
    v24(a2, v6);
    result = sub_10005B748(a1, type metadata accessor for Notice);
    v21 = 10.0;
    if (!v14)
      v21 = 6.0;
    v19 = 20.0;
    v20 = 12.0;
    v18 = 8.0;
  }
LABEL_43:
  *a3 = v18;
  a3[1] = v20;
  a3[2] = v18;
  a3[3] = v19;
  a3[4] = v21;
  return result;
}

unint64_t sub_100CA78A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E5BB0;
  if (!qword_1011E5BB0)
  {
    v1 = sub_100044B54(&qword_1011E5BA8);
    sub_100CA792C();
    sub_100049F28((unint64_t *)&unk_1011E3BD0, &qword_1011E0EA8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E5BB0);
  }
  return result;
}

unint64_t sub_100CA792C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E5BB8;
  if (!qword_1011E5BB8)
  {
    v1 = sub_100044B54(&qword_1011E5BC0);
    sub_100CA79B0((unint64_t *)&qword_1011E3F50, &qword_1011E3F40, (void (*)(void))sub_100CA7A18);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E5BB8);
  }
  return result;
}

uint64_t sub_100CA79B0(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_100044B54(a2);
    a3();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100CA7A18()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E3F58;
  if (!qword_1011E3F58)
  {
    v1 = sub_100044B54(&qword_1011E3F60);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E3F58);
  }
  return result;
}

double sub_100CA7A74(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  double result;

  if ((a6 & 1) == 0)
    return sub_10034A22C(a1, a2, a3, a4);
  sub_100055BAC(a1, a2, a3 & 1);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_100CA7AB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = EnvironmentValues.lineLimit.getter();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_100CA7AE4(uint64_t a1)
{
  return EnvironmentValues.lineLimit.setter(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
}

unint64_t sub_100CA7B10()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E5C10;
  if (!qword_1011E5C10)
  {
    v1 = sub_100044B54(&qword_1011E5BE0);
    sub_100048748(&qword_1011E5C18, (uint64_t (*)(uint64_t))&type metadata accessor for CircularProgressView, (uint64_t)&protocol conformance descriptor for CircularProgressView);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E5C10);
  }
  return result;
}

unint64_t sub_100CA7B94()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E5C20;
  if (!qword_1011E5C20)
  {
    v1 = sub_100044B54(&qword_1011E5C08);
    sub_100C75E38(&qword_1011E5C28, &qword_1011E5BF0, (void (*)(void))sub_100CA7C20, (void (*)(void))sub_100C0A63C);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E5C20);
  }
  return result;
}

unint64_t sub_100CA7C20()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E5C30;
  if (!qword_1011E5C30)
  {
    v1 = sub_100044B54(&qword_1011E5BE8);
    sub_100048748(&qword_1011E5C38, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkImage, (uint64_t)&protocol conformance descriptor for ArtworkImage);
    sub_100C0A5E4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E5C30);
  }
  return result;
}

uint64_t sub_100CA7CA4()
{
  return sub_100CA2384(1.05);
}

unint64_t sub_100CA7CC4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011DF580;
  if (!qword_1011DF580)
  {
    v1 = objc_opt_self(OS_dispatch_queue);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1011DF580);
  }
  return result;
}

uint64_t sub_100CA7D04()
{
  return sub_100CA7D10((uint64_t (*)(uint64_t))sub_100CA230C);
}

uint64_t sub_100CA7D10(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for NoticeView(0) - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

uint64_t sub_100CA7D4C()
{
  return sub_100CA2384(1.0);
}

unint64_t sub_100CA7D6C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E5C48;
  if (!qword_1011E5C48)
  {
    v1 = sub_100044B54(&qword_1011E5B48);
    sub_100049F28(&qword_1011E5C50, &qword_1011E5B40, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E5C48);
  }
  return result;
}

id PassthroughView.hitTest(_:with:)(uint64_t a1, double a2, double a3)
{
  void *v3;
  id v7;
  id v8;
  id v9;
  char v10;
  objc_super v12;

  if ((UIViewIgnoresTouchEvents(v3) & 1) != 0)
    return 0;
  v12.receiver = v3;
  v12.super_class = (Class)type metadata accessor for PassthroughView();
  v7 = objc_msgSendSuper2(&v12, "hitTest:withEvent:", a1, a2, a3);
  if (v7)
  {
    sub_100CA7EDC();
    v8 = v3;
    v9 = v7;
    v10 = static NSObject.== infix(_:_:)(v9, v8);

    if ((v10 & 1) != 0)
    {

      return 0;
    }
  }
  return v7;
}

uint64_t type metadata accessor for PassthroughView()
{
  return objc_opt_self(_TtC11MusicCoreUI15PassthroughView);
}

unint64_t sub_100CA7EDC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E2F40;
  if (!qword_1011E2F40)
  {
    v1 = objc_opt_self(UIView);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1011E2F40);
  }
  return result;
}

id PassthroughView.init(frame:)(double a1, double a2, double a3, double a4)
{
  void *v4;
  objc_super v10;

  v10.receiver = v4;
  v10.super_class = (Class)type metadata accessor for PassthroughView();
  return objc_msgSendSuper2(&v10, "initWithFrame:", a1, a2, a3, a4);
}

id PassthroughView.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for PassthroughView();
  v3 = objc_msgSendSuper2(&v5, "initWithCoder:", a1);

  return v3;
}

id PassthroughView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PassthroughView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

char *SymbolButton.__allocating_init(intent:)(int a1)
{
  uint64_t v2;
  char *v3;
  id v4;
  char *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v15[24];

  type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  v3 = &v15[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_100CA8240(a1, 2, (uint64_t)v3);
  v4 = objc_allocWithZone((Class)type metadata accessor for SymbolButton(0));
  v5 = SymbolButton.init(configuration:handler:)((uint64_t)v3, 0, 0);
  v6 = (uint64_t *)&v5[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_configurationProvider];
  swift_beginAccess(&v5[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_configurationProvider], v15, 1, 0);
  v7 = *v6;
  v8 = v6[1];
  *v6 = (uint64_t)sub_100CA84F0;
  v6[1] = 0;
  v9 = v5;
  sub_10004BA30(v7, v8);
  if ((_BYTE)a1)
  {
    if (a1 == 1)
      v10 = AccessibilityIdentifier.shuffleIntentButton.unsafeMutableAddressor();
    else
      v10 = AccessibilityIdentifier.startSingingIntentButton.unsafeMutableAddressor();
  }
  else
  {
    v10 = AccessibilityIdentifier.playIntentButton.unsafeMutableAddressor();
  }
  v12 = *v10;
  v11 = v10[1];
  swift_bridgeObjectRetain();
  UIAccessibilityIdentification.musicAccessibilityIdentifier.setter(v12, v11);

  return v9;
}

uint64_t sub_100CA8240@<X0>(int a1@<W0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  NSString *v17;
  uint64_t v18;
  _OWORD *v19;
  __int128 v20;
  uint64_t v21;
  id v22;
  int v24;
  int v25;
  uint64_t v26;

  v24 = a1;
  v25 = a2;
  v26 = type metadata accessor for UIViewConfigurationState(0);
  v4 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin();
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (int *)type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)(a3 + 24) = UIFontTextStyleSubheadline;
  *(_QWORD *)(a3 + 32) = 0;
  *(_BYTE *)(a3 + 40) = 1;
  *(_OWORD *)(a3 + 48) = xmmword_100EC0EB0;
  *(_QWORD *)(a3 + 64) = 0;
  *(_QWORD *)(a3 + 72) = 0;
  *(_BYTE *)(a3 + 80) = -1;
  *(_QWORD *)(a3 + 88) = 0;
  *(_QWORD *)(a3 + 96) = 0;
  *(_QWORD *)(a3 + 104) = 0x3FF0000000000000;
  *(_QWORD *)(a3 + 112) = 0;
  *(_QWORD *)(a3 + 120) = 0;
  *(_QWORD *)(a3 + 128) = 0;
  *(_QWORD *)(a3 + 136) = UIFontTextStyleSubheadline;
  *(UIFontWeight *)(a3 + 144) = UIFontWeightSemibold;
  *(_QWORD *)(a3 + 152) = 0;
  *(_QWORD *)(a3 + 160) = 0;
  *(_QWORD *)(a3 + 168) = 0x3FF0000000000000;
  *(_QWORD *)(a3 + 176) = 0;
  *(_BYTE *)(a3 + 184) = 0;
  *(_OWORD *)(a3 + 192) = xmmword_100EA85A0;
  *(_QWORD *)(a3 + 208) = 0;
  *(_QWORD *)(a3 + 216) = 0;
  *(_QWORD *)(a3 + 224) = 1;
  *(_OWORD *)(a3 + 232) = 0u;
  *(_OWORD *)(a3 + 248) = 0u;
  *(_OWORD *)(a3 + 264) = 0u;
  *(_OWORD *)(a3 + 280) = 0u;
  v11 = a3 + *(int *)(v10 + 36);
  v12 = type metadata accessor for UIView.Corner(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = a3 + v7[10];
  *(_QWORD *)(v13 + 48) = 0;
  *(_OWORD *)(v13 + 16) = 0u;
  *(_OWORD *)(v13 + 32) = 0u;
  *(_OWORD *)v13 = 0u;
  v14 = (_QWORD *)(a3 + v7[11]);
  *v14 = 0;
  v14[1] = 0;
  v14[2] = 1;
  *(_QWORD *)(a3 + v7[12]) = 0x4010000000000000;
  v15 = v7[13];
  v16 = qword_1011DE2E8;
  v17 = UIFontTextStyleSubheadline;
  if (v16 != -1)
    swift_once(&qword_1011DE2E8, sub_100CCDB38);
  *(_OWORD *)(a3 + v15) = static SymbolButton.Configuration.platterMinimumSize;
  v18 = a3 + v7[14];
  *(_QWORD *)v18 = 0;
  *(_QWORD *)(v18 + 8) = 0;
  *(_BYTE *)(v18 + 16) = 1;
  v19 = (_OWORD *)(a3 + v7[15]);
  v20 = *(_OWORD *)&NSDirectionalEdgeInsetsZero.bottom;
  *v19 = *(_OWORD *)&NSDirectionalEdgeInsetsZero.top;
  v19[1] = v20;
  v21 = a3 + v7[16];
  *(_BYTE *)v21 = 1;
  *(_QWORD *)(v21 + 8) = 0;
  *(_QWORD *)(v21 + 16) = 0;
  *(_BYTE *)(v21 + 24) = 0;
  *(_QWORD *)(a3 + v7[17]) = 0x3FF0000000000000;
  *(_QWORD *)(a3 + v7[18]) = 0;
  *(_BYTE *)(a3 + v7[19]) = 2;
  SymbolButton.Configuration.init()((uint64_t)v9);
  sub_100CA90F8((uint64_t)v9, v24, v25);
  sub_1002292A8(a3);
  sub_100CAD064((uint64_t)v9, a3);
  v22 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  UIViewConfigurationState.init(traitCollection:)(v22);
  sub_100CA8510((uint64_t)v6);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v26);
}

void sub_100CA84F0(uint64_t a1)
{
  sub_100CA8510(a1);
}

void sub_100CA8510(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  id v10;
  int v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  id v32;
  uint64_t v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;

  v2 = v1;
  v4 = type metadata accessor for UIViewConfigurationState(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (void *)UIViewConfigurationState.traitCollection.getter(v8);
  v10 = objc_msgSend(v9, "userInterfaceIdiom");

  if (v10 != (id)6)
  {
    if (*(_QWORD *)(v2 + 224) == 1 || (v11 = *(unsigned __int8 *)(v2 + 248), v11 == 2))
    {
      v12 = UIViewConfigurationState.isHighlighted.getter();
      v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
      if ((v12 & 1) != 0)
      {
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      }
      else
      {
        v14 = UIViewConfigurationState.isSelected.getter(v13);
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        if ((v14 & 1) == 0)
        {

          *(_QWORD *)(v2 + 112) = 0;
          *(_QWORD *)(v2 + 176) = 0;
          return;
        }
      }
      if (qword_1011DDF00 != -1)
        swift_once(&qword_1011DDF00, sub_100BC2420);
      v15 = static UIColor.MusicTint.pressed;
      v16 = *(void **)(v2 + 112);
      v17 = (id)static UIColor.MusicTint.pressed;

      *(_QWORD *)(v2 + 112) = v15;
      v18 = static UIColor.MusicTint.pressed;
      v19 = *(void **)(v2 + 176);
      v20 = (id)static UIColor.MusicTint.pressed;

      *(_QWORD *)(v2 + 176) = v18;
    }
    else
    {
      v21 = (void *)objc_opt_self(UIColor);
      v22 = v21;
      if ((v11 & 1) != 0)
      {
        v34 = objc_msgSend(v21, "blackColor");

        *(_QWORD *)(v2 + 112) = v34;
        v35 = objc_msgSend(v22, "blackColor");

        *(_QWORD *)(v2 + 176) = v35;
        objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 0.0, 0.05);
        UIView.Border.init(thickness:color:)();
        v37 = v36;
        v39 = v38;
        v41 = v40 & 1;

        *(_QWORD *)(v2 + 272) = v37;
        *(_QWORD *)(v2 + 280) = v41;
        *(_QWORD *)(v2 + 288) = v39;
        LOBYTE(v37) = UIViewConfigurationState.isHighlighted.getter();
        sub_100BC2C48();
        v42 = UIColor.init(decimalRed:decimalGreen:decimalBlue:alpha:)(19, 19, 20, 1.0);
        if ((v37 & 1) != 0)
          v43 = 0x3FD5C28F5C28F5C3;
        else
          v43 = 0x3FD3333333333333;
        sub_10013BA8C(*(_QWORD *)(v2 + 192), *(void **)(v2 + 200), *(_QWORD *)(v2 + 208), *(_QWORD *)(v2 + 216));
        *(_QWORD *)(v2 + 192) = v43;
        *(_QWORD *)(v2 + 200) = v42;
      }
      else
      {
        v23 = objc_msgSend(v21, "whiteColor");

        *(_QWORD *)(v2 + 112) = v23;
        v24 = objc_msgSend(v22, "whiteColor");

        *(_QWORD *)(v2 + 176) = v24;
        objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 1.0, 0.05);
        UIView.Border.init(thickness:color:)();
        v26 = v25;
        v28 = v27;
        v30 = v29 & 1;

        *(_QWORD *)(v2 + 272) = v26;
        *(_QWORD *)(v2 + 280) = v30;
        *(_QWORD *)(v2 + 288) = v28;
        v31 = UIViewConfigurationState.isHighlighted.getter();
        v32 = objc_msgSend(v22, "whiteColor");
        if ((v31 & 1) != 0)
          v33 = 0x3FD0A3D70A3D70A4;
        else
          v33 = 0x3FCC28F5C28F5C29;
        sub_10013BA8C(*(_QWORD *)(v2 + 192), *(void **)(v2 + 200), *(_QWORD *)(v2 + 208), *(_QWORD *)(v2 + 216));
        *(_QWORD *)(v2 + 192) = v33;
        *(_QWORD *)(v2 + 200) = v32;
      }
      *(_QWORD *)(v2 + 208) = 0;
      *(_QWORD *)(v2 + 216) = 0;
    }
  }
}

uint64_t SymbolButton.Intent.accessibilityIdentifier.getter(char a1)
{
  uint64_t *v1;
  uint64_t v2;

  if (a1)
  {
    if (a1 == 1)
      v1 = AccessibilityIdentifier.shuffleIntentButton.unsafeMutableAddressor();
    else
      v1 = AccessibilityIdentifier.startSingingIntentButton.unsafeMutableAddressor();
  }
  else
  {
    v1 = AccessibilityIdentifier.playIntentButton.unsafeMutableAddressor();
  }
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

void SymbolButton.update(to:)(int a1)
{
  uint64_t v2;
  char *v3;
  int v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = SymbolButton.materialColor.getter();
  sub_100CA8240(a1, v4, (uint64_t)v3);
  SymbolButton.setConfiguration(_:animation:updates:)((uint64_t)v3, 0, 0, 0, 1, (uint64_t)_swiftEmptyArrayStorage);
  sub_1002292A8((uint64_t)v3);
  if ((_BYTE)a1)
  {
    if (a1 == 1)
      v5 = AccessibilityIdentifier.shuffleIntentButton.unsafeMutableAddressor();
    else
      v5 = AccessibilityIdentifier.startSingingIntentButton.unsafeMutableAddressor();
  }
  else
  {
    v5 = AccessibilityIdentifier.playIntentButton.unsafeMutableAddressor();
  }
  v7 = *v5;
  v6 = v5[1];
  type metadata accessor for SymbolButton(0);
  swift_bridgeObjectRetain();
  UIAccessibilityIdentification.musicAccessibilityIdentifier.setter(v7, v6);
}

uint64_t SymbolButton.materialColor.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  int v5;
  _BYTE v7[24];

  type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  v2 = &v7[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v3 = v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration;
  swift_beginAccess(v3, v7, 0, 0);
  sub_1002291E8(v3, (uint64_t)v2);
  if (*((_QWORD *)v2 + 28) == 1)
  {
    sub_1002292A8((uint64_t)v2);
    return 2;
  }
  else
  {
    v5 = v2[248];
    sub_1002292A8((uint64_t)v2);
    if (v5 == 2)
      return 2;
    else
      return (v5 & 1) == 0;
  }
}

void SymbolButton.materialColor.setter(char a1)
{
  char *v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  uint64_t v24;
  uint64_t v25;

  sub_100007E8C(&qword_1011E5C80);
  __chkstk_darwin();
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SymbolButton.Configuration(0);
  v6 = *(_QWORD *)(v5 - 8);
  *(_QWORD *)&v7 = __chkstk_darwin().n128_u64[0];
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend(v1, "traitCollection", v7);
  v11 = objc_msgSend(v10, "userInterfaceIdiom");

  if (v11 != (id)6)
  {
    if (a1 == 2)
    {
      v18 = 0;
      v19 = 0;
      v12 = 0;
      v13 = 0;
      v14 = 0;
      v15 = 1;
    }
    else
    {
      v20 = 0;
      v21 = 0;
      v22 = 0;
      v23 = 2;
      v24 = 0;
      v25 = 0;
      sub_100CA8FE0((uint64_t)&v20, a1 & 1);
      v15 = v20;
      v18 = v22;
      v19 = v21;
      v12 = v23;
      v13 = v24;
      v14 = v25;
    }
    v16 = (uint64_t)&v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration];
    swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration], &v20, 0, 0);
    sub_1002291E8(v16, (uint64_t)v9);
    sub_10024DDA8(*((void **)v9 + 28), *((void **)v9 + 29), *((void **)v9 + 30), *((_QWORD *)v9 + 31), *((_QWORD *)v9 + 32), *((_QWORD *)v9 + 33));
    v17 = v19;
    *((_QWORD *)v9 + 28) = v15;
    *((_QWORD *)v9 + 29) = v17;
    *((_QWORD *)v9 + 30) = v18;
    *((_QWORD *)v9 + 31) = v12;
    *((_QWORD *)v9 + 32) = v13;
    *((_QWORD *)v9 + 33) = v14;
    SymbolButton.setConfiguration(_:animation:updates:)((uint64_t)v9, 0, 0, 0, 1, (uint64_t)_swiftEmptyArrayStorage);
    sub_1002292A8((uint64_t)v9);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    SymbolButton.updateConfigurationIfNeeded(_:animation:)((uint64_t)v4, 0, 0, 0, 1);
    sub_10004FF60((uint64_t)v4, &qword_1011E5C80);
  }
}

void (*SymbolButton.materialColor.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = SymbolButton.materialColor.getter();
  return sub_100CA8CB0;
}

void sub_100CA8CB0(uint64_t a1)
{
  SymbolButton.materialColor.setter(*(_BYTE *)(a1 + 8));
}

uint64_t SymbolButton.Intent.title.getter(char a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[16];

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for String.LocalizationValue(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v11 = &v17[-v10];
  if (a1)
  {
    if (a1 == 1)
    {
      v12 = 0x656C6666756853;
      v13 = 0xE700000000000000;
    }
    else
    {
      v12 = 0x6953207472617453;
      v13 = 0xED0000676E69676ELL;
    }
  }
  else
  {
    v12 = 2036427856;
    v13 = 0xE400000000000000;
  }
  String.LocalizationValue.init(stringLiteral:)(v12, v13);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(v8, v11, v5);
  if (qword_1011DDE30 != -1)
    swift_once(&qword_1011DDE30, sub_100BA7618);
  v14 = qword_10124F040;
  static Locale.current.getter((id)qword_10124F040);
  v15 = String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, v14, v4, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v5);
  return v15;
}

uint64_t SymbolButton.Intent.symbolName.getter(char a1)
{
  if (!a1)
    return 0x6C69662E79616C70;
  if (a1 == 1)
    return 0x656C6666756873;
  return 0x2E646E612E63696DLL;
}

uint64_t SymbolButton.Intent.symbolBundle.getter(char a1)
{
  uint64_t v1;
  id v2;

  if (a1 != 2)
    return 0;
  if (qword_1011DDED0 != -1)
    swift_once(&qword_1011DDED0, sub_100BBA1FC);
  v1 = static NSBundle.musicCoreUIBundle;
  v2 = (id)static NSBundle.musicCoreUIBundle;
  return v1;
}

unint64_t SymbolButton.Intent.id.getter(char a1)
{
  unint64_t result;

  result = 0xD000000000000015;
  if (a1 == 1)
    return 0xD000000000000018;
  return result;
}

unint64_t sub_100CA8FB8@<X0>(unint64_t *a1@<X8>)
{
  char *v1;
  unint64_t result;
  unint64_t v4;

  result = SymbolButton.Intent.id.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_100CA8FE0(uint64_t a1, char a2)
{
  char v3;
  id v4;
  id v5;
  Swift::String v6;
  void *object;
  unint64_t v8;
  unint64_t v9;
  uint64_t result;
  char v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a2 & 1;
  *(_BYTE *)(a1 + 24) = !(a2 & 1);
  v4 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithBlurRadius:", 50.0);

  *(_QWORD *)a1 = v4;
  v5 = objc_msgSend((id)objc_opt_self(UIColorEffect), "colorEffectSaturate:", 1.6);

  *(_QWORD *)(a1 + 8) = v5;
  _StringGuts.grow(_:)(19);
  swift_bridgeObjectRelease(0xE000000000000000);
  v12 = 0xD000000000000011;
  v13 = 0x8000000100E578D0;
  v11 = v3;
  v6._countAndFlagsBits = String.init<A>(describing:)(&v11, &type metadata for SymbolButton.MaterialColor);
  object = v6._object;
  String.append(_:)(v6);
  swift_bridgeObjectRelease(object);
  v8 = v12;
  v9 = v13;
  result = swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  return result;
}

double sub_100CA90F8(uint64_t a1, unsigned __int8 a2, int a3)
{
  uint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  UIFontTextStyle v10;
  uint64_t v11;
  NSString *v12;
  NSString *v13;
  void *v14;
  void *v15;
  NSString *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSString *v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;
  _OWORD *v36;
  double result;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned __int8 v43;
  uint64_t v44;
  uint64_t v45;

  HIDWORD(v38) = a3;
  sub_100007E8C(&qword_1011E6620);
  __chkstk_darwin();
  v39 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v6 = a2;
    if (a2 == 1)
    {
      v7 = 0;
      v8 = 0xE700000000000000;
      v9 = 0x656C6666756873;
      v10 = UIFontTextStyleSubheadline;
    }
    else
    {
      v11 = qword_1011DDED0;
      v12 = UIFontTextStyleSubheadline;
      if (v11 != -1)
        swift_once(&qword_1011DDED0, sub_100BBA1FC);
      v10 = (UIFontTextStyle)static NSBundle.musicCoreUIBundle;
      v8 = 0xED00007372617473;
      v9 = 0x2E646E612E63696DLL;
      v7 = static NSBundle.musicCoreUIBundle;
    }
  }
  else
  {
    v6 = a2;
    v7 = a2;
    v8 = 0xE90000000000006CLL;
    v9 = 0x6C69662E79616C70;
    v10 = UIFontTextStyleSubheadline;
  }
  v13 = v10;
  v14 = *(void **)(a1 + 16);
  v15 = *(void **)(a1 + 112);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  *(_QWORD *)a1 = v9;
  *(_QWORD *)(a1 + 8) = v8;
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = UIFontTextStyleSubheadline;
  *(_QWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 40) = 1;
  *(_OWORD *)(a1 + 48) = xmmword_100EC0EB0;
  *(_OWORD *)(a1 + 64) = xmmword_100EE8B70;
  *(_BYTE *)(a1 + 80) = 1;
  *(_QWORD *)(a1 + 88) = 0;
  *(_QWORD *)(a1 + 96) = 0;
  *(_QWORD *)(a1 + 104) = 0x3FF0000000000000;
  *(_QWORD *)(a1 + 112) = 0;
  v16 = UIFontTextStyleSubheadline;
  v17 = v6;
  v18 = SymbolButton.Intent.title.getter(v6);
  v20 = v19;
  v21 = UIFontTextStyleBody;

  v22 = *(void **)(a1 + 176);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  *(_QWORD *)(a1 + 120) = v18;
  *(_QWORD *)(a1 + 128) = v20;
  *(_QWORD *)(a1 + 136) = v21;
  *(UIFontWeight *)(a1 + 144) = UIFontWeightSemibold;
  *(_QWORD *)(a1 + 152) = 0;
  *(_QWORD *)(a1 + 160) = 0;
  *(_QWORD *)(a1 + 168) = 0x3FF0000000000000;
  *(_QWORD *)(a1 + 176) = 0;
  *(_BYTE *)(a1 + 184) = 0;
  v23 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  v24 = objc_msgSend(v23, "userInterfaceIdiom");

  if (v24 != (id)6)
  {
    if (BYTE4(v38) == 2)
    {
      v25 = 0;
      v26 = 0;
      v27 = 0;
      v28 = 0;
      v29 = 0;
      v30 = 1;
    }
    else
    {
      v40 = 0;
      v41 = 0;
      v42 = 0;
      v43 = 2;
      v44 = 0;
      v45 = 0;
      sub_100CA8FE0((uint64_t)&v40, BYTE4(v38) & 1);
      v30 = v40;
      v25 = v41;
      v26 = v42;
      v27 = v43;
      v28 = v44;
      v29 = v45;
    }
    sub_10024DDA8(*(void **)(a1 + 224), *(void **)(a1 + 232), *(void **)(a1 + 240), *(_QWORD *)(a1 + 248), *(_QWORD *)(a1 + 256), *(_QWORD *)(a1 + 264));
    *(_QWORD *)(a1 + 224) = v30;
    *(_QWORD *)(a1 + 232) = v25;
    *(_QWORD *)(a1 + 240) = v26;
    *(_QWORD *)(a1 + 248) = v27;
    *(_QWORD *)(a1 + 256) = v28;
    *(_QWORD *)(a1 + 264) = v29;
  }
  if (qword_1011DE328 != -1)
    swift_once(&qword_1011DE328, sub_100CCEBB4);
  v31 = type metadata accessor for UIView.Corner(0);
  v32 = sub_100048B14(v31, (uint64_t)static UIView.Corner.roundedRect);
  v33 = *(_QWORD *)(v31 - 8);
  v34 = (uint64_t)v39;
  (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v39, v32, v31);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v33 + 56))(v34, 0, 1, v31);
  v35 = (int *)type metadata accessor for SymbolButton.Configuration(0);
  sub_100BBA5E0(v34, a1 + v35[9]);
  *(_QWORD *)(a1 + v35[12]) = qword_100EF2B70[v17];
  *(int64x2_t *)(a1 + v35[13]) = vdupq_n_s64(0x4048000000000000uLL);
  v36 = (_OWORD *)(a1 + v35[15]);
  result = 0.0;
  *v36 = xmmword_100EBDBC0;
  v36[1] = xmmword_100EBDBC0;
  return result;
}

Swift::Int static PlayIntentButtonStack.playShuffle(_:)(uint64_t a1, uint64_t a2)
{
  return sub_100CA94D0(a1, a2, (uint64_t)&off_101102B60);
}

Swift::Int static PlayIntentButtonStack.sing(_:)(uint64_t a1, uint64_t a2)
{
  return sub_100CA94D0(a1, a2, (uint64_t)&off_101102B88);
}

Swift::Int sub_100CA94D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Swift::Int v4;

  v4 = sub_100BC0434(a3);
  swift_retain(a2);
  return v4;
}

Swift::Int PlayIntentButtonStack.init(_:handler:)(char a1)
{
  uint64_t v2;
  uint64_t inited;
  Swift::Int v4;
  _BYTE v6[40];

  v2 = sub_100007E8C(&qword_1011DEF70);
  inited = swift_initStackObject(v2, v6);
  *(_OWORD *)(inited + 16) = xmmword_100EA7AA0;
  *(_BYTE *)(inited + 32) = a1;
  v4 = sub_100BC0434(inited);
  swift_setDeallocating(inited);
  return v4;
}

uint64_t PlayIntentButtonStack.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v17;

  sub_100007E8C(&qword_1011E5C88);
  __chkstk_darwin();
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = static Axis.Set.horizontal.getter(v10);
  v12 = Axis.Set.init(rawValue:)(0);
  v13 = v12;
  v14 = Axis.Set.init(rawValue:)(v12);
  if (Axis.Set.init(rawValue:)(v14 & v11) != v11)
    LOBYTE(v13) = Axis.Set.init(rawValue:)(v13 | v11);
  *v9 = v13;
  v15 = sub_100007E8C(&qword_1011E5C90);
  sub_100CA9680(a1, a2, a3, &v9[*(int *)(v15 + 44)]);
  return sub_100065228((uint64_t)v9, a4, &qword_1011E5C88);
}

uint64_t sub_100CA9680@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v22;

  v8 = sub_100007E8C(&qword_1011E5D20);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin();
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v13 = (char *)&v22 - v12;
  __chkstk_darwin();
  v15 = (char *)&v22 - v14;
  __chkstk_darwin();
  v17 = (char *)&v22 - v16;
  sub_100CA9814(0, a1, a2, a3, (uint64_t)&v22 - v16);
  sub_100CA9814(1, a1, a2, a3, (uint64_t)v15);
  v18 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v18(v13, v17, v8);
  v18(v11, v15, v8);
  v18(a4, v13, v8);
  v19 = sub_100007E8C(&qword_1011E5D28);
  v18(&a4[*(int *)(v19 + 48)], v11, v8);
  v20 = *(void (**)(char *, uint64_t))(v9 + 8);
  v20(v15, v8);
  v20(v17, v8);
  v20(v11, v8);
  return ((uint64_t (*)(char *, uint64_t))v20)(v13, v8);
}

void sub_100CA9814(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  _BYTE *v34;
  _QWORD *v35;
  void (*v36)(char *, _QWORD, uint64_t);
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  void (*v43)(char *, char *, uint64_t);
  char *v44;
  void (*v45)(char *, char *, uint64_t);
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  char *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  char *v66;
  char *v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;

  v65 = a1;
  v61 = a5;
  v59 = sub_100007E8C(&qword_1011E58D0);
  __chkstk_darwin();
  v9 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v57 = (char *)&v55 - v10;
  v11 = type metadata accessor for DynamicTypeSize(0);
  v68 = *(_QWORD **)(v11 - 8);
  __chkstk_darwin();
  v67 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v66 = (char *)&v55 - v13;
  v60 = sub_100007E8C(&qword_1011E58D8);
  __chkstk_darwin();
  v56 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v58 = (uint64_t)&v55 - v15;
  v16 = sub_100007E8C(&qword_1011E5D30);
  v63 = *(_QWORD *)(v16 - 8);
  v64 = v16;
  __chkstk_darwin();
  v18 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v20 = (char *)&v55 - v19;
  v21 = sub_100007E8C(&qword_1011E5D38);
  __chkstk_darwin();
  v23 = (uint64_t *)((char *)&v55 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v69 = sub_100007E8C(&qword_1011E5D40);
  __chkstk_darwin();
  v70 = (uint64_t)&v55 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v23 = 0x4030000000000000;
  swift_bridgeObjectRetain_n(a2, 2);
  v25 = (char *)sub_100BB9690(a2);
  swift_bridgeObjectRelease();
  v71 = v25;
  sub_100CAACF4(&v71);
  swift_bridgeObjectRelease();
  v62 = (char *)v23 + *(int *)(v21 + 44);
  v26 = swift_allocObject(&unk_10110D858, 48, 7);
  *(_BYTE *)(v26 + 16) = v65 & 1;
  *(_QWORD *)(v26 + 24) = a2;
  *(_QWORD *)(v26 + 32) = a3;
  *(_QWORD *)(v26 + 40) = a4;
  swift_bridgeObjectRetain();
  swift_retain();
  v27 = sub_100007E8C(&qword_1011E5D48);
  v28 = sub_100049F28(&qword_1011E5D50, &qword_1011E5D48, (uint64_t)&protocol conformance descriptor for [A]);
  v29 = sub_100CAC4D8();
  v30 = sub_100CACEC8();
  ForEach<>.init(_:content:)(&v71, sub_100CACE6C, v26, v27, &type metadata for String, &type metadata for PlayIntentButtonWrapper, v28, v29, v30);
  v31 = v64;
  v32 = *(void (**)(char *, char *, uint64_t))(v63 + 32);
  v32(v20, v18, v64);
  v32(v62, v20, v31);
  LOBYTE(v32) = *(_QWORD *)(a2 + 16) < 2uLL;
  v33 = v70;
  sub_100CACF0C((uint64_t)v23, v70);
  v34 = (_BYTE *)(v33 + *(int *)(v69 + 36));
  *v34 = (_BYTE)v32;
  v34[1] = 1;
  sub_10004FF60((uint64_t)v23, &qword_1011E5D38);
  v35 = v68;
  v36 = (void (*)(char *, _QWORD, uint64_t))v68[13];
  v37 = v66;
  v36(v66, enum case for DynamicTypeSize.xSmall(_:), v11);
  v38 = v67;
  v36(v67, enum case for DynamicTypeSize.accessibility2(_:), v11);
  v39 = sub_100048748((unint64_t *)&qword_1011E3AD0, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  if ((dispatch thunk of static Comparable.<= infix(_:_:)(v37, v38, v11, v39) & 1) != 0)
  {
    v40 = v59;
    v41 = v57;
    v42 = &v57[*(int *)(v59 + 48)];
    v43 = (void (*)(char *, char *, uint64_t))v35[4];
    v43(v57, v37, v11);
    v43(v42, v38, v11);
    v44 = &v9[*(int *)(v40 + 48)];
    v45 = (void (*)(char *, char *, uint64_t))v35[2];
    v45(v9, v41, v11);
    v45(v44, v42, v11);
    v46 = (uint64_t)v56;
    v43(v56, v9, v11);
    v47 = (void (*)(char *, uint64_t))v35[1];
    v47(v44, v11);
    v48 = &v9[*(int *)(v40 + 48)];
    v43(v9, v41, v11);
    v43(v48, v42, v11);
    v49 = v60;
    v43((char *)(v46 + *(int *)(v60 + 36)), v48, v11);
    v47(v9, v11);
    v50 = v58;
    sub_100065228(v46, v58, &qword_1011E58D8);
    v51 = sub_100CACF54();
    v52 = sub_100049F28(&qword_1011E59E0, &qword_1011E58D8, (uint64_t)&protocol conformance descriptor for ClosedRange<A>);
    v53 = v51;
    v54 = v70;
    View.dynamicTypeSize<A>(_:)(v50, v69, v49, v53, v52);
    sub_10004FF60(v50, &qword_1011E58D8);
    sub_10004FF60(v54, &qword_1011E5D40);
  }
  else
  {
    __break(1u);
    swift_release();
    __break(1u);
  }
}

uint64_t PlayIntentButtonWrapper.init(intent:iconOnly:handler:)@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t result;

  result = swift_getKeyPath(&unk_100EF25F8);
  *(_BYTE *)a5 = a1;
  *(_BYTE *)(a5 + 1) = a2;
  *(_QWORD *)(a5 + 8) = a3;
  *(_QWORD *)(a5 + 16) = a4;
  *(_QWORD *)(a5 + 24) = result;
  *(_BYTE *)(a5 + 32) = 0;
  return result;
}

void sub_100CA9DEC(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, double *a6, double a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  double v28;
  double v29;
  uint64_t v30;
  void (*v31)(_QWORD *, _QWORD);
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  double v38;
  double v39;
  uint64_t v40;
  double *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[2];
  int v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  double *v51;
  char *v52;
  char *v53;
  void (*v54)(char *, uint64_t, uint64_t);
  char *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD v58[5];

  v51 = a6;
  v49 = a4;
  v48 = a3;
  v47 = a2;
  v46[1] = a1;
  v9 = type metadata accessor for LayoutSubview(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin();
  v53 = (char *)v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011E5CF8);
  __chkstk_darwin();
  v13 = (char *)v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for LayoutSubviews(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin();
  v17 = (char *)v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100007E8C(&qword_1011E5D00);
  v19 = __chkstk_darwin();
  v21 = (char *)v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = v15;
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v50 = a5;
  v54 = v22;
  ((void (*)(char *, uint64_t, uint64_t, __n128))v22)(v17, a5, v14, v19);
  v23 = sub_100048748(&qword_1011E5D10, (uint64_t (*)(uint64_t))&type metadata accessor for LayoutSubviews, (uint64_t)&protocol conformance descriptor for LayoutSubviews);
  v55 = v17;
  dispatch thunk of Sequence.makeIterator()(v14, v23);
  v24 = &v21[*(int *)(v18 + 36)];
  v25 = sub_100048748(&qword_1011E5D08, (uint64_t (*)(uint64_t))&type metadata accessor for LayoutSubviews, (uint64_t)&protocol conformance descriptor for LayoutSubviews);
  v26 = *(_QWORD *)v24;
  v52 = v21;
  dispatch thunk of Collection.endIndex.getter(v58, v14, v25);
  if (v26 == v58[0])
  {
    v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    v28 = 0.0;
LABEL_10:
    v41 = v51;
    v27(v13, 1, 1, v9);
    v42 = (uint64_t)v52;
  }
  else
  {
    v28 = 0.0;
    v29 = 0.0;
    v30 = (uint64_t)v52;
    while (1)
    {
      v31 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v58, v24, v14, v25);
      (*(void (**)(char *))(v10 + 16))(v13);
      v31(v58, 0);
      v32 = v55;
      v54(v55, v30, v14);
      dispatch thunk of Collection.formIndex(after:)(v24, v14, v25);
      (*(void (**)(char *, uint64_t))(v56 + 8))(v32, v14);
      v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
      v27(v13, 0, 1, v9);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v13, 1, v9) == 1)
        break;
      v33 = v53;
      v34 = (*(uint64_t (**)(char *, char *, uint64_t))(v10 + 32))(v53, v13, v9);
      v35 = static ProposedViewSize.zero.getter(v34);
      LOBYTE(v58[0]) = v36 & 1;
      LOBYTE(v57) = v37 & 1;
      v38 = LayoutSubview.sizeThatFits(_:)(v35);
      if (v28 <= v38)
        v28 = v38;
      if (v29 <= v39)
        v29 = v39;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v33, v9);
      v40 = *(_QWORD *)v24;
      dispatch thunk of Collection.endIndex.getter(v58, v14, v25);
      if (v40 == v58[0])
        goto LABEL_10;
    }
    v41 = v51;
    v42 = v30;
  }
  sub_10004FF60(v42, &qword_1011E5D00);
  dispatch thunk of Collection.startIndex.getter(v14);
  dispatch thunk of Collection.endIndex.getter(&v57, v14, v25);
  dispatch thunk of Collection.distance(from:to:)(v58, &v57, v14, v25);
  v44 = v43;
  dispatch thunk of Collection.startIndex.getter(v14);
  dispatch thunk of Collection.endIndex.getter(&v57, v14, v25);
  dispatch thunk of Collection.distance(from:to:)(v58, &v57, v14, v25);
  if (__OFSUB__(v45, 1))
  {
    __break(1u);
  }
  else
  {
    *v41 = v28;
    v41[1] = v28 * (double)v44 + (double)(v45 - 1) * a7;
  }
}

void sub_100CAA224(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, double *a6)
{
  double *v6;

  sub_100CA9DEC(a1, a2 & 1, a3, a4 & 1, a5, a6, *v6);
}

uint64_t sub_100CAA240(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, double *a10)
{
  double *v10;

  return sub_100CAB4DC(a9, a10, a1, a2, a3, a4, *v10);
}

uint64_t sub_100CAA254@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v15;

  sub_100007E8C(&qword_1011E5C88);
  __chkstk_darwin();
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v1;
  v6 = v1[1];
  v7 = v1[2];
  v9 = static Axis.Set.horizontal.getter(v8);
  v10 = Axis.Set.init(rawValue:)(0);
  v11 = v10;
  v12 = Axis.Set.init(rawValue:)(v10);
  if (Axis.Set.init(rawValue:)(v12 & v9) != v9)
    LOBYTE(v11) = Axis.Set.init(rawValue:)(v11 | v9);
  *v4 = v11;
  v13 = sub_100007E8C(&qword_1011E5C90);
  sub_100CA9680(v5, v6, v7, &v4[*(int *)(v13 + 44)]);
  return sub_100065228((uint64_t)v4, a1, &qword_1011E5C88);
}

uint64_t EnvironmentValues.playIntentButtonMaterial.getter()
{
  unint64_t v0;
  uint64_t var1;

  v0 = sub_100CAB424();
  EnvironmentValues.subscript.getter(&var1, &type metadata for PlayIntentButtonMaterialKey, &type metadata for PlayIntentButtonMaterialKey, v0);
  return var1;
}

_QWORD *sub_100CAA378@<X0>(_BYTE *a1@<X8>)
{
  unint64_t v2;
  _QWORD *result;
  uint64_t v4;

  v2 = sub_100CAB424();
  result = EnvironmentValues.subscript.getter(&v4, &type metadata for PlayIntentButtonMaterialKey, &type metadata for PlayIntentButtonMaterialKey, v2);
  *a1 = v4;
  return result;
}

uint64_t sub_100CAA3C4(char *a1)
{
  unint64_t v1;
  char v3;

  v3 = *a1;
  v1 = sub_100CAB424();
  return EnvironmentValues.subscript.setter(&v3, &type metadata for PlayIntentButtonMaterialKey, &type metadata for PlayIntentButtonMaterialKey, v1);
}

uint64_t EnvironmentValues.playIntentButtonMaterial.setter(char a1)
{
  unint64_t v1;
  char v3;

  v3 = a1;
  v1 = sub_100CAB424();
  return EnvironmentValues.subscript.setter(&v3, &type metadata for PlayIntentButtonMaterialKey, &type metadata for PlayIntentButtonMaterialKey, v1);
}

char *PlayIntentButtonWrapper.makeUIView(context:)()
{
  unsigned __int8 *v0;
  unsigned __int8 *v1;
  uint64_t v2;
  _BYTE *v3;
  int v4;
  char *v5;
  int v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v21[24];
  char v22[24];

  v1 = v0;
  type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  v3 = &v21[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for SymbolButton(0);
  v4 = *v0;
  v5 = SymbolButton.__allocating_init(intent:)(v4);
  v6 = SymbolButton.materialColor.getter();
  sub_100CA8240(v4, v6, (uint64_t)v3);
  SymbolButton.setConfiguration(_:animation:updates:)((uint64_t)v3, 0, 0, 0, 1, (uint64_t)_swiftEmptyArrayStorage);
  sub_1002292A8((uint64_t)v3);
  if (v4)
  {
    if (v4 == 1)
      v7 = AccessibilityIdentifier.shuffleIntentButton.unsafeMutableAddressor();
    else
      v7 = AccessibilityIdentifier.startSingingIntentButton.unsafeMutableAddressor();
  }
  else
  {
    v7 = AccessibilityIdentifier.playIntentButton.unsafeMutableAddressor();
  }
  v9 = *v7;
  v8 = v7[1];
  swift_bridgeObjectRetain();
  UIAccessibilityIdentification.musicAccessibilityIdentifier.setter(v9, v8);
  v10 = *((_QWORD *)v1 + 3);
  LOBYTE(v8) = v1[32];
  sub_10006B3F8(v10, v8);
  LOBYTE(v9) = sub_100C31DE8(v10, v8);
  sub_10006B604(v10, v8);
  SymbolButton.materialColor.setter(v9);
  v11 = v1[1];
  v12 = (uint64_t)&v5[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration];
  swift_beginAccess(&v5[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration], v22, 0, 0);
  sub_1002291E8(v12, (uint64_t)v3);
  v3[184] = v11;
  SymbolButton.setConfiguration(_:animation:updates:)((uint64_t)v3, 0, 0, 0, 1, (uint64_t)_swiftEmptyArrayStorage);
  sub_1002292A8((uint64_t)v3);
  v13 = *((_QWORD *)v1 + 1);
  v14 = *((_QWORD *)v1 + 2);
  v15 = swift_allocObject(&unk_10110D368, 49, 7);
  v16 = *((_OWORD *)v1 + 1);
  *(_OWORD *)(v15 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v15 + 32) = v16;
  *(_BYTE *)(v15 + 48) = v1[32];
  v17 = (uint64_t *)&v5[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_handler];
  swift_beginAccess(&v5[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_handler], v21, 1, 0);
  v18 = *v17;
  v19 = v17[1];
  *v17 = (uint64_t)sub_100CAB46C;
  v17[1] = v15;
  sub_10006B3F8(v10, v8);
  sub_100048AAC(v13, v14);
  sub_10004BA30(v18, v19);
  return v5;
}

uint64_t PlayIntentButtonWrapper.updateUIView(_:context:)(uint64_t a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  _BYTE *v5;
  int v6;
  int v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v23[24];
  _BYTE v24[24];

  v2 = v1;
  type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  v5 = &v23[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = *v2;
  v7 = SymbolButton.materialColor.getter();
  sub_100CA8240(v6, v7, (uint64_t)v5);
  SymbolButton.setConfiguration(_:animation:updates:)((uint64_t)v5, 0, 0, 0, 1, (uint64_t)_swiftEmptyArrayStorage);
  sub_1002292A8((uint64_t)v5);
  if (v6)
  {
    if (v6 == 1)
      v8 = AccessibilityIdentifier.shuffleIntentButton.unsafeMutableAddressor();
    else
      v8 = AccessibilityIdentifier.startSingingIntentButton.unsafeMutableAddressor();
  }
  else
  {
    v8 = AccessibilityIdentifier.playIntentButton.unsafeMutableAddressor();
  }
  v10 = *v8;
  v9 = v8[1];
  type metadata accessor for SymbolButton(0);
  swift_bridgeObjectRetain();
  UIAccessibilityIdentification.musicAccessibilityIdentifier.setter(v10, v9);
  v11 = *((_QWORD *)v2 + 3);
  LOBYTE(v10) = v2[32];
  sub_10006B3F8(v11, v10);
  v12 = sub_100C31DE8(v11, v10);
  sub_10006B604(v11, v10);
  SymbolButton.materialColor.setter(v12);
  v13 = v2[1];
  v14 = a1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration;
  swift_beginAccess(a1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration, v24, 0, 0);
  sub_1002291E8(v14, (uint64_t)v5);
  v5[184] = v13;
  SymbolButton.setConfiguration(_:animation:updates:)((uint64_t)v5, 0, 0, 0, 1, (uint64_t)_swiftEmptyArrayStorage);
  sub_1002292A8((uint64_t)v5);
  v15 = *((_QWORD *)v2 + 1);
  v16 = *((_QWORD *)v2 + 2);
  v17 = swift_allocObject(&unk_10110D390, 49, 7);
  v18 = *((_OWORD *)v2 + 1);
  *(_OWORD *)(v17 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v17 + 32) = v18;
  *(_BYTE *)(v17 + 48) = v2[32];
  v19 = (uint64_t *)(a1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_handler);
  swift_beginAccess(a1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_handler, v23, 1, 0);
  v20 = *v19;
  v21 = v19[1];
  *v19 = (uint64_t)sub_100CAB46C;
  v19[1] = v17;
  sub_10006B3F8(v11, v10);
  sub_100048AAC(v15, v16);
  return sub_10004BA30(v20, v21);
}

double PlayIntentButtonWrapper.sizeThatFits(_:uiView:context:)(uint64_t a1, char a2, int a3, int a4, id a5)
{
  double result;
  double v8;

  objc_msgSend(a5, "intrinsicContentSize");
  if ((a2 & 1) == 0)
  {
    if (result > *(double *)&a1)
      v8 = result;
    else
      v8 = *(double *)&a1;
    if (*(double *)&a1 != INFINITY)
      return v8;
  }
  return result;
}

uint64_t sub_100CAA918(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100CACDFC();
  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100CAA968(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100CACDFC();
  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_100CAA9B8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100CACDFC();
  UIViewRepresentable.body.getter(a1, v2);
  __break(1u);
}

double View.playIntentButtonMaterial(_:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t KeyPath;
  double result;
  char v8;

  KeyPath = swift_getKeyPath(&unk_100EF25F8);
  v8 = a1;
  View.environment<A>(_:_:)(KeyPath, &v8, a2, a3);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

uint64_t sub_100CAAA4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  v8 = sub_1000E4570(&qword_1011E5CE8, &qword_1011E5CF0, (void (*)(void))sub_100CAC480, (uint64_t)&protocol conformance descriptor for <A> A?);
  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

uint64_t (*EnvironmentValues.playIntentButtonMaterial.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  unint64_t v4;

  v3 = a1 + 2;
  *a1 = v1;
  v4 = sub_100CAB424();
  a1[1] = v4;
  EnvironmentValues.subscript.getter(v3, &type metadata for PlayIntentButtonMaterialKey, &type metadata for PlayIntentButtonMaterialKey, v4);
  return sub_100CAAB14;
}

uint64_t sub_100CAAB14(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a1 + 16);
  return EnvironmentValues.subscript.setter(a1 + 17, &type metadata for PlayIntentButtonMaterialKey, &type metadata for PlayIntentButtonMaterialKey, v1);
}

uint64_t PlayIntentLayoutHelper.Configuration.distribution.getter(__int16 a1)
{
  return HIBYTE(a1);
}

uint64_t static PlayIntentLayoutHelper.Configuration.with(_:)(void (*a1)(unsigned __int16 *))
{
  unsigned __int16 v2;
  uint64_t v3;

  v2 = 513;
  v3 = 0x4030000000000000;
  a1(&v2);
  return v2;
}

BOOL static PlayIntentLayoutHelper.Configuration.__derived_struct_equals(_:_:)(__int16 a1, __int16 a2, double a3, double a4)
{
  return a3 == a4 && a1 == a2;
}

BOOL sub_100CAABB0(double *a1, double *a2)
{
  return *(unsigned __int8 *)a1 == *(unsigned __int8 *)a2
      && *((unsigned __int8 *)a1 + 1) == *((unsigned __int8 *)a2 + 1)
      && a1[1] == a2[1];
}

uint64_t PlayIntentLayoutHelper.configuration.setter(uint64_t result, double a2)
{
  uint64_t v2;

  *(_WORD *)(v2 + 16) = result;
  *(double *)(v2 + 24) = a2;
  return result;
}

char *PlayIntentLayoutHelper.init()()
{
  char *v0;

  type metadata accessor for SymbolButton(0);
  v0 = SymbolButton.__allocating_init(intent:)(0);
  SymbolButton.__allocating_init(intent:)(1);
  return v0;
}

void PlayIntentLayoutHelper.layout(in:rect:)(void *a1, uint64_t a2, void *a3, void *a4, int a5, double a6)
{
  uint64_t v12;
  uint64_t inited;
  id v14;
  id v15;
  uint64_t v16;
  _BYTE v17[48];

  v12 = sub_100007E8C(&qword_1011DF520);
  inited = swift_initStackObject(v12, v17);
  *(_OWORD *)(inited + 16) = xmmword_100EA7DB0;
  *(_QWORD *)(inited + 32) = a3;
  *(_QWORD *)(inited + 40) = a4;
  v16 = inited;
  specialized Array._endMutation()(inited);
  v14 = a3;
  v15 = a4;
  _s11MusicCoreUI22PlayIntentLayoutHelperV6layout_2in4rect13configurationySayAA12SymbolButtonCG_So6UIViewCSo6CGRectVSgAC13ConfigurationVtFZ_0(v16, a1, a2, a5, a6);
  swift_bridgeObjectRelease();
}

void sub_100CAACF4(char **a1)
{
  char *v2;
  uint64_t v3;
  _QWORD v4[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v2 = sub_100BE7A1C((uint64_t)v2);
  v3 = *((_QWORD *)v2 + 2);
  v4[0] = v2 + 32;
  v4[1] = v3;
  sub_100CAAD5C(v4);
  *a1 = v2;
}

void sub_100CAAD5C(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  Swift::Int v3;
  Swift::Int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  Swift::Int v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  Swift::Int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  Swift::Int v18;
  Swift::Int v19;
  char v20;
  Swift::Int v21;
  _BYTE *v22;
  unsigned int v23;
  Swift::Int v24;
  _BYTE *v25;
  unsigned int v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  char v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  unint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t i;
  unsigned int v81;
  uint64_t v82;
  unsigned int v83;
  uint64_t v84;
  unint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  unint64_t v91;
  _QWORD *v92;
  _QWORD *v93;
  Swift::Int v94;
  Swift::Int v95;
  uint64_t v96;
  unsigned __int8 *v97;

  v2 = a1;
  v3 = a1[1];
  v4 = _minimumMergeRunLength(_:)(v3);
  if (v4 >= v3)
  {
    if (v3 < 0)
      goto LABEL_138;
    if ((unint64_t)v3 >= 2)
    {
      v78 = 0;
      v79 = *v2;
      for (i = 1; i != v3; ++i)
      {
        v81 = *(unsigned __int8 *)(v79 + i);
        v82 = v78;
        do
        {
          v83 = *(unsigned __int8 *)(v79 + v82);
          if (v81 >= v83)
            break;
          if (!v79)
            goto LABEL_142;
          *(_BYTE *)(v79 + v82 + 1) = v83;
          *(_BYTE *)(v79 + v82--) = v81;
        }
        while (v82 != -1);
        ++v78;
      }
    }
  }
  else
  {
    if (v3 >= 0)
      v5 = v3;
    else
      v5 = v3 + 1;
    if (v3 < -1)
      goto LABEL_137;
    v94 = v4;
    v95 = v3;
    if (v3 > 1)
    {
      v6 = v5 >> 1;
      v7 = static Array._allocateBufferUninitialized(minimumCapacity:)(v5 >> 1, &type metadata for SymbolButton.Intent);
      *(_QWORD *)(v7 + 16) = v6;
      v3 = v95;
      v93 = (_QWORD *)v7;
      v97 = (unsigned __int8 *)(v7 + 32);
LABEL_13:
      v9 = 0;
      v92 = v2;
      v10 = *v2;
      v11 = (char *)_swiftEmptyArrayStorage;
      v96 = *v2;
      while (1)
      {
        v13 = v9++;
        if (v9 < v3)
        {
          v14 = *(unsigned __int8 *)(v10 + v9);
          v15 = *(unsigned __int8 *)(v10 + v13);
          v9 = v13 + 2;
          if (v13 + 2 < v3)
          {
            v16 = v14;
            while (1)
            {
              v17 = *(unsigned __int8 *)(v10 + v9);
              if (v14 < v15 == v17 >= v16)
                break;
              ++v9;
              v16 = v17;
              if (v3 == v9)
              {
                v9 = v3;
                break;
              }
            }
          }
          if (v14 < v15)
          {
            if (v9 < v13)
              goto LABEL_139;
            if (v13 < v9)
            {
              v18 = v9 - 1;
              v19 = v13;
              do
              {
                if (v19 != v18)
                {
                  if (!v10)
                    goto LABEL_145;
                  v20 = *(_BYTE *)(v10 + v19);
                  *(_BYTE *)(v10 + v19) = *(_BYTE *)(v10 + v18);
                  *(_BYTE *)(v10 + v18) = v20;
                }
                v59 = ++v19 < v18--;
              }
              while (v59);
            }
          }
        }
        if (v9 < v3)
        {
          if (__OFSUB__(v9, v13))
            goto LABEL_136;
          if (v9 - v13 < v94)
          {
            v21 = v13 + v94;
            if (__OFADD__(v13, v94))
              goto LABEL_140;
            if (v21 >= v3)
              v21 = v3;
            if (v21 < v13)
            {
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
              return;
            }
            if (v9 != v21)
            {
              v22 = (_BYTE *)(v10 + v9);
              do
              {
                v23 = *(unsigned __int8 *)(v10 + v9);
                v24 = v13;
                v25 = v22;
                do
                {
                  v26 = *(v25 - 1);
                  if (v23 >= v26)
                    break;
                  if (!v10)
                    goto LABEL_143;
                  *v25 = v26;
                  *--v25 = v23;
                  ++v24;
                }
                while (v9 != v24);
                ++v9;
                ++v22;
              }
              while (v9 != v21);
              v9 = v21;
            }
          }
        }
        if (v9 < v13)
          goto LABEL_131;
        if ((swift_isUniquelyReferenced_nonNull_native(v11) & 1) == 0)
          v11 = sub_100BE7894(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
        v28 = *((_QWORD *)v11 + 2);
        v27 = *((_QWORD *)v11 + 3);
        v12 = v28 + 1;
        v10 = v96;
        if (v28 >= v27 >> 1)
        {
          v77 = sub_100BE7894((char *)(v27 > 1), v28 + 1, 1, v11);
          v10 = v96;
          v11 = v77;
        }
        *((_QWORD *)v11 + 2) = v12;
        v29 = v11 + 32;
        v30 = &v11[16 * v28 + 32];
        *(_QWORD *)v30 = v13;
        *((_QWORD *)v30 + 1) = v9;
        if (v28)
        {
          while (1)
          {
            v31 = v12 - 1;
            if (v12 >= 4)
            {
              v36 = &v29[16 * v12];
              v37 = *((_QWORD *)v36 - 8);
              v38 = *((_QWORD *)v36 - 7);
              v42 = __OFSUB__(v38, v37);
              v39 = v38 - v37;
              if (v42)
                goto LABEL_120;
              v41 = *((_QWORD *)v36 - 6);
              v40 = *((_QWORD *)v36 - 5);
              v42 = __OFSUB__(v40, v41);
              v34 = v40 - v41;
              v35 = v42;
              if (v42)
                goto LABEL_121;
              v43 = v12 - 2;
              v44 = &v29[16 * v12 - 32];
              v46 = *(_QWORD *)v44;
              v45 = *((_QWORD *)v44 + 1);
              v42 = __OFSUB__(v45, v46);
              v47 = v45 - v46;
              if (v42)
                goto LABEL_122;
              v42 = __OFADD__(v34, v47);
              v48 = v34 + v47;
              if (v42)
                goto LABEL_124;
              if (v48 >= v39)
              {
                v66 = &v29[16 * v31];
                v68 = *(_QWORD *)v66;
                v67 = *((_QWORD *)v66 + 1);
                v42 = __OFSUB__(v67, v68);
                v69 = v67 - v68;
                if (v42)
                  goto LABEL_130;
                v59 = v34 < v69;
                goto LABEL_84;
              }
            }
            else
            {
              if (v12 != 3)
              {
                v60 = *((_QWORD *)v11 + 4);
                v61 = *((_QWORD *)v11 + 5);
                v42 = __OFSUB__(v61, v60);
                v53 = v61 - v60;
                v54 = v42;
                goto LABEL_78;
              }
              v33 = *((_QWORD *)v11 + 4);
              v32 = *((_QWORD *)v11 + 5);
              v42 = __OFSUB__(v32, v33);
              v34 = v32 - v33;
              v35 = v42;
            }
            if ((v35 & 1) != 0)
              goto LABEL_123;
            v43 = v12 - 2;
            v49 = &v29[16 * v12 - 32];
            v51 = *(_QWORD *)v49;
            v50 = *((_QWORD *)v49 + 1);
            v52 = __OFSUB__(v50, v51);
            v53 = v50 - v51;
            v54 = v52;
            if (v52)
              goto LABEL_125;
            v55 = &v29[16 * v31];
            v57 = *(_QWORD *)v55;
            v56 = *((_QWORD *)v55 + 1);
            v42 = __OFSUB__(v56, v57);
            v58 = v56 - v57;
            if (v42)
              goto LABEL_127;
            if (__OFADD__(v53, v58))
              goto LABEL_129;
            if (v53 + v58 >= v34)
            {
              v59 = v34 < v58;
LABEL_84:
              if (v59)
                v31 = v43;
              goto LABEL_86;
            }
LABEL_78:
            if ((v54 & 1) != 0)
              goto LABEL_126;
            v62 = &v29[16 * v31];
            v64 = *(_QWORD *)v62;
            v63 = *((_QWORD *)v62 + 1);
            v42 = __OFSUB__(v63, v64);
            v65 = v63 - v64;
            if (v42)
              goto LABEL_128;
            if (v65 < v53)
              goto LABEL_15;
LABEL_86:
            v70 = v31 - 1;
            if (v31 - 1 >= v12)
            {
              __break(1u);
LABEL_117:
              __break(1u);
LABEL_118:
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
              goto LABEL_141;
            }
            if (!v10)
              goto LABEL_144;
            v71 = &v29[16 * v70];
            v72 = *(_QWORD *)v71;
            v73 = v29;
            v74 = &v29[16 * v31];
            v75 = *((_QWORD *)v74 + 1);
            sub_100B8A8EC((unsigned __int8 *)(v10 + *(_QWORD *)v71), (unsigned __int8 *)(v10 + *(_QWORD *)v74), v10 + v75, v97);
            if (v1)
              goto LABEL_114;
            if (v75 < v72)
              goto LABEL_117;
            if (v31 > *((_QWORD *)v11 + 2))
              goto LABEL_118;
            *(_QWORD *)v71 = v72;
            *(_QWORD *)&v73[16 * v70 + 8] = v75;
            v76 = *((_QWORD *)v11 + 2);
            if (v31 >= v76)
              goto LABEL_119;
            v12 = v76 - 1;
            memmove(v74, v74 + 16, 16 * (v76 - 1 - v31));
            v29 = v73;
            *((_QWORD *)v11 + 2) = v76 - 1;
            v10 = v96;
            if (v76 <= 2)
              goto LABEL_15;
          }
        }
        v12 = 1;
LABEL_15:
        v3 = v95;
        if (v9 >= v95)
        {
          v2 = v92;
          v8 = v93;
          goto LABEL_103;
        }
      }
    }
    v8 = _swiftEmptyArrayStorage;
    v97 = (unsigned __int8 *)&_swiftEmptyArrayStorage[4];
    if (v3 == 1)
    {
      v93 = _swiftEmptyArrayStorage;
      goto LABEL_13;
    }
    v12 = _swiftEmptyArrayStorage[2];
    v11 = (char *)_swiftEmptyArrayStorage;
LABEL_103:
    v93 = v8;
    if (v12 >= 2)
    {
      v84 = *v2;
      do
      {
        v85 = v12 - 2;
        if (v12 < 2)
          goto LABEL_132;
        if (!v84)
          goto LABEL_146;
        v86 = v11;
        v87 = v11 + 32;
        v88 = *(_QWORD *)&v11[16 * v85 + 32];
        v89 = *(_QWORD *)&v11[16 * v12 + 24];
        sub_100B8A8EC((unsigned __int8 *)(v84 + v88), (unsigned __int8 *)(v84 + *(_QWORD *)&v87[16 * v12 - 16]), v84 + v89, v97);
        if (v1)
          break;
        if (v89 < v88)
          goto LABEL_133;
        if ((swift_isUniquelyReferenced_nonNull_native(v86) & 1) == 0)
          v86 = sub_100BE798C((uint64_t)v86);
        if (v85 >= *((_QWORD *)v86 + 2))
          goto LABEL_134;
        v90 = &v86[16 * v85 + 32];
        *(_QWORD *)v90 = v88;
        *((_QWORD *)v90 + 1) = v89;
        v91 = *((_QWORD *)v86 + 2);
        if (v12 > v91)
          goto LABEL_135;
        memmove(&v86[16 * v12 + 16], &v86[16 * v12 + 32], 16 * (v91 - v12));
        v11 = v86;
        *((_QWORD *)v86 + 2) = v91 - 1;
        v12 = v91 - 1;
      }
      while (v91 > 2);
    }
LABEL_114:
    swift_bridgeObjectRelease();
    v93[2] = 0;
    swift_bridgeObjectRelease();
  }
}

_QWORD *sub_100CAB390@<X0>(_BYTE *a1@<X8>)
{
  unint64_t v2;
  _QWORD *result;
  uint64_t v4;

  v2 = sub_100CAB424();
  result = EnvironmentValues.subscript.getter(&v4, &type metadata for PlayIntentButtonMaterialKey, &type metadata for PlayIntentButtonMaterialKey, v2);
  *a1 = v4;
  return result;
}

uint64_t sub_100CAB3DC(char *a1)
{
  unint64_t v1;
  char v3;

  v3 = *a1;
  v1 = sub_100CAB424();
  return EnvironmentValues.subscript.setter(&v3, &type metadata for PlayIntentButtonMaterialKey, &type metadata for PlayIntentButtonMaterialKey, v1);
}

unint64_t sub_100CAB424()
{
  unint64_t result;

  result = qword_1011E5C98;
  if (!qword_1011E5C98)
  {
    result = swift_getWitnessTable(&unk_100EF2B30, &type metadata for PlayIntentButtonMaterialKey);
    atomic_store(result, (unint64_t *)&qword_1011E5C98);
  }
  return result;
}

uint64_t sub_100CAB474()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
    swift_release();
  sub_10006B604(*(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
  return swift_deallocObject(v0, 49);
}

uint64_t sub_100CAB4AC()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);
  uint64_t result;

  v1 = *(uint64_t (**)(_QWORD))(v0 + 24);
  if (v1)
    return v1(*(unsigned __int8 *)(v0 + 16));
  return result;
}

uint64_t sub_100CAB4DC(uint64_t a1, double *a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, double a7)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  double Width;
  double v29;
  uint64_t v30;
  __n128 v31;
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  char *v34;
  uint64_t v35;
  double v36;
  double v37;
  void (*v38)(_QWORD *, _QWORD);
  char *v39;
  void (*v40)(char *, uint64_t, uint64_t, uint64_t);
  char *v41;
  double v42;
  char *v43;
  CGFloat Height;
  __n128 v45;
  unint64_t v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  CGFloat v52;
  uint64_t v53;
  double v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v59;
  void (*v60)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  double *v67;
  void (*v68)(char *, uint64_t, uint64_t, __n128);
  char *v69;
  uint64_t v70;
  _QWORD v71[4];
  _QWORD v72[2];
  CGRect v73;
  CGRect v74;

  v14 = type metadata accessor for ViewDimensions(0);
  v65 = *(_QWORD *)(v14 - 8);
  v66 = v14;
  __chkstk_darwin();
  v64 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for LayoutSubview(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin();
  v63 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011E5CF8);
  __chkstk_darwin();
  v20 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for LayoutSubviews(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin();
  v24 = (char *)&v59 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_100007E8C(&qword_1011E5D00);
  __chkstk_darwin();
  v27 = (char *)&v59 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73.origin.x = a3;
  v73.origin.y = a4;
  v73.size.width = a5;
  v73.size.height = a6;
  Width = CGRectGetWidth(v73);
  v67 = a2;
  v29 = a2[1];
  v30 = sub_100048748(&qword_1011E5D08, (uint64_t (*)(uint64_t))&type metadata accessor for LayoutSubviews, (uint64_t)&protocol conformance descriptor for LayoutSubviews);
  dispatch thunk of Collection.startIndex.getter(v21);
  dispatch thunk of Collection.endIndex.getter(v72, v21, v30);
  v31 = dispatch thunk of Collection.distance(from:to:)(v71, v72, v21, v30);
  v60 = v32;
  v70 = v22;
  v68 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v22 + 16);
  v68(v24, a1, v21, v31);
  v33 = sub_100048748(&qword_1011E5D10, (uint64_t (*)(uint64_t))&type metadata accessor for LayoutSubviews, (uint64_t)&protocol conformance descriptor for LayoutSubviews);
  v69 = v24;
  dispatch thunk of Sequence.makeIterator()(v21, v33);
  v34 = &v27[*(int *)(v25 + 36)];
  v35 = *(_QWORD *)v34;
  dispatch thunk of Collection.endIndex.getter(v71, v21, v30);
  if (v35 == v71[0])
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v20, 1, 1, v16);
  }
  else
  {
    v36 = (Width - v29) / (double)(uint64_t)v60;
    v37 = a3;
    v62 = v30;
    v61 = v21;
    while (1)
    {
      v38 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v71, v34, v21, v30);
      (*(void (**)(char *))(v17 + 16))(v20);
      v38(v71, 0);
      v39 = v69;
      ((void (*)(char *, char *, uint64_t))v68)(v69, v27, v21);
      dispatch thunk of Collection.formIndex(after:)(v34, v21, v30);
      (*(void (**)(char *, uint64_t))(v70 + 8))(v39, v21);
      v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
      v40(v20, 0, 1, v16);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v20, 1, v16) == 1)
        break;
      v60 = v40;
      v41 = v63;
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v63, v20, v16);
      v42 = v36 + *v67;
      v74.origin.x = a3;
      v74.origin.y = a4;
      v74.size.width = a5;
      v74.size.height = a6;
      v43 = v27;
      Height = CGRectGetHeight(v74);
      v45.n128_u64[0] = static UnitPoint.topLeading.getter();
      v47.n128_u64[0] = v46;
      LOBYTE(v71[0]) = 0;
      LOBYTE(v72[0]) = 0;
      LayoutSubview.place(at:anchor:proposal:)(*(_QWORD *)&v42, 0, *(_QWORD *)&Height, 0, v37, a4, v45, v47);
      LOBYTE(v71[0]) = 0;
      LOBYTE(v72[0]) = 0;
      v48 = v17;
      v49 = v16;
      v50 = v20;
      v51 = v64;
      v52 = Height;
      v27 = v43;
      v21 = v61;
      v53 = LayoutSubview.dimensions(in:)(*(_QWORD *)&v42, 0, *(_QWORD *)&v52, 0);
      v54 = ViewDimensions.width.getter(v53);
      v55 = v51;
      v20 = v50;
      v16 = v49;
      v17 = v48;
      (*(void (**)(char *, uint64_t))(v65 + 8))(v55, v66);
      v37 = v37 + v54 + a7;
      v56 = v41;
      v30 = v62;
      (*(void (**)(char *, uint64_t))(v48 + 8))(v56, v16);
      v57 = *(_QWORD *)v34;
      dispatch thunk of Collection.endIndex.getter(v71, v21, v30);
      if (v57 == v71[0])
      {
        v60(v20, 1, 1, v16);
        return sub_10004FF60((uint64_t)v27, &qword_1011E5D00);
      }
    }
  }
  return sub_10004FF60((uint64_t)v27, &qword_1011E5D00);
}

void sub_100CAB99C(id *a1, id a2, double *a3, uint64_t a4, uint64_t a5, uint64_t a6, BOOL *a7, double a8, double a9, double a10, double a11, double a12, double a13, double a14)
{
  id v25;
  id v26;
  id v27;
  double v28;
  double v29;
  double v30;
  double v31;
  id v32;
  double v33;
  double v34;
  uint64_t v35;
  double v36;
  BOOL v37;
  double v38;
  double v39;
  uint64_t v40;
  double v41;
  CGRect v44;
  CGRect v45;
  CGRect v46;

  v25 = *a1;
  v26 = objc_msgSend(*a1, "superview");
  if (!v26 || (v27 = v26, v26, v27 != a2))
    objc_msgSend(a2, "addSubview:", v25);
  v28 = *a3;
  v29 = a3[1];
  v30 = a3[3];
  if ((*(_BYTE *)(a4 + 8) & 1) != 0)
  {
    v41 = a12;
    v31 = a9;
    v32 = objc_msgSend(v25, "intrinsicContentSize");
    v34 = v33;
    if ((unint64_t)a5 >> 62)
    {
      if (a5 < 0)
        v40 = a5;
      else
        v40 = a5 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v35 = _CocoaArrayWrapper.endIndex.getter(v40);
      v32 = (id)swift_bridgeObjectRelease(a5);
    }
    else
    {
      v35 = *(_QWORD *)((a5 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v36 = v34 - CGFloat.ceilingValue(scale:)(v32, v31, a8 / (double)v35);
    a12 = v41;
  }
  else
  {
    v36 = *(double *)a4;
  }
  CGRect.applyingLayoutDirection(_:inBounds:)(a6, a10, a11, a12, a13, v28, v29, v36, v30);
  objc_msgSend(v25, "setFrame:");
  v44.origin.x = v28;
  v44.origin.y = v29;
  v44.size.width = v36;
  v44.size.height = v30;
  a3[2] = a3[2] - (CGRectGetWidth(v44) + a14);
  v45.origin.x = v28;
  v45.origin.y = v29;
  v45.size.width = v36;
  v45.size.height = v30;
  *a3 = *a3 + CGRectGetWidth(v45) + a14;
  if (*a7)
  {
    v37 = 1;
  }
  else
  {
    objc_msgSend(v25, "intrinsicContentSize");
    v39 = v38;
    v46.origin.x = v28;
    v46.origin.y = v29;
    v46.size.width = v36;
    v46.size.height = v30;
    v37 = CGRectGetWidth(v46) < v39;
  }
  *a7 = v37;
}

void _s11MusicCoreUI22PlayIntentLayoutHelperV6layout_2in4rect13configurationySayAA12SymbolButtonCG_So6UIViewCSo6CGRectVSgAC13ConfigurationVtFZ_0(uint64_t a1, void *a2, uint64_t a3, int a4, double a5)
{
  uint64_t v6;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t i;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  double v18;
  uint64_t v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  id v28;
  double v29;
  double v30;
  id v31;
  double v32;
  double v33;
  double v34;
  double v35;
  uint64_t v36;
  _BOOL4 v37;
  uint64_t v38;
  double v39;
  double v40;
  CGFloat v41;
  CGFloat height;
  CGFloat width;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  double v47;
  double v48;
  char *v49;
  void *v50;
  uint64_t v51;
  id v52;
  double v53;
  double v54;
  uint64_t v55;
  double v56;
  char v57;
  int v58;
  double v59;
  void *v60;
  uint64_t v61;
  double v62;
  int v63;
  CGFloat y;
  CGFloat v65;
  uint64_t v66;
  CGFloat v67;
  uint64_t v68;
  CGFloat v69;
  double v70;
  double v71;
  double v72;
  CGFloat v73;
  CGFloat v74;
  CGFloat v75;
  CGFloat v76;
  CGFloat v77;
  double v78;
  double v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  void *v84;
  uint64_t v85;
  char *v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD v91[2];
  uint64_t v92;
  uint64_t v93;
  void *v94;
  int v95;
  CGSize size;
  CGFloat v97;
  CGFloat x;
  double v99;
  id v100[4];
  BOOL v101;
  double v102;
  char v103;
  char v104[24];
  CGRect v105;
  _QWORD v106[5];
  _QWORD *v107;
  char v108;
  CGRect v109;
  CGRect v110;

  v95 = a4;
  v6 = a3;
  sub_100065228(a3, (uint64_t)v106, (uint64_t *)&unk_1011E0670);
  x = *(double *)v106;
  v97 = *(double *)&v106[1];
  *(_QWORD *)&size.height = v106[2];
  *(_QWORD *)&size.width = v106[3];
  type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  v10 = (char *)v91 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = _swiftEmptyArrayStorage;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v89 = a1;
    else
      v89 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v11 = _CocoaArrayWrapper.endIndex.getter(v89);
  }
  else
  {
    v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  v99 = a5;
  if (v11)
  {
    if (v11 < 1)
    {
LABEL_77:
      __break(1u);
      goto LABEL_78;
    }
    v93 = v6;
    for (i = 0; i != v11; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
      else
        v15 = *(id *)(a1 + 8 * i + 32);
      v16 = v15;
      v17 = objc_msgSend(v15, "isHidden");
      if ((v17 & 1) != 0)
      {

      }
      else
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v17);
        v13 = v107[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v13);
        v14 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v16);
        specialized ContiguousArray._endMutation()(v14);
      }
    }
    *(_QWORD *)&v18 = swift_bridgeObjectRelease().n128_u64[0];
    v19 = (uint64_t)v107;
    v6 = v93;
  }
  else
  {
    *(_QWORD *)&v18 = swift_bridgeObjectRelease().n128_u64[0];
    v19 = (uint64_t)_swiftEmptyArrayStorage;
  }
  objc_msgSend(a2, "bounds", v18);
  v21 = v20;
  v23 = v22;
  v25 = v24;
  v27 = v26;
  v28 = objc_msgSend(a2, "traitCollection");
  objc_msgSend(v28, "displayScale");
  v30 = v29;

  v31 = objc_msgSend(a2, "effectiveUserInterfaceLayoutDirection");
  objc_msgSend(a2, "layoutMargins");
  v33 = v32;
  v35 = v34;
  v91[1] = v36;
  v37 = v19 < 0 || (v19 & 0x4000000000000000) != 0;
  if (!v37)
  {
    v38 = *(_QWORD *)(v19 + 16);
    *(_QWORD *)&v39 = v38 - 1;
    if (!__OFSUB__(v38, 1))
      goto LABEL_20;
    goto LABEL_76;
  }
  v90 = swift_bridgeObjectRetain();
  v38 = _CocoaArrayWrapper.endIndex.getter(v90);
  swift_release();
  *(_QWORD *)&v39 = v38 - 1;
  if (__OFSUB__(v38, 1))
  {
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
LABEL_20:
  sub_100065228(v6, (uint64_t)&v107, (uint64_t *)&unk_1011E0670);
  v40 = x;
  v41 = v97;
  height = size.height;
  width = size.width;
  if ((v108 & 1) != 0)
    v40 = sub_10004D6A0(v21, v23, v25, v27, v33, v35);
  x = v39;
  v105.origin.x = v40;
  v105.origin.y = v41;
  v105.size.width = height;
  v105.size.height = width;
  if (v37)
  {
    swift_retain();
    v45 = _CocoaArrayWrapper.endIndex.getter(v44);
  }
  else
  {
    v45 = *(_QWORD *)(v19 + 16);
    swift_retain();
  }
  v94 = a2;
  v92 = (uint64_t)v31;
  v93 = v38;
  if (v45)
  {
    if (v45 >= 1)
    {
      v46 = 0;
      v47 = 0.0;
      v48 = 0.0;
      do
      {
        if ((v19 & 0xC000000000000001) != 0)
          v49 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v46, v19);
        else
          v49 = (char *)*(id *)(v19 + 8 * v46 + 32);
        v50 = v49;
        v51 = (uint64_t)&v49[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration];
        swift_beginAccess(&v49[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration], v104, 0, 0);
        sub_1002291E8(v51, (uint64_t)v10);
        v10[184] = 0;
        SymbolButton.setConfiguration(_:animation:updates:)((uint64_t)v10, 0, 0, 0, 1, (uint64_t)_swiftEmptyArrayStorage);
        sub_1002292A8((uint64_t)v10);
        v52 = objc_msgSend(v50, "intrinsicContentSize");
        v54 = v53;
        v47 = v47 + CGFloat.ceilingValue(scale:)(v52, v30, v53);
        if (v54 > v48)
          v56 = v54;
        else
          v56 = v48;
        ++v46;
        v48 = CGFloat.ceilingValue(scale:)(v55, v30, v56);

      }
      while (v45 != v46);
      goto LABEL_36;
    }
LABEL_78:
    __break(1u);
    __break(1u);
    return;
  }
  v47 = 0.0;
  v48 = 0.0;
LABEL_36:
  v57 = v95;
  v58 = BYTE1(v95);
  v59 = (double)(*(_QWORD *)&x & ~(*(uint64_t *)&x >> 63)) * v99;
  swift_release();
  if (v58)
  {
    v60 = v94;
    v61 = v93;
    if (v58 == 1)
    {
      v102 = v48;
      v103 = 0;
      v62 = v59 + v48 * (double)v93;
    }
    else
    {
      x = v105.origin.x;
      y = v105.origin.y;
      v97 = v105.size.width;
      size.height = v105.size.height;
      v65 = CGRectGetWidth(v105);
      v48 = CGFloat.ceilingValue(scale:)(v66, v30, (v65 - v59) / (double)v61);
      v102 = v48;
      v103 = 0;
      v109.origin.x = x;
      v109.origin.y = y;
      v109.size.width = v97;
      v109.size.height = size.height;
      v62 = CGRectGetWidth(v109);
    }
    v63 = 1;
  }
  else
  {
    v63 = 0;
    v102 = 0.0;
    v103 = 1;
    v62 = v59 + v47;
    v48 = 0.0;
    v60 = v94;
    v61 = v93;
  }
  v67 = v105.origin.y;
  v97 = v105.origin.x;
  size = v105.size;
  v69 = CGRectGetWidth(v105);
  x = v62;
  v70 = v62 - v69;
  if (v70 < 0.0)
    v71 = 0.0;
  else
    v71 = v70;
  if (v63 && v71 > 0.0)
  {
    v102 = v48 - CGFloat.ceilingValue(scale:)(v68, v30, v71 / (double)v61);
    v103 = 0;
    v110.origin.x = v97;
    v110.origin.y = v67;
    v110.size.width = size.width;
    v110.size.height = size.height;
    x = CGRectGetWidth(v110);
  }
  v72 = v99;
  if (v58 != 2)
  {
    if (v57)
    {
      v73 = v97;
      v74 = v67;
      v75 = size.width;
      v76 = size.height;
      if (v57 == 1)
      {
        v77 = CGRectGetWidth(*(CGRect *)&v73);
        v78 = CGFloat.floorValue(scale:)(v30, (v77 - x) * 0.5);
        v79 = v97 + v78;
      }
      else
      {
        v79 = CGRectGetMaxX(*(CGRect *)&v73) - x;
      }
      v105.origin.x = v79;
    }
    v105.size.width = x;
  }
  v101 = 0;
  if (v45)
  {
    v80 = v19 & 0xC000000000000001;
    swift_retain();
    v81 = 0;
    v82 = v92;
    do
    {
      if (v80)
        v83 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v81, v19);
      else
        v83 = *(id *)(v19 + 8 * v81 + 32);
      v84 = v83;
      ++v81;
      v100[0] = v83;
      sub_100CAB99C(v100, v60, &v105.origin.x, (uint64_t)&v102, v19, v82, &v101, v71, v30, v21, v23, v25, v27, v72);

    }
    while (v45 != v81);
    swift_release();
    if (v101 && v61 > 1)
    {
      swift_retain();
      v85 = 0;
      do
      {
        if (v80)
          v86 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v85, v19);
        else
          v86 = (char *)*(id *)(v19 + 8 * v85 + 32);
        v87 = v86;
        ++v85;
        v88 = (uint64_t)&v86[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration];
        swift_beginAccess(&v86[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration], v100, 0, 0);
        sub_1002291E8(v88, (uint64_t)v10);
        v10[184] = 1;
        SymbolButton.setConfiguration(_:animation:updates:)((uint64_t)v10, 0, 0, 0, 1, (uint64_t)_swiftEmptyArrayStorage);
        sub_1002292A8((uint64_t)v10);

      }
      while (v45 != v85);
      swift_release();
    }
  }
  swift_release();
}

unint64_t sub_100CAC438()
{
  unint64_t result;

  result = qword_1011E5CA0;
  if (!qword_1011E5CA0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SymbolButton.Intent, &type metadata for SymbolButton.Intent);
    atomic_store(result, (unint64_t *)&qword_1011E5CA0);
  }
  return result;
}

unint64_t sub_100CAC480()
{
  unint64_t result;

  result = qword_1011E5CA8;
  if (!qword_1011E5CA8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SymbolButton.MaterialColor, &type metadata for SymbolButton.MaterialColor);
    atomic_store(result, (unint64_t *)&qword_1011E5CA8);
  }
  return result;
}

uint64_t sub_100CAC4C4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of PlayIntentButtonStack.body>>, 1);
}

unint64_t sub_100CAC4D8()
{
  unint64_t result;

  result = qword_1011E5CB0;
  if (!qword_1011E5CB0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PlayIntentButtonWrapper, &type metadata for PlayIntentButtonWrapper);
    atomic_store(result, (unint64_t *)&qword_1011E5CB0);
  }
  return result;
}

unint64_t sub_100CAC520()
{
  unint64_t result;

  result = qword_1011E5CB8;
  if (!qword_1011E5CB8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PlayIntentLayoutHelper.Alignment, &type metadata for PlayIntentLayoutHelper.Alignment);
    atomic_store(result, (unint64_t *)&qword_1011E5CB8);
  }
  return result;
}

unint64_t sub_100CAC568()
{
  unint64_t result;

  result = qword_1011E5CC0;
  if (!qword_1011E5CC0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PlayIntentLayoutHelper.Distribution, &type metadata for PlayIntentLayoutHelper.Distribution);
    atomic_store(result, (unint64_t *)&qword_1011E5CC0);
  }
  return result;
}

ValueMetadata *type metadata accessor for SymbolButton.Intent()
{
  return &type metadata for SymbolButton.Intent;
}

uint64_t _s14descr10110D9B1O13MaterialColorOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100CAC60C + 4 * byte_100EF25E5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100CAC640 + 4 * asc_100EF25E0[v4]))();
}

uint64_t sub_100CAC640(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100CAC648(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100CAC650);
  return result;
}

uint64_t sub_100CAC65C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100CAC664);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100CAC668(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100CAC670(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SymbolButton.MaterialColor()
{
  return &type metadata for SymbolButton.MaterialColor;
}

double destroy for PlayIntentButtonStack(_QWORD *a1)
{
  double result;

  swift_bridgeObjectRelease(*a1);
  *(_QWORD *)&result = swift_release(a1[2]).n128_u64[0];
  return result;
}

uint64_t _s11MusicCoreUI21PlayIntentButtonStackVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  swift_retain(v3);
  return a1;
}

uint64_t *assignWithCopy for PlayIntentButtonStack(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  v6 = a2[1];
  v5 = a2[2];
  v7 = a1[2];
  a1[1] = v6;
  a1[2] = v5;
  swift_retain(v5);
  swift_release(v7);
  return a1;
}

_QWORD *assignWithTake for PlayIntentButtonStack(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease(*a1);
  v4 = *(_QWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v5 = a1[2];
  a1[2] = v4;
  swift_release(v5);
  return a1;
}

ValueMetadata *type metadata accessor for PlayIntentButtonStack()
{
  return &type metadata for PlayIntentButtonStack;
}

uint64_t destroy for PlayIntentButtonWrapper(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 8))
    swift_release();
  return sub_10006B604(*(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t initializeWithCopy for PlayIntentButtonWrapper(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *(_WORD *)a1 = *(_WORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4)
  {
    v5 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 8) = v4;
    *(_QWORD *)(a1 + 16) = v5;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  }
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_10006B3F8(v6, v7);
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for PlayIntentButtonWrapper(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v4 = (_OWORD *)(a1 + 8);
  v6 = (_OWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 8);
  if (!*(_QWORD *)(a1 + 8))
  {
    if (v5)
    {
      v8 = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 8) = v5;
      *(_QWORD *)(a1 + 16) = v8;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *v4 = *v6;
    goto LABEL_8;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  v7 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v7;
  swift_retain();
  swift_release();
LABEL_8:
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(_BYTE *)(a2 + 32);
  sub_10006B3F8(v9, v10);
  v11 = *(_QWORD *)(a1 + 24);
  v12 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = v9;
  *(_BYTE *)(a1 + 32) = v10;
  sub_10006B604(v11, v12);
  return a1;
}

uint64_t assignWithTake for PlayIntentButtonWrapper(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v4 = (_OWORD *)(a1 + 8);
  v6 = (_OWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 8);
  if (!*(_QWORD *)(a1 + 8))
  {
    if (v5)
    {
      v8 = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 8) = v5;
      *(_QWORD *)(a1 + 16) = v8;
      goto LABEL_8;
    }
LABEL_7:
    *v4 = *v6;
    goto LABEL_8;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  v7 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v7;
  swift_release();
LABEL_8:
  v9 = *(_BYTE *)(a2 + 32);
  v10 = *(_QWORD *)(a1 + 24);
  v11 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = v9;
  sub_10006B604(v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for PlayIntentButtonWrapper(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PlayIntentButtonWrapper(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PlayIntentButtonWrapper()
{
  return &type metadata for PlayIntentButtonWrapper;
}

uint64_t initializeWithCopy for PlayIntentLayoutHelper(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v5 = v3;
  v6 = v4;
  return a1;
}

uint64_t assignWithCopy for PlayIntentLayoutHelper(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for PlayIntentLayoutHelper(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

ValueMetadata *type metadata accessor for PlayIntentLayoutHelper()
{
  return &type metadata for PlayIntentLayoutHelper;
}

uint64_t getEnumTagSinglePayload for PlayIntentLayoutHelper.Configuration(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && a1[16])
    return (*(_DWORD *)a1 + 254);
  v3 = *a1;
  v4 = v3 >= 3;
  v5 = v3 - 3;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for PlayIntentLayoutHelper.Configuration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PlayIntentLayoutHelper.Configuration()
{
  return &type metadata for PlayIntentLayoutHelper.Configuration;
}

ValueMetadata *type metadata accessor for PlayIntentLayoutHelper.Alignment()
{
  return &type metadata for PlayIntentLayoutHelper.Alignment;
}

uint64_t _s14descr10110D9B1O6IntentOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100CACC68 + 4 * byte_100EF25EF[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100CACC9C + 4 * byte_100EF25EA[v4]))();
}

uint64_t sub_100CACC9C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100CACCA4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100CACCACLL);
  return result;
}

uint64_t sub_100CACCB8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100CACCC0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100CACCC4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100CACCCC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PlayIntentLayoutHelper.Distribution()
{
  return &type metadata for PlayIntentLayoutHelper.Distribution;
}

uint64_t sub_100CACCE8()
{
  return sub_100049F28(&qword_1011E5CC8, &qword_1011E5C88, (uint64_t)&protocol conformance descriptor for ViewThatFits<A>);
}

uint64_t sub_100CACD14(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *a1;
  v2 = sub_100044B54(&qword_1011E5CD0);
  v3 = type metadata accessor for ModifiedContent(255, v1, v2);
  sub_100049F28(&qword_1011E5CD8, &qword_1011E5CD0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v3);
}

ValueMetadata *type metadata accessor for PlayIntentButtonMaterialKey()
{
  return &type metadata for PlayIntentButtonMaterialKey;
}

ValueMetadata *type metadata accessor for PlayIntentButtonStack.SmartHStack()
{
  return &type metadata for PlayIntentButtonStack.SmartHStack;
}

unint64_t sub_100CACDB8()
{
  unint64_t result;

  result = qword_1011E5CE0;
  if (!qword_1011E5CE0)
  {
    result = swift_getWitnessTable("ɯ!", &type metadata for PlayIntentButtonStack.SmartHStack);
    atomic_store(result, (unint64_t *)&qword_1011E5CE0);
  }
  return result;
}

unint64_t sub_100CACDFC()
{
  unint64_t result;

  result = qword_1011E5D18;
  if (!qword_1011E5D18)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PlayIntentButtonWrapper, &type metadata for PlayIntentButtonWrapper);
    atomic_store(result, (unint64_t *)&qword_1011E5D18);
  }
  return result;
}

uint64_t sub_100CACE40()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100CACE6C@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t KeyPath;

  v4 = *(_BYTE *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 32);
  v5 = *(_QWORD *)(v2 + 40);
  v7 = *a1;
  KeyPath = swift_getKeyPath(&unk_100EF25F8);
  *(_BYTE *)a2 = v7;
  *(_BYTE *)(a2 + 1) = v4;
  *(_QWORD *)(a2 + 8) = v6;
  *(_QWORD *)(a2 + 16) = v5;
  *(_QWORD *)(a2 + 24) = KeyPath;
  *(_BYTE *)(a2 + 32) = 0;
  return swift_retain(v5);
}

unint64_t sub_100CACEC8()
{
  unint64_t result;

  result = qword_1011E5D58;
  if (!qword_1011E5D58)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SymbolButton.Intent, &type metadata for SymbolButton.Intent);
    atomic_store(result, (unint64_t *)&qword_1011E5D58);
  }
  return result;
}

uint64_t sub_100CACF0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011E5D38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_100CACF54()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E5D60;
  if (!qword_1011E5D60)
  {
    v1 = sub_100044B54(&qword_1011E5D40);
    sub_100CACFC0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E5D60);
  }
  return result;
}

unint64_t sub_100CACFC0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E5D68;
  if (!qword_1011E5D68)
  {
    v1 = sub_100044B54(&qword_1011E5D38);
    sub_100049F28(&qword_1011E5D70, &qword_1011E5D78, (uint64_t)&protocol conformance descriptor for _LayoutRoot<A>);
    sub_1000E4570(&qword_1011E5D80, &qword_1011E5D30, (void (*)(void))sub_100CAC4D8, (uint64_t)&protocol conformance descriptor for <> ForEach<A, B, C>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _VariadicView.Tree<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E5D68);
  }
  return result;
}

uint64_t sub_100CAD064(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SymbolButton.Configuration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for PlayIntentButtonStack.SmartHStack.Cache()
{
  return &type metadata for PlayIntentButtonStack.SmartHStack.Cache;
}

uint64_t PlaylistCovers.CarouselItem.itemType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100CAD0C4(v1, a1);
}

uint64_t sub_100CAD0C4(uint64_t a1, uint64_t a2)
{
  _s12CarouselItemV16CarouselItemTypeOwcp(a2, a1);
  return a2;
}

uint64_t PlaylistCovers.CarouselItem.itemType.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_100CAD100(a1, v1);
}

uint64_t sub_100CAD100(uint64_t a1, uint64_t a2)
{
  _s12CarouselItemV16CarouselItemTypeOwta(a2, a1);
  return a2;
}

uint64_t PlaylistCovers.CarouselItem.pageIndicator.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10004A160(v1 + 80, a1, &qword_1011E2D08);
}

uint64_t PlaylistCovers.CarouselItem.pageIndicator.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_100CAD160(a1, v1 + 80);
}

uint64_t sub_100CAD160(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011E2D08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

__n128 PlaylistCovers.CarouselItem.init(itemType:pageIndicator:)@<Q0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __n128 result;
  __n128 v11;
  __int128 v12;
  _OWORD v13[5];
  _OWORD v14[2];
  uint64_t v15;

  sub_100CAD22C(a2, (uint64_t)v14);
  v11 = (__n128)v14[1];
  v12 = v14[0];
  v5 = v15;
  sub_100CAD274(a1, v13);
  v6 = v13[1];
  v7 = v13[2];
  v8 = v13[3];
  v9 = v13[4];
  *(_OWORD *)a3 = v13[0];
  *(_OWORD *)(a3 + 16) = v6;
  *(_OWORD *)(a3 + 32) = v7;
  *(_OWORD *)(a3 + 48) = v8;
  *(_OWORD *)(a3 + 64) = v9;
  *(_OWORD *)(a3 + 80) = v12;
  result = v11;
  *(__n128 *)(a3 + 96) = v11;
  *(_QWORD *)(a3 + 112) = v5;
  return result;
}

uint64_t sub_100CAD22C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011E2D08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_OWORD *sub_100CAD274(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;

  *a2 = *a1;
  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[4];
  a2[3] = a1[3];
  a2[4] = v4;
  a2[1] = v2;
  a2[2] = v3;
  return a2;
}

uint64_t static PlaylistCovers.CarouselItem.CarouselItemType.__derived_enum_equals(_:_:)(_OWORD *a1, _OWORD *a2)
{
  char v4;
  _OWORD v6[5];
  _OWORD v7[5];
  _OWORD v8[5];
  _OWORD v9[5];

  sub_100CAD274(a1, v8);
  if (*(_QWORD *)&v8[0])
  {
    v9[2] = v8[2];
    v9[3] = v8[3];
    v9[4] = v8[4];
    v9[0] = v8[0];
    v9[1] = v8[1];
    sub_100CAD274(a2, v6);
    if (*(_QWORD *)&v6[0])
    {
      v7[2] = v6[2];
      v7[3] = v6[3];
      v7[4] = v6[4];
      v7[0] = v6[0];
      v7[1] = v6[1];
      sub_100267690(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004FE614);
      sub_100267690(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004FE614);
      v4 = static PlaylistCovers.Cover.__derived_struct_equals(_:_:)(v9, v7);
      sub_100267690(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100166878);
      sub_100267690(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100166878);
    }
    else
    {
      v4 = 0;
    }
  }
  else
  {
    sub_100CAD274(a2, v9);
    v4 = *(_QWORD *)&v9[0] == 0;
  }
  return v4 & 1;
}

uint64_t sub_100CAD398(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  char v24;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  _QWORD v37[10];
  _QWORD v38[11];

  v2 = *(void **)a1;
  v3 = *(void **)a2;
  if (*(_QWORD *)a1)
  {
    v4 = *(_QWORD *)(a1 + 8);
    v5 = *(void **)(a1 + 16);
    v6 = *(void **)(a1 + 24);
    v7 = *(void **)(a1 + 32);
    v8 = *(void **)(a1 + 40);
    v9 = *(void **)(a1 + 48);
    v10 = *(void **)(a1 + 56);
    v11 = *(_QWORD *)(a1 + 64);
    v12 = *(_QWORD *)(a1 + 72);
    v13 = *(_QWORD *)(a2 + 8);
    v14 = *(void **)(a2 + 16);
    v15 = *(void **)(a2 + 24);
    v16 = *(void **)(a2 + 32);
    v17 = *(void **)(a2 + 40);
    v18 = *(void **)(a2 + 48);
    v19 = *(void **)(a2 + 56);
    v20 = *(_QWORD *)(a2 + 64);
    v21 = *(_QWORD *)(a2 + 72);
    v37[0] = *(_QWORD *)a1;
    v37[1] = v4;
    v37[2] = v5;
    v37[3] = v6;
    v37[4] = v7;
    v37[5] = v8;
    v37[6] = v9;
    v37[7] = v10;
    v37[8] = v11;
    v37[9] = v12;
    if (v3)
    {
      v38[0] = v3;
      v38[1] = v13;
      v38[2] = v14;
      v38[3] = v15;
      v38[4] = v16;
      v38[5] = v17;
      v38[6] = v18;
      v38[7] = v19;
      v38[8] = v20;
      v38[9] = v21;
      v35 = v6;
      v36 = v5;
      v27 = v14;
      v33 = v8;
      v34 = v7;
      v26 = v16;
      v31 = v10;
      v32 = v9;
      v22 = v19;
      v29 = v11;
      v30 = v4;
      v28 = v12;
      v23 = v13;
      sub_1004FE614(v2, v4, v5, v6, v7, v8, v9, v10);
      sub_1004FE614(v3, v23, v14, v15, v26, v17, v18, v22);
      v24 = static PlaylistCovers.Cover.__derived_struct_equals(_:_:)(v37, v38);
      sub_100166878(v3, v23, v27, v15, v26, v17, v18, v22, v20, v21);
      sub_100166878(v2, v30, v36, v35, v34, v33, v32, v31, v29, v28);
    }
    else
    {
      v24 = 0;
    }
  }
  else
  {
    v24 = v3 == 0;
  }
  return v24 & 1;
}

void PlaylistCovers.CarouselItem.hash(into:)(uint64_t a1)
{
  _OWORD *v1;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  _OWORD v10[5];
  char v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  __int128 v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;

  sub_100CAD274(v1, v10);
  sub_100CAD274(v10, &v18);
  if ((_QWORD)v18)
  {
    v3 = v19;
    if (v19)
    {
      v5 = v23;
      v4 = v24;
      v7 = v21;
      v6 = v22;
      v8 = v20;
      v9 = *((_QWORD *)&v18 + 1);
      v11 = BYTE8(v18);
      v12 = v19;
      v13 = v20;
      v14 = v21;
      v15 = v22;
      v16 = v23;
      v17 = v24;
      Hasher._combine(_:)(1u);
      sub_100267690(v10, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004FE614);
      sub_1001667D4(v9, v3, v8, v7, v6, v5, v4);
      PlaylistCovers.Cover.Representation.hash(into:)(a1);
      sub_100267690(v10, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100166878);
      sub_100166720(v9, v3, v8, v7, v6, v5, v4);
    }
    else
    {
      Hasher._combine(_:)(0);
    }
  }
  else
  {
    String.hash(into:)(a1, 0x72656B636970, 0xE600000000000000);
  }
}

uint64_t static PlaylistCovers.CarouselItem.== infix(_:_:)(_OWORD *a1, _OWORD *a2)
{
  char v3;
  _OWORD v5[5];
  _OWORD v6[5];
  _OWORD v7[5];
  _OWORD v8[5];
  _OWORD v9[5];
  _OWORD v10[5];

  sub_100CAD274(a1, v6);
  sub_100CAD274(a2, v5);
  sub_100CAD274(v6, v9);
  if (*(_QWORD *)&v9[0])
  {
    v7[2] = v9[2];
    v7[3] = v9[3];
    v7[4] = v9[4];
    v7[0] = v9[0];
    v7[1] = v9[1];
    sub_100CAD274(v5, v10);
    if (*(_QWORD *)&v10[0])
    {
      v8[2] = v10[2];
      v8[3] = v10[3];
      v8[4] = v10[4];
      v8[0] = v10[0];
      v8[1] = v10[1];
      sub_100267690(v6, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004FE614);
      sub_100267690(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004FE614);
      v3 = static PlaylistCovers.Cover.__derived_struct_equals(_:_:)(v7, v8);
      sub_100267690(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100166878);
      sub_100267690(v6, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100166878);
    }
    else
    {
      v3 = 0;
    }
  }
  else
  {
    sub_100CAD274(v5, v10);
    v3 = *(_QWORD *)&v10[0] == 0;
  }
  return v3 & 1;
}

_QWORD *PlaylistCovers.CarouselItem.cover.getter@<X0>(_QWORD *a1@<X8>)
{
  _OWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *result;
  uint64_t v13;
  _OWORD v14[5];
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  sub_100CAD274(v1, v14);
  sub_100CAD274(v14, &v15);
  v3 = v15;
  if ((_QWORD)v15)
  {
    v4 = v16;
    v13 = *((_QWORD *)&v15 + 1);
    v5 = v17;
    v6 = v18;
    v7 = v19;
    v8 = v20;
    v9 = v21;
    v10 = v22;
    v11 = v23;
  }
  else
  {
    v13 = 0;
    v4 = 0;
    v5 = 0;
    v6 = 0;
    v7 = 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    v11 = 0;
  }
  result = sub_100267690(v14, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004FE614);
  *a1 = v3;
  a1[1] = v13;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  a1[9] = v11;
  return result;
}

double static PlaylistCovers.CarouselItem.picker.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  double result;

  v2 = Image.init(systemName:)(0x662E6172656D6163, 0xEB000000006C6C69);
  v3 = static Font.caption2.getter();
  v4 = static Animation.spring(response:dampingFraction:blendDuration:)(0.5, 1.0, 0.0);
  v5 = ((uint64_t (*)(void))static Color.primary.getter)();
  v6 = Color.opacity(_:)(1.0);
  v7 = swift_release(v5);
  v8 = static Color.primary.getter(v7);
  v9 = Color.opacity(_:)(0.25);
  swift_release(v8);
  result = 0.0;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_QWORD *)(a1 + 80) = v2;
  *(_QWORD *)(a1 + 88) = v3;
  *(_QWORD *)(a1 + 96) = v4;
  *(_QWORD *)(a1 + 104) = v6;
  *(_QWORD *)(a1 + 112) = v9;
  return result;
}

double static PlaylistCovers.CarouselItem.tracksTiled(image:)@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  double result;
  _BYTE v25[16];
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;

  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v25[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v25[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v13 = &v25[-v12];
  v14 = a1;
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000030, 0x8000000100E578F0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v10, v13, v7);
  if (qword_1011DDE30 != -1)
    swift_once(&qword_1011DDE30, sub_100BA7618);
  v15 = qword_10124F040;
  static Locale.current.getter((id)qword_10124F040);
  v16 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v15, v6, 0, 0, 256);
  v18 = v17;
  (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v13, v7);
  PlaylistCovers.Cover.init(image:accessibilityLabel:)((uint64_t)v14, v16, v18, (uint64_t)&v26);
  v19 = v31;
  v20 = v27;
  v21 = v28;
  v22 = v29;
  v23 = v30;
  *(_QWORD *)a2 = v26;
  *(_OWORD *)(a2 + 8) = v20;
  *(_OWORD *)(a2 + 24) = v21;
  *(_OWORD *)(a2 + 40) = v22;
  *(_OWORD *)(a2 + 56) = v23;
  *(_QWORD *)(a2 + 72) = v19;
  result = 0.0;
  *(_OWORD *)(a2 + 80) = 0u;
  *(_OWORD *)(a2 + 96) = 0u;
  *(_QWORD *)(a2 + 112) = 0;
  return result;
}

Swift::Int PlaylistCovers.CarouselItem.hashValue.getter()
{
  _OWORD *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  _QWORD v9[9];
  _OWORD v10[5];
  char v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  __int128 v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;

  Hasher.init(_seed:)(v9, 0);
  sub_100CAD274(v0, v10);
  sub_100CAD274(v10, &v18);
  if ((_QWORD)v18)
  {
    v1 = v19;
    if (v19)
    {
      v3 = v23;
      v2 = v24;
      v5 = v21;
      v4 = v22;
      v6 = v20;
      v7 = *((_QWORD *)&v18 + 1);
      v11 = BYTE8(v18);
      v12 = v19;
      v13 = v20;
      v14 = v21;
      v15 = v22;
      v16 = v23;
      v17 = v24;
      Hasher._combine(_:)(1u);
      sub_100267690(v10, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004FE614);
      sub_1001667D4(v7, v1, v6, v5, v4, v3, v2);
      PlaylistCovers.Cover.Representation.hash(into:)((uint64_t)v9);
      sub_100267690(v10, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100166878);
      sub_100166720(v7, v1, v6, v5, v4, v3, v2);
    }
    else
    {
      Hasher._combine(_:)(0);
    }
  }
  else
  {
    String.hash(into:)(v9, 0x72656B636970, 0xE600000000000000);
  }
  return Hasher._finalize()();
}

Swift::Int sub_100CADC00()
{
  return PlaylistCovers.CarouselItem.hashValue.getter();
}

void sub_100CADC50(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    v4 = *(void **)(v1 + 16);
    if (v4)
    {
      v5 = *(void **)(v1 + 24);
      v6 = *(void **)(v1 + 32);
      v7 = *(void **)(v1 + 40);
      v8 = *(void **)(v1 + 48);
      v9 = *(void **)(v1 + 56);
      v12 = *(_QWORD *)(v1 + 64);
      v10 = *(_QWORD *)(v1 + 8);
      v11 = *(_QWORD *)(v1 + 72);
      Hasher._combine(_:)(1u);
      sub_1004FE614(v3, v10, v4, v5, v6, v7, v8, v9);
      sub_1001667D4(v10, v4, v5, v6, v7, v8, v9);
      PlaylistCovers.Cover.Representation.hash(into:)(a1);
      sub_100166878(v3, v10, v4, v5, v6, v7, v8, v9, v12, v11);
      sub_100166720(v10, v4, v5, v6, v7, v8, v9);
    }
    else
    {
      Hasher._combine(_:)(0);
    }
  }
  else
  {
    String.hash(into:)(a1, 0x72656B636970, 0xE600000000000000);
  }
}

Swift::Int sub_100CADDE4(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v12;
  _QWORD v13[9];
  char v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;

  v2 = *(void **)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(void **)(v1 + 16);
  v5 = *(void **)(v1 + 24);
  v6 = *(void **)(v1 + 32);
  v7 = *(void **)(v1 + 40);
  v8 = *(void **)(v1 + 48);
  v9 = *(void **)(v1 + 56);
  v10 = *(_QWORD *)(v1 + 72);
  v12 = *(_QWORD *)(v1 + 64);
  Hasher.init(_seed:)(v13, a1);
  if (v2)
  {
    if (v4)
    {
      v14 = v3;
      v15 = v4;
      v16 = v5;
      v17 = v6;
      v18 = v7;
      v19 = v8;
      v20 = v9;
      Hasher._combine(_:)(1u);
      sub_1004FE614(v2, v3, v4, v5, v6, v7, v8, v9);
      sub_1001667D4(v3, v4, v5, v6, v7, v8, v9);
      PlaylistCovers.Cover.Representation.hash(into:)((uint64_t)v13);
      sub_100166878(v2, v3, v4, v5, v6, v7, v8, v9, v12, v10);
      sub_100166720(v3, v4, v5, v6, v7, v8, v9);
    }
    else
    {
      Hasher._combine(_:)(0);
    }
  }
  else
  {
    String.hash(into:)(v13, 0x72656B636970, 0xE600000000000000);
  }
  return Hasher._finalize()();
}

uint64_t static PlaylistCovers.carouselItems(from:playlistTitle:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  return swift_task_switch(sub_100CADF64, 0, 0);
}

uint64_t sub_100CADF64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  __int128 v7;

  v1 = *(_QWORD *)(v0 + 40);
  v7 = *(_OWORD *)(v0 + 24);
  v2 = sub_100007E8C(&qword_1011E5D90);
  v3 = swift_task_alloc(48);
  *(_QWORD *)(v0 + 48) = v3;
  *(_OWORD *)(v3 + 16) = v7;
  *(_QWORD *)(v3 + 32) = v1;
  v4 = sub_100007E8C(&qword_1011E5DA8);
  v5 = (_QWORD *)swift_task_alloc(async function pointer to withTaskGroup<A, B>(of:returning:isolation:body:)[1]);
  *(_QWORD *)(v0 + 56) = v5;
  *v5 = v0;
  v5[1] = sub_100CAE034;
  return withTaskGroup<A, B>(of:returning:isolation:body:)(v0 + 16, v2, v4, 0, 0, &unk_1011E5DA0, v3, v2);
}

uint64_t sub_100CAE034()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 56));
  swift_task_dealloc(v1);
  return swift_task_switch(sub_100B0C16C, 0, 0);
}

uint64_t sub_100CAE090(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v5[45] = a4;
  v5[46] = a5;
  v5[43] = a2;
  v5[44] = a3;
  v5[42] = a1;
  v6 = sub_100007E8C(&qword_1011E5DB8);
  v5[47] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[48] = v7;
  v5[49] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (*(_QWORD *)(*(_QWORD *)(sub_100007E8C(&qword_1011E0490) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[50] = swift_task_alloc(v8);
  v5[51] = swift_task_alloc(v8);
  return swift_task_switch(sub_100CAE130, 0, 0);
}

uint64_t sub_100CAE130()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _OWORD *v3;
  uint64_t v4;
  __int128 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t *v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t ObjectType;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;

  v1 = *(_QWORD *)(v0 + 352);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = (_OWORD *)(v0 + 216);
    v4 = *(_QWORD *)(v0 + 368);
    v5 = (__int128 *)(v1 + 32);
    v6 = type metadata accessor for TaskPriority(0);
    v7 = *(_QWORD *)(v6 - 8);
    v46 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
    v47 = v6;
    swift_bridgeObjectRetain();
    v44 = v4;
    v45 = v7;
    do
    {
      v48 = v2;
      v10 = *(_QWORD *)(v0 + 408);
      v11 = v4;
      v13 = *(_QWORD *)(v0 + 360);
      v12 = *(_QWORD *)(v0 + 368);
      v14 = *(uint64_t **)(v0 + 344);
      v16 = v5[1];
      v15 = v5[2];
      v17 = *v5;
      *(_QWORD *)(v0 + 264) = *((_QWORD *)v5 + 6);
      *(_OWORD *)(v0 + 232) = v16;
      *(_OWORD *)(v0 + 248) = v15;
      *v3 = v17;
      v46(v10, 1, 1, v47);
      v18 = swift_allocObject(&unk_10110DC28, 104, 7);
      *(_QWORD *)(v18 + 16) = 0;
      v19 = (uint64_t *)(v18 + 16);
      *(_QWORD *)(v18 + 24) = 0;
      v20 = *(_OWORD *)(v0 + 232);
      *(_OWORD *)(v18 + 32) = *v3;
      *(_OWORD *)(v18 + 48) = v20;
      *(_OWORD *)(v18 + 64) = *(_OWORD *)(v0 + 248);
      *(_QWORD *)(v18 + 80) = *(_QWORD *)(v0 + 264);
      *(_QWORD *)(v18 + 88) = v13;
      v4 = v11;
      *(_QWORD *)(v18 + 96) = v12;
      v21 = *v14;
      sub_1004FEFE4(v0 + 216);
      sub_1004FEFE4(v0 + 216);
      swift_bridgeObjectRetain();
      if ((swift_taskGroup_addPending(v21, 0) & 1) != 0)
      {
        v22 = *(_QWORD *)(v0 + 400);
        sub_10004A160(*(_QWORD *)(v0 + 408), v22, &qword_1011E0490);
        v23 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v22, 1, v47);
        v25 = *(_QWORD *)(v0 + 400);
        if (v23 == 1)
        {
          sub_100CAFBA0(*(_QWORD *)(v0 + 400));
          v26 = 0;
        }
        else
        {
          v27 = TaskPriority.rawValue.getter(v24);
          (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v25, v47);
          v26 = v27;
        }
        v8 = v48;
        v28 = *v19;
        if (*v19)
        {
          v29 = *(_QWORD *)(v18 + 24);
          ObjectType = swift_getObjectType();
          swift_unknownObjectRetain(v28, v31);
          v32 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v29);
          v34 = v33;
          swift_unknownObjectRelease(v28);
        }
        else
        {
          v32 = 0;
          v34 = 0;
        }
        v35 = **(_QWORD **)(v0 + 344);
        v36 = swift_allocObject(&unk_10110DC50, 32, 7);
        *(_QWORD *)(v36 + 16) = &unk_1011E5DC8;
        *(_QWORD *)(v36 + 24) = v18;
        v37 = sub_100007E8C(&qword_1011E5D90);
        v38 = v34 | v32;
        if (v34 | v32)
        {
          v38 = v0 + 272;
          *(_QWORD *)(v0 + 272) = 0;
          *(_QWORD *)(v0 + 280) = 0;
          *(_QWORD *)(v0 + 288) = v32;
          *(_QWORD *)(v0 + 296) = v34;
        }
        *(_QWORD *)(v0 + 304) = 1;
        *(_QWORD *)(v0 + 312) = v38;
        *(_QWORD *)(v0 + 320) = v35;
        swift_task_create(v26 | 0x1100, v0 + 304, v37, &unk_1011E5DE0, v36);
        swift_release();
        v4 = v44;
      }
      else
      {
        swift_release();
        v8 = v48;
      }
      v9 = *(_QWORD *)(v0 + 408);
      sub_1004FF038(v0 + 216);
      sub_100CAFBA0(v9);
      v5 = (__int128 *)((char *)v5 + 56);
      v2 = v8 - 1;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  v39 = **(_QWORD **)(v0 + 344);
  v40 = sub_100007E8C(&qword_1011E5D90);
  TaskGroup.makeAsyncIterator()(v39, v40);
  v41 = sub_100CAFBE0();
  *(_QWORD *)(v0 + 416) = v41;
  v42 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
  *(_QWORD *)(v0 + 424) = v42;
  *v42 = v0;
  v42[1] = sub_100CAE450;
  return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 96, *(_QWORD *)(v0 + 376), v41);
}

uint64_t sub_100CAE450()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  void (*v7)();

  v2 = *(_QWORD **)v1;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 424));
  if (v0)
  {
    v4 = v2[48];
    v3 = v2[49];
    v5 = v2[47];
    v6 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, __n128))(v4 + 8))(v3, v5, v6);
    v7 = (void (*)())UIScreen.Dimensions.size.getter;
  }
  else
  {
    v2[54] = 0;
    v2[55] = &_swiftEmptyDictionarySingleton;
    v7 = sub_100CAE4E8;
  }
  return swift_task_switch(v7, 0, 0);
}

void sub_100CAE4E8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t isUniquelyReferenced_nonNull_native;
  __int128 *v22;
  char v23;
  unint64_t v24;
  uint64_t v25;
  _BOOL8 v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char **v36;
  char *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  void *v46;
  void *v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  BOOL v54;
  uint64_t v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  _QWORD *v62;
  id v63;
  id v64;
  id v65;
  void *v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  id v85;
  id v86;
  void *v87;

  v1 = *(void **)(v0 + 104);
  if (!v1)
  {
    v31 = *(_QWORD *)(v0 + 440);
    v33 = *(_QWORD *)(v0 + 400);
    v32 = *(_QWORD *)(v0 + 408);
    v34 = *(_QWORD *)(v0 + 392);
    v35 = *(_QWORD *)(v0 + 352);
    v36 = *(char ***)(v0 + 336);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 384) + 8))(v34, *(_QWORD *)(v0 + 376));
    sub_100CAFC2C(*(_QWORD *)(v0 + 96), *(void **)(v0 + 104), *(void **)(v0 + 112), *(void **)(v0 + 120), *(void **)(v0 + 128), *(void **)(v0 + 136), *(void **)(v0 + 144), *(void **)(v0 + 152));
    swift_bridgeObjectRetain();
    v37 = sub_100CAFC98(v35, v31);
    swift_bridgeObjectRelease_n(v31, 2);
    *v36 = v37;
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  v2 = *(void **)(v0 + 112);
  v3 = *(void **)(v0 + 120);
  v5 = *(void **)(v0 + 128);
  v4 = *(void **)(v0 + 136);
  v6 = *(void **)(v0 + 144);
  v87 = *(void **)(v0 + 152);
  v83 = *(_QWORD *)(v0 + 440);
  v71 = *(void **)(v0 + 104);
  v72 = *(_QWORD *)(v0 + 96);
  *(_BYTE *)(v0 + 160) = v72;
  *(_QWORD *)(v0 + 168) = v1;
  *(_QWORD *)(v0 + 176) = v2;
  *(_QWORD *)(v0 + 184) = v3;
  *(_QWORD *)(v0 + 192) = v5;
  *(_QWORD *)(v0 + 200) = v4;
  *(_QWORD *)(v0 + 208) = v6;
  v7 = v1;
  v70 = v2;
  v8 = v2;
  v69 = v3;
  v9 = v3;
  v68 = v5;
  v10 = v5;
  v67 = v4;
  v11 = v4;
  v66 = v6;
  v12 = v6;
  v13 = v7;
  v14 = v8;
  v15 = v9;
  v16 = v10;
  v17 = v11;
  v18 = v12;
  v19 = v87;
  v63 = v13;
  v64 = v14;
  v65 = v15;
  v20 = v16;
  v85 = v17;
  v86 = v18;
  PlaylistCovers.Cover.init(image:representation:)((uint64_t)v19, (unsigned __int8 *)(v0 + 160), v0 + 16);
  v73 = *(_QWORD *)(v0 + 16);
  v74 = *(_QWORD *)(v0 + 24);
  v75 = *(_QWORD *)(v0 + 32);
  v76 = *(_QWORD *)(v0 + 40);
  v77 = *(_QWORD *)(v0 + 48);
  v78 = *(_QWORD *)(v0 + 56);
  v79 = *(_QWORD *)(v0 + 64);
  v80 = *(_QWORD *)(v0 + 72);
  v81 = *(_QWORD *)(v0 + 80);
  v82 = *(_QWORD *)(v0 + 88);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v83);
  *(_QWORD *)(v0 + 328) = v83;
  v22 = (__int128 *)(v0 + 160);
  v24 = sub_100BCE2CC(v0 + 160);
  v25 = *(_QWORD *)(v83 + 16);
  v26 = (v23 & 1) == 0;
  v27 = v25 + v26;
  if (__OFADD__(v25, v26))
  {
    __break(1u);
  }
  else
  {
    v28 = v23;
    if (*(_QWORD *)(*(_QWORD *)(v0 + 440) + 24) >= v27)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_100BCFEB8();
    }
    else
    {
      sub_100BCF304(v27, isUniquelyReferenced_nonNull_native);
      v29 = sub_100BCE2CC((uint64_t)v22);
      if ((v28 & 1) != (v30 & 1))
      {
        KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for PlaylistCovers.Cover.Representation);
        return;
      }
      v24 = v29;
    }
    v84 = v19;
    v38 = *(_QWORD **)(v0 + 328);
    *(_QWORD *)(v0 + 448) = v38;
    if ((v28 & 1) != 0)
    {
      v39 = v38[7] + 120 * v24;
      v40 = *(_QWORD *)(v39 + 80);
      v41 = *(_QWORD *)(v39 + 88);
      v42 = *(_QWORD *)(v39 + 96);
      v43 = *(_QWORD *)(v39 + 104);
      v44 = *(_QWORD *)(v39 + 112);
      sub_100166878(*(void **)v39, *(_QWORD *)(v39 + 8), *(void **)(v39 + 16), *(void **)(v39 + 24), *(void **)(v39 + 32), *(void **)(v39 + 40), *(void **)(v39 + 48), *(void **)(v39 + 56), *(_QWORD *)(v39 + 64), *(_QWORD *)(v39 + 72));
      sub_10016677C(v40, v41, v42, v43, v44);
      *(_QWORD *)v39 = v73;
      *(_QWORD *)(v39 + 8) = v74;
      *(_QWORD *)(v39 + 16) = v75;
      *(_QWORD *)(v39 + 24) = v76;
      *(_QWORD *)(v39 + 32) = v77;
      *(_QWORD *)(v39 + 40) = v78;
      *(_QWORD *)(v39 + 48) = v79;
      *(_QWORD *)(v39 + 56) = v80;
      *(_QWORD *)(v39 + 64) = v81;
      *(_QWORD *)(v39 + 72) = v82;
      *(_OWORD *)(v39 + 80) = 0u;
      *(_OWORD *)(v39 + 96) = 0u;
      *(_QWORD *)(v39 + 112) = 0;
      v46 = v64;
      v45 = v65;
      v47 = v63;
LABEL_14:
      swift_bridgeObjectRelease();

      sub_100CAFC2C(v72, v71, v70, v69, v68, v67, v66, v87);
      v62 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
      *(_QWORD *)(v0 + 456) = v62;
      *v62 = v0;
      v62[1] = sub_100CAE9E8;
      dispatch thunk of AsyncIteratorProtocol.next()(v0 + 96, *(_QWORD *)(v0 + 376), *(_QWORD *)(v0 + 416));
      return;
    }
    v38[(v24 >> 6) + 8] |= 1 << v24;
    v48 = v38[6] + 56 * v24;
    v49 = *v22;
    v50 = *(_OWORD *)(v0 + 176);
    v51 = *(_OWORD *)(v0 + 192);
    *(_QWORD *)(v48 + 48) = *(_QWORD *)(v0 + 208);
    *(_OWORD *)(v48 + 16) = v50;
    *(_OWORD *)(v48 + 32) = v51;
    *(_OWORD *)v48 = v49;
    v52 = v38[7] + 120 * v24;
    *(_QWORD *)v52 = v73;
    *(_QWORD *)(v52 + 8) = v74;
    *(_QWORD *)(v52 + 16) = v75;
    *(_QWORD *)(v52 + 24) = v76;
    *(_QWORD *)(v52 + 32) = v77;
    *(_QWORD *)(v52 + 40) = v78;
    *(_QWORD *)(v52 + 48) = v79;
    *(_QWORD *)(v52 + 56) = v80;
    *(_QWORD *)(v52 + 64) = v81;
    *(_QWORD *)(v52 + 72) = v82;
    *(_QWORD *)(v52 + 112) = 0;
    *(_OWORD *)(v52 + 80) = 0u;
    *(_OWORD *)(v52 + 96) = 0u;
    v53 = v38[2];
    v54 = __OFADD__(v53, 1);
    v55 = v53 + 1;
    if (!v54)
    {
      v38[2] = v55;
      v47 = v63;
      v56 = v63;
      v46 = v64;
      v57 = v64;
      v45 = v65;
      v58 = v65;
      v59 = v20;
      v60 = v85;
      v61 = v86;
      goto LABEL_14;
    }
  }
  __break(1u);
}

uint64_t sub_100CAE9E8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t (*v8)();

  v2 = *(_QWORD **)v1;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 456));
  v3 = v2[56];
  if (v0)
  {
    v5 = v2[48];
    v4 = v2[49];
    v6 = v2[47];
    v7 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, __n128))(v5 + 8))(v4, v6, v7);
    v8 = (uint64_t (*)())UIScreen.Dimensions.size.getter;
  }
  else
  {
    v2[54] = 0;
    v2[55] = v3;
    v8 = sub_100CAE4E8;
  }
  return swift_task_switch(v8, 0, 0);
}

uint64_t sub_100CAEA74(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v6 = v2[2];
  v7 = v2[3];
  v8 = v2[4];
  v9 = (_QWORD *)swift_task_alloc(dword_1011E5D9C);
  *(_QWORD *)(v3 + 16) = v9;
  *v9 = v3;
  v9[1] = sub_10006AEE4;
  return sub_100CAE090(a1, a2, v6, v7, v8);
}

unint64_t sub_100CAEAF4()
{
  unint64_t result;

  result = qword_1011E5DB0;
  if (!qword_1011E5DB0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PlaylistCovers.CarouselItem, &type metadata for PlaylistCovers.CarouselItem);
    atomic_store(result, (unint64_t *)&qword_1011E5DB0);
  }
  return result;
}

double _s12CarouselItemVwxx(uint64_t a1)
{
  void *v2;
  double result;
  uint64_t v4;

  if (*(_QWORD *)a1)
  {

    v2 = *(void **)(a1 + 16);
    if (v2)
    {

    }
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 72));
  }
  v4 = *(_QWORD *)(a1 + 80);
  if (v4)
  {
    swift_release(v4);
    swift_release(*(_QWORD *)(a1 + 88));
    swift_release(*(_QWORD *)(a1 + 96));
    swift_release(*(_QWORD *)(a1 + 104));
    *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 112)).n128_u64[0];
  }
  return result;
}

uint64_t _s12CarouselItemVwcp(uint64_t a1, uint64_t a2)
{
  void *v4;
  _OWORD *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;

  v4 = *(void **)a2;
  if (*(_QWORD *)a2)
  {
    *(_QWORD *)a1 = v4;
    v5 = (_OWORD *)(a1 + 8);
    v6 = *(void **)(a2 + 16);
    v7 = v4;
    if (v6)
    {
      *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
      v8 = *(void **)(a2 + 24);
      v9 = *(void **)(a2 + 32);
      *(_QWORD *)(a1 + 16) = v6;
      *(_QWORD *)(a1 + 24) = v8;
      v10 = *(void **)(a2 + 40);
      v11 = *(void **)(a2 + 48);
      *(_QWORD *)(a1 + 32) = v9;
      *(_QWORD *)(a1 + 40) = v10;
      v12 = *(void **)(a2 + 56);
      *(_QWORD *)(a1 + 48) = v11;
      *(_QWORD *)(a1 + 56) = v12;
      v13 = v6;
      v14 = v8;
      v15 = v9;
      v16 = v10;
      v17 = v11;
      v18 = v12;
    }
    else
    {
      v21 = *(_OWORD *)(a2 + 24);
      *v5 = *(_OWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 24) = v21;
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    }
    v22 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = v22;
    swift_bridgeObjectRetain();
  }
  else
  {
    v19 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v19;
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    v20 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v20;
  }
  v23 = *(_QWORD *)(a2 + 80);
  if (v23)
  {
    v24 = *(_QWORD *)(a2 + 88);
    v25 = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 80) = v23;
    *(_QWORD *)(a1 + 88) = v24;
    v27 = *(_QWORD *)(a2 + 104);
    v26 = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 96) = v25;
    *(_QWORD *)(a1 + 104) = v27;
    *(_QWORD *)(a1 + 112) = v26;
    swift_retain(v23);
    swift_retain(v24);
    swift_retain(v25);
    swift_retain(v27);
    swift_retain(v26);
  }
  else
  {
    v28 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v28;
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  }
  return a1;
}

uint64_t _s12CarouselItemVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  _OWORD *v7;
  __int128 *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  id v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  _OWORD *v69;
  uint64_t v70;
  _OWORD *v71;
  uint64_t v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  if (*(_QWORD *)a1)
  {
    if (v5)
    {
      *(_QWORD *)a1 = v5;
      v6 = v5;

      v7 = (_OWORD *)(a1 + 8);
      v8 = (__int128 *)(a2 + 8);
      v9 = *(void **)(a1 + 16);
      v10 = *(_QWORD *)(a2 + 16);
      if (v9)
      {
        if (v10)
        {
          *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
          v11 = *(void **)(a2 + 16);
          *(_QWORD *)(a1 + 16) = v11;
          v12 = v11;

          v13 = *(void **)(a2 + 24);
          v14 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v13;
          v15 = v13;

          v16 = *(void **)(a2 + 32);
          v17 = *(void **)(a1 + 32);
          *(_QWORD *)(a1 + 32) = v16;
          v18 = v16;

          v19 = *(void **)(a2 + 40);
          v20 = *(void **)(a1 + 40);
          *(_QWORD *)(a1 + 40) = v19;
          v21 = v19;

          v22 = *(void **)(a2 + 48);
          v23 = *(void **)(a1 + 48);
          *(_QWORD *)(a1 + 48) = v22;
          v24 = v22;

          v25 = *(void **)(a2 + 56);
          v26 = *(void **)(a1 + 56);
          *(_QWORD *)(a1 + 56) = v25;
          v27 = v25;

        }
        else
        {
          sub_10059FF44((id *)(a1 + 8));
          v61 = *(_OWORD *)(a2 + 24);
          v60 = *(_OWORD *)(a2 + 40);
          v62 = *v8;
          *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
          *(_OWORD *)(a1 + 24) = v61;
          *(_OWORD *)(a1 + 40) = v60;
          *v7 = v62;
        }
      }
      else if (v10)
      {
        *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
        v45 = *(void **)(a2 + 16);
        *(_QWORD *)(a1 + 16) = v45;
        v46 = *(void **)(a2 + 24);
        *(_QWORD *)(a1 + 24) = v46;
        v47 = *(void **)(a2 + 32);
        *(_QWORD *)(a1 + 32) = v47;
        v48 = *(void **)(a2 + 40);
        *(_QWORD *)(a1 + 40) = v48;
        v49 = *(void **)(a2 + 48);
        *(_QWORD *)(a1 + 48) = v49;
        v50 = *(void **)(a2 + 56);
        *(_QWORD *)(a1 + 56) = v50;
        v51 = v45;
        v52 = v46;
        v53 = v47;
        v54 = v48;
        v55 = v49;
        v56 = v50;
      }
      else
      {
        v66 = *v8;
        v67 = *(_OWORD *)(a2 + 24);
        v68 = *(_OWORD *)(a2 + 40);
        *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
        *(_OWORD *)(a1 + 24) = v67;
        *(_OWORD *)(a1 + 40) = v68;
        *v7 = v66;
      }
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100CAF090(a1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v42 = *(_OWORD *)(a2 + 64);
      v44 = *(_OWORD *)(a2 + 16);
      v43 = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 64) = v42;
      *(_OWORD *)(a1 + 16) = v44;
      *(_OWORD *)(a1 + 32) = v43;
    }
  }
  else if (v5)
  {
    *(_QWORD *)a1 = v5;
    v28 = *(_QWORD *)(a2 + 16);
    v29 = v5;
    if (v28)
    {
      *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
      v30 = *(void **)(a2 + 16);
      *(_QWORD *)(a1 + 16) = v30;
      v31 = *(void **)(a2 + 24);
      *(_QWORD *)(a1 + 24) = v31;
      v32 = *(void **)(a2 + 32);
      *(_QWORD *)(a1 + 32) = v32;
      v33 = *(void **)(a2 + 40);
      *(_QWORD *)(a1 + 40) = v33;
      v34 = *(void **)(a2 + 48);
      *(_QWORD *)(a1 + 48) = v34;
      v35 = *(void **)(a2 + 56);
      *(_QWORD *)(a1 + 56) = v35;
      v36 = v30;
      v37 = v31;
      v38 = v32;
      v39 = v33;
      v40 = v34;
      v41 = v35;
    }
    else
    {
      v63 = *(_OWORD *)(a2 + 8);
      v64 = *(_OWORD *)(a2 + 24);
      v65 = *(_OWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 24) = v64;
      *(_OWORD *)(a1 + 40) = v65;
      *(_OWORD *)(a1 + 8) = v63;
    }
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v57 = *(_OWORD *)(a2 + 16);
    v58 = *(_OWORD *)(a2 + 32);
    v59 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v59;
    *(_OWORD *)(a1 + 16) = v57;
    *(_OWORD *)(a1 + 32) = v58;
  }
  v69 = (_OWORD *)(a1 + 80);
  v71 = (_OWORD *)(a2 + 80);
  v70 = *(_QWORD *)(a2 + 80);
  if (*(_QWORD *)(a1 + 80))
  {
    if (v70)
    {
      *(_QWORD *)(a1 + 80) = v70;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_100CAF0C4((_QWORD *)(a1 + 80));
      v72 = *(_QWORD *)(a2 + 112);
      v73 = *(_OWORD *)(a2 + 96);
      *v69 = *v71;
      *(_OWORD *)(a1 + 96) = v73;
      *(_QWORD *)(a1 + 112) = v72;
    }
  }
  else if (v70)
  {
    *(_QWORD *)(a1 + 80) = v70;
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    v74 = *v71;
    v75 = *(_OWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *v69 = v74;
    *(_OWORD *)(a1 + 96) = v75;
  }
  return a1;
}

uint64_t sub_100CAF090(uint64_t a1)
{
  destroy for PlaylistCovers.Cover(a1);
  return a1;
}

_QWORD *sub_100CAF0C4(_QWORD *a1)
{
  destroy for PageIndicator(a1);
  return a1;
}

__n128 initializeWithTake for SymbolButton.Symbol(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_QWORD *)(a1 + 112) = *((_QWORD *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t _s12CarouselItemVwta(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  v4 = *(void **)a1;
  if (!*(_QWORD *)a1)
    goto LABEL_7;
  if (!*(_QWORD *)a2)
  {
    sub_100CAF090(a1);
LABEL_7:
    v12 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v12;
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    v13 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v13;
    goto LABEL_11;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(void **)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    v14 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v14;
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    goto LABEL_10;
  }
  v6 = *(_QWORD *)(a2 + 16);
  if (!v6)
  {
    sub_10059FF44((id *)(a1 + 8));
    goto LABEL_9;
  }
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;

  v7 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  v8 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);

  v9 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);

  v10 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);

  v11 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);

LABEL_10:
  v15 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v15;
  swift_bridgeObjectRelease();
LABEL_11:
  v16 = *(_QWORD *)(a2 + 80);
  if (!*(_QWORD *)(a1 + 80))
  {
LABEL_15:
    v17 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v17;
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    return a1;
  }
  if (!v16)
  {
    sub_100CAF0C4((_QWORD *)(a1 + 80));
    goto LABEL_15;
  }
  *(_QWORD *)(a1 + 80) = v16;
  swift_release();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_release();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_release();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_release();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_release();
  return a1;
}

uint64_t _s12CarouselItemVwet(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 120))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s12CarouselItemVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 120) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 120) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaylistCovers.CarouselItem()
{
  return &type metadata for PlaylistCovers.CarouselItem;
}

id *_s12CarouselItemV16CarouselItemTypeOwxx(id *result)
{
  id *v1;
  id v2;

  if ((unint64_t)*result >= 0xFFFFFFFF)
  {
    v1 = result;

    v2 = v1[2];
    if (v2)
    {

    }
    return (id *)swift_bridgeObjectRelease(v1[9]);
  }
  return result;
}

uint64_t _s12CarouselItemV16CarouselItemTypeOwcp(uint64_t a1, uint64_t a2)
{
  void *v4;
  _OWORD *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;

  v4 = *(void **)a2;
  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {
    v19 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v19;
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    v20 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v20;
  }
  else
  {
    *(_QWORD *)a1 = v4;
    v5 = (_OWORD *)(a1 + 8);
    v6 = *(void **)(a2 + 16);
    v7 = v4;
    if (v6)
    {
      *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
      v8 = *(void **)(a2 + 24);
      v9 = *(void **)(a2 + 32);
      *(_QWORD *)(a1 + 16) = v6;
      *(_QWORD *)(a1 + 24) = v8;
      v10 = *(void **)(a2 + 40);
      v11 = *(void **)(a2 + 48);
      *(_QWORD *)(a1 + 32) = v9;
      *(_QWORD *)(a1 + 40) = v10;
      v12 = *(void **)(a2 + 56);
      *(_QWORD *)(a1 + 48) = v11;
      *(_QWORD *)(a1 + 56) = v12;
      v13 = v6;
      v14 = v8;
      v15 = v9;
      v16 = v10;
      v17 = v11;
      v18 = v12;
    }
    else
    {
      v21 = *(_OWORD *)(a2 + 24);
      *v5 = *(_OWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 24) = v21;
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    }
    v22 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = v22;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t _s12CarouselItemV16CarouselItemTypeOwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  _OWORD *v7;
  __int128 *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  id v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  void *v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
  {
    if ((unint64_t)v5 >= 0xFFFFFFFF)
    {
      *(_QWORD *)a1 = v5;
      v6 = v5;

      v7 = (_OWORD *)(a1 + 8);
      v8 = (__int128 *)(a2 + 8);
      v9 = *(void **)(a1 + 16);
      v10 = *(_QWORD *)(a2 + 16);
      if (v9)
      {
        if (v10)
        {
          *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
          v11 = *(void **)(a2 + 16);
          *(_QWORD *)(a1 + 16) = v11;
          v12 = v11;

          v13 = *(void **)(a2 + 24);
          v14 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v13;
          v15 = v13;

          v16 = *(void **)(a2 + 32);
          v17 = *(void **)(a1 + 32);
          *(_QWORD *)(a1 + 32) = v16;
          v18 = v16;

          v19 = *(void **)(a2 + 40);
          v20 = *(void **)(a1 + 40);
          *(_QWORD *)(a1 + 40) = v19;
          v21 = v19;

          v22 = *(void **)(a2 + 48);
          v23 = *(void **)(a1 + 48);
          *(_QWORD *)(a1 + 48) = v22;
          v24 = v22;

          v25 = *(void **)(a2 + 56);
          v26 = *(void **)(a1 + 56);
          *(_QWORD *)(a1 + 56) = v25;
          v27 = v25;

        }
        else
        {
          sub_10059FF44((id *)(a1 + 8));
          v62 = *(_OWORD *)(a2 + 24);
          v61 = *(_OWORD *)(a2 + 40);
          v63 = *v8;
          *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
          *(_OWORD *)(a1 + 24) = v62;
          *(_OWORD *)(a1 + 40) = v61;
          *v7 = v63;
        }
      }
      else if (v10)
      {
        *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
        v46 = *(void **)(a2 + 16);
        *(_QWORD *)(a1 + 16) = v46;
        v47 = *(void **)(a2 + 24);
        *(_QWORD *)(a1 + 24) = v47;
        v48 = *(void **)(a2 + 32);
        *(_QWORD *)(a1 + 32) = v48;
        v49 = *(void **)(a2 + 40);
        *(_QWORD *)(a1 + 40) = v49;
        v50 = *(void **)(a2 + 48);
        *(_QWORD *)(a1 + 48) = v50;
        v51 = *(void **)(a2 + 56);
        *(_QWORD *)(a1 + 56) = v51;
        v52 = v46;
        v53 = v47;
        v54 = v48;
        v55 = v49;
        v56 = v50;
        v57 = v51;
      }
      else
      {
        v64 = *v8;
        v65 = *(_OWORD *)(a2 + 24);
        v66 = *(_OWORD *)(a2 + 40);
        *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
        *(_OWORD *)(a1 + 24) = v65;
        *(_OWORD *)(a1 + 40) = v66;
        *v7 = v64;
      }
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }

    v42 = *(void **)(a1 + 16);
    if (v42)
    {

    }
    swift_bridgeObjectRelease();
LABEL_12:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v43 = *(_OWORD *)(a2 + 16);
    v44 = *(_OWORD *)(a2 + 32);
    v45 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v45;
    *(_OWORD *)(a1 + 16) = v43;
    *(_OWORD *)(a1 + 32) = v44;
    return a1;
  }
  if ((unint64_t)v5 < 0xFFFFFFFF)
    goto LABEL_12;
  *(_QWORD *)a1 = v5;
  v28 = *(_QWORD *)(a2 + 16);
  v29 = v5;
  if (v28)
  {
    *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
    v30 = *(void **)(a2 + 16);
    *(_QWORD *)(a1 + 16) = v30;
    v31 = *(void **)(a2 + 24);
    *(_QWORD *)(a1 + 24) = v31;
    v32 = *(void **)(a2 + 32);
    *(_QWORD *)(a1 + 32) = v32;
    v33 = *(void **)(a2 + 40);
    *(_QWORD *)(a1 + 40) = v33;
    v34 = *(void **)(a2 + 48);
    *(_QWORD *)(a1 + 48) = v34;
    v35 = *(void **)(a2 + 56);
    *(_QWORD *)(a1 + 56) = v35;
    v36 = v30;
    v37 = v31;
    v38 = v32;
    v39 = v33;
    v40 = v34;
    v41 = v35;
  }
  else
  {
    v58 = *(_OWORD *)(a2 + 8);
    v59 = *(_OWORD *)(a2 + 24);
    v60 = *(_OWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 24) = v59;
    *(_OWORD *)(a1 + 40) = v60;
    *(_OWORD *)(a1 + 8) = v58;
  }
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s12CarouselItemV16CarouselItemTypeOwta(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;

  v4 = *(void **)a1;
  if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
  {
    if (*(_QWORD *)a2 >= 0xFFFFFFFFuLL)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;

      v5 = *(void **)(a1 + 16);
      if (v5)
      {
        v6 = *(_QWORD *)(a2 + 16);
        if (v6)
        {
          *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
          *(_QWORD *)(a1 + 16) = v6;

          v7 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

          v8 = *(void **)(a1 + 32);
          *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);

          v9 = *(void **)(a1 + 40);
          *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);

          v10 = *(void **)(a1 + 48);
          *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);

          v11 = *(void **)(a1 + 56);
          *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);

LABEL_12:
          v16 = *(_QWORD *)(a2 + 72);
          *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
          *(_QWORD *)(a1 + 72) = v16;
          swift_bridgeObjectRelease();
          return a1;
        }
        sub_10059FF44((id *)(a1 + 8));
      }
      v15 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 24) = v15;
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      goto LABEL_12;
    }

    v12 = *(void **)(a1 + 16);
    if (v12)
    {

    }
    swift_bridgeObjectRelease();
  }
  v13 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v13;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  v14 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v14;
  return a1;
}

uint64_t _s12CarouselItemV16CarouselItemTypeOwet(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 80))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t _s12CarouselItemV16CarouselItemTypeOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 80) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

uint64_t sub_100CAF9A8(uint64_t result, int a2)
{
  uint64_t v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  else
  {
    if (!a2)
      return result;
    v2 = (a2 - 1);
  }
  *(_QWORD *)result = v2;
  return result;
}

ValueMetadata *type metadata accessor for PlaylistCovers.CarouselItem.CarouselItemType()
{
  return &type metadata for PlaylistCovers.CarouselItem.CarouselItemType;
}

uint64_t sub_100CAF9EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[4] = a5;
  v6[5] = a6;
  v6[2] = a1;
  v6[3] = a4;
  return swift_task_switch(sub_100CAFA08, 0, 0);
}

uint64_t sub_100CAFA08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 *v8;
  CGFloat v9;
  CGFloat v10;
  void *v11;
  char **v12;
  id v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v5 = *(_OWORD *)v3;
  v6 = *(_OWORD *)(v3 + 16);
  v7 = *(_OWORD *)(v3 + 32);
  *(_QWORD *)(v4 + 48) = *(_QWORD *)(v3 + 48);
  *(_OWORD *)(v4 + 16) = v6;
  *(_OWORD *)(v4 + 32) = v7;
  *(_OWORD *)v4 = v5;
  sub_1004FEFE4(v3);
  v8 = PlaylistCovers.Specs.coverSize.unsafeMutableAddressor();
  v9 = *(double *)v8;
  v10 = *((double *)v8 + 1);
  v11 = *(void **)(v3 + 8);
  v12 = *(char ***)(v3 + 48);
  sub_100CAFF50();
  v13 = objc_msgSend((id)swift_getObjCClassFromMetadata(), "preferredFormat");
  static PlaylistCovers.playlistCoverImage(size:backgroundImage:textColor:title:graphicsFormat:)(v11, v12, v1, v2, v13, v9, v10);
  v15 = v14;

  *(_QWORD *)(v4 + 56) = v15;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100CAFAD0()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 96));
  return swift_deallocObject(v0, 104, 7);
}

uint64_t sub_100CAFB2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1 + 32;
  v6 = *(_QWORD *)(v1 + 88);
  v5 = *(_QWORD *)(v1 + 96);
  v7 = (_QWORD *)swift_task_alloc(dword_1011E5DC4);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10005AEE4;
  v7[4] = v6;
  v7[5] = v5;
  v7[2] = a1;
  v7[3] = v4;
  return swift_task_switch(sub_100CAFA08, 0, 0);
}

uint64_t sub_100CAFBA0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100007E8C(&qword_1011E0490);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100CAFBE0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E5DD0;
  if (!qword_1011E5DD0)
  {
    v1 = sub_100044B54(&qword_1011E5DB8);
    result = swift_getWitnessTable(&protocol conformance descriptor for TaskGroup<A>.Iterator, v1);
    atomic_store(result, (unint64_t *)&qword_1011E5DD0);
  }
  return result;
}

void sub_100CAFC2C(uint64_t a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  if (a2)
  {

  }
}

char *sub_100CAFC98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __int128 v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char *v25;
  uint64_t v27;
  void *v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  void *v37;
  uint64_t v38;
  _OWORD v39[3];
  uint64_t v40;
  void *v41;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return (char *)_swiftEmptyArrayStorage;
  v4 = a1;
  v5 = (char *)_swiftEmptyArrayStorage;
  v6 = 32;
  v27 = swift_bridgeObjectRetain();
  do
  {
    v7 = *(_OWORD *)(v4 + v6 + 16);
    v39[0] = *(_OWORD *)(v4 + v6);
    v39[1] = v7;
    v39[2] = *(_OWORD *)(v4 + v6 + 32);
    v40 = *(_QWORD *)(v4 + v6 + 48);
    if (*(_QWORD *)(a2 + 16))
    {
      sub_1004FEFE4((uint64_t)v39);
      sub_1004FEFE4((uint64_t)v39);
      v8 = sub_100BCE2CC((uint64_t)v39);
      if ((v9 & 1) != 0)
      {
        v10 = *(_QWORD *)(a2 + 56) + 120 * v8;
        v11 = *(_QWORD *)(v10 + 8);
        v12 = *(void **)(v10 + 16);
        v13 = *(void **)(v10 + 24);
        v14 = *(void **)(v10 + 32);
        v15 = *(void **)(v10 + 40);
        v16 = *(void **)(v10 + 48);
        v17 = *(void **)(v10 + 56);
        v18 = *(_QWORD *)(v10 + 80);
        v19 = *(_QWORD *)(v10 + 88);
        v20 = *(_QWORD *)(v10 + 96);
        v21 = *(_QWORD *)(v10 + 104);
        v22 = *(_QWORD *)(v10 + 112);
        v33 = *(_QWORD *)(v10 + 72);
        v34 = *(_QWORD *)(v10 + 64);
        v41 = *(void **)v10;
        v37 = v15;
        v38 = v11;
        v29 = v13;
        v30 = v12;
        v28 = v14;
        v35 = v17;
        v36 = v16;
        sub_1004FE614(v41, v11, v12, v13, v14, v15, v16, v17);
        v31 = v19;
        v32 = v18;
        sub_1004FE694(v18, v19, v20, v21, v22);
        sub_1004FF038((uint64_t)v39);
        sub_1004FF038((uint64_t)v39);
        if ((swift_isUniquelyReferenced_nonNull_native(v5) & 1) == 0)
          v5 = sub_100BCCC60(0, *((_QWORD *)v5 + 2) + 1, 1, v5);
        v24 = *((_QWORD *)v5 + 2);
        v23 = *((_QWORD *)v5 + 3);
        if (v24 >= v23 >> 1)
          v5 = sub_100BCCC60((char *)(v23 > 1), v24 + 1, 1, v5);
        *((_QWORD *)v5 + 2) = v24 + 1;
        v25 = &v5[120 * v24];
        *((_QWORD *)v25 + 4) = v41;
        *((_QWORD *)v25 + 5) = v38;
        *((_QWORD *)v25 + 6) = v30;
        *((_QWORD *)v25 + 7) = v29;
        v4 = v27;
        *((_QWORD *)v25 + 8) = v28;
        *((_QWORD *)v25 + 9) = v37;
        *((_QWORD *)v25 + 10) = v36;
        *((_QWORD *)v25 + 11) = v35;
        *((_QWORD *)v25 + 12) = v34;
        *((_QWORD *)v25 + 13) = v33;
        *((_QWORD *)v25 + 14) = v32;
        *((_QWORD *)v25 + 15) = v31;
        *((_QWORD *)v25 + 16) = v20;
        *((_QWORD *)v25 + 17) = v21;
        *((_QWORD *)v25 + 18) = v22;
      }
      else
      {
        sub_1004FF038((uint64_t)v39);
        sub_1004FF038((uint64_t)v39);
      }
    }
    v6 += 56;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_100CAFEBC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100CAFEE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1011E5DDC);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10005AEE4;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1011E5DD8 + dword_1011E5DD8))(a1, v4);
}

unint64_t sub_100CAFF50()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E5DE8;
  if (!qword_1011E5DE8)
  {
    v1 = objc_opt_self(UIGraphicsImageRendererFormat);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1011E5DE8);
  }
  return result;
}

id ProgressiveBlur.makeUIView(context:)(double a1, uint64_t a2, char a3)
{
  objc_class *v5;
  _BYTE *v6;
  void *v7;
  void *v8;
  id v9;
  objc_super v11;

  v5 = (objc_class *)type metadata accessor for ProgressiveBlurView();
  v6 = objc_allocWithZone(v5);
  *(double *)&v6[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_blurRadius] = a1;
  v6[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_edge] = a3;
  sub_100CB08B8(a3, 0.0, 0.0, 1.0, 1.0, a1);
  v8 = v7;
  v11.receiver = v6;
  v11.super_class = v5;
  v9 = objc_msgSendSuper2(&v11, "initWithEffect:", v7);

  return v9;
}

id ProgressiveBlurView.__allocating_init(blurRadius:edge:)(char a1, double a2)
{
  objc_class *v2;
  _BYTE *v5;
  void *v6;
  void *v7;
  id v8;
  objc_super v10;

  v5 = objc_allocWithZone(v2);
  *(double *)&v5[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_blurRadius] = a2;
  v5[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_edge] = a1;
  sub_100CB08B8(a1, 0.0, 0.0, 1.0, 1.0, a2);
  v7 = v6;
  v10.receiver = v5;
  v10.super_class = v2;
  v8 = objc_msgSendSuper2(&v10, "initWithEffect:", v6);

  return v8;
}

void ProgressiveBlur.updateUIView(_:context:)(_BYTE *a1, double a2, uint64_t a3, char a4)
{
  uint64_t v5;
  uint64_t v6;
  double v7;
  double v8;
  double v9;
  double v10;
  void *v11;
  id v12;

  v5 = OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_blurRadius;
  *(double *)&a1[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_blurRadius] = a2;
  v6 = OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_edge;
  a1[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_edge] = a4;
  objc_msgSend(a1, "bounds");
  sub_100CB08B8(a1[v6], v7, v8, v9, v10, *(double *)&a1[v5]);
  v12 = v11;
  objc_msgSend(a1, "setEffect:", v11);

}

id sub_100CB0148()
{
  uint64_t v0;
  double v1;
  char v2;
  objc_class *v3;
  _BYTE *v4;
  void *v5;
  void *v6;
  id v7;
  objc_super v9;

  v1 = *(double *)v0;
  v2 = *(_BYTE *)(v0 + 8);
  v3 = (objc_class *)type metadata accessor for ProgressiveBlurView();
  v4 = objc_allocWithZone(v3);
  *(double *)&v4[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_blurRadius] = v1;
  v4[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_edge] = v2;
  sub_100CB08B8(v2, 0.0, 0.0, 1.0, 1.0, v1);
  v6 = v5;
  v9.receiver = v4;
  v9.super_class = v3;
  v7 = objc_msgSendSuper2(&v9, "initWithEffect:", v5);

  return v7;
}

void sub_100CB01EC(uint64_t a1)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 8);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_blurRadius) = *(_QWORD *)v1;
  *(_BYTE *)(a1 + OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_edge) = v2;
  ProgressiveBlurView.updateEffect()();
}

uint64_t sub_100CB022C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100CB0CD4();
  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100CB027C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100CB0CD4();
  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_100CB02CC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100CB0CD4();
  UIViewRepresentable.body.getter(a1, v2);
  __break(1u);
}

void sub_100CB02F0(char a1)
{
  __asm { BR              X10 }
}

double sub_100CB031C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v2;
  uint64_t v4;

  v2 = a2();
  swift_beginAccess(v2, &v4, 0, 0);
  return *(double *)v2;
}

id ProgressiveBlurView.init(blurRadius:edge:)(char a1, double a2)
{
  _BYTE *v2;
  void *v3;
  void *v4;
  id v5;
  objc_super v7;

  *(double *)&v2[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_blurRadius] = a2;
  v2[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_edge] = a1;
  sub_100CB08B8(a1, 0.0, 0.0, 1.0, 1.0, a2);
  v4 = v3;
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ProgressiveBlurView();
  v5 = objc_msgSendSuper2(&v7, "initWithEffect:", v4);

  return v5;
}

uint64_t type metadata accessor for ProgressiveBlurView()
{
  return objc_opt_self(_TtC11MusicCoreUI19ProgressiveBlurView);
}

Swift::Void __swiftcall ProgressiveBlurView.layoutSubviews()()
{
  char *v0;
  double v1;
  double v2;
  double v3;
  double v4;
  void *v5;
  void *v6;
  objc_super v7;

  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for ProgressiveBlurView();
  objc_msgSendSuper2(&v7, "layoutSubviews");
  objc_msgSend(v0, "bounds");
  sub_100CB08B8(v0[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_edge], v1, v2, v3, v4, *(double *)&v0[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_blurRadius]);
  v6 = v5;
  objc_msgSend(v0, "setEffect:", v5);

}

Swift::Void __swiftcall ProgressiveBlurView.updateEffect()()
{
  char *v0;
  double v1;
  double v2;
  double v3;
  double v4;
  void *v5;
  id v6;

  objc_msgSend(v0, "bounds");
  sub_100CB08B8(v0[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_edge], v1, v2, v3, v4, *(double *)&v0[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_blurRadius]);
  v6 = v5;
  objc_msgSend(v0, "setEffect:", v5);

}

void sub_100CB0568(void *a1, char a2, double a3, double a4, double a5, double a6)
{
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  Class isa;
  id v25;

  v12 = objc_msgSend(objc_allocWithZone((Class)CAGradientLayer), "init");
  objc_msgSend(v12, "setBounds:", a3, a4, a5, a6);
  sub_100CB02F0(a2);
  objc_msgSend(v12, "setStartPoint:");
  sub_100CB02F0(a2);
  objc_msgSend(v12, "setEndPoint:");
  v13 = sub_100007E8C(&qword_1011DEF80);
  v14 = swift_allocObject(v13, 96, 7);
  *(_OWORD *)(v14 + 16) = xmmword_100EA7A80;
  v15 = (void *)objc_opt_self(UIColor);
  v16 = objc_msgSend(v15, "whiteColor");
  v17 = objc_msgSend(v16, "colorWithAlphaComponent:", 0.3);

  v18 = objc_msgSend(v17, "CGColor");
  _s3__C7CGColorCMa_1(0);
  v20 = v19;
  *(_QWORD *)(v14 + 56) = v19;
  *(_QWORD *)(v14 + 32) = v18;
  v21 = objc_msgSend(v15, "whiteColor");
  v22 = objc_msgSend(v21, "colorWithAlphaComponent:", 0.0);

  v23 = objc_msgSend(v22, "CGColor");
  *(_QWORD *)(v14 + 88) = v20;
  *(_QWORD *)(v14 + 64) = v23;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v12, "setColors:", isa, swift_bridgeObjectRelease().n128_f64[0]);

  v25 = objc_msgSend(a1, "CGContext");
  objc_msgSend(v12, "renderInContext:", v25);

}

id ProgressiveBlurView.__allocating_init(effect:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), "initWithEffect:", a1);

  return v3;
}

void ProgressiveBlurView.init(effect:)()
{
  _swift_stdlib_reportUnimplementedInitializer("MusicCoreUI.ProgressiveBlurView", 31, "init(effect:)", 13, 0);
  __break(1u);
}

id ProgressiveBlurView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ProgressiveBlurView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_100CB08B8(char a1, double a2, double a3, double a4, double a5, double a6)
{
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  _QWORD v18[6];

  if (!CGRectIsEmpty(*(CGRect *)&a2))
  {
    v12 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRendererFormat), "init");
    objc_msgSend(v12, "setScale:", 1.0);
    objc_msgSend(v12, "setPreferredRange:", 2);
    v13 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithBounds:format:", v12, a2, a3, a4, a5);
    v14 = swift_allocObject(&unk_10110DDC8, 49, 7);
    *(double *)(v14 + 16) = a2;
    *(double *)(v14 + 24) = a3;
    *(double *)(v14 + 32) = a4;
    *(double *)(v14 + 40) = a5;
    *(_BYTE *)(v14 + 48) = a1;
    v15 = swift_allocObject(&unk_10110DDF0, 32, 7);
    *(_QWORD *)(v15 + 16) = sub_100CB0D28;
    *(_QWORD *)(v15 + 24) = v14;
    v18[4] = sub_100229354;
    v18[5] = v15;
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 1107296256;
    v18[2] = sub_10004BF88;
    v18[3] = &unk_10110DE08;
    v16 = _Block_copy(v18);
    swift_retain();
    v17 = objc_msgSend(v13, "imageWithActions:", v16, swift_release().n128_f64[0]);

    _Block_release(v16);
    LOBYTE(v12) = swift_isEscapingClosureAtFileLocation(v15, "", 128, 99, 78, 1);
    swift_release();
    swift_release();
    if ((v12 & 1) != 0)
    {
      __break(1u);
    }
    else if (v17)
    {
      objc_msgSend((id)objc_opt_self(UIBlurEffect), "_effectWithVariableBlurRadius:imageMask:scale:", v17, a6, 1.0);

    }
  }
}

unint64_t sub_100CB0AE4()
{
  unint64_t result;

  result = qword_1011E5E00;
  if (!qword_1011E5E00)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ProgressiveBlur, &type metadata for ProgressiveBlur);
    atomic_store(result, (unint64_t *)&qword_1011E5E00);
  }
  return result;
}

unint64_t sub_100CB0B2C()
{
  unint64_t result;

  result = qword_1011E5E08;
  if (!qword_1011E5E08)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ProgressiveBlurView.Edge, &type metadata for ProgressiveBlurView.Edge);
    atomic_store(result, (unint64_t *)&qword_1011E5E08);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ProgressiveBlur(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = v3 >= 4;
  v5 = v3 - 4;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ProgressiveBlur(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = a2 + 3;
  }
  return result;
}

ValueMetadata *type metadata accessor for ProgressiveBlur()
{
  return &type metadata for ProgressiveBlur;
}

uint64_t storeEnumTagSinglePayload for ProgressiveBlurView.Edge(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_100CB0C54 + 4 * byte_100EF2C79[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_100CB0C88 + 4 * byte_100EF2C74[v4]))();
}

uint64_t sub_100CB0C88(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100CB0C90(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100CB0C98);
  return result;
}

uint64_t sub_100CB0CA4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100CB0CACLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_100CB0CB0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100CB0CB8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ProgressiveBlurView.Edge()
{
  return &type metadata for ProgressiveBlurView.Edge;
}

unint64_t sub_100CB0CD4()
{
  unint64_t result;

  result = qword_1011E5E38;
  if (!qword_1011E5E38)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ProgressiveBlur, &type metadata for ProgressiveBlur);
    atomic_store(result, (unint64_t *)&qword_1011E5E38);
  }
  return result;
}

uint64_t sub_100CB0D18()
{
  uint64_t v0;

  return swift_deallocObject(v0, 49, 7);
}

void sub_100CB0D28(void *a1)
{
  uint64_t v1;

  sub_100CB0568(a1, *(_BYTE *)(v1 + 48), *(double *)(v1 + 16), *(double *)(v1 + 24), *(double *)(v1 + 32), *(double *)(v1 + 40));
}

uint64_t sub_100CB0D38()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100CB0D48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100CB0D58(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

char *QRCodeOverlayViewController.__allocating_init(qrCode:title:subtitle:)(_QWORD *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return QRCodeOverlayViewController.init(qrCode:title:subtitle:)(a1);
}

void sub_100CB0DC0()
{
  qword_10124FF48 = Int.seconds.getter(10);
}

void sub_100CB0DE0()
{
  qword_10124FF50 = Int.seconds.getter(20);
}

void sub_100CB0E00()
{
  qword_10124FF58 = Int.seconds.getter(22);
}

void sub_100CB0E20()
{
  qword_10124FF60 = Int.seconds.getter(350);
}

void sub_100CB0E40()
{
  qword_10124FF68 = Int.seconds.getter(90);
}

void sub_100CB0E60()
{
  qword_10124FF70 = Int.seconds.getter(33);
}

void sub_100CB0E80()
{
  qword_10124FF78 = Int.seconds.getter(4);
}

void sub_100CB0EA0()
{
  qword_10124FF80 = Int.seconds.getter(10);
}

id sub_100CB0EC0()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 18);
  qword_10124FF88 = (uint64_t)result;
  return result;
}

char *QRCodeOverlayViewController.init(qrCode:title:subtitle:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSString v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  __int128 v27;
  char *v28;
  void *v29;
  char *v30;
  id v31;
  NSString v32;
  id v33;
  NSString v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t ObjectType;
  objc_super v41;
  _QWORD v42[5];
  char v43[24];
  uint64_t v44;

  ObjectType = swift_getObjectType();
  v3 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_backgroundView;
  v4 = objc_allocWithZone((Class)UIVisualEffectView);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "init");
  v6 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView;
  type metadata accessor for QRCodeOverlayViewController.ContainerView();
  *(_QWORD *)&v5[v6] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  v7 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_destOutLayer;
  *(_QWORD *)&v5[v7] = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
  v8 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_logoView;
  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v9);

  v11 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v10);
  *(_QWORD *)&v5[v8] = v11;
  v12 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_titleLabel;
  *(_QWORD *)&v5[v12] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v13 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabelEffectView;
  if (qword_1011DE270 != -1)
    swift_once(&qword_1011DE270, sub_100CB0EC0);
  v14 = objc_msgSend((id)objc_opt_self(UIVibrancyEffect), "effectForBlurEffect:", qword_10124FF88);
  v15 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v14);

  *(_QWORD *)&v5[v13] = v15;
  v16 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabel;
  *(_QWORD *)&v5[v16] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  *(_QWORD *)&v5[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeBackgroundView] = 0;
  v17 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollView;
  *(_QWORD *)&v5[v17] = objc_msgSend(objc_allocWithZone((Class)UIScrollView), "init");
  v18 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollContentView;
  *(_QWORD *)&v5[v18] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  *(_QWORD *)&v5[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_brightnessManager] = 0;
  if (a1[4] == 76)
  {
    QRCode.with(errorCorrectionLevel:)(77, (uint64_t)v42);
    v20 = v42[0];
    v19 = v42[1];
    v22 = v42[2];
    v21 = v42[3];
    v23 = v42[4];
    sub_100CB3E34((uint64_t)v42, (uint64_t)v43);
    if (!v44)
    {
      v22 = a1[2];
      v21 = a1[3];
      v20 = *a1;
      v19 = a1[1];
      sub_100C751E0(a1);
      v23 = 76;
    }
    v24 = &v5[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCode];
    *(_QWORD *)v24 = v20;
    *((_QWORD *)v24 + 1) = v19;
    *((_QWORD *)v24 + 2) = v22;
    *((_QWORD *)v24 + 3) = v21;
    *((_QWORD *)v24 + 4) = v23;
  }
  else
  {
    v25 = &v5[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCode];
    v26 = a1[4];
    v27 = *((_OWORD *)a1 + 1);
    *(_OWORD *)v25 = *(_OWORD *)a1;
    *((_OWORD *)v25 + 1) = v27;
    *((_QWORD *)v25 + 4) = v26;
    sub_100C751E0(a1);
  }

  v41.receiver = v5;
  v41.super_class = (Class)type metadata accessor for QRCodeOverlayViewController();
  v28 = (char *)objc_msgSendSuper2(&v41, "initWithNibName:bundle:", 0, 0);
  v29 = *(void **)&v28[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_titleLabel];
  v30 = v28;
  v31 = v29;
  v32 = String._bridgeToObjectiveC()();
  objc_msgSend(v31, "setText:", v32, swift_bridgeObjectRelease().n128_f64[0]);

  v33 = *(id *)&v30[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabel];
  v34 = String._bridgeToObjectiveC()();
  objc_msgSend(v33, "setText:", v34, swift_bridgeObjectRelease().n128_f64[0]);

  v35 = sub_100007E8C(&qword_1011E04A0);
  v36 = swift_allocObject(v35, 48, 7);
  *(_OWORD *)(v36 + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v36 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory(0);
  *(_QWORD *)(v36 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  v37 = v30;
  v38 = UIViewController.registerForTraitChanges<A>(_:handler:)(v36, sub_100CB3DBC, 0, ObjectType);
  sub_100CB3E04(a1);
  swift_unknownObjectRelease(v38);
  swift_bridgeObjectRelease();

  return v37;
}

uint64_t type metadata accessor for QRCodeOverlayViewController.ContainerView()
{
  return objc_opt_self(_TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView);
}

Swift::Void __swiftcall QRCodeOverlayViewController.viewDidLoad()()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  Class isa;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  char *v18;
  uint64_t v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  char *v40;
  objc_super v41;
  UIAction_optional v42;
  UIMenu_optional v43;

  v1 = v0;
  v41.receiver = v0;
  v41.super_class = (Class)type metadata accessor for QRCodeOverlayViewController();
  objc_msgSendSuper2(&v41, "viewDidLoad");
  v2 = objc_msgSend(v0, "view");
  if (!v2)
  {
    __break(1u);
    goto LABEL_8;
  }
  v3 = v2;
  v4 = (void *)objc_opt_self(UIColor);
  v5 = objc_msgSend(v4, "clearColor");
  objc_msgSend(v3, "setBackgroundColor:", v5);

  v6 = objc_msgSend(v1, "navigationItem");
  sub_10004A07C(0, &qword_1011E5EA0, UIBarButtonItem_ptr);
  sub_10004A07C(0, &qword_1011E0668, UIAction_ptr);
  v7 = swift_allocObject(&unk_10110DF28, 24, 7);
  swift_unknownObjectWeakInit(v7 + 16);
  v42.value.super.super.isa = (Class)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100CB3EA0, v7);
  v42.is_nil = 0;
  isa = UIBarButtonItem.init(systemItem:primaryAction:menu:)(UIBarButtonSystemItemDone, v42, v43).super.super.isa;
  objc_msgSend(v6, "setLeftBarButtonItem:", isa);

  v9 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v1, "dismissAnimated");
  v10 = objc_msgSend(v1, "view");
  if (!v10)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v11 = v10;
  v39 = v9;
  objc_msgSend(v10, "addGestureRecognizer:", v9);

  v12 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView;
  v13 = *(char **)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView];
  v40 = &v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCode];
  v14 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCode + 24];
  v15 = OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_image;
  v16 = *(void **)&v13[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_image];
  *(_QWORD *)&v13[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_image] = v14;
  v17 = v14;
  v18 = v13;

  objc_msgSend(*(id *)&v18[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_imageView], "setImage:", *(_QWORD *)&v13[v15]);
  v38 = v12;
  objc_msgSend(*(id *)&v1[v12], "setAlpha:", 0.0);
  v37 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_logoView;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_logoView], "setContentMode:", 1);
  v19 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_titleLabel;
  v20 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_titleLabel];
  sub_10004A07C(0, (unint64_t *)&qword_1011DE3F8, UIFont_ptr);
  v21 = v20;
  v22 = (void *)static UIFont.preferredFont(forTextStyle:weight:)(UIFontTextStyleBody, UIFontWeightBold);
  objc_msgSend(v21, "setFont:", v22);

  v23 = *(id *)&v1[v19];
  v24 = objc_msgSend(v4, "whiteColor");
  objc_msgSend(v23, "setTextColor:", v24);

  objc_msgSend(*(id *)&v1[v19], "setTextAlignment:", 1);
  objc_msgSend(*(id *)&v1[v19], "setNumberOfLines:", 0);
  objc_msgSend(*(id *)&v1[v19], "setAlpha:", 0.0);
  objc_msgSend(*(id *)&v1[v19], "setAdjustsFontForContentSizeCategory:", 1);
  v25 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabel;
  v26 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabel];
  v27 = (void *)objc_opt_self(UIFont);
  v28 = v26;
  v29 = objc_msgSend(v27, "preferredFontForTextStyle:", UIFontTextStyleBody);
  objc_msgSend(v28, "setFont:", v29);

  objc_msgSend(*(id *)&v1[v25], "setTextAlignment:", 1);
  objc_msgSend(*(id *)&v1[v25], "setNumberOfLines:", 0);
  objc_msgSend(*(id *)&v1[v25], "setAlpha:", 0.0);
  objc_msgSend(*(id *)&v1[v25], "setAdjustsFontForContentSizeCategory:", 1);
  v30 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_destOutLayer;
  v31 = *(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_destOutLayer];
  v32 = objc_msgSend(v4, "blackColor");
  v33 = objc_msgSend(v32, "CGColor");

  objc_msgSend(v31, "setFillColor:", v33);
  objc_msgSend(*(id *)&v1[v30], "setFillRule:", kCAFillRuleNonZero);
  objc_msgSend(*(id *)&v1[v30], "setCompositingFilter:", kCAFilterDestOut);
  if (*((_QWORD *)v40 + 4) != 76)
  {
    v34 = objc_msgSend(*(id *)&v1[v38], "layer");
    objc_msgSend(v34, "addSublayer:", *(_QWORD *)&v1[v30]);

    objc_msgSend(*(id *)&v1[v38], "addSubview:", *(_QWORD *)&v1[v37]);
  }
  v35 = objc_msgSend(v1, "view");
  if (v35)
  {
    v36 = v35;
    objc_msgSend(v35, "addSubview:", *(_QWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_backgroundView]);

    return;
  }
LABEL_9:
  __break(1u);
}

void sub_100CB1908(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    QRCodeOverlayViewController.dismissAnimated()();

  }
}

Swift::Void __swiftcall QRCodeOverlayViewController.viewIsAppearing(_:)(Swift::Bool a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  char *v5;
  objc_class *v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  char *v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  id v32;
  char *v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  objc_super v38;

  v2 = v1;
  sub_100007E8C(&qword_1011E6620);
  __chkstk_darwin();
  v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (objc_class *)type metadata accessor for QRCodeOverlayViewController();
  v38.receiver = v2;
  v38.super_class = v6;
  objc_msgSendSuper2(&v38, "viewIsAppearing:", a1);
  v7 = objc_msgSend(v2, "traitCollection");
  v8 = objc_msgSend(v7, "userInterfaceIdiom");

  if (v8 != (id)3)
  {
    v20 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
    v21 = (void *)objc_opt_self(UIColor);
    v22 = objc_msgSend(v21, "whiteColor");
    objc_msgSend(v20, "setBackgroundColor:", v22);

    static UIView.Corner.value(_:continuous:)(1, 12.0);
    v23 = type metadata accessor for UIView.Corner(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v5, 0, 1, v23);
    UIView.corner.setter(v5);
    objc_msgSend(v20, "setClipsToBounds:", 1);
    objc_msgSend(v20, "setAlpha:", 0.0);
    v24 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView;
    objc_msgSend(v20, "addSubview:", *(_QWORD *)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView]);
    v25 = *(void **)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeBackgroundView];
    *(_QWORD *)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeBackgroundView] = v20;
    v26 = v20;

    v27 = objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_backgroundView], "contentView");
    v28 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollView;
    objc_msgSend(v27, "addSubview:", *(_QWORD *)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollView]);

    v29 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollContentView;
    objc_msgSend(*(id *)&v2[v28], "addSubview:", *(_QWORD *)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollContentView]);
    objc_msgSend(*(id *)&v2[v29], "addSubview:", v26);
    objc_msgSend(*(id *)&v2[v29], "addSubview:", *(_QWORD *)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_titleLabel]);
    v30 = *(void **)&v2[v29];
    v31 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabelEffectView;
    objc_msgSend(v30, "addSubview:", *(_QWORD *)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabelEffectView]);
    v32 = objc_msgSend(*(id *)&v2[v31], "contentView");
    objc_msgSend(v32, "addSubview:", *(_QWORD *)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabel]);

    v33 = (char *)*(id *)&v2[v24];
    v34 = objc_msgSend(v21, "blackColor");
    v35 = *(void **)&v33[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayColor];
    *(_QWORD *)&v33[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayColor] = v34;
    v36 = v34;

    sub_100CB3804();
    v37 = *(id *)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_logoView];
    v19 = objc_msgSend(v21, "blackColor");
    objc_msgSend(v37, "setTintColor:", v19);

    goto LABEL_5;
  }
  v9 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView;
  v10 = *(void **)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView];
  v11 = (void *)objc_opt_self(UIColor);
  v12 = v10;
  v13 = objc_msgSend(v11, "whiteColor");
  v14 = *(void **)&v12[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayColor];
  *(_QWORD *)&v12[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayColor] = v13;
  v15 = v13;

  sub_100CB3804();
  v16 = *(id *)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_logoView];
  v17 = objc_msgSend(v11, "whiteColor");
  objc_msgSend(v16, "setTintColor:", v17);

  v18 = objc_msgSend(v2, "view");
  if (v18)
  {
    v19 = v18;
    objc_msgSend(v18, "addSubview:", *(_QWORD *)&v2[v9]);
LABEL_5:

    return;
  }
  __break(1u);
}

Swift::Void __swiftcall QRCodeOverlayViewController.viewDidAppear(_:)(Swift::Bool a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  char *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  _QWORD v15[6];
  objc_super v16;

  v2 = v1;
  v16.receiver = v2;
  v16.super_class = (Class)type metadata accessor for QRCodeOverlayViewController();
  objc_msgSendSuper2(&v16, "viewDidAppear:", a1);
  v4 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_brightnessManager;
  if (*(_QWORD *)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_brightnessManager])
  {
LABEL_2:
    v5 = (void *)objc_opt_self(UIView);
    v6 = swift_allocObject(&unk_10110DF50, 24, 7);
    *(_QWORD *)(v6 + 16) = v2;
    v15[4] = sub_100CB3EA8;
    v15[5] = v6;
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 1107296256;
    v15[2] = sub_1001DBD98;
    v15[3] = &unk_10110DF68;
    v7 = _Block_copy(v15);
    v8 = v2;
    swift_release();
    objc_msgSend(v5, "animateWithDuration:animations:", v7, 0.25);
    _Block_release(v7);
    return;
  }
  v9 = objc_msgSend(v2, "view");
  if (v9)
  {
    v10 = v9;
    v11 = objc_msgSend(v9, "window");

    if (v11)
    {
      v12 = objc_msgSend(v11, "windowScene");

      if (v12)
      {
        v13 = type metadata accessor for BrightnessManager();
        swift_allocObject(v13, 64, 7);
        v14 = v12;
        *(_QWORD *)&v2[v4] = BrightnessManager.init(windowScene:)(v14);

        swift_release();
      }
    }
    goto LABEL_2;
  }
  __break(1u);
}

double sub_100CB1F7C(uint64_t a1)
{
  uint64_t v2;
  id v3;
  double result;

  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView), "setAlpha:", 1.0);
  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeBackgroundView), "setAlpha:", 1.0);
  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_titleLabel), "setAlpha:", 1.0);
  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabel), "setAlpha:", 1.0);
  v2 = qword_1011DE270;
  v3 = *(id *)(a1 + OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_backgroundView);
  if (v2 != -1)
    swift_once(&qword_1011DE270, sub_100CB0EC0);
  objc_msgSend(v3, "setEffect:", qword_10124FF88);

  if (*(_QWORD *)(a1 + OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_brightnessManager))
  {
    swift_retain();
    BrightnessManager.increaseBrightnessIfNeeded()();
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

Swift::Void __swiftcall QRCodeOverlayViewController.viewDidLayoutSubviews()()
{
  char *v0;
  char *v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  __int128 v16;
  double v17;
  double Width;
  double Height;
  double v20;
  double v21;
  id v22;
  double v23;
  id v24;
  id v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  __int128 v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  id v45;
  double v46;
  double v47;
  double v48;
  id v49;
  void *v50;
  double v51;
  double v52;
  id v53;
  void *v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  uint64_t v63;
  double v64;
  double v65;
  double v66;
  uint64_t v67;
  double v68;
  double v69;
  double v70;
  double v71;
  double v72;
  double v73;
  double v74;
  double v75;
  uint64_t v76;
  double v77;
  void *v78;
  id v79;
  id v80;
  uint64_t v81;
  double v82;
  double v83;
  double v84;
  double v85;
  double v86;
  double v87;
  double v88;
  double v89;
  uint64_t v90;
  CGFloat v91;
  double v92;
  double v93;
  double v94;
  CGFloat v95;
  double v96;
  double v97;
  uint64_t v98;
  void *v99;
  void *v100;
  id v101;
  id v102;
  double v103;
  double v104;
  double v105;
  double v106;
  double v107;
  double v108;
  double v109;
  void *v110;
  double v111;
  void *v112;
  id v113;
  double v114;
  double v115;
  double v116;
  double v117;
  double v118;
  double v119;
  double v120;
  double v121;
  id v122;
  double v123;
  double v124;
  id v125;
  double MinY;
  id v127;
  double v128;
  double v129;
  double v130;
  double v131;
  double v132;
  double v133;
  double v134;
  CGFloat v135;
  CGFloat v136;
  uint64_t v137;
  id v138;
  double v139;
  id v140;
  double v141;
  double v142;
  double v143;
  double v144;
  double v145;
  double v146;
  double v147;
  void *v148;
  id v149;
  id v150;
  void *v151;
  double v152;
  double v153;
  double v154;
  double v155;
  double v156;
  double v157;
  double v158;
  double v159;
  char *v160;
  uint64_t v161;
  double v162;
  id v163;
  double v164;
  double v165;
  double v166;
  double v167;
  double v168;
  double v169;
  double v170;
  uint64_t v171;
  CGFloat b;
  CGFloat a;
  CGFloat c;
  CGFloat d;
  CGFloat ty;
  CGFloat tx;
  __int128 v178;
  uint64_t v179;
  uint64_t inited;
  void *v181;
  double v182;
  CGFloat v183;
  double v184;
  CGFloat v185;
  double v186;
  CGFloat v187;
  double v188;
  CGFloat v189;
  CGFloat v190;
  CGFloat v191;
  CGFloat v192;
  CGFloat v193;
  CGMutablePathRef v194;
  uint64_t v195;
  void *v196;
  void *v197;
  id v198;
  double v199;
  double v200;
  double v201;
  double v202;
  double v203;
  double v204;
  CGRect recta;
  CGAffineTransform v206;
  objc_super v207;
  _OWORD v208[2];
  uint64_t v209;
  __int128 v210;
  __int128 v211;
  uint64_t v212;
  CGPoint v213;
  CGPoint v214;
  CGPoint v215;
  CGPoint v216;
  CGPoint v217;
  CGPoint v218;
  CGPoint v219;
  CGPoint v220;
  CGPoint v221;
  CGPoint v222;
  CGPoint v223;
  CGPoint v224;
  CGRect v225;
  CGRect v226;
  CGRect v227;
  CGRect v228;
  CGRect v229;
  CGRect v230;
  CGRect v231;
  CGRect v232;
  CGRect v233;
  CGRect v234;

  v1 = v0;
  v207.receiver = v0;
  v207.super_class = (Class)type metadata accessor for QRCodeOverlayViewController();
  objc_msgSendSuper2(&v207, "viewDidLayoutSubviews");
  v2 = objc_msgSend(v0, "traitCollection");
  v3 = objc_msgSend(v2, "userInterfaceIdiom");

  v4 = objc_msgSend(v1, "view");
  v5 = v4;
  if (v3 == (id)3)
  {
    if (!v4)
    {
LABEL_52:
      __break(1u);
      goto LABEL_53;
    }
    v6 = objc_msgSend(v4, "safeAreaLayoutGuide");

    objc_msgSend(v6, "layoutFrame");
    v8 = v7;
    v10 = v9;
    v12 = v11;
    v14 = v13;

    if (qword_1011DE230 != -1)
      swift_once(&qword_1011DE230, sub_100CB0DC0);
    v15 = *(double *)&qword_10124FF48;
    v16 = *(_OWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCode + 16];
    v210 = *(_OWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCode];
    v211 = v16;
    v212 = *(_QWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCode + 32];
    sub_100C751E0(&v210);
    if (qword_1011DE248 != -1)
      swift_once(&qword_1011DE248, sub_100CB0E20);
    v17 = *(double *)&qword_10124FF60;
    v225.origin.x = v8;
    v225.origin.y = v10;
    v225.size.width = v12;
    v225.size.height = v14;
    Width = CGRectGetWidth(v225);
    v226.origin.x = v8;
    v226.origin.y = v10;
    v226.size.width = v12;
    v226.size.height = v14;
    Height = CGRectGetHeight(v226);
    if (Height >= Width)
      Height = Width;
    v20 = Height - (v15 + v15);
    if (v20 >= v17)
      v21 = v17;
    else
      v21 = v20;
    v22 = objc_msgSend(v1, "traitCollection");
    objc_msgSend(v22, "displayScale");

    v23 = QRCode.dotAdjustedWidth(with:scale:)(v21);
    sub_100CB3E04(&v210);
    v24 = *(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView];
    v25 = objc_msgSend(v1, "traitCollection");
    objc_msgSend(v25, "displayScale");
    v27 = v26;

    v28 = CGRect.centeringAlong(axes:bounds:scale:)(3, v8, v10, v12, v14, v27, 0.0, 0.0, v23, v23);
  }
  else
  {
    if (!v4)
    {
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
      goto LABEL_55;
    }
    objc_msgSend(v4, "bounds");
    v30 = v29;
    v32 = v31;
    v34 = v33;
    v36 = v35;

    if (qword_1011DE238 != -1)
      swift_once(&qword_1011DE238, sub_100CB0DE0);
    v37 = *(double *)&qword_10124FF50;
    if (qword_1011DE240 != -1)
      swift_once(&qword_1011DE240, sub_100CB0E00);
    v38 = v37 + *(double *)&qword_10124FF58;
    v39 = *(_OWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCode + 16];
    v210 = *(_OWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCode];
    v211 = v39;
    v212 = *(_QWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCode + 32];
    sub_100C751E0(&v210);
    if (qword_1011DE248 != -1)
      swift_once(&qword_1011DE248, sub_100CB0E20);
    v40 = *(double *)&qword_10124FF60;
    v227.origin.x = v30;
    v227.origin.y = v32;
    v227.size.width = v34;
    v227.size.height = v36;
    v41 = CGRectGetWidth(v227);
    v228.origin.x = v30;
    v228.origin.y = v32;
    v228.size.width = v34;
    v228.size.height = v36;
    v42 = CGRectGetHeight(v228);
    if (v42 >= v41)
      v42 = v41;
    v43 = v42 - (v38 + v38);
    if (v43 >= v40)
      v44 = v40;
    else
      v44 = v43;
    v45 = objc_msgSend(v1, "traitCollection");
    objc_msgSend(v45, "displayScale");

    v46 = QRCode.dotAdjustedWidth(with:scale:)(v44);
    sub_100CB3E04(&v210);
    v47 = *(double *)&qword_10124FF58;
    v229.origin.x = v30;
    v229.origin.y = v32;
    v229.size.width = v34;
    v229.size.height = v36;
    v48 = CGRectGetWidth(v229);
    v49 = objc_msgSend(v1, "view");
    if (!v49)
      goto LABEL_54;
    v50 = v49;
    objc_msgSend(v49, "safeAreaInsets");
    v52 = v51;

    v53 = objc_msgSend(v1, "view");
    if (!v53)
    {
LABEL_55:
      __break(1u);
      return;
    }
    v54 = v53;
    v204 = v46;
    v55 = v46 + v47 + v47;
    objc_msgSend(v53, "safeAreaInsets");

    v56 = sub_10004D6A0(v30, v32, v34, v36, v52, (v48 - v55) * 0.5);
    v58 = v57;
    v60 = v59;
    v62 = v61;
    v63 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_titleLabel;
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_titleLabel], "sizeThatFits:", v59, v61);
    v200 = v64;
    v66 = v65;
    v67 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabel;
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabel], "sizeThatFits:", v60, v62);
    v203 = v68;
    v70 = v69;
    if (qword_1011DE258 != -1)
      swift_once(&qword_1011DE258, sub_100CB0E60);
    v201 = v66;
    v71 = v66 + v55 + *(double *)&qword_10124FF70;
    if (qword_1011DE260 != -1)
      swift_once(&qword_1011DE260, sub_100CB0E80);
    v202 = v70;
    v72 = v70 + v71 + *(double *)&qword_10124FF78;
    if (qword_1011DE268 != -1)
      swift_once(&qword_1011DE268, sub_100CB0EA0);
    v73 = *(double *)&qword_10124FF80;
    v74 = v72 + v73 + v73;
    v230.origin.x = v56;
    v230.origin.y = v58;
    v230.size.width = v60;
    v230.size.height = v62;
    v75 = CGRectGetWidth(v230);
    v76 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollView;
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollView], "setFrame:", v56, v58, v60, v62);
    objc_msgSend(*(id *)&v1[v76], "setContentSize:", v75, v74);
    v231.origin.x = v56;
    v231.origin.y = v58;
    v231.size.width = v60;
    v231.size.height = v62;
    v77 = CGRectGetHeight(v231);
    v78 = *(void **)&v1[v76];
    v79 = *(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollContentView];
    v80 = v78;
    if (v77 >= v74)
    {
      v82 = 0.0;
      v81 = 3;
    }
    else
    {
      v81 = 1;
      v82 = v73;
    }
    v83 = CGRect.centeringAlong(axes:in:)(v81, 0.0, v82, v75, v74);
    v85 = v84;
    v87 = v86;
    v89 = v88;

    objc_msgSend(v79, "setFrame:", v83, v85, v87, v89);
    v90 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollContentView;
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollContentView], "bounds");
    recta.origin.x = v91;
    v93 = v92;
    v95 = v94;
    v97 = v96;
    v98 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeBackgroundView;
    v99 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeBackgroundView];
    if (v99)
    {
      v100 = *(void **)&v1[v90];
      v101 = v99;
      v102 = v100;
      v103 = CGRect.centeringAlong(axes:in:)(1, 0.0, 0.0, v55, v55);
      v105 = v104;
      v107 = v106;
      v109 = v108;

      objc_msgSend(v101, "setFrame:", v103, v105, v107, v109);
      v110 = *(void **)&v1[v98];
    }
    else
    {
      v110 = 0;
    }
    v111 = v93 + v55 + *(double *)&qword_10124FF70;
    v112 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView];
    v199 = v97 - (v55 + *(double *)&qword_10124FF70);
    v113 = v112;
    if (v110)
    {
      objc_msgSend(v110, "bounds");
      v115 = v114;
      v117 = v116;
      v119 = v118;
      v121 = v120;
    }
    else
    {
      v119 = 0.0;
      v121 = 0.0;
      v115 = 0.0;
      v117 = 0.0;
    }
    v122 = objc_msgSend(v1, "traitCollection");
    objc_msgSend(v122, "displayScale");
    v124 = v123;

    objc_msgSend(v112, "setFrame:", CGRect.centeringAlong(axes:bounds:scale:)(3, v115, v117, v119, v121, v124, 0.0, 0.0, v204, v204));
    v125 = *(id *)&v1[v63];
    v232.origin.x = recta.origin.x;
    v232.origin.y = v111;
    v232.size.width = v95;
    v232.size.height = v199;
    MinY = CGRectGetMinY(v232);
    v127 = *(id *)&v1[v90];
    v128 = CGRect.centeringAlong(axes:in:)(1, 0.0, MinY, v200, v201);
    v130 = v129;
    v132 = v131;
    v134 = v133;

    objc_msgSend(v125, "setFrame:", v128, v130, v132, v134);
    v135 = v199 - (v201 + *(double *)&qword_10124FF78);
    v136 = v111 + v201 + *(double *)&qword_10124FF78;
    v137 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabelEffectView;
    v138 = *(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabelEffectView];
    v233.origin.x = recta.origin.x;
    v233.origin.y = v136;
    v233.size.width = v95;
    v233.size.height = v135;
    v139 = CGRectGetMinY(v233);
    v140 = *(id *)&v1[v90];
    v141 = CGRect.centeringAlong(axes:in:)(1, 0.0, v139, v203, v202);
    v143 = v142;
    v145 = v144;
    v147 = v146;

    objc_msgSend(v138, "setFrame:", v141, v143, v145, v147);
    v148 = *(void **)&v1[v137];
    v24 = *(id *)&v1[v67];
    objc_msgSend(v148, "bounds");
  }
  objc_msgSend(v24, "setFrame:", v28);

  v149 = *(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_backgroundView];
  v150 = objc_msgSend(v1, "view");
  if (!v150)
  {
    __break(1u);
    goto LABEL_52;
  }
  v151 = v150;
  objc_msgSend(v150, "bounds");
  v153 = v152;
  v155 = v154;
  v157 = v156;
  v159 = v158;

  objc_msgSend(v149, "setFrame:", v153, v155, v157, v159);
  v160 = &v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCode];
  if (*(_QWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCode + 32] != 76)
  {
    v161 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView;
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView], "frame");
    v162 = CGRectGetWidth(v234) * 0.3;
    if (qword_1011DE250 != -1)
      swift_once(&qword_1011DE250, sub_100CB0E40);
    if (*(double *)&qword_10124FF68 < v162)
      v162 = *(double *)&qword_10124FF68;
    v163 = *(id *)&v1[v161];
    v164 = CGRect.centeringAlong(axes:in:)(3, 0.0, 0.0, v162, v162);
    v166 = v165;
    v168 = v167;
    v170 = v169;

    v171 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_logoView;
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_logoView], "setFrame:", v164, v166, v168, v170);
    CGAffineTransformMakeScale(&v206, v162 / *(double *)&qword_10124FF68, v162 / *(double *)&qword_10124FF68);
    a = v206.a;
    b = v206.b;
    c = v206.c;
    d = v206.d;
    tx = v206.tx;
    ty = v206.ty;
    v178 = *((_OWORD *)v160 + 1);
    v208[0] = *(_OWORD *)v160;
    v208[1] = v178;
    v209 = *((_QWORD *)v160 + 4);
    v179 = sub_100007E8C(&qword_1011E5EC0);
    inited = swift_initStackObject(v179, &recta.origin.y);
    *(_OWORD *)(inited + 16) = xmmword_100EB91C0;
    v206.a = a;
    v206.b = b;
    v206.c = c;
    v206.d = d;
    v206.tx = tx;
    v206.ty = ty;
    v213.x = 12.0;
    v213.y = 15.0;
    *(CGPoint *)(inited + 32) = CGPointApplyAffineTransform(v213, &v206);
    v206.a = a;
    v206.b = b;
    v206.c = c;
    v206.d = d;
    v206.tx = tx;
    v206.ty = ty;
    v214.x = 12.0;
    v214.y = 6.0;
    *(CGPoint *)(inited + 48) = CGPointApplyAffineTransform(v214, &v206);
    v206.a = a;
    v206.b = b;
    v206.c = c;
    v206.d = d;
    v206.tx = tx;
    v206.ty = ty;
    v215.y = 6.0;
    v215.x = 36.0;
    *(CGPoint *)(inited + 64) = CGPointApplyAffineTransform(v215, &v206);
    v206.a = a;
    v206.b = b;
    v206.c = c;
    v206.d = d;
    v206.tx = tx;
    v206.ty = ty;
    v216.y = 0.0;
    v216.x = 36.0;
    *(CGPoint *)(inited + 80) = CGPointApplyAffineTransform(v216, &v206);
    v206.a = a;
    v206.b = b;
    v206.c = c;
    v206.d = d;
    v206.tx = tx;
    v206.ty = ty;
    v217.y = 0.0;
    v217.x = 85.0;
    *(CGPoint *)(inited + 96) = CGPointApplyAffineTransform(v217, &v206);
    v206.a = a;
    v206.b = b;
    v206.c = c;
    v206.d = d;
    v206.tx = tx;
    v206.ty = ty;
    v218.x = 85.0;
    v218.y = 90.0;
    *(CGPoint *)(inited + 112) = CGPointApplyAffineTransform(v218, &v206);
    v206.a = a;
    v206.b = b;
    v206.c = c;
    v206.d = d;
    v206.tx = tx;
    v206.ty = ty;
    v219.x = 36.0;
    v219.y = 90.0;
    *(CGPoint *)(inited + 128) = CGPointApplyAffineTransform(v219, &v206);
    v206.a = a;
    v206.b = b;
    v206.c = c;
    v206.d = d;
    v206.tx = tx;
    v206.ty = ty;
    v220.x = 36.0;
    v220.y = 95.0;
    *(CGPoint *)(inited + 144) = CGPointApplyAffineTransform(v220, &v206);
    v206.a = a;
    v206.b = b;
    v206.c = c;
    v206.d = d;
    v206.tx = tx;
    v206.ty = ty;
    v221.x = 0.0;
    v221.y = 95.0;
    *(CGPoint *)(inited + 160) = CGPointApplyAffineTransform(v221, &v206);
    v206.a = a;
    v206.b = b;
    v206.c = c;
    v206.d = d;
    v206.tx = tx;
    v206.ty = ty;
    v222.x = 0.0;
    v222.y = 57.0;
    *(CGPoint *)(inited + 176) = CGPointApplyAffineTransform(v222, &v206);
    v206.a = a;
    v206.b = b;
    v206.c = c;
    v206.d = d;
    v206.tx = tx;
    v206.ty = ty;
    v223.x = 12.0;
    v223.y = 57.0;
    *(CGPoint *)(inited + 192) = CGPointApplyAffineTransform(v223, &v206);
    v206.a = a;
    v206.b = b;
    v206.c = c;
    v206.d = d;
    v206.tx = tx;
    v206.ty = ty;
    v224.x = 12.0;
    v224.y = 15.0;
    *(CGPoint *)(inited + 208) = CGPointApplyAffineTransform(v224, &v206);
    v181 = *(void **)&v1[v171];
    sub_100C751E0(v208);
    objc_msgSend(v181, "frame");
    v183 = v182;
    v185 = v184;
    v187 = v186;
    v189 = v188;
    objc_msgSend(*(id *)&v1[v161], "bounds");
    v194 = QRCode.dotAlignedPath(with:in:imageBounds:)(inited, v183, v185, v187, v189, v190, v191, v192, v193);
    swift_setDeallocating(inited);
    sub_100CB3E04(v208);
    v195 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_destOutLayer;
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_destOutLayer], "setPath:", v194);
    v196 = *(void **)&v1[v195];
    v197 = *(void **)&v1[v161];
    v198 = v196;
    objc_msgSend(v197, "bounds");
    objc_msgSend(v198, "setFrame:");

  }
}

Swift::Void __swiftcall QRCodeOverlayViewController.dismissAnimated()()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  void **v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;

  v1 = (void *)objc_opt_self(UIView);
  v2 = swift_allocObject(&unk_10110DFA0, 24, 7);
  *(_QWORD *)(v2 + 16) = v0;
  v12 = sub_100CB3EC8;
  v13 = v2;
  v8 = _NSConcreteStackBlock;
  v9 = 1107296256;
  v10 = sub_1001DBD98;
  v11 = &unk_10110DFB8;
  v3 = _Block_copy(&v8);
  v4 = v0;
  swift_release();
  v5 = swift_allocObject(&unk_10110DFF0, 24, 7);
  *(_QWORD *)(v5 + 16) = v4;
  v12 = sub_100CB3EF4;
  v13 = v5;
  v8 = _NSConcreteStackBlock;
  v9 = 1107296256;
  v10 = sub_10012F6FC;
  v11 = &unk_10110E008;
  v6 = _Block_copy(&v8);
  v7 = v4;
  swift_release();
  objc_msgSend(v1, "animateWithDuration:animations:completion:", v3, v6, 0.25);
  _Block_release(v6);
  _Block_release(v3);
}

double sub_100CB3020(uint64_t a1)
{
  double result;

  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView), "setAlpha:", 0.0);
  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeBackgroundView), "setAlpha:", 0.0);
  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_titleLabel), "setAlpha:", 0.0);
  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabel), "setAlpha:", 0.0);
  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_backgroundView), "setEffect:", 0);
  if (*(_QWORD *)(a1 + OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_brightnessManager))
  {
    swift_retain();
    BrightnessManager.resetBrightnessToSystemDefault()();
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

void QRCodeOverlayViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer("MusicCoreUI.QRCodeOverlayViewController", 39, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

id QRCodeOverlayViewController.__deallocating_deinit()
{
  return sub_1001EB7B8(type metadata accessor for QRCodeOverlayViewController);
}

char *sub_100CB3268(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  uint64_t v10;
  id v11;
  char *v12;
  id v13;
  id v14;
  uint64_t v15;
  objc_class *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  Class isa;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  _QWORD v43[4];
  objc_super v44;

  v5 = v4;
  *(_QWORD *)&v4[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_image] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayColor] = 0;
  v10 = OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_imageView;
  v11 = objc_allocWithZone((Class)UIImageView);
  v12 = v5;
  v13 = objc_msgSend(v11, "init");
  v14 = UIView.forAutolayout.getter();

  *(_QWORD *)&v5[v10] = v14;
  v15 = OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayLayer;
  *(_QWORD *)&v12[v15] = objc_msgSend(objc_allocWithZone((Class)CALayer), "init");

  v16 = (objc_class *)type metadata accessor for QRCodeOverlayViewController.ContainerView();
  v44.receiver = v12;
  v44.super_class = v16;
  v17 = (char *)objc_msgSendSuper2(&v44, "initWithFrame:", a1, a2, a3, a4);
  v18 = OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_imageView;
  v19 = *(_QWORD *)&v17[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_imageView];
  v20 = v17;
  objc_msgSend(v20, "addSubview:", v19);
  v21 = (void *)objc_opt_self(NSLayoutConstraint);
  v22 = sub_100007E8C(&qword_1011DF520);
  v23 = swift_allocObject(v22, 64, 7);
  *(_OWORD *)(v23 + 16) = xmmword_100EA7AB0;
  v24 = objc_msgSend(*(id *)&v17[v18], "leadingAnchor");
  v25 = objc_msgSend(v20, "leadingAnchor");
  v26 = objc_msgSend(v24, "constraintEqualToAnchor:", v25);

  *(_QWORD *)(v23 + 32) = v26;
  v27 = objc_msgSend(*(id *)&v17[v18], "trailingAnchor");
  v28 = objc_msgSend(v20, "trailingAnchor");
  v29 = objc_msgSend(v27, "constraintEqualToAnchor:", v28);

  *(_QWORD *)(v23 + 40) = v29;
  v30 = objc_msgSend(*(id *)&v17[v18], "topAnchor");
  v31 = objc_msgSend(v20, "topAnchor");
  v32 = objc_msgSend(v30, "constraintEqualToAnchor:", v31);

  *(_QWORD *)(v23 + 48) = v32;
  v33 = objc_msgSend(*(id *)&v17[v18], "bottomAnchor");
  v34 = objc_msgSend(v20, "bottomAnchor");
  v35 = objc_msgSend(v33, "constraintEqualToAnchor:", v34);

  *(_QWORD *)(v23 + 56) = v35;
  specialized Array._endMutation()(v36);
  sub_10004A07C(0, &qword_1011E01E8, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v21, "activateConstraints:", isa, swift_bridgeObjectRelease().n128_f64[0], v23);

  sub_10004A07C(0, &qword_1011DEF38, UITraitCollection_ptr);
  v38 = v20;
  v39 = static UITraitCollection.systemTraitsAffectingColorAppearance.getter();
  v43[3] = v16;
  v43[0] = v38;
  v40 = v38;
  v41 = UIView.registerForTraitChanges(_:target:action:)(v39, v43, "updateColor");
  swift_unknownObjectRelease(v41);
  swift_bridgeObjectRelease();

  _s5Music18DragDropToPlaylistV6OriginVwxx_0(v43);
  return v40;
}

Swift::Void __swiftcall QRCodeOverlayViewController.ContainerView.layoutSubviews()()
{
  void *v0;
  id v1;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for QRCodeOverlayViewController.ContainerView();
  objc_msgSendSuper2(&v2, "layoutSubviews");
  sub_10004A07C(0, &qword_1011E5EC8, CATransaction_ptr);
  *(_QWORD *)(swift_allocObject(&unk_10110E040, 24, 7) + 16) = v0;
  v1 = v0;
  static CATransaction.performWithoutAnimation(_:)((void (*)(id))sub_100CB3F0C);
  swift_release();
}

void sub_100CB36F4(uint64_t a1)
{
  void *v1;
  id v2;

  v1 = *(void **)(a1 + OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_imageView);
  v2 = *(id *)(a1 + OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayLayer);
  objc_msgSend(v1, "bounds");
  objc_msgSend(v2, "setFrame:");

}

void sub_100CB3804()
{
  char *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;

  v1 = *(void **)&v0[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayColor];
  if (v1)
  {
    v2 = OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayLayer;
    v3 = *(void **)&v0[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayLayer];
    v4 = kCAFilterSourceIn;
    v12 = v1;
    objc_msgSend(v3, "setCompositingFilter:", v4);
    v5 = *(id *)&v0[v2];
    v6 = objc_msgSend(v0, "traitCollection");
    v7 = objc_msgSend(v12, "resolvedColorWithTraitCollection:", v6);

    v8 = objc_msgSend(v7, "CGColor");
    objc_msgSend(v5, "setBackgroundColor:", v8);

    v9 = objc_msgSend(*(id *)&v0[v2], "superlayer");
    if (!v9)
    {
      v10 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_imageView], "layer");
      v11 = *(id *)&v0[v2];
      objc_msgSend(v10, "addSublayer:", v11);

    }
  }
  else
  {
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayLayer], "removeFromSuperlayer");
  }
}

id QRCodeOverlayViewController.ContainerView.__deallocating_deinit()
{
  return sub_1001EB7B8(type metadata accessor for QRCodeOverlayViewController.ContainerView);
}

uint64_t QRCodeOverlayViewController.ImageViewRepresentable.init(image:)()
{
  return swift_getKeyPath(&unk_100EF2E10);
}

char *QRCodeOverlayViewController.ImageViewRepresentable.makeUIView(context:)(uint64_t a1, uint64_t a2, char a3, void *a4)
{
  char *v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  __n128 v12;
  void *v13;
  void *v14;
  id v15;

  type metadata accessor for QRCodeOverlayViewController.ContainerView();
  v7 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  v8 = OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_image;
  v9 = *(void **)&v7[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_image];
  *(_QWORD *)&v7[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_image] = a4;
  v10 = a4;

  objc_msgSend(*(id *)&v7[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_imageView], "setImage:", *(_QWORD *)&v7[v8]);
  j__swift_retain_1(a2);
  v11 = sub_100C31F7C(a2, a3 & 1);
  j__swift_release_1(a2);
  if (v11)
  {
    sub_10004A07C(0, (unint64_t *)&qword_1011E6AE0, UIColor_ptr);
    v12 = swift_retain();
    v13 = (void *)UIColor.init(_:)(v12);
    v14 = *(void **)&v7[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayColor];
    *(_QWORD *)&v7[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayColor] = v13;
    v15 = v13;

    sub_100CB3804();
    swift_release();

  }
  return v7;
}

void QRCodeOverlayViewController.ImageViewRepresentable.updateUIView(_:context:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  __n128 v12;
  void *v13;
  void *v14;
  id v15;

  v8 = OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_image;
  v9 = *(void **)(a1 + OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_image);
  *(_QWORD *)(a1 + OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_image) = a5;
  v10 = a5;

  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_imageView), "setImage:", *(_QWORD *)(a1 + v8));
  j__swift_retain_1(a3);
  v11 = sub_100C31F7C(a3, a4 & 1);
  j__swift_release_1(a3);
  if (v11)
  {
    sub_10004A07C(0, (unint64_t *)&qword_1011E6AE0, UIColor_ptr);
    v12 = swift_retain();
    v13 = (void *)UIColor.init(_:)(v12);
    v14 = *(void **)(a1 + OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayColor);
    *(_QWORD *)(a1 + OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayColor) = v13;
    v15 = v13;

    sub_100CB3804();
    swift_release();

  }
}

char *sub_100CB3CA8(uint64_t a1)
{
  uint64_t v1;

  return QRCodeOverlayViewController.ImageViewRepresentable.makeUIView(context:)(a1, *(_QWORD *)v1, *(_BYTE *)(v1 + 8), *(void **)(v1 + 16));
}

void sub_100CB3CC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  QRCodeOverlayViewController.ImageViewRepresentable.updateUIView(_:context:)(a1, a2, *(_QWORD *)v2, *(_BYTE *)(v2 + 8), *(void **)(v2 + 16));
}

uint64_t sub_100CB3CD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100CB43E0();
  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100CB3D28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100CB43E0();
  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_100CB3D78(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100CB43E0();
  UIViewRepresentable.body.getter(a1, v2);
  __break(1u);
}

uint64_t type metadata accessor for QRCodeOverlayViewController()
{
  return objc_opt_self(_TtC11MusicCoreUI27QRCodeOverlayViewController);
}

void sub_100CB3DBC(void *a1)
{
  id v1;
  id v2;

  v1 = objc_msgSend(a1, "view");
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, "setNeedsLayout");

  }
  else
  {
    __break(1u);
  }
}

_QWORD *sub_100CB3E04(_QWORD *a1)
{
  void *v2;

  v2 = (void *)a1[3];
  sub_1000652DC(a1[1], a1[2]);

  return a1;
}

uint64_t sub_100CB3E34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C((uint64_t *)&unk_1011E4010);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100CB3E7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectWeakDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

void sub_100CB3EA0(uint64_t a1)
{
  uint64_t v1;

  sub_100CB1908(a1, v1);
}

double sub_100CB3EA8()
{
  uint64_t v0;

  return sub_100CB1F7C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100CB3EB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100CB3EC0(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

double sub_100CB3EC8()
{
  uint64_t v0;

  return sub_100CB3020(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100CB3ED0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_100CB3EF4()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "dismissViewControllerAnimated:completion:", 0, 0);
}

void sub_100CB3F0C()
{
  uint64_t v0;

  sub_100CB36F4(*(_QWORD *)(v0 + 16));
}

unint64_t sub_100CB3F20()
{
  unint64_t result;

  result = qword_1011E5ED0;
  if (!qword_1011E5ED0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for QRCodeOverlayViewController.ImageViewRepresentable, &type metadata for QRCodeOverlayViewController.ImageViewRepresentable);
    atomic_store(result, (unint64_t *)&qword_1011E5ED0);
  }
  return result;
}

void destroy for QRCodeOverlayViewController.ImageViewRepresentable(uint64_t a1)
{
  j__swift_release_1(*(_QWORD *)a1);

}

uint64_t _s11MusicCoreUI27QRCodeOverlayViewControllerC22ImageViewRepresentableVwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  void *v6;
  id v7;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  j__swift_retain_1(*a2);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  v6 = (void *)a2[2];
  *(_QWORD *)(a1 + 16) = v6;
  v7 = v6;
  return a1;
}

uint64_t *assignWithCopy for QRCodeOverlayViewController.ImageViewRepresentable(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  j__swift_retain_1(*a2);
  v6 = *a1;
  *a1 = v4;
  *((_BYTE *)a1 + 8) = v5;
  j__swift_release_1(v6);
  v7 = (void *)a2[2];
  v8 = (void *)a1[2];
  a1[2] = (uint64_t)v7;
  v9 = v7;

  return a1;
}

uint64_t *assignWithTake for QRCodeOverlayViewController.ImageViewRepresentable(uint64_t *a1, uint64_t *a2)
{
  char v4;
  uint64_t v5;
  void *v6;

  v4 = *((_BYTE *)a2 + 8);
  v5 = *a1;
  *a1 = *a2;
  *((_BYTE *)a1 + 8) = v4;
  j__swift_release_1(v5);
  v6 = (void *)a1[2];
  a1[2] = a2[2];

  return a1;
}

ValueMetadata *type metadata accessor for QRCodeOverlayViewController.ImageViewRepresentable()
{
  return &type metadata for QRCodeOverlayViewController.ImageViewRepresentable;
}

void sub_100CB40B0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSString v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_backgroundView;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "init");
  v2 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView;
  type metadata accessor for QRCodeOverlayViewController.ContainerView();
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  v3 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_destOutLayer;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
  v4 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_logoView;
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v5);

  v7 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v6);
  *(_QWORD *)&v0[v4] = v7;
  v8 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_titleLabel;
  *(_QWORD *)&v0[v8] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v9 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabelEffectView;
  if (qword_1011DE270 != -1)
    swift_once(&qword_1011DE270, sub_100CB0EC0);
  v10 = objc_msgSend((id)objc_opt_self(UIVibrancyEffect), "effectForBlurEffect:", qword_10124FF88);
  v11 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v10);

  *(_QWORD *)&v0[v9] = v11;
  v12 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabel;
  *(_QWORD *)&v0[v12] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeBackgroundView] = 0;
  v13 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollView;
  *(_QWORD *)&v0[v13] = objc_msgSend(objc_allocWithZone((Class)UIScrollView), "init");
  v14 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollContentView;
  *(_QWORD *)&v0[v14] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_brightnessManager] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100E2B820, "MusicCoreUI/QRCodeOverlayViewController.swift", 45, 2, 64, 0);
  __break(1u);
}

void sub_100CB4308()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  id v4;
  uint64_t v5;

  v1 = v0;
  *(_QWORD *)&v0[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_image] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayColor] = 0;
  v2 = OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_imageView;
  v3 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v4 = UIView.forAutolayout.getter();

  *(_QWORD *)&v1[v2] = v4;
  v5 = OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayLayer;
  *(_QWORD *)&v1[v5] = objc_msgSend(objc_allocWithZone((Class)CALayer), "init");

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100E2B820, "MusicCoreUI/QRCodeOverlayViewController.swift", 45, 2, 330, 0);
  __break(1u);
}

unint64_t sub_100CB43E0()
{
  unint64_t result;

  result = qword_1011E5F30;
  if (!qword_1011E5F30)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for QRCodeOverlayViewController.ImageViewRepresentable, &type metadata for QRCodeOverlayViewController.ImageViewRepresentable);
    atomic_store(result, (unint64_t *)&qword_1011E5F30);
  }
  return result;
}

uint64_t Radiosity.ViewModifier.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _OWORD *v2;
  _OWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  char *v22;
  __int128 v23;
  uint64_t v24;
  _OWORD *v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _QWORD *v30;
  uint64_t v32;
  char v33;
  _OWORD v34[2];
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;

  v3 = v2;
  v6 = sub_100007E8C(&qword_1011E5F38);
  __chkstk_darwin();
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34[0] = v2[8];
  v9 = sub_100007E8C(&qword_1011E1B98);
  State.wrappedValue.getter(&v33, v9);
  v10 = v2[5];
  v12 = v2[3];
  v37 = v2[4];
  v11 = v37;
  v38 = v10;
  v13 = v2[5];
  v14 = v2[7];
  v39 = v2[6];
  v15 = v39;
  v40 = v14;
  v16 = v2[1];
  v17 = v2[3];
  v35 = v2[2];
  v18 = v35;
  v36 = v17;
  v19 = *v2;
  v20 = v2[1];
  v8[*(int *)(v6 + 40)] = v33;
  v21 = *v2;
  v34[0] = v19;
  v34[1] = v20;
  v22 = &v8[*(int *)(v6 + 36)];
  *((_OWORD *)v22 + 4) = v11;
  *((_OWORD *)v22 + 5) = v13;
  v23 = v2[7];
  *((_OWORD *)v22 + 6) = v15;
  *((_OWORD *)v22 + 7) = v23;
  *(_OWORD *)v22 = v21;
  *((_OWORD *)v22 + 1) = v16;
  *((_OWORD *)v22 + 2) = v18;
  *((_OWORD *)v22 + 3) = v12;
  v24 = sub_100007E8C(&qword_1011E5F40);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v8, a1, v24);
  v25 = (_OWORD *)swift_allocObject(&unk_10110E1C8, 160, 7);
  v26 = v3[7];
  v25[7] = v3[6];
  v25[8] = v26;
  v25[9] = v3[8];
  v27 = v3[3];
  v25[3] = v3[2];
  v25[4] = v27;
  v28 = v3[5];
  v25[5] = v3[4];
  v25[6] = v28;
  v29 = v3[1];
  v25[1] = *v3;
  v25[2] = v29;
  sub_100CB45F8((uint64_t)v8, a2);
  v30 = (_QWORD *)(a2 + *(int *)(sub_100007E8C(&qword_1011E5F48) + 36));
  *v30 = sub_100CB45F4;
  v30[1] = v25;
  sub_1005779B8((uint64_t)v34);
  sub_100CB4640((uint64_t)v3);
  return sub_10004FF60((uint64_t)v8, &qword_1011E5F38);
}

uint64_t sub_100CB45F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011E5F38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100CB4640(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;

  v2 = *(_QWORD *)(a1 + 72);
  v3 = *(_QWORD *)(a1 + 80);
  v4 = *(id *)(a1 + 56);
  sub_100048AAC(v2, v3);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_100CB46AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  char *v22;
  uint64_t v23;
  _OWORD *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _QWORD *v29;
  uint64_t v31;
  char v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  _OWORD v42[8];

  v5 = sub_100007E8C(&qword_1011E5F38);
  __chkstk_darwin();
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v2[7];
  v8 = v2[8];
  v39 = v2[6];
  v40 = v9;
  v10 = v2[3];
  v35 = v2[2];
  v36 = v10;
  v11 = v2[5];
  v37 = v2[4];
  v38 = v11;
  v12 = v2[1];
  v33 = *v2;
  v34 = v12;
  v41 = v8;
  v42[0] = v8;
  v13 = sub_100007E8C(&qword_1011E1B98);
  State.wrappedValue.getter(&v32, v13);
  v14 = v37;
  v15 = v38;
  v42[4] = v37;
  v42[5] = v38;
  v16 = v39;
  v17 = v40;
  v42[6] = v39;
  v42[7] = v40;
  v18 = v35;
  v19 = v36;
  v42[2] = v35;
  v42[3] = v36;
  v20 = v33;
  v21 = v34;
  v42[0] = v33;
  v42[1] = v34;
  v7[*(int *)(v5 + 40)] = v32;
  v22 = &v7[*(int *)(v5 + 36)];
  *((_OWORD *)v22 + 4) = v14;
  *((_OWORD *)v22 + 5) = v15;
  *((_OWORD *)v22 + 6) = v16;
  *((_OWORD *)v22 + 7) = v17;
  *(_OWORD *)v22 = v20;
  *((_OWORD *)v22 + 1) = v21;
  *((_OWORD *)v22 + 2) = v18;
  *((_OWORD *)v22 + 3) = v19;
  v23 = sub_100007E8C(&qword_1011E5F40);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v7, a1, v23);
  v24 = (_OWORD *)swift_allocObject(&unk_10110E660, 160, 7);
  v25 = v40;
  v24[7] = v39;
  v24[8] = v25;
  v24[9] = v41;
  v26 = v36;
  v24[3] = v35;
  v24[4] = v26;
  v27 = v38;
  v24[5] = v37;
  v24[6] = v27;
  v28 = v34;
  v24[1] = v33;
  v24[2] = v28;
  sub_100CB45F8((uint64_t)v7, a2);
  v29 = (_QWORD *)(a2 + *(int *)(sub_100007E8C(&qword_1011E5F48) + 36));
  *v29 = sub_100CB45F4;
  v29[1] = v24;
  sub_1005779B8((uint64_t)v42);
  sub_100CB4640((uint64_t)&v33);
  return sub_10004FF60((uint64_t)v7, &qword_1011E5F38);
}

id Radiosity.UIView.__allocating_init(content:isRadiosityEnabled:specs:)(void *a1, char a2, _OWORD *a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  return Radiosity.UIView.init(content:isRadiosityEnabled:specs:)(a1, a2, a3);
}

id sub_100CB48C4(uint64_t a1, uint64_t a2)
{
  return sub_100CB6B88(a2);
}

void sub_100CB48CC(void *a1, uint64_t a2, uint64_t a3)
{
  sub_100CB6C94(a1, a3);
}

double sub_100CB48D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  return sub_100CB6D7C(a5);
}

uint64_t sub_100CB48F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100EF30E8, a3);
  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, WitnessTable);
}

uint64_t sub_100CB494C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100EF30E8, a3);
  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, WitnessTable);
}

void sub_100CB49A8(uint64_t a1)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100EF30E8, a1);
  UIViewRepresentable.body.getter(a1, WitnessTable);
  __break(1u);
}

id Radiosity.UIView.content.getter()
{
  uint64_t v0;

  return *(id *)(v0 + direct field offset for Radiosity.UIView.content);
}

void sub_100CB49E8(char a1)
{
  char *v1;
  int v2;
  char *v3;
  double v4;
  char v5[24];

  v2 = a1 & 1;
  v3 = &v1[direct field offset for Radiosity.UIView.isRadiosityEnabled];
  *(_QWORD *)&v4 = swift_beginAccess(&v1[direct field offset for Radiosity.UIView.isRadiosityEnabled], v5, 0, 0).n128_u64[0];
  if (*v3 != v2)
  {
    if (*v3)
    {
      objc_msgSend(v1, "addSubview:", *(_QWORD *)&v1[qword_1011E5F68], v4);
      objc_msgSend(v1, "addSubview:", *(_QWORD *)&v1[qword_1011E5F70]);
    }
    else
    {
      objc_msgSend(*(id *)&v1[qword_1011E5F68], "removeFromSuperview", v4);
      objc_msgSend(*(id *)&v1[qword_1011E5F70], "removeFromSuperview");
    }
  }
}

uint64_t Radiosity.UIView.isRadiosityEnabled.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + direct field offset for Radiosity.UIView.isRadiosityEnabled);
  swift_beginAccess(v0 + direct field offset for Radiosity.UIView.isRadiosityEnabled, v3, 0, 0);
  return *v1;
}

void Radiosity.UIView.isRadiosityEnabled.setter(char a1)
{
  uint64_t v1;
  char *v3;
  char v4;
  _BYTE v5[24];

  v3 = (char *)(v1 + direct field offset for Radiosity.UIView.isRadiosityEnabled);
  swift_beginAccess(v1 + direct field offset for Radiosity.UIView.isRadiosityEnabled, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;
  sub_100CB49E8(v4);
}

void (*Radiosity.UIView.isRadiosityEnabled.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _BYTE *v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = (_BYTE *)(v1 + direct field offset for Radiosity.UIView.isRadiosityEnabled);
  swift_beginAccess(v1 + direct field offset for Radiosity.UIView.isRadiosityEnabled, v3, 0, 0);
  *((_BYTE *)v3 + 32) = *v4;
  return sub_100CB4BA8;
}

void sub_100CB4BA8(uint64_t a1)
{
  void *v1;

  v1 = *(void **)a1;
  Radiosity.UIView.isRadiosityEnabled.setter(*(_BYTE *)(*(_QWORD *)a1 + 32));
  free(v1);
}

void sub_100CB4BD4(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  _BYTE v6[24];
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;

  v2 = *(_OWORD *)(a1 + 64);
  v7 = *(_OWORD *)(a1 + 48);
  v8 = v2;
  v9 = *(_QWORD *)(a1 + 80);
  sub_100CB6A70((__int128 *)((char *)&v8 + 8), &v10);
  v3 = v1 + direct field offset for Radiosity.UIView.specs;
  swift_beginAccess(v1 + direct field offset for Radiosity.UIView.specs, v6, 0, 0);
  v4 = *(_QWORD *)(v3 + 72);
  sub_100CB6A70(&v10, &v11);
  if ((_QWORD)v11)
    v5 = v4 == 0;
  else
    v5 = v4 != 0;
  sub_100CB53C0(v5);
  sub_100CB5AE8();
}

double Radiosity.UIView.specs.getter@<D0>(_OWORD *a1@<X8>)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  double result;
  __int128 v6;
  _OWORD v7[2];
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  sub_100CB6A0C((uint64_t)v7);
  sub_1005779B8((uint64_t)v7);
  v2 = v11;
  a1[4] = v10;
  a1[5] = v2;
  v3 = v13;
  a1[6] = v12;
  a1[7] = v3;
  v4 = v7[1];
  *a1 = v7[0];
  a1[1] = v4;
  result = *(double *)&v8;
  v6 = v9;
  a1[2] = v8;
  a1[3] = v6;
  return result;
}

uint64_t Radiosity.UIView.specs.setter(_OWORD *a1)
{
  uint64_t v1;
  _OWORD *v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v13[24];
  _OWORD v14[2];
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _OWORD v21[9];

  v3 = (_OWORD *)(v1 + direct field offset for Radiosity.UIView.specs);
  swift_beginAccess(v1 + direct field offset for Radiosity.UIView.specs, v13, 1, 0);
  v4 = v3[5];
  v17 = v3[4];
  v18 = v4;
  v5 = v3[7];
  v19 = v3[6];
  v6 = v3[1];
  v14[0] = *v3;
  v14[1] = v6;
  v7 = v3[3];
  v15 = v3[2];
  v16 = v7;
  v20 = v5;
  v21[0] = v14[0];
  v21[1] = v6;
  v21[2] = v15;
  v21[3] = v7;
  v21[4] = v17;
  v21[5] = v4;
  v21[6] = v19;
  v21[7] = v5;
  v8 = a1[3];
  v3[2] = a1[2];
  v3[3] = v8;
  v9 = a1[1];
  *v3 = *a1;
  v3[1] = v9;
  v10 = a1[7];
  v3[6] = a1[6];
  v3[7] = v10;
  v11 = a1[5];
  v3[4] = a1[4];
  v3[5] = v11;
  sub_1005779B8((uint64_t)v14);
  sub_1005779B8((uint64_t)a1);
  sub_100577A18((uint64_t)v21);
  sub_100CB4BD4((uint64_t)v14);
  sub_100577A18((uint64_t)a1);
  return sub_100577A18((uint64_t)v14);
}

void (*Radiosity.UIView.specs.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  __int128 *v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v3 = malloc(0x2A0uLL);
  *a1 = v3;
  v3[83] = v1;
  v4 = (__int128 *)(v1 + direct field offset for Radiosity.UIView.specs);
  swift_beginAccess(v4, v3 + 80, 0, 0);
  v5 = v4[4];
  v6 = v4[5];
  *((_OWORD *)v3 + 4) = v5;
  *((_OWORD *)v3 + 5) = v6;
  v7 = v4[6];
  v8 = v4[7];
  *((_OWORD *)v3 + 6) = v7;
  *((_OWORD *)v3 + 7) = v8;
  v9 = *v4;
  v10 = v4[1];
  *(_OWORD *)v3 = *v4;
  *((_OWORD *)v3 + 1) = v10;
  v11 = v4[2];
  v12 = v4[3];
  *((_OWORD *)v3 + 2) = v11;
  *((_OWORD *)v3 + 3) = v12;
  *((_OWORD *)v3 + 24) = v9;
  *((_OWORD *)v3 + 25) = v10;
  *((_OWORD *)v3 + 26) = v11;
  *((_OWORD *)v3 + 27) = v12;
  *((_OWORD *)v3 + 28) = v5;
  *((_OWORD *)v3 + 29) = v6;
  *((_OWORD *)v3 + 30) = v7;
  *((_OWORD *)v3 + 31) = v8;
  sub_1005779B8((uint64_t)v3);
  return sub_100CB4E2C;
}

void sub_100CB4E2C(uint64_t a1, char a2)
{
  _OWORD *v2;
  _OWORD *v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  v2 = *(_OWORD **)a1;
  v3 = (_OWORD *)(*(_QWORD *)a1 + 384);
  v4 = *(_OWORD *)(*(_QWORD *)a1 + 464);
  if ((a2 & 1) != 0)
  {
    v2[12] = *(_OWORD *)(*(_QWORD *)a1 + 448);
    v2[13] = v4;
    v5 = v3[7];
    v2[14] = v3[6];
    v2[15] = v5;
    v6 = v3[1];
    v2[8] = *v3;
    v2[9] = v6;
    v7 = v3[3];
    v2[10] = v3[2];
    v2[11] = v7;
    sub_1005779B8((uint64_t)(v2 + 8));
    Radiosity.UIView.specs.setter(v2 + 8);
    v8 = v3[5];
    v2[36] = v3[4];
    v2[37] = v8;
    v9 = v3[7];
    v2[38] = v3[6];
    v2[39] = v9;
    v10 = v3[1];
    v2[32] = *v3;
    v2[33] = v10;
    v11 = v3[3];
    v2[34] = v3[2];
    v2[35] = v11;
    sub_100577A18((uint64_t)(v2 + 32));
  }
  else
  {
    v2[20] = *(_OWORD *)(*(_QWORD *)a1 + 448);
    v2[21] = v4;
    v12 = v3[7];
    v2[22] = v3[6];
    v2[23] = v12;
    v13 = v3[1];
    v2[16] = *v3;
    v2[17] = v13;
    v14 = v3[3];
    v2[18] = v3[2];
    v2[19] = v14;
    Radiosity.UIView.specs.setter(v2 + 16);
  }
  free(v2);
}

__int128 *Radiosity.Specs.containerDetailHeaderArtwork.unsafeMutableAddressor()
{
  if (qword_1011DE278 != -1)
    swift_once(&qword_1011DE278, sub_100CB6440);
  return &static Radiosity.Specs.containerDetailHeaderArtwork;
}

id Radiosity.UIView.init(content:isRadiosityEnabled:specs:)(void *a1, char a2, _OWORD *a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  objc_super v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  id v19;
  _QWORD *v20;
  id v21;
  id v22;
  id v23;
  _QWORD *v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  objc_class *v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  objc_super v44[2];
  __int128 v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;

  v4 = v3;
  ObjectType = swift_getObjectType();
  v9 = *v4;
  v10 = swift_isaMask;
  *(_QWORD *)((char *)v4 + direct field offset for Radiosity.UIView.content) = a1;
  v11 = (_OWORD *)((char *)v4 + direct field offset for Radiosity.UIView.specs);
  v12 = (objc_super)a3[3];
  v14 = a3[4];
  v13 = a3[5];
  v11[4] = v14;
  v11[5] = v13;
  v15 = a3[7];
  v11[6] = a3[6];
  v11[7] = v15;
  v16 = a3[1];
  *v11 = *a3;
  v11[1] = v16;
  v17 = a3[3];
  v11[2] = a3[2];
  v11[3] = v17;
  v18 = v10 & v9;
  *((_BYTE *)v4 + direct field offset for Radiosity.UIView.isRadiosityEnabled) = a2;
  v46 = *((_QWORD *)a3 + 10);
  v44[1] = v12;
  v45 = v14;
  sub_100CB6A70((__int128 *)((char *)&v45 + 8), &v47);
  sub_100CB6A70(&v47, &v48);
  if ((_QWORD)v48)
  {
    v19 = objc_allocWithZone((Class)UIView);
    v20 = v4;
    v21 = a1;
    sub_1005779B8((uint64_t)a3);
    v22 = objc_msgSend(v19, "init");
  }
  else
  {
    v23 = objc_allocWithZone((Class)_UIPortalView);
    v24 = v4;
    v25 = a1;
    sub_1005779B8((uint64_t)a3);
    v22 = objc_msgSend(v23, "initWithSourceView:", v25);
  }
  v26 = v22;
  *(_QWORD *)((char *)v4 + qword_1011E5F68) = v22;
  v27 = objc_allocWithZone((Class)_UIPortalView);
  v28 = v26;
  v29 = objc_msgSend(v27, "initWithSourceView:", a1);
  *(_QWORD *)((char *)v4 + qword_1011E5F70) = v29;
  v30 = v29;

  v33 = (objc_class *)type metadata accessor for Radiosity.UIView(0, *(_QWORD *)(v18 + 80), v31, v32);
  v44[0].receiver = v4;
  v44[0].super_class = v33;
  v34 = -[objc_super initWithFrame:](v44, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v34, "addSubview:", a1);
  if ((a2 & 1) != 0)
  {
    objc_msgSend(v34, "addSubview:", v28);
    objc_msgSend(v34, "addSubview:", v30);
  }
  v35 = a1;
  objc_msgSend(v34, "bounds");
  objc_msgSend(v35, "setFrame:");

  objc_msgSend(v35, "setAutoresizingMask:", 18);
  sub_100CB53C0(0);
  sub_100CB5AE8();
  v36 = objc_msgSend(v34, "traitCollection");
  v37 = objc_msgSend(v36, "userInterfaceStyle");

  sub_100CB5F58((uint64_t)v37);
  v38 = sub_100007E8C(&qword_1011E04A0);
  v39 = swift_allocObject(v38, 48, 7);
  *(_OWORD *)(v39 + 16) = xmmword_100EA7AA0;
  *(_QWORD *)(v39 + 32) = type metadata accessor for UITraitUserInterfaceStyle(0);
  *(_QWORD *)(v39 + 40) = &protocol witness table for UITraitUserInterfaceStyle;
  v40 = swift_allocObject(&unk_10110E1F0, 24, 7);
  *(_QWORD *)(v40 + 16) = ObjectType;
  v41 = v34;
  v42 = UIView.registerForTraitChanges<A>(_:handler:)(v39, sub_100CB6A9C, v40, ObjectType);
  sub_100577A18((uint64_t)a3);

  swift_unknownObjectRelease(v42);
  swift_bridgeObjectRelease();
  swift_release();

  return v41;
}

void sub_100CB5284()
{
  sub_100CB6E18();
}

uint64_t sub_100CB52B0(uint64_t a1)
{
  void *v1;
  id v3;

  v3 = v1;
  return a1;
}

double sub_100CB52C8(void *a1)
{
  id v1;
  double v2;
  double v3;

  v1 = a1;
  Radiosity.UIView.intrinsicContentSize.getter();
  v3 = v2;

  return v3;
}

id Radiosity.UIView.intrinsicContentSize.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + direct field offset for Radiosity.UIView.content), "intrinsicContentSize");
}

Swift::Void __swiftcall Radiosity.UIView.layoutSubviews()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  objc_class *v3;
  objc_super v4;

  v3 = (objc_class *)type metadata accessor for Radiosity.UIView(0, *(_QWORD *)((swift_isaMask & *v2) + 0x50), v0, v1);
  v4.receiver = v2;
  v4.super_class = v3;
  objc_msgSendSuper2(&v4, "layoutSubviews");
  sub_100CB53C0(0);
  sub_100CB5AE8();
}

void sub_100CB5378(void *a1)
{
  id v1;

  v1 = a1;
  Radiosity.UIView.layoutSubviews()();

}

void sub_100CB53AC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + qword_1011E5F68);
  *(_QWORD *)(v1 + qword_1011E5F68) = a1;

}

void sub_100CB53C0(char a1)
{
  char *v1;
  char *v2;
  char *v3;
  id v4;
  void *v5;
  id v6;
  char *v7;
  double v8;
  char *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  CGFloat v18;
  CGFloat v19;
  double v20;
  double v21;
  double v22;
  double v23;
  id v24;
  id v25;
  id v26;
  char *v27;
  __n128 v28;
  id v29;
  double *v30;
  id v31;
  char *v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t (*v37)(uint64_t *, double, double, double, double, double);
  double *v38;
  double v39;
  uint64_t *v40;
  void *v41;
  void *v42;
  void *v43;
  id v44;
  char *v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t (*v50)(double, double, double, double, double);
  uint64_t v51;
  id v52;
  double v53;
  double v54;
  double MinX;
  __int128 v56;
  __int128 v57;
  CGAffineTransform v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  CGAffineTransform v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  uint64_t v80;
  _OWORD v81[2];
  __int128 v82;
  uint64_t v83;
  _OWORD v84[2];
  __int128 v85;
  uint64_t v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  char v91[24];
  char v92[24];
  char v93[24];
  char v94[24];
  char v95[24];
  char v96[24];
  char v97[24];
  char v98[24];
  char v99[24];
  CGRect v100;
  CGRect v101;
  CGRect v102;
  CGRect v103;
  CGRect v104;
  CGRect v105;

  v2 = v1;
  if ((a1 & 1) != 0)
  {
    objc_msgSend(*(id *)&v1[qword_1011E5F68], "removeFromSuperview");
    v3 = &v1[direct field offset for Radiosity.UIView.specs];
    swift_beginAccess(&v2[direct field offset for Radiosity.UIView.specs], v91, 0, 0);
    v56 = *((_OWORD *)v3 + 4);
    v57 = *((_OWORD *)v3 + 5);
    v84[1] = *((_OWORD *)v3 + 3);
    v85 = v56;
    v86 = v57;
    sub_100CB6A70((__int128 *)((char *)&v85 + 8), &v87);
    sub_100CB6A70(&v87, &v88);
    if ((_QWORD)v88)
      v4 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
    else
      v4 = objc_msgSend(objc_allocWithZone((Class)_UIPortalView), "initWithSourceView:", *(_QWORD *)&v2[direct field offset for Radiosity.UIView.content]);
    v5 = *(void **)&v2[qword_1011E5F68];
    *(_QWORD *)&v2[qword_1011E5F68] = v4;
    v6 = v4;

    v7 = &v2[direct field offset for Radiosity.UIView.isRadiosityEnabled];
    *(_QWORD *)&v8 = swift_beginAccess(&v2[direct field offset for Radiosity.UIView.isRadiosityEnabled], v92, 0, 0).n128_u64[0];
    if (*v7 == 1)
      objc_msgSend(v2, "addSubview:", v6, v8);

  }
  v9 = &v2[direct field offset for Radiosity.UIView.specs];
  swift_beginAccess(&v2[direct field offset for Radiosity.UIView.specs], v93, 0, 0);
  v10 = *((_OWORD *)v9 + 5);
  v60 = *((_OWORD *)v9 + 4);
  v61 = v10;
  v11 = *((_OWORD *)v9 + 7);
  v62 = *((_OWORD *)v9 + 6);
  v63 = v11;
  v12 = *((_OWORD *)v9 + 1);
  *(_OWORD *)&v58.a = *(_OWORD *)v9;
  *(_OWORD *)&v58.c = v12;
  v13 = *((_OWORD *)v9 + 3);
  *(_OWORD *)&v58.tx = *((_OWORD *)v9 + 2);
  v59 = v13;
  sub_1005779B8((uint64_t)&v58);
  objc_msgSend(v2, "bounds");
  x = v100.origin.x;
  y = v100.origin.y;
  width = v100.size.width;
  height = v100.size.height;
  v72 = v58;
  v101 = CGRectApplyAffineTransform(v100, &v72);
  v18 = v101.origin.x;
  v19 = v101.origin.y;
  v20 = v101.size.width;
  v21 = v101.size.height;
  v101.origin.x = x;
  v101.origin.y = y;
  v101.size.width = width;
  v101.size.height = height;
  MinX = CGRectGetMinX(v101);
  v102.origin.x = x;
  v102.origin.y = y;
  v102.size.width = width;
  v102.size.height = height;
  v54 = CGRectGetWidth(v102);
  v103.origin.x = v18;
  v103.origin.y = v19;
  v103.size.width = v20;
  v103.size.height = v21;
  v53 = CGRectGetWidth(v103);
  v104.origin.x = x;
  v104.origin.y = y;
  v104.size.width = width;
  v104.size.height = height;
  v22 = CGRectGetHeight(v104);
  v105.origin.x = v18;
  v105.origin.y = v19;
  v105.size.width = v20;
  v105.size.height = v21;
  v23 = CGRectGetHeight(v105);
  sub_100577A18((uint64_t)&v58);
  v24 = *(id *)&v2[qword_1011E5F68];
  objc_msgSend(v2, "bounds");
  objc_msgSend(v24, "setFrame:");

  v25 = objc_msgSend(*(id *)&v2[qword_1011E5F68], "layer");
  objc_msgSend(v25, "setShadowColor:", *(_QWORD *)&v2[direct field offset for Radiosity.UIView.specs + 56], swift_beginAccess(&v2[direct field offset for Radiosity.UIView.specs], v94, 0, 0).n128_f64[0]);

  v26 = objc_msgSend(*(id *)&v2[qword_1011E5F68], "layer");
  v27 = &v2[direct field offset for Radiosity.UIView.specs];
  v28 = swift_beginAccess(&v2[direct field offset for Radiosity.UIView.specs], v95, 0, 0);
  v28.n128_u32[0] = *((_DWORD *)v27 + 12);
  objc_msgSend(v26, "setShadowOpacity:", v28.n128_f64[0]);

  v29 = objc_msgSend(*(id *)&v2[qword_1011E5F68], "layer");
  v30 = (double *)&v2[direct field offset for Radiosity.UIView.specs];
  swift_beginAccess(&v2[direct field offset for Radiosity.UIView.specs], v96, 0, 0);
  objc_msgSend(v29, "setShadowRadius:", v30[8]);

  v31 = objc_msgSend(*(id *)&v2[qword_1011E5F68], "layer");
  v32 = &v2[direct field offset for Radiosity.UIView.specs];
  swift_beginAccess(&v2[direct field offset for Radiosity.UIView.specs], v97, 0, 0);
  v33 = *((_OWORD *)v32 + 5);
  v68 = *((_OWORD *)v32 + 4);
  v69 = v33;
  v34 = *((_OWORD *)v32 + 7);
  v70 = *((_OWORD *)v32 + 6);
  v71 = v34;
  v35 = *((_OWORD *)v32 + 1);
  v64 = *(_OWORD *)v32;
  v65 = v35;
  v36 = *((_OWORD *)v32 + 3);
  v66 = *((_OWORD *)v32 + 2);
  v67 = v36;
  v81[1] = v36;
  v82 = v68;
  v83 = v33;
  sub_100CB6A70((__int128 *)((char *)&v82 + 8), v84);
  sub_100CB6A70(v84, &v89);
  v37 = (uint64_t (*)(uint64_t *, double, double, double, double, double))v89;
  if ((_QWORD)v89)
  {
    v38 = (double *)&v2[direct field offset for Radiosity.UIView.specs];
    swift_beginAccess(&v2[direct field offset for Radiosity.UIView.specs], v98, 0, 0);
    v39 = v38[8];
    v40 = sub_100CB8780((uint64_t *)v84);
    v41 = (void *)v37(v40, MinX + (v54 - v53) * 0.5, v22 - v23, v20, v21, v39);
    v43 = v42;
    sub_100CB87AC((uint64_t *)v84);

  }
  else
  {
    v41 = 0;
  }
  objc_msgSend(v31, "setShadowPath:", v41);

  v44 = objc_msgSend(*(id *)&v2[qword_1011E5F68], "layer");
  v45 = &v2[direct field offset for Radiosity.UIView.specs];
  swift_beginAccess(&v2[direct field offset for Radiosity.UIView.specs], v99, 0, 0);
  v46 = *((_OWORD *)v45 + 5);
  v74 = *((_OWORD *)v45 + 4);
  v75 = v46;
  v47 = *((_OWORD *)v45 + 7);
  v76 = *((_OWORD *)v45 + 6);
  v77 = v47;
  v48 = *((_OWORD *)v45 + 1);
  *(_OWORD *)&v72.a = *(_OWORD *)v45;
  *(_OWORD *)&v72.c = v48;
  v49 = *((_OWORD *)v45 + 3);
  *(_OWORD *)&v72.tx = *((_OWORD *)v45 + 2);
  v73 = v49;
  v78 = v49;
  v79 = v74;
  v80 = v46;
  sub_100CB6A70((__int128 *)((char *)&v79 + 8), v81);
  sub_100CB6A70(v81, &v90);
  v50 = (uint64_t (*)(double, double, double, double, double))v90;
  if ((_QWORD)v90)
  {
    v51 = *((_QWORD *)&v90 + 1);
    sub_100CB8780((uint64_t *)v81);
    v52 = sub_100CB597C(v50, v51, v2);
    sub_100CB87AC((uint64_t *)v81);
  }
  else
  {
    v52 = 0;
  }
  objc_msgSend(v44, "setMask:", v52);

}

id sub_100CB597C(uint64_t (*a1)(double, double, double, double, double), uint64_t a2, char *a3)
{
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double *v18;
  void *v19;
  void *v20;
  void *v21;
  char v23[24];

  v5 = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
  v6 = (void *)objc_opt_self(UIColor);
  v7 = v5;
  v8 = objc_msgSend(v6, "blackColor");
  v9 = objc_msgSend(v8, "CGColor");

  objc_msgSend(v7, "setBackgroundColor:", v9);
  objc_msgSend(a3, "bounds");
  v11 = v10;
  v13 = v12;
  v15 = v14;
  v17 = v16;
  v18 = (double *)&a3[direct field offset for Radiosity.UIView.specs];
  swift_beginAccess(v18, v23, 0, 0);
  v19 = (void *)a1(v11, v13, v15, v17, v18[8]);
  v21 = v20;

  objc_msgSend(v7, "setPath:", v21);
  objc_msgSend(v7, "setFillRule:", kCAFillRuleEvenOdd);
  return v7;
}

void sub_100CB5AE8()
{
  char *v0;
  char *v1;
  char *v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  CGFloat v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  void *v18;
  char *v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void (*v24)(id);
  id v25;
  id v26;
  id v27;
  NSString v28;
  id v29;
  Class isa;
  unint64_t v31;
  id v32;
  Class v33;
  id v34;
  char *v35;
  float (*v36)(id);
  id v37;
  id v38;
  __n128 v39;
  _QWORD rect[9];
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  char v49[24];
  char v50[24];
  char v51[24];
  char v52[32];
  CGRect v53;
  CGRect v54;
  CGRect v55;
  CGRect v56;
  CGRect v57;
  CGRect v58;

  v1 = v0;
  v2 = &v0[direct field offset for Radiosity.UIView.specs];
  swift_beginAccess(v2, v49, 0, 0);
  v3 = *((_OWORD *)v2 + 5);
  v45 = *((_OWORD *)v2 + 4);
  v46 = v3;
  v4 = *((_OWORD *)v2 + 7);
  v47 = *((_OWORD *)v2 + 6);
  v48 = v4;
  v5 = *((_OWORD *)v2 + 1);
  v41 = *(_OWORD *)v2;
  v42 = v5;
  v6 = *((_OWORD *)v2 + 3);
  v43 = *((_OWORD *)v2 + 2);
  v44 = v6;
  sub_1005779B8((uint64_t)&v41);
  objc_msgSend(v1, "bounds");
  x = v53.origin.x;
  y = v53.origin.y;
  width = v53.size.width;
  height = v53.size.height;
  *(_OWORD *)&rect[3] = v41;
  *(_OWORD *)&rect[5] = v42;
  *(_OWORD *)&rect[7] = v43;
  v54 = CGRectApplyAffineTransform(v53, (CGAffineTransform *)&rect[3]);
  v11 = v54.origin.x;
  rect[0] = *(_QWORD *)&v54.origin.x;
  rect[2] = *(_QWORD *)&v54.origin.y;
  v12 = v54.size.width;
  v13 = v54.size.height;
  v54.origin.x = x;
  v54.origin.y = y;
  v54.size.width = width;
  v54.size.height = height;
  rect[1] = CGRectGetMinX(v54);
  v55.origin.x = x;
  v55.origin.y = y;
  v55.size.width = width;
  v55.size.height = height;
  v14 = CGRectGetWidth(v55);
  v56.origin.x = v11;
  *(_QWORD *)&v56.origin.y = rect[2];
  v56.size.width = v12;
  v56.size.height = v13;
  v15 = *(double *)&rect[1] + (v14 - CGRectGetWidth(v56)) * 0.5;
  v57.origin.x = x;
  v57.origin.y = y;
  v57.size.width = width;
  v57.size.height = height;
  v16 = CGRectGetHeight(v57);
  *(_QWORD *)&v58.origin.x = rect[0];
  *(_QWORD *)&v58.origin.y = rect[2];
  v58.size.width = v12;
  v58.size.height = v13;
  v17 = CGRectGetHeight(v58);
  sub_100577A18((uint64_t)&v41);
  v18 = *(void **)&v1[qword_1011E5F70];
  objc_msgSend(v18, "setFrame:", v15, v16 - v17, v12, v13);
  v19 = &v1[direct field offset for Radiosity.UIView.specs];
  swift_beginAccess(&v1[direct field offset for Radiosity.UIView.specs], v50, 0, 0);
  v20 = *((_OWORD *)v19 + 1);
  *(_OWORD *)&rect[3] = *(_OWORD *)v19;
  *(_OWORD *)&rect[5] = v20;
  *(_OWORD *)&rect[7] = *((_OWORD *)v19 + 2);
  objc_msgSend(v18, "setTransform:", &rect[3]);
  rect[2] = objc_msgSend(v18, "layer");
  v21 = sub_100007E8C(&qword_1011DEF80);
  v22 = swift_allocObject(v21, 96, 7);
  *(_OWORD *)(v22 + 16) = xmmword_100EA7A80;
  v23 = &v1[direct field offset for Radiosity.UIView.specs];
  swift_beginAccess(&v1[direct field offset for Radiosity.UIView.specs], v51, 0, 0);
  v24 = (void (*)(id))*((_QWORD *)v23 + 13);
  swift_retain();
  v25 = objc_msgSend(v1, "traitCollection", swift_retain().n128_f64[0]);
  v26 = objc_msgSend(v25, "userInterfaceStyle");

  static String._unconditionallyBridgeFromObjectiveC(_:)(kCAFilterColorSaturate);
  v27 = objc_allocWithZone((Class)CAFilter);
  v28 = String._bridgeToObjectiveC()();
  v29 = objc_msgSend(v27, "initWithType:", v28, swift_bridgeObjectRelease().n128_f64[0]);

  v24(v26);
  isa = Double._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v29, "setValue:forKey:", isa, kCAFilterInputAmount);
  swift_release();
  swift_release();

  v31 = sub_100CB8744();
  *(_QWORD *)(v22 + 56) = v31;
  *(_QWORD *)(v22 + 32) = v29;
  swift_beginAccess(&v1[direct field offset for Radiosity.UIView.specs], v52, 0, 0);
  v32 = sub_100CB6AA0();
  *(_QWORD *)(v22 + 88) = v31;
  *(_QWORD *)(v22 + 64) = v32;
  v33 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend((id)rect[2], "setFilters:", v33, swift_bridgeObjectRelease().n128_f64[0]);

  v34 = objc_msgSend(v18, "layer");
  v35 = &v1[direct field offset for Radiosity.UIView.specs];
  swift_beginAccess(&v1[direct field offset for Radiosity.UIView.specs], &rect[3], 0, 0);
  v36 = (float (*)(id))*((_QWORD *)v35 + 11);
  v37 = objc_msgSend(v1, "traitCollection", swift_retain().n128_f64[0]);
  v38 = objc_msgSend(v37, "userInterfaceStyle");

  LODWORD(v16) = v36(v38);
  v39 = swift_release();
  v39.n128_u32[0] = LODWORD(v16);
  objc_msgSend(v34, "setOpacity:", v39.n128_f64[0]);

}

void sub_100CB5F58(uint64_t a1)
{
  uint64_t v1;
  id v3;
  void *v4;
  double v5;
  double v6;
  id v7;

  sub_100CB5AE8();
  v3 = objc_msgSend(*(id *)(v1 + qword_1011E5F68), "layer");
  v4 = v3;
  if (a1 == 2)
    v5 = -1.0;
  else
    v5 = -2.0;
  if (a1 == 2)
    v6 = -2.0;
  else
    v6 = -1.0;
  objc_msgSend(v3, "setZPosition:", v5);

  v7 = objc_msgSend(*(id *)(v1 + qword_1011E5F70), "layer");
  objc_msgSend(v7, "setZPosition:", v6);

}

void Radiosity.UIView.init(frame:)()
{
  sub_100CB6E70();
}

void sub_100CB6024()
{
  sub_100CB6E70();
}

id Radiosity.UIView.__deallocating_deinit(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for Radiosity.UIView(0, *(_QWORD *)((swift_isaMask & *v4) + 0x50), a3, a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, "dealloc");
}

void sub_100CB608C(uint64_t a1)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v6[8];

  v2 = *(_OWORD *)(a1 + direct field offset for Radiosity.UIView.specs + 80);
  v6[4] = *(_OWORD *)(a1 + direct field offset for Radiosity.UIView.specs + 64);
  v6[5] = v2;
  v3 = *(_OWORD *)(a1 + direct field offset for Radiosity.UIView.specs + 112);
  v6[6] = *(_OWORD *)(a1 + direct field offset for Radiosity.UIView.specs + 96);
  v6[7] = v3;
  v4 = *(_OWORD *)(a1 + direct field offset for Radiosity.UIView.specs + 16);
  v6[0] = *(_OWORD *)(a1 + direct field offset for Radiosity.UIView.specs);
  v6[1] = v4;
  v5 = *(_OWORD *)(a1 + direct field offset for Radiosity.UIView.specs + 48);
  v6[2] = *(_OWORD *)(a1 + direct field offset for Radiosity.UIView.specs + 32);
  v6[3] = v5;
  sub_100577A18((uint64_t)v6);

}

__n128 Radiosity.Specs.transform.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v2;
  __n128 result;

  v2 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(v1 + 32);
  *(__n128 *)(a1 + 32) = result;
  return result;
}

__n128 Radiosity.Specs.transform.setter(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  __n128 result;

  v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v1 = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 16) = v2;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v1 + 32) = result;
  return result;
}

float Radiosity.Specs.Shadow.opacity.getter()
{
  uint64_t v0;

  return *(float *)v0;
}

uint64_t Radiosity.Specs.Shadow.drawMode.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  sub_100048AAC(v1, *(_QWORD *)(v0 + 32));
  return v1;
}

uint64_t Radiosity.Specs.Shadow.drawMode.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_10004BA30(*(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t Radiosity.Specs.shadow.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t result;

  v3 = *(_DWORD *)(v1 + 48);
  v4 = *(void **)(v1 + 56);
  v5 = *(_QWORD *)(v1 + 64);
  v7 = *(_QWORD *)(v1 + 72);
  v6 = *(_QWORD *)(v1 + 80);
  v8 = v4;
  result = sub_100048AAC(v7, v6);
  *(_DWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v8;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v6;
  return result;
}

__n128 Radiosity.Specs.shadow.setter(uint64_t a1)
{
  uint64_t v1;
  __n128 result;
  __int128 v4;

  sub_10004BA30(*(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80));
  result = *(__n128 *)a1;
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 48) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 64) = v4;
  *(_QWORD *)(v1 + 80) = *(_QWORD *)(a1 + 32);
  return result;
}

uint64_t Radiosity.Specs.radiosity.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v2 = *(_QWORD *)(v1 + 112);
  v3 = *(_QWORD *)(v1 + 120);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 88);
  v4 = *(_OWORD *)(v1 + 96);
  *(_OWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 24) = v2;
  *(_QWORD *)(a1 + 32) = v3;
  swift_retain(v4);
  return swift_retain(v2);
}

__n128 Radiosity.Specs.radiosity.setter(uint64_t a1)
{
  uint64_t v1;
  __n128 result;
  __int128 v4;

  swift_release(*(_QWORD *)(v1 + 96));
  swift_release(*(_QWORD *)(v1 + 112));
  result = *(__n128 *)a1;
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 88) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 104) = v4;
  *(_QWORD *)(v1 + 120) = *(_QWORD *)(a1 + 32);
  return result;
}

uint64_t View.radiosity(specs:)(__int128 *a1, uint64_t a2, uint64_t a3)
{
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  char v9;
  uint64_t v10;
  _OWORD v12[9];
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _OWORD v21[8];
  __int128 v22;

  v5 = a1[5];
  v17 = a1[4];
  v18 = v5;
  v6 = a1[7];
  v19 = a1[6];
  v20 = v6;
  v7 = a1[1];
  v13 = *a1;
  v14 = v7;
  v8 = a1[3];
  v15 = a1[2];
  v16 = v8;
  LOBYTE(v12[0]) = 1;
  sub_1005779B8((uint64_t)a1);
  State.init(wrappedValue:)(v12, &type metadata for Bool);
  v9 = v21[0];
  v10 = *((_QWORD *)&v21[0] + 1);
  v21[4] = v17;
  v21[5] = v18;
  v21[6] = v19;
  v21[7] = v20;
  v21[0] = v13;
  v21[1] = v14;
  v21[2] = v15;
  v21[3] = v16;
  LOBYTE(v22) = v9;
  *((_QWORD *)&v22 + 1) = v10;
  v12[6] = v19;
  v12[7] = v20;
  v12[8] = v22;
  v12[2] = v15;
  v12[3] = v16;
  v12[4] = v17;
  v12[5] = v18;
  v12[0] = v13;
  v12[1] = v14;
  View.modifier<A>(_:)(v12, a2, &type metadata for Radiosity.ViewModifier, a3);
  return sub_100CB6E9C((uint64_t)v21);
}

double Radiosity.Specs.with(_:)@<D0>(void (*a1)(__int128 *)@<X0>, _OWORD *a2@<X8>)
{
  __int128 *v2;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  double result;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;

  v5 = v2[5];
  v18 = v2[4];
  v19 = v5;
  v6 = v2[7];
  v20 = v2[6];
  v21 = v6;
  v7 = v2[1];
  v14 = *v2;
  v15 = v7;
  v8 = v2[3];
  v16 = v2[2];
  v17 = v8;
  sub_1005779B8((uint64_t)v2);
  a1(&v14);
  v9 = v19;
  a2[4] = v18;
  a2[5] = v9;
  v10 = v21;
  a2[6] = v20;
  a2[7] = v10;
  v11 = v15;
  *a2 = v14;
  a2[1] = v11;
  result = *(double *)&v16;
  v13 = v17;
  a2[2] = v16;
  a2[3] = v13;
  return result;
}

__n128 sub_100CB6440()
{
  CGFloat tx;
  CGFloat ty;
  id v2;
  id v3;
  __n128 result;
  __n128 v5;
  __int128 v6;
  CGAffineTransform v7;
  CGAffineTransform v8;

  v8.a = 1.0;
  v8.b = 0.0;
  v8.c = 0.0;
  v8.d = 1.0;
  v8.tx = 0.0;
  v8.ty = 0.0;
  CGAffineTransformScale(&v7, &v8, 0.85, 0.85);
  v5 = *(__n128 *)&v7.c;
  v6 = *(_OWORD *)&v7.a;
  tx = v7.tx;
  ty = v7.ty;
  v2 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
  v3 = objc_msgSend(v2, "CGColor");

  result = v5;
  static Radiosity.Specs.containerDetailHeaderArtwork = v6;
  unk_10124FFA0 = v5;
  qword_10124FFB0 = *(_QWORD *)&tx;
  unk_10124FFB8 = *(_QWORD *)&ty;
  dword_10124FFC0 = 1050253722;
  qword_10124FFC8 = (uint64_t)v3;
  unk_10124FFD0 = 0x402E000000000000;
  qword_10124FFD8 = 0;
  unk_10124FFE0 = 0;
  qword_10124FFE8 = (uint64_t)sub_100CB6534;
  unk_10124FFF0 = 0;
  qword_10124FFF8 = (uint64_t)sub_100CB655C;
  unk_101250000 = 0;
  qword_101250008 = 0x4040000000000000;
  return result;
}

float sub_100CB6534(unint64_t a1)
{
  if (a1 > 2)
    return 0.42;
  else
    return flt_100EF31CC[a1];
}

double sub_100CB655C(unint64_t a1)
{
  if (a1 > 2)
    return 1.8;
  else
    return dbl_100EF31D8[a1];
}

uint64_t static Radiosity.Specs.containerDetailHeaderArtwork.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100CB66F0(&qword_1011DE278, (uint64_t)&static Radiosity.Specs.containerDetailHeaderArtwork, (uint64_t)sub_100CB6440, a1);
}

__n128 sub_100CB659C()
{
  CGFloat tx;
  CGFloat ty;
  id v2;
  id v3;
  __n128 result;
  __n128 v5;
  __int128 v6;
  CGAffineTransform v7;
  CGAffineTransform v8;

  v8.a = 1.0;
  v8.b = 0.0;
  v8.c = 0.0;
  v8.d = 1.0;
  v8.tx = 0.0;
  v8.ty = 0.0;
  CGAffineTransformScale(&v7, &v8, 0.94, 0.94);
  v5 = *(__n128 *)&v7.c;
  v6 = *(_OWORD *)&v7.a;
  tx = v7.tx;
  ty = v7.ty;
  v2 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
  v3 = objc_msgSend(v2, "CGColor");

  result = v5;
  static Radiosity.Specs.nowPlaying = v6;
  unk_101250020 = v5;
  qword_101250030 = *(_QWORD *)&tx;
  unk_101250038 = *(_QWORD *)&ty;
  dword_101250040 = 1053609165;
  qword_101250048 = (uint64_t)v3;
  unk_101250050 = 0x402E000000000000;
  qword_101250058 = 0;
  unk_101250060 = 0;
  qword_101250068 = (uint64_t)variable initialization expression of VerticalToggleSlider._maxValue;
  unk_101250070 = 0;
  qword_101250078 = (uint64_t)sub_100CB668C;
  unk_101250080 = 0;
  qword_101250088 = 0x4049000000000000;
  return result;
}

double sub_100CB668C()
{
  return 1.5;
}

__int128 *Radiosity.Specs.nowPlaying.unsafeMutableAddressor()
{
  if (qword_1011DE280 != -1)
    swift_once(&qword_1011DE280, sub_100CB659C);
  return &static Radiosity.Specs.nowPlaying;
}

uint64_t static Radiosity.Specs.nowPlaying.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100CB66F0(&qword_1011DE280, (uint64_t)&static Radiosity.Specs.nowPlaying, (uint64_t)sub_100CB659C, a1);
}

uint64_t sub_100CB66F0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*a1 != -1)
    swift_once(a1, a3);
  return sub_100CB6F08(a2, a4);
}

double Radiosity.Specs.pathShadow(for:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  int v6;
  uint64_t v7;
  uint64_t v8;
  id (*v9)(double, double, double, double, double);
  uint64_t v10;
  uint64_t v13;
  double result;
  __int128 v15;

  v6 = *(_DWORD *)(v4 + 48);
  v7 = *(_QWORD *)(v4 + 56);
  v8 = *(_QWORD *)(v4 + 64);
  v9 = *(id (**)(double, double, double, double, double))(v4 + 72);
  v10 = *(_QWORD *)(v4 + 80);
  if ((a3 & 1) != 0)
  {
    sub_1005779B8(v4);
  }
  else
  {
    v13 = swift_allocObject(&unk_10110E218, 32, 7);
    *(_QWORD *)(v13 + 16) = a2;
    *(_QWORD *)(v13 + 24) = a1;
    sub_1005779B8(v4);
    sub_10004BA30((uint64_t)v9, v10);
    v9 = sub_100CB6F4C;
    v10 = v13;
  }
  result = *(double *)(v4 + 120);
  v15 = *(_OWORD *)(v4 + 16);
  *(_OWORD *)a4 = *(_OWORD *)v4;
  *(_OWORD *)(a4 + 16) = v15;
  *(_OWORD *)(a4 + 32) = *(_OWORD *)(v4 + 32);
  *(_DWORD *)(a4 + 48) = v6;
  *(_QWORD *)(a4 + 56) = v7;
  *(_QWORD *)(a4 + 64) = v8;
  *(_QWORD *)(a4 + 72) = v9;
  *(_QWORD *)(a4 + 80) = v10;
  *(_OWORD *)(a4 + 88) = *(_OWORD *)(v4 + 88);
  *(_OWORD *)(a4 + 104) = *(_OWORD *)(v4 + 104);
  *(double *)(a4 + 120) = result;
  return result;
}

id sub_100CB6808(uint64_t a1, double a2, double a3, double a4, double a5, double a6, double a7)
{
  void *v14;
  id v15;
  id v16;
  id v17;
  double v18;
  double v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v32[6];

  v14 = (void *)objc_opt_self(UIBezierPath);
  v15 = objc_msgSend(v14, "bezierPathWithRoundedRect:byRoundingCorners:cornerRadii:", a1, a2, a3, a4, a5, a7, a7);
  v16 = objc_msgSend(v15, "CGPath");

  v17 = objc_msgSend(v14, "bezierPathWithRoundedRect:cornerRadius:", a2, a3, a4, a5, a7);
  v18 = UIEdgeInsets.init(edges:inset:)(15, -(a7 + a7 + a6));
  v20 = objc_msgSend(v14, "bezierPathWithRoundedRect:cornerRadius:", sub_10004D6A0(a2, a3, a4, a5, v18, v19));
  CGPathCreateMutable();
  v21 = objc_msgSend(v17, "CGPath");
  v32[0] = 0x3FF0000000000000;
  v32[1] = 0;
  v32[2] = 0;
  v32[3] = 0x3FF0000000000000;
  v32[4] = 0;
  v32[5] = 0;
  CGMutablePathRef.addPath(_:transform:)(v21, v32, v22, v23, v24, v25);

  v26 = objc_msgSend(v20, "CGPath");
  CGMutablePathRef.addPath(_:transform:)(v26, v32, v27, v28, v29, v30);

  return v16;
}

_BYTE *sub_100CB69C0(_BYTE *result, _QWORD *(*a2)(uint64_t *__return_ptr))
{
  _BYTE *v2;
  char v3;
  uint64_t v4;

  v2 = result;
  if (*result == 1)
  {
    result = a2(&v4);
    v3 = v4;
  }
  else
  {
    v3 = 0;
  }
  *v2 = v3;
  return result;
}

__n128 sub_100CB6A0C@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  __int128 v8;
  _BYTE v9[24];

  v3 = v1 + direct field offset for Radiosity.UIView.specs;
  swift_beginAccess(v3, v9, 0, 0);
  v4 = *(_OWORD *)(v3 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(v3 + 64);
  *(_OWORD *)(a1 + 80) = v4;
  v5 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(v3 + 96);
  *(_OWORD *)(a1 + 112) = v5;
  v6 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v6;
  result = *(__n128 *)(v3 + 32);
  v8 = *(_OWORD *)(v3 + 48);
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v8;
  return result;
}

_OWORD *sub_100CB6A70(_OWORD *a1, _OWORD *a2)
{
  *a2 = *a1;
  return a2;
}

uint64_t type metadata accessor for Radiosity.UIView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Radiosity.UIView);
}

uint64_t sub_100CB6A8C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_100CB6AA0()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  NSString v3;
  id v4;
  Class isa;
  Class v6;

  static String._unconditionallyBridgeFromObjectiveC(_:)(kCAFilterGaussianBlur);
  v1 = v0;
  v2 = objc_allocWithZone((Class)CAFilter);
  v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v1);
  v4 = objc_msgSend(v2, "initWithType:", v3);

  isa = Double._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v4, "setValue:forKey:", isa, kCAFilterInputRadius);

  v6 = Bool._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v4, "setValue:forKey:", v6, kCAFilterInputNormalizeEdges);

  return v4;
}

id sub_100CB6B88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  objc_class *v13;
  void *v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  id v20;
  _OWORD v22[8];

  v2 = v1;
  v3 = a1;
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin();
  v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for _UIHostingView(255, v4, *(_QWORD *)(v9 + 24), v6);
  v13 = (objc_class *)type metadata accessor for Radiosity.UIView(0, v10, v11, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v2, v4);
  v14 = (void *)_UIHostingView.__allocating_init(rootView:)(v8);
  v15 = *(int *)(v3 + 36);
  LOBYTE(v3) = *(_BYTE *)(v2 + *(int *)(v3 + 40));
  v16 = *(_OWORD *)(v2 + v15 + 80);
  v22[4] = *(_OWORD *)(v2 + v15 + 64);
  v22[5] = v16;
  v17 = *(_OWORD *)(v2 + v15 + 112);
  v22[6] = *(_OWORD *)(v2 + v15 + 96);
  v22[7] = v17;
  v18 = *(_OWORD *)(v2 + v15 + 16);
  v22[0] = *(_OWORD *)(v2 + v15);
  v22[1] = v18;
  v19 = *(_OWORD *)(v2 + v15 + 48);
  v22[2] = *(_OWORD *)(v2 + v15 + 32);
  v22[3] = v19;
  sub_1005779B8((uint64_t)v22);
  v20 = objc_allocWithZone(v13);
  return Radiosity.UIView.init(content:isRadiosityEnabled:specs:)(v14, v3, v22);
}

void sub_100CB6C94(void *a1, uint64_t a2)
{
  uint64_t v2;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _OWORD v14[8];

  v5 = __chkstk_darwin();
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v8 + 16))(v7, v2, v5);
  dispatch thunk of _UIHostingView.rootView.setter(v7);
  objc_msgSend(a1, "invalidateIntrinsicContentSize");
  v9 = (_OWORD *)(v2 + *(int *)(a2 + 36));
  v10 = v9[5];
  v14[4] = v9[4];
  v14[5] = v10;
  v11 = v9[7];
  v14[6] = v9[6];
  v14[7] = v11;
  v12 = v9[1];
  v14[0] = *v9;
  v14[1] = v12;
  v13 = v9[3];
  v14[2] = v9[2];
  v14[3] = v13;
  sub_1005779B8((uint64_t)v14);
  Radiosity.UIView.specs.setter(v14);
  Radiosity.UIView.isRadiosityEnabled.setter(*(_BYTE *)(v2 + *(int *)(a2 + 40)));
}

double sub_100CB6D7C(void *a1)
{
  double result;

  objc_msgSend(a1, "intrinsicContentSize");
  return result;
}

void sub_100CB6DC0(void *a1)
{
  id v1;
  id v2;

  v1 = objc_msgSend(a1, "traitCollection");
  v2 = objc_msgSend(v1, "userInterfaceStyle");

  sub_100CB5F58((uint64_t)v2);
}

void sub_100CB6E18()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100E2B820, "MusicCoreUI/Radiosity.swift", 27, 2, 142, 0);
  __break(1u);
}

void sub_100CB6E70()
{
  _swift_stdlib_reportUnimplementedInitializer("MusicCoreUI.UIView", 18, "init(frame:)", 12, 0);
  __break(1u);
}

uint64_t sub_100CB6E9C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 72);
  v3 = *(_QWORD *)(a1 + 80);

  sub_10004BA30(v2, v3);
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_100CB6F08(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for Radiosity.Specs(a2, a1);
  return a2;
}

uint64_t sub_100CB6F3C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_100CB6F4C(double a1, double a2, double a3, double a4, double a5)
{
  uint64_t v5;

  return sub_100CB6808(*(_QWORD *)(v5 + 16), a1, a2, a3, a4, a5, *(double *)(v5 + 24));
}

uint64_t sub_100CB6F58(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of Radiosity.ViewModifier.body(content:)>>, 1);
}

ValueMetadata *type metadata accessor for Radiosity()
{
  return &type metadata for Radiosity;
}

double destroy for Radiosity.ViewModifier(uint64_t a1)
{
  double result;

  if (*(_QWORD *)(a1 + 72))
    swift_release(*(_QWORD *)(a1 + 80));
  swift_release(*(_QWORD *)(a1 + 96));
  swift_release(*(_QWORD *)(a1 + 112));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 136)).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for Radiosity.ViewModifier(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  id v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  v5 = *(void **)(a2 + 56);
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 64) = v6;
  v8 = (_OWORD *)(a2 + 72);
  v7 = *(_QWORD *)(a2 + 72);
  v9 = v5;
  if (v7)
  {
    v10 = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 72) = v7;
    *(_QWORD *)(a1 + 80) = v10;
    swift_retain(v10);
  }
  else
  {
    *(_OWORD *)(a1 + 72) = *v8;
  }
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v11 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 96) = v11;
  v13 = *(_QWORD *)(a2 + 112);
  v12 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = v13;
  *(_QWORD *)(a1 + 120) = v12;
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  v14 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 136) = v14;
  swift_retain(v11);
  swift_retain(v13);
  swift_retain(v14);
  return a1;
}

uint64_t assignWithCopy for Radiosity.ViewModifier(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  v4 = *(void **)(a2 + 56);
  v5 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v4;
  v6 = v4;

  v7 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v8 = *(_QWORD *)(a2 + 72);
  if (!v7)
  {
    if (v8)
    {
      v10 = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 72) = v8;
      *(_QWORD *)(a1 + 80) = v10;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    goto LABEL_8;
  }
  if (!v8)
  {
    sub_10004FF60(a1 + 72, qword_1011E5F78);
    goto LABEL_7;
  }
  v9 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v8;
  *(_QWORD *)(a1 + 80) = v9;
  swift_retain();
  swift_release();
LABEL_8:
  v11 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v11;
  swift_retain();
  swift_release();
  v12 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v12;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for Radiosity.ViewModifier(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(__n128 *)(a1 + 80) = result;
  *(_OWORD *)(a1 + 96) = v6;
  return result;
}

uint64_t assignWithTake for Radiosity.ViewModifier(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  v5 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);

  v6 = *(_QWORD *)(a2 + 72);
  v7 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  if (!v7)
    goto LABEL_5;
  if (!v6)
  {
    sub_10004FF60(a1 + 72, qword_1011E5F78);
LABEL_5:
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    goto LABEL_6;
  }
  v8 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v6;
  *(_QWORD *)(a1 + 80) = v8;
  swift_release();
LABEL_6:
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_release();
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  swift_release();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for Radiosity.ViewModifier(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 144))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Radiosity.ViewModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 144) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 56) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 144) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Radiosity.ViewModifier()
{
  return &type metadata for Radiosity.ViewModifier;
}

uint64_t sub_100CB7378(uint64_t a1)
{
  _QWORD v2[5];

  v2[0] = "\b";
  v2[1] = &unk_100EF3018;
  v2[2] = &unk_100EF3030;
  v2[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
  return swift_initClassMetadata2(a1, 0, 5, v2, a1 + 88);
}

double destroy for Radiosity.Specs(uint64_t a1)
{
  double result;

  if (*(_QWORD *)(a1 + 72))
    swift_release(*(_QWORD *)(a1 + 80));
  swift_release(*(_QWORD *)(a1 + 96));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 112)).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for Radiosity.Specs(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  id v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  v5 = *(void **)(a2 + 56);
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 64) = v6;
  v8 = (_OWORD *)(a2 + 72);
  v7 = *(_QWORD *)(a2 + 72);
  v9 = v5;
  if (v7)
  {
    v10 = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 72) = v7;
    *(_QWORD *)(a1 + 80) = v10;
    swift_retain(v10);
  }
  else
  {
    *(_OWORD *)(a1 + 72) = *v8;
  }
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v11 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 96) = v11;
  v13 = *(_QWORD *)(a2 + 112);
  v12 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = v13;
  *(_QWORD *)(a1 + 120) = v12;
  swift_retain(v11);
  swift_retain(v13);
  return a1;
}

uint64_t assignWithCopy for Radiosity.Specs(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  v4 = *(void **)(a2 + 56);
  v5 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v4;
  v6 = v4;

  v7 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v8 = *(_QWORD *)(a2 + 72);
  if (!v7)
  {
    if (v8)
    {
      v10 = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 72) = v8;
      *(_QWORD *)(a1 + 80) = v10;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    goto LABEL_8;
  }
  if (!v8)
  {
    sub_10004FF60(a1 + 72, qword_1011E5F78);
    goto LABEL_7;
  }
  v9 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v8;
  *(_QWORD *)(a1 + 80) = v9;
  swift_retain();
  swift_release();
LABEL_8:
  v11 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v11;
  swift_retain();
  swift_release();
  v12 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v12;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  return a1;
}

__n128 initializeWithTake for Radiosity.Specs(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

uint64_t assignWithTake for Radiosity.Specs(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  v5 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);

  v6 = *(_QWORD *)(a2 + 72);
  v7 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  if (!v7)
    goto LABEL_5;
  if (!v6)
  {
    sub_10004FF60(a1 + 72, qword_1011E5F78);
LABEL_5:
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    goto LABEL_6;
  }
  v8 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v6;
  *(_QWORD *)(a1 + 80) = v8;
  swift_release();
LABEL_6:
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_release();
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  swift_release();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  return a1;
}

uint64_t getEnumTagSinglePayload for Radiosity.Specs(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 128))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Radiosity.Specs(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 128) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 56) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 128) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Radiosity.Specs()
{
  return &type metadata for Radiosity.Specs;
}

double destroy for Radiosity.Specs.Shadow(uint64_t a1)
{
  double result;

  if (*(_QWORD *)(a1 + 24))
    *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 32)).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for Radiosity.Specs.Shadow(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  id v8;
  uint64_t v9;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v7 = (_OWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 24);
  v8 = v4;
  if (v6)
  {
    v9 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 32) = v9;
    swift_retain(v9);
  }
  else
  {
    *(_OWORD *)(a1 + 24) = *v7;
  }
  return a1;
}

uint64_t assignWithCopy for Radiosity.Specs.Shadow(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  v6 = v4;

  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  if (!v7)
  {
    if (v8)
    {
      v10 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 24) = v8;
      *(_QWORD *)(a1 + 32) = v10;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    return a1;
  }
  if (!v8)
  {
    sub_10004FF60(a1 + 24, qword_1011E5F78);
    goto LABEL_7;
  }
  v9 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = v9;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for Radiosity.Specs.Shadow(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v4 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  if (!v6)
    goto LABEL_5;
  if (!v5)
  {
    sub_10004FF60(a1 + 24, qword_1011E5F78);
LABEL_5:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    return a1;
  }
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v7;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for Radiosity.Specs.Shadow()
{
  return &type metadata for Radiosity.Specs.Shadow;
}

double destroy for Radiosity.Specs.Shadow.DrawMode(_QWORD *a1)
{
  double result;

  if (*a1 >= 0xFFFFFFFFuLL)
    *(_QWORD *)&result = swift_release(a1[1]).n128_u64[0];
  return result;
}

uint64_t _s11MusicCoreUI9RadiosityO5SpecsV6ShadowV8DrawModeOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    v3 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_retain(v3);
  }
  return a1;
}

unint64_t *assignWithCopy for Radiosity.Specs.Shadow.DrawMode(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v4 = *a2;
  if (*a1 < 0xFFFFFFFF)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      v7 = a2[1];
      *a1 = v4;
      a1[1] = v7;
      swift_retain(v7);
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_release(a1[1]);
    goto LABEL_7;
  }
  v5 = a2[1];
  v6 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  swift_retain(v5);
  swift_release(v6);
  return a1;
}

_QWORD *assignWithTake for Radiosity.Specs.Shadow.DrawMode(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  if (*a1 < 0xFFFFFFFFuLL)
    goto LABEL_5;
  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {
    swift_release(a1[1]);
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  v4 = *(_QWORD *)(a2 + 8);
  v5 = a1[1];
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  swift_release(v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for Radiosity.Specs.Shadow.DrawMode(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for Radiosity.Specs.Shadow.DrawMode(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for Radiosity.Specs.Shadow.DrawMode()
{
  return &type metadata for Radiosity.Specs.Shadow.DrawMode;
}

uint64_t initializeWithCopy for Radiosity.Specs.Radiosity(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 8) = v3;
  v5 = *(_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v4;
  swift_retain(v3);
  swift_retain(v5);
  return a1;
}

_QWORD *assignWithCopy for Radiosity.Specs.Radiosity(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[3];
  v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_retain(v6);
  swift_release(v7);
  a1[4] = a2[4];
  return a1;
}

uint64_t assignWithTake for Radiosity.Specs.Radiosity(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  v5 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release(v5);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for Radiosity.Specs.Radiosity()
{
  return &type metadata for Radiosity.Specs.Radiosity;
}

unint64_t sub_100CB7C88()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E6000;
  if (!qword_1011E6000)
  {
    v1 = sub_100044B54(&qword_1011E5F48);
    sub_100049F28(&qword_1011E6008, &qword_1011E5F38, (uint64_t)&unk_100EF3178);
    sub_100049F28(&qword_1011E6010, &qword_1011E6018, (uint64_t)&protocol conformance descriptor for _PreferenceActionModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E6000);
  }
  return result;
}

uint64_t sub_100CB7D24(_QWORD *a1)
{
  uint64_t v1;

  v1 = type metadata accessor for ModifiedContent(255, *a1, &type metadata for Radiosity.ViewModifier);
  sub_100CB7D78();
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
}

unint64_t sub_100CB7D78()
{
  unint64_t result;

  result = qword_1011E6020[0];
  if (!qword_1011E6020[0])
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Radiosity.ViewModifier, &type metadata for Radiosity.ViewModifier);
    atomic_store(result, qword_1011E6020);
  }
  return result;
}

uint64_t sub_100CB7DBC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100EF3030;
    v4[2] = &unk_100EF3018;
    swift_initStructMetadata(a1, 0, 3, v4, a1 + 32);
    return 0;
  }
  return result;
}

uint64_t *sub_100CB7E3C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  __int128 v12;
  __int128 v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 129 > 0x18)
  {
    v9 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v12 = *(_OWORD *)(v11 + 32);
    v13 = *(_OWORD *)v11;
    *(_OWORD *)(v10 + 16) = *(_OWORD *)(v11 + 16);
    *(_OWORD *)(v10 + 32) = v12;
    *(_OWORD *)v10 = v13;
    *(_DWORD *)(v10 + 48) = *(_DWORD *)(v11 + 48);
    v14 = *(void **)(v11 + 56);
    *(_QWORD *)(v10 + 56) = v14;
    *(_QWORD *)(v10 + 64) = *(_QWORD *)(v11 + 64);
    v15 = *(_QWORD *)(v11 + 72);
    v16 = v14;
    if (v15)
    {
      v17 = *(_QWORD *)(v11 + 80);
      *(_QWORD *)(v10 + 72) = v15;
      *(_QWORD *)(v10 + 80) = v17;
      swift_retain(v17);
    }
    else
    {
      *(_OWORD *)(v10 + 72) = *(_OWORD *)(v11 + 72);
    }
    v18 = *(_QWORD *)(v11 + 96);
    *(_QWORD *)(v10 + 88) = *(_QWORD *)(v11 + 88);
    *(_QWORD *)(v10 + 96) = v18;
    v9 = *(_QWORD *)(v11 + 112);
    *(_QWORD *)(v10 + 104) = *(_QWORD *)(v11 + 104);
    *(_QWORD *)(v10 + 112) = v9;
    *(_QWORD *)(v10 + 120) = *(_QWORD *)(v11 + 120);
    *(_BYTE *)(v10 + 128) = *(_BYTE *)(v11 + 128);
    swift_retain(v18);
  }
  swift_retain(v9);
  return v4;
}

double sub_100CB7F68(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  double result;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = (a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;

  if (*(_QWORD *)(v4 + 72))
    swift_release(*(_QWORD *)(v4 + 80));
  swift_release(*(_QWORD *)(v4 + 96));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(v4 + 112)).n128_u64[0];
  return result;
}

uint64_t sub_100CB7FC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  void *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_OWORD *)v8;
  v10 = *(_OWORD *)(v8 + 32);
  *(_OWORD *)(v7 + 16) = *(_OWORD *)(v8 + 16);
  *(_OWORD *)(v7 + 32) = v10;
  *(_OWORD *)v7 = v9;
  *(_DWORD *)(v7 + 48) = *(_DWORD *)(v8 + 48);
  v11 = *(void **)(v8 + 56);
  *(_QWORD *)(v7 + 56) = v11;
  *(_QWORD *)(v7 + 64) = *(_QWORD *)(v8 + 64);
  v12 = *(_QWORD *)(v8 + 72);
  v13 = v11;
  if (v12)
  {
    v14 = *(_QWORD *)(v8 + 80);
    *(_QWORD *)(v7 + 72) = v12;
    *(_QWORD *)(v7 + 80) = v14;
    swift_retain(v14);
  }
  else
  {
    *(_OWORD *)(v7 + 72) = *(_OWORD *)(v8 + 72);
  }
  v15 = *(_QWORD *)(v8 + 96);
  *(_QWORD *)(v7 + 88) = *(_QWORD *)(v8 + 88);
  *(_QWORD *)(v7 + 96) = v15;
  v16 = *(_QWORD *)(v8 + 112);
  *(_QWORD *)(v7 + 104) = *(_QWORD *)(v8 + 104);
  *(_QWORD *)(v7 + 112) = v16;
  *(_QWORD *)(v7 + 120) = *(_QWORD *)(v8 + 120);
  *(_BYTE *)(v7 + 128) = *(_BYTE *)(v8 + 128);
  swift_retain(v15);
  swift_retain(v16);
  return a1;
}

uint64_t sub_100CB80A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_QWORD *)(v7 + 8) = *(_QWORD *)(v8 + 8);
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v8 + 16);
  *(_QWORD *)(v7 + 24) = *(_QWORD *)(v8 + 24);
  *(_QWORD *)(v7 + 32) = *(_QWORD *)(v8 + 32);
  *(_QWORD *)(v7 + 40) = *(_QWORD *)(v8 + 40);
  *(_DWORD *)(v7 + 48) = *(_DWORD *)(v8 + 48);
  v9 = *(void **)(v8 + 56);
  v10 = *(void **)(v7 + 56);
  *(_QWORD *)(v7 + 56) = v9;
  v11 = v9;

  *(_QWORD *)(v7 + 64) = *(_QWORD *)(v8 + 64);
  v12 = *(_QWORD *)(v8 + 72);
  if (!*(_QWORD *)(v7 + 72))
  {
    if (v12)
    {
      v14 = *(_QWORD *)(v8 + 80);
      *(_QWORD *)(v7 + 72) = v12;
      *(_QWORD *)(v7 + 80) = v14;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(v7 + 72) = *(_OWORD *)(v8 + 72);
    goto LABEL_8;
  }
  if (!v12)
  {
    sub_10004FF60(v7 + 72, qword_1011E5F78);
    goto LABEL_7;
  }
  v13 = *(_QWORD *)(v8 + 80);
  *(_QWORD *)(v7 + 72) = v12;
  *(_QWORD *)(v7 + 80) = v13;
  swift_retain();
  swift_release();
LABEL_8:
  v15 = *(_QWORD *)(v8 + 96);
  *(_QWORD *)(v7 + 88) = *(_QWORD *)(v8 + 88);
  *(_QWORD *)(v7 + 96) = v15;
  swift_retain();
  swift_release();
  v16 = *(_QWORD *)(v8 + 112);
  *(_QWORD *)(v7 + 104) = *(_QWORD *)(v8 + 104);
  *(_QWORD *)(v7 + 112) = v16;
  swift_retain();
  swift_release();
  *(_QWORD *)(v7 + 120) = *(_QWORD *)(v8 + 120);
  *(_BYTE *)(v7 + 128) = *(_BYTE *)(v8 + 128);
  return a1;
}

uint64_t sub_100CB81F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_OWORD *)(v8 + 48);
  v11 = *(_OWORD *)v8;
  v10 = *(_OWORD *)(v8 + 16);
  *(_OWORD *)(v7 + 32) = *(_OWORD *)(v8 + 32);
  *(_OWORD *)(v7 + 48) = v9;
  *(_OWORD *)v7 = v11;
  *(_OWORD *)(v7 + 16) = v10;
  v12 = *(_OWORD *)(v8 + 112);
  v14 = *(_OWORD *)(v8 + 64);
  v13 = *(_OWORD *)(v8 + 80);
  *(_OWORD *)(v7 + 96) = *(_OWORD *)(v8 + 96);
  *(_OWORD *)(v7 + 112) = v12;
  *(_OWORD *)(v7 + 64) = v14;
  *(_OWORD *)(v7 + 80) = v13;
  *(_BYTE *)(v7 + 128) = *(_BYTE *)(v8 + 128);
  return a1;
}

uint64_t sub_100CB8270(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_QWORD *)(v7 + 8) = *(_QWORD *)(v8 + 8);
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v8 + 16);
  *(_QWORD *)(v7 + 24) = *(_QWORD *)(v8 + 24);
  *(_QWORD *)(v7 + 32) = *(_QWORD *)(v8 + 32);
  *(_QWORD *)(v7 + 40) = *(_QWORD *)(v8 + 40);
  *(_DWORD *)(v7 + 48) = *(_DWORD *)(v8 + 48);
  v9 = *(void **)(v7 + 56);
  *(_QWORD *)(v7 + 56) = *(_QWORD *)(v8 + 56);

  *(_QWORD *)(v7 + 64) = *(_QWORD *)(v8 + 64);
  v10 = *(_QWORD *)(v8 + 72);
  if (!*(_QWORD *)(v7 + 72))
    goto LABEL_5;
  if (!v10)
  {
    sub_10004FF60(v7 + 72, qword_1011E5F78);
LABEL_5:
    *(_OWORD *)(v7 + 72) = *(_OWORD *)(v8 + 72);
    goto LABEL_6;
  }
  v11 = *(_QWORD *)(v8 + 80);
  *(_QWORD *)(v7 + 72) = v10;
  *(_QWORD *)(v7 + 80) = v11;
  swift_release();
LABEL_6:
  *(_OWORD *)(v7 + 88) = *(_OWORD *)(v8 + 88);
  swift_release();
  *(_OWORD *)(v7 + 104) = *(_OWORD *)(v8 + 104);
  swift_release();
  *(_QWORD *)(v7 + 120) = *(_QWORD *)(v8 + 120);
  *(_BYTE *)(v7 + 128) = *(_BYTE *)(v8 + 128);
  return a1;
}

uint64_t sub_100CB8390(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unint64_t v13;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v13 = *(_QWORD *)(((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) + 0x38);
      if (v13 >= 0xFFFFFFFF)
        LODWORD(v13) = -1;
      return (v13 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    v8 = (a2 - v6 + 255) >> (8 * (((v7 + 7) & 0xF8) - 127));
    if ((((_DWORD)v7 + 7) & 0xFFFFFFF8) + 129 < 4)
      v9 = v8 + 1;
    else
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    return ((uint64_t (*)(void))((char *)&loc_100CB8418 + 4 * byte_100EF2F70[v11]))();
  }
}

void sub_100CB84AC(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 129;
  if (v6 >= a3)
  {
    v10 = 0;
    if (v6 >= a2)
      goto LABEL_17;
  }
  else
  {
    if (v7 <= 3)
      v8 = ((a3 - v6 + 255) >> (8 * (((*(_BYTE *)(v5 + 64) + 7) & 0xF8) - 127))) + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    if (v6 >= a2)
LABEL_17:
      __asm { BR              X12 }
  }
  if (v7 >= 4)
    v11 = ~v6 + a2;
  else
    v11 = (~(_BYTE)v6 + a2);
  bzero(a1, v7);
  if ((_DWORD)v7 == 1)
    *a1 = v11;
  else
    *(_DWORD *)a1 = v11;
  __asm { BR              X10 }
}

void sub_100CB85C8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x100CB8664);
}

void sub_100CB85D0(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x100CB85D8);
  JUMPOUT(0x100CB8664);
}

void sub_100CB861C()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x100CB8664);
}

void sub_100CB8624()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x100CB8664);
}

uint64_t sub_100CB862C(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)(v6 + v7) = 0;
  if (!a2)
    goto LABEL_6;
  if (a3 < 0x7FFFFFFF)
  {
    if (a2 < 0)
      JUMPOUT(0x100CB8638);
    *(_QWORD *)(((v6 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 56) = (a2 - 1);
LABEL_6:
    JUMPOUT(0x100CB8664);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v6);
}

uint64_t type metadata accessor for Radiosity.View(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000AF454(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Radiosity.View);
}

ValueMetadata *type metadata accessor for RadiosityEnabledPreferenceKey()
{
  return &type metadata for RadiosityEnabledPreferenceKey;
}

uint64_t sub_100CB8698(uint64_t a1)
{
  return swift_getWitnessTable(&unk_100EF3178, a1);
}

uint64_t sub_100CB86AC()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 88))
    swift_release(*(_QWORD *)(v0 + 96));
  swift_release(*(_QWORD *)(v0 + 112));
  swift_release(*(_QWORD *)(v0 + 128));
  swift_release(*(_QWORD *)(v0 + 152));
  return swift_deallocObject(v0, 160, 7);
}

uint64_t sub_100CB86F8(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v5;
  __int128 v6;

  v2 = *a1;
  v6 = *(_OWORD *)(v1 + 144);
  v5 = v2;
  v3 = sub_100007E8C(&qword_1011E1B98);
  return State.wrappedValue.setter(&v5, v3);
}

unint64_t sub_100CB8744()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011DEF88;
  if (!qword_1011DEF88)
  {
    v1 = objc_opt_self(CAFilter);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1011DEF88);
  }
  return result;
}

uint64_t *sub_100CB8780(uint64_t *a1)
{
  sub_100048AAC(*a1, a1[1]);
  return a1;
}

uint64_t *sub_100CB87AC(uint64_t *a1)
{
  sub_10004BA30(*a1, a1[1]);
  return a1;
}

uint64_t sub_100CB87D8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for ColorScheme(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return EnvironmentValues.colorScheme.setter(v4);
}

uint64_t property wrapper backing initializer of Reactions.StackView.Model.reaction(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD v4[2];

  v4[0] = a1;
  v4[1] = a2;
  v2 = sub_100007E8C(&qword_1011E66B0);
  return Published.init(initialValue:)(v4, v2);
}

uint64_t Reactions.StackView.Model.reaction.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100EF31F0);
  v2 = swift_getKeyPath(&unk_100EF3218);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

double sub_100CB8908@<D0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  __int128 v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100EF31F0);
  v5 = swift_getKeyPath(&unk_100EF3218);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  result = *(double *)&v7;
  *a2 = v7;
  return result;
}

uint64_t sub_100CB8988(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  _QWORD v8[2];

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  KeyPath = swift_getKeyPath(&unk_100EF31F0);
  v6 = swift_getKeyPath(&unk_100EF3218);
  v8[0] = v3;
  v8[1] = v2;
  swift_bridgeObjectRetain();
  swift_retain(v4);
  return static Published.subscript.setter(v8, v4, KeyPath, v6);
}

uint64_t Reactions.StackView.Model.reaction.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v6;
  _QWORD v8[2];

  KeyPath = swift_getKeyPath(&unk_100EF31F0);
  v6 = swift_getKeyPath(&unk_100EF3218);
  v8[0] = a1;
  v8[1] = a2;
  swift_retain(v2);
  return static Published.subscript.setter(v8, v2, KeyPath, v6);
}

void (*Reactions.StackView.Model.reaction.modify(_QWORD *a1))(_QWORD *)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_100EF31F0);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_100EF3218);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_100ACA524;
}

uint64_t Reactions.StackView.Model.$reaction.getter()
{
  return sub_100ACA828(&OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__reaction, &qword_1011E60C0);
}

uint64_t Reactions.StackView.Model.$reaction.setter(uint64_t a1)
{
  return sub_100ACA8A8(a1, &qword_1011E60C8, &OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__reaction, &qword_1011E60C0);
}

void (*Reactions.StackView.Model.$reaction.modify(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_100007E8C(&qword_1011E60C8);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__reaction;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_100007E8C(&qword_1011E60C0);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_100ACA620;
}

uint64_t Reactions.StackView.Model.count.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100EF3238);
  v2 = swift_getKeyPath(&unk_100EF3260);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

void sub_100CB8C64(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100EF3238);
  v5 = swift_getKeyPath(&unk_100EF3260);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  *a2 = v6;
}

uint64_t sub_100CB8CE4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100EF3238);
  v5 = swift_getKeyPath(&unk_100EF3260);
  v7 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t Reactions.StackView.Model.count.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v6;

  KeyPath = swift_getKeyPath(&unk_100EF3238);
  v4 = swift_getKeyPath(&unk_100EF3260);
  v6 = a1;
  swift_retain(v1);
  return static Published.subscript.setter(&v6, v1, KeyPath, v4);
}

void (*Reactions.StackView.Model.count.modify(_QWORD *a1))(_QWORD *)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_100EF3238);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_100EF3260);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_100ACA524;
}

uint64_t Reactions.StackView.Model.$count.getter()
{
  return sub_100ACA828(&OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__count, &qword_1011E60D8);
}

uint64_t Reactions.StackView.Model.$count.setter(uint64_t a1)
{
  return sub_100ACA8A8(a1, &qword_1011E60E0, &OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__count, &qword_1011E60D8);
}

void (*Reactions.StackView.Model.$count.modify(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_100007E8C(&qword_1011E60E0);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__count;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_100007E8C(&qword_1011E60D8);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_100ACA620;
}

uint64_t Reactions.StackView.Model.userImage.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100EF3280);
  v2 = swift_getKeyPath(&unk_100EF32A8);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

void sub_100CB8FA4(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100EF3280);
  v5 = swift_getKeyPath(&unk_100EF32A8);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  *a2 = v6;
}

uint64_t sub_100CB9024(void **a1, uint64_t *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  id v6;
  void *v8;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100EF3280);
  v5 = swift_getKeyPath(&unk_100EF32A8);
  v8 = v2;
  v6 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v8, v3, KeyPath, v5);
}

uint64_t Reactions.StackView.Model.userImage.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v6;

  KeyPath = swift_getKeyPath(&unk_100EF3280);
  v4 = swift_getKeyPath(&unk_100EF32A8);
  v6 = a1;
  swift_retain(v1);
  return static Published.subscript.setter(&v6, v1, KeyPath, v4);
}

void (*Reactions.StackView.Model.userImage.modify(_QWORD *a1))(_QWORD *)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_100EF3280);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_100EF32A8);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_100ACA524;
}

uint64_t Reactions.StackView.Model.$userImage.getter()
{
  return sub_100ACA828(&OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__userImage, (uint64_t *)&unk_1011E4A10);
}

uint64_t Reactions.StackView.Model.$userImage.setter(uint64_t a1)
{
  return sub_100ACA8A8(a1, &qword_1011E60F0, &OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__userImage, (uint64_t *)&unk_1011E4A10);
}

void (*Reactions.StackView.Model.$userImage.modify(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_100007E8C(&qword_1011E60F0);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__userImage;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_100007E8C((uint64_t *)&unk_1011E4A10);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_100ACA620;
}

uint64_t Reactions.StackView.Model.isReacting.getter()
{
  return sub_1003E805C((uint64_t)&unk_100EF32C8, (uint64_t)&unk_100EF32F0);
}

uint64_t sub_100CB928C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1003F0944(a1, (uint64_t)&unk_100EF32C8, (uint64_t)&unk_100EF32F0, a2);
}

uint64_t sub_100CB92B0(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1003F08C4(a1, a2, a3, a4, (uint64_t)&unk_100EF32C8, (uint64_t)&unk_100EF32F0);
}

uint64_t Reactions.StackView.Model.isReacting.setter(char a1)
{
  return sub_100CB94C8(a1, (uint64_t)&unk_100EF32C8, (uint64_t)&unk_100EF32F0);
}

void (*Reactions.StackView.Model.isReacting.modify(_QWORD *a1))(_QWORD *)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_100EF32C8);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_100EF32F0);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_100ACA524;
}

uint64_t Reactions.StackView.Model.$isReacting.getter()
{
  return sub_100ACA828(&OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__isReacting, &qword_1011E3070);
}

uint64_t Reactions.StackView.Model.$isReacting.setter(uint64_t a1)
{
  return sub_100ACA8A8(a1, &qword_1011E6100, &OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__isReacting, &qword_1011E3070);
}

void (*Reactions.StackView.Model.$isReacting.modify(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_100007E8C(&qword_1011E6100);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__isReacting;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_100007E8C(&qword_1011E3070);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_100ACA620;
}

uint64_t Reactions.StackView.Model.hasAnimatedBackground.getter()
{
  return sub_1003E805C((uint64_t)&unk_100EF3310, (uint64_t)&unk_100EF3338);
}

uint64_t sub_100CB946C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1003F0944(a1, (uint64_t)&unk_100EF3310, (uint64_t)&unk_100EF3338, a2);
}

uint64_t sub_100CB9490(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1003F08C4(a1, a2, a3, a4, (uint64_t)&unk_100EF3310, (uint64_t)&unk_100EF3338);
}

uint64_t Reactions.StackView.Model.hasAnimatedBackground.setter(char a1)
{
  return sub_100CB94C8(a1, (uint64_t)&unk_100EF3310, (uint64_t)&unk_100EF3338);
}

uint64_t sub_100CB94C8(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v7;
  char v9;

  KeyPath = swift_getKeyPath(a2);
  v7 = swift_getKeyPath(a3);
  v9 = a1;
  swift_retain(v3);
  return static Published.subscript.setter(&v9, v3, KeyPath, v7);
}

void (*Reactions.StackView.Model.hasAnimatedBackground.modify(_QWORD *a1))(_QWORD *)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_100EF3310);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_100EF3338);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_100ACA524;
}

uint64_t Reactions.StackView.Model.$hasAnimatedBackground.getter()
{
  return sub_100ACA828(&OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__hasAnimatedBackground, &qword_1011E3070);
}

uint64_t Reactions.StackView.Model.$hasAnimatedBackground.setter(uint64_t a1)
{
  return sub_100ACA8A8(a1, &qword_1011E6100, &OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__hasAnimatedBackground, &qword_1011E3070);
}

void (*Reactions.StackView.Model.$hasAnimatedBackground.modify(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_100007E8C(&qword_1011E6100);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__hasAnimatedBackground;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_100007E8C(&qword_1011E3070);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_100ACA620;
}

uint64_t Reactions.StackView.Model.__allocating_init(reaction:count:userImage:isVibrant:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v11;

  v11 = swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  Reactions.StackView.Model.init(reaction:count:userImage:isVibrant:)(a1, a2, a3, a4, a5);
  return v11;
}

uint64_t Reactions.StackView.Model.init(reaction:count:userImage:isVibrant:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t KeyPath;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  _QWORD v35[2];
  _QWORD v36[3];

  v34 = a5;
  v32 = a3;
  v33 = a4;
  v30 = a1;
  v31 = a2;
  v6 = sub_100007E8C(&qword_1011E3070);
  v29 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C((uint64_t *)&unk_1011E4A10);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100007E8C(&qword_1011E60C0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = v5 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__reaction;
  v36[0] = 0;
  v36[1] = 0;
  v28 = sub_100007E8C(&qword_1011E66B0);
  Published.init(initialValue:)(v36, v28);
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v17, v16, v13);
  v18 = v5 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__userImage;
  v36[0] = 0;
  v19 = sub_100007E8C(&qword_1011DED30);
  Published.init(initialValue:)(v36, v19);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v18, v12, v9);
  v20 = v5 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__isReacting;
  LOBYTE(v36[0]) = 0;
  Published.init(initialValue:)(v36, &type metadata for Bool);
  v21 = *(void (**)(uint64_t, char *, uint64_t))(v29 + 32);
  v21(v20, v8, v6);
  v22 = v5 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__hasAnimatedBackground;
  LOBYTE(v36[0]) = 1;
  Published.init(initialValue:)(v36, &type metadata for Bool);
  v21(v22, v8, v6);
  v23 = OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model_isVibrant;
  *(_BYTE *)(v5 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model_isVibrant) = 0;
  v24 = swift_beginAccess(v17, v36, 33, 0);
  (*(void (**)(uint64_t, uint64_t, __n128))(v14 + 8))(v17, v13, v24);
  v35[0] = v30;
  v35[1] = v31;
  Published.init(initialValue:)(v35, v28);
  swift_endAccess(v36);
  swift_beginAccess(v5 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__count, v36, 33, 0);
  v35[0] = v32;
  Published.init(initialValue:)(v35, &type metadata for Int);
  swift_endAccess(v36);
  KeyPath = swift_getKeyPath(&unk_100EF3280);
  v26 = swift_getKeyPath(&unk_100EF32A8);
  v36[0] = v33;
  swift_retain(v5);
  static Published.subscript.setter(v36, v5, KeyPath, v26);
  *(_BYTE *)(v5 + v23) = v34;
  return v5;
}

uint64_t Reactions.StackView.Model.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);

  v1 = v0 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__reaction;
  v2 = sub_100007E8C(&qword_1011E60C0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__count;
  v4 = sub_100007E8C(&qword_1011E60D8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__userImage;
  v6 = sub_100007E8C((uint64_t *)&unk_1011E4A10);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = v0 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__isReacting;
  v8 = sub_100007E8C(&qword_1011E3070);
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
  v9(v7, v8);
  v9(v0 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__hasAnimatedBackground, v8);
  return v0;
}

uint64_t Reactions.StackView.Model.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);

  v1 = v0 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__reaction;
  v2 = sub_100007E8C(&qword_1011E60C0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__count;
  v4 = sub_100007E8C(&qword_1011E60D8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__userImage;
  v6 = sub_100007E8C((uint64_t *)&unk_1011E4A10);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = v0 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__isReacting;
  v8 = sub_100007E8C(&qword_1011E3070);
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
  v9(v7, v8);
  v9(v0 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__hasAnimatedBackground, v8);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100CB9BD4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for Reactions.StackView.Model(0);
  result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

uint64_t property wrapper backing initializer of Reactions.StackView.model(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for Reactions.StackView.Model(0);
  v3 = sub_100048748(&qword_1011E6110, type metadata accessor for Reactions.StackView.Model, (uint64_t)&protocol conformance descriptor for Reactions.StackView.Model);
  return ObservedObject.init(wrappedValue:)(a1, v2, v3);
}

uint64_t type metadata accessor for Reactions.StackView.Model(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011E61F0, (uint64_t)&nominal type descriptor for Reactions.StackView.Model);
}

uint64_t Reactions.StackView.model.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 8));
}

void Reactions.StackView.model.setter(uint64_t a1)
{
  uint64_t v1;

  swift_release(*(_QWORD *)(v1 + 8));
  *(_QWORD *)(v1 + 8) = a1;
}

uint64_t Reactions.StackView.$model.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *v0;
  v2 = v0[1];
  v3 = type metadata accessor for Reactions.StackView.Model(0);
  v4 = sub_100048748(&qword_1011E6110, type metadata accessor for Reactions.StackView.Model, (uint64_t)&protocol conformance descriptor for Reactions.StackView.Model);
  return ObservedObject.projectedValue.getter(v1, v2, v3, v4);
}

uint64_t Reactions.StackView.init(model:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  int *v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v4 = (int *)type metadata accessor for Reactions.StackView(0);
  v5 = (uint64_t *)((char *)a2 + v4[5]);
  *v5 = swift_getKeyPath(&unk_100EF3358);
  v6 = sub_100007E8C(&qword_1011DE4A8);
  swift_storeEnumTagMultiPayload(v5, v6, 0);
  v7 = (uint64_t *)((char *)a2 + v4[6]);
  *v7 = swift_getKeyPath(&unk_100EF3388);
  v8 = sub_100007E8C((uint64_t *)&unk_1011DE410);
  swift_storeEnumTagMultiPayload(v7, v8, 0);
  v9 = (uint64_t *)((char *)a2 + v4[7]);
  *v9 = swift_getKeyPath(&unk_100EF33B8);
  v10 = sub_100007E8C(&qword_1011DE430);
  swift_storeEnumTagMultiPayload(v9, v10, 0);
  v11 = type metadata accessor for Reactions.StackView.Model(0);
  v12 = sub_100048748(&qword_1011E6110, type metadata accessor for Reactions.StackView.Model, (uint64_t)&protocol conformance descriptor for Reactions.StackView.Model);
  result = ObservedObject.init(wrappedValue:)(a1, v11, v12);
  *a2 = result;
  a2[1] = v14;
  return result;
}

uint64_t type metadata accessor for Reactions.StackView(uint64_t a1)
{
  return sub_100055934(a1, qword_1011E6188, (uint64_t)&nominal type descriptor for Reactions.StackView);
}

uint64_t sub_100CB9E20(uint64_t a1)
{
  return EnvironmentValues.colorScheme.getter(a1);
}

uint64_t Reactions.StackView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  double *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  double v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v23;

  sub_100007E8C(&qword_1011E6118);
  __chkstk_darwin();
  v4 = (double *)((char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_100007E8C(&qword_1011E6120);
  __chkstk_darwin();
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1011DE290 != -1)
    swift_once(&qword_1011DE290, sub_100CBC2AC);
  v8 = *(double *)&qword_1011E60B0;
  v9 = v8 - sub_100CB9FE8();
  *(_QWORD *)v4 = static VerticalAlignment.center.getter(v10);
  v4[1] = v9;
  *((_BYTE *)v4 + 16) = 0;
  v11 = sub_100007E8C(&qword_1011E6128);
  sub_100CBA190(v1, (double *)((char *)v4 + *(int *)(v11 + 44)));
  v13 = static Edge.Set.all.getter(v12);
  v14 = EdgeInsets.init(_all:)(-2.0);
  v16 = v15;
  v18 = v17;
  v20 = v19;
  sub_10004A160((uint64_t)v4, (uint64_t)v7, &qword_1011E6118);
  v21 = &v7[*(int *)(v5 + 36)];
  *v21 = v13;
  *((double *)v21 + 1) = v14;
  *((_QWORD *)v21 + 2) = v16;
  *((_QWORD *)v21 + 3) = v18;
  *((_QWORD *)v21 + 4) = v20;
  v21[40] = 0;
  sub_10004FF60((uint64_t)v4, &qword_1011E6118);
  sub_10004A160((uint64_t)v7, a1, &qword_1011E6120);
  return sub_10004FF60((uint64_t)v7, &qword_1011E6120);
}

double sub_100CB9FE8()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  double v6;
  void *v7;
  id v8;
  id v9;
  double v10;
  double v11;
  uint64_t v13;

  sub_100007E8C(&qword_1011DF000);
  __chkstk_darwin();
  v1 = (char *)&v13 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for DynamicTypeSize(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin();
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1011DE288 != -1)
    swift_once(&qword_1011DE288, sub_100CBC29C);
  v6 = *(double *)&qword_1011E60A8;
  type metadata accessor for Reactions.StackView(0);
  sub_100C31810((uint64_t)v5);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v1, v5, v2);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v1, 0, 1, v2);
  v7 = (void *)UIContentSizeCategory.init(_:)(v1);
  v8 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithPreferredContentSizeCategory:", v7);
  v9 = objc_msgSend((id)objc_opt_self(UIFontMetrics), "defaultMetrics");
  objc_msgSend(v9, "scaledValueForValue:compatibleWithTraitCollection:", v8, v6);
  v11 = v10;

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v11;
}

void sub_100CBA190(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  __n128 v13;
  uint64_t v14;
  void (*v15)(__n128);
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  _QWORD v59[2];

  v55 = a2;
  sub_100007E8C(&qword_1011E63D8);
  __chkstk_darwin();
  v56 = (uint64_t)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v5 = (uint64_t *)((char *)&v47 - v4);
  v49 = *(_QWORD *)(type metadata accessor for Reactions.StackView(0) - 8);
  v6 = *(_QWORD *)(v49 + 64);
  __chkstk_darwin();
  v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = sub_100007E8C(&qword_1011E63E0);
  v52 = *(_QWORD *)(v54 - 8);
  __chkstk_darwin();
  v53 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v51 = (char *)&v47 - v9;
  v10 = type metadata accessor for BlendMode(0);
  v11 = *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64);
  __chkstk_darwin();
  v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin();
  v50 = a1;
  v58 = v14;
  v15 = *(void (**)(__n128))(v14 + 104);
  v57 = (char *)&v47 - v16;
  v15(v13);
  KeyPath = swift_getKeyPath(&unk_100EF3238);
  swift_getKeyPath(&unk_100EF3260);
  swift_retain();
  static Published.subscript.getter(v59, v18, KeyPath);
  swift_release();
  swift_release();
  swift_release();
  v19 = v59[0];
  if (v59[0] >= 3)
    v19 = 3;
  v20 = __OFSUB__(v19, 1);
  v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    v59[0] = 0;
    v59[1] = v21 & ~(v21 >> 63);
    v48 = swift_getKeyPath(&unk_100EF34E0);
    v22 = v50;
    sub_100CBD198(v50, (uint64_t)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    v23 = v57;
    v24 = v58;
    (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v12, v57, v10);
    v25 = *(unsigned __int8 *)(v49 + 80);
    v26 = (v25 + 16) & ~v25;
    v27 = *(unsigned __int8 *)(v24 + 80);
    v28 = (v6 + v27 + v26) & ~v27;
    v29 = swift_allocObject(&unk_10110E7E0, v28 + v11, v25 | v27 | 7);
    sub_100CBD38C((uint64_t)v7, v29 + v26);
    (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v29 + v28, v12, v10);
    v30 = sub_100007E8C(&qword_1011E2CF8);
    v31 = sub_100007E8C(&qword_1011E63E8);
    v32 = sub_100CBD448();
    v33 = sub_100CBD4B4();
    v34 = v51;
    v35 = ForEach<>.init(_:id:content:)(v59, v48, sub_100CBD3D0, v29, v30, v31, v32, &protocol witness table for Int, v33);
    *v5 = static Alignment.center.getter(v35);
    v5[1] = v36;
    v37 = sub_100007E8C(&qword_1011E6420);
    sub_100CBB0D4(v22, v23, (uint64_t)v5 + *(int *)(v37 + 44));
    v50 = v10;
    v38 = v34;
    v39 = v52;
    v40 = v53;
    v41 = *(void (**)(char *, char *, uint64_t))(v52 + 16);
    v42 = v54;
    v41(v53, v38, v54);
    v43 = v56;
    sub_10004A160((uint64_t)v5, v56, &qword_1011E63D8);
    v44 = v55;
    *v55 = 0;
    *((_BYTE *)v44 + 8) = 1;
    v45 = sub_100007E8C(&qword_1011E6428);
    v41((char *)v44 + *(int *)(v45 + 48), v40, v42);
    sub_10004A160(v43, (uint64_t)v44 + *(int *)(v45 + 64), &qword_1011E63D8);
    sub_10004FF60((uint64_t)v5, &qword_1011E63D8);
    v46 = *(void (**)(char *, uint64_t))(v39 + 8);
    v46(v38, v42);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v57, v50);
    sub_10004FF60(v43, &qword_1011E63D8);
    v46(v40, v42);
  }
}

uint64_t sub_100CBA5CC@<X0>(uint64_t a1@<X1>, char *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t OpaqueTypeConformance2;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[2];

  v31 = a3;
  v5 = type metadata accessor for ScaleTransition(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100007E8C(&qword_1011E6430);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin();
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v14 = (char *)&v30 - v13;
  sub_100007E8C(&qword_1011E6408);
  __chkstk_darwin();
  v16 = (uint64_t *)((char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v16 = static Alignment.center.getter(v17);
  v16[1] = v18;
  v19 = sub_100007E8C(&qword_1011E64D8);
  v20 = sub_100CBA810(a1, a2, (uint64_t)v16 + *(int *)(v19 + 44));
  v21 = static UnitPoint.center.getter(v20);
  ScaleTransition.init(_:anchor:)(0.00001, v21, v22);
  v23 = static Animation.easeInOut(duration:)(0.25);
  v24 = sub_100048748(&qword_1011E6478, (uint64_t (*)(uint64_t))&type metadata accessor for ScaleTransition, (uint64_t)&protocol conformance descriptor for ScaleTransition);
  Transition.animation(_:)(v23, v5, v24);
  v25 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v25);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v14, v9);
  v32[0] = v5;
  v32[1] = v24;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v32, &opaque type descriptor for <<opaque return type of Transition.animation(_:)>>, 1);
  v27 = AnyTransition.init<A>(_:)(v12, v9, OpaqueTypeConformance2);
  v28 = v31;
  sub_10004A160((uint64_t)v16, v31, &qword_1011E6408);
  *(_QWORD *)(v28 + *(int *)(sub_100007E8C(&qword_1011E63E8) + 36)) = v27;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
  return sub_10004FF60((uint64_t)v16, &qword_1011E6408);
}

uint64_t sub_100CBA810@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  unsigned __int8 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unsigned __int8 v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;

  v61 = a2;
  v63 = a3;
  v62 = sub_100007E8C(&qword_1011E6438);
  __chkstk_darwin();
  v59 = (uint64_t)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_100007E8C(&qword_1011E6440);
  __chkstk_darwin();
  v56 = (uint64_t *)((char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v57 = sub_100007E8C(&qword_1011E64E0);
  __chkstk_darwin();
  v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v60 = (uint64_t)&v48 - v8;
  v55 = sub_100007E8C(&qword_1011E6450);
  __chkstk_darwin();
  v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = type metadata accessor for BlendMode(0);
  v11 = *(_QWORD *)(v64 - 8);
  __chkstk_darwin();
  v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011E6458);
  __chkstk_darwin();
  v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_100007E8C(&qword_1011E6460);
  __chkstk_darwin();
  v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v65 = (uint64_t)&v48 - v18;
  v20 = static Color.clear.getter(v19);
  v53 = a1;
  v21 = sub_100CB9FE8() + 4.0;
  v22 = sub_100CB9FE8() + 4.0;
  v24 = static Alignment.center.getter(v23);
  _FrameLayout.init(width:height:alignment:)(&v67, *(_QWORD *)&v21, 0, *(_QWORD *)&v22, 0, v24, v25);
  v26 = v67;
  LOBYTE(v21) = v68;
  v51 = v69;
  v50 = v70;
  v49 = v71;
  v48 = v72;
  v27 = v64;
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for BlendMode.destinationOut(_:), v64);
  v54 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v54(v15, v13, v27);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v27);
  sub_10004A160((uint64_t)v15, (uint64_t)v10, &qword_1011E6458);
  *(_WORD *)&v10[*(int *)(v55 + 56)] = 256;
  sub_10004A160((uint64_t)v10, (uint64_t)&v17[*(int *)(v52 + 36)], &qword_1011E6450);
  *(_QWORD *)v17 = v20;
  *((_QWORD *)v17 + 1) = v26;
  v17[16] = LOBYTE(v21);
  *((_QWORD *)v17 + 3) = v51;
  v17[32] = v50;
  v28 = v48;
  *((_QWORD *)v17 + 5) = v49;
  *((_QWORD *)v17 + 6) = v28;
  swift_retain();
  sub_10004FF60((uint64_t)v10, &qword_1011E6450);
  sub_10004FF60((uint64_t)v15, &qword_1011E6458);
  swift_release();
  v29 = sub_100065228((uint64_t)v17, v65, &qword_1011E6460);
  v30 = static Color.clear.getter(v29);
  v31 = sub_100CB9FE8();
  v32 = sub_100CB9FE8();
  v34 = static Alignment.center.getter(v33);
  _FrameLayout.init(width:height:alignment:)(&v73, *(_QWORD *)&v31, 0, *(_QWORD *)&v32, 0, v34, v35);
  v55 = v73;
  LODWORD(v52) = v74;
  v36 = v75;
  LOBYTE(v21) = v76;
  v37 = v77;
  v51 = v78;
  sub_100CBADFC(&v66);
  v38 = v66;
  v39 = v56;
  v54((char *)v56 + *(int *)(v58 + 36), v61, v64);
  *v39 = v38;
  v40 = v59;
  sub_10004A160((uint64_t)v39, v59, &qword_1011E6440);
  *(_WORD *)(v40 + *(int *)(v62 + 56)) = 256;
  sub_10004A160(v40, (uint64_t)&v7[*(int *)(v57 + 36)], &qword_1011E6438);
  v41 = v55;
  *(_QWORD *)v7 = v30;
  *((_QWORD *)v7 + 1) = v41;
  v7[16] = v52;
  *((_QWORD *)v7 + 3) = v36;
  v7[32] = LOBYTE(v21);
  v42 = v51;
  *((_QWORD *)v7 + 5) = v37;
  *((_QWORD *)v7 + 6) = v42;
  swift_retain();
  sub_10004FF60(v40, &qword_1011E6438);
  sub_10004FF60((uint64_t)v39, &qword_1011E6440);
  swift_release();
  v43 = v60;
  sub_100065228((uint64_t)v7, v60, &qword_1011E64E0);
  v44 = v65;
  sub_10004A160(v65, (uint64_t)v17, &qword_1011E6460);
  sub_10004A160(v43, (uint64_t)v7, &qword_1011E64E0);
  v45 = v63;
  sub_10004A160((uint64_t)v17, v63, &qword_1011E6460);
  v46 = sub_100007E8C(&qword_1011E64E8);
  sub_10004A160((uint64_t)v7, v45 + *(int *)(v46 + 48), &qword_1011E64E0);
  sub_10004FF60(v43, &qword_1011E64E0);
  sub_10004FF60(v44, &qword_1011E6460);
  sub_10004FF60((uint64_t)v7, &qword_1011E64E0);
  return sub_10004FF60((uint64_t)v17, &qword_1011E6460);
}

uint64_t sub_100CBADFC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  int v14;
  id v15;
  void *v16;
  void *v17;
  uint64_t v18;
  void *v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v2 = v1;
  v26 = a1;
  v25 = sub_100007E8C(&qword_1011E6480);
  __chkstk_darwin();
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ColorSchemeContrast(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ColorScheme(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin();
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Reactions.StackView(0);
  sub_100C319D0((uint64_t)v12);
  sub_100C32118((uint64_t)v8);
  v13 = &v4[*(int *)(v25 + 48)];
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v4, v12, v9);
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v13, v8, v5);
  v14 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v4, v9);
  if (v14 == enum case for ColorScheme.light(_:))
  {
    if ((*(unsigned int (**)(char *, uint64_t))(v6 + 88))(v13, v5) == enum case for ColorSchemeContrast.increased(_:))
    {
      v15 = objc_msgSend((id)objc_opt_self(UIColor), "secondarySystemFillColor");
      v27 = Color.init(_:)(v15);
      v16 = &type metadata for Color;
      v17 = &protocol witness table for Color;
LABEL_7:
      v18 = AnyShapeStyle.init<A>(_:)(&v27, v16, v17);
      *v26 = v18;
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v4, v9);
    }
  }
  else if (v14 == enum case for ColorScheme.dark(_:)
         && (*(unsigned int (**)(char *, uint64_t))(v6 + 88))(v13, v5) == enum case for ColorSchemeContrast.increased(_:))
  {
    LODWORD(v27) = static HierarchicalShapeStyle.quinary.getter();
    v16 = &type metadata for HierarchicalShapeStyle;
    v17 = &protocol witness table for HierarchicalShapeStyle;
    goto LABEL_7;
  }
  if (*(_BYTE *)(*(_QWORD *)(v2 + 8) + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model_isVibrant) == 1)
  {
    LODWORD(v27) = static HierarchicalShapeStyle.quaternary.getter();
    v20 = &type metadata for HierarchicalShapeStyle;
    v21 = &protocol witness table for HierarchicalShapeStyle;
  }
  else
  {
    v22 = objc_msgSend((id)objc_opt_self(UIColor), "secondarySystemFillColor");
    v27 = Color.init(_:)(v22);
    v20 = &type metadata for Color;
    v21 = &protocol witness table for Color;
  }
  v23 = AnyShapeStyle.init<A>(_:)(&v27, v20, v21);
  *v26 = v23;
  return sub_10004FF60((uint64_t)v4, &qword_1011E6480);
}

uint64_t sub_100CBB0D4@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t KeyPath;
  double v41;
  double v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int *v68;
  uint64_t v69;
  uint64_t v70;
  int *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  __n128 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  double v81;
  char *v82;
  double v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  __n128 v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t OpaqueTypeConformance2;
  uint64_t v93;
  double v94;
  double v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void (*v128)(char *, char *, uint64_t);
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  int *v139;
  uint64_t v140;
  uint64_t *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  _BYTE v145[7];
  char v146;
  _BYTE v147[7];
  char v148;
  char v149;
  int v150;
  __int16 v151;
  char v152;
  _BYTE v153[147];
  _QWORD v154[19];
  _QWORD v155[2];
  __int16 v156;
  int v157;
  __int16 v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char v163;
  _BYTE v164[7];
  uint64_t v165;
  uint64_t v166;
  char v167;
  _BYTE v168[7];
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char v172;
  _BYTE v173[7];
  uint64_t v174;
  char v175;
  _BYTE v176[7];
  __int128 v177;
  uint64_t v178;
  unsigned __int8 v179;
  uint64_t v180;
  unsigned __int8 v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char v185;
  uint64_t v186;
  unsigned __int8 v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char v191;
  uint64_t v192;
  char v193;
  __int128 v194;
  int *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  unsigned __int8 v201;

  v133 = a2;
  v136 = a3;
  v117 = type metadata accessor for ScaleTransition(0);
  v114 = *(_QWORD *)(v117 - 8);
  __chkstk_darwin();
  v113 = (char *)&v109 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100007E8C(&qword_1011E6430);
  v118 = *(_QWORD *)(v5 - 8);
  v119 = v5;
  __chkstk_darwin();
  v115 = (char *)&v109 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v116 = (char *)&v109 - v7;
  v8 = type metadata accessor for Image.ResizingMode(0);
  v111 = *(_QWORD *)(v8 - 8);
  v112 = v8;
  __chkstk_darwin();
  v110 = (char *)&v109 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = sub_100007E8C(&qword_1011E6438);
  __chkstk_darwin();
  v142 = (uint64_t)&v109 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = sub_100007E8C(&qword_1011E6440);
  __chkstk_darwin();
  v141 = (uint64_t *)((char *)&v109 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100007E8C(&qword_1011E1C98);
  __chkstk_darwin();
  v129 = (char *)&v109 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = sub_100007E8C(&qword_1011E6448);
  __chkstk_darwin();
  v135 = (uint64_t)&v109 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v15 = (char *)&v109 - v14;
  __chkstk_darwin();
  v137 = (char *)&v109 - v16;
  v139 = (int *)sub_100007E8C(&qword_1011E6450);
  __chkstk_darwin();
  v18 = (char *)&v109 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = type metadata accessor for BlendMode(0);
  v19 = *(_QWORD *)(v140 - 8);
  __chkstk_darwin();
  v21 = (char *)&v109 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011E6458);
  __chkstk_darwin();
  v23 = (char *)&v109 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = sub_100007E8C(&qword_1011E6460);
  __chkstk_darwin();
  v25 = (char *)&v109 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v143 = (uint64_t)&v109 - v26;
  v28 = static Color.clear.getter(v27);
  v144 = a1;
  v29 = sub_100CB9FE8() + 4.0;
  v30 = sub_100CB9FE8() + 4.0;
  v32 = static Alignment.center.getter(v31);
  _FrameLayout.init(width:height:alignment:)(&v178, *(_QWORD *)&v29, 0, *(_QWORD *)&v30, 0, v32, v33);
  v34 = v178;
  LODWORD(v134) = v179;
  v127 = v180;
  LODWORD(v126) = v181;
  v124 = v183;
  v125 = v182;
  v35 = v140;
  (*(void (**)(char *, _QWORD, uint64_t))(v19 + 104))(v21, enum case for BlendMode.destinationOut(_:), v140);
  v128 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
  v128(v23, v21, v35);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v35);
  sub_10004A160((uint64_t)v23, (uint64_t)v18, &qword_1011E6458);
  *(_WORD *)&v18[v139[14]] = 256;
  sub_10004A160((uint64_t)v18, (uint64_t)&v25[*(int *)(v138 + 36)], &qword_1011E6450);
  *(_QWORD *)v25 = v28;
  *((_QWORD *)v25 + 1) = v34;
  v25[16] = (char)v134;
  *((_QWORD *)v25 + 3) = v127;
  v25[32] = v126;
  v36 = v124;
  *((_QWORD *)v25 + 5) = v125;
  *((_QWORD *)v25 + 6) = v36;
  swift_retain();
  sub_10004FF60((uint64_t)v18, &qword_1011E6450);
  sub_10004FF60((uint64_t)v23, &qword_1011E6458);
  swift_release();
  v134 = v25;
  sub_100065228((uint64_t)v25, v143, &qword_1011E6460);
  sub_100CBBCC4((uint64_t)&v195);
  v139 = v195;
  v126 = v197;
  v127 = v196;
  v124 = v199;
  v125 = v198;
  v123 = v200;
  LODWORD(v138) = v201;
  v37 = sub_100CBBF98();
  v38 = type metadata accessor for Font.Design(0);
  v39 = (uint64_t)v129;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v129, 1, 1, v38);
  v122 = static Font.system(size:weight:design:)(0, 1, v39, v37);
  sub_10004FF60(v39, &qword_1011E1C98);
  KeyPath = swift_getKeyPath(&unk_100EF34F8);
  v41 = sub_100CB9FE8();
  v42 = sub_100CB9FE8();
  v44 = static Alignment.center.getter(v43);
  _FrameLayout.init(width:height:alignment:)(&v184, *(_QWORD *)&v41, 0, *(_QWORD *)&v42, 0, v44, v45);
  v46 = v184;
  LOBYTE(v19) = v185;
  v47 = v186;
  LODWORD(v129) = v187;
  v48 = v188;
  v121 = v189;
  sub_100CBADFC((uint64_t *)&v195);
  v49 = (uint64_t)v195;
  v50 = v141;
  v128((char *)v141 + *(int *)(v131 + 36), (char *)v133, v140);
  *v50 = v49;
  v51 = v142;
  sub_10004A160((uint64_t)v50, v142, &qword_1011E6440);
  *(_WORD *)(v51 + *(int *)(v132 + 56)) = 256;
  sub_10004A160(v51, (uint64_t)&v15[*(int *)(v130 + 36)], &qword_1011E6438);
  v52 = (uint64_t)v139;
  v54 = v126;
  v53 = v127;
  *(_QWORD *)v15 = v139;
  *((_QWORD *)v15 + 1) = v53;
  v56 = v124;
  v55 = v125;
  *((_QWORD *)v15 + 2) = v54;
  *((_QWORD *)v15 + 3) = v55;
  v57 = v122;
  v58 = v123;
  *((_QWORD *)v15 + 4) = v56;
  *((_QWORD *)v15 + 5) = v58;
  v59 = v138;
  v15[48] = v138;
  v120 = KeyPath;
  *((_QWORD *)v15 + 7) = KeyPath;
  *((_QWORD *)v15 + 8) = v57;
  *((_QWORD *)v15 + 9) = v46;
  v15[80] = v19;
  *((_QWORD *)v15 + 11) = v47;
  v15[96] = (char)v129;
  v60 = (uint64_t)v137;
  v61 = v121;
  *((_QWORD *)v15 + 13) = v48;
  *((_QWORD *)v15 + 14) = v61;
  v62 = v53;
  LOBYTE(v46) = v54;
  v63 = v55;
  v64 = v56;
  sub_100CBD558(v52, v53, v54, v55, v56, v58, v59);
  swift_retain();
  swift_retain();
  sub_10004FF60(v142, &qword_1011E6438);
  sub_10004FF60((uint64_t)v141, &qword_1011E6440);
  sub_100CBD5F0((uint64_t)v139, v62, v46, v63, v64, v58, v138);
  swift_release();
  swift_release();
  v65 = v60;
  sub_100065228((uint64_t)v15, v60, &qword_1011E6448);
  v66 = swift_getKeyPath(&unk_100EF3280);
  swift_getKeyPath(&unk_100EF32A8);
  swift_retain();
  static Published.subscript.getter(&v195, v67, v66);
  swift_release();
  swift_release();
  swift_release();
  v68 = v195;
  if (!v195)
    goto LABEL_5;
  v69 = swift_getKeyPath(&unk_100EF32C8);
  swift_getKeyPath(&unk_100EF32F0);
  swift_retain();
  static Published.subscript.getter(&v195, v70, v69);
  swift_release();
  swift_release();
  swift_release();
  if (v195 != 1)
  {

LABEL_5:
    sub_100741A64((uint64_t)v155);
    goto LABEL_6;
  }
  v71 = v68;
  v72 = Image.init(uiImage:)(v71);
  v74 = v110;
  v73 = v111;
  v75 = v112;
  (*(void (**)(char *, _QWORD, uint64_t))(v111 + 104))(v110, enum case for Image.ResizingMode.stretch(_:), v112);
  v142 = Image.resizable(capInsets:resizingMode:)(v74, v72, 0.0, 0.0, 0.0, 0.0);
  v76 = swift_release();
  v77 = (*(uint64_t (**)(char *, uint64_t, __n128))(v73 + 8))(v74, v75, v76);
  v78 = static Alignment.center.getter(v77);
  v140 = v79;
  v141 = (uint64_t *)v78;
  static Color.black.getter(v78);
  v139 = (int *)Color.opacity(_:)(0.08);
  swift_release();
  v81 = static UnitPoint.center.getter(v80);
  v82 = v113;
  ScaleTransition.init(_:anchor:)(0.00001, v81, v83);
  v84 = static Animation.easeInOut(duration:)(0.25);
  v85 = sub_100048748(&qword_1011E6478, (uint64_t (*)(uint64_t))&type metadata accessor for ScaleTransition, (uint64_t)&protocol conformance descriptor for ScaleTransition);
  v87 = v116;
  v86 = v117;
  Transition.animation(_:)(v84, v117, v85);
  v88 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v114 + 8))(v82, v86, v88);
  v90 = v118;
  v89 = v119;
  v91 = v115;
  (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v115, v87, v119);
  v195 = (int *)v86;
  v196 = v85;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v195, &opaque type descriptor for <<opaque return type of Transition.animation(_:)>>, 1);
  v93 = AnyTransition.init<A>(_:)(v91, v89, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v90 + 8))(v87, v89);
  v94 = sub_100CB9FE8();
  v95 = sub_100CB9FE8();
  v97 = static Alignment.center.getter(v96);
  _FrameLayout.init(width:height:alignment:)(&v190, *(_QWORD *)&v94, 0, *(_QWORD *)&v95, 0, v97, v98);
  v99 = v190;
  LOBYTE(v94) = v191;
  v100 = v192;
  v101 = v193;

  v152 = 1;
  v149 = 1;
  v148 = LOBYTE(v94);
  v146 = v101;
  v155[0] = v142;
  v155[1] = 0;
  v156 = 257;
  v157 = v150;
  v158 = v151;
  v159 = (uint64_t)v141;
  v160 = v140;
  v161 = (uint64_t)v139;
  v162 = 0x3FE0000000000000;
  v163 = 0;
  *(_DWORD *)&v164[3] = *(_DWORD *)((char *)v154 + 3);
  *(_DWORD *)v164 = v154[0];
  v165 = 0;
  v166 = 0;
  v167 = 1;
  *(_DWORD *)v168 = *(_DWORD *)v153;
  *(_DWORD *)&v168[3] = *(_DWORD *)&v153[3];
  v169 = 0x3FF0000000000000;
  v170 = v93;
  v65 = (uint64_t)v137;
  v171 = v99;
  v172 = LOBYTE(v94);
  *(_DWORD *)v173 = *(_DWORD *)v147;
  *(_DWORD *)&v173[3] = *(_DWORD *)&v147[3];
  v174 = v100;
  v175 = v101;
  *(_DWORD *)&v176[3] = *(_DWORD *)&v145[3];
  *(_DWORD *)v176 = *(_DWORD *)v145;
  v177 = v194;
  UIScreen.Dimensions.size.getter(v155);
LABEL_6:
  sub_100065228((uint64_t)v155, (uint64_t)&v195, &qword_1011E6468);
  v102 = v143;
  v103 = (uint64_t)v134;
  sub_10004A160(v143, (uint64_t)v134, &qword_1011E6460);
  v104 = v135;
  sub_10004A160(v65, v135, &qword_1011E6448);
  sub_100065228((uint64_t)&v195, (uint64_t)v153, &qword_1011E6468);
  v105 = v136;
  sub_10004A160(v103, v136, &qword_1011E6460);
  v106 = sub_100007E8C(&qword_1011E6470);
  sub_10004A160(v104, v105 + *(int *)(v106 + 48), &qword_1011E6448);
  v107 = v105 + *(int *)(v106 + 64);
  sub_100065228((uint64_t)v153, (uint64_t)v154, &qword_1011E6468);
  sub_100065228((uint64_t)v154, v107, &qword_1011E6468);
  sub_100CBD6A4(v154, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100CBD66C);
  sub_10004FF60(v65, &qword_1011E6448);
  sub_10004FF60(v102, &qword_1011E6460);
  sub_100065228((uint64_t)v153, (uint64_t)v155, &qword_1011E6468);
  sub_100CBD6A4(v155, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100CBD708);
  sub_10004FF60(v104, &qword_1011E6448);
  return sub_10004FF60(v103, &qword_1011E6460);
}

double sub_100CBBCC4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t KeyPath;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  double result;
  __int128 v39;
  __int128 v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  _OWORD v50[3];
  char v51;

  v2 = type metadata accessor for ScaleTransition(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin();
  v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v7 = (char *)&v42 - v6;
  KeyPath = swift_getKeyPath(&unk_100EF31F0);
  swift_getKeyPath(&unk_100EF3218);
  swift_retain();
  static Published.subscript.getter(v50, v9, KeyPath);
  swift_release();
  swift_release();
  swift_release();
  if (*((_QWORD *)&v50[0] + 1))
  {
    v10 = sub_100BBF2FC();
    v11 = Text.init<A>(_:)(v50, &type metadata for String, v10);
    v13 = v12;
    v15 = v14;
    v17 = v16 & 1;
    v18 = static Animation.easeInOut(duration:)(0.25);
    v19 = static UnitPoint.center.getter(v18);
    ScaleTransition.init(_:anchor:)(0.00001, v19, v20);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v7, v2);
    v21 = sub_100048748(&qword_1011E6478, (uint64_t (*)(uint64_t))&type metadata accessor for ScaleTransition, (uint64_t)&protocol conformance descriptor for ScaleTransition);
    v22 = AnyTransition.init<A>(_:)(v5, v2, v21);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v7, v2);
    v43 = v11;
    v44 = v13;
    v45 = v17;
    v46 = v15;
    v47 = v18;
    v48 = v22;
    v49 = 0;
  }
  else
  {
    v23 = Image.init(_internalSystemName:)(0xD000000000000013, 0x8000000100E57C90);
    v24 = swift_getKeyPath(&unk_100EF3310);
    swift_getKeyPath(&unk_100EF3338);
    swift_retain();
    static Published.subscript.getter(v50, v25, v24);
    swift_release();
    swift_release();
    v28 = swift_release();
    if (LOBYTE(v50[0]) == 1)
      v29 = static Color.primary.getter(v28);
    else
      v29 = static Color.accentColor.getter(v26, v27);
    v31 = v29;
    v32 = static Font.callout.getter(v30);
    v33 = swift_getKeyPath(&unk_100EF34F8);
    v43 = v23;
    v44 = v31;
    v45 = v33;
    v46 = v32;
    v47 = 0;
    v48 = 0;
    v49 = 1;
  }
  v34 = sub_100007E8C(&qword_1011E6488);
  v35 = sub_100007E8C(&qword_1011E6490);
  v36 = sub_100CBD740();
  v37 = sub_100CBD7DC();
  _ConditionalContent<>.init(storage:)(&v43, v34, v35, v36, v37);
  result = *(double *)v50;
  v39 = v50[1];
  v40 = v50[2];
  v41 = v51;
  *(_OWORD *)a1 = v50[0];
  *(_OWORD *)(a1 + 16) = v39;
  *(_OWORD *)(a1 + 32) = v40;
  *(_BYTE *)(a1 + 48) = v41;
  return result;
}

double sub_100CBBF98()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  id v7;
  id v8;
  double v9;
  double v10;
  uint64_t v12;

  sub_100007E8C(&qword_1011DF000);
  __chkstk_darwin();
  v1 = (char *)&v12 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for DynamicTypeSize(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin();
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Reactions.StackView(0);
  sub_100C31810((uint64_t)v5);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v1, v5, v2);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v1, 0, 1, v2);
  v6 = (void *)UIContentSizeCategory.init(_:)(v1);
  v7 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithPreferredContentSizeCategory:", v6);
  v8 = objc_msgSend((id)objc_opt_self(UIFontMetrics), "defaultMetrics");
  objc_msgSend(v8, "scaledValueForValue:compatibleWithTraitCollection:", v7, 14.0);
  v10 = v9;

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v10;
}

double static Reactions.StackView.Specs.width(for:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  double v11;
  double v12;
  uint64_t v14;

  v2 = sub_100007E8C(&qword_1011DF000);
  __chkstk_darwin(v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1011DE288 != -1)
    swift_once(&qword_1011DE288, sub_100CBC29C);
  v5 = *(double *)&qword_1011E60A8;
  v6 = type metadata accessor for DynamicTypeSize(0);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v4, a1, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v4, 0, 1, v6);
  v8 = (void *)UIContentSizeCategory.init(_:)(v4);
  v9 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithPreferredContentSizeCategory:", v8);
  v10 = objc_msgSend((id)objc_opt_self(UIFontMetrics), "defaultMetrics");
  objc_msgSend(v10, "scaledValueForValue:compatibleWithTraitCollection:", v9, v5);
  v12 = v11;

  if (qword_1011DE290 != -1)
    swift_once(&qword_1011DE290, sub_100CBC2AC);
  return v12 + *(double *)&qword_1011E60B0 * 3.0;
}

void sub_100CBC29C()
{
  qword_1011E60A8 = 0x403C000000000000;
}

void sub_100CBC2AC()
{
  qword_1011E60B0 = 0x4014000000000000;
}

uint64_t sub_100CBC2BC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of Reactions.StackView.body>>, 1);
}

ValueMetadata *type metadata accessor for Reactions()
{
  return &type metadata for Reactions;
}

uint64_t *initializeBufferWithCopyOfBuffer for Reactions.StackView(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    swift_retain();
    v11 = sub_100007E8C(&qword_1011DE4A8);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for ColorScheme(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
      v13 = 1;
    }
    else
    {
      *v9 = *v10;
      swift_retain();
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v11, v13);
    v15 = a3[6];
    v16 = (uint64_t *)((char *)a1 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    v18 = sub_100007E8C((uint64_t *)&unk_1011DE410);
    if (swift_getEnumCaseMultiPayload(v17, v18) == 1)
    {
      v19 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v16, v17, v19);
      v20 = 1;
    }
    else
    {
      *v16 = *v17;
      swift_retain();
      v20 = 0;
    }
    swift_storeEnumTagMultiPayload(v16, v18, v20);
    v21 = a3[7];
    v22 = (uint64_t *)((char *)a1 + v21);
    v23 = (uint64_t *)((char *)a2 + v21);
    v24 = sub_100007E8C(&qword_1011DE430);
    if (swift_getEnumCaseMultiPayload(v23, v24) == 1)
    {
      v25 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v22, v23, v25);
      v26 = v22;
      v27 = v24;
      v28 = 1;
    }
    else
    {
      *v22 = *v23;
      swift_retain();
      v26 = v22;
      v27 = v24;
      v28 = 0;
    }
    swift_storeEnumTagMultiPayload(v26, v27, v28);
  }
  return a1;
}

double destroy for Reactions.StackView(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double result;

  swift_release();
  v4 = a1 + a2[5];
  v5 = sub_100007E8C(&qword_1011DE4A8);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for ColorScheme(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    swift_release();
  }
  v7 = a1 + a2[6];
  v8 = sub_100007E8C((uint64_t *)&unk_1011DE410);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
  }
  else
  {
    swift_release();
  }
  v10 = a1 + a2[7];
  v11 = sub_100007E8C(&qword_1011DE430);
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v12 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v10, v12);
  }
  else
  {
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

_QWORD *initializeWithCopy for Reactions.StackView(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  swift_retain();
  v10 = sub_100007E8C(&qword_1011DE4A8);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, v9, v11);
    v12 = 1;
  }
  else
  {
    *v8 = *v9;
    swift_retain();
    v12 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v10, v12);
  v13 = a3[6];
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  v16 = sub_100007E8C((uint64_t *)&unk_1011DE410);
  if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
  {
    v17 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v14, v15, v17);
    v18 = 1;
  }
  else
  {
    *v14 = *v15;
    swift_retain();
    v18 = 0;
  }
  swift_storeEnumTagMultiPayload(v14, v16, v18);
  v19 = a3[7];
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  v22 = sub_100007E8C(&qword_1011DE430);
  if (swift_getEnumCaseMultiPayload(v21, v22) == 1)
  {
    v23 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v20, v21, v23);
    v24 = 1;
  }
  else
  {
    *v20 = *v21;
    swift_retain();
    v24 = 0;
  }
  swift_storeEnumTagMultiPayload(v20, v22, v24);
  return a1;
}

_QWORD *assignWithCopy for Reactions.StackView(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v6 = a3[5];
    v7 = (_QWORD *)((char *)a1 + v6);
    v8 = (_QWORD *)((char *)a2 + v6);
    sub_10004FF60((uint64_t)a1 + v6, &qword_1011DE4A8);
    v9 = sub_100007E8C(&qword_1011DE4A8);
    if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
    {
      v10 = type metadata accessor for ColorScheme(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v7, v8, v10);
      v11 = 1;
    }
    else
    {
      *v7 = *v8;
      swift_retain();
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v7, v9, v11);
    v12 = a3[6];
    v13 = (_QWORD *)((char *)a1 + v12);
    v14 = (_QWORD *)((char *)a2 + v12);
    sub_10004FF60((uint64_t)a1 + v12, (uint64_t *)&unk_1011DE410);
    v15 = sub_100007E8C((uint64_t *)&unk_1011DE410);
    if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
    {
      v16 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v13, v14, v16);
      v17 = 1;
    }
    else
    {
      *v13 = *v14;
      swift_retain();
      v17 = 0;
    }
    swift_storeEnumTagMultiPayload(v13, v15, v17);
    v18 = a3[7];
    v19 = (_QWORD *)((char *)a1 + v18);
    v20 = (_QWORD *)((char *)a2 + v18);
    sub_10004FF60((uint64_t)a1 + v18, &qword_1011DE430);
    v21 = sub_100007E8C(&qword_1011DE430);
    if (swift_getEnumCaseMultiPayload(v20, v21) == 1)
    {
      v22 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v19, v20, v22);
      v23 = 1;
    }
    else
    {
      *v19 = *v20;
      swift_retain();
      v23 = 0;
    }
    swift_storeEnumTagMultiPayload(v19, v21, v23);
  }
  return a1;
}

_OWORD *initializeWithTake for Reactions.StackView(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_100007E8C(&qword_1011DE4A8);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for ColorScheme(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v11 = a3[6];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_100007E8C((uint64_t *)&unk_1011DE410);
  if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
  {
    v15 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v12, v13, v15);
    swift_storeEnumTagMultiPayload(v12, v14, 1);
  }
  else
  {
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  v16 = a3[7];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = sub_100007E8C(&qword_1011DE430);
  if (swift_getEnumCaseMultiPayload(v18, v19) == 1)
  {
    v20 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v17, v18, v20);
    swift_storeEnumTagMultiPayload(v17, v19, 1);
  }
  else
  {
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  return a1;
}

_QWORD *assignWithTake for Reactions.StackView(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release();
  if (a1 != a2)
  {
    v7 = a3[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    sub_10004FF60((uint64_t)a1 + v7, &qword_1011DE4A8);
    v10 = sub_100007E8C(&qword_1011DE4A8);
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v11 = type metadata accessor for ColorScheme(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload(v8, v10, 1);
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_10004FF60((uint64_t)a1 + v12, (uint64_t *)&unk_1011DE410);
    v15 = sub_100007E8C((uint64_t *)&unk_1011DE410);
    if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
    {
      v16 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v13, v14, v16);
      swift_storeEnumTagMultiPayload(v13, v15, 1);
    }
    else
    {
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    v17 = a3[7];
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    sub_10004FF60((uint64_t)a1 + v17, &qword_1011DE430);
    v20 = sub_100007E8C(&qword_1011DE430);
    if (swift_getEnumCaseMultiPayload(v19, v20) == 1)
    {
      v21 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v18, v19, v21);
      swift_storeEnumTagMultiPayload(v18, v20, 1);
    }
    else
    {
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for Reactions.StackView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100CBCD00);
}

uint64_t sub_100CBCD00(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011E3920);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[5];
    }
    else
    {
      v12 = sub_100007E8C(&qword_1011E2398);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[6];
      }
      else
      {
        v10 = sub_100007E8C(&qword_1011E3528);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a3[7];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for Reactions.StackView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100CBCDDC);
}

uint64_t sub_100CBCDDC(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011E3920);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[5];
    }
    else
    {
      v12 = sub_100007E8C(&qword_1011E2398);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[6];
      }
      else
      {
        v10 = sub_100007E8C(&qword_1011E3528);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[7];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_100CBCEA8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[4];

  v8[0] = &unk_100EF3498;
  sub_1000A79B0(319, (unint64_t *)&unk_1011E3990, (uint64_t (*)(uint64_t))&type metadata accessor for ColorScheme);
  if (v3 <= 0x3F)
  {
    v8[1] = *(_QWORD *)(v2 - 8) + 64;
    sub_1000A79B0(319, (unint64_t *)&unk_1011E2410, (uint64_t (*)(uint64_t))&type metadata accessor for ColorSchemeContrast);
    if (v5 <= 0x3F)
    {
      v8[2] = *(_QWORD *)(v4 - 8) + 64;
      sub_1000A79B0(319, &qword_1011E35A8, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
      if (v7 <= 0x3F)
      {
        v8[3] = *(_QWORD *)(v6 - 8) + 64;
        swift_initStructMetadata(a1, 256, 4, v8, a1 + 16);
      }
    }
  }
}

uint64_t sub_100CBCF84()
{
  return type metadata accessor for Reactions.StackView.Model(0);
}

void sub_100CBCF8C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;
  void *v13;

  sub_1000EA54C(319, &qword_1011E6200, &qword_1011E66B0);
  if (v3 <= 0x3F)
  {
    v10[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1000EA598(319, (unint64_t *)&unk_1011E6208, (uint64_t)&type metadata for Int);
    if (v5 <= 0x3F)
    {
      v10[1] = *(_QWORD *)(v4 - 8) + 64;
      sub_1000EA54C(319, (unint64_t *)&unk_1011E4B80, &qword_1011DED30);
      if (v7 <= 0x3F)
      {
        v10[2] = *(_QWORD *)(v6 - 8) + 64;
        sub_1000EA598(319, (unint64_t *)&qword_1011E31C8, (uint64_t)&type metadata for Bool);
        if (v9 <= 0x3F)
        {
          v11 = *(_QWORD *)(v8 - 8) + 64;
          v12 = v11;
          v13 = &unk_100EF34B8;
          swift_updateClassMetadata2(a1, 256, 6, v10, a1 + 80);
        }
      }
    }
  }
}

ValueMetadata *type metadata accessor for Reactions.StackView.Specs()
{
  return &type metadata for Reactions.StackView.Specs;
}

unint64_t sub_100CBD0A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E63B8;
  if (!qword_1011E63B8)
  {
    v1 = sub_100044B54(&qword_1011E63C0);
    sub_100CBD114();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E63B8);
  }
  return result;
}

unint64_t sub_100CBD114()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E63C8;
  if (!qword_1011E63C8)
  {
    v1 = sub_100044B54(&qword_1011E6120);
    sub_100049F28(&qword_1011E63D0, &qword_1011E6118, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E63C8);
  }
  return result;
}

uint64_t sub_100CBD198(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Reactions.StackView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100CBD1DC()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v1 = (int *)type metadata accessor for Reactions.StackView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v22 = *(_QWORD *)(v2 + 64);
  v4 = type metadata accessor for BlendMode(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = v0 + v3;
  swift_release();
  v9 = v0 + v3 + v1[5];
  v10 = sub_100007E8C(&qword_1011DE4A8);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for ColorScheme(0);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v9, v11);
  }
  else
  {
    swift_release();
  }
  v12 = v8 + v1[6];
  v13 = sub_100007E8C((uint64_t *)&unk_1011DE410);
  if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
  {
    v14 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v12, v14);
  }
  else
  {
    swift_release();
  }
  v15 = v8 + v1[7];
  v16 = sub_100007E8C(&qword_1011DE430);
  if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
  {
    v17 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v15, v17);
  }
  else
  {
    v18 = swift_release();
  }
  v19 = (v3 + v22 + v6) & ~v6;
  v20 = v19 + v7;
  (*(void (**)(unint64_t, uint64_t, __n128))(v5 + 8))(v0 + v19, v4, v18);
  return swift_deallocObject(v0, v20);
}

uint64_t sub_100CBD38C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Reactions.StackView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100CBD3D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(type metadata accessor for Reactions.StackView(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for BlendMode(0) - 8) + 80);
  return sub_100CBA5CC(v1 + v4, (char *)(v1 + ((v4 + v5 + v6) & ~v6)), a1);
}

unint64_t sub_100CBD448()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E63F0;
  if (!qword_1011E63F0)
  {
    v1 = sub_100044B54(&qword_1011E2CF8);
    sub_100C54000();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> Range<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E63F0);
  }
  return result;
}

unint64_t sub_100CBD4B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E63F8;
  if (!qword_1011E63F8)
  {
    v1 = sub_100044B54(&qword_1011E63E8);
    sub_100049F28(&qword_1011E6400, &qword_1011E6408, (uint64_t)&protocol conformance descriptor for ZStack<A>);
    sub_100049F28(&qword_1011E6410, &qword_1011E6418, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E63F8);
  }
  return result;
}

void sub_100CBD558(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if ((a7 & 1) != 0)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    sub_100055BBC(a1, a2, a3 & 1);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
}

double sub_100CBD5F0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  double result;

  if ((a7 & 1) != 0)
  {
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    sub_100055BAC(a1, a2, a3 & 1);
    swift_release();
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_100CBD66C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  if (result)
  {
    swift_retain(result);
    swift_retain(a6);
    return swift_retain(a13);
  }
  return result;
}

_QWORD *sub_100CBD6A4(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18]);
  return a1;
}

double sub_100CBD708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  double result;

  if (a1)
  {
    swift_release(a1);
    swift_release(a6);
    *(_QWORD *)&result = swift_release(a13).n128_u64[0];
  }
  return result;
}

unint64_t sub_100CBD740()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E6498;
  if (!qword_1011E6498)
  {
    v1 = sub_100044B54(&qword_1011E6488);
    sub_100049F28(&qword_1011E64A0, &qword_1011E64A8, (uint64_t)&protocol conformance descriptor for _AnimationView<A>);
    sub_100049F28(&qword_1011E6410, &qword_1011E6418, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E6498);
  }
  return result;
}

unint64_t sub_100CBD7DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E64B0;
  if (!qword_1011E64B0)
  {
    v1 = sub_100044B54(&qword_1011E6490);
    sub_100CBD860();
    sub_100049F28((unint64_t *)&unk_1011E3BD0, &qword_1011E0EA8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E64B0);
  }
  return result;
}

unint64_t sub_100CBD860()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E64B8;
  if (!qword_1011E64B8)
  {
    v1 = sub_100044B54(&qword_1011E64C0);
    sub_100049F28(&qword_1011E64C8, &qword_1011E64D0, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1011E64B8);
  }
  return result;
}

id sub_100CBD9C8(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  objc_class *v11;
  id v12;
  objc_super v14;
  _QWORD v15[3];
  uint64_t v16;

  sub_100CC05F0(a1, (uint64_t)v15);
  v5 = v16;
  if (v16)
  {
    sub_100007E68(v15, v16);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = __chkstk_darwin();
    v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v6 + 16))(v9, v7);
    v10 = _bridgeAnythingToObjectiveC<A>(_:)(v9, v5);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    _s5Music18DragDropToPlaylistV6OriginVwxx_0(v15);
  }
  else
  {
    v10 = 0;
  }
  v11 = (objc_class *)type metadata accessor for SliderView.PanGestureRecognizer();
  v14.receiver = v2;
  v14.super_class = v11;
  v12 = objc_msgSendSuper2(&v14, "initWithTarget:action:", v10, a2);
  swift_unknownObjectRelease(v10);
  sub_100BC2F48(a1);
  return v12;
}

id sub_100CBDB40()
{
  return sub_10004D23C(0, type metadata accessor for SliderView.PanGestureRecognizer);
}

void sub_100CBDB50()
{
  static SliderView.Specs.barHeight = Int.seconds.getter(7);
}

uint64_t *SliderView.Specs.barHeight.unsafeMutableAddressor()
{
  if (qword_1011DE298 != -1)
    swift_once(&qword_1011DE298, sub_100CBDB50);
  return &static SliderView.Specs.barHeight;
}

double static SliderView.Specs.barHeight.getter()
{
  return sub_100BB5044(&qword_1011DE298, (uint64_t)&static SliderView.Specs.barHeight, (uint64_t)sub_100CBDB50);
}

void sub_100CBDBCC()
{
  static SliderView.Specs.expandedBarHeight = Int.seconds.getter(16);
}

uint64_t *SliderView.Specs.expandedBarHeight.unsafeMutableAddressor()
{
  if (qword_1011DE2A0 != -1)
    swift_once(&qword_1011DE2A0, sub_100CBDBCC);
  return &static SliderView.Specs.expandedBarHeight;
}

double static SliderView.Specs.expandedBarHeight.getter()
{
  return sub_100BB5044(&qword_1011DE2A0, (uint64_t)&static SliderView.Specs.expandedBarHeight, (uint64_t)sub_100CBDBCC);
}

CGFloat sub_100CBDC48()
{
  CGFloat result;
  CGAffineTransform v1;

  CGAffineTransformMakeScale(&v1, 1.05, 1.05);
  result = v1.a;
  *(CGAffineTransform *)static SliderView.Specs.expandedTransform = v1;
  return result;
}

char *SliderView.Specs.expandedTransform.unsafeMutableAddressor()
{
  if (qword_1011DE2A8 != -1)
    swift_once(&qword_1011DE2A8, sub_100CBDC48);
  return static SliderView.Specs.expandedTransform;
}

double static SliderView.Specs.expandedTransform.getter@<D0>(_OWORD *a1@<X8>)
{
  __int128 v2;
  double result;

  if (qword_1011DE2A8 != -1)
    swift_once(&qword_1011DE2A8, sub_100CBDC48);
  v2 = *(_OWORD *)&static SliderView.Specs.expandedTransform[16];
  *a1 = *(_OWORD *)static SliderView.Specs.expandedTransform;
  a1[1] = v2;
  result = *(double *)&static SliderView.Specs.expandedTransform[32];
  a1[2] = *(_OWORD *)&static SliderView.Specs.expandedTransform[32];
  return result;
}

void sub_100CBDD28()
{
  static SliderView.Specs.stretchLimit = Int.seconds.getter(12);
}

uint64_t *SliderView.Specs.stretchLimit.unsafeMutableAddressor()
{
  if (qword_1011DE2B0 != -1)
    swift_once(&qword_1011DE2B0, sub_100CBDD28);
  return &static SliderView.Specs.stretchLimit;
}

double static SliderView.Specs.stretchLimit.getter()
{
  return sub_100BB5044(&qword_1011DE2B0, (uint64_t)&static SliderView.Specs.stretchLimit, (uint64_t)sub_100CBDD28);
}

void sub_100CBDDA4()
{
  static SliderView.Specs.escapeHeight = Int.seconds.getter(180);
}

uint64_t *SliderView.Specs.escapeHeight.unsafeMutableAddressor()
{
  if (qword_1011DE2B8 != -1)
    swift_once(&qword_1011DE2B8, sub_100CBDDA4);
  return &static SliderView.Specs.escapeHeight;
}

double static SliderView.Specs.escapeHeight.getter()
{
  return sub_100BB5044(&qword_1011DE2B8, (uint64_t)&static SliderView.Specs.escapeHeight, (uint64_t)sub_100CBDDA4);
}

id SliderView.panRecognizer.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC11MusicCoreUI10SliderView____lazy_storage___panRecognizer;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView____lazy_storage___panRecognizer);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView____lazy_storage___panRecognizer);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SliderView.PanGestureRecognizer()), "initWithTarget:action:", v0, "panGestureRecognized:");
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t type metadata accessor for SliderView.PanGestureRecognizer()
{
  return objc_opt_self(_TtCC11MusicCoreUI10SliderViewP33_54515F1554A39BA10CF5FF24DBCB49D920PanGestureRecognizer);
}

void SliderView.panRecognizer.setter(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView____lazy_storage___panRecognizer);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView____lazy_storage___panRecognizer) = a1;

}

void (*SliderView.panRecognizer.modify(id *a1))(uint64_t *a1)
{
  void *v1;

  a1[1] = v1;
  *a1 = SliderView.panRecognizer.getter();
  return sub_100CBDF08;
}

void sub_100CBDF08(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v2 = *a1;
  v1 = a1[1];
  v3 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView____lazy_storage___panRecognizer);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView____lazy_storage___panRecognizer) = v2;

}

id SliderView.trackLayoutGuide.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackLayoutGuide);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackLayoutGuide, v3, 0, 0);
  return *v1;
}

void SliderView.trackLayoutGuide.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  _BYTE v5[24];

  v3 = (void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackLayoutGuide);
  swift_beginAccess(v3, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*SliderView.trackLayoutGuide.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackLayoutGuide, a1, 33, 0);
  return j_j__swift_endAccess;
}

id SliderView.elapsedTrackColor.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackColor);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackColor, v3, 0, 0);
  return *v1;
}

void SliderView.elapsedTrackColor.setter(void *a1)
{
  uint64_t v1;
  _QWORD *v3;
  void *v4;
  id v5;
  void *v6;
  _BYTE *v7;
  unint64_t v8;
  uint64_t v9;
  _BYTE v10[24];
  _BYTE v11[24];
  _BYTE v12[24];

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackColor);
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackColor, v12, 1, 0);
  v4 = (void *)*v3;
  *v3 = a1;
  v5 = a1;

  v6 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrack);
  v7 = (_BYTE *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking);
  v8 = swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking, v11, 0, 0).n128_u64[0];
  if (*v7 == 1)
  {
    v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackingColor);
    v8 = swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackingColor, &v9, 0, 0).n128_u64[0];
  }
  objc_msgSend(v6, "setBackgroundColor:", *v3, *(double *)&v8);
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrack), "setBackgroundColor:", *(_QWORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor), swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor, v10, 0, 0).n128_f64[0]);

}

void (*SliderView.elapsedTrackColor.modify(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackColor;
  v3[9] = v1;
  v3[10] = v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  return sub_100CBE1A8;
}

void sub_100CBE1A8(_QWORD *a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  _BYTE *v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  v3 = (_QWORD *)*a1;
  swift_endAccess(*a1);
  if ((a2 & 1) == 0)
  {
    v4 = v3[9];
    v5 = *(void **)(v4 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrack);
    v6 = (_BYTE *)(v4 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking);
    v7 = swift_beginAccess(v4 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking, v3, 0, 0).n128_u64[0];
    if ((*v6 & 1) != 0)
    {
      v8 = (_QWORD *)(v3[9] + OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackingColor);
      v7 = swift_beginAccess(v8, v3 + 6, 0, 0).n128_u64[0];
      v9 = v3[9];
    }
    else
    {
      v9 = v3[9];
      v8 = (_QWORD *)(v9 + v3[10]);
    }
    objc_msgSend(v5, "setBackgroundColor:", *v8, *(double *)&v7);
    objc_msgSend(*(id *)(v9 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrack), "setBackgroundColor:", *(_QWORD *)(v9 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor), swift_beginAccess(v9 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor, v3 + 3, 0, 0).n128_f64[0]);
  }
  free(v3);
}

id SliderView.remainingTrackColor.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor, v3, 0, 0);
  return *v1;
}

void SliderView.remainingTrackColor.setter(void *a1)
{
  uint64_t v1;
  _QWORD *v3;
  void *v4;
  id v5;
  void *v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE v9[24];
  _BYTE v10[24];
  _BYTE v11[24];

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor);
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor, v11, 1, 0);
  v4 = (void *)*v3;
  *v3 = a1;
  v5 = a1;

  v6 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrack);
  v7 = (_BYTE *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking);
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking, v10, 0, 0);
  if (*v7 == 1)
    v8 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackingColor;
  else
    v8 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackColor;
  objc_msgSend(v6, "setBackgroundColor:", *(_QWORD *)(v1 + v8), swift_beginAccess(v1 + v8, v9, 0, 0).n128_f64[0]);
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrack), "setBackgroundColor:", *v3);

}

void (*SliderView.remainingTrackColor.modify(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor;
  v3[9] = v1;
  v3[10] = v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  return sub_100CBE440;
}

void sub_100CBE440(_QWORD *a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  _BYTE *v6;
  uint64_t *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (_QWORD *)*a1;
  swift_endAccess(*a1);
  if ((a2 & 1) == 0)
  {
    v4 = v3[9];
    v5 = *(void **)(v4 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrack);
    v6 = (_BYTE *)(v4 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking);
    swift_beginAccess(v4 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking, v3, 0, 0);
    v7 = &OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackingColor;
    if (*v6)
      v8 = v3 + 6;
    else
      v8 = v3 + 3;
    if (!*v6)
      v7 = &OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackColor;
    v10 = v3[9];
    v9 = v3[10];
    objc_msgSend(v5, "setBackgroundColor:", *(_QWORD *)(v10 + *v7), swift_beginAccess(v10 + *v7, v8, 0, 0).n128_f64[0]);
    objc_msgSend(*(id *)(v10 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrack), "setBackgroundColor:", *(_QWORD *)(v10 + v9));
  }
  free(v3);
}

id SliderView.trackingColor.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackingColor);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackingColor, v3, 0, 0);
  return *v1;
}

void SliderView.trackingColor.setter(void *a1)
{
  uint64_t v1;
  _QWORD *v3;
  void *v4;
  id v5;
  void *v6;
  _BYTE *v7;
  unint64_t v8;
  uint64_t v9;
  _BYTE v10[24];
  _BYTE v11[24];
  _BYTE v12[24];

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackingColor);
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackingColor, v12, 1, 0);
  v4 = (void *)*v3;
  *v3 = a1;
  v5 = a1;

  v6 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrack);
  v7 = (_BYTE *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking);
  v8 = swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking, v11, 0, 0).n128_u64[0];
  if ((*v7 & 1) == 0)
  {
    v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackColor);
    v8 = swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackColor, v10, 0, 0).n128_u64[0];
  }
  objc_msgSend(v6, "setBackgroundColor:", *v3, *(double *)&v8);
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrack), "setBackgroundColor:", *(_QWORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor), swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor, &v9, 0, 0).n128_f64[0]);

}

void (*SliderView.trackingColor.modify(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackingColor;
  v3[9] = v1;
  v3[10] = v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  return sub_100CBE6CC;
}

void sub_100CBE6CC(_QWORD *a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  _BYTE *v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v3 = (_QWORD *)*a1;
  swift_endAccess(*a1);
  if ((a2 & 1) == 0)
  {
    v4 = v3[9];
    v5 = *(void **)(v4 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrack);
    v6 = (_BYTE *)(v4 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking);
    v7 = swift_beginAccess(v4 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking, v3, 0, 0).n128_u64[0];
    if (*v6 == 1)
    {
      v8 = v3[9];
      v9 = (_QWORD *)(v8 + v3[10]);
    }
    else
    {
      v9 = (_QWORD *)(v3[9] + OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackColor);
      v7 = swift_beginAccess(v9, v3 + 3, 0, 0).n128_u64[0];
      v8 = v3[9];
    }
    objc_msgSend(v5, "setBackgroundColor:", *v9, *(double *)&v7);
    objc_msgSend(*(id *)(v8 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrack), "setBackgroundColor:", *(_QWORD *)(v8 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor), swift_beginAccess(v8 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor, v3 + 6, 0, 0).n128_f64[0]);
  }
  free(v3);
}

double SliderView.value.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_value;
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_value, v3, 0, 0);
  return *(double *)v1;
}

uint64_t SliderView.isEnabled.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isEnabled);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isEnabled, v3, 0, 0);
  return *v1;
}

void SliderView.isEnabled.setter(unsigned __int8 a1)
{
  uint64_t v1;
  unsigned __int8 *v3;
  id v4;
  _BYTE v5[24];

  v3 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isEnabled);
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isEnabled, v5, 1, 0);
  *v3 = a1;
  v4 = SliderView.panRecognizer.getter();
  objc_msgSend(v4, "setEnabled:", *v3);

}

void (*SliderView.isEnabled.modify(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_isEnabled;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  return sub_100CBE91C;
}

void sub_100CBE91C(_QWORD *a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v3 = (_QWORD *)*a1;
  swift_endAccess(*a1);
  if ((a2 & 1) == 0)
  {
    v4 = v3[3];
    v5 = v3[4];
    v6 = SliderView.panRecognizer.getter();
    objc_msgSend(v6, "setEnabled:", *(unsigned __int8 *)(v4 + v5));

  }
  free(v3);
}

uint64_t SliderView.isTracking.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking, v3, 0, 0);
  return *v1;
}

uint64_t SliderView.valueChangedHandler.getter()
{
  return sub_10004B034(&OBJC_IVAR____TtC11MusicCoreUI10SliderView_valueChangedHandler, (void (*)(_QWORD, _QWORD))sub_100048AAC);
}

uint64_t SliderView.valueChangedHandler.setter(uint64_t a1, uint64_t a2)
{
  return sub_10004B0A8(a1, a2, &OBJC_IVAR____TtC11MusicCoreUI10SliderView_valueChangedHandler, sub_10004BA30);
}

uint64_t (*SliderView.valueChangedHandler.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_valueChangedHandler, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t SliderView.cancelledHandler.getter()
{
  return sub_10004B034(&OBJC_IVAR____TtC11MusicCoreUI10SliderView_cancelledHandler, (void (*)(_QWORD, _QWORD))sub_100048AAC);
}

uint64_t SliderView.cancelledHandler.setter(uint64_t a1, uint64_t a2)
{
  return sub_10004B0A8(a1, a2, &OBJC_IVAR____TtC11MusicCoreUI10SliderView_cancelledHandler, sub_10004BA30);
}

uint64_t (*SliderView.cancelledHandler.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_cancelledHandler, a1, 33, 0);
  return j__swift_endAccess;
}

id SliderView.semanticContentAttribute.getter()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SliderView();
  return objc_msgSendSuper2(&v2, "semanticContentAttribute");
}

uint64_t type metadata accessor for SliderView()
{
  return objc_opt_self(_TtC11MusicCoreUI10SliderView);
}

id SliderView.semanticContentAttribute.setter(uint64_t a1)
{
  char *v1;
  objc_super v4;

  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for SliderView();
  objc_msgSendSuper2(&v4, "setSemanticContentAttribute:", a1);
  return objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_stackView], "setSemanticContentAttribute:", objc_msgSend(v1, "semanticContentAttribute"));
}

uint64_t sub_100CBEC18(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id v17;
  char *v18;
  id v19;
  id v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  id v39;
  objc_class *v40;
  id v41;
  id v42;
  char *v43;
  id v44;
  id *v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  id v53;
  id v54;
  uint64_t v55;
  void *v56;
  id v57;
  id v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  uint64_t result;
  void *v63;
  _QWORD *v64;
  void *v65;
  void *v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  uint64_t v95;
  Class isa;
  uint64_t v97;
  id v98;
  _QWORD *v99;
  char v100[24];
  objc_super v101;

  v5 = v4;
  v10 = type metadata accessor for UIView.Corner.Radius(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin();
  v13 = (double *)((char *)&v97 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100007E8C(&qword_1011E6620);
  __chkstk_darwin();
  v15 = (char *)&v97 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_stackView;
  v17 = objc_allocWithZone((Class)UIStackView);
  v18 = v5;
  v19 = objc_msgSend(v17, "init");
  v20 = UIView.forAutolayout.getter();

  *(_QWORD *)&v5[v16] = v20;
  v21 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrack;
  v22 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v23 = UIView.forAutolayout.getter();

  *(_QWORD *)&v18[v21] = v23;
  v24 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrack;
  v25 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v26 = UIView.forAutolayout.getter();

  *(_QWORD *)&v18[v24] = v26;
  *(_QWORD *)&v18[OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackWidthConstraint] = 0;
  *(_QWORD *)&v18[OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackHeightConstraint] = 0;
  v27 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_feedbackGenerator;
  *(_QWORD *)&v18[v27] = objc_msgSend(objc_allocWithZone((Class)UIImpactFeedbackGenerator), "initWithStyle:", 0);
  v28 = &v18[OBJC_IVAR____TtC11MusicCoreUI10SliderView_startingWidth];
  *(_QWORD *)v28 = 0;
  v28[8] = 1;
  v29 = &v18[OBJC_IVAR____TtC11MusicCoreUI10SliderView_lastSeenBounds];
  *(_OWORD *)v29 = 0u;
  *((_OWORD *)v29 + 1) = 0u;
  *(_QWORD *)&v18[OBJC_IVAR____TtC11MusicCoreUI10SliderView____lazy_storage___panRecognizer] = 0;
  v30 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackLayoutGuide;
  *(_QWORD *)&v18[v30] = objc_msgSend(objc_allocWithZone((Class)UILayoutGuide), "init");
  v31 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackColor;
  v32 = (void *)objc_opt_self(UIColor);
  *(_QWORD *)&v18[v31] = objc_msgSend(v32, "whiteColor");
  v33 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor;
  *(_QWORD *)&v18[v33] = objc_msgSend(v32, "systemFillColor");
  v34 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackingColor;
  if (qword_1011DDEF0 != -1)
    swift_once(&qword_1011DDEF0, sub_100BC20E8);
  v35 = (void *)static UIColor.MusicTint.normal;
  *(_QWORD *)&v18[v34] = static UIColor.MusicTint.normal;
  v36 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_value;
  *(double *)&v18[v36] = Int.seconds.getter(0);
  v18[OBJC_IVAR____TtC11MusicCoreUI10SliderView_isEnabled] = 1;
  v18[OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking] = 0;
  v37 = &v18[OBJC_IVAR____TtC11MusicCoreUI10SliderView_valueChangedHandler];
  *(_QWORD *)v37 = 0;
  *((_QWORD *)v37 + 1) = 0;
  v38 = &v18[OBJC_IVAR____TtC11MusicCoreUI10SliderView_cancelledHandler];
  *(_QWORD *)v38 = 0;
  *((_QWORD *)v38 + 1) = 0;
  v39 = v35;

  v40 = (objc_class *)type metadata accessor for SliderView();
  v101.receiver = v18;
  v101.super_class = v40;
  v41 = objc_msgSendSuper2(&v101, "initWithFrame:", a1, a2, a3, a4);
  v42 = SliderView.panRecognizer.getter();
  objc_msgSend(v42, "_setRequiresSystemGesturesToFail:", 0);

  v43 = (char *)v41;
  v44 = SliderView.panRecognizer.getter();
  objc_msgSend(v43, "addGestureRecognizer:", v44);

  v45 = (id *)&v43[OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackLayoutGuide];
  objc_msgSend(v43, "addLayoutGuide:", *(_QWORD *)&v43[OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackLayoutGuide], swift_beginAccess(&v43[OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackLayoutGuide], v100, 0, 0).n128_f64[0]);
  objc_msgSend(v43, "setExclusiveTouch:", 1);
  v46 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_stackView;
  v47 = *(void **)&v43[OBJC_IVAR____TtC11MusicCoreUI10SliderView_stackView];
  v48 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrack;
  objc_msgSend(v47, "addArrangedSubview:", *(_QWORD *)&v43[OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrack]);
  objc_msgSend(v47, "addArrangedSubview:", *(_QWORD *)&v43[OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrack]);
  objc_msgSend(v47, "setAxis:", 0);
  if (qword_1011DE298 != -1)
    swift_once(&qword_1011DE298, sub_100CBDB50);
  *v13 = *(double *)&static SliderView.Specs.barHeight * 0.5;
  *((_BYTE *)v13 + 8) = 1;
  v49 = (*(uint64_t (**)(double *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for UIView.Corner.Radius.value(_:), v10);
  v50 = static CACornerMask.all.getter(v49);
  UIView.Corner.init(radius:mask:)(v13, v50);
  v51 = type metadata accessor for UIView.Corner(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v15, 0, 1, v51);
  UIView.corner.setter(v15);
  v52 = objc_msgSend(*(id *)&v43[v46], "layer");
  objc_msgSend(v52, "setMasksToBounds:", 1);

  objc_msgSend(v43, "addSubview:", *(_QWORD *)&v43[v46]);
  v53 = objc_msgSend(*(id *)&v43[v48], "widthAnchor");
  v54 = objc_msgSend(v53, "constraintEqualToConstant:", 0.0);

  v55 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackWidthConstraint;
  v56 = *(void **)&v43[OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackWidthConstraint];
  *(_QWORD *)&v43[OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackWidthConstraint] = v54;

  v57 = objc_msgSend(*(id *)&v43[v46], "heightAnchor");
  v58 = objc_msgSend(v57, "constraintEqualToConstant:", *(double *)&static SliderView.Specs.barHeight);

  v59 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackHeightConstraint;
  v60 = *(void **)&v43[OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackHeightConstraint];
  *(_QWORD *)&v43[OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackHeightConstraint] = v58;

  v61 = sub_100007E8C(&qword_1011DF520);
  result = swift_allocObject(v61, 120, 7);
  *(_OWORD *)(result + 16) = xmmword_100EC1980;
  v63 = *(void **)&v43[v55];
  if (v63)
  {
    v64 = (_QWORD *)result;
    *(_QWORD *)(result + 32) = v63;
    v65 = *(void **)&v43[v59];
    if (v65)
    {
      v98 = (id)objc_opt_self(NSLayoutConstraint);
      v64[5] = v65;
      v66 = *(void **)&v43[v46];
      v67 = v63;
      v68 = v65;
      v69 = objc_msgSend(v66, "leadingAnchor");
      v70 = objc_msgSend(v43, "leadingAnchor");
      v71 = objc_msgSend(v69, "constraintEqualToAnchor:", v70);

      v64[6] = v71;
      v72 = objc_msgSend(*(id *)&v43[v46], "trailingAnchor");
      v73 = objc_msgSend(v43, "trailingAnchor");
      v74 = objc_msgSend(v72, "constraintEqualToAnchor:", v73);

      v64[7] = v74;
      v75 = objc_msgSend(*(id *)&v43[v46], "topAnchor");
      v76 = objc_msgSend(v43, "topAnchor");
      v77 = objc_msgSend(v75, "constraintEqualToAnchor:", v76);

      v64[8] = v77;
      v78 = objc_msgSend(*(id *)&v43[v46], "bottomAnchor");
      v79 = objc_msgSend(v43, "bottomAnchor");
      v80 = objc_msgSend(v78, "constraintEqualToAnchor:", v79);

      v64[9] = v80;
      v81 = objc_msgSend(*(id *)&v43[v46], "centerYAnchor");
      v82 = objc_msgSend(v43, "centerYAnchor");
      v83 = objc_msgSend(v81, "constraintEqualToAnchor:", v82);

      v64[10] = v83;
      v84 = objc_msgSend(*v45, "leadingAnchor");
      v85 = objc_msgSend(v43, "leadingAnchor");
      v86 = objc_msgSend(v84, "constraintEqualToAnchor:", v85);

      v64[11] = v86;
      v87 = objc_msgSend(*v45, "trailingAnchor");
      v88 = objc_msgSend(v43, "trailingAnchor");
      v89 = objc_msgSend(v87, "constraintEqualToAnchor:", v88);

      v64[12] = v89;
      v90 = objc_msgSend(*v45, "centerYAnchor");
      v91 = objc_msgSend(v43, "centerYAnchor");
      v92 = objc_msgSend(v90, "constraintEqualToAnchor:", v91);

      v64[13] = v92;
      v93 = objc_msgSend(*v45, "heightAnchor");
      v94 = objc_msgSend(v93, "constraintEqualToConstant:", *(double *)&static SliderView.Specs.barHeight);

      v64[14] = v94;
      v99 = v64;
      specialized Array._endMutation()(v95);
      sub_10004A07C(0, &qword_1011E01E8, NSLayoutConstraint_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v98, "activateConstraints:", isa, swift_bridgeObjectRelease().n128_f64[0]);

      return (uint64_t)v43;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

Swift::Void __swiftcall SliderView.layoutSubviews()()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  double Width;
  double *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10[24];
  objc_super v11;
  CGRect v12;
  CGRect v13;

  v11.receiver = v0;
  v11.super_class = (Class)type metadata accessor for SliderView();
  objc_msgSendSuper2(&v11, "layoutSubviews");
  objc_msgSend(v0, "bounds");
  v1 = &v0[OBJC_IVAR____TtC11MusicCoreUI10SliderView_lastSeenBounds];
  if (!CGRectEqualToRect(v12, *(CGRect *)&v0[OBJC_IVAR____TtC11MusicCoreUI10SliderView_lastSeenBounds]))
  {
    v2 = *(void **)&v0[OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackWidthConstraint];
    if (v2)
    {
      v3 = v2;
      objc_msgSend(v0, "bounds");
      Width = CGRectGetWidth(v13);
      v5 = (double *)&v0[OBJC_IVAR____TtC11MusicCoreUI10SliderView_value];
      swift_beginAccess(&v0[OBJC_IVAR____TtC11MusicCoreUI10SliderView_value], v10, 0, 0);
      objc_msgSend(v3, "setConstant:", Width * *v5);

      objc_msgSend(v0, "bounds");
      *(_QWORD *)v1 = v6;
      *((_QWORD *)v1 + 1) = v7;
      *((_QWORD *)v1 + 2) = v8;
      *((_QWORD *)v1 + 3) = v9;
    }
    else
    {
      __break(1u);
    }
  }
}

void SliderView.setValue(_:animated:)(char a1, double a2)
{
  char *v2;
  double v4;
  double *v5;
  void *v6;
  id v7;
  uint64_t v8;
  double v9;
  double v10;
  void *v11;
  uint64_t v12;
  void *v13;
  char *v14;
  _QWORD aBlock[6];
  char v16[24];
  CGRect v17;

  if (a2 < 0.0)
    a2 = 0.0;
  if (a2 <= 1.0)
    v4 = a2;
  else
    v4 = 1.0;
  v5 = (double *)&v2[OBJC_IVAR____TtC11MusicCoreUI10SliderView_value];
  swift_beginAccess(&v2[OBJC_IVAR____TtC11MusicCoreUI10SliderView_value], v16, 1, 0);
  if (v4 != *v5)
  {
    v6 = *(void **)&v2[OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackWidthConstraint];
    if (v6)
    {
      v7 = v6;
      objc_msgSend(v2, "bounds");
      objc_msgSend(v7, "setConstant:", v4 * CGRectGetWidth(v17));

      v8 = swift_allocObject(&unk_10110E880, 32, 7);
      *(_QWORD *)(v8 + 16) = v2;
      *(double *)(v8 + 24) = v4;
      if ((a1 & 1) != 0)
      {
        v9 = vabdd_f64(*v5, v4) * 0.25;
        if (v9 > 0.1)
          v10 = v9;
        else
          v10 = 0.1;
        v11 = (void *)objc_opt_self(UIView);
        v12 = swift_allocObject(&unk_10110E8A8, 32, 7);
        *(_QWORD *)(v12 + 16) = sub_100CBF908;
        *(_QWORD *)(v12 + 24) = v8;
        aBlock[4] = sub_10004D5F4;
        aBlock[5] = v12;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1001DBD98;
        aBlock[3] = &unk_10110E8C0;
        v13 = _Block_copy(aBlock);
        v14 = v2;
        swift_retain();
        swift_release();
        objc_msgSend(v11, "animateWithDuration:delay:options:animations:completion:", 4, v13, 0, v10, 0.0);
        swift_release();
        _Block_release(v13);
      }
      else
      {
        *v5 = v4;
        objc_msgSend(v2, "layoutIfNeeded");
        swift_release();
      }
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_100CBF8E4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_100CBF908()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  char *v3;
  double v4;
  char v6[24];

  v1 = *(char **)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = &v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_value];
  *(_QWORD *)&v4 = swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_value], v6, 1, 0).n128_u64[0];
  *(_QWORD *)v3 = v2;
  return objc_msgSend(v1, "layoutIfNeeded", v4);
}

void sub_100CBF96C(void *a1)
{
  char *v1;
  void *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  char *v18;
  char *v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  id v26;
  double v27;
  double v28;
  double Width;
  double v30;
  double v31;
  double v32;
  double *v33;
  char *v34;
  void (*v35)(uint64_t, double);
  uint64_t v36;
  double *v37;
  double v38;
  uint64_t v39;
  void *v40;
  char *v41;
  id v42;
  double v43;
  char v44[24];
  char v45[24];
  void **aBlock;
  uint64_t v47;
  uint64_t (*v48)(uint64_t);
  void *v49;
  void (*v50)();
  uint64_t v51;
  _BYTE v52[24];
  CGRect v53;
  CGRect v54;

  switch((unint64_t)objc_msgSend(a1, "state"))
  {
    case 1uLL:
      v3 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackWidthConstraint];
      if (!v3)
      {
        __break(1u);
        JUMPOUT(0x100CBFF40);
      }
      objc_msgSend(v3, "constant");
      v4 = &v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_startingWidth];
      *(_QWORD *)v4 = v5;
      v4[8] = 0;
      v6 = swift_allocObject(&unk_10110EA28, 24, 7);
      *(_QWORD *)(v6 + 16) = v1;
      v7 = &v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking];
      swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking], v52, 1, 0);
      if (*v7 == 1)
      {
        v8 = v1;
        goto LABEL_35;
      }
      *v7 = 1;
      v39 = swift_allocObject(&unk_10110EA50, 48, 7);
      *(_BYTE *)(v39 + 16) = 1;
      *(_QWORD *)(v39 + 24) = v1;
      *(_QWORD *)(v39 + 32) = sub_100CC06F0;
      *(_QWORD *)(v39 + 40) = v6;
      v40 = (void *)objc_opt_self(UIView);
      v50 = sub_100CC09B8;
      v51 = v39;
      aBlock = _NSConcreteStackBlock;
      v47 = 1107296256;
      v48 = sub_1001DBD98;
      v49 = &unk_10110EA68;
      v17 = _Block_copy(&aBlock);
      v41 = v1;
      swift_retain();
      swift_retain();
      swift_release();
      objc_msgSend(v40, "_animateUsingSpringWithDuration:delay:options:mass:stiffness:damping:initialVelocity:animations:completion:", 2, v17, 0, 1.0, 0.0, 1.0, 288.0, 26.5, 0.0);
      goto LABEL_34;
    case 2uLL:
      v19 = &v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking];
      *(_QWORD *)&v20 = swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking], &aBlock, 0, 0).n128_u64[0];
      if (*v19 == 1 && (v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_startingWidth + 8] & 1) == 0)
      {
        v21 = *(double *)&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_startingWidth];
        objc_msgSend(a1, "translationInView:", v1, v20);
        v23 = v22;
        v25 = fabs(v24);
        if (qword_1011DE2B8 != -1)
        {
          v43 = v25;
          swift_once(&qword_1011DE2B8, sub_100CBDDA4);
          v25 = v43;
        }
        if (v25 >= *(double *)&static SliderView.Specs.escapeHeight)
        {
          v42 = SliderView.panRecognizer.getter();
          objc_msgSend(v42, "setState:", 4);

        }
        else
        {
          v26 = objc_msgSend(v1, "effectiveUserInterfaceLayoutDirection");
          v27 = -v23;
          if (v26 != (id)1)
            v27 = v23;
          v28 = v21 + v27;
          objc_msgSend(v1, "bounds", *(_QWORD *)&v43);
          Width = CGRectGetWidth(v53);
          if (Width >= v28)
            Width = v28;
          if (Width < 0.0)
            v30 = 0.0;
          else
            v30 = Width;
          objc_msgSend(v1, "bounds");
          v31 = v30 / CGRectGetWidth(v54);
          if (v31 < 0.0)
            v31 = 0.0;
          if (v31 <= 1.0)
            v32 = v31;
          else
            v32 = 1.0;
          if (v32 == 1.0 || v32 == 0.0)
          {
            v33 = (double *)&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_value];
            swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_value], v44, 0, 0);
            if (v32 != *v33)
              objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_feedbackGenerator], "impactOccurred");
          }
          SliderView.setValue(_:animated:)(0, v32);
          v34 = &v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_valueChangedHandler];
          swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_valueChangedHandler], v52, 0, 0);
          v35 = *(void (**)(uint64_t, double))v34;
          if (*(_QWORD *)v34)
          {
            v36 = *((_QWORD *)v34 + 1);
            v37 = (double *)&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_value];
            swift_beginAccess(v37, v45, 0, 0);
            v38 = *v37;
            swift_retain();
            v35(1, v38);
            sub_10004BA30((uint64_t)v35, v36);
          }
        }
      }
      return;
    case 3uLL:
      v9 = &v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking];
      swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking], v52, 1, 0);
      if (*v9 != 1)
        return;
      v10 = swift_allocObject(&unk_10110E9B0, 24, 7);
      *(_QWORD *)(v10 + 16) = v1;
      *v9 = 0;
      v11 = swift_allocObject(&unk_10110E9D8, 48, 7);
      *(_BYTE *)(v11 + 16) = 0;
      *(_QWORD *)(v11 + 24) = v1;
      *(_QWORD *)(v11 + 32) = sub_100CC06D0;
      *(_QWORD *)(v11 + 40) = v10;
      v12 = (void *)objc_opt_self(UIView);
      v50 = sub_100CC09B8;
      v51 = v11;
      aBlock = _NSConcreteStackBlock;
      v47 = 1107296256;
      v13 = &unk_10110E9F0;
      break;
    case 4uLL:
      v14 = &v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking];
      swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking], v52, 1, 0);
      if (*v14 != 1)
        return;
      v15 = swift_allocObject(&unk_10110E938, 24, 7);
      *(_QWORD *)(v15 + 16) = v1;
      *v14 = 0;
      v16 = swift_allocObject(&unk_10110E960, 48, 7);
      *(_BYTE *)(v16 + 16) = 0;
      *(_QWORD *)(v16 + 24) = v1;
      *(_QWORD *)(v16 + 32) = sub_100CC0690;
      *(_QWORD *)(v16 + 40) = v15;
      v12 = (void *)objc_opt_self(UIView);
      v50 = sub_100CC069C;
      v51 = v16;
      aBlock = _NSConcreteStackBlock;
      v47 = 1107296256;
      v13 = &unk_10110E978;
      break;
    default:
      return;
  }
  v48 = sub_1001DBD98;
  v49 = v13;
  v17 = _Block_copy(&aBlock);
  v18 = v1;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v12, "_animateUsingSpringWithDuration:delay:options:mass:stiffness:damping:initialVelocity:animations:completion:", 2, v17, 0, 1.0, 0.0, 2.0, 500.0, 40.0, 0.0);
LABEL_34:
  swift_release();
  _Block_release(v17);
LABEL_35:
  swift_release();
}

void sub_100CBFF50(uint64_t a1)
{
  uint64_t v1;
  void (*v2)(__n128);
  uint64_t v3;
  __n128 v4;
  _BYTE v5[24];

  v1 = a1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_cancelledHandler;
  swift_beginAccess(a1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_cancelledHandler, v5, 0, 0);
  v2 = *(void (**)(__n128))v1;
  if (*(_QWORD *)v1)
  {
    v3 = *(_QWORD *)(v1 + 8);
    v4 = swift_retain();
    v2(v4);
    sub_10004BA30((uint64_t)v2, v3);
  }
}

void sub_100CBFFBC(uint64_t a1, char a2)
{
  uint64_t v4;
  void (*v5)(_QWORD, double);
  uint64_t v6;
  double *v7;
  double v8;
  uint64_t v9;
  _BYTE v10[24];

  v4 = a1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_valueChangedHandler;
  swift_beginAccess(a1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_valueChangedHandler, v10, 0, 0);
  v5 = *(void (**)(_QWORD, double))v4;
  if (*(_QWORD *)v4)
  {
    v6 = *(_QWORD *)(v4 + 8);
    v7 = (double *)(a1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_value);
    swift_beginAccess(v7, &v9, 0, 0);
    v8 = *v7;
    swift_retain();
    v5(a2 & 1, v8);
    sub_10004BA30((uint64_t)v5, v6);
  }
}

void sub_100CC00AC(char a1, char *a2, void (*a3)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double *v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  char *v22;
  uint64_t v23;
  char v25[24];
  char v26[24];
  char v27[24];

  v6 = type metadata accessor for UIView.Corner.Radius(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = (double *)&v25[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_100007E8C(&qword_1011E6620);
  __chkstk_darwin();
  v11 = &v25[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = *(void **)&a2[OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackHeightConstraint];
  if ((a1 & 1) == 0)
  {
    if (v12)
    {
      v16 = qword_1011DE298;
      v14 = v12;
      if (v16 != -1)
        swift_once(&qword_1011DE298, sub_100CBDB50);
      v15 = &static SliderView.Specs.barHeight;
      goto LABEL_10;
    }
LABEL_17:
    __break(1u);
    return;
  }
  if (!v12)
  {
    __break(1u);
    goto LABEL_17;
  }
  v13 = qword_1011DE2A0;
  v14 = v12;
  if (v13 != -1)
    swift_once(&qword_1011DE2A0, sub_100CBDBCC);
  v15 = &static SliderView.Specs.expandedBarHeight;
LABEL_10:
  objc_msgSend(v14, "setConstant:", *(double *)v15);

  *v9 = *(double *)v15 * 0.5;
  *((_BYTE *)v9 + 8) = 1;
  v17 = (*(uint64_t (**)(double *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for UIView.Corner.Radius.value(_:), v6);
  v18 = static CACornerMask.all.getter(v17);
  UIView.Corner.init(radius:mask:)(v9, v18);
  v19 = type metadata accessor for UIView.Corner(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v11, 0, 1, v19);
  v20 = UIView.corner.setter(v11);
  if (a3)
    a3(v20);
  v21 = *(void **)&a2[OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrack];
  v22 = &a2[OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking];
  swift_beginAccess(&a2[OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking], v27, 0, 0);
  if (*v22 == 1)
    v23 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackingColor;
  else
    v23 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackColor;
  objc_msgSend(v21, "setBackgroundColor:", *(_QWORD *)&a2[v23], swift_beginAccess(&a2[v23], v26, 0, 0).n128_f64[0]);
  objc_msgSend(*(id *)&a2[OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrack], "setBackgroundColor:", *(_QWORD *)&a2[OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor], swift_beginAccess(&a2[OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor], v25, 0, 0).n128_f64[0]);
  objc_msgSend(a2, "layoutIfNeeded");
}

id SliderView.__deallocating_deinit(uint64_t a1)
{
  return sub_10004D23C(a1, type metadata accessor for SliderView);
}

uint64_t sub_100CC0464()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100CC0488(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100CC0498(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

double sub_100CC04A0@<D0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  double *v3;
  double result;
  _BYTE v5[24];

  v3 = (double *)(*a1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_value);
  swift_beginAccess(v3, v5, 0, 0);
  result = *v3;
  *a2 = *(_QWORD *)v3;
  return result;
}

void sub_100CC04F0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;
  _BYTE v4[24];

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_value);
  swift_beginAccess(v3, v4, 1, 0);
  *v3 = v2;
}

void sub_100CC0544(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  _BYTE v4[24];

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking);
  swift_beginAccess(v3, v4, 0, 0);
  *a2 = *v3;
}

void sub_100CC0594(char *a1, _QWORD *a2)
{
  char v2;
  _BYTE *v3;
  _BYTE v4[24];

  v2 = *a1;
  v3 = (_BYTE *)(*a2 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking);
  swift_beginAccess(v3, v4, 1, 0);
  *v3 = v2;
}

ValueMetadata *type metadata accessor for SliderView.Specs()
{
  return &type metadata for SliderView.Specs;
}

uint64_t sub_100CC05F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100007E8C(&qword_1011E0700);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_100CC0638()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1011E65D8;
  if (!qword_1011E65D8)
  {
    v1 = sub_10004A07C(255, &qword_1011E65D0, UITouch_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1011E65D8);
  }
  return result;
}

void sub_100CC0690()
{
  uint64_t v0;

  sub_100CBFF50(*(_QWORD *)(v0 + 16));
}

void sub_100CC069C()
{
  uint64_t v0;

  sub_100CC00AC(*(_BYTE *)(v0 + 16), *(char **)(v0 + 24), *(void (**)(uint64_t))(v0 + 32));
}

uint64_t sub_100CC06AC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100CC06D0()
{
  uint64_t v0;

  sub_100CBFFBC(*(_QWORD *)(v0 + 16), 0);
}

void sub_100CC06F0()
{
  uint64_t v0;

  sub_100CBFFBC(*(_QWORD *)(v0 + 16), 1);
}

uint64_t sub_100CC0710()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 32))
    swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_100CC0744()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  id v3;
  id v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  char *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  id v23;

  v1 = v0;
  v2 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_stackView;
  v3 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v4 = UIView.forAutolayout.getter();

  *(_QWORD *)&v1[v2] = v4;
  v5 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrack;
  v6 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v7 = UIView.forAutolayout.getter();

  *(_QWORD *)&v1[v5] = v7;
  v8 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrack;
  v9 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v10 = UIView.forAutolayout.getter();

  *(_QWORD *)&v1[v8] = v10;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackWidthConstraint] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackHeightConstraint] = 0;
  v11 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_feedbackGenerator;
  *(_QWORD *)&v1[v11] = objc_msgSend(objc_allocWithZone((Class)UIImpactFeedbackGenerator), "initWithStyle:", 0);
  v12 = &v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_startingWidth];
  *(_QWORD *)v12 = 0;
  v12[8] = 1;
  v13 = &v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_lastSeenBounds];
  *v13 = 0u;
  v13[1] = 0u;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView____lazy_storage___panRecognizer] = 0;
  v14 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackLayoutGuide;
  *(_QWORD *)&v1[v14] = objc_msgSend(objc_allocWithZone((Class)UILayoutGuide), "init");
  v15 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackColor;
  v16 = (void *)objc_opt_self(UIColor);
  *(_QWORD *)&v1[v15] = objc_msgSend(v16, "whiteColor");
  v17 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor;
  *(_QWORD *)&v1[v17] = objc_msgSend(v16, "systemFillColor");
  v18 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackingColor;
  if (qword_1011DDEF0 != -1)
    swift_once(&qword_1011DDEF0, sub_100BC20E8);
  v19 = (void *)static UIColor.MusicTint.normal;
  *(_QWORD *)&v1[v18] = static UIColor.MusicTint.normal;
  v20 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_value;
  *(double *)&v1[v20] = Int.seconds.getter(0);
  v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_isEnabled] = 1;
  v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking] = 0;
  v21 = &v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_valueChangedHandler];
  *v21 = 0;
  v21[1] = 0;
  v22 = &v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_cancelledHandler];
  *v22 = 0;
  v22[1] = 0;
  v23 = v19;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100E2B820, "MusicCoreUI/SliderView.swift", 28, 2, 115, 0);
  __break(1u);
}

__int128 *SymbolButton.Configuration.platterMinimumSize.unsafeMutableAddressor()
{
  if (qword_1011DE2E8 != -1)
    swift_once(&qword_1011DE2E8, sub_100CCDB38);
  return &static SymbolButton.Configuration.platterMinimumSize;
}

unint64_t SymbolButton.CustomView.init(view:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>, int64x2_t a3@<Q0>, int64x2_t a4@<Q1>)
{
  int8x16_t v4;
  int8x16_t v5;
  uint64_t v6;

  a3.i64[0] = 0;
  *(_QWORD *)a2 = result;
  a4.i64[0] = result;
  v4 = (int8x16_t)vdupq_lane_s64(vmvnq_s8((int8x16_t)vceqq_s64(a4, a3)).i64[0], 0);
  v5 = vandq_s8(*(int8x16_t *)&UIEdgeInsetsZero.bottom, v4);
  v6 = 0x3FF0000000000000;
  *(int8x16_t *)(a2 + 8) = vandq_s8(*(int8x16_t *)&UIEdgeInsetsZero.top, v4);
  if (!result)
    v6 = 0;
  *(int8x16_t *)(a2 + 24) = v5;
  *(_QWORD *)(a2 + 40) = v6;
  *(_QWORD *)(a2 + 48) = 0;
  return result;
}

uint64_t SymbolButton.updateConfigurationIfNeeded(_:animation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  char *v5;
  char *v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  double v20;
  char *v21;
  char v22;
  char *v23;
  char *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  id v37;
  id v38;
  char *v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  id v49;
  void *v50;
  id v51;
  id v52;
  double v53;
  char *v54;
  void *v55;
  id v56;
  id v57;
  char *v58;
  uint64_t v59;
  id v60;
  id v61;
  void *v62;
  id v63;
  id v64;
  uint64_t *v65;
  void (*v66)(char *, char *);
  uint64_t v67;
  char *v68;
  id v69;
  char *v70;
  id v72;
  char *v73;
  _BYTE *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  char v83[24];
  char v84[24];
  char v85[24];
  char v86[24];
  char v87[24];
  char v88[24];
  char v89[24];
  char v90[8];

  v6 = v5;
  v81 = a5;
  v82 = a2;
  v80 = type metadata accessor for UIViewConfigurationState(0);
  v79 = *(_QWORD *)(v80 - 8);
  __chkstk_darwin(v80);
  v78 = (char *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100007E8C(&qword_1011E5C80);
  __chkstk_darwin(v11);
  v13 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for SymbolButton.Configuration(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A160(a1, (uint64_t)v13, &qword_1011E5C80);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    v18 = (uint64_t)&v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration];
    swift_beginAccess(&v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration], v90, 0, 0);
    sub_10005B704(v18, (uint64_t)v17, type metadata accessor for SymbolButton.Configuration);
    sub_10004FF60((uint64_t)v13, &qword_1011E5C80);
  }
  else
  {
    sub_10005B6C0((uint64_t)v13, (uint64_t)v17, type metadata accessor for SymbolButton.Configuration);
  }
  v19 = &v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHidden];
  *(_QWORD *)&v20 = swift_beginAccess(&v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHidden], v89, 0, 0).n128_u64[0];
  if ((*v19 & 1) != 0 || (v20 = *(double *)&v17[*(int *)(v14 + 68)], v20 != 0.0))
  {
    objc_msgSend(v6, "state", v20);
    v21 = &v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenDisabled];
    swift_beginAccess(&v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenDisabled], v88, 0, 0);
    v74 = v21;
    v22 = *v21;
    v76 = a4;
    v75 = a3;
    v77 = v14;
    if ((v22 & 1) != 0
      || (v23 = &v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHighlighted],
          swift_beginAccess(&v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHighlighted], v87, 0, 0), (*v23 & 1) != 0)|| (v24 = &v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenSelected], swift_beginAccess(&v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenSelected], v86, 0, 0), *v24 == 1))
    {
      if (qword_1011DE308 != -1)
        swift_once(&qword_1011DE308, sub_100CCE868);
      v26 = static SymbolButton.Background.normal;
      v25 = (void *)qword_1012501C8;
      v28 = qword_1012501D0;
      v27 = qword_1012501D8;
      v29 = *((_QWORD *)v17 + 24);
      v30 = (void *)*((_QWORD *)v17 + 25);
      v31 = *((_QWORD *)v17 + 26);
      v32 = *((_QWORD *)v17 + 27);
      swift_bridgeObjectRetain();
      v33 = v25;
      sub_10013BA8C(v29, v30, v31, v32);
      *((_QWORD *)v17 + 24) = v26;
      *((_QWORD *)v17 + 25) = v25;
      *((_QWORD *)v17 + 26) = v28;
      *((_QWORD *)v17 + 27) = v27;
      v34 = objc_msgSend(v6, "traitCollection");
      v35 = objc_msgSend(v34, "userInterfaceIdiom");

      if (v35 == (id)6)
      {
        v36 = (void *)objc_opt_self(UIColor);
        v37 = objc_msgSend(v36, "labelColor");

        *((_QWORD *)v17 + 14) = v37;
        v38 = objc_msgSend(v36, "labelColor");

        *((_QWORD *)v17 + 22) = v38;
      }
      v14 = v77;
      *(_QWORD *)&v17[*(int *)(v77 + 68)] = 0x3FF0000000000000;
      a4 = v76;
      a3 = v75;
    }
    if ((objc_msgSend(v6, "state") & 2) != 0 && *v74 == 1)
      *(_QWORD *)&v17[*(int *)(v14 + 68)] = 0x3FD0000000000000;
    if ((objc_msgSend(v6, "state") & 1) != 0)
    {
      v39 = &v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHighlighted];
      swift_beginAccess(&v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHighlighted], v83, 0, 0);
      if (*v39 == 1)
      {
        if (qword_1011DE310 != -1)
          swift_once(&qword_1011DE310, sub_100CCE960);
        v40 = (void *)qword_1012501E8;
        v74 = (_BYTE *)static SymbolButton.Background.highlighted;
        v42 = qword_1012501F0;
        v41 = qword_1012501F8;
        v43 = *((_QWORD *)v17 + 24);
        v44 = (void *)*((_QWORD *)v17 + 25);
        v45 = *((_QWORD *)v17 + 26);
        v46 = *((_QWORD *)v17 + 27);
        swift_bridgeObjectRetain();
        v72 = v40;
        sub_10013BA8C(v43, v44, v45, v46);
        *((_QWORD *)v17 + 24) = v74;
        v73 = v17 + 200;
        *((_QWORD *)v17 + 25) = v40;
        *((_QWORD *)v17 + 26) = v42;
        *((_QWORD *)v17 + 27) = v41;
        v74 = (_BYTE *)v41;
        v14 = v77;
        v47 = *(int *)(v77 + 68);
        *(_QWORD *)&v17[v47] = 0x3FE0000000000000;
        v48 = objc_msgSend(v6, "traitCollection");
        v49 = objc_msgSend(v48, "userInterfaceIdiom");

        a4 = v76;
        a3 = v75;
        if (v49 == (id)6)
        {
          v50 = (void *)objc_opt_self(UIColor);
          v51 = objc_msgSend(v50, "labelColor");

          *((_QWORD *)v17 + 14) = v51;
          v14 = v77;
          v52 = objc_msgSend(v50, "labelColor");

          *((_QWORD *)v17 + 22) = v52;
          *(_QWORD *)&v17[v47] = 0x3FF0000000000000;
          if (objc_msgSend(v6, "showsMenuAsPrimaryAction"))
          {
            if (objc_msgSend(v6, "isContextMenuInteractionEnabled"))
            {

              *(_QWORD *)&v53 = swift_bridgeObjectRelease(v74).n128_u64[0];
              *((_QWORD *)v17 + 24) = 0x3FF0000000000000;
              v54 = v73;
              *((_QWORD *)v73 + 1) = 0;
              *((_QWORD *)v54 + 2) = 0;
              *(_QWORD *)v54 = 0;
              v55 = v52;
              v56 = objc_msgSend(v50, "blackColor", v53);

              *((_QWORD *)v17 + 14) = v56;
              v14 = v77;
              v57 = objc_msgSend(v50, "blackColor");

              *((_QWORD *)v17 + 22) = v57;
            }
          }
        }
      }
    }
    if ((objc_msgSend(v6, "state") & 4) != 0)
    {
      v58 = &v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenSelected];
      swift_beginAccess(&v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenSelected], v84, 0, 0);
      if (*v58 == 1)
      {
        sub_10013BA8C(*((_QWORD *)v17 + 24), *((void **)v17 + 25), *((_QWORD *)v17 + 26), *((_QWORD *)v17 + 27));
        *((_QWORD *)v17 + 24) = 0x3FF0000000000000;
        *((_QWORD *)v17 + 25) = 0;
        *((_QWORD *)v17 + 26) = 0;
        *((_QWORD *)v17 + 27) = 0;
        v59 = *(int *)(v14 + 68);
        *(_QWORD *)&v17[v59] = 0x3FF0000000000000;
        v60 = objc_msgSend(v6, "traitCollection");
        v61 = objc_msgSend(v60, "userInterfaceIdiom");

        if (v61 == (id)6)
        {
          v62 = (void *)objc_opt_self(UIColor);
          v63 = objc_msgSend(v62, "blackColor");

          *((_QWORD *)v17 + 14) = v63;
          v64 = objc_msgSend(v62, "blackColor");

          *((_QWORD *)v17 + 22) = v64;
        }
        else if ((objc_msgSend(v6, "state") & 1) != 0)
        {
          *(_QWORD *)&v17[v59] = 0x3FE0000000000000;
        }
      }
    }
  }
  v65 = (uint64_t *)&v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_configurationProvider];
  swift_beginAccess(&v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_configurationProvider], v85, 0, 0);
  v66 = (void (*)(char *, char *))*v65;
  if (*v65)
  {
    v67 = v65[1];
    sub_100048AAC(*v65, v67);
    v68 = v6;
    v69 = objc_msgSend(v68, "traitCollection");
    v70 = v78;
    UIViewConfigurationState.init(traitCollection:)(v69);
    UIViewConfigurationState.isDisabled.setter(objc_msgSend(v68, "isEnabled") ^ 1);
    UIViewConfigurationState.isSelected.setter(objc_msgSend(v68, "isSelected"));
    UIViewConfigurationState.isHighlighted.setter(objc_msgSend(v68, "isHighlighted"));

    v66(v70, v17);
    sub_10004BA30((uint64_t)v66, v67);
    (*(void (**)(char *, uint64_t))(v79 + 8))(v70, v80);
  }
  SymbolButton.setConfiguration(_:animation:updates:)((uint64_t)v17, v82, a3, a4, v81 & 1, (uint64_t)_swiftEmptyArrayStorage);
  return sub_10005B748((uint64_t)v17, type metadata accessor for SymbolButton.Configuration);
}

double static SymbolButton.Material.with(_:)@<D0>(void (*a1)(__int128 *)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char v4;
  double result;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  char v9;
  __int128 v10;

  v7 = 0uLL;
  v8 = 0;
  v9 = 2;
  v10 = 0uLL;
  a1(&v7);
  v3 = v8;
  v4 = v9;
  result = *(double *)&v7;
  v6 = v10;
  *(_OWORD *)a2 = v7;
  *(_QWORD *)(a2 + 16) = v3;
  *(_BYTE *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 32) = v6;
  return result;
}

double static SymbolButton.Symbol.with(_:)@<D0>(void (*a1)(__int128 *)@<X0>, uint64_t a2@<X8>)
{
  NSString *v4;
  uint64_t v5;
  char v6;
  char v7;
  double result;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  char v17;
  __int128 v18;
  __int128 v19;
  char v20;
  __int128 v21;
  double v22;
  uint64_t v23;

  v14 = 0uLL;
  *(_QWORD *)&v15 = 0;
  *((_QWORD *)&v15 + 1) = UIFontTextStyleSubheadline;
  v16 = 0;
  v17 = 1;
  v18 = xmmword_100EC0EB0;
  v19 = 0uLL;
  v20 = -1;
  v21 = 0uLL;
  v22 = 1.0;
  v23 = 0;
  v4 = UIFontTextStyleSubheadline;
  a1(&v14);
  v5 = v16;
  v6 = v17;
  v7 = v20;
  result = v22;
  v9 = v23;
  v10 = v15;
  v11 = v18;
  v12 = v19;
  v13 = v21;
  *(_OWORD *)a2 = v14;
  *(_OWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 32) = v5;
  *(_BYTE *)(a2 + 40) = v6;
  *(_OWORD *)(a2 + 48) = v11;
  *(_OWORD *)(a2 + 64) = v12;
  *(_BYTE *)(a2 + 80) = v7;
  *(_OWORD *)(a2 + 88) = v13;
  *(double *)(a2 + 104) = result;
  *(_QWORD *)(a2 + 112) = v9;
  return result;
}

double static SymbolButton.Title.with(_:)@<D0>(void (*a1)(__int128 *)@<X0>, uint64_t a2@<X8>)
{
  NSString *v4;
  UIFontTextStyle v5;
  double result;
  uint64_t v7;
  uint64_t v8;
  char v9;
  __int128 v10;
  __int128 v11;
  UIFontTextStyle v12;
  double v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  v11 = 0uLL;
  v12 = UIFontTextStyleSubheadline;
  v13 = UIFontWeightSemibold;
  v14 = 0uLL;
  v15 = 0x3FF0000000000000;
  v16 = 0;
  v17 = 0;
  v4 = UIFontTextStyleSubheadline;
  a1(&v11);
  v5 = v12;
  result = v13;
  v7 = v15;
  v8 = v16;
  v9 = v17;
  v10 = v14;
  *(_OWORD *)a2 = v11;
  *(_QWORD *)(a2 + 16) = v5;
  *(double *)(a2 + 24) = result;
  *(_OWORD *)(a2 + 32) = v10;
  *(_QWORD *)(a2 + 48) = v7;
  *(_QWORD *)(a2 + 56) = v8;
  *(_BYTE *)(a2 + 64) = v9;
  return result;
}

uint64_t UIView.Corner.roundedRect.unsafeMutableAddressor()
{
  return sub_100C3138C(&qword_1011DE328, (uint64_t (*)(_QWORD))&type metadata accessor for UIView.Corner, (uint64_t)static UIView.Corner.roundedRect, (uint64_t)sub_100CCEBB4);
}

uint64_t static SymbolButton.Configuration.with(_:)@<X0>(uint64_t (*a1)(uint64_t)@<X0>, uint64_t a2@<X8>)
{
  SymbolButton.Configuration.init()(a2);
  return a1(a2);
}

uint64_t static SymbolButton.Background.with(_:)(void (*a1)(uint64_t *))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = 0x3FF0000000000000;
  v3 = 0;
  v4 = 0;
  v5 = 0;
  a1(&v2);
  return v3;
}

char *SymbolButton.__allocating_init(configuration:handler:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  return SymbolButton.init(configuration:handler:)(a1, a2, a3);
}

char *SymbolButton.init(configuration:handler:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  objc_class *v19;
  id v20;
  uint64_t v21;
  double v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  objc_class *v33;
  char *v34;
  uint64_t v35;
  void *v36;
  char *v37;
  id v38;
  void *v39;
  void *v40;
  id v41;
  uint64_t v42;
  void *v43;
  uint64_t ObjCClassFromMetadata;
  id v45;
  char *v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  char *v54;
  void *v55;
  UIAccessibilityTraits v56;
  char *v57;
  unint64_t v58;
  UIAccessibilityTraits v59;
  id v60;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t ObjectType;
  uint64_t v66;
  uint64_t v67;
  char v68[24];
  objc_super v69;
  char v70[24];
  char v71[24];
  objc_super v72;
  uint64_t v73;
  __int128 v74;
  __int128 v75;
  uint64_t v76;

  v67 = a3;
  v66 = a2;
  ObjectType = swift_getObjectType();
  v5 = sub_100007E8C(&qword_1011E6620);
  __chkstk_darwin(v5);
  v63 = (uint64_t)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SymbolButton.Metrics(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v64 = (uint64_t *)((char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = &v3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_debugLabel];
  *v10 = 0;
  v10[1] = 0;
  v11 = &v3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_configurationProvider];
  *v11 = 0;
  v11[1] = 0;
  v12 = (uint64_t *)&v3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_handler];
  *v12 = 0;
  v12[1] = 0;
  v3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHighlighted] = 1;
  v3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenSelected] = 1;
  v3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenDisabled] = 1;
  v3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHidden] = 1;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_pendingAnimatedChangesCount] = 0;
  v13 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_hitRectMinimumSize;
  v14 = qword_1011DE2F0;
  v15 = v3;
  if (v14 != -1)
    swift_once(&qword_1011DE2F0, sub_100CCDB7C);
  *(_OWORD *)&v3[v13] = static SymbolButton.Configuration.hitRectMinimumSize;
  v16 = &v15[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_buildMenu];
  *v16 = 0;
  v16[1] = 0;
  v17 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_containerView;
  *(_QWORD *)&v15[v17] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v18 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_materialView;
  v73 = 1;
  v19 = (objc_class *)type metadata accessor for SymbolButton.MaterialView();
  v74 = 0u;
  v75 = 0u;
  v76 = 0;
  v72.receiver = objc_allocWithZone(v19);
  v72.super_class = v19;
  v20 = objc_msgSendSuper2(&v72, "initWithEffect:", 0);
  sub_100CCC1B8((uint64_t)&v73);

  *(_QWORD *)&v15[v18] = v20;
  v21 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_backgroundView;
  if (qword_1011DE2C8 != -1)
    swift_once(&qword_1011DE2C8, sub_100CC6F80);
  swift_beginAccess(&static SymbolButton.Background.clear, v71, 0, 0);
  v22 = *(double *)&static SymbolButton.Background.clear;
  v23 = (void *)qword_101250118;
  v24 = qword_101250120;
  v25 = qword_101250128;
  v26 = objc_allocWithZone((Class)type metadata accessor for SymbolButton.BackgroundView());
  swift_bridgeObjectRetain();
  v27 = v23;
  *(_QWORD *)&v15[v21] = sub_100CCC5A4(v23, v22, v24, v25);
  *(_QWORD *)&v15[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___imageView] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_customView] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView] = 0;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v8 + 56))(&v15[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___metrics], 1, 1, v7);
  v15[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_isClippingInvalidated] = 1;
  v28 = a1;
  sub_10005B704(a1, (uint64_t)&v15[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration], type metadata accessor for SymbolButton.Configuration);
  swift_beginAccess(v12, v70, 1, 0);
  v29 = *v12;
  v30 = v12[1];
  v31 = v66;
  v32 = v67;
  *v12 = v66;
  v12[1] = v32;
  sub_100048AAC(v31, v32);
  sub_10004BA30(v29, v30);

  v33 = (objc_class *)type metadata accessor for SymbolButton(0);
  v69.receiver = v15;
  v69.super_class = v33;
  v34 = (char *)objc_msgSendSuper2(&v69, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v35 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_containerView;
  v36 = *(void **)&v34[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_containerView];
  v37 = v34;
  objc_msgSend(v36, "setAutoresizingMask:", 18);
  v38 = v36;
  objc_msgSend(v37, "bounds");
  objc_msgSend(v38, "setFrame:");

  v39 = *(void **)&v34[v35];
  objc_msgSend(v37, "addSubview:", v39);
  v40 = *(void **)&v37[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_materialView];
  objc_msgSend(v39, "addSubview:", v40);
  v41 = objc_msgSend(v40, "contentView");
  v42 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_backgroundView;
  objc_msgSend(v41, "addSubview:", *(_QWORD *)&v37[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_backgroundView]);

  v43 = *(void **)&v37[v42];
  type metadata accessor for SymbolButton.Label();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v45 = v43;
  if ((objc_msgSend(v45, "isKindOfClass:", ObjCClassFromMetadata) & 1) == 0)
  {
    v46 = &v37[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration];
    swift_beginAccess(&v37[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration], v68, 0, 0);
    v47 = type metadata accessor for SymbolButton.Configuration(0);
    v48 = v46[*(int *)(v47 + 76)];
    if (v48 == 2)
    {
      v49 = v63;
      sub_10004A160((uint64_t)&v46[*(int *)(v47 + 36)], v63, &qword_1011E6620);
      v50 = type metadata accessor for UIView.Corner(0);
      v51 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 48))(v49, 1, v50) != 1;
      sub_10004FF60(v49, &qword_1011E6620);
    }
    else
    {
      v51 = v48 & 1;
    }
    objc_msgSend(v45, "setClipsToBounds:", v51);
  }

  sub_100CCA988(a1);
  v52 = v64;
  sub_100CCA5B0(v64);
  sub_100CCB528((uint64_t)v52);
  sub_10005B748((uint64_t)v52, type metadata accessor for SymbolButton.Metrics);
  sub_10004A07C(0, &qword_1011E0668, UIAction_ptr);
  v53 = swift_allocObject(&unk_10110EAA0, 24, 7);
  *(_QWORD *)(v53 + 16) = ObjectType;
  v54 = v37;
  v55 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0x6E6F69746341, 0xE600000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100CCEE84, v53);
  objc_msgSend(v54, "addAction:forControlEvents:", v55, 64);

  v56 = UIAccessibilityTraitButton;
  v57 = v54;
  v58 = (unint64_t)objc_msgSend(v57, "accessibilityTraits");
  if ((v56 & ~v58) != 0)
    v59 = v56;
  else
    v59 = 0;
  objc_msgSend(v57, "setAccessibilityTraits:", v59 | v58);

  v60 = objc_msgSend(objc_allocWithZone((Class)UIPointerInteraction), "initWithDelegate:", v57);
  objc_msgSend(v57, "addInteraction:", v60);

  sub_10004BA30(v66, v67);
  sub_10005B748(v28, type metadata accessor for SymbolButton.Configuration);
  return v57;
}

void sub_100CC1C48(void *a1, uint64_t a2)
{
  id v3;
  id v4;
  void *v5;
  char *v6;
  void (*v7)(void *, __n128);
  uint64_t v8;
  __n128 v9;
  char *v10;
  _OWORD v11[2];
  _BYTE v12[24];
  uint64_t v13;

  v3 = objc_msgSend(a1, "sender");
  if (v3)
  {
    v4 = v3;
    _bridgeAnyObjectToAny(_:)(v11, v3);
    swift_unknownObjectRelease(v4);
  }
  else
  {
    memset(v11, 0, sizeof(v11));
  }
  sub_100065228((uint64_t)v11, (uint64_t)v12, &qword_1011E0700);
  if (v13)
  {
    if ((swift_dynamicCast(&v10, v12, (char *)&type metadata for Any + 8, a2, 6) & 1) != 0)
    {
      v5 = v10;
      v6 = &v10[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_handler];
      swift_beginAccess(&v10[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_handler], v12, 0, 0);
      v7 = *(void (**)(void *, __n128))v6;
      if (*(_QWORD *)v6)
      {
        v8 = *((_QWORD *)v6 + 1);
        v9 = swift_retain(v8);
        v7(v5, v9);

        sub_10004BA30((uint64_t)v7, v8);
      }
      else
      {

      }
    }
  }
  else
  {
    sub_10004FF60((uint64_t)v12, &qword_1011E0700);
  }
}

uint64_t SymbolButton.debugLabel.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_debugLabel);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_debugLabel, v4, 0, 0);
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t SymbolButton.debugLabel.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  _BYTE v8[24];

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_debugLabel);
  swift_beginAccess(v5, v8, 1, 0);
  v6 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease(v6);
}

uint64_t (*SymbolButton.debugLabel.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_debugLabel, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t SymbolButton.configurationProvider.getter()
{
  return sub_10004B034(&OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_configurationProvider, (void (*)(_QWORD, _QWORD))sub_10004BA50);
}

uint64_t SymbolButton.configurationProvider.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  char *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v13[24];

  sub_100007E8C(&qword_1011E5C80);
  __chkstk_darwin();
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = (uint64_t *)(v2 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_configurationProvider);
  swift_beginAccess(v2 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_configurationProvider, v13, 1, 0);
  v8 = *v7;
  v9 = v7[1];
  *v7 = a1;
  v7[1] = a2;
  sub_100048AAC(a1, a2);
  sub_10004BA30(v8, v9);
  v10 = type metadata accessor for SymbolButton.Configuration(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v6, 1, 1, v10);
  SymbolButton.updateConfigurationIfNeeded(_:animation:)((uint64_t)v6, 0, 0, 0, 1);
  sub_10004FF60((uint64_t)v6, &qword_1011E5C80);
  return sub_10004BA30(a1, a2);
}

void (*SymbolButton.configurationProvider.modify(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = sub_100007E8C(&qword_1011E5C80);
  v3[4] = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_configurationProvider, v3, 33, 0);
  return sub_100CC2018;
}

void sub_100CC2018(_QWORD *a1, char a2)
{
  _QWORD *v3;
  void *v4;
  uint64_t v5;

  v3 = (_QWORD *)*a1;
  swift_endAccess(*a1);
  v4 = (void *)v3[4];
  if ((a2 & 1) == 0)
  {
    v5 = type metadata accessor for SymbolButton.Configuration(0);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
    SymbolButton.updateConfigurationIfNeeded(_:animation:)((uint64_t)v4, 0, 0, 0, 1);
    sub_10004FF60((uint64_t)v4, &qword_1011E5C80);
  }
  free(v4);
  free(v3);
}

void SymbolButton.configurationState.getter()
{
  void *v0;
  id v1;

  v1 = v0;
  UIViewConfigurationState.init(traitCollection:)(objc_msgSend(v1, "traitCollection"));
  UIViewConfigurationState.isDisabled.setter(objc_msgSend(v1, "isEnabled") ^ 1);
  UIViewConfigurationState.isSelected.setter(objc_msgSend(v1, "isSelected"));
  UIViewConfigurationState.isHighlighted.setter(objc_msgSend(v1, "isHighlighted"));

}

uint64_t SymbolButton.handler.getter()
{
  return sub_10004B034(&OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_handler, (void (*)(_QWORD, _QWORD))sub_100048AAC);
}

uint64_t SymbolButton.handler.setter(uint64_t a1, uint64_t a2)
{
  return sub_10004B0A8(a1, a2, &OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_handler, sub_10004BA30);
}

uint64_t (*SymbolButton.handler.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_handler, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t SymbolButton.automaticallyAdjustsAlphaWhenHighlighted.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHighlighted);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHighlighted, v3, 0, 0);
  return *v1;
}

void SymbolButton.automaticallyAdjustsAlphaWhenHighlighted.setter(char a1)
{
  sub_100CC22D4(a1, &OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHighlighted);
}

uint64_t (*SymbolButton.automaticallyAdjustsAlphaWhenHighlighted.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  _BYTE *v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = sub_100007E8C(&qword_1011E5C80);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v6 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHighlighted;
  v3[4] = v5;
  v3[5] = v6;
  v7 = (_BYTE *)(v1 + v6);
  swift_beginAccess(v1 + v6, v3, 1, 0);
  *((_BYTE *)v3 + 48) = *v7;
  return sub_100CC2280;
}

uint64_t SymbolButton.automaticallyAdjustsAlphaWhenSelected.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenSelected);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenSelected, v3, 0, 0);
  return *v1;
}

void SymbolButton.automaticallyAdjustsAlphaWhenSelected.setter(char a1)
{
  sub_100CC22D4(a1, &OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenSelected);
}

void sub_100CC22D4(char a1, _QWORD *a2)
{
  uint64_t v2;
  int v5;
  uint64_t v6;
  char *v7;
  _BYTE *v8;
  int v9;
  uint64_t v10;
  _BYTE v12[24];

  v5 = a1 & 1;
  sub_100007E8C(&qword_1011E5C80);
  __chkstk_darwin();
  v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = (_BYTE *)(v2 + *a2);
  swift_beginAccess(v8, v12, 1, 0);
  v9 = *v8;
  *v8 = a1;
  if (v9 != v5)
  {
    v10 = type metadata accessor for SymbolButton.Configuration(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    SymbolButton.updateConfigurationIfNeeded(_:animation:)((uint64_t)v7, 0, 0, 0, 1);
    sub_10004FF60((uint64_t)v7, &qword_1011E5C80);
  }
}

uint64_t (*SymbolButton.automaticallyAdjustsAlphaWhenSelected.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  _BYTE *v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = sub_100007E8C(&qword_1011E5C80);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v6 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenSelected;
  v3[4] = v5;
  v3[5] = v6;
  v7 = (_BYTE *)(v1 + v6);
  swift_beginAccess(v1 + v6, v3, 1, 0);
  *((_BYTE *)v3 + 48) = *v7;
  return sub_100CC2280;
}

void sub_100CC2448(void ***a1)
{
  void **v1;
  _BYTE *v2;
  void *v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *a1;
  v2 = (*a1)[5];
  v3 = (*a1)[3];
  v4 = *((unsigned __int8 *)*a1 + 48);
  v5 = v2[(_QWORD)v3];
  v2[(_QWORD)v3] = v4;
  if (((v4 ^ v5) & 1) != 0)
  {
    v6 = (uint64_t)v1[4];
    v7 = type metadata accessor for SymbolButton.Configuration(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
    SymbolButton.updateConfigurationIfNeeded(_:animation:)(v6, 0, 0, 0, 1);
    sub_10004FF60(v6, &qword_1011E5C80);
  }
  free(v1[4]);
  free(v1);
}

uint64_t SymbolButton.automaticallyAdjustsAlphaWhenDisabled.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenDisabled);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenDisabled, v3, 0, 0);
  return *v1;
}

void SymbolButton.automaticallyAdjustsAlphaWhenDisabled.setter(char a1)
{
  sub_100CC22D4(a1, &OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenDisabled);
}

uint64_t (*SymbolButton.automaticallyAdjustsAlphaWhenDisabled.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  _BYTE *v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = sub_100007E8C(&qword_1011E5C80);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v6 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenDisabled;
  v3[4] = v5;
  v3[5] = v6;
  v7 = (_BYTE *)(v1 + v6);
  swift_beginAccess(v1 + v6, v3, 1, 0);
  *((_BYTE *)v3 + 48) = *v7;
  return sub_100CC2280;
}

uint64_t SymbolButton.automaticallyAdjustsAlphaWhenHidden.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHidden);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHidden, v3, 0, 0);
  return *v1;
}

void SymbolButton.automaticallyAdjustsAlphaWhenHidden.setter(char a1)
{
  sub_100CC22D4(a1, &OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHidden);
}

uint64_t (*SymbolButton.automaticallyAdjustsAlphaWhenHidden.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  _BYTE *v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = sub_100007E8C(&qword_1011E5C80);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v6 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHidden;
  v3[4] = v5;
  v3[5] = v6;
  v7 = (_BYTE *)(v1 + v6);
  swift_beginAccess(v1 + v6, v3, 1, 0);
  *((_BYTE *)v3 + 48) = *v7;
  return sub_100CC2280;
}

uint64_t SymbolButton.configuration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_10005B704(v3, a1, type metadata accessor for SymbolButton.Configuration);
}

uint64_t SymbolButton.configuration.setter(uint64_t a1)
{
  SymbolButton.setConfiguration(_:animation:updates:)(a1, 0, 0, 0, 1, (uint64_t)_swiftEmptyArrayStorage);
  return sub_10005B748(a1, type metadata accessor for SymbolButton.Configuration);
}

void (*SymbolButton.configuration.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  void *v5;
  uint64_t v6;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for SymbolButton.Configuration(0) - 8) + 64);
  v3[4] = malloc(v4);
  v5 = malloc(v4);
  v3[5] = v5;
  v6 = v1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration;
  swift_beginAccess(v6, v3, 0, 0);
  sub_10005B704(v6, (uint64_t)v5, type metadata accessor for SymbolButton.Configuration);
  return sub_100CC27E0;
}

void sub_100CC27E0(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = *(void **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 32);
  v4 = *(void **)(*(_QWORD *)a1 + 40);
  if ((a2 & 1) != 0)
  {
    sub_10005B704(*(_QWORD *)(*(_QWORD *)a1 + 40), (uint64_t)v3, type metadata accessor for SymbolButton.Configuration);
    SymbolButton.setConfiguration(_:animation:updates:)((uint64_t)v3, 0, 0, 0, 1, (uint64_t)_swiftEmptyArrayStorage);
    sub_10005B748((uint64_t)v3, type metadata accessor for SymbolButton.Configuration);
  }
  else
  {
    SymbolButton.setConfiguration(_:animation:updates:)(*(_QWORD *)(*(_QWORD *)a1 + 40), 0, 0, 0, 1, (uint64_t)_swiftEmptyArrayStorage);
  }
  sub_10005B748((uint64_t)v4, type metadata accessor for SymbolButton.Configuration);
  free(v4);
  free(v3);
  free(v2);
}

uint64_t *SymbolButton.Background.normal.unsafeMutableAddressor()
{
  if (qword_1011DE308 != -1)
    swift_once(&qword_1011DE308, sub_100CCE868);
  return &static SymbolButton.Background.normal;
}

uint64_t *SymbolButton.Background.highlighted.unsafeMutableAddressor()
{
  if (qword_1011DE310 != -1)
    swift_once(&qword_1011DE310, sub_100CCE960);
  return &static SymbolButton.Background.highlighted;
}

void *SymbolButton.Background.selected.unsafeMutableAddressor()
{
  return &static SymbolButton.Background.selected;
}

void *SymbolButton.Animation.default.unsafeMutableAddressor()
{
  return &static SymbolButton.Animation.default;
}

uint64_t static SymbolButton.Animation.default.getter()
{
  return 3075;
}

void *SymbolButton.Animation.eased.unsafeMutableAddressor()
{
  return &static SymbolButton.Animation.eased;
}

uint64_t static SymbolButton.Animation.eased.getter()
{
  return 3075;
}

uint64_t SymbolButton.Update.alongside.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_100048AAC(*v0, v0[1]);
  return v1;
}

uint64_t SymbolButton.Update.alongside.setter(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t result;

  result = sub_10004BA30(*v2, v2[1]);
  *v2 = a1;
  v2[1] = a2;
  return result;
}

double SymbolButton.Update.animationOptions.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

void SymbolButton.Update.animationOptions.setter(double a1, double a2)
{
  uint64_t v2;

  *(double *)(v2 + 16) = a1;
  *(double *)(v2 + 24) = a2;
}

uint64_t SymbolButton.Update.completion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_10004BA30(*(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t SymbolButton.Update.init(alongside:animationOptions:completion:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>)
{
  *(_QWORD *)a5 = result;
  *(_QWORD *)(a5 + 8) = a2;
  *(double *)(a5 + 16) = a6;
  *(double *)(a5 + 24) = a7;
  *(_QWORD *)(a5 + 32) = a3;
  *(_QWORD *)(a5 + 40) = a4;
  return result;
}

void SymbolButton.setConfiguration(_:animation:updates:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  _BYTE *v6;
  _BYTE *v7;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  char *v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  __int128 *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(char *, uint64_t, uint64_t);
  int v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  id v59;
  id v60;
  double v61;
  uint64_t v62;
  uint64_t v63;
  _BYTE *v64;
  char *v65;
  NSObject *v66;
  int v67;
  uint64_t v68;
  char *v69;
  char *v70;
  char *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  _BYTE *v76;
  uint64_t v77;
  char *v78;
  NSObject *v79;
  int v80;
  _BOOL4 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  char *v87;
  char *v88;
  __int128 *v89;
  char *v90;
  id v91;
  char *v92;
  uint64_t v93;
  char *v94;
  char *v95;
  char *v96;
  uint64_t v97;
  __int128 *v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  void (*v102)(char *);
  uint64_t v103;
  uint64_t v104;
  void (*v105)(char *);
  uint64_t v106;
  uint64_t v107;
  void *v108;
  void *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void *v114;
  __int128 v115;
  uint64_t v116;
  void *v117;
  _QWORD *v118;
  uint64_t v119;
  __int128 v120;
  __int128 v121;
  uint64_t v122;
  id v123;
  id v124;
  id v125;
  char v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  __int128 v133;
  __int128 v134;
  uint64_t v135;
  char v136;
  uint64_t v137;
  uint64_t v138;
  char v139;
  char v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  NSObject *v146;
  os_log_type_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  double v151;
  char *v152;
  char *v153;
  char *v154;
  int v155;
  uint64_t v156;
  int v157;
  uint64_t v158;
  BOOL v159;
  int *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  _BOOL4 v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  id v168;
  char *v169;
  char *v170;
  __int128 *v171;
  id v172;
  char *v173;
  uint64_t v174;
  char *v175;
  char *v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  unint64_t v189;
  unint64_t v190;
  uint64_t v191;
  int *v192;
  uint64_t v193;
  void *v194;
  _QWORD *v195;
  int *v196;
  double v197;
  double v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  unint64_t v202;
  unint64_t v203;
  unint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  void *v208;
  _QWORD *v209;
  int *v210;
  _QWORD *v211;
  char *v212;
  uint64_t v213;
  void *v214;
  _QWORD *v215;
  int *v216;
  uint64_t v217;
  char *v218;
  char *v219;
  double v220;
  uint64_t ObjectType;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  double v226;
  uint64_t v227;
  int v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  char *v233;
  char *v234;
  uint64_t v235;
  uint64_t v236;
  int *v237;
  char *v238;
  char *v239;
  __int128 *v240;
  char *v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  __int128 v247;
  uint64_t v248;
  __int128 v249;
  __int128 v250;
  uint64_t v251;
  char v252;
  __int128 v253;
  uint64_t v254;
  __int128 v255;
  __int128 v256;
  uint64_t v257;
  char v258;
  _QWORD v259[6];
  __int128 v260;
  __int128 v261;
  uint64_t v262;
  uint64_t v263;
  __int128 v264;
  void *v265;
  __int128 v266;
  __int128 v267;
  void *v268;
  _QWORD *v269;
  __int128 v270;
  __int128 v271;
  uint64_t v272;
  __int128 v273;
  __int128 v274;
  _OWORD v275[7];
  uint64_t v276;

  v7 = v6;
  v242 = a6;
  v228 = a5;
  v222 = a4;
  v220 = *(double *)&a3;
  v226 = *(double *)&a2;
  ObjectType = swift_getObjectType();
  v238 = (char *)sub_100007E8C(&qword_1011E6690);
  __chkstk_darwin(v238);
  v10 = (char *)&v217 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (int *)type metadata accessor for UUID(0);
  v236 = *((_QWORD *)v11 - 1);
  v237 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)&v217 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (int *)type metadata accessor for SymbolButton.Configuration(0);
  v223 = *((_QWORD *)v14 - 1);
  v15 = *(_QWORD *)(v223 + 64);
  v16 = __chkstk_darwin(v14);
  v227 = (uint64_t)&v217 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v16);
  v234 = (char *)&v217 - v18;
  v19 = __chkstk_darwin(v17);
  v233 = (char *)&v217 - v20;
  v21 = __chkstk_darwin(v19);
  v235 = (uint64_t)&v217 - v22;
  v23 = __chkstk_darwin(v21);
  v232 = (uint64_t)&v217 - v24;
  v25 = __chkstk_darwin(v23);
  v231 = (uint64_t)&v217 - v26;
  v27 = __chkstk_darwin(v25);
  v230 = (uint64_t)&v217 - v28;
  v29 = __chkstk_darwin(v27);
  v229 = (uint64_t)&v217 - v30;
  v31 = __chkstk_darwin(v29);
  v239 = (char *)&v217 - v32;
  v33 = __chkstk_darwin(v31);
  v225 = (uint64_t)&v217 - v34;
  v35 = __chkstk_darwin(v33);
  v224 = (uint64_t)&v217 - v36;
  v37 = __chkstk_darwin(v35);
  v39 = (char *)&v217 - v38;
  __chkstk_darwin(v37);
  v41 = (__int128 *)((char *)&v217 - v40);
  v42 = (uint64_t)&v7[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration];
  swift_beginAccess(&v7[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration], &v246, 0, 0);
  sub_10005B704(v42, (uint64_t)v41, type metadata accessor for SymbolButton.Configuration);
  if ((_s11MusicCoreUI12SymbolButtonC13ConfigurationV23__derived_struct_equalsySbAE_AEtFZ_0(a1, v41) & 1) != 0)
  {
LABEL_55:
    sub_10005B748((uint64_t)v41, type metadata accessor for SymbolButton.Configuration);
    return;
  }
  sub_10005B704(a1, (uint64_t)v39, type metadata accessor for SymbolButton.Configuration);
  swift_beginAccess(v42, v275, 33, 0);
  v218 = v39;
  sub_10055C138((uint64_t)v39, v42);
  v43 = swift_endAccess(v275);
  v44 = UUID.init()(v43);
  v219 = (char *)UUID.uuidString.getter(v44);
  v241 = v45;
  (*(void (**)(char *, int *))(v236 + 8))(v13, v237);
  v237 = v14;
  v46 = v14[9];
  v240 = (__int128 *)a1;
  v47 = a1 + v46;
  v48 = (uint64_t)&v10[*((int *)v238 + 12)];
  sub_10004A160((uint64_t)v41 + v46, (uint64_t)v10, &qword_1011E6620);
  sub_10004A160(v47, v48, &qword_1011E6620);
  v49 = type metadata accessor for UIView.Corner(0);
  v50 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 48);
  v51 = v50(v10, 1, v49);
  v52 = v50((char *)v48, 1, v49);
  if (v51 != 1)
  {
    v53 = (uint64_t)v239;
    if (v52 == 1)
      goto LABEL_6;
LABEL_7:
    sub_10004FF60((uint64_t)v10, &qword_1011E6690);
    goto LABEL_8;
  }
  v53 = (uint64_t)v239;
  if (v52 == 1)
    goto LABEL_7;
  sub_10004FF60(v48, &qword_1011E6620);
LABEL_6:
  sub_10004FF60((uint64_t)v10, &qword_1011E6620);
  v7[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_isClippingInvalidated] = 1;
LABEL_8:
  v54 = (uint64_t)v240;
  v55 = v241;
  objc_msgSend(v7, "invalidateIntrinsicContentSize");
  objc_msgSend(v7, "accessibilityUpdateSymbolButton");
  v56 = *(_OWORD *)(v54 + 80);
  v275[4] = *(_OWORD *)(v54 + 64);
  v275[5] = v56;
  v275[6] = *(_OWORD *)(v54 + 96);
  v276 = *(_QWORD *)(v54 + 112);
  v57 = *(_OWORD *)(v54 + 16);
  v275[0] = *(_OWORD *)v54;
  v275[1] = v57;
  v58 = *(_OWORD *)(v54 + 48);
  v275[2] = *(_OWORD *)(v54 + 32);
  v275[3] = v58;
  v59 = sub_100CC3E5C();
  objc_msgSend(v7, "setLargeContentImage:", v59);

  v60 = objc_msgSend(v7, "window");
  if (!v60 || (v228 & 1) != 0 || (v61 = v226, v226 <= 0.0))
  {
    if (qword_1011DDEE8 != -1)
      swift_once(&qword_1011DDEE8, sub_100BC047C);
    v74 = type metadata accessor for Logger(0);
    v75 = sub_100048B14(v74, (uint64_t)qword_10124F288);
    sub_10005B704(v54, v53, type metadata accessor for SymbolButton.Configuration);
    v76 = v7;
    swift_bridgeObjectRetain_n(v55, 2);
    v77 = v53;
    v78 = v76;
    v238 = (char *)v75;
    v79 = Logger.logObject.getter(v78);
    v80 = static os_log_type_t.debug.getter();
    v81 = os_log_type_enabled(v79, (os_log_type_t)v80);
    v82 = v242;
    if (v81)
    {
      LODWORD(v236) = v80;
      v83 = swift_slowAlloc(32, -1);
      v84 = swift_slowAlloc(96, -1);
      *(_QWORD *)&v266 = v84;
      *(_DWORD *)v83 = 136446722;
      v85 = &v78[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_debugLabel];
      swift_beginAccess(&v78[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_debugLabel], &v243, 0, 0);
      v86 = (char *)*((_QWORD *)v85 + 1);
      if (v86)
      {
        v87 = *(char **)v85;
        v88 = v86;
      }
      else
      {
        v89 = v41;
        v90 = v78;
        v91 = objc_msgSend(v90, "description");
        v87 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v91);
        v88 = v92;

        v82 = v242;
        v41 = v89;
        v55 = v241;
      }
      swift_bridgeObjectRetain();
      *(_QWORD *)(v83 + 4) = sub_100BBDE38(v87, v88, (uint64_t *)&v266);
      swift_bridgeObjectRelease(v88);

      *(_WORD *)(v83 + 12) = 2082;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v83 + 14) = sub_100BBDE38(v219, v55, (uint64_t *)&v266);
      swift_bridgeObjectRelease_n(v55, 3);
      *(_WORD *)(v83 + 22) = 2082;
      v93 = (uint64_t)v239;
      v94 = (char *)SymbolButton.Configuration.description.getter();
      v96 = v95;
      *(_QWORD *)(v83 + 24) = sub_100BBDE38(v94, v95, (uint64_t *)&v266);
      swift_bridgeObjectRelease(v96);
      sub_10005B748(v93, type metadata accessor for SymbolButton.Configuration);
      _os_log_impl((void *)&_mh_execute_header, v79, (os_log_type_t)v236, "[%{public}s] UpdateID=%{public}s — Applying new configuration=%{public}s", (uint8_t *)v83, 0x20u);
      swift_arrayDestroy(v84, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v84, -1, -1);
      swift_slowDealloc(v83, -1, -1);

      v54 = (uint64_t)v240;
    }
    else
    {

      swift_bridgeObjectRelease_n(v55, 2);
      sub_10005B748(v77, type metadata accessor for SymbolButton.Configuration);

    }
    sub_100CCA988(v54);
    v97 = *(_QWORD *)(v82 + 16);
    if (v97)
    {
      v98 = v41;
      swift_bridgeObjectRetain();
      v99 = (uint64_t *)(v82 + 72);
      while (1)
      {
        v102 = (void (*)(char *))*(v99 - 5);
        v103 = *(v99 - 4);
        v105 = (void (*)(char *))*(v99 - 1);
        v104 = *v99;
        v106 = *v99;
        if (v102)
        {
          sub_100048AAC((uint64_t)v105, v106);
          sub_100048AAC((uint64_t)v102, v103);
          v102(v78);
          if (v105)
            goto LABEL_32;
        }
        else
        {
          sub_100048AAC((uint64_t)v105, v106);
          if (v105)
          {
LABEL_32:
            v105(v78);
            sub_10004BA30((uint64_t)v102, v103);
            v100 = (uint64_t)v105;
            v101 = v104;
            goto LABEL_27;
          }
        }
        v100 = (uint64_t)v102;
        v101 = v103;
LABEL_27:
        sub_10004BA30(v100, v101);
        v99 += 6;
        if (!--v97)
        {
          swift_bridgeObjectRelease(v242);
          v41 = v98;
          break;
        }
      }
    }
    v107 = *((_QWORD *)v41 + 1);
    v108 = (void *)*((_QWORD *)v41 + 2);
    v109 = (void *)*((_QWORD *)v41 + 3);
    v110 = *((_QWORD *)v41 + 4);
    v111 = *((unsigned __int8 *)v41 + 40);
    v112 = *((unsigned __int8 *)v41 + 80);
    v113 = *((_QWORD *)v41 + 11);
    v114 = (void *)*((_QWORD *)v41 + 14);
    v259[0] = *(_QWORD *)v41;
    v259[1] = v107;
    v259[2] = v108;
    v259[3] = v109;
    v259[4] = v110;
    v259[5] = v111;
    v115 = v41[4];
    v260 = v41[3];
    v261 = v115;
    v262 = v112;
    v263 = v113;
    v264 = v41[6];
    v265 = v114;
    v116 = (uint64_t)v240;
    v117 = (void *)*((_QWORD *)v240 + 4);
    v118 = (_QWORD *)*((unsigned __int8 *)v240 + 40);
    v119 = *((unsigned __int8 *)v240 + 80);
    v120 = v240[1];
    v266 = *v240;
    v267 = v120;
    v268 = v117;
    v269 = v118;
    v121 = v240[4];
    v270 = v240[3];
    v271 = v121;
    v272 = v119;
    v273 = *(__int128 *)((char *)v240 + 88);
    v122 = v264;
    v274 = *(__int128 *)((char *)v240 + 104);
    v123 = v114;
    swift_bridgeObjectRetain();
    v124 = v108;
    v125 = v109;
    swift_bridgeObjectRetain();
    v126 = _s11MusicCoreUI12SymbolButtonC0D0V21hasSignificantChanges4from2toSbAESg_AItFZ_0((uint64_t)v259, (uint64_t)&v266);
    swift_bridgeObjectRelease(v107);

    swift_bridgeObjectRelease(v122);
    v127 = v229;
    sub_10005B704((uint64_t)v41, v229, type metadata accessor for SymbolButton.Configuration);
    v128 = v230;
    sub_10005B704(v116, v230, type metadata accessor for SymbolButton.Configuration);
    if ((v126 & 1) != 0)
    {
      sub_10005B748(v127, type metadata accessor for SymbolButton.Configuration);
      sub_10005B748(v128, type metadata accessor for SymbolButton.Configuration);
      v129 = v231;
      sub_10005B704((uint64_t)v41, v231, type metadata accessor for SymbolButton.Configuration);
      v130 = v232;
      sub_10005B704(v116, v232, type metadata accessor for SymbolButton.Configuration);
      v132 = (uint64_t)v233;
      v131 = (uint64_t)v234;
    }
    else
    {
      v247 = *(_OWORD *)(v127 + 120);
      v133 = *(_OWORD *)(v127 + 160);
      v249 = *(_OWORD *)(v127 + 144);
      v250 = v133;
      v253 = *(_OWORD *)(v128 + 120);
      v134 = *(_OWORD *)(v128 + 160);
      v255 = *(_OWORD *)(v128 + 144);
      v135 = *(_QWORD *)(v127 + 176);
      v136 = *(_BYTE *)(v127 + 184);
      v248 = *(_QWORD *)(v127 + 136);
      v251 = v135;
      v252 = v136;
      v137 = *(_QWORD *)(v128 + 136);
      v138 = *(_QWORD *)(v128 + 176);
      v139 = *(_BYTE *)(v128 + 184);
      v256 = v134;
      v254 = v137;
      v257 = v138;
      v258 = v139;
      v140 = sub_100CD0DD0((uint64_t)&v247, (uint64_t)&v253);
      sub_10005B748(v127, type metadata accessor for SymbolButton.Configuration);
      sub_10005B748(v128, type metadata accessor for SymbolButton.Configuration);
      v129 = v231;
      sub_10005B704((uint64_t)v41, v231, type metadata accessor for SymbolButton.Configuration);
      v130 = v232;
      sub_10005B704(v116, v232, type metadata accessor for SymbolButton.Configuration);
      v132 = (uint64_t)v233;
      v131 = (uint64_t)v234;
      if ((v140 & 1) == 0)
      {
        v155 = (*(_QWORD *)(v129 + 128) != 0) & (*(unsigned __int8 *)(v129 + 184) ^ 1);
        v156 = v129;
        v157 = (*(_QWORD *)(v130 + 128) != 0) & (*(unsigned __int8 *)(v130 + 184) ^ 1);
        sub_10005B748(v156, type metadata accessor for SymbolButton.Configuration);
        sub_10005B748(v130, type metadata accessor for SymbolButton.Configuration);
        v158 = v235;
        sub_10005B704((uint64_t)v41, v235, type metadata accessor for SymbolButton.Configuration);
        sub_10005B704(v116, v132, type metadata accessor for SymbolButton.Configuration);
        v159 = v155 == v157;
        v141 = v158;
        v160 = v237;
        if (!v159)
          goto LABEL_38;
        v161 = v237[10];
        v162 = *(_QWORD *)(v141 + v161);
        v163 = *(_QWORD *)(v132 + v161);
        v164 = v163 == 0;
        if (v162)
        {
          v141 = v235;
          if (!v163)
            goto LABEL_38;
          v164 = v162 == v163;
        }
        sub_10005B748(v235, type metadata accessor for SymbolButton.Configuration);
        sub_10005B748(v132, type metadata accessor for SymbolButton.Configuration);
        sub_10005B704((uint64_t)v41, v131, type metadata accessor for SymbolButton.Configuration);
        v142 = v227;
        sub_10005B704(v116, v227, type metadata accessor for SymbolButton.Configuration);
        if (v164)
        {
          v165 = v160[11];
          v166 = *(_QWORD *)(v131 + v165 + 16);
          v167 = *(_QWORD *)(v142 + v165 + 16);
          if (v166 == 1)
          {
            if (v167 != 1)
              goto LABEL_39;
          }
          else if (v167 == 1)
          {
            goto LABEL_39;
          }
          sub_10005B748(v142, type metadata accessor for SymbolButton.Configuration);
          sub_10005B748(v131, type metadata accessor for SymbolButton.Configuration);
LABEL_40:
          v143 = v78;
          v144 = v241;
          v145 = swift_bridgeObjectRetain();
          v146 = Logger.logObject.getter(v145);
          v147 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v146, v147))
          {
            v148 = swift_slowAlloc(22, -1);
            v149 = swift_slowAlloc(64, -1);
            v245 = v149;
            *(_DWORD *)v148 = 136446466;
            v150 = &v143[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_debugLabel];
            *(_QWORD *)&v151 = swift_beginAccess(&v143[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_debugLabel], &v244, 0, 0).n128_u64[0];
            v152 = (char *)*((_QWORD *)v150 + 1);
            if (v152)
            {
              v153 = *(char **)v150;
              v154 = v152;
            }
            else
            {
              v168 = objc_msgSend(v143, "description", v151);
              v153 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v168);
              v154 = v169;

            }
            swift_bridgeObjectRetain();
            *(_QWORD *)(v148 + 4) = sub_100BBDE38(v153, v154, &v245);
            swift_bridgeObjectRelease(v154);

            *(_WORD *)(v148 + 12) = 2082;
            v170 = v241;
            swift_bridgeObjectRetain();
            *(_QWORD *)(v148 + 14) = sub_100BBDE38(v219, v170, &v245);
            swift_bridgeObjectRelease_n(v170, 3);
            _os_log_impl((void *)&_mh_execute_header, v146, v147, "[%{public}s] UpdateID=%{public}s — Updated ✅", (uint8_t *)v148, 0x16u);
            swift_arrayDestroy(v149, 2, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v149, -1, -1);
            swift_slowDealloc(v148, -1, -1);

          }
          else
          {

            swift_bridgeObjectRelease_n(v144, 2);
          }
          goto LABEL_55;
        }
LABEL_39:
        sub_10005B748(v142, type metadata accessor for SymbolButton.Configuration);
        sub_10005B748(v131, type metadata accessor for SymbolButton.Configuration);
        objc_msgSend(v78, "setNeedsLayout");
        goto LABEL_40;
      }
    }
    sub_10005B748(v129, type metadata accessor for SymbolButton.Configuration);
    sub_10005B748(v130, type metadata accessor for SymbolButton.Configuration);
    v141 = v235;
    sub_10005B704((uint64_t)v41, v235, type metadata accessor for SymbolButton.Configuration);
    sub_10005B704(v116, v132, type metadata accessor for SymbolButton.Configuration);
LABEL_38:
    sub_10005B748(v141, type metadata accessor for SymbolButton.Configuration);
    sub_10005B748(v132, type metadata accessor for SymbolButton.Configuration);
    sub_10005B704((uint64_t)v41, v131, type metadata accessor for SymbolButton.Configuration);
    v142 = v227;
    sub_10005B704(v116, v227, type metadata accessor for SymbolButton.Configuration);
    goto LABEL_39;
  }
  if (qword_1011DDEE8 != -1)
    swift_once(&qword_1011DDEE8, sub_100BC047C);
  v62 = type metadata accessor for Logger(0);
  sub_100048B14(v62, (uint64_t)qword_10124F288);
  v63 = v224;
  sub_10005B704(v54, v224, type metadata accessor for SymbolButton.Configuration);
  v64 = v7;
  swift_bridgeObjectRetain_n(v55, 2);
  v65 = v64;
  v66 = Logger.logObject.getter(v65);
  v67 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v66, (os_log_type_t)v67))
  {
    LODWORD(v239) = v67;
    v68 = swift_slowAlloc(32, -1);
    v238 = (char *)swift_slowAlloc(96, -1);
    *(_QWORD *)&v266 = v238;
    *(_DWORD *)v68 = 136446722;
    v69 = &v65[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_debugLabel];
    swift_beginAccess(&v65[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_debugLabel], v259, 0, 0);
    v70 = (char *)*((_QWORD *)v69 + 1);
    if (v70)
    {
      v71 = *(char **)v69;
      v72 = v65;
      v73 = v70;
    }
    else
    {
      v237 = v65;
      v171 = v41;
      v172 = objc_msgSend(v237, "description");
      v71 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v172);
      v72 = v65;
      v73 = v173;

      v41 = v171;
      v54 = (uint64_t)v240;

    }
    swift_bridgeObjectRetain();
    *(_QWORD *)(v68 + 4) = sub_100BBDE38(v71, v73, (uint64_t *)&v266);
    swift_bridgeObjectRelease(v73);

    *(_WORD *)(v68 + 12) = 2082;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v68 + 14) = sub_100BBDE38(v219, v55, (uint64_t *)&v266);
    swift_bridgeObjectRelease_n(v55, 3);
    *(_WORD *)(v68 + 22) = 2082;
    v174 = v224;
    v175 = (char *)SymbolButton.Configuration.description.getter();
    v177 = v176;
    *(_QWORD *)(v68 + 24) = sub_100BBDE38(v175, v176, (uint64_t *)&v266);
    swift_bridgeObjectRelease(v177);
    sub_10005B748(v174, type metadata accessor for SymbolButton.Configuration);
    _os_log_impl((void *)&_mh_execute_header, v66, (os_log_type_t)v239, "[%{public}s] UpdateID=%{public}s — Animating to new configuration=%{public}s", (uint8_t *)v68, 0x20u);
    v178 = (uint64_t)v238;
    swift_arrayDestroy(v238, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v178, -1, -1);
    swift_slowDealloc(v68, -1, -1);

    v65 = v72;
  }
  else
  {

    swift_bridgeObjectRelease_n(v55, 2);
    sub_10005B748(v63, type metadata accessor for SymbolButton.Configuration);

  }
  v179 = *(_QWORD *)&v65[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_pendingAnimatedChangesCount];
  v180 = v179 + 1;
  v181 = v225;
  v182 = (uint64_t)v218;
  if (__OFADD__(v179, 1))
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)&v65[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_pendingAnimatedChangesCount] = v180;
    if (v180 != v179)
      sub_100CCB23C();
    v183 = swift_allocObject(&unk_10110EAC8, 24, 7);
    v236 = v183;
    *(_QWORD *)(v183 + 16) = _swiftEmptyArrayStorage;
    v184 = v183 + 16;
    v239 = (char *)objc_opt_self(UIView);
    v237 = (int *)v65;
    sub_10005B704((uint64_t)v41, v182, type metadata accessor for SymbolButton.Configuration);
    sub_10005B704(v54, v181, type metadata accessor for SymbolButton.Configuration);
    v185 = *(unsigned __int8 *)(v223 + 80);
    v186 = v182;
    v187 = (v185 + 16) & ~v185;
    v234 = (char *)(v15 + v185);
    v235 = v185 | 7;
    v238 = (char *)v41;
    v188 = (v187 + v15 + v185) & ~v185;
    v233 = (char *)(v15 + 7);
    v189 = (v188 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
    v190 = (v189 + 15) & 0xFFFFFFFFFFFFFFF8;
    v191 = swift_allocObject(&unk_10110EAF0, v190 + 8, v185 | 7);
    sub_10005B6C0(v186, v191 + v187, type metadata accessor for SymbolButton.Configuration);
    sub_10005B6C0(v181, v191 + v188, type metadata accessor for SymbolButton.Configuration);
    v192 = v237;
    *(_QWORD *)(v191 + v189) = v237;
    *(_QWORD *)(v191 + v190) = v184;
    v193 = swift_allocObject(&unk_10110EB18, 32, 7);
    *(_QWORD *)(v193 + 16) = sub_100CD16AC;
    *(_QWORD *)(v193 + 24) = v191;
    v268 = sub_10010942C;
    v269 = (_QWORD *)v193;
    *(_QWORD *)&v266 = _NSConcreteStackBlock;
    *((_QWORD *)&v266 + 1) = 1107296256;
    *(_QWORD *)&v267 = sub_10046D7B4;
    *((_QWORD *)&v267 + 1) = &unk_10110EB30;
    v194 = _Block_copy(&v266);
    v195 = v269;
    v196 = v192;
    swift_retain(v193);
    *(_QWORD *)&v197 = swift_release(v195).n128_u64[0];
    objc_msgSend(v239, "performWithoutAnimation:", v194, v197);
    _Block_release(v194);
    LOBYTE(v194) = swift_isEscapingClosureAtFileLocation(v193, "", 121, 336, 40, 1);
    swift_release(v193);
    if ((v194 & 1) == 0)
    {
      v198 = v220;
      v199 = (uint64_t)v218;
      sub_10005B704((uint64_t)v240, (uint64_t)v218, type metadata accessor for SymbolButton.Configuration);
      v200 = v225;
      sub_10005B704((uint64_t)v238, v225, type metadata accessor for SymbolButton.Configuration);
      v201 = (v185 + 24) & ~v185;
      v202 = (unint64_t)&v234[v201] & ~v185;
      v203 = (unint64_t)&v233[v202] & 0xFFFFFFFFFFFFFFF8;
      v204 = (v203 + 15) & 0xFFFFFFFFFFFFFFF8;
      v205 = swift_allocObject(&unk_10110EB68, v204 + 8, v235);
      *(_QWORD *)(v205 + 16) = v196;
      sub_10005B6C0(v199, v205 + v201, type metadata accessor for SymbolButton.Configuration);
      sub_10005B6C0(v200, v205 + v202, type metadata accessor for SymbolButton.Configuration);
      v206 = v236;
      *(_QWORD *)(v205 + v203) = v236;
      v207 = v242;
      *(_QWORD *)(v205 + v204) = v242;
      v268 = sub_100CD1A28;
      v269 = (_QWORD *)v205;
      *(_QWORD *)&v266 = _NSConcreteStackBlock;
      *((_QWORD *)&v266 + 1) = 1107296256;
      *(_QWORD *)&v267 = sub_1001DBD98;
      *((_QWORD *)&v267 + 1) = &unk_10110EB80;
      v208 = _Block_copy(&v266);
      v209 = v269;
      v210 = v196;
      swift_retain(v206);
      swift_bridgeObjectRetain();
      swift_release(v209);
      v211 = (_QWORD *)swift_allocObject(&unk_10110EBB8, 64, 7);
      v211[2] = v206;
      v211[3] = v210;
      v212 = v219;
      v211[4] = v207;
      v211[5] = v212;
      v213 = ObjectType;
      v211[6] = v241;
      v211[7] = v213;
      v268 = sub_100CD1AC4;
      v269 = v211;
      *(_QWORD *)&v266 = _NSConcreteStackBlock;
      *((_QWORD *)&v266 + 1) = 1107296256;
      *(_QWORD *)&v267 = sub_10012F6FC;
      *((_QWORD *)&v267 + 1) = &unk_10110EBD0;
      v214 = _Block_copy(&v266);
      v215 = v269;
      v216 = v210;
      swift_retain(v206);
      swift_bridgeObjectRetain();
      swift_release(v215);
      objc_msgSend(v239, "animateKeyframesWithDuration:delay:options:animations:completion:", v222, v208, v214, v61, v198);
      _Block_release(v214);
      _Block_release(v208);
      sub_10005B748((uint64_t)v238, type metadata accessor for SymbolButton.Configuration);
      swift_release(v206);
      swift_release(v191);
      return;
    }
  }
  __break(1u);
}

id sub_100CC3E5C()
{
  uint64_t v0;
  uint64_t v1;
  NSString v2;
  void *v3;
  id v4;
  id v5;
  NSString v6;

  v1 = *(_QWORD *)(v0 + 8);
  if (!v1)
    return 0;
  swift_bridgeObjectRetain();
  v2 = String._bridgeToObjectiveC()();
  v3 = (void *)objc_opt_self(UIImage);
  v4 = objc_msgSend(v3, "_systemImageNamed:", v2);

  if (v4)
  {
    swift_bridgeObjectRelease(v1);
  }
  else
  {
    v5 = *(id *)(v0 + 16);
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v1);
    v4 = objc_msgSend(v3, "imageNamed:inBundle:", v6, v5);

  }
  return v4;
}

BOOL static SymbolButton.CustomView.hasSignificantChanges(from:to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  BOOL v4;
  _BOOL4 v5;
  _QWORD v7[7];
  _QWORD v8[7];

  sub_100065228(a2, (uint64_t)v8, &qword_1011E6698);
  v3 = v8[0];
  sub_100065228(a1, (uint64_t)v7, &qword_1011E6698);
  if (v7[0])
    v4 = v3 == 0;
  else
    v4 = 1;
  if (v4)
    v5 = (v7[0] | v3) == 0;
  else
    v5 = v7[0] == v3;
  return !v5;
}

void sub_100CC3FCC(uint64_t *a1, uint64_t a2, char *a3, char **a4)
{
  uint64_t v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  id v22;
  objc_class *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  char **v36;
  char *v37;
  id v38;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  void *v57;
  id v58;
  id v59;
  void *v60;
  id v61;
  id v62;
  BOOL v63;
  char **v64;
  char *v65;
  char v66;
  unint64_t v67;
  unint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  void *v76;
  id v77;
  uint64_t v78;
  void *v79;
  id v80;
  id v81;
  char *v82;
  char **v83;
  char *v84;
  char v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  void *v94;
  id *v95;
  void *v96;
  id v97;
  void *v98;
  void *v99;
  uint64_t v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  objc_class *v104;
  id v105;
  id v106;
  id v107;
  char *v108;
  id v109;
  char *v110;
  objc_class *v111;
  objc_class *v112;
  int *v113;
  char v114;
  void *v115;
  objc_class *v116;
  char *v117;
  uint64_t v118;
  _BOOL4 v119;
  id v120;
  uint64_t v121;
  _BOOL8 v122;
  char **v123;
  char *v124;
  id v125;
  id v126;
  char v127;
  unint64_t v128;
  unint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  id v133;
  objc_class *v134;
  __int128 v135;
  int *v136;
  char **v137;
  objc_super v138;
  __int128 v139;
  uint64_t v140;
  __int128 v141;
  __int128 v142;
  uint64_t v143;
  char v144;
  __int128 v145;
  uint64_t v146;
  __int128 v147;
  __int128 v148;
  uint64_t v149;
  char v150;
  _OWORD v151[3];
  __int128 v152;
  char v153;
  _OWORD v154[4];
  __int128 v155;
  __int128 v156;
  __int128 v157;
  uint64_t v158;
  uint64_t v159;
  __int128 v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  __int128 v164;
  __int128 v165;
  uint64_t v166;
  __int128 v167;
  __int128 v168;
  _OWORD v169[2];
  uint64_t v170;
  uint64_t v171;
  __int128 v172;
  __int128 v173;
  uint64_t v174;
  __int128 v175;
  __int128 v176;

  v137 = a4;
  v136 = (int *)type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin(v136);
  v8 = (char *)&v131 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *((_OWORD *)a1 + 4);
  v164 = *((_OWORD *)a1 + 3);
  v165 = v9;
  v167 = *(_OWORD *)(a1 + 11);
  v168 = *(_OWORD *)(a1 + 13);
  v10 = *(_OWORD *)(a2 + 48);
  v11 = *(_OWORD *)(a2 + 80);
  v155 = *(_OWORD *)(a2 + 64);
  v156 = v11;
  v157 = *(_OWORD *)(a2 + 96);
  v12 = *(_OWORD *)(a2 + 16);
  v154[0] = *(_OWORD *)a2;
  v154[1] = v12;
  v13 = *(_OWORD *)(a2 + 48);
  v154[2] = *(_OWORD *)(a2 + 32);
  v154[3] = v13;
  v14 = *a1;
  v15 = a1[3];
  v16 = a1[4];
  v17 = *((unsigned __int8 *)a1 + 40);
  v18 = *((unsigned __int8 *)a1 + 80);
  v169[0] = v154[0];
  v169[1] = v12;
  v135 = *(_OWORD *)(a1 + 1);
  v160 = v135;
  v159 = v14;
  v161 = v15;
  v162 = v16;
  v163 = v17;
  v166 = v18;
  v158 = *(_QWORD *)(a2 + 112);
  v19 = *(unsigned __int8 *)(a2 + 40);
  v20 = *(unsigned __int8 *)(a2 + 80);
  v170 = *(_QWORD *)(a2 + 32);
  v171 = v19;
  v172 = v10;
  v173 = v155;
  v174 = v20;
  v21 = *(_OWORD *)(a2 + 104);
  v175 = *(_OWORD *)(a2 + 88);
  v176 = v21;
  if ((_s11MusicCoreUI12SymbolButtonC0D0V21hasSignificantChanges4from2toSbAESg_AItFZ_0((uint64_t)&v159, (uint64_t)v169) & 1) != 0)
  {
    v22 = sub_100CC9790();
    v23 = (objc_class *)type metadata accessor for SymbolButton.ImageView();
    v24 = objc_allocWithZone(v23);
    sub_100CD5C00((uint64_t)v154);
    v138.receiver = v24;
    v138.super_class = v23;
    v25 = objc_msgSendSuper2(&v138, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v25, "setAdjustsImageSizeForAccessibilityContentSizeCategory:", 0);
    objc_msgSend(v25, "setContentMode:", 4);
    sub_100CCCAA8((uint64_t)v154);
    sub_100CD5C5C((uint64_t)v154);
    v26 = v25;
    v27 = objc_msgSend(v22, "preferredSymbolConfiguration");
    objc_msgSend(v26, "setPreferredSymbolConfiguration:", v27);

    v28 = v26;
    objc_msgSend(v22, "frame");
    objc_msgSend(v28, "setFrame:");

    v29 = *(void **)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___imageView];
    *(_QWORD *)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___imageView] = v28;

    v30 = sub_100CC9790();
    objc_msgSend(v30, "setAlpha:", 0.0);

    v31 = sub_100CC9790();
    v32 = *(void **)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_backgroundView];
    if ((objc_msgSend(v31, "isDescendantOfView:", v32) & 1) == 0)
      objc_msgSend(v32, "addSubview:", v31);

    sub_10005B704(a2, (uint64_t)v8, type metadata accessor for SymbolButton.Configuration);
    if ((_QWORD)v135)
    {
      sub_10005B748((uint64_t)v8, type metadata accessor for SymbolButton.Configuration);
    }
    else
    {
      v33 = *((_QWORD *)v8 + 1);
      sub_10005B748((uint64_t)v8, type metadata accessor for SymbolButton.Configuration);
      if (v33)
      {
        objc_msgSend(a3, "setNeedsLayout");
        objc_msgSend(a3, "layoutIfNeeded");
      }
    }
    v34 = sub_100CC9790();
    v35 = *(_QWORD *)(a2 + 104);
    v36 = v137;
    v37 = *v137;
    v38 = v22;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v37);
    *v36 = v37;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v37 = sub_100BCCD78(0, *((_QWORD *)v37 + 2) + 1, 1, v37);
      *v137 = v37;
    }
    v41 = *((_QWORD *)v37 + 2);
    v40 = *((_QWORD *)v37 + 3);
    if (v41 >= v40 >> 1)
      v37 = sub_100BCCD78((char *)(v40 > 1), v41 + 1, 1, v37);
    *((_QWORD *)v37 + 2) = v41 + 1;
    v42 = &v37[88 * v41];
    *((_QWORD *)v42 + 4) = v34;
    *((_QWORD *)v42 + 5) = v35;
    *((_QWORD *)v42 + 6) = 0;
    *((_QWORD *)v42 + 7) = 0;
    *((_QWORD *)v42 + 8) = 0;
    *((_QWORD *)v42 + 9) = v38;
    *((_OWORD *)v42 + 5) = xmmword_100EA85A0;
    *((_QWORD *)v42 + 12) = 0;
    *((_QWORD *)v42 + 13) = 0;
    v42[112] = 0;
    *v137 = v37;

  }
  v43 = a1[17];
  v44 = a1[22];
  v45 = *((_BYTE *)a1 + 184);
  v139 = *(_OWORD *)(a1 + 15);
  v140 = v43;
  v46 = *((_OWORD *)a1 + 10);
  v141 = *((_OWORD *)a1 + 9);
  v142 = v46;
  v143 = v44;
  v144 = v45;
  v47 = *(_OWORD *)(a2 + 136);
  v48 = *(_OWORD *)(a2 + 168);
  v151[2] = *(_OWORD *)(a2 + 152);
  v152 = v48;
  v153 = *(_BYTE *)(a2 + 184);
  v151[0] = *(_OWORD *)(a2 + 120);
  v151[1] = v47;
  v49 = *(_QWORD *)(a2 + 136);
  v50 = *(_QWORD *)(a2 + 176);
  v51 = *(_BYTE *)(a2 + 184);
  v145 = *(_OWORD *)(a2 + 120);
  v146 = v49;
  v147 = *(_OWORD *)(a2 + 144);
  v148 = *(_OWORD *)(a2 + 160);
  v149 = v50;
  v150 = v51;
  if ((sub_100CD0DD0((uint64_t)&v139, (uint64_t)&v145) & 1) != 0)
  {
    v52 = sub_100CC98F4();
    v53 = objc_allocWithZone((Class)type metadata accessor for SymbolButton.Label());
    sub_100CD5B68((uint64_t)v151);
    v54 = sub_100CCCC88((uint64_t)v151);
    v55 = objc_msgSend(v52, "font");
    objc_msgSend(v54, "setFont:", v55);

    v56 = v54;
    objc_msgSend(v52, "frame");
    objc_msgSend(v56, "setFrame:");

    v57 = *(void **)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___titleLabel];
    *(_QWORD *)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___titleLabel] = v56;

    v58 = sub_100CC98F4();
    objc_msgSend(v58, "setAlpha:", 0.0);

    v59 = sub_100CC98F4();
    v60 = *(void **)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_backgroundView];
    if ((objc_msgSend(v59, "isDescendantOfView:", v60) & 1) == 0)
      objc_msgSend(v60, "addSubview:", v59);

    *(_QWORD *)&v135 = v152;
    v61 = sub_100CC98F4();
    v62 = v52;
    v63 = sub_100CD1C30((uint64_t)&v139, (uint64_t)&v145);
    v64 = v137;
    v65 = *v137;
    v66 = swift_isUniquelyReferenced_nonNull_native(*v137);
    *v64 = v65;
    if ((v66 & 1) == 0)
    {
      v65 = sub_100BCCD78(0, *((_QWORD *)v65 + 2) + 1, 1, v65);
      *v137 = v65;
    }
    v68 = *((_QWORD *)v65 + 2);
    v67 = *((_QWORD *)v65 + 3);
    if (v68 >= v67 >> 1)
      v65 = sub_100BCCD78((char *)(v67 > 1), v68 + 1, 1, v65);
    *((_QWORD *)v65 + 2) = v68 + 1;
    v69 = &v65[88 * v68];
    v70 = v135;
    *((_QWORD *)v69 + 4) = v61;
    *((_QWORD *)v69 + 5) = v70;
    *((_QWORD *)v69 + 6) = 0;
    *((_QWORD *)v69 + 7) = 0;
    *((_QWORD *)v69 + 8) = 0;
    *((_QWORD *)v69 + 9) = v62;
    *((_OWORD *)v69 + 5) = xmmword_100EA85A0;
    *((_QWORD *)v69 + 12) = 0;
    *((_QWORD *)v69 + 13) = 0;
    v69[112] = v63;
    *v137 = v65;

  }
  v71 = v136[10];
  v72 = *(void **)((char *)a1 + v71);
  v73 = a2 + v71;
  v74 = *(void **)v73;
  v75 = *(_QWORD *)(v73 + 40);
  if (v72)
  {
    if (v74 && v72 == v74)
      goto LABEL_40;
    if (!v74)
    {
      v76 = 0;
      goto LABEL_28;
    }
  }
  else if (!v74)
  {
    goto LABEL_40;
  }
  v77 = v74;
  v76 = v74;
LABEL_28:
  sub_100CD0A38(v76);

  v78 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_customView;
  v79 = *(void **)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_customView];
  if (v79)
    objc_msgSend(v79, "setAlpha:", 0.0);
  sub_100CC99F0();
  objc_msgSend(*(id *)&a3[v78], "layoutIfNeeded");
  if (!v74)
  {
    v75 = 0;
    if (v72)
      goto LABEL_32;
LABEL_34:
    *(_QWORD *)&v135 = 0;
    goto LABEL_35;
  }
  v80 = v74;
  if (!v72)
    goto LABEL_34;
LABEL_32:
  v81 = v72;
  *(_QWORD *)&v135 = 1;
LABEL_35:
  v82 = a3;
  v83 = v137;
  v84 = *v137;
  v85 = swift_isUniquelyReferenced_nonNull_native(*v137);
  *v83 = v84;
  v86 = v75;
  if ((v85 & 1) == 0)
  {
    v84 = sub_100BCCD78(0, *((_QWORD *)v84 + 2) + 1, 1, v84);
    *v137 = v84;
  }
  v88 = *((_QWORD *)v84 + 2);
  v87 = *((_QWORD *)v84 + 3);
  if (v88 >= v87 >> 1)
    v84 = sub_100BCCD78((char *)(v87 > 1), v88 + 1, 1, v84);
  *((_QWORD *)v84 + 2) = v88 + 1;
  v89 = &v84[88 * v88];
  *((_QWORD *)v89 + 4) = v74;
  *((_QWORD *)v89 + 5) = v86;
  *((_QWORD *)v89 + 6) = 0;
  *((_QWORD *)v89 + 7) = 0;
  *((_QWORD *)v89 + 8) = 0;
  *((_QWORD *)v89 + 9) = v72;
  v90 = v135;
  *((_QWORD *)v89 + 10) = 0;
  *((_QWORD *)v89 + 11) = v90;
  *((_QWORD *)v89 + 12) = 0;
  *((_QWORD *)v89 + 13) = 0;
  v89[112] = 0;
  *v137 = v84;
  a3 = v82;
LABEL_40:
  v91 = v136[11];
  v92 = *(uint64_t *)((char *)a1 + v91 + 16);
  v93 = (uint64_t *)(a2 + v91);
  v94 = (void *)v93[2];
  if (v92 != 1)
  {
    if (v94 != (void *)1)
      return;
    v95 = (id *)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView];
    v96 = *(void **)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView];
    *(_QWORD *)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView] = 0;
    v97 = v96;
    if (v96)
    {
      v98 = v97;
      objc_msgSend(v97, "removeFromSuperview");
      if (*v95)
      {
        v99 = *(void **)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_containerView];
        v100 = *(_QWORD *)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_materialView];
        v101 = *v95;
        objc_msgSend(v99, "insertSubview:aboveSubview:", v101, v100);
        sub_100CC9BA8();

      }
      v102 = 0;
    }
    else
    {
      v102 = 0;
    }
    goto LABEL_63;
  }
  if (v94 == (void *)1)
    return;
  v103 = *v93;
  v102 = v93[1];
  v95 = (id *)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView];
  v96 = *(void **)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView];
  v104 = (objc_class *)type metadata accessor for SymbolButton.BadgeView();
  v105 = objc_allocWithZone(v104);
  sub_100CD1BD8(v103, v102, v94);
  v134 = v104;
  if (v96)
  {
    v106 = v96;
    sub_100CD1BD8(v103, v102, v94);
  }
  else
  {
    v107 = v94;
  }
  v108 = sub_100CCCF90(v94, *(double *)&v103, *(double *)&v102);
  v109 = *v95;
  *v95 = v108;
  v110 = v108;
  *(_QWORD *)&v135 = v103;
  v136 = (int *)v110;
  if (v108)
  {
    if (!v109)
      goto LABEL_57;
    v111 = (objc_class *)v109;
    v132 = 1;
    v112 = v111;
    v113 = v136;
    v114 = static NSObject.== infix(_:_:)(v113, v112);
    v134 = v112;

    v92 = v132;
    if ((v114 & 1) != 0)
    {
      v109 = v134;
LABEL_59:

      goto LABEL_60;
    }
LABEL_56:
    objc_msgSend(v109, "removeFromSuperview");
    v108 = (char *)*v95;
    if (!*v95)
    {
LABEL_58:
      v113 = v136;
      goto LABEL_59;
    }
LABEL_57:
    v115 = *(void **)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_containerView];
    v116 = *(objc_class **)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_materialView];
    v133 = v109;
    v134 = v116;
    v117 = v108;
    objc_msgSend(v115, "insertSubview:aboveSubview:", v117, v134);
    sub_100CC9BA8();

    v109 = v133;
    goto LABEL_58;
  }
  if (v109)
    goto LABEL_56;
LABEL_60:
  v118 = v135;

  if (*v95)
    objc_msgSend(*v95, "setAlpha:", 0.0);
  sub_100CC9BA8();
  sub_100974130(v118, v102, v94);
LABEL_63:
  v119 = v92 != 1;
  v120 = *v95;
  if (*v95)
    v121 = v102;
  else
    v121 = 0;
  if (*v95)
    v122 = v119;
  else
    v122 = 0;
  v123 = v137;
  v124 = *v137;
  v125 = v120;
  v126 = v96;
  v127 = swift_isUniquelyReferenced_nonNull_native(v124);
  *v123 = v124;
  if ((v127 & 1) == 0)
  {
    v124 = sub_100BCCD78(0, *((_QWORD *)v124 + 2) + 1, 1, v124);
    *v137 = v124;
  }
  v129 = *((_QWORD *)v124 + 2);
  v128 = *((_QWORD *)v124 + 3);
  if (v129 >= v128 >> 1)
    v124 = sub_100BCCD78((char *)(v128 > 1), v129 + 1, 1, v124);
  *((_QWORD *)v124 + 2) = v129 + 1;
  v130 = &v124[88 * v129];
  *((_QWORD *)v130 + 4) = v120;
  *((_QWORD *)v130 + 5) = v121;
  *((_QWORD *)v130 + 6) = v122;
  *((_QWORD *)v130 + 7) = 0;
  *((_QWORD *)v130 + 8) = 0;
  *((_QWORD *)v130 + 9) = v96;
  *((_QWORD *)v130 + 10) = 0;
  *((_QWORD *)v130 + 11) = v96 != 0;
  *((_QWORD *)v130 + 12) = 0;
  *((_QWORD *)v130 + 13) = 0;
  v130[112] = 0;
  *v137 = v124;

}

uint64_t sub_100CC4A74(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  _QWORD *v22;
  id v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  void *v34;
  _QWORD *v35;
  id v36;
  uint64_t *v38;
  uint64_t result;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  double v53;
  double v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  const void *v59;
  double v60;
  double v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  void *v67;
  const void *v68;
  _QWORD *v69;
  id v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  char v91[24];
  void **aBlock;
  uint64_t v93;
  uint64_t (*v94)(uint64_t);
  void *v95;
  void *v96;
  _QWORD *v97;
  _BYTE v98[7];
  char v99;
  _BYTE v100[7];
  char v101;

  v90 = a5;
  v9 = type metadata accessor for SymbolButton.Configuration(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  v12 = __chkstk_darwin(v9);
  v13 = (char *)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v15 = (char *)&v76 - v14;
  v83 = (id)objc_opt_self(UIView);
  sub_10005B704(a2, (uint64_t)v15, type metadata accessor for SymbolButton.Configuration);
  sub_10005B704(a3, (uint64_t)v13, type metadata accessor for SymbolButton.Configuration);
  v16 = *(unsigned __int8 *)(v10 + 80);
  v17 = (v16 + 24) & ~v16;
  v18 = (v11 + v16 + v17) & ~v16;
  v19 = (v11 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = swift_allocObject(&unk_10110F5A8, v19 + 8, v16 | 7);
  *(_QWORD *)(v20 + 16) = a1;
  sub_10005B6C0((uint64_t)v15, v20 + v17, type metadata accessor for SymbolButton.Configuration);
  sub_10005B6C0((uint64_t)v13, v20 + v18, type metadata accessor for SymbolButton.Configuration);
  *(_QWORD *)(v20 + v19) = a4;
  v96 = sub_100CD6008;
  v97 = (_QWORD *)v20;
  aBlock = _NSConcreteStackBlock;
  v93 = 1107296256;
  v94 = sub_1001DBD98;
  v95 = &unk_10110F5C0;
  v21 = _Block_copy(&aBlock);
  v22 = v97;
  v23 = a1;
  v89 = a4;
  swift_retain(a4);
  swift_release(v22);
  objc_msgSend(v83, "addKeyframeWithRelativeStartTime:relativeDuration:animations:", v21, 0.0, 1.0);
  _Block_release(v21);
  v24 = *(_QWORD *)(v90 + 16);
  if (v24)
  {
    v25 = (uint64_t *)(v90 + 72);
    swift_bridgeObjectRetain();
    v26 = 1;
    while (1)
    {
      v27 = *(v25 - 5);
      if (v27)
      {
        v28 = *(v25 - 4);
        v29 = *((double *)v25 - 3);
        v30 = *((double *)v25 - 2);
        v31 = *(v25 - 1);
        v32 = *v25;
        v33 = (_QWORD *)swift_allocObject(&unk_10110F698, 40, 7);
        v33[2] = v27;
        v33[3] = v28;
        v33[4] = v23;
        v96 = sub_10027EAC0;
        v97 = v33;
        aBlock = _NSConcreteStackBlock;
        v93 = 1107296256;
        v94 = sub_1001DBD98;
        v95 = &unk_10110F6B0;
        v34 = _Block_copy(&aBlock);
        v35 = v97;
        sub_100048AAC(v27, v28);
        sub_100048AAC(v27, v28);
        v36 = v23;
        sub_100048AAC(v27, v28);
        sub_100048AAC(v31, v32);
        swift_release(v35);
        objc_msgSend(v83, "addKeyframeWithRelativeStartTime:relativeDuration:animations:", v34, v29, v30);
        _Block_release(v34);
        sub_10004BA30(v27, v28);
        sub_10004BA30(v27, v28);
        sub_10004BA30(v31, v32);
      }
      if (v24 == v26)
        break;
      v25 += 6;
      if (__OFADD__(v26++, 1))
      {
        __break(1u);
        break;
      }
    }
    swift_bridgeObjectRelease(v90);
  }
  v38 = (uint64_t *)(v89 + 16);
  swift_beginAccess(v89 + 16, v91, 0, 0);
  result = *v38;
  v78 = *(_QWORD *)(*v38 + 16);
  if (!v78)
    return result;
  v40 = result + 56;
  v77 = result;
  swift_bridgeObjectRetain_n(result, 2);
  v41 = 1;
  do
  {
    v43 = *(void **)(v40 - 24);
    v42 = *(_QWORD *)(v40 - 16);
    v44 = *(_QWORD *)(v40 - 8);
    v45 = *(_QWORD *)v40;
    v46 = *(_QWORD *)(v40 + 8);
    v47 = *(void **)(v40 + 16);
    v48 = *(_QWORD *)(v40 + 24);
    v49 = *(_QWORD *)(v40 + 32);
    v51 = *(_QWORD *)(v40 + 40);
    v50 = *(_QWORD *)(v40 + 48);
    v52 = *(unsigned __int8 *)(v40 + 56);
    if ((v44 & 1) != 0)
      v53 = 1.0;
    else
      v53 = *(double *)(v40 - 16);
    v90 = *(_QWORD *)(v40 + 32);
    v89 = v48;
    v88 = v47;
    v87 = v46;
    v86 = v42;
    v85 = v45;
    v84 = v41;
    LODWORD(v82) = v52;
    if (v47)
    {
      v101 = v49 & 1;
      if (v52)
        v54 = 1.0;
      else
        v54 = 0.5;
      v81 = v44;
      v55 = v42;
      v56 = swift_allocObject(&unk_10110F648, 56, 7);
      *(_QWORD *)(v56 + 16) = v47;
      *(_QWORD *)(v56 + 24) = v48;
      *(_BYTE *)(v56 + 32) = v101;
      *(_DWORD *)(v56 + 33) = *(_DWORD *)v100;
      *(_DWORD *)(v56 + 36) = *(_DWORD *)&v100[3];
      *(_QWORD *)(v56 + 40) = v51;
      *(_QWORD *)(v56 + 48) = v50;
      v96 = sub_100CD60C0;
      v97 = (_QWORD *)v56;
      aBlock = _NSConcreteStackBlock;
      v93 = 1107296256;
      v94 = sub_1001DBD98;
      v95 = &unk_10110F660;
      v80 = _Block_copy(&aBlock);
      v79 = v97;
      v57 = v55;
      v44 = v81;
      sub_100CD5CB8(v43, v57, v81, v45, v46);
      sub_100CD5CB8(v47, v48, v49, v51, v50);
      sub_100CD5CB8(v47, v48, v49, v51, v50);
      v58 = v47;
      sub_100048AAC(v51, v50);
      swift_release(v79);
      v59 = v80;
      objc_msgSend(v83, "addKeyframeWithRelativeStartTime:relativeDuration:animations:", v80, 0.0, v54);
      _Block_release(v59);

      sub_10004BA30(v51, v50);
      if (!v43)
      {
LABEL_28:
        sub_100CD5CEC(0, v86, v44, v85, v87);
        v71 = v88;
        v72 = v89;
        v73 = v90;
        v74 = v51;
        v75 = v50;
        goto LABEL_29;
      }
    }
    else
    {
      sub_100CD5CB8(v43, v42, v44, v45, v46);
      sub_100CD5CB8(0, v48, v49, v51, v50);
      if (!v43)
        goto LABEL_28;
    }
    v99 = v44 & 1;
    if ((_DWORD)v82)
      v60 = 1.0;
    else
      v60 = 0.5;
    if ((_DWORD)v82)
      v61 = 0.0;
    else
      v61 = 0.5;
    v62 = swift_allocObject(&unk_10110F5F8, 64, 7);
    v63 = v86;
    *(_QWORD *)(v62 + 16) = v43;
    *(_QWORD *)(v62 + 24) = v63;
    *(_BYTE *)(v62 + 32) = v99;
    *(_DWORD *)(v62 + 33) = *(_DWORD *)v98;
    *(_DWORD *)(v62 + 36) = *(_DWORD *)&v98[3];
    v64 = v85;
    v65 = v43;
    v66 = v87;
    *(_QWORD *)(v62 + 40) = v85;
    *(_QWORD *)(v62 + 48) = v66;
    *(double *)(v62 + 56) = v53;
    v96 = sub_100CD6064;
    v97 = (_QWORD *)v62;
    aBlock = _NSConcreteStackBlock;
    v93 = 1107296256;
    v94 = sub_1001DBD98;
    v95 = &unk_10110F610;
    v67 = _Block_copy(&aBlock);
    v82 = v50;
    v68 = v67;
    v69 = v97;
    sub_100CD5CB8(v65, v63, v44, v64, v66);
    v70 = v65;
    sub_100048AAC(v64, v66);
    swift_release(v69);
    objc_msgSend(v83, "addKeyframeWithRelativeStartTime:relativeDuration:animations:", v68, v61, v60);
    _Block_release(v68);

    sub_10004BA30(v64, v66);
    sub_100CD5CEC(v65, v63, v44, v64, v66);
    v71 = v88;
    v72 = v89;
    v73 = v90;
    v74 = v51;
    v75 = v82;
LABEL_29:
    sub_100CD5CEC(v71, v72, v73, v74, v75);
    if (v78 == v84)
      return swift_bridgeObjectRelease_n(v77, 2);
    v40 += 88;
    v41 = v84 + 1;
  }
  while (!__OFADD__(v84, 1));
  __break(1u);
  return swift_bridgeObjectRelease_n(v77, 2);
}

void sub_100CC51C0(char *a1, uint64_t ObjCClassFromMetadata, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  id v14;
  void *v15;
  void *v16;
  uint64_t v17;
  double v18;
  void *v19;
  uint64_t v20;
  id v21;
  id v22;
  NSString v23;
  int *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  char *v36;
  id v37;
  uint64_t v38;
  NSString v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t *v52;
  void *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  void *v58;
  id v59;
  void *v60;
  char *v61;
  id v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  id v67;
  _QWORD *v68;
  id v69;
  id v70;
  id v71;
  id v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  id v78;
  int v79;
  unsigned __int8 *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t i;
  uint64_t v90;
  void *v91;
  uint64_t v92;
  void (*v93)(double, double, double, double);
  char *v94;
  void *v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  id v100;
  uint64_t v101;
  uint64_t v102;
  id v103;
  double v104;
  double v105;
  double v106;
  double v107;
  double v108;
  double v109;
  double v110;
  double v111;
  void (*v112)(double, double, double, double);
  uint64_t v113;
  uint64_t v114;
  id v115;
  double v116;
  double v117;
  double v118;
  double v119;
  double v120;
  double v121;
  double v122;
  double v123;
  void *v124;
  _QWORD *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  id v131;
  char *v132;
  uint64_t v133;
  int *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  _OWORD v140[4];
  __int128 v141;
  __int128 v142;
  __int128 v143;
  uint64_t v144;
  _OWORD v145[2];
  uint64_t v146;
  uint64_t v147;
  __int128 v148;
  __int128 v149;
  uint64_t v150;
  __int128 v151;
  __int128 v152;
  _OWORD v153[2];
  uint64_t v154;
  uint64_t v155;
  __int128 v156;
  __int128 v157;
  uint64_t v158;
  __int128 v159;
  __int128 v160;
  _OWORD v161[4];
  char v162;
  __int128 v163;
  uint64_t v164;
  __int128 v165;
  __int128 v166;
  uint64_t v167;
  char v168;
  __int128 v169;
  uint64_t v170;
  __int128 v171;
  __int128 v172;
  uint64_t v173;
  char v174;
  _BYTE v175[48];
  _BYTE v176[16];
  uint64_t v177;
  unint64_t v178;

  v130 = a4;
  v132 = a1;
  v7 = sub_100007E8C(&qword_1011E6620);
  __chkstk_darwin(v7);
  v133 = (uint64_t)&v128 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = (int *)type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin(v134);
  v10 = (char *)&v128 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for SymbolButton.Metrics(0);
  __chkstk_darwin(v11);
  v13 = (uint64_t *)((char *)&v128 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = objc_msgSend(a1, "traitCollection");
  sub_100CCA5B0(v13);
  sub_10005B748((uint64_t)v13, type metadata accessor for SymbolButton.Metrics);
  sub_10005B704(ObjCClassFromMetadata, (uint64_t)v10, type metadata accessor for SymbolButton.Configuration);
  sub_100CC9CF0((uint64_t)v10, v14, v13);
  v136 = (uint64_t)v13;
  sub_100CCA7BC((uint64_t)v13);
  v15 = *(void **)&a1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_materialView];
  sub_100065228(ObjCClassFromMetadata + 224, (uint64_t)v175, &qword_1011E66A0);
  v131 = v15;
  sub_100CCC1B8((uint64_t)v175);
  v135 = *(char **)&a1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_backgroundView];
  v17 = *(_QWORD *)(ObjCClassFromMetadata + 192);
  v16 = *(void **)(ObjCClassFromMetadata + 200);
  if (v16 != (void *)1)
  {
    v18 = *(double *)(ObjCClassFromMetadata + 192);
    v20 = *(_QWORD *)(ObjCClassFromMetadata + 216);
    v19 = *(void **)(ObjCClassFromMetadata + 200);
    goto LABEL_5;
  }
  if (qword_1011DE2C8 == -1)
    goto LABEL_3;
  while (1)
  {
    swift_once(&qword_1011DE2C8, sub_100CC6F80);
LABEL_3:
    swift_beginAccess(&static SymbolButton.Background.clear, &v139, 0, 0);
    v18 = *(double *)&static SymbolButton.Background.clear;
    v19 = (void *)qword_101250118;
    v20 = qword_101250128;
    swift_bridgeObjectRetain();
    v21 = v19;
LABEL_5:
    sub_100CD1BA4(v17, v16);
    v22 = objc_msgSend(v135, "layer");
    if (v20)
      v23 = String._bridgeToObjectiveC()();
    else
      v23 = 0;
    v24 = v134;
    objc_msgSend(v22, "setCompositingFilter:", v23);
    swift_unknownObjectRelease(v23);

    v25 = v19;
    sub_100CCC78C(v19, v18);

    swift_bridgeObjectRelease(v20);
    v26 = *(_QWORD *)(a3 + 136);
    v27 = *(_QWORD *)(a3 + 176);
    v28 = *(_BYTE *)(a3 + 184);
    v163 = *(_OWORD *)(a3 + 120);
    v29 = *(_OWORD *)(a3 + 160);
    v165 = *(_OWORD *)(a3 + 144);
    v166 = v29;
    v164 = v26;
    v167 = v27;
    v168 = v28;
    v30 = *(_OWORD *)(ObjCClassFromMetadata + 136);
    v31 = *(_OWORD *)(ObjCClassFromMetadata + 168);
    v161[2] = *(_OWORD *)(ObjCClassFromMetadata + 152);
    v161[3] = v31;
    v162 = *(_BYTE *)(ObjCClassFromMetadata + 184);
    v161[0] = *(_OWORD *)(ObjCClassFromMetadata + 120);
    v161[1] = v30;
    v32 = *(_QWORD *)(ObjCClassFromMetadata + 136);
    v33 = *(_QWORD *)(ObjCClassFromMetadata + 176);
    v34 = *(_BYTE *)(ObjCClassFromMetadata + 184);
    v169 = *(_OWORD *)(ObjCClassFromMetadata + 120);
    v171 = *(_OWORD *)(ObjCClassFromMetadata + 144);
    v172 = *(_OWORD *)(ObjCClassFromMetadata + 160);
    v170 = v32;
    v173 = v33;
    v174 = v34;
    v35 = sub_100CD0DD0((uint64_t)&v163, (uint64_t)&v169);
    v36 = v132;
    if ((v35 & 1) == 0)
    {
      v37 = sub_100CC98F4();
      sub_100065228((uint64_t)v161, (uint64_t)v176, &qword_1011E66B0);
      sub_100CCCE08((uint64_t)v161);

      sub_100065228((uint64_t)v176, (uint64_t)&v177, &qword_1011E66B0);
      if (v178)
      {
        v38 = HIBYTE(v178) & 0xF;
        if ((v178 & 0x2000000000000000) == 0)
          v38 = v177 & 0xFFFFFFFFFFFFLL;
        if (v38)
        {
          v39 = String._bridgeToObjectiveC()();
          objc_msgSend(v36, "setAccessibilityLabel:", v39);

        }
      }
    }
    v40 = *(_OWORD *)(a3 + 16);
    v145[0] = *(_OWORD *)a3;
    v145[1] = v40;
    v41 = *(_OWORD *)(a3 + 64);
    v148 = *(_OWORD *)(a3 + 48);
    v149 = v41;
    v151 = *(_OWORD *)(a3 + 88);
    v152 = *(_OWORD *)(a3 + 104);
    v42 = *(_OWORD *)(ObjCClassFromMetadata + 48);
    v43 = *(_OWORD *)(ObjCClassFromMetadata + 80);
    v141 = *(_OWORD *)(ObjCClassFromMetadata + 64);
    v142 = v43;
    v143 = *(_OWORD *)(ObjCClassFromMetadata + 96);
    v44 = *(_OWORD *)(ObjCClassFromMetadata + 16);
    v140[0] = *(_OWORD *)ObjCClassFromMetadata;
    v140[1] = v44;
    v45 = *(_OWORD *)(ObjCClassFromMetadata + 48);
    v140[2] = *(_OWORD *)(ObjCClassFromMetadata + 32);
    v140[3] = v45;
    v153[0] = v140[0];
    v153[1] = v44;
    v46 = *(unsigned __int8 *)(a3 + 40);
    v47 = *(unsigned __int8 *)(a3 + 80);
    v146 = *(_QWORD *)(a3 + 32);
    v147 = v46;
    v150 = v47;
    v144 = *(_QWORD *)(ObjCClassFromMetadata + 112);
    v48 = *(unsigned __int8 *)(ObjCClassFromMetadata + 40);
    v49 = *(unsigned __int8 *)(ObjCClassFromMetadata + 80);
    v154 = *(_QWORD *)(ObjCClassFromMetadata + 32);
    v155 = v48;
    v156 = v42;
    v157 = v141;
    v158 = v49;
    v159 = *(_OWORD *)(ObjCClassFromMetadata + 88);
    v160 = *(_OWORD *)(ObjCClassFromMetadata + 104);
    if ((_s11MusicCoreUI12SymbolButtonC0D0V21hasSignificantChanges4from2toSbAESg_AItFZ_0((uint64_t)v145, (uint64_t)v153) & 1) == 0)
    {
      v50 = sub_100CC9790();
      sub_100CCCAA8((uint64_t)v140);

    }
    v51 = v24[11];
    v52 = (uint64_t *)(ObjCClassFromMetadata + v51);
    v53 = *(void **)(ObjCClassFromMetadata + v51 + 16);
    if (v53 != (void *)1 && *(_QWORD *)(a3 + v51 + 16) != 1)
    {
      v54 = *(char **)&v36[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView];
      if (v54)
      {
        v56 = *v52;
        v55 = v52[1];
        if (v53)
        {
          v57 = v54;
          v58 = v53;
          v59 = v53;
        }
        else
        {
          v60 = (void *)objc_opt_self(UIColor);
          v61 = v54;
          sub_100CD1BD8(v56, v55, 0);
          v59 = objc_msgSend(v60, "tintColor");
          v58 = 0;
        }
        v62 = v58;
        objc_msgSend(v54, "setBackgroundColor:", v59);

        objc_msgSend(v54, "setAlpha:", *(double *)&v55);
        objc_msgSend(*(id *)&v54[OBJC_IVAR____TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A939BadgeView_punchOutView], "setAlpha:", *(double *)&v55);
        sub_100CCD460();
        sub_100974130(v56, v55, v53);

      }
    }
    v63 = objc_msgSend(v131, "contentView");
    v64 = *(_QWORD *)(ObjCClassFromMetadata + 272);
    v65 = *(_QWORD *)(ObjCClassFromMetadata + 280);
    v66 = *(void **)(ObjCClassFromMetadata + 288);
    v67 = v66;
    UIView.border.setter(v64, v65, v66);

    objc_msgSend(v36, "setAlpha:", *(double *)(ObjCClassFromMetadata + v24[17]));
    v68 = (_QWORD *)v136;
    sub_100CCA5B0((_QWORD *)v136);
    sub_100CCB678((uint64_t)v68);
    sub_10005B748((uint64_t)v68, type metadata accessor for SymbolButton.Metrics);
    v69 = objc_msgSend(v36, "superview");
    objc_msgSend(v69, "layoutIfNeeded");

    objc_msgSend(v36, "layoutIfNeeded");
    if (v36[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_isClippingInvalidated] != 1)
      break;
    v129 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_isClippingInvalidated;
    v70 = v131;
    objc_msgSend(v131, "_setAllowsGroupFiltering:", 1);
    v71 = objc_msgSend(v70, "contentView");
    v72 = objc_msgSend(v71, "subviews");

    v73 = sub_10004A07C(0, (unint64_t *)&qword_1011E2F40, UIView_ptr);
    v74 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v72, v73);

    v136 = v74;
    if (v74 >> 62)
    {
      if (v136 < 0)
        v85 = v136;
      else
        v85 = v136 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v75 = _CocoaArrayWrapper.endIndex.getter(v85);
      if (!v75)
      {
LABEL_44:
        swift_bridgeObjectRelease_n(v136, 2);
        v132[v129] = 0;
        break;
      }
    }
    else
    {
      v75 = *(_QWORD *)((v136 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v75)
        goto LABEL_44;
    }
    type metadata accessor for SymbolButton.Label();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v76 = v136 & 0xC000000000000001;
    v135 = &v132[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration];
    swift_beginAccess(&v132[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration], &v137, 0, 0);
    v17 = 4;
    v77 = 0;
    if (v76)
    {
LABEL_27:
      v78 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v77, v136);
      goto LABEL_29;
    }
    while (1)
    {
      v78 = *(id *)(v136 + 8 * v17);
LABEL_29:
      v16 = v78;
      a3 = v77 + 1;
      if (__OFADD__(v77, 1))
        break;
      if (!objc_msgSend(v78, "isKindOfClass:", ObjCClassFromMetadata))
      {
        v79 = v135[v24[19]];
        if (v79 == 2)
        {
          v80 = (unsigned __int8 *)&v135[v24[9]];
          v81 = v133;
          sub_10004A160((uint64_t)v80, v133, &qword_1011E6620);
          v82 = type metadata accessor for UIView.Corner(0);
          v83 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 48))(v81, 1, v82) != 1;
          v84 = v81;
          v24 = v134;
          sub_10004FF60(v84, &qword_1011E6620);
        }
        else
        {
          v83 = v79 & 1;
        }
        objc_msgSend(v16, "setClipsToBounds:", v83);
      }

      if (a3 == v75)
        goto LABEL_44;
      v77 = ++v17 - 4;
      if (v76)
        goto LABEL_27;
    }
    __break(1u);
  }
  v86 = v130 + 16;
  swift_beginAccess(v130 + 16, &v138, 0, 0);
  v87 = *(_QWORD *)(*(_QWORD *)v86 + 16);
  if (!v87)
    return;
  v88 = v87 - 1;
  v129 = swift_bridgeObjectRetain();
  for (i = v129 + 56; ; i += 88)
  {
    v91 = *(void **)(i - 24);
    v90 = *(_QWORD *)(i - 16);
    v92 = *(_QWORD *)(i - 8);
    v93 = *(void (**)(double, double, double, double))i;
    v94 = *(char **)(i + 8);
    v95 = *(void **)(i + 16);
    v96 = *(_QWORD **)(i + 24);
    v97 = *(_QWORD *)(i + 32);
    v135 = v94;
    v136 = (uint64_t)v96;
    v98 = *(_QWORD *)(i + 40);
    v99 = *(_QWORD *)(i + 48);
    v133 = v92;
    v134 = (int *)v93;
    v132 = (char *)v90;
    if (v91)
    {
      if (v93)
      {
        sub_100CD5CB8(v91, v90, v92, (uint64_t)v93, (uint64_t)v94);
        sub_100CD5CB8(v95, v136, v97, v98, v99);
        v100 = objc_msgSend(v131, "contentView");
        v130 = v99;
        v101 = v97;
        v102 = v88;
        v103 = v100;
        objc_msgSend(v100, "bounds");
        v105 = v104;
        v107 = v106;
        v109 = v108;
        v111 = v110;

        v112 = (void (*)(double, double, double, double))v98;
        v93(v105, v107, v109, v111);
        v88 = v102;
        v97 = v101;
        v99 = v130;
        objc_msgSend(v91, "setFrame:");
        if (!v95)
          goto LABEL_55;
      }
      else
      {
        sub_100CD5CB8(v91, v90, v92, 0, (uint64_t)v94);
        v112 = (void (*)(double, double, double, double))v98;
        sub_100CD5CB8(v95, v136, v97, v98, v99);
        if (!v95)
        {
LABEL_55:
          sub_100CD5CEC(v91, (uint64_t)v132, v133, (uint64_t)v134, (uint64_t)v135);
          v124 = 0;
          v125 = (_QWORD *)v136;
          v126 = v97;
          v127 = (uint64_t)v112;
          goto LABEL_57;
        }
      }
    }
    else
    {
      sub_100CD5CB8(0, v90, v92, (uint64_t)v93, (uint64_t)v94);
      sub_100CD5CB8(v95, v136, v97, v98, v99);
      v112 = (void (*)(double, double, double, double))v98;
      if (!v95)
        goto LABEL_55;
    }
    if (v112)
    {
      v113 = v97;
      v114 = v88;
      v115 = objc_msgSend(v131, "contentView");
      objc_msgSend(v115, "bounds");
      v117 = v116;
      v119 = v118;
      v121 = v120;
      v123 = v122;

      v112(v117, v119, v121, v123);
      v88 = v114;
      objc_msgSend(v95, "setFrame:");
      sub_100CD5CEC(v91, (uint64_t)v132, v133, (uint64_t)v134, (uint64_t)v135);
      v124 = v95;
      v125 = (_QWORD *)v136;
      v126 = v113;
      v127 = (uint64_t)v112;
    }
    else
    {
      sub_100CD5CEC(v91, (uint64_t)v132, v133, (uint64_t)v134, (uint64_t)v135);
      v124 = v95;
      v125 = (_QWORD *)v136;
      v126 = v97;
      v127 = 0;
    }
LABEL_57:
    sub_100CD5CEC(v124, (uint64_t)v125, v126, v127, v99);
    if (!v88)
      break;
    --v88;
  }
  swift_bridgeObjectRelease(v129);
}

uint64_t *SymbolButton.Background.clear.unsafeMutableAddressor()
{
  if (qword_1011DE2C8 != -1)
    swift_once(&qword_1011DE2C8, sub_100CC6F80);
  return &static SymbolButton.Background.clear;
}

void sub_100CC5CD0(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, char *a5, char *a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  void (*v25)(char *);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;
  NSObject *v36;
  os_log_type_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  double v42;
  char *v43;
  char *v44;
  char *v45;
  id v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56[24];
  uint64_t v57;
  char v58[24];

  swift_beginAccess(a2 + 16, v58, 0, 0);
  v10 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 16);
  if (v10)
  {
    v49 = a4;
    v50 = a6;
    v11 = swift_bridgeObjectRetain();
    v12 = v10 - 1;
    v48 = v11;
    v13 = (uint64_t *)(v11 + 56);
    v52 = a3;
    while (1)
    {
      v14 = (void *)v13[2];
      if (!v14)
        goto LABEL_4;
      v55 = v12;
      v15 = (void *)*(v13 - 3);
      v16 = *(v13 - 1);
      v17 = v13[1];
      v19 = v13[3];
      v18 = v13[4];
      v21 = v13[5];
      v20 = v13[6];
      v53 = *v13;
      v54 = *(v13 - 2);
      sub_100CD5CB8(v15, v54, v16, *v13, v17);
      sub_100CD5CB8(v14, v19, v18, v21, v20);
      if (!objc_msgSend(v14, "isDescendantOfView:", a3, v48))
        break;
      objc_msgSend(v14, "removeFromSuperview");
      sub_100CD5CEC(v15, v54, v16, v53, v17);
      sub_100CD5CEC(v14, v19, v18, v21, v20);
      a3 = v52;
      v12 = v55;
      if (!v55)
      {
LABEL_9:
        swift_bridgeObjectRelease(v48);
        a4 = v49;
        a6 = v50;
        goto LABEL_10;
      }
LABEL_5:
      v13 += 11;
      --v12;
    }
    sub_100CD5CEC(v15, v54, v16, v53, v17);
    sub_100CD5CEC(v14, v19, v18, v21, v20);
    a3 = v52;
    v12 = v55;
LABEL_4:
    if (!v12)
      goto LABEL_9;
    goto LABEL_5;
  }
LABEL_10:
  v22 = *(_QWORD *)(a4 + 16);
  if (v22)
  {
    swift_bridgeObjectRetain();
    v23 = a4;
    v24 = (uint64_t *)(a4 + 72);
    do
    {
      v25 = (void (*)(char *))*(v24 - 1);
      if (v25)
      {
        v26 = *v24;
        v28 = *(v24 - 5);
        v27 = *(v24 - 4);
        sub_100048AAC(v28, v27);
        sub_100048AAC((uint64_t)v25, v26);
        v25(a3);
        sub_10004BA30(v28, v27);
        sub_10004BA30((uint64_t)v25, v26);
      }
      v24 += 6;
      --v22;
    }
    while (v22);
    swift_bridgeObjectRelease(v23);
  }
  v29 = *(_QWORD *)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_pendingAnimatedChangesCount];
  v30 = v29 - 1;
  if (__OFSUB__(v29, 1))
  {
    __break(1u);
LABEL_28:
    swift_once(&qword_1011DDEE8, sub_100BC047C);
    goto LABEL_20;
  }
  *(_QWORD *)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_pendingAnimatedChangesCount] = v30;
  if (v30 != v29)
    sub_100CCB23C();
  if (qword_1011DDEE8 != -1)
    goto LABEL_28;
LABEL_20:
  v31 = type metadata accessor for Logger(0);
  sub_100048B14(v31, (uint64_t)qword_10124F288);
  v32 = a3;
  swift_bridgeObjectRetain_n(a6, 2);
  v33 = v32;
  v34 = a6;
  v35 = v33;
  v36 = Logger.logObject.getter(v33);
  v37 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v36, v37))
  {
    v38 = v34;
    v39 = swift_slowAlloc(22, -1);
    v40 = swift_slowAlloc(64, -1);
    v57 = v40;
    *(_DWORD *)v39 = 136446466;
    v41 = &v35[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_debugLabel];
    *(_QWORD *)&v42 = swift_beginAccess(&v35[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_debugLabel], v56, 0, 0).n128_u64[0];
    v43 = (char *)*((_QWORD *)v41 + 1);
    if (v43)
    {
      v44 = *(char **)v41;
      v45 = v43;
    }
    else
    {
      v46 = objc_msgSend(v35, "description", v42);
      v44 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v46);
      v45 = v47;

    }
    swift_bridgeObjectRetain();
    *(_QWORD *)(v39 + 4) = sub_100BBDE38(v44, v45, &v57);
    swift_bridgeObjectRelease(v45);

    *(_WORD *)(v39 + 12) = 2082;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v39 + 14) = sub_100BBDE38(a5, v38, &v57);
    swift_bridgeObjectRelease_n(v38, 3);
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "[%{public}s] UpdateID=%{public}s — Updated ✅", (uint8_t *)v39, 0x16u);
    swift_arrayDestroy(v40, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v40, -1, -1);
    swift_slowDealloc(v39, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n(v34, 2);
  }

}

uint64_t SymbolButton.Configuration.symbol.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100CD1AD4(v1, a1);
}

uint64_t SymbolButton.Configuration.symbol.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_100CD1B08(a1, v1);
}

uint64_t SymbolButton.Configuration.title.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100CD1B3C(v1 + 120, a1);
}

uint64_t SymbolButton.Configuration.title.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_100CD1B70(a1, v1 + 120);
}

uint64_t SymbolButton.Configuration.background.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 192);
  sub_100CD1BA4(v1, *(void **)(v0 + 200));
  return v1;
}

uint64_t SymbolButton.Configuration.background.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t result;

  result = sub_10013BA8C(*(_QWORD *)(v4 + 192), *(void **)(v4 + 200), *(_QWORD *)(v4 + 208), *(_QWORD *)(v4 + 216));
  *(_QWORD *)(v4 + 192) = a1;
  *(_QWORD *)(v4 + 200) = a2;
  *(_QWORD *)(v4 + 208) = a3;
  *(_QWORD *)(v4 + 216) = a4;
  return result;
}

uint64_t SymbolButton.Configuration.material.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10004A160(v1 + 224, a1, &qword_1011E66A0);
}

uint64_t SymbolButton.Configuration.material.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1000A5508(a1, v1 + 224, &qword_1011E66A0);
}

uint64_t SymbolButton.Configuration.border.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;

  v1 = *(_QWORD *)(v0 + 272);
  v2 = *(id *)(v0 + 288);
  return v1;
}

void SymbolButton.Configuration.border.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 272) = a1;
  *(_QWORD *)(v3 + 280) = a2;
  *(_QWORD *)(v3 + 288) = a3;
}

uint64_t SymbolButton.Configuration.corner.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for SymbolButton.Configuration(0);
  return sub_10004A160(v1 + *(int *)(v3 + 36), a1, &qword_1011E6620);
}

uint64_t SymbolButton.Configuration.corner.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for SymbolButton.Configuration(0);
  return sub_1000A5508(a1, v1 + *(int *)(v3 + 36), &qword_1011E6620);
}

double (*SymbolButton.Configuration.corner.modify())(_QWORD)
{
  type metadata accessor for SymbolButton.Configuration(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t SymbolButton.Configuration.customView.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for SymbolButton.Configuration(0);
  return sub_10004A160(v1 + *(int *)(v3 + 40), a1, &qword_1011E6698);
}

uint64_t SymbolButton.Configuration.customView.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for SymbolButton.Configuration(0);
  return sub_1000A5508(a1, v1 + *(int *)(v3 + 40), &qword_1011E6698);
}

double (*SymbolButton.Configuration.customView.modify())(_QWORD)
{
  type metadata accessor for SymbolButton.Configuration(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t SymbolButton.Configuration.badge.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for SymbolButton.Configuration(0) + 44);
  v2 = *(_QWORD *)v1;
  sub_100CD1BD8(*(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(void **)(v1 + 16));
  return v2;
}

void SymbolButton.Configuration.badge.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = v3 + *(int *)(type metadata accessor for SymbolButton.Configuration(0) + 44);
  sub_100974130(*(_QWORD *)v7, *(_QWORD *)(v7 + 8), *(void **)(v7 + 16));
  *(_QWORD *)v7 = a1;
  *(_QWORD *)(v7 + 8) = a2;
  *(_QWORD *)(v7 + 16) = a3;
}

double (*SymbolButton.Configuration.badge.modify())(_QWORD)
{
  type metadata accessor for SymbolButton.Configuration(0);
  return UIScreen.Dimensions.size.getter;
}

double SymbolButton.Configuration.symbolToTextSpacing.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for SymbolButton.Configuration(0) + 48));
}

uint64_t SymbolButton.Configuration.symbolToTextSpacing.setter(double a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SymbolButton.Configuration(0);
  *(double *)(v1 + *(int *)(result + 48)) = a1;
  return result;
}

double (*SymbolButton.Configuration.symbolToTextSpacing.modify())(_QWORD)
{
  type metadata accessor for SymbolButton.Configuration(0);
  return UIScreen.Dimensions.size.getter;
}

double SymbolButton.Configuration.minimumSize.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for SymbolButton.Configuration(0) + 52));
}

uint64_t SymbolButton.Configuration.minimumSize.setter(double a1, double a2)
{
  uint64_t v2;
  uint64_t result;
  double *v6;

  result = type metadata accessor for SymbolButton.Configuration(0);
  v6 = (double *)(v2 + *(int *)(result + 52));
  *v6 = a1;
  v6[1] = a2;
  return result;
}

double (*SymbolButton.Configuration.minimumSize.modify())(_QWORD)
{
  type metadata accessor for SymbolButton.Configuration(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t SymbolButton.Configuration.maximumImageSize.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for SymbolButton.Configuration(0) + 56));
}

uint64_t SymbolButton.Configuration.maximumImageSize.setter(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v8;

  result = type metadata accessor for SymbolButton.Configuration(0);
  v8 = v3 + *(int *)(result + 56);
  *(_QWORD *)v8 = a1;
  *(_QWORD *)(v8 + 8) = a2;
  *(_BYTE *)(v8 + 16) = a3 & 1;
  return result;
}

double (*SymbolButton.Configuration.maximumImageSize.modify())(_QWORD)
{
  type metadata accessor for SymbolButton.Configuration(0);
  return UIScreen.Dimensions.size.getter;
}

double SymbolButton.Configuration.contentInsets.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for SymbolButton.Configuration(0) + 60));
}

uint64_t SymbolButton.Configuration.contentInsets.setter(double a1, double a2, double a3, double a4)
{
  uint64_t v4;
  uint64_t result;
  double *v10;

  result = type metadata accessor for SymbolButton.Configuration(0);
  v10 = (double *)(v4 + *(int *)(result + 60));
  *v10 = a1;
  v10[1] = a2;
  v10[2] = a3;
  v10[3] = a4;
  return result;
}

double (*SymbolButton.Configuration.contentInsets.modify())(_QWORD)
{
  type metadata accessor for SymbolButton.Configuration(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t SymbolButton.Configuration.Accessibility.init(automaticallyAdjustsForAccessibility:minimumContentSizeCategory:maximumContentSizeCategory:showsLargeContentViewer:)(char a1)
{
  return a1 & 1;
}

uint64_t SymbolButton.Configuration.accessibility.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;

  v1 = (unsigned __int8 *)(v0 + *(int *)(type metadata accessor for SymbolButton.Configuration(0) + 64));
  v2 = *v1;
  v3 = (void *)*((_QWORD *)v1 + 2);
  v4 = *((id *)v1 + 1);
  v5 = v3;
  return v2;
}

void SymbolButton.Configuration.accessibility.setter(char a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v9;

  v9 = v4 + *(int *)(type metadata accessor for SymbolButton.Configuration(0) + 64);

  *(_BYTE *)v9 = a1;
  *(_QWORD *)(v9 + 8) = a2;
  *(_QWORD *)(v9 + 16) = a3;
  *(_BYTE *)(v9 + 24) = a4;
}

double (*SymbolButton.Configuration.accessibility.modify())(_QWORD)
{
  type metadata accessor for SymbolButton.Configuration(0);
  return UIScreen.Dimensions.size.getter;
}

void *SymbolButton.Configuration.Accessibility.minimumContentSizeCategory.getter(uint64_t a1, void *a2)
{
  id v3;

  v3 = a2;
  return a2;
}

UIPointerRegion_optional __swiftcall SymbolButton.pointerInteraction(_:regionFor:defaultRegion:)(UIPointerInteraction _, UIPointerRegionRequest regionFor, UIPointerRegion defaultRegion)
{
  objc_class *v4;
  Swift::Bool v5;
  objc_class *isa;
  UIPointerRegion_optional result;

  v4 = defaultRegion.super.isa;
  isa = defaultRegion.super.isa;
  result.value.super.isa = isa;
  result.is_nil = v5;
  return result;
}

uint64_t SymbolButton.Configuration.Accessibility.showsLargeContentViewer.getter(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return a4 & 1;
}

uint64_t SymbolButton.Material.color.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 24) = result;
  return result;
}

UIContentSizeCategory sub_100CC67DC()
{
  NSString *v0;

  static SymbolButton.Configuration.Accessibility.forBarButtonItem = 1;
  qword_1012500F8 = (uint64_t)UIContentSizeCategoryLarge;
  unk_101250100 = UIContentSizeCategoryExtraLarge;
  byte_101250108 = 1;
  v0 = UIContentSizeCategoryLarge;
  return UIContentSizeCategoryExtraLarge;
}

char *SymbolButton.Configuration.Accessibility.forBarButtonItem.unsafeMutableAddressor()
{
  if (qword_1011DE2C0 != -1)
    swift_once(&qword_1011DE2C0, sub_100CC67DC);
  return &static SymbolButton.Configuration.Accessibility.forBarButtonItem;
}

uint64_t static SymbolButton.Configuration.Accessibility.forBarButtonItem.getter()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;

  if (qword_1011DE2C0 != -1)
    swift_once(&qword_1011DE2C0, sub_100CC67DC);
  v0 = static SymbolButton.Configuration.Accessibility.forBarButtonItem;
  v1 = (void *)unk_101250100;
  v2 = (id)qword_1012500F8;
  v3 = v1;
  return v0;
}

uint64_t sub_100CC68E8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return _s11MusicCoreUI12SymbolButtonC13ConfigurationV13AccessibilityV23__derived_struct_equalsySbAG_AGtFZ_0(*a1, *((_QWORD *)a1 + 1), *((_QWORD *)a1 + 2), a1[24], *a2, *((_QWORD *)a2 + 1), *((_QWORD *)a2 + 2), a2[24]);
}

double SymbolButton.Configuration.alpha.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for SymbolButton.Configuration(0) + 68));
}

uint64_t SymbolButton.Configuration.alpha.setter(double a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SymbolButton.Configuration(0);
  *(double *)(v1 + *(int *)(result + 68)) = a1;
  return result;
}

double (*SymbolButton.Configuration.alpha.modify())(_QWORD)
{
  type metadata accessor for SymbolButton.Configuration(0);
  return UIScreen.Dimensions.size.getter;
}

void *SymbolButton.Configuration.tint.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + *(int *)(type metadata accessor for SymbolButton.Configuration(0) + 72));
  v2 = v1;
  return v1;
}

void SymbolButton.Configuration.tint.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(type metadata accessor for SymbolButton.Configuration(0) + 72);

  *(_QWORD *)(v1 + v3) = a1;
}

double (*SymbolButton.Configuration.tint.modify())(_QWORD)
{
  type metadata accessor for SymbolButton.Configuration(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t SymbolButton.Configuration.shouldClipToBounds.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for SymbolButton.Configuration(0) + 76));
}

uint64_t SymbolButton.Configuration.shouldClipToBounds.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SymbolButton.Configuration(0);
  *(_BYTE *)(v1 + *(int *)(result + 76)) = a1;
  return result;
}

double (*SymbolButton.Configuration.shouldClipToBounds.modify())(_QWORD)
{
  type metadata accessor for SymbolButton.Configuration(0);
  return UIScreen.Dimensions.size.getter;
}

void SymbolButton.Configuration.init()(uint64_t a1@<X8>)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  NSString *v9;
  uint64_t v10;
  _OWORD *v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  void *v29;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = UIFontTextStyleSubheadline;
  *(_QWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 40) = 1;
  *(_OWORD *)(a1 + 48) = xmmword_100EC0EB0;
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  *(_BYTE *)(a1 + 80) = -1;
  *(_QWORD *)(a1 + 88) = 0;
  *(_QWORD *)(a1 + 96) = 0;
  *(_QWORD *)(a1 + 104) = 0x3FF0000000000000;
  *(_QWORD *)(a1 + 112) = 0;
  *(_QWORD *)(a1 + 120) = 0;
  *(_QWORD *)(a1 + 128) = 0;
  *(_QWORD *)(a1 + 136) = UIFontTextStyleSubheadline;
  *(UIFontWeight *)(a1 + 144) = UIFontWeightSemibold;
  *(_QWORD *)(a1 + 152) = 0;
  *(_QWORD *)(a1 + 160) = 0;
  *(_QWORD *)(a1 + 168) = 0x3FF0000000000000;
  *(_QWORD *)(a1 + 176) = 0;
  *(_BYTE *)(a1 + 184) = 0;
  *(_QWORD *)(a1 + 224) = 1;
  v2 = (int *)type metadata accessor for SymbolButton.Configuration(0);
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 248) = 0u;
  *(_OWORD *)(a1 + 264) = 0u;
  *(_OWORD *)(a1 + 280) = 0u;
  v3 = a1 + v2[9];
  v4 = type metadata accessor for UIView.Corner(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v5 = a1 + v2[10];
  *(_QWORD *)(v5 + 48) = 0;
  *(_OWORD *)(v5 + 16) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)v5 = 0u;
  v6 = (_QWORD *)(a1 + v2[11]);
  *v6 = 0;
  v6[1] = 0;
  v6[2] = 1;
  *(_QWORD *)(a1 + v2[12]) = 0x4010000000000000;
  v7 = v2[13];
  v8 = qword_1011DE2E8;
  v9 = UIFontTextStyleSubheadline;
  if (v8 != -1)
    swift_once(&qword_1011DE2E8, sub_100CCDB38);
  *(_OWORD *)(a1 + v7) = static SymbolButton.Configuration.platterMinimumSize;
  v10 = a1 + v2[14];
  *(_QWORD *)v10 = 0;
  *(_QWORD *)(v10 + 8) = 0;
  *(_BYTE *)(v10 + 16) = 1;
  v11 = (_OWORD *)(a1 + v2[15]);
  v12 = *(_OWORD *)&NSDirectionalEdgeInsetsZero.bottom;
  *v11 = *(_OWORD *)&NSDirectionalEdgeInsetsZero.top;
  v11[1] = v12;
  v13 = a1 + v2[16];
  *(_BYTE *)v13 = 1;
  *(_QWORD *)(v13 + 8) = 0;
  *(_QWORD *)(v13 + 16) = 0;
  *(_BYTE *)(v13 + 24) = 0;
  *(_QWORD *)(a1 + v2[17]) = 0x3FF0000000000000;
  *(_QWORD *)(a1 + v2[18]) = 0;
  *(_BYTE *)(a1 + v2[19]) = 2;
  if (qword_1011DE308 != -1)
    swift_once(&qword_1011DE308, sub_100CCE868);
  v14 = qword_1012501D8;
  *(_QWORD *)(a1 + 192) = static SymbolButton.Background.normal;
  v28 = (void *)qword_1012501C8;
  *(_OWORD *)(a1 + 200) = *(_OWORD *)&qword_1012501C8;
  *(_QWORD *)(a1 + 216) = v14;
  v15 = (void *)objc_opt_self(UITraitCollection);
  swift_bridgeObjectRetain();
  v16 = v28;
  v17 = objc_msgSend(v15, "currentTraitCollection");
  v18 = objc_msgSend(v17, "userInterfaceIdiom");

  if (v18 == (id)6)
  {
    if (qword_1011DE318 != -1)
      swift_once(&qword_1011DE318, sub_100CCEA58);
    v19 = (void *)static SymbolButton.Material.xr;
    v20 = (void *)qword_101250208;
    v21 = qword_101250210;
    v29 = (void *)qword_101250210;
    v22 = byte_101250218;
    v24 = qword_101250220;
    v23 = unk_101250228;
    *(_QWORD *)(a1 + 224) = static SymbolButton.Material.xr;
    *(_QWORD *)(a1 + 232) = v20;
    *(_QWORD *)(a1 + 240) = v21;
    *(_QWORD *)(a1 + 248) = v22;
    *(_QWORD *)(a1 + 256) = v24;
    *(_QWORD *)(a1 + 264) = v23;
    swift_bridgeObjectRetain();
    v25 = v19;
    v26 = v20;
    v27 = v29;
  }
}

uint64_t *SymbolButton.Material.xr.unsafeMutableAddressor()
{
  if (qword_1011DE318 != -1)
    swift_once(&qword_1011DE318, sub_100CCEA58);
  return &static SymbolButton.Material.xr;
}

uint64_t SymbolButton.Symbol.weight.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 48) = result;
  return result;
}

uint64_t SymbolButton.Symbol.scale.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 56);
}

uint64_t SymbolButton.Symbol.scale.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = result;
  return result;
}

uint64_t SymbolButton.Symbol.offset.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 64);
}

uint64_t SymbolButton.Symbol.offset.setter(uint64_t result, uint64_t a2, char a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 64) = result;
  *(_QWORD *)(v3 + 72) = a2;
  *(_BYTE *)(v3 + 80) = a3;
  return result;
}

double SymbolButton.Symbol.alpha.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 104);
}

void SymbolButton.Symbol.alpha.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 104) = a1;
}

void *SymbolButton.Symbol.tint.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 112);
  v2 = v1;
  return v1;
}

void SymbolButton.Symbol.tint.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 112) = a1;
}

BOOL sub_100CC6E4C(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _OWORD v12[7];
  uint64_t v13;
  _OWORD v14[7];
  uint64_t v15;

  v2 = *(_OWORD *)(a1 + 80);
  v12[4] = *(_OWORD *)(a1 + 64);
  v12[5] = v2;
  v12[6] = *(_OWORD *)(a1 + 96);
  v13 = *(_QWORD *)(a1 + 112);
  v3 = *(_OWORD *)(a1 + 16);
  v12[0] = *(_OWORD *)a1;
  v12[1] = v3;
  v4 = *(_OWORD *)(a1 + 48);
  v12[2] = *(_OWORD *)(a1 + 32);
  v12[3] = v4;
  v5 = *a2;
  v6 = a2[1];
  v7 = a2[3];
  v14[2] = a2[2];
  v14[3] = v7;
  v14[0] = v5;
  v14[1] = v6;
  v8 = a2[4];
  v9 = a2[5];
  v10 = a2[6];
  v15 = *((_QWORD *)a2 + 14);
  v14[5] = v9;
  v14[6] = v10;
  v14[4] = v8;
  return _s11MusicCoreUI12SymbolButtonC0D0V23__derived_struct_equalsySbAE_AEtFZ_0((double *)v12, (uint64_t)v14);
}

void SymbolButton.Title.alpha.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 48) = a1;
}

uint64_t SymbolButton.Title.isHidden.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 64);
}

uint64_t SymbolButton.Title.isHidden.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 64) = result;
  return result;
}

uint64_t sub_100CC6EE4(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[4];
  char v8;
  _OWORD v9[4];
  char v10;

  v2 = *(_OWORD *)(a1 + 48);
  v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v2;
  v8 = *(_BYTE *)(a1 + 64);
  v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  v4 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v4;
  v10 = *(_BYTE *)(a2 + 64);
  v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return _s11MusicCoreUI12SymbolButtonC5TitleV23__derived_struct_equalsySbAE_AEtFZ_0((double *)v7, (uint64_t)v9) & 1;
}

uint64_t JSTabComponentController.Identifier.title.getter(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain();
  return a2;
}

uint64_t SymbolButton.Background.init()()
{
  return 0;
}

id sub_100CC6F80()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  static SymbolButton.Background.clear = 0x3FF0000000000000;
  qword_101250118 = (uint64_t)result;
  qword_101250120 = 0;
  qword_101250128 = 0;
  return result;
}

uint64_t static SymbolButton.Background.clear.getter()
{
  uint64_t v0;
  id v1;
  _BYTE v3[24];

  if (qword_1011DE2C8 != -1)
    swift_once(&qword_1011DE2C8, sub_100CC6F80);
  swift_beginAccess(&static SymbolButton.Background.clear, v3, 0, 0);
  v0 = qword_101250118;
  v1 = (id)qword_101250118;
  swift_bridgeObjectRetain();
  return v0;
}

void static SymbolButton.Background.clear.setter(void *a1, uint64_t a2, uint64_t a3, double a4)
{
  void *v8;
  _BYTE v9[24];

  if (qword_1011DE2C8 != -1)
    swift_once(&qword_1011DE2C8, sub_100CC6F80);
  swift_beginAccess(&static SymbolButton.Background.clear, v9, 1, 0);
  v8 = (void *)qword_101250118;
  static SymbolButton.Background.clear = *(_QWORD *)&a4;
  qword_101250118 = (uint64_t)a1;
  qword_101250120 = a2;
  qword_101250128 = a3;

  swift_bridgeObjectRelease();
}

uint64_t (*static SymbolButton.Background.clear.modify(uint64_t a1))(_QWORD)
{
  if (qword_1011DE2C8 != -1)
    swift_once(&qword_1011DE2C8, sub_100CC6F80);
  swift_beginAccess(&static SymbolButton.Background.clear, a1, 33, 0);
  return j__swift_endAccess;
}

BOOL sub_100CC7184(uint64_t a1, uint64_t a2)
{
  return _s11MusicCoreUI12SymbolButtonC10BackgroundV23__derived_struct_equalsySbAE_AEtFZ_0(*(void **)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(void **)(a2 + 8), *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), *(double *)a1, *(double *)a2);
}

void SymbolButton.Material.init()(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 24) = 2;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
}

BOOL sub_100CC71C4(_OWORD *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[3];
  _OWORD v8[3];

  v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  v3 = *a2;
  v4 = a2[1];
  v7[2] = a1[2];
  v8[0] = v3;
  v5 = a2[2];
  v8[1] = v4;
  v8[2] = v5;
  return _s11MusicCoreUI12SymbolButtonC8MaterialV23__derived_struct_equalsySbAE_AEtFZ_0((uint64_t)v7, (uint64_t)v8);
}

double SymbolButton.CustomView.insets.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

void SymbolButton.CustomView.insets.setter(double a1, double a2, double a3, double a4)
{
  double *v4;

  v4[1] = a1;
  v4[2] = a2;
  v4[3] = a3;
  v4[4] = a4;
}

void SymbolButton.CustomView.alpha.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 40) = a1;
}

void *static SymbolButton.CustomView.with(_:configurator:)@<X0>(void *result@<X0>, uint64_t (*a2)(void **)@<X1>, uint64_t a3@<X8>)
{
  __int128 v5;
  id v6;
  void *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  void *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  if (result)
  {
    v11 = result;
    v5 = *(_OWORD *)&UIEdgeInsetsZero.bottom;
    v12 = *(_OWORD *)&UIEdgeInsetsZero.top;
    v13 = v5;
    v14 = 0x3FF0000000000000uLL;
    v6 = result;
    result = (void *)a2(&v11);
    v7 = v11;
    v8 = v12;
    v9 = v13;
    v10 = v14;
  }
  else
  {
    v7 = 0;
    v8 = 0uLL;
    v9 = 0uLL;
    v10 = 0uLL;
  }
  *(_QWORD *)a3 = v7;
  *(_OWORD *)(a3 + 8) = v8;
  *(_OWORD *)(a3 + 24) = v9;
  *(_OWORD *)(a3 + 40) = v10;
  return result;
}

uint64_t sub_100CC72BC(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[3];
  uint64_t v6;
  _OWORD v7[3];
  uint64_t v8;

  v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v5[2] = *(_OWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 48);
  v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v7[2] = *(_OWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 48);
  return _s11MusicCoreUI12SymbolButtonC10CustomViewV23__derived_struct_equalsySbAE_AEtFZ_0((uint64_t)v5, (uint64_t)v7) & 1;
}

uint64_t SymbolButton.Badge.init()()
{
  return 0;
}

uint64_t static SymbolButton.Badge.with(_:)(void (*a1)(__int128 *))
{
  __int128 v2;
  uint64_t v3;

  v2 = xmmword_100EE8B80;
  v3 = 0;
  a1(&v2);
  return v3;
}

uint64_t sub_100CC7370(uint64_t a1, uint64_t a2)
{
  return _s11MusicCoreUI12SymbolButtonC5BadgeV23__derived_struct_equalsySbAE_AEtFZ_0(*(void **)(a1 + 16), *(void **)(a2 + 16), *(double *)a1, *(double *)(a1 + 8), *(double *)a2, *(double *)(a2 + 8));
}

Swift::Void __swiftcall SymbolButton.layoutSubviews()()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  objc_class *v13;
  void *v14;
  id v15;
  double v16;
  CGFloat v17;
  double *v18;
  double v19;
  double v20;
  double v21;
  double v22;
  id v23;
  id v24;
  id v25;
  double v26;
  CGFloat v27;
  double v28;
  CGFloat v29;
  double v30;
  double v31;
  double v32;
  id v33;
  double *v34;
  double v35;
  double v36;
  int v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  CGFloat v43;
  uint64_t v44;
  CGFloat v45;
  CGFloat v46;
  double Width;
  double v48;
  double Height;
  id v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  char **v56;
  char **v57;
  double v58;
  double v59;
  double v60;
  CGFloat v61;
  CGFloat v62;
  double v63;
  uint64_t v64;
  double v65;
  unint64_t v66;
  double MinY;
  double MinX;
  CGFloat v69;
  CGFloat v70;
  CGFloat v71;
  CGFloat v72;
  double MidX;
  double v74;
  id v75;
  double v76;
  double v77;
  double v78;
  double v79;
  double MaxX;
  double MidY;
  double v82;
  id v83;
  double v84;
  double v85;
  double MaxY;
  CGFloat v87;
  CGFloat v88;
  double v89;
  id v90;
  double v91;
  double v92;
  id v93;
  double v94;
  double v95;
  double v96;
  double v97;
  double v98;
  double v99;
  double v100;
  double v101;
  double v102;
  id v103;
  double v104;
  double v105;
  uint64_t v106;
  id v107;
  double v108;
  double v109;
  double v110;
  id v111;
  id v112;
  id v113;
  id v114;
  uint64_t v115;
  char v116;
  CGFloat v117;
  double v118;
  id v119;
  double v120;
  CGFloat v121;
  double v122;
  CGFloat v123;
  double v124;
  CGFloat v125;
  double v126;
  CGFloat v127;
  double v128;
  id v129;
  double v130;
  double v131;
  double v132;
  double *v133;
  double v134;
  double v135;
  double v136;
  double v137;
  double v138;
  double v139;
  double v140;
  double v141;
  double v142;
  id v143;
  double v144;
  double v145;
  double v146;
  void *v147;
  id v148;
  double v149;
  double v150;
  double v151;
  double v152;
  double v153;
  double v154;
  double v155;
  double v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t (*v160)(uint64_t);
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  int v165;
  int v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  double v172;
  CGFloat v173;
  CGFloat v174;
  CGFloat v175;
  CGFloat v176;
  CGFloat v177;
  char v178[24];
  objc_super v179;
  _OWORD v180[2];
  char v181;
  _OWORD v182[2];
  char v183;
  CGRect v184;
  CGRect v185;
  CGRect v186;
  CGRect v187;
  CGRect v188;
  CGRect v189;
  CGRect v190;
  CGRect v191;
  CGRect v192;
  CGRect v193;
  CGRect v194;
  CGRect v195;
  CGRect v196;
  CGRect v197;
  CGRect v198;
  CGRect v199;
  CGRect v200;
  CGRect v201;
  CGRect v202;
  CGRect v203;
  CGRect v204;
  CGRect v205;
  CGRect v206;
  CGRect v207;
  CGRect v208;
  CGRect v209;
  CGRect v210;
  CGRect v211;

  v1 = v0;
  v2 = type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  v4 = (char *)&v167 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = type metadata accessor for UIView.Corner.Radius(0);
  v169 = *(_QWORD *)(v170 - 8);
  __chkstk_darwin();
  v168 = (char *)&v167 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (int *)type metadata accessor for SymbolButton.Metrics(0);
  __chkstk_darwin();
  v8 = (uint64_t *)((char *)&v167 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  v10 = (uint64_t *)((char *)&v167 - v9);
  __chkstk_darwin();
  v12 = (uint64_t *)((char *)&v167 - v11);
  v13 = (objc_class *)type metadata accessor for SymbolButton(0);
  v179.receiver = v0;
  v179.super_class = v13;
  objc_msgSendSuper2(&v179, "layoutSubviews");
  v14 = *(void **)&v0[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_materialView];
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_containerView], "bounds");
  objc_msgSend(v14, "setFrame:");
  v15 = objc_msgSend(v14, "contentView");
  objc_msgSend(v15, "bounds");
  v17 = v16;

  sub_100CCA5B0(v12);
  v18 = (double *)((char *)v12 + v6[12]);
  v20 = *v18;
  v19 = v18[1];
  v22 = v18[2];
  v21 = v18[3];
  v23 = objc_msgSend(v1, "effectiveUserInterfaceLayoutDirection");
  v24 = objc_msgSend(v1, "contentHorizontalAlignment");
  v171 = v2;
  v177 = v17;
  switch((unint64_t)v24)
  {
    case 1uLL:
      goto LABEL_7;
    case 2uLL:
      goto LABEL_8;
    case 4uLL:
      if (!v23)
        goto LABEL_7;
      if (v23 == (id)1)
LABEL_8:
        v21 = 0.0;
      break;
    case 5uLL:
      if (!v23)
        goto LABEL_8;
      if (v23 == (id)1)
LABEL_7:
        v19 = 0.0;
      break;
    default:
      break;
  }
  v25 = objc_msgSend(v1, "contentVerticalAlignment");
  if (v25 == (id)2)
    v26 = 0.0;
  else
    v26 = v22;
  if (v25 == (id)1)
    v20 = 0.0;
  else
    v22 = v26;
  objc_msgSend(v1, "effectiveUserInterfaceLayoutDirection", v26);
  v27 = CGRect.inset(by:for:)(v20, v19, v22, v21);
  v29 = v28;
  v175 = v30;
  v176 = v31;
  sub_10005B748((uint64_t)v12, type metadata accessor for SymbolButton.Metrics);
  sub_100CCA5B0(v10);
  v32 = *(double *)((char *)v10 + v6[8]);
  sub_10005B748((uint64_t)v10, type metadata accessor for SymbolButton.Metrics);
  v33 = sub_100CC9790();
  sub_100CCA5B0(v8);
  v34 = (double *)((char *)v8 + v6[11]);
  v35 = *v34;
  v36 = v34[1];
  v37 = *((unsigned __int8 *)v34 + 16);
  sub_10005B748((uint64_t)v8, type metadata accessor for SymbolButton.Metrics);
  if (v37)
    v38 = 0.0;
  else
    v38 = v36;
  if (v37)
    v39 = 0.0;
  else
    v39 = v35;
  objc_msgSend(v33, "sizeThatFits:", v39, v38);
  v41 = v40;
  v43 = v42;

  v44 = (uint64_t)&v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration];
  swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration], v178, 0, 0);
  if (!*(_QWORD *)(v44 + 128) || (*(_BYTE *)(v44 + 184) & 1) != 0)
  {
    v50 = sub_100CC98F4();
    objc_msgSend(v50, "frame");
    v52 = v54;
    v173 = v55;
  }
  else
  {
    v184.origin.x = v27;
    v184.origin.y = v29;
    v45 = v175;
    v184.size.width = v175;
    v46 = v176;
    v184.size.height = v176;
    Width = CGRectGetWidth(v184);
    v185.origin.x = 0.0;
    v185.origin.y = 0.0;
    v185.size.width = v41;
    v185.size.height = v43;
    v48 = Width - (v32 + CGRectGetWidth(v185));
    v186.origin.x = v27;
    v186.origin.y = v29;
    v186.size.width = v45;
    v186.size.height = v46;
    Height = CGRectGetHeight(v186);
    v50 = sub_100CC98F4();
    objc_msgSend(v50, "sizeThatFits:", v48, Height);
    v52 = v51;
    v173 = v53;
  }

  v56 = &selRef_referralObject;
  v57 = &selRef_originalSize;
  v172 = v32;
  v174 = v52;
  if (!*(_QWORD *)(v44 + 8))
  {
    v59 = 0.0;
    v58 = 0.0;
    if (!*(_QWORD *)(v44 + 128))
      goto LABEL_34;
    goto LABEL_31;
  }
  v187.origin.x = 0.0;
  v187.origin.y = 0.0;
  v187.size.width = v41;
  v187.size.height = v43;
  v58 = CGRectGetWidth(v187) + 0.0;
  v188.origin.x = 0.0;
  v188.origin.y = 0.0;
  v188.size.height = 0.0;
  v188.size.width = v58;
  v59 = CGRectGetHeight(v188);
  v189.origin.x = 0.0;
  v189.origin.y = 0.0;
  v189.size.width = v41;
  v189.size.height = v43;
  v60 = CGRectGetHeight(v189);
  if (v59 <= v60)
    v59 = v60;
  if (*(_QWORD *)(v44 + 128))
  {
LABEL_31:
    if ((*(_BYTE *)(v44 + 184) & 1) == 0)
    {
      v190.origin.x = 0.0;
      v190.origin.y = 0.0;
      v61 = v174;
      v190.size.width = v174;
      v62 = v173;
      v190.size.height = v173;
      v58 = v58 + CGRectGetWidth(v190);
      v191.origin.x = 0.0;
      v191.origin.y = 0.0;
      v191.size.width = v58;
      v191.size.height = v59;
      v59 = CGRectGetHeight(v191);
      v192.origin.x = 0.0;
      v192.origin.y = 0.0;
      v192.size.width = v61;
      v192.size.height = v62;
      v63 = CGRectGetHeight(v192);
      if (v59 <= v63)
        v59 = v63;
    }
  }
LABEL_34:
  v64 = *(_QWORD *)(v44 + 8);
  v177 = v43;
  if (v64 && *(_QWORD *)(v44 + 128))
  {
    v65 = -0.0;
    if (!*(_BYTE *)(v44 + 184))
      v65 = v172;
    v58 = v58 + v65;
  }
  v66 = (unint64_t)objc_msgSend(v1, "contentHorizontalAlignment");
  MinY = 0.0;
  MinX = 0.0;
  if (v66 <= 5)
  {
    if (((1 << v66) & 9) != 0)
    {
      v193.origin.x = v27;
      v193.origin.y = v29;
      v193.size.width = v175;
      v193.size.height = v176;
      MidX = CGRectGetMidX(v193);
      v194.origin.x = 0.0;
      v194.origin.y = 0.0;
      v194.size.width = v58;
      v194.size.height = v59;
      v74 = MidX + CGRectGetWidth(v194) * -0.5;
      v75 = objc_msgSend(v1, "traitCollection");
      objc_msgSend(v75, "displayScale");
      v76 = v41;
      v78 = v77;

      v79 = v78;
      v41 = v76;
      MinX = CGFloat.roundValue(scale:)(v79, v74);
    }
    else
    {
      v69 = v27;
      v70 = v29;
      v71 = v175;
      v72 = v176;
      if (((1 << v66) & 0x12) != 0)
      {
        MinX = CGRectGetMinX(*(CGRect *)&v69);
      }
      else
      {
        MaxX = CGRectGetMaxX(*(CGRect *)&v69);
        v195.origin.x = 0.0;
        v195.origin.y = 0.0;
        v195.size.width = v58;
        v195.size.height = v59;
        MinX = MaxX - CGRectGetWidth(v195);
      }
    }
  }
  switch((unint64_t)objc_msgSend(v1, "contentVerticalAlignment"))
  {
    case 0uLL:
      v196.origin.x = v27;
      v196.origin.y = v29;
      v196.size.width = v175;
      v196.size.height = v176;
      MidY = CGRectGetMidY(v196);
      v197.origin.y = 0.0;
      v197.origin.x = MinX;
      v197.size.width = v58;
      v197.size.height = v59;
      v82 = MidY + CGRectGetHeight(v197) * -0.5;
      v83 = objc_msgSend(v1, "traitCollection");
      objc_msgSend(v83, "displayScale");
      v85 = v84;

      MinY = CGFloat.roundValue(scale:)(v85, v82);
      break;
    case 1uLL:
      v198.origin.x = v27;
      v198.origin.y = v29;
      v198.size.width = v175;
      v198.size.height = v176;
      MinY = CGRectGetMinY(v198);
      break;
    case 2uLL:
      v199.origin.x = v27;
      v199.origin.y = v29;
      v199.size.width = v175;
      v199.size.height = v176;
      MaxY = CGRectGetMaxY(v199);
      v200.origin.y = 0.0;
      v200.origin.x = MinX;
      v200.size.width = v58;
      v200.size.height = v59;
      MinY = MaxY - CGRectGetHeight(v200);
      break;
    case 3uLL:
      v201.origin.x = v27;
      v201.origin.y = v29;
      v87 = v175;
      v201.size.width = v175;
      v88 = v176;
      v201.size.height = v176;
      MinY = CGRectGetMinY(v201);
      v202.origin.x = v27;
      v202.origin.y = v29;
      v202.size.width = v87;
      v202.size.height = v88;
      v59 = CGRectGetHeight(v202);
      break;
    default:
      break;
  }
  v89 = MinX;
  if (*(_QWORD *)(v44 + 8))
  {
    v203.origin.x = MinX;
    v203.origin.y = MinY;
    v203.size.width = v41;
    v203.size.height = v177;
    v89 = v172 + CGRectGetMaxX(v203);
  }
  v90 = objc_msgSend(v1, "contentVerticalAlignment");
  if (v90 == (id)3)
  {
    v208.origin.x = MinX;
    v208.origin.y = MinY;
    v208.size.width = v58;
    v208.size.height = v59;
    v177 = CGRectGetHeight(v208);
    v209.origin.x = MinX;
    v209.origin.y = MinY;
    v209.size.width = v58;
    v209.size.height = v59;
    v101 = CGRectGetHeight(v209);
    v98 = MinY;
    v106 = v171;
    v100 = v174;
  }
  else if (v90)
  {
    v98 = MinY;
    v106 = v171;
    v100 = v174;
    v101 = v173;
  }
  else
  {
    v204.origin.x = MinX;
    v204.origin.y = MinY;
    v204.size.width = v58;
    v204.size.height = v59;
    v91 = CGRectGetMidY(v204);
    v205.origin.x = MinX;
    v205.origin.y = MinY;
    v205.size.width = v41;
    v205.size.height = v177;
    v92 = v91 - CGRectGetHeight(v205) * 0.5;
    v93 = objc_msgSend(v1, "traitCollection");
    objc_msgSend(v93, "displayScale");
    v94 = v41;
    v96 = v95;

    v97 = v96;
    v41 = v94;
    v98 = CGFloat.roundValue(scale:)(v97, v92);
    v206.origin.x = MinX;
    v206.origin.y = MinY;
    v206.size.width = v58;
    v206.size.height = v59;
    v99 = CGRectGetMidY(v206);
    v207.origin.x = v89;
    v207.origin.y = MinY;
    v100 = v174;
    v207.size.width = v174;
    v101 = v173;
    v207.size.height = v173;
    v102 = v99 - CGRectGetHeight(v207) * 0.5;
    v57 = &selRef_originalSize;
    v103 = objc_msgSend(v1, "traitCollection");
    objc_msgSend(v103, "displayScale");
    v105 = v104;

    MinY = CGFloat.roundValue(scale:)(v105, v102);
    v106 = v171;
  }
  v107 = sub_100CC98F4();
  if (objc_msgSend(v1, v57[330]) == (id)4 || objc_msgSend(v1, v57[330]) == (id)5)
  {
    memset(v182, 0, sizeof(v182));
    v183 = 1;
    v89 = CGRect.applyingLayoutDirection(in:bounds:)(v1, v182, v89, MinY, v100, v101);
    MinY = v108;
    v100 = v109;
    v101 = v110;
  }
  objc_msgSend(v107, "setFrame:", v89, MinY, v100, v101);

  if (*(_QWORD *)(v44 + 128) && (*(_BYTE *)(v44 + 184) & 1) == 0)
  {
    v111 = sub_100CC9790();
    v112 = objc_msgSend(v111, "image");

    if (v112)
    {
      sub_100CCA5B0(v10);
      v113 = *(id *)((char *)v10 + v6[7]);
      sub_10005B748((uint64_t)v10, type metadata accessor for SymbolButton.Metrics);
      v114 = objc_msgSend(v112, "imageByApplyingSymbolConfiguration:", v113);

      if (v114)
      {
        *(double *)&v115 = COERCE_DOUBLE(UIImage.baselineOffsetFromBottom.getter());
        v56 = &selRef_referralObject;
        if ((v116 & 1) != 0)
        {

        }
        else
        {
          v117 = v41;
          v118 = *(double *)&v115;
          v119 = sub_100CC98F4();
          objc_msgSend(v119, "frame");
          v121 = v120;
          v123 = v122;
          v125 = v124;
          v127 = v126;

          v210.origin.x = v121;
          v210.origin.y = v123;
          v210.size.width = v125;
          v210.size.height = v127;
          v128 = CGRectGetMinY(v210);
          v129 = sub_100CC98F4();
          objc_msgSend(v129, "_firstLineBaseline");
          v131 = v130;

          v211.origin.x = MinX;
          v211.origin.y = v98;
          v211.size.width = v117;
          v211.size.height = v177;
          v132 = CGRectGetHeight(v211);

          v98 = v128 + v131 - v132 + v118;
          v41 = v117;
        }
      }
      else
      {
        v56 = &selRef_referralObject;
      }
      v57 = &selRef_originalSize;
    }
    else
    {
      v56 = &selRef_referralObject;
    }
  }
  sub_100CCA5B0(v10);
  v133 = (double *)((char *)v10 + v6[9]);
  v134 = *v133;
  v135 = v133[1];
  sub_10005B748((uint64_t)v10, type metadata accessor for SymbolButton.Metrics);
  v136 = CGRect.offset(by:)(v134, v135, MinX, v98, v41, v177);
  v138 = v137;
  v140 = v139;
  v142 = v141;
  v143 = sub_100CC9790();
  if (objc_msgSend(v1, v57[330]) == (id)4 || objc_msgSend(v1, v57[330]) == (id)5)
  {
    memset(v180, 0, sizeof(v180));
    v181 = 1;
    v136 = CGRect.applyingLayoutDirection(in:bounds:)(v1, v180, v136, v138, v140, v142);
    v138 = v144;
    v140 = v145;
    v142 = v146;
  }
  objc_msgSend(v143, v56[160], v136, v138, v140, v142);

  sub_100CC99F0();
  sub_100CC9BA8();
  v147 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_backgroundView];
  v148 = objc_msgSend(v14, "contentView");
  objc_msgSend(v148, "bounds");
  v150 = v149;
  v152 = v151;
  v154 = v153;
  v156 = v155;

  objc_msgSend(v147, v56[160], v150, v152, v154, v156);
  sub_10005B704(v44, (uint64_t)v4, type metadata accessor for SymbolButton.Configuration);
  v157 = &v4[*(int *)(v106 + 36)];
  v158 = type metadata accessor for UIView.Corner(0);
  v159 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v158 - 8) + 48))(v157, 1, v158);
  if ((_DWORD)v159)
  {
    v160 = type metadata accessor for SymbolButton.Configuration;
    v161 = (uint64_t)v4;
  }
  else
  {
    v162 = v168;
    UIView.Corner.radius.getter(v159);
    sub_10005B748((uint64_t)v4, type metadata accessor for SymbolButton.Configuration);
    v163 = v169;
    v164 = v170;
    v165 = (*(uint64_t (**)(char *, uint64_t))(v169 + 88))(v162, v170);
    v166 = enum case for UIView.Corner.Radius.rounded(_:);
    (*(void (**)(char *, uint64_t))(v163 + 8))(v162, v164);
    if (v165 != v166)
      return;
    sub_100CCA5B0(v10);
    sub_100CCB678((uint64_t)v10);
    v160 = type metadata accessor for SymbolButton.Metrics;
    v161 = (uint64_t)v10;
  }
  sub_10005B748(v161, v160);
}

Swift::Void __swiftcall SymbolButton.traitCollectionDidChange(_:)(UITraitCollection_optional a1)
{
  char *v1;
  Class isa;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  objc_class *v13;
  uint64_t v14;
  id v15;
  _BYTE v17[24];
  objc_super v18;

  isa = a1.value.super.isa;
  type metadata accessor for SymbolButton.Metrics(0);
  __chkstk_darwin();
  v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for SymbolButton.Configuration(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin();
  v10 = &v17[-v9 - 8];
  sub_100007E8C(&qword_1011E5C80);
  __chkstk_darwin();
  v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = (objc_class *)type metadata accessor for SymbolButton(0);
  v18.receiver = v1;
  v18.super_class = v13;
  objc_msgSendSuper2(&v18, "traitCollectionDidChange:", isa);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v12, 1, 1, v5);
  SymbolButton.updateConfigurationIfNeeded(_:animation:)((uint64_t)v12, 0, 0, 0, 1);
  sub_10004FF60((uint64_t)v12, &qword_1011E5C80);
  v14 = (uint64_t)&v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration];
  swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration], v17, 0, 0);
  sub_10005B704(v14, (uint64_t)v10, type metadata accessor for SymbolButton.Configuration);
  v15 = objc_msgSend(v1, "traitCollection");
  sub_100CCA5B0(v4);
  sub_10005B748((uint64_t)v4, type metadata accessor for SymbolButton.Metrics);
  sub_10005B704((uint64_t)v10, (uint64_t)v8, type metadata accessor for SymbolButton.Configuration);
  sub_100CC9CF0((uint64_t)v8, v15, v4);
  sub_10005B748((uint64_t)v10, type metadata accessor for SymbolButton.Configuration);
  sub_100CCA7BC((uint64_t)v4);
}

double SymbolButton.intrinsicContentSize.getter()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  double *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double *v16;
  double v17;
  double v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  double *v23;
  double v24;
  int v25;
  id v26;
  double v27;
  double v28;
  double v29;
  double v30;
  id v31;
  double v32;
  double v33;
  double v34;
  void *v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  char v43[24];

  v1 = (int *)type metadata accessor for SymbolButton.Metrics(0);
  __chkstk_darwin();
  v3 = &v43[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin();
  v5 = &v43[-v4 - 8];
  __chkstk_darwin();
  v7 = &v43[-v6 - 8];
  __chkstk_darwin();
  v9 = &v43[-v8 - 8];
  sub_100CCA5B0(&v43[-v8 - 8]);
  v10 = (double *)&v9[v1[12]];
  v11 = *v10;
  v12 = v10[1];
  v13 = v10[2];
  v14 = v10[3];
  sub_10005B748((uint64_t)v9, type metadata accessor for SymbolButton.Metrics);
  v15 = NSDirectionalEdgeInsets.horizontal.getter(v11, v12, v13, v14);
  sub_100CCA5B0(v9);
  v16 = (double *)&v9[v1[12]];
  v17 = *v16;
  v18 = v16[1];
  v19 = v16[2];
  v20 = v16[3];
  v21 = sub_10005B748((uint64_t)v9, type metadata accessor for SymbolButton.Metrics);
  NSDirectionalEdgeInsets.vertical.getter(v21, v17, v18, v19, v20);
  v22 = v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration;
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration, v43, 0, 0);
  if (!*(_QWORD *)(v22 + 8))
  {
    v30 = 0.0;
    if (!*(_QWORD *)(v22 + 128))
      goto LABEL_12;
    goto LABEL_10;
  }
  sub_100CCA5B0(v7);
  v23 = (double *)&v7[v1[11]];
  v24 = *v23;
  v25 = *((unsigned __int8 *)v23 + 16);
  sub_10005B748((uint64_t)v7, type metadata accessor for SymbolButton.Metrics);
  v26 = sub_100CC9790();
  objc_msgSend(v26, "intrinsicContentSize");
  v28 = v27;

  if (v24 >= v28)
    v29 = v28;
  else
    v29 = v24;
  if (v25)
    v29 = v28;
  v30 = v29 + 0.0;
  if (*(_QWORD *)(v22 + 128))
  {
LABEL_10:
    if ((*(_BYTE *)(v22 + 184) & 1) == 0)
    {
      v31 = sub_100CC98F4();
      objc_msgSend(v31, "intrinsicContentSize");
      v33 = v32;

      v30 = v30 + v33;
    }
  }
LABEL_12:
  if (*(_QWORD *)(v22 + 8) && *(_QWORD *)(v22 + 128) && (*(_BYTE *)(v22 + 184) & 1) == 0)
  {
    sub_100CCA5B0(v9);
    v34 = *(double *)&v9[v1[8]];
    sub_10005B748((uint64_t)v9, type metadata accessor for SymbolButton.Metrics);
    v30 = v30 + v34;
  }
  v35 = *(void **)(v22 + *(int *)(type metadata accessor for SymbolButton.Configuration(0) + 40));
  if (v35)
  {
    objc_msgSend(v35, "intrinsicContentSize");
    if (v36 > v30)
      v30 = v36;
  }
  v37 = v15 + 0.0;
  sub_100CCA5B0(v5);
  v38 = *(double *)&v5[v1[10]];
  sub_10005B748((uint64_t)v5, type metadata accessor for SymbolButton.Metrics);
  if (v30 > v38)
    v39 = v30;
  else
    v39 = v38;
  v40 = v37 + v39;
  sub_100CCA5B0(v3);
  sub_10005B748((uint64_t)v3, type metadata accessor for SymbolButton.Metrics);
  return v40;
}

Swift::Void __swiftcall SymbolButton.tintColorDidChange()()
{
  char *v0;
  uint64_t v1;
  char *v2;
  objc_class *v3;
  uint64_t v4;
  _BYTE v6[24];
  objc_super v7;

  type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  v2 = &v6[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v3 = (objc_class *)type metadata accessor for SymbolButton(0);
  v7.receiver = v0;
  v7.super_class = v3;
  objc_msgSendSuper2(&v7, "tintColorDidChange");
  v4 = (uint64_t)&v0[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration];
  swift_beginAccess(&v0[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration], v6, 0, 0);
  sub_10005B704(v4, (uint64_t)v2, type metadata accessor for SymbolButton.Configuration);
  sub_100CCA988((uint64_t)v2);
  sub_10005B748((uint64_t)v2, type metadata accessor for SymbolButton.Configuration);
}

id SymbolButton.sizeThatFits(_:)()
{
  void *v0;

  return objc_msgSend(v0, "intrinsicContentSize");
}

__int128 *SymbolButton.Configuration.hitRectMinimumSize.unsafeMutableAddressor()
{
  if (qword_1011DE2F0 != -1)
    swift_once(&qword_1011DE2F0, sub_100CCDB7C);
  return &static SymbolButton.Configuration.hitRectMinimumSize;
}

double SymbolButton.hitRectMinimumSize.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_hitRectMinimumSize;
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_hitRectMinimumSize, v3, 0, 0);
  return *(double *)v1;
}

void SymbolButton.hitRectMinimumSize.setter(double a1, double a2)
{
  uint64_t v2;
  double *v5;
  _BYTE v6[24];

  v5 = (double *)(v2 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_hitRectMinimumSize);
  swift_beginAccess(v2 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_hitRectMinimumSize, v6, 1, 0);
  *v5 = a1;
  v5[1] = a2;
}

uint64_t (*SymbolButton.hitRectMinimumSize.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_hitRectMinimumSize, a1, 33, 0);
  return j_j__swift_endAccess;
}

double SymbolButton.hitRect()()
{
  char *v0;
  double v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double *v9;
  double v10;
  double Width;
  double v12;
  _BYTE v14[24];
  objc_super v15;
  CGRect v16;
  CGRect v17;

  v15.receiver = v0;
  v15.super_class = (Class)type metadata accessor for SymbolButton(0);
  objc_msgSendSuper2(&v15, "hitRect");
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v9 = (double *)&v0[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_hitRectMinimumSize];
  swift_beginAccess(&v0[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_hitRectMinimumSize], v14, 0, 0);
  v10 = *v9;
  v16.origin.x = v2;
  v16.origin.y = v4;
  v16.size.width = v6;
  v16.size.height = v8;
  Width = CGRectGetWidth(v16);
  if (Width > v10)
    v10 = Width;
  v17.origin.x = v2;
  v17.origin.y = v4;
  v17.size.width = v6;
  v17.size.height = v8;
  CGRectGetHeight(v17);
  v12 = CGRect.center.getter(v2, v4, v6, v8) - v10 * 0.5;
  CGRect.center.getter(v2, v4, v6, v8);
  return v12;
}

void *SymbolButton.hitTest(_:with:)(uint64_t a1, double a2, double a3)
{
  void *v3;
  id v7;

  if ((UIViewIgnoresTouchEvents(v3) & 1) != 0 || !objc_msgSend(v3, "pointInside:withEvent:", a1, a2, a3))
    return 0;
  v7 = v3;
  return v3;
}

BOOL SymbolButton.point(inside:with:)(CGFloat a1, CGFloat a2)
{
  void *v2;
  CGPoint v6;
  CGRect v7;

  objc_msgSend(v2, "hitRect");
  v6.x = a1;
  v6.y = a2;
  return CGRectContainsPoint(v7, v6);
}

id SymbolButton.isHighlighted.getter()
{
  return sub_100CC9334((SEL *)&selRef_isHighlighted);
}

id SymbolButton.isHighlighted.setter(char a1)
{
  void *v1;
  objc_class *v3;
  char v4;
  objc_super v6;
  objc_super v7;

  v3 = (objc_class *)type metadata accessor for SymbolButton(0);
  v7.receiver = v1;
  v7.super_class = v3;
  v4 = objc_msgSendSuper2(&v7, "isHighlighted");
  v6.receiver = v1;
  v6.super_class = v3;
  objc_msgSendSuper2(&v6, "setHighlighted:", a1 & 1);
  return sub_100CC8E48(v4);
}

id sub_100CC8E48(char a1)
{
  void *v1;
  void *v2;
  int v3;
  double v4;
  uint64_t v5;
  char *v6;
  id result;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  void **aBlock;
  uint64_t v25;
  void *v26;
  void *v27;
  void *v28;
  uint64_t v29;

  v2 = v1;
  v3 = a1 & 1;
  sub_100007E8C(&qword_1011E5C80);
  *(_QWORD *)&v4 = __chkstk_darwin().n128_u64[0];
  v6 = (char *)&aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend(v2, "isHighlighted", v4);
  if ((_DWORD)result != v3)
  {
    v8 = objc_msgSend(v2, "traitCollection");
    v9 = objc_msgSend(v8, "userInterfaceIdiom");

    if (v9 == (id)6)
    {
      v10 = (void *)objc_opt_self(UIView);
      if (objc_msgSend(v10, "areAnimationsEnabled"))
      {
        if (objc_msgSend(v2, "isHighlighted"))
        {
          v11 = swift_allocObject(&unk_10110F4E0, 24, 7);
          *(_QWORD *)(v11 + 16) = v2;
          v28 = sub_100CD5B3C;
          v29 = v11;
          aBlock = _NSConcreteStackBlock;
          v25 = 1107296256;
          v26 = sub_1001DBD98;
          v27 = &unk_10110F4F8;
          v12 = _Block_copy(&aBlock);
          v13 = v2;
          swift_release();
          v14 = swift_allocObject(&unk_10110F530, 24, 7);
          *(_QWORD *)(v14 + 16) = v13;
          v28 = sub_100CD5B60;
          v29 = v14;
          aBlock = _NSConcreteStackBlock;
          v25 = 1107296256;
          v26 = sub_10012F6FC;
          v27 = &unk_10110F548;
          v15 = _Block_copy(&aBlock);
          v16 = v13;
          swift_release();
          objc_msgSend(v10, "animateWithDuration:delay:options:animations:completion:", 0x20000, v12, v15, 0.1, 0.0);
          _Block_release(v15);
          _Block_release(v12);
        }
        else
        {
          sub_10004A07C(0, (unint64_t *)&qword_1011E2F40, UIView_ptr);
          sub_10004A07C(0, &qword_1011E0390, UISpringTimingParameters_ptr);
          v17 = UISpringTimingParameters.init(dampingRatio:response:)(0.7, 0.4);
          v18 = swift_allocObject(&unk_10110F4B8, 24, 7);
          *(_QWORD *)(v18 + 16) = v2;
          v19 = v2;
          static UIView.animate(withSpringTimingParameters:delay:options:animations:completion:)(v17, 0, sub_100CD5B20, v18, 0, 0, 0.0);

          swift_release();
        }
      }
    }
    v20 = type metadata accessor for SymbolButton.Configuration(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v6, 1, 1, v20);
    v21 = objc_msgSend((id)objc_opt_self(UIView), "areAnimationsEnabled");
    if (v21)
      v22 = 0x3FD0000000000000;
    else
      v22 = 0;
    if (v21)
      v23 = 3075;
    else
      v23 = 0;
    SymbolButton.updateConfigurationIfNeeded(_:animation:)((uint64_t)v6, v22, 0, v23, v21 ^ 1);
    return (id)sub_10004FF60((uint64_t)v6, &qword_1011E5C80);
  }
  return result;
}

id sub_100CC916C(uint64_t a1, CGFloat a2)
{
  void *v2;
  CGAffineTransform v4;

  v2 = *(void **)(a1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_containerView);
  CGAffineTransformMakeScale(&v4, a2, a2);
  return objc_msgSend(v2, "setTransform:", &v4);
}

double sub_100CC91C8(int a1, id a2)
{
  double result;
  id v4;
  uint64_t v5;
  id v6;

  if (objc_msgSend(a2, "showsMenuAsPrimaryAction"))
  {
    if (objc_msgSend(a2, "isContextMenuInteractionEnabled"))
    {
      sub_10004A07C(0, (unint64_t *)&qword_1011E2F40, UIView_ptr);
      sub_10004A07C(0, &qword_1011E0390, UISpringTimingParameters_ptr);
      v4 = UISpringTimingParameters.init(dampingRatio:response:)(0.7, 0.4);
      v5 = swift_allocObject(&unk_10110F580, 24, 7);
      *(_QWORD *)(v5 + 16) = a2;
      v6 = a2;
      static UIView.animate(withSpringTimingParameters:delay:options:animations:completion:)(v4, 0, sub_100CD6A98, v5, 0, 0, 0.0);

      *(_QWORD *)&result = swift_release().n128_u64[0];
    }
  }
  return result;
}

id sub_100CC92E8(void *a1, uint64_t a2, uint64_t (*a3)(_QWORD), SEL *a4)
{
  objc_super v6;

  v6.receiver = a1;
  v6.super_class = (Class)a3(0);
  return objc_msgSendSuper2(&v6, *a4);
}

id SymbolButton.isSelected.getter()
{
  return sub_100CC9334((SEL *)&selRef_isSelected);
}

id sub_100CC9334(SEL *a1)
{
  void *v1;
  objc_super v4;

  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for SymbolButton(0);
  return objc_msgSendSuper2(&v4, *a1);
}

id SymbolButton.isSelected.setter(char a1)
{
  return sub_100CC9438(a1, (SEL *)&selRef_isSelected, (SEL *)&selRef_setSelected_);
}

id SymbolButton.isEnabled.getter()
{
  return sub_100CC9334((SEL *)&selRef_isEnabled);
}

id SymbolButton.isEnabled.setter(char a1)
{
  return sub_100CC9438(a1, (SEL *)&selRef_isEnabled, (SEL *)&selRef_setEnabled_);
}

id sub_100CC9438(char a1, SEL *a2, SEL *a3)
{
  void *v3;
  uint64_t v7;
  char *v8;
  objc_class *v9;
  unsigned int v10;
  id result;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  objc_super v16;
  objc_super v17;

  sub_100007E8C(&qword_1011E5C80);
  __chkstk_darwin();
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (objc_class *)type metadata accessor for SymbolButton(0);
  v17.receiver = v3;
  v17.super_class = v9;
  v10 = objc_msgSendSuper2(&v17, *a2);
  v16.receiver = v3;
  v16.super_class = v9;
  objc_msgSendSuper2(&v16, *a3, a1 & 1);
  result = objc_msgSend(v3, *a2);
  if (v10 != (_DWORD)result)
  {
    v12 = type metadata accessor for SymbolButton.Configuration(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 1, 1, v12);
    v13 = objc_msgSend((id)objc_opt_self(UIView), "areAnimationsEnabled");
    if (v13)
      v14 = 0x3FD0000000000000;
    else
      v14 = 0;
    if (v13)
      v15 = 3075;
    else
      v15 = 0;
    SymbolButton.updateConfigurationIfNeeded(_:animation:)((uint64_t)v8, v14, 0, v15, v13 ^ 1);
    return (id)sub_10004FF60((uint64_t)v8, &qword_1011E5C80);
  }
  return result;
}

Swift::Void __swiftcall SymbolButton.setEnabled(_:animated:)(Swift::Bool _, Swift::Bool animated)
{
  void *v2;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  char isEscapingClosureAtFileLocation;
  _QWORD v10[6];

  if (animated)
  {
    objc_msgSend(v2, "setEnabled:", _);
  }
  else
  {
    v4 = (void *)objc_opt_self(UIView);
    v5 = swift_allocObject(&unk_10110EC08, 25, 7);
    *(_QWORD *)(v5 + 16) = v2;
    *(_BYTE *)(v5 + 24) = _;
    v6 = swift_allocObject(&unk_10110EC30, 32, 7);
    *(_QWORD *)(v6 + 16) = sub_100CD1C0C;
    *(_QWORD *)(v6 + 24) = v5;
    v10[4] = sub_1001095DC;
    v10[5] = v6;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 1107296256;
    v10[2] = sub_10046D7B4;
    v10[3] = &unk_10110EC48;
    v7 = _Block_copy(v10);
    v8 = v2;
    swift_retain();
    objc_msgSend(v4, "performWithoutAnimation:", v7, swift_release().n128_f64[0]);
    _Block_release(v7);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v6, "", 121, 962, 78, 1);
    swift_release();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) != 0)
      __break(1u);
  }
}

uint64_t SymbolButton.buildMenu.getter()
{
  return sub_10004B034(&OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_buildMenu, (void (*)(_QWORD, _QWORD))sub_10004BA50);
}

uint64_t SymbolButton.buildMenu.setter(uint64_t a1, uint64_t a2)
{
  return sub_10004B0A8(a1, a2, &OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_buildMenu, sub_10004BA54);
}

uint64_t (*SymbolButton.buildMenu.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_buildMenu, a1, 33, 0);
  return j_j__swift_endAccess;
}

id sub_100CC9790()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  objc_class *v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  objc_super v16;
  _BYTE v17[24];
  _OWORD v18[7];
  uint64_t v19;

  v1 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___imageView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___imageView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___imageView);
  }
  else
  {
    v4 = v0;
    v5 = v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration;
    swift_beginAccess(v5, v17, 0, 0);
    v6 = *(_OWORD *)(v5 + 80);
    v18[4] = *(_OWORD *)(v5 + 64);
    v18[5] = v6;
    v18[6] = *(_OWORD *)(v5 + 96);
    v19 = *(_QWORD *)(v5 + 112);
    v7 = *(_OWORD *)(v5 + 16);
    v18[0] = *(_OWORD *)v5;
    v18[1] = v7;
    v8 = *(_OWORD *)(v5 + 48);
    v18[2] = *(_OWORD *)(v5 + 32);
    v18[3] = v8;
    v9 = (objc_class *)type metadata accessor for SymbolButton.ImageView();
    v10 = objc_allocWithZone(v9);
    sub_100CD5C00((uint64_t)v18);
    v16.receiver = v10;
    v16.super_class = v9;
    v11 = objc_msgSendSuper2(&v16, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v11, "setAdjustsImageSizeForAccessibilityContentSizeCategory:", 0);
    objc_msgSend(v11, "setContentMode:", 4);
    sub_100CCCAA8((uint64_t)v18);
    sub_100CD5C5C((uint64_t)v18);

    v12 = *(void **)(v4 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_backgroundView);
    if ((objc_msgSend(v11, "isDescendantOfView:", v12) & 1) == 0)
      objc_msgSend(v12, "addSubview:", v11);
    v13 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v11;
    v3 = v11;

    v2 = 0;
  }
  v14 = v2;
  return v3;
}

id sub_100CC98F4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  _BYTE v14[24];
  _OWORD v15[4];
  char v16;

  v1 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___titleLabel;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___titleLabel);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___titleLabel);
  }
  else
  {
    v4 = v0;
    v5 = v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration;
    swift_beginAccess(v5, v14, 0, 0);
    v6 = *(_OWORD *)(v5 + 136);
    v7 = *(_OWORD *)(v5 + 168);
    v15[2] = *(_OWORD *)(v5 + 152);
    v15[3] = v7;
    v16 = *(_BYTE *)(v5 + 184);
    v15[0] = *(_OWORD *)(v5 + 120);
    v15[1] = v6;
    v8 = objc_allocWithZone((Class)type metadata accessor for SymbolButton.Label());
    sub_100CD5B68((uint64_t)v15);
    v9 = sub_100CCCC88((uint64_t)v15);
    v10 = *(void **)(v4 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_backgroundView);
    if ((objc_msgSend(v9, "isDescendantOfView:", v10) & 1) == 0)
      objc_msgSend(v10, "addSubview:", v9);
    v11 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v9;
    v3 = v9;

    v2 = 0;
  }
  v12 = v2;
  return v3;
}

void sub_100CC99F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  uint64_t v16;
  char *v17;
  const UIEdgeInsets *v18;
  CGFloat *p_left;
  double v20;
  double top;
  _BYTE v23[24];

  v1 = type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin(v1);
  v3 = &v23[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_customView);
  if (v4)
  {
    v5 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_materialView);
    v6 = v4;
    v7 = objc_msgSend(v5, "contentView");
    objc_msgSend(v7, "bounds");
    v9 = v8;
    v11 = v10;
    v13 = v12;
    v15 = v14;

    v16 = v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration;
    swift_beginAccess(v16, v23, 0, 0);
    sub_10005B704(v16, (uint64_t)v3, type metadata accessor for SymbolButton.Configuration);
    v17 = &v3[*(int *)(v1 + 40)];
    if (*(_QWORD *)v17)
      v18 = (const UIEdgeInsets *)(v17 + 8);
    else
      v18 = &UIEdgeInsetsZero;
    if (*(_QWORD *)v17)
      p_left = (CGFloat *)(v17 + 16);
    else
      p_left = &UIEdgeInsetsZero.left;
    v20 = *p_left;
    top = v18->top;
    sub_10005B748((uint64_t)v3, type metadata accessor for SymbolButton.Configuration);
    objc_msgSend(v6, "setFrame:", sub_10004D6A0(v9, v11, v13, v15, top, v20));

  }
}

void sub_100CC9BA8()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  double v4;
  double MaxX;
  double v6;
  id v7;
  CGRect v8;
  CGRect v9;
  CGRect v10;

  v1 = *(void **)&v0[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView];
  if (v1)
  {
    v7 = v1;
    v2 = objc_msgSend(v0, "traitCollection");
    v3 = objc_msgSend(v2, "userInterfaceIdiom");

    if (v3 == (id)6)
      v4 = 12.0;
    else
      v4 = 8.0;
    objc_msgSend(v0, "bounds");
    MaxX = CGRectGetMaxX(v8);
    v9.origin.x = 0.0;
    v9.origin.y = 0.0;
    v9.size.width = v4;
    v9.size.height = v4;
    v6 = MaxX - CGRectGetWidth(v9) + 1.0;
    objc_msgSend(v0, "bounds");
    objc_msgSend(v7, "setFrame:", v6, CGRectGetMinY(v10) + -1.0, v4, v4);

  }
}

id sub_100CC9CB8()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIFontMetrics), "defaultMetrics");
  qword_1011E65E0 = (uint64_t)result;
  return result;
}

uint64_t sub_100CC9CF0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v12;
  int *v13;
  unsigned __int8 *v14;
  int v15;
  NSString *v16;
  UIContentSizeCategory v17;
  void *v18;
  NSString *v19;
  char v20;
  UIContentSizeCategory v21;
  void *v22;
  NSString *v23;
  char v24;
  void *v25;
  id v26;
  void *v27;
  uint64_t v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  void *v33;
  uint64_t v34;
  id v35;
  id v36;
  double v37;
  id v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  id v43;
  int v44;
  int v45;
  uint64_t v46;
  double v47;
  double v48;
  id v49;
  double v50;
  __n128 v51;
  double v52;
  char *v53;
  uint64_t v54;
  _OWORD *v55;
  _OWORD *v56;
  __int128 v57;
  uint64_t v58;
  __int128 v59;
  _OWORD *v60;
  uint64_t v61;
  _QWORD *v62;
  void *v63;
  double *v64;
  double v65;
  double v66;
  double v67;
  double v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  void *v79;
  double *v80;
  double v81;
  double v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  double v90;
  double v91;
  void *v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _OWORD *v98;
  uint64_t v99;
  id v100;
  uint64_t v102;
  _OWORD *v103;
  int v104;
  id v105;
  UIContentSizeCategory v106;
  uint64_t v107;
  uint64_t v108;
  id v109;

  v6 = sub_100007E8C(&qword_1011E6620);
  __chkstk_darwin(v6);
  v108 = (uint64_t)&v102 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (int *)type metadata accessor for SymbolButton.Metrics(0);
  v9 = (uint64_t)a3 + v8[5];
  v10 = type metadata accessor for UIView.Corner(0);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  v107 = v9;
  v11(v9, 1, 1, v10);
  v12 = (char *)a3 + v8[11];
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = 0;
  v103 = v12;
  v12[16] = 1;
  v13 = (int *)type metadata accessor for SymbolButton.Configuration(0);
  v14 = (unsigned __int8 *)(a1 + v13[16]);
  v15 = *v14;
  v109 = a2;
  v104 = v15;
  if (v15 == 1)
  {
    v16 = (NSString *)objc_msgSend(a2, "preferredContentSizeCategory");
    v17 = v16;
    v18 = (void *)*((_QWORD *)v14 + 1);
    if (v18)
    {
      v19 = v16;
      v17 = v18;
      v20 = static UIContentSizeCategory.>= infix(_:_:)();
      if ((v20 & 1) != 0)
        v21 = v19;
      else
        v21 = v17;
      if ((v20 & 1) == 0)
        v17 = v19;

    }
    v22 = (void *)*((_QWORD *)v14 + 2);
    if (v22)
    {
      v23 = v22;
      v17 = v17;
      v24 = static UIContentSizeCategory.< infix(_:_:)(v23, v17);

      if ((v24 & 1) != 0)
      {

        v17 = v23;
      }
      else
      {

      }
    }
  }
  else
  {
    v17 = UIContentSizeCategoryLarge;
  }
  *((_BYTE *)a3 + v8[13]) = v14[24];
  v25 = (void *)objc_opt_self(UITraitCollection);
  v106 = v17;
  v26 = objc_msgSend(v25, "traitCollectionWithPreferredContentSizeCategory:", v17);
  *a3 = v26;
  v27 = (void *)objc_opt_self(UIFontDescriptor);
  v28 = *(_QWORD *)(a1 + 136);
  v102 = (uint64_t)v26;
  v29 = v26;
  v30 = objc_msgSend(v27, "preferredFontDescriptorWithTextStyle:compatibleWithTraitCollection:", v28, v29);
  v31 = (void *)objc_opt_self(UIFont);
  v105 = v30;
  objc_msgSend(v30, "pointSize");
  v32 = objc_msgSend(v31, "systemFontOfSize:weight:");
  v33 = v32;
  *(_QWORD *)((char *)a3 + v8[6]) = v32;
  if ((*(_BYTE *)(a1 + 40) & 1) != 0)
  {
    v34 = *(_QWORD *)(a1 + 24);
    v35 = v32;
    v36 = objc_msgSend(v27, "preferredFontDescriptorWithTextStyle:compatibleWithTraitCollection:", v34, v29);
    objc_msgSend(v36, "pointSize");
    v38 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:weight:scale:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), v37);

  }
  else
  {
    v39 = *(double *)(a1 + 32);
    v40 = *(_QWORD *)(a1 + 48);
    v41 = *(_QWORD *)(a1 + 56);
    v42 = (void *)objc_opt_self(UIImageSymbolConfiguration);
    v43 = v33;
    v38 = objc_msgSend(v42, "configurationWithPointSize:weight:scale:", v40, v41, v39);
  }
  *(_QWORD *)((char *)a3 + v8[7]) = v38;
  *(_QWORD *)((char *)a3 + v8[8]) = *(_QWORD *)(a1 + v13[12]);
  v44 = *(unsigned __int8 *)(a1 + 80);
  v45 = v104;
  if (v44 == 255)
  {
    *(UIOffset *)((char *)a3 + v8[9]) = UIOffsetZero;
    if (v45)
      goto LABEL_27;
LABEL_25:

    v55 = (_OWORD *)(a1 + v13[15]);
    v56 = (_OWORD *)((char *)a3 + v8[12]);
    v57 = v55[1];
    *v56 = *v55;
    v56[1] = v57;
    *(_OWORD *)((char *)a3 + v8[10]) = *(_OWORD *)(a1 + v13[13]);
    v58 = a1 + v13[14];
    LOBYTE(v56) = *(_BYTE *)(v58 + 16);
    v59 = *(_OWORD *)v58;
    v60 = v103;
    *v103 = v59;
    *((_BYTE *)v60 + 16) = (_BYTE)v56;
    v61 = v108;
    sub_10004A160(a1 + v13[9], v108, &qword_1011E6620);
    goto LABEL_32;
  }
  v46 = *(_QWORD *)(a1 + 72);
  if ((v44 & 1) == 0)
  {
    v47 = *(double *)(a1 + 64);
    v48 = *(double *)(a1 + 72);
    v49 = objc_msgSend(v109, "displayScale");
    if (v50 > 1.0)
      v51.n128_f64[0] = v50;
    else
      v51.n128_f64[0] = 1.0;
    v52 = static UIOffset./ infix(_:_:)(v49, v47, v48, v51);
    v53 = (char *)a3 + v8[9];
    *(double *)v53 = v52;
    *((_QWORD *)v53 + 1) = v54;
    if (v45)
      goto LABEL_27;
    goto LABEL_25;
  }
  v62 = (_QWORD *)((char *)a3 + v8[9]);
  *v62 = *(_QWORD *)(a1 + 64);
  v62[1] = v46;
  if (!v45)
    goto LABEL_25;
LABEL_27:
  if (qword_1011DE2D0 != -1)
    swift_once(&qword_1011DE2D0, sub_100CC9CB8);
  v63 = (void *)qword_1011E65E0;
  v64 = (double *)(a1 + v13[15]);
  v65 = *v64;
  v66 = v64[1];
  v67 = v64[2];
  v68 = v64[3];
  v69 = v29;
  objc_msgSend(v63, "scaledValueForValue:compatibleWithTraitCollection:", v69, v65);
  v71 = v70;
  objc_msgSend(v63, "scaledValueForValue:compatibleWithTraitCollection:", v69, v66);
  v73 = v72;
  objc_msgSend(v63, "scaledValueForValue:compatibleWithTraitCollection:", v69, v67);
  v75 = v74;
  objc_msgSend(v63, "scaledValueForValue:compatibleWithTraitCollection:", v69, v68);
  v77 = v76;

  v78 = (_QWORD *)((char *)a3 + v8[12]);
  *v78 = v71;
  v78[1] = v73;
  v78[2] = v75;
  v78[3] = v77;
  v79 = (void *)qword_1011E65E0;
  v80 = (double *)(a1 + v13[13]);
  v81 = *v80;
  v82 = v80[1];
  v83 = v69;
  objc_msgSend(v79, "scaledValueForValue:compatibleWithTraitCollection:", v83, v81);
  v85 = v84;
  objc_msgSend(v79, "scaledValueForValue:compatibleWithTraitCollection:", v83, v82);
  v87 = v86;

  v88 = (_QWORD *)((char *)a3 + v8[10]);
  *v88 = v85;
  v88[1] = v87;
  v89 = a1 + v13[14];
  if ((*(_BYTE *)(v89 + 16) & 1) == 0)
  {
    v91 = *(double *)v89;
    v90 = *(double *)(v89 + 8);
    v92 = (void *)qword_1011E65E0;
    v93 = v83;
    objc_msgSend(v92, "scaledValueForValue:compatibleWithTraitCollection:", v93, v91);
    v95 = v94;
    objc_msgSend(v92, "scaledValueForValue:compatibleWithTraitCollection:", v93, v90);
    v97 = v96;

    v98 = v103;
    *(_QWORD *)v103 = v95;
    *((_QWORD *)v98 + 1) = v97;
    *((_BYTE *)v98 + 16) = 0;
  }
  v99 = a1 + v13[9];
  v100 = v83;
  v61 = v108;
  sub_100CCA33C(v99, v102, v108);

LABEL_32:
  sub_10005B748(a1, type metadata accessor for SymbolButton.Configuration);
  return sub_1000A5508(v61, v107, &qword_1011E6620);
}

uint64_t sub_100CCA33C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  id v26[2];
  uint64_t v27;
  uint64_t v28;

  v27 = a2;
  v28 = a3;
  v4 = type metadata accessor for UIView.Corner.Radius(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)v26 - v9;
  v11 = sub_100007E8C(&qword_1011E6620);
  __chkstk_darwin(v11);
  v13 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for UIView.Corner(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A160(a1, (uint64_t)v13, &qword_1011E6620);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_10004FF60((uint64_t)v13, &qword_1011E6620);
  }
  else
  {
    v18 = (*(uint64_t (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
    UIView.Corner.radius.getter(v18);
    v19 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v10, v4);
    if ((_DWORD)v19 == enum case for UIView.Corner.Radius.value(_:))
    {
      v20 = v19;
      (*(void (**)(char *, uint64_t))(v5 + 96))(v10, v4);
      v21 = *(double *)v10;
      v22 = v10[8];
      v23 = v28;
      (*(void (**)(uint64_t, char *, uint64_t))(v15 + 16))(v28, v17, v14);
      objc_msgSend(v26[1], "scaledValueForValue:compatibleWithTraitCollection:", v27, v21);
      *(_QWORD *)v8 = v24;
      v8[8] = v22;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 104))(v8, v20, v4);
      UIView.Corner.radius.setter(v8);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 56))(v23, 0, 1, v14);
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  }
  return sub_10004A160(a1, v28, &qword_1011E6620);
}

uint64_t sub_100CCA5B0@<X0>(_QWORD *a1@<X8>)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v18[24];
  _BYTE v19[24];
  _BYTE v20[24];

  v3 = type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin(v3);
  v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = sub_100007E8C(&qword_1011E6AF0);
  v7 = __chkstk_darwin(v6);
  v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v7);
  v11 = &v18[-v10 - 8];
  v12 = (uint64_t)&v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___metrics];
  swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___metrics], v20, 0, 0);
  sub_10004A160(v12, (uint64_t)v11, &qword_1011E6AF0);
  v13 = type metadata accessor for SymbolButton.Metrics(0);
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1)
    return sub_10005B6C0((uint64_t)v11, (uint64_t)a1, type metadata accessor for SymbolButton.Metrics);
  sub_10004FF60((uint64_t)v11, &qword_1011E6AF0);
  v15 = (uint64_t)&v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration];
  swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration], v19, 0, 0);
  sub_10005B704(v15, (uint64_t)v5, type metadata accessor for SymbolButton.Configuration);
  sub_100CC9CF0((uint64_t)v5, objc_msgSend(v1, "traitCollection"), a1);
  sub_10005B704((uint64_t)a1, (uint64_t)v9, type metadata accessor for SymbolButton.Metrics);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  swift_beginAccess(v12, v18, 33, 0);
  sub_1000A5508((uint64_t)v9, v12, &qword_1011E6AF0);
  return swift_endAccess(v18);
}

uint64_t sub_100CCA7BC(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void **v10;
  uint64_t v11;
  void **v12;
  uint64_t v13;
  char v14;
  _BYTE v17[24];

  v3 = sub_100007E8C(&qword_1011E6AF0);
  __chkstk_darwin(v3);
  v5 = &v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = type metadata accessor for SymbolButton.Metrics(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (void **)&v17[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v8);
  v12 = (void **)&v17[-v11 - 8];
  sub_100CCA5B0(&v17[-v11 - 8]);
  sub_10005B704(a1, (uint64_t)v5, type metadata accessor for SymbolButton.Metrics);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  v13 = (uint64_t)&v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___metrics];
  swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___metrics], v17, 33, 0);
  sub_1000A5508((uint64_t)v5, v13, &qword_1011E6AF0);
  swift_endAccess(v17);
  sub_100CCA5B0(v10);
  v14 = sub_100CCF9F8(v10, v12);
  sub_10005B748((uint64_t)v10, type metadata accessor for SymbolButton.Metrics);
  if ((v14 & 1) == 0)
  {
    sub_100CCA5B0(v10);
    sub_100CCB528((uint64_t)v10);
    sub_10005B748((uint64_t)v10, type metadata accessor for SymbolButton.Metrics);
    objc_msgSend(v1, "invalidateIntrinsicContentSize");
    objc_msgSend(v1, "setNeedsLayout");
  }
  sub_10005B748(a1, type metadata accessor for SymbolButton.Metrics);
  return sub_10005B748((uint64_t)v12, type metadata accessor for SymbolButton.Metrics);
}

void sub_100CCA988(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  id v19;
  id v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  void *v32;
  double v33;
  void *v34;
  uint64_t v35;
  id v36;
  id v37;
  NSString v38;
  int *v39;
  id v40;
  id v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  id v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  NSString v49;
  uint64_t v50;
  void *v51;
  char **v52;
  uint64_t v53;
  char *v54;
  void *v55;
  void *v56;
  void *v57;
  id v58;
  char *v59;
  uint64_t v60;
  double v61;
  uint64_t v62;
  void *v63;
  id v64;
  id v65;
  char *v66;
  char *v67;
  char v68;
  char *v69;
  id v70;
  id v71;
  char *v72;
  void *v73;
  char *v74;
  char *v75;
  char *v76;
  void *v77;
  id v78;
  void *v79;
  char *v80;
  id v81;
  id v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  _BYTE v95[56];
  _OWORD v96[4];
  char v97;
  _OWORD v98[7];
  uint64_t v99;
  _BYTE v100[48];
  _BYTE v101[16];
  uint64_t v102;
  unint64_t v103;

  v3 = type metadata accessor for SymbolButton.Metrics(0);
  __chkstk_darwin(v3);
  v89 = (uint64_t *)((char *)&v86 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v90 = type metadata accessor for SymbolButton.Configuration(0);
  v5 = __chkstk_darwin(v90);
  v88 = (uint64_t)&v86 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v8 = (char *)&v86 - v7;
  if (qword_1011DDEE8 != -1)
    swift_once(&qword_1011DDEE8, sub_100BC047C);
  v9 = type metadata accessor for Logger(0);
  sub_100048B14(v9, (uint64_t)qword_10124F288);
  sub_10005B704(a1, (uint64_t)v8, type metadata accessor for SymbolButton.Configuration);
  v10 = v1;
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc(22, -1);
    v14 = (char *)swift_slowAlloc(64, -1);
    *(_QWORD *)&v98[0] = v14;
    *(_DWORD *)v13 = 136446466;
    v15 = &v10[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_debugLabel];
    swift_beginAccess(&v10[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_debugLabel], &v93, 0, 0);
    v16 = (char *)*((_QWORD *)v15 + 1);
    if (v16)
    {
      v17 = *(char **)v15;
      v18 = v16;
    }
    else
    {
      v91 = v10;
      v19 = objc_msgSend(v91, "description");
      v92 = v14;
      v20 = v19;
      v17 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
      v18 = v21;

      v14 = v92;
    }
    swift_bridgeObjectRetain();
    *(_QWORD *)(v13 + 4) = sub_100BBDE38(v17, v18, (uint64_t *)v98);
    swift_bridgeObjectRelease(v18);

    *(_WORD *)(v13 + 12) = 2082;
    v22 = (char *)SymbolButton.Configuration.description.getter();
    v24 = v23;
    *(_QWORD *)(v13 + 14) = sub_100BBDE38(v22, v23, (uint64_t *)v98);
    swift_bridgeObjectRelease(v24);
    sub_10005B748((uint64_t)v8, type metadata accessor for SymbolButton.Configuration);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "[%{public}s] Applying configuration=%{public}s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy(v14, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);
  }
  else
  {

    sub_10005B748((uint64_t)v8, type metadata accessor for SymbolButton.Configuration);
  }

  v25 = *(void **)&v10[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_materialView];
  sub_100065228(a1 + 224, (uint64_t)v100, &qword_1011E66A0);
  sub_100CCC1B8((uint64_t)v100);
  v87 = v25;
  v26 = objc_msgSend(v25, "contentView");
  v27 = *(_QWORD *)(a1 + 272);
  v28 = *(_QWORD *)(a1 + 280);
  v29 = *(void **)(a1 + 288);
  v30 = v29;
  UIView.border.setter(v27, v28, v29);

  v91 = *(char **)&v10[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_backgroundView];
  v92 = v10;
  v31 = *(_QWORD *)(a1 + 192);
  v32 = *(void **)(a1 + 200);
  if (v32 == (void *)1)
  {
    if (qword_1011DE2C8 != -1)
      swift_once(&qword_1011DE2C8, sub_100CC6F80);
    swift_beginAccess(&static SymbolButton.Background.clear, &v94, 0, 0);
    v33 = *(double *)&static SymbolButton.Background.clear;
    v34 = (void *)qword_101250118;
    v35 = qword_101250128;
    swift_bridgeObjectRetain();
    v36 = v34;
  }
  else
  {
    v33 = *(double *)(a1 + 192);
    v35 = *(_QWORD *)(a1 + 216);
    v34 = *(void **)(a1 + 200);
  }
  sub_100CD1BA4(v31, v32);
  v37 = objc_msgSend(v91, "layer");
  if (v35)
    v38 = String._bridgeToObjectiveC()();
  else
    v38 = 0;
  v39 = (int *)v90;
  objc_msgSend(v37, "setCompositingFilter:", v38);
  swift_unknownObjectRelease(v38);

  v40 = v34;
  sub_100CCC78C(v34, v33);

  swift_bridgeObjectRelease(v35);
  v41 = sub_100CC9790();
  v42 = *(_OWORD *)(a1 + 80);
  v98[4] = *(_OWORD *)(a1 + 64);
  v98[5] = v42;
  v98[6] = *(_OWORD *)(a1 + 96);
  v99 = *(_QWORD *)(a1 + 112);
  v43 = *(_OWORD *)(a1 + 16);
  v98[0] = *(_OWORD *)a1;
  v98[1] = v43;
  v44 = *(_OWORD *)(a1 + 48);
  v98[2] = *(_OWORD *)(a1 + 32);
  v98[3] = v44;
  sub_100CCCAA8((uint64_t)v98);

  v45 = sub_100CC98F4();
  v46 = *(_OWORD *)(a1 + 136);
  v47 = *(_OWORD *)(a1 + 168);
  v96[2] = *(_OWORD *)(a1 + 152);
  v96[3] = v47;
  v97 = *(_BYTE *)(a1 + 184);
  v96[0] = *(_OWORD *)(a1 + 120);
  v96[1] = v46;
  sub_100065228((uint64_t)v96, (uint64_t)v101, &qword_1011E66B0);
  sub_100CCCE08((uint64_t)v96);

  sub_100065228((uint64_t)v101, (uint64_t)&v102, &qword_1011E66B0);
  if (v103)
  {
    v48 = HIBYTE(v103) & 0xF;
    if ((v103 & 0x2000000000000000) == 0)
      v48 = v102 & 0xFFFFFFFFFFFFLL;
    if (v48)
    {
      v49 = String._bridgeToObjectiveC()();
      objc_msgSend(v92, "setAccessibilityLabel:", v49);

    }
  }
  v50 = a1 + v39[11];
  v51 = *(void **)(v50 + 16);
  v52 = &selRef_referralObject;
  if (v51 != (void *)1)
  {
    v59 = *(char **)v50;
    v60 = *(_QWORD *)(v50 + 8);
    v61 = *(double *)&v60;
    v62 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView;
    v54 = v92;
    v63 = *(void **)&v92[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView];
    v91 = v59;
    v86 = v60;
    if (v63)
    {
      v64 = v63;
      v65 = v51;
      v66 = (char *)v64;
      v67 = v66;
    }
    else
    {
      v70 = objc_allocWithZone((Class)type metadata accessor for SymbolButton.BadgeView());
      sub_100CD1BD8((uint64_t)v59, v60, v51);
      v71 = v51;
      v69 = sub_100CCCF90(v51, *(double *)&v59, *(double *)&v60);
      v66 = *(char **)&v54[v62];
      *(_QWORD *)&v54[v62] = v69;
      v72 = v69;
      if (!v69)
      {
        if (!v66)
        {
LABEL_36:

          v75 = *(char **)&v54[v62];
          if (v75)
          {
            v52 = &selRef_referralObject;
            if (v51)
            {
              v76 = v75;
              v77 = v51;
              v78 = v51;
            }
            else
            {
              v79 = (void *)objc_opt_self(UIColor);
              v80 = v75;
              v78 = objc_msgSend(v79, "tintColor");
              v77 = 0;
            }
            v81 = v77;
            objc_msgSend(v75, "setBackgroundColor:", v78);

            objc_msgSend(v75, "setAlpha:", v61);
            objc_msgSend(*(id *)&v75[OBJC_IVAR____TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A939BadgeView_punchOutView], "setAlpha:", v61);
            sub_100CCD460();
            sub_100974130((uint64_t)v91, v86, v51);

          }
          else
          {
            sub_100974130((uint64_t)v91, v86, v51);
            v52 = &selRef_referralObject;
          }
          goto LABEL_42;
        }
        v67 = 0;
LABEL_30:
        objc_msgSend(v66, "removeFromSuperview", v86);
        v69 = *(char **)&v54[v62];
        if (!v69)
          goto LABEL_35;
        goto LABEL_34;
      }
      v67 = v72;
      if (!v66)
      {
LABEL_34:
        v73 = *(void **)&v54[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_containerView];
        v74 = v69;
        objc_msgSend(v73, "insertSubview:aboveSubview:", v74, v87);
        sub_100CC9BA8();

        v39 = (int *)v90;
        goto LABEL_35;
      }
    }
    type metadata accessor for SymbolButton.BadgeView();
    v66 = v66;
    v67 = v67;
    v68 = static NSObject.== infix(_:_:)(v67, v66);

    if ((v68 & 1) != 0)
    {
LABEL_35:

      goto LABEL_36;
    }
    goto LABEL_30;
  }
  v53 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView;
  v54 = v92;
  v55 = *(void **)&v92[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView];
  *(_QWORD *)&v92[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView] = 0;
  if (v55)
  {
    objc_msgSend(v55, "removeFromSuperview");
    v56 = *(void **)&v54[v53];
    if (v56)
    {
      v57 = *(void **)&v54[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_containerView];
      v58 = v56;
      objc_msgSend(v57, "insertSubview:aboveSubview:", v58, v87);
      sub_100CC9BA8();

    }
  }
LABEL_42:
  sub_100065228(a1 + v39[10], (uint64_t)v95, &qword_1011E6698);
  sub_100CCB384((uint64_t)v95);
  objc_msgSend(v54, v52[83], *(double *)(a1 + v39[17]));
  objc_msgSend(v54, "setTintColor:", *(_QWORD *)(a1 + v39[18]));
  v82 = objc_msgSend(v54, "traitCollection");
  v83 = v89;
  sub_100CCA5B0(v89);
  sub_10005B748((uint64_t)v83, type metadata accessor for SymbolButton.Metrics);
  v84 = a1;
  v85 = v88;
  sub_10005B704(v84, v88, type metadata accessor for SymbolButton.Configuration);
  sub_100CC9CF0(v85, v82, v83);
  sub_100CCA7BC((uint64_t)v83);
  sub_100CCA5B0(v83);
  sub_100CCB678((uint64_t)v83);
  sub_10005B748((uint64_t)v83, type metadata accessor for SymbolButton.Metrics);
  sub_100CCB23C();
}

void sub_100CCB23C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  NSString v8;
  _BYTE v10[24];

  v1 = type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin(v1);
  v3 = &v10[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_materialView);
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_pendingAnimatedChangesCount))
  {
    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_materialView), "_setGroupName:", 0);
    return;
  }
  v5 = v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration;
  swift_beginAccess(v5, v10, 0, 0);
  sub_10005B704(v5, (uint64_t)v3, type metadata accessor for SymbolButton.Configuration);
  if (*((_QWORD *)v3 + 28) == 1)
  {
    sub_10005B748((uint64_t)v3, type metadata accessor for SymbolButton.Configuration);
LABEL_7:
    v8 = 0;
    goto LABEL_8;
  }
  v7 = *((_QWORD *)v3 + 33);
  swift_bridgeObjectRetain();
  sub_10005B748((uint64_t)v3, type metadata accessor for SymbolButton.Configuration);
  if (!v7)
    goto LABEL_7;
  v8 = String._bridgeToObjectiveC()();
  *(_QWORD *)&v6 = swift_bridgeObjectRelease(v7).n128_u64[0];
LABEL_8:
  objc_msgSend(v4, "_setGroupName:", v8, v6);

}

void sub_100CCB384(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  char v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  double v14;
  void *v15;
  uint64_t v16;
  _QWORD v17[7];
  _QWORD v18[7];
  id v19[7];
  id v20[7];

  v2 = v1;
  v4 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_customView;
  v5 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_customView);
  sub_100065228(a1, (uint64_t)v20, &qword_1011E6698);
  if (!v20[0])
  {
    if (!v5)
      goto LABEL_14;
LABEL_4:
    v10 = *(void **)(v2 + v4);
    if (!v10)
      goto LABEL_11;
LABEL_9:
    if (objc_msgSend(v10, "isDescendantOfView:", v2))
      objc_msgSend(*(id *)(v2 + v4), "removeFromSuperview");
    goto LABEL_11;
  }
  v6 = v20[0];
  v7 = v6;
  if (v5)
  {
    sub_10004A07C(0, (unint64_t *)&qword_1011E2F40, UIView_ptr);
    v8 = v5;
    v9 = static NSObject.== infix(_:_:)(v8, v7);

    if ((v9 & 1) != 0)
      goto LABEL_14;
    goto LABEL_4;
  }

  v10 = *(void **)(v1 + v4);
  if (v10)
    goto LABEL_9;
LABEL_11:
  sub_100065228(a1, (uint64_t)v19, &qword_1011E6698);
  v11 = v19[0];
  if (v19[0])
    v12 = v19[0];
  sub_100CD0A38(v11);

LABEL_14:
  v13 = *(void **)(v2 + v4);
  if (v13)
  {
    sub_100065228(a1, (uint64_t)v18, &qword_1011E6698);
    v14 = *(double *)&v18[5];
    if (!v18[0])
      v14 = 1.0;
    objc_msgSend(v13, "setAlpha:", v14);
    v15 = *(void **)(v2 + v4);
    if (v15)
    {
      sub_100065228(a1, (uint64_t)v17, &qword_1011E6698);
      if (v17[0])
        v16 = v17[6];
      else
        v16 = 0;
      objc_msgSend(v15, "setTintColor:", v16);
    }
  }
}

id sub_100CCB528(uint64_t a1)
{
  void *v1;
  int *v3;
  uint64_t v4;
  _QWORD *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  uint64_t v11;

  v3 = (int *)type metadata accessor for SymbolButton.Metrics(0);
  __chkstk_darwin(v3);
  v5 = (uint64_t *)((char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_100CC9790();
  sub_100CCA5B0(v5);
  v7 = *(id *)((char *)v5 + v3[7]);
  sub_10005B748((uint64_t)v5, type metadata accessor for SymbolButton.Metrics);
  objc_msgSend(v6, "setPreferredSymbolConfiguration:", v7);

  v8 = sub_100CC98F4();
  sub_100CCA5B0(v5);
  v9 = *(id *)((char *)v5 + v3[6]);
  sub_10005B748((uint64_t)v5, type metadata accessor for SymbolButton.Metrics);
  objc_msgSend(v8, "setFont:", v9);

  sub_100CCA5B0(v5);
  sub_100CCB678((uint64_t)v5);
  sub_10005B748((uint64_t)v5, type metadata accessor for SymbolButton.Metrics);
  objc_msgSend(v1, "setShowsLargeContentViewer:", *(unsigned __int8 *)(a1 + v3[13]));
  return objc_msgSend(v1, "setScalesLargeContentImage:", 1);
}

uint64_t sub_100CCB678(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  id v14;
  unsigned int v15;
  uint64_t v16;
  int v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t ObjCClassFromMetadata;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  char **v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char **v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  _BYTE v52[24];

  v2 = v1;
  v4 = sub_100007E8C(&qword_1011E6620);
  v5 = __chkstk_darwin(v4);
  v51 = (uint64_t)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v47 - v8;
  __chkstk_darwin(v7);
  v11 = (char *)&v47 - v10;
  v12 = *(void **)(v2 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_materialView);
  v13 = a1 + *(int *)(type metadata accessor for SymbolButton.Metrics(0) + 20);
  sub_10004A160(v13, (uint64_t)v11, &qword_1011E6620);
  UIView.corner.setter(v11);
  sub_10004A160(v13, (uint64_t)v11, &qword_1011E6620);
  UIView.corner.setter(v11);
  v14 = objc_msgSend(v12, "contentView");
  v15 = objc_msgSend(v14, "clipsToBounds");

  if (v15)
  {
    sub_10004A160(v13, (uint64_t)v9, &qword_1011E6620);
    v16 = type metadata accessor for UIView.Corner(0);
    v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v9, 1, v16);
    sub_10004FF60((uint64_t)v9, &qword_1011E6620);
    if (v17 != 1)
    {
      v18 = objc_msgSend(v12, "contentView");
      objc_msgSend(v18, "setClipsToBounds:", 0);

    }
  }
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_isClippingInvalidated) == 1)
  {
    v48 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_isClippingInvalidated;
    objc_msgSend(v12, "_setAllowsGroupFiltering:", 1);
    v19 = objc_msgSend(v12, "contentView");
    v20 = objc_msgSend(v19, "subviews");

    v21 = sub_10004A07C(0, (unint64_t *)&qword_1011E2F40, UIView_ptr);
    v22 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v20, v21);

    v49 = v2;
    if ((unint64_t)v22 >> 62)
      goto LABEL_20;
    v23 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v23; v23 = _CocoaArrayWrapper.endIndex.getter(v45))
    {
      type metadata accessor for SymbolButton.Label();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      v25 = v49 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration;
      v26 = v22 & 0xC000000000000001;
      swift_beginAccess(v49 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration, v52, 0, 0);
      v27 = 4;
      v28 = &selRef_handleVolumeDownButton;
      v50 = v22 & 0xC000000000000001;
      v29 = 0;
      if ((v22 & 0xC000000000000001) != 0)
      {
LABEL_8:
        v30 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v29, v22);
        goto LABEL_10;
      }
      while (1)
      {
        v30 = *(id *)(v22 + 8 * v27);
LABEL_10:
        v31 = v30;
        v32 = v29 + 1;
        if (__OFADD__(v29, 1))
          break;
        if (!objc_msgSend(v30, v28[144], ObjCClassFromMetadata))
        {
          v33 = type metadata accessor for SymbolButton.Configuration(0);
          v34 = *(unsigned __int8 *)(v25 + *(int *)(v33 + 76));
          if (v34 == 2)
          {
            v35 = v25 + *(int *)(v33 + 36);
            v36 = ObjCClassFromMetadata;
            v37 = v22;
            v38 = v23;
            v39 = v25;
            v40 = v28;
            v41 = v51;
            sub_10004A160(v35, v51, &qword_1011E6620);
            v42 = type metadata accessor for UIView.Corner(0);
            v43 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 48))(v41, 1, v42) != 1;
            v44 = v41;
            v28 = v40;
            v25 = v39;
            v23 = v38;
            v22 = v37;
            ObjCClassFromMetadata = v36;
            v26 = v50;
            sub_10004FF60(v44, &qword_1011E6620);
          }
          else
          {
            v43 = v34 & 1;
          }
          objc_msgSend(v31, "setClipsToBounds:", v43);
        }

        if (v32 == v23)
          goto LABEL_24;
        v29 = ++v27 - 4;
        if (v26)
          goto LABEL_8;
      }
      __break(1u);
LABEL_20:
      if (v22 < 0)
        v45 = v22;
      else
        v45 = v22 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
    }
LABEL_24:
    swift_bridgeObjectRelease_n(v22, 2);
    *(_BYTE *)(v49 + v48) = 0;
  }
  return sub_100CCBA88();
}

uint64_t sub_100CCBA88()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  double v29;
  char *v31;
  id v32;
  double v33;
  double v34;
  CACornerMask v35;
  char *v36;
  __C::UIRectCorner v37;
  uint64_t v38;
  void *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char **v43;
  void *v44;
  id v45;
  uint64_t v46;
  char *v47;
  __int128 v48;
  uint64_t v49;
  _QWORD v50[3];
  uint64_t v51;
  void *v52;
  _OWORD v53[2];
  uint64_t v54;

  v1 = v0;
  v2 = type metadata accessor for UIView.Corner.Radius(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SymbolButton.Configuration(0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v40 - v10;
  v12 = sub_100007E8C(&qword_1011E6B18);
  __chkstk_darwin(v12);
  v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = 0;
  memset(v53, 0, sizeof(v53));
  v15 = objc_msgSend(v0, "traitCollection");
  v16 = objc_msgSend(v15, "userInterfaceIdiom");

  if (v16 == (id)6)
  {
    v51 = type metadata accessor for UIHoverHighlightEffect(0);
    v52 = &protocol witness table for UIHoverHighlightEffect;
    sub_100049F68(v50);
    static UIHoverEffect<>.highlight.getter();
  }
  else
  {
    v51 = type metadata accessor for UIHoverLiftEffect(0);
    v52 = &protocol witness table for UIHoverLiftEffect;
    sub_100049F68(v50);
    static UIHoverEffect<>.lift.getter();
  }
  sub_10004FF60((uint64_t)v53, &qword_1011E6B20);
  sub_100065228((uint64_t)v50, (uint64_t)v53, &qword_1011E6B20);
  sub_10004A160((uint64_t)v53, (uint64_t)&v48, &qword_1011E6B20);
  if (v49)
  {
    v40 = v5;
    v41 = v3;
    v42 = v2;
    v47 = v14;
    sub_100064C48(&v48, (uint64_t)v50);
    v17 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_containerView];
    v18 = v51;
    v44 = v52;
    v45 = v17;
    v19 = sub_100007E68(v50, v51);
    v43 = &v40;
    __chkstk_darwin(v19);
    v21 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v22 + 16))(v21);
    v23 = (uint64_t)&v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration];
    swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration], &v48, 0, 0);
    sub_10005B704(v23, (uint64_t)v11, type metadata accessor for SymbolButton.Configuration);
    v46 = v6;
    v24 = &v11[*(int *)(v6 + 36)];
    v25 = type metadata accessor for UIView.Corner(0);
    v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48);
    v27 = v26(v24, 1, v25);
    if ((_DWORD)v27)
    {
      v28 = sub_10005B748((uint64_t)v11, type metadata accessor for SymbolButton.Configuration);
      v29 = static UIPointerShape.defaultCornerRadius.getter(v28);
    }
    else
    {
      v31 = v40;
      UIView.Corner.radius.getter(v27);
      sub_10005B748((uint64_t)v11, type metadata accessor for SymbolButton.Configuration);
      v32 = objc_msgSend(v1, "bounds");
      v29 = UIView.Corner.Radius.value(in:)(v32, v33, v34);
      (*(void (**)(char *, uint64_t))(v41 + 8))(v31, v42);
    }
    sub_10005B704(v23, (uint64_t)v9, type metadata accessor for SymbolButton.Configuration);
    if (v26(&v9[*(int *)(v46 + 36)], 1, v25))
      v35 = 0;
    else
      v35 = UIView.Corner.mask.getter();
    v36 = v47;
    sub_10004A07C(0, &qword_1011E6B28, UIHoverStyle_ptr);
    sub_10005B748((uint64_t)v9, type metadata accessor for SymbolButton.Configuration);
    v37.rawValue = UIRectCorner.init(_:)(v35).rawValue;
    static UIShape.rect(cornerRadius:cornerCurve:maskedCorners:)(2, v37.rawValue, v29);
    v38 = type metadata accessor for UIShape(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v36, 0, 1, v38);
    v39 = (void *)UIHoverStyle.init<A>(effect:shape:)(v21, v36, v18, v44);
    objc_msgSend(v45, "setHoverStyle:", v39);

    sub_10004FF60((uint64_t)v53, &qword_1011E6B20);
    return _s5Music18DragDropToPlaylistV6OriginVwxx_0(v50);
  }
  else
  {
    sub_10004FF60((uint64_t)&v48, &qword_1011E6B20);
    objc_msgSend(v1, "setHoverStyle:", 0);
    return sub_10004FF60((uint64_t)v53, &qword_1011E6B20);
  }
}

void SymbolButton.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer("MusicCoreUI.SymbolButton", 24, "init(frame:)", 12, 0);
  __break(1u);
}

id SymbolButton.__deallocating_deinit()
{
  return sub_10015C40C(type metadata accessor for SymbolButton);
}

void sub_100CCC1B8(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v4;
  void *v5;
  void *v6;
  Class v7;
  NSArray v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  Class isa;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  Class v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  char v30[8];
  void *v31;
  void *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  void *v36;
  unint64_t v37[6];

  v2 = v1;
  sub_100065228(a1, (uint64_t)v30, &qword_1011E66A0);
  v5 = v31;
  v4 = v32;
  objc_msgSend(v1, "setEffect:", 0);
  sub_100065228(a1, (uint64_t)v37, &qword_1011E66A0);
  v6 = (void *)v37[0];
  if (v37[0] >= 2)
  {
    v9 = sub_100007E8C(&qword_1011DF520);
    v10 = swift_allocObject(v9, 40, 7);
    *(_OWORD *)(v10 + 16) = xmmword_100EA7A90;
    *(_QWORD *)(v10 + 32) = v6;
    v35 = v10;
    specialized Array._endMutation()(v10);
    v11 = v35;
    sub_10004A07C(0, &qword_1011E6B30, UIVisualEffect_ptr);
    v12 = v6;
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v2, "setBackgroundEffects:", isa, swift_bridgeObjectRelease(v11).n128_f64[0]);

    if (!v5)
      goto LABEL_4;
    goto LABEL_8;
  }
  sub_10004A07C(0, &qword_1011E6B30, UIVisualEffect_ptr);
  v7 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v2, "setBackgroundEffects:", v7);

  sub_100065228(a1, (uint64_t)&v35, &qword_1011E66A0);
  if (v35 != 1)
  {
    v5 = v36;
    if (!v36)
    {
LABEL_4:
      sub_100065228(a1, (uint64_t)&v33, &qword_1011E66A0);
      if (v33 == 1)
        goto LABEL_6;
      v4 = v34;
      if (!v34)
        goto LABEL_6;
LABEL_11:
      v24 = sub_100007E8C(&qword_1011DF520);
      v25 = swift_allocObject(v24, 40, 7);
      *(_OWORD *)(v25 + 16) = xmmword_100EA7A90;
      *(_QWORD *)(v25 + 32) = v4;
      v29 = v25;
      specialized Array._endMutation()(v25);
      sub_10004A07C(0, &qword_1011E6B30, UIVisualEffect_ptr);
      v26 = v4;
      v8.super.isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v2, "setContentEffects:", v8.super.isa, swift_bridgeObjectRelease(v29).n128_f64[0]);

      goto LABEL_12;
    }
LABEL_8:
    v14 = v5;
    v15 = objc_msgSend(v2, "backgroundEffects");
    v16 = sub_10004A07C(0, &qword_1011E6B30, UIVisualEffect_ptr);
    v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v15, v16);

    v33 = v17;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v18);
    v20 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v19 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v20 >= v19 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v19 > 1, v20 + 1, 1);
    v21 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v20, v14);
    specialized Array._endMutation()(v21);
    v22 = v33;
    v23 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v2, "setBackgroundEffects:", v23, swift_bridgeObjectRelease(v22).n128_f64[0]);

    if (!v4)
      goto LABEL_6;
    goto LABEL_11;
  }
LABEL_6:
  sub_10004A07C(0, &qword_1011E6B30, UIVisualEffect_ptr);
  v8.super.isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v2, "setContentEffects:", v8.super.isa);
LABEL_12:

  v27 = objc_msgSend(v2, "contentView");
  v28 = objc_msgSend(v27, "layer");

  objc_msgSend(v28, "setAllowsGroupBlending:", 0);
}

id sub_100CCC598()
{
  return sub_10015C40C((uint64_t (*)(_QWORD))type metadata accessor for SymbolButton.MaterialView);
}

id sub_100CCC5A4(void *a1, double a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  char *v8;
  id v9;
  id v10;
  NSString v11;
  id v12;
  objc_super v14;

  v8 = &v4[OBJC_IVAR____TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A9314BackgroundView_configuration];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0x3FF0000000000000;
  v14.receiver = v4;
  v14.super_class = (Class)type metadata accessor for SymbolButton.BackgroundView();
  v9 = objc_msgSendSuper2(&v14, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v10 = objc_msgSend(v9, "layer");
  if (a4)
    v11 = String._bridgeToObjectiveC()();
  else
    v11 = 0;
  objc_msgSend(v10, "setCompositingFilter:", v11);
  swift_unknownObjectRelease(v11);

  v12 = a1;
  sub_100CCC78C(a1, a2);
  sub_100CCC86C();

  swift_bridgeObjectRelease(a4);
  return v9;
}

void sub_100CCC78C(void *a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  void *v7;
  double v8;
  id v9;
  id v10;
  char v11;
  id v12;
  id v13;

  v3 = v2;
  v6 = v3
     + OBJC_IVAR____TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A9314BackgroundView_configuration;
  v7 = *(void **)(v3
                + OBJC_IVAR____TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A9314BackgroundView_configuration);
  v8 = *(double *)(v3
                 + OBJC_IVAR____TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A9314BackgroundView_configuration
                 + 8);
  *(_QWORD *)v6 = a1;
  *(double *)(v6 + 8) = a2;
  v13 = v7;
  if (a1)
  {
    if (!v7)
      goto LABEL_8;
    sub_10004A07C(0, (unint64_t *)&qword_1011E6AE0, UIColor_ptr);
    v9 = v13;
    v10 = a1;
    v11 = static NSObject.== infix(_:_:)(v10, v9);

    if ((v11 & 1) == 0)
      goto LABEL_8;
  }
  else if (v7)
  {
    v12 = v7;
LABEL_8:
    sub_100CCC86C();
    goto LABEL_9;
  }
  if (v8 != a2)
    goto LABEL_8;
LABEL_9:

}

void sub_100CCC86C()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  _QWORD v11[5];
  uint64_t v12;

  v1 = &v0[OBJC_IVAR____TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A9314BackgroundView_configuration];
  v2 = *(void **)&v0[OBJC_IVAR____TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A9314BackgroundView_configuration];
  if (v2)
    v3 = *(id *)&v0[OBJC_IVAR____TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A9314BackgroundView_configuration];
  else
    v3 = objc_msgSend((id)objc_opt_self(UIColor), "tintColor");
  v4 = *((_QWORD *)v1 + 1);
  v5 = swift_allocObject(&unk_10110F418, 32, 7);
  *(_QWORD *)(v5 + 16) = v3;
  *(_QWORD *)(v5 + 24) = v4;
  v6 = objc_allocWithZone((Class)UIColor);
  v11[4] = sub_100CD5AEC;
  v12 = v5;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_100264780;
  v11[3] = &unk_10110F430;
  v7 = _Block_copy(v11);
  v8 = v2;
  v9 = v3;
  v10 = objc_msgSend(v6, "initWithDynamicProvider:", v7);
  _Block_release(v7);
  objc_msgSend(v0, "setBackgroundColor:", v10, swift_release(v12).n128_f64[0]);

}

id sub_100CCC9A8(uint64_t a1, id a2, double a3)
{
  id v4;
  double v5;
  id v6;

  v4 = objc_msgSend(a2, "resolvedColorWithTraitCollection:", a1);
  objc_msgSend(v4, "alphaComponent");
  v6 = objc_msgSend(v4, "colorWithAlphaComponent:", v5 * a3);

  return v6;
}

id sub_100CCCA34()
{
  return sub_10015C40C((uint64_t (*)(_QWORD))type metadata accessor for SymbolButton.BackgroundView);
}

id sub_100CCCAA8(uint64_t a1)
{
  void *v1;
  void *v2;
  id v4;
  id v5;
  NSString v6;
  id v7;
  _BYTE v9[16];
  _QWORD v10[2];

  v2 = v1;
  v4 = sub_100CC3E5C();
  objc_msgSend(v2, "setImage:", v4);

  v5 = objc_msgSend(v2, "layer");
  sub_100065228(a1 + 88, (uint64_t)v9, &qword_1011E66B0);
  sub_100065228((uint64_t)v9, (uint64_t)v10, &qword_1011E66B0);
  if (v10[1])
    v6 = String._bridgeToObjectiveC()();
  else
    v6 = 0;
  objc_msgSend(v5, "setCompositingFilter:", v6);

  v7 = objc_msgSend(v2, "layer", swift_unknownObjectRelease(v6).n128_f64[0]);
  objc_msgSend(v7, "setAllowsGroupOpacity:", 0);

  objc_msgSend(v2, "setTintColor:", *(_QWORD *)(a1 + 112));
  return objc_msgSend(v2, "setAlpha:", *(double *)(a1 + 104));
}

void sub_100CCCBF0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v11;

  v11 = a3;
  _swift_stdlib_reportUnimplementedInitializer(a4, a5, a6, a7, 0);
  __break(1u);
}

id sub_100CCCC7C()
{
  return sub_10015C40C((uint64_t (*)(_QWORD))type metadata accessor for SymbolButton.ImageView);
}

id sub_100CCCC88(uint64_t a1)
{
  void *v1;
  id v3;
  void *v4;
  id v5;
  id v6;
  objc_super v8;

  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for SymbolButton.Label();
  v3 = objc_msgSendSuper2(&v8, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v3, "setLineBreakMode:", 5);
  objc_msgSend(v3, "setNumberOfLines:", 1);
  v4 = (void *)objc_opt_self(UIColor);
  v5 = v3;
  v6 = objc_msgSend(v4, "clearColor");
  objc_msgSend(v5, "setBackgroundColor:", v6);

  objc_msgSend(v5, "setAdjustsFontForContentSizeCategory:", 0);
  objc_msgSend(v5, "setClipsToBounds:", 0);
  objc_msgSend(v5, "_setTextColorFollowsTintColor:", 1);
  sub_100CCCE08(a1);
  sub_100CD5BB4(a1);

  return v5;
}

id sub_100CCCE08(uint64_t a1)
{
  void *v1;
  NSString v3;
  id v4;
  NSString v5;
  id v6;
  double v7;
  _BYTE v9[16];
  _BYTE v10[16];
  _QWORD v11[2];
  _QWORD v12[2];

  sub_100065228(a1, (uint64_t)v10, &qword_1011E66B0);
  sub_100065228((uint64_t)v10, (uint64_t)v11, &qword_1011E66B0);
  if (v11[1])
    v3 = String._bridgeToObjectiveC()();
  else
    v3 = 0;
  objc_msgSend(v1, "setText:", v3);

  v4 = objc_msgSend(v1, "layer");
  sub_100065228(a1 + 32, (uint64_t)v9, &qword_1011E66B0);
  sub_100065228((uint64_t)v9, (uint64_t)v12, &qword_1011E66B0);
  if (v12[1])
    v5 = String._bridgeToObjectiveC()();
  else
    v5 = 0;
  objc_msgSend(v4, "setCompositingFilter:", v5);

  v6 = objc_msgSend(v1, "layer", swift_unknownObjectRelease(v5).n128_f64[0]);
  objc_msgSend(v6, "setAllowsGroupOpacity:", 0);

  objc_msgSend(v1, "setTintColor:", *(_QWORD *)(a1 + 56));
  v7 = 0.0;
  if ((*(_BYTE *)(a1 + 64) & 1) == 0)
    v7 = *(double *)(a1 + 48);
  return objc_msgSend(v1, "setAlpha:", v7);
}

id sub_100CCCF84()
{
  return sub_10015C40C((uint64_t (*)(_QWORD))type metadata accessor for SymbolButton.Label);
}

char *sub_100CCCF90(void *a1, double a2, double a3)
{
  char *v3;
  uint64_t v7;
  id v8;
  char *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  double *v14;
  id v15;
  char *v16;
  id v17;
  id v18;
  objc_super v20;

  v7 = OBJC_IVAR____TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A939BadgeView_punchOutView;
  v8 = objc_allocWithZone((Class)UIView);
  v9 = v3;
  v10 = objc_msgSend(v8, "init");
  v11 = (void *)objc_opt_self(UIColor);
  v12 = objc_msgSend(v11, "blackColor");
  objc_msgSend(v10, "setBackgroundColor:", v12);

  v13 = objc_msgSend(v10, "layer");
  objc_msgSend(v13, "setCompositingFilter:", kCAFilterDestOut);

  *(_QWORD *)&v3[v7] = v10;
  v14 = (double *)&v9[OBJC_IVAR____TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A939BadgeView_configuration];
  *v14 = a2;
  v14[1] = a3;
  *((_QWORD *)v14 + 2) = a1;
  v15 = a1;

  v20.receiver = v9;
  v20.super_class = (Class)type metadata accessor for SymbolButton.BadgeView();
  v16 = (char *)objc_msgSendSuper2(&v20, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v17 = v15;
  if (!a1)
    v17 = objc_msgSend(v11, "tintColor");
  v18 = v15;
  objc_msgSend(v16, "setBackgroundColor:", v17);

  objc_msgSend(v16, "setAlpha:", a3);
  objc_msgSend(*(id *)&v16[OBJC_IVAR____TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A939BadgeView_punchOutView], "setAlpha:", a3);
  sub_100CCD460();

  return v16;
}

void sub_100CCD460()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;

  v1 = v0;
  v2 = sub_100007E8C(&qword_1011E6620);
  __chkstk_darwin(v2);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(v1, "bounds");
  v5 = OBJC_IVAR____TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A939BadgeView_configuration;
  v6 = UIEdgeInsets.init(edges:inset:)(15, -*(double *)&v1[OBJC_IVAR____TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A939BadgeView_configuration]);
  v7 = CGSize.inset(by:)(v6);
  v9 = v8;
  objc_msgSend(v1, "frame");
  v11 = v10 - *(double *)&v1[v5];
  objc_msgSend(v1, "frame");
  v13 = v12 - *(double *)&v1[v5];
  v14 = *(void **)&v1[OBJC_IVAR____TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A939BadgeView_punchOutView];
  static UIView.Corner.rounded.getter(objc_msgSend(v14, "setFrame:", v11, v13, v7, v9));
  v15 = type metadata accessor for UIView.Corner(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v4, 0, 1, v15);
  UIView.corner.setter(v4);
  v16 = objc_msgSend(v1, "superview");
  objc_msgSend(v16, "insertSubview:belowSubview:", v14, v1);

}

id sub_100CCD5E4()
{
  return sub_10015C40C((uint64_t (*)(_QWORD))type metadata accessor for SymbolButton.BadgeView);
}

double sub_100CCD62C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  NSString *v6;
  id v7;
  id v8;
  const UIFontTextStyle *v9;
  UIFontTextStyle v10;
  uint64_t v11;
  NSString *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  double result;
  uint64_t v21;

  v0 = sub_100007E8C(&qword_1011E6620);
  __chkstk_darwin(v0);
  v2 = (char *)&v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for SymbolButton.Configuration(0);
  sub_10004FACC(v3, static SymbolButton.Configuration.contextualAction);
  v4 = sub_100048B14(v3, (uint64_t)static SymbolButton.Configuration.contextualAction);
  SymbolButton.Configuration.init()(v4);
  v5 = (void *)objc_opt_self(UITraitCollection);
  v6 = UIFontTextStyleSubheadline;
  v7 = objc_msgSend(v5, "currentTraitCollection");
  v8 = objc_msgSend(v7, "userInterfaceIdiom");

  v9 = &UIFontTextStyleTitle3;
  if (v8 != (id)6)
    v9 = &UIFontTextStyleCallout;
  v10 = *v9;
  if (v8 == (id)6)
    v11 = 5;
  else
    v11 = 6;
  v12 = v10;

  v13 = *(_QWORD *)(v4 + 8);
  v14 = *(void **)(v4 + 16);
  v15 = *(void **)(v4 + 24);
  v16 = *(_QWORD *)(v4 + 96);
  v17 = *(void **)(v4 + 112);
  *(_OWORD *)v4 = xmmword_100EE8B90;
  *(_QWORD *)(v4 + 16) = 0;
  *(_QWORD *)(v4 + 24) = v12;
  *(_QWORD *)(v4 + 32) = 0;
  *(_BYTE *)(v4 + 40) = 1;
  *(_QWORD *)(v4 + 48) = v11;
  *(_QWORD *)(v4 + 56) = 2;
  *(_QWORD *)(v4 + 64) = 0;
  *(_QWORD *)(v4 + 72) = 0;
  *(_BYTE *)(v4 + 80) = -1;
  *(_QWORD *)(v4 + 88) = 0;
  *(_QWORD *)(v4 + 96) = 0;
  *(_QWORD *)(v4 + 104) = 0x3FF0000000000000;
  *(_QWORD *)(v4 + 112) = 0;

  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v16);

  static UIView.Corner.rounded.getter(v18);
  v19 = type metadata accessor for UIView.Corner(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v2, 0, 1, v19);
  sub_1000A5508((uint64_t)v2, v4 + *(int *)(v3 + 36), &qword_1011E6620);
  if (qword_1011DE2E8 != -1)
    swift_once(&qword_1011DE2E8, sub_100CCDB38);
  result = *(double *)&static SymbolButton.Configuration.platterMinimumSize;
  *(_OWORD *)(v4 + *(int *)(v3 + 52)) = static SymbolButton.Configuration.platterMinimumSize;
  return result;
}

uint64_t SymbolButton.Configuration.contextualAction.unsafeMutableAddressor()
{
  return sub_100C3138C(&qword_1011DE2D8, type metadata accessor for SymbolButton.Configuration, (uint64_t)static SymbolButton.Configuration.contextualAction, (uint64_t)sub_100CCD62C);
}

uint64_t static SymbolButton.Configuration.contextualAction.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100CCDAD4(&qword_1011DE2D8, (uint64_t)static SymbolButton.Configuration.contextualAction, (uint64_t)sub_100CCD62C, a1);
}

uint64_t sub_100CCD87C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void *v7;
  void *v8;
  char v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v16;

  v0 = type metadata accessor for SymbolButton.Configuration(0);
  v1 = __chkstk_darwin(v0);
  v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004FACC(v1, static SymbolButton.Configuration.barButtonContextualAction);
  v4 = sub_100048B14(v0, (uint64_t)static SymbolButton.Configuration.barButtonContextualAction);
  if (qword_1011DE2D8 != -1)
    swift_once(&qword_1011DE2D8, sub_100CCD62C);
  v5 = sub_100048B14(v0, (uint64_t)static SymbolButton.Configuration.contextualAction);
  sub_10005B704(v5, (uint64_t)v3, type metadata accessor for SymbolButton.Configuration);
  if (qword_1011DE2C0 != -1)
    swift_once(&qword_1011DE2C0, sub_100CC67DC);
  v6 = static SymbolButton.Configuration.Accessibility.forBarButtonItem;
  v7 = (void *)qword_1012500F8;
  v8 = (void *)unk_101250100;
  v9 = byte_101250108;
  sub_10005B704((uint64_t)v3, v4, type metadata accessor for SymbolButton.Configuration);
  v10 = v4 + *(int *)(v0 + 64);
  v11 = *(void **)(v10 + 8);
  v12 = *(void **)(v10 + 16);
  v13 = v7;
  v14 = v8;

  *(_BYTE *)v10 = v6;
  *(_QWORD *)(v10 + 8) = v7;
  *(_QWORD *)(v10 + 16) = v8;
  *(_BYTE *)(v10 + 24) = v9;
  return sub_10005B748((uint64_t)v3, type metadata accessor for SymbolButton.Configuration);
}

void SymbolButton.Configuration.forBarButtonItem()(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v3;
  void *v4;
  void *v5;
  char v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  id v11;

  if (qword_1011DE2C0 != -1)
    swift_once(&qword_1011DE2C0, sub_100CC67DC);
  v3 = static SymbolButton.Configuration.Accessibility.forBarButtonItem;
  v4 = (void *)qword_1012500F8;
  v5 = (void *)unk_101250100;
  v6 = byte_101250108;
  sub_10005B704(v1, a1, type metadata accessor for SymbolButton.Configuration);
  v7 = a1 + *(int *)(type metadata accessor for SymbolButton.Configuration(0) + 64);
  v8 = *(void **)(v7 + 8);
  v9 = *(void **)(v7 + 16);
  v10 = v4;
  v11 = v5;

  *(_BYTE *)v7 = v3;
  *(_QWORD *)(v7 + 8) = v4;
  *(_QWORD *)(v7 + 16) = v5;
  *(_BYTE *)(v7 + 24) = v6;
}

uint64_t SymbolButton.Configuration.barButtonContextualAction.unsafeMutableAddressor()
{
  return sub_100C3138C(&qword_1011DE2E0, type metadata accessor for SymbolButton.Configuration, (uint64_t)static SymbolButton.Configuration.barButtonContextualAction, (uint64_t)sub_100CCD87C);
}

uint64_t static SymbolButton.Configuration.barButtonContextualAction.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100CCDAD4(&qword_1011DE2E0, (uint64_t)static SymbolButton.Configuration.barButtonContextualAction, (uint64_t)sub_100CCD87C, a1);
}

uint64_t sub_100CCDAD4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  if (*a1 != -1)
    swift_once(a1, a3);
  v6 = type metadata accessor for SymbolButton.Configuration(0);
  v7 = sub_100048B14(v6, a2);
  return sub_10005B704(v7, a4, type metadata accessor for SymbolButton.Configuration);
}

__n128 sub_100CCDB38()
{
  __n128 result;

  __asm { FMOV            V0.2D, #28.0 }
  static SymbolButton.Configuration.platterMinimumSize = (__int128)result;
  return result;
}

uint64_t type metadata accessor for SymbolButton.Configuration(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011E6780, (uint64_t)&nominal type descriptor for SymbolButton.Configuration);
}

double static SymbolButton.Configuration.platterMinimumSize.getter()
{
  return sub_100BA9D14(&qword_1011DE2E8, (uint64_t)&static SymbolButton.Configuration.platterMinimumSize, (uint64_t)&static SymbolButton.Configuration.platterMinimumSize + 8, (uint64_t)sub_100CCDB38);
}

int64x2_t sub_100CCDB7C()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4040000000000000uLL);
  static SymbolButton.Configuration.hitRectMinimumSize = (__int128)result;
  return result;
}

double static SymbolButton.Configuration.hitRectMinimumSize.getter()
{
  return sub_100BA9D14(&qword_1011DE2F0, (uint64_t)&static SymbolButton.Configuration.hitRectMinimumSize, (uint64_t)&static SymbolButton.Configuration.hitRectMinimumSize + 8, (uint64_t)sub_100CCDB7C);
}

__n128 SymbolButton.Configuration.adding(_:)@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 result;
  uint64_t v13;
  void *v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  __n128 v19;
  _BYTE v20[16];
  id v21;
  id v22;
  id v23;

  v19 = *(__n128 *)a1;
  v5 = a1 + 16;
  v6 = a1 + 8;
  v17 = *(unsigned __int8 *)(a1 + 24);
  v18 = *(_QWORD *)(a1 + 16);
  v7 = a1 + 32;
  v15 = *(_QWORD *)(a1 + 40);
  v16 = *(_QWORD *)(a1 + 32);
  sub_10005B704(v2, (uint64_t)a2, type metadata accessor for SymbolButton.Configuration);
  v8 = (void *)a2[14].n128_u64[1];
  v9 = (void *)a2[15].n128_u64[0];
  v10 = a2[15].n128_i64[1];
  v11 = a2[16].n128_i64[0];
  v13 = a2[16].n128_i64[1];
  v14 = (void *)a2[14].n128_u64[0];
  sub_100065228(a1, (uint64_t)&v23, &qword_1011E66A8);
  sub_100065228(v6, (uint64_t)&v22, &qword_1011E66A8);
  sub_100065228(v5, (uint64_t)&v21, &qword_1011E66A8);
  sub_100065228(v7, (uint64_t)v20, &qword_1011E66B0);
  sub_1005518D0(&v23);
  sub_1005518D0(&v22);
  sub_1005518D0(&v21);
  sub_100055CE4((uint64_t)v20);
  sub_10024DDA8(v14, v8, v9, v10, v11, v13);
  result = v19;
  a2[14] = v19;
  a2[15].n128_u64[0] = v18;
  a2[15].n128_u64[1] = v17;
  a2[16].n128_u64[0] = v16;
  a2[16].n128_u64[1] = v15;
  return result;
}

double SymbolButton.Configuration.removingMaterial()@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  sub_10005B704(v1, a1, type metadata accessor for SymbolButton.Configuration);
  sub_10024DDA8(*(void **)(a1 + 224), *(void **)(a1 + 232), *(void **)(a1 + 240), *(_QWORD *)(a1 + 248), *(_QWORD *)(a1 + 256), *(_QWORD *)(a1 + 264));
  *(_QWORD *)(a1 + 224) = 1;
  result = 0.0;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 248) = 0u;
  *(_QWORD *)(a1 + 264) = 0;
  return result;
}

uint64_t SymbolButton.Configuration.adding(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, double *a4@<X8>, double a5@<D0>)
{
  uint64_t v5;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t result;

  sub_10005B704(v5, (uint64_t)a4, type metadata accessor for SymbolButton.Configuration);
  v11 = *((_QWORD *)a4 + 24);
  v12 = (void *)*((_QWORD *)a4 + 25);
  v13 = *((_QWORD *)a4 + 26);
  v14 = *((_QWORD *)a4 + 27);
  swift_bridgeObjectRetain();
  v15 = a1;
  result = sub_10013BA8C(v11, v12, v13, v14);
  a4[24] = a5;
  *((_QWORD *)a4 + 25) = a1;
  *((_QWORD *)a4 + 26) = a2;
  *((_QWORD *)a4 + 27) = a3;
  return result;
}

double SymbolButton.Configuration.removingBackground()@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  sub_10005B704(v1, a1, type metadata accessor for SymbolButton.Configuration);
  sub_10013BA8C(*(_QWORD *)(a1 + 192), *(void **)(a1 + 200), *(_QWORD *)(a1 + 208), *(_QWORD *)(a1 + 216));
  result = 0.0;
  *(_OWORD *)(a1 + 192) = xmmword_100EA85A0;
  *(_QWORD *)(a1 + 208) = 0;
  *(_QWORD *)(a1 + 216) = 0;
  return result;
}

void SymbolButton.Configuration.withAccessibility(_:)(char a1@<W0>, void *a2@<X1>, void *a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  id v15;

  sub_10005B704(v5, a5, type metadata accessor for SymbolButton.Configuration);
  v11 = a5 + *(int *)(type metadata accessor for SymbolButton.Configuration(0) + 64);
  v12 = *(void **)(v11 + 8);
  v13 = *(void **)(v11 + 16);
  v14 = a2;
  v15 = a3;

  *(_BYTE *)v11 = a1;
  *(_QWORD *)(v11 + 8) = a2;
  *(_QWORD *)(v11 + 16) = a3;
  *(_BYTE *)(v11 + 24) = a4;
}

uint64_t *SymbolButton.Background.tertiary.unsafeMutableAddressor()
{
  if (qword_1011DE300 != -1)
    swift_once(&qword_1011DE300, sub_100CCE7A4);
  return &static SymbolButton.Background.tertiary;
}

uint64_t SymbolButton.Configuration.forUberNavigationBar(withMaterial:background:groupName:)@<X0>(int a1@<W0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>, double a8@<D0>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void *v23;
  void *v24;
  char v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  id v59;
  uint64_t v60;

  v9 = v8;
  v55 = a5;
  v56 = a6;
  v53 = a3;
  v54 = a4;
  v52 = a2;
  LODWORD(v59) = a1;
  v12 = type metadata accessor for SymbolButton.Configuration(0);
  v13 = __chkstk_darwin(v12);
  v60 = (uint64_t)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v51 - v16;
  __chkstk_darwin(v15);
  v19 = (char *)&v51 - v18;
  v20 = sub_100007E8C(&qword_1011E6620);
  __chkstk_darwin(v20);
  v22 = (char *)&v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1011DE2C0 != -1)
    swift_once(&qword_1011DE2C0, sub_100CC67DC);
  v57 = static SymbolButton.Configuration.Accessibility.forBarButtonItem;
  v23 = (void *)qword_1012500F8;
  v24 = (void *)unk_101250100;
  v25 = byte_101250108;
  sub_10005B704(v9, a7, type metadata accessor for SymbolButton.Configuration);
  v26 = a7 + *(int *)(v12 + 64);
  v58 = v12;
  v28 = *(void **)(v26 + 8);
  v27 = *(void **)(v26 + 16);
  v29 = v23;
  v30 = v24;

  v31 = a7;
  *(_BYTE *)v26 = v57;
  *(_QWORD *)(v26 + 8) = v23;
  *(_QWORD *)(v26 + 16) = v24;
  *(_BYTE *)(v26 + 24) = v25;
  static UIView.Corner.rounded.getter();
  v32 = type metadata accessor for UIView.Corner(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v22, 0, 1, v32);
  sub_1000A5508((uint64_t)v22, a7 + *(int *)(v58 + 36), &qword_1011E6620);

  *(_QWORD *)(a7 + 272) = 0;
  *(_QWORD *)(a7 + 280) = 0;
  *(_QWORD *)(a7 + 288) = 0;
  if ((v59 & 1) != 0)
  {
    v33 = v60;
    sub_10005B704(a7, v60, type metadata accessor for SymbolButton.Configuration);
    v59 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 16);
    sub_10005B704(v33, (uint64_t)v17, type metadata accessor for SymbolButton.Configuration);
    v34 = (void *)*((_QWORD *)v17 + 28);
    v35 = (void *)*((_QWORD *)v17 + 29);
    v36 = (void *)*((_QWORD *)v17 + 30);
    v37 = *((_QWORD *)v17 + 31);
    v38 = *((_QWORD *)v17 + 32);
    v39 = *((_QWORD *)v17 + 33);
    v40 = v56;
    swift_bridgeObjectRetain();
    sub_10024DDA8(v34, v35, v36, v37, v38, v39);
    v41 = v60;
    *((_QWORD *)v17 + 28) = v59;
    *((_QWORD *)v17 + 29) = 0;
    *((_QWORD *)v17 + 30) = 0;
    *((_QWORD *)v17 + 31) = 2;
    *((_QWORD *)v17 + 32) = v55;
    *((_QWORD *)v17 + 33) = v40;
    sub_10005B748(v41, type metadata accessor for SymbolButton.Configuration);
    sub_10005B704((uint64_t)v17, (uint64_t)v19, type metadata accessor for SymbolButton.Configuration);
    sub_10013BA8C(*((_QWORD *)v19 + 24), *((void **)v19 + 25), *((_QWORD *)v19 + 26), *((_QWORD *)v19 + 27));
    *((_OWORD *)v19 + 12) = xmmword_100EA85A0;
    *((_QWORD *)v19 + 26) = 0;
    *((_QWORD *)v19 + 27) = 0;
  }
  else
  {
    sub_10005B704(a7, (uint64_t)v17, type metadata accessor for SymbolButton.Configuration);
    sub_10024DDA8(*((void **)v17 + 28), *((void **)v17 + 29), *((void **)v17 + 30), *((_QWORD *)v17 + 31), *((_QWORD *)v17 + 32), *((_QWORD *)v17 + 33));
    *((_QWORD *)v17 + 28) = 1;
    *(_OWORD *)(v17 + 232) = 0u;
    *(_OWORD *)(v17 + 248) = 0u;
    *((_QWORD *)v17 + 33) = 0;
    sub_10005B704((uint64_t)v17, (uint64_t)v19, type metadata accessor for SymbolButton.Configuration);
    v42 = *((_QWORD *)v19 + 24);
    v43 = (void *)*((_QWORD *)v19 + 25);
    v44 = *((_QWORD *)v19 + 26);
    v45 = *((_QWORD *)v19 + 27);
    v46 = v54;
    swift_bridgeObjectRetain();
    v47 = v52;
    v48 = v52;
    sub_10013BA8C(v42, v43, v44, v45);
    *((double *)v19 + 24) = a8;
    v49 = v53;
    *((_QWORD *)v19 + 25) = v47;
    *((_QWORD *)v19 + 26) = v49;
    *((_QWORD *)v19 + 27) = v46;
  }
  sub_10005B748((uint64_t)v17, type metadata accessor for SymbolButton.Configuration);
  return sub_10055C138((uint64_t)v19, v31);
}

uint64_t SymbolButton.Configuration.forPromotionalParallaxNavigationBar(withMaterial:background:backgroundAlpha:groupName:)@<X0>(int a1@<W0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char v18;
  void *v19;
  void *v20;
  char v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  int v54;

  v10 = v9;
  v46 = a7;
  v47 = a8;
  v54 = a6;
  v49 = a5;
  v50 = a3;
  v51 = a4;
  v48 = a2;
  LODWORD(v53) = a1;
  v12 = type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  v45 = (uint64_t)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v15 = (char *)&v45 - v14;
  sub_100007E8C(&qword_1011E6620);
  __chkstk_darwin();
  v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1011DE2C0 != -1)
    swift_once(&qword_1011DE2C0, sub_100CC67DC);
  v18 = static SymbolButton.Configuration.Accessibility.forBarButtonItem;
  v19 = (void *)qword_1012500F8;
  v20 = (void *)unk_101250100;
  v21 = byte_101250108;
  sub_10005B704(v10, a9, type metadata accessor for SymbolButton.Configuration);
  v22 = a9 + *(int *)(v12 + 64);
  v52 = v12;
  v24 = *(void **)(v22 + 8);
  v23 = *(void **)(v22 + 16);
  v25 = v19;
  v26 = v20;

  *(_BYTE *)v22 = v18;
  *(_QWORD *)(v22 + 8) = v19;
  *(_QWORD *)(v22 + 16) = v20;
  *(_BYTE *)(v22 + 24) = v21;
  static UIView.Corner.rounded.getter(v27);
  v28 = type metadata accessor for UIView.Corner(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v17, 0, 1, v28);
  sub_1000A5508((uint64_t)v17, a9 + *(int *)(v52 + 36), &qword_1011E6620);

  *(_QWORD *)(a9 + 272) = 0;
  *(_QWORD *)(a9 + 280) = 0;
  *(_QWORD *)(a9 + 288) = 0;
  if ((v53 & 1) != 0)
  {
    v29 = v45;
    sub_10005B704(a9, v45, type metadata accessor for SymbolButton.Configuration);
    v53 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 16);
    sub_10005B704(v29, (uint64_t)v15, type metadata accessor for SymbolButton.Configuration);
    v30 = (void *)*((_QWORD *)v15 + 28);
    v31 = (void *)*((_QWORD *)v15 + 29);
    v32 = (void *)*((_QWORD *)v15 + 30);
    v33 = *((_QWORD *)v15 + 31);
    v35 = *((_QWORD *)v15 + 32);
    v34 = *((_QWORD *)v15 + 33);
    v36 = v47;
    swift_bridgeObjectRetain();
    sub_10024DDA8(v30, v31, v32, v33, v35, v34);
    *((_QWORD *)v15 + 28) = v53;
    *((_QWORD *)v15 + 29) = 0;
    *((_QWORD *)v15 + 30) = 0;
    *((_QWORD *)v15 + 31) = 2;
    *((_QWORD *)v15 + 32) = v46;
    *((_QWORD *)v15 + 33) = v36;
    sub_10005B748(v29, type metadata accessor for SymbolButton.Configuration);
  }
  else
  {
    sub_10005B704(a9, (uint64_t)v15, type metadata accessor for SymbolButton.Configuration);
    sub_10024DDA8(*((void **)v15 + 28), *((void **)v15 + 29), *((void **)v15 + 30), *((_QWORD *)v15 + 31), *((_QWORD *)v15 + 32), *((_QWORD *)v15 + 33));
    *((_QWORD *)v15 + 28) = 1;
    *(_OWORD *)(v15 + 232) = 0u;
    *(_OWORD *)(v15 + 248) = 0u;
    *((_QWORD *)v15 + 33) = 0;
  }
  sub_10055C138((uint64_t)v15, a9);
  sub_10005B704(a9, (uint64_t)v15, type metadata accessor for SymbolButton.Configuration);
  v37 = *((_QWORD *)v15 + 26);
  v38 = *((_QWORD *)v15 + 24);
  v39 = (void *)*((_QWORD *)v15 + 25);
  v40 = *((_QWORD *)v15 + 27);
  if ((v54 & 1) != 0)
  {
    sub_10013BA8C(*((_QWORD *)v15 + 24), *((void **)v15 + 25), *((_QWORD *)v15 + 26), *((_QWORD *)v15 + 27));
    *((_OWORD *)v15 + 12) = xmmword_100EA85A0;
    *((_QWORD *)v15 + 26) = 0;
    *((_QWORD *)v15 + 27) = 0;
  }
  else
  {
    v41 = v51;
    swift_bridgeObjectRetain();
    v42 = v48;
    v43 = v48;
    sub_10013BA8C(v38, v39, v37, v40);
    *((_QWORD *)v15 + 24) = v49;
    *((_QWORD *)v15 + 25) = v42;
    *((_QWORD *)v15 + 26) = v50;
    *((_QWORD *)v15 + 27) = v41;
  }
  return sub_10055C138((uint64_t)v15, a9);
}

void *SymbolButton.Background.withAlpha(_:)(void *a1)
{
  id v2;

  v2 = a1;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t SymbolButton.Configuration.withAlpha(_:)@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v2;
  uint64_t result;

  sub_10005B704(v2, a1, type metadata accessor for SymbolButton.Configuration);
  result = type metadata accessor for SymbolButton.Configuration(0);
  *(double *)(a1 + *(int *)(result + 68)) = a2;
  return result;
}

void *static SymbolButton.Background.tint(_:)(void *a1)
{
  id v2;

  v2 = a1;
  return a1;
}

id sub_100CCE6A0()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIColor), "secondarySystemFillColor");
  static SymbolButton.Background.secondary = 0x3FF0000000000000;
  qword_101250188 = (uint64_t)result;
  qword_101250190 = 0;
  qword_101250198 = 0;
  return result;
}

uint64_t *SymbolButton.Background.secondary.unsafeMutableAddressor()
{
  if (qword_1011DE2F8 != -1)
    swift_once(&qword_1011DE2F8, sub_100CCE6A0);
  return &static SymbolButton.Background.secondary;
}

uint64_t static SymbolButton.Background.secondary.getter()
{
  uint64_t v0;
  id v1;

  if (qword_1011DE2F8 != -1)
    swift_once(&qword_1011DE2F8, sub_100CCE6A0);
  v0 = qword_101250188;
  v1 = (id)qword_101250188;
  swift_bridgeObjectRetain();
  return v0;
}

id sub_100CCE7A4()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIColor), "tertiarySystemFillColor");
  static SymbolButton.Background.tertiary = 0x3FF0000000000000;
  qword_1012501A8 = (uint64_t)result;
  qword_1012501B0 = 0;
  qword_1012501B8 = 0;
  return result;
}

uint64_t static SymbolButton.Background.tertiary.getter()
{
  uint64_t v0;
  id v1;

  if (qword_1011DE300 != -1)
    swift_once(&qword_1011DE300, sub_100CCE7A4);
  v0 = qword_1012501A8;
  v1 = (id)qword_1012501A8;
  swift_bridgeObjectRetain();
  return v0;
}

id sub_100CCE868()
{
  id v1;

  if (qword_1011DE300 != -1)
    swift_once(&qword_1011DE300, sub_100CCE7A4);
  static SymbolButton.Background.normal = static SymbolButton.Background.tertiary;
  *(_OWORD *)&qword_1012501C8 = *(_OWORD *)&qword_1012501A8;
  qword_1012501D8 = qword_1012501B8;
  v1 = (id)qword_1012501A8;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static SymbolButton.Background.normal.getter()
{
  uint64_t v0;
  id v1;

  if (qword_1011DE308 != -1)
    swift_once(&qword_1011DE308, sub_100CCE868);
  v0 = qword_1012501C8;
  v1 = (id)qword_1012501C8;
  swift_bridgeObjectRetain();
  return v0;
}

id sub_100CCE960()
{
  id v1;

  if (qword_1011DE2F8 != -1)
    swift_once(&qword_1011DE2F8, sub_100CCE6A0);
  static SymbolButton.Background.highlighted = static SymbolButton.Background.secondary;
  *(_OWORD *)&qword_1012501E8 = *(_OWORD *)&qword_101250188;
  qword_1012501F8 = qword_101250198;
  v1 = (id)qword_101250188;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static SymbolButton.Background.highlighted.getter()
{
  uint64_t v0;
  id v1;

  if (qword_1011DE310 != -1)
    swift_once(&qword_1011DE310, sub_100CCE960);
  v0 = qword_1012501E8;
  v1 = (id)qword_1012501E8;
  swift_bridgeObjectRetain();
  return v0;
}

id sub_100CCEA58()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 7);
  qword_101250208 = 0;
  qword_101250210 = 0;
  static SymbolButton.Material.xr = (uint64_t)result;
  byte_101250218 = 2;
  qword_101250220 = 0;
  unk_101250228 = 0;
  return result;
}

uint64_t static SymbolButton.Material.xr.getter@<X0>(uint64_t a1@<X8>)
{
  void *v2;
  void *v3;
  void *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;

  if (qword_1011DE318 != -1)
    swift_once(&qword_1011DE318, sub_100CCEA58);
  v2 = (void *)static SymbolButton.Material.xr;
  v3 = (void *)qword_101250208;
  v4 = (void *)qword_101250210;
  v5 = byte_101250218;
  v6 = qword_101250220;
  v7 = unk_101250228;
  *(_QWORD *)a1 = static SymbolButton.Material.xr;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  v8 = v2;
  v9 = v3;
  v10 = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100CCEB2C()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for UIView.Corner(0);
  sub_10004FACC(v0, static UIView.Corner.capsule);
  v1 = sub_100048B14(v0, (uint64_t)static UIView.Corner.capsule);
  return static UIView.Corner.rounded.getter(v1);
}

uint64_t UIView.Corner.capsule.unsafeMutableAddressor()
{
  return sub_100C3138C(&qword_1011DE320, (uint64_t (*)(_QWORD))&type metadata accessor for UIView.Corner, (uint64_t)static UIView.Corner.capsule, (uint64_t)sub_100CCEB2C);
}

uint64_t static UIView.Corner.capsule.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100BC4680(&qword_1011DE320, (uint64_t)static UIView.Corner.capsule, (uint64_t)sub_100CCEB2C, a1);
}

uint64_t sub_100CCEBB4()
{
  uint64_t v0;

  v0 = type metadata accessor for UIView.Corner(0);
  sub_10004FACC(v0, static UIView.Corner.roundedRect);
  sub_100048B14(v0, (uint64_t)static UIView.Corner.roundedRect);
  return static UIView.Corner.value(_:continuous:)(1, 10.0);
}

uint64_t static UIView.Corner.roundedRect.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100BC4680(&qword_1011DE328, (uint64_t)static UIView.Corner.roundedRect, (uint64_t)sub_100CCEBB4, a1);
}

char *SymbolButton.withProvider(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v12;
  _BYTE v13[24];

  v4 = sub_100007E8C(&qword_1011E5C80);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = (uint64_t *)&v12[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_configurationProvider];
  swift_beginAccess(&v12[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_configurationProvider], v13, 1, 0);
  v8 = *v7;
  v9 = v7[1];
  *v7 = a1;
  v7[1] = a2;
  swift_retain_n(a2, 2);
  sub_10004BA30(v8, v9);
  v10 = type metadata accessor for SymbolButton.Configuration(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v6, 1, 1, v10);
  SymbolButton.updateConfigurationIfNeeded(_:animation:)((uint64_t)v6, 0, 0, 0, 1);
  sub_10004FF60((uint64_t)v6, &qword_1011E5C80);
  swift_release(a2);
  return v12;
}

id SymbolButton.withConfiguration(_:)(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  id v5[2];

  type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  v3 = (char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B704(a1, (uint64_t)v3, type metadata accessor for SymbolButton.Configuration);
  SymbolButton.setConfiguration(_:animation:updates:)((uint64_t)v3, 0, 0, 0, 1, (uint64_t)_swiftEmptyArrayStorage);
  sub_10005B748((uint64_t)v3, type metadata accessor for SymbolButton.Configuration);
  return v5[1];
}

uint64_t type metadata accessor for SymbolButton.Metrics(uint64_t a1)
{
  return sub_100055934(a1, qword_1011E6990, (uint64_t)&nominal type descriptor for SymbolButton.Metrics);
}

uint64_t type metadata accessor for SymbolButton.MaterialView()
{
  return objc_opt_self(_TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A9312MaterialView);
}

uint64_t type metadata accessor for SymbolButton.BackgroundView()
{
  return objc_opt_self(_TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A9314BackgroundView);
}

uint64_t type metadata accessor for SymbolButton(uint64_t a1)
{
  return sub_100055934(a1, (uint64_t *)&unk_1011E6710, (uint64_t)&nominal type descriptor for SymbolButton);
}

uint64_t type metadata accessor for SymbolButton.Label()
{
  return objc_opt_self(_TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A935Label);
}

uint64_t sub_100CCEE74()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100CCEE84(void *a1)
{
  uint64_t v1;

  sub_100CC1C48(a1, *(_QWORD *)(v1 + 16));
}

id sub_100CCEE8C(uint64_t a1, uint64_t a2)
{
  uint64_t (*v3)(uint64_t, __n128);
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  void *v7;

  v3 = *(uint64_t (**)(uint64_t, __n128))(a1 + 32);
  v4 = sub_10004A07C(0, (unint64_t *)&unk_1011E6B08, UIMenuElement_ptr);
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v4);
  v6 = swift_retain();
  v7 = (void *)v3(v5, v6);
  swift_release();
  swift_bridgeObjectRelease();
  return v7;
}

BOOL _s11MusicCoreUI12SymbolButtonC0D0V23__derived_struct_equalsySbAE_AEtFZ_0(double *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  double v6;
  BOOL v7;
  char v8;
  _BOOL8 result;
  void *v10;
  void *v11;
  id v12;
  id v13;
  char v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  void *v34;
  void *v35;
  id v36;
  id v37;
  char v38;
  _QWORD v39[2];
  char v40;
  _BYTE v41[24];
  _BYTE v42[24];
  id v43;
  id v44;
  _BYTE v45[24];
  _BYTE v46[24];

  v4 = *((_QWORD *)a1 + 1);
  v5 = *(_QWORD *)(a2 + 8);
  if (!v4)
  {
    if (v5)
      return 0;
    goto LABEL_10;
  }
  if (!v5)
    return 0;
  v6 = *a1;
  v7 = *(_QWORD *)a1 == *(_QWORD *)a2 && v4 == v5;
  if (v7
    || (v8 = _stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)&v6, v4, *(_QWORD *)a2, v5, 0),
        result = 0,
        (v8 & 1) != 0))
  {
LABEL_10:
    v10 = (void *)*((_QWORD *)a1 + 2);
    v11 = *(void **)(a2 + 16);
    if (v10)
    {
      if (!v11)
        return 0;
      sub_10004A07C(0, &qword_1011E6B50, NSBundle_ptr);
      v12 = v11;
      v13 = v10;
      v14 = static NSObject.== infix(_:_:)(v13, v12);

      if ((v14 & 1) == 0)
        return 0;
    }
    else if (v11)
    {
      return 0;
    }
    v15 = (void *)*((_QWORD *)a1 + 3);
    v43 = *(id *)(a2 + 24);
    v44 = v15;
    v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    v18 = v17;
    v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
    v21 = v19;
    if (v16 == v20 && v18 == v19)
    {
      sub_1005518D0(&v44);
      sub_1005518D0(&v43);
      swift_bridgeObjectRelease_n(v18, 2);
      sub_100065200(&v43);
      sub_100065200(&v44);
    }
    else
    {
      v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v18, v20, v19, 0);
      sub_1005518D0(&v44);
      sub_1005518D0(&v43);
      swift_bridgeObjectRelease(v18);
      swift_bridgeObjectRelease(v21);
      sub_100065200(&v43);
      sub_100065200(&v44);
      result = 0;
      if ((v22 & 1) == 0)
        return result;
    }
    v23 = *(_BYTE *)(a2 + 40);
    if (((_BYTE)a1[5] & 1) != 0)
    {
      if (!*(_BYTE *)(a2 + 40))
        return 0;
    }
    else
    {
      if (a1[4] != *(double *)(a2 + 32))
        v23 = 1;
      if ((v23 & 1) != 0)
        return 0;
    }
    if (*((_QWORD *)a1 + 6) != *(_QWORD *)(a2 + 48) || *((_QWORD *)a1 + 7) != *(_QWORD *)(a2 + 56))
      return 0;
    sub_100065228((uint64_t)(a1 + 8), (uint64_t)v42, &qword_1011E6B38);
    v24 = *(_QWORD *)(a2 + 64);
    v25 = *(_QWORD *)(a2 + 72);
    v26 = *(unsigned __int8 *)(a2 + 80);
    sub_100065228((uint64_t)v42, (uint64_t)v45, &qword_1011E6B38);
    if (v45[16] == 255)
    {
      if (v26 != 255)
        return 0;
    }
    else
    {
      sub_100065228((uint64_t)v45, (uint64_t)v46, &qword_1011E6B40);
      sub_100065228((uint64_t)v42, (uint64_t)v41, &qword_1011E6B38);
      if (v26 == 255)
        return 0;
      v39[0] = v24;
      v39[1] = v25;
      v40 = v26 & 1;
      type metadata accessor for UIOffset(0);
      v28 = v27;
      sub_100048748(&qword_1011E6B48, (uint64_t (*)(uint64_t))type metadata accessor for UIOffset, (uint64_t)&protocol conformance descriptor for UIOffset);
      if ((static DisplayUnit.__derived_enum_equals(_:_:)((uint64_t)v41, (uint64_t)v39, v28) & 1) == 0)
        return 0;
    }
    v29 = *((_QWORD *)a1 + 12);
    v30 = *(_QWORD *)(a2 + 96);
    if (v29)
    {
      if (!v30)
        return 0;
      v31 = *((_QWORD *)a1 + 11);
      v32 = *(_QWORD *)(a2 + 88);
      if (v31 != v32 || v29 != v30)
      {
        v33 = _stringCompareWithSmolCheck(_:_:expecting:)(v31, v29, v32, v30, 0);
        result = 0;
        if ((v33 & 1) == 0)
          return result;
      }
    }
    else if (v30)
    {
      return 0;
    }
    if (a1[13] == *(double *)(a2 + 104))
    {
      v34 = (void *)*((_QWORD *)a1 + 14);
      v35 = *(void **)(a2 + 112);
      if (v34)
      {
        if (!v35)
          return 0;
        sub_10004A07C(0, (unint64_t *)&qword_1011E6AE0, UIColor_ptr);
        v36 = v35;
        v37 = v34;
        v38 = static NSObject.== infix(_:_:)(v37, v36);

        return (v38 & 1) != 0;
      }
      if (!v35)
        return 1;
    }
    return 0;
  }
  return result;
}

BOOL _s11MusicCoreUI12SymbolButtonC10BackgroundV23__derived_struct_equalsySbAE_AEtFZ_0(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, double a7, double a8)
{
  id v14;
  id v15;
  char v16;

  if (a7 != a8)
    return 0;
  if (a1)
  {
    if (!a4)
      return 0;
    sub_10004A07C(0, (unint64_t *)&qword_1011E6AE0, UIColor_ptr);
    v14 = a4;
    v15 = a1;
    v16 = static NSObject.== infix(_:_:)(v15, v14);

    if ((v16 & 1) == 0)
      return 0;
  }
  else if (a4)
  {
    return 0;
  }
  if (a3)
    return a6 && (a2 == a5 && a3 == a6 || (_stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, a5, a6, 0) & 1) != 0);
  return !a6;
}

uint64_t _s11MusicCoreUI12SymbolButtonC10CustomViewV23__derived_struct_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  BOOL v4;
  BOOL v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  char v10;

  sub_10004A07C(0, (unint64_t *)&qword_1011DF6A0, NSObject_ptr);
  if ((static NSObject.== infix(_:_:)(*(_QWORD *)a1, *(_QWORD *)a2) & 1) != 0
    && *(double *)(a1 + 8) == *(double *)(a2 + 8))
  {
    v4 = *(double *)(a1 + 16) == *(double *)(a2 + 16) && *(double *)(a1 + 24) == *(double *)(a2 + 24);
    v5 = v4 && *(double *)(a1 + 32) == *(double *)(a2 + 32);
    if (v5 && *(double *)(a1 + 40) == *(double *)(a2 + 40))
    {
      v6 = *(void **)(a1 + 48);
      v7 = *(void **)(a2 + 48);
      if (v6)
      {
        if (v7)
        {
          sub_10004A07C(0, (unint64_t *)&qword_1011E6AE0, UIColor_ptr);
          v8 = v7;
          v9 = v6;
          v10 = static NSObject.== infix(_:_:)(v9, v8);

          if ((v10 & 1) != 0)
            return 1;
        }
      }
      else if (!v7)
      {
        return 1;
      }
    }
  }
  return 0;
}

uint64_t _s11MusicCoreUI12SymbolButtonC13ConfigurationV13AccessibilityV23__derived_struct_equalsySbAG_AGtFZ_0(int a1, uint64_t a2, uint64_t a3, char a4, int a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;

  if (((a1 ^ a5) & 1) != 0)
    return 0;
  if (a2)
  {
    if (!a6)
      goto LABEL_17;
    v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
    v16 = v15;
    v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(a6);
    v19 = v17;
    if (v14 == v18 && v16 == v17)
    {
      swift_bridgeObjectRelease_n(v16, 2);
    }
    else
    {
      v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v16, v18, v17, 0);
      swift_bridgeObjectRelease(v16);
      swift_bridgeObjectRelease(v19);
      v21 = 0;
      if ((v20 & 1) == 0)
        return v21 & 1;
    }
  }
  else if (a6)
  {
    goto LABEL_17;
  }
  if (!a3)
  {
    if (!a7)
      goto LABEL_19;
    goto LABEL_17;
  }
  if (!a7)
  {
LABEL_17:
    v21 = 0;
    return v21 & 1;
  }
  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v24 = v23;
  v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(a7);
  v27 = v25;
  if (v22 == v26 && v24 == v25)
  {
    swift_bridgeObjectRelease_n(v24, 2);
LABEL_19:
    v21 = a4 ^ a8 ^ 1;
    return v21 & 1;
  }
  v28 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v24, v26, v25, 0);
  swift_bridgeObjectRelease(v24);
  swift_bridgeObjectRelease(v27);
  v21 = 0;
  if ((v28 & 1) != 0)
    goto LABEL_19;
  return v21 & 1;
}

uint64_t _s11MusicCoreUI12SymbolButtonC5TitleV23__derived_struct_equalsySbAE_AEtFZ_0(double *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  double v6;
  BOOL v7;
  char v8;
  char v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  char v28;
  id v30;
  id v31;

  v4 = *((_QWORD *)a1 + 1);
  v5 = *(_QWORD *)(a2 + 8);
  if (!v4)
  {
    if (v5)
      goto LABEL_31;
    goto LABEL_10;
  }
  if (!v5)
    goto LABEL_31;
  v6 = *a1;
  v7 = *(_QWORD *)a1 == *(_QWORD *)a2 && v4 == v5;
  if (v7
    || (v8 = _stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)&v6, v4, *(_QWORD *)a2, v5, 0),
        v9 = 0,
        (v8 & 1) != 0))
  {
LABEL_10:
    v10 = (void *)*((_QWORD *)a1 + 2);
    v30 = *(id *)(a2 + 16);
    v31 = v10;
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v13 = v12;
    v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
    if (v11 == v14 && v13 == v15)
    {
      sub_1005518D0(&v31);
      sub_1005518D0(&v30);
      swift_bridgeObjectRelease_n(v13, 2);
      sub_100065200(&v30);
      sub_100065200(&v31);
    }
    else
    {
      v17 = v15;
      v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v13, v14, v15, 0);
      sub_1005518D0(&v31);
      sub_1005518D0(&v30);
      swift_bridgeObjectRelease(v13);
      swift_bridgeObjectRelease(v17);
      sub_100065200(&v30);
      sub_100065200(&v31);
      v9 = 0;
      if ((v18 & 1) == 0)
        return v9 & 1;
    }
    if (a1[3] != *(double *)(a2 + 24))
      goto LABEL_31;
    v19 = *((_QWORD *)a1 + 5);
    v20 = *(_QWORD *)(a2 + 40);
    if (v19)
    {
      if (!v20)
        goto LABEL_31;
      v21 = *((_QWORD *)a1 + 4);
      v22 = *(_QWORD *)(a2 + 32);
      if (v21 != v22 || v19 != v20)
      {
        v23 = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v19, v22, v20, 0);
        v9 = 0;
        if ((v23 & 1) == 0)
          return v9 & 1;
      }
    }
    else if (v20)
    {
      goto LABEL_31;
    }
    if (a1[6] == *(double *)(a2 + 48))
    {
      v24 = (void *)*((_QWORD *)a1 + 7);
      v25 = *(void **)(a2 + 56);
      if (v24)
      {
        if (v25)
        {
          sub_10004A07C(0, (unint64_t *)&qword_1011E6AE0, UIColor_ptr);
          v26 = v25;
          v27 = v24;
          v28 = static NSObject.== infix(_:_:)(v27, v26);

          if ((v28 & 1) != 0)
            goto LABEL_29;
        }
      }
      else if (!v25)
      {
LABEL_29:
        v9 = (((_BYTE)a1[8] & 1) == 0) ^ *(_BYTE *)(a2 + 64);
        return v9 & 1;
      }
    }
LABEL_31:
    v9 = 0;
  }
  return v9 & 1;
}

BOOL _s11MusicCoreUI12SymbolButtonC8MaterialV23__derived_struct_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  id v7;
  char v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  char v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  char v18;
  int v19;
  int v20;
  _BOOL8 result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  if (*(_QWORD *)a1)
  {
    if (!v5)
      return 0;
    sub_10004A07C(0, &qword_1011E6B30, UIVisualEffect_ptr);
    v6 = v5;
    v7 = v4;
    v8 = static NSObject.== infix(_:_:)(v7, v6);

    if ((v8 & 1) == 0)
      return 0;
  }
  else if (v5)
  {
    return 0;
  }
  v9 = *(void **)(a1 + 8);
  v10 = *(void **)(a2 + 8);
  if (v9)
  {
    if (!v10)
      return 0;
    sub_10004A07C(0, &qword_1011E6B30, UIVisualEffect_ptr);
    v11 = v10;
    v12 = v9;
    v13 = static NSObject.== infix(_:_:)(v12, v11);

    if ((v13 & 1) == 0)
      return 0;
  }
  else if (v10)
  {
    return 0;
  }
  v14 = *(void **)(a1 + 16);
  v15 = *(void **)(a2 + 16);
  if (v14)
  {
    if (!v15)
      return 0;
    sub_10004A07C(0, &qword_1011E6B30, UIVisualEffect_ptr);
    v16 = v15;
    v17 = v14;
    v18 = static NSObject.== infix(_:_:)(v17, v16);

    if ((v18 & 1) == 0)
      return 0;
  }
  else if (v15)
  {
    return 0;
  }
  v19 = *(unsigned __int8 *)(a1 + 24);
  v20 = *(unsigned __int8 *)(a2 + 24);
  if (v19 == 2)
  {
    if (v20 != 2)
      return 0;
    goto LABEL_21;
  }
  result = 0;
  if (v20 != 2 && ((v20 ^ v19) & 1) == 0)
  {
LABEL_21:
    v22 = *(_QWORD *)(a1 + 40);
    v23 = *(_QWORD *)(a2 + 40);
    if (v22)
    {
      if (!v23)
        return 0;
      v24 = *(_QWORD *)(a1 + 32);
      v25 = *(_QWORD *)(a2 + 32);
      return v24 == v25 && v22 == v23 || (_stringCompareWithSmolCheck(_:_:expecting:)(v24, v22, v25, v23, 0) & 1) != 0;
    }
    return !v23;
  }
  return result;
}

uint64_t _s11MusicCoreUI12SymbolButtonC5BadgeV23__derived_struct_equalsySbAE_AEtFZ_0(void *a1, void *a2, double a3, double a4, double a5, double a6)
{
  id v10;
  id v11;
  char v12;

  if (a3 != a5 || a4 != a6)
    return 0;
  if (a1)
  {
    if (a2)
    {
      sub_10004A07C(0, (unint64_t *)&qword_1011E6AE0, UIColor_ptr);
      v10 = a2;
      v11 = a1;
      v12 = static NSObject.== infix(_:_:)(v11, v10);

      if ((v12 & 1) != 0)
        return 1;
    }
  }
  else if (!a2)
  {
    return 1;
  }
  return 0;
}

uint64_t sub_100CCF9F8(void **a1, void **a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);
  char *v27;
  uint64_t v28;
  char v29;
  void (*v30)(char *, uint64_t);
  int *v31;
  void **v32;
  void **v33;
  double v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  double v39;
  double *v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  double *v44;
  double *v45;
  char v46;
  double *v47;
  int *v49;
  char *v50;
  void **v51;
  void **v52;

  v4 = type metadata accessor for UIView.Corner(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v50 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100007E8C(&qword_1011E6690);
  __chkstk_darwin(v7);
  v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011E6620);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v11);
  v16 = (char *)&v49 - v15;
  __chkstk_darwin(v14);
  v18 = (char *)&v49 - v17;
  v51 = a1;
  v52 = a2;
  v19 = *a1;
  v20 = *a2;
  if (*a1)
  {
    if (!v20)
      goto LABEL_27;
    sub_10004A07C(0, &qword_1011DEF38, UITraitCollection_ptr);
    v21 = v20;
    v22 = v19;
    v23 = static NSObject.== infix(_:_:)(v22, v21);

    if ((v23 & 1) == 0)
      goto LABEL_27;
  }
  else if (v20)
  {
    goto LABEL_27;
  }
  v24 = type metadata accessor for SymbolButton.Metrics(0);
  sub_10004A160((uint64_t)v51 + *(int *)(v24 + 20), (uint64_t)v18, &qword_1011E6620);
  v49 = (int *)v24;
  sub_10004A160((uint64_t)v52 + *(int *)(v24 + 20), (uint64_t)v16, &qword_1011E6620);
  v25 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_10004A160((uint64_t)v18, (uint64_t)v9, &qword_1011E6620);
  sub_10004A160((uint64_t)v16, v25, &qword_1011E6620);
  v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v26((uint64_t)v9, 1, v4) == 1)
  {
    sub_10004FF60((uint64_t)v16, &qword_1011E6620);
    sub_10004FF60((uint64_t)v18, &qword_1011E6620);
    if (v26(v25, 1, v4) == 1)
    {
      sub_10004FF60((uint64_t)v9, &qword_1011E6620);
      goto LABEL_13;
    }
LABEL_11:
    sub_10004FF60((uint64_t)v9, &qword_1011E6690);
    goto LABEL_27;
  }
  sub_10004A160((uint64_t)v9, (uint64_t)v13, &qword_1011E6620);
  if (v26(v25, 1, v4) == 1)
  {
    sub_10004FF60((uint64_t)v16, &qword_1011E6620);
    sub_10004FF60((uint64_t)v18, &qword_1011E6620);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
    goto LABEL_11;
  }
  v27 = v50;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v50, v25, v4);
  v28 = sub_100048748((unint64_t *)&unk_1011E6AD0, (uint64_t (*)(uint64_t))&type metadata accessor for UIView.Corner, (uint64_t)&protocol conformance descriptor for UIView.Corner);
  v29 = dispatch thunk of static Equatable.== infix(_:_:)(v13, v27, v4, v28);
  v30 = *(void (**)(char *, uint64_t))(v5 + 8);
  v30(v27, v4);
  sub_10004FF60((uint64_t)v16, &qword_1011E6620);
  sub_10004FF60((uint64_t)v18, &qword_1011E6620);
  v30(v13, v4);
  sub_10004FF60((uint64_t)v9, &qword_1011E6620);
  if ((v29 & 1) == 0)
    goto LABEL_27;
LABEL_13:
  sub_10004A07C(0, (unint64_t *)&qword_1011DF6A0, NSObject_ptr);
  v31 = v49;
  v33 = v51;
  v32 = v52;
  if ((static NSObject.== infix(_:_:)(*(void **)((char *)v51 + v49[6]), *(void **)((char *)v52 + v49[6])) & 1) == 0
    || (static NSObject.== infix(_:_:)(*(void **)((char *)v33 + v31[7]), *(void **)((char *)v32 + v31[7])) & 1) == 0)
  {
    goto LABEL_27;
  }
  v36 = v31[8];
  v34 = *(double *)((char *)v33 + v36);
  v35 = *(double *)((char *)v32 + v36);
  LOBYTE(v36) = 0;
  if (v34 != v35)
    return v36 & 1;
  v37 = v31[9];
  v38 = (uint64_t)v33 + v37;
  v39 = *(double *)((char *)v33 + v37);
  v40 = (double *)((char *)v32 + v37);
  if (v39 != *v40)
    return v36 & 1;
  if (*(double *)(v38 + 8) != v40[1])
    return v36 & 1;
  LOBYTE(v36) = 0;
  v41 = v31[10];
  v42 = (uint64_t)v33 + v41;
  v43 = *(double *)((char *)v33 + v41);
  v44 = (double *)((char *)v32 + v41);
  if (v43 != *v44 || *(double *)(v42 + 8) != v44[1])
    return v36 & 1;
  v36 = v31[11];
  v45 = (double *)((char *)v33 + v36);
  v46 = *((_BYTE *)v33 + v36 + 16);
  v47 = (double *)((char *)v32 + v36);
  LODWORD(v36) = *((unsigned __int8 *)v32 + v36 + 16);
  if ((v46 & 1) != 0)
  {
    if (!(_DWORD)v36)
      return v36 & 1;
LABEL_26:
    if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)((char *)v33 + v31[12]), *(float64x2_t *)((char *)v32 + v31[12])), (int32x4_t)vceqq_f64(*(float64x2_t *)((char *)v33 + v31[12] + 16), *(float64x2_t *)((char *)v32 + v31[12] + 16)))), 0xFuLL))) & 1) != 0)
    {
      LOBYTE(v36) = *((_BYTE *)v33 + v31[13]) ^ *((_BYTE *)v32 + v31[13]) ^ 1;
      return v36 & 1;
    }
    goto LABEL_27;
  }
  if ((v36 & 1) != 0)
  {
LABEL_27:
    LOBYTE(v36) = 0;
    return v36 & 1;
  }
  LOBYTE(v36) = 0;
  if (*v45 == *v47 && v45[1] == v47[1])
    goto LABEL_26;
  return v36 & 1;
}

uint64_t _s11MusicCoreUI12SymbolButtonC13ConfigurationV23__derived_struct_equalsySbAE_AEtFZ_0(uint64_t a1, __int128 *a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  void *v41;
  int *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  void *v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  int *v54;
  void *v55;
  void *v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  id v64;
  BOOL v65;
  uint64_t v66;
  void *v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  id v75;
  int *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unsigned int (*v81)(uint64_t, uint64_t, void *);
  void *v82;
  int *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  void (*v88)(uint64_t, void *);
  uint64_t v89;
  uint64_t v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  uint64_t v97;
  void *v98;
  int *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  void *v121;
  uint64_t result;
  int *v123;
  uint64_t v124;
  uint64_t *v125;
  void *v126;
  uint64_t *v127;
  void *v128;
  uint64_t v129;
  uint64_t v130;
  double v131;
  double *v132;
  uint64_t v133;
  double *v134;
  char v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char v141;
  uint64_t v142;
  uint64_t v143;
  void *v144;
  void *v145;
  id v146;
  id v147;
  char v148;
  uint64_t v149;
  int v150;
  int v151;
  _BOOL4 v152;
  uint64_t v153;
  void *v154;
  id v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  void *v159;
  uint64_t v160;
  void *v161;
  double v162;
  char *v163;
  int *v164;
  void *v165;
  char *v166;
  uint64_t v167;
  char *v168;
  char *v169;
  int *v170;
  _QWORD v171[7];
  _QWORD v172[7];
  _QWORD v173[3];
  char v174;
  uint64_t v175;
  uint64_t v176;
  _QWORD v177[3];
  char v178;
  uint64_t v179;
  uint64_t v180;
  _OWORD v181[4];
  char v182;
  _OWORD v183[4];
  char v184;
  _OWORD v185[7];
  uint64_t v186;
  _OWORD v187[7];
  uint64_t v188;

  v4 = (_QWORD *)type metadata accessor for UIView.Corner(0);
  v5 = *(v4 - 1);
  __chkstk_darwin(v4);
  v7 = (char *)&v153 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = (int *)sub_100007E8C(&qword_1011E6690);
  __chkstk_darwin(v170);
  v9 = (char *)&v153 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100007E8C(&qword_1011E6620);
  v11 = __chkstk_darwin(v10);
  v13 = (int *)((char *)&v153 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = __chkstk_darwin(v11);
  v16 = (char *)&v153 - v15;
  __chkstk_darwin(v14);
  v18 = (char *)&v153 - v17;
  v19 = *(_OWORD *)(a1 + 80);
  v185[4] = *(_OWORD *)(a1 + 64);
  v185[5] = v19;
  v185[6] = *(_OWORD *)(a1 + 96);
  v186 = *(_QWORD *)(a1 + 112);
  v20 = *(_OWORD *)(a1 + 16);
  v185[0] = *(_OWORD *)a1;
  v185[1] = v20;
  v21 = *(_OWORD *)(a1 + 48);
  v185[2] = *(_OWORD *)(a1 + 32);
  v185[3] = v21;
  v22 = *a2;
  v23 = a2[1];
  v24 = a2[3];
  v187[2] = a2[2];
  v187[3] = v24;
  v187[0] = v22;
  v187[1] = v23;
  v25 = a2[4];
  v26 = a2[5];
  v27 = a2[6];
  v188 = *((_QWORD *)a2 + 14);
  v187[5] = v26;
  v187[6] = v27;
  v187[4] = v25;
  if (!_s11MusicCoreUI12SymbolButtonC0D0V23__derived_struct_equalsySbAE_AEtFZ_0((double *)v185, (uint64_t)v187))
    return 0;
  v28 = *(_OWORD *)(a1 + 136);
  v29 = *(_OWORD *)(a1 + 168);
  v181[2] = *(_OWORD *)(a1 + 152);
  v181[3] = v29;
  v182 = *(_BYTE *)(a1 + 184);
  v181[0] = *(_OWORD *)(a1 + 120);
  v181[1] = v28;
  v30 = *(__int128 *)((char *)a2 + 136);
  v31 = *(__int128 *)((char *)a2 + 168);
  v183[2] = *(__int128 *)((char *)a2 + 152);
  v183[3] = v31;
  v184 = *((_BYTE *)a2 + 184);
  v183[0] = *(__int128 *)((char *)a2 + 120);
  v183[1] = v30;
  if ((_s11MusicCoreUI12SymbolButtonC5TitleV23__derived_struct_equalsySbAE_AEtFZ_0((double *)v181, (uint64_t)v183) & 1) == 0)
    return 0;
  v168 = v9;
  v169 = v16;
  v166 = v18;
  v167 = v5;
  v163 = v7;
  v164 = v13;
  v165 = v4;
  v32 = *(void **)(a1 + 200);
  v33 = *(_QWORD *)(a1 + 208);
  v34 = *(_QWORD *)(a1 + 216);
  v35 = *((_QWORD *)a2 + 24);
  v36 = (void *)*((_QWORD *)a2 + 25);
  v38 = *((_QWORD *)a2 + 26);
  v37 = *((_QWORD *)a2 + 27);
  if (v32 == (void *)1)
  {
    if (v36 == (void *)1)
      goto LABEL_9;
LABEL_7:
    v39 = *(_QWORD *)(a1 + 192);
    sub_100CD1BA4(v39, *(void **)(a1 + 200));
    sub_100CD1BA4(v35, v36);
    sub_10013BA8C(v39, v32, v33, v34);
    sub_10013BA8C(v35, v36, v38, v37);
    return 0;
  }
  if (v36 == (void *)1)
    goto LABEL_7;
  v162 = *(double *)(a1 + 192);
  v40 = v162;
  sub_100CD1BA4(*(uint64_t *)&v162, v32);
  sub_100CD1BA4(v35, v36);
  LODWORD(v161) = _s11MusicCoreUI12SymbolButtonC10BackgroundV23__derived_struct_equalsySbAE_AEtFZ_0(v32, v33, v34, v36, v38, v37, v40, *(double *)&v35);
  sub_10013BA8C(v35, v36, v38, v37);
  sub_10013BA8C(*(uint64_t *)&v162, v32, v33, v34);
  if ((v161 & 1) == 0)
    return 0;
LABEL_9:
  v42 = *(int **)(a1 + 224);
  v41 = *(void **)(a1 + 232);
  v43 = *(void **)(a1 + 240);
  v44 = *(_QWORD *)(a1 + 248);
  v46 = *(_QWORD *)(a1 + 256);
  v45 = *(_QWORD *)(a1 + 264);
  v47 = (void *)*((_QWORD *)a2 + 28);
  v48 = (void *)*((_QWORD *)a2 + 29);
  v50 = (void *)*((_QWORD *)a2 + 30);
  v49 = *((_QWORD *)a2 + 31);
  v51 = *((_QWORD *)a2 + 32);
  v162 = *((double *)a2 + 33);
  if (v42 == (int *)1)
  {
    v52 = (uint64_t)v169;
    if (v47 == (void *)1)
      goto LABEL_15;
LABEL_13:
    v53 = v47;
    v54 = v42;
    v160 = v51;
    v161 = v41;
    v55 = v48;
    v170 = v42;
    v56 = v50;
    v57 = v43;
    v58 = v49;
    sub_100CD60E8(v54, v41, v43);
    v59 = *(_QWORD *)&v162;
    sub_100CD60E8(v53, v55, v56);
    sub_10024DDA8(v170, v161, v57, v44, v46, v45);
    sub_10024DDA8(v53, v55, v56, v58, v160, v59);
    return 0;
  }
  if (v47 == (void *)1)
    goto LABEL_13;
  v173[0] = v42;
  v173[1] = v41;
  v161 = v41;
  v173[2] = v43;
  v174 = v44;
  v175 = v46;
  v176 = v45;
  v177[0] = v47;
  v177[1] = v48;
  v177[2] = v50;
  v178 = v49;
  v60 = *(_QWORD *)&v162;
  v179 = v51;
  v180 = *(_QWORD *)&v162;
  v154 = v48;
  v155 = v47;
  v158 = v44;
  v159 = v43;
  v61 = v49;
  v62 = v51;
  v156 = v45;
  v157 = v46;
  sub_100CD60E8(v42, v41, v43);
  v63 = v154;
  v64 = v155;
  sub_100CD60E8(v155, v154, v50);
  v65 = _s11MusicCoreUI12SymbolButtonC8MaterialV23__derived_struct_equalsySbAE_AEtFZ_0((uint64_t)v173, (uint64_t)v177);
  v66 = v60;
  LOBYTE(v60) = v65;
  sub_10024DDA8(v64, v63, v50, v61, v62, v66);
  sub_10024DDA8(v42, v161, v159, v158, v157, v156);
  v52 = (uint64_t)v169;
  if ((v60 & 1) == 0)
    return 0;
LABEL_15:
  v67 = *(void **)(a1 + 288);
  v68 = (void *)*((_QWORD *)a2 + 36);
  if (v67)
  {
    if (!v68)
      return 0;
    v69 = v52;
    v70 = *(_QWORD *)(a1 + 272);
    v71 = *(_QWORD *)(a1 + 280);
    v72 = *((_QWORD *)a2 + 34);
    v73 = *((_QWORD *)a2 + 35);
    v74 = v68;
    v75 = v67;
    LOBYTE(v172[0]) = v73 & 1;
    LOBYTE(v70) = static UIView.Border.__derived_struct_equals(_:_:)(v70, v71 & 1, (uint64_t)v75, v72, v73 & 1, (uint64_t)v74);

    if ((v70 & 1) == 0)
      return 0;
  }
  else
  {
    v69 = v52;
    if (v68)
      return 0;
  }
  v76 = (int *)type metadata accessor for SymbolButton.Configuration(0);
  v77 = (uint64_t)v166;
  sub_10004A160(a1 + v76[9], (uint64_t)v166, &qword_1011E6620);
  sub_10004A160((uint64_t)a2 + v76[9], v69, &qword_1011E6620);
  v78 = (uint64_t)v168;
  v79 = (uint64_t)&v168[v170[12]];
  sub_10004A160(v77, (uint64_t)v168, &qword_1011E6620);
  v80 = v78;
  sub_10004A160(v69, v79, &qword_1011E6620);
  v81 = *(unsigned int (**)(uint64_t, uint64_t, void *))(v167 + 48);
  v82 = v165;
  if (v81(v80, 1, v165) == 1)
  {
    sub_10004FF60(v69, &qword_1011E6620);
    v80 = (uint64_t)v168;
    sub_10004FF60(v77, &qword_1011E6620);
    if (v81(v79, 1, v82) == 1)
    {
      sub_10004FF60(v80, &qword_1011E6620);
      goto LABEL_27;
    }
LABEL_25:
    sub_10004FF60(v80, &qword_1011E6690);
    return 0;
  }
  v83 = v164;
  sub_10004A160(v80, (uint64_t)v164, &qword_1011E6620);
  if (v81(v79, 1, v82) == 1)
  {
    sub_10004FF60((uint64_t)v169, &qword_1011E6620);
    sub_10004FF60((uint64_t)v166, &qword_1011E6620);
    (*(void (**)(int *, void *))(v167 + 8))(v83, v82);
    goto LABEL_25;
  }
  v84 = v167;
  v85 = (uint64_t)v163;
  (*(void (**)(char *, uint64_t, void *))(v167 + 32))(v163, v79, v82);
  v86 = sub_100048748((unint64_t *)&unk_1011E6AD0, (uint64_t (*)(uint64_t))&type metadata accessor for UIView.Corner, (uint64_t)&protocol conformance descriptor for UIView.Corner);
  v87 = dispatch thunk of static Equatable.== infix(_:_:)(v83, v85, v82, v86);
  v88 = *(void (**)(uint64_t, void *))(v84 + 8);
  v88(v85, v82);
  sub_10004FF60((uint64_t)v169, &qword_1011E6620);
  sub_10004FF60((uint64_t)v166, &qword_1011E6620);
  v88((uint64_t)v83, v82);
  sub_10004FF60(v80, &qword_1011E6620);
  if ((v87 & 1) == 0)
    return 0;
LABEL_27:
  v164 = v76;
  v89 = v76[10];
  v91 = *(void **)(a1 + v89);
  v90 = *(_QWORD *)(a1 + v89 + 8);
  v93 = *(_QWORD *)(a1 + v89 + 16);
  v92 = *(_QWORD *)(a1 + v89 + 24);
  v95 = *(_QWORD *)(a1 + v89 + 32);
  v94 = *(_QWORD *)(a1 + v89 + 40);
  v96 = *(void **)(a1 + v89 + 48);
  v97 = (uint64_t)a2 + v89;
  v98 = *(void **)v97;
  v99 = *(int **)(v97 + 8);
  v101 = *(_QWORD *)(v97 + 16);
  v100 = *(_QWORD *)(v97 + 24);
  v103 = *(_QWORD *)(v97 + 32);
  v102 = *(_QWORD *)(v97 + 40);
  v104 = *(void **)(v97 + 48);
  if (!v91)
  {
    if (!v98)
      goto LABEL_35;
LABEL_32:
    v114 = v93;
    v166 = (char *)v93;
    v167 = v92;
    v115 = v101;
    v116 = v92;
    v117 = v100;
    v118 = v95;
    v168 = (char *)v95;
    v169 = (char *)v94;
    v119 = v103;
    v120 = v102;
    v165 = v96;
    v170 = v99;
    v121 = v104;
    sub_100BC20B8(v91, v90, v114, v116, v118, v94, v96);
    sub_100BC20B8(v98, (uint64_t)v99, v115, v117, v119, v120, v121);
    sub_100BBA628(v91, v90, (uint64_t)v166, v167, (uint64_t)v168, (uint64_t)v169, v165);
    sub_100BBA628(v98, (uint64_t)v170, v115, v117, v119, v120, v121);
    return 0;
  }
  if (!v98)
    goto LABEL_32;
  v171[0] = v91;
  v171[1] = v90;
  v171[2] = v93;
  v171[3] = v92;
  v171[4] = v95;
  v171[5] = v94;
  v171[6] = v96;
  v172[0] = v98;
  v169 = (char *)v94;
  v170 = v99;
  v172[1] = v99;
  v172[2] = v101;
  v172[3] = v100;
  v172[4] = v103;
  v172[5] = v102;
  v172[6] = v104;
  v163 = (char *)v90;
  v105 = v90;
  v106 = v93;
  v166 = (char *)v93;
  v167 = v92;
  v107 = v101;
  v108 = v92;
  v109 = v100;
  v110 = v95;
  v168 = (char *)v95;
  v111 = v103;
  v112 = v102;
  v165 = v96;
  v113 = v104;
  sub_100BC20B8(v91, v105, v106, v108, v110, v94, v96);
  sub_100BC20B8(v98, (uint64_t)v170, v107, v109, v111, v112, v113);
  LODWORD(v162) = _s11MusicCoreUI12SymbolButtonC10CustomViewV23__derived_struct_equalsySbAE_AEtFZ_0((uint64_t)v171, (uint64_t)v172);
  sub_100BBA628(v98, (uint64_t)v170, v107, v109, v111, v112, v113);
  sub_100BBA628(v91, (uint64_t)v163, (uint64_t)v166, v167, (uint64_t)v168, (uint64_t)v169, v165);
  if ((LOBYTE(v162) & 1) == 0)
    return 0;
LABEL_35:
  v123 = v164;
  v124 = v164[11];
  v125 = (uint64_t *)(a1 + v124);
  v126 = *(void **)(a1 + v124 + 16);
  v127 = (uint64_t *)((char *)a2 + v124);
  v128 = (void *)v127[2];
  if (v126 == (void *)1)
  {
    if (v128 != (void *)1)
      return 0;
  }
  else
  {
    if (v128 == (void *)1)
      return 0;
    result = 0;
    v137 = *v125;
    v138 = *v127;
    if (*(double *)v125 != *(double *)v127)
      return result;
    v139 = v125[1];
    v140 = v127[1];
    if (*(double *)&v139 != *(double *)&v140)
      return result;
    if (v126)
    {
      if (!v128)
        return 0;
      sub_10004A07C(0, (unint64_t *)&qword_1011E6AE0, UIColor_ptr);
      sub_100CD1BD8(v138, v140, v128);
      sub_100CD1BD8(v137, v139, v126);
      v141 = static NSObject.== infix(_:_:)(v126, v128);
      sub_100974130(v138, v140, v128);
      sub_100974130(v137, v139, v126);
      v123 = v164;
      if ((v141 & 1) == 0)
        return 0;
    }
    else
    {
      v123 = v164;
      if (v128)
        return 0;
    }
  }
  if (*(double *)(a1 + v123[12]) != *(double *)((char *)a2 + v123[12]))
    return 0;
  result = 0;
  v129 = v123[13];
  v130 = a1 + v129;
  v131 = *(double *)(a1 + v129);
  v132 = (double *)((char *)a2 + v129);
  if (v131 == *v132 && *(double *)(v130 + 8) == v132[1])
  {
    v133 = v164[14];
    v134 = (double *)(a1 + v133);
    v135 = *(_BYTE *)(a1 + v133 + 16);
    v136 = (uint64_t)a2 + v133;
    if ((v135 & 1) != 0)
    {
      if (!*(_BYTE *)(v136 + 16))
        return 0;
      goto LABEL_55;
    }
    if ((*(_BYTE *)(v136 + 16) & 1) != 0)
      return 0;
    result = 0;
    if (*v134 == *(double *)v136 && v134[1] == *(double *)(v136 + 8))
    {
LABEL_55:
      if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + v164[15]), *(float64x2_t *)((char *)a2 + v164[15])), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + v164[15] + 16), *(float64x2_t *)((char *)a2 + v164[15] + 16)))), 0xFuLL))) & 1) == 0)return 0;
      v142 = v164[16];
      if ((_s11MusicCoreUI12SymbolButtonC13ConfigurationV13AccessibilityV23__derived_struct_equalsySbAG_AGtFZ_0(*(unsigned __int8 *)(a1 + v142), *(_QWORD *)(a1 + v142 + 8), *(_QWORD *)(a1 + v142 + 16), *(_BYTE *)(a1 + v142 + 24), *((unsigned __int8 *)a2 + v142), *(_QWORD *)((char *)a2 + v142 + 8), *(_QWORD *)((char *)a2 + v142 + 16), *((_BYTE *)a2 + v142 + 24)) & 1) == 0|| *(double *)(a1 + v164[17]) != *(double *)((char *)a2 + v164[17]))
      {
        return 0;
      }
      v143 = v164[18];
      v144 = *(void **)(a1 + v143);
      v145 = *(void **)((char *)a2 + v143);
      if (v144)
      {
        if (!v145)
          return 0;
        sub_10004A07C(0, (unint64_t *)&qword_1011E6AE0, UIColor_ptr);
        v146 = v145;
        v147 = v144;
        v148 = static NSObject.== infix(_:_:)(v147, v146);

        if ((v148 & 1) == 0)
          return 0;
      }
      else if (v145)
      {
        return 0;
      }
      v149 = v164[19];
      v150 = *(unsigned __int8 *)(a1 + v149);
      v151 = *((unsigned __int8 *)a2 + v149);
      if (v150 == 2)
      {
        if (v151 == 2)
          return 1;
      }
      else
      {
        v152 = (v150 & 1) == 0;
        if (v151 != 2 && ((v152 ^ v151) & 1) != 0)
          return 1;
      }
      return 0;
    }
  }
  return result;
}

void sub_100CD0A38(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  id v8;

  v2 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_customView;
  v3 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_customView);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_customView) = a1;
  v4 = a1;

  v5 = *(void **)(v1 + v2);
  if (v5)
  {
    v6 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_backgroundView);
    v8 = v5;
    v7 = v6;
    if (objc_msgSend(v7, "isDescendantOfView:", v7))
    {
      objc_msgSend(v7, "insertSubview:aboveSubview:", v8, v7);

    }
    else
    {

      if (!objc_msgSend(v8, "isDescendantOfView:", v7))
        objc_msgSend(v7, "addSubview:", v8);
    }
    sub_100CC99F0();

  }
}

uint64_t _s11MusicCoreUI12SymbolButtonC0D0V21hasSignificantChanges4from2toSbAESg_AItFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  _BOOL4 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[24];
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[24];
  uint64_t v34;
  uint64_t v35;
  _BYTE v36[24];
  uint64_t v37;
  uint64_t v38;
  _BYTE v39[24];
  id v40;
  _BYTE v41[24];
  id v42;
  _QWORD v43[15];
  _QWORD v44[15];

  sub_100065228(a1, (uint64_t)v44, &qword_1011E6B60);
  if (v44[3])
  {
    v5 = v44[0];
    v4 = v44[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    v5 = 0;
    v4 = 0;
  }
  sub_100065228(a2, (uint64_t)v43, &qword_1011E6B60);
  if (!v43[3])
  {
    if (!v4)
      goto LABEL_15;
    goto LABEL_11;
  }
  v6 = v43[0];
  v7 = v43[1];
  swift_bridgeObjectRetain();
  if (v4)
  {
    if (v7)
    {
      if (v5 == v6 && v4 == v7)
      {
        swift_bridgeObjectRelease(v7);
        swift_bridgeObjectRelease(v4);
      }
      else
      {
        v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v4, v6, v7, 0);
        swift_bridgeObjectRelease(v7);
        swift_bridgeObjectRelease(v4);
        if ((v8 & 1) == 0)
          return 1;
      }
      goto LABEL_15;
    }
LABEL_11:
    swift_bridgeObjectRelease(v4);
    return 1;
  }
  if (v7)
  {
    swift_bridgeObjectRelease(v7);
    return 1;
  }
LABEL_15:
  sub_100065228(a1, (uint64_t)v41, &qword_1011E6B60);
  v9 = v42;
  if (v42)
  {
    v10 = v42;
    sub_100065228(a2, (uint64_t)v39, &qword_1011E6B60);
    v11 = v40;
    if (!v40)
    {

      return 1;
    }
    v12 = v40;
    v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v15 = v14;
    v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v18 = v16;
    if (v13 == v17 && v15 == v16)
    {
      swift_bridgeObjectRelease_n(v15, 2);

    }
    else
    {
      v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v15, v17, v16, 0);
      swift_bridgeObjectRelease(v18);
      swift_bridgeObjectRelease(v15);

      if ((v19 & 1) == 0)
        return 1;
    }
  }
  else
  {
    sub_100065228(a2, (uint64_t)v39, &qword_1011E6B60);
    if (v40)
      return 1;
  }
  sub_100065228(a2, (uint64_t)v36, &qword_1011E6B60);
  v20 = v37;
  v21 = v38;
  sub_100065228(a1, (uint64_t)v33, &qword_1011E6B60);
  if (v34)
  {
    if (v20)
      v22 = v21;
    else
      v22 = 0;
    result = 1;
    if (!v20 || v35 != v22)
      return result;
    goto LABEL_34;
  }
  if (v20)
    return 1;
LABEL_34:
  sub_100065228(a2, (uint64_t)v30, &qword_1011E6B60);
  v24 = v31;
  v25 = v32;
  sub_100065228(a1, (uint64_t)&v27, &qword_1011E6B60);
  v26 = (v28 | v24) == 0;
  if (v28)
  {
    if (v24)
      v26 = v29 == v25;
  }
  return !v26;
}

uint64_t sub_100CD0DD0(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  double v22;
  double v23;
  char v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  char v30;
  _QWORD v32[9];
  char v33[16];
  uint64_t v34;
  id v35;
  char v36[16];
  uint64_t v37;
  double v38;
  char v39[16];
  uint64_t v40;
  double v41;
  _BYTE v42[16];
  id v43;
  char v44[16];
  id v45;
  _QWORD v46[9];
  _QWORD v47[9];

  sub_100065228(a1, (uint64_t)v32, &qword_1011E6B58);
  v4 = (void *)v32[7];
  sub_100065228(a1, (uint64_t)v47, &qword_1011E6B58);
  if (v47[2])
  {
    v6 = v47[0];
    v5 = v47[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  sub_100065228(a2, (uint64_t)v46, &qword_1011E6B58);
  if (!v46[2])
  {
    if (!v5)
      goto LABEL_15;
    goto LABEL_11;
  }
  v8 = v46[0];
  v7 = v46[1];
  swift_bridgeObjectRetain();
  if (v5)
  {
    if (v7)
    {
      if (v6 == v8 && v5 == v7)
      {
        swift_bridgeObjectRelease(v7);
        swift_bridgeObjectRelease(v5);
      }
      else
      {
        v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v5, v8, v7, 0);
        swift_bridgeObjectRelease(v7);
        swift_bridgeObjectRelease(v5);
        if ((v9 & 1) == 0)
          goto LABEL_40;
      }
      goto LABEL_15;
    }
LABEL_11:
    swift_bridgeObjectRelease(v5);
    goto LABEL_40;
  }
  if (v7)
  {
    swift_bridgeObjectRelease(v7);
    goto LABEL_40;
  }
LABEL_15:
  sub_100065228(a1, (uint64_t)v44, &qword_1011E6B58);
  v10 = v45;
  if (v45)
  {
    v11 = v45;
    sub_100065228(a2, (uint64_t)v42, &qword_1011E6B58);
    v12 = v43;
    if (!v43)
    {

      goto LABEL_40;
    }
    v13 = v43;
    v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v16 = v15;
    v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
    v19 = v17;
    if (v14 == v18 && v16 == v17)
    {
      swift_bridgeObjectRelease_n(v16, 2);

    }
    else
    {
      v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v16, v18, v17, 0);
      swift_bridgeObjectRelease(v19);
      swift_bridgeObjectRelease(v16);

      if ((v20 & 1) == 0)
        goto LABEL_40;
    }
  }
  else
  {
    sub_100065228(a2, (uint64_t)v42, &qword_1011E6B58);
    if (v43)
      goto LABEL_40;
  }
  sub_100065228(a2, (uint64_t)v39, &qword_1011E6B58);
  v21 = v40;
  v22 = v41;
  sub_100065228(a1, (uint64_t)v36, &qword_1011E6B58);
  if (!v37)
  {
    if (!v21)
    {
      v4 = 0;
LABEL_32:
      sub_100065228(a2, (uint64_t)v33, &qword_1011E6B58);
      if (v34)
      {
        v26 = v35;
        v27 = v35;
        v28 = v27;
        if (v4)
        {
          if (v26)
          {
            sub_10004A07C(0, (unint64_t *)&qword_1011E6AE0, UIColor_ptr);
            v29 = v4;
            v30 = static NSObject.== infix(_:_:)(v29, v28);

            v24 = v30 ^ 1;
            return v24 & 1;
          }
          goto LABEL_37;
        }
        if (v26)
        {

          goto LABEL_40;
        }
      }
      else if (v4)
      {
LABEL_37:

        goto LABEL_40;
      }
      v24 = 0;
      return v24 & 1;
    }
LABEL_40:
    v24 = 1;
    return v24 & 1;
  }
  v23 = 0.0;
  if (v21)
    v23 = v22;
  v24 = 1;
  if (v21 && v38 == v23)
  {
    v25 = v4;
    goto LABEL_32;
  }
  return v24 & 1;
}

void _s11MusicCoreUI12SymbolButtonC5coderACSgSo7NSCoderC_tcfc_0()
{
  _BYTE *v0;
  _BYTE *v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  objc_class *v9;
  id v10;
  uint64_t v11;
  double v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  char *v17;
  uint64_t v18;
  char v19[24];
  objc_super v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_debugLabel];
  *v2 = 0;
  v2[1] = 0;
  v3 = &v0[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_configurationProvider];
  *v3 = 0;
  v3[1] = 0;
  v4 = &v0[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_handler];
  *v4 = 0;
  v4[1] = 0;
  v0[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHighlighted] = 1;
  v0[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenSelected] = 1;
  v0[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenDisabled] = 1;
  v0[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHidden] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_pendingAnimatedChangesCount] = 0;
  v5 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_hitRectMinimumSize;
  if (qword_1011DE2F0 != -1)
    swift_once(&qword_1011DE2F0, sub_100CCDB7C);
  *(_OWORD *)&v1[v5] = static SymbolButton.Configuration.hitRectMinimumSize;
  v6 = &v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_buildMenu];
  *v6 = 0;
  v6[1] = 0;
  v7 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_containerView;
  *(_QWORD *)&v1[v7] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v8 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_materialView;
  v21 = 1;
  v9 = (objc_class *)type metadata accessor for SymbolButton.MaterialView();
  v22 = 0u;
  v23 = 0u;
  v24 = 0;
  v20.receiver = objc_allocWithZone(v9);
  v20.super_class = v9;
  v10 = objc_msgSendSuper2(&v20, "initWithEffect:", 0);
  sub_100CCC1B8((uint64_t)&v21);

  *(_QWORD *)&v1[v8] = v10;
  v11 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_backgroundView;
  if (qword_1011DE2C8 != -1)
    swift_once(&qword_1011DE2C8, sub_100CC6F80);
  swift_beginAccess(&static SymbolButton.Background.clear, v19, 0, 0);
  v12 = *(double *)&static SymbolButton.Background.clear;
  v13 = (void *)qword_101250118;
  v14 = qword_101250120;
  v15 = qword_101250128;
  objc_allocWithZone((Class)type metadata accessor for SymbolButton.BackgroundView());
  swift_bridgeObjectRetain();
  v16 = v13;
  *(_QWORD *)&v1[v11] = sub_100CCC5A4(v13, v12, v14, v15);
  *(_QWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___imageView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_customView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView] = 0;
  v17 = &v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___metrics];
  v18 = type metadata accessor for SymbolButton.Metrics(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_isClippingInvalidated] = 1;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100E2B820, "MusicCoreUI/SymbolButton.swift", 30, 2, 60, 0);
  __break(1u);
}

uint64_t sub_100CD13A0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100CD13C4()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  id *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  id *v23;
  void *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v28;

  v1 = (int *)type metadata accessor for SymbolButton.Configuration(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v7 = *(void **)(v0 + v4 + 200);
  if (v7 != (void *)1)
  {

    swift_bridgeObjectRelease();
  }
  v8 = *(void **)(v6 + 224);
  if (v8 != (void *)1)
  {

    swift_bridgeObjectRelease();
  }
  v28 = v5;
  v9 = v5 + v3;

  v10 = v6 + v1[9];
  v11 = type metadata accessor for UIView.Corner(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (!v13(v10, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  v14 = v9 + v4;
  v15 = (id *)(v6 + v1[10]);
  if (*v15)
  {

  }
  v16 = v14 & ~v3;
  v17 = *(void **)(v6 + v1[11] + 16);
  if (v17 != (void *)1)

  v18 = v6 + v1[16];
  v19 = v0 + v16;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v20 = *(void **)(v0 + v16 + 200);
  if (v20 != (void *)1)
  {

    swift_bridgeObjectRelease();
  }
  v21 = *(void **)(v19 + 224);
  if (v21 != (void *)1)
  {

    swift_bridgeObjectRelease();
  }

  v22 = v19 + v1[9];
  if (!v13(v22, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v22, v11);
  v23 = (id *)(v19 + v1[10]);
  if (*v23)
  {

  }
  v24 = *(void **)(v19 + v1[11] + 16);
  if (v24 != (void *)1)

  v25 = (v28 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v26 = v19 + v1[16];

  return swift_deallocObject(v0, ((v25 + 15) & 0xFFFFFFFFFFFFFFF8) + 8);
}

void sub_100CD16AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(type metadata accessor for SymbolButton.Configuration(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  sub_100CC3FCC((uint64_t *)(v0 + v3), v0 + ((v4 + v2 + v3) & ~v2), *(char **)(v0 + ((v4 + ((v4 + v2 + v3) & ~v2) + 7) & 0xFFFFFFFFFFFFFFF8)), *(char ***)(v0 + ((((v4 + ((v4 + v2 + v3) & ~v2) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_100CD1708()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100CD1718(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100CD1728(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_100CD1730()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  id *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  id *v23;
  void *v24;
  uint64_t v25;
  uint64_t v27;

  v1 = (int *)type metadata accessor for SymbolButton.Configuration(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);

  v6 = v0 + v4;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v7 = *(void **)(v0 + v4 + 200);
  if (v7 != (void *)1)
  {

    swift_bridgeObjectRelease();
  }
  v8 = *(void **)(v6 + 224);
  if (v8 != (void *)1)
  {

    swift_bridgeObjectRelease();
  }
  v27 = v5;
  v9 = v5 + v3;

  v10 = v6 + v1[9];
  v11 = type metadata accessor for UIView.Corner(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (!v13(v10, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  v14 = v9 + v4;
  v15 = (id *)(v6 + v1[10]);
  if (*v15)
  {

  }
  v16 = v14 & ~v3;
  v17 = *(void **)(v6 + v1[11] + 16);
  if (v17 != (void *)1)

  v18 = v6 + v1[16];
  v19 = v0 + v16;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v20 = *(void **)(v0 + v16 + 200);
  if (v20 != (void *)1)
  {

    swift_bridgeObjectRelease();
  }
  v21 = *(void **)(v19 + 224);
  if (v21 != (void *)1)
  {

    swift_bridgeObjectRelease();
  }

  v22 = v19 + v1[9];
  if (!v13(v22, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v22, v11);
  v23 = (id *)(v19 + v1[10]);
  if (*v23)
  {

  }
  v24 = *(void **)(v19 + v1[11] + 16);
  if (v24 != (void *)1)

  v25 = v19 + v1[16];
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, ((((v27 + v16 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8);
}

uint64_t sub_100CD1A28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(type metadata accessor for SymbolButton.Configuration(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 24) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  return sub_100CC4A74(*(void **)(v0 + 16), v0 + v3, v0 + ((v4 + v2 + v3) & ~v2), *(_QWORD *)(v0 + ((v4 + ((v4 + v2 + v3) & ~v2) + 7) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((((v4 + ((v4 + v2 + v3) & ~v2) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_100CD1A88()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 64, 7);
}

void sub_100CD1AC4(uint64_t a1)
{
  uint64_t v1;

  sub_100CC5CD0(a1, *(_QWORD *)(v1 + 16), *(char **)(v1 + 24), *(_QWORD *)(v1 + 32), *(char **)(v1 + 40), *(char **)(v1 + 48));
}

uint64_t sub_100CD1AD4(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for SymbolButton.Symbol(a2, a1);
  return a2;
}

uint64_t sub_100CD1B08(uint64_t a1, uint64_t a2)
{
  assignWithTake for SymbolButton.Symbol(a2, a1);
  return a2;
}

uint64_t sub_100CD1B3C(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for SymbolButton.Title(a2, a1);
  return a2;
}

uint64_t sub_100CD1B70(uint64_t a1, uint64_t a2)
{
  assignWithTake for SymbolButton.Title(a2, a1);
  return a2;
}

id sub_100CD1BA4(uint64_t a1, void *a2)
{
  id result;

  if (a2 != (void *)1)
  {
    swift_bridgeObjectRetain();
    return a2;
  }
  return result;
}

id sub_100CD1BD8(uint64_t a1, uint64_t a2, void *a3)
{
  id result;

  if (a3 != (void *)1)
    return a3;
  return result;
}

uint64_t sub_100CD1BE8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

id sub_100CD1C0C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "setEnabled:", *(unsigned __int8 *)(v0 + 24));
}

uint64_t sub_100CD1C20()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

BOOL sub_100CD1C30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _BOOL8 result;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  double v22;
  _QWORD v23[9];
  _BYTE v24[16];
  uint64_t v25;
  double v26;
  _BYTE v27[16];
  id v28;
  _BYTE v29[16];
  id v30;
  _QWORD v31[9];
  _QWORD v32[9];

  sub_100065228(a1, (uint64_t)v32, &qword_1011E6B58);
  if (v32[2])
  {
    v5 = v32[0];
    v4 = v32[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    v5 = 0;
    v4 = 0;
  }
  sub_100065228(a2, (uint64_t)v31, &qword_1011E6B58);
  if (!v31[2])
  {
    if (!v4)
      goto LABEL_15;
    goto LABEL_11;
  }
  v7 = v31[0];
  v6 = v31[1];
  swift_bridgeObjectRetain();
  if (v4)
  {
    if (v6)
    {
      if (v5 == v7 && v4 == v6)
      {
        swift_bridgeObjectRelease(v6);
        swift_bridgeObjectRelease(v4);
      }
      else
      {
        v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v4, v7, v6, 0);
        swift_bridgeObjectRelease(v6);
        swift_bridgeObjectRelease(v4);
        result = 0;
        if ((v8 & 1) == 0)
          return result;
      }
      goto LABEL_15;
    }
LABEL_11:
    swift_bridgeObjectRelease(v4);
    return 0;
  }
  if (v6)
  {
    swift_bridgeObjectRelease(v6);
    return 0;
  }
LABEL_15:
  sub_100065228(a1, (uint64_t)v29, &qword_1011E6B58);
  v10 = v30;
  if (v30)
  {
    v11 = v30;
    sub_100065228(a2, (uint64_t)v27, &qword_1011E6B58);
    v12 = v28;
    if (!v28)
    {

      return 0;
    }
    v13 = v28;
    v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v16 = v15;
    v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
    v19 = v17;
    if (v14 == v18 && v16 == v17)
    {
      swift_bridgeObjectRelease_n(v16, 2);

    }
    else
    {
      v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v16, v18, v17, 0);
      swift_bridgeObjectRelease(v19);
      swift_bridgeObjectRelease(v16);

      result = 0;
      if ((v20 & 1) == 0)
        return result;
    }
  }
  else
  {
    sub_100065228(a2, (uint64_t)v27, &qword_1011E6B58);
    if (v28)
      return 0;
  }
  sub_100065228(a2, (uint64_t)v24, &qword_1011E6B58);
  v21 = v25;
  v22 = v26;
  sub_100065228(a1, (uint64_t)v23, &qword_1011E6B58);
  if (!v23[2])
    return !v21;
  result = 0;
  if (v21 && *(double *)&v23[3] == v22)
    return 1;
  return result;
}

id _s11MusicCoreUI12SymbolButtonC22contextMenuInteraction_016configurationForG10AtLocationSo09UIContextG13ConfigurationCSgSo0mgH0C_So7CGPointVtF_0()
{
  char *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  void *v6;
  char *v7;
  id v8;
  _QWORD aBlock[6];
  char v11[24];

  v1 = (uint64_t *)&v0[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_buildMenu];
  swift_beginAccess(&v0[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_buildMenu], v11, 0, 0);
  v2 = *v1;
  if (!*v1)
    return 0;
  v3 = v1[1];
  v4 = (_QWORD *)swift_allocObject(&unk_10110F468, 40, 7);
  v4[2] = v2;
  v4[3] = v3;
  v4[4] = v0;
  v5 = (void *)objc_opt_self(UIContextMenuConfiguration);
  aBlock[4] = sub_10027EAC0;
  aBlock[5] = v4;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100CCEE8C;
  aBlock[3] = &unk_10110F480;
  v6 = _Block_copy(aBlock);
  sub_100048AAC(v2, v3);
  sub_100048AAC(v2, v3);
  v7 = v0;
  swift_retain();
  v8 = objc_msgSend(v5, "configurationWithIdentifier:previewProvider:actionProvider:", 0, 0, v6, swift_release().n128_f64[0]);
  swift_release();
  _Block_release(v6);
  objc_msgSend(v8, "setPreferredMenuElementOrder:", 2);
  sub_10004BA30(v2, v3);
  return v8;
}

uint64_t _s11MusicCoreUI12SymbolButtonC18pointerInteraction_8styleForSo14UIPointerStyleCSgSo0jG0C_So0J6RegionCtF_0(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  _QWORD *v17;
  id v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  unsigned int *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  double v39;
  char *v40;
  id v41;
  double v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  id v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char v55[24];

  v3 = type metadata accessor for UIView.Corner.Radius(0);
  v52 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v51 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007E8C(&qword_1011E6AF8);
  __chkstk_darwin();
  v6 = (double *)((char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin();
  v12 = (char *)&v48 - v11;
  v53 = type metadata accessor for UIPointerEffect(0, v10);
  v13 = *(_QWORD *)(v53 - 8);
  __chkstk_darwin();
  v54 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v15 = __chkstk_darwin().n128_u64[0];
  v17 = (uint64_t *)((char *)&v48 - v16);
  v18 = objc_msgSend(a1, "view", v15);
  if (!v18)
    return 0;
  v19 = v18;
  if (!objc_msgSend(v1, "isUserInteractionEnabled"))
  {

    return 0;
  }
  v50 = v3;
  v20 = (uint64_t)&v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration];
  swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration], v55, 0, 0);
  sub_10005B704(v20, (uint64_t)v12, type metadata accessor for SymbolButton.Configuration);
  v21 = (void *)*((_QWORD *)v12 + 28);
  if (v21 == (void *)1)
  {
    sub_10005B748((uint64_t)v12, type metadata accessor for SymbolButton.Configuration);
LABEL_9:
    v23 = (unsigned int *)&enum case for UIPointerEffect.lift(_:);
    if (*(_QWORD *)(v20 + 200) == 1 && !*(_QWORD *)(v20 + *(int *)(v7 + 40)))
      v23 = (unsigned int *)&enum case for UIPointerEffect.highlight(_:);
    goto LABEL_12;
  }
  v49 = v21;
  sub_10005B748((uint64_t)v12, type metadata accessor for SymbolButton.Configuration);
  if (!v21)
    goto LABEL_9;

  v23 = (unsigned int *)&enum case for UIPointerEffect.lift(_:);
LABEL_12:
  *v17 = objc_msgSend(objc_allocWithZone((Class)UITargetedPreview), "initWithView:", v19);
  v24 = v53;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v13 + 104))(v17, *v23, v53);
  (*(void (**)(char *, _QWORD *, uint64_t))(v13 + 16))(v54, v17, v24);
  v25 = v1;
  objc_msgSend(v1, "bounds");
  v27 = v26;
  v29 = v28;
  v31 = v30;
  v33 = v32;
  sub_10005B704(v20, (uint64_t)v9, type metadata accessor for SymbolButton.Configuration);
  v34 = &v9[*(int *)(v7 + 36)];
  v35 = type metadata accessor for UIView.Corner(0);
  v36 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 48))(v34, 1, v35);
  v37 = v50;
  if ((_DWORD)v36)
  {
    v38 = sub_10005B748((uint64_t)v9, type metadata accessor for SymbolButton.Configuration);
    v39 = static UIPointerShape.defaultCornerRadius.getter(v38);
  }
  else
  {
    v40 = v51;
    UIView.Corner.radius.getter(v36);
    sub_10005B748((uint64_t)v9, type metadata accessor for SymbolButton.Configuration);
    v41 = objc_msgSend(v25, "bounds");
    v39 = UIView.Corner.Radius.value(in:)(v41, v42, v43);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v40, v37);
  }
  sub_10004A07C(0, &qword_1011E6B00, UIPointerStyle_ptr);
  *(_QWORD *)v6 = v27;
  *((_QWORD *)v6 + 1) = v29;
  *((_QWORD *)v6 + 2) = v31;
  *((_QWORD *)v6 + 3) = v33;
  v6[4] = v39;
  v44 = enum case for UIPointerShape.roundedRect(_:);
  v45 = type metadata accessor for UIPointerShape(0);
  v46 = *(_QWORD *)(v45 - 8);
  (*(void (**)(double *, uint64_t, uint64_t))(v46 + 104))(v6, v44, v45);
  (*(void (**)(double *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v6, 0, 1, v45);
  v22 = UIPointerStyle.init(effect:shape:)(v54, v6);

  (*(void (**)(_QWORD *, uint64_t))(v13 + 8))(v17, v53);
  return v22;
}

unint64_t sub_100CD2444(uint64_t a1)
{
  unint64_t result;

  result = sub_100CD2468();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100CD2468()
{
  unint64_t result;

  result = qword_1011E66B8;
  if (!qword_1011E66B8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SymbolButton.Symbol, &type metadata for SymbolButton.Symbol);
    atomic_store(result, (unint64_t *)&qword_1011E66B8);
  }
  return result;
}

unint64_t sub_100CD24AC(uint64_t a1)
{
  unint64_t result;

  result = sub_100CD24D0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100CD24D0()
{
  unint64_t result;

  result = qword_1011E66C0;
  if (!qword_1011E66C0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SymbolButton.Title, &type metadata for SymbolButton.Title);
    atomic_store(result, (unint64_t *)&qword_1011E66C0);
  }
  return result;
}

unint64_t sub_100CD2514(uint64_t a1)
{
  unint64_t result;

  result = sub_100CD2538();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100CD2538()
{
  unint64_t result;

  result = qword_1011E66C8;
  if (!qword_1011E66C8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SymbolButton.Background, &type metadata for SymbolButton.Background);
    atomic_store(result, (unint64_t *)&qword_1011E66C8);
  }
  return result;
}

unint64_t sub_100CD2580()
{
  unint64_t result;

  result = qword_1011E66D0;
  if (!qword_1011E66D0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SymbolButton.Material.Color, &type metadata for SymbolButton.Material.Color);
    atomic_store(result, (unint64_t *)&qword_1011E66D0);
  }
  return result;
}

unint64_t sub_100CD25C4(uint64_t a1)
{
  unint64_t result;

  result = sub_100CD25E8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100CD25E8()
{
  unint64_t result;

  result = qword_1011E66D8;
  if (!qword_1011E66D8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SymbolButton.CustomView, &type metadata for SymbolButton.CustomView);
    atomic_store(result, (unint64_t *)&qword_1011E66D8);
  }
  return result;
}

unint64_t sub_100CD262C(uint64_t a1)
{
  unint64_t result;

  result = sub_100CD2650();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100CD2650()
{
  unint64_t result;

  result = qword_1011E66E0;
  if (!qword_1011E66E0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SymbolButton.Badge, &type metadata for SymbolButton.Badge);
    atomic_store(result, (unint64_t *)&qword_1011E66E0);
  }
  return result;
}

uint64_t sub_100CD2694()
{
  return type metadata accessor for SymbolButton(0);
}

void sub_100CD269C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[20];

  v6[0] = &unk_100EF3828;
  v6[1] = &unk_100EF3828;
  v6[2] = &unk_100EF3828;
  v6[3] = &unk_100EF3840;
  v6[4] = &unk_100EF3840;
  v6[5] = &unk_100EF3840;
  v6[6] = &unk_100EF3840;
  v2 = type metadata accessor for SymbolButton.Configuration(319);
  if (v3 <= 0x3F)
  {
    v6[7] = *(_QWORD *)(v2 - 8) + 64;
    v6[8] = (char *)&value witness table for Builtin.Int64 + 64;
    v6[9] = &unk_100EF3858;
    v6[10] = &unk_100EF3828;
    v6[11] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v6[12] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v6[13] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v6[14] = &unk_100EF3870;
    v6[15] = &unk_100EF3870;
    v6[16] = &unk_100EF3870;
    v6[17] = &unk_100EF3870;
    sub_10015C698(319, &qword_1011E6720, type metadata accessor for SymbolButton.Metrics);
    if (v5 <= 0x3F)
    {
      v6[18] = *(_QWORD *)(v4 - 8) + 64;
      v6[19] = &unk_100EF3840;
      swift_updateClassMetadata2(a1, 256, 20, v6, a1 + 80);
    }
  }
}

ValueMetadata *type metadata accessor for SymbolButton.Animation()
{
  return &type metadata for SymbolButton.Animation;
}

double destroy for SymbolButton.Update(_QWORD *a1)
{
  double result;

  if (*a1)
    *(_QWORD *)&result = swift_release(a1[1]).n128_u64[0];
  if (a1[4])
    *(_QWORD *)&result = swift_release(a1[5]).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for SymbolButton.Update(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (*(_QWORD *)a2)
  {
    v4 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v4;
    swift_retain(v4);
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  v5 = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  if (v5)
  {
    v6 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = v5;
    *(_QWORD *)(a1 + 40) = v6;
    swift_retain(v6);
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  }
  return a1;
}

_QWORD *assignWithCopy for SymbolButton.Update(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *a2;
  if (*a1)
  {
    if (v4)
    {
      v5 = a2[1];
      v6 = a1[1];
      *a1 = v4;
      a1[1] = v5;
      swift_retain(v5);
      swift_release(v6);
      goto LABEL_8;
    }
    swift_release(a1[1]);
  }
  else if (v4)
  {
    v7 = a2[1];
    *a1 = v4;
    a1[1] = v7;
    swift_retain(v7);
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  v8 = a1[4];
  a1[2] = a2[2];
  a1[3] = a2[3];
  v9 = a2[4];
  if (!v8)
  {
    if (v9)
    {
      v12 = a2[5];
      a1[4] = v9;
      a1[5] = v12;
      swift_retain(v12);
      return a1;
    }
LABEL_14:
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
    return a1;
  }
  if (!v9)
  {
    swift_release(a1[5]);
    goto LABEL_14;
  }
  v10 = a2[5];
  v11 = a1[5];
  a1[4] = v9;
  a1[5] = v10;
  swift_retain(v10);
  swift_release(v11);
  return a1;
}

uint64_t assignWithTake for SymbolButton.Update(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *a2;
  if (*(_QWORD *)a1)
  {
    if (v4)
    {
      v5 = a2[1];
      v6 = *(_QWORD *)(a1 + 8);
      *(_QWORD *)a1 = v4;
      *(_QWORD *)(a1 + 8) = v5;
      swift_release(v6);
      goto LABEL_8;
    }
    swift_release(*(_QWORD *)(a1 + 8));
  }
  else if (v4)
  {
    v7 = a2[1];
    *(_QWORD *)a1 = v4;
    *(_QWORD *)(a1 + 8) = v7;
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  v8 = a2[4];
  v9 = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
  if (!v9)
  {
    if (v8)
    {
      v12 = a2[5];
      *(_QWORD *)(a1 + 32) = v8;
      *(_QWORD *)(a1 + 40) = v12;
      return a1;
    }
LABEL_14:
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    return a1;
  }
  if (!v8)
  {
    swift_release(*(_QWORD *)(a1 + 40));
    goto LABEL_14;
  }
  v10 = a2[5];
  v11 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v10;
  swift_release(v11);
  return a1;
}

ValueMetadata *type metadata accessor for SymbolButton.Update()
{
  return &type metadata for SymbolButton.Update;
}

ValueMetadata *type metadata accessor for SymbolButton.Update.AnimationOptions()
{
  return &type metadata for SymbolButton.Update.AnimationOptions;
}

uint64_t initializeBufferWithCopyOfBuffer for SymbolButton.Configuration(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void *v8;
  __int128 v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  __int128 v26;
  void *v27;
  void *v28;
  uint64_t v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  uint64_t v34;
  void *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int (*v39)(const void *, uint64_t, uint64_t);
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  void *v46;
  id v47;
  id v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _OWORD *v60;
  _OWORD *v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  id v72;
  id v73;
  id v74;
  void *v76;
  void *v77;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v22 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = (void *)a2[2];
    v77 = (void *)a2[3];
    *(_QWORD *)(a1 + 16) = v8;
    *(_QWORD *)(a1 + 24) = v77;
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
    *(_BYTE *)(a1 + 80) = *((_BYTE *)a2 + 80);
    v9 = *((_OWORD *)a2 + 4);
    *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 64) = v9;
    v10 = a2[12];
    *(_QWORD *)(a1 + 88) = a2[11];
    *(_QWORD *)(a1 + 96) = v10;
    v11 = (void *)a2[14];
    *(_QWORD *)(a1 + 104) = a2[13];
    *(_QWORD *)(a1 + 112) = v11;
    v12 = a2[16];
    *(_QWORD *)(a1 + 120) = a2[15];
    *(_QWORD *)(a1 + 128) = v12;
    v13 = (void *)a2[17];
    *(_QWORD *)(a1 + 136) = v13;
    *(_OWORD *)(a1 + 144) = *((_OWORD *)a2 + 9);
    v14 = a2[21];
    *(_QWORD *)(a1 + 160) = a2[20];
    *(_QWORD *)(a1 + 168) = v14;
    v15 = (void *)a2[22];
    *(_QWORD *)(a1 + 176) = v15;
    *(_BYTE *)(a1 + 184) = *((_BYTE *)a2 + 184);
    v76 = (void *)a2[25];
    swift_bridgeObjectRetain();
    v16 = v8;
    v17 = v77;
    swift_bridgeObjectRetain();
    v18 = v11;
    swift_bridgeObjectRetain();
    v19 = v13;
    swift_bridgeObjectRetain();
    v20 = v15;
    if (v76 == (void *)1)
    {
      v21 = *((_OWORD *)a2 + 13);
      *(_OWORD *)(a1 + 192) = *((_OWORD *)a2 + 12);
      *(_OWORD *)(a1 + 208) = v21;
    }
    else
    {
      *(_QWORD *)(a1 + 192) = a2[24];
      *(_QWORD *)(a1 + 200) = v76;
      v23 = a2[27];
      *(_QWORD *)(a1 + 208) = a2[26];
      *(_QWORD *)(a1 + 216) = v23;
      v24 = v76;
      swift_bridgeObjectRetain();
    }
    v25 = (void *)a2[28];
    if (v25 == (void *)1)
    {
      v26 = *((_OWORD *)a2 + 15);
      *(_OWORD *)(a1 + 224) = *((_OWORD *)a2 + 14);
      *(_OWORD *)(a1 + 240) = v26;
      *(_OWORD *)(a1 + 256) = *((_OWORD *)a2 + 16);
    }
    else
    {
      v27 = (void *)a2[29];
      v28 = (void *)a2[30];
      *(_QWORD *)(a1 + 224) = v25;
      *(_QWORD *)(a1 + 232) = v27;
      *(_QWORD *)(a1 + 240) = v28;
      *(_BYTE *)(a1 + 248) = *((_BYTE *)a2 + 248);
      v29 = a2[33];
      *(_QWORD *)(a1 + 256) = a2[32];
      *(_QWORD *)(a1 + 264) = v29;
      v30 = v25;
      v31 = v27;
      v32 = v28;
      swift_bridgeObjectRetain();
    }
    *(_QWORD *)(a1 + 272) = a2[34];
    *(_BYTE *)(a1 + 280) = *((_BYTE *)a2 + 280);
    v33 = (void *)a2[36];
    *(_QWORD *)(a1 + 288) = v33;
    v34 = a3[9];
    v35 = (void *)(a1 + v34);
    v36 = (char *)a2 + v34;
    v37 = type metadata accessor for UIView.Corner(0);
    v38 = *(_QWORD *)(v37 - 8);
    v39 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v38 + 48);
    v40 = v33;
    if (v39(v36, 1, v37))
    {
      v41 = sub_100007E8C(&qword_1011E6620);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v38 + 16))(v35, v36, v37);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
    }
    v42 = a3[10];
    v43 = a1 + v42;
    v44 = (uint64_t)a2 + v42;
    v45 = *(void **)v44;
    if (*(_QWORD *)v44)
    {
      *(_QWORD *)v43 = v45;
      *(_OWORD *)(v43 + 8) = *(_OWORD *)(v44 + 8);
      *(_OWORD *)(v43 + 24) = *(_OWORD *)(v44 + 24);
      v46 = *(void **)(v44 + 48);
      *(_QWORD *)(v43 + 40) = *(_QWORD *)(v44 + 40);
      *(_QWORD *)(v43 + 48) = v46;
      v47 = v45;
      v48 = v46;
    }
    else
    {
      v49 = *(_OWORD *)(v44 + 16);
      *(_OWORD *)v43 = *(_OWORD *)v44;
      *(_OWORD *)(v43 + 16) = v49;
      *(_OWORD *)(v43 + 32) = *(_OWORD *)(v44 + 32);
      *(_QWORD *)(v43 + 48) = *(_QWORD *)(v44 + 48);
    }
    v50 = a3[11];
    v51 = a1 + v50;
    v52 = (uint64_t)a2 + v50;
    v53 = *(void **)(v52 + 16);
    *(_OWORD *)v51 = *(_OWORD *)v52;
    if (v53 == (void *)1)
    {
      *(_QWORD *)(v51 + 16) = *(_QWORD *)(v52 + 16);
    }
    else
    {
      *(_QWORD *)(v51 + 16) = v53;
      v54 = v53;
    }
    v55 = a3[13];
    *(_QWORD *)(a1 + a3[12]) = *(uint64_t *)((char *)a2 + a3[12]);
    *(_OWORD *)(a1 + v55) = *(_OWORD *)((char *)a2 + v55);
    v56 = a3[14];
    v57 = a3[15];
    v58 = a1 + v56;
    v59 = (uint64_t)a2 + v56;
    *(_OWORD *)v58 = *(_OWORD *)v59;
    *(_BYTE *)(v58 + 16) = *(_BYTE *)(v59 + 16);
    v60 = (_OWORD *)(a1 + v57);
    v61 = (_OWORD *)((char *)a2 + v57);
    v62 = v61[1];
    *v60 = *v61;
    v60[1] = v62;
    v63 = a3[16];
    v64 = a3[17];
    v65 = a1 + v63;
    v66 = (uint64_t)a2 + v63;
    *(_BYTE *)v65 = *(_BYTE *)v66;
    *(_BYTE *)(v65 + 24) = *(_BYTE *)(v66 + 24);
    v67 = *(void **)(v66 + 8);
    v68 = *(void **)(v66 + 16);
    *(_QWORD *)(v65 + 8) = v67;
    *(_QWORD *)(v65 + 16) = v68;
    *(_QWORD *)(a1 + v64) = *(uint64_t *)((char *)a2 + v64);
    v69 = a3[18];
    v70 = a3[19];
    v71 = *(void **)((char *)a2 + v69);
    *(_QWORD *)(a1 + v69) = v71;
    *(_BYTE *)(a1 + v70) = *((_BYTE *)a2 + v70);
    v72 = v67;
    v73 = v68;
    v74 = v71;
  }
  return a1;
}

void destroy for SymbolButton.Configuration(uint64_t a1, int *a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id *v9;
  void *v10;
  uint64_t v11;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 96));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 128));

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 160));
  v4 = *(void **)(a1 + 200);
  if (v4 != (void *)1)
  {

    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 216));
  }
  v5 = *(void **)(a1 + 224);
  if (v5 != (void *)1)
  {

    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 264));
  }

  v6 = a1 + a2[9];
  v7 = type metadata accessor for UIView.Corner(0);
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  v9 = (id *)(a1 + a2[10]);
  if (*v9)
  {

  }
  v10 = *(void **)(a1 + a2[11] + 16);
  if (v10 != (void *)1)

  v11 = a1 + a2[16];
}

uint64_t initializeWithCopy for SymbolButton.Configuration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  void *v6;
  void *v7;
  __int128 v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  __int128 v20;
  uint64_t v21;
  id v22;
  void *v23;
  __int128 v24;
  void *v25;
  void *v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  void *v31;
  uint64_t v32;
  void *v33;
  const void *v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(const void *, uint64_t, uint64_t);
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  void *v44;
  id v45;
  id v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _OWORD *v58;
  _OWORD *v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  id v70;
  id v71;
  id v72;
  void *v75;

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(void **)(a2 + 16);
  v7 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v8 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v8;
  v9 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v9;
  v10 = *(void **)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v10;
  v11 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v11;
  v12 = *(void **)(a2 + 136);
  *(_QWORD *)(a1 + 136) = v12;
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  v13 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v13;
  v14 = *(void **)(a2 + 176);
  *(_QWORD *)(a1 + 176) = v14;
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  v75 = *(void **)(a2 + 200);
  swift_bridgeObjectRetain();
  v15 = v6;
  v16 = v7;
  swift_bridgeObjectRetain();
  v17 = v10;
  swift_bridgeObjectRetain();
  v18 = v12;
  swift_bridgeObjectRetain();
  v19 = v14;
  if (v75 == (void *)1)
  {
    v20 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v20;
  }
  else
  {
    *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
    *(_QWORD *)(a1 + 200) = v75;
    v21 = *(_QWORD *)(a2 + 216);
    *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
    *(_QWORD *)(a1 + 216) = v21;
    v22 = v75;
    swift_bridgeObjectRetain();
  }
  v23 = *(void **)(a2 + 224);
  if (v23 == (void *)1)
  {
    v24 = *(_OWORD *)(a2 + 240);
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 240) = v24;
    *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  }
  else
  {
    v25 = *(void **)(a2 + 232);
    v26 = *(void **)(a2 + 240);
    *(_QWORD *)(a1 + 224) = v23;
    *(_QWORD *)(a1 + 232) = v25;
    *(_QWORD *)(a1 + 240) = v26;
    *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
    v27 = *(_QWORD *)(a2 + 264);
    *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
    *(_QWORD *)(a1 + 264) = v27;
    v28 = v23;
    v29 = v25;
    v30 = v26;
    swift_bridgeObjectRetain();
  }
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_BYTE *)(a1 + 280) = *(_BYTE *)(a2 + 280);
  v31 = *(void **)(a2 + 288);
  *(_QWORD *)(a1 + 288) = v31;
  v32 = a3[9];
  v33 = (void *)(a1 + v32);
  v34 = (const void *)(a2 + v32);
  v35 = type metadata accessor for UIView.Corner(0);
  v36 = *(_QWORD *)(v35 - 8);
  v37 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v36 + 48);
  v38 = v31;
  if (v37(v34, 1, v35))
  {
    v39 = sub_100007E8C(&qword_1011E6620);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v36 + 16))(v33, v34, v35);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
  }
  v40 = a3[10];
  v41 = a1 + v40;
  v42 = a2 + v40;
  v43 = *(void **)v42;
  if (*(_QWORD *)v42)
  {
    *(_QWORD *)v41 = v43;
    *(_OWORD *)(v41 + 8) = *(_OWORD *)(v42 + 8);
    *(_OWORD *)(v41 + 24) = *(_OWORD *)(v42 + 24);
    v44 = *(void **)(v42 + 48);
    *(_QWORD *)(v41 + 40) = *(_QWORD *)(v42 + 40);
    *(_QWORD *)(v41 + 48) = v44;
    v45 = v43;
    v46 = v44;
  }
  else
  {
    v47 = *(_OWORD *)(v42 + 16);
    *(_OWORD *)v41 = *(_OWORD *)v42;
    *(_OWORD *)(v41 + 16) = v47;
    *(_OWORD *)(v41 + 32) = *(_OWORD *)(v42 + 32);
    *(_QWORD *)(v41 + 48) = *(_QWORD *)(v42 + 48);
  }
  v48 = a3[11];
  v49 = a1 + v48;
  v50 = a2 + v48;
  v51 = *(void **)(v50 + 16);
  *(_OWORD *)v49 = *(_OWORD *)v50;
  if (v51 == (void *)1)
  {
    *(_QWORD *)(v49 + 16) = *(_QWORD *)(v50 + 16);
  }
  else
  {
    *(_QWORD *)(v49 + 16) = v51;
    v52 = v51;
  }
  v53 = a3[13];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_OWORD *)(a1 + v53) = *(_OWORD *)(a2 + v53);
  v54 = a3[14];
  v55 = a3[15];
  v56 = a1 + v54;
  v57 = a2 + v54;
  *(_OWORD *)v56 = *(_OWORD *)v57;
  *(_BYTE *)(v56 + 16) = *(_BYTE *)(v57 + 16);
  v58 = (_OWORD *)(a1 + v55);
  v59 = (_OWORD *)(a2 + v55);
  v60 = v59[1];
  *v58 = *v59;
  v58[1] = v60;
  v61 = a3[16];
  v62 = a3[17];
  v63 = a1 + v61;
  v64 = a2 + v61;
  *(_BYTE *)v63 = *(_BYTE *)v64;
  *(_BYTE *)(v63 + 24) = *(_BYTE *)(v64 + 24);
  v65 = *(void **)(v64 + 8);
  v66 = *(void **)(v64 + 16);
  *(_QWORD *)(v63 + 8) = v65;
  *(_QWORD *)(v63 + 16) = v66;
  *(_QWORD *)(a1 + v62) = *(_QWORD *)(a2 + v62);
  v67 = a3[18];
  v68 = a3[19];
  v69 = *(void **)(a2 + v67);
  *(_QWORD *)(a1 + v67) = v69;
  *(_BYTE *)(a1 + v68) = *(_BYTE *)(a2 + v68);
  v70 = v65;
  v71 = v66;
  v72 = v69;
  return a1;
}

uint64_t assignWithCopy for SymbolButton.Configuration(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  __int128 v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  void *v20;
  void *v21;
  id v22;
  _OWORD *v23;
  _OWORD *v24;
  void *v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  void *v29;
  id v30;
  void *v31;
  id v32;
  __int128 *v33;
  void *v34;
  void *v35;
  __int128 *v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  void *v41;
  void *v42;
  id v43;
  id v44;
  id v45;
  id v46;
  void *v47;
  void *v48;
  id v49;
  void *v50;
  void *v51;
  id v52;
  uint64_t v53;
  void *v54;
  void *v55;
  id v56;
  uint64_t v57;
  void *v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t (*v62)(void *, uint64_t, uint64_t);
  int v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __int128 *v68;
  void *v69;
  void *v70;
  id v71;
  void *v72;
  void *v73;
  id v74;
  __int128 v75;
  void *v76;
  id v77;
  id v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  uint64_t v85;
  uint64_t v86;
  __int128 *v87;
  void *v88;
  uint64_t v89;
  __int128 v90;
  uint64_t v91;
  void *v92;
  id v93;
  void *v94;
  id v95;
  uint64_t v96;
  _QWORD *v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  __int128 *v101;
  __int128 v102;
  uint64_t v103;
  _QWORD *v104;
  _QWORD *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void *v109;
  void *v110;
  id v111;
  void *v112;
  void *v113;
  id v114;
  uint64_t v115;
  void *v116;
  void *v117;
  id v118;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(void **)(a1 + 16);
  v7 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v7;
  v8 = v7;

  v9 = *(void **)(a2 + 24);
  v10 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v9;
  v11 = v9;

  v12 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v12;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v13 = *(_OWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = v13;
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  v14 = *(void **)(a1 + 112);
  v15 = *(void **)(a2 + 112);
  *(_QWORD *)(a1 + 112) = v15;
  v16 = v15;

  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = *(void **)(a2 + 136);
  v18 = *(void **)(a1 + 136);
  *(_QWORD *)(a1 + 136) = v17;
  v19 = v17;

  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  v20 = *(void **)(a1 + 176);
  v21 = *(void **)(a2 + 176);
  *(_QWORD *)(a1 + 176) = v21;
  v22 = v21;

  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  v23 = (_OWORD *)(a1 + 192);
  v24 = (_OWORD *)(a2 + 192);
  v25 = *(void **)(a1 + 200);
  v26 = *(_QWORD *)(a2 + 200);
  if (v25 == (void *)1)
  {
    if (v26 == 1)
    {
      v27 = *(_OWORD *)(a2 + 208);
      *v23 = *v24;
      *(_OWORD *)(a1 + 208) = v27;
    }
    else
    {
      *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
      v29 = *(void **)(a2 + 200);
      *(_QWORD *)(a1 + 200) = v29;
      *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
      *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
      v30 = v29;
      swift_bridgeObjectRetain();
    }
  }
  else if (v26 == 1)
  {
    sub_100CD38B0(a1 + 192);
    v28 = *(_OWORD *)(a2 + 208);
    *v23 = *v24;
    *(_OWORD *)(a1 + 208) = v28;
  }
  else
  {
    *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
    v31 = *(void **)(a2 + 200);
    *(_QWORD *)(a1 + 200) = v31;
    v32 = v31;

    *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
    *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v33 = (__int128 *)(a1 + 224);
  v34 = *(void **)(a1 + 224);
  v36 = (__int128 *)(a2 + 224);
  v35 = *(void **)(a2 + 224);
  if (v34 == (void *)1)
  {
    if (v35 == (void *)1)
    {
      v37 = *v36;
      v38 = *(_OWORD *)(a2 + 256);
      *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
      *(_OWORD *)(a1 + 256) = v38;
      *v33 = v37;
    }
    else
    {
      *(_QWORD *)(a1 + 224) = v35;
      v41 = *(void **)(a2 + 232);
      *(_QWORD *)(a1 + 232) = v41;
      v42 = *(void **)(a2 + 240);
      *(_QWORD *)(a1 + 240) = v42;
      *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
      *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
      *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
      v43 = v35;
      v44 = v41;
      v45 = v42;
      swift_bridgeObjectRetain();
    }
  }
  else if (v35 == (void *)1)
  {
    sub_100CD38E0(a1 + 224);
    v40 = *(_OWORD *)(a2 + 240);
    v39 = *(_OWORD *)(a2 + 256);
    *v33 = *v36;
    *(_OWORD *)(a1 + 240) = v40;
    *(_OWORD *)(a1 + 256) = v39;
  }
  else
  {
    *(_QWORD *)(a1 + 224) = v35;
    v46 = v35;

    v47 = *(void **)(a1 + 232);
    v48 = *(void **)(a2 + 232);
    *(_QWORD *)(a1 + 232) = v48;
    v49 = v48;

    v50 = *(void **)(a1 + 240);
    v51 = *(void **)(a2 + 240);
    *(_QWORD *)(a1 + 240) = v51;
    v52 = v51;

    *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
    *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
    *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v53 = *(_QWORD *)(a2 + 272);
  *(_BYTE *)(a1 + 280) = *(_BYTE *)(a2 + 280);
  *(_QWORD *)(a1 + 272) = v53;
  v54 = *(void **)(a2 + 288);
  v55 = *(void **)(a1 + 288);
  *(_QWORD *)(a1 + 288) = v54;
  v56 = v54;

  v57 = a3[9];
  v58 = (void *)(a1 + v57);
  v59 = (void *)(a2 + v57);
  v60 = type metadata accessor for UIView.Corner(0);
  v61 = *(_QWORD *)(v60 - 8);
  v62 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v61 + 48);
  v63 = v62(v58, 1, v60);
  v64 = v62(v59, 1, v60);
  if (v63)
  {
    if (!v64)
    {
      (*(void (**)(void *, void *, uint64_t))(v61 + 16))(v58, v59, v60);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
      goto LABEL_21;
    }
    goto LABEL_20;
  }
  if (v64)
  {
    (*(void (**)(void *, uint64_t))(v61 + 8))(v58, v60);
LABEL_20:
    v65 = sub_100007E8C(&qword_1011E6620);
    memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    goto LABEL_21;
  }
  (*(void (**)(void *, void *, uint64_t))(v61 + 24))(v58, v59, v60);
LABEL_21:
  v66 = a3[10];
  v67 = a1 + v66;
  v68 = (__int128 *)(a2 + v66);
  v69 = *(void **)(a1 + v66);
  v70 = *(void **)(a2 + v66);
  if (v69)
  {
    if (v70)
    {
      *(_QWORD *)v67 = v70;
      v71 = v70;

      *(_QWORD *)(v67 + 8) = *((_QWORD *)v68 + 1);
      *(_QWORD *)(v67 + 16) = *((_QWORD *)v68 + 2);
      *(_QWORD *)(v67 + 24) = *((_QWORD *)v68 + 3);
      *(_QWORD *)(v67 + 32) = *((_QWORD *)v68 + 4);
      *(_QWORD *)(v67 + 40) = *((_QWORD *)v68 + 5);
      v72 = *(void **)(v67 + 48);
      v73 = (void *)*((_QWORD *)v68 + 6);
      *(_QWORD *)(v67 + 48) = v73;
      v74 = v73;

    }
    else
    {
      sub_100CD390C((id *)v67);
      v80 = v68[1];
      v79 = v68[2];
      v81 = *v68;
      *(_QWORD *)(v67 + 48) = *((_QWORD *)v68 + 6);
      *(_OWORD *)(v67 + 16) = v80;
      *(_OWORD *)(v67 + 32) = v79;
      *(_OWORD *)v67 = v81;
    }
  }
  else if (v70)
  {
    *(_QWORD *)v67 = v70;
    v75 = *(__int128 *)((char *)v68 + 8);
    *(_OWORD *)(v67 + 24) = *(__int128 *)((char *)v68 + 24);
    *(_OWORD *)(v67 + 8) = v75;
    *(_QWORD *)(v67 + 40) = *((_QWORD *)v68 + 5);
    v76 = (void *)*((_QWORD *)v68 + 6);
    *(_QWORD *)(v67 + 48) = v76;
    v77 = v70;
    v78 = v76;
  }
  else
  {
    v82 = *v68;
    v83 = v68[1];
    v84 = v68[2];
    *(_QWORD *)(v67 + 48) = *((_QWORD *)v68 + 6);
    *(_OWORD *)(v67 + 16) = v83;
    *(_OWORD *)(v67 + 32) = v84;
    *(_OWORD *)v67 = v82;
  }
  v85 = a3[11];
  v86 = a1 + v85;
  v87 = (__int128 *)(a2 + v85);
  v88 = *(void **)(a1 + v85 + 16);
  v89 = *(_QWORD *)(a2 + v85 + 16);
  if (v88 == (void *)1)
  {
    if (v89 == 1)
    {
      v90 = *v87;
      *(_QWORD *)(v86 + 16) = *((_QWORD *)v87 + 2);
      *(_OWORD *)v86 = v90;
    }
    else
    {
      *(_QWORD *)v86 = *(_QWORD *)v87;
      *(_QWORD *)(v86 + 8) = *((_QWORD *)v87 + 1);
      v92 = (void *)*((_QWORD *)v87 + 2);
      *(_QWORD *)(v86 + 16) = v92;
      v93 = v92;
    }
  }
  else if (v89 == 1)
  {
    sub_100CD393C(v86);
    v91 = *((_QWORD *)v87 + 2);
    *(_OWORD *)v86 = *v87;
    *(_QWORD *)(v86 + 16) = v91;
  }
  else
  {
    *(_QWORD *)v86 = *(_QWORD *)v87;
    *(_QWORD *)(v86 + 8) = *((_QWORD *)v87 + 1);
    v94 = (void *)*((_QWORD *)v87 + 2);
    *(_QWORD *)(v86 + 16) = v94;
    v95 = v94;

  }
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  v96 = a3[13];
  v97 = (_QWORD *)(a1 + v96);
  v98 = (_QWORD *)(a2 + v96);
  *v97 = *v98;
  v97[1] = v98[1];
  v99 = a3[14];
  v100 = a1 + v99;
  v101 = (__int128 *)(a2 + v99);
  v102 = *v101;
  *(_BYTE *)(v100 + 16) = *((_BYTE *)v101 + 16);
  *(_OWORD *)v100 = v102;
  v103 = a3[15];
  v104 = (_QWORD *)(a1 + v103);
  v105 = (_QWORD *)(a2 + v103);
  *v104 = *v105;
  v104[1] = v105[1];
  v104[2] = v105[2];
  v104[3] = v105[3];
  v106 = a3[16];
  v107 = a1 + v106;
  v108 = a2 + v106;
  *(_BYTE *)v107 = *(_BYTE *)(a2 + v106);
  v109 = *(void **)(a1 + v106 + 8);
  v110 = *(void **)(a2 + v106 + 8);
  *(_QWORD *)(v107 + 8) = v110;
  v111 = v110;

  v112 = *(void **)(v107 + 16);
  v113 = *(void **)(v108 + 16);
  *(_QWORD *)(v107 + 16) = v113;
  v114 = v113;

  *(_BYTE *)(v107 + 24) = *(_BYTE *)(v108 + 24);
  *(_QWORD *)(a1 + a3[17]) = *(_QWORD *)(a2 + a3[17]);
  v115 = a3[18];
  v116 = *(void **)(a1 + v115);
  v117 = *(void **)(a2 + v115);
  *(_QWORD *)(a1 + v115) = v117;
  v118 = v117;

  *(_BYTE *)(a1 + a3[19]) = *(_BYTE *)(a2 + a3[19]);
  return a1;
}

uint64_t sub_100CD38B0(uint64_t a1)
{

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  return a1;
}

uint64_t sub_100CD38E0(uint64_t a1)
{
  destroy for SymbolButton.Material(a1);
  return a1;
}

id *sub_100CD390C(id *a1)
{

  return a1;
}

uint64_t sub_100CD393C(uint64_t a1)
{

  return a1;
}

uint64_t initializeWithTake for SymbolButton.Configuration(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _OWORD *v34;
  _OWORD *v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  _OWORD *v39;
  _OWORD *v40;
  uint64_t v41;

  v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v7;
  v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  v9 = *(_OWORD *)(a2 + 136);
  v10 = *(_OWORD *)(a2 + 152);
  v11 = *(_OWORD *)(a2 + 168);
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  *(_OWORD *)(a1 + 168) = v11;
  *(_OWORD *)(a1 + 152) = v10;
  *(_OWORD *)(a1 + 136) = v9;
  v12 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v12;
  v13 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 240) = v13;
  v14 = *(_OWORD *)(a2 + 256);
  v15 = *(_OWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  v16 = a3[9];
  v17 = (void *)(a1 + v16);
  v18 = (const void *)(a2 + v16);
  *(_OWORD *)(a1 + 256) = v14;
  *(_OWORD *)(a1 + 272) = v15;
  v19 = type metadata accessor for UIView.Corner(0);
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    v21 = sub_100007E8C(&qword_1011E6620);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v20 + 32))(v17, v18, v19);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  v22 = a3[10];
  v23 = a3[11];
  v24 = a1 + v22;
  v25 = a2 + v22;
  v26 = *(_OWORD *)(v25 + 16);
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *(_OWORD *)(v24 + 16) = v26;
  *(_OWORD *)(v24 + 32) = *(_OWORD *)(v25 + 32);
  *(_QWORD *)(v24 + 48) = *(_QWORD *)(v25 + 48);
  v27 = a1 + v23;
  v28 = a2 + v23;
  *(_OWORD *)v27 = *(_OWORD *)v28;
  *(_QWORD *)(v27 + 16) = *(_QWORD *)(v28 + 16);
  v29 = a3[13];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_OWORD *)(a1 + v29) = *(_OWORD *)(a2 + v29);
  v30 = a3[14];
  v31 = a3[15];
  v32 = a1 + v30;
  v33 = a2 + v30;
  *(_OWORD *)v32 = *(_OWORD *)v33;
  *(_BYTE *)(v32 + 16) = *(_BYTE *)(v33 + 16);
  v34 = (_OWORD *)(a1 + v31);
  v35 = (_OWORD *)(a2 + v31);
  v36 = v35[1];
  *v34 = *v35;
  v34[1] = v36;
  v37 = a3[16];
  v38 = a3[17];
  v39 = (_OWORD *)(a1 + v37);
  v40 = (_OWORD *)(a2 + v37);
  *v39 = *v40;
  *(_OWORD *)((char *)v39 + 9) = *(_OWORD *)((char *)v40 + 9);
  *(_QWORD *)(a1 + v38) = *(_QWORD *)(a2 + v38);
  v41 = a3[19];
  *(_QWORD *)(a1 + a3[18]) = *(_QWORD *)(a2 + a3[18]);
  *(_BYTE *)(a1 + v41) = *(_BYTE *)(a2 + v41);
  return a1;
}

uint64_t assignWithTake for SymbolButton.Configuration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  __int128 v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  __int128 v22;
  void *v23;
  void *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(void *, uint64_t, uint64_t);
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _OWORD *v52;
  _OWORD *v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  void *v59;
  uint64_t v60;
  void *v61;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  v8 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v9 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v9;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v10 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v10;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  v11 = *(void **)(a1 + 112);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);

  v12 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v12;
  swift_bridgeObjectRelease();
  v13 = *(void **)(a1 + 136);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);

  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  v14 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = v14;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  v15 = *(void **)(a1 + 176);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);

  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  v16 = *(void **)(a1 + 200);
  if (v16 == (void *)1)
    goto LABEL_4;
  v17 = *(_QWORD *)(a2 + 200);
  if (v17 == 1)
  {
    sub_100CD38B0(a1 + 192);
LABEL_4:
    v18 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v18;
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = v17;

  v19 = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = v19;
  swift_bridgeObjectRelease();
LABEL_6:
  v20 = *(void **)(a1 + 224);
  v21 = *(_QWORD *)(a2 + 224);
  if (v20 == (void *)1)
  {
LABEL_9:
    v22 = *(_OWORD *)(a2 + 240);
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 240) = v22;
    *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
    goto LABEL_11;
  }
  if (v21 == 1)
  {
    sub_100CD38E0(a1 + 224);
    goto LABEL_9;
  }
  *(_QWORD *)(a1 + 224) = v21;

  v23 = *(void **)(a1 + 232);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);

  v24 = *(void **)(a1 + 240);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);

  *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
  v25 = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = v25;
  swift_bridgeObjectRelease();
LABEL_11:
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_BYTE *)(a1 + 280) = *(_BYTE *)(a2 + 280);
  v26 = *(void **)(a1 + 288);
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);

  v27 = a3[9];
  v28 = (void *)(a1 + v27);
  v29 = (void *)(a2 + v27);
  v30 = type metadata accessor for UIView.Corner(0);
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v31 + 48);
  v33 = v32(v28, 1, v30);
  v34 = v32(v29, 1, v30);
  if (v33)
  {
    if (!v34)
    {
      (*(void (**)(void *, void *, uint64_t))(v31 + 32))(v28, v29, v30);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  if (v34)
  {
    (*(void (**)(void *, uint64_t))(v31 + 8))(v28, v30);
LABEL_16:
    v35 = sub_100007E8C(&qword_1011E6620);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    goto LABEL_17;
  }
  (*(void (**)(void *, void *, uint64_t))(v31 + 40))(v28, v29, v30);
LABEL_17:
  v36 = a3[10];
  v37 = a1 + v36;
  v38 = a2 + v36;
  v39 = *(void **)(a1 + v36);
  if (v39)
  {
    if (*(_QWORD *)v38)
    {
      *(_QWORD *)v37 = *(_QWORD *)v38;

      *(_OWORD *)(v37 + 8) = *(_OWORD *)(v38 + 8);
      *(_OWORD *)(v37 + 24) = *(_OWORD *)(v38 + 24);
      *(_QWORD *)(v37 + 40) = *(_QWORD *)(v38 + 40);
      v40 = *(void **)(v37 + 48);
      *(_QWORD *)(v37 + 48) = *(_QWORD *)(v38 + 48);

      goto LABEL_22;
    }
    sub_100CD390C((id *)v37);
  }
  v41 = *(_OWORD *)(v38 + 16);
  *(_OWORD *)v37 = *(_OWORD *)v38;
  *(_OWORD *)(v37 + 16) = v41;
  *(_OWORD *)(v37 + 32) = *(_OWORD *)(v38 + 32);
  *(_QWORD *)(v37 + 48) = *(_QWORD *)(v38 + 48);
LABEL_22:
  v42 = a3[11];
  v43 = a1 + v42;
  v44 = a2 + v42;
  v45 = *(void **)(a1 + v42 + 16);
  if (v45 != (void *)1)
  {
    v46 = *(_QWORD *)(v44 + 16);
    if (v46 != 1)
    {
      *(_OWORD *)v43 = *(_OWORD *)v44;
      *(_QWORD *)(v43 + 16) = v46;

      goto LABEL_27;
    }
    sub_100CD393C(v43);
  }
  *(_OWORD *)v43 = *(_OWORD *)v44;
  *(_QWORD *)(v43 + 16) = *(_QWORD *)(v44 + 16);
LABEL_27:
  v47 = a3[13];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_OWORD *)(a1 + v47) = *(_OWORD *)(a2 + v47);
  v48 = a3[14];
  v49 = a3[15];
  v50 = a1 + v48;
  v51 = a2 + v48;
  *(_OWORD *)v50 = *(_OWORD *)v51;
  *(_BYTE *)(v50 + 16) = *(_BYTE *)(v51 + 16);
  v52 = (_OWORD *)(a1 + v49);
  v53 = (_OWORD *)(a2 + v49);
  v54 = v53[1];
  *v52 = *v53;
  v52[1] = v54;
  v55 = a3[16];
  v56 = a1 + v55;
  v57 = a2 + v55;
  *(_BYTE *)v56 = *(_BYTE *)(a2 + v55);
  v58 = *(void **)(a1 + v55 + 8);
  *(_QWORD *)(v56 + 8) = *(_QWORD *)(v57 + 8);

  v59 = *(void **)(v56 + 16);
  *(_QWORD *)(v56 + 16) = *(_QWORD *)(v57 + 16);

  *(_BYTE *)(v56 + 24) = *(_BYTE *)(v57 + 24);
  v60 = a3[18];
  *(_QWORD *)(a1 + a3[17]) = *(_QWORD *)(a2 + a3[17]);
  v61 = *(void **)(a1 + v60);
  *(_QWORD *)(a1 + v60) = *(_QWORD *)(a2 + v60);

  *(_BYTE *)(a1 + a3[19]) = *(_BYTE *)(a2 + a3[19]);
  return a1;
}

uint64_t getEnumTagSinglePayload for SymbolButton.Configuration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100CD3F8C);
}

uint64_t sub_100CD3F8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100007E8C(&qword_1011E6620);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for SymbolButton.Configuration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100CD4018);
}

uint64_t sub_100CD4018(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = sub_100007E8C(&qword_1011E6620);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 36), a2, a2, v7);
  }
  return result;
}

void sub_100CD4090(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[16];

  v4[0] = "x";
  v4[1] = &unk_100EF38D8;
  v4[2] = &unk_100EF38F0;
  v4[3] = &unk_100EF3908;
  v4[4] = &unk_100EF3920;
  sub_10015C698(319, (unint64_t *)&qword_1011E6790, (uint64_t (*)(uint64_t))&type metadata accessor for UIView.Corner);
  if (v3 <= 0x3F)
  {
    v4[5] = *(_QWORD *)(v2 - 8) + 64;
    v4[6] = &unk_100EF3938;
    v4[9] = &unk_100EF3858;
    v4[10] = &unk_100EF3968;
    v4[11] = &unk_100EF3980;
    v4[12] = &unk_100EF3998;
    v4[7] = &unk_100EF3950;
    v4[8] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[13] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[14] = &unk_100EF3870;
    v4[15] = &unk_100EF39B0;
    swift_initStructMetadata(a1, 256, 16, v4, a1 + 16);
  }
}

void destroy for SymbolButton.Configuration.Accessibility(uint64_t a1)
{

}

uint64_t initializeWithCopy for SymbolButton.Configuration.Accessibility(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(void **)(a2 + 8);
  v4 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v5 = v3;
  v6 = v4;
  return a1;
}

uint64_t assignWithCopy for SymbolButton.Configuration.Accessibility(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(void **)(a1 + 8);
  v5 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v5;
  v6 = v5;

  v7 = *(void **)(a1 + 16);
  v8 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v8;
  v9 = v8;

  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for SymbolButton.Configuration.Accessibility(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;

  v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for SymbolButton.Configuration.Accessibility(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SymbolButton.Configuration.Accessibility(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for SymbolButton.Configuration.Accessibility()
{
  return &type metadata for SymbolButton.Configuration.Accessibility;
}

void destroy for SymbolButton.Symbol(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 96));
}

uint64_t initializeWithCopy for SymbolButton.Symbol(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  void *v5;
  __int128 v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  id v11;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(void **)(a2 + 16);
  v5 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v6;
  v7 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v7;
  v8 = *(void **)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v8;
  swift_bridgeObjectRetain();
  v9 = v4;
  v10 = v5;
  swift_bridgeObjectRetain();
  v11 = v8;
  return a1;
}

uint64_t assignWithCopy for SymbolButton.Symbol(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  v5 = *(void **)(a1 + 16);
  v6 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v6;
  v7 = v6;

  v8 = *(void **)(a2 + 24);
  v9 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v8;
  v10 = v8;

  v11 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v11;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v12 = *(_OWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = v12;
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v13 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v13);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  v14 = *(void **)(a1 + 112);
  v15 = *(void **)(a2 + 112);
  *(_QWORD *)(a1 + 112) = v15;
  v16 = v15;

  return a1;
}

uint64_t assignWithTake for SymbolButton.Symbol(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  v5 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v6;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v7 = *(_QWORD *)(a2 + 96);
  v8 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v7;
  swift_bridgeObjectRelease(v8);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  v9 = *(void **)(a1 + 112);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);

  return a1;
}

ValueMetadata *type metadata accessor for SymbolButton.Symbol()
{
  return &type metadata for SymbolButton.Symbol;
}

void destroy for SymbolButton.Title(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));
}

uint64_t initializeWithCopy for SymbolButton.Title(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  v6 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v6;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  swift_bridgeObjectRetain();
  v7 = v4;
  swift_bridgeObjectRetain();
  v8 = v6;
  return a1;
}

uint64_t assignWithCopy for SymbolButton.Title(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  v5 = *(void **)(a2 + 16);
  v6 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v5;
  v7 = v5;

  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v8);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v9 = *(void **)(a1 + 56);
  v10 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v10;
  v11 = v10;

  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

uint64_t assignWithTake for SymbolButton.Title(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 40);
  v6 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease(v6);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v7 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);

  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for SymbolButton.Title(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 65))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SymbolButton.Title(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 64) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 65) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 65) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

