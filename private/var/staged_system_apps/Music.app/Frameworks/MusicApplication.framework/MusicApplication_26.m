Swift::Int sub_DD8BDC()
{
  uint64_t v0;
  Swift::UInt64 v1;
  char v2;
  Swift::UInt64 v3;
  _QWORD v5[9];

  v1 = *(_QWORD *)v0;
  v2 = *(_BYTE *)(v0 + 8);
  Hasher.init(_seed:)(v5);
  if ((v2 & 1) != 0)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1uLL);
    if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0)
      v3 = v1;
    else
      v3 = 0;
    Hasher._combine(_:)(v3);
  }
  return Hasher._finalize()();
}

uint64_t sub_DD8C44(uint64_t a1, uint64_t a2)
{
  int v3;
  unsigned int v4;
  uint64_t result;

  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = *(unsigned __int8 *)(a2 + 8);
  result = v3 & v4;
  if ((v3 & 1) == 0 && (v4 & 1) == 0)
    return *(double *)a1 == *(double *)a2;
  return result;
}

void Lyrics.Word.hash(into:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::UInt64 v6;
  Swift::UInt64 v7;
  uint64_t v8[2];
  Swift::UInt64 v9;
  char v10;

  v3 = *v1;
  v4 = v1[1];
  swift_bridgeObjectRetain();
  String.hash(into:)(a1, v3, v4);
  swift_bridgeObjectRelease();
  v5 = v1[2];
  swift_bridgeObjectRetain();
  sub_DE2194(a1, v5);
  swift_bridgeObjectRelease();
  sub_CC780C(v1 + 3, (uint64_t)v8);
  sub_CC780C(v8, (uint64_t)&v9);
  if (v10 == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    v6 = v9;
    Hasher._combine(_:)(1uLL);
    if ((v6 & 0x7FFFFFFFFFFFFFFFLL) != 0)
      v7 = v6;
    else
      v7 = 0;
    Hasher._combine(_:)(v7);
  }
}

uint64_t static Lyrics.Word.__derived_struct_equals(_:_:)(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char v8;
  uint64_t result;
  double v10;
  uint64_t v11[2];
  uint64_t v12[2];
  double v13;
  char v14;
  double v15;
  char v16;

  v4 = *a1;
  v5 = a1[1];
  v6 = a2[1];
  v7 = v4 == *a2 && v5 == v6;
  if (v7 || (v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *a2, v6, 0), result = 0, (v8 & 1) != 0))
  {
    if ((sub_DD83D8(a1[2], a2[2]) & 1) != 0)
    {
      sub_CC780C(a1 + 3, (uint64_t)v12);
      sub_CC780C(a2 + 3, (uint64_t)v11);
      sub_CC780C(v12, (uint64_t)&v13);
      if (v14 == 1)
      {
        sub_CC780C(v11, (uint64_t)&v15);
        if ((v16 & 1) != 0)
          return 1;
      }
      else
      {
        v10 = v13;
        sub_CC780C(v11, (uint64_t)&v15);
        if ((v16 & 1) == 0 && v10 == v15)
          return 1;
      }
    }
    return 0;
  }
  return result;
}

Swift::Int Lyrics.Word.hashValue.getter()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  Lyrics.Word.hash(into:)((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_DD8E54()
{
  __int128 *v0;
  __int128 v1;
  _QWORD v3[9];
  __int128 v4;
  __int128 v5;
  char v6;

  v1 = v0[1];
  v4 = *v0;
  v5 = v1;
  v6 = *((_BYTE *)v0 + 32);
  Hasher.init(_seed:)(v3);
  Lyrics.Word.hash(into:)((uint64_t)v3);
  return Hasher._finalize()();
}

void sub_DD8EA4(uint64_t a1)
{
  Lyrics.Word.hash(into:)(a1);
}

Swift::Int sub_DD8EDC()
{
  __int128 *v0;
  __int128 v1;
  _QWORD v3[9];
  __int128 v4;
  __int128 v5;
  char v6;

  v1 = v0[1];
  v4 = *v0;
  v5 = v1;
  v6 = *((_BYTE *)v0 + 32);
  Hasher.init(_seed:)(v3);
  Lyrics.Word.hash(into:)((uint64_t)v3);
  return Hasher._finalize()();
}

uint64_t sub_DD8F28(double *a1, uint64_t a2)
{
  double v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  int v12;
  BOOL v13;
  char v14;
  uint64_t result;
  int v16;
  int v17;

  v4 = *a1;
  v5 = *((_QWORD *)a1 + 1);
  v6 = *((_QWORD *)a1 + 2);
  v7 = a1[3];
  v8 = *((unsigned __int8 *)a1 + 32);
  v9 = *(_QWORD *)(a2 + 8);
  v10 = *(_QWORD *)(a2 + 16);
  v11 = *(double *)(a2 + 24);
  v12 = *(unsigned __int8 *)(a2 + 32);
  v13 = *(_QWORD *)&v4 == *(_QWORD *)a2 && v5 == v9;
  if (v13
    || (v14 = _stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)&v4, v5, *(_QWORD *)a2, v9, 0),
        result = 0,
        (v14 & 1) != 0))
  {
    v16 = sub_DD83D8(v6, v10);
    v17 = v16 ^ 1 | v8;
    if (((v17 | v12) & 1) != 0)
      return v16 & v12 & v17;
    else
      return v7 == v11;
  }
  return result;
}

uint64_t Lyrics.TextLine.BackgroundVocals.range.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t Lyrics.Syllable.wordLength.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

void Lyrics.Syllable.hash(into:)(uint64_t a1)
{
  Swift::UInt64 *v1;
  Swift::UInt64 *v2;
  Swift::UInt64 v4;
  Swift::UInt64 v5;
  Swift::UInt64 v6;
  Swift::UInt64 v7;
  Swift::UInt v8;

  v2 = v1;
  if ((*v2 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v4 = *v2;
  else
    v4 = 0;
  Hasher._combine(_:)(v4);
  if ((v2[1] & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v5 = v2[1];
  else
    v5 = 0;
  Hasher._combine(_:)(v5);
  v6 = v2[2];
  v7 = v2[3];
  sub_DE2418((uint64_t)v2);
  String.hash(into:)(a1, v6, v7);
  sub_C260D4((uint64_t)v2);
  v8 = v2[5];
  Hasher._combine(_:)(v2[4]);
  Hasher._combine(_:)(v8);
  Hasher._combine(_:)(v2[6]);
}

Swift::Int Lyrics.Syllable.hashValue.getter()
{
  Swift::UInt64 *v0;
  Swift::UInt64 *v1;
  Swift::UInt64 v2;
  Swift::UInt64 v3;
  Swift::UInt64 v4;
  Swift::UInt64 v5;
  Swift::UInt v6;
  _QWORD v8[9];

  v1 = v0;
  Hasher.init(_seed:)(v8);
  if ((*v0 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v2 = *v0;
  else
    v2 = 0;
  Hasher._combine(_:)(v2);
  if ((v0[1] & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v3 = v0[1];
  else
    v3 = 0;
  Hasher._combine(_:)(v3);
  v4 = v0[2];
  v5 = v1[3];
  sub_DE2418((uint64_t)v1);
  String.hash(into:)(v8, v4, v5);
  sub_C260D4((uint64_t)v1);
  v6 = v1[5];
  Hasher._combine(_:)(v1[4]);
  Hasher._combine(_:)(v6);
  Hasher._combine(_:)(v1[6]);
  return Hasher._finalize()();
}

Swift::Int sub_DD911C()
{
  return Lyrics.Syllable.hashValue.getter();
}

void sub_DD915C(uint64_t a1)
{
  Lyrics.Syllable.hash(into:)(a1);
}

Swift::Int sub_DD919C()
{
  Swift::UInt64 *v0;
  Swift::UInt64 v1;
  Swift::UInt64 v2;
  Swift::UInt64 v3;
  Swift::UInt64 v4;
  Swift::UInt v5;
  Swift::UInt v6;
  Swift::UInt v7;
  Swift::UInt64 v8;
  Swift::UInt64 v9;
  _QWORD v11[9];

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  v4 = v0[3];
  v5 = v0[4];
  v6 = v0[5];
  v7 = v0[6];
  Hasher.init(_seed:)(v11);
  if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v8 = v1;
  else
    v8 = 0;
  Hasher._combine(_:)(v8);
  if ((v2 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v9 = v2;
  else
    v9 = 0;
  Hasher._combine(_:)(v9);
  swift_bridgeObjectRetain();
  String.hash(into:)(v11, v3, v4);
  swift_bridgeObjectRelease(v4);
  Hasher._combine(_:)(v5);
  Hasher._combine(_:)(v6);
  Hasher._combine(_:)(v7);
  return Hasher._finalize()();
}

BOOL sub_DD9258(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[3];
  uint64_t v6;
  _OWORD v7[3];
  uint64_t v8;

  v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v5[2] = *(_OWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 48);
  v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v7[2] = *(_OWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 48);
  return _s11MusicCoreUI6LyricsC8SyllableV23__derived_struct_equalsySbAE_AEtFZ_0((uint64_t)v5, (uint64_t)v7);
}

uint64_t Lyrics.TextLine.words.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 72))();
}

uint64_t Lyrics.TextLine.text.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 56))();
}

uint64_t Lyrics.TextLine.backgroundVocals.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD v4[8];

  (*(void (**)(_QWORD *__return_ptr))(v1 + 88))(v4);
  return sub_5C090((uint64_t)v4, a1, &qword_15072C8);
}

uint64_t Lyrics.TextLine.backgroundText.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3[8];
  _BYTE v4[16];
  uint64_t v5;
  uint64_t v6;

  (*(void (**)(uint64_t *__return_ptr))(v0 + 88))(v3);
  sub_5C090((uint64_t)v3, (uint64_t)v4, &qword_15072C8);
  if (!v6)
    return 0;
  v1 = v5;
  swift_bridgeObjectRetain();
  sub_DE2440(v3);
  return v1;
}

uint64_t Lyrics.TextLine.debugDescription.getter()
{
  uint64_t v0;
  Swift::String v1;
  Swift::String v2;
  void *object;
  Swift::String v4;
  Swift::String v5;
  Swift::String v6;
  Swift::String v7;
  void *v8;
  _QWORD v10[2];

  v10[0] = 0;
  v10[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(54);
  v1._object = (void *)0x800000000110C8D0;
  v1._countAndFlagsBits = 0xD000000000000014;
  String.append(_:)(v1);
  v2._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = v2._object;
  String.append(_:)(v2);
  swift_bridgeObjectRelease(object);
  v4._countAndFlagsBits = 0x6954747261747320;
  v4._object = (void *)0xEB000000003D656DLL;
  String.append(_:)(v4);
  Double.write<A>(to:)(v10, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, *(double *)v0);
  v5._countAndFlagsBits = 0x656D6954646E6520;
  v5._object = (void *)0xE90000000000003DLL;
  String.append(_:)(v5);
  Double.write<A>(to:)(v10, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, *(double *)(v0 + 8));
  v6._countAndFlagsBits = 0x3D7478657420;
  v6._object = (void *)0xE600000000000000;
  String.append(_:)(v6);
  v7._countAndFlagsBits = (*(uint64_t (**)(void))(v0 + 56))();
  v8 = v7._object;
  String.append(_:)(v7);
  swift_bridgeObjectRelease(v8);
  return v10[0];
}

uint64_t Lyrics.TextLine.textAlignment.getter()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 26) & 1) != 0)
  {
    if ((*(_BYTE *)(v0 + 24) & 1) == 0)
      return 2;
  }
  else if ((*(_BYTE *)(v0 + 24) & 1) != 0)
  {
    return 2;
  }
  return 0;
}

_UNKNOWN **static Lyrics.Capability.allCases.getter()
{
  return &off_13C1F68;
}

uint64_t Lyrics.TextLine.init(lineIndex:startTime:endTime:primaryVocalsStartTime:primaryVocalsEndTime:agentAlignment:direction:lyricsDirection:capabilities:localizedTextProvider:localizedWordsProvider:localizedBackgroundVocalsProvider:)@<X0>(uint64_t result@<X0>, char a2@<W1>, char a3@<W2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, double a13@<D3>, __int128 a14, uint64_t a15)
{
  *(double *)a9 = a10;
  *(double *)(a9 + 8) = a11;
  *(_QWORD *)(a9 + 16) = result;
  *(_BYTE *)(a9 + 24) = a2 & 1;
  *(_BYTE *)(a9 + 25) = a3 & 1;
  *(_BYTE *)(a9 + 26) = a4 & 1;
  *(_QWORD *)(a9 + 32) = a5;
  *(double *)(a9 + 40) = a12;
  *(double *)(a9 + 48) = a13;
  *(_QWORD *)(a9 + 56) = a6;
  *(_QWORD *)(a9 + 64) = a7;
  *(_QWORD *)(a9 + 72) = a8;
  *(_OWORD *)(a9 + 80) = a14;
  *(_QWORD *)(a9 + 96) = a15;
  return result;
}

uint64_t Lyrics.TextLine.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  Swift::UInt64 v3;
  Swift::UInt64 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  Hasher._combine(_:)(*(_QWORD *)(v1 + 16));
  if ((*(_QWORD *)v1 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v3 = *(_QWORD *)v1;
  else
    v3 = 0;
  Hasher._combine(_:)(v3);
  if ((*(_QWORD *)(v1 + 8) & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v4 = *(_QWORD *)(v1 + 8);
  else
    v4 = 0;
  Hasher._combine(_:)(v4);
  v5 = (*(uint64_t (**)(void))(v1 + 56))();
  v7 = v6;
  String.hash(into:)(a1, v5, v6);
  return swift_bridgeObjectRelease(v7);
}

uint64_t Lyrics.TextLine.BackgroundVocals.words.getter()
{
  return swift_bridgeObjectRetain();
}

Swift::Int Lyrics.TextLine.hashValue.getter()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  Lyrics.TextLine.hash(into:)((uint64_t)v1);
  return Hasher._finalize()();
}

uint64_t sub_DD9624()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 26) & 1) != 0)
  {
    if (*(_BYTE *)(v0 + 24))
      return 0;
  }
  else if ((*(_BYTE *)(v0 + 24) & 1) == 0)
  {
    return 0;
  }
  return 2;
}

Swift::Int sub_DD964C()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  Lyrics.TextLine.hash(into:)((uint64_t)v1);
  return Hasher._finalize()();
}

uint64_t sub_DD9688(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD v11[6];
  uint64_t v12;
  _OWORD v13[6];
  uint64_t v14;

  v2 = *(_OWORD *)(a1 + 80);
  v11[4] = *(_OWORD *)(a1 + 64);
  v11[5] = v2;
  v12 = *(_QWORD *)(a1 + 96);
  v3 = *(_OWORD *)(a1 + 16);
  v11[0] = *(_OWORD *)a1;
  v11[1] = v3;
  v4 = *(_OWORD *)(a1 + 48);
  v11[2] = *(_OWORD *)(a1 + 32);
  v11[3] = v4;
  v5 = *(_OWORD *)(a2 + 16);
  v13[0] = *(_OWORD *)a2;
  v13[1] = v5;
  v6 = *(_OWORD *)(a2 + 32);
  v7 = *(_OWORD *)(a2 + 48);
  v8 = *(_OWORD *)(a2 + 64);
  v9 = *(_OWORD *)(a2 + 80);
  v14 = *(_QWORD *)(a2 + 96);
  v13[4] = v8;
  v13[5] = v9;
  v13[2] = v6;
  v13[3] = v7;
  return _s11MusicCoreUI6LyricsC8TextLineV2eeoiySbAE_AEtFZ_0((uint64_t)v11, (uint64_t)v13) & 1;
}

double JSContainerDetail.LyricsSnippetData.endTime.getter(double a1, double a2)
{
  return a2;
}

uint64_t Lyrics.InstrumentalLine.lyricsDirection.getter(uint64_t a1, char a2)
{
  return a2 & 1;
}

uint64_t Lyrics.InstrumentalLine.textAlignment.getter(uint64_t a1, char a2)
{
  return 2 * (a2 & 1u);
}

uint64_t Lyrics.InstrumentalLine.debugDescription.getter(double a1, double a2)
{
  Swift::String v4;
  Swift::String v5;
  void *object;
  Swift::String v7;
  Swift::String v8;
  _QWORD v10[2];

  v10[0] = 0;
  v10[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(54);
  v4._object = (void *)0x800000000110C8F0;
  v4._countAndFlagsBits = 0xD00000000000001CLL;
  String.append(_:)(v4);
  v5._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = v5._object;
  String.append(_:)(v5);
  swift_bridgeObjectRelease(object);
  v7._countAndFlagsBits = 0x6954747261747320;
  v7._object = (void *)0xEB000000003D656DLL;
  String.append(_:)(v7);
  Double.write<A>(to:)(v10, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, a1);
  v8._countAndFlagsBits = 0x656D6954646E6520;
  v8._object = (void *)0xE90000000000003DLL;
  String.append(_:)(v8);
  Double.write<A>(to:)(v10, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, a2);
  return v10[0];
}

uint64_t Lyrics.SongwritersLine.textAlignment.getter()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 24))
    return 2;
  else
    return 0;
}

uint64_t sub_DD9844()
{
  uint64_t v0;

  return Lyrics.InstrumentalLine.debugDescription.getter(*(double *)(v0 + 8), *(double *)(v0 + 16));
}

uint64_t Lyrics.SongwritersLine.debugDescription.getter()
{
  uint64_t v0;
  Swift::String v1;
  Swift::String v2;
  Swift::String v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  Swift::String v7;
  _QWORD v9[2];

  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(68);
  v1._object = (void *)0x800000000110C910;
  v1._countAndFlagsBits = 0xD00000000000001BLL;
  String.append(_:)(v1);
  v2._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  v3._countAndFlagsBits = 0x6954747261747320;
  v3._object = (void *)0xEB000000003D656DLL;
  String.append(_:)(v3);
  Double.write<A>(to:)(v9, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, *(double *)(v0 + 8));
  v4._countAndFlagsBits = 0x656D6954646E6520;
  v4._object = (void *)0xE90000000000003DLL;
  String.append(_:)(v4);
  Double.write<A>(to:)(v9, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, *(double *)(v0 + 16));
  v5._countAndFlagsBits = 0x697277676E6F7320;
  v5._object = (void *)0xED00003D73726574;
  String.append(_:)(v5);
  v6 = swift_bridgeObjectRetain();
  v7._countAndFlagsBits = Array.description.getter(v6, &type metadata for String);
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  sub_DE24A8(v0);
  return v9[0];
}

uint64_t sub_DD99C4()
{
  return Lyrics.SongwritersLine.debugDescription.getter();
}

uint64_t JSApplication.SubscriptionFlowConfiguration.options.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Lyrics.availableLanguages.getter()
{
  return swift_bridgeObjectRetain();
}

double Lyrics.leadingSilence.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 88);
}

uint64_t Lyrics.vocalistsType.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 96);
}

uint64_t Lyrics.songwriters.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Lyrics.currentLanguage.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _BYTE v7[24];

  swift_beginAccess(v2 + 112, v7, 1, 0);
  v5 = *(_QWORD *)(v2 + 120);
  *(_QWORD *)(v2 + 112) = a1;
  *(_QWORD *)(v2 + 120) = a2;
  return swift_bridgeObjectRelease(v5);
}

uint64_t (*Lyrics.currentLanguage.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 112, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t Lyrics.staticText.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (*(_QWORD *)(v0 + 144))
  {
    v1 = *(_QWORD *)(v0 + 136);
  }
  else
  {
    v1 = sub_DD9B1C(v0);
    *(_QWORD *)(v0 + 136) = v1;
    *(_QWORD *)(v0 + 144) = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_DD9B1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::String v10;
  Swift::String v11;
  void *v12;
  void *v13;
  Swift::String v14;
  Swift::String v15;
  uint64_t (*v16)(__n128);
  void (*v17)(uint64_t *__return_ptr);
  __n128 v18;
  Swift::String v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t countAndFlagsBits;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31[8];
  _BYTE v32[16];
  uint64_t v33;
  void *v34;

  v1 = *(_QWORD *)(a1 + 32);
  v29 = 0;
  v30 = 0xE000000000000000;
  v27 = *(_QWORD *)(v1 + 16);
  if (v27)
  {
    v25 = v1;
    v26 = v1 + 32;
    swift_bridgeObjectRetain_n(v1, 2);
    v2 = 0;
    do
    {
      v6 = *(_QWORD *)(v26 + 8 * v2);
      v3 = v29;
      v4 = v30;
      v7 = *(_QWORD *)(v6 + 16);
      if (v7)
      {
        v28 = v2;
        swift_bridgeObjectRetain_n(v6, 2);
        swift_bridgeObjectRetain();
        v8 = v6 + 128;
        do
        {
          v16 = *(uint64_t (**)(__n128))(v8 - 40);
          v17 = *(void (**)(uint64_t *__return_ptr))(v8 - 8);
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain();
          v18 = swift_retain();
          if ((v30 & 0xF00000000000000) != 0)
          {
            v19._countAndFlagsBits = 10;
            v19._object = (void *)0xE100000000000000;
            String.append(_:)(v19);
          }
          v20 = v16(v18);
          v22 = v21;
          v17(v31);
          sub_5C090((uint64_t)v31, (uint64_t)v32, &qword_15072C8);
          v12 = v34;
          if (v34)
          {
            v9 = v33;
            swift_bridgeObjectRetain();
            sub_DE2440(v31);
            v10._countAndFlagsBits = v9;
            v10._object = v12;
            String.append(_:)(v10);
            v11._countAndFlagsBits = 41;
            v11._object = (void *)0xE100000000000000;
            String.append(_:)(v11);
            swift_bridgeObjectRelease();
            v12 = &stru_20 + 8;
            v13 = (void *)0xE100000000000000;
          }
          else
          {
            v13 = (void *)0xE000000000000000;
          }
          swift_bridgeObjectRetain();
          v14._countAndFlagsBits = (uint64_t)v12;
          v14._object = v13;
          String.append(_:)(v14);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v15._countAndFlagsBits = v20;
          v15._object = v22;
          String.append(_:)(v15);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          swift_release();
          v8 += 104;
          --v7;
        }
        while (v7);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v3 = v29;
        v4 = v30;
        v2 = v28;
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      ++v2;
      v29 = v3;
      v30 = v4;
      v5._countAndFlagsBits = 10;
      v5._object = (void *)0xE100000000000000;
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
    }
    while (v2 != v27);
    swift_bridgeObjectRelease_n(v25, 2);
  }
  countAndFlagsBits = String.trim()()._countAndFlagsBits;
  swift_bridgeObjectRelease();
  return countAndFlagsBits;
}

uint64_t Lyrics.staticText.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v2 + 144);
  *(_QWORD *)(v2 + 136) = a1;
  *(_QWORD *)(v2 + 144) = a2;
  return swift_bridgeObjectRelease(v3);
}

uint64_t (*Lyrics.staticText.modify(uint64_t *a1))(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[2] = v1;
  *a1 = Lyrics.staticText.getter();
  a1[1] = v3;
  return sub_DD9DF8;
}

uint64_t sub_DD9DF8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[1];
  v1 = a1[2];
  v3 = *a1;
  v4 = *(_QWORD *)(v1 + 144);
  *(_QWORD *)(v1 + 136) = v3;
  *(_QWORD *)(v1 + 144) = v2;
  return swift_bridgeObjectRelease(v4);
}

uint64_t Lyrics.alignment(for:default:)(_QWORD *a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;

  if (*(_BYTE *)(v3 + 96))
  {
    v4 = a1[3];
    v5 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v4);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
  }
  else
  {
    sub_55D1C((uint64_t)a1, (uint64_t)v11);
    if ((a3 & 1) != 0)
    {
      v9 = v12;
      v10 = v13;
      __swift_project_boxed_opaque_existential_1(v11, v12);
      a2 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 24))(v9, v10);
    }
    __swift_destroy_boxed_opaque_existential_1(v11);
    return a2;
  }
}

double *Lyrics.originalLine(for:)@<X0>(double *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  double *v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(_QWORD);
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  int v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  uint64_t (*v39)(_QWORD);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;

  v3 = *(_QWORD *)(v2 + 48);
  v4 = *(_QWORD *)(v3 + 16);
  v5 = 0uLL;
  if (!v4)
  {
    v22 = 0;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    v26 = 0;
    v27 = 0uLL;
    v28 = 0uLL;
    v29 = 0uLL;
    goto LABEL_21;
  }
  v6 = result;
  v33 = a2;
  v7 = *result;
  swift_bridgeObjectRetain_n(v3, 2);
  v8 = 0;
  while (1)
  {
    v9 = v3 + v8;
    v10 = *(_OWORD *)(v3 + v8 + 32);
    if (*(double *)&v10 != v7 || *((double *)&v10 + 1) != v6[1])
      goto LABEL_3;
    v40 = *(_QWORD *)(v9 + 48);
    v36 = *(unsigned __int8 *)(v9 + 56);
    v34 = *(unsigned __int8 *)(v9 + 57);
    v35 = *(unsigned __int8 *)(v9 + 58);
    v37 = *(_OWORD *)(v3 + v8 + 32);
    v38 = *(_OWORD *)(v9 + 72);
    v11 = *(uint64_t (**)(_QWORD))(v9 + 88);
    v43 = *(_OWORD *)(v9 + 112);
    v44 = *(_OWORD *)(v9 + 96);
    v12 = *(_QWORD *)(v9 + 128);
    v42 = *(_QWORD *)(v9 + 64);
    swift_bridgeObjectRetain();
    swift_retain(v44);
    swift_retain(v43);
    v41 = v12;
    v13 = swift_retain(v12);
    v39 = v11;
    v14 = v11(v13);
    v16 = v15;
    v17 = (*((uint64_t (**)(void))v6 + 7))();
    if (v14 == v17 && v16 == v18)
    {
      swift_bridgeObjectRelease_n(v3, 2);
      goto LABEL_16;
    }
    v20 = v18;
    v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v16, v17, v18, 0);
    swift_bridgeObjectRelease(v16);
    swift_bridgeObjectRelease(v20);
    if ((v21 & 1) != 0)
      break;
    swift_release(v41);
    swift_release(v43);
    swift_release(v44);
    swift_bridgeObjectRelease(v42);
LABEL_3:
    v8 += 104;
    if (!--v4)
    {
      result = (double *)swift_bridgeObjectRelease_n(v3, 2);
      v22 = 0;
      v23 = 0;
      v24 = 0;
      v25 = 0;
      v26 = 0;
      v27 = 0uLL;
      v28 = 0uLL;
      v29 = 0uLL;
      a2 = v33;
      v5 = 0uLL;
      goto LABEL_21;
    }
  }
  v16 = v3;
LABEL_16:
  result = (double *)swift_bridgeObjectRelease_n(v16, 2);
  v30 = 256;
  if (!v34)
    v30 = 0;
  v31 = v30 | v36;
  v32 = 0x10000;
  if (!v35)
    v32 = 0;
  v23 = v31 | v32;
  v5 = v37;
  v27 = v38;
  a2 = v33;
  v25 = v39;
  v22 = v40;
  v26 = v41;
  v24 = v42;
  v29 = v43;
  v28 = v44;
LABEL_21:
  *(_OWORD *)a2 = v5;
  *(_QWORD *)(a2 + 16) = v22;
  *(_QWORD *)(a2 + 24) = v23;
  *(_QWORD *)(a2 + 32) = v24;
  *(_OWORD *)(a2 + 40) = v27;
  *(_QWORD *)(a2 + 56) = v25;
  *(_OWORD *)(a2 + 64) = v28;
  *(_OWORD *)(a2 + 80) = v29;
  *(_QWORD *)(a2 + 96) = v26;
  return result;
}

void sub_DDA11C(_QWORD *a1@<X8>)
{
  *a1 = &off_13C1F90;
}

NLLanguage sub_DDA12C()
{
  uint64_t v0;
  uint64_t v1;
  NSString *v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1507628);
  v1 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v1 + 16) = xmmword_105F890;
  *(_QWORD *)(v1 + 32) = NLLanguageArabic;
  *(_QWORD *)(v1 + 40) = NLLanguageHebrew;
  qword_15833E8 = v1;
  v2 = NLLanguageArabic;
  return NLLanguageHebrew;
}

NLLanguage sub_DDA198()
{
  uint64_t v0;
  uint64_t v1;
  NSString *v2;
  NSString *v3;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1507628);
  v1 = swift_allocObject(v0, 56, 7);
  *(_OWORD *)(v1 + 16) = xmmword_1060460;
  *(_QWORD *)(v1 + 32) = NLLanguageJapanese;
  *(_QWORD *)(v1 + 40) = NLLanguageSimplifiedChinese;
  *(_QWORD *)(v1 + 48) = NLLanguageTraditionalChinese;
  qword_15833F0 = v1;
  v2 = NLLanguageJapanese;
  v3 = NLLanguageSimplifiedChinese;
  return NLLanguageTraditionalChinese;
}

uint64_t Lyrics.audioAttributes.getter()
{
  return swift_bridgeObjectRetain();
}

void Lyrics.AudioAttribute.hash(into:)(double a1)
{
  Swift::UInt64 v2;

  Hasher._combine(_:)(0);
  if ((*(_QWORD *)&a1 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v2 = *(_QWORD *)&a1;
  else
    v2 = 0;
  Hasher._combine(_:)(v2);
}

BOOL static Lyrics.AudioAttribute.__derived_enum_equals(_:_:)(double a1, double a2)
{
  return a1 == a2;
}

Swift::Int Lyrics.AudioAttribute.hashValue.getter(double a1)
{
  Swift::UInt64 v2;
  _QWORD v4[9];

  Hasher.init(_seed:)(v4);
  Hasher._combine(_:)(0);
  if ((*(_QWORD *)&a1 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v2 = *(_QWORD *)&a1;
  else
    v2 = 0;
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

Swift::Int sub_DDA2D4()
{
  Swift::UInt64 *v0;
  Swift::UInt64 v1;
  Swift::UInt64 v2;
  _QWORD v4[9];

  v1 = *v0;
  Hasher.init(_seed:)(v4);
  Hasher._combine(_:)(0);
  if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v2 = v1;
  else
    v2 = 0;
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

void sub_DDA328()
{
  Swift::UInt64 *v0;
  Swift::UInt64 v1;
  Swift::UInt64 v2;

  v1 = *v0;
  Hasher._combine(_:)(0);
  if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v2 = v1;
  else
    v2 = 0;
  Hasher._combine(_:)(v2);
}

Swift::Int sub_DDA368()
{
  Swift::UInt64 *v0;
  Swift::UInt64 v1;
  Swift::UInt64 v2;
  _QWORD v4[9];

  v1 = *v0;
  Hasher.init(_seed:)(v4);
  Hasher._combine(_:)(0);
  if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v2 = v1;
  else
    v2 = 0;
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

void Lyrics.spatialOffset.getter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  unsigned int v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_BYTE *)(v1 + 32);
  v3 = -1;
  if (1 << v2 < 64)
    v3 = ~(-1 << (1 << v2));
  if ((v3 & *(_QWORD *)(v1 + 56)) == 0)
  {
    v4 = v2 & 0x3F;
    if (v4 > 6
      && !*(_QWORD *)(v1 + 64)
      && v4 >= 8
      && !*(_QWORD *)(v1 + 72)
      && !*(_QWORD *)(v1 + 80)
      && v4 >= 9
      && !*(_QWORD *)(v1 + 88))
    {
      v5 = (unint64_t)((1 << v2) + 63) >> 6;
      if (v5 <= 5)
        v5 = 5;
      v6 = v5 - 5;
      v7 = (uint64_t *)(v1 + 96);
      v8 = 256;
      do
      {
        if (!v6)
          break;
        v9 = *v7++;
        --v6;
        v8 += 64;
      }
      while (!v9);
    }
  }
}

uint64_t Lyrics.__allocating_init(identifier:songInfo:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = swift_allocObject(v3, 160, 7);
  Lyrics.init(identifier:songInfo:)(a1, a2, a3);
  return v7;
}

uint64_t Lyrics.init(identifier:songInfo:)(uint64_t a1, uint64_t a2, void *a3)
{
  _QWORD *v3;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  _QWORD *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  double v40;
  uint64_t v41;
  id v42;
  double v43;
  void *v44;
  char **v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t inited;
  void *v50;
  _QWORD *v51;
  void *v52;
  char *v53;
  char v54;
  id v55;
  double v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  id v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  BOOL v79;
  int64_t v80;
  unint64_t v81;
  int64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  _QWORD *v90;
  _QWORD *v91;
  char v92;
  unint64_t v93;
  uint64_t v94;
  _BOOL8 v95;
  uint64_t v96;
  char v97;
  unint64_t v98;
  char v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t v102;
  void *v103;
  uint64_t v104;
  id v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  double v109;
  id v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  id v114;
  void *v115;
  id v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  int64_t v122;
  int64_t v123;
  char *isUniquelyReferenced_nonNull_native;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  int64_t v129;
  unint64_t v130;
  unint64_t v131;
  _QWORD *v132;
  void *v133;
  id v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  void *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char v144;
  _QWORD *v145;
  uint64_t v146;
  int64_t v147;
  char *v148;
  _UNKNOWN **v149;
  double v150;
  double v151;
  uint64_t v152;
  uint64_t v153;
  _QWORD *v154;
  double v155;
  double v156;
  int v157;
  int v158;
  int v159;
  char **v160;
  __int128 v161;
  uint64_t v162;
  uint64_t v163;
  unint64_t v164;
  unint64_t v165;
  uint64_t v166;
  unint64_t v167;
  unint64_t v168;
  uint64_t v169;
  uint64_t v170;
  int64_t v171;
  unint64_t v172;
  unint64_t v173;
  _QWORD *v174;
  uint64_t v175;
  __int128 v176;
  double v177;
  id v178;
  uint64_t v179;
  double v180;
  id v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  _QWORD *v185;
  uint64_t v186;
  id v187;
  void *v188;
  id v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  unint64_t v193;
  unint64_t v194;
  _QWORD *v195;
  uint64_t v196;
  char v197;
  unint64_t v198;
  unint64_t v199;
  uint64_t v200;
  _QWORD *v201;
  uint64_t result;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  _QWORD *v207;
  uint64_t v208;
  uint64_t v209;
  BOOL *v210;
  uint64_t v211;
  char *v212;
  _BOOL4 v213;
  _QWORD *v214;
  uint64_t v215;
  uint64_t v216;
  int v217;
  int v218;
  int v219;
  __int128 v220;
  _UNKNOWN **v221;
  char *v222;
  int64_t v223;
  void *v224;
  __int128 v225;
  __int128 v226;
  char v227[40];
  __int128 v228;
  ValueMetadata *v229;
  _UNKNOWN **v230;
  _QWORD *v231;
  char v232[12];
  char v233[8];

  *(_QWORD *)&v225 = type metadata accessor for Locale.Language(0);
  v223 = *(_QWORD *)(v225 - 8);
  __chkstk_darwin();
  v222 = (char *)&v205 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[14] = 0;
  v8 = v3 + 14;
  v3[15] = 0;
  v9 = sub_DB9A64((uint64_t)_swiftEmptyArrayStorage);
  v207 = v3;
  v3[16] = v9;
  v10 = v3 + 16;
  v3[17] = 0;
  v3[18] = 0;
  v3[2] = a1;
  v3[3] = a2;
  v224 = a3;
  v11 = objc_msgSend(a3, "language");
  if (v11)
  {
    v12 = v11;
    v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v15 = v14;

  }
  else
  {
    v13 = 0;
    v15 = 0;
  }
  v16 = v207;
  v207[8] = v13;
  v16[9] = v15;
  v17 = v224;
  v18 = objc_msgSend(v224, "availableTranslations");
  v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v18, &type metadata for String);

  v16[10] = v19;
  v21 = v16[8];
  v20 = v16[9];
  swift_beginAccess(v8, v233, 1, 0);
  v16[14] = v21;
  v16[15] = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = sub_DB9A64((uint64_t)_swiftEmptyArrayStorage);
  swift_beginAccess(v10, v232, 1, 0);
  v16[16] = v22;
  objc_msgSend(v17, "leadingSilence", swift_bridgeObjectRelease().n128_f64[0]);
  v16[11] = v23;
  v24 = objc_msgSend(v17, "songwriters");
  v206 = sub_4E684(0, &qword_15072D0, MSVLyricsSongWriter_ptr);
  v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v24, v206);

  if ((unint64_t)v25 >> 62)
  {
    if (v25 < 0)
      v41 = v25;
    else
      v41 = v25 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v26 = _CocoaArrayWrapper.endIndex.getter(v41);
    swift_bridgeObjectRelease();
    if (v26)
      goto LABEL_6;
LABEL_19:
    *(_QWORD *)&v40 = swift_bridgeObjectRelease().n128_u64[0];
    v28 = _swiftEmptyArrayStorage;
    goto LABEL_20;
  }
  v26 = *(_QWORD *)((char *)&dword_10 + (v25 & 0xFFFFFFFFFFFFF8));
  if (!v26)
    goto LABEL_19;
LABEL_6:
  *(_QWORD *)&v228 = _swiftEmptyArrayStorage;
  sub_DDECBC(0, v26 & ~(v26 >> 63), 0);
  if (v26 < 0)
  {
    __break(1u);
LABEL_113:
    if (v25 < 0)
      v142 = v25;
    else
      v142 = v25 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v111 = _CocoaArrayWrapper.endIndex.getter(v142);
    swift_bridgeObjectRelease();
    if (!v111)
      goto LABEL_117;
LABEL_73:
    if (v111 < 1)
    {
      __break(1u);
LABEL_178:
      __break(1u);
LABEL_179:
      result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
      __break(1u);
      return result;
    }
    *(_QWORD *)&v226 = v16;
    v112 = 0;
    v113 = (char *)_swiftEmptyArrayStorage;
    v214 = _swiftEmptyArrayStorage;
    while (1)
    {
      if ((v25 & 0xC000000000000001) != 0)
        v114 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v112, v25);
      else
        v114 = *(id *)(v25 + 8 * v112 + 32);
      v115 = v114;
      v116 = objc_msgSend(v114, "lines");
      v117 = sub_4E684(0, &qword_15072E8, MSVLyricsLine_ptr);
      v118 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v116, v117);

      sub_DE4930(v118, v208, v209, v210, v224, v213, (uint64_t)v221, v211);
      v120 = v119;
      swift_bridgeObjectRelease();
      v121 = *(_QWORD *)(v120 + 16);
      v122 = *((_QWORD *)v113 + 2);
      v123 = v122 + v121;
      if (__OFADD__(v122, v121))
        goto LABEL_101;
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native(v113);
      v125 = v113;
      if ((_DWORD)isUniquelyReferenced_nonNull_native && v123 <= *((_QWORD *)v113 + 3) >> 1)
      {
        if (!*(_QWORD *)(v120 + 16))
          goto LABEL_90;
      }
      else
      {
        if (v122 <= v123)
          v129 = v122 + v121;
        else
          v129 = v122;
        v125 = sub_DDDF20(isUniquelyReferenced_nonNull_native, v129, 1, v113);
        if (!*(_QWORD *)(v120 + 16))
        {
LABEL_90:
          v113 = v125;
          if (v121)
            goto LABEL_102;
          goto LABEL_91;
        }
      }
      v126 = *((_QWORD *)v125 + 2);
      if ((*((_QWORD *)v125 + 3) >> 1) - v126 < v121)
        goto LABEL_103;
      v113 = v125;
      swift_arrayInitWithCopy(&v125[104 * v126 + 32]);
      if (v121)
      {
        v127 = *((_QWORD *)v113 + 2);
        v79 = __OFADD__(v127, v121);
        v128 = v127 + v121;
        if (v79)
          goto LABEL_105;
        *((_QWORD *)v113 + 2) = v128;
      }
LABEL_91:
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native(v214) & 1) == 0)
        v214 = sub_DDE3B8(0, v214[2] + 1, 1, v214, &qword_15072F0, &qword_15075B8);
      v131 = v214[2];
      v130 = v214[3];
      if (v131 >= v130 >> 1)
        v214 = sub_DDE3B8((_QWORD *)(v130 > 1), v131 + 1, 1, v214, &qword_15072F0, &qword_15075B8);
      ++v112;
      v132 = v214;
      v214[2] = v131 + 1;
      v132[v131 + 4] = v120;

      if (v111 == v112)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v16 = (_QWORD *)v226;
        goto LABEL_118;
      }
    }
  }
  v221 = (_UNKNOWN **)v10;
  v27 = 0;
  v28 = (_QWORD *)v228;
  *(_QWORD *)&v226 = v25 & 0xC000000000000001;
  v29 = v25;
  v30 = v26;
  do
  {
    if ((_QWORD)v226)
      v31 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v27, v25);
    else
      v31 = *(id *)(v25 + 8 * v27 + 32);
    v32 = v31;
    v33 = objc_msgSend(v31, "name");
    v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
    v36 = v35;

    *(_QWORD *)&v228 = v28;
    v38 = v28[2];
    v37 = v28[3];
    if (v38 >= v37 >> 1)
    {
      sub_DDECBC((char *)(v37 > 1), v38 + 1, 1);
      v28 = (_QWORD *)v228;
    }
    ++v27;
    v28[2] = v38 + 1;
    v39 = &v28[2 * v38];
    v39[4] = v34;
    v39[5] = v36;
    v25 = v29;
  }
  while (v30 != v27);
  *(_QWORD *)&v40 = swift_bridgeObjectRelease().n128_u64[0];
  v10 = v221;
LABEL_20:
  v207[13] = v28;
  v42 = objc_msgSend(v224, "audioAttributes", v40);
  if (v42)
  {
    v44 = v42;
    v45 = &selRef_stringByReplacingMatchesInString_options_range_withTemplate_;
    if ((objc_msgSend(v42, "isSpatialRole") & 1) != 0)
    {
      objc_msgSend(v44, "lyricsOffset");
      v47 = v46;

      v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_15072F8);
      inited = swift_initStackObject(v48, v227);
      *(_OWORD *)(inited + 16) = xmmword_105B360;
      *(_QWORD *)(inited + 32) = v47;
      v50 = (void *)sub_DD15DC(inited);
      *(_QWORD *)&v43 = swift_setDeallocating(inited).n128_u64[0];
    }
    else
    {

      v50 = &_swiftEmptySetSingleton;
    }
  }
  else
  {
    v50 = &_swiftEmptySetSingleton;
    v45 = &selRef_stringByReplacingMatchesInString_options_range_withTemplate_;
  }
  v51 = v207;
  v207[19] = v50;
  v52 = v224;
  v53 = (char *)objc_msgSend(v224, "type", v43);
  v54 = v53 == (_BYTE *)&dword_0 + 1;
  if (v53 == (_BYTE *)&dword_0 + 2)
    v54 = 2;
  *((_BYTE *)v51 + 56) = v54;
  v211 = swift_allocObject(&unk_13C46A8, 24, 7);
  v205 = v211 + 16;
  swift_weakInit(v211 + 16);
  v210 = (BOOL *)swift_allocObject(&unk_13C46D0, 17, 7);
  v210[16] = 0;
  v209 = swift_allocObject(&unk_13C46F8, 24, 7);
  *(_QWORD *)(v209 + 16) = 0;
  v55 = objc_msgSend(v52, v45[68]);
  if (v55)
  {
    v57 = v55;
    v58 = static String._unconditionallyBridgeFromObjectiveC(_:)(v55);
    v60 = v59;

    swift_bridgeObjectRetain();
    v61 = v222;
    v62 = Locale.Language.init(identifier:)(v58, v60);
    v213 = Locale.Language.characterDirection.getter(v62) == 2;
    (*(void (**)(char *, _QWORD))(v223 + 8))(v61, v225);
    *(_QWORD *)&v56 = swift_bridgeObjectRelease().n128_u64[0];
  }
  else
  {
    v213 = 0;
  }
  v63 = objc_msgSend(v224, v45[68], v56);
  if (v63)
  {
    v64 = v63;
    v65 = static String._unconditionallyBridgeFromObjectiveC(_:)(v63);
    v67 = v66;

  }
  else
  {
    v65 = 0;
    v67 = 0;
  }
  v221 = sub_DE2528(v65, v67);
  v68 = objc_msgSend(v224, "translationsMap", swift_bridgeObjectRelease().n128_f64[0]);
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_15072D8);
  v70 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v68, &type metadata for String, v69, &protocol witness table for String);

  v71 = 0;
  v72 = *(_QWORD *)(v70 + 64);
  v222 = (char *)(v70 + 64);
  *(_QWORD *)&v225 = v70;
  v73 = 1 << *(_BYTE *)(v70 + 32);
  v74 = -1;
  if (v73 < 64)
    v74 = ~(-1 << v73);
  v75 = v74 & v72;
  v223 = (unint64_t)(v73 + 63) >> 6;
  while (1)
  {
    if (v75)
    {
      v77 = __clz(__rbit64(v75));
      v75 &= v75 - 1;
      *(_QWORD *)&v226 = v71;
      v78 = v77 | (v71 << 6);
      goto LABEL_51;
    }
    v79 = __OFADD__(v71, 1);
    v80 = v71 + 1;
    if (v79)
      goto LABEL_100;
    if (v80 >= v223)
      break;
    v81 = *(_QWORD *)&v222[8 * v80];
    if (!v81)
    {
      v82 = v80 + 1;
      if (v80 + 1 >= v223)
        break;
      v81 = *(_QWORD *)&v222[8 * v82];
      if (!v81)
      {
        v82 = v80 + 2;
        if (v80 + 2 >= v223)
          break;
        v81 = *(_QWORD *)&v222[8 * v82];
        if (!v81)
        {
          v82 = v80 + 3;
          if (v80 + 3 >= v223)
            break;
          v81 = *(_QWORD *)&v222[8 * v82];
          if (!v81)
          {
            while (1)
            {
              v80 = v82 + 1;
              if (__OFADD__(v82, 1))
                goto LABEL_104;
              if (v80 >= v223)
                goto LABEL_66;
              v81 = *(_QWORD *)&v222[8 * v80];
              ++v82;
              if (v81)
                goto LABEL_50;
            }
          }
        }
      }
      v80 = v82;
    }
LABEL_50:
    v75 = (v81 - 1) & v81;
    *(_QWORD *)&v226 = v80;
    v78 = __clz(__rbit64(v81)) + (v80 << 6);
LABEL_51:
    v83 = (uint64_t *)(*(_QWORD *)(v225 + 48) + 16 * v78);
    v84 = *v83;
    v85 = v83[1];
    swift_bridgeObjectRetain_n(v85, 2);
    v86 = v224;
    v87 = swift_bridgeObjectRetain();
    v88 = sub_DE45B8(v87, v86, v84, v85);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_beginAccess(v10, &v228, 33, 0);
    v89 = swift_isUniquelyReferenced_nonNull_native(*v10);
    v231 = (_QWORD *)*v10;
    v90 = v231;
    v91 = v10;
    *v10 = 0x8000000000000000;
    v93 = sub_21BAD0(v84, v85);
    v94 = v90[2];
    v95 = (v92 & 1) == 0;
    v96 = v94 + v95;
    if (__OFADD__(v94, v95))
    {
      __break(1u);
LABEL_99:
      __break(1u);
LABEL_100:
      __break(1u);
LABEL_101:
      __break(1u);
LABEL_102:
      __break(1u);
LABEL_103:
      __break(1u);
LABEL_104:
      __break(1u);
LABEL_105:
      __break(1u);
      goto LABEL_106;
    }
    v97 = v92;
    if (v90[3] >= v96)
    {
      if ((v89 & 1) != 0)
      {
        if ((v92 & 1) != 0)
          goto LABEL_36;
      }
      else
      {
        sub_DE1368();
        v90 = v231;
        if ((v97 & 1) != 0)
          goto LABEL_36;
      }
    }
    else
    {
      sub_DE0380(v96, v89);
      v90 = v231;
      v98 = sub_21BAD0(v84, v85);
      if ((v97 & 1) != (v99 & 1))
        goto LABEL_179;
      v93 = v98;
      if ((v97 & 1) != 0)
      {
LABEL_36:
        v76 = v90[7];
        swift_bridgeObjectRelease();
        *(_QWORD *)(v76 + 8 * v93) = v88;
        goto LABEL_37;
      }
    }
    v90[(v93 >> 6) + 8] |= 1 << v93;
    v100 = (uint64_t *)(v90[6] + 16 * v93);
    *v100 = v84;
    v100[1] = v85;
    *(_QWORD *)(v90[7] + 8 * v93) = v88;
    v101 = v90[2];
    v79 = __OFADD__(v101, 1);
    v102 = v101 + 1;
    if (v79)
      goto LABEL_99;
    v90[2] = v102;
    swift_bridgeObjectRetain();
LABEL_37:
    v10 = v91;
    *v91 = v90;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess(&v228);
    v71 = v226;
  }
LABEL_66:
  swift_release();
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0)
  {
LABEL_67:
    v103 = &_swiftEmptySetSingleton;
    goto LABEL_68;
  }
LABEL_106:
  if (!_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
    goto LABEL_67;
  sub_DD1730((uint64_t)_swiftEmptyArrayStorage);
  v103 = v140;
LABEL_68:
  v104 = swift_allocObject(&unk_13C4720, 24, 7);
  v208 = v104;
  *(_QWORD *)(v104 + 16) = v103;
  v16 = (_QWORD *)(v104 + 16);
  v105 = objc_msgSend(v224, "lyricsSections");
  v106 = sub_4E684(0, &qword_15072E0, MSVLyricsSection_ptr);
  v107 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v105, v106);

  if ((unint64_t)v107 >> 62)
  {
    if (v107 < 0)
      v141 = v107;
    else
      v141 = v107 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v108 = _CocoaArrayWrapper.endIndex.getter(v141);
    swift_bridgeObjectRelease();
  }
  else
  {
    v108 = *(_QWORD *)((char *)&dword_10 + (v107 & 0xFFFFFFFFFFFFF8));
  }
  *(_QWORD *)&v109 = swift_bridgeObjectRelease().n128_u64[0];
  if (v108 <= 0)
  {
    v133 = v224;
    v134 = objc_msgSend(v224, "lyricsLines", v109);
    v135 = sub_4E684(0, &qword_15072E8, MSVLyricsLine_ptr);
    v136 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v134, v135);

    sub_DE4930(v136, v208, v209, v210, v133, v213, (uint64_t)v221, v211);
    v113 = v137;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v138 = __swift_instantiateConcreteTypeFromMangledName(&qword_15072F0);
    v139 = swift_allocObject(v138, 40, 7);
    *(_OWORD *)(v139 + 16) = xmmword_105B360;
    v214 = (_QWORD *)v139;
    *(_QWORD *)(v139 + 32) = v113;
    swift_bridgeObjectRetain();
    goto LABEL_118;
  }
  v110 = objc_msgSend(v224, "lyricsSections", v109);
  v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v110, v106);

  if ((unint64_t)v25 >> 62)
    goto LABEL_113;
  v111 = *(_QWORD *)((char *)&dword_10 + (v25 & 0xFFFFFFFFFFFFF8));
  if (v111)
    goto LABEL_73;
LABEL_117:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v113 = (char *)_swiftEmptyArrayStorage;
  v214 = _swiftEmptyArrayStorage;
LABEL_118:
  swift_beginAccess(v16, &v231, 0, 0);
  v143 = swift_bridgeObjectRetain();
  v144 = sub_DE5640(v143);
  swift_bridgeObjectRelease();
  v145 = v207;
  *((_BYTE *)v207 + 96) = v144;
  v145[6] = v113;
  v146 = *((_QWORD *)v113 + 2);
  v212 = v113;
  if (v146)
  {
    v147 = *((_QWORD *)v113 + 14);
    v148 = (char *)*((_QWORD *)v113 + 12);
    v149 = (_UNKNOWN **)*((_QWORD *)v113 + 8);
    v150 = *((double *)v113 + 4);
    v151 = *((double *)v113 + 5);
    swift_bridgeObjectRetain_n(v113, 2);
    v221 = v149;
    swift_bridgeObjectRetain();
    v222 = v148;
    swift_retain();
    v223 = v147;
    swift_retain();
    swift_retain();
    v152 = 0;
    v153 = 0;
    v154 = _swiftEmptyArrayStorage;
    while (1)
    {
      v156 = *(double *)&v212[v152 + 32];
      v155 = *(double *)&v212[v152 + 40];
      v157 = v212[v152 + 56];
      v158 = v212[v152 + 57];
      v159 = v212[v152 + 58];
      v160 = *(char ***)&v212[v152 + 64];
      v161 = *(_OWORD *)&v212[v152 + 72];
      v162 = *(_QWORD *)&v212[v152 + 88];
      v226 = *(_OWORD *)&v212[v152 + 96];
      v225 = *(_OWORD *)&v212[v152 + 112];
      v163 = *(_QWORD *)&v212[v152 + 128];
      v220 = v161;
      v219 = v157;
      v218 = v158;
      v217 = v159;
      v216 = v162;
      if (v153 || v150 <= 7.0)
      {
        if (v156 - v151 <= 7.0)
        {
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain();
          swift_retain();
        }
        else
        {
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain();
          swift_retain();
          if ((swift_isUniquelyReferenced_nonNull_native(v154) & 1) == 0)
            v154 = sub_DDE03C(0, v154[2] + 1, 1, v154);
          v168 = v154[2];
          v167 = v154[3];
          v169 = v168 + 1;
          if (v168 >= v167 >> 1)
            v154 = sub_DDE03C((_QWORD *)(v167 > 1), v168 + 1, 1, v154);
          v229 = &type metadata for Lyrics.InstrumentalLine;
          v230 = &protocol witness table for Lyrics.InstrumentalLine;
          v170 = swift_allocObject(&unk_13C4798, 48, 7);
          *(_QWORD *)&v228 = v170;
          *(_QWORD *)(v170 + 16) = v153;
          *(double *)(v170 + 24) = v151 + 0.1;
          *(double *)(v170 + 32) = v156;
          *(_BYTE *)(v170 + 40) = v213;
          v154[2] = v169;
          sub_8B15C(&v228, (uint64_t)&v154[5 * v168 + 4]);
          v79 = __OFADD__(v153++, 1);
          if (v79)
            goto LABEL_168;
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native(v154) & 1) == 0)
          v154 = sub_DDE03C(0, v154[2] + 1, 1, v154);
        v165 = v154[2];
        v164 = v154[3];
        if (v165 >= v164 >> 1)
          v154 = sub_DDE03C((_QWORD *)(v164 > 1), v165 + 1, 1, v154);
        v229 = &type metadata for Lyrics.InstrumentalLine;
        v230 = &protocol witness table for Lyrics.InstrumentalLine;
        v166 = swift_allocObject(&unk_13C4798, 48, 7);
        *(_QWORD *)&v228 = v166;
        *(_QWORD *)(v166 + 16) = 0;
        *(_QWORD *)(v166 + 24) = 0;
        *(double *)(v166 + 32) = v150;
        *(_BYTE *)(v166 + 40) = v213;
        v154[2] = v165 + 1;
        sub_8B15C(&v228, (uint64_t)&v154[5 * v165 + 4]);
        v153 = 1;
      }
      v215 = v146;
      swift_bridgeObjectRetain_n(v160, 2);
      v169 = v226;
      swift_retain_n(v226, 2);
      v171 = v225;
      swift_retain_n(v225, 2);
      swift_retain_n(v163, 2);
      if ((swift_isUniquelyReferenced_nonNull_native(v154) & 1) == 0)
        v154 = sub_DDE03C(0, v154[2] + 1, 1, v154);
      v173 = v154[2];
      v172 = v154[3];
      v174 = v154;
      if (v173 >= v172 >> 1)
        v174 = sub_DDE03C((_QWORD *)(v172 > 1), v173 + 1, 1, v154);
      v229 = &type metadata for Lyrics.TextLine;
      v230 = &protocol witness table for Lyrics.TextLine;
      v175 = swift_allocObject(&unk_13C4748, 120, 7);
      *(_QWORD *)&v228 = v175;
      *(double *)(v175 + 16) = v156;
      *(double *)(v175 + 24) = v155;
      *(_QWORD *)(v175 + 32) = v153;
      *(_BYTE *)(v175 + 40) = v219;
      *(_BYTE *)(v175 + 41) = v218;
      *(_BYTE *)(v175 + 42) = v217;
      *(_QWORD *)(v175 + 48) = v160;
      *(_OWORD *)(v175 + 56) = v220;
      *(_QWORD *)(v175 + 72) = v216;
      v176 = v225;
      *(_OWORD *)(v175 + 80) = v226;
      *(_OWORD *)(v175 + 96) = v176;
      *(_QWORD *)(v175 + 112) = v163;
      v174[2] = v173 + 1;
      v154 = v174;
      sub_8B15C(&v228, (uint64_t)&v174[5 * v173 + 4]);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      v79 = __OFADD__(v153++, 1);
      if (v79)
        break;
      v152 += 104;
      v150 = v156;
      v151 = v155;
      v221 = (_UNKNOWN **)v160;
      v222 = (char *)v169;
      v223 = v171;
      v146 = v215 - 1;
      if (v215 == 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        *(_QWORD *)&v177 = swift_release().n128_u64[0];
        goto LABEL_144;
      }
    }
    __break(1u);
LABEL_168:
    __break(1u);
LABEL_169:
    if (v169 < 0)
      v203 = v169;
    else
      v203 = v169 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v179 = _CocoaArrayWrapper.endIndex.getter(v203);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    v153 = 0;
    v154 = _swiftEmptyArrayStorage;
    v155 = 0.0;
LABEL_144:
    v160 = &selRef_stringByReplacingMatchesInString_options_range_withTemplate_;
    v178 = objc_msgSend(v224, "songwriters", v177);
    v169 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v178, v206);

    if ((unint64_t)v169 >> 62)
      goto LABEL_169;
    v179 = *(_QWORD *)((char *)&dword_10 + (v169 & 0xFFFFFFFFFFFFF8));
  }
  *(_QWORD *)&v180 = swift_bridgeObjectRelease().n128_u64[0];
  if (!v179)
  {
    swift_bridgeObjectRelease();
    v196 = v205;
    goto LABEL_166;
  }
  v181 = objc_msgSend(v224, v160[139], v180);
  v182 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v181, v206);

  if ((unint64_t)v182 >> 62)
  {
    if (v182 < 0)
      v204 = v182;
    else
      v204 = v182 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v183 = _CocoaArrayWrapper.endIndex.getter(v204);
    swift_bridgeObjectRelease();
  }
  else
  {
    v183 = *(_QWORD *)((char *)&dword_10 + (v182 & 0xFFFFFFFFFFFFF8));
  }
  *(_QWORD *)&v225 = v154;
  if (!v183)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v185 = _swiftEmptyArrayStorage;
    goto LABEL_161;
  }
  *(_QWORD *)&v228 = _swiftEmptyArrayStorage;
  sub_DDECBC(0, v183 & ~(v183 >> 63), 0);
  if (v183 < 0)
    goto LABEL_178;
  v184 = 0;
  v185 = (_QWORD *)v228;
  *(_QWORD *)&v226 = v182 & 0xC000000000000001;
  v186 = v182;
  do
  {
    if ((_QWORD)v226)
      v187 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v184, v182);
    else
      v187 = *(id *)(v182 + 8 * v184 + 32);
    v188 = v187;
    v189 = objc_msgSend(v187, "name");
    v190 = static String._unconditionallyBridgeFromObjectiveC(_:)(v189);
    v192 = v191;

    *(_QWORD *)&v228 = v185;
    v194 = v185[2];
    v193 = v185[3];
    if (v194 >= v193 >> 1)
    {
      sub_DDECBC((char *)(v193 > 1), v194 + 1, 1);
      v185 = (_QWORD *)v228;
    }
    ++v184;
    v185[2] = v194 + 1;
    v195 = &v185[2 * v194];
    v195[4] = v190;
    v195[5] = v192;
    v182 = v186;
  }
  while (v183 != v184);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_161:
  v197 = swift_isUniquelyReferenced_nonNull_native(v225);
  v196 = v205;
  if ((v197 & 1) == 0)
    *(_QWORD *)&v225 = sub_DDE03C(0, *(_QWORD *)(v225 + 16) + 1, 1, (_QWORD *)v225);
  v199 = *(_QWORD *)(v225 + 16);
  v198 = *(_QWORD *)(v225 + 24);
  if (v199 >= v198 >> 1)
    *(_QWORD *)&v225 = sub_DDE03C((_QWORD *)(v198 > 1), v199 + 1, 1, (_QWORD *)v225);
  v229 = &type metadata for Lyrics.SongwritersLine;
  v230 = &protocol witness table for Lyrics.SongwritersLine;
  v200 = swift_allocObject(&unk_13C4770, 56, 7);
  *(_QWORD *)&v228 = v200;
  *(_QWORD *)(v200 + 16) = v153;
  *(double *)(v200 + 24) = v155;
  *(_QWORD *)(v200 + 32) = 0x7FF0000000000000;
  *(_BYTE *)(v200 + 40) = v213;
  *(_QWORD *)(v200 + 48) = v185;
  v154 = (_QWORD *)v225;
  *(_QWORD *)(v225 + 16) = v199 + 1;
  sub_8B15C(&v228, (uint64_t)&v154[5 * v199 + 4]);
LABEL_166:

  v201 = v207;
  v207[4] = v214;
  v201[5] = v154;
  swift_beginAccess(v196, &v228, 1, 0);
  swift_weakAssign(v196, v201);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return (uint64_t)v201;
}

_QWORD *sub_DDBC68(uint64_t a1)
{
  int64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_DDECBC(0, v1, 0);
    v3 = (_QWORD *)(a1 + 32);
    do
    {
      v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v3);
      v6 = v5;
      v8 = _swiftEmptyArrayStorage[2];
      v7 = _swiftEmptyArrayStorage[3];
      if (v8 >= v7 >> 1)
        sub_DDECBC((char *)(v7 > 1), v8 + 1, 1);
      _swiftEmptyArrayStorage[2] = v8 + 1;
      v9 = &_swiftEmptyArrayStorage[2 * v8];
      v9[4] = v4;
      v9[5] = v6;
      ++v3;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_DDBD40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t Strong;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35[24];
  char v36[24];
  char v37[32];

  v7 = a1 + 16;
  swift_beginAccess(a1 + 16, v37, 0, 0);
  Strong = swift_weakLoadStrong(v7);
  if (!Strong)
    goto LABEL_19;
  v9 = (_QWORD *)Strong;
  swift_beginAccess(Strong + 112, v36, 0, 0);
  v10 = v9[15];
  if (!v10
    || ((v11 = v9[9]) != 0 ? (v12 = a3 == 0) : (v12 = 1),
        v12
     || ((v13 = v9[14], v14 = v9[8], v13 == v14) ? (v15 = v10 == v11) : (v15 = 0),
         v15
      || (_stringCompareWithSmolCheck(_:_:expecting:)(v9[14], v9[15], v14, v11, 0) & 1) != 0
      || (swift_beginAccess(v9 + 16, v35, 0, 0), v16 = v9[16], !*(_QWORD *)(v16 + 16)))))
  {
    swift_release();
LABEL_19:
    swift_bridgeObjectRetain();
    return a4;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17 = sub_21BAD0(v13, v10);
  if ((v18 & 1) == 0)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  v19 = *(_QWORD *)(*(_QWORD *)(v16 + 56) + 8 * v17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v19 + 16) || (v20 = sub_21BAD0(a2, a3), (v21 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    swift_release();
    goto LABEL_23;
  }
  v22 = (uint64_t *)(*(_QWORD *)(v19 + 56) + 88 * v20);
  v24 = v22[2];
  v23 = v22[3];
  v25 = v22[5];
  v33 = v22[1];
  v34 = v22[4];
  v27 = v22[6];
  v26 = v22[7];
  v31 = v22[8];
  v32 = v22[9];
  v29 = *v22;
  v30 = v22[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_DE6F48(v23, v34, v25, v27);
  swift_bridgeObjectRelease();
  swift_release();
  if (!v33)
  {
LABEL_23:
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  swift_bridgeObjectRetain();
  a4 = v29;
  sub_DE6F78(v29, v33, v24, v23, v34, v25, v27, v26, v31, v32, v30);
  swift_bridgeObjectRelease();
  return a4;
}

uint64_t sub_DDBFB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t Strong;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[24];
  _BYTE v33[24];
  _BYTE v34[24];
  _BYTE v35[24];

  v7 = a1 + 16;
  swift_beginAccess(a1 + 16, v35, 0, 0);
  Strong = swift_weakLoadStrong(v7);
  if (!Strong)
    goto LABEL_16;
  v9 = (_QWORD *)Strong;
  swift_beginAccess(Strong + 112, v33, 0, 0);
  v10 = v9[15];
  if (!v10)
    goto LABEL_15;
  v11 = v9[9];
  if (!v11)
    goto LABEL_15;
  if (!a3)
    goto LABEL_15;
  v12 = v9[14];
  v13 = v9[8];
  if (v12 == v13 && v10 == v11)
    goto LABEL_15;
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(v9[14], v9[15], v13, v11, 0) & 1) != 0)
    goto LABEL_15;
  swift_beginAccess(v9 + 16, v32, 0, 0);
  v14 = v9[16];
  if (!*(_QWORD *)(v14 + 16))
    goto LABEL_15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15 = sub_21BAD0(v12, v10);
  if ((v16 & 1) == 0)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_16:
    v26 = (uint64_t *)(a4 + 16);
    swift_beginAccess(v26, v34, 0, 0);
    v21 = *v26;
    swift_bridgeObjectRetain();
    return v21;
  }
  v17 = *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v15);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v17 + 16) || (v18 = sub_21BAD0(a2, a3), (v19 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_15:
    swift_release();
    goto LABEL_16;
  }
  v20 = (_QWORD *)(*(_QWORD *)(v17 + 56) + 88 * v18);
  v21 = v20[2];
  v22 = v20[3];
  v23 = v20[4];
  v24 = v20[5];
  v25 = v20[6];
  v31 = v20[8];
  v29 = v20[9];
  v30 = v20[7];
  v28 = v20[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_DE6F48(v22, v23, v24, v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_DE2478(v22, v23, v24, v25, v30, v31, v29, v28);
  return v21;
}

uint64_t sub_DDC204@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v9;
  uint64_t Strong;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  _BYTE v32[24];
  _BYTE v33[24];
  _BYTE v34[24];
  _BYTE v35[24];

  v9 = a1 + 16;
  swift_beginAccess(a1 + 16, v35, 0, 0);
  Strong = swift_weakLoadStrong(v9);
  if (!Strong)
    goto LABEL_16;
  v11 = (_QWORD *)Strong;
  swift_beginAccess(Strong + 112, v33, 0, 0);
  v12 = v11[15];
  if (!v12)
    goto LABEL_15;
  v13 = v11[9];
  if (!v13)
    goto LABEL_15;
  if (!a3)
    goto LABEL_15;
  v14 = v11[14];
  v15 = v11[8];
  if (v14 == v15 && v12 == v13)
    goto LABEL_15;
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(v11[14], v11[15], v15, v13, 0) & 1) != 0)
    goto LABEL_15;
  swift_beginAccess(v11 + 16, v32, 0, 0);
  v16 = v11[16];
  if (!*(_QWORD *)(v16 + 16))
    goto LABEL_15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17 = sub_21BAD0(v14, v12);
  if ((v18 & 1) == 0)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_16:
    swift_beginAccess(a4 + 2, v34, 0, 0);
    v23 = a4[2];
    v24 = a4[3];
    v25 = a4[4];
    v26 = a4[5];
    v27 = a4[6];
    v28 = a4[7];
    v30 = a4[8];
    v29 = a4[9];
    result = sub_DE6F48(v23, v24, v25, v26);
    goto LABEL_17;
  }
  v19 = *(_QWORD *)(*(_QWORD *)(v16 + 56) + 8 * v17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v19 + 16) || (v20 = sub_21BAD0(a2, a3), (v21 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_15:
    swift_release();
    goto LABEL_16;
  }
  v22 = (_QWORD *)(*(_QWORD *)(v19 + 56) + 88 * v20);
  v23 = v22[3];
  v24 = v22[4];
  v25 = v22[5];
  v26 = v22[6];
  v27 = v22[7];
  v28 = v22[8];
  v30 = v22[9];
  v29 = v22[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_DE6F48(v23, v24, v25, v26);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_DE6F48(v23, v24, v25, v26);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = sub_DE2478(v23, v24, v25, v26, v27, v28, v30, v29);
LABEL_17:
  *a5 = v23;
  a5[1] = v24;
  a5[2] = v25;
  a5[3] = v26;
  a5[4] = v27;
  a5[5] = v28;
  a5[6] = v30;
  a5[7] = v29;
  return result;
}

void Lyrics.line(before:useOriginalLines:)(char a1@<W0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[3];
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;

  if ((a1 & 1) != 0)
  {
    v6 = sub_DD7DD0(*(_QWORD *)(v3 + 48));
    v7 = v6[2];
    if (!v7)
      goto LABEL_6;
  }
  else
  {
    v6 = *(_QWORD **)(v3 + 40);
    swift_bridgeObjectRetain();
    v7 = v6[2];
    if (!v7)
    {
LABEL_6:
      swift_bridgeObjectRelease();
      *(_QWORD *)(a2 + 32) = 0;
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
      return;
    }
  }
  v8 = v6 + 4;
  sub_55D1C((uint64_t)(v6 + 4), (uint64_t)&v29);
  v10 = *((_QWORD *)&v30 + 1);
  v9 = v31;
  __swift_project_boxed_opaque_existential_1(&v29, *((uint64_t *)&v30 + 1));
  v11 = (*(double (**)(uint64_t))(*(_QWORD *)(v9 + 8) + 8))(v10);
  __swift_destroy_boxed_opaque_existential_1(&v29);
  if (v11 > a3)
    goto LABEL_6;
  v12 = 0;
  v13 = v7 - 1;
  v31 = 0;
  v29 = 0u;
  v30 = 0u;
  v14 = v13;
  while (!__OFSUB__(v14, v12))
  {
    v15 = v12 + (v14 - v12) / 2;
    if (__OFADD__(v12, (v14 - v12) / 2))
      goto LABEL_25;
    if ((v15 & 0x8000000000000000) != 0)
      goto LABEL_26;
    if (v15 >= v6[2])
      goto LABEL_27;
    sub_55D1C((uint64_t)&v8[5 * v15], (uint64_t)v26);
    v17 = v27;
    v16 = v28;
    __swift_project_boxed_opaque_existential_1(v26, v27);
    v18 = (*(double (**)(uint64_t))(*(_QWORD *)(v16 + 8) + 8))(v17);
    v19 = v18;
    if ((uint64_t)v15 >= v13)
    {
      v22 = INFINITY;
      if (v18 > a3)
        goto LABEL_8;
    }
    else
    {
      if (v15 + 1 >= v6[2])
        goto LABEL_28;
      sub_55D1C((uint64_t)&v8[5 * v15 + 5], (uint64_t)v23);
      v21 = v24;
      v20 = v25;
      __swift_project_boxed_opaque_existential_1(v23, v24);
      v22 = (*(double (**)(uint64_t))(*(_QWORD *)(v20 + 8) + 8))(v21);
      __swift_destroy_boxed_opaque_existential_1(v23);
      if (v19 > a3)
      {
LABEL_8:
        v14 = v15 - 1;
        goto LABEL_9;
      }
    }
    if (v22 >= a3)
    {
      sub_56024((uint64_t)&v29, &qword_1508630);
      swift_bridgeObjectRelease();
      sub_55D1C((uint64_t)v26, (uint64_t)&v29);
      __swift_destroy_boxed_opaque_existential_1(v26);
      goto LABEL_23;
    }
    v12 = v15 + 1;
LABEL_9:
    __swift_destroy_boxed_opaque_existential_1(v26);
    if (v14 < v12)
    {
      swift_bridgeObjectRelease();
LABEL_23:
      sub_5C090((uint64_t)&v29, a2, &qword_1508630);
      return;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
}

uint64_t Lyrics.line(after:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = a1[3];
  v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
  v7 = result + 1;
  if (__OFADD__(result, 1))
  {
    __break(1u);
  }
  else
  {
    v8 = *(_QWORD *)(v2 + 40);
    if (v7 >= *(_QWORD *)(v8 + 16))
    {
      *(_QWORD *)(a2 + 32) = 0;
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
      return result;
    }
    if ((v7 & 0x8000000000000000) == 0)
      return sub_55D1C(v8 + 40 * v7 + 32, a2);
  }
  __break(1u);
  return result;
}

BOOL sub_DDC7B0(id *a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  Swift::String v9;
  Swift::String v10;
  uint64_t v11;
  __C::_NSRange v12;

  objc_msgSend(*a1, "characterRange");
  v9._countAndFlagsBits = a2;
  v9._object = a3;
  v10._countAndFlagsBits = a4;
  v10._object = a5;
  v12 = _NSRange.convert(from:to:preserveLength:)(v9, v10, 1);
  if (!v11)
    return _NSRange.contains(_:)(v12);
  swift_errorRelease(v11);
  return 0;
}

BOOL sub_DDC850(id *a1, char *a2, void *a3, char *a4, void *a5)
{
  id v9;
  Swift::String v10;
  Swift::String v11;
  uint64_t v12;
  __C::_NSRange v13;
  uint64_t v14;
  id v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;

  v9 = *a1;
  objc_msgSend(*a1, "characterRange");
  v10._countAndFlagsBits = (uint64_t)a2;
  v10._object = a3;
  v11._countAndFlagsBits = (uint64_t)a4;
  v11._object = a5;
  v13 = _NSRange.convert(from:to:preserveLength:)(v10, v11, 0);
  if (!v12)
    return _NSRange.intersects(_:)(v13);
  if (qword_1506120 != -1)
    swift_once(&qword_1506120, sub_DDD864);
  v14 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v14, (uint64_t)static Logger.lyrics);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain(v12);
  v15 = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain(v12);
  v16 = v15;
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.error.getter(v17);
  if (os_log_type_enabled(v17, v18))
  {
    v19 = swift_slowAlloc(42, -1);
    v25 = (uint64_t *)swift_slowAlloc(8, -1);
    v26 = swift_slowAlloc(96, -1);
    v27 = v26;
    *(_DWORD *)v19 = 136446978;
    v20 = (char *)_NSRange.description.getter(objc_msgSend(v16, "characterRange"));
    *(_QWORD *)(v19 + 4) = sub_DCF730(v20, v21, &v27);

    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2082;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v19 + 14) = sub_DCF730(a4, (char *)a5, &v27);
    swift_bridgeObjectRelease_n(a5, 3);
    *(_WORD *)(v19 + 22) = 2082;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v19 + 24) = sub_DCF730(a2, (char *)a3, &v27);
    swift_bridgeObjectRelease_n(a3, 3);
    *(_WORD *)(v19 + 32) = 2114;
    swift_errorRetain(v12);
    v22 = _swift_stdlib_bridgeErrorToNSError(v12);
    *(_QWORD *)(v19 + 34) = v22;
    *v25 = v22;
    swift_errorRelease(v12);
    swift_errorRelease(v12);
    _os_log_impl(&dword_0, v17, v18, "    Wasn't able to convert syllable range from primaryVocalText to lyricsText indicating a parsing issue.\n    MSVLyricsWord.characterRange=%{public}s\n    primaryVocalsText=%{public}s\n    lyricsText=%{public}s\n    thrownError=%{public}@", (uint8_t *)v19, 0x2Au);
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506E30);
    swift_arrayDestroy(v25, 1, v23);
    swift_slowDealloc(v25, -1, -1);
    swift_arrayDestroy(v26, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v19, -1, -1);

    swift_errorRelease(v12);
  }
  else
  {
    swift_errorRelease(v12);
    swift_bridgeObjectRelease_n(a3, 2);
    swift_bridgeObjectRelease_n(a5, 2);

    swift_errorRelease(v12);
    swift_errorRelease(v12);

  }
  return 0;
}

uint64_t Logger.lyrics.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_1506120 != -1)
    swift_once(&qword_1506120, sub_DDD864);
  v0 = type metadata accessor for Logger(0);
  return __swift_project_value_buffer(v0, (uint64_t)static Logger.lyrics);
}

void sub_DDCBDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  double v21;
  int64_t v22;
  unint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[5];
  void *v36;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v2 = a1;
    else
      v2 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v3 = __CocoaSet.makeIterator()(v2);
    v4 = sub_4E684(0, (unint64_t *)&qword_1507258, MSVLyricsAgent_ptr);
    v5 = sub_DE6D6C();
    v6 = Set.Iterator.init(_cocoa:)(v35, v3, v4, v5);
    v1 = v35[0];
    v33 = v35[1];
    v7 = v35[2];
    v8 = v35[3];
    v9 = v35[4];
  }
  else
  {
    v10 = -1 << *(_BYTE *)(a1 + 32);
    v33 = a1 + 56;
    v7 = ~v10;
    v11 = -v10;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v9 = v12 & *(_QWORD *)(a1 + 56);
    v6 = (_QWORD *)swift_bridgeObjectRetain();
    v8 = 0;
  }
  v31 = v7;
  v32 = (unint64_t)(v7 + 64) >> 6;
  while (1)
  {
    v14 = v8;
    if (v1 < 0)
    {
      v17 = __CocoaSet.Iterator.next()(v6);
      if (!v17)
        goto LABEL_40;
      v18 = v17;
      v34 = v17;
      v19 = sub_4E684(0, (unint64_t *)&qword_1507258, MSVLyricsAgent_ptr);
      swift_unknownObjectRetain(v18);
      swift_dynamicCast(&v36, &v34, (char *)&type metadata for Swift.AnyObject + 8, v19, 7);
      v20 = v36;
      *(_QWORD *)&v21 = swift_unknownObjectRelease(v18).n128_u64[0];
      if (!v20)
        goto LABEL_40;
      goto LABEL_35;
    }
    if (!v9)
      break;
    v15 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v16 = v15 | (v8 << 6);
LABEL_34:
    v20 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v16);
    if (!v20)
      goto LABEL_40;
LABEL_35:
    v25 = objc_msgSend(v20, "type", v21, v31);
    if (v25)
    {
      v26 = v25;
      v27 = v1;
      v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
      v30 = v29;

      if (v28 == 0x70756F7267 && v30 == 0xE500000000000000)
      {

        swift_bridgeObjectRelease();
        v1 = v27;
LABEL_40:
        sub_55D68(v1);
        return;
      }
      v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v28, v30, 0x70756F7267, 0xE500000000000000, 0);

      swift_bridgeObjectRelease();
      v1 = v27;
      if ((v13 & 1) != 0)
        goto LABEL_40;
    }
    else
    {

    }
  }
  v22 = v8 + 1;
  if (!__OFADD__(v8, 1))
  {
    if (v22 >= v32)
      goto LABEL_40;
    v23 = *(_QWORD *)(v33 + 8 * v22);
    ++v8;
    if (!v23)
    {
      v8 = v14 + 2;
      if (v14 + 2 >= v32)
        goto LABEL_40;
      v23 = *(_QWORD *)(v33 + 8 * v8);
      if (!v23)
      {
        v8 = v14 + 3;
        if (v14 + 3 >= v32)
          goto LABEL_40;
        v23 = *(_QWORD *)(v33 + 8 * v8);
        if (!v23)
        {
          v8 = v14 + 4;
          if (v14 + 4 >= v32)
            goto LABEL_40;
          v23 = *(_QWORD *)(v33 + 8 * v8);
          if (!v23)
          {
            v8 = v14 + 5;
            if (v14 + 5 >= v32)
              goto LABEL_40;
            v23 = *(_QWORD *)(v33 + 8 * v8);
            if (!v23)
            {
              v24 = v14 + 6;
              while (v32 != v24)
              {
                v23 = *(_QWORD *)(v33 + 8 * v24++);
                if (v23)
                {
                  v8 = v24 - 1;
                  goto LABEL_33;
                }
              }
              goto LABEL_40;
            }
          }
        }
      }
    }
LABEL_33:
    v9 = (v23 - 1) & v23;
    v16 = __clz(__rbit64(v23)) + (v8 << 6);
    goto LABEL_34;
  }
  __break(1u);
}

void sub_DDCF5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  double v21;
  int64_t v22;
  unint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[5];
  void *v36;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v2 = a1;
    else
      v2 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v3 = __CocoaSet.makeIterator()(v2);
    v4 = sub_4E684(0, (unint64_t *)&qword_1507258, MSVLyricsAgent_ptr);
    v5 = sub_DE6D6C();
    v6 = Set.Iterator.init(_cocoa:)(v35, v3, v4, v5);
    v1 = v35[0];
    v33 = v35[1];
    v7 = v35[2];
    v8 = v35[3];
    v9 = v35[4];
  }
  else
  {
    v10 = -1 << *(_BYTE *)(a1 + 32);
    v33 = a1 + 56;
    v7 = ~v10;
    v11 = -v10;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v9 = v12 & *(_QWORD *)(a1 + 56);
    v6 = (_QWORD *)swift_bridgeObjectRetain();
    v8 = 0;
  }
  v31 = v7;
  v32 = (unint64_t)(v7 + 64) >> 6;
  while (1)
  {
    v14 = v8;
    if (v1 < 0)
    {
      v17 = __CocoaSet.Iterator.next()(v6);
      if (!v17)
        goto LABEL_40;
      v18 = v17;
      v34 = v17;
      v19 = sub_4E684(0, (unint64_t *)&qword_1507258, MSVLyricsAgent_ptr);
      swift_unknownObjectRetain(v18);
      swift_dynamicCast(&v36, &v34, (char *)&type metadata for Swift.AnyObject + 8, v19, 7);
      v20 = v36;
      *(_QWORD *)&v21 = swift_unknownObjectRelease(v18).n128_u64[0];
      if (!v20)
        goto LABEL_40;
      goto LABEL_35;
    }
    if (!v9)
      break;
    v15 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v16 = v15 | (v8 << 6);
LABEL_34:
    v20 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v16);
    if (!v20)
      goto LABEL_40;
LABEL_35:
    v25 = objc_msgSend(v20, "type", v21, v31);
    if (v25)
    {
      v26 = v25;
      v27 = v1;
      v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
      v30 = v29;

      if (v28 == 0x726568746FLL && v30 == 0xE500000000000000)
      {

        swift_bridgeObjectRelease();
        v1 = v27;
LABEL_40:
        sub_55D68(v1);
        return;
      }
      v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v28, v30, 0x726568746FLL, 0xE500000000000000, 0);

      swift_bridgeObjectRelease();
      v1 = v27;
      if ((v13 & 1) != 0)
        goto LABEL_40;
    }
    else
    {

    }
  }
  v22 = v8 + 1;
  if (!__OFADD__(v8, 1))
  {
    if (v22 >= v32)
      goto LABEL_40;
    v23 = *(_QWORD *)(v33 + 8 * v22);
    ++v8;
    if (!v23)
    {
      v8 = v14 + 2;
      if (v14 + 2 >= v32)
        goto LABEL_40;
      v23 = *(_QWORD *)(v33 + 8 * v8);
      if (!v23)
      {
        v8 = v14 + 3;
        if (v14 + 3 >= v32)
          goto LABEL_40;
        v23 = *(_QWORD *)(v33 + 8 * v8);
        if (!v23)
        {
          v8 = v14 + 4;
          if (v14 + 4 >= v32)
            goto LABEL_40;
          v23 = *(_QWORD *)(v33 + 8 * v8);
          if (!v23)
          {
            v8 = v14 + 5;
            if (v14 + 5 >= v32)
              goto LABEL_40;
            v23 = *(_QWORD *)(v33 + 8 * v8);
            if (!v23)
            {
              v24 = v14 + 6;
              while (v32 != v24)
              {
                v23 = *(_QWORD *)(v33 + 8 * v24++);
                if (v23)
                {
                  v8 = v24 - 1;
                  goto LABEL_33;
                }
              }
              goto LABEL_40;
            }
          }
        }
      }
    }
LABEL_33:
    v9 = (v23 - 1) & v23;
    v16 = __clz(__rbit64(v23)) + (v8 << 6);
    goto LABEL_34;
  }
  __break(1u);
}

_QWORD *Lyrics.deinit()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[4]);
  swift_bridgeObjectRelease(v0[5]);
  swift_bridgeObjectRelease(v0[6]);
  swift_bridgeObjectRelease(v0[9]);
  swift_bridgeObjectRelease(v0[10]);
  swift_bridgeObjectRelease(v0[13]);
  swift_bridgeObjectRelease(v0[15]);
  swift_bridgeObjectRelease(v0[16]);
  swift_bridgeObjectRelease(v0[18]);
  swift_bridgeObjectRelease(v0[19]);
  return v0;
}

double Lyrics.__deallocating_deinit()
{
  uint64_t v0;
  double result;

  Lyrics.deinit();
  *(_QWORD *)&result = swift_deallocClassInstance(v0, 160, 7).n128_u64[0];
  return result;
}

id sub_DDD368(id *a1)
{
  return objc_msgSend(*a1, "isBackgroundVocal");
}

id sub_DDD398()
{
  id *v0;

  return objc_msgSend(*v0, "startTime");
}

id sub_DDD3A8()
{
  id *v0;

  return objc_msgSend(*v0, "endTime");
}

uint64_t MSVLyricsAgent.isEqual(_:)(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  double v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  double v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  double v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  _BYTE v53[24];
  uint64_t v54;

  sub_5C238(a1, (uint64_t)v53, &qword_1508840);
  if (!v54)
  {
    sub_56024((uint64_t)v53, &qword_1508840);
    goto LABEL_46;
  }
  v2 = sub_4E684(0, (unint64_t *)&qword_1507258, MSVLyricsAgent_ptr);
  if ((swift_dynamicCast(&v52, v53, (char *)&type metadata for Any + 8, v2, 6) & 1) == 0)
  {
LABEL_46:
    v39 = 0;
    return v39 & 1;
  }
  v3 = v52;
  v4 = objc_msgSend(v1, "type");
  if (v4)
  {
    v5 = v4;
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v8 = v7;

  }
  else
  {
    v6 = 0;
    v8 = 0;
  }
  v9 = objc_msgSend(v3, "type");
  if (v9)
  {
    v11 = v9;
    v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v14 = v13;

    if (v8)
    {
      if (!v14)
        goto LABEL_44;
      if (v6 == v12 && v8 == v14)
      {
        swift_bridgeObjectRelease();
        *(_QWORD *)&v10 = swift_bridgeObjectRelease().n128_u64[0];
      }
      else
      {
        v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v8, v12, v14, 0);
        swift_bridgeObjectRelease();
        *(_QWORD *)&v10 = swift_bridgeObjectRelease().n128_u64[0];
        if ((v15 & 1) == 0)
          goto LABEL_51;
      }
    }
    else if (v14)
    {
      goto LABEL_44;
    }
  }
  else if (v8)
  {
    goto LABEL_44;
  }
  v16 = objc_msgSend(v1, "name", v10);
  if (v16)
  {
    v17 = v16;
    v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
    v20 = v19;

  }
  else
  {
    v18 = 0;
    v20 = 0;
  }
  v21 = objc_msgSend(v3, "name");
  if (v21)
  {
    v23 = v21;
    v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
    v26 = v25;

    if (v20)
    {
      if (!v26)
        goto LABEL_44;
      if (v18 == v24 && v20 == v26)
      {
        swift_bridgeObjectRelease();
        *(_QWORD *)&v22 = swift_bridgeObjectRelease().n128_u64[0];
      }
      else
      {
        v27 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v20, v24, v26, 0);
        swift_bridgeObjectRelease();
        *(_QWORD *)&v22 = swift_bridgeObjectRelease().n128_u64[0];
        if ((v27 & 1) == 0)
          goto LABEL_51;
      }
    }
    else if (v26)
    {
      goto LABEL_44;
    }
  }
  else if (v20)
  {
    goto LABEL_44;
  }
  v28 = objc_msgSend(v1, "artistID", v22);
  if (v28)
  {
    v29 = v28;
    v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
    v32 = v31;

  }
  else
  {
    v30 = 0;
    v32 = 0;
  }
  v33 = objc_msgSend(v3, "artistID");
  if (!v33)
  {
    if (v32)
      goto LABEL_44;
    goto LABEL_49;
  }
  v35 = v33;
  v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
  v38 = v37;

  if (!v32)
  {
    if (v38)
      goto LABEL_44;
    goto LABEL_49;
  }
  if (!v38)
    goto LABEL_44;
  if (v30 == v36 && v32 == v38)
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)&v34 = swift_bridgeObjectRelease().n128_u64[0];
    goto LABEL_49;
  }
  v41 = _stringCompareWithSmolCheck(_:_:expecting:)(v30, v32, v36, v38, 0);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v34 = swift_bridgeObjectRelease().n128_u64[0];
  if ((v41 & 1) == 0)
  {
LABEL_51:

    goto LABEL_46;
  }
LABEL_49:
  v42 = objc_msgSend(v1, "identifier", v34);
  if (v42)
  {
    v43 = v42;
    v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
    v46 = v45;

  }
  else
  {
    v44 = 0;
    v46 = 0;
  }
  v47 = objc_msgSend(v3, "identifier");
  if (!v47)
  {
    if (!v46)
    {

      v39 = 1;
      return v39 & 1;
    }
    goto LABEL_44;
  }
  v48 = v47;
  v49 = static String._unconditionallyBridgeFromObjectiveC(_:)(v47);
  v51 = v50;

  if (!v46)
  {

    if (!v51)
    {
      v39 = 1;
      return v39 & 1;
    }
    goto LABEL_45;
  }
  if (!v51)
  {
LABEL_44:

LABEL_45:
    swift_bridgeObjectRelease();
    goto LABEL_46;
  }
  if (v44 == v49 && v46 == v51)
    v39 = 1;
  else
    v39 = _stringCompareWithSmolCheck(_:_:expecting:)(v44, v46, v49, v51, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v39 & 1;
}

uint64_t sub_DDD864()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  __swift_allocate_value_buffer(v0, static Logger.lyrics);
  __swift_project_value_buffer(v0, (uint64_t)static Logger.lyrics);
  return static Logger.music(_:)(0x73636972794CLL, 0xE600000000000000);
}

uint64_t static Logger.lyrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1506120 != -1)
    swift_once(&qword_1506120, sub_DDD864);
  v2 = type metadata accessor for Logger(0);
  v3 = __swift_project_value_buffer(v2, (uint64_t)static Logger.lyrics);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

size_t sub_DDD92C(size_t result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  char *v21;

  v5 = result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v15 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_15068B8);
  v11 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_15068B0) - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = *(unsigned __int8 *)(v11 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = (_QWORD *)swift_allocObject(v10, v14 + v12 * v9, v13 | 7);
  result = _swift_stdlib_malloc_size_0(v15);
  if (!v12)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v14 == 0x8000000000000000 && v12 == -1)
    goto LABEL_29;
  v15[2] = v8;
  v15[3] = 2 * ((uint64_t)(result - v14) / v12);
LABEL_19:
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_15068B0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v20 = (char *)v15 + v19;
  v21 = (char *)a4 + v19;
  if ((v5 & 1) != 0)
  {
    if (v15 < a4 || v20 >= &v21[*(_QWORD *)(v18 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack(v20, v21, v8, v17);
    }
    else if (v15 != a4)
    {
      swift_arrayInitWithTakeBackToFront(v20, v21);
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v20);
  }
  swift_bridgeObjectRelease(a4);
  return (size_t)v15;
}

char *sub_DDDAA8(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_15076A0);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = _swift_stdlib_malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v14);
  }
  swift_bridgeObjectRelease();
  return v11;
}

_QWORD *sub_DDDBA8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1507608);
    v11 = (_QWORD *)swift_allocObject(v10, 40 * v9 + 32, 7);
    v12 = _swift_stdlib_malloc_size_0(v11);
    v11[2] = v8;
    v11[3] = 2 * ((uint64_t)(v12 - 32) / 40);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v11 + 4 >= &a4[5 * v8 + 4])
      memmove(v11 + 4, a4 + 4, 40 * v8);
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1507610);
    swift_arrayInitWithCopy(v11 + 4);
  }
  swift_bridgeObjectRelease();
  return v11;
}

_QWORD *sub_DDDCDC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1507618);
    v11 = (_QWORD *)swift_allocObject(v10, 40 * v9 + 32, 7);
    v12 = _swift_stdlib_malloc_size_0(v11);
    v11[2] = v8;
    v11[3] = 2 * ((uint64_t)(v12 - 32) / 40);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v11 + 4 >= &a4[5 * v8 + 4])
      memmove(v11 + 4, a4 + 4, 40 * v8);
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1507620);
    swift_arrayInitWithCopy(v11 + 4);
  }
  swift_bridgeObjectRelease();
  return v11;
}

char *sub_DDDE10(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1507600);
    v11 = (char *)swift_allocObject(v10, 40 * v9 + 32, 7);
    v12 = _swift_stdlib_malloc_size_0(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 40);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[40 * v8])
      memmove(v13, v14, 40 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v13);
  }
  swift_bridgeObjectRelease();
  return v11;
}

char *sub_DDDF20(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_15075C0);
    v11 = (char *)swift_allocObject(v10, 104 * v9 + 32, 7);
    v12 = _swift_stdlib_malloc_size_0(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 104);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[104 * v8])
      memmove(v13, v14, 104 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v13);
  }
  swift_bridgeObjectRelease();
  return v11;
}

_QWORD *sub_DDE03C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_15075A8);
    v11 = (_QWORD *)swift_allocObject(v10, 40 * v9 + 32, 7);
    v12 = _swift_stdlib_malloc_size_0(v11);
    v11[2] = v8;
    v11[3] = 2 * ((uint64_t)(v12 - 32) / 40);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v11 + 4 >= &a4[5 * v8 + 4])
      memmove(v11 + 4, a4 + 4, 40 * v8);
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_15075B0);
    swift_arrayInitWithCopy(v11 + 4);
  }
  swift_bridgeObjectRelease();
  return v11;
}

_QWORD *sub_DDE170(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_15074F8);
    v11 = (_QWORD *)swift_allocObject(v10, (v9 << 6) | 0x20, 7);
    v12 = _swift_stdlib_malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 + 31;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 6);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v11 + 4 >= &a4[8 * v8 + 4])
      memmove(v11 + 4, a4 + 4, v8 << 6);
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1507500);
    swift_arrayInitWithCopy(v11 + 4);
  }
  swift_bridgeObjectRelease();
  return v11;
}

size_t sub_DDE290(size_t a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_BCD968(a1, a2, a3, a4, &qword_1507570, type metadata accessor for Razzmatazz);
}

char *sub_DDE2A4(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_15075A0);
    v11 = (char *)swift_allocObject(v10, 32 * v9 + 32, 7);
    v12 = _swift_stdlib_malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 1;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[32 * v8])
      memmove(v14, v15, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v14);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

_QWORD *sub_DDE3A4(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_DDE3B8(a1, a2, a3, a4, &qword_1507588, &qword_1507590);
}

_QWORD *sub_DDE3B8(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  int64_t v15;
  uint64_t v16;

  v8 = (char)result;
  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(a5);
    v14 = (_QWORD *)swift_allocObject(v13, 8 * v12 + 32, 7);
    v15 = _swift_stdlib_malloc_size_0(v14);
    v16 = v15 - 32;
    if (v15 < 32)
      v16 = v15 - 25;
    v14[2] = v11;
    v14[3] = 2 * (v16 >> 3);
  }
  else
  {
    v14 = _swiftEmptyArrayStorage;
  }
  if ((v8 & 1) != 0)
  {
    if (v14 != a4 || v14 + 4 >= &a4[v11 + 4])
      memmove(v14 + 4, a4 + 4, 8 * v11);
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy(v14 + 4);
  }
  swift_bridgeObjectRelease();
  return v14;
}

_QWORD *sub_DDE4DC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1507578);
    v11 = (_QWORD *)swift_allocObject(v10, 8 * v9 + 32, 7);
    v12 = _swift_stdlib_malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 3);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v11 + 4 >= &a4[v8 + 4])
      memmove(v11 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1507580);
    swift_arrayInitWithCopy(v11 + 4);
  }
  swift_bridgeObjectRelease();
  return v11;
}

size_t sub_DDE5FC(size_t a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_BCD968(a1, a2, a3, a4, &qword_15074D8, (uint64_t (*)(_QWORD))&type metadata accessor for Playlist.Collaborator);
}

char *sub_DDE610(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1507550);
    v11 = (char *)swift_allocObject(v10, 120 * v9 + 32, 7);
    v12 = _swift_stdlib_malloc_size_0(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 120);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[120 * v8])
      memmove(v13, v14, 120 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v13);
  }
  swift_bridgeObjectRelease();
  return v11;
}

char *sub_DDE728(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1507540);
    v11 = (char *)swift_allocObject(v10, 88 * v9 + 32, 7);
    v12 = _swift_stdlib_malloc_size_0(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 88);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[88 * v8])
      memmove(v13, v14, 88 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v13);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

char *sub_DDE840(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1507520);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = _swift_stdlib_malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v14);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

_QWORD *sub_DDE940(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1507528);
    v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = _swift_stdlib_malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 4);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v11 + 4 >= &a4[2 * v8 + 4])
      memmove(v11 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1507530);
    swift_arrayInitWithCopy(v11 + 4);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

_QWORD *sub_DDEA60(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1507510);
    v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = _swift_stdlib_malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 4);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v11 + 4 >= &a4[2 * v8 + 4])
      memmove(v11 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1507518);
    swift_arrayInitWithCopy(v11 + 4);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

char *sub_DDEB80(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_15070C0);
    v11 = (char *)swift_allocObject(v10, 32 * v9 + 32, 7);
    v12 = _swift_stdlib_malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 1;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[32 * v8])
      memmove(v14, v15, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v14);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

size_t sub_DDEC84(size_t a1, int64_t a2, char a3)
{
  size_t *v3;
  size_t result;

  result = sub_DDEE10(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

char *sub_DDECA0(char *a1, int64_t a2, char a3)
{
  char **v3;
  char *result;

  result = sub_DDEF8C(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

char *sub_DDECBC(char *a1, int64_t a2, char a3)
{
  char **v3;
  char *result;

  result = sub_DDF090(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

char *sub_DDECD8(char *a1, int64_t a2, char a3)
{
  char **v3;
  char *result;

  result = sub_DDF190(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

_QWORD *sub_DDECF4(_QWORD *a1, int64_t a2, char a3)
{
  _QWORD **v3;
  _QWORD *result;

  result = sub_DDF2A0(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

char *sub_DDED10(char *a1, int64_t a2, char a3)
{
  char **v3;
  char *result;

  result = sub_DDF3D4(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

char *sub_DDED2C(char *a1, int64_t a2, char a3)
{
  char **v3;
  char *result;

  result = sub_DDF4F0(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

_QWORD *sub_DDED48(_QWORD *a1, int64_t a2, char a3)
{
  _QWORD **v3;
  _QWORD *result;

  result = sub_DDF5E8(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

char *sub_DDED64(char *a1, int64_t a2, char a3)
{
  char **v3;
  char *result;

  result = sub_DDF708(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

_QWORD *sub_DDED80(_QWORD *a1, int64_t a2, char a3)
{
  _QWORD **v3;
  _QWORD *result;

  result = sub_DDF800(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

size_t sub_DDED9C(size_t a1, int64_t a2, char a3)
{
  size_t *v3;
  size_t result;

  result = sub_DDF920(a1, a2, a3, (_QWORD *)*v3, &qword_1507570, type metadata accessor for Razzmatazz);
  *v3 = result;
  return result;
}

size_t sub_DDEDC8(size_t a1, int64_t a2, char a3)
{
  size_t *v3;
  size_t result;

  result = sub_DDF920(a1, a2, a3, (_QWORD *)*v3, &qword_1507598, (uint64_t (*)(_QWORD))&type metadata accessor for Artist);
  *v3 = result;
  return result;
}

char *sub_DDEDF4(char *a1, int64_t a2, char a3)
{
  char **v3;
  char *result;

  result = sub_DDFB7C(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

size_t sub_DDEE10(size_t result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  char *v21;

  v5 = result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v15 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_15068B8);
  v11 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_15068B0) - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = *(unsigned __int8 *)(v11 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = (_QWORD *)swift_allocObject(v10, v14 + v12 * v9, v13 | 7);
  result = _swift_stdlib_malloc_size_0(v15);
  if (!v12)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v14 == 0x8000000000000000 && v12 == -1)
    goto LABEL_29;
  v15[2] = v8;
  v15[3] = 2 * ((uint64_t)(result - v14) / v12);
LABEL_19:
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_15068B0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v20 = (char *)v15 + v19;
  v21 = (char *)a4 + v19;
  if ((v5 & 1) != 0)
  {
    if (v15 < a4 || v20 >= &v21[*(_QWORD *)(v18 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack(v20, v21, v8, v17);
    }
    else if (v15 != a4)
    {
      swift_arrayInitWithTakeBackToFront(v20, v21);
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v20);
  }
  swift_release(a4);
  return (size_t)v15;
}

char *sub_DDEF8C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_15070C0);
    v11 = (char *)swift_allocObject(v10, 32 * v9 + 32, 7);
    v12 = _swift_stdlib_malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 1;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[32 * v8])
      memmove(v14, v15, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v14);
  }
  swift_release(a4);
  return v11;
}

char *sub_DDF090(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_15076A0);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = _swift_stdlib_malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v14);
  }
  swift_release();
  return v11;
}

char *sub_DDF190(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1507600);
    v11 = (char *)swift_allocObject(v10, 40 * v9 + 32, 7);
    v12 = _swift_stdlib_malloc_size_0(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 40);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[40 * v8])
      memmove(v13, v14, 40 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v13);
  }
  swift_release();
  return v11;
}

_QWORD *sub_DDF2A0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_15075A8);
    v11 = (_QWORD *)swift_allocObject(v10, 40 * v9 + 32, 7);
    v12 = _swift_stdlib_malloc_size_0(v11);
    v11[2] = v8;
    v11[3] = 2 * ((uint64_t)(v12 - 32) / 40);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v11 + 4 >= &a4[5 * v8 + 4])
      memmove(v11 + 4, a4 + 4, 40 * v8);
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_15075B0);
    swift_arrayInitWithCopy(v11 + 4);
  }
  swift_release();
  return v11;
}

char *sub_DDF3D4(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_15075F8);
    v11 = (char *)swift_allocObject(v10, 56 * v9 + 32, 7);
    v12 = _swift_stdlib_malloc_size_0(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 56);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[56 * v8])
      memmove(v13, v14, 56 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v13);
  }
  swift_release();
  return v11;
}

char *sub_DDF4F0(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1507508);
    v11 = (char *)swift_allocObject(v10, 8 * v9 + 32, 7);
    v12 = _swift_stdlib_malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[8 * v8])
      memmove(v14, v15, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 8 * v8);
  }
  swift_release();
  return v11;
}

_QWORD *sub_DDF5E8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_15074F8);
    v11 = (_QWORD *)swift_allocObject(v10, (v9 << 6) | 0x20, 7);
    v12 = _swift_stdlib_malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 + 31;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 6);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v11 + 4 >= &a4[8 * v8 + 4])
      memmove(v11 + 4, a4 + 4, v8 << 6);
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1507500);
    swift_arrayInitWithCopy(v11 + 4);
  }
  swift_release();
  return v11;
}

char *sub_DDF708(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_15074E0);
    v11 = (char *)swift_allocObject(v10, 32 * v9 + 32, 7);
    v12 = _swift_stdlib_malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 1;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[32 * v8])
      memmove(v14, v15, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 32 * v8);
  }
  swift_release();
  return v11;
}

_QWORD *sub_DDF800(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_15074E8);
    v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = _swift_stdlib_malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 4);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v11 + 4 >= &a4[2 * v8 + 4])
      memmove(v11 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_15074F0);
    swift_arrayInitWithCopy(v11 + 4);
  }
  swift_release();
  return v11;
}

size_t sub_DDF920(size_t result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  char v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  char *v24;

  v8 = result;
  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v13 = __swift_instantiateConcreteTypeFromMangledName(a5);
  v14 = *(_QWORD *)(a6(0) - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = *(unsigned __int8 *)(v14 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = (_QWORD *)swift_allocObject(v13, v17 + v15 * v12, v16 | 7);
  result = _swift_stdlib_malloc_size_0(v18);
  if (!v15)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v17 == 0x8000000000000000 && v15 == -1)
    goto LABEL_29;
  v18[2] = v11;
  v18[3] = 2 * ((uint64_t)(result - v17) / v15);
LABEL_19:
  v20 = a6(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v23 = (char *)v18 + v22;
  v24 = (char *)a4 + v22;
  if ((v8 & 1) != 0)
  {
    if (v18 < a4 || v23 >= &v24[*(_QWORD *)(v21 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack(v23, v24, v11, v20);
    }
    else if (v18 != a4)
    {
      swift_arrayInitWithTakeBackToFront(v23, v24);
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v23);
  }
  swift_release();
  return (size_t)v18;
}

char *sub_DDFA94(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_15070B0);
    v11 = (char *)swift_allocObject(v10, v9 + 32, 7);
    v12 = _swift_stdlib_malloc_size_0(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v8])
      memmove(v13, v14, v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, v8);
  }
  swift_release();
  return v11;
}

char *sub_DDFB7C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1507538);
    v11 = (char *)swift_allocObject(v10, 32 * v9 + 32, 7);
    v12 = _swift_stdlib_malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 1;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[32 * v8])
      memmove(v14, v15, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy(v14);
  }
  swift_release();
  return v11;
}

unint64_t sub_DDFC7C(uint64_t a1)
{
  Swift::Int v2;
  _QWORD v4[9];

  Hasher.init(_seed:)(v4);
  PlaylistCovers.Cover.Representation.hash(into:)((uint64_t)v4);
  v2 = Hasher._finalize()();
  return sub_DDFD8C(a1, v2);
}

unint64_t sub_DDFCD4(char a1)
{
  unint64_t v2;
  unint64_t v3;
  Swift::Int v4;
  _QWORD v6[9];

  v2 = 0xD000000000000015;
  Hasher.init(_seed:)(v6);
  if (a1)
  {
    if (a1 == 1)
    {
      v2 = 0xD000000000000014;
      v3 = 0x800000000110BE30;
    }
    else
    {
      v3 = 0x800000000110BE50;
    }
  }
  else
  {
    v3 = 0x800000000110BE10;
  }
  String.hash(into:)(v6, v2, v3);
  swift_bridgeObjectRelease(v3);
  v4 = Hasher._finalize()();
  return sub_DDFED4(a1, v4);
}

unint64_t sub_DDFD8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  char v17;
  _OWORD v19[3];
  uint64_t v20;
  _OWORD v21[3];
  uint64_t v22;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48) + 56 * i;
    v9 = *(_OWORD *)(v7 + 16);
    v8 = *(_OWORD *)(v7 + 32);
    v10 = *(_OWORD *)v7;
    v22 = *(_QWORD *)(v7 + 48);
    v21[1] = v9;
    v21[2] = v8;
    v21[0] = v10;
    sub_2B6E74((uint64_t)v21);
    v11 = static PlaylistCovers.Cover.Representation.== infix(_:_:)(v21, a1);
    sub_2B6EC8((uint64_t)v21);
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      for (i = (i + 1) & v12; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v12)
      {
        v13 = *(_QWORD *)(v2 + 48) + 56 * i;
        v15 = *(_OWORD *)(v13 + 16);
        v14 = *(_OWORD *)(v13 + 32);
        v16 = *(_OWORD *)v13;
        v20 = *(_QWORD *)(v13 + 48);
        v19[1] = v15;
        v19[2] = v14;
        v19[0] = v16;
        sub_2B6E74((uint64_t)v19);
        v17 = static PlaylistCovers.Cover.Representation.== infix(_:_:)(v19, a1);
        sub_2B6EC8((uint64_t)v19);
        if ((v17 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_DDFED4(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v14;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v14 = ~v3;
    while (1)
    {
      v5 = *(unsigned __int8 *)(*(_QWORD *)(v2 + 48) + v4);
      if (v5 == 1)
        v6 = 0xD000000000000014;
      else
        v6 = 0xD000000000000015;
      if (v5 == 1)
        v7 = 0x800000000110BE30;
      else
        v7 = 0x800000000110BE50;
      if (*(_BYTE *)(*(_QWORD *)(v2 + 48) + v4))
        v8 = v6;
      else
        v8 = 0xD000000000000015;
      if (*(_BYTE *)(*(_QWORD *)(v2 + 48) + v4))
        v9 = v7;
      else
        v9 = 0x800000000110BE10;
      if (a1)
      {
        if (a1 == 1)
          v10 = 0xD000000000000014;
        else
          v10 = 0xD000000000000015;
        if (a1 == 1)
          v11 = 0x800000000110BE30;
        else
          v11 = 0x800000000110BE50;
        if (v8 != v10)
          goto LABEL_26;
      }
      else
      {
        v11 = 0x800000000110BE10;
        v10 = 0xD000000000000015;
        if (v8 != 0xD000000000000015)
          goto LABEL_26;
      }
      if (v9 == v11)
      {
        swift_bridgeObjectRelease_n(v9, 2);
        return v4;
      }
LABEL_26:
      v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v9, v10, v11, 0);
      swift_bridgeObjectRelease(v9);
      swift_bridgeObjectRelease(v11);
      if ((v12 & 1) == 0)
      {
        v4 = (v4 + 1) & v14;
        if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
          continue;
      }
      return v4;
    }
  }
  return v4;
}

void sub_DE0074(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int64_t v14;
  Swift::Int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  _QWORD *v38;
  __int128 v39;
  _QWORD v40[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_15068C0);
  v7 = a2;
  v8 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v9 = v8;
  if (*(_QWORD *)(v5 + 16))
  {
    v36 = v3;
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v38 = (_QWORD *)(v5 + 64);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v37 = (unint64_t)(v10 + 63) >> 6;
    v13 = v8 + 64;
    swift_retain(v5);
    v14 = 0;
    while (1)
    {
      if (v12)
      {
        v22 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v23 = v22 | (v14 << 6);
      }
      else
      {
        v24 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return;
        }
        if (v24 >= v37)
          goto LABEL_36;
        v25 = v38[v24];
        ++v14;
        if (!v25)
        {
          v14 = v24 + 1;
          if (v24 + 1 >= v37)
            goto LABEL_36;
          v25 = v38[v14];
          if (!v25)
          {
            v26 = v24 + 2;
            if (v26 >= v37)
            {
LABEL_36:
              swift_release(v5);
              v3 = v36;
              if ((v7 & 1) != 0)
              {
                v35 = 1 << *(_BYTE *)(v5 + 32);
                if (v35 >= 64)
                  bzero(v38, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v38 = -1 << v35;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v25 = v38[v26];
            if (!v25)
            {
              while (1)
              {
                v14 = v26 + 1;
                if (__OFADD__(v26, 1))
                  goto LABEL_43;
                if (v14 >= v37)
                  goto LABEL_36;
                v25 = v38[v14];
                ++v26;
                if (v25)
                  goto LABEL_33;
              }
            }
            v14 = v26;
          }
        }
LABEL_33:
        v12 = (v25 - 1) & v25;
        v23 = __clz(__rbit64(v25)) + (v14 << 6);
      }
      v31 = 16 * v23;
      v32 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v31);
      v34 = *v32;
      v33 = v32[1];
      v39 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + v31);
      if ((v7 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        sub_50CB4(v39, *((unint64_t *)&v39 + 1));
      }
      Hasher.init(_seed:)(v40);
      String.hash(into:)(v40, v34, v33);
      v15 = Hasher._finalize()();
      v16 = -1 << *(_BYTE *)(v9 + 32);
      v17 = v15 & ~v16;
      v18 = v17 >> 6;
      if (((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6))) != 0)
      {
        v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v16) >> 6;
        do
        {
          if (++v18 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v29 = v18 == v28;
          if (v18 == v28)
            v18 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v13 + 8 * v18);
        }
        while (v30 == -1);
        v19 = __clz(__rbit64(~v30)) + (v18 << 6);
      }
      *(_QWORD *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      v20 = 16 * v19;
      v21 = (_QWORD *)(*(_QWORD *)(v9 + 48) + v20);
      *v21 = v34;
      v21[1] = v33;
      *(_OWORD *)(*(_QWORD *)(v9 + 56) + v20) = v39;
      ++*(_QWORD *)(v9 + 16);
    }
  }
  swift_release(v5);
  *v3 = v9;
}

void sub_DE0380(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  char v37;
  _QWORD v38[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_15068A8);
  v37 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v35 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain();
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_34;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v22 >= v35)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v13;
    if (!v24)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v35)
        goto LABEL_36;
      v24 = *(_QWORD *)(v36 + 8 * v13);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_36:
          swift_release();
          if ((v37 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v13 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_45;
            if (v13 >= v35)
              goto LABEL_36;
            v24 = *(_QWORD *)(v36 + 8 * v13);
            ++v25;
            if (v24)
              goto LABEL_33;
          }
        }
        v13 = v25;
      }
    }
LABEL_33:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_34:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    Hasher.init(_seed:)(v38);
    String.hash(into:)(v38, v32, v31);
    v14 = Hasher._finalize()();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v23 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release();
  *v3 = v8;
}

void sub_DE0694(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  uint64_t v38;
  char v39;
  _QWORD v40[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_15068A0);
  v39 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v38 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v36 = v3;
  v37 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain();
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_34;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v22 >= v37)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v38 + 8 * v22);
    ++v13;
    if (!v24)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v37)
        goto LABEL_36;
      v24 = *(_QWORD *)(v38 + 8 * v13);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_36:
          swift_release();
          v3 = v36;
          if ((v39 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v24 = *(_QWORD *)(v38 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v13 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_45;
            if (v13 >= v37)
              goto LABEL_36;
            v24 = *(_QWORD *)(v38 + 8 * v13);
            ++v25;
            if (v24)
              goto LABEL_33;
          }
        }
        v13 = v25;
      }
    }
LABEL_33:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_34:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v21);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v34 = v33;
    }
    Hasher.init(_seed:)(v40);
    String.hash(into:)(v40, v32, v31);
    v14 = Hasher._finalize()();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v3 = v36;
  v23 = (_QWORD *)(v5 + 64);
  if ((v39 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release();
  *v3 = v8;
}

void sub_DE09A0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  Swift::Int v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _OWORD v38[2];
  __int128 v39;
  __int128 v40;
  uint64_t v41;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1507558);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_44;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 64;
  swift_retain(v5);
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v19 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v20 = v19 | (v14 << 6);
      goto LABEL_25;
    }
    v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      return;
    }
    if (v21 >= v12)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v37 + 8 * v21);
    ++v14;
    if (!v23)
    {
      v14 = v21 + 1;
      if (v21 + 1 >= v12)
        goto LABEL_37;
      v23 = *(_QWORD *)(v37 + 8 * v14);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v12)
        {
LABEL_37:
          swift_release(v5);
          if ((a2 & 1) == 0)
            goto LABEL_44;
          goto LABEL_40;
        }
        v23 = *(_QWORD *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v14 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_46;
            if (v14 >= v12)
              goto LABEL_37;
            v23 = *(_QWORD *)(v37 + 8 * v14);
            ++v24;
            if (v23)
              goto LABEL_24;
          }
        }
        v14 = v24;
      }
    }
LABEL_24:
    v11 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_25:
    v25 = *(_QWORD *)(v5 + 48) + 40 * v20;
    if ((a2 & 1) != 0)
    {
      v26 = *(_OWORD *)v25;
      v27 = *(_OWORD *)(v25 + 16);
      v41 = *(_QWORD *)(v25 + 32);
      v39 = v26;
      v40 = v27;
      sub_50CA4((_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v20), v38);
    }
    else
    {
      sub_138F24(v25, (uint64_t)&v39);
      sub_95094(*(_QWORD *)(v5 + 56) + 32 * v20, (uint64_t)v38);
    }
    v28 = AnyHashable._rawHashValue(seed:)(*(_QWORD *)(v8 + 40));
    v29 = -1 << *(_BYTE *)(v8 + 32);
    v30 = v28 & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v13 + 8 * (v30 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v13 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_45;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v13 + 8 * v31);
      }
      while (v35 == -1);
      v15 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v13 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    v16 = *(_QWORD *)(v8 + 48) + 40 * v15;
    v17 = v39;
    v18 = v40;
    *(_QWORD *)(v16 + 32) = v41;
    *(_OWORD *)v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    sub_50CA4(v38, (_OWORD *)(*(_QWORD *)(v8 + 56) + 32 * v15));
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v22 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_44;
LABEL_40:
  v36 = 1 << *(_BYTE *)(v5 + 32);
  if (v36 >= 64)
    bzero(v22, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v36;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_44:
  swift_release(v5);
  *v3 = v8;
}

void sub_DE0CB4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __int128 v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  int64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  uint64_t v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t *v50;
  int64_t v51;
  _QWORD *v52;
  uint64_t v53;
  char v54;
  int64_t v55;
  void *v56;
  uint64_t v57;
  void *v58;
  void *v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  void *v69;
  void *v70;
  _QWORD v71[9];
  __int128 v72;
  __int128 v73;
  __int128 v74;
  void *v75;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1507548);
  v54 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v52 = (_QWORD *)(v5 + 64);
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v50 = v2;
  v51 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain();
  v13 = 0;
  v53 = v5;
  while (1)
  {
    if (v11)
    {
      v22 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v55 = v13;
      v23 = v22 | (v13 << 6);
      goto LABEL_34;
    }
    v24 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v24 >= v51)
      break;
    v25 = v52;
    v26 = v52[v24];
    v27 = v13 + 1;
    if (!v26)
    {
      v27 = v24 + 1;
      if (v24 + 1 >= v51)
        goto LABEL_36;
      v26 = v52[v27];
      if (!v26)
      {
        v28 = v24 + 2;
        if (v28 >= v51)
        {
LABEL_36:
          swift_release();
          v3 = v50;
          if ((v54 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v26 = v52[v28];
        if (!v26)
        {
          while (1)
          {
            v27 = v28 + 1;
            if (__OFADD__(v28, 1))
              goto LABEL_45;
            if (v27 >= v51)
              goto LABEL_36;
            v26 = v52[v27];
            ++v28;
            if (v26)
              goto LABEL_33;
          }
        }
        v27 = v28;
      }
    }
LABEL_33:
    v11 = (v26 - 1) & v26;
    v55 = v27;
    v23 = __clz(__rbit64(v26)) + (v27 << 6);
LABEL_34:
    v33 = *(_QWORD *)(v5 + 56);
    v34 = *(_QWORD *)(v5 + 48) + 56 * v23;
    v35 = *(_BYTE *)v34;
    v37 = *(void **)(v34 + 8);
    v36 = *(void **)(v34 + 16);
    v39 = *(void **)(v34 + 24);
    v38 = *(void **)(v34 + 32);
    v41 = *(void **)(v34 + 40);
    v40 = *(void **)(v34 + 48);
    v42 = v33 + 120 * v23;
    v56 = *(void **)v42;
    v57 = *(_QWORD *)(v42 + 8);
    v58 = *(void **)(v42 + 16);
    v59 = *(void **)(v42 + 24);
    v69 = *(void **)(v42 + 48);
    v70 = *(void **)(v42 + 40);
    v67 = *(_QWORD *)(v42 + 64);
    v68 = *(void **)(v42 + 56);
    v65 = *(_QWORD *)(v42 + 80);
    v66 = *(_QWORD *)(v42 + 72);
    v63 = *(_QWORD *)(v42 + 96);
    v64 = *(_QWORD *)(v42 + 88);
    v62 = *(_QWORD *)(v42 + 104);
    v60 = *(void **)(v42 + 32);
    v61 = *(_QWORD *)(v42 + 112);
    if ((v54 & 1) == 0)
    {
      v43 = v37;
      v44 = v36;
      v45 = v39;
      v46 = v38;
      v47 = v41;
      v48 = v40;
      sub_1CB614(v56, v57, v58, v59, v60, v70, v69, v68);
      sub_1CB6F0(v65, v64, v63, v62, v61);
    }
    LOBYTE(v72) = v35;
    *((_QWORD *)&v72 + 1) = v37;
    *(_QWORD *)&v73 = v36;
    *((_QWORD *)&v73 + 1) = v39;
    *(_QWORD *)&v74 = v38;
    *((_QWORD *)&v74 + 1) = v41;
    v75 = v40;
    Hasher.init(_seed:)(v71);
    PlaylistCovers.Cover.Representation.hash(into:)((uint64_t)v71);
    v14 = Hasher._finalize()();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      v5 = v53;
      v13 = v55;
    }
    else
    {
      v29 = 0;
      v30 = (unint64_t)(63 - v15) >> 6;
      v5 = v53;
      v13 = v55;
      do
      {
        if (++v17 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v31 = v17 == v30;
        if (v17 == v30)
          v17 = 0;
        v29 |= v31;
        v32 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v32 == -1);
      v18 = __clz(__rbit64(~v32)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = *(_QWORD *)(v8 + 48) + 56 * v18;
    v20 = v73;
    *(_OWORD *)v19 = v72;
    *(_OWORD *)(v19 + 16) = v20;
    *(_OWORD *)(v19 + 32) = v74;
    *(_QWORD *)(v19 + 48) = v75;
    v21 = (_QWORD *)(*(_QWORD *)(v8 + 56) + 120 * v18);
    *v21 = v56;
    v21[1] = v57;
    v21[2] = v58;
    v21[3] = v59;
    v21[4] = v60;
    v21[5] = v70;
    v21[6] = v69;
    v21[7] = v68;
    v21[8] = v67;
    v21[9] = v66;
    v21[10] = v65;
    v21[11] = v64;
    v21[12] = v63;
    v21[13] = v62;
    v21[14] = v61;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v3 = v50;
  v25 = v52;
  if ((v54 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v49 = 1 << *(_BYTE *)(v5 + 32);
  if (v49 >= 64)
    bzero(v25, ((unint64_t)(v49 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v25 = -1 << v49;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release();
  *v3 = v8;
}

unint64_t sub_DE110C(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a6[(result >> 6) + 8] |= 1 << result;
  v6 = (_QWORD *)(a6[6] + 16 * result);
  *v6 = a2;
  v6[1] = a3;
  v7 = (_QWORD *)(a6[7] + 16 * result);
  *v7 = a4;
  v7[1] = a5;
  v8 = a6[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a6[2] = v10;
  return result;
}

unint64_t sub_DE115C(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

void sub_DE11A4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  __int128 v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_15068C0);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v21 + 1;
      if (v21 + 1 >= v13)
        goto LABEL_26;
      v22 = *(_QWORD *)(v6 + 8 * v9);
      if (!v22)
        break;
    }
LABEL_25:
    v12 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v24 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v16);
    v20 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v20 = v19;
    v20[1] = v18;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v16) = v24;
    swift_bridgeObjectRetain();
    sub_50CB4(v24, *((unint64_t *)&v24 + 1));
  }
  v23 = v21 + 2;
  if (v23 >= v13)
    goto LABEL_26;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v9);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_DE1368()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_15068A8);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  v5 = *(_QWORD *)(v2 + 16);
  if (!v5)
  {
LABEL_26:
    swift_release();
    *v1 = v4;
    return;
  }
  v6 = (void *)(v3 + 64);
  v7 = v2 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v6 >= v2 + 64 + 8 * v8)
  {
    memmove(v6, (const void *)(v2 + 64), 8 * v8);
    v5 = *(_QWORD *)(v2 + 16);
  }
  v10 = 0;
  *(_QWORD *)(v4 + 16) = v5;
  v11 = 1 << *(_BYTE *)(v2 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v2 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_26;
      v24 = *(_QWORD *)(v7 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v16);
    v19 = v18[1];
    v20 = 8 * v16;
    v21 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v17);
    *v22 = *v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v14)
    goto LABEL_26;
  v24 = *(_QWORD *)(v7 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_DE151C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  id v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_15068A0);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release();
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(void **)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    v22 = v20;
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_DE16CC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  _OWORD v24[2];
  _OWORD v25[2];
  uint64_t v26;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1507558);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7)
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v21 + 1;
      if (v21 + 1 >= v13)
        goto LABEL_26;
      v22 = *(_QWORD *)(v6 + 8 * v9);
      if (!v22)
        break;
    }
LABEL_25:
    v12 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    v16 = 40 * v15;
    sub_138F24(*(_QWORD *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    v17 = 32 * v15;
    sub_95094(*(_QWORD *)(v2 + 56) + v17, (uint64_t)v24);
    v18 = *(_QWORD *)(v4 + 48) + v16;
    v19 = v25[0];
    v20 = v25[1];
    *(_QWORD *)(v18 + 32) = v26;
    *(_OWORD *)v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    sub_50CA4(v24, (_OWORD *)(*(_QWORD *)(v4 + 56) + v17));
  }
  v23 = v21 + 2;
  if (v23 >= v13)
    goto LABEL_26;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v9);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_DE18B0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  unint64_t v5;
  BOOL v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  _QWORD *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  int64_t v36;
  unint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  void *__src;
  int64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1507548);
  v41 = v0;
  v1 = *v0;
  v2 = static _DictionaryStorage.copy(original:)(*v0);
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
LABEL_26:
    v40 = v3;
    swift_release();
    *v41 = v40;
    return;
  }
  v4 = (void *)(v2 + 64);
  v5 = (unint64_t)((1 << *(_BYTE *)(v3 + 32)) + 63) >> 6;
  __src = (void *)(v1 + 64);
  v6 = v3 != v1 || (unint64_t)v4 >= v1 + 64 + 8 * v5;
  v45 = v3;
  if (v6)
  {
    memmove(v4, __src, 8 * v5);
    v3 = v45;
  }
  v7 = 0;
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v1 + 16);
  v8 = 1 << *(_BYTE *)(v1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(v1 + 64);
  v43 = (unint64_t)(v8 + 63) >> 6;
  v44 = v1;
  while (1)
  {
    if (v10)
    {
      v46 = (v10 - 1) & v10;
      v47 = v7;
      v11 = __clz(__rbit64(v10)) | (v7 << 6);
      v12 = v44;
      v3 = v45;
      goto LABEL_12;
    }
    v36 = v7 + 1;
    v12 = v44;
    v3 = v45;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v36 >= v43)
      goto LABEL_26;
    v37 = *((_QWORD *)__src + v36);
    v38 = v7 + 1;
    if (!v37)
    {
      v38 = v7 + 2;
      if (v7 + 2 >= v43)
        goto LABEL_26;
      v37 = *((_QWORD *)__src + v38);
      if (!v37)
        break;
    }
LABEL_25:
    v46 = (v37 - 1) & v37;
    v47 = v38;
    v11 = __clz(__rbit64(v37)) + (v38 << 6);
LABEL_12:
    v13 = 56 * v11;
    v14 = *(_QWORD *)(v12 + 48) + 56 * v11;
    v15 = 120 * v11;
    v16 = *(_QWORD *)(v12 + 56) + v15;
    v18 = *(void **)v16;
    v17 = *(_QWORD *)(v16 + 8);
    v20 = *(void **)(v16 + 16);
    v19 = *(void **)(v16 + 24);
    v21 = *(void **)(v16 + 32);
    v22 = *(void **)(v16 + 40);
    v23 = *(void **)(v16 + 48);
    v24 = *(void **)(v16 + 56);
    v25 = *(_QWORD *)(v16 + 64);
    v26 = *(_QWORD *)(v16 + 72);
    v52 = *(_QWORD *)(v16 + 88);
    v53 = *(_QWORD *)(v16 + 80);
    v50 = *(_QWORD *)(v16 + 104);
    v51 = *(_QWORD *)(v16 + 96);
    v49 = *(_QWORD *)(v16 + 112);
    v27 = *(_QWORD *)(v3 + 48) + v13;
    v28 = *(_OWORD *)(v14 + 8);
    v54 = *(_OWORD *)(v14 + 24);
    v55 = *(_OWORD *)(v14 + 40);
    *(_BYTE *)v27 = *(_BYTE *)v14;
    *(_OWORD *)(v27 + 8) = v28;
    v48 = (void *)*((_QWORD *)&v28 + 1);
    *(_OWORD *)(v27 + 24) = v54;
    *(_OWORD *)(v27 + 40) = v55;
    v29 = (_QWORD *)(*(_QWORD *)(v3 + 56) + v15);
    *v29 = v18;
    v29[1] = v17;
    v29[2] = v20;
    v29[3] = v19;
    v29[4] = v21;
    v29[5] = v22;
    v29[6] = v23;
    v29[7] = v24;
    v29[8] = v25;
    v29[9] = v26;
    v29[10] = v53;
    v29[11] = v52;
    v29[12] = v51;
    v29[13] = v50;
    v29[14] = v49;
    v30 = (id)v28;
    v31 = v48;
    v32 = (id)v54;
    v33 = *((id *)&v54 + 1);
    v34 = (id)v55;
    v35 = *((id *)&v55 + 1);
    sub_1CB614(v18, v17, v20, v19, v21, v22, v23, v24);
    sub_1CB6F0(v53, v52, v51, v50, v49);
    v10 = v46;
    v7 = v47;
  }
  v39 = v7 + 3;
  if (v7 + 3 >= v43)
    goto LABEL_26;
  v37 = *((_QWORD *)__src + v39);
  if (v37)
  {
    v38 = v7 + 3;
    goto LABEL_25;
  }
  while (1)
  {
    v38 = v39 + 1;
    if (__OFADD__(v39, 1))
      break;
    if (v38 >= v43)
      goto LABEL_26;
    v37 = *((_QWORD *)__src + v38);
    ++v39;
    if (v37)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

uint64_t sub_DE1B9C(uint64_t a1)
{
  uint64_t v1;
  char v3;
  unsigned int v4;
  unint64_t v5;
  uint64_t v6;
  size_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v14;

  v3 = *(_BYTE *)(a1 + 32);
  v4 = v3 & 0x3F;
  v5 = (1 << v3) + 63;
  v6 = v5 >> 6;
  v7 = 8 * (v5 >> 6);
  if (v4 <= 0xD || (swift_stdlib_isStackAllocationSafe(8 * (v5 >> 6), 8) & 1) != 0)
  {
    __chkstk_darwin();
    bzero((char *)&v14 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    sub_DE1CF8((unint64_t *)((char *)&v14 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0)), v6, a1);
    v9 = v8;
    swift_release();
    if (v1)
      swift_willThrow(v10);
  }
  else
  {
    v11 = (void *)swift_slowAlloc(v7, -1);
    bzero(v11, v7);
    sub_DE1CF8((unint64_t *)v11, v6, a1);
    v9 = v12;
    swift_release();
    swift_slowDealloc(v11, -1, -1);
  }
  return v9;
}

void sub_DE1CF8(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  uint64_t v23;
  uint64_t v25;
  int64_t v26;

  v23 = a2;
  v4 = 0;
  v5 = a3 + 56;
  v6 = 1 << *(_BYTE *)(a3 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a3 + 56);
  v26 = (unint64_t)(v6 + 63) >> 6;
  while (v8)
  {
    v9 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v10 = v9 | (v4 << 6);
LABEL_21:
    v14 = *(id *)(*(_QWORD *)(a3 + 48) + 8 * v10);
    v15 = objc_msgSend(v14, "type", v23);
    if (v15)
    {
      v16 = v15;
      v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
      v19 = v18;

      if (v17 == 0x6E6F73726570 && v19 == 0xE600000000000000)
      {

        swift_bridgeObjectRelease();
LABEL_29:
        *(unint64_t *)((char *)a1 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        if (__OFADD__(v25++, 1))
        {
          __break(1u);
LABEL_32:
          swift_retain();
          sub_DE1F38(a1, v23, v25, a3);
          return;
        }
      }
      else
      {
        v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v17, v19, 0x6E6F73726570, 0xE600000000000000, 0);

        swift_bridgeObjectRelease();
        if ((v21 & 1) != 0)
          goto LABEL_29;
      }
    }
    else
    {

    }
  }
  v11 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_34;
  }
  if (v11 >= v26)
    goto LABEL_32;
  v12 = *(_QWORD *)(v5 + 8 * v11);
  ++v4;
  if (v12)
    goto LABEL_20;
  v4 = v11 + 1;
  if (v11 + 1 >= v26)
    goto LABEL_32;
  v12 = *(_QWORD *)(v5 + 8 * v4);
  if (v12)
    goto LABEL_20;
  v4 = v11 + 2;
  if (v11 + 2 >= v26)
    goto LABEL_32;
  v12 = *(_QWORD *)(v5 + 8 * v4);
  if (v12)
  {
LABEL_20:
    v8 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v4 << 6);
    goto LABEL_21;
  }
  v13 = v11 + 3;
  if (v13 >= v26)
    goto LABEL_32;
  v12 = *(_QWORD *)(v5 + 8 * v13);
  if (v12)
  {
    v4 = v13;
    goto LABEL_20;
  }
  while (1)
  {
    v4 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v4 >= v26)
      goto LABEL_32;
    v12 = *(_QWORD *)(v5 + 8 * v4);
    ++v13;
    if (v12)
      goto LABEL_20;
  }
LABEL_34:
  __break(1u);
}

Swift::Int sub_DE1F38(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  Swift::Int result;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  Swift::Int v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  unint64_t *v29;

  v4 = a4;
  if (!a3)
  {
    v9 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release();
    return (Swift::Int)v9;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150C4B0);
  result = static _SetStorage.allocate(capacity:)(v5);
  v9 = (_QWORD *)result;
  v29 = a1;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_39;
    if (v15 >= a2)
      goto LABEL_36;
    v16 = v29[v15];
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= a2)
        goto LABEL_36;
      v16 = v29[v11];
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= a2)
          goto LABEL_36;
        v16 = v29[v11];
        if (!v16)
          break;
      }
    }
LABEL_23:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    v18 = v9[5];
    v19 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v14);
    result = NSObject._rawHashValue(seed:)(v18);
    v20 = -1 << *((_BYTE *)v9 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v12 + 8 * (v21 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v12 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v12 + 8 * v22);
      }
      while (v27 == -1);
      v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(_QWORD *)(v12 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    *(_QWORD *)(v9[6] + 8 * v23) = v19;
    ++v9[2];
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v17 = v15 + 3;
  if (v17 >= a2)
    goto LABEL_36;
  v16 = v29[v17];
  if (v16)
  {
    v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= a2)
      goto LABEL_36;
    v16 = v29[v11];
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

void sub_DE2194(uint64_t a1, uint64_t a2)
{
  Swift::UInt v4;
  Swift::UInt64 *v5;
  Swift::UInt64 v6;
  Swift::UInt64 v7;
  Swift::UInt64 v8;
  Swift::UInt v9;
  Swift::UInt v10;
  Swift::UInt v11;
  Swift::UInt64 v12;
  Swift::UInt64 v13;

  v4 = *(_QWORD *)(a2 + 16);
  Hasher._combine(_:)(v4);
  if (v4)
  {
    v5 = (Swift::UInt64 *)(a2 + 40);
    do
    {
      v6 = *v5;
      v7 = v5[1];
      v8 = v5[2];
      v9 = v5[3];
      v10 = v5[4];
      v11 = v5[5];
      if ((*(v5 - 1) & 0x7FFFFFFFFFFFFFFFLL) != 0)
        v12 = *(v5 - 1);
      else
        v12 = 0;
      Hasher._combine(_:)(v12);
      if ((v6 & 0x7FFFFFFFFFFFFFFFLL) != 0)
        v13 = v6;
      else
        v13 = 0;
      Hasher._combine(_:)(v13);
      swift_bridgeObjectRetain();
      String.hash(into:)(a1, v7, v8);
      Hasher._combine(_:)(v9);
      Hasher._combine(_:)(v10);
      Hasher._combine(_:)(v11);
      swift_bridgeObjectRelease(v8);
      v5 += 7;
      --v4;
    }
    while (v4);
  }
}

BOOL _s11MusicCoreUI6LyricsC8SyllableV23__derived_struct_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  char v9;
  _BOOL8 result;

  if (*(double *)a1 != *(double *)a2 || *(double *)(a1 + 8) != *(double *)(a2 + 8))
    return 0;
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = v4 == v6 && v5 == v7;
  if (v8 || (v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v6, v7, 0), result = 0, (v9 & 1) != 0))
  {
    if (*(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32) && *(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40))
      return *(_QWORD *)(a1 + 48) == *(_QWORD *)(a2 + 48);
    return 0;
  }
  return result;
}

uint64_t _s11MusicCoreUI6LyricsC8TextLineV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16)
    && *(double *)a1 == *(double *)a2
    && *(double *)(a1 + 8) == *(double *)(a2 + 8)
    && *(double *)(a1 + 40) == *(double *)(a2 + 40)
    && *(double *)(a1 + 48) == *(double *)(a2 + 48))
  {
    v3 = (*(uint64_t (**)(void))(a1 + 56))();
    v5 = v4;
    v7 = (*(uint64_t (**)(void))(a2 + 56))();
    v8 = v6;
    if (v3 == v7 && v5 == v6)
    {
      v9 = 1;
      v8 = v5;
    }
    else
    {
      v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v7, v6, 0);
    }
    swift_bridgeObjectRelease(v5);
    swift_bridgeObjectRelease(v8);
  }
  else
  {
    v9 = 0;
  }
  return v9 & 1;
}

uint64_t sub_DE23D8(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  v1 = *(_QWORD *)(result + 16);
  if (!v1)
    return 0;
  v2 = result + 56 * v1;
  v4 = *(_QWORD *)(v2 + 8);
  v3 = *(_QWORD *)(v2 + 16);
  v5 = __OFADD__(v4, v3);
  v6 = v4 + v3;
  if (v5)
    goto LABEL_7;
  result = *(_QWORD *)(result + 64);
  if (__OFSUB__(v6, result))
  {
    __break(1u);
LABEL_7:
    __break(1u);
  }
  return result;
}

uint64_t sub_DE2418(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *sub_DE2440(uint64_t *a1)
{
  sub_DE2478(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7]);
  return a1;
}

uint64_t sub_DE2478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t result;

  if (a4)
  {
    swift_bridgeObjectRelease(a4);
    return swift_bridgeObjectRelease(a8);
  }
  return result;
}

uint64_t sub_DE24A8(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 32));
  return a1;
}

uint64_t sub_DE24D0()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_DE24F4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_DE2504()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

_UNKNOWN **sub_DE2528(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v20;
  char *v21;
  uint64_t v22;
  char v23;
  void (*v24)(char *, uint64_t);
  char v25;
  char v26;
  char v27;
  uint64_t v28;
  char *v29;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1507638);
  __chkstk_darwin();
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale.Language(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin();
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Locale.LanguageCode(0, v8);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin();
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v29 = (char *)&v28 - v15;
  __chkstk_darwin();
  if (!a2)
    return &off_13C2030;
  v17 = (char *)&v28 - v16;
  swift_bridgeObjectRetain();
  v18 = Locale.Language.init(identifier:)(a1, a2);
  Locale.Language.languageCode.getter(v18);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v5, 1, v11) == 1)
  {
    sub_56024((uint64_t)v5, &qword_1507638);
    return &off_13C2030;
  }
  v20 = v17;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v5, v11);
  v21 = v29;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v29, v20, v11);
  Locale.LanguageCode.init(stringLiteral:)(29281, 0xE200000000000000);
  v22 = sub_4DD24((unint64_t *)&unk_1507640, (uint64_t (*)(uint64_t))&type metadata accessor for Locale.LanguageCode, (uint64_t)&protocol conformance descriptor for Locale.LanguageCode);
  v23 = dispatch thunk of static Equatable.== infix(_:_:)(v14, v21, v11, v22);
  v24 = *(void (**)(char *, uint64_t))(v12 + 8);
  v24(v14, v11);
  if ((v23 & 1) != 0
    || (Locale.LanguageCode.init(stringLiteral:)(25960, 0xE200000000000000),
        v25 = dispatch thunk of static Equatable.== infix(_:_:)(v14, v21, v11, v22),
        v24(v14, v11),
        (v25 & 1) != 0))
  {
    v24(v21, v11);
    v24(v20, v11);
    return &off_13C1FB8;
  }
  Locale.LanguageCode.init(stringLiteral:)(26746, 0xE200000000000000);
  v26 = dispatch thunk of static Equatable.== infix(_:_:)(v14, v21, v11, v22);
  v24(v14, v11);
  if ((v26 & 1) != 0)
  {
    v24(v21, v11);
LABEL_11:
    v24(v20, v11);
    return &off_13C1FE0;
  }
  Locale.LanguageCode.init(stringLiteral:)(24938, 0xE200000000000000);
  v27 = dispatch thunk of static Equatable.== infix(_:_:)(v14, v21, v11, v22);
  v24(v14, v11);
  v24(v21, v11);
  if ((v27 & 1) != 0)
    goto LABEL_11;
  v24(v20, v11);
  return &off_13C2008;
}

unint64_t sub_DE2878(unint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, void *a5, int a6, char a7, char a8)
{
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  uint64_t v11;
  char *v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char *v37;
  char *v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  Swift::Int value;
  uint64_t v57;
  double v58;
  char *v59;
  void *v60;
  id v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  double v67;
  double v68;
  char *v69;
  double v70;
  double v71;
  double v72;
  double v73;
  double v74;
  double v75;
  double v76;
  char *v77;
  double v78;
  double v79;
  double v80;
  double v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  int v92;
  unint64_t v93;
  unint64_t v94;
  id v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  BOOL v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char **v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  id v118;
  id v119;
  id v120;
  id v121;
  id v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  _QWORD *v128;
  _QWORD *v129;
  uint64_t v130;
  id v131;
  id v132;
  Swift::String v133;
  uint64_t v134;
  __C::_NSRange v135;
  uint64_t v136;
  uint64_t v137;
  void *v138;
  unint64_t v139;
  unint64_t v140;
  uint64_t v141;
  _QWORD *v142;
  _QWORD *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  unint64_t v150;
  _QWORD *v151;
  _QWORD *v152;
  uint64_t v153;
  unint64_t v154;
  uint64_t v155;
  id v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  unint64_t v168;
  unint64_t v169;
  _QWORD *v170;
  _QWORD *v171;
  uint64_t v172;
  void *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  unint64_t v180;
  int64_t v181;
  _QWORD *v182;
  uint64_t *v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  uint64_t *v187;
  uint64_t v188;
  uint64_t v189;
  _QWORD *v190;
  uint64_t v191;
  void *v192;
  double v193;
  double v194;
  uint64_t v195;
  double v196;
  double v197;
  uint64_t v198;
  int64_t v199;
  char *v200;
  uint64_t *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  id v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  unint64_t v211;
  unint64_t v212;
  char *v213;
  char v214;
  double v215;
  double v216;
  unint64_t v217;
  unint64_t v218;
  char *v219;
  uint64_t v220;
  uint64_t v221;
  _BYTE v222[16];
  Swift::String v223;
  uint64_t v224;
  uint64_t v225;
  char **v226;
  uint64_t v227;
  unint64_t v228;
  unint64_t v229;
  int v230;
  id v231;
  uint64_t v232;
  uint64_t v233;
  _QWORD *v234;
  id v235;
  uint64_t v236;
  Swift::String v237;
  id v238;
  char *v239;
  uint64_t v240;
  uint64_t v241;
  void *v242;
  char *v243;
  uint64_t v244;
  char *v245;
  int64x2_t v246;
  __int128 v247;
  __int128 v248;
  char *v249;
  uint64_t v250;
  _QWORD *v251;
  _QWORD v252[3];
  char v253;
  char *v254;
  char *v255;
  uint64_t v256;
  Swift::Int_optional v257;
  Swift::Int_optional v258;

  v237._object = a5;
  v237._countAndFlagsBits = a4;
  v8 = a1;
  v256 = a1;
  if ((a8 & 1) == 0)
  {
    v241 = 0;
    v242 = (void *)a3;
    v240 = a2;
    if ((a7 & 1) != 0)
    {
      swift_bridgeObjectRetain();
      *(_QWORD *)&v248 = String._bridgeToObjectiveC()();
      result = String.count.getter(a2, a3);
      if ((result & 0x8000000000000000) != 0)
        goto LABEL_139;
      v40 = (char *)result;
      if (!result)
      {
        v12 = (char *)_swiftEmptyArrayStorage;
LABEL_123:
        swift_bridgeObjectRelease();

        return (unint64_t)v12;
      }
      v41 = 0;
      v42 = 0;
      v12 = (char *)_swiftEmptyArrayStorage;
      v247 = xmmword_105B360;
      v246 = vdupq_n_s64(1uLL);
      v239 = (char *)result;
      while (1)
      {
        while (1)
        {
          if (__OFSUB__(++v42, v41))
            goto LABEL_128;
          v43 = v41;
          v254 = v41;
          v255 = (char *)(v42 - v41);
          __chkstk_darwin();
          v223 = v237;
          v224 = v240;
          v225 = (uint64_t)v242;
          v226 = &v254;
          v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_15075E8);
          v8 = v241;
          Array.extractFirst(where:)((uint64_t)sub_DE6F24, (uint64_t)v222, v44, (uint64_t)v252);
          v241 = v8;
          v249 = (char *)v252[0];
          if (v252[0])
            break;
          v41 = v43;
          if (v42 == v40)
            goto LABEL_123;
        }
        if ((unint64_t)v256 >> 62)
        {
          if (v256 < 0)
            v48 = v256;
          else
            v48 = v256 & 0xFFFFFFFFFFFFFF8;
          v49 = v249;
          swift_bridgeObjectRetain();
          v8 = _CocoaArrayWrapper.endIndex.getter(v48);
          swift_bridgeObjectRelease();
          if (v8)
          {
LABEL_22:
            v46 = v254;
            v47 = v255;
            goto LABEL_29;
          }
        }
        else
        {
          v8 = *(_QWORD *)((char *)&dword_10 + (v256 & 0xFFFFFFFFFFFFF8));
          v45 = v249;
          if (v8)
            goto LABEL_22;
        }
        v50 = (char *)objc_msgSend((id)v248, "length");
        v47 = (char *)(v50 - v43);
        if (__OFSUB__(v50, v43))
          goto LABEL_131;
        v46 = v43;
        v254 = v43;
        v255 = v47;
LABEL_29:
        v243 = v42;
        v245 = v46;
        v51 = (uint64_t)v47;
        _NSRange.makeIterator()();
        v252[0] = v52;
        v252[1] = v53;
        v252[2] = v54;
        v253 = v55 & 1;
        v257 = _NSRange.NSRangeIterator.next()();
        v244 = v51;
        if (!v257.is_nil)
        {
          value = v257.value;
          v57 = 0;
          v58 = (double)v51;
          while (1)
          {
            v59 = v12;
            if (__OFADD__(v57, 1))
              break;
            v60 = (void *)v248;
            v61 = objc_msgSend((id)v248, "substringWithRange:", value, 1);
            v62 = (_QWORD *)static String._unconditionallyBridgeFromObjectiveC(_:)(v61);
            v250 = v63;
            v251 = v62;

            v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_15075F8);
            v65 = swift_allocObject(v64, 88, 7);
            *(_OWORD *)(v65 + 16) = v247;
            v66 = v249;
            objc_msgSend(v249, "startTime");
            v68 = v67;
            v69 = v66;
            objc_msgSend(v69, "endTime");
            v71 = v70;
            objc_msgSend(v69, "startTime");
            v73 = v72;

            v74 = v68 + (v71 - v73) / v58 * (double)v57;
            objc_msgSend(v69, "startTime");
            v76 = v75;
            v77 = v69;
            objc_msgSend(v77, "endTime");
            v79 = v78;
            objc_msgSend(v77, "startTime");
            v81 = v80;

            v82 = objc_msgSend(v60, "substringWithRange:", value, 1);
            v83 = static String._unconditionallyBridgeFromObjectiveC(_:)(v82);
            v85 = v84;

            *(double *)(v65 + 32) = v74;
            *(double *)(v65 + 40) = v76 + (v79 - v81) / v58 * (double)(v57 + 1);
            *(_QWORD *)(v65 + 48) = v83;
            *(_QWORD *)(v65 + 56) = v85;
            *(_QWORD *)(v65 + 64) = value;
            *(int64x2_t *)(v65 + 72) = v246;
            v12 = v59;
            if ((swift_isUniquelyReferenced_nonNull_native(v59) & 1) == 0)
              v12 = sub_DDDE10(0, *((_QWORD *)v59 + 2) + 1, 1, v59);
            v8 = *((_QWORD *)v12 + 2);
            v86 = *((_QWORD *)v12 + 3);
            if (v8 >= v86 >> 1)
              v12 = sub_DDDE10((char *)(v86 > 1), v8 + 1, 1, v12);
            *((_QWORD *)v12 + 2) = v8 + 1;
            v87 = &v12[40 * v8];
            v88 = v250;
            *((_QWORD *)v87 + 4) = v251;
            *((_QWORD *)v87 + 5) = v88;
            *((_QWORD *)v87 + 6) = v65;
            *((_QWORD *)v87 + 7) = 0;
            v87[64] = 1;
            v258 = _NSRange.NSRangeIterator.next()();
            value = v258.value;
            ++v57;
            if (v258.is_nil)
              goto LABEL_37;
          }
          __break(1u);
          goto LABEL_125;
        }
LABEL_37:
        v89 = v249;

        v41 = &v245[v244];
        if (__OFADD__(v245, v244))
          goto LABEL_129;
        v40 = v239;
        v42 = v243;
        if (v243 == v239)
          goto LABEL_123;
      }
    }
    v90 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0)
      v90 = a2 & 0xFFFFFFFFFFFFLL;
    v91 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0)
      v91 = 11;
    if (!v90)
    {
      swift_bridgeObjectRetain();
      v12 = (char *)_swiftEmptyArrayStorage;
LABEL_121:
      swift_bridgeObjectRelease();
      return (unint64_t)v12;
    }
    v232 = 4 * v90;
    v92 = a6 ^ 1;
    v233 = v91 | (v90 << 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v93 = 0;
    v94 = 0;
    v95 = 0;
    v8 = 0;
    LOBYTE(v96) = 1;
    v97 = 15;
    v12 = (char *)_swiftEmptyArrayStorage;
    v234 = _swiftEmptyArrayStorage;
    v251 = _swiftEmptyArrayStorage;
    LODWORD(v243) = v92;
    while (1)
    {
      v98 = (uint64_t)v242;
      swift_bridgeObjectRetain();
      v99 = v240;
      v236 = String.index(after:)(v97, v240, v98);
      swift_bridgeObjectRelease();
      v100 = (v96 & 1) == 0;
      if ((v96 & 1) != 0)
        v101 = v97;
      else
        v101 = v93;
      v102 = v97;
      if (v100)
        v97 = v94;
      v103 = v102;
      v104 = String.index(after:)(v102, v99, v98);
      if (v101 >> 14 > v104 >> 14)
      {
LABEL_126:
        __break(1u);
LABEL_127:
        __break(1u);
LABEL_128:
        __break(1u);
LABEL_129:
        __break(1u);
        goto LABEL_130;
      }
      v105 = v104;
      v246.i64[0] = v101 >> 14;
      swift_bridgeObjectRetain();
      v106 = _NSRange.init(range:in:)(v101, v105, v99, v98);
      if (v8 < v97 >> 14)
        goto LABEL_127;
      v108 = v107;
      v249 = (char *)v8;
      v250 = v101;
      v238 = v95;
      v109 = (char **)v106;
      swift_bridgeObjectRetain();
      *(_QWORD *)&v248 = v97;
      v110 = v97;
      v111 = v103;
      *(_QWORD *)&v247 = _NSRange.init(range:in:)(v110, v103, v99, v98);
      v113 = v112;
      __chkstk_darwin();
      v223 = v237;
      v224 = v99;
      v225 = v98;
      v244 = (uint64_t)v109;
      v226 = v109;
      v227 = v108;
      v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_15075E8);
      v115 = v241;
      Array.extractFirst(where:)((uint64_t)sub_DE6F00, (uint64_t)v222, v114, (uint64_t)v252);
      v241 = v115;
      v96 = v252[0];
      v116 = String.subscript.getter(v111, v99, v98);
      LOBYTE(v115) = Character.isWhitespace.getter(v116);
      swift_bridgeObjectRelease();
      if ((v115 & 1) == 0)
        break;
      v117 = v243;
      v118 = (id)v96;
      if (v96)
      {
        v119 = v238;
        if (v238)
          goto LABEL_59;
LABEL_66:
        v131 = v118;
        LODWORD(v96) = 0;
        v8 = v250;
        v93 = v250;
        goto LABEL_67;
      }
      if (v238)
      {
        v132 = v238;
        objc_msgSend(v132, "characterRange");
        v133._countAndFlagsBits = v240;
        v133._object = v242;
        v135 = _NSRange.convert(from:to:preserveLength:)(v237, v133, 0);
        if (v134)
        {
          swift_errorRelease(v134);

          LODWORD(v96) = 0;
          v241 = 0;
LABEL_83:
          v8 = v250;
          v93 = v250;
          v94 = v248;
          v95 = v238;
          goto LABEL_84;
        }
        v241 = 0;
        if (!_NSRange.contains(_:)(v135))
        {

          LODWORD(v96) = 0;
          goto LABEL_83;
        }
        v239 = (char *)v132;
        v136 = String.subscript.getter(v248, v111, v240, v242);
        v137 = static String._fromSubstring(_:)(v136);
        v238 = v138;
        swift_bridgeObjectRelease();
        if ((swift_isUniquelyReferenced_nonNull_native(v251) & 1) == 0)
          v251 = sub_DDDCDC(0, v251[2] + 1, 1, v251);
        v140 = v251[2];
        v139 = v251[3];
        if (v140 >= v139 >> 1)
          v251 = sub_DDDCDC((_QWORD *)(v139 > 1), v140 + 1, 1, v251);
        v141 = v250;
        v142 = v251;
        v251[2] = v140 + 1;
        v143 = &v142[5 * v140];
        v143[4] = v239;
        v143[5] = v137;
        v144 = v247;
        v143[6] = v238;
        v143[7] = v144;
        v143[8] = v113;
        v145 = String.subscript.getter(v141, v105, v240, v242);
        v146 = static String._fromSubstring(_:)(v145);
        v148 = v147;
        swift_bridgeObjectRelease();
        if ((swift_isUniquelyReferenced_nonNull_native(v234) & 1) == 0)
          v234 = sub_DDDBA8(0, v234[2] + 1, 1, v234);
        v150 = v234[2];
        v149 = v234[3];
        if (v150 >= v149 >> 1)
          v234 = sub_DDDBA8((_QWORD *)(v149 > 1), v150 + 1, 1, v234);
        v151 = v234;
        v234[2] = v150 + 1;
        v152 = &v151[5 * v150];
        v152[4] = v146;
        v152[5] = v148;
        v153 = v244;
        v152[6] = v251;
        v152[7] = v153;
        v152[8] = v108;
        v96 = (unint64_t)v239;

        v93 = 0;
        v94 = 0;
        v95 = 0;
        LODWORD(v96) = 1;
        v251 = _swiftEmptyArrayStorage;
        v8 = v250;
      }
      else
      {
        LODWORD(v96) = 0;
        v95 = 0;
        v8 = v250;
        v93 = v250;
        v94 = v248;
      }
LABEL_84:
      v154 = String.index(before:)(v233, v240, v242);
      if (v249 == (char *)(v154 >> 14) && v95)
      {
        if ((unint64_t)v249 >= v246.i64[0])
        {
          v228 = v94;
          v229 = v93;
          v230 = v96;
          v235 = v118;
          v155 = (uint64_t)v242;
          swift_bridgeObjectRetain();
          v238 = v95;
          v156 = v95;
          v157 = v240;
          v249 = (char *)_NSRange.init(range:in:)(v8, v111, v240, v155);
          *(_QWORD *)&v247 = v158;
          swift_bridgeObjectRetain();
          v159 = v248;
          v246.i64[0] = _NSRange.init(range:in:)(v248, v111, v157, v155);
          v161 = v160;
          swift_bridgeObjectRetain();
          v231 = v156;
          v162 = String.index(after:)(v111, v157, v155);
          v163 = String.subscript.getter(v159, v162, v157, v155);
          swift_bridgeObjectRelease();
          v164 = static String._fromSubstring(_:)(v163);
          v166 = v165;
          swift_bridgeObjectRelease();
          if ((swift_isUniquelyReferenced_nonNull_native(v251) & 1) == 0)
            v251 = sub_DDDCDC(0, v251[2] + 1, 1, v251);
          v167 = v250;
          v169 = v251[2];
          v168 = v251[3];
          if (v169 >= v168 >> 1)
            v251 = sub_DDDCDC((_QWORD *)(v168 > 1), v169 + 1, 1, v251);
          v170 = v251;
          v251[2] = v169 + 1;
          v171 = &v170[5 * v169];
          v171[4] = v231;
          v171[5] = v164;
          v172 = v246.i64[0];
          v171[6] = v166;
          v171[7] = v172;
          v171[8] = v161;
          v173 = v242;
          swift_bridgeObjectRetain();
          v174 = v240;
          v175 = String.index(after:)(v111, v240, v173);
          v176 = String.subscript.getter(v167, v175, v174, v173);
          swift_bridgeObjectRelease();
          v177 = static String._fromSubstring(_:)(v176);
          v179 = v178;
          swift_bridgeObjectRelease();
          if ((swift_isUniquelyReferenced_nonNull_native(v234) & 1) == 0)
            v234 = sub_DDDBA8(0, v234[2] + 1, 1, v234);
          v181 = v234[2];
          v180 = v234[3];
          if (v181 >= v180 >> 1)
            v234 = sub_DDDBA8((_QWORD *)(v180 > 1), v181 + 1, 1, v234);
          v182 = v234;
          v234[2] = v181 + 1;
          v246.i64[0] = (uint64_t)(v182 + 4);
          v183 = &v182[5 * v181 + 4];
          *v183 = v177;
          v183[1] = v179;
          v184 = (uint64_t)v249;
          v183[2] = (uint64_t)v251;
          v183[3] = v184;
          v183[4] = v247;
          v252[0] = _swiftEmptyArrayStorage;
          swift_bridgeObjectRetain();
          sub_DDECD8(0, v181 + 1, 0);
          v185 = 0;
          v186 = v252[0];
          v245 = v12;
          v239 = (char *)v181;
          while (1)
          {
            v187 = (uint64_t *)(v246.i64[0] + 40 * (_QWORD)v185);
            v188 = *v187;
            v189 = v187[1];
            v8 = v187[2];
            v190 = (_QWORD *)v187[4];
            v250 = v189;
            v251 = v190;
            v191 = *(_QWORD *)(v8 + 16);
            v249 = v185;
            *(_QWORD *)&v248 = v188;
            if (v191)
            {
              *(_QWORD *)&v247 = v186;
              v192 = *(void **)(v8 + 40 * v191 - 8);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              objc_msgSend(v192, "endTime");
              if (!*(_QWORD *)(v8 + 16))
              {
LABEL_125:
                __break(1u);
                goto LABEL_126;
              }
              v194 = v193;
              v195 = v117;
              objc_msgSend(*(id *)(v8 + 32), "startTime");
              v197 = v194 - v196;
              v198 = v8;
              v199 = *(_QWORD *)(v8 + 16);
              if (v199)
              {
                v254 = (char *)_swiftEmptyArrayStorage;
                swift_bridgeObjectRetain();
                sub_DDED10(0, v199, 0);
                v200 = v254;
                v244 = v198;
                v201 = (uint64_t *)(v198 + 64);
                do
                {
                  v202 = *(v201 - 3);
                  v203 = *(v201 - 2);
                  v204 = *(v201 - 1);
                  v205 = *v201;
                  v206 = (id)*(v201 - 4);
                  swift_bridgeObjectRetain();
                  objc_msgSend(v206, "startTime");
                  v208 = v207;
                  objc_msgSend(v206, "endTime");
                  v210 = v209;

                  v254 = v200;
                  v212 = *((_QWORD *)v200 + 2);
                  v211 = *((_QWORD *)v200 + 3);
                  if (v212 >= v211 >> 1)
                  {
                    sub_DDED10((char *)(v211 > 1), v212 + 1, 1);
                    v200 = v254;
                  }
                  v201 += 5;
                  *((_QWORD *)v200 + 2) = v212 + 1;
                  v213 = &v200[56 * v212];
                  *((_QWORD *)v213 + 4) = v208;
                  *((_QWORD *)v213 + 5) = v210;
                  *((_QWORD *)v213 + 6) = v202;
                  *((_QWORD *)v213 + 7) = v203;
                  *((_QWORD *)v213 + 8) = v204;
                  *((_QWORD *)v213 + 9) = v205;
                  *((_QWORD *)v213 + 10) = v251;
                  --v199;
                }
                while (v199);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v117 = v243;
                v181 = (int64_t)v239;
                v186 = v247;
                goto LABEL_107;
              }
              v186 = v247;
              v117 = v195;
            }
            else
            {
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v197 = 0.0;
            }
            swift_bridgeObjectRelease();
            v200 = (char *)_swiftEmptyArrayStorage;
LABEL_107:
            v214 = 1;
            v215 = 0.0;
            if (!(v117 & 1 | (v197 <= 1.0)) && (uint64_t)v251 <= 7)
            {
              v216 = v197 + -1.0;
              if (v197 > 2.0)
                v216 = 1.0;
              if (v197 < 1.0)
                v216 = 0.0;
              if (v216 > 0.0)
              {
                v214 = 0;
                v215 = v216;
              }
            }
            v252[0] = v186;
            v218 = *(_QWORD *)(v186 + 16);
            v217 = *(_QWORD *)(v186 + 24);
            if (v218 >= v217 >> 1)
            {
              sub_DDECD8((char *)(v217 > 1), v218 + 1, 1);
              v186 = v252[0];
            }
            v219 = v249;
            *(_QWORD *)(v186 + 16) = v218 + 1;
            v220 = v186 + 40 * v218;
            *(_QWORD *)(v220 + 32) = v248;
            *(_QWORD *)(v220 + 40) = v250;
            *(_QWORD *)(v220 + 48) = v200;
            *(double *)(v220 + 56) = v215;
            *(_BYTE *)(v220 + 64) = v214;
            v185 = v219 + 1;
            if (v219 == (char *)v181)
            {

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();

              v12 = (char *)v186;
              v251 = _swiftEmptyArrayStorage;
              v97 = v236;
              v95 = v238;
              LOBYTE(v96) = v230;
              v93 = v229;
              v94 = v228;
              goto LABEL_47;
            }
          }
        }
LABEL_130:
        __break(1u);
LABEL_131:
        __break(1u);
LABEL_132:
        if (v8 < 0)
          v221 = v8;
        else
          v221 = v8 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        v9 = _CocoaArrayWrapper.endIndex.getter(v221);
        if (v9)
          goto LABEL_4;
LABEL_136:
        swift_bridgeObjectRelease();
        return (unint64_t)_swiftEmptyArrayStorage;
      }

      v97 = v236;
LABEL_47:
      v8 = v97 >> 14;
      if (v97 >> 14 == v232)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        goto LABEL_121;
      }
    }
    v117 = v243;
    v118 = (id)v96;
    if (!v96)
      goto LABEL_83;
    v119 = v238;
    if (!v238)
      goto LABEL_66;
LABEL_59:
    v120 = v119;
    v235 = v118;
    v121 = v118;
    v122 = v120;
    v123 = String.subscript.getter(v248, v111, v240, v242);
    v124 = static String._fromSubstring(_:)(v123);
    v126 = v125;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native(v251) & 1) == 0)
      v251 = sub_DDDCDC(0, v251[2] + 1, 1, v251);
    v96 = v251[2];
    v127 = v251[3];
    if (v96 >= v127 >> 1)
      v251 = sub_DDDCDC((_QWORD *)(v127 > 1), v96 + 1, 1, v251);
    v128 = v251;
    v251[2] = v96 + 1;
    v129 = &v128[5 * v96];
    v129[4] = v122;
    v129[5] = v124;
    v130 = v247;
    v129[6] = v126;
    v129[7] = v130;
    v129[8] = v113;

    LODWORD(v96) = 0;
    v8 = v250;
    v93 = v250;
    v118 = v235;
LABEL_67:
    v94 = v111;
    v95 = v118;
    goto LABEL_84;
  }
  if (a1 >> 62)
    goto LABEL_132;
  v9 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  if (!v9)
    goto LABEL_136;
LABEL_4:
  v252[0] = _swiftEmptyArrayStorage;
  result = (unint64_t)sub_DDECD8(0, v9 & ~(v9 >> 63), 0);
  if ((v9 & 0x8000000000000000) == 0)
  {
    v11 = 0;
    v12 = (char *)v252[0];
    v249 = (char *)(v8 & 0xC000000000000001);
    v248 = xmmword_105B360;
    v250 = v9;
    v251 = (_QWORD *)v8;
    do
    {
      v245 = v12;
      if (v249)
        v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v11, v8);
      else
        v13 = *(id *)(v8 + 8 * v11 + 32);
      v14 = v13;
      v15 = objc_msgSend(v13, "lyricsText");
      v16 = objc_msgSend(v15, "string");

      v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
      v19 = v18;

      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_15075F8);
      v21 = swift_allocObject(v20, 88, 7);
      *(_OWORD *)(v21 + 16) = v248;
      objc_msgSend(v14, "startTime");
      v23 = v22;
      objc_msgSend(v14, "endTime");
      v25 = v24;
      v26 = objc_msgSend(v14, "lyricsText");
      v27 = objc_msgSend(v26, "string");

      v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
      v30 = v29;

      v31 = objc_msgSend(v14, "characterRange");
      v33 = v32;
      objc_msgSend(v14, "characterRange");
      *(_QWORD *)(v21 + 32) = v23;
      *(_QWORD *)(v21 + 40) = v25;
      *(_QWORD *)(v21 + 48) = v28;
      *(_QWORD *)(v21 + 56) = v30;
      *(_QWORD *)(v21 + 64) = v31;
      *(_QWORD *)(v21 + 72) = v33;
      *(_QWORD *)(v21 + 80) = v34;

      v12 = v245;
      v252[0] = v245;
      v36 = *((_QWORD *)v245 + 2);
      v35 = *((_QWORD *)v245 + 3);
      if (v36 >= v35 >> 1)
      {
        sub_DDECD8((char *)(v35 > 1), v36 + 1, 1);
        v12 = (char *)v252[0];
      }
      ++v11;
      *((_QWORD *)v12 + 2) = v36 + 1;
      v37 = &v12[40 * v36];
      *((_QWORD *)v37 + 4) = v17;
      *((_QWORD *)v37 + 5) = v19;
      *((_QWORD *)v37 + 6) = v21;
      *((_QWORD *)v37 + 7) = 0;
      v37[64] = 1;
      v8 = (uint64_t)v251;
    }
    while (v250 != v11);
    goto LABEL_121;
  }
  __break(1u);
LABEL_139:
  __break(1u);
  return result;
}

unint64_t sub_DE3C48(void *a1, uint64_t a2, uint64_t a3)
{
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  char v17;
  _UNKNOWN **v18;
  id v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  unint64_t v30;

  v6 = objc_msgSend(a1, "words");
  if (v6)
  {
    v7 = v6;
    v8 = sub_4E684(0, &qword_15075E0, MSVLyricsWord_ptr);
    static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v8);

    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_15075E8);
    v10 = sub_5C150(&qword_15075F0, &qword_15075E8, (uint64_t)&protocol conformance descriptor for [A]);
    v11 = (_QWORD *)Sequence.exclude(_:)((uint64_t)sub_DDD368, 0, v9, v10);
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  if (qword_1506118 != -1)
    swift_once(&qword_1506118, sub_DDA198);
  v12 = swift_bridgeObjectRetain();
  v13 = sub_DDBC68(v12);
  swift_bridgeObjectRelease();
  if (a3)
    v14 = sub_68B47C(a2, a3, v13);
  else
    v14 = 0;
  swift_bridgeObjectRelease();
  if (qword_1506110 != -1)
    swift_once(&qword_1506110, sub_DDA12C);
  v15 = swift_bridgeObjectRetain();
  v16 = sub_DDBC68(v15);
  swift_bridgeObjectRelease();
  if (a3)
    v17 = sub_68B47C(a2, a3, v16);
  else
    v17 = 0;
  swift_bridgeObjectRelease();
  v18 = sub_DE2528(a2, a3);
  v19 = objc_msgSend(a1, "primaryVocalText");
  v20 = objc_msgSend(v19, "string");

  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
  v23 = v22;

  v24 = objc_msgSend(a1, "lyricsText");
  v25 = objc_msgSend(v24, "string");

  v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
  v28 = v27;

  v29 = a1;
  objc_msgSend(v29, "endTime");
  objc_msgSend(v29, "startTime");

  LOBYTE(v29) = sub_E08ABC(2, (uint64_t)v18);
  swift_bridgeObjectRelease();
  v30 = sub_DE2878((unint64_t)v11, v21, v23, v26, v28, v29 & 1, v14 & 1, v17 & 1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v30;
}

unint64_t sub_DE3F54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  NSString v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v0 = type metadata accessor for Locale.Language(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (void *)objc_opt_self(NLLanguageRecognizer);
  v5 = String._bridgeToObjectiveC()();
  v6 = (unint64_t)objc_msgSend(v4, "dominantLanguageForString:", v5);

  if (v6)
  {
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
    v9 = Locale.Language.init(identifier:)(v7, v8);
    v10 = Locale.Language.characterDirection.getter(v9);

    v6 = v10 == 2;
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  return v6;
}

void sub_DE4040(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  id v9;
  double v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  double v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  id v40;
  id v41;
  char v42;
  id v43;
  void *v44;
  uint64_t v45;
  unint64_t v46;
  id v47;
  id v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  id v52;
  id v53;
  uint64_t v54;
  void *v55;
  void *v56;
  uint64_t v57;
  _QWORD *v58;
  char v59;
  _QWORD *v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  uint64_t v66;

  v9 = objc_msgSend(a1, "subwords");
  if (!v9)
    goto LABEL_13;
  v11 = v9;
  v12 = sub_4E684(0, &qword_15075E0, MSVLyricsWord_ptr);
  v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, v12);

  if ((unint64_t)v13 >> 62)
  {
    if (v13 < 0)
      v18 = v13;
    else
      v18 = v13 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v19 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease();
    if (v19)
      goto LABEL_4;
    goto LABEL_12;
  }
  if (!*(_QWORD *)((char *)&dword_10 + (v13 & 0xFFFFFFFFFFFFF8)))
  {
LABEL_12:
    *(_QWORD *)&v10 = swift_bridgeObjectRelease().n128_u64[0];
LABEL_13:
    objc_msgSend(a1, "startTime", v10);
    v4 = v20;
    goto LABEL_14;
  }
LABEL_4:
  if ((v13 & 0xC000000000000001) != 0)
  {
    v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v13);
  }
  else
  {
    if (!*(_QWORD *)((char *)&dword_10 + (v13 & 0xFFFFFFFFFFFFF8)))
    {
      __break(1u);
      goto LABEL_45;
    }
    v15 = *(id *)(v13 + 32);
  }
  v16 = v15;
  objc_msgSend(v15, "startTime", swift_bridgeObjectRelease().n128_f64[0]);
  v4 = v17;

LABEL_14:
  v21 = objc_msgSend(a1, "subwords");
  if (!v21)
  {
LABEL_28:
    objc_msgSend(a1, "endTime", v22);
    v29 = v31;
    goto LABEL_29;
  }
  v23 = v21;
  v24 = sub_4E684(0, &qword_15075E0, MSVLyricsWord_ptr);
  v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v23, v24);

  if (!((unint64_t)v13 >> 62))
  {
    v25 = *(_QWORD *)((char *)&dword_10 + (v13 & 0xFFFFFFFFFFFFF8));
    if (v25)
      goto LABEL_17;
    goto LABEL_27;
  }
  if (v13 < 0)
    v30 = v13;
  else
    v30 = v13 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v25 = _CocoaArrayWrapper.endIndex.getter(v30);
  swift_bridgeObjectRelease();
  if (!v25)
  {
LABEL_27:
    *(_QWORD *)&v22 = swift_bridgeObjectRelease().n128_u64[0];
    goto LABEL_28;
  }
LABEL_17:
  v14 = v25 - 1;
  if (__OFSUB__(v25, 1))
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  if ((v13 & 0xC000000000000001) != 0)
  {
LABEL_46:
    v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v14, v13);
    goto LABEL_22;
  }
  if ((v14 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_48;
  }
  if (v14 >= *(_QWORD *)((char *)&dword_10 + (v13 & 0xFFFFFFFFFFFFF8)))
  {
LABEL_48:
    __break(1u);
    return;
  }
  v26 = *(id *)(v13 + 8 * v14 + 32);
LABEL_22:
  v27 = v26;
  objc_msgSend(v26, "endTime", swift_bridgeObjectRelease().n128_f64[0]);
  v29 = v28;

LABEL_29:
  if (qword_1506118 != -1)
    swift_once(&qword_1506118, sub_DDA198);
  v32 = swift_bridgeObjectRetain();
  v33 = sub_DDBC68(v32);
  swift_bridgeObjectRelease();
  if (a3)
    v62 = sub_68B47C(a2, a3, v33);
  else
    v62 = 0;
  v34 = objc_msgSend(a1, "lyricsText", swift_bridgeObjectRelease().n128_f64[0]);
  v35 = objc_msgSend(v34, "string");

  v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
  v65 = v37;
  v66 = v36;

  v38 = objc_msgSend(a1, "characterRange");
  v63 = v39;
  v64 = v38;
  v40 = objc_msgSend(a1, "lyricsText");
  v41 = objc_msgSend(v40, "string");

  static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
  v42 = sub_DE3F54();
  v43 = objc_msgSend(a1, "subwords", swift_bridgeObjectRelease().n128_f64[0]);
  if (v43)
  {
    v44 = v43;
    v61 = a2;
    v45 = sub_4E684(0, &qword_15075E0, MSVLyricsWord_ptr);
    v46 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v44, v45);

    swift_bridgeObjectRetain();
    v47 = objc_msgSend(a1, "lyricsText");
    v48 = objc_msgSend(v47, "string");

    v49 = static String._unconditionallyBridgeFromObjectiveC(_:)(v48);
    v51 = v50;

    v52 = objc_msgSend(a1, "lyricsText");
    v53 = objc_msgSend(v52, "string");

    v54 = static String._unconditionallyBridgeFromObjectiveC(_:)(v53);
    v56 = v55;

    if (qword_1506110 != -1)
      swift_once(&qword_1506110, sub_DDA12C);
    v57 = swift_bridgeObjectRetain();
    v58 = sub_DDBC68(v57);
    swift_bridgeObjectRelease();
    if (a3)
      v59 = sub_68B47C(v61, a3, v58);
    else
      v59 = 0;
    swift_bridgeObjectRelease();
    v60 = (_QWORD *)sub_DE2878(v46, v49, v51, v54, v56, 0, v62 & 1, v59 & 1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n(v46, 2);
    swift_bridgeObjectRelease();
  }
  else
  {
    v60 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  *(_QWORD *)a4 = v4;
  *(_QWORD *)(a4 + 8) = v29;
  *(_QWORD *)(a4 + 16) = v66;
  *(_QWORD *)(a4 + 24) = v65;
  *(_QWORD *)(a4 + 32) = v64;
  *(_QWORD *)(a4 + 40) = v63;
  *(_BYTE *)(a4 + 48) = v42 & 1;
  *(_QWORD *)(a4 + 56) = v60;
}

_QWORD *sub_DE45B8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *result;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  void *v22;
  id v23;
  char *v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  int64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v56;
  int64_t v57;
  uint64_t v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  unsigned __int8 v63;
  uint64_t v64;
  uint64_t v65;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1507630);
  result = (_QWORD *)static _DictionaryStorage.copy(original:)(a1);
  v8 = 0;
  v54 = a1;
  v11 = *(_QWORD *)(a1 + 64);
  v10 = a1 + 64;
  v9 = v11;
  v12 = 1 << *(_BYTE *)(v10 - 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & v9;
  v47 = v10;
  v48 = (unint64_t)(v12 + 63) >> 6;
  v52 = result;
  v53 = result + 8;
  v50 = a3;
  v51 = a4;
  if (!v14)
    goto LABEL_5;
LABEL_4:
  v56 = (v14 - 1) & v14;
  for (i = __clz(__rbit64(v14)) | (v8 << 6); ; i = __clz(__rbit64(v17)) + (v8 << 6))
  {
    v19 = *(_QWORD *)(v54 + 56);
    v20 = (uint64_t *)(*(_QWORD *)(v54 + 48) + 16 * i);
    v21 = v20[1];
    v65 = *v20;
    v22 = *(void **)(v19 + 8 * i);
    v58 = v21;
    swift_bridgeObjectRetain();
    v23 = v22;
    v24 = (char *)objc_msgSend(a2, "type");
    v25 = objc_msgSend(v23, "lyricsText");
    v26 = objc_msgSend(v25, "string");

    v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
    v29 = v28;

    v57 = v8;
    if (v24 == (_BYTE *)&dword_0 + 2)
    {
      v49 = v27;
      v30 = (_QWORD *)sub_DE3C48(v23, a3, a4);
      v31 = objc_msgSend(v23, "backgroundVocals");
      if (v31)
      {
        v32 = v31;
        swift_bridgeObjectRetain();
        sub_DE4040(v32, a3, a4, (uint64_t)&v59);
        v33 = v60;
        v34 = v61;
        v45 = v62;
        v46 = v59;
        v35 = v63;
        v36 = v64;

        v38 = v45;
        v37 = v46;
      }
      else
      {

        v33 = 0;
        v34 = 0;
        v35 = 0;
        v36 = 0;
        v37 = 0uLL;
        v38 = 0uLL;
      }
      result = v52;
      v39 = v65;
      v27 = v49;
    }
    else
    {

      v33 = 0;
      v34 = 0;
      v35 = 0;
      v36 = 0;
      v37 = 0uLL;
      v38 = 0uLL;
      v30 = _swiftEmptyArrayStorage;
      result = v52;
      v39 = v65;
    }
    *(_QWORD *)((char *)v53 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v40 = (_QWORD *)(result[6] + 16 * i);
    *v40 = v39;
    v40[1] = v58;
    v41 = result[7] + 88 * i;
    *(_QWORD *)v41 = v27;
    *(_QWORD *)(v41 + 8) = v29;
    *(_QWORD *)(v41 + 16) = v30;
    *(_OWORD *)(v41 + 24) = v37;
    *(_QWORD *)(v41 + 40) = v33;
    *(_QWORD *)(v41 + 48) = v34;
    *(_OWORD *)(v41 + 56) = v38;
    *(_QWORD *)(v41 + 72) = v35;
    *(_QWORD *)(v41 + 80) = v36;
    v42 = result[2];
    v43 = __OFADD__(v42, 1);
    v44 = v42 + 1;
    if (v43)
    {
      __break(1u);
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
    result[2] = v44;
    a3 = v50;
    a4 = v51;
    v14 = v56;
    v8 = v57;
    if (v56)
      goto LABEL_4;
LABEL_5:
    v16 = v8 + 1;
    if (__OFADD__(v8, 1))
      goto LABEL_30;
    if (v16 >= v48)
      return result;
    v17 = *(_QWORD *)(v47 + 8 * v16);
    ++v8;
    if (!v17)
    {
      v8 = v16 + 1;
      if (v16 + 1 >= v48)
        return result;
      v17 = *(_QWORD *)(v47 + 8 * v8);
      if (!v17)
      {
        v8 = v16 + 2;
        if (v16 + 2 >= v48)
          return result;
        v17 = *(_QWORD *)(v47 + 8 * v8);
        if (!v17)
          break;
      }
    }
LABEL_18:
    v56 = (v17 - 1) & v17;
  }
  v18 = v16 + 3;
  if (v18 >= v48)
    return result;
  v17 = *(_QWORD *)(v47 + 8 * v18);
  if (v17)
  {
    v8 = v18;
    goto LABEL_18;
  }
  while (1)
  {
    v8 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v8 >= v48)
      return result;
    v17 = *(_QWORD *)(v47 + 8 * v8);
    ++v18;
    if (v17)
      goto LABEL_18;
  }
LABEL_31:
  __break(1u);
  return result;
}

void sub_DE4930(uint64_t a1, uint64_t a2, uint64_t a3, BOOL *a4, void *a5, char a6, uint64_t a7, uint64_t a8)
{
  id v8;
  uint64_t v13;
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id *v21;
  BOOL *v22;
  uint64_t v23;
  id v24;
  void *v25;
  id v26;
  double v27;
  void *v28;
  id v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  id *v49;
  id v50;
  BOOL *v51;
  id v52;
  void *v53;
  uint64_t v54;
  char *v55;
  char **v56;
  id v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  NSString v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  unint64_t v85;
  id v86;
  id v87;
  id v88;
  void *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  id v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  id v115;
  void *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD *v128;
  uint64_t v129;
  _QWORD *v130;
  id v131;
  unint64_t v132;
  unint64_t v133;
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  id *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  BOOL *v146;
  uint64_t v147;
  int v148;
  uint64_t v149;
  id v150;
  unint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  id v155;
  int v156;
  id v157;
  uint64_t v158;
  uint64_t v159;
  _BOOL4 v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  void *v167;
  _QWORD v168[3];
  id v169[2];
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char v176[24];
  char v177[24];
  char v178[24];
  _QWORD v179[6];
  unsigned __int8 v180;
  uint64_t v181;

  v152 = a8;
  v164 = a7;
  LOBYTE(v8) = a6;
  v155 = a5;
  v13 = type metadata accessor for Locale.Language(0);
  v144 = *(_QWORD *)(v13 - 8);
  v145 = v13;
  __chkstk_darwin();
  v143 = (char *)&v139 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v179[0] = a1;
  KeyPath = swift_getKeyPath(&unk_10AC698);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_15075D0);
  v17 = sub_5C150(&qword_15075D8, &qword_15075D0, (uint64_t)&protocol conformance descriptor for [A]);
  v18 = Sequence.sorted<A>(by:comparator:)(KeyPath, (uint64_t)sub_5F8B6C, 0, v16, v17, (uint64_t)&protocol witness table for Double);
  swift_release();
  v153 = v18;
  if ((unint64_t)v18 >> 62)
    goto LABEL_100;
  v19 = *(_QWORD *)((char *)&dword_10 + (v18 & 0xFFFFFFFFFFFFF8));
LABEL_3:
  v20 = v155;
  if (v19)
  {
    if (v19 >= 1)
    {
      v148 = v8 & 1;
      v142 = a2 + 16;
      v21 = (id *)(a3 + 16);
      v22 = a4 + 16;
      v149 = v19;
      v151 = v18 & 0xC000000000000001;
      v150 = (id)objc_opt_self(NLLanguageRecognizer);
      swift_beginAccess(v21, v178, 0, 0);
      swift_beginAccess(v21, v177, 0, 0);
      swift_beginAccess(v22, v176, 1, 0);
      v140 = v21;
      swift_beginAccess(v21, &v175, 1, 0);
      swift_beginAccess(v22, &v174, 0, 0);
      swift_beginAccess(v22, &v173, 0, 0);
      v146 = v22;
      swift_beginAccess(v22, &v172, 0, 0);
      v23 = 0;
      v154 = 0;
      v166 = (char *)_swiftEmptyArrayStorage;
      while (1)
      {
        v163 = v23;
        if (v151)
          v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v23, v18);
        else
          v24 = *(id *)(v18 + 8 * v23 + 32);
        v25 = v24;
        v26 = objc_msgSend(v24, "agent");
        v167 = v25;
        if (!v26)
          goto LABEL_19;
        v28 = v26;
        swift_beginAccess(v142, v168, 33, 0);
        v29 = v28;
        sub_E7F3C0((Swift::Int *)v169, v29);
        swift_endAccess(v168);

        v30 = objc_msgSend(v29, "type");
        if (!v30)
        {

          goto LABEL_19;
        }
        v31 = v30;
        v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
        v34 = v33;

        v35 = v32 == 0x6E6F73726570 && v34 == 0xE600000000000000;
        if (v35
          || (_stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F73726570, 0xE600000000000000, v32, v34, 0) & 1) != 0)
        {
          v36 = objc_msgSend(v29, "identifier");
          if (v36)
          {
            v37 = v36;
            v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
            v40 = v39;

          }
          else
          {
            v38 = 0;
            v40 = 0;
          }
          if (*v140 && (v42 = objc_msgSend(*v140, "identifier")) != 0)
          {
            v43 = v42;
            v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
            v46 = v45;

            if (v40)
              goto LABEL_27;
          }
          else
          {
            v44 = 0;
            v46 = 0;
            if (v40)
            {
LABEL_27:
              if (!v46)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v20 = v155;
                goto LABEL_42;
              }
              if (v38 == v44 && v40 == v46)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v20 = v155;
              }
              else
              {
                v47 = _stringCompareWithSmolCheck(_:_:expecting:)(v38, v40, v44, v46, 0);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v20 = v155;
                if ((v47 & 1) == 0)
                  goto LABEL_41;
              }
              goto LABEL_33;
            }
          }
          v20 = v155;
          if (v46)
          {
            swift_bridgeObjectRelease();
LABEL_41:
            swift_bridgeObjectRelease();
LABEL_42:
            v49 = v140;
            v50 = *v140;
            v51 = v146;
            v25 = v167;
            if (*v140)
            {
              *v146 = !*v146;
              v50 = *v49;
            }
            *v49 = v28;

            v41 = *v51;
            goto LABEL_45;
          }
        }
LABEL_33:
        if (v32 == 0x70756F7267 && v34 == 0xE500000000000000)
        {

          *(_QWORD *)&v27 = swift_bridgeObjectRelease().n128_u64[0];
          v156 = 0;
          v25 = v167;
          goto LABEL_46;
        }
        v48 = _stringCompareWithSmolCheck(_:_:expecting:)(0x70756F7267, 0xE500000000000000, v32, v34, 0);
        v25 = v167;
        if ((v48 & 1) != 0)
        {

          *(_QWORD *)&v27 = swift_bridgeObjectRelease().n128_u64[0];
          v156 = 0;
          goto LABEL_46;
        }
        if (v32 == 0x726568746FLL && v34 == 0xE500000000000000)
        {

          *(_QWORD *)&v27 = swift_bridgeObjectRelease().n128_u64[0];
          v41 = 1;
          goto LABEL_45;
        }
        v120 = _stringCompareWithSmolCheck(_:_:expecting:)(0x726568746FLL, 0xE500000000000000, v32, v34, 0);

        *(_QWORD *)&v27 = swift_bridgeObjectRelease().n128_u64[0];
        if ((v120 & 1) != 0)
        {
          v41 = 1;
          goto LABEL_45;
        }
LABEL_19:
        v41 = *v146;
LABEL_45:
        v156 = v41;
LABEL_46:
        v52 = objc_msgSend(v25, "translationKey", v27);
        if (v52)
        {
          v53 = v52;
          v161 = static String._unconditionallyBridgeFromObjectiveC(_:)(v52);
          v162 = v54;

        }
        else
        {
          v161 = 0;
          v162 = 0;
        }
        v55 = (char *)objc_msgSend(v20, "type");
        v56 = &selRef_primaryVocalText;
        if (v55 != (_BYTE *)&dword_0 + 2)
          v56 = &selRef_lyricsText;
        v57 = objc_msgSend(v25, *v56);
        v58 = objc_msgSend(v57, "string");

        v59 = static String._unconditionallyBridgeFromObjectiveC(_:)(v58);
        v61 = v60;

        v158 = v59;
        v159 = v61;
        v62 = String._bridgeToObjectiveC()();
        a4 = (BOOL *)objc_msgSend(v150, "dominantLanguageForString:", v62);

        if (a4)
        {
          v63 = static String._unconditionallyBridgeFromObjectiveC(_:)(a4);
          v64 = v143;
          v66 = Locale.Language.init(identifier:)(v63, v65);
          v67 = Locale.Language.characterDirection.getter(v66);

          v160 = v67 == 2;
          (*(void (**)(char *, uint64_t))(v144 + 8))(v64, v145);
        }
        else
        {
          v160 = 0;
        }
        v68 = objc_msgSend(v25, "words");
        if (v68)
        {
          v69 = v68;
          v70 = sub_4E684(0, &qword_15075E0, MSVLyricsWord_ptr);
          v71 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v69, v70);

          v168[0] = v71;
          v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_15075E8);
          v73 = sub_5C150(&qword_15075F0, &qword_15075E8, (uint64_t)&protocol conformance descriptor for [A]);
          v74 = v72;
          a4 = (BOOL *)v154;
          a3 = Sequence.exclude(_:)((uint64_t)sub_DDD368, 0, v74, v73);
          v154 = (char *)a4;
          swift_bridgeObjectRelease();
        }
        else
        {
          a3 = (uint64_t)_swiftEmptyArrayStorage;
        }
        v75 = swift_allocObject(&unk_13C5138, 24, 7);
        v165 = v75;
        *(_QWORD *)(v75 + 16) = _swiftEmptyArrayStorage;
        v76 = (unint64_t *)(v75 + 16);
        v77 = swift_allocObject(&unk_13C5160, 80, 7);
        *(_OWORD *)(v77 + 16) = 0u;
        v78 = v77 + 16;
        *(_OWORD *)(v77 + 32) = 0u;
        *(_OWORD *)(v77 + 48) = 0u;
        *(_OWORD *)(v77 + 64) = 0u;
        if (objc_msgSend(v20, "type") == (char *)&dword_0 + 2)
        {
          v79 = objc_msgSend(v20, "language");
          if (v79)
          {
            v80 = v79;
            v81 = static String._unconditionallyBridgeFromObjectiveC(_:)(v79);
            v83 = v82;

          }
          else
          {
            v81 = 0;
            v83 = 0;
          }
          v84 = v167;
          v85 = sub_DE3C48(v167, v81, v83);
          swift_bridgeObjectRelease();
          swift_beginAccess(v76, &v171, 1, 0);
          *v76 = v85;
          v86 = objc_msgSend(v84, "backgroundVocals", swift_bridgeObjectRelease().n128_f64[0]);
          if (v86)
          {
            v141 = v77 + 16;
            v87 = v86;
            v88 = objc_msgSend(v155, "language");
            if (v88)
            {
              v89 = v88;
              v90 = static String._unconditionallyBridgeFromObjectiveC(_:)(v88);
              v92 = v91;

            }
            else
            {

              v90 = 0;
              v92 = 0;
            }
            sub_DE4040(v87, v90, v92, (uint64_t)v179);
            v93 = v179[0];
            v94 = v179[1];
            v95 = v179[2];
            a4 = (BOOL *)v179[3];
            v96 = v179[4];
            v157 = (id)v179[5];
            v147 = v180;
            v97 = v181;

            v78 = v141;
          }
          else
          {
            v93 = 0;
            v94 = 0;
            v95 = 0;
            a4 = 0;
            v96 = 0;
            v157 = 0;
            v147 = 0;
            v97 = 0;
          }
          swift_beginAccess(v78, &v170, 1, 0);
          v98 = *(_QWORD *)(v77 + 16);
          v99 = *(_QWORD *)(v77 + 24);
          v100 = *(_QWORD *)(v77 + 32);
          v101 = *(_QWORD *)(v77 + 40);
          v102 = *(_QWORD *)(v77 + 48);
          v103 = *(_QWORD *)(v77 + 56);
          v104 = *(_QWORD *)(v77 + 64);
          v105 = *(_QWORD *)(v77 + 72);
          *(_QWORD *)(v77 + 16) = v93;
          *(_QWORD *)(v77 + 24) = v94;
          *(_QWORD *)(v77 + 32) = v95;
          *(_QWORD *)(v77 + 40) = a4;
          v106 = v157;
          *(_QWORD *)(v77 + 48) = v96;
          *(_QWORD *)(v77 + 56) = v106;
          *(_QWORD *)(v77 + 64) = v147;
          *(_QWORD *)(v77 + 72) = v97;
          sub_DE2478(v98, v99, v100, v101, v102, v103, v104, v105);
          v25 = v167;
        }
        v8 = objc_msgSend(v25, "lineIndex");
        objc_msgSend(v25, "startTime");
        v108 = v107;
        objc_msgSend(v25, "endTime");
        v110 = v109;
        if ((unint64_t)a3 >> 62)
        {
          if (a3 < 0)
            a4 = (BOOL *)a3;
          else
            a4 = (BOOL *)(a3 & 0xFFFFFFFFFFFFFF8);
          swift_bridgeObjectRetain();
          a2 = _CocoaArrayWrapper.endIndex.getter(a4);
          v157 = v8;
          if (!a2)
          {
LABEL_86:
            v117 = v164;
            objc_msgSend(v25, "startTime", swift_bridgeObjectRelease().n128_f64[0]);
            v113 = v121;
            objc_msgSend(v25, "endTime", swift_bridgeObjectRelease().n128_f64[0]);
            v119 = v122;
            goto LABEL_87;
          }
        }
        else
        {
          a2 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8));
          swift_bridgeObjectRetain();
          v157 = v8;
          if (!a2)
            goto LABEL_86;
        }
        v18 = a3 & 0xC000000000000001;
        if ((a3 & 0xC000000000000001) != 0)
        {
          v111 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a3);
        }
        else
        {
          if (!*(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8)))
          {
            __break(1u);
LABEL_97:
            __break(1u);
LABEL_98:
            __break(1u);
LABEL_99:
            __break(1u);
LABEL_100:
            if (v18 < 0)
              v137 = v153;
            else
              v137 = v18 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain();
            v138 = v137;
            v18 = v153;
            v19 = _CocoaArrayWrapper.endIndex.getter(v138);
            swift_bridgeObjectRelease();
            goto LABEL_3;
          }
          v111 = (char *)*(id *)(a3 + 32);
        }
        a4 = (BOOL *)v111;
        objc_msgSend(v111, "startTime", swift_bridgeObjectRelease().n128_f64[0]);
        v113 = v112;

        v114 = a2 - 1;
        if (__OFSUB__(a2, 1))
          goto LABEL_97;
        if (v18)
        {
          v115 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v114, a3);
        }
        else
        {
          if ((v114 & 0x8000000000000000) != 0)
            goto LABEL_98;
          if (v114 >= *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8)))
            goto LABEL_99;
          v115 = *(id *)(a3 + 8 * v114 + 32);
        }
        v116 = v115;
        v117 = v164;
        objc_msgSend(v115, "endTime", swift_bridgeObjectRelease().n128_f64[0]);
        v119 = v118;

LABEL_87:
        v123 = (_QWORD *)swift_allocObject(&unk_13C5188, 56, 7);
        v124 = v152;
        v126 = v161;
        v125 = v162;
        v123[2] = v152;
        v123[3] = v126;
        v127 = v158;
        v123[4] = v125;
        v123[5] = v127;
        v123[6] = v159;
        v128 = (_QWORD *)swift_allocObject(&unk_13C51B0, 48, 7);
        v128[2] = v124;
        v128[3] = v126;
        v129 = v165;
        v128[4] = v125;
        v128[5] = v129;
        v130 = (_QWORD *)swift_allocObject(&unk_13C51D8, 48, 7);
        v130[2] = v124;
        v130[3] = v126;
        v130[4] = v125;
        v130[5] = v77;
        swift_bridgeObjectRetain_n(v125, 2);
        swift_retain_n(v124, 3);
        swift_bridgeObjectRetain_n(v117, 2);
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native(v166) & 1) == 0)
          v166 = sub_DDDF20(0, *((_QWORD *)v166 + 2) + 1, 1, v166);
        v20 = v155;
        v131 = v157;
        v133 = *((_QWORD *)v166 + 2);
        v132 = *((_QWORD *)v166 + 3);
        if (v133 >= v132 >> 1)
          v166 = sub_DDDF20((char *)(v132 > 1), v133 + 1, 1, v166);
        v134 = v163 + 1;
        v135 = v166;
        *((_QWORD *)v166 + 2) = v133 + 1;
        v136 = &v135[104 * v133];
        *((_QWORD *)v136 + 4) = v108;
        *((_QWORD *)v136 + 5) = v110;
        *((_QWORD *)v136 + 6) = v131;
        v23 = v134;
        v136[56] = v156;
        v136[57] = v160;
        v136[58] = v148;
        *((_QWORD *)v136 + 8) = v164;
        *((_QWORD *)v136 + 9) = v113;
        *((_QWORD *)v136 + 10) = v119;
        *((_QWORD *)v136 + 11) = sub_DE6E9C;
        *((_QWORD *)v136 + 12) = v123;
        *((_QWORD *)v136 + 13) = sub_DE6EB0;
        *((_QWORD *)v136 + 14) = v128;
        *((_QWORD *)v136 + 15) = sub_DE6EF4;
        *((_QWORD *)v136 + 16) = v130;

        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        v18 = v153;
        if (v149 == v23)
          goto LABEL_95;
      }
    }
    __break(1u);
  }
  else
  {
    v166 = (char *)_swiftEmptyArrayStorage;
LABEL_95:
    swift_bridgeObjectRelease();
  }
}

Swift::Int sub_DE5640(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Swift::Int result;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  id v16;
  _QWORD *v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  char v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  uint64_t v37;
  id v38[2];
  _QWORD *v39;

  if ((a1 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)(a1 + 16) > 1uLL)
    {
      v28 = swift_bridgeObjectRetain();
      v3 = sub_DE1B9C(v28);
      if ((v3 & 0xC000000000000001) != 0)
        goto LABEL_37;
      goto LABEL_33;
    }
    return 0;
  }
  if (a1 < 0)
    v2 = a1;
  else
    v2 = a1 & 0xFFFFFFFFFFFFFF8;
  if (__CocoaSet.count.getter(v2) <= 1)
    return 0;
  v3 = (uint64_t)&_swiftEmptySetSingleton;
  v39 = &_swiftEmptySetSingleton;
  swift_bridgeObjectRetain();
  v4 = __CocoaSet.makeIterator()(v2);
  v5 = __CocoaSet.Iterator.next()(v4);
  if (!v5)
    goto LABEL_36;
  v6 = v5;
  v7 = sub_4E684(0, (unint64_t *)&qword_1507258, MSVLyricsAgent_ptr);
  do
  {
    v37 = v6;
    swift_dynamicCast(v38, &v37, (char *)&type metadata for Swift.AnyObject + 8, v7, 7);
    v9 = objc_msgSend(v38[0], "type");
    if (!v9)
    {
LABEL_8:

      goto LABEL_9;
    }
    v10 = v9;
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v13 = v12;

    if (v11 == 0x6E6F73726570 && v13 == 0xE600000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v13, 0x6E6F73726570, 0xE600000000000000, 0);
      swift_bridgeObjectRelease();
      if ((v15 & 1) == 0)
        goto LABEL_8;
    }
    v16 = v38[0];
    v17 = v39;
    v18 = v39[2];
    if (v39[3] <= v18)
    {
      sub_E7FF44(v18 + 1);
      v17 = v39;
    }
    result = NSObject._rawHashValue(seed:)(v17[5]);
    v19 = v17 + 7;
    v20 = -1 << *((_BYTE *)v17 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~v17[(v21 >> 6) + 7]) != 0)
    {
      v23 = __clz(__rbit64((-1 << v21) & ~v17[(v21 >> 6) + 7])) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          return result;
        }
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = v19[v22];
      }
      while (v27 == -1);
      v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(_QWORD *)((char *)v19 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    *(_QWORD *)(v17[6] + 8 * v23) = v16;
    ++v17[2];
LABEL_9:
    v6 = __CocoaSet.Iterator.next()(result);
  }
  while (v6);
  v3 = (uint64_t)v39;
LABEL_36:
  swift_release();
  if ((v3 & 0xC000000000000001) == 0)
  {
LABEL_33:
    v29 = *(_QWORD *)(v3 + 16);
    goto LABEL_38;
  }
LABEL_37:
  v29 = __CocoaSet.count.getter(v3);
LABEL_38:
  swift_release();
  sub_DDCBDC(a1);
  v31 = v30;
  sub_DDCF5C(a1);
  if (v29 == 2)
    v33 = 1;
  else
    v33 = 2;
  if (v29 == 1)
    v33 = 0;
  if (v29 >= 3)
    v34 = 2;
  else
    v34 = 0x10000u >> (8 * v29);
  if ((v31 & 1) != 0)
    v33 = v34;
  if (v29 == 2)
    v35 = 1;
  else
    v35 = 2;
  if (v29 >= 3)
    v36 = 2;
  else
    v36 = 0x10200u >> (8 * v29);
  if ((v31 & 1) == 0)
    v35 = v36;
  if ((v32 & 1) != 0)
    return v35;
  else
    return v33;
}

uint64_t sub_DE59A0()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[6]);
  swift_release(v0[10]);
  swift_release(v0[12]);
  swift_release(v0[14]);
  return swift_deallocObject(v0, 120, 7);
}

uint64_t sub_DE59DC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_DE5A00()
{
  uint64_t v0;

  return swift_deallocObject(v0, 48, 7);
}

unint64_t sub_DE5A14()
{
  unint64_t result;

  result = qword_1507300;
  if (!qword_1507300)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Lyrics.Word.Emphasis, &type metadata for Lyrics.Word.Emphasis);
    atomic_store(result, (unint64_t *)&qword_1507300);
  }
  return result;
}

unint64_t sub_DE5A5C()
{
  unint64_t result;

  result = qword_1507308;
  if (!qword_1507308)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Lyrics.Word, &type metadata for Lyrics.Word);
    atomic_store(result, (unint64_t *)&qword_1507308);
  }
  return result;
}

unint64_t sub_DE5AA4()
{
  unint64_t result;

  result = qword_1507310;
  if (!qword_1507310)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Lyrics.Syllable, &type metadata for Lyrics.Syllable);
    atomic_store(result, (unint64_t *)&qword_1507310);
  }
  return result;
}

unint64_t sub_DE5AEC()
{
  unint64_t result;

  result = qword_1507318;
  if (!qword_1507318)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Lyrics.TextLine, &type metadata for Lyrics.TextLine);
    atomic_store(result, (unint64_t *)&qword_1507318);
  }
  return result;
}

unint64_t sub_DE5B34()
{
  unint64_t result;

  result = qword_1507320;
  if (!qword_1507320)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Lyrics.LyricsType, &type metadata for Lyrics.LyricsType);
    atomic_store(result, (unint64_t *)&qword_1507320);
  }
  return result;
}

unint64_t sub_DE5B7C()
{
  unint64_t result;

  result = qword_1507328;
  if (!qword_1507328)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Lyrics.VocalistsType, &type metadata for Lyrics.VocalistsType);
    atomic_store(result, (unint64_t *)&qword_1507328);
  }
  return result;
}

unint64_t sub_DE5BC4()
{
  unint64_t result;

  result = qword_1507330;
  if (!qword_1507330)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Lyrics.AgentAlignment, &type metadata for Lyrics.AgentAlignment);
    atomic_store(result, (unint64_t *)&qword_1507330);
  }
  return result;
}

unint64_t sub_DE5C0C()
{
  unint64_t result;

  result = qword_1507338;
  if (!qword_1507338)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Lyrics.Direction, &type metadata for Lyrics.Direction);
    atomic_store(result, (unint64_t *)&qword_1507338);
  }
  return result;
}

unint64_t sub_DE5C54()
{
  unint64_t result;

  result = qword_1507340;
  if (!qword_1507340)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Lyrics.Capability, &type metadata for Lyrics.Capability);
    atomic_store(result, (unint64_t *)&qword_1507340);
  }
  return result;
}

uint64_t sub_DE5C98()
{
  return sub_5C150(&qword_1507348, &qword_1507350, (uint64_t)&protocol conformance descriptor for [A]);
}

unint64_t sub_DE5CC8()
{
  unint64_t result;

  result = qword_1507358;
  if (!qword_1507358)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Lyrics.AudioAttribute, &type metadata for Lyrics.AudioAttribute);
    atomic_store(result, (unint64_t *)&qword_1507358);
  }
  return result;
}

uint64_t type metadata accessor for Lyrics()
{
  return objc_opt_self(_TtC11MusicCoreUI6Lyrics);
}

uint64_t initializeWithCopy for Lyrics.Word(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Lyrics.Word(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v6;
  return a1;
}

__n128 __swift_memcpy33_8_1(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for Lyrics.Word(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease(v4);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for Lyrics.Word()
{
  return &type metadata for Lyrics.Word;
}

ValueMetadata *type metadata accessor for Lyrics.Word.Emphasis()
{
  return &type metadata for Lyrics.Word.Emphasis;
}

uint64_t initializeWithCopy for Lyrics.Syllable(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for Lyrics.Syllable(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  v4 = a1[3];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  return a1;
}

__n128 __swift_memcpy56_8_1(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for Lyrics.Syllable(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRelease(v5);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for Lyrics.Syllable(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Lyrics.Syllable(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Lyrics.Syllable()
{
  return &type metadata for Lyrics.Syllable;
}

double destroy for Lyrics.TextLine(_QWORD *a1)
{
  double result;

  swift_bridgeObjectRelease(a1[4]);
  swift_release(a1[8]);
  swift_release(a1[10]);
  *(_QWORD *)&result = swift_release(a1[12]).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for Lyrics.TextLine(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v5;
  __int128 v6;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v3 = *(_QWORD *)(a2 + 96);
  v5 = *(_OWORD *)(a2 + 64);
  v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(_QWORD *)(a1 + 96) = v3;
  swift_bridgeObjectRetain();
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v3);
  return a1;
}

uint64_t assignWithCopy for Lyrics.TextLine(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  v4 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v5 = *(_QWORD *)(a2 + 64);
  v6 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  swift_retain(v5);
  swift_release(v6);
  v7 = *(_QWORD *)(a2 + 80);
  v8 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v7;
  swift_retain(v7);
  swift_release(v8);
  v10 = *(_QWORD *)(a2 + 88);
  v9 = *(_QWORD *)(a2 + 96);
  v11 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = v10;
  *(_QWORD *)(a1 + 96) = v9;
  swift_retain(v9);
  swift_release(v11);
  return a1;
}

__n128 __swift_memcpy104_8_1(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_QWORD *)(a1 + 96) = *((_QWORD *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for Lyrics.TextLine(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  v4 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease(v4);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a1 + 64);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release(v5);
  v6 = *(_QWORD *)(a1 + 80);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_release(v6);
  v7 = *(_QWORD *)(a1 + 96);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_release(v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for Lyrics.TextLine(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 104))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Lyrics.TextLine(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 104) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 104) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Lyrics.TextLine()
{
  return &type metadata for Lyrics.TextLine;
}

uint64_t destroy for Lyrics.TextLine.BackgroundVocals(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 56));
}

uint64_t initializeWithCopy for Lyrics.TextLine.BackgroundVocals(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Lyrics.TextLine.BackgroundVocals(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v5 = *(_QWORD *)(a2 + 56);
  v6 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  return a1;
}

__n128 __swift_memcpy64_8_1(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for Lyrics.TextLine.BackgroundVocals(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRelease(v5);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v6 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease(v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for Lyrics.TextLine.BackgroundVocals(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Lyrics.TextLine.BackgroundVocals(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Lyrics.TextLine.BackgroundVocals()
{
  return &type metadata for Lyrics.TextLine.BackgroundVocals;
}

uint64_t getEnumTagSinglePayload for Lyrics.InstrumentalLine(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 24);
  v4 = v3 >= 2;
  v5 = v3 - 2;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for Lyrics.InstrumentalLine(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for Lyrics.InstrumentalLine()
{
  return &type metadata for Lyrics.InstrumentalLine;
}

uint64_t destroy for Lyrics.SongwritersLine(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 32));
}

uint64_t initializeWithCopy for Lyrics.SongwritersLine(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Lyrics.SongwritersLine(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v3);
  return a1;
}

__n128 __swift_memcpy40_8_2(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for Lyrics.SongwritersLine(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for Lyrics.SongwritersLine(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Lyrics.SongwritersLine(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Lyrics.SongwritersLine()
{
  return &type metadata for Lyrics.SongwritersLine;
}

ValueMetadata *type metadata accessor for Lyrics.LyricsType()
{
  return &type metadata for Lyrics.LyricsType;
}

ValueMetadata *type metadata accessor for Lyrics.VocalistsType()
{
  return &type metadata for Lyrics.VocalistsType;
}

ValueMetadata *type metadata accessor for Lyrics.AgentAlignment()
{
  return &type metadata for Lyrics.AgentAlignment;
}

uint64_t _s11MusicCoreUI6LyricsC14AgentAlignmentOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_DE6824 + 4 * byte_10ABEE5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_DE6858 + 4 * asc_10ABEE0[v4]))();
}

uint64_t sub_DE6858(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_DE6860(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xDE6868);
  return result;
}

uint64_t sub_DE6874(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xDE687CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_DE6880(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_DE6888(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Lyrics.Direction()
{
  return &type metadata for Lyrics.Direction;
}

uint64_t _s11MusicCoreUI6LyricsC10CapabilityOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_DE68F0 + 4 * byte_10ABEEF[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_DE6924 + 4 * byte_10ABEEA[v4]))();
}

uint64_t sub_DE6924(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_DE692C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xDE6934);
  return result;
}

uint64_t sub_DE6940(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xDE6948);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_DE694C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_DE6954(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Lyrics.Capability()
{
  return &type metadata for Lyrics.Capability;
}

_QWORD *__swift_memcpy8_8_1(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

ValueMetadata *type metadata accessor for Lyrics.AudioAttribute()
{
  return &type metadata for Lyrics.AudioAttribute;
}

uint64_t destroy for Lyrics.LineTranslationMetadata(_QWORD *a1)
{
  uint64_t result;

  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[2]);
  result = a1[6];
  if (result)
  {
    swift_bridgeObjectRelease(result);
    return swift_bridgeObjectRelease(a1[10]);
  }
  return result;
}

uint64_t initializeWithCopy for Lyrics.LineTranslationMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v5)
  {
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = v5;
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v6 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = v6;
    v7 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v7;
  }
  return a1;
}

uint64_t assignWithCopy for Lyrics.LineTranslationMetadata(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  __int128 *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 24);
  v5 = (__int128 *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(a1 + 48))
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_DE6BD4(a1 + 24);
      v7 = *(_OWORD *)(a2 + 72);
      v9 = *v5;
      v8 = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 72) = v7;
      *v4 = v9;
      *(_OWORD *)(a1 + 40) = v8;
    }
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v10 = *v5;
    v11 = *(_OWORD *)(a2 + 40);
    v12 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v12;
    *v4 = v10;
    *(_OWORD *)(a1 + 40) = v11;
  }
  return a1;
}

uint64_t sub_DE6BD4(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 56));
  return a1;
}

__n128 __swift_memcpy88_8_0(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for Lyrics.LineTranslationMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a1 + 48))
    goto LABEL_5;
  v5 = *(_QWORD *)(a2 + 48);
  if (!v5)
  {
    sub_DE6BD4(a1 + 24);
LABEL_5:
    v6 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = v6;
    v7 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v7;
    return a1;
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for Lyrics.LineTranslationMetadata()
{
  return &type metadata for Lyrics.LineTranslationMetadata;
}

uint64_t sub_DE6CEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PlaylistCurators.Curator(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_DE6D30(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PlaylistCurators.Curator(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_DE6D6C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_15075C8;
  if (!qword_15075C8)
  {
    v1 = sub_4E684(255, (unint64_t *)&qword_1507258, MSVLyricsAgent_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_15075C8);
  }
  return result;
}

const char *keypath_get_selector_startTime()
{
  return "startTime";
}

id sub_DE6DD0@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;

  result = objc_msgSend(*a1, "startTime");
  *a2 = v4;
  return result;
}

id sub_DE6E00(double *a1, id *a2)
{
  return objc_msgSend(*a2, "setStartTime:", *a1);
}

uint64_t sub_DE6E14()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_DE6E38()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  if (v1)
  {
    swift_bridgeObjectRelease(v1);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));
  }
  return swift_deallocObject(v0, 80, 7);
}

uint64_t sub_DE6E68()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_bridgeObjectRelease(v0[4]);
  swift_bridgeObjectRelease(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_DE6E9C()
{
  uint64_t *v0;

  return sub_DDBD40(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_DE6EB0()
{
  uint64_t *v0;

  return sub_DDBFB0(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t objectdestroy_31Tm_2()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_bridgeObjectRelease(v0[4]);
  swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_DE6EF4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_DDC204(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD **)(v1 + 40), a1);
}

BOOL sub_DE6F00(id *a1)
{
  uint64_t v1;

  return sub_DDC850(a1, *(char **)(v1 + 16), *(void **)(v1 + 24), *(char **)(v1 + 32), *(void **)(v1 + 40));
}

BOOL sub_DE6F24(id *a1)
{
  uint64_t v1;

  return sub_DDC7B0(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_DE6F48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a4)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_DE6F78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_DE2478(a4, a5, a6, a7, a8, a9, a10, a11);
  }
  return result;
}

uint64_t static LyricsLoader.supportsLyrics(for:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  double v33;
  uint64_t v34;
  char *v35;
  char v36;
  uint64_t (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  char v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  double v44;
  uint64_t v45;
  uint64_t (*v46)(char *, uint64_t, uint64_t);
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  BOOL v53;
  uint64_t v54;
  char *v55;
  __n128 v56;
  char *v57;
  char *v58;
  char *v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  char *v70;
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  NSString v74;
  id v75;
  uint64_t v76;
  uint64_t (*v77)(char *, uint64_t, uint64_t);
  char *v78;
  uint64_t v79;
  NSObject *v80;
  os_log_type_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  BOOL v85;
  uint64_t v86;
  char *v87;
  __n128 v88;
  char *v89;
  char *v90;
  char *v91;
  __n128 v92;
  char *v93;
  char *v94;
  char v95;
  char *v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  char *v100;
  uint64_t (*v101)(char *, uint64_t, uint64_t);
  uint64_t v102;
  NSObject *v103;
  os_log_type_t v104;
  uint64_t v105;
  uint64_t v106;
  int v107;
  char *v108;
  char *v109;
  char *v110;
  __n128 v111;
  const char *v112;
  NSObject *v113;
  os_log_type_t v114;
  uint8_t *v115;
  uint32_t v116;
  uint64_t v117;
  void (*v118)(char *, uint64_t, uint64_t);
  uint64_t v119;
  os_log_type_t v120;
  char *v121;
  int v122;
  double v123;
  int v124;
  uint64_t v125;
  char *v126;
  char *v127;
  char *v128;
  __n128 v129;
  char *v130;
  uint64_t v131;
  char v132;
  uint64_t v133;
  uint64_t (*v134)(char *, uint64_t, uint64_t);
  char *v135;
  uint64_t v136;
  NSObject *v137;
  os_log_type_t v138;
  uint64_t v139;
  uint64_t v140;
  char v141;
  BOOL v142;
  uint64_t v143;
  char *v144;
  __n128 v145;
  char *v146;
  char *v147;
  char *v148;
  char *v149;
  __n128 v150;
  uint64_t v151;
  uint64_t v153;
  char *v154;
  char *v155;
  char *v156;
  char *v157;
  char *v158;
  char *v159;
  char *v160;
  uint64_t (*v161)(char *, uint64_t, uint64_t);
  uint64_t v162;
  uint64_t v163;
  _QWORD v164[15];
  uint64_t v165;
  char v166;
  uint64_t v167;

  v2 = type metadata accessor for Song(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v153 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v159 = (char *)&v153 - v7;
  __chkstk_darwin(v8);
  v158 = (char *)&v153 - v9;
  __chkstk_darwin(v10);
  v160 = (char *)&v153 - v11;
  __chkstk_darwin(v12);
  v155 = (char *)&v153 - v13;
  __chkstk_darwin(v14);
  v154 = (char *)&v153 - v15;
  __chkstk_darwin(v16);
  v18 = (char *)&v153 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v153 - v20;
  __chkstk_darwin(v22);
  v156 = (char *)&v153 - v23;
  __chkstk_darwin(v24);
  v26 = (char *)&v153 - v25;
  __chkstk_darwin(v27);
  v157 = (char *)&v153 - v28;
  __chkstk_darwin(v29);
  v31 = (char *)&v153 - v30;
  v33 = __chkstk_darwin(v32);
  v35 = (char *)&v153 - v34;
  v36 = Song.hasLyrics.getter(v33);
  v37 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v162 = a1;
  v161 = v37;
  v38 = v37(v35, a1, v2);
  if ((v36 & 1) != 0)
  {
    v39 = *(void (**)(char *, uint64_t))(v3 + 8);
    v39(v35, v2);
  }
  else
  {
    v40 = Song.hasCustomLyrics.getter(v38);
    v39 = *(void (**)(char *, uint64_t))(v3 + 8);
    v39(v35, v2);
    if ((v40 & 1) == 0)
    {
      v61 = v162;
      if (qword_1506120 != -1)
        swift_once(&qword_1506120, sub_DDD864);
      v62 = type metadata accessor for Logger(0);
      __swift_project_value_buffer(v62, (uint64_t)static Logger.lyrics);
      v63 = v161(v5, v61, v2);
      v64 = Logger.logObject.getter(v63);
      v65 = static os_log_type_t.default.getter(v64);
      if (os_log_type_enabled(v64, v65))
      {
        v66 = swift_slowAlloc(12, -1);
        v67 = swift_slowAlloc(32, -1);
        v165 = v67;
        *(_DWORD *)v66 = 136446210;
        v68 = (char *)sub_DE7DD0();
        v70 = v69;
        *(_QWORD *)(v66 + 4) = sub_DCF730(v68, v69, &v165);
        v71 = swift_bridgeObjectRelease(v70);
        ((void (*)(char *, uint64_t, __n128))v39)(v5, v2, v71);
        _os_log_impl(&dword_0, v64, v65, "Loader supportsLyrics=false [hasLyrics and hasCustomLyrics were false] %{public}s", (uint8_t *)v66, 0xCu);
        swift_arrayDestroy(v67, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v67, -1, -1);
        swift_slowDealloc(v66, -1, -1);
      }
      else
      {
        v39(v5, v2);
      }

      v132 = 0;
      return v132 & 1;
    }
  }
  v41 = v162;
  v42 = *BagProvider.shared.unsafeMutableAddressor();
  swift_retain(v42);
  v43 = (void *)BagProvider.bag.getter();
  swift_release(v42);
  if (!v43)
  {
    if (qword_1506120 != -1)
      swift_once(&qword_1506120, sub_DDD864);
    v45 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v45, (uint64_t)static Logger.lyrics);
    v46 = v161;
    v161(v21, v41, v2);
    v47 = v46(v18, v41, v2);
    v48 = Logger.logObject.getter(v47);
    v49 = static os_log_type_t.default.getter(v48);
    if (os_log_type_enabled(v48, v49))
    {
      v50 = swift_slowAlloc(22, -1);
      v51 = swift_slowAlloc(64, -1);
      v165 = v51;
      *(_DWORD *)v50 = 136446466;
      v52 = Song.hasCustomLyrics.getter(v51);
      v53 = (v52 & 1) == 0;
      if ((v52 & 1) != 0)
        v54 = 1702195828;
      else
        v54 = 0x65736C6166;
      if (v53)
        v55 = (char *)0xE500000000000000;
      else
        v55 = (char *)0xE400000000000000;
      *(_QWORD *)(v50 + 4) = sub_DCF730((char *)v54, v55, &v165);
      v56 = swift_bridgeObjectRelease(v55);
      ((void (*)(char *, uint64_t, __n128))v39)(v21, v2, v56);
      *(_WORD *)(v50 + 12) = 2082;
      v57 = (char *)sub_DE7DD0();
      v59 = v58;
      *(_QWORD *)(v50 + 14) = sub_DCF730(v57, v58, &v165);
      v60 = swift_bridgeObjectRelease(v59);
      ((void (*)(char *, uint64_t, __n128))v39)(v18, v2, v60);
      _os_log_impl(&dword_0, v48, v49, "Loader supportsLyrics=%{public}s [bag is nil] %{public}s", (uint8_t *)v50, 0x16u);
      swift_arrayDestroy(v51, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v51, -1, -1);
      swift_slowDealloc(v50, -1, -1);
    }
    else
    {
      v39(v21, v2);
      v39(v18, v2);
    }

LABEL_34:
    v93 = v159;
    v94 = v158;
    v95 = Song.hasLyrics.getter(v44);
    v96 = v160;
    if ((v95 & 1) != 0
      && (static ApplicationCapabilities.shared.getter((uint64_t)v164),
          v97 = v164[3],
          swift_bridgeObjectRetain(),
          sub_A9008(v164),
          v98 = sub_DE7EFC(2u, v97),
          swift_bridgeObjectRelease(v97),
          (v98 & 1) != 0))
    {
      static ApplicationCapabilities.shared.getter((uint64_t)&v165);
      sub_A9008(&v165);
      if ((v166 & 1) != 0)
      {
        v132 = 1;
        return v132 & 1;
      }
      if (qword_1506120 != -1)
        swift_once(&qword_1506120, sub_DDD864);
      v99 = type metadata accessor for Logger(0);
      __swift_project_value_buffer(v99, (uint64_t)static Logger.lyrics);
      v100 = v154;
      v101 = v161;
      v161(v154, v41, v2);
      v93 = v155;
      v102 = v101(v155, v41, v2);
      v103 = Logger.logObject.getter(v102);
      v104 = static os_log_type_t.default.getter(v103);
      if (os_log_type_enabled(v103, v104))
      {
        v105 = swift_slowAlloc(18, -1);
        v106 = swift_slowAlloc(32, -1);
        v163 = v106;
        *(_DWORD *)v105 = 67240450;
        v107 = Song.hasCustomLyrics.getter(v106) & 1;
        v39(v100, v2);
        *(_DWORD *)(v105 + 4) = v107;
        *(_WORD *)(v105 + 8) = 2082;
        v108 = (char *)sub_DE7DD0();
        v110 = v109;
        *(_QWORD *)(v105 + 10) = sub_DCF730(v108, v109, &v163);
        v111 = swift_bridgeObjectRelease(v110);
        ((void (*)(char *, uint64_t, __n128))v39)(v93, v2, v111);
        v112 = "Loader supportsLyrics=%{BOOL,public}d [not supported by subscription] subscriptionCapabilities.contains(."
               "catalogLyricsViewing)=false %{public}s";
        v113 = v103;
        v114 = v104;
        v115 = (uint8_t *)v105;
        v116 = 18;
LABEL_45:
        _os_log_impl(&dword_0, v113, v114, v112, v115, v116);
        swift_arrayDestroy(v106, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v106, -1, -1);
        swift_slowDealloc(v105, -1, -1);
LABEL_48:

        v132 = Song.hasCustomLyrics.getter(v131);
        return v132 & 1;
      }
      v130 = v100;
    }
    else
    {
      if (qword_1506120 != -1)
        swift_once(&qword_1506120, sub_DDD864);
      v117 = type metadata accessor for Logger(0);
      __swift_project_value_buffer(v117, (uint64_t)static Logger.lyrics);
      v118 = (void (*)(char *, uint64_t, uint64_t))v161;
      v161(v96, v41, v2);
      v118(v94, v41, v2);
      v119 = ((uint64_t (*)(char *, uint64_t, uint64_t))v118)(v93, v41, v2);
      v103 = Logger.logObject.getter(v119);
      v120 = static os_log_type_t.default.getter(v103);
      if (os_log_type_enabled(v103, v120))
      {
        v121 = v96;
        v105 = swift_slowAlloc(30, -1);
        v106 = swift_slowAlloc(32, -1);
        v163 = v106;
        *(_DWORD *)v105 = 67240962;
        v122 = Song.hasCustomLyrics.getter(v106) & 1;
        v39(v121, v2);
        *(_DWORD *)(v105 + 4) = v122;
        *(_WORD *)(v105 + 8) = 1026;
        v124 = Song.hasLyrics.getter(v123) & 1;
        v39(v94, v2);
        *(_DWORD *)(v105 + 10) = v124;
        *(_WORD *)(v105 + 14) = 1026;
        static ApplicationCapabilities.shared.getter((uint64_t)&v165);
        v125 = v167;
        swift_bridgeObjectRetain();
        sub_A9008(&v165);
        LOBYTE(v121) = sub_DE7EFC(2u, v125);
        swift_bridgeObjectRelease(v125);
        *(_DWORD *)(v105 + 16) = v121 & 1;
        *(_WORD *)(v105 + 20) = 2082;
        v126 = (char *)sub_DE7DD0();
        v128 = v127;
        *(_QWORD *)(v105 + 22) = sub_DCF730(v126, v127, &v163);
        v129 = swift_bridgeObjectRelease(v128);
        ((void (*)(char *, uint64_t, __n128))v39)(v93, v2, v129);
        v112 = "Loader supportsLyrics=%{BOOL,public}d [can't support store lyrics] song.hasLyrics=%{BOOL,public}d allowsS"
               "ubscriptionContent=%{BOOL,public}d %{public}s";
        v113 = v103;
        v114 = v120;
        v115 = (uint8_t *)v105;
        v116 = 30;
        goto LABEL_45;
      }
      v39(v94, v2);
      v130 = v96;
    }
    v39(v130, v2);
    v39(v93, v2);
    goto LABEL_48;
  }
  if ((objc_msgSend((id)objc_opt_self(MPStoreLyricsRequest), "supportsLyricsForURLBag:", v43) & 1) != 0)
  {

    goto LABEL_34;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)(ICURLBagKeyMusicSubscription);
  v73 = v72;
  v74 = String._bridgeToObjectiveC()();
  v75 = objc_msgSend(v43, "dictionaryForBagKey:", v74, swift_bridgeObjectRelease(v73).n128_f64[0]);

  if (v75)
  {

    if (qword_1506120 != -1)
      swift_once(&qword_1506120, sub_DDD864);
    v76 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v76, (uint64_t)static Logger.lyrics);
    v77 = v161;
    v161(v31, v41, v2);
    v78 = v157;
    v79 = v77(v157, v41, v2);
    v80 = Logger.logObject.getter(v79);
    v81 = static os_log_type_t.default.getter(v80);
    if (os_log_type_enabled(v80, v81))
    {
      v82 = swift_slowAlloc(22, -1);
      v83 = swift_slowAlloc(64, -1);
      v165 = v83;
      *(_DWORD *)v82 = 136446466;
      v84 = Song.hasCustomLyrics.getter(v83);
      v85 = (v84 & 1) == 0;
      if ((v84 & 1) != 0)
        v86 = 1702195828;
      else
        v86 = 0x65736C6166;
      if (v85)
        v87 = (char *)0xE500000000000000;
      else
        v87 = (char *)0xE400000000000000;
      *(_QWORD *)(v82 + 4) = sub_DCF730((char *)v86, v87, &v165);
      v88 = swift_bridgeObjectRelease(v87);
      ((void (*)(char *, uint64_t, __n128))v39)(v31, v2, v88);
      *(_WORD *)(v82 + 12) = 2082;
      v89 = (char *)sub_DE7DD0();
      v91 = v90;
      *(_QWORD *)(v82 + 14) = sub_DCF730(v89, v90, &v165);
      v92 = swift_bridgeObjectRelease(v91);
      ((void (*)(char *, uint64_t, __n128))v39)(v78, v2, v92);
      _os_log_impl(&dword_0, v80, v81, "Loader supportsLyrics=%{public}s [no lyrics keys in bag] %{public}s", (uint8_t *)v82, 0x16u);
      swift_arrayDestroy(v83, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v83, -1, -1);
      swift_slowDealloc(v82, -1, -1);
    }
    else
    {
      v39(v31, v2);
      v39(v78, v2);
    }

  }
  else
  {
    if (qword_1506120 != -1)
      swift_once(&qword_1506120, sub_DDD864);
    v133 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v133, (uint64_t)static Logger.lyrics);
    v134 = v161;
    v161(v26, v41, v2);
    v135 = v156;
    v136 = v134(v156, v41, v2);
    v137 = Logger.logObject.getter(v136);
    v138 = static os_log_type_t.default.getter(v137);
    if (os_log_type_enabled(v137, v138))
    {
      v139 = swift_slowAlloc(22, -1);
      v140 = swift_slowAlloc(64, -1);
      v165 = v140;
      *(_DWORD *)v139 = 136446466;
      v141 = Song.hasCustomLyrics.getter(v140);
      v142 = (v141 & 1) == 0;
      if ((v141 & 1) != 0)
        v143 = 1702195828;
      else
        v143 = 0x65736C6166;
      if (v142)
        v144 = (char *)0xE500000000000000;
      else
        v144 = (char *)0xE400000000000000;
      *(_QWORD *)(v139 + 4) = sub_DCF730((char *)v143, v144, &v165);
      v145 = swift_bridgeObjectRelease(v144);
      ((void (*)(char *, uint64_t, __n128))v39)(v26, v2, v145);
      *(_WORD *)(v139 + 12) = 2082;
      v146 = v156;
      v147 = (char *)sub_DE7DD0();
      v149 = v148;
      *(_QWORD *)(v139 + 14) = sub_DCF730(v147, v148, &v165);
      v150 = swift_bridgeObjectRelease(v149);
      ((void (*)(char *, uint64_t, __n128))v39)(v146, v2, v150);
      _os_log_impl(&dword_0, v137, v138, "Loader supportsLyrics=%{public}s [no musicSubscription key in bag] %{public}s", (uint8_t *)v139, 0x16u);
      swift_arrayDestroy(v140, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v140, -1, -1);
      swift_slowDealloc(v139, -1, -1);
    }
    else
    {
      v39(v26, v2);
      v39(v135, v2);
    }

  }
  v132 = Song.hasCustomLyrics.getter(v151);

  return v132 & 1;
}

uint64_t sub_DE7DD0()
{
  Swift::String v0;
  void *object;
  Swift::String v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::String v7;
  void *v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Swift::String v13;
  void *v14;
  _QWORD v16[2];
  uint64_t v17;
  unint64_t v18;

  _StringGuts.grow(_:)(42);
  swift_bridgeObjectRelease(0xE000000000000000);
  v17 = 0x7469742E676E6F73;
  v18 = 0xEB000000003D656CLL;
  v0._countAndFlagsBits = _s8MusicKit4SongV0A11ApplicationE10storyTitleSSSgvg_0();
  object = v0._object;
  String.append(_:)(v0);
  swift_bridgeObjectRelease(object);
  v2._countAndFlagsBits = 0x64692E676E6F7320;
  v2._object = (void *)0xE90000000000003DLL;
  String.append(_:)(v2);
  v4 = Song.id.getter(v3);
  v6 = v5;
  v7._countAndFlagsBits = MusicItemID.description.getter(v4, v5);
  v8 = v7._object;
  String.append(_:)(v7);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v8);
  v9._object = (void *)0x800000000110CB20;
  v9._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v9);
  v16[0] = Song.catalogID.getter(v10);
  v16[1] = v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1507930);
  v13._countAndFlagsBits = String.init<A>(describing:)(v16, v12);
  v14 = v13._object;
  String.append(_:)(v13);
  swift_bridgeObjectRelease(v14);
  return v17;
}

uint64_t sub_DE7EFC(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v9[9];

  if (*(_QWORD *)(a2 + 16))
  {
    Hasher.init(_seed:)(v9);
    v4 = ApplicationCapabilities.Service.rawValue.getter(a1);
    v6 = v5;
    String.hash(into:)(v9, v4, v5);
    swift_bridgeObjectRelease(v6);
    v7 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(a2 + 32));
    if (((*(_QWORD *)(a2 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
      __asm { BR              X9 }
  }
  return 0;
}

uint64_t sub_DE82C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, unint64_t, uint64_t);
  uint64_t v15;
  char v16;
  uint64_t v18;
  uint64_t v19;

  v4 = type metadata accessor for Playlist.Collaborator(0);
  v19 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a2 + 16)
    && (v7 = *(_QWORD *)(a2 + 40),
        v8 = sub_4DD24((unint64_t *)&unk_150BD60, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Collaborator, (uint64_t)&protocol conformance descriptor for Playlist.Collaborator), v9 = dispatch thunk of Hashable._rawHashValue(seed:)(v7, v4, v8), v10 = -1 << *(_BYTE *)(a2 + 32), v11 = v9 & ~v10, ((*(_QWORD *)(a2 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0))
  {
    v12 = ~v10;
    v13 = *(_QWORD *)(v19 + 72);
    v14 = *(void (**)(char *, unint64_t, uint64_t))(v19 + 16);
    do
    {
      v14(v6, *(_QWORD *)(a2 + 48) + v13 * v11, v4);
      v15 = sub_4DD24(&qword_15077D0, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Collaborator, (uint64_t)&protocol conformance descriptor for Playlist.Collaborator);
      v16 = dispatch thunk of static Equatable.== infix(_:_:)(v6, a1, v4, v15);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v6, v4);
      if ((v16 & 1) != 0)
        break;
      v11 = (v11 + 1) & v12;
    }
    while (((*(_QWORD *)(a2 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  }
  else
  {
    v16 = 0;
  }
  return v16 & 1;
}

uint64_t LyricsLoader.loadLyrics(for:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v2[62] = a1;
  v2[63] = v1;
  v3 = type metadata accessor for String.Encoding(0);
  v2[64] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[65] = v4;
  v2[66] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Song(0);
  v2[67] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[68] = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[69] = swift_task_alloc(v7);
  v2[70] = swift_task_alloc(v7);
  v2[71] = swift_task_alloc(v7);
  v2[72] = swift_task_alloc(v7);
  v2[73] = swift_task_alloc(v7);
  v2[74] = swift_task_alloc(v7);
  v2[75] = swift_task_alloc(v7);
  v2[76] = swift_task_alloc(v7);
  v2[77] = swift_task_alloc(v7);
  v2[78] = swift_task_alloc(v7);
  v2[79] = swift_task_alloc(v7);
  return swift_task_switch(sub_DE8550, 0, 0);
}

{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = v1;
  return swift_task_switch(sub_DEA480, 0, 0);
}

uint64_t sub_DE8550(double a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  char *v37;
  __n128 v38;
  unint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53[2];

  v2 = *(_QWORD *)(v1 + 632);
  v3 = *(_QWORD *)(v1 + 544);
  v4 = *(_QWORD *)(v1 + 536);
  v5 = *(_QWORD *)(v1 + 496);
  v6 = Song.hasLyrics.getter(a1);
  v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v1 + 640) = v7;
  v8 = v7(v2, v5, v4);
  v9 = *(_QWORD *)(v1 + 632);
  v10 = *(_QWORD *)(v1 + 544);
  v11 = *(_QWORD *)(v1 + 536);
  if ((v6 & 1) != 0)
  {
    v12 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v12(*(_QWORD *)(v1 + 632), *(_QWORD *)(v1 + 536));
LABEL_4:
    *(_QWORD *)(v1 + 648) = v12;
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1507660);
    v15 = swift_allocObject(v14, 40, 7);
    *(_OWORD *)(v15 + 16) = xmmword_1060220;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1507668);
    v16 = static PartialMusicProperty<A>.customLyrics.getter();
    *(_QWORD *)(v15 + 32) = v16;
    v53[0] = v15;
    specialized Array._endMutation()(v16);
    v17 = v15;
    *(_QWORD *)(v1 + 656) = v15;
    v18 = (_QWORD *)swift_task_alloc(async function pointer to MusicItem<>.with(_:)[1]);
    *(_QWORD *)(v1 + 664) = v18;
    v19 = sub_4DD24(&qword_1507670, (uint64_t (*)(uint64_t))&type metadata accessor for Song, (uint64_t)&protocol conformance descriptor for Song);
    *v18 = v1;
    v18[1] = sub_DE8950;
    return MusicItem<>.with(_:)(*(_QWORD *)(v1 + 624), v17, *(_QWORD *)(v1 + 536), &protocol witness table for Song, &protocol witness table for Song, v19);
  }
  v13 = Song.hasCustomLyrics.getter(v8);
  v12 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  v12(v9, v11);
  if ((v13 & 1) != 0)
    goto LABEL_4;
  if (qword_1506120 != -1)
    swift_once(&qword_1506120, sub_DDD864);
  v21 = *(_QWORD *)(v1 + 576);
  v22 = *(_QWORD *)(v1 + 536);
  v23 = *(_QWORD *)(v1 + 496);
  v24 = *(void **)(v1 + 504);
  v25 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v25, (uint64_t)static Logger.lyrics);
  v7(v21, v23, v22);
  v26 = Logger.logObject.getter(v24);
  v27 = static os_log_type_t.default.getter();
  v28 = os_log_type_enabled(v26, v27);
  v29 = *(_QWORD *)(v1 + 576);
  v30 = *(_QWORD *)(v1 + 536);
  v31 = *(void **)(v1 + 504);
  if (v28)
  {
    v32 = swift_slowAlloc(22, -1);
    v33 = swift_slowAlloc(64, -1);
    v53[0] = v33;
    *(_DWORD *)v32 = 136446466;
    *(_QWORD *)(v1 + 472) = v31;
    v34 = (char *)String.init<A>(describing:)(v1 + 472, &type metadata for UnsafeMutableRawPointer);
    *(_QWORD *)(v32 + 4) = sub_DCF730(v34, v35, v53);

    swift_bridgeObjectRelease();
    *(_WORD *)(v32 + 12) = 2082;
    v36 = (char *)sub_DE7DD0();
    *(_QWORD *)(v32 + 14) = sub_DCF730(v36, v37, v53);
    v38 = swift_bridgeObjectRelease();
    ((void (*)(uint64_t, uint64_t, __n128))v12)(v29, v30, v38);
    _os_log_impl(&dword_0, v26, v27, "Loader<%{public}s> loadLyrics(for:completion:) returned without loading lyrics [hasLyrics and hasCustomLyrics were false] %{public}s", (uint8_t *)v32, 0x16u);
    swift_arrayDestroy(v33, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v33, -1, -1);
    swift_slowDealloc(v32, -1, -1);
  }
  else
  {

    v12(v29, v30);
  }

  v39 = sub_DEE238();
  v40 = swift_allocError(&type metadata for LyricsLoader.LyricsError, v39, 0, 0);
  *v41 = 1;
  swift_willThrow(v40);
  v42 = *(_QWORD *)(v1 + 624);
  v43 = *(_QWORD *)(v1 + 616);
  v44 = *(_QWORD *)(v1 + 608);
  v45 = *(_QWORD *)(v1 + 600);
  v46 = *(_QWORD *)(v1 + 592);
  v47 = *(_QWORD *)(v1 + 584);
  v48 = *(_QWORD *)(v1 + 576);
  v49 = *(_QWORD *)(v1 + 568);
  v50 = *(_QWORD *)(v1 + 560);
  v51 = *(_QWORD *)(v1 + 552);
  v52 = *(_QWORD *)(v1 + 528);
  swift_task_dealloc(*(_QWORD *)(v1 + 632));
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_DE8950()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 664);
  *(_QWORD *)(*(_QWORD *)v1 + 672) = v0;
  swift_task_dealloc(v2);
  if (v0)
  {
    v3 = sub_DE98F8;
  }
  else
  {
    swift_bridgeObjectRelease();
    v3 = sub_DE89BC;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_DE89BC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;
  double v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  id v8;
  NSString v9;
  unsigned int v10;
  Swift::String v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  _QWORD *v35;
  uint64_t v36;
  void *v37;
  char *v38;
  NSObject *v39;
  __n128 v40;
  void *v41;
  id v42;
  id v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  id v51;
  id v52;
  id v53;
  id v54;
  NSObject *v55;
  os_log_type_t v56;
  _BOOL4 v57;
  void (*v58)(uint64_t, uint64_t, __n128);
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  id v66;
  uint64_t v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  __n128 v72;
  uint64_t v73;
  void (*v74)(uint64_t, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  NSObject *v83;
  os_log_type_t v84;
  _BOOL4 v85;
  uint64_t (*v86)(uint64_t, uint64_t, __n128);
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  char v96;
  BOOL v97;
  uint64_t v98;
  char *v99;
  __n128 v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  char *v106;
  __n128 v107;
  char *v108;
  char *v109;
  __n128 v110;
  void (*v111)(uint64_t, uint64_t);
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  _BYTE *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  _BYTE *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  void (*v133)(uint64_t, uint64_t, uint64_t);
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  _QWORD *v139;
  _QWORD *v140;
  id v141;
  Class isa;
  id v143;
  uint64_t v144;
  unsigned int v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  os_log_type_t typea[8];
  os_log_type_t type;
  os_log_type_t typeb[8];
  uint64_t v152;
  void *v153;
  uint64_t v154;
  uint64_t v155[2];

  v2 = Song.customLyrics.getter(a1);
  if (!v3)
  {
LABEL_11:
    v29 = Song.hasLyrics.getter(v4);
    if ((v29 & 1) != 0)
    {
      v30 = (char *)v1[63];
      v31 = Song.id.getter(v29);
      v33 = v32;
      v1[56] = 0;
      v34 = *(void **)&v30[OBJC_IVAR___MusicLyricsLoader_accessQueue];
      v35 = (_QWORD *)swift_allocObject(&unk_13C5268, 48, 7);
      v35[2] = v1 + 56;
      v35[3] = v30;
      v35[4] = v31;
      v35[5] = v33;
      v36 = swift_allocObject(&unk_13C5290, 32, 7);
      *(_QWORD *)(v36 + 16) = sub_DEE280;
      *(_QWORD *)(v36 + 24) = v35;
      v1[44] = sub_62604;
      v1[45] = v36;
      v1[40] = _NSConcreteStackBlock;
      v1[41] = 1107296256;
      v1[42] = sub_3A1A94;
      v1[43] = &block_descriptor_339;
      v37 = _Block_copy(v1 + 40);
      v38 = v30;
      v39 = v34;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_release();
      dispatch_sync(v39, v37);

      _Block_release(v37);
      LOBYTE(v37) = swift_isEscapingClosureAtFileLocation(v36, "", 122, 302, 31, 1, v40);
      swift_release();
      if ((v37 & 1) == 0)
      {
        v41 = (void *)v1[56];
        swift_bridgeObjectRelease();
        swift_release();

        if (!v41)
        {
          static ApplicationCapabilities.shared.getter((uint64_t)(v1 + 25));
          sub_A9008(v1 + 25);
          if ((*((_BYTE *)v1 + 210) & 1) != 0)
          {
            v133 = (void (*)(uint64_t, uint64_t, uint64_t))v1[80];
            v134 = v1[74];
            v135 = v1[67];
            v136 = v1[62];
            v137 = v1[63];
            sub_4E684(0, &qword_1507688, MPStoreLyricsRequest_ptr);
            v133(v134, v136, v135);
            v138 = MPStoreLyricsRequest.init(song:)(v134);
            v1[89] = v138;
            v139 = (_QWORD *)swift_task_alloc(48);
            v1[90] = v139;
            v139[2] = v137;
            v139[3] = v138;
            v139[4] = v136;
            v140 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
            v1[91] = v140;
            *v140 = v1;
            v140[1] = sub_DE9774;
            return withCheckedThrowingContinuation<A>(isolation:function:_:)(v1 + 51, 0, 0, 0xD000000000000010, 0x800000000110CA20, sub_DEE2B4, v139, &type metadata for LyricsLoader.Result);
          }
        }
        v42 = objc_msgSend((id)objc_opt_self(MPCloudServiceStatusController), "sharedController");
        v43 = objc_msgSend(v42, "musicSubscriptionStatus");

        static ApplicationCapabilities.shared.getter((uint64_t)(v1 + 10));
        sub_A9008(v1 + 10);
        v44 = v1[11];
        if (qword_1506120 != -1)
          swift_once(&qword_1506120, sub_DDD864);
        v45 = (void (*)(uint64_t, uint64_t, uint64_t))v1[80];
        v46 = v1[73];
        v47 = v1[67];
        v48 = v1[62];
        v49 = (void *)v1[63];
        v50 = type metadata accessor for Logger(0);
        __swift_project_value_buffer(v50, (uint64_t)static Logger.lyrics);
        v45(v46, v48, v47);
        v51 = v49;
        v52 = v43;
        v53 = v51;
        v54 = v52;
        v55 = Logger.logObject.getter(v54);
        v56 = static os_log_type_t.default.getter();
        v57 = os_log_type_enabled(v55, v56);
        v58 = (void (*)(uint64_t, uint64_t, __n128))v1[81];
        v59 = v1[73];
        v60 = v1[67];
        v61 = (void *)v1[63];
        if (v57)
        {
          v147 = v1[67];
          v153 = v54;
          v62 = swift_slowAlloc(38, -1);
          v145 = v44;
          v63 = swift_slowAlloc(96, -1);
          v155[0] = v63;
          *(_DWORD *)v62 = 136446978;
          v1[54] = v61;
          v64 = (char *)String.init<A>(describing:)(v1 + 54, &type metadata for UnsafeMutableRawPointer);
          *(_QWORD *)(v62 + 4) = sub_DCF730(v64, v65, v155);

          swift_bridgeObjectRelease();
          *(_WORD *)(v62 + 12) = 2082;
          v1[55] = v43;
          v66 = v153;
          v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1507680);
          v68 = (char *)String.init<A>(describing:)(v1 + 55, v67);
          *(_QWORD *)(v62 + 14) = sub_DCF730(v68, v69, v155);

          swift_bridgeObjectRelease();
          *(_WORD *)(v62 + 22) = 1026;
          *(_DWORD *)(v62 + 24) = HIWORD(v145) & 1;
          *(_WORD *)(v62 + 28) = 2082;
          v70 = (char *)sub_DE7DD0();
          *(_QWORD *)(v62 + 30) = sub_DCF730(v70, v71, v155);
          v72 = swift_bridgeObjectRelease();
          v58(v59, v147, v72);
          _os_log_impl(&dword_0, v55, v56, "Loader<%{public}s> loadLyrics(for:completion:) didn't load store lyrics [not supported by subscription] subscriptionStatus=%{public}s subscriptionStatus.capabilities.contains(.catalogLyricsViewing)=%{BOOL,public}d %{public}s", (uint8_t *)v62, 0x26u);
          swift_arrayDestroy(v63, 3, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v63, -1, -1);
          v73 = v62;
          v54 = v153;
          swift_slowDealloc(v73, -1, -1);
        }
        else
        {

          ((void (*)(uint64_t, uint64_t))v58)(v59, v60);
        }

        v111 = (void (*)(uint64_t, uint64_t))v1[81];
        v119 = v1[78];
        v120 = v1[67];
        v121 = sub_DEE238();
        v122 = swift_allocError(&type metadata for LyricsLoader.LyricsError, v121, 0, 0);
        *v123 = 2;
        swift_willThrow(v122);

        v117 = v119;
        v118 = v120;
LABEL_32:
        v111(v117, v118);
        v124 = v1[78];
        v125 = v1[77];
        v126 = v1[76];
        v127 = v1[75];
        v128 = v1[74];
        v129 = v1[73];
        v130 = v1[72];
        v131 = v1[71];
        v132 = v1[70];
        v148 = v1[69];
        *(_QWORD *)typeb = v1[66];
        swift_task_dealloc(v1[79]);
        swift_task_dealloc(v124);
        swift_task_dealloc(v125);
        swift_task_dealloc(v126);
        swift_task_dealloc(v127);
        swift_task_dealloc(v128);
        swift_task_dealloc(v129);
        swift_task_dealloc(v130);
        swift_task_dealloc(v131);
        swift_task_dealloc(v132);
        swift_task_dealloc(v148);
        swift_task_dealloc(*(_QWORD *)typeb);
        return ((uint64_t (*)(void))v1[1])();
      }
      __break(1u);
    }
    else if (qword_1506120 == -1)
    {
LABEL_20:
      v74 = (void (*)(uint64_t, uint64_t, uint64_t))v1[80];
      v75 = v1[78];
      v76 = v1[77];
      v77 = v1[76];
      v78 = v1[75];
      v79 = v1[67];
      v80 = v1[62];
      v81 = (void *)v1[63];
      v82 = type metadata accessor for Logger(0);
      __swift_project_value_buffer(v82, (uint64_t)static Logger.lyrics);
      v74(v76, v80, v79);
      v74(v77, v75, v79);
      v74(v78, v80, v79);
      v83 = Logger.logObject.getter(v81);
      v84 = static os_log_type_t.default.getter();
      v85 = os_log_type_enabled(v83, v84);
      v86 = (uint64_t (*)(uint64_t, uint64_t, __n128))v1[81];
      v87 = v1[77];
      v88 = v1[76];
      v89 = v1[75];
      v90 = v1[67];
      v91 = (void *)v1[63];
      if (v85)
      {
        type = v84;
        v92 = swift_slowAlloc(42, -1);
        v154 = swift_slowAlloc(128, -1);
        v155[0] = v154;
        *(_DWORD *)v92 = 136446978;
        v1[58] = v91;
        v93 = (char *)String.init<A>(describing:)(v1 + 58, &type metadata for UnsafeMutableRawPointer);
        *(_QWORD *)(v92 + 4) = sub_DCF730(v93, v94, v155);

        swift_bridgeObjectRelease();
        *(_WORD *)(v92 + 12) = 2082;
        v96 = Song.hasCustomLyrics.getter(v95);
        v97 = (v96 & 1) == 0;
        if ((v96 & 1) != 0)
          v98 = 1702195828;
        else
          v98 = 0x65736C6166;
        if (v97)
          v99 = (char *)0xE500000000000000;
        else
          v99 = (char *)0xE400000000000000;
        *(_QWORD *)(v92 + 14) = sub_DCF730((char *)v98, v99, v155);
        v100 = swift_bridgeObjectRelease();
        v101 = v86(v87, v90, v100);
        *(_WORD *)(v92 + 22) = 2082;
        v102 = Song.customLyrics.getter(v101);
        v104 = (char *)Optional<A>.description.getter(v102, v103);
        v106 = v105;
        swift_bridgeObjectRelease();
        *(_QWORD *)(v92 + 24) = sub_DCF730(v104, v106, v155);
        v107 = swift_bridgeObjectRelease();
        v86(v88, v90, v107);
        *(_WORD *)(v92 + 32) = 2082;
        v108 = (char *)sub_DE7DD0();
        *(_QWORD *)(v92 + 34) = sub_DCF730(v108, v109, v155);
        v110 = swift_bridgeObjectRelease();
        v86(v89, v90, v110);
        _os_log_impl(&dword_0, v83, type, "Loader<%{public}s> loadLyrics(for:completion:) didn't load lyrics [no lyrics found] song.hasLyrics=false song.hasCustomLyrics=%{public}s song.customLyrics=%{public}s %{public}s", (uint8_t *)v92, 0x2Au);
        swift_arrayDestroy(v154, 4, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v154, -1, -1);
        swift_slowDealloc(v92, -1, -1);
      }
      else
      {

        ((void (*)(uint64_t, uint64_t))v86)(v87, v90);
        ((void (*)(uint64_t, uint64_t))v86)(v88, v90);
        ((void (*)(uint64_t, uint64_t))v86)(v89, v90);
      }

      v111 = (void (*)(uint64_t, uint64_t))v1[81];
      v112 = v1[78];
      v113 = v1[67];
      v114 = sub_DEE238();
      v115 = swift_allocError(&type metadata for LyricsLoader.LyricsError, v114, 0, 0);
      *v116 = 1;
      swift_willThrow(v115);
      v117 = v112;
      v118 = v113;
      goto LABEL_32;
    }
    swift_once(&qword_1506120, sub_DDD864);
    goto LABEL_20;
  }
  v5 = v2;
  v6 = v3;
  v7 = HIBYTE(v3) & 0xF;
  if ((v3 & 0x2000000000000000) == 0)
    v7 = v2 & 0xFFFFFFFFFFFFLL;
  if (!v7)
  {
    *(_QWORD *)&v4 = swift_bridgeObjectRelease().n128_u64[0];
    goto LABEL_11;
  }
  v8 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend(v8, "BOOLForKey:", v9);

  if (!v10)
    goto LABEL_9;
  if (*DeviceCapabilities.isInternalInstall.unsafeMutableAddressor() != 1)
    goto LABEL_9;
  v11 = String.trim()();
  v12 = sub_DE9F70(544502844, 0xE400000000000000, v11._countAndFlagsBits, (uint64_t)v11._object);
  swift_bridgeObjectRelease();
  if ((v12 & 1) == 0)
    goto LABEL_9;
  v14 = v1[66];
  v15 = v1[65];
  v16 = v1[64];
  static String.Encoding.utf8.getter(v13);
  v17 = String.data(using:allowLossyConversion:)(v14, 0, v5, v6);
  v19 = v18;
  v1[85] = v17;
  v1[86] = v18;
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  if (v19 >> 60 != 15)
  {
    swift_bridgeObjectRelease();
    v141 = objc_allocWithZone((Class)MSVLyricsTTMLParser);
    sub_50CB4(v17, v19);
    isa = Data._bridgeToObjectiveC()().super.isa;
    v143 = objc_msgSend(v141, "initWithTTMLData:", isa);
    v1[87] = v143;
    sub_50C4C(v17, v19);

    v1[7] = v1 + 57;
    v1[2] = v1;
    v1[3] = sub_DE95C4;
    v1[50] = swift_continuation_init(v1 + 2, 1);
    v1[46] = _NSConcreteStackBlock;
    v1[47] = 0x40000000;
    v1[48] = sub_DEA0D4;
    v1[49] = &block_descriptor_7_16;
    objc_msgSend(v143, "parseWithCompletion:", v1 + 46);
    return swift_continuation_await(v1 + 2);
  }
  else
  {
LABEL_9:
    ((void (*)(_QWORD, _QWORD))v1[81])(v1[78], v1[67]);
    v20 = v1[78];
    v21 = v1[77];
    v22 = v1[76];
    v23 = v1[75];
    v152 = v5;
    v24 = v1[74];
    v25 = v1[73];
    v26 = v1[72];
    v27 = v1[71];
    v144 = v1[70];
    v146 = v1[69];
    *(_QWORD *)typea = v1[66];
    swift_task_dealloc(v1[79]);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v144);
    swift_task_dealloc(v146);
    swift_task_dealloc(*(_QWORD *)typea);
    return ((uint64_t (*)(uint64_t, unint64_t, _QWORD))v1[1])(v152, v6, 0);
  }
}

uint64_t sub_DE95C4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 704) = v1;
  if (v1)
    v2 = sub_DE99E4;
  else
    v2 = sub_DE9624;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_DE9624()
{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = *(void **)(v0 + 696);
  v2 = *(_QWORD *)(v0 + 688);
  v3 = *(_QWORD *)(v0 + 680);
  v4 = *(void (**)(uint64_t, uint64_t))(v0 + 648);
  v5 = *(_QWORD *)(v0 + 624);
  v6 = *(_QWORD *)(v0 + 536);
  v7 = *(void **)(v0 + 456);
  v8 = type metadata accessor for Lyrics();
  swift_allocObject(v8, 160, 7);
  v21 = Lyrics.init(identifier:songInfo:)(0, 0, v7);

  sub_50C4C(v3, v2);
  v4(v5, v6);
  v9 = *(_QWORD *)(v0 + 624);
  v10 = *(_QWORD *)(v0 + 616);
  v11 = *(_QWORD *)(v0 + 608);
  v12 = *(_QWORD *)(v0 + 600);
  v13 = *(_QWORD *)(v0 + 592);
  v14 = *(_QWORD *)(v0 + 584);
  v15 = *(_QWORD *)(v0 + 576);
  v16 = *(_QWORD *)(v0 + 568);
  v17 = *(_QWORD *)(v0 + 560);
  v19 = *(_QWORD *)(v0 + 552);
  v20 = *(_QWORD *)(v0 + 528);
  swift_task_dealloc(*(_QWORD *)(v0 + 632));
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v0 + 8))(v21, 0, 1);
}

uint64_t sub_DE9774()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 728);
  *(_QWORD *)(*v1 + 736) = v0;
  swift_task_dealloc(v3);
  swift_task_dealloc(*(_QWORD *)(v2 + 720));
  if (v0)
    v4 = sub_DE9E6C;
  else
    v4 = sub_DE97E0;
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_DE97E0()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 648);
  v2 = *(_QWORD *)(v0 + 624);
  v3 = *(_QWORD *)(v0 + 536);

  v1(v2, v3);
  v17 = *(_QWORD *)(v0 + 416);
  v18 = *(_QWORD *)(v0 + 408);
  v16 = *(unsigned __int8 *)(v0 + 424);
  v4 = *(_QWORD *)(v0 + 624);
  v5 = *(_QWORD *)(v0 + 616);
  v6 = *(_QWORD *)(v0 + 608);
  v7 = *(_QWORD *)(v0 + 600);
  v8 = *(_QWORD *)(v0 + 592);
  v9 = *(_QWORD *)(v0 + 584);
  v10 = *(_QWORD *)(v0 + 576);
  v11 = *(_QWORD *)(v0 + 568);
  v12 = *(_QWORD *)(v0 + 560);
  v14 = *(_QWORD *)(v0 + 552);
  v15 = *(_QWORD *)(v0 + 528);
  swift_task_dealloc(*(_QWORD *)(v0 + 632));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v0 + 8))(v18, v17, v16);
}

uint64_t sub_DE98F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 656));
  v1 = *(_QWORD *)(v0 + 624);
  v2 = *(_QWORD *)(v0 + 616);
  v3 = *(_QWORD *)(v0 + 608);
  v4 = *(_QWORD *)(v0 + 600);
  v5 = *(_QWORD *)(v0 + 592);
  v6 = *(_QWORD *)(v0 + 584);
  v7 = *(_QWORD *)(v0 + 576);
  v8 = *(_QWORD *)(v0 + 568);
  v9 = *(_QWORD *)(v0 + 560);
  v11 = *(_QWORD *)(v0 + 552);
  v12 = *(_QWORD *)(v0 + 528);
  swift_task_dealloc(*(_QWORD *)(v0 + 632));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_DE99E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  _BOOL4 v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t, __n128);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char v32;
  BOOL v33;
  uint64_t v34;
  char *v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  __n128 v43;
  char *v44;
  char *v45;
  __n128 v46;
  uint64_t v47;
  void *v48;
  unint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  _BYTE *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  NSObject *log;
  os_log_t loga;
  os_log_type_t type;
  os_log_type_t typea[8];
  uint64_t v73[2];

  swift_willThrow(a1);
  if (qword_1506120 != -1)
    swift_once(&qword_1506120, sub_DDD864);
  v2 = *(_QWORD *)(v1 + 704);
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 640);
  v4 = *(_QWORD *)(v1 + 624);
  v5 = *(_QWORD *)(v1 + 568);
  v6 = *(_QWORD *)(v1 + 560);
  v7 = *(_QWORD *)(v1 + 552);
  v8 = *(_QWORD *)(v1 + 536);
  v9 = *(_QWORD *)(v1 + 496);
  v10 = *(void **)(v1 + 504);
  v11 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v11, (uint64_t)static Logger.lyrics);
  v3(v5, v9, v8);
  v3(v6, v4, v8);
  v3(v7, v9, v8);
  v12 = v10;
  swift_errorRetain(v2);
  v13 = v12;
  v14 = swift_errorRetain(v2);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter();
  v17 = os_log_type_enabled(v15, v16);
  v18 = *(_QWORD *)(v1 + 704);
  v19 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v1 + 648);
  v20 = *(_QWORD *)(v1 + 568);
  v21 = *(_QWORD *)(v1 + 560);
  v22 = *(_QWORD *)(v1 + 552);
  v23 = *(_QWORD *)(v1 + 536);
  v24 = *(void **)(v1 + 504);
  if (v17)
  {
    log = v15;
    type = v16;
    v66 = *(_QWORD *)(v1 + 552);
    v25 = swift_slowAlloc(52, -1);
    v67 = swift_slowAlloc(160, -1);
    v73[0] = v67;
    *(_DWORD *)v25 = 136447234;
    *(_QWORD *)(v1 + 480) = v24;
    v26 = (char *)String.init<A>(describing:)(v1 + 480, &type metadata for UnsafeMutableRawPointer);
    *(_QWORD *)(v25 + 4) = sub_DCF730(v26, v27, v73);

    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2082;
    *(_QWORD *)(v1 + 488) = v18;
    swift_errorRetain(v18);
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1507690);
    v29 = (char *)String.init<A>(describing:)(v1 + 488, v28);
    *(_QWORD *)(v25 + 14) = sub_DCF730(v29, v30, v73);
    swift_bridgeObjectRelease();
    swift_errorRelease(v18);
    v31 = swift_errorRelease(v18);
    *(_WORD *)(v25 + 22) = 2082;
    v32 = Song.hasCustomLyrics.getter(v31);
    v33 = (v32 & 1) == 0;
    if ((v32 & 1) != 0)
      v34 = 1702195828;
    else
      v34 = 0x65736C6166;
    if (v33)
      v35 = (char *)0xE500000000000000;
    else
      v35 = (char *)0xE400000000000000;
    *(_QWORD *)(v25 + 24) = sub_DCF730((char *)v34, v35, v73);
    v36 = swift_bridgeObjectRelease();
    v37 = v19(v20, v23, v36);
    *(_WORD *)(v25 + 32) = 2082;
    v38 = Song.customLyrics.getter(v37);
    v40 = (char *)Optional<A>.description.getter(v38, v39);
    v42 = v41;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v25 + 34) = sub_DCF730(v40, v42, v73);
    v43 = swift_bridgeObjectRelease();
    v19(v21, v23, v43);
    *(_WORD *)(v25 + 42) = 2082;
    v44 = (char *)sub_DE7DD0();
    *(_QWORD *)(v25 + 44) = sub_DCF730(v44, v45, v73);
    v46 = swift_bridgeObjectRelease();
    v19(v66, v23, v46);
    _os_log_impl(&dword_0, log, type, "Loader<%{public}s> loadLyrics(for:completion:) didn't parse TTML custom lyrics with error=%{public}s song.hasCustomLyrics=%{public}s song.customLyrics=%{public}s %{public}s", (uint8_t *)v25, 0x34u);
    swift_arrayDestroy(v67, 5, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v67, -1, -1);
    swift_slowDealloc(v25, -1, -1);

  }
  else
  {

    swift_errorRelease(v18);
    swift_errorRelease(v18);
    ((void (*)(uint64_t, uint64_t))v19)(v20, v23);
    ((void (*)(uint64_t, uint64_t))v19)(v21, v23);
    ((void (*)(uint64_t, uint64_t))v19)(v22, v23);

  }
  v47 = *(_QWORD *)(v1 + 704);
  v48 = *(void **)(v1 + 696);
  v49 = *(_QWORD *)(v1 + 688);
  v50 = *(_QWORD *)(v1 + 680);
  v51 = *(void (**)(uint64_t, uint64_t))(v1 + 648);
  v52 = *(_QWORD *)(v1 + 624);
  v53 = *(_QWORD *)(v1 + 536);
  v54 = sub_DEE238();
  *(_QWORD *)typea = swift_allocError(&type metadata for LyricsLoader.LyricsError, v54, 0, 0);
  *v55 = 0;
  swift_willThrow(*(_QWORD *)typea);

  swift_errorRelease(v47);
  sub_50C4C(v50, v49);
  v51(v52, v53);
  v56 = *(_QWORD *)(v1 + 624);
  v57 = *(_QWORD *)(v1 + 616);
  v58 = *(_QWORD *)(v1 + 608);
  v59 = *(_QWORD *)(v1 + 600);
  v60 = *(_QWORD *)(v1 + 592);
  v61 = *(_QWORD *)(v1 + 584);
  v62 = *(_QWORD *)(v1 + 576);
  v63 = *(_QWORD *)(v1 + 568);
  v64 = *(_QWORD *)(v1 + 560);
  v68 = *(_QWORD *)(v1 + 552);
  loga = *(os_log_t *)(v1 + 528);
  swift_task_dealloc(*(_QWORD *)(v1 + 632));
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v68);
  swift_task_dealloc(loga);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_DE9E6C()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 648);
  v2 = *(_QWORD *)(v0 + 624);
  v3 = *(_QWORD *)(v0 + 536);

  v1(v2, v3);
  v4 = *(_QWORD *)(v0 + 624);
  v5 = *(_QWORD *)(v0 + 616);
  v6 = *(_QWORD *)(v0 + 608);
  v7 = *(_QWORD *)(v0 + 600);
  v8 = *(_QWORD *)(v0 + 592);
  v9 = *(_QWORD *)(v0 + 584);
  v10 = *(_QWORD *)(v0 + 576);
  v11 = *(_QWORD *)(v0 + 568);
  v12 = *(_QWORD *)(v0 + 560);
  v14 = *(_QWORD *)(v0 + 552);
  v15 = *(_QWORD *)(v0 + 528);
  swift_task_dealloc(*(_QWORD *)(v0 + 632));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_DE9F70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  Swift::String_optional v4;
  uint64_t countAndFlagsBits;
  void *object;
  char v7;
  Swift::String_optional v8;
  Swift::String_optional v9;
  void *v10;
  _BOOL8 v11;

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v4 = String.Iterator.next()();
  if (v4.value._object)
  {
    countAndFlagsBits = v4.value._countAndFlagsBits;
    object = v4.value._object;
    do
    {
      v9 = String.Iterator.next()();
      if (!v9.value._object)
      {
        swift_bridgeObjectRelease(object);
        swift_bridgeObjectRelease(a4);
        swift_bridgeObjectRelease(a2);
        return 1;
      }
      if (countAndFlagsBits == v9.value._countAndFlagsBits && object == v9.value._object)
      {
        swift_bridgeObjectRelease(object);
        swift_bridgeObjectRelease(v9.value._object);
      }
      else
      {
        v7 = _stringCompareWithSmolCheck(_:_:expecting:)(countAndFlagsBits, object, v9.value._countAndFlagsBits, v9.value._object, 0);
        swift_bridgeObjectRelease(object);
        swift_bridgeObjectRelease(v9.value._object);
        if ((v7 & 1) == 0)
        {
          swift_bridgeObjectRelease(a4);
          swift_bridgeObjectRelease(a2);
          return 0;
        }
      }
      v8 = String.Iterator.next()();
      countAndFlagsBits = v8.value._countAndFlagsBits;
      object = v8.value._object;
    }
    while (v8.value._object);
  }
  swift_bridgeObjectRelease(a4);
  v10 = String.Iterator.next()().value._object;
  swift_bridgeObjectRelease(a2);
  v11 = v10 == 0;
  swift_bridgeObjectRelease(v10);
  return v11;
}

uint64_t sub_DEA0D4(uint64_t result, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  id v9;

  v3 = *(_QWORD *)(result + 32);
  if (a3)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1507690);
    v6 = swift_allocError(v5, &protocol self-conformance witness table for Error, 0, 0);
    *v7 = a3;
    v8 = a3;
    return swift_continuation_throwingResumeWithError(v3, v6);
  }
  else if (a2)
  {
    **(_QWORD **)(*(_QWORD *)(v3 + 64) + 40) = a2;
    v9 = a2;
    return swift_continuation_throwingResume(v3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_DEA160(uint64_t a1, char *a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v20;
  char *v21;

  v21 = a2;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1507928);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin();
  v10 = type metadata accessor for Song(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin();
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v11 + 16))(v14, a4, v10, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  v15 = *(unsigned __int8 *)(v8 + 80);
  v16 = (v15 + 16) & ~v15;
  v17 = swift_allocObject(&unk_13C5AB0, v16 + v9, v15 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v17 + v16, (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  sub_DEE8C4(a3, (uint64_t)v14, (uint64_t)sub_DF187C, v17, v21);
  v18 = swift_release();
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v11 + 8))(v14, v10, v18);
}

void LyricsLoader.hasRequest(for:)(uint64_t a1)
{
  char *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  _QWORD *v7;
  uint64_t v8;
  void *v9;
  NSObject *v10;
  id v11;
  __n128 v12;
  _QWORD aBlock[6];
  char v14;

  v2 = v1;
  v3 = Song.id.getter(a1);
  v5 = v4;
  v14 = 0;
  v6 = *(void **)&v1[OBJC_IVAR___MusicLyricsLoader_accessQueue];
  v7 = (_QWORD *)swift_allocObject(&unk_13C52F8, 48, 7);
  v7[2] = &v14;
  v7[3] = v2;
  v7[4] = v3;
  v7[5] = v5;
  v8 = swift_allocObject(&unk_13C5320, 32, 7);
  *(_QWORD *)(v8 + 16) = sub_DEE2C4;
  *(_QWORD *)(v8 + 24) = v7;
  aBlock[4] = sub_AF944;
  aBlock[5] = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_3A1A94;
  aBlock[3] = &block_descriptor_17_13;
  v9 = _Block_copy(aBlock);
  v10 = v6;
  v11 = v2;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v10, v9);

  _Block_release(v9);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation(v8, "", 122, 294, 31, 1, v12);
  swift_release();
  if ((v2 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
  }
}

double LyricsLoader.cancelRequest(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  double result;

  v1 = Song.id.getter(a1);
  sub_DEBF50(v1, v2);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_DEA480()
{
  uint64_t v0;
  int8x16_t *v1;
  _QWORD *v2;

  v1 = (int8x16_t *)swift_task_alloc(32);
  *(_QWORD *)(v0 + 56) = v1;
  v1[1] = vextq_s8(*(int8x16_t *)(v0 + 40), *(int8x16_t *)(v0 + 40), 8uLL);
  v2 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 64) = v2;
  *v2 = v0;
  v2[1] = sub_DEA524;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0xD000000000000010, 0x800000000110CA20, sub_DEE2E0, v1, &type metadata for LyricsLoader.Result);
}

uint64_t sub_DEA524()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 64);
  *(_QWORD *)(*v1 + 72) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_DEA5A4;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 56));
    v4 = sub_DEA590;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_DEA590()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(unsigned __int8 *)(v0 + 32));
}

uint64_t sub_DEA5A4()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 56));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_DEA5D8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;
  uint64_t v13;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1507928);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = __chkstk_darwin();
  (*(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16))((char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5, v8);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = (v9 + 16) & ~v9;
  v11 = swift_allocObject(&unk_13C5A10, v10 + v7, v9 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v11 + v10, (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  LyricsLoader.loadLyrics(for:completion:)(a3, (void (*)(uint64_t, unint64_t, uint64_t, uint64_t))sub_DF187C, v11);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_DEA6BC(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _QWORD v10[2];
  char v11;

  if (a3 == 255)
  {
    if (a4)
    {
      v4 = a4;
    }
    else
    {
      v7 = sub_DEE238();
      v4 = swift_allocError(&type metadata for LyricsLoader.LyricsError, v7, 0, 0);
      a4 = 0;
      *v8 = 3;
    }
    v10[0] = v4;
    swift_errorRetain(a4);
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1507928);
    return CheckedContinuation.resume(throwing:)(v10, v9);
  }
  else
  {
    v10[0] = a1;
    v10[1] = a2;
    v11 = a3 & 1;
    sub_AF8D8(a1, a2, a3 & 1);
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1507928);
    return CheckedContinuation.resume(returning:)(v10, v5);
  }
}

id static LyricsLoader.requiredProperties()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  Class isa;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  Class v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  Class v30;
  id v31;
  unint64_t v32;
  id v33;
  Class v34;
  Class v35;
  id v36;
  unint64_t v37;
  id v38;
  Class v39;
  Class v40;
  id v41;
  _BYTE v43[56];
  _BYTE v44[112];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_15076A0);
  v1 = swift_allocObject(v0, 96, 7);
  *(_OWORD *)(v1 + 16) = xmmword_1060470;
  *(_QWORD *)(v1 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongTitle);
  *(_QWORD *)(v1 + 40) = v2;
  *(_QWORD *)(v1 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongArtwork);
  *(_QWORD *)(v1 + 56) = v3;
  *(_QWORD *)(v1 + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongHasVideo);
  *(_QWORD *)(v1 + 72) = v4;
  *(_QWORD *)(v1 + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertySongArtistUploadedContent);
  *(_QWORD *)(v1 + 88) = v5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_15076A8);
  inited = swift_initStackObject(v6, v44);
  *(_OWORD *)(inited + 16) = xmmword_1060460;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipSongArtist);
  *(_QWORD *)(inited + 40) = v8;
  v9 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v9 + 16) = xmmword_105B360;
  v10 = MPModelPropertyArtistName;
  *(_QWORD *)(v9 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyArtistName);
  *(_QWORD *)(v9 + 40) = v11;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v9);
  v13 = (void *)objc_opt_self(MPPropertySet);
  v14 = objc_msgSend(v13, "propertySetWithProperties:", isa);

  *(_QWORD *)(inited + 48) = v14;
  *(_QWORD *)(inited + 56) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipSongLyrics);
  *(_QWORD *)(inited + 64) = v15;
  v16 = swift_allocObject(v0, 96, 7);
  *(_OWORD *)(v16 + 16) = xmmword_1060470;
  *(_QWORD *)(v16 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyLyricsText);
  *(_QWORD *)(v16 + 40) = v17;
  *(_QWORD *)(v16 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyLyricsHasLibraryLyrics);
  *(_QWORD *)(v16 + 56) = v18;
  *(_QWORD *)(v16 + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyLyricsHasStoreLyrics);
  *(_QWORD *)(v16 + 72) = v19;
  *(_QWORD *)(v16 + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyLyricsHasTimeSyncedLyrics);
  *(_QWORD *)(v16 + 88) = v20;
  v21 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v16);
  v22 = objc_msgSend(v13, "propertySetWithProperties:", v21);

  *(_QWORD *)(inited + 72) = v22;
  *(_QWORD *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipSongAlbum);
  *(_QWORD *)(inited + 88) = v23;
  v24 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v24 + 16) = xmmword_105B360;
  *(_QWORD *)(v24 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyAlbumTitle);
  *(_QWORD *)(v24 + 40) = v25;
  v26 = swift_initStackObject(v6, v43);
  *(_OWORD *)(v26 + 16) = xmmword_105B360;
  *(_QWORD *)(v26 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelRelationshipAlbumArtist);
  *(_QWORD *)(v26 + 40) = v27;
  v28 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v28 + 16) = xmmword_105B360;
  *(_QWORD *)(v28 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  *(_QWORD *)(v28 + 40) = v29;
  v30 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v28);
  v31 = objc_msgSend(v13, "propertySetWithProperties:", v30);

  *(_QWORD *)(v26 + 48) = v31;
  v32 = sub_DB9B88(v26);
  v33 = objc_allocWithZone((Class)MPPropertySet);
  v34 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v24);
  sub_4E684(0, &qword_15076B0, MPPropertySet_ptr);
  v35 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v32);
  v36 = objc_msgSend(v33, "initWithProperties:relationships:", v34, v35);

  *(_QWORD *)(inited + 96) = v36;
  v37 = sub_DB9B88(inited);
  v38 = objc_allocWithZone((Class)MPPropertySet);
  v39 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v1);
  v40 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v37);
  v41 = objc_msgSend(v38, "initWithProperties:relationships:", v39, v40);

  return v41;
}

void LyricsLoader.loadLyrics(for:completion:)(void *a1, void (*a2)(uint64_t, unint64_t, uint64_t, uint64_t), uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  id v15;
  double v16;
  void *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  NSString v23;
  unsigned int v24;
  Swift::String v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  id v32;
  char *v33;
  id v34;
  char *v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  void **v39;
  char *v40;
  char *v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char **v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  _QWORD *v52;
  uint64_t v53;
  void *v54;
  NSObject *v55;
  __n128 v56;
  char *v57;
  uint64_t v58;
  id v59;
  id v60;
  unsigned int v61;
  uint64_t v62;
  id v63;
  char *v64;
  id v65;
  id v66;
  char *v67;
  void **v68;
  NSObject *v69;
  int v70;
  uint64_t v71;
  char *v72;
  char *v73;
  void **v74;
  uint64_t v75;
  char *v76;
  char *v77;
  id v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  char *v90;
  id v91;
  char *v92;
  NSObject *v93;
  os_log_type_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  unsigned int v98;
  id v99;
  void *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  char *v106;
  id v107;
  id v108;
  char *v109;
  char *v110;
  char *v111;
  unint64_t v112;
  uint64_t v113;
  _BYTE *v114;
  char *v115;
  char *v116;
  char *v117;
  id v118;
  void *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  char *v125;
  id v126;
  id v127;
  char *v128;
  char *v129;
  char *v130;
  void **v131;
  unint64_t v132;
  uint64_t v133;
  _BYTE *v134;
  id v135;
  id v136;
  os_log_type_t v137;
  char *v138;
  char *v139;
  char *v140;
  id v141;
  id v142;
  char *v143;
  char *v144;
  char *v145;
  uint64_t v146;
  unint64_t v147;
  uint64_t v148;
  _BYTE *v149;
  id v150;
  Class isa;
  id v152;
  uint64_t v153;
  uint64_t v154;
  void *v155;
  uint64_t v156;
  uint64_t v157;
  void **v158;
  uint64_t v159;
  void (*v160)(uint64_t, unint64_t, uint64_t, uint64_t);
  char *v161;
  uint64_t v162;
  char *v163;
  char v164;
  void **v165;
  uint64_t v166;
  void *v167;
  void *v168;
  void (*v169)(void *, uint64_t);
  char **v170;

  v4 = v3;
  v8 = type metadata accessor for String.Encoding(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin();
  v12 = (char *)&v156 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_msgSend(a1, "lyrics", v10);
  if (v13)
  {
    v14 = v13;
    v160 = a2;
    v15 = objc_msgSend(v13, "text");
    v159 = a3;
    if (v15)
    {
      v17 = v15;
      v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
      v20 = v19;

      v21 = HIBYTE(v20) & 0xF;
      if ((v20 & 0x2000000000000000) == 0)
        v21 = v18 & 0xFFFFFFFFFFFFLL;
      if (v21)
      {
        v22 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
        v23 = String._bridgeToObjectiveC()();
        v24 = objc_msgSend(v22, "BOOLForKey:", v23);

        if (v24
          && *DeviceCapabilities.isInternalInstall.unsafeMutableAddressor() == 1
          && (v25 = String.trim()(),
              v26 = sub_DE9F70(544502844, 0xE400000000000000, v25._countAndFlagsBits, (uint64_t)v25._object),
              swift_bridgeObjectRelease(),
              (v26 & 1) != 0)
          && (static String.Encoding.utf8.getter(v27),
              v28 = String.data(using:allowLossyConversion:)(v12, 0, v18, v20),
              v30 = v29,
              (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8),
              v30 >> 60 != 15))
        {
          swift_bridgeObjectRelease();
          v150 = objc_allocWithZone((Class)MSVLyricsTTMLParser);
          sub_50CB4(v28, v30);
          isa = Data._bridgeToObjectiveC()().super.isa;
          v152 = objc_msgSend(v150, "initWithTTMLData:", isa);
          sub_50C4C(v28, v30);

          v153 = swift_allocObject(&unk_13C53E8, 32, 7);
          v154 = v159;
          *(_QWORD *)(v153 + 16) = v160;
          *(_QWORD *)(v153 + 24) = v154;
          v169 = sub_DF0FC0;
          v170 = (char **)v153;
          v165 = _NSConcreteStackBlock;
          v166 = 1107296256;
          v167 = sub_2199A0;
          v168 = &block_descriptor_36_7;
          v155 = _Block_copy(&v165);
          swift_retain();
          objc_msgSend(v152, "parseWithCompletion:", v155, swift_release().n128_f64[0]);

          _Block_release(v155);
          sub_50C4C(v28, v30);
        }
        else
        {
          v160(v18, v20, 0, 0);

          swift_bridgeObjectRelease();
        }
        return;
      }
      *(_QWORD *)&v16 = swift_bridgeObjectRelease().n128_u64[0];
    }
    v47 = &selRef_isAirPlayingToDevice;
    if ((objc_msgSend(v14, "hasStoreLyrics", v16) & 1) != 0)
    {
      v48 = sub_DEBB5C();
      v50 = v49;
      v163 = 0;
      v51 = *(void **)&v4[OBJC_IVAR___MusicLyricsLoader_accessQueue];
      v52 = (_QWORD *)swift_allocObject(&unk_13C5370, 48, 7);
      v52[2] = &v163;
      v52[3] = v4;
      v52[4] = v48;
      v52[5] = v50;
      v53 = swift_allocObject(&unk_13C5398, 32, 7);
      *(_QWORD *)(v53 + 16) = sub_DF1A20;
      *(_QWORD *)(v53 + 24) = v52;
      v169 = (void (*)(void *, uint64_t))sub_AF944;
      v170 = (char **)v53;
      v165 = _NSConcreteStackBlock;
      v166 = 1107296256;
      v167 = sub_3A1A94;
      v168 = &block_descriptor_30_9;
      v54 = _Block_copy(&v165);
      v47 = v170;
      v4 = v4;
      v55 = v51;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_release();
      dispatch_sync(v55, v54);

      _Block_release(v54);
      LOBYTE(v54) = swift_isEscapingClosureAtFileLocation(v53, "", 122, 302, 31, 1, v56);
      swift_release();
      if ((v54 & 1) == 0)
      {
        v57 = v163;
        swift_release();
        swift_bridgeObjectRelease();

        v58 = (uint64_t)v160;
        if (!v57)
        {
          static ApplicationCapabilities.shared.getter((uint64_t)&v163);
          sub_A9008(&v163);
          if ((v164 & 1) != 0)
          {
            v135 = objc_msgSend(objc_allocWithZone((Class)MPStoreLyricsRequest), "init");
            objc_msgSend(v135, "setSong:", a1);
            v136 = a1;
            sub_DEEB64(v135, v136, v58, v159, v4);

            return;
          }
        }
        v59 = objc_msgSend((id)objc_opt_self(MPCloudServiceStatusController), "sharedController");
        v60 = objc_msgSend(v59, "musicSubscriptionStatus");

        static ApplicationCapabilities.shared.getter((uint64_t)&v165);
        sub_A9008(&v165);
        v61 = v166;
        if (qword_1506120 != -1)
          swift_once(&qword_1506120, sub_DDD864);
        v62 = type metadata accessor for Logger(0);
        __swift_project_value_buffer(v62, (uint64_t)static Logger.lyrics);
        v63 = a1;
        v64 = v4;
        v65 = v60;
        v66 = v63;
        v67 = v64;
        v68 = (void **)v65;
        v69 = Logger.logObject.getter(v68);
        v70 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v69, (os_log_type_t)v70))
        {
          HIDWORD(v156) = v70;
          v71 = swift_slowAlloc(48, -1);
          v157 = swift_slowAlloc(128, -1);
          v161 = v67;
          v162 = v157;
          *(_DWORD *)v71 = 136447234;
          v72 = (char *)String.init<A>(describing:)(&v161, &type metadata for UnsafeMutableRawPointer);
          *(_QWORD *)(v71 + 4) = sub_DCF730(v72, v73, &v162);
          swift_bridgeObjectRelease();

          *(_WORD *)(v71 + 12) = 2082;
          v161 = (char *)v60;
          v158 = v68;
          v74 = v68;
          v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_1507680);
          v76 = (char *)String.init<A>(describing:)(&v161, v75);
          *(_QWORD *)(v71 + 14) = sub_DCF730(v76, v77, &v162);
          swift_bridgeObjectRelease();

          *(_WORD *)(v71 + 22) = 1026;
          *(_DWORD *)(v71 + 24) = HIWORD(v61) & 1;
          *(_WORD *)(v71 + 28) = 2082;
          v78 = objc_msgSend(v66, "title");
          if (v78)
          {
            v79 = v78;
            v80 = static String._unconditionallyBridgeFromObjectiveC(_:)(v78);
            v82 = v81;

          }
          else
          {
            v80 = 0;
            v82 = 0;
          }
          v137 = BYTE4(v156);
          v138 = (char *)Optional<A>.description.getter(v80, v82);
          v140 = v139;
          swift_bridgeObjectRelease();
          *(_QWORD *)(v71 + 30) = sub_DCF730(v138, v140, &v162);
          swift_bridgeObjectRelease();

          *(_WORD *)(v71 + 38) = 2082;
          v141 = objc_msgSend(v66, "identifiers");
          v142 = objc_msgSend(v141, "description");
          v143 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v142);
          v145 = v144;

          *(_QWORD *)(v71 + 40) = sub_DCF730(v143, v145, &v162);
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_0, v69, v137, "Loader<%{public}s> loadLyrics(for:completion:) didn't load store lyrics [not supported by subscription] subscriptionStatus=%{public}s subscriptionStatus.capabilities.contains(.catalogLyricsViewing)=%{BOOL,public}d song.title=%{public}s song.identifiers=%{public}s", (uint8_t *)v71, 0x30u);
          v146 = v157;
          swift_arrayDestroy(v157, 4, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v146, -1, -1);
          swift_slowDealloc(v71, -1, -1);

          v68 = v158;
        }
        else
        {

        }
        v147 = sub_DEE238();
        v148 = swift_allocError(&type metadata for LyricsLoader.LyricsError, v147, 0, 0);
        *v149 = 2;
        v160(0, 0, 255, v148);
        swift_errorRelease(v148);

        goto LABEL_46;
      }
      __break(1u);
    }
    else if (qword_1506120 == -1)
    {
LABEL_28:
      v83 = type metadata accessor for Logger(0);
      __swift_project_value_buffer(v83, (uint64_t)static Logger.lyrics);
      v84 = v14;
      v85 = a1;
      v86 = v84;
      v87 = v85;
      v88 = v86;
      v89 = v87;
      v90 = v4;
      v14 = v88;
      v91 = v89;
      v92 = v90;
      v93 = Logger.logObject.getter(v92);
      v94 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v93, v94))
      {
        v95 = swift_slowAlloc(48, -1);
        v158 = (void **)swift_slowAlloc(128, -1);
        v165 = v158;
        *(_DWORD *)v95 = 136447234;
        v163 = v92;
        v96 = (char *)String.init<A>(describing:)(&v163, &type metadata for UnsafeMutableRawPointer);
        *(_QWORD *)(v95 + 4) = sub_DCF730(v96, v97, (uint64_t *)&v165);
        swift_bridgeObjectRelease();

        *(_WORD *)(v95 + 12) = 1026;
        v98 = objc_msgSend(v14, v47[194]);

        *(_DWORD *)(v95 + 14) = v98;
        *(_WORD *)(v95 + 18) = 2082;
        v99 = objc_msgSend(v14, "text");
        if (v99)
        {
          v100 = v99;
          v101 = static String._unconditionallyBridgeFromObjectiveC(_:)(v99);
          v103 = v102;

        }
        else
        {
          v101 = 0;
          v103 = 0;
        }
        v115 = (char *)Optional<A>.description.getter(v101, v103);
        v117 = v116;
        swift_bridgeObjectRelease();
        *(_QWORD *)(v95 + 20) = sub_DCF730(v115, v117, (uint64_t *)&v165);
        swift_bridgeObjectRelease();

        *(_WORD *)(v95 + 28) = 2082;
        v118 = objc_msgSend(v91, "title");
        if (v118)
        {
          v119 = v118;
          v120 = static String._unconditionallyBridgeFromObjectiveC(_:)(v118);
          v122 = v121;

        }
        else
        {
          v120 = 0;
          v122 = 0;
        }
        v123 = (char *)Optional<A>.description.getter(v120, v122);
        v125 = v124;
        swift_bridgeObjectRelease();
        *(_QWORD *)(v95 + 30) = sub_DCF730(v123, v125, (uint64_t *)&v165);
        swift_bridgeObjectRelease();

        *(_WORD *)(v95 + 38) = 2082;
        v126 = objc_msgSend(v91, "identifiers");
        v127 = objc_msgSend(v126, "description");
        v128 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v127);
        v130 = v129;

        *(_QWORD *)(v95 + 40) = sub_DCF730(v128, v130, (uint64_t *)&v165);
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_0, v93, v94, "Loader<%{public}s> loadLyrics(for:completion:) didn't load lyrics [no lyrics found] lyrics.hasStoreLyrics=%{BOOL,public}d lyrics.text=%{public}s song.title=%{public}s song.identifiers=%{public}s", (uint8_t *)v95, 0x30u);
        v131 = v158;
        swift_arrayDestroy(v158, 4, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v131, -1, -1);
        swift_slowDealloc(v95, -1, -1);
      }
      else
      {

      }
      v132 = sub_DEE238();
      v133 = swift_allocError(&type metadata for LyricsLoader.LyricsError, v132, 0, 0);
      *v134 = 1;
      v160(0, 0, 255, v133);
      swift_errorRelease(v133);
LABEL_46:

      return;
    }
    swift_once(&qword_1506120, sub_DDD864);
    goto LABEL_28;
  }
  if (qword_1506120 != -1)
    swift_once(&qword_1506120, sub_DDD864);
  v31 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v31, (uint64_t)static Logger.lyrics);
  v32 = a1;
  v33 = v4;
  v34 = v32;
  v35 = v33;
  v36 = Logger.logObject.getter(v35);
  v37 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v36, v37))
  {
    v159 = a3;
    v160 = a2;
    v38 = swift_slowAlloc(32, -1);
    v39 = (void **)swift_slowAlloc(96, -1);
    v165 = v39;
    *(_DWORD *)v38 = 136446722;
    v163 = v35;
    v40 = (char *)String.init<A>(describing:)(&v163, &type metadata for UnsafeMutableRawPointer);
    *(_QWORD *)(v38 + 4) = sub_DCF730(v40, v41, (uint64_t *)&v165);
    swift_bridgeObjectRelease();

    *(_WORD *)(v38 + 12) = 2082;
    v42 = objc_msgSend(v34, "title");
    if (v42)
    {
      v43 = v42;
      v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
      v46 = v45;

    }
    else
    {
      v44 = 0;
      v46 = 0;
    }
    v104 = (char *)Optional<A>.description.getter(v44, v46);
    v106 = v105;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v38 + 14) = sub_DCF730(v104, v106, (uint64_t *)&v165);
    swift_bridgeObjectRelease();

    *(_WORD *)(v38 + 22) = 2082;
    v107 = objc_msgSend(v34, "identifiers");
    v108 = objc_msgSend(v107, "description");
    v109 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v108);
    v111 = v110;

    *(_QWORD *)(v38 + 24) = sub_DCF730(v109, v111, (uint64_t *)&v165);
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_0, v36, v37, "Loader<%{public}s> loadLyrics(for:completion:) returned without loading lyrics [MPModelLyrics was nil] song.title=%{public}s song.identifiers=%{public}s", (uint8_t *)v38, 0x20u);
    swift_arrayDestroy(v39, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v39, -1, -1);
    swift_slowDealloc(v38, -1, -1);

    a2 = v160;
  }
  else
  {

  }
  v112 = sub_DEE238();
  v113 = swift_allocError(&type metadata for LyricsLoader.LyricsError, v112, 0, 0);
  *v114 = 1;
  a2(0, 0, 255, v113);
  swift_errorRelease(v113);
}

void sub_DEBAA4(void *a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v5;
  id v6;

  if (a1)
  {
    v5 = type metadata accessor for Lyrics();
    swift_allocObject(v5, 160, 7);
    v6 = a1;
    Lyrics.init(identifier:songInfo:)(0, 0, v6);
    a3();

    swift_release();
  }
  else
  {
    ((void (*)(_QWORD, _QWORD, uint64_t, uint64_t))a3)(0, 0, 255, a2);
  }
}

uint64_t sub_DEBB5C()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v1 = v0;
  v2 = objc_msgSend(v0, "identifiers");
  v3 = MPIdentifierSet.bestStoreIdentifier.getter();
  v5 = v4;

  if (!v5)
  {
    v6 = objc_msgSend(v1, "identifiers");
    v3 = MPIdentifierSet.bestLibraryIdentifier.getter();
    v8 = v7;

    if (!v8)
    {
      v9 = objc_msgSend(v1, "identifiers");
      NSObject.hashValue.getter();

      return dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    }
  }
  return v3;
}

void LyricsLoader.hasRequest(for:)()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  NSObject *v9;
  id v10;
  __n128 v11;
  _QWORD aBlock[6];
  char v13;

  v1 = v0;
  v2 = sub_DEBB5C();
  v4 = v3;
  v13 = 0;
  v5 = *(void **)&v0[OBJC_IVAR___MusicLyricsLoader_accessQueue];
  v6 = (_QWORD *)swift_allocObject(&unk_13C5438, 48, 7);
  v6[2] = &v13;
  v6[3] = v1;
  v6[4] = v2;
  v6[5] = v4;
  v7 = swift_allocObject(&unk_13C5460, 32, 7);
  *(_QWORD *)(v7 + 16) = sub_DF1A24;
  *(_QWORD *)(v7 + 24) = v6;
  aBlock[4] = sub_AF944;
  aBlock[5] = v7;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_3A1A94;
  aBlock[3] = &block_descriptor_47_5;
  v8 = _Block_copy(aBlock);
  v9 = v5;
  v10 = v1;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v9, v8);

  _Block_release(v8);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation(v7, "", 122, 294, 31, 1, v11);
  swift_release();
  if ((v1 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
  }
}

double LyricsLoader.cancelRequest(for:)()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  v0 = sub_DEBB5C();
  sub_DEBF50(v0, v1);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

void sub_DEBDF4(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  char v8;
  char v9;
  _BYTE v10[24];

  v7 = a2 + OBJC_IVAR___MusicLyricsLoader_lyricsOperations;
  swift_beginAccess(a2 + OBJC_IVAR___MusicLyricsLoader_lyricsOperations, v10, 0, 0);
  if (*(_QWORD *)(*(_QWORD *)v7 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_21BAD0(a3, a4);
    v9 = v8;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = 0;
  }
  *a1 = v9 & 1;
}

void sub_DEBE98(void **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  void *v11;
  id v12;
  void *v13;
  _BYTE v14[24];

  v7 = (uint64_t *)(a2 + OBJC_IVAR___MusicLyricsLoader_lyricsOperations);
  swift_beginAccess(a2 + OBJC_IVAR___MusicLyricsLoader_lyricsOperations, v14, 0, 0);
  v8 = *v7;
  if (*(_QWORD *)(v8 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v9 = sub_21BAD0(a3, a4);
    if ((v10 & 1) != 0)
    {
      v11 = *(void **)(*(_QWORD *)(v8 + 56) + 8 * v9);
      v12 = v11;
    }
    else
    {
      v11 = 0;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = 0;
  }
  v13 = *a1;
  *a1 = v11;

}

void sub_DEBF50(uint64_t a1, uint64_t a2)
{
  char *v2;
  void *v5;
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  NSObject *v9;
  char *v10;
  __n128 v11;
  char isEscapingClosureAtFileLocation;
  double v13;
  id v14;
  _QWORD aBlock[6];
  id v16;

  v16 = 0;
  v5 = *(void **)&v2[OBJC_IVAR___MusicLyricsLoader_accessQueue];
  v6 = (_QWORD *)swift_allocObject(&unk_13C5A38, 48, 7);
  v6[2] = &v16;
  v6[3] = v2;
  v6[4] = a1;
  v6[5] = a2;
  v7 = swift_allocObject(&unk_13C5A60, 32, 7);
  *(_QWORD *)(v7 + 16) = sub_DF18B0;
  *(_QWORD *)(v7 + 24) = v6;
  aBlock[4] = sub_AF944;
  aBlock[5] = v7;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_3A1A94;
  aBlock[3] = &block_descriptor_143_2;
  v8 = _Block_copy(aBlock);
  v9 = v5;
  v10 = v2;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v9, v8);

  _Block_release(v8);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v7, "", 122, 310, 31, 1, v11);
  *(_QWORD *)&v13 = swift_release().n128_u64[0];
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    objc_msgSend(v16, "cancel", v13);
    v14 = v16;
    swift_release();

  }
}

void sub_DEC0C0(void **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  _BYTE v15[24];
  _BYTE v16[24];

  v7 = (uint64_t *)(a2 + OBJC_IVAR___MusicLyricsLoader_lyricsOperations);
  swift_beginAccess(a2 + OBJC_IVAR___MusicLyricsLoader_lyricsOperations, v16, 0, 0);
  v8 = *v7;
  if (*(_QWORD *)(*v7 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v9 = sub_21BAD0(a3, a4);
    if ((v10 & 1) != 0)
    {
      v11 = *(void **)(*(_QWORD *)(v8 + 56) + 8 * v9);
      v12 = v11;
    }
    else
    {
      v11 = 0;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = 0;
  }
  v13 = *a1;
  *a1 = v11;

  swift_beginAccess(v7, v15, 33, 0);
  swift_bridgeObjectRetain();
  v14 = (void *)sub_DEE2E8(a3, a4);
  swift_endAccess(v15);
  swift_bridgeObjectRelease();

}

void sub_DEC1C4(void *a1, uint64_t a2, uint64_t a3, _QWORD *a4, void (*a5)(_QWORD, _QWORD, _QWORD, _QWORD), uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t Strong;
  void *v12;
  Swift::String v13;
  Swift::String v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  double (*v26)(void *, uint64_t);
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)();
  void *v37;
  NSObject *v38;
  id v39;
  __n128 v40;
  void *v41;
  id v42;
  id v43;
  void *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  __n128 v54;
  unint64_t v55;
  uint64_t v56;
  _BYTE *v57;
  id v58;
  uint64_t v59;
  _BYTE *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  __n128 v64;
  id v65;
  Class isa;
  id v67;
  _QWORD *v68;
  void (*v69)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v70;
  char *v71;
  void *v72;
  id v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(_QWORD, _QWORD, _QWORD, _QWORD);
  void *v82;
  char *v83;
  __int128 v84[2];
  uint64_t aBlock;
  unint64_t v86;
  void *v87;
  void *v88;
  double (*v89)(void *, uint64_t);
  _QWORD *v90;
  char v91[24];
  char v92[32];

  v80 = a6;
  v81 = a5;
  v82 = a1;
  v79 = type metadata accessor for String.Encoding(0);
  v78 = *(_QWORD *)(v79 - 8);
  __chkstk_darwin();
  v77 = (char *)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a3 + 16;
  swift_beginAccess(v10, v92, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v10);
  if (Strong)
  {
    v12 = (void *)Strong;
    aBlock = 0x3C726564616F4CLL;
    v86 = 0xE700000000000000;
    *(_QWORD *)&v84[0] = Strong;
    v13._countAndFlagsBits = String.init<A>(describing:)(v84, &type metadata for UnsafeMutableRawPointer);
    String.append(_:)(v13);
    swift_bridgeObjectRelease();
    v14._countAndFlagsBits = 62;
    v14._object = (void *)0xE100000000000000;
    String.append(_:)(v14);

    v15 = aBlock;
    v16 = (char *)v86;
  }
  else
  {
    v16 = (char *)0xEC0000003E303078;
    v15 = 0x303C726564616F4CLL;
  }
  v83 = (char *)v15;
  if (qword_1506120 != -1)
    swift_once(&qword_1506120, sub_DDD864);
  v17 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v17, (uint64_t)static Logger.lyrics);
  sub_55D1C((uint64_t)a4, (uint64_t)&aBlock);
  v18 = swift_bridgeObjectRetain_n(v16, 2);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc(22, -1);
    v75 = a4;
    v22 = v21;
    v23 = swift_slowAlloc(64, -1);
    v76 = a2;
    v24 = v23;
    *(_QWORD *)&v84[0] = v23;
    *(_DWORD *)v22 = 136446466;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v22 + 4) = sub_DCF730(v83, v16, (uint64_t *)v84);
    swift_bridgeObjectRelease_n(v16, 3);
    *(_WORD *)(v22 + 12) = 2082;
    v25 = v88;
    v26 = v89;
    __swift_project_boxed_opaque_existential_1(&aBlock, (uint64_t)v88);
    v27 = (char *)(*((uint64_t (**)(void *, double (*)(void *, uint64_t)))v26 + 2))(v25, v26);
    *(_QWORD *)(v22 + 14) = sub_DCF730(v27, v28, (uint64_t *)v84);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(&aBlock);
    _os_log_impl(&dword_0, v19, v20, "%{public}s loadLyrics(for:completion:) completed for %{public}s", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy(v24, 2, (char *)&type metadata for Any + 8);
    a2 = v76;
    swift_slowDealloc(v24, -1, -1);
    v29 = v22;
    a4 = v75;
    swift_slowDealloc(v29, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(v16, 2);
    __swift_destroy_boxed_opaque_existential_1(&aBlock);
  }

  swift_beginAccess(v10, v91, 0, 0);
  v30 = swift_unknownObjectWeakLoadStrong(v10);
  if (!v30)
  {
    v36 = 0;
    v34 = 0;
    v41 = v82;
    if (a2)
      goto LABEL_19;
    goto LABEL_14;
  }
  v31 = (void *)v30;
  v32 = *(void **)(v30 + OBJC_IVAR___MusicLyricsLoader_accessQueue);
  v33 = a4;
  sub_55D1C((uint64_t)a4, (uint64_t)v84);
  v34 = swift_allocObject(&unk_13C5998, 64, 7);
  *(_QWORD *)(v34 + 16) = v31;
  sub_8B15C(v84, v34 + 24);
  v35 = swift_allocObject(&unk_13C59C0, 32, 7);
  v36 = sub_DF185C;
  *(_QWORD *)(v35 + 16) = sub_DF185C;
  *(_QWORD *)(v35 + 24) = v34;
  v89 = (double (*)(void *, uint64_t))sub_AF944;
  v90 = (_QWORD *)v35;
  aBlock = (uint64_t)_NSConcreteStackBlock;
  v86 = 1107296256;
  v87 = sub_3A1A94;
  v88 = &block_descriptor_130_0;
  v37 = _Block_copy(&aBlock);
  v38 = v32;
  v39 = v31;
  swift_retain();
  swift_release();
  dispatch_sync(v38, v37);

  _Block_release(v37);
  LOBYTE(v39) = swift_isEscapingClosureAtFileLocation(v35, "", 122, 349, 39, 1, v40);
  swift_release();
  if ((v39 & 1) == 0)
  {
    a4 = v33;
    v41 = v82;
    if (a2)
      goto LABEL_19;
LABEL_14:
    if (v41)
    {
      v42 = v41;
      v43 = objc_msgSend(v42, "lyrics");
      if (!v43)
        goto LABEL_18;
      v44 = v43;
      v45 = objc_msgSend(v43, "TTML");

      if (!v45)
        goto LABEL_18;
      v46 = static String._unconditionallyBridgeFromObjectiveC(_:)(v45);
      v48 = v47;

      v49 = v77;
      static String.Encoding.utf8.getter(v50);
      v51 = String.data(using:allowLossyConversion:)(v49, 0, v46, v48);
      v53 = v52;
      v54 = swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t, __n128))(v78 + 8))(v49, v79, v54);
      if (v53 >> 60 != 15)
      {
        v65 = objc_allocWithZone((Class)MSVLyricsTTMLParser);
        sub_50CB4(v51, v53);
        isa = Data._bridgeToObjectiveC()().super.isa;
        v67 = objc_msgSend(v65, "initWithTTMLData:", isa);
        sub_50C4C(v51, v53);

        v68 = (_QWORD *)swift_allocObject(&unk_13C5948, 56, 7);
        v70 = v80;
        v69 = v81;
        v68[2] = v42;
        v68[3] = v69;
        v71 = v83;
        v68[4] = v70;
        v68[5] = v71;
        v68[6] = v16;
        v89 = sub_DF1820;
        v90 = v68;
        aBlock = (uint64_t)_NSConcreteStackBlock;
        v86 = 1107296256;
        v87 = sub_2199A0;
        v88 = &block_descriptor_120_3;
        v72 = _Block_copy(&aBlock);
        v73 = v42;
        swift_retain();
        objc_msgSend(v67, "parseWithCompletion:", v72, swift_release().n128_f64[0]);

        _Block_release(v72);
        sub_50C4C(v51, v53);
      }
      else
      {
LABEL_18:
        v55 = sub_DEE238();
        v56 = swift_allocError(&type metadata for LyricsLoader.LyricsError, v55, 0, 0);
        *v57 = 1;
        v58 = v42;
        sub_DEEDFC(v56, v58, v83, v16);
        swift_errorRelease(v56);
        swift_bridgeObjectRelease();

        v59 = swift_allocError(&type metadata for LyricsLoader.LyricsError, v55, 0, 0);
        *v60 = 1;
        v81(0, 0, 255, v59);

        swift_errorRelease(v59);
      }
      goto LABEL_20;
    }
LABEL_19:
    v61 = a4[3];
    v62 = a4[4];
    v63 = __swift_project_boxed_opaque_existential_1(a4, v61);
    sub_DEF504(a2, (uint64_t)v63, v83, v16, v61, v62);
    v64 = swift_bridgeObjectRelease();
    ((void (*)(_QWORD, _QWORD, uint64_t, uint64_t, __n128))v81)(0, 0, 255, a2, v64);
LABEL_20:
    sub_5C198((uint64_t)v36, v34);
    return;
  }
  __break(1u);
}

void sub_DEC8E0(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  _BYTE v9[24];

  v3 = a2[3];
  v4 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v3);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  v7 = v6;
  swift_beginAccess(a1 + OBJC_IVAR___MusicLyricsLoader_lyricsOperations, v9, 33, 0);
  v8 = (void *)sub_DEE2E8(v5, v7);
  swift_endAccess(v9);
  swift_bridgeObjectRelease();

}

double sub_DEC980(void *a1, uint64_t a2, void *a3, void (*a4)(void), uint64_t a5, char *a6, char *a7)
{
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v19;
  double result;
  uint64_t v21;
  id v22;

  if (!a1)
  {
    v19 = a3;
    sub_DEEDFC(a2, v19, a6, a7);

    ((void (*)(_QWORD, _QWORD, uint64_t, uint64_t))a4)(0, 0, 255, a2);
    return result;
  }
  v9 = a1;
  v10 = objc_msgSend(a3, "lyrics");
  v11 = v10;
  if (!v10)
    goto LABEL_7;
  v12 = objc_msgSend(v10, "identifiers");

  v13 = objc_msgSend(v12, "lyricsID");
  if (!v13)
  {
    v11 = 0;
LABEL_7:
    v15 = 0;
    goto LABEL_8;
  }
  v11 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v15 = v14;

LABEL_8:
  v21 = type metadata accessor for Lyrics();
  swift_allocObject(v21, 160, 7);
  v22 = v9;
  Lyrics.init(identifier:songInfo:)((uint64_t)v11, v15, v22);
  a4();

  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

double sub_DECAFC(uint64_t a1, _QWORD *a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  char isUniquelyReferenced_nonNull_native;
  double result;
  uint64_t v14;
  _BYTE v15[24];

  v5 = a2[3];
  v6 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v5);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
  v9 = v8;
  v10 = (_QWORD *)(a1 + OBJC_IVAR___MusicLyricsLoader_lyricsOperations);
  swift_beginAccess(v10, v15, 33, 0);
  v11 = a3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v10);
  v14 = *v10;
  *v10 = 0x8000000000000000;
  sub_DEE4F4((uint64_t)v11, v7, v9, isUniquelyReferenced_nonNull_native);
  *v10 = v14;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&result = swift_endAccess(v15).n128_u64[0];
  return result;
}

id LyricsLoader.init()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  objc_class *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  objc_super v23;
  _QWORD *v24;

  v22 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v1 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin();
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin();
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DispatchQoS(0);
  __chkstk_darwin();
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = OBJC_IVAR___MusicLyricsLoader_lyricsOperations;
  v10 = v0;
  *(_QWORD *)&v0[v9] = sub_DB9B7C((uint64_t)_swiftEmptyArrayStorage);
  v21 = OBJC_IVAR___MusicLyricsLoader_accessQueue;
  sub_4E684(0, (unint64_t *)&qword_15076C0, OS_dispatch_queue_ptr);
  static DispatchQoS.unspecified.getter(v11);
  v24 = _swiftEmptyArrayStorage;
  v12 = sub_4DD24((unint64_t *)&unk_1506520, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_15076D0);
  v14 = sub_DB9FC0();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v24, v13, v14, v4, v12);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v22);
  v15 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000001BLL, 0x800000000110BE70, v8, v6, v3, 0);
  *(_QWORD *)&v10[v21] = v15;
  v16 = OBJC_IVAR___MusicLyricsLoader_operationQueue;
  v17 = objc_msgSend(objc_allocWithZone((Class)NSOperationQueue), "init");
  objc_msgSend(v17, "setMaxConcurrentOperationCount:", 1);
  *(_QWORD *)&v10[v16] = v17;

  v18 = (objc_class *)type metadata accessor for LyricsLoader();
  v23.receiver = v10;
  v23.super_class = v18;
  return objc_msgSendSuper2(&v23, "init");
}

id LyricsLoader.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LyricsLoader();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t LyricsLoader.Song.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  v5 = type metadata accessor for LyricsLoader.Song(0);
  return swift_storeEnumTagMultiPayload(a2, v5, 0);
}

uint64_t LyricsLoader.Song.init(_:in:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;

  *a3 = a1;
  a3[1] = a2;
  v4 = type metadata accessor for LyricsLoader.Song(0);
  swift_storeEnumTagMultiPayload(a3, v4, 1);
  return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a3, 0, 1, v4);
}

void LyricsLoader.Song.modelObjectSong.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id *v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  void *v15;
  __n128 v16;
  __n128 v17;
  _QWORD aBlock[5];
  uint64_t v19;

  v1 = v0;
  v2 = type metadata accessor for Song(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for LyricsLoader.Song(0);
  __chkstk_darwin(v6);
  v8 = (id *)((char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_DF1038(v1, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload(v8, v6) == 1)
  {

  }
  else
  {
    (*(void (**)(char *, id *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_4E684(0, &qword_15076E8, MPIdentifierSet_ptr);
    v9 = objc_msgSend((id)objc_opt_self(MPModelSong), "kindWithVariants:", 1);
    __chkstk_darwin(v9);
    aBlock[-2] = v5;
    sub_DEDC34(0xD000000000000012, 0x800000000110CA70, v10, (uint64_t)sub_DF107C, (uint64_t)&aBlock[-4]);
    v12 = v11;
    __chkstk_darwin(v11);
    aBlock[-2] = v5;
    v13 = objc_allocWithZone((Class)MPModelSong);
    v14 = swift_allocObject(&unk_13C54B0, 32, 7);
    *(_QWORD *)(v14 + 16) = sub_DF1084;
    *(_QWORD *)(v14 + 24) = &aBlock[-4];
    aBlock[4] = sub_129E54;
    v19 = v14;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23E9F0;
    aBlock[3] = &block_descriptor_53_6;
    v15 = _Block_copy(aBlock);
    objc_msgSend(v13, "initWithIdentifiers:block:", v12, v15, swift_retain(v14).n128_f64[0]);

    _Block_release(v15);
    v16 = swift_release(v19);
    LOBYTE(v12) = swift_isEscapingClosureAtFileLocation(v14, "", 0, 0, 0, 1, v16);
    v17 = swift_release(v14);
    if ((v12 & 1) != 0)
      __break(1u);
    else
      (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v17);
  }
}

void sub_DED1F0(uint64_t isEscapingClosureAtFileLocation, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  __n128 v26;
  char v27;
  uint64_t v28;
  void **v29;
  uint64_t v30;
  double (*v31)(uint64_t, uint64_t);
  void *v32;
  uint64_t (*v33)();
  uint64_t v34;
  _QWORD aBlock[5];
  uint64_t v36;

  v4 = type metadata accessor for Song(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = Song.catalogID.getter(v8);
  if (v10)
  {
    v11 = v9;
    v12 = v10;
    v13 = swift_allocObject(&unk_13C57E0, 32, 7);
    *(_QWORD *)(v13 + 16) = v11;
    *(_QWORD *)(v13 + 24) = v12;
    v4 = swift_allocObject(&unk_13C5808, 32, 7);
    *(_QWORD *)(v4 + 16) = sub_DF1778;
    *(_QWORD *)(v4 + 24) = v13;
    aBlock[4] = sub_12BACC;
    v36 = v4;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_9A57DC;
    aBlock[3] = &block_descriptor_95_3;
    v7 = (char *)_Block_copy(aBlock);
    v6 = v36;
    swift_retain(v4);
    objc_msgSend((id)isEscapingClosureAtFileLocation, "setUniversalStoreIdentifiersWithBlock:", v7, swift_release(v6).n128_f64[0]);
    _Block_release(v7);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v4, "", 122, 401, 74, 1, v14);
    swift_release(v13);
    swift_release(v4);
    if ((isEscapingClosureAtFileLocation & 1) == 0)
      return;
    __break(1u);
  }
  static ApplicationCapabilities.shared.getter((uint64_t)aBlock);
  sub_A9008(aBlock);
  if ((aBlock[0] & 0x10000) != 0)
    goto LABEL_8;
  sub_4E684(0, &qword_1507850, MPMediaLibrary_ptr);
  v15 = static MPMediaLibrary.device.getter();
  v16 = objc_msgSend(v15, "uniqueIdentifier");

  if (v16)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
    v17 = *(unsigned __int8 *)(v5 + 80);
    v18 = (v17 + 16) & ~v17;
    v6 = swift_allocObject(&unk_13C56F0, v18 + v6, v17 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v6 + v18, v7, v4);
    v4 = swift_allocObject(&unk_13C5718, 32, 7);
    *(_QWORD *)(v4 + 16) = sub_DF16CC;
    *(_QWORD *)(v4 + 24) = v6;
    v33 = sub_12BACC;
    v34 = v4;
    v29 = _NSConcreteStackBlock;
    v30 = 1107296256;
    v31 = sub_9A57DC;
    v32 = &block_descriptor_76_2;
    v7 = (char *)_Block_copy(&v29);
    a2 = v34;
    swift_retain(v4);
    objc_msgSend((id)isEscapingClosureAtFileLocation, "setLibraryIdentifiersWithDatabaseID:block:", v16, v7, swift_release(a2).n128_f64[0]);

    _Block_release(v7);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v4, "", 122, 409, 87, 1, v19);
    swift_release(v6);
    swift_release(v4);
    if ((isEscapingClosureAtFileLocation & 1) != 0)
    {
      __break(1u);
LABEL_8:
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
      v20 = *(unsigned __int8 *)(v5 + 80);
      v21 = (v20 + 16) & ~v20;
      v22 = swift_allocObject(&unk_13C5768, v21 + v6, v20 | 7);
      (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v22 + v21, v7, v4);
      v23 = swift_allocObject(&unk_13C5790, 32, 7);
      *(_QWORD *)(v23 + 16) = sub_DF16EC;
      *(_QWORD *)(v23 + 24) = v22;
      v33 = sub_12BACC;
      v34 = v23;
      v29 = _NSConcreteStackBlock;
      v30 = 1107296256;
      v31 = sub_9A57DC;
      v32 = &block_descriptor_85_6;
      v24 = _Block_copy(&v29);
      v25 = v34;
      swift_retain(v23);
      objc_msgSend((id)isEscapingClosureAtFileLocation, "setUniversalStoreIdentifiersWithBlock:", v24, swift_release(v25).n128_f64[0]);
      _Block_release(v24);
      v27 = swift_isEscapingClosureAtFileLocation(v23, "", 122, 405, 74, 1, v26);
      swift_release(v22);
      swift_release(v23);
      if ((v27 & 1) != 0)
        __break(1u);
    }
  }
}

id sub_DED618(id result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  unsigned __int8 *v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 *v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 *v22;
  unsigned int v23;
  uint64_t v24;
  char v25;
  _QWORD v26[3];

  v3 = a2;
  v4 = result;
  v5 = HIBYTE(a3) & 0xF;
  v6 = a2 & 0xFFFFFFFFFFFFLL;
  if ((a3 & 0x2000000000000000) != 0)
    v7 = HIBYTE(a3) & 0xF;
  else
    v7 = v6;
  if (!v7)
  {
    v21 = 0;
    return objc_msgSend(v4, "setAdamID:", v21);
  }
  if ((a3 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    v10 = (uint64_t)sub_DEE620(v3, a3, 10);
    LOBYTE(v3) = v25;
    swift_bridgeObjectRelease(a3);
LABEL_44:
    if ((v3 & 1) != 0)
      v21 = 0;
    else
      v21 = v10;
    return objc_msgSend(v4, "setAdamID:", v21);
  }
  if ((a3 & 0x2000000000000000) == 0)
  {
    if ((v3 & 0x1000000000000000) != 0)
      v9 = (unsigned __int8 *)((a3 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v9 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v3, a3);
    v10 = (uint64_t)sub_3384BC(v9, v6, 10);
    LOBYTE(v3) = v11 & 1;
    goto LABEL_44;
  }
  v26[0] = v3;
  v26[1] = a3 & 0xFFFFFFFFFFFFFFLL;
  if (v3 == 43)
  {
    if (!v5)
      goto LABEL_58;
    if (v5 == 1 || (BYTE1(v3) - 48) > 9u)
      goto LABEL_31;
    v10 = (BYTE1(v3) - 48);
    if (v5 != 2)
    {
      if ((BYTE2(v3) - 48) > 9u)
        goto LABEL_31;
      v10 = 10 * (BYTE1(v3) - 48) + (BYTE2(v3) - 48);
      v12 = v5 - 3;
      if (v12)
      {
        v13 = (unsigned __int8 *)v26 + 3;
        while (1)
        {
          v14 = *v13 - 48;
          if (v14 > 9)
            goto LABEL_31;
          v15 = 10 * v10;
          if ((unsigned __int128)(v10 * (__int128)10) >> 64 != (10 * v10) >> 63)
            goto LABEL_31;
          v10 = v15 + v14;
          if (__OFADD__(v15, v14))
            goto LABEL_31;
          LOBYTE(v3) = 0;
          ++v13;
          if (!--v12)
            goto LABEL_44;
        }
      }
    }
LABEL_43:
    LOBYTE(v3) = 0;
    goto LABEL_44;
  }
  if (v3 != 45)
  {
    if (!v5 || (v3 - 48) > 9u)
      goto LABEL_31;
    v10 = (v3 - 48);
    if (v5 != 1)
    {
      if ((BYTE1(v3) - 48) > 9u)
        goto LABEL_31;
      v10 = 10 * (v3 - 48) + (BYTE1(v3) - 48);
      v16 = v5 - 2;
      if (v16)
      {
        v17 = (unsigned __int8 *)v26 + 2;
        while (1)
        {
          v18 = *v17 - 48;
          if (v18 > 9)
            goto LABEL_31;
          v19 = 10 * v10;
          if ((unsigned __int128)(v10 * (__int128)10) >> 64 != (10 * v10) >> 63)
            goto LABEL_31;
          v10 = v19 + v18;
          if (__OFADD__(v19, v18))
            goto LABEL_31;
          LOBYTE(v3) = 0;
          ++v17;
          if (!--v16)
            goto LABEL_44;
        }
      }
    }
    goto LABEL_43;
  }
  if (v5)
  {
    if (v5 != 1 && (BYTE1(v3) - 48) <= 9u)
    {
      if (v5 == 2)
      {
        LOBYTE(v3) = 0;
        v10 = -(uint64_t)(BYTE1(v3) - 48);
        goto LABEL_44;
      }
      if ((BYTE2(v3) - 48) <= 9u)
      {
        v10 = -10 * (BYTE1(v3) - 48) - (BYTE2(v3) - 48);
        v20 = v5 - 3;
        if (!v20)
          goto LABEL_43;
        v22 = (unsigned __int8 *)v26 + 3;
        while (1)
        {
          v23 = *v22 - 48;
          if (v23 > 9)
            break;
          v24 = 10 * v10;
          if ((unsigned __int128)(v10 * (__int128)10) >> 64 != (10 * v10) >> 63)
            break;
          v10 = v24 - v23;
          if (__OFSUB__(v24, v23))
            break;
          LOBYTE(v3) = 0;
          ++v22;
          if (!--v20)
            goto LABEL_44;
        }
      }
    }
LABEL_31:
    v10 = 0;
    LOBYTE(v3) = 1;
    goto LABEL_44;
  }
  __break(1u);
LABEL_58:
  __break(1u);
  return result;
}

void sub_DED8FC(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;

  Song.id.getter(a1);
  v3 = v2;
  v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v3);
  objc_msgSend(a1, "setUniversalCloudLibraryID:", v4);

}

uint64_t sub_DED954(void *a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  unsigned __int8 *v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 *v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  unsigned __int8 *v23;
  unsigned int v24;
  uint64_t v25;
  char v26;
  _QWORD v27[3];

  result = Song.id.getter(a1);
  v4 = v3;
  v5 = HIBYTE(v3) & 0xF;
  v6 = result & 0xFFFFFFFFFFFFLL;
  if ((v4 & 0x2000000000000000) != 0)
    v7 = v5;
  else
    v7 = result & 0xFFFFFFFFFFFFLL;
  if (!v7)
  {
    *(_QWORD *)&v21 = swift_bridgeObjectRelease(v4).n128_u64[0];
    v22 = 0;
    return (uint64_t)objc_msgSend(a1, "setPersistentID:", v22, v21);
  }
  if ((v4 & 0x1000000000000000) != 0)
  {
    v9 = (uint64_t)sub_DEE620(result, v4, 10);
    v11 = v26;
LABEL_44:
    *(_QWORD *)&v21 = swift_bridgeObjectRelease(v4).n128_u64[0];
    if ((v11 & 1) != 0)
      v22 = 0;
    else
      v22 = v9;
    return (uint64_t)objc_msgSend(a1, "setPersistentID:", v22, v21);
  }
  if ((v4 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0)
      v8 = (unsigned __int8 *)((v4 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v8 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(result, v4);
    v9 = (uint64_t)sub_3384BC(v8, v6, 10);
    v11 = v10 & 1;
    goto LABEL_44;
  }
  v27[0] = result;
  v27[1] = v4 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (!v5)
      goto LABEL_58;
    if (v5 == 1 || (BYTE1(result) - 48) > 9u)
      goto LABEL_31;
    v9 = (BYTE1(result) - 48);
    if (v5 != 2)
    {
      if ((BYTE2(result) - 48) > 9u)
        goto LABEL_31;
      v9 = 10 * (BYTE1(result) - 48) + (BYTE2(result) - 48);
      v12 = v5 - 3;
      if (v12)
      {
        v13 = (unsigned __int8 *)v27 + 3;
        while (1)
        {
          v14 = *v13 - 48;
          if (v14 > 9)
            goto LABEL_31;
          v15 = 10 * v9;
          if ((unsigned __int128)(v9 * (__int128)10) >> 64 != (10 * v9) >> 63)
            goto LABEL_31;
          v9 = v15 + v14;
          if (__OFADD__(v15, v14))
            goto LABEL_31;
          v11 = 0;
          ++v13;
          if (!--v12)
            goto LABEL_44;
        }
      }
    }
LABEL_43:
    v11 = 0;
    goto LABEL_44;
  }
  if (result != 45)
  {
    if (!v5 || (result - 48) > 9u)
      goto LABEL_31;
    v9 = (result - 48);
    if (v5 != 1)
    {
      if ((BYTE1(result) - 48) > 9u)
        goto LABEL_31;
      v9 = 10 * (result - 48) + (BYTE1(result) - 48);
      v16 = v5 - 2;
      if (v16)
      {
        v17 = (unsigned __int8 *)v27 + 2;
        while (1)
        {
          v18 = *v17 - 48;
          if (v18 > 9)
            goto LABEL_31;
          v19 = 10 * v9;
          if ((unsigned __int128)(v9 * (__int128)10) >> 64 != (10 * v9) >> 63)
            goto LABEL_31;
          v9 = v19 + v18;
          if (__OFADD__(v19, v18))
            goto LABEL_31;
          v11 = 0;
          ++v17;
          if (!--v16)
            goto LABEL_44;
        }
      }
    }
    goto LABEL_43;
  }
  if (v5)
  {
    if (v5 != 1 && (BYTE1(result) - 48) <= 9u)
    {
      if (v5 == 2)
      {
        v11 = 0;
        v9 = -(uint64_t)(BYTE1(result) - 48);
        goto LABEL_44;
      }
      if ((BYTE2(result) - 48) <= 9u)
      {
        v9 = -10 * (BYTE1(result) - 48) - (BYTE2(result) - 48);
        v20 = v5 - 3;
        if (!v20)
          goto LABEL_43;
        v23 = (unsigned __int8 *)v27 + 3;
        while (1)
        {
          v24 = *v23 - 48;
          if (v24 > 9)
            break;
          v25 = 10 * v9;
          if ((unsigned __int128)(v9 * (__int128)10) >> 64 != (10 * v9) >> 63)
            break;
          v9 = v25 - v24;
          if (__OFSUB__(v25, v24))
            break;
          v11 = 0;
          ++v23;
          if (!--v20)
            goto LABEL_44;
        }
      }
    }
LABEL_31:
    v9 = 0;
    v11 = 1;
    goto LABEL_44;
  }
  __break(1u);
LABEL_58:
  __break(1u);
  return result;
}

void sub_DEDC34(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  id v9;
  NSString v10;
  uint64_t v11;
  void *v12;
  __n128 v13;
  _QWORD v14[5];
  uint64_t v15;

  v9 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v11 = swift_allocObject(&unk_13C56A0, 32, 7);
  *(_QWORD *)(v11 + 16) = a4;
  *(_QWORD *)(v11 + 24) = a5;
  v14[4] = sub_12BACC;
  v15 = v11;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  v14[2] = sub_DF1AB4;
  v14[3] = &block_descriptor_67_7;
  v12 = _Block_copy(v14);
  swift_retain(v11);
  objc_msgSend(v9, "initWithSource:modelKind:block:", v10, a3, v12);

  _Block_release(v12);
  v13 = swift_release(v15);
  LOBYTE(a3) = swift_isEscapingClosureAtFileLocation(v11, "", 0, 0, 0, 1, v13);
  swift_release(v11);
  if ((a3 & 1) != 0)
    __break(1u);
}

void sub_DEDD80(void *a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  NSString v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  __n128 v15;
  double v16;
  _QWORD v17[4];
  _QWORD aBlock[5];
  uint64_t v19;

  v4 = objc_opt_self(MPModelSong);
  v5 = (void *)swift_dynamicCastObjCClassUnconditional(a1, v4, 0, 0, 0);
  v6 = a1;
  _s8MusicKit4SongV0A11ApplicationE10storyTitleSSSgvg_0();
  v8 = v7;
  v9 = String._bridgeToObjectiveC()();
  objc_msgSend(v5, "setTitle:", v9, swift_bridgeObjectRelease(v8).n128_f64[0]);

  objc_msgSend(v5, "setArtistUploadedContent:", 0);
  v10 = objc_msgSend((id)objc_opt_self(MPIdentifierSet), "emptyIdentifierSet");
  v17[2] = a2;
  v11 = objc_allocWithZone((Class)MPModelLyrics);
  v12 = swift_allocObject(&unk_13C5650, 32, 7);
  *(_QWORD *)(v12 + 16) = sub_DF16A0;
  *(_QWORD *)(v12 + 24) = v17;
  aBlock[4] = sub_12BACC;
  v19 = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23E9F0;
  aBlock[3] = &block_descriptor_61_4;
  v13 = _Block_copy(aBlock);
  v14 = objc_msgSend(v11, "initWithIdentifiers:block:", v10, v13, swift_retain(v12).n128_f64[0]);

  _Block_release(v13);
  v15 = swift_release(v19);
  LOBYTE(v10) = swift_isEscapingClosureAtFileLocation(v12, "", 0, 0, 0, 1, v15);
  *(_QWORD *)&v16 = swift_release(v12).n128_u64[0];
  if ((v10 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    objc_msgSend(v5, "setLyrics:", v14, v16);

    objc_msgSend(v5, "setHasVideo:", 0);
  }
}

void sub_DEDF6C(void *a1)
{
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  id v6;

  v2 = objc_opt_self(MPModelLyrics);
  v3 = (void *)swift_dynamicCastObjCClassUnconditional(a1, v2, 0, 0, 0);
  v6 = a1;
  v4 = objc_msgSend(v3, "setHasStoreLyrics:", Song.hasLyrics.getter() & 1);
  v5 = objc_msgSend(v3, "setHasLibraryLyrics:", Song.hasCustomLyrics.getter(v4) & 1);
  objc_msgSend(v3, "setHasTimeSyncedLyrics:", Song.hasTimeSyncedLyrics.getter(v5) & 1);
  objc_msgSend(v3, "setText:", 0);

}

uint64_t sub_DEE038()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  Swift::String v10;
  Swift::String v11;
  id v12;
  id v13;
  uint64_t v14;
  void *v15;
  void *v16;
  Swift::String v17;

  v1 = v0;
  _StringGuts.grow(_:)(33);
  swift_bridgeObjectRelease(0xE000000000000000);
  v2 = objc_msgSend(v0, "title");
  if (v2)
  {
    v3 = v2;
    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
    v6 = v5;

  }
  else
  {
    v4 = 0;
    v6 = 0;
  }
  v7 = Optional<A>.description.getter(v4, v6);
  v9 = v8;
  swift_bridgeObjectRelease(v6);
  v10._countAndFlagsBits = v7;
  v10._object = v9;
  String.append(_:)(v10);
  swift_bridgeObjectRelease(v9);
  v11._object = (void *)0x800000000110CAD0;
  v11._countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v11);
  v12 = objc_msgSend(v1, "identifiers");
  v13 = objc_msgSend(v12, "description");
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v16 = v15;

  v17._countAndFlagsBits = v14;
  v17._object = v16;
  String.append(_:)(v17);

  swift_bridgeObjectRelease(v16);
  return 0x7469742E676E6F73;
}

uint64_t sub_DEE194()
{
  return sub_DEBB5C();
}

uint64_t sub_DEE1B4()
{
  return sub_DEE038();
}

_QWORD *sub_DEE1D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  size_t v6;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return _swiftEmptyArrayStorage;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1507130);
  v5 = (_QWORD *)swift_allocObject(v4, v2 + 32, 7);
  v6 = _swift_stdlib_malloc_size_0(v5);
  v5[2] = a1;
  v5[3] = 2 * v6 - 64;
  return v5;
}

unint64_t sub_DEE238()
{
  unint64_t result;

  result = qword_1507658;
  if (!qword_1507658)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for LyricsLoader.LyricsError, &type metadata for LyricsLoader.LyricsError);
    atomic_store(result, (unint64_t *)&qword_1507658);
  }
  return result;
}

void sub_DEE280()
{
  uint64_t v0;

  sub_DEBE98(*(void ***)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_DEE28C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t block_copy_helper_333(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double block_destroy_helper_333(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_DEE2B4(uint64_t a1)
{
  uint64_t v1;

  return sub_DEA160(a1, *(char **)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32));
}

void sub_DEE2C4()
{
  uint64_t v0;

  sub_DEBDF4(*(_BYTE **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_DEE2D0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

double sub_DEE2E0(uint64_t a1)
{
  uint64_t v1;

  return sub_DEA5D8(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_DEE2E8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_21BAD0(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  v9 = *v3;
  v12 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_DE151C();
    v9 = v12;
  }
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v6);
  sub_708C84(v6, v9);
  *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_DEE3B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD **v6;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  char v24;

  v6 = (_QWORD **)v5;
  v12 = (_QWORD *)*v5;
  v14 = sub_21BAD0(a3, a4);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a5 & 1) != 0)
    {
LABEL_7:
      v20 = *v6;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = v20[7] + 16 * v14;
        result = sub_50C60(*(_QWORD *)v21, *(_QWORD *)(v21 + 8));
        *(_QWORD *)v21 = a1;
        *(_QWORD *)(v21 + 8) = a2;
        return result;
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a5 & 1) == 0)
    {
      sub_DE11A4();
      goto LABEL_7;
    }
    sub_DE0074(v17, a5 & 1);
    v23 = sub_21BAD0(a3, a4);
    if ((v18 & 1) == (v24 & 1))
    {
      v14 = v23;
      v20 = *v6;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_DE110C(v14, a3, a4, a1, a2, v20);
      return swift_bridgeObjectRetain();
    }
  }
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

void sub_DEE4F4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_21BAD0(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];

        *(_QWORD *)(v19 + 8 * v12) = a1;
        return;
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_DE151C();
      goto LABEL_7;
    }
    sub_DE0694(v15, a4 & 1);
    v20 = sub_21BAD0(a2, a3);
    if ((v16 & 1) == (v21 & 1))
    {
      v12 = v20;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_DE115C(v12, a2, a3, a1, v18);
      swift_bridgeObjectRetain();
      return;
    }
  }
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

unsigned __int8 *sub_DEE620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int8 *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unsigned __int8 *v12;
  uint64_t v14;
  uint64_t v15;

  v14 = a1;
  v15 = a2;
  swift_bridgeObjectRetain();
  v4 = String.init<A>(_:)(&v14, &type metadata for String, &protocol witness table for String, &protocol witness table for String);
  v6 = v4;
  v7 = v5;
  if ((v5 & 0x1000000000000000) == 0)
  {
    if ((v5 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v9 = HIBYTE(v7) & 0xF;
    v14 = v6;
    v15 = v7 & 0xFFFFFFFFFFFFFFLL;
    v8 = (unsigned __int8 *)&v14;
    goto LABEL_7;
  }
  v6 = sub_DEE704(v4, v5);
  v11 = v10;
  swift_bridgeObjectRelease(v7);
  v7 = v11;
  if ((v11 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v6 & 0x1000000000000000) != 0)
  {
    v8 = (unsigned __int8 *)((v7 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v9 = v6 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v8 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v6, v7);
  }
LABEL_7:
  v12 = sub_3384BC(v8, v9, a3);
  swift_bridgeObjectRelease(v7);
  return v12;
}

uint64_t sub_DEE704(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1;
  v3 = 7;
  if (((a2 >> 60) & ((a1 & 0x800000000000000) == 0)) != 0)
    v3 = 11;
  v4 = String.subscript.getter(15, v3 | (v2 << 16), a1, a2);
  v6 = v5;
  v9 = sub_DEE780(v4, v7, v8, v5);
  swift_bridgeObjectRelease(v6);
  return v9;
}

uint64_t sub_DEE780(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v5;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[5];

  v5 = a3;
  if ((a4 & 0x1000000000000000) != 0)
  {
    v12 = sub_3388F8(a1, a2, a3, a4);
    if (v12)
    {
      v9 = v12;
      v8 = (unint64_t)sub_DEE1D4(v12, 0);
      v5 = sub_3389E4((unint64_t)v15, v8 + 32, v9, a1, a2, v5, a4);
      v13 = v15[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease(v13);
      if (v5 != v9)
      {
        __break(1u);
        goto LABEL_11;
      }
    }
    else
    {
      v8 = (unint64_t)_swiftEmptyArrayStorage;
    }
    v14 = static String._uncheckedFromUTF8(_:)(v8 + 32, *(_QWORD *)(v8 + 16));
    swift_release(v8);
    return v14;
  }
  else
  {
    v8 = a1 >> 16;
    v9 = a2 >> 16;
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
      {
        v10 = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
LABEL_5:
        v10 += v8;
        return static String._uncheckedFromUTF8(_:)(v10, v9 - v8);
      }
LABEL_11:
      v10 = _StringObject.sharedUTF8.getter(v5, a4);
      if (!v10)
        return static String._uncheckedFromUTF8(_:)(v10, v9 - v8);
      goto LABEL_5;
    }
    v15[0] = a3;
    v15[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return static String._uncheckedFromUTF8(_:)((char *)v15 + v8, v9 - v8);
  }
}

void sub_DEE8C4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5)
{
  uint64_t v10;
  _QWORD *boxed_opaque_existential_1Tm;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  NSObject *v20;
  char *v21;
  id v22;
  __n128 v23;
  double v24;
  void **v25;
  uint64_t v26;
  void *v27;
  void *v28;
  uint64_t (*v29)();
  _QWORD *v30;
  __int128 v31[2];
  _QWORD v32[5];

  v10 = type metadata accessor for Song(0);
  v32[3] = v10;
  v32[4] = &off_13C54F0;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v32);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(boxed_opaque_existential_1Tm, a2, v10);
  v12 = swift_allocObject(&unk_13C5858, 24, 7);
  swift_unknownObjectWeakInit(v12 + 16);
  sub_55D1C((uint64_t)v32, (uint64_t)v31);
  v13 = (_QWORD *)swift_allocObject(&unk_13C5AD8, 80, 7);
  v13[2] = v12;
  sub_8B15C(v31, (uint64_t)(v13 + 3));
  v13[8] = a3;
  v13[9] = a4;
  v29 = sub_DF1AB8;
  v30 = v13;
  v25 = _NSConcreteStackBlock;
  v26 = 1107296256;
  v27 = sub_2199A0;
  v28 = &block_descriptor_154_1;
  v14 = _Block_copy(&v25);
  swift_retain();
  v15 = objc_msgSend(a1, "newOperationWithResponseHandler:", v14, swift_release().n128_f64[0]);
  _Block_release(v14);
  v16 = *(void **)&a5[OBJC_IVAR___MusicLyricsLoader_accessQueue];
  sub_55D1C((uint64_t)v32, (uint64_t)v31);
  v17 = swift_allocObject(&unk_13C5B28, 72, 7);
  *(_QWORD *)(v17 + 16) = a5;
  sub_8B15C(v31, v17 + 24);
  *(_QWORD *)(v17 + 64) = v15;
  v18 = swift_allocObject(&unk_13C5B50, 32, 7);
  *(_QWORD *)(v18 + 16) = sub_DF1A28;
  *(_QWORD *)(v18 + 24) = v17;
  v29 = sub_AF944;
  v30 = (_QWORD *)v18;
  v25 = _NSConcreteStackBlock;
  v26 = 1107296256;
  v27 = sub_3A1A94;
  v28 = &block_descriptor_165_2;
  v19 = _Block_copy(&v25);
  v20 = v16;
  v21 = a5;
  v22 = v15;
  swift_retain();
  swift_release();
  dispatch_sync(v20, v19);

  _Block_release(v19);
  LOBYTE(v15) = swift_isEscapingClosureAtFileLocation(v18, "", 122, 377, 31, 1, v23);
  *(_QWORD *)&v24 = swift_release().n128_u64[0];
  if ((v15 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    objc_msgSend(*(id *)&v21[OBJC_IVAR___MusicLyricsLoader_operationQueue], "addOperation:", v22, v24);

    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v32);
  }
}

void sub_DEEB64(void *a1, void *a2, uint64_t a3, uint64_t a4, char *a5)
{
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  NSObject *v19;
  char *v20;
  id v21;
  __n128 v22;
  double v23;
  void **v24;
  uint64_t v25;
  void *v26;
  void *v27;
  void (*v28)(void *, uint64_t);
  _QWORD *v29;
  __int128 v30[2];
  _QWORD v31[5];

  v31[3] = sub_4E684(0, &qword_1507920, MPModelSong_ptr);
  v31[4] = &off_13C5508;
  v31[0] = a2;
  v10 = swift_allocObject(&unk_13C5858, 24, 7);
  swift_unknownObjectWeakInit(v10 + 16);
  sub_55D1C((uint64_t)v31, (uint64_t)v30);
  v11 = (_QWORD *)swift_allocObject(&unk_13C5880, 80, 7);
  v11[2] = v10;
  sub_8B15C(v30, (uint64_t)(v11 + 3));
  v11[8] = a3;
  v11[9] = a4;
  v28 = sub_DF17B8;
  v29 = v11;
  v24 = _NSConcreteStackBlock;
  v25 = 1107296256;
  v26 = sub_2199A0;
  v27 = &block_descriptor_104_1;
  v12 = _Block_copy(&v24);
  v13 = a2;
  swift_retain();
  v14 = objc_msgSend(a1, "newOperationWithResponseHandler:", v12, swift_release().n128_f64[0]);
  _Block_release(v12);
  v15 = *(void **)&a5[OBJC_IVAR___MusicLyricsLoader_accessQueue];
  sub_55D1C((uint64_t)v31, (uint64_t)v30);
  v16 = swift_allocObject(&unk_13C58D0, 72, 7);
  *(_QWORD *)(v16 + 16) = a5;
  sub_8B15C(v30, v16 + 24);
  *(_QWORD *)(v16 + 64) = v14;
  v17 = swift_allocObject(&unk_13C58F8, 32, 7);
  *(_QWORD *)(v17 + 16) = sub_DF17CC;
  *(_QWORD *)(v17 + 24) = v16;
  v28 = (void (*)(void *, uint64_t))sub_AF944;
  v29 = (_QWORD *)v17;
  v24 = _NSConcreteStackBlock;
  v25 = 1107296256;
  v26 = sub_3A1A94;
  v27 = &block_descriptor_114_3;
  v18 = _Block_copy(&v24);
  v19 = v15;
  v20 = a5;
  v21 = v14;
  swift_retain();
  swift_release();
  dispatch_sync(v19, v18);

  _Block_release(v18);
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation(v17, "", 122, 377, 31, 1, v22);
  *(_QWORD *)&v23 = swift_release().n128_u64[0];
  if ((v14 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    objc_msgSend(*(id *)&v20[OBJC_IVAR___MusicLyricsLoader_operationQueue], "addOperation:", v21, v23);

    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v31);
  }
}

uint64_t sub_DEEDFC(uint64_t a1, void *a2, char *a3, char *a4)
{
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  unint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  id v27;
  id v28;
  char *v29;
  char *v30;
  char *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  id v46;
  os_log_type_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  id v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v58;
  _QWORD v59[3];
  uint64_t v60;
  _QWORD v61[5];

  v61[3] = sub_4E684(0, &qword_1507920, MPModelSong_ptr);
  v61[4] = &off_13C5508;
  v61[0] = a2;
  if (!a1)
  {
    v34 = qword_1506120;
    v35 = a2;
    if (v34 != -1)
      swift_once(&qword_1506120, sub_DDD864);
    v36 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v36, (uint64_t)static Logger.lyrics);
    sub_55D1C((uint64_t)v61, (uint64_t)v59);
    v37 = swift_bridgeObjectRetain_n(a4, 2);
    v22 = Logger.logObject.getter(v37);
    v38 = static os_log_type_t.error.getter(v22);
    if (os_log_type_enabled(v22, v38))
    {
      v39 = swift_slowAlloc(32, -1);
      v40 = swift_slowAlloc(96, -1);
      v58 = v40;
      *(_DWORD *)v39 = 136446722;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v39 + 4) = sub_DCF730(a3, a4, &v58);
      swift_bridgeObjectRelease_n(a4, 3);
      *(_WORD *)(v39 + 12) = 2082;
      v41 = (char *)Optional<A>.description.getter(0, 0);
      *(_QWORD *)(v39 + 14) = sub_DCF730(v41, v42, &v58);
      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 22) = 2082;
      __swift_project_boxed_opaque_existential_1(v59, v60);
      v43 = (char *)sub_DEE038();
      *(_QWORD *)(v39 + 24) = sub_DCF730(v43, v44, &v58);
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(v59);
      _os_log_impl(&dword_0, v22, v38, "%{public}s loadLyrics(for:completion:) failed to handle error on store lyrics request [failed to convert Error? to NSError] error.localizedDescription=%{public}s %{public}s", (uint8_t *)v39, 0x20u);
      swift_arrayDestroy(v40, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v40, -1, -1);
      swift_slowDealloc(v39, -1, -1);
      goto LABEL_26;
    }
    swift_bridgeObjectRelease_n(a4, 2);
LABEL_25:
    __swift_destroy_boxed_opaque_existential_1(v59);
    goto LABEL_26;
  }
  v8 = a2;
  v9 = (void *)_convertErrorToNSError(_:)(a1);
  v10 = objc_msgSend(v9, "domain");
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v13 = v12;

  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(MPStoreLyricsRequestErrorDomain);
  if (v11 == v14 && v13 == v15)
  {
    v18 = swift_bridgeObjectRelease_n(v13, 2).n128_u64[0];
  }
  else
  {
    v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v13, v14, v15, 0);
    swift_bridgeObjectRelease();
    v18 = swift_bridgeObjectRelease().n128_u64[0];
    if ((v17 & 1) == 0)
    {
      if (qword_1506120 != -1)
        swift_once(&qword_1506120, sub_DDD864);
      v19 = type metadata accessor for Logger(0);
      __swift_project_value_buffer(v19, (uint64_t)static Logger.lyrics);
      sub_55D1C((uint64_t)v61, (uint64_t)v59);
      v20 = v9;
      swift_bridgeObjectRetain_n(a4, 2);
      v21 = v20;
      v22 = Logger.logObject.getter(v21);
      v23 = static os_log_type_t.error.getter(v22);
      if (os_log_type_enabled(v22, v23))
      {
        v24 = swift_slowAlloc(42, -1);
        v25 = swift_slowAlloc(96, -1);
        v58 = v25;
        *(_DWORD *)v24 = 136446978;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v24 + 4) = sub_DCF730(a3, a4, &v58);
        *(_QWORD *)&v26 = swift_bridgeObjectRelease_n(a4, 3).n128_u64[0];
        *(_WORD *)(v24 + 12) = 2050;
        v27 = objc_msgSend(v21, "code", v26);

        *(_QWORD *)(v24 + 14) = v27;
        *(_WORD *)(v24 + 22) = 2082;
        v28 = objc_msgSend(v21, "domain");
        v29 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
        v31 = v30;

        *(_QWORD *)(v24 + 24) = sub_DCF730(v29, v31, &v58);
        swift_bridgeObjectRelease();
        *(_WORD *)(v24 + 32) = 2082;
        __swift_project_boxed_opaque_existential_1(v59, v60);
        v32 = (char *)sub_DEE038();
        *(_QWORD *)(v24 + 34) = sub_DCF730(v32, v33, &v58);
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1(v59);
        _os_log_impl(&dword_0, v22, v23, "%{public}s loadLyrics(for:completion:) failed to handle error on store lyrics request [unexpected error domain or code] standardError.code=%{public}ld standardError.domain=%{public}s %{public}s", (uint8_t *)v24, 0x2Au);
        swift_arrayDestroy(v25, 3, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v25, -1, -1);
        swift_slowDealloc(v24, -1, -1);

LABEL_26:
        return __swift_destroy_boxed_opaque_existential_1(v61);
      }
      swift_bridgeObjectRelease_n(a4, 2);

      goto LABEL_25;
    }
  }
  if (objc_msgSend(v9, "code", *(double *)&v18) != (id)-3005)
  {
    if (qword_1506120 != -1)
      swift_once(&qword_1506120, sub_DDD864);
    v45 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v45, (uint64_t)static Logger.lyrics);
    sub_55D1C((uint64_t)v61, (uint64_t)v59);
    swift_bridgeObjectRetain_n(a4, 2);
    v46 = v9;
    v22 = Logger.logObject.getter(v46);
    v47 = static os_log_type_t.error.getter(v22);
    if (os_log_type_enabled(v22, v47))
    {
      v48 = swift_slowAlloc(32, -1);
      v49 = swift_slowAlloc(96, -1);
      v58 = v49;
      *(_DWORD *)v48 = 136446722;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v48 + 4) = sub_DCF730(a3, a4, &v58);
      swift_bridgeObjectRelease_n(a4, 3);
      *(_WORD *)(v48 + 12) = 2082;
      v50 = v46;
      v51 = objc_msgSend(v50, "description");
      v52 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v51);
      v54 = v53;

      *(_QWORD *)(v48 + 14) = sub_DCF730(v52, v54, &v58);
      swift_bridgeObjectRelease();
      *(_WORD *)(v48 + 22) = 2082;
      __swift_project_boxed_opaque_existential_1(v59, v60);
      v55 = (char *)sub_DEE038();
      *(_QWORD *)(v48 + 24) = sub_DCF730(v55, v56, &v58);
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(v59);
      _os_log_impl(&dword_0, v22, v47, "%{public}s loadLyrics(for:completion:) unexpected error on store lyrics request [found error other than .explicitContentRestricted] error=%{public}s) %{public}s", (uint8_t *)v48, 0x20u);
      swift_arrayDestroy(v49, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v49, -1, -1);
      swift_slowDealloc(v48, -1, -1);

      goto LABEL_26;
    }
    swift_bridgeObjectRelease_n(a4, 2);

    goto LABEL_25;
  }

  return __swift_destroy_boxed_opaque_existential_1(v61);
}

uint64_t sub_DEF504(uint64_t a1, uint64_t a2, char *a3, char *a4, uint64_t a5, uint64_t a6)
{
  _QWORD *boxed_opaque_existential_1Tm;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  double v29;
  id v30;
  id v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  os_log_type_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  id v47;
  os_log_type_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  id v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  char *v57;
  uint64_t v59;
  uint64_t v60;
  _QWORD v61[3];
  uint64_t v62;
  _QWORD v63[5];

  v63[3] = a5;
  v63[4] = a6;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v63);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 16))(boxed_opaque_existential_1Tm, a2, a5);
  if (!a1)
  {
    if (qword_1506120 != -1)
      swift_once(&qword_1506120, sub_DDD864);
    v37 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v37, (uint64_t)static Logger.lyrics);
    sub_55D1C((uint64_t)v63, (uint64_t)v61);
    v38 = swift_bridgeObjectRetain_n(a4, 2);
    v26 = Logger.logObject.getter(v38);
    v39 = static os_log_type_t.error.getter(v26);
    if (os_log_type_enabled(v26, v39))
    {
      v40 = swift_slowAlloc(32, -1);
      v41 = swift_slowAlloc(96, -1);
      v60 = v41;
      *(_DWORD *)v40 = 136446722;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v40 + 4) = sub_DCF730(a3, a4, &v60);
      swift_bridgeObjectRelease_n(a4, 3);
      *(_WORD *)(v40 + 12) = 2082;
      v42 = (char *)Optional<A>.description.getter(0, 0);
      *(_QWORD *)(v40 + 14) = sub_DCF730(v42, v43, &v60);
      swift_bridgeObjectRelease();
      *(_WORD *)(v40 + 22) = 2082;
      __swift_project_boxed_opaque_existential_1(v61, v62);
      v44 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(a6 + 16))(a5, a6);
      *(_QWORD *)(v40 + 24) = sub_DCF730(v44, v45, &v60);
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(v61);
      _os_log_impl(&dword_0, v26, v39, "%{public}s loadLyrics(for:completion:) failed to handle error on store lyrics request [failed to convert Error? to NSError] error.localizedDescription=%{public}s %{public}s", (uint8_t *)v40, 0x20u);
      swift_arrayDestroy(v41, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v41, -1, -1);
      swift_slowDealloc(v40, -1, -1);
      goto LABEL_26;
    }
    swift_bridgeObjectRelease_n(a4, 2);
LABEL_25:
    __swift_destroy_boxed_opaque_existential_1(v61);
    goto LABEL_26;
  }
  v13 = (void *)_convertErrorToNSError(_:)(a1);
  v14 = objc_msgSend(v13, "domain");
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v17 = v16;

  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(MPStoreLyricsRequestErrorDomain);
  if (v15 == v18 && v17 == v19)
  {
    v22 = swift_bridgeObjectRelease_n(v17, 2).n128_u64[0];
  }
  else
  {
    v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v17, v18, v19, 0);
    swift_bridgeObjectRelease();
    v22 = swift_bridgeObjectRelease().n128_u64[0];
    if ((v21 & 1) == 0)
    {
      if (qword_1506120 != -1)
        swift_once(&qword_1506120, sub_DDD864);
      v23 = type metadata accessor for Logger(0);
      __swift_project_value_buffer(v23, (uint64_t)static Logger.lyrics);
      sub_55D1C((uint64_t)v63, (uint64_t)v61);
      v24 = v13;
      swift_bridgeObjectRetain_n(a4, 2);
      v25 = v24;
      v26 = Logger.logObject.getter(v25);
      v27 = static os_log_type_t.error.getter(v26);
      if (os_log_type_enabled(v26, v27))
      {
        v28 = swift_slowAlloc(42, -1);
        v59 = swift_slowAlloc(96, -1);
        v60 = v59;
        *(_DWORD *)v28 = 136446978;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v28 + 4) = sub_DCF730(a3, a4, &v60);
        *(_QWORD *)&v29 = swift_bridgeObjectRelease_n(a4, 3).n128_u64[0];
        *(_WORD *)(v28 + 12) = 2050;
        v30 = objc_msgSend(v25, "code", v29);

        *(_QWORD *)(v28 + 14) = v30;
        *(_WORD *)(v28 + 22) = 2082;
        v31 = objc_msgSend(v25, "domain");
        v32 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
        v34 = v33;

        *(_QWORD *)(v28 + 24) = sub_DCF730(v32, v34, &v60);
        swift_bridgeObjectRelease();
        *(_WORD *)(v28 + 32) = 2082;
        __swift_project_boxed_opaque_existential_1(v61, v62);
        v35 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(a6 + 16))(a5, a6);
        *(_QWORD *)(v28 + 34) = sub_DCF730(v35, v36, &v60);
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1(v61);
        _os_log_impl(&dword_0, v26, v27, "%{public}s loadLyrics(for:completion:) failed to handle error on store lyrics request [unexpected error domain or code] standardError.code=%{public}ld standardError.domain=%{public}s %{public}s", (uint8_t *)v28, 0x2Au);
        swift_arrayDestroy(v59, 3, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v59, -1, -1);
        swift_slowDealloc(v28, -1, -1);

LABEL_26:
        return __swift_destroy_boxed_opaque_existential_1(v63);
      }
      swift_bridgeObjectRelease_n(a4, 2);

      goto LABEL_25;
    }
  }
  if (objc_msgSend(v13, "code", *(double *)&v22) != (id)-3005)
  {
    if (qword_1506120 != -1)
      swift_once(&qword_1506120, sub_DDD864);
    v46 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v46, (uint64_t)static Logger.lyrics);
    sub_55D1C((uint64_t)v63, (uint64_t)v61);
    swift_bridgeObjectRetain_n(a4, 2);
    v47 = v13;
    v26 = Logger.logObject.getter(v47);
    v48 = static os_log_type_t.error.getter(v26);
    if (os_log_type_enabled(v26, v48))
    {
      v49 = swift_slowAlloc(32, -1);
      v50 = swift_slowAlloc(96, -1);
      v60 = v50;
      *(_DWORD *)v49 = 136446722;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v49 + 4) = sub_DCF730(a3, a4, &v60);
      swift_bridgeObjectRelease_n(a4, 3);
      *(_WORD *)(v49 + 12) = 2082;
      v51 = v47;
      v52 = objc_msgSend(v51, "description");
      v53 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v52);
      v55 = v54;

      *(_QWORD *)(v49 + 14) = sub_DCF730(v53, v55, &v60);
      swift_bridgeObjectRelease();
      *(_WORD *)(v49 + 22) = 2082;
      __swift_project_boxed_opaque_existential_1(v61, v62);
      v56 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(a6 + 16))(a5, a6);
      *(_QWORD *)(v49 + 24) = sub_DCF730(v56, v57, &v60);
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(v61);
      _os_log_impl(&dword_0, v26, v48, "%{public}s loadLyrics(for:completion:) unexpected error on store lyrics request [found error other than .explicitContentRestricted] error=%{public}s) %{public}s", (uint8_t *)v49, 0x20u);
      swift_arrayDestroy(v50, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v50, -1, -1);
      swift_slowDealloc(v49, -1, -1);

      goto LABEL_26;
    }
    swift_bridgeObjectRelease_n(a4, 2);

    goto LABEL_25;
  }

  return __swift_destroy_boxed_opaque_existential_1(v63);
}

uint64_t _s11MusicCoreUI12LyricsLoaderC4SongO21__derived_enum_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void **v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void **v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  char v21;
  id v22;
  id v23;
  char v24;
  char v25;
  void (*v26)(char *, uint64_t);
  uint64_t v28;

  v4 = type metadata accessor for Song(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for LyricsLoader.Song(0);
  __chkstk_darwin();
  v10 = (void **)((char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  v12 = (char *)&v28 - v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_15077D8);
  __chkstk_darwin();
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (void **)&v14[*(int *)(v15 + 48)];
  sub_DF1038(a1, (uint64_t)v14);
  sub_DF1038(a2, (uint64_t)v16);
  if (swift_getEnumCaseMultiPayload(v14, v8) == 1)
  {
    sub_DF1038((uint64_t)v14, (uint64_t)v10);
    v17 = *v10;
    v18 = v10[1];
    if (swift_getEnumCaseMultiPayload(v16, v8) == 1)
    {
      v19 = *v16;
      v20 = v16[1];
      sub_4E684(0, (unint64_t *)&qword_15077E0, NSObject_ptr);
      v21 = static NSObject.== infix(_:_:)(v17, v19);

      if ((v21 & 1) != 0)
      {
        if (v18)
        {
          if (v20)
          {
            sub_4E684(0, &qword_15077E8, MPCPlayerResponseTracklist_ptr);
            v22 = v20;
            v23 = v18;
            v24 = static NSObject.== infix(_:_:)(v23, v22);

            if ((v24 & 1) != 0)
              goto LABEL_20;
            goto LABEL_15;
          }
        }
        else
        {
          if (!v20)
          {
LABEL_20:
            sub_DF1520((uint64_t)v14);
            v25 = 1;
            return v25 & 1;
          }
          v18 = v20;
        }
      }
      else
      {

      }
LABEL_15:
      sub_DF1520((uint64_t)v14);
      goto LABEL_16;
    }

LABEL_11:
    sub_DF1660((uint64_t)v14);
LABEL_16:
    v25 = 0;
    return v25 & 1;
  }
  sub_DF1038((uint64_t)v14, (uint64_t)v12);
  if (swift_getEnumCaseMultiPayload(v16, v8) == 1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v12, v4);
    goto LABEL_11;
  }
  (*(void (**)(char *, void **, uint64_t))(v5 + 32))(v7, v16, v4);
  v25 = static Song.== infix(_:_:)(v12, v7);
  v26 = *(void (**)(char *, uint64_t))(v5 + 8);
  v26(v7, v4);
  v26(v12, v4);
  sub_DF1520((uint64_t)v14);
  return v25 & 1;
}

uint64_t _s11MusicCoreUI12LyricsLoaderC08supportsD03forSbSo11MPModelSongC_tFZ_0(void *a1)
{
  id v2;
  id v3;
  uint64_t v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  NSString v31;
  id v32;
  uint64_t v33;
  id v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  char *v45;
  double v46;
  id v47;
  id v48;
  char *v49;
  char *v50;
  char *v51;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint64_t v56;
  id v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  char *v64;
  double v65;
  id v66;
  id v67;
  char *v68;
  char *v69;
  char *v70;
  uint64_t v71;
  id v72;
  os_log_type_t v73;
  id v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  char *v81;
  double v82;
  id v83;
  id v84;
  char *v85;
  char *v86;
  char *v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  id v91;
  NSObject *v92;
  os_log_type_t v93;
  uint64_t v94;
  id v95;
  void *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  id v101;
  os_log_type_t v102;
  uint64_t v103;
  char v104;
  double v105;
  id v106;
  void *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  char *v113;
  double v114;
  id v115;
  id v116;
  char *v117;
  char *v118;
  char *v119;
  os_log_type_t v120;
  const char *v121;
  NSObject *v122;
  uint8_t *v123;
  uint32_t v124;
  char *v125;
  char *v126;
  char *v127;
  double v128;
  id v129;
  id v130;
  char *v131;
  char *v132;
  char *v133;
  os_log_type_t v134;
  const char *v135;
  char *v136;
  char *v137;
  char *v138;
  double v139;
  id v140;
  id v141;
  char *v142;
  char *v143;
  char *v144;
  char *v145;
  char *v146;
  char *v147;
  double v148;
  id v149;
  id v150;
  char *v151;
  char *v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  os_log_type_t v156;
  os_log_type_t v157;
  os_log_type_t v158;
  uint64_t v159;
  uint64_t v160;
  _QWORD v161[15];
  uint64_t v162;
  char v163;
  uint64_t v164;

  v2 = objc_msgSend(a1, "lyrics");
  if (v2)
  {
    v3 = v2;
    if ((objc_msgSend(a1, "hasVideo") & 1) != 0)
    {

      goto LABEL_4;
    }
    v15 = objc_msgSend(v3, "hasLibraryLyrics");
    if ((objc_msgSend(v3, "hasStoreLyrics") & 1) == 0 && !(_DWORD)v15)
    {
      if (qword_1506120 != -1)
        swift_once(&qword_1506120, sub_DDD864);
      v16 = type metadata accessor for Logger(0);
      __swift_project_value_buffer(v16, (uint64_t)static Logger.lyrics);
      v17 = a1;
      v6 = v3;
      v18 = Logger.logObject.getter(v6);
      v19 = static os_log_type_t.default.getter(v18);
      if (os_log_type_enabled(v18, v19))
      {
        v20 = swift_slowAlloc(34, -1);
        v21 = swift_slowAlloc(64, -1);
        v162 = v21;
        *(_DWORD *)v20 = 67240962;
        *(_DWORD *)(v20 + 4) = -[NSObject hasLibraryLyrics](v6, "hasLibraryLyrics");
        *(_WORD *)(v20 + 8) = 1026;
        *(_DWORD *)(v20 + 10) = -[NSObject hasStoreLyrics](v6, "hasStoreLyrics");

        *(_WORD *)(v20 + 14) = 2082;
        v22 = objc_msgSend(v17, "title");
        if (v22)
        {
          v23 = v22;
          v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
          v26 = v25;

        }
        else
        {
          v24 = 0;
          v26 = 0;
        }
        v62 = (char *)Optional<A>.description.getter(v24, v26);
        v64 = v63;
        swift_bridgeObjectRelease(v26);
        *(_QWORD *)(v20 + 16) = sub_DCF730(v62, v64, &v162);

        *(_QWORD *)&v65 = swift_bridgeObjectRelease(v64).n128_u64[0];
        *(_WORD *)(v20 + 24) = 2082;
        v66 = objc_msgSend(v17, "identifiers", v65);
        v67 = objc_msgSend(v66, "description");
        v68 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v67);
        v70 = v69;

        *(_QWORD *)(v20 + 26) = sub_DCF730(v68, v70, &v162);
        swift_bridgeObjectRelease(v70);
        _os_log_impl(&dword_0, v18, v19, "Loader supportsLyrics=false [no lyrics found] lyrics.hasLibraryLyrics=%{BOOL,public}d lyrics.hasStoreLyrics=%{BOOL,public}d song.title=%{public}s song.identifiers=%{public}s", (uint8_t *)v20, 0x22u);
        swift_arrayDestroy(v21, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v21, -1, -1);
        swift_slowDealloc(v20, -1, -1);

        return 0;
      }

      goto LABEL_27;
    }
    v27 = *BagProvider.shared.unsafeMutableAddressor();
    swift_retain(v27);
    v28 = (id)BagProvider.bag.getter();
    swift_release(v27);
    if (v28)
    {
      if ((objc_msgSend((id)objc_opt_self(MPStoreLyricsRequest), "supportsLyricsForURLBag:", v28) & 1) == 0)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)(ICURLBagKeyMusicSubscription);
        v30 = v29;
        v31 = String._bridgeToObjectiveC()();
        v32 = objc_msgSend(v28, "dictionaryForBagKey:", v31, swift_bridgeObjectRelease(v30).n128_f64[0]);

        if (v32)
        {

          if (qword_1506120 != -1)
            swift_once(&qword_1506120, sub_DDD864);
          v33 = type metadata accessor for Logger(0);
          __swift_project_value_buffer(v33, (uint64_t)static Logger.lyrics);
          v34 = a1;
          v35 = Logger.logObject.getter(v34);
          v36 = static os_log_type_t.default.getter(v35);
          if (!os_log_type_enabled(v35, v36))
          {

            return (uint64_t)v15;
          }
          v156 = v36;
          v37 = swift_slowAlloc(28, -1);
          v154 = swift_slowAlloc(64, -1);
          v162 = v154;
          *(_DWORD *)v37 = 67240706;
          *(_DWORD *)(v37 + 4) = (_DWORD)v15;
          *(_WORD *)(v37 + 8) = 2082;
          v38 = objc_msgSend(v34, "title");
          if (v38)
          {
            v39 = v38;
            v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
            v42 = v41;

          }
          else
          {
            v40 = 0;
            v42 = 0;
          }
          v125 = (char *)Optional<A>.description.getter(v40, v42);
          v127 = v126;
          swift_bridgeObjectRelease(v42);
          *(_QWORD *)(v37 + 10) = sub_DCF730(v125, v127, &v162);

          *(_QWORD *)&v128 = swift_bridgeObjectRelease(v127).n128_u64[0];
          *(_WORD *)(v37 + 18) = 2082;
          v129 = objc_msgSend(v34, "identifiers", v128);
          v130 = objc_msgSend(v129, "description");
          v131 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v130);
          v133 = v132;

          *(_QWORD *)(v37 + 20) = sub_DCF730(v131, v133, &v162);
          swift_bridgeObjectRelease(v133);
          v134 = v156;
          v135 = "Loader supportsLyrics=%{BOOL,public}d [no lyrics keys in bag] song.title=%{public}s song.identifiers=%{public}s";
        }
        else
        {
          if (qword_1506120 != -1)
            swift_once(&qword_1506120, sub_DDD864);
          v71 = type metadata accessor for Logger(0);
          __swift_project_value_buffer(v71, (uint64_t)static Logger.lyrics);
          v72 = a1;
          v35 = Logger.logObject.getter(v72);
          v73 = static os_log_type_t.default.getter(v35);
          if (!os_log_type_enabled(v35, v73))
          {

            return (uint64_t)v15;
          }
          v158 = v73;
          v37 = swift_slowAlloc(28, -1);
          v154 = swift_slowAlloc(64, -1);
          v162 = v154;
          *(_DWORD *)v37 = 67240706;
          *(_DWORD *)(v37 + 4) = (_DWORD)v15;
          *(_WORD *)(v37 + 8) = 2082;
          v74 = objc_msgSend(v72, "title");
          if (v74)
          {
            v75 = v74;
            v76 = static String._unconditionallyBridgeFromObjectiveC(_:)(v74);
            v78 = v77;

          }
          else
          {
            v76 = 0;
            v78 = 0;
          }
          v136 = (char *)Optional<A>.description.getter(v76, v78);
          v138 = v137;
          swift_bridgeObjectRelease(v78);
          *(_QWORD *)(v37 + 10) = sub_DCF730(v136, v138, &v162);

          *(_QWORD *)&v139 = swift_bridgeObjectRelease(v138).n128_u64[0];
          *(_WORD *)(v37 + 18) = 2082;
          v140 = objc_msgSend(v72, "identifiers", v139);
          v141 = objc_msgSend(v140, "description");
          v142 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v141);
          v144 = v143;

          *(_QWORD *)(v37 + 20) = sub_DCF730(v142, v144, &v162);
          swift_bridgeObjectRelease(v144);
          v134 = v158;
          v135 = "Loader supportsLyrics=%{BOOL,public}d [no musicSubscription key in bag] song.title=%{public}s song.iden"
                 "tifiers=%{public}s";
        }
        _os_log_impl(&dword_0, v35, v134, v135, (uint8_t *)v37, 0x1Cu);
        swift_arrayDestroy(v154, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v154, -1, -1);
        swift_slowDealloc(v37, -1, -1);

        return (uint64_t)v15;
      }
    }
    else
    {
      if (qword_1506120 != -1)
        swift_once(&qword_1506120, sub_DDD864);
      v53 = type metadata accessor for Logger(0);
      __swift_project_value_buffer(v53, (uint64_t)static Logger.lyrics);
      v28 = a1;
      v54 = Logger.logObject.getter(v28);
      v55 = static os_log_type_t.default.getter(v54);
      if (os_log_type_enabled(v54, v55))
      {
        v157 = v55;
        v56 = swift_slowAlloc(28, -1);
        v155 = swift_slowAlloc(64, -1);
        v162 = v155;
        *(_DWORD *)v56 = 67240706;
        *(_DWORD *)(v56 + 4) = (_DWORD)v15;
        *(_WORD *)(v56 + 8) = 2082;
        v57 = objc_msgSend(v28, "title");
        if (v57)
        {
          v58 = v57;
          v59 = static String._unconditionallyBridgeFromObjectiveC(_:)(v57);
          v61 = v60;

        }
        else
        {
          v59 = 0;
          v61 = 0;
        }
        v79 = (char *)Optional<A>.description.getter(v59, v61);
        v81 = v80;
        swift_bridgeObjectRelease(v61);
        *(_QWORD *)(v56 + 10) = sub_DCF730(v79, v81, &v162);

        *(_QWORD *)&v82 = swift_bridgeObjectRelease(v81).n128_u64[0];
        *(_WORD *)(v56 + 18) = 2082;
        v83 = objc_msgSend(v28, "identifiers", v82);
        v84 = objc_msgSend(v83, "description");
        v85 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v84);
        v87 = v86;

        *(_QWORD *)(v56 + 20) = sub_DCF730(v85, v87, &v162);
        swift_bridgeObjectRelease(v87);
        _os_log_impl(&dword_0, v54, v157, "Loader supportsLyrics=%{BOOL,public}d [bag is nil] song.title=%{public}s song.identifiers=%{public}s", (uint8_t *)v56, 0x1Cu);
        swift_arrayDestroy(v155, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v155, -1, -1);
        swift_slowDealloc(v56, -1, -1);

LABEL_48:
        if (objc_msgSend(v3, "hasStoreLyrics")
          && (static ApplicationCapabilities.shared.getter((uint64_t)v161),
              v88 = v161[3],
              swift_bridgeObjectRetain(),
              sub_A9008(v161),
              v89 = sub_DE7EFC(2u, v88),
              swift_bridgeObjectRelease(v88),
              (v89 & 1) != 0))
        {
          static ApplicationCapabilities.shared.getter((uint64_t)&v162);
          sub_A9008(&v162);
          if ((v163 & 1) != 0)
          {

            return 1;
          }
          if (qword_1506120 != -1)
            swift_once(&qword_1506120, sub_DDD864);
          v90 = type metadata accessor for Logger(0);
          __swift_project_value_buffer(v90, (uint64_t)static Logger.lyrics);
          v91 = a1;
          v92 = Logger.logObject.getter(v91);
          v93 = static os_log_type_t.default.getter(v92);
          if (!os_log_type_enabled(v92, v93))
          {

            return (uint64_t)v15;
          }
          v94 = swift_slowAlloc(28, -1);
          v159 = swift_slowAlloc(64, -1);
          v160 = v159;
          *(_DWORD *)v94 = 67240706;
          *(_DWORD *)(v94 + 4) = (_DWORD)v15;
          *(_WORD *)(v94 + 8) = 2082;
          v95 = objc_msgSend(v91, "title");
          if (v95)
          {
            v96 = v95;
            v97 = static String._unconditionallyBridgeFromObjectiveC(_:)(v95);
            v99 = v98;

          }
          else
          {
            v97 = 0;
            v99 = 0;
          }
          v145 = (char *)Optional<A>.description.getter(v97, v99);
          v147 = v146;
          swift_bridgeObjectRelease(v99);
          *(_QWORD *)(v94 + 10) = sub_DCF730(v145, v147, &v160);

          *(_QWORD *)&v148 = swift_bridgeObjectRelease(v147).n128_u64[0];
          *(_WORD *)(v94 + 18) = 2082;
          v149 = objc_msgSend(v91, "identifiers", v148);
          v150 = objc_msgSend(v149, "description");
          v151 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v150);
          v153 = v152;

          *(_QWORD *)(v94 + 20) = sub_DCF730(v151, v153, &v160);
          swift_bridgeObjectRelease(v153);
          v120 = v93;
          v121 = "Loader supportsLyrics=%{BOOL,public}d [not supported by subscription] subscriptionCapabilities.contains"
                 "(.catalogLyricsViewing)=false song.title=%{public}s song.identifiers=%{public}s";
          v122 = v92;
          v123 = (uint8_t *)v94;
          v124 = 28;
        }
        else
        {
          if (qword_1506120 != -1)
            swift_once(&qword_1506120, sub_DDD864);
          v100 = type metadata accessor for Logger(0);
          __swift_project_value_buffer(v100, (uint64_t)static Logger.lyrics);
          v101 = a1;
          v3 = v3;
          v92 = Logger.logObject.getter(v3);
          v102 = static os_log_type_t.default.getter(v92);
          if (!os_log_type_enabled(v92, v102))
          {

            return (uint64_t)v15;
          }
          v94 = swift_slowAlloc(40, -1);
          v159 = swift_slowAlloc(64, -1);
          v160 = v159;
          *(_DWORD *)v94 = 67241218;
          *(_DWORD *)(v94 + 4) = (_DWORD)v15;
          *(_WORD *)(v94 + 8) = 1026;
          *(_DWORD *)(v94 + 10) = objc_msgSend(v3, "hasStoreLyrics");

          *(_WORD *)(v94 + 14) = 1026;
          static ApplicationCapabilities.shared.getter((uint64_t)&v162);
          v103 = v164;
          swift_bridgeObjectRetain();
          sub_A9008(&v162);
          v104 = sub_DE7EFC(2u, v103);
          *(_QWORD *)&v105 = swift_bridgeObjectRelease(v103).n128_u64[0];
          *(_DWORD *)(v94 + 16) = v104 & 1;
          *(_WORD *)(v94 + 20) = 2082;
          v106 = objc_msgSend(v101, "title", v105);
          if (v106)
          {
            v107 = v106;
            v108 = static String._unconditionallyBridgeFromObjectiveC(_:)(v106);
            v110 = v109;

          }
          else
          {
            v108 = 0;
            v110 = 0;
          }
          v111 = (char *)Optional<A>.description.getter(v108, v110);
          v113 = v112;
          swift_bridgeObjectRelease(v110);
          *(_QWORD *)(v94 + 22) = sub_DCF730(v111, v113, &v160);

          *(_QWORD *)&v114 = swift_bridgeObjectRelease(v113).n128_u64[0];
          *(_WORD *)(v94 + 30) = 2082;
          v115 = objc_msgSend(v101, "identifiers", v114);
          v116 = objc_msgSend(v115, "description");
          v117 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v116);
          v119 = v118;

          *(_QWORD *)(v94 + 32) = sub_DCF730(v117, v119, &v160);
          swift_bridgeObjectRelease(v119);
          v120 = v102;
          v121 = "Loader supportsLyrics=%{BOOL,public}d [can't support store lyrics] lyrics.hasStoreLyrics=%{BOOL,public}"
                 "d allowsSubscriptionContent=%{BOOL,public}d song.title=%{public}s song.identifiers=%{public}s";
          v122 = v92;
          v123 = (uint8_t *)v94;
          v124 = 40;
        }
        _os_log_impl(&dword_0, v122, v120, v121, v123, v124);
        swift_arrayDestroy(v159, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v159, -1, -1);
        swift_slowDealloc(v94, -1, -1);

        return (uint64_t)v15;
      }

    }
    goto LABEL_48;
  }
LABEL_4:
  if (qword_1506120 != -1)
    swift_once(&qword_1506120, sub_DDD864);
  v4 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v4, (uint64_t)static Logger.lyrics);
  v5 = a1;
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc(22, -1);
    v9 = swift_slowAlloc(64, -1);
    v162 = v9;
    *(_DWORD *)v8 = 136446466;
    v10 = objc_msgSend(v5, "title");
    if (v10)
    {
      v11 = v10;
      v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
      v14 = v13;

    }
    else
    {
      v12 = 0;
      v14 = 0;
    }
    v43 = (char *)Optional<A>.description.getter(v12, v14);
    v45 = v44;
    swift_bridgeObjectRelease(v14);
    *(_QWORD *)(v8 + 4) = sub_DCF730(v43, v45, &v162);

    *(_QWORD *)&v46 = swift_bridgeObjectRelease(v45).n128_u64[0];
    *(_WORD *)(v8 + 12) = 2082;
    v47 = objc_msgSend(v5, "identifiers", v46);
    v48 = objc_msgSend(v47, "description");
    v49 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v48);
    v51 = v50;

    *(_QWORD *)(v8 + 14) = sub_DCF730(v49, v51, &v162);
    swift_bridgeObjectRelease(v51);
    _os_log_impl(&dword_0, v6, v7, "Loader supportsLyrics=false [MPModelLyrics was nil] song.title=%{public}s song.identifiers=%{public}s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy(v9, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);
LABEL_27:

    return 0;
  }

  return 0;
}

uint64_t sub_DF0F8C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_DF0F9C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_DF0FC0(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_DEBAA4(a1, a2, *(void (**)(void))(v2 + 16));
}

uint64_t sub_DF0FCC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t type metadata accessor for LyricsLoader()
{
  return objc_opt_self(MusicLyricsLoader);
}

uint64_t type metadata accessor for LyricsLoader.Song(uint64_t a1)
{
  uint64_t result;

  result = qword_1507790;
  if (!qword_1507790)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for LyricsLoader.Song);
  return result;
}

uint64_t sub_DF1038(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LyricsLoader.Song(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_DF107C(uint64_t a1)
{
  uint64_t v1;

  sub_DED1F0(a1, *(_QWORD *)(v1 + 16));
}

void sub_DF1084(void *a1)
{
  uint64_t v1;

  sub_DEDD80(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_DF108C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_DF10A0()
{
  unint64_t result;

  result = qword_15076F0;
  if (!qword_15076F0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for LyricsLoader.LyricsError, &type metadata for LyricsLoader.LyricsError);
    atomic_store(result, (unint64_t *)&qword_15076F0);
  }
  return result;
}

uint64_t destroy for LyricsLoader.Result(uint64_t a1)
{
  return sub_AF8E8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s11MusicCoreUI12LyricsLoaderC6ResultOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_AF8D8(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for LyricsLoader.Result(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_AF8D8(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_AF8E8(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8_2(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for LyricsLoader.Result(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_AF8E8(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for LyricsLoader.Result()
{
  return &type metadata for LyricsLoader.Result;
}

uint64_t storeEnumTagSinglePayload for LyricsLoader.LyricsError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_DF1248 + 4 * byte_10AC723[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_DF127C + 4 * byte_10AC71E[v4]))();
}

uint64_t sub_DF127C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_DF1284(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xDF128CLL);
  return result;
}

uint64_t sub_DF1298(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xDF12A0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_DF12A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_DF12AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LyricsLoader.LyricsError()
{
  return &type metadata for LyricsLoader.LyricsError;
}

char *initializeBufferWithCopyOfBuffer for LyricsLoader.Song(char *a1, char **a2, uint64_t a3)
{
  int v5;
  char *v7;
  char *v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v14[(v5 + 16) & ~(unint64_t)v5];
    swift_retain(v14);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v7 = *a2;
      v8 = a2[1];
      *(_QWORD *)a1 = v7;
      *((_QWORD *)a1 + 1) = v8;
      v9 = v7;
      v10 = v8;
      v11 = a1;
      v12 = a3;
      v13 = 1;
    }
    else
    {
      v15 = type metadata accessor for Song(0);
      (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
      v11 = a1;
      v12 = a3;
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v11, v12, v13);
  }
  return a1;
}

void destroy for LyricsLoader.Song(id *a1, uint64_t a2)
{
  uint64_t v3;

  if (swift_getEnumCaseMultiPayload(a1, a2) == 1)
  {

  }
  else
  {
    v3 = type metadata accessor for Song(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
}

_QWORD *initializeWithCopy for LyricsLoader.Song(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  id v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = *(void **)a2;
    v7 = *(void **)(a2 + 8);
    *a1 = v6;
    a1[1] = v7;
    v8 = v6;
    v9 = v7;
    v10 = a1;
    v11 = a3;
    v12 = 1;
  }
  else
  {
    v13 = type metadata accessor for Song(0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
    v10 = a1;
    v11 = a3;
    v12 = 0;
  }
  swift_storeEnumTagMultiPayload(v10, v11, v12);
  return a1;
}

void **assignWithCopy for LyricsLoader.Song(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  id v9;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (a1 != a2)
  {
    sub_DF1520((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = *a2;
      *a1 = *a2;
      v7 = a2[1];
      a1[1] = v7;
      v8 = v6;
      v9 = v7;
      v10 = a1;
      v11 = a3;
      v12 = 1;
    }
    else
    {
      v13 = type metadata accessor for Song(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
      v10 = a1;
      v11 = a3;
      v12 = 0;
    }
    swift_storeEnumTagMultiPayload(v10, v11, v12);
  }
  return a1;
}

uint64_t sub_DF1520(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for LyricsLoader.Song(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *assignWithTake for LyricsLoader.Song(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_DF1520((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload(a2, a3))
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = type metadata accessor for Song(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t sub_DF15F4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for Song(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_10AC860;
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v4);
    return 0;
  }
  return result;
}

uint64_t sub_DF1660(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_15077D8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_DF16A0(void *a1)
{
  sub_DEDF6C(a1);
}

uint64_t sub_DF16A8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_DF16B8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_DF16CC(uint64_t a1)
{
  return sub_DF16F8(a1, (uint64_t (*)(uint64_t, uint64_t))sub_DED954);
}

uint64_t sub_DF16D8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_DF16EC(uint64_t a1)
{
  return sub_DF16F8(a1, (uint64_t (*)(uint64_t, uint64_t))sub_DED8FC);
}

uint64_t sub_DF16F8(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Song(0) - 8) + 80);
  return a2(a1, v2 + ((v4 + 16) & ~v4));
}

uint64_t sub_DF1744()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_DF1754()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

id sub_DF1778(void *a1)
{
  uint64_t v1;

  return sub_DED618(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_DF1780()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_DF1790()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_DF17B8(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_DEC1C4(a1, a2, *(_QWORD *)(v2 + 16), (_QWORD *)(v2 + 24), *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v2 + 64), *(_QWORD *)(v2 + 72));
}

double sub_DF17CC()
{
  uint64_t v0;

  return sub_DECAFC(*(_QWORD *)(v0 + 16), (_QWORD *)(v0 + 24), *(void **)(v0 + 64));
}

uint64_t sub_DF17DC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_DF17EC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

double sub_DF1820(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_DEC980(a1, a2, *(void **)(v2 + 16), *(void (**)(void))(v2 + 24), *(_QWORD *)(v2 + 32), *(char **)(v2 + 40), *(char **)(v2 + 48));
}

uint64_t sub_DF1830()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 64, 7);
}

void sub_DF185C()
{
  uint64_t v0;

  sub_DEC8E0(*(_QWORD *)(v0 + 16), (_QWORD *)(v0 + 24));
}

uint64_t sub_DF1868()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t objectdestroyTm_30()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_DF18B0()
{
  uint64_t v0;

  sub_DEC0C0(*(void ***)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_DF18BC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t objectdestroy_132Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1507928);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_DF1934(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1507928);
  return sub_DEA6BC(a1, a2, a3, a4);
}

uint64_t objectdestroy_100Tm()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 24));
  swift_release();
  return swift_deallocObject(v0, 80, 7);
}

uint64_t objectdestroy_106Tm_0()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_DF1A10()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_DF1ABC(uint64_t a1)
{
  char *v1;
  char *v2;
  double v4;
  uint64_t v5;
  void *v6;
  _BYTE v7[544];

  v2 = v1;
  memcpy(v7, &v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs], 0x219uLL);
  sub_533134((uint64_t)v7);
  LOBYTE(a1) = _s11MusicCoreUI26SyncedLyricsViewControllerC5SpecsV23__derived_struct_equalsySbAE_AEtFZ_0((uint64_t)v7, a1);
  sub_532E70((uint64_t)v7);
  if ((a1 & 1) == 0)
  {
    sub_DF3CB4(0);
    objc_msgSend(v2, "bounds");
    sub_DF3424(v4);
    if (v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_isSelected] == 1)
    {
      sub_DF3F58();
      v5 = OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView;
      objc_msgSend(*(id *)&v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView], "removeFromSuperview");
      v6 = *(void **)&v2[v5];
      *(_QWORD *)&v2[v5] = 0;

    }
    else
    {
      sub_DF3D48();
      if (*(_QWORD *)&v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation])
      {
        swift_retain();
        sub_DF5030();
        swift_release();
      }
    }
    sub_DF26C8(0, *(double *)&v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_progress]);
  }
}

void sub_DF1BCC(char a1, char a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  double v18;
  double v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  id v23;
  id v24;
  NSString v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  id v38;
  NSString v39;
  void *v40;
  id v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t i;
  uint64_t v56;
  void *v57;
  void *v58;
  char *v59;
  id v60;
  void *v61;
  char v62;
  _BYTE __dst[560];

  v62 = a1 & 1;
  if (v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_isSelected] == (a1 & 1))
    return;
  v3 = v2;
  v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_isSelected] = v62;
  if ((a1 & 1) != 0)
  {
    sub_DF3F58();
    v6 = OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView;
    objc_msgSend(*(id *)&v3[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView], "removeFromSuperview");
    v7 = *(void **)&v3[v6];
    *(_QWORD *)&v3[v6] = 0;

    if ((a2 & 1) == 0)
      return;
  }
  else
  {
    if ((a2 & 1) == 0)
    {
      sub_DF3D48();
      if (*(_QWORD *)&v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation])
      {
        swift_retain();
        sub_DF5030();
        swift_release();
      }
      return;
    }
    v8 = sub_4E684(0, (unint64_t *)&qword_15076C0, OS_dispatch_queue_ptr);
    v16 = (void *)static OS_dispatch_queue.main.getter(v8, v9, v10, v11, v12, v13, v14, v15);
    v17 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 100.0, 18.0, 0.0, 0.0);
    objc_msgSend(v17, "settlingDuration");
    v19 = v18;

    v20 = swift_allocObject(&unk_13C5D30, 24, 7);
    *(_QWORD *)(v20 + 16) = v3;
    v21 = v3;
    OS_dispatch_queue.asyncAfter(_:block:)((uint64_t)sub_DF4E08, v20, v19);

    swift_release();
  }
  if (!*(_QWORD *)&v3[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation])
    return;
  v22 = 240;
  if (v3[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_kind])
    v22 = 264;
  v23 = objc_msgSend(*(id *)&v3[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs + v22], "CGColor", swift_retain().n128_f64[0]);
  v59 = &v3[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs];
  v24 = objc_msgSend(*(id *)&v3[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs + 248], "CGColor");
  v25 = String._bridgeToObjectiveC()();
  v26 = objc_msgSend((id)objc_opt_self(CASpringAnimation), "animationWithKeyPath:", v25);

  CASpringAnimation.springParameters.setter(objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 100.0, 18.0, 0.0, 0.0));
  if ((a1 & 1) != 0)
    v27 = v24;
  else
    v27 = v23;
  if ((a1 & 1) != 0)
    v28 = v23;
  else
    v28 = v24;
  objc_msgSend(v26, "setFromValue:", v27, v24);
  v60 = v28;
  v61 = v26;
  objc_msgSend(v26, "setToValue:", v28);
  v29 = swift_bridgeObjectRetain();
  v30 = (uint64_t)sub_DF231C(v29);
  swift_bridgeObjectRelease();
  v58 = v23;
  if ((unint64_t)v30 >> 62)
    goto LABEL_38;
  v31 = *(_QWORD *)((char *)&dword_10 + (v30 & 0xFFFFFFFFFFFFF8));
  while (v31)
  {
    v32 = 4;
    while (1)
    {
      v33 = (v30 & 0xC000000000000001) != 0
          ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v32 - 4, v30)
          : (char *)*(id *)(v30 + 8 * v32);
      v34 = v33;
      v35 = v32 - 3;
      if (__OFADD__(v32 - 4, 1))
        break;
      v36 = OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_backgroundColorLayer;
      v37 = *(void **)&v33[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_backgroundColorLayer];
      if (!v37)
        goto LABEL_63;
      v38 = v37;
      v39 = String._bridgeToObjectiveC()();
      objc_msgSend(v38, "addAnimation:forKey:", v61, v39);

      v40 = *(void **)&v34[v36];
      if (!v40)
        goto LABEL_64;
      objc_msgSend(v40, "setBackgroundColor:", v60);
      sub_4E684(0, (unint64_t *)&qword_150B080, UIView_ptr);
      v41 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 100.0, 18.0, 0.0, 0.0);
      v42 = swift_allocObject(&unk_13C5D08, 25, 7);
      *(_QWORD *)(v42 + 16) = v34;
      *(_BYTE *)(v42 + 24) = v62;
      v43 = v34;
      static UIView.animate(withSpringTimingParameters:delay:options:animations:completion:)(v41, 0, sub_DF4DA8, v42, 0, 0, 0.0);

      swift_release();
      ++v32;
      if (v35 == v31)
        goto LABEL_26;
    }
    __break(1u);
LABEL_38:
    if (v30 < 0)
      v50 = v30;
    else
      v50 = v30 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v31 = _CocoaArrayWrapper.endIndex.getter(v50);
    swift_bridgeObjectRelease();
  }
LABEL_26:
  swift_bridgeObjectRelease();
  v44 = swift_bridgeObjectRetain();
  v45 = sub_DF25A8(v44);
  swift_bridgeObjectRelease();
  v46 = (uint64_t)sub_DF2488((uint64_t)v45);
  swift_bridgeObjectRelease();
  if ((unint64_t)v46 >> 62)
  {
    if (v46 < 0)
      v51 = v46;
    else
      v51 = v46 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v47 = _CocoaArrayWrapper.endIndex.getter(v51);
    swift_bridgeObjectRelease();
    v48 = v59;
    if (!v47)
      goto LABEL_47;
  }
  else
  {
    v47 = *(_QWORD *)((char *)&dword_10 + (v46 & 0xFFFFFFFFFFFFF8));
    v48 = v59;
    if (!v47)
      goto LABEL_47;
  }
  if (v47 >= 1)
  {
    v49 = 0;
    if ((v46 & 0xC000000000000001) == 0)
      goto LABEL_31;
LABEL_30:
    specialized _ArrayBuffer._getElementSlowPath(_:)(v49, v46);
    while (1)
    {
      memcpy(__dst, v48, 0x219uLL);
      sub_533134((uint64_t)__dst);
      sub_DF95E8();
      sub_532E70((uint64_t)__dst);
      swift_release();
      if (v47 - 1 == v49)
        break;
      ++v49;
      if ((v46 & 0xC000000000000001) != 0)
        goto LABEL_30;
LABEL_31:
      swift_retain();
    }
LABEL_47:
    swift_bridgeObjectRelease();
    v52 = swift_bridgeObjectRetain();
    v53 = (uint64_t)sub_DF25A8(v52);
    swift_bridgeObjectRelease();
    if ((unint64_t)v53 >> 62)
    {
      if (v53 < 0)
        v56 = v53;
      else
        v56 = v53 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v54 = _CocoaArrayWrapper.endIndex.getter(v56);
      swift_bridgeObjectRelease();
      if (v54)
      {
LABEL_49:
        if (v54 >= 1)
        {
          for (i = 0; i != v54; ++i)
          {
            if ((v53 & 0xC000000000000001) != 0)
              specialized _ArrayBuffer._getElementSlowPath(_:)(i, v53);
            else
              swift_retain();
            sub_DF9958();
            swift_release();
          }
          goto LABEL_59;
        }
        goto LABEL_62;
      }
    }
    else
    {
      v54 = *(_QWORD *)((char *)&dword_10 + (v53 & 0xFFFFFFFFFFFFF8));
      if (v54)
        goto LABEL_49;
    }
LABEL_59:

    swift_bridgeObjectRelease();
    swift_release();

    return;
  }
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
}

double sub_DF228C(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  double result;

  if (*(_BYTE *)(a1 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_isSelected) == 1)
  {
    sub_DF3F58();
    v2 = OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView;
    objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView), "removeFromSuperview");
    v3 = *(void **)(a1 + v2);
    *(_QWORD *)(a1 + v2) = 0;

  }
  else
  {
    sub_DF3D48();
    if (*(_QWORD *)(a1
                   + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation))
    {
      swift_retain();
      sub_DF5030();
      *(_QWORD *)&result = swift_release().n128_u64[0];
    }
  }
  return result;
}

_QWORD *sub_DF231C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;

  if ((unint64_t)a1 >> 62)
    goto LABEL_16;
  v2 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  while (v2)
  {
    v3 = 4;
    while (1)
    {
      v5 = v3 - 4;
      if ((a1 & 0xC000000000000001) == 0)
        break;
      v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(v3 - 4, a1);
      v7 = v3 - 3;
      if (__OFADD__(v5, 1))
        goto LABEL_15;
LABEL_11:
      v8 = *(void **)(v6 + 72);
      v9 = v8;
      swift_release(v6);
      if (v8)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v10);
        v12 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
        v11 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
        if (v12 >= v11 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v11 > 1, v12 + 1, 1);
        v4 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v9);
        specialized Array._endMutation()(v4);
      }
      ++v3;
      if (v7 == v2)
        goto LABEL_20;
    }
    v6 = *(_QWORD *)(a1 + 8 * v3);
    swift_retain(v6);
    v7 = v3 - 3;
    if (!__OFADD__(v5, 1))
      goto LABEL_11;
LABEL_15:
    __break(1u);
LABEL_16:
    if (a1 < 0)
      v13 = a1;
    else
      v13 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v2 = _CocoaArrayWrapper.endIndex.getter(v13);
  }
LABEL_20:
  swift_bridgeObjectRelease(a1);
  return _swiftEmptyArrayStorage;
}

_QWORD *sub_DF2488(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if ((unint64_t)a1 >> 62)
    goto LABEL_12;
  v2 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  while (v2)
  {
    v3 = 4;
    while (1)
    {
      v4 = v3 - 4;
      if ((a1 & 0xC000000000000001) == 0)
        break;
      v5 = specialized _ArrayBuffer._getElementSlowPath(_:)(v3 - 4, a1);
      v6 = v3 - 3;
      if (__OFADD__(v4, 1))
        goto LABEL_11;
LABEL_9:
      v7 = *(_QWORD *)(v5 + 72);
      swift_bridgeObjectRetain();
      swift_release();
      sub_E6894C(v7);
      ++v3;
      if (v6 == v2)
        goto LABEL_16;
    }
    v5 = *(_QWORD *)(a1 + 8 * v3);
    swift_retain();
    v6 = v3 - 3;
    if (!__OFADD__(v4, 1))
      goto LABEL_9;
LABEL_11:
    __break(1u);
LABEL_12:
    if (a1 < 0)
      v8 = a1;
    else
      v8 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v2 = _CocoaArrayWrapper.endIndex.getter(v8);
  }
LABEL_16:
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

_QWORD *sub_DF25A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if ((unint64_t)a1 >> 62)
    goto LABEL_12;
  v2 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  while (v2)
  {
    v3 = 4;
    while (1)
    {
      v4 = v3 - 4;
      if ((a1 & 0xC000000000000001) == 0)
        break;
      v5 = specialized _ArrayBuffer._getElementSlowPath(_:)(v3 - 4, a1);
      v6 = v3 - 3;
      if (__OFADD__(v4, 1))
        goto LABEL_11;
LABEL_9:
      v7 = *(_QWORD *)(v5 + 16);
      swift_bridgeObjectRetain();
      swift_release();
      sub_E68970(v7);
      ++v3;
      if (v6 == v2)
        goto LABEL_16;
    }
    v5 = *(_QWORD *)(a1 + 8 * v3);
    swift_retain();
    v6 = v3 - 3;
    if (!__OFADD__(v4, 1))
      goto LABEL_9;
LABEL_11:
    __break(1u);
LABEL_12:
    if (a1 < 0)
      v8 = a1;
    else
      v8 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v2 = _CocoaArrayWrapper.endIndex.getter(v8);
  }
LABEL_16:
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

void sub_DF26C8(char a1, double a2)
{
  char *v2;
  char *v3;
  double v4;
  double v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t i;
  uint64_t v41;
  void *v42;
  char *v43;
  __n128 v44;
  char isEscapingClosureAtFileLocation;
  uint64_t v46;
  _OWORD v47[34];
  _QWORD __dst[68];

  v3 = &v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs];
  v4 = *(double *)&v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs + 336];
  v5 = v4 + a2;
  if (*(double *)&v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_progress] != v4 + a2)
  {
    *(double *)&v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_progress] = v5;
    if (v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_isSelected] == 1)
    {
      if ((a1 & 1) != 0)
      {
        v6 = *(_QWORD *)&v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation];
        if (!v6)
          return;
        v7 = v3[40];
        v8 = *((_QWORD *)v3 + 6);
        v9 = v3[56];
        v10 = *((_QWORD *)v3 + 8);
        v11 = v3[72];
        v12 = *((_QWORD *)v3 + 22);
        v13 = v3[184];
        v14 = *((_QWORD *)v3 + 26);
        v15 = *((_QWORD *)v3 + 33);
        v16 = *((_QWORD *)v3 + 34);
        v17 = *((_QWORD *)v3 + 35);
        v18 = *((_QWORD *)v3 + 40);
        v19 = *((_QWORD *)v3 + 41);
        v20 = *((_QWORD *)v3 + 43);
        v21 = *((_QWORD *)v3 + 46);
        v22 = *((_QWORD *)v3 + 47);
        v23 = *((_QWORD *)v3 + 48);
        v24 = *((_QWORD *)v3 + 49);
        v25 = *((_QWORD *)v3 + 56);
        v26 = *((_QWORD *)v3 + 57);
        v27 = *((_QWORD *)v3 + 60);
        v28 = *((_QWORD *)v3 + 61);
        v29 = *((_QWORD *)v3 + 66);
        v30 = v3[536];
        *(_QWORD *)&v47[0] = *(_QWORD *)v3;
        *(_OWORD *)((char *)v47 + 8) = *(_OWORD *)(v3 + 8);
        *(_OWORD *)((char *)&v47[1] + 8) = *(_OWORD *)(v3 + 24);
        BYTE8(v47[2]) = v7;
        *(_QWORD *)&v47[3] = v8;
        BYTE8(v47[3]) = v9;
        *(_QWORD *)&v47[4] = v10;
        BYTE8(v47[4]) = v11;
        v31 = *((_OWORD *)v3 + 6);
        v47[5] = *((_OWORD *)v3 + 5);
        v47[6] = v31;
        v32 = *((_OWORD *)v3 + 8);
        v47[7] = *((_OWORD *)v3 + 7);
        v47[8] = v32;
        v33 = *((_OWORD *)v3 + 10);
        v47[9] = *((_OWORD *)v3 + 9);
        v47[10] = v33;
        *(_QWORD *)&v47[11] = v12;
        BYTE8(v47[11]) = v13;
        v47[12] = *((_OWORD *)v3 + 12);
        *(_OWORD *)((char *)&v47[13] + 8) = *(_OWORD *)(v3 + 216);
        *(_OWORD *)((char *)&v47[14] + 8) = *(_OWORD *)(v3 + 232);
        *(_OWORD *)((char *)&v47[15] + 8) = *(_OWORD *)(v3 + 248);
        *(_QWORD *)&v47[13] = v14;
        *((_QWORD *)&v47[16] + 1) = v15;
        *(_QWORD *)&v47[17] = v16;
        *((_QWORD *)&v47[17] + 1) = v17;
        v34 = *((_OWORD *)v3 + 19);
        v47[18] = *((_OWORD *)v3 + 18);
        v47[19] = v34;
        *(_QWORD *)&v47[20] = v18;
        *((_QWORD *)&v47[20] + 1) = v19;
        *(double *)&v47[21] = v4;
        *((_QWORD *)&v47[21] + 1) = v20;
        v47[22] = *((_OWORD *)v3 + 22);
        *(_QWORD *)&v47[23] = v21;
        *((_QWORD *)&v47[23] + 1) = v22;
        *(_QWORD *)&v47[24] = v23;
        *((_QWORD *)&v47[24] + 1) = v24;
        v35 = *((_OWORD *)v3 + 26);
        v47[25] = *((_OWORD *)v3 + 25);
        v47[26] = v35;
        v47[27] = *((_OWORD *)v3 + 27);
        *(_QWORD *)&v47[28] = v25;
        *((_QWORD *)&v47[28] + 1) = v26;
        v47[29] = *((_OWORD *)v3 + 29);
        *(_QWORD *)&v47[30] = v27;
        *((_QWORD *)&v47[30] + 1) = v28;
        v36 = *((_OWORD *)v3 + 32);
        v47[31] = *((_OWORD *)v3 + 31);
        v47[32] = v36;
        *(_QWORD *)&v47[33] = v29;
        BYTE8(v47[33]) = v30;
        memcpy(__dst, v47, 0x219uLL);
        v37 = v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_direction];
        v38 = *(_QWORD *)(v6 + 24);
        if (!((unint64_t)v38 >> 62))
        {
          v39 = *(_QWORD *)((char *)&dword_10 + (v38 & 0xFFFFFFFFFFFFF8));
          swift_retain();
          sub_533134((uint64_t)v47);
          swift_bridgeObjectRetain();
          if (v39)
          {
LABEL_7:
            if (v39 < 1)
            {
              __break(1u);
              return;
            }
            for (i = 0; i != v39; ++i)
            {
              if ((v38 & 0xC000000000000001) != 0)
                specialized _ArrayBuffer._getElementSlowPath(_:)(i, v38);
              else
                swift_retain();
              sub_DF69A8((uint64_t)__dst, v37, v5);
              swift_release();
            }
          }
LABEL_19:
          swift_bridgeObjectRelease();
          sub_532E70((uint64_t)v47);
          swift_release();
          return;
        }
      }
      else
      {
        v37 = objc_opt_self(UIView);
        v41 = swift_allocObject(&unk_13C5C90, 32, 7);
        *(_QWORD *)(v41 + 16) = v2;
        *(double *)(v41 + 24) = v5;
        v38 = swift_allocObject(&unk_13C5CB8, 32, 7);
        *(_QWORD *)(v38 + 16) = sub_DF4D50;
        *(_QWORD *)(v38 + 24) = v41;
        __dst[4] = sub_62604;
        __dst[5] = v38;
        __dst[0] = _NSConcreteStackBlock;
        __dst[1] = 1107296256;
        __dst[2] = sub_3A1A94;
        __dst[3] = &block_descriptor_340;
        v42 = _Block_copy(__dst);
        v43 = v2;
        swift_retain();
        objc_msgSend((id)v37, "performWithoutAnimation:", v42, swift_release().n128_f64[0]);
        _Block_release(v42);
        isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v38, "", 124, 84, 48, 1, v44);
        swift_release();
        swift_release();
        if ((isEscapingClosureAtFileLocation & 1) == 0)
          return;
        __break(1u);
      }
      if (v38 < 0)
        v46 = v38;
      else
        v46 = v38 & 0xFFFFFFFFFFFFFF8;
      swift_retain();
      sub_533134((uint64_t)v47);
      swift_bridgeObjectRetain();
      v39 = _CocoaArrayWrapper.endIndex.getter(v46);
      if (v39)
        goto LABEL_7;
      goto LABEL_19;
    }
  }
}

void sub_DF2AA0(uint64_t a1, double a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  uint64_t v9;
  _BYTE v10[544];

  v2 = *(_QWORD *)(a1
                 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation);
  if (v2)
  {
    memcpy(v10, (const void *)(a1 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs), 0x219uLL);
    v5 = *(unsigned __int8 *)(a1
                            + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_direction);
    v6 = *(_QWORD *)(v2 + 24);
    if ((unint64_t)v6 >> 62)
    {
      if (v6 < 0)
        v9 = *(_QWORD *)(v2 + 24);
      else
        v9 = v6 & 0xFFFFFFFFFFFFFF8;
      swift_retain();
      sub_533134((uint64_t)v10);
      swift_bridgeObjectRetain();
      v7 = _CocoaArrayWrapper.endIndex.getter(v9);
      if (v7)
        goto LABEL_4;
    }
    else
    {
      v7 = *(_QWORD *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFF8));
      swift_retain();
      sub_533134((uint64_t)v10);
      swift_bridgeObjectRetain();
      if (v7)
      {
LABEL_4:
        if (v7 < 1)
        {
          __break(1u);
          return;
        }
        for (i = 0; i != v7; ++i)
        {
          if ((v6 & 0xC000000000000001) != 0)
            specialized _ArrayBuffer._getElementSlowPath(_:)(i, v6);
          else
            swift_retain();
          sub_DF69A8((uint64_t)v10, v5, a2);
          swift_release();
        }
      }
    }
    swift_bridgeObjectRelease();
    sub_532E70((uint64_t)v10);
    swift_release();
  }
}

id sub_DF2BFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  _BYTE *v6;
  _BYTE *v7;
  _QWORD *v11;
  char v12;
  double v13;
  uint64_t v14;
  void *v15;
  double v16;

  v7 = v6;
  v11 = &v7[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_text];
  v12 = a5 & 1;
  *v11 = a1;
  v11[1] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_words] = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_alignment] = a4;
  v7[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_direction] = v12;
  *(_QWORD *)&v7[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_capabilities] = a6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_DF3CB4(0);
  objc_msgSend(v7, "bounds");
  sub_DF3424(v13);
  if (v7[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_isSelected] == 1)
  {
    sub_DF3F58();
    v14 = OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView;
    objc_msgSend(*(id *)&v7[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView], "removeFromSuperview");
    v15 = *(void **)&v7[v14];
    *(_QWORD *)&v7[v14] = 0;

  }
  else
  {
    sub_DF3D48();
    if (*(_QWORD *)&v7[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation])
    {
      swift_retain();
      sub_DF5030();
      *(_QWORD *)&v16 = swift_release().n128_u64[0];
    }
  }
  objc_msgSend(v7, "setNeedsLayout", v16);
  return objc_msgSend(v7, "layoutIfNeeded");
}

id sub_DF2D5C(uint64_t a1, uint64_t a2, uint64_t a3, void *__src, char a5, uint64_t a6, char a7, uint64_t a8)
{
  _BYTE *v8;
  char v14;
  uint64_t v15;
  char v16;
  _QWORD *v17;
  objc_super v19;

  v14 = a5 & 1;
  v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_isScrolling] = 1;
  v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_isSelected] = 0;
  v15 = OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_progress;
  *(_QWORD *)&v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_progress] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_framesetter] = 0;
  v16 = a7 & 1;
  *(_QWORD *)&v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView] = 0;
  memcpy(&v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs], __src, 0x219uLL);
  *(_QWORD *)&v8[v15] = 0;
  v17 = &v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_text];
  *v17 = a1;
  v17[1] = a2;
  *(_QWORD *)&v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_words] = a3;
  v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_kind] = v14;
  *(_QWORD *)&v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_alignment] = a6;
  v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_direction] = v16;
  *(_QWORD *)&v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_capabilities] = a8;
  v19.receiver = v8;
  v19.super_class = (Class)_s8TextViewCMa();
  return objc_msgSendSuper2(&v19, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
}

void sub_DF2F20()
{
  char *v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  void *v4;
  double v5;
  void *v6;
  objc_super v7;

  v7.receiver = v0;
  v7.super_class = (Class)_s8TextViewCMa();
  objc_msgSendSuper2(&v7, "layoutSubviews");
  v1 = OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation;
  if (*(_QWORD *)&v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation])
  {
    swift_retain();
    sub_DF5030();
    swift_release();
  }
  *(_QWORD *)&v0[v1] = 0;
  *(_QWORD *)&v2 = swift_release().n128_u64[0];
  v3 = OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView], "removeFromSuperview", v2);
  v4 = *(void **)&v0[v3];
  *(_QWORD *)&v0[v3] = 0;

  objc_msgSend(v0, "bounds");
  sub_DF3424(v5);
  if (v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_isSelected] == 1)
  {
    sub_DF3F58();
    objc_msgSend(*(id *)&v0[v3], "removeFromSuperview");
    v6 = *(void **)&v0[v3];
    *(_QWORD *)&v0[v3] = 0;

  }
  else
  {
    sub_DF3D48();
    if (*(_QWORD *)&v0[v1])
    {
      swift_retain();
      sub_DF5030();
      swift_release();
    }
  }
  sub_DF26C8(0, *(double *)&v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_progress]);
}

double sub_DF3084(double a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  CTParagraphStyleRef v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t inited;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  NSString *v20;
  id v21;
  NSString *v22;
  id v23;
  NSString v24;
  Class isa;
  const __CFAttributedString *v26;
  uint64_t v27;
  void *v28;
  const __CTFramesetter *v29;
  CTFramesetterRef v30;
  void *v31;
  id v32;
  double v33;
  double v34;
  char v36;
  char v37;
  CTParagraphStyleSetting v38;
  int v39;
  uint64_t v40;
  char *v41;
  _BYTE v42[112];
  _QWORD v43[4];

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_text);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_text + 8);
  swift_bridgeObjectRetain();
  LOBYTE(v3) = String.containsExcessiveHeightCharacters.getter(v3, v4);
  swift_bridgeObjectRelease();
  if ((v3 & 1) != 0)
  {
    NSTextAlignment.ctTextAlignment.getter(*(_QWORD *)(v1
                                                     + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_alignment));
    v38.spec = kCTParagraphStyleSpecifierLineBoundsOptions;
    v38.valueSize = 8;
    v38.value = &v37;
    v39 = 0;
    v40 = 1;
    v41 = &v36;
    v5 = CTParagraphStyleCreate(&v38, 2uLL);
    type metadata accessor for CTParagraphStyle(0);
  }
  else
  {
    v5 = (CTParagraphStyleRef)objc_msgSend(objc_allocWithZone((Class)NSMutableParagraphStyle), "init");
    -[__CTParagraphStyle setAlignment:](v5, "setAlignment:", *(_QWORD *)(v1 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_alignment));
    v7 = v1 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs;
    if ((*(_BYTE *)(v1 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs + 184) & 1) == 0)
    {
      v8 = *(double *)(v7 + 176);
      v9 = OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_kind;
      if (*(_BYTE *)(v1 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_kind))
        v10 = 192;
      else
        v10 = 168;
      objc_msgSend(*(id *)(v7 + v10), "ascender");
      if (*(_BYTE *)(v1 + v9))
        v12 = 192;
      else
        v12 = 168;
      v13 = v8 - v11;
      objc_msgSend(*(id *)(v7 + v12), "descender");
      -[__CTParagraphStyle setLineSpacing:](v5, "setLineSpacing:", v13 + v14);
    }
    v6 = sub_4E684(0, &qword_1507A98, NSMutableParagraphStyle_ptr);
  }
  v43[3] = v6;
  v43[0] = v5;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1507AA0);
  inited = swift_initStackObject(v15, v42);
  *(_OWORD *)(inited + 16) = xmmword_105F890;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  v17 = 168;
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_kind))
    v17 = 192;
  v18 = *(void **)(v1 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs + v17);
  v19 = sub_4E684(0, (unint64_t *)&qword_1506538, UIFont_ptr);
  *(_QWORD *)(inited + 40) = v18;
  *(_QWORD *)(inited + 64) = v19;
  *(_QWORD *)(inited + 72) = NSParagraphStyleAttributeName;
  sub_95094((uint64_t)v43, inited + 80);
  swift_bridgeObjectRetain();
  v20 = NSFontAttributeName;
  v21 = v18;
  v22 = NSParagraphStyleAttributeName;
  sub_DB9B94(inited);
  v23 = objc_allocWithZone((Class)NSAttributedString);
  v24 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  _s3__C3KeyVMa_2(0);
  sub_DF4CE4();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v26 = (const __CFAttributedString *)objc_msgSend(v23, "initWithString:attributes:", v24, isa, swift_bridgeObjectRelease().n128_f64[0]);

  v27 = OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_framesetter;
  v28 = *(void **)(v1 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_framesetter);
  if (v28)
  {
    v29 = *(const __CTFramesetter **)(v1
                                    + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_framesetter);
  }
  else
  {
    v30 = CTFramesetterCreateWithAttributedString(v26);
    v31 = *(void **)(v1 + v27);
    *(_QWORD *)(v1 + v27) = v30;
    v29 = v30;

    v28 = 0;
  }
  v32 = v28;
  v33 = CTFramesetterRef.suggestedFrameSize(constraints:)(a1, INFINITY);
  CTFramesetterRef.createFrame(_:)(0.0, 0.0, v33, v34);

  __swift_destroy_boxed_opaque_existential_1(v43);
  return v33;
}

void sub_DF3424(double a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  CGRect v15;

  v2 = v1;
  objc_msgSend(v1, "bounds");
  if (CGRectGetHeight(v15) != 0.0)
  {
    v4 = OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation;
    if (!*(_QWORD *)&v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation])
    {
      v5 = sub_DF3084(a1);
      v7 = v6;
      v8 = v5;
      v10 = v9;
      swift_bridgeObjectRetain();
      CTFrameRef.linesWithFrames(flippedCoordinates:useExtendedLineBounds:)(1, 0);
      __chkstk_darwin();
      v12 = sub_DF43B8(v11, (uint64_t (*)(double, double, double, double))sub_DF43A8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v13 = _s5FrameCMa();
      v14 = swift_allocObject(v13, 88, 7);
      *(_QWORD *)(v14 + 64) = 0;
      *(_BYTE *)(v14 + 72) = 2;
      *(_QWORD *)(v14 + 80) = 0;
      *(_QWORD *)(v14 + 16) = v7;
      *(_QWORD *)(v14 + 24) = v12;
      *(_QWORD *)(v14 + 32) = 0;
      *(_QWORD *)(v14 + 40) = 0;
      *(double *)(v14 + 48) = v8;
      *(_QWORD *)(v14 + 56) = v10;
      *(_QWORD *)&v2[v4] = v14;
      swift_release();
    }
  }
}

uint64_t sub_DF3578(void *a1, void *a2, double a3, double a4, double a5, double a6, uint64_t a7, uint64_t a8, char a9)
{
  _QWORD *v16;
  id v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;

  v16 = CTLineRef.glyphRuns.getter();
  v17 = a2;
  v18 = sub_DF49A0((unint64_t)v16, (uint64_t)v17);
  swift_bridgeObjectRelease();

  v19 = sub_DF44B0((uint64_t)v18, (uint64_t (*)(_QWORD *, id, uint64_t, uint64_t))sub_DF4CD4);
  swift_bridgeObjectRelease();
  v20 = _s4LineCMa();
  v21 = swift_allocObject(v20, 96, 7);
  *(_QWORD *)(v21 + 72) = 0;
  *(_BYTE *)(v21 + 80) = 0;
  *(_QWORD *)(v21 + 88) = 0;
  *(_QWORD *)(v21 + 16) = v19;
  *(_QWORD *)(v21 + 24) = a1;
  *(double *)(v21 + 40) = a3;
  *(double *)(v21 + 48) = a4;
  *(double *)(v21 + 56) = a5;
  *(double *)(v21 + 64) = a6;
  *(_BYTE *)(v21 + 32) = a9;
  v22 = a1;
  return v21;
}

Swift::Int sub_DF367C(__int128 *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, CGFloat a7, CGFloat a8, CGFloat a9, CGFloat a10)
{
  __C::_NSRange v20;
  Swift::Int location;
  __C::_NSRange_optional v22;
  Swift::Int length;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  Swift::Int v29;
  uint64_t v30;
  char v31;
  char v32;
  Swift::Int v33;
  char v34;
  char v35;
  Swift::Int v36;
  char v37;
  unint64_t v38;
  double v39;
  __C::_NSRange v40;
  double v41;
  CGFloat Height;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v53;
  Swift::Int v54;
  uint64_t v55;
  __int128 v56;
  __C::_NSRange v57;
  CGRect v58;

  CTRunRef.cfStringRange.getter();
  v20.location = sub_DE23D8(*((_QWORD *)a1 + 2));
  v22 = _NSRange.intersection(_:)(v20);
  location = v22.value.location;
  v22.value.location = 0;
  if (!v22.is_nil)
  {
    length = v22.value.length;
    if (v22.value.length >= 1)
    {
      v24 = Range<>.init(_:in:)(location, v22.value.length, a5, a6);
      if ((v26 & 1) == 0)
      {
        v27 = v24;
        v55 = v25;
        v28 = CTRunRef.status.getter();
        v22.value.location = location;
        if ((v28 & 1) != 0)
        {
          v29 = location + length;
          if (__OFADD__(location, length))
          {
LABEL_23:
            __break(1u);
            goto LABEL_24;
          }
          v22.value.location = v29 - 1;
          if (__OFSUB__(v29, 1))
          {
LABEL_24:
            __break(1u);
            goto LABEL_25;
          }
        }
        v53 = v27;
        v30 = sub_E08C90(v22.value.location, a4);
        if ((v31 & 1) == 0)
          goto LABEL_16;
        v32 = CTRunRef.status.getter();
        v22.value.location = location;
        if ((v32 & 1) != 0)
        {
          v33 = location + length;
          if (__OFADD__(location, length))
          {
LABEL_25:
            __break(1u);
            goto LABEL_26;
          }
          v22.value.location = v33 - 2;
          if (__OFSUB__(v33, 2))
          {
LABEL_26:
            __break(1u);
            goto LABEL_27;
          }
        }
        v30 = sub_E08C90(v22.value.location, a4);
        if ((v34 & 1) == 0)
          goto LABEL_16;
        v35 = CTRunRef.status.getter();
        v22.value.location = location;
        if ((v35 & 1) != 0)
        {
          v36 = location + length;
          if (__OFADD__(location, length))
          {
LABEL_27:
            __break(1u);
            goto LABEL_28;
          }
          v22.value.location = v36 - 3;
          if (__OFSUB__(v36, 3))
          {
LABEL_28:
            __break(1u);
            return v22.value.location;
          }
        }
        v30 = sub_E08C90(v22.value.location, a4);
        if ((v37 & 1) == 0)
        {
LABEL_16:
          v38 = v30;
          v22.value.location = String.subscript.getter(v53, v55, a5, a6);
          if ((v38 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else
          {
            v54 = v22.value.location;
            if (v38 < *(_QWORD *)(a3 + 16))
            {
              v39 = *(double *)(a3 + 16 * v38 + 32);
              v40.location = location;
              v40.length = length;
              v57 = CTRunRef.convertToGlyphRange(textRange:)(v40);
              v41 = CTRunRef.typographicBounds(range:)((CFRange)v57);
              v58.origin.x = a7;
              v58.origin.y = a8;
              v58.size.width = a9;
              v58.size.height = a10;
              Height = CGRectGetHeight(v58);
              v43 = a2;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v44 = swift_bridgeObjectRetain();
              sub_DF47F8(v44, v43, a5, a6, a4, a3, v39, a7, a8, a9, a10);
              v46 = v45;
              swift_bridgeObjectRelease();

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v56 = *a1;
              swift_bridgeObjectRetain();
              sub_1391E0((uint64_t)&v56);
              v47 = static String._fromSubstring(_:)(v54);
              v49 = v48;
              swift_bridgeObjectRelease();
              v50 = _s4WordCMa();
              v22.value.location = swift_allocObject(v50, 144, 7);
              *(_BYTE *)(v22.value.location + 88) = 2;
              *(_QWORD *)(v22.value.location + 128) = 0;
              *(_QWORD *)(v22.value.location + 136) = 0;
              v51 = a1[1];
              *(_OWORD *)(v22.value.location + 16) = *a1;
              *(_OWORD *)(v22.value.location + 32) = v51;
              *(_BYTE *)(v22.value.location + 48) = *((_BYTE *)a1 + 32);
              *(_QWORD *)(v22.value.location + 56) = v47;
              *(_QWORD *)(v22.value.location + 64) = v49;
              *(_QWORD *)(v22.value.location + 72) = v46;
              *(_QWORD *)(v22.value.location + 80) = 0;
              *(double *)(v22.value.location + 96) = v39;
              *(_QWORD *)(v22.value.location + 104) = 0;
              *(double *)(v22.value.location + 112) = v41;
              *(CGFloat *)(v22.value.location + 120) = Height;
              return v22.value.location;
            }
          }
          __break(1u);
          goto LABEL_23;
        }
      }
      v22.value.location = 0;
    }
  }
  return v22.value.location;
}

Swift::Int sub_DF3970@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, Swift::Int *a7@<X8>, double a8@<D0>, CGFloat a9@<D1>, CGFloat a10@<D2>, CGFloat a11@<D3>, CGFloat a12@<D4>)
{
  uint64_t v22;
  uint64_t v23;
  Swift::Int v24;
  Swift::Int v25;
  __C::_NSRange v26;
  Swift::Int location;
  __C::_NSRange_optional v28;
  Swift::Int length;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  Swift::Int v34;
  uint64_t v35;
  char v36;
  char v37;
  Swift::Int v38;
  char v39;
  char v40;
  Swift::Int v41;
  char v42;
  unint64_t v43;
  double v44;
  __C::_NSRange v45;
  CGFloat Height;
  __C::_NSRange v47;
  __C::_NSRange v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  double v57;
  double v58;
  uint64_t v59;
  Swift::Int v60;
  uint64_t v61;
  uint64_t v62;
  Swift::Int v63;
  uint64_t v64;
  uint64_t v65;
  __C::_NSRange v67;
  CGRect v68;

  v23 = *a1;
  v22 = a1[1];
  v24 = a1[4];
  v64 = a1[3];
  v65 = a1[2];
  v25 = a1[5];
  v62 = a1[6];
  CTRunRef.cfStringRange.getter();
  v63 = v24;
  v26.location = v24;
  v26.length = v25;
  v28 = _NSRange.intersection(_:)(v26);
  location = v28.value.location;
  v28.value.location = 0;
  if (v28.is_nil)
    goto LABEL_20;
  length = v28.value.length;
  if (v28.value.length < 1)
    goto LABEL_20;
  v30 = Range<>.init(_:in:)(location, v28.value.length, a3, a4);
  if ((v32 & 1) != 0)
  {
    v28.value.location = 0;
    goto LABEL_20;
  }
  v59 = v31;
  v61 = v30;
  v33 = CTRunRef.status.getter();
  v28.value.location = location;
  if ((v33 & 1) != 0)
  {
    v34 = location + length;
    if (__OFADD__(location, length))
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v28.value.location = v34 - 1;
    if (__OFSUB__(v34, 1))
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
  }
  v35 = sub_E08C90(v28.value.location, a5);
  if ((v36 & 1) != 0)
  {
    v37 = CTRunRef.status.getter();
    v28.value.location = location;
    if ((v37 & 1) != 0)
    {
      v38 = location + length;
      if (__OFADD__(location, length))
      {
LABEL_26:
        __break(1u);
        goto LABEL_27;
      }
      v28.value.location = v38 - 2;
      if (__OFSUB__(v38, 2))
      {
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
    }
    v35 = sub_E08C90(v28.value.location, a5);
    if ((v39 & 1) != 0)
    {
      v40 = CTRunRef.status.getter();
      v28.value.location = location;
      if ((v40 & 1) != 0)
      {
        v41 = location + length;
        if (__OFADD__(location, length))
        {
LABEL_28:
          __break(1u);
          goto LABEL_29;
        }
        v28.value.location = v41 - 3;
        if (__OFSUB__(v41, 3))
        {
LABEL_29:
          __break(1u);
          return v28.value.location;
        }
      }
      v35 = sub_E08C90(v28.value.location, a5);
      if ((v42 & 1) != 0)
      {
        v28.value.location = 0;
        goto LABEL_20;
      }
    }
  }
  v43 = v35;
  v28.value.location = String.subscript.getter(v61, v59, a3, a4);
  if ((v43 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  v60 = v28.value.location;
  if (v43 >= *(_QWORD *)(a6 + 16))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v44 = *(double *)(a6 + 16 * v43 + 32);
  v45.location = location;
  v45.length = length;
  v67 = CTRunRef.convertToGlyphRange(textRange:)(v45);
  v58 = CTRunRef.typographicBounds(range:)((CFRange)v67);
  v57 = v44 - a8;
  v68.origin.x = a9;
  v68.origin.y = a10;
  v68.size.width = a11;
  v68.size.height = a12;
  Height = CGRectGetHeight(v68);
  v47.location = location;
  v47.length = length;
  v48 = CTRunRef.convertToGlyphRange(textRange:)(v47);
  swift_bridgeObjectRetain();
  v49 = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_DF4610(a8, a9, a10, a11, a12, v48.location, v48.length, a6, (uint64_t)v49, a3, a4, a5);
  v51 = v50;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v52 = static String._fromSubstring(_:)(v60);
  v54 = v53;
  swift_bridgeObjectRelease();
  v55 = _s8SyllableCMa();
  v28.value.location = swift_allocObject(v55, 152, 7);
  *(_QWORD *)(v28.value.location + 88) = v51;
  *(_QWORD *)(v28.value.location + 96) = 0;
  *(_BYTE *)(v28.value.location + 104) = 2;
  *(_QWORD *)(v28.value.location + 144) = 0;
  *(_QWORD *)(v28.value.location + 16) = v23;
  *(_QWORD *)(v28.value.location + 24) = v22;
  *(_QWORD *)(v28.value.location + 32) = v65;
  *(_QWORD *)(v28.value.location + 40) = v64;
  *(_QWORD *)(v28.value.location + 48) = v63;
  *(_QWORD *)(v28.value.location + 56) = v25;
  *(_QWORD *)(v28.value.location + 64) = v62;
  *(_QWORD *)(v28.value.location + 72) = v52;
  *(_QWORD *)(v28.value.location + 80) = v54;
  *(double *)(v28.value.location + 112) = v57;
  *(_QWORD *)(v28.value.location + 120) = 0;
  *(double *)(v28.value.location + 128) = v58;
  *(CGFloat *)(v28.value.location + 136) = Height;
LABEL_20:
  *a7 = v28.value.location;
  return v28.value.location;
}

void sub_DF3CB4(char a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  void *v7;

  v2 = v1;
  if ((a1 & 1) == 0)
  {
    v3 = *(void **)(v1 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_framesetter);
    *(_QWORD *)(v1 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_framesetter) = 0;

  }
  v4 = OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation;
  if (*(_QWORD *)(v1
                 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation))
  {
    swift_retain();
    sub_DF5030();
    swift_release();
  }
  *(_QWORD *)(v1 + v4) = 0;
  *(_QWORD *)&v5 = swift_release().n128_u64[0];
  v6 = OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView;
  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView), "removeFromSuperview", v5);
  v7 = *(void **)(v2 + v6);
  *(_QWORD *)(v2 + v6) = 0;

}

void sub_DF3D48()
{
  char *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  void *v4;
  double v5;
  double v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  double v12;
  double v13;
  double v14;
  id v15;
  double v16;
  id v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  id v24;
  id v25;

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation];
  if (v1)
  {
    v2 = v0;
    v3 = OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView;
    if (!*(_QWORD *)&v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView])
    {
      v4 = *(void **)(v1 + 16);
      v5 = *(double *)(v1 + 48);
      v6 = *(double *)(v1 + 56);
      v7 = objc_allocWithZone((Class)type metadata accessor for CTLabel.Frame());
      v8 = v4;
      swift_retain();
      v9 = CTLabel.Frame.init(ctFrame:suggestedSize:colorOverride:)(v8, 0, v5, v6);
      objc_msgSend(v9, "setOpaque:", 0);
      v10 = *(_QWORD *)&v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_alignment];
      if (v10 == 1)
      {
        v15 = v9;
        objc_msgSend(v2, "bounds");
        v13 = (v16 - v5) * 0.5;
        v14 = 0.0;
      }
      else if (v10 == 2)
      {
        v11 = v9;
        objc_msgSend(v2, "bounds");
        v13 = v12 - v5;
        v14 = 0.0;
      }
      else
      {
        v17 = v9;
        objc_msgSend(v2, "bounds");
        v5 = v18;
        v6 = v19;
      }
      objc_msgSend(v9, "setFrame:", v13, v14, v5, v6);

      objc_msgSend(v2, "bounds");
      v24 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", v20, v21, v22, v23);
      objc_msgSend(v24, "setBackgroundColor:", *(_QWORD *)&v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs + 248]);
      objc_msgSend(v24, "setMaskView:", v9);
      objc_msgSend(v2, "addSubview:", v24);
      v25 = *(id *)&v2[v3];
      *(_QWORD *)&v2[v3] = v24;
      swift_release();

    }
  }
}

void sub_DF3F58()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  char v3;
  void **v4;
  uint64_t v5;
  void *v6;
  void **v7;
  void **v8;
  void *v9;
  uint64_t v10;
  BOOL v11;
  char v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  double v18;
  double v19;
  double v20;
  double v21;
  id v22;
  double v23;
  double v24;
  double v25;
  _BYTE v26[544];

  v1 = v0;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation];
  if (v2 && !*(_QWORD *)(v2 + 80))
  {
    v3 = v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_kind];
    v4 = (void **)&v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs];
    v5 = 21;
    if (v3)
      v5 = 24;
    v6 = v4[v5];
    v7 = v4 + 33;
    if ((v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_kind] & 1) == 0)
      v7 = v4 + 30;
    if (v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_isSelected] == 1)
      v8 = v7;
    else
      v8 = v4 + 31;
    v9 = *v8;
    memcpy(v26, v4, 0x219uLL);
    v10 = *(_QWORD *)&v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_capabilities];
    v11 = !sub_E08ABC(1, v10) && !sub_E08ABC(2, v10);
    v12 = v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_direction];
    swift_retain();
    v13 = v6;
    v14 = v9;
    sub_533134((uint64_t)v26);
    v15 = (void *)sub_DF54D8(v13, v14, v3, v26, v11, v12);
    sub_532E70((uint64_t)v26);
    swift_release();

    v16 = *(_QWORD *)&v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_alignment];
    if (v16 == 1)
    {
      v22 = v15;
      objc_msgSend(v1, "bounds");
      v24 = v23;
      objc_msgSend(v22, "bounds");
      v21 = (v24 - v25) * 0.5;
    }
    else
    {
      if (v16 != 2)
      {
LABEL_18:
        objc_msgSend(v1, "addSubview:", v15);

        return;
      }
      v17 = v15;
      objc_msgSend(v1, "bounds");
      v19 = v18;
      objc_msgSend(v17, "bounds");
      v21 = v19 - v20;
    }
    objc_msgSend(v15, "frame");
    objc_msgSend(v15, "setFrame:", v21);

    goto LABEL_18;
  }
}

id sub_DF419C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)_s8TextViewCMa();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t _s8TextViewCMa()
{
  return objc_opt_self(_TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView);
}

uint64_t _s8TextViewC4KindOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_DF42E0 + 4 * byte_10AC8A5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_DF4314 + 4 * byte_10AC8A0[v4]))();
}

uint64_t sub_DF4314(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_DF431C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xDF4324);
  return result;
}

uint64_t sub_DF4330(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xDF4338);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_DF433C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_DF4344(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s8TextViewC4KindOMa()
{
  return &_s8TextViewC4KindON;
}

unint64_t sub_DF4364()
{
  unint64_t result;

  result = qword_1507A90;
  if (!qword_1507A90)
  {
    result = swift_getWitnessTable(&unk_10AC8B8, &_s8TextViewC4KindON);
    atomic_store(result, (unint64_t *)&qword_1507A90);
  }
  return result;
}

uint64_t sub_DF43A8(void *a1, double a2, double a3, double a4, double a5)
{
  uint64_t v5;

  return sub_DF3578(a1, *(void **)(v5 + 16), a2, a3, a4, a5, *(_QWORD *)(v5 + 24), *(_QWORD *)(v5 + 32), *(_BYTE *)(v5 + 40));
}

_QWORD *sub_DF43B8(uint64_t a1, uint64_t (*a2)(double, double, double, double))
{
  uint64_t v3;
  _QWORD *result;
  double *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = *(_QWORD *)(a1 + 16);
  result = _swiftEmptyArrayStorage;
  if (v3)
  {
    specialized ContiguousArray.reserveCapacity(_:)(v3);
    v6 = (double *)(a1 + 64);
    do
    {
      v7 = *(v6 - 3);
      v8 = *(v6 - 2);
      v9 = *(v6 - 1);
      v10 = *v6;
      v11 = *((id *)v6 - 4);
      v12 = a2(v7, v8, v9, v10);

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v13);
      v14 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v14);
      v15 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v12);
      specialized ContiguousArray._endMutation()(v15);
      v6 += 5;
      --v3;
    }
    while (v3);
    return _swiftEmptyArrayStorage;
  }
  return result;
}

_QWORD *sub_DF44B0(uint64_t a1, uint64_t (*a2)(_QWORD *, id, uint64_t, uint64_t))
{
  _QWORD *result;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD v21[4];
  char v22;
  unint64_t v23;

  result = _swiftEmptyArrayStorage;
  v23 = (unint64_t)_swiftEmptyArrayStorage;
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    v19 = a1;
    v5 = (uint64_t *)(a1 + 48);
    do
    {
      v7 = *(v5 - 1);
      v9 = *v5;
      v8 = v5[1];
      v10 = *((_BYTE *)v5 + 16);
      v11 = (void *)v5[3];
      v12 = v5[4];
      v13 = v5[5];
      v21[0] = *(v5 - 2);
      v21[1] = v7;
      v21[2] = v9;
      v21[3] = v8;
      v22 = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v14 = v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v15 = a2(v21, v14, v12, v13);
      swift_bridgeObjectRelease(v13);
      swift_bridgeObjectRelease(v12);

      swift_bridgeObjectRelease(v9);
      v16 = swift_bridgeObjectRelease(v7);
      if (v15)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v16);
        v18 = *(_QWORD *)((char *)&dword_10 + (v23 & 0xFFFFFFFFFFFFFF8));
        v17 = *(_QWORD *)((char *)&dword_18 + (v23 & 0xFFFFFFFFFFFFFF8));
        if (v18 >= v17 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v17 > 1, v18 + 1, 1);
        v6 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v15);
        specialized Array._endMutation()(v6);
      }
      v5 += 8;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease(v19);
    return (_QWORD *)v23;
  }
  return result;
}

void sub_DF4610(double a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  CFRange v25;
  unint64_t location;
  double v27;
  double v28;
  double Height;
  double v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[5];
  char v42;
  _QWORD *v43;
  CGRect v44;

  v43 = _swiftEmptyArrayStorage;
  specialized ContiguousArray.reserveCapacity(_:)(0);
  _NSRange.makeIterator()();
  v41[2] = v21;
  v41[3] = v22;
  v41[4] = v23;
  v42 = v24 & 1;
  *(Swift::Int_optional *)&v25.location = _NSRange.NSRangeIterator.next()();
  if ((v25.length & 1) == 0)
  {
    location = v25.location;
    while ((location & 0x8000000000000000) == 0)
    {
      if (location >= *(_QWORD *)(a8 + 16))
        goto LABEL_9;
      v27 = *(double *)(a8 + 32 + 16 * location);
      v25.location = location;
      v28 = CTRunRef.typographicBounds(forGlyphAtIndex:)(v25);
      v44.origin.x = a2;
      v44.origin.y = a3;
      v44.size.width = a4;
      v44.size.height = a5;
      Height = CGRectGetHeight(v44);
      if (location >= *(_QWORD *)(a12 + 16))
        goto LABEL_10;
      v30 = Height;
      v31 = *(_QWORD *)(a12 + 32 + 8 * location);
      v41[0] = a10;
      v41[1] = a11;
      v32 = sub_DD0BF8();
      swift_bridgeObjectRetain();
      v33 = String.Index.init<A>(utf16Offset:in:)(v31, v41, &type metadata for String, v32);
      v34 = String.subscript.getter(v33, a10, a11);
      v36 = v35;
      v37 = _s5GlyphCMa();
      v38 = swift_allocObject(v37, 72, 7);
      *(_QWORD *)(v38 + 64) = 0;
      *(_QWORD *)(v38 + 16) = v34;
      *(_QWORD *)(v38 + 24) = v36;
      *(double *)(v38 + 32) = v27 - a1;
      *(_QWORD *)(v38 + 40) = 0;
      *(double *)(v38 + 48) = v28;
      *(double *)(v38 + 56) = v30;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v38);
      v39 = v43[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v39);
      v40 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v39, v38);
      specialized ContiguousArray._endMutation()(v40);
      *(Swift::Int_optional *)&v25.location = _NSRange.NSRangeIterator.next()();
      location = v25.location;
      if ((v25.length & 1) != 0)
        return;
    }
    __break(1u);
LABEL_9:
    __break(1u);
LABEL_10:
    __break(1u);
  }
}

void sub_DF47F8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7, CGFloat a8, CGFloat a9, CGFloat a10, CGFloat a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  Swift::Int v29;
  unint64_t v30;
  unint64_t v31;
  Swift::Int v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  unint64_t v40;

  v12 = v11;
  v40 = (unint64_t)_swiftEmptyArrayStorage;
  v14 = *(_QWORD *)(a1 + 16);
  if (v14)
  {
    swift_bridgeObjectRetain();
    v23 = (uint64_t *)(a1 + 48);
    do
    {
      v25 = v23[4];
      v26 = *v23;
      v27 = v23[1];
      v35 = *((_OWORD *)v23 - 1);
      v36 = v26;
      v37 = v27;
      v38 = *((_OWORD *)v23 + 1);
      v39 = v25;
      swift_bridgeObjectRetain();
      sub_DF3970((uint64_t *)&v35, a2, a3, a4, a5, a6, &v34, a7, a8, a9, a10, a11);
      if (v12)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return;
      }
      swift_bridgeObjectRelease();
      v29 = v34;
      if (v34)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v28);
        v31 = *(_QWORD *)((char *)&dword_10 + (v40 & 0xFFFFFFFFFFFFFF8));
        v30 = *(_QWORD *)((char *)&dword_18 + (v40 & 0xFFFFFFFFFFFFFF8));
        if (v31 >= v30 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v30 > 1, v31 + 1, 1);
        v24 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v31, v29);
        specialized Array._endMutation()(v24);
      }
      v23 += 7;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease();
  }
}

_QWORD *sub_DF49A0(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  id v6;
  BOOL v7;
  uint64_t v8;
  int64_t v9;
  _QWORD *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  CFIndex v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  int64_t v22;
  int64_t v23;
  uint64_t isUniquelyReferenced_nonNull_native;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  _QWORD *v38;
  uint64_t v39;
  id v40;
  CFIndex v41;
  char v42;
  uint64_t v43;
  uint64_t v44;

  v2 = a1;
  if (a1 >> 62)
    goto LABEL_39;
  v3 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
LABEL_3:
  if (v3)
  {
    v4 = 0;
    v35 = OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_words;
    v36 = v2 & 0xC000000000000001;
    v32 = v2 + 32;
    v33 = v3;
    v5 = _swiftEmptyArrayStorage;
    v34 = v2;
    while (1)
    {
      if (v36)
      {
        v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v2);
        v7 = __OFADD__(v4++, 1);
        if (v7)
          goto LABEL_35;
      }
      else
      {
        v6 = *(id *)(v32 + 8 * v4);
        v7 = __OFADD__(v4++, 1);
        if (v7)
          goto LABEL_35;
      }
      v8 = *(_QWORD *)(a2 + v35);
      v9 = *(_QWORD *)(v8 + 16);
      if (v9)
      {
        v38 = v5;
        v39 = v4;
        v40 = v6;
        swift_bridgeObjectRetain();
        sub_DDED48(0, v9, 0);
        v10 = _swiftEmptyArrayStorage;
        v11 = (_BYTE *)(v8 + 64);
        do
        {
          v12 = *((_QWORD *)v11 - 3);
          v13 = *((_QWORD *)v11 - 2);
          v43 = *((_QWORD *)v11 - 1);
          v44 = *((_QWORD *)v11 - 4);
          v42 = *v11;
          swift_bridgeObjectRetain_n(v12, 2);
          swift_bridgeObjectRetain_n(v13, 2);
          v14 = v40;
          v41 = CTRunRef.positions.getter();
          v15 = CTRunRef.stringIndices.getter();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v17 = v10[2];
          v16 = v10[3];
          v18 = v10;
          if (v17 >= v16 >> 1)
          {
            sub_DDED48((_QWORD *)(v16 > 1), v17 + 1, 1);
            v18 = v10;
          }
          v18[2] = v17 + 1;
          v19 = &v18[8 * v17];
          v19[4] = v44;
          v19[5] = v12;
          v19[6] = v13;
          v19[7] = v43;
          *((_BYTE *)v19 + 64) = v42;
          v19[9] = v14;
          v19[10] = v41;
          v11 += 40;
          v19[11] = v15;
          --v9;
          v10 = v18;
        }
        while (v9);
        swift_bridgeObjectRelease();

        v3 = v33;
        v2 = v34;
        v5 = v38;
        v4 = v39;
      }
      else
      {

        v10 = _swiftEmptyArrayStorage;
      }
      v20 = v10;
      v21 = v10[2];
      v22 = v5[2];
      v23 = v22 + v21;
      if (__OFADD__(v22, v21))
        goto LABEL_36;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v5);
      if ((isUniquelyReferenced_nonNull_native & 1) != 0 && v23 <= v5[3] >> 1)
      {
        if (v20[2])
          goto LABEL_28;
      }
      else
      {
        if (v22 <= v23)
          v25 = v22 + v21;
        else
          v25 = v22;
        v5 = sub_DDE170((_QWORD *)isUniquelyReferenced_nonNull_native, v25, 1, v5);
        if (v20[2])
        {
LABEL_28:
          v26 = v5[2];
          if ((v5[3] >> 1) - v26 < v21)
            goto LABEL_37;
          v27 = (uint64_t)&v5[8 * v26 + 4];
          __swift_instantiateConcreteTypeFromMangledName(&qword_1507500);
          swift_arrayInitWithCopy(v27);
          if (v21)
          {
            v28 = v5[2];
            v7 = __OFADD__(v28, v21);
            v29 = v28 + v21;
            if (v7)
              goto LABEL_38;
            v5[2] = v29;
          }
          goto LABEL_6;
        }
      }
      if (v21)
      {
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        if (v2 < 0)
          v31 = v2;
        else
          v31 = v2 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        v3 = _CocoaArrayWrapper.endIndex.getter(v31);
        goto LABEL_3;
      }
LABEL_6:
      swift_bridgeObjectRelease();
      if (v4 == v3)
        goto LABEL_33;
    }
  }
  v5 = _swiftEmptyArrayStorage;
LABEL_33:
  swift_bridgeObjectRelease();
  return v5;
}

Swift::Int sub_DF4CD4(__int128 *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_DF367C(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), *(CGFloat *)(v4 + 32), *(CGFloat *)(v4 + 40), *(CGFloat *)(v4 + 48), *(CGFloat *)(v4 + 56));
}

unint64_t sub_DF4CE4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1506968;
  if (!qword_1506968)
  {
    _s3__C3KeyVMa_2(255);
    result = swift_getWitnessTable(&unk_10AAF20, v1);
    atomic_store(result, (unint64_t *)&qword_1506968);
  }
  return result;
}

uint64_t sub_DF4D2C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_DF4D50()
{
  uint64_t v0;

  sub_DF2AA0(*(_QWORD *)(v0 + 16), *(double *)(v0 + 24));
}

uint64_t sub_DF4D5C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t block_copy_helper_334(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double block_destroy_helper_334(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_DF4D84()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

id sub_DF4DA8()
{
  uint64_t v0;
  id result;
  double v2;

  result = *(id *)(*(_QWORD *)(v0 + 16)
                 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_gradientView);
  if (result)
  {
    v2 = 0.0;
    if (*(_BYTE *)(v0 + 24))
      v2 = 1.0;
    return objc_msgSend(result, "setAlpha:", v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_DF4DE4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

double sub_DF4E08()
{
  uint64_t v0;

  return sub_DF228C(*(_QWORD *)(v0 + 16));
}

void sub_DF4E10()
{
  _BYTE *v0;

  v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_isScrolling] = 1;
  v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_isSelected] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_progress] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_framesetter] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000000010C4100, "MusicCoreUI/LyricsTextView.swift", 32, 2, 138, 0);
  __break(1u);
}

uint64_t initializeBufferWithCopyOfBuffer for AnimationStatus(uint64_t a1, uint64_t a2)
{
  id v3;
  unsigned __int8 v4;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_DF4EFC(*(id *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

id sub_DF4EFC(id result, unsigned __int8 a2)
{
  if (a2 <= 1u)
    return result;
  return result;
}

void destroy for AnimationStatus(uint64_t a1)
{
  sub_DF4F20(*(id *)a1, *(_BYTE *)(a1 + 8));
}

void sub_DF4F20(id a1, unsigned __int8 a2)
{
  if (a2 <= 1u)

}

uint64_t assignWithCopy for AnimationStatus(uint64_t a1, uint64_t a2)
{
  id v3;
  unsigned __int8 v4;
  void *v5;
  unsigned __int8 v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_DF4EFC(*(id *)a2, v4);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_DF4F20(v5, v6);
  return a1;
}

uint64_t assignWithTake for AnimationStatus(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  unsigned __int8 v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_DF4F20(v4, v5);
  return a1;
}

ValueMetadata *type metadata accessor for AnimationStatus()
{
  return &type metadata for AnimationStatus;
}

uint64_t sub_DF4FD0(uint64_t a1, uint64_t *a2)
{
  int v2;
  uint64_t v4;

  v2 = *((unsigned __int8 *)a2 + 8);
  if (*(_BYTE *)(a1 + 8))
  {
    if (*(_BYTE *)(a1 + 8) == 1)
    {
      if (v2 == 1)
        return 1;
    }
    else
    {
      v4 = *a2;
      if (*(_QWORD *)a1)
      {
        if (v2 == 2 && v4 == 1)
          return 1;
      }
      else if (v2 == 2 && v4 == 0)
      {
        return 1;
      }
    }
  }
  else if (!*((_BYTE *)a2 + 8))
  {
    return 1;
  }
  return 0;
}

void sub_DF5030()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  BOOL v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  unsigned __int8 v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  void *v16;
  unsigned __int8 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  double v26;
  void *v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  void *v34;
  unsigned __int8 v35;
  uint64_t v36;
  double v37;
  uint64_t v38;
  void *v39;
  void *v40;
  double v41;
  void *v42;
  void *v43;
  void *v44;
  unsigned __int8 v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v1 = *(_QWORD *)(v0 + 24);
  v49 = v1;
  if ((unint64_t)v1 >> 62)
    goto LABEL_75;
  v2 = *(_QWORD *)((char *)&dword_10 + (v1 & 0xFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  v48 = v2;
  if (v2)
  {
LABEL_3:
    v3 = 0;
    do
    {
      if ((v49 & 0xC000000000000001) != 0)
      {
        v1 = specialized _ArrayBuffer._getElementSlowPath(_:)(v3, v49);
        v4 = __OFADD__(v3, 1);
        v5 = v3 + 1;
        if (v4)
          goto LABEL_74;
      }
      else
      {
        if (v3 >= *(_QWORD *)((char *)&dword_10 + (v49 & 0xFFFFFFFFFFFFFF8)))
        {
          __break(1u);
          return;
        }
        swift_retain();
        v4 = __OFADD__(v3, 1);
        v5 = v3 + 1;
        if (v4)
          goto LABEL_74;
      }
      v50 = v5;
      v51 = v1;
      v6 = *(_QWORD *)(v1 + 16);
      if (!((unint64_t)v6 >> 62))
      {
        v7 = *(_QWORD *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFF8));
        v1 = swift_bridgeObjectRetain();
        if (v7)
          goto LABEL_12;
        goto LABEL_61;
      }
      if (v6 < 0)
        v36 = *(_QWORD *)(v1 + 16);
      else
        v36 = v6 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v1 = _CocoaArrayWrapper.endIndex.getter(v36);
      v7 = v1;
      if (v1)
      {
LABEL_12:
        v8 = 0;
        v54 = v6;
        v55 = v6 & 0xC000000000000001;
        v52 = v6 & 0xFFFFFFFFFFFFFF8;
        v53 = v7;
        while (1)
        {
          if (v55)
          {
            v1 = specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v6);
            v4 = __OFADD__(v8, 1);
            v11 = v8 + 1;
            if (v4)
              goto LABEL_72;
          }
          else
          {
            if (v8 >= *(_QWORD *)(v52 + 16))
              goto LABEL_73;
            swift_retain();
            v4 = __OFADD__(v8, 1);
            v11 = v8 + 1;
            if (v4)
              goto LABEL_72;
          }
          v56 = v11;
          v57 = v1;
          v12 = *(_QWORD *)(v1 + 72);
          v58 = v12;
          if (!((unint64_t)v12 >> 62))
          {
            v13 = *(_QWORD *)((char *)&dword_10 + (v12 & 0xFFFFFFFFFFFFF8));
            v1 = swift_bridgeObjectRetain();
            if (v13)
              break;
            goto LABEL_52;
          }
          v28 = v12 < 0 ? v12 : v12 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain();
          v1 = _CocoaArrayWrapper.endIndex.getter(v28);
          v13 = v1;
          if (v1)
            break;
LABEL_52:
          *(_QWORD *)&v29 = swift_bridgeObjectRelease().n128_u64[0];
          v30 = v57;
          v31 = *(void **)(v57 + 128);
          if (v31)
          {
            objc_msgSend(v31, "removeFromSuperview", v29);
            v30 = v57;
            v32 = *(void **)(v57 + 128);
          }
          else
          {
            v32 = 0;
          }
          v6 = v54;
          v8 = v56;
          *(_QWORD *)(v30 + 128) = 0;

          v33 = v57;
          if (!*(_QWORD *)(v57 + 128))
          {
            v34 = *(void **)(v57 + 80);
            *(_QWORD *)(v57 + 80) = 0;
            v35 = *(_BYTE *)(v57 + 88);
            *(_BYTE *)(v57 + 88) = 2;
            sub_DF4F20(v34, v35);
            v33 = v57;
          }
          v9 = *(void **)(v33 + 80);
          *(_QWORD *)(v33 + 80) = 0;
          v10 = *(_BYTE *)(v33 + 88);
          *(_BYTE *)(v33 + 88) = 2;
          sub_DF4F20(v9, v10);
          swift_release();
          if (v56 == v53)
            goto LABEL_61;
        }
        v14 = 0;
        while (2)
        {
          if ((v58 & 0xC000000000000001) != 0)
          {
            v18 = specialized _ArrayBuffer._getElementSlowPath(_:)(v14, v58);
            v4 = __OFADD__(v14++, 1);
            if (v4)
              goto LABEL_67;
LABEL_31:
            v19 = *(_QWORD *)(v18 + 88);
            if (!((unint64_t)v19 >> 62))
            {
              v20 = *(_QWORD *)((char *)&dword_10 + (v19 & 0xFFFFFFFFFFFFF8));
              swift_bridgeObjectRetain();
              if (v20)
                goto LABEL_33;
LABEL_46:
              *(_QWORD *)&v26 = swift_bridgeObjectRelease().n128_u64[0];
              v27 = *(void **)(v18 + 144);
              if (v27)
              {
                objc_msgSend(v27, "removeFromSuperview", v26);
                v15 = *(void **)(v18 + 144);
              }
              else
              {
                v15 = 0;
              }
              *(_QWORD *)(v18 + 144) = 0;

              v16 = *(void **)(v18 + 96);
              *(_QWORD *)(v18 + 96) = 0;
              v17 = *(_BYTE *)(v18 + 104);
              *(_BYTE *)(v18 + 104) = 2;
              sub_DF4F20(v16, v17);
              swift_release();
              if (v14 == v13)
                goto LABEL_52;
              continue;
            }
            if (v19 < 0)
              v25 = *(_QWORD *)(v18 + 88);
            else
              v25 = v19 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain();
            v20 = _CocoaArrayWrapper.endIndex.getter(v25);
            if (!v20)
              goto LABEL_46;
LABEL_33:
            if (v20 >= 1)
            {
              v21 = 0;
              while (1)
              {
                if ((v19 & 0xC000000000000001) != 0)
                {
                  v23 = specialized _ArrayBuffer._getElementSlowPath(_:)(v21, v19);
                  v24 = *(void **)(v23 + 64);
                  if (!v24)
                    goto LABEL_41;
                }
                else
                {
                  v23 = *(_QWORD *)(v19 + 8 * v21 + 32);
                  swift_retain();
                  v24 = *(void **)(v23 + 64);
                  if (!v24)
                  {
LABEL_41:
                    v22 = 0;
                    goto LABEL_36;
                  }
                }
                objc_msgSend(v24, "removeFromSuperview");
                v22 = *(void **)(v23 + 64);
LABEL_36:
                ++v21;
                *(_QWORD *)(v23 + 64) = 0;
                swift_release();

                if (v20 == v21)
                  goto LABEL_46;
              }
            }
            goto LABEL_68;
          }
          break;
        }
        if (v14 < *(_QWORD *)((char *)&dword_10 + (v58 & 0xFFFFFFFFFFFFFF8)))
        {
          v18 = *(_QWORD *)(v58 + 32 + 8 * v14);
          swift_retain();
          v4 = __OFADD__(v14++, 1);
          if (!v4)
            goto LABEL_31;
LABEL_67:
          __break(1u);
LABEL_68:
          __break(1u);
          goto LABEL_69;
        }
        __break(1u);
LABEL_72:
        __break(1u);
LABEL_73:
        __break(1u);
LABEL_74:
        __break(1u);
LABEL_75:
        if (v1 < 0)
          v46 = v1;
        else
          v46 = v1 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        v48 = _CocoaArrayWrapper.endIndex.getter(v46);
        if (!v48)
          break;
        goto LABEL_3;
      }
LABEL_61:
      *(_QWORD *)&v37 = swift_bridgeObjectRelease().n128_u64[0];
      v38 = v51;
      v39 = *(void **)(v51 + 72);
      if (v39)
      {
        objc_msgSend(v39, "removeFromSuperview", v37);
        v38 = v51;
        v40 = *(void **)(v51 + 72);
      }
      else
      {
        v40 = 0;
      }
      *(_QWORD *)(v38 + 72) = 0;
      swift_release();

      v3 = v50;
    }
    while (v50 != v48);
  }
  *(_QWORD *)&v41 = swift_bridgeObjectRelease().n128_u64[0];
  v14 = v47;
  v42 = *(void **)(v47 + 80);
  if (v42)
  {
    objc_msgSend(v42, "removeFromSuperview", v41);
    v43 = *(void **)(v47 + 80);
  }
  else
  {
LABEL_69:
    v43 = 0;
  }
  *(_QWORD *)(v14 + 80) = 0;

  v44 = *(void **)(v14 + 64);
  *(_QWORD *)(v14 + 64) = 0;
  v45 = *(_BYTE *)(v14 + 72);
  *(_BYTE *)(v14 + 72) = 2;
  sub_DF4F20(v44, v45);
}

uint64_t sub_DF54D8(void *a1, void *a2, char a3, const void *a4, char a5, char a6)
{
  uint64_t v6;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  void *v20;
  uint64_t v21;

  v10 = objc_msgSend(objc_allocWithZone((Class)_s5FrameC9FrameViewCMa()), "initWithFrame:", *(double *)(v6 + 32), *(double *)(v6 + 40), *(double *)(v6 + 48), *(double *)(v6 + 56));
  v11 = *(void **)(v6 + 80);
  *(_QWORD *)(v6 + 80) = v10;
  v12 = v10;

  v13 = *(_QWORD *)(v6 + 24);
  if (!((unint64_t)v13 >> 62))
  {
    v14 = *(_QWORD *)((char *)&dword_10 + (v13 & 0xFFFFFFFFFFFFF8));
    result = swift_bridgeObjectRetain();
    if (v14)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease();
    return (uint64_t)v12;
  }
  if (v13 < 0)
    v21 = *(_QWORD *)(v6 + 24);
  else
    v21 = v13 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  result = _CocoaArrayWrapper.endIndex.getter(v21);
  v14 = result;
  if (!result)
    goto LABEL_13;
LABEL_3:
  if (v14 >= 1)
  {
    v16 = 0;
    v17 = a3 & 1;
    v18 = a6 & 1;
    v19 = a5 & 1;
    do
    {
      if ((v13 & 0xC000000000000001) != 0)
        specialized _ArrayBuffer._getElementSlowPath(_:)(v16, v13);
      else
        swift_retain();
      ++v16;
      v20 = (void *)sub_DF752C(a1, a2, v17, a4, v19, v18);
      objc_msgSend(v12, "addSubview:", v20);
      swift_release();

    }
    while (v14 != v16);
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

double sub_DF5710()
{
  uint64_t v0;
  double result;

  swift_bridgeObjectRelease();
  sub_DF4F20(*(id *)(v0 + 64), *(_BYTE *)(v0 + 72));

  *(_QWORD *)&result = swift_deallocClassInstance(v0, 88, 7).n128_u64[0];
  return result;
}

uint64_t _s5FrameCMa()
{
  return objc_opt_self(_TtCC11MusicCoreUI20SyncedLyricsLineView5Frame);
}

uint64_t _s5FrameC9FrameViewCMa()
{
  return objc_opt_self(_TtCCC11MusicCoreUI20SyncedLyricsLineView5Frame9FrameView);
}

_UNKNOWN **sub_DF5790()
{
  return &off_1507E10;
}

void sub_DF5818()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  int isUniquelyReferenced_nonNull_bridgeObject;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE v39[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView5Glyph9GlyphView_currentAnimators);
  swift_beginAccess(v1, v39, 33, 0);
  v2 = *v1;
  if ((unint64_t)*v1 >> 62)
    goto LABEL_19;
  v3 = *(_QWORD *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  if (!v3)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    v9 = *v1;
    if ((unint64_t)*v1 >> 62)
      goto LABEL_29;
    v4 = *(_QWORD *)((char *)&dword_10 + (v9 & 0xFFFFFFFFFFFFF8));
    while (1)
    {
LABEL_15:
      v9 = *v1;
      if ((unint64_t)*v1 >> 62)
      {
        if (v9 < 0)
          v13 = *v1;
        else
          v13 = v9 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        v11 = _CocoaArrayWrapper.endIndex.getter(v13);
        swift_bridgeObjectRelease();
        if (v11 >= v4)
        {
LABEL_17:
          sub_DCB420(v4, v11);
          swift_endAccess(v39);
          return;
        }
      }
      else
      {
        v11 = *(_QWORD *)((char *)&dword_10 + (v9 & 0xFFFFFFFFFFFFF8));
        if (v11 >= v4)
          goto LABEL_17;
      }
      __break(1u);
LABEL_29:
      if (v9 < 0)
        v14 = v9;
      else
        v14 = v9 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v4 = _CocoaArrayWrapper.endIndex.getter(v14);
      swift_bridgeObjectRelease();
    }
  }
LABEL_3:
  v4 = 0;
  while (1)
  {
    v5 = (v2 & 0xC000000000000001) != 0
       ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v2)
       : *(id *)(v2 + 8 * v4 + 32);
    v6 = v5;
    v7 = (unint64_t)objc_msgSend(v5, "state");

    if ((v7 | 2) == 2)
      break;
    v8 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_19:
      if (v2 < 0)
        v12 = v2;
      else
        v12 = v2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v3 = _CocoaArrayWrapper.endIndex.getter(v12);
      if (!v3)
        goto LABEL_10;
      goto LABEL_3;
    }
    ++v4;
    if (v8 == v3)
      goto LABEL_10;
  }
  swift_bridgeObjectRelease();
  v10 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
LABEL_34:
    if (v2 < 0)
      v15 = v2;
    else
      v15 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v16 = _CocoaArrayWrapper.endIndex.getter(v15);
    swift_bridgeObjectRelease();
    if (v10 == v16)
      goto LABEL_15;
    goto LABEL_38;
  }
  v2 = *v1;
  if ((unint64_t)*v1 >> 62)
    goto LABEL_34;
  if (v10 == *(_QWORD *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFF8)))
    goto LABEL_15;
LABEL_38:
  v17 = v4 + 5;
  while (1)
  {
    v18 = v17 - 4;
    v19 = *v1;
    if ((*v1 & 0xC000000000000001) != 0)
    {
      v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v17 - 4, v19);
      goto LABEL_43;
    }
    if ((v18 & 0x8000000000000000) != 0)
      break;
    if (v18 >= *(_QWORD *)((char *)&dword_10 + (v19 & 0xFFFFFFFFFFFFF8)))
      goto LABEL_77;
    v20 = *(id *)(v19 + 8 * v17);
LABEL_43:
    v21 = v20;
    v22 = (unint64_t)objc_msgSend(v20, "state");

    if ((v22 | 2) == 2)
      goto LABEL_64;
    if (v18 != v4)
    {
      v23 = *v1;
      if ((*v1 & 0xC000000000000001) != 0)
      {
        v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, *v1);
        v23 = *v1;
        if ((*v1 & 0xC000000000000001) == 0)
          goto LABEL_49;
      }
      else
      {
        if (v4 < 0)
          goto LABEL_80;
        if ((unint64_t)v4 >= *(_QWORD *)((char *)&dword_10 + (v23 & 0xFFFFFFFFFFFFF8)))
          goto LABEL_81;
        v24 = *(id *)(v23 + 8 * v4 + 32);
        if ((v23 & 0xC000000000000001) == 0)
        {
LABEL_49:
          if ((v18 & 0x8000000000000000) != 0)
            goto LABEL_82;
          if (v18 >= *(_QWORD *)((char *)&dword_10 + (v23 & 0xFFFFFFFFFFFFF8)))
            goto LABEL_83;
          v25 = *(id *)(v23 + 8 * v17);
          goto LABEL_52;
        }
      }
      v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v17 - 4, v23);
      v23 = *v1;
LABEL_52:
      isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(v23);
      *v1 = v23;
      if (!isUniquelyReferenced_nonNull_bridgeObject || v23 < 0 || (v23 & 0x4000000000000000) != 0)
      {
        v23 = sub_7105D8(v23);
        *v1 = v23;
      }
      v27 = *(void **)((char *)&stru_20.cmd + 8 * v4 + (v23 & 0xFFFFFFFFFFFFFF8));
      *(_QWORD *)((char *)&stru_20.cmd + 8 * v4 + (v23 & 0xFFFFFFFFFFFFFF8)) = v25;

      specialized Array._endMutation()(v28);
      v29 = *v1;
      v30 = swift_isUniquelyReferenced_nonNull_bridgeObject(*v1);
      *v1 = v29;
      if (!v30 || v29 < 0 || (v29 & 0x4000000000000000) != 0)
      {
        v29 = sub_7105D8(v29);
        *v1 = v29;
      }
      if ((v18 & 0x8000000000000000) != 0)
        goto LABEL_84;
      v31 = v29 & 0xFFFFFFFFFFFFFF8;
      if (v18 >= *(_QWORD *)((char *)&dword_10 + (v29 & 0xFFFFFFFFFFFFFF8)))
        goto LABEL_85;
      v32 = *(void **)(v31 + 8 * v17);
      *(_QWORD *)(v31 + 8 * v17) = v24;

      specialized Array._endMutation()(v33);
    }
    if (__OFADD__(v4++, 1))
      goto LABEL_79;
LABEL_64:
    v35 = v17 - 3;
    if (__OFADD__(v18, 1))
      goto LABEL_78;
    v36 = *v1;
    if ((unint64_t)*v1 >> 62)
    {
      if (v36 < 0)
        v38 = *v1;
      else
        v38 = v36 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v37 = _CocoaArrayWrapper.endIndex.getter(v38);
      swift_bridgeObjectRelease();
    }
    else
    {
      v37 = *(_QWORD *)((char *)&dword_10 + (v36 & 0xFFFFFFFFFFFFF8));
    }
    ++v17;
    if (v35 == v37)
      goto LABEL_15;
  }
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  __break(1u);
LABEL_83:
  __break(1u);
LABEL_84:
  __break(1u);
LABEL_85:
  __break(1u);
}

id sub_DF5C38(void *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  _QWORD v10[6];

  v10[0] = 0x3FF0000000000000;
  v10[1] = 0;
  v10[2] = 0;
  v10[3] = 0x3FF0000000000000;
  v10[4] = 0;
  v10[5] = 0;
  objc_msgSend(a1, "setTransform:", v10);
  return UIView.untransformedFrame.setter(a2, a3, a4, a5);
}

void sub_DF5CB0(void *a1, double a2, double a3, double a4, double a5)
{
  void *v5;
  Class isa;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v15;
  void *v16;
  char *v17;
  objc_class *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void **v22;
  uint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  uint64_t v27;

  sub_DF6544();
  isa = UIViewPropertyAnimator.init(springTimingParameters:)((UISpringTimingParameters)a1).super.isa;
  v12 = swift_allocObject(&unk_13C5F68, 48, 7);
  *(_QWORD *)(v12 + 16) = v5;
  *(double *)(v12 + 24) = a2;
  *(double *)(v12 + 32) = a3;
  *(double *)(v12 + 40) = a4;
  v26 = sub_DF6658;
  v27 = v12;
  v22 = _NSConcreteStackBlock;
  v23 = 1107296256;
  v24 = sub_42D124;
  v25 = &block_descriptor_21_12;
  v13 = _Block_copy(&v22);
  v14 = v5;
  -[objc_class addAnimations:](isa, "addAnimations:", v13, swift_release().n128_f64[0]);
  _Block_release(v13);
  v15 = swift_allocObject(&unk_13C5EA0, 24, 7);
  swift_unknownObjectWeakInit(v15 + 16);
  v26 = sub_DF65EC;
  v27 = v15;
  v22 = _NSConcreteStackBlock;
  v23 = 1107296256;
  v24 = sub_59BEF0;
  v25 = &block_descriptor_25_6;
  v16 = _Block_copy(&v22);
  -[objc_class addCompletion:](isa, "addCompletion:", v16, swift_release().n128_f64[0]);
  _Block_release(v16);
  -[objc_class startAnimationAfterDelay:](isa, "startAnimationAfterDelay:", a5);
  v17 = &v14[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView5Glyph9GlyphView_currentAnimators];
  swift_beginAccess(v17, &v22, 33, 0);
  v18 = isa;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v18);
  v20 = *(_QWORD *)((char *)&dword_10 + (*(_QWORD *)v17 & 0xFFFFFFFFFFFFFF8));
  v19 = *(_QWORD *)((char *)&dword_18 + (*(_QWORD *)v17 & 0xFFFFFFFFFFFFFF8));
  if (v20 >= v19 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v19 > 1, v20 + 1, 1);
  v21 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v20, v18);
  specialized Array._endMutation()(v21);
  swift_endAccess(&v22);

}

void sub_DF5EB8(void *a1, double a2, double a3, CGFloat a4)
{
  uint64_t v8;
  uint64_t v9;
  CGFloat v10;
  void *v11;
  id v12;
  __n128 v13;
  double v14;
  CGAffineTransform v15;

  v8 = objc_opt_self(UIView);
  v9 = swift_allocObject(&unk_13C5FE0, 24, 7);
  *(_QWORD *)(v9 + 16) = a1;
  v10 = COERCE_DOUBLE(swift_allocObject(&unk_13C6008, 32, 7));
  *(_QWORD *)(*(_QWORD *)&v10 + 16) = sub_DF668C;
  *(_QWORD *)(*(_QWORD *)&v10 + 24) = v9;
  *(_QWORD *)&v15.tx = sub_AF944;
  v15.ty = v10;
  *(_QWORD *)&v15.a = _NSConcreteStackBlock;
  *(_QWORD *)&v15.b = 1107296256;
  *(_QWORD *)&v15.c = sub_3A1A94;
  *(_QWORD *)&v15.d = &block_descriptor_35_5;
  v11 = _Block_copy(&v15);
  v12 = a1;
  swift_retain();
  objc_msgSend((id)v8, "performWithoutAnimation:", v11, swift_release().n128_f64[0]);
  _Block_release(v11);
  LOBYTE(v8) = swift_isEscapingClosureAtFileLocation(*(_QWORD *)&v10, "", 130, 92, 52, 1, v13);
  *(_QWORD *)&v14 = swift_release().n128_u64[0];
  if ((v8 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    objc_msgSend(v12, "frame", v14);
    objc_msgSend(v12, "setFrame:", a2, a3);
    CGAffineTransformMakeScale(&v15, a4, a4);
    objc_msgSend(v12, "setTransform:", &v15);
    swift_release();
  }
}

void sub_DF606C(void *a1, double a2, double a3, double a4)
{
  void *v4;
  Class isa;
  uint64_t v10;
  void *v11;
  char *v12;
  uint64_t v13;
  void *v14;
  char *v15;
  objc_class *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void **v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;

  sub_DF6544();
  isa = UIViewPropertyAnimator.init(springTimingParameters:)((UISpringTimingParameters)a1).super.isa;
  v10 = swift_allocObject(&unk_13C5E50, 40, 7);
  *(_QWORD *)(v10 + 16) = v4;
  *(double *)(v10 + 24) = a2;
  *(double *)(v10 + 32) = a3;
  v24 = sub_DF65A4;
  v25 = v10;
  v20 = _NSConcreteStackBlock;
  v21 = 1107296256;
  v22 = sub_42D124;
  v23 = &block_descriptor_341;
  v11 = _Block_copy(&v20);
  v12 = v4;
  -[objc_class addAnimations:](isa, "addAnimations:", v11, swift_release().n128_f64[0]);
  _Block_release(v11);
  v13 = swift_allocObject(&unk_13C5EA0, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16);
  v24 = sub_DF65EC;
  v25 = v13;
  v20 = _NSConcreteStackBlock;
  v21 = 1107296256;
  v22 = sub_59BEF0;
  v23 = &block_descriptor_6_27;
  v14 = _Block_copy(&v20);
  -[objc_class addCompletion:](isa, "addCompletion:", v14, swift_release().n128_f64[0]);
  _Block_release(v14);
  -[objc_class startAnimationAfterDelay:](isa, "startAnimationAfterDelay:", a4);
  v15 = &v12[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView5Glyph9GlyphView_currentAnimators];
  swift_beginAccess(v15, &v20, 33, 0);
  v16 = isa;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v16);
  v18 = *(_QWORD *)((char *)&dword_10 + (*(_QWORD *)v15 & 0xFFFFFFFFFFFFFF8));
  v17 = *(_QWORD *)((char *)&dword_18 + (*(_QWORD *)v15 & 0xFFFFFFFFFFFFFF8));
  if (v18 >= v17 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v17 > 1, v18 + 1, 1);
  v19 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v16);
  specialized Array._endMutation()(v19);
  swift_endAccess(&v20);

}

void sub_DF626C(void *a1, double a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  __n128 v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  uint64_t (*v17)();
  uint64_t v18;

  v6 = objc_opt_self(UIView);
  v7 = swift_allocObject(&unk_13C5EF0, 24, 7);
  *(_QWORD *)(v7 + 16) = a1;
  v8 = swift_allocObject(&unk_13C5F18, 32, 7);
  *(_QWORD *)(v8 + 16) = sub_DF6604;
  *(_QWORD *)(v8 + 24) = v7;
  v17 = sub_62604;
  v18 = v8;
  v13 = (uint64_t)_NSConcreteStackBlock;
  v14 = 1107296256;
  v15 = sub_3A1A94;
  v16 = (uint64_t)&block_descriptor_15_14;
  v9 = _Block_copy(&v13);
  v10 = a1;
  swift_retain();
  objc_msgSend((id)v6, "performWithoutAnimation:", v9, swift_release().n128_f64[0]);
  _Block_release(v9);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation(v8, "", 130, 108, 52, 1, v11);
  *(_QWORD *)&v12 = swift_release().n128_u64[0];
  if ((v6 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v13 = 0x3FF0000000000000;
    v14 = 0;
    v15 = 0;
    v16 = 0x3FF0000000000000;
    v17 = 0;
    v18 = 0;
    objc_msgSend(v10, "setTransform:", &v13, v12);
    objc_msgSend(v10, "frame");
    objc_msgSend(v10, "setFrame:", a2, a3);
    swift_release();
  }
}

id sub_DF6404(uint64_t a1, uint64_t (*a2)(void))
{
  double *v2;
  _BYTE v4[24];

  v2 = (double *)a2();
  swift_beginAccess(v2, v4, 0, 0);
  return UIView.setAnchorPoint(_:preserveFrame:)(1, *v2, v2[1]);
}

void sub_DF644C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_DF5818();

  }
}

uint64_t sub_DF64D8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  return swift_deallocClassInstance(v0, 72, 7);
}

uint64_t _s5GlyphCMa()
{
  return objc_opt_self(_TtCC11MusicCoreUI20SyncedLyricsLineView5Glyph);
}

uint64_t _s5GlyphC9GlyphViewCMa()
{
  return objc_opt_self(_TtCCC11MusicCoreUI20SyncedLyricsLineView5Glyph9GlyphView);
}

unint64_t sub_DF6544()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1508790;
  if (!qword_1508790)
  {
    v1 = objc_opt_self(UIViewPropertyAnimator);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1508790);
  }
  return result;
}

uint64_t sub_DF6580()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

void sub_DF65A4()
{
  uint64_t v0;

  sub_DF626C(*(void **)(v0 + 16), *(double *)(v0 + 24), *(double *)(v0 + 32));
}

uint64_t block_copy_helper_335(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double block_destroy_helper_335(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_DF65C8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_DF65EC(uint64_t a1)
{
  uint64_t v1;

  sub_DF644C(a1, v1);
}

id sub_DF6604()
{
  uint64_t v0;

  return sub_DF6404(*(_QWORD *)(v0 + 16), (uint64_t (*)(void))CGPoint.center.unsafeMutableAddressor);
}

uint64_t sub_DF6624()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_DF6634()
{
  uint64_t v0;

  return swift_deallocObject(v0, 48, 7);
}

void sub_DF6658()
{
  uint64_t v0;

  sub_DF5EB8(*(void **)(v0 + 16), *(double *)(v0 + 24), *(double *)(v0 + 32), *(CGFloat *)(v0 + 40));
}

uint64_t sub_DF6668()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_DF668C()
{
  uint64_t v0;

  return sub_DF6404(*(_QWORD *)(v0 + 16), (uint64_t (*)(void))CGPoint.bottomCenter.unsafeMutableAddressor);
}

uint64_t sub_DF66AC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

char *sub_DF66E8(uint64_t a1)
{
  uint64_t v2;
  char *result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if ((unint64_t)a1 >> 62)
    goto LABEL_18;
  v2 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  while (1)
  {
    if (!v2)
      return (char *)_swiftEmptyArrayStorage;
    result = sub_DDED2C(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
      break;
    v4 = 0;
    while (v2 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v5 = specialized _ArrayBuffer._getElementSlowPath(_:)(v4, a1);
      else
        swift_retain();
      v6 = *(_QWORD *)(v5 + 32);
      v7 = *(_QWORD *)(v6 + 16);
      if (v7)
        v8 = *(_QWORD *)(v6 + 56 * v7 - 16);
      else
        v8 = 0;
      swift_release();
      v10 = _swiftEmptyArrayStorage[2];
      v9 = _swiftEmptyArrayStorage[3];
      if (v10 >= v9 >> 1)
        sub_DDED2C((char *)(v9 > 1), v10 + 1, 1);
      ++v4;
      _swiftEmptyArrayStorage[2] = v10 + 1;
      _swiftEmptyArrayStorage[v10 + 4] = v8;
      if (v2 == v4)
        return (char *)_swiftEmptyArrayStorage;
    }
    __break(1u);
LABEL_18:
    if (a1 < 0)
      v11 = a1;
    else
      v11 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v2 = _CocoaArrayWrapper.endIndex.getter(v11);
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

char *sub_DF6854(uint64_t a1)
{
  uint64_t v2;
  char *result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if ((unint64_t)a1 >> 62)
    goto LABEL_18;
  v2 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  while (1)
  {
    if (!v2)
      return (char *)_swiftEmptyArrayStorage;
    result = sub_DDED2C(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
      break;
    v4 = 0;
    while (v2 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v5 = specialized _ArrayBuffer._getElementSlowPath(_:)(v4, a1);
      else
        swift_retain();
      v6 = *(_QWORD *)(v5 + 32);
      if (*(_QWORD *)(v6 + 16))
        v7 = *(_QWORD *)(v6 + 32);
      else
        v7 = 0;
      swift_release();
      v9 = _swiftEmptyArrayStorage[2];
      v8 = _swiftEmptyArrayStorage[3];
      if (v9 >= v8 >> 1)
        sub_DDED2C((char *)(v8 > 1), v9 + 1, 1);
      ++v4;
      _swiftEmptyArrayStorage[2] = v9 + 1;
      _swiftEmptyArrayStorage[v9 + 4] = v7;
      if (v2 == v4)
        return (char *)_swiftEmptyArrayStorage;
    }
    __break(1u);
LABEL_18:
    if (a1 < 0)
      v10 = a1;
    else
      v10 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v2 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void sub_DF69A8(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;
  unint64_t v4;
  double v5;
  double v6;
  double v7;
  CGFloat v8;
  CGFloat v9;
  double v10;
  uint64_t v11;
  uint64_t v15;
  unint64_t v16;
  char *v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  double v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  double *v31;
  CGFloat v32;
  CGFloat v33;
  CGFloat v34;
  CGFloat v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  double v45;
  double v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t i;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  double v69;
  double v70;
  uint64_t v71;
  uint64_t v72;
  double Width;
  double v74;
  uint64_t v75;
  uint64_t v76;
  double v77;
  char v78;
  double v79;
  double v80;
  uint64_t v81;
  double v82;
  double v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  double v88;
  void *v89;
  uint64_t v90;
  void *v91;
  id v92;
  uint64_t v93;
  double v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD aBlock[7];
  CGRect v103;
  CGRect v104;
  CGRect v105;
  CGRect v106;
  CGRect v107;

  v11 = v3;
  v15 = *(_QWORD *)(v3 + 16);
  v16 = (unint64_t)v15 >> 62;
  if ((unint64_t)v15 >> 62)
  {
    if (v15 < 0)
      v20 = *(_QWORD *)(v3 + 16);
    else
      v20 = v15 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v18 = _CocoaArrayWrapper.endIndex.getter(v20);
    v17 = (char *)v18;
    if (!v18)
      goto LABEL_13;
  }
  else
  {
    v17 = *(char **)((char *)&dword_10 + (v15 & 0xFFFFFFFFFFFFF8));
    v18 = swift_bridgeObjectRetain();
    if (!v17)
      goto LABEL_13;
  }
  if ((uint64_t)v17 < 1)
  {
    __break(1u);
    goto LABEL_40;
  }
  v19 = 0;
  v4 = v15 & 0xC000000000000001;
  do
  {
    if (v4)
      specialized _ArrayBuffer._getElementSlowPath(_:)(v19, v15);
    else
      swift_retain();
    ++v19;
    sub_DF9D3C(a1, a3);
    swift_release();
  }
  while (v17 != v19);
LABEL_13:
  swift_bridgeObjectRelease();
  if ((*(_BYTE *)(v3 + 80) & 1) != 0)
    return;
  v21 = *(_QWORD *)(v3 + 72);
  if (!v21)
    return;
  v22 = *(void **)(v21 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_gradientView);
  if (!v22)
    return;
  v23 = *(void **)(a1 + 168);
  v17 = v22;
  objc_msgSend(v23, "lineHeight");
  v25 = v24 * *(double *)(a1 + 224) + *(double *)(a1 + 352) + *(double *)(a1 + 352);
  v9 = *(double *)(v11 + 40);
  v8 = *(double *)(v11 + 48);
  v7 = *(double *)(v11 + 56);
  v6 = *(double *)(v11 + 64);
  v103.origin.x = v9;
  v103.origin.y = v8;
  v103.size.width = v7;
  v103.size.height = v6;
  v5 = (v25 - CGRectGetHeight(v103)) * 0.5;
  v10 = *(double *)(a1 + 392);
  if (sub_DF7810() <= a3)
  {
    if (v16)
    {
      if (v15 < 0)
        v28 = v15;
      else
        v28 = v15 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v26 = _CocoaArrayWrapper.endIndex.getter(v28);
      v27 = v15;
      if (!v26)
        goto LABEL_49;
    }
    else
    {
      v26 = *(_QWORD *)((char *)&dword_10 + (v15 & 0xFFFFFFFFFFFFF8));
      swift_bridgeObjectRetain();
      v27 = v15;
      if (!v26)
        goto LABEL_49;
    }
    v18 = v26 - 1;
    if (!__OFSUB__(v26, 1))
    {
      if ((v15 & 0xC000000000000001) == 0)
      {
        if ((v18 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v18 < *(_QWORD *)((char *)&dword_10 + (v15 & 0xFFFFFFFFFFFFF8)))
        {
          v26 = *(_QWORD *)(v15 + 8 * v18 + 32);
          swift_retain();
          goto LABEL_29;
        }
        __break(1u);
        goto LABEL_44;
      }
LABEL_41:
      v26 = specialized _ArrayBuffer._getElementSlowPath(_:)(v18, v15);
LABEL_29:
      swift_bridgeObjectRelease();
      v27 = *(_QWORD *)(v26 + 72);
      if (!((unint64_t)v27 >> 62))
      {
        v29 = *(_QWORD *)((char *)&dword_10 + (v27 & 0xFFFFFFFFFFFFF8));
        swift_bridgeObjectRetain();
        if (v29)
          goto LABEL_31;
        goto LABEL_48;
      }
LABEL_44:
      if (v27 < 0)
        v37 = v27;
      else
        v37 = v27 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v29 = _CocoaArrayWrapper.endIndex.getter(v37);
      if (v29)
      {
LABEL_31:
        v30 = v29 - 1;
        if (__OFSUB__(v29, 1))
        {
          __break(1u);
        }
        else if ((v27 & 0xC000000000000001) == 0)
        {
          if ((v30 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v30 < *(_QWORD *)((char *)&dword_10 + (v27 & 0xFFFFFFFFFFFFF8)))
          {
            v31 = *(double **)(v27 + 8 * v30 + 32);
            swift_retain();
LABEL_36:
            swift_bridgeObjectRelease();
            if ((a2 & 1) == 0)
            {
              v32 = v31[14];
              v33 = v31[15];
              v34 = v31[16];
              v35 = v31[17];
              v36 = v17;
              v104.origin.x = v32;
              v104.origin.y = v33;
              v104.size.width = v34;
              v104.size.height = v35;
              CGRectGetWidth(v104);
              objc_msgSend(v36, "frame");
              objc_msgSend(v36, "setFrame:");

            }
            swift_release();
            goto LABEL_154;
          }
          __break(1u);
          goto LABEL_102;
        }
        v31 = (double *)specialized _ArrayBuffer._getElementSlowPath(_:)(v30, v27);
        goto LABEL_36;
      }
LABEL_48:
      swift_release();
LABEL_49:
      swift_bridgeObjectRelease();
      goto LABEL_50;
    }
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
LABEL_50:
  if (sub_DF7770() > a3)
  {
    *(_QWORD *)(v11 + 88) = 0;
    swift_release();
    v38 = v17;
    v39 = v38;
    if ((a2 & 1) != 0)
    {
      v105.origin.x = v9;
      v105.origin.y = v8;
      v105.size.width = v7;
      v105.size.height = v6;
      v45 = v5 * 0.5 + CGRectGetWidth(v105);
      objc_msgSend(v39, "frame");
      objc_msgSend(v39, "setFrame:", v45);

      v39 = v39;
      objc_msgSend(v39, "frame");
    }
    else
    {
      objc_msgSend(v38, "frame");
    }
    objc_msgSend(v39, "setFrame:");

    goto LABEL_155;
  }
  sub_DF7D90(a3);
  v4 = v40;
  v27 = v41;
  v42 = sub_DF7F38(a3);
  v29 = v42;
  v26 = v43;
  if (!v4 || !v42)
  {
    swift_release();
    swift_release();
    goto LABEL_154;
  }
  v44 = *(_QWORD *)(v11 + 88);
  if (v44 && v42 == v44)
  {

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return;
  }
  if ((a2 & 1) == 0)
  {
    if (v16)
    {
      if (v15 < 0)
        v50 = v15;
      else
        v50 = v15 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      v47 = _CocoaArrayWrapper.endIndex.getter(v50);
    }
    else
    {
      v47 = *(_QWORD *)((char *)&dword_10 + (v15 & 0xFFFFFFFFFFFFF8));
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
    }
    if (!v47)
      goto LABEL_118;
    v30 = v47 - 1;
    if (!__OFSUB__(v47, 1))
    {
      if ((v15 & 0xC000000000000001) == 0)
      {
        if ((v30 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v30 < *(_QWORD *)((char *)&dword_10 + (v15 & 0xFFFFFFFFFFFFF8)))
        {
          v51 = *(_QWORD *)(v15 + 8 * v30 + 32);
          swift_retain();
          swift_bridgeObjectRelease();
          v15 = *(_QWORD *)(v51 + 72);
          swift_bridgeObjectRetain();
          swift_release();
          if ((v15 & 0x8000000000000000) == 0 && (v15 & 0x4000000000000000) == 0)
            goto LABEL_77;
          goto LABEL_105;
        }
        __break(1u);
        goto LABEL_112;
      }
LABEL_103:
      v57 = specialized _ArrayBuffer._getElementSlowPath(_:)(v30, v15);
      swift_bridgeObjectRelease();
      v15 = *(_QWORD *)(v57 + 72);
      swift_bridgeObjectRetain();
      swift_unknownObjectRelease(v57);
      if ((v15 & 0x8000000000000000) == 0 && (v15 & 0x4000000000000000) == 0)
      {
LABEL_77:
        v52 = *(_QWORD *)((char *)&dword_10 + (v15 & 0xFFFFFFFFFFFFF8));
        if (v52)
          goto LABEL_78;
        goto LABEL_118;
      }
LABEL_105:
      if (v15 < 0)
        v58 = v15;
      else
        v58 = v15 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v52 = _CocoaArrayWrapper.endIndex.getter(v58);
      swift_bridgeObjectRelease();
      if (v52)
      {
LABEL_78:
        v53 = v52 - 1;
        if (__OFSUB__(v52, 1))
          goto LABEL_163;
        if ((v15 & 0xC000000000000001) != 0)
          goto LABEL_166;
        if ((v53 & 0x8000000000000000) != 0)
          goto LABEL_164;
        if (v53 < *(_QWORD *)((char *)&dword_10 + (v15 & 0xFFFFFFFFFFFFF8)))
        {
          i = *(_QWORD *)(v15 + 8 * v53 + 32);
          goto LABEL_96;
        }
        goto LABEL_168;
      }
LABEL_118:
      swift_bridgeObjectRelease();
      goto LABEL_119;
    }
LABEL_102:
    __break(1u);
    goto LABEL_103;
  }
  if (v16)
  {
    if (v15 < 0)
      v55 = v15;
    else
      v55 = v15 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    v49 = _CocoaArrayWrapper.endIndex.getter(v55);
    v48 = v49;
  }
  else
  {
    v48 = *(_QWORD *)((char *)&dword_10 + (v15 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
  }
  if (!v48)
    goto LABEL_118;
  if ((v15 & 0xC000000000000001) == 0)
  {
    if (!*(_QWORD *)((char *)&dword_10 + (v15 & 0xFFFFFFFFFFFFF8)))
    {
      __break(1u);
LABEL_158:
      __break(1u);
LABEL_159:
      v93 = specialized _ArrayBuffer._getElementSlowPath(_:)(v49, v15);
      swift_bridgeObjectRelease();
      v94 = *(double *)(v93 + 16);
      v69 = *(double *)(v93 + 24);
      v72 = *(_QWORD *)(v93 + 32);
      v71 = *(_QWORD *)(v93 + 40);
      v97 = *(_QWORD *)(v93 + 56);
      v98 = *(_QWORD *)(v93 + 48);
      v95 = *(_QWORD *)(v93 + 64);
      swift_bridgeObjectRetain();
      swift_unknownObjectRelease(v93);
      if (v7 == v94)
        goto LABEL_132;
LABEL_148:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_149:
      v79 = a3;
      v107 = *(CGRect *)(v29 + 112);
      v82 = *(double *)(v4 + 96) + v107.origin.x;
      Width = CGRectGetWidth(v107);
      v80 = v82 + Width;
      goto LABEL_150;
    }
    v56 = *(_QWORD *)(v15 + 32);
    swift_retain();
    swift_bridgeObjectRelease();
    v15 = *(_QWORD *)(v56 + 72);
    swift_bridgeObjectRetain();
    swift_release();
    if (v15 < 0 || (v15 & 0x4000000000000000) != 0)
      goto LABEL_114;
LABEL_92:
    if (!*(_QWORD *)((char *)&dword_10 + (v15 & 0xFFFFFFFFFFFFF8)))
      goto LABEL_118;
    goto LABEL_93;
  }
LABEL_112:
  v59 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v15);
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(v59 + 72);
  swift_bridgeObjectRetain();
  swift_unknownObjectRelease(v59);
  if ((v15 & 0x8000000000000000) == 0 && (v15 & 0x4000000000000000) == 0)
    goto LABEL_92;
LABEL_114:
  if (v15 < 0)
    v60 = v15;
  else
    v60 = v15 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v61 = _CocoaArrayWrapper.endIndex.getter(v60);
  swift_bridgeObjectRelease();
  if (!v61)
    goto LABEL_118;
LABEL_93:
  if ((v15 & 0xC000000000000001) != 0)
    goto LABEL_165;
  if (!*(_QWORD *)((char *)&dword_10 + (v15 & 0xFFFFFFFFFFFFF8)))
  {
    __break(1u);
LABEL_168:
    __break(1u);
    return;
  }
  for (i = *(_QWORD *)(v15 + 32); ; swift_unknownObjectRelease(i))
  {
LABEL_96:
    swift_bridgeObjectRelease();
    if (i == v29)
    {
      a3 = 1.0;
    }
    else
    {
LABEL_119:
      v62 = *(_QWORD *)(v29 + 64);
      if (!v62 || (a3 = 0.5, v62 >= 3))
      {
        if (!v26
          || (v63 = *(_QWORD *)(v29 + 32),
              v64 = *(_QWORD *)(v29 + 40),
              swift_bridgeObjectRetain(),
              v65 = String.count.getter(v63, v64),
              swift_bridgeObjectRelease(),
              a3 = 0.25,
              v65 >= 3))
        {
          a3 = 0.12;
        }
      }
    }
    if ((a2 & 1) != 0)
    {
      v74 = *(double *)(v4 + 96) + *(double *)(v29 + 112) - v10 * a3 - v5;
      objc_msgSend(v17, "frame");
      v76 = v75;
      v106.origin.x = v9;
      v106.origin.y = v8;
      v106.size.width = v7;
      v106.size.height = v6;
      v77 = CGRectGetWidth(v106) - v74;
      goto LABEL_151;
    }
    v7 = *(double *)(v29 + 16);
    v6 = *(double *)(v29 + 24);
    a2 = *(_QWORD *)(v29 + 40);
    v100 = *(_QWORD *)(v29 + 48);
    v101 = *(_QWORD *)(v29 + 32);
    v66 = *(_QWORD *)(v29 + 64);
    v99 = *(_QWORD *)(v29 + 56);
    v15 = *(_QWORD *)(v4 + 72);
    if ((unint64_t)v15 >> 62)
    {
      if (v15 < 0)
        v81 = *(_QWORD *)(v4 + 72);
      else
        v81 = v15 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v67 = _CocoaArrayWrapper.endIndex.getter(v81);
      if (!v67)
      {
LABEL_147:
        swift_bridgeObjectRelease();
        goto LABEL_148;
      }
    }
    else
    {
      v67 = *(_QWORD *)((char *)&dword_10 + (v15 & 0xFFFFFFFFFFFFF8));
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (!v67)
        goto LABEL_147;
    }
    v49 = v67 - 1;
    if (__OFSUB__(v67, 1))
      goto LABEL_158;
    v96 = v66;
    if ((v15 & 0xC000000000000001) != 0)
      goto LABEL_159;
    if ((v49 & 0x8000000000000000) != 0)
    {
      __break(1u);
      goto LABEL_162;
    }
    if (v49 < *(_QWORD *)((char *)&dword_10 + (v15 & 0xFFFFFFFFFFFFF8)))
      break;
LABEL_162:
    __break(1u);
LABEL_163:
    __break(1u);
LABEL_164:
    __break(1u);
LABEL_165:
    v53 = 0;
LABEL_166:
    i = specialized _ArrayBuffer._getElementSlowPath(_:)(v53, v15);
  }
  v68 = *(_QWORD *)(v15 + 8 * v49 + 32);
  swift_retain();
  swift_bridgeObjectRelease();
  v70 = *(double *)(v68 + 16);
  v69 = *(double *)(v68 + 24);
  v72 = *(_QWORD *)(v68 + 32);
  v71 = *(_QWORD *)(v68 + 40);
  v97 = *(_QWORD *)(v68 + 56);
  v98 = *(_QWORD *)(v68 + 48);
  v95 = *(_QWORD *)(v68 + 64);
  swift_bridgeObjectRetain();
  swift_release();
  if (v7 != v70)
    goto LABEL_148;
LABEL_132:
  if (v6 != v69)
    goto LABEL_148;
  if (v101 != v72 || a2 != v71)
  {
    v78 = _stringCompareWithSmolCheck(_:_:expecting:)(v101, a2, v72, v71, 0);
    swift_bridgeObjectRelease();
    *(_QWORD *)&Width = swift_bridgeObjectRelease().n128_u64[0];
    if ((v78 & 1) != 0)
      goto LABEL_138;
    goto LABEL_149;
  }
  *(_QWORD *)&Width = swift_bridgeObjectRelease_n(a2, 2).n128_u64[0];
LABEL_138:
  if (v100 != v98 || v99 != v97 || v96 != v95 || !v27)
    goto LABEL_149;
  v79 = a3;
  v80 = *(double *)(v27 + 96);
LABEL_150:
  objc_msgSend(v17, "frame", Width, v95);
  v74 = v83;
  v76 = v84;
  v77 = v5 + v10 * v79 + v80;
LABEL_151:
  objc_msgSend(v17, "frame");
  v86 = *(void **)(v11 + 72);
  if (v86)
  {
    v87 = v85;
    v88 = *(double *)(v29 + 24) - *(double *)(v29 + 16);
    v89 = (void *)objc_opt_self(UIView);
    v90 = swift_allocObject(&unk_13C6068, 56, 7);
    *(_QWORD *)(v90 + 16) = v86;
    *(double *)(v90 + 24) = v74;
    *(_QWORD *)(v90 + 32) = v76;
    *(double *)(v90 + 40) = v77;
    *(_QWORD *)(v90 + 48) = v87;
    aBlock[4] = sub_DF9284;
    aBlock[5] = v90;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_42D124;
    aBlock[3] = &block_descriptor_342;
    v91 = _Block_copy(aBlock);
    v92 = v86;
    swift_release();
    objc_msgSend(v89, "animateWithDuration:delay:options:animations:completion:", 196609, v91, 0, v88, 0.0);
    _Block_release(v91);

  }
  swift_release();
  swift_release_n(v4, 2);
  swift_release();
  swift_release();
  *(_QWORD *)(v11 + 88) = v29;
LABEL_154:
  *(_QWORD *)&v46 = swift_release().n128_u64[0];
LABEL_155:
  objc_msgSend(v17, "setNeedsDisplay", v46);

}

uint64_t sub_DF752C(void *a1, void *a2, char a3, const void *a4, char a5, char a6)
{
  uint64_t v6;
  uint64_t v7;
  char v12;
  double v13;
  double v14;
  double v15;
  double v16;
  char v17;
  id v18;
  id v19;
  char *v20;
  void *v21;
  char *v22;
  id v23;
  void *v24;
  char v25;
  id v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  char *v35;

  v7 = v6;
  v12 = a3 & 1;
  v13 = *(double *)(v7 + 40);
  v14 = *(double *)(v7 + 48);
  v15 = *(double *)(v7 + 56);
  v16 = *(double *)(v7 + 64);
  v17 = a6 & 1;
  v18 = objc_allocWithZone((Class)_s4LineC8LineViewCMa());
  v19 = a2;
  sub_533134((uint64_t)a4);
  v20 = sub_DF80BC(v19, v12, a4, v17, v13, v14, v15, v16);
  v21 = *(void **)(v7 + 72);
  *(_QWORD *)(v7 + 72) = v20;
  v22 = v20;

  v23 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, v15, v16);
  if ((a5 & 1) != 0)
  {
    v24 = *(void **)(v7 + 24);
    v25 = *(_BYTE *)(v7 + 32);
    objc_allocWithZone((Class)type metadata accessor for CTLabel.Line());
    v26 = CTLabel.Line.init(ctLine:size:useExtendedLineBounds:)(v24, v25, v15, v16);
    objc_msgSend(v23, "addSubview:", v26);

LABEL_17:
    objc_msgSend(v22, "setMaskView:", v23, v27);

    return (uint64_t)v22;
  }
  v28 = *(_QWORD *)(v7 + 16);
  if (!((unint64_t)v28 >> 62))
  {
    v29 = *(_QWORD *)((char *)&dword_10 + (v28 & 0xFFFFFFFFFFFFF8));
    result = swift_bridgeObjectRetain();
    if (v29)
      goto LABEL_5;
LABEL_16:
    *(_QWORD *)&v27 = swift_bridgeObjectRelease().n128_u64[0];
    goto LABEL_17;
  }
  if (v28 < 0)
    v34 = v28;
  else
    v34 = v28 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  result = _CocoaArrayWrapper.endIndex.getter(v34);
  v29 = result;
  if (!result)
    goto LABEL_16;
LABEL_5:
  if (v29 >= 1)
  {
    v35 = v22;
    v31 = 0;
    do
    {
      if ((v28 & 0xC000000000000001) != 0)
        specialized _ArrayBuffer._getElementSlowPath(_:)(v31, v28);
      else
        swift_retain();
      ++v31;
      sub_DFA8CC(a1, (uint64_t)a4);
      v33 = v32;
      objc_msgSend(v23, "addSubview:", v32);
      swift_release();

    }
    while (v29 != v31);
    *(_QWORD *)&v27 = swift_bridgeObjectRelease().n128_u64[0];
    v22 = v35;
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

double sub_DF7770()
{
  uint64_t v0;
  char *v1;
  double v2;
  double *v4;

  v0 = swift_bridgeObjectRetain();
  v1 = sub_DF6854(v0);
  swift_bridgeObjectRelease();
  v4 = (double *)v1;
  swift_bridgeObjectRetain();
  sub_DF88A0((char **)&v4);
  swift_bridgeObjectRelease();
  if (*((_QWORD *)v4 + 2))
    v2 = v4[4];
  else
    v2 = 0.0;
  swift_release();
  return v2;
}

double sub_DF7810()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  double v3;
  char *v5;

  v0 = swift_bridgeObjectRetain();
  v1 = sub_DF66E8(v0);
  swift_bridgeObjectRelease();
  v5 = v1;
  swift_bridgeObjectRetain();
  sub_DF88A0(&v5);
  swift_bridgeObjectRelease();
  v2 = *((_QWORD *)v5 + 2);
  if (v2)
    v3 = *(double *)&v5[8 * v2 + 24];
  else
    v3 = 0.0;
  swift_release();
  return v3;
}

void sub_DF78B8(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v9;
  uint64_t v10;
  id v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  double v16;
  char v17;
  double v18;
  double v19;
  double v20;
  void *v21;
  double v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  _QWORD v39[6];

  v4 = v2;
  v5 = *(_QWORD *)(v2 + 72);
  if (v5)
  {
    v6 = *(void **)(v5 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_gradientView);
    if (v6)
    {
      v9 = *(_QWORD *)(v4 + 16);
      if ((unint64_t)v9 >> 62)
      {
        if (v9 < 0)
          v36 = *(_QWORD *)(v4 + 16);
        else
          v36 = v9 & 0xFFFFFFFFFFFFFF8;
        v37 = v6;
        swift_bridgeObjectRetain();
        v10 = _CocoaArrayWrapper.endIndex.getter(v36);
        if (v10)
        {
LABEL_5:
          v12 = v10 - 1;
          if (__OFSUB__(v10, 1))
          {
            __break(1u);
          }
          else if ((v9 & 0xC000000000000001) == 0)
          {
            if ((v12 & 0x8000000000000000) != 0)
            {
              __break(1u);
            }
            else if (v12 < *(_QWORD *)((char *)&dword_10 + (v9 & 0xFFFFFFFFFFFFF8)))
            {
              v10 = *(_QWORD *)(v9 + 8 * v12 + 32);
              swift_retain();
              goto LABEL_10;
            }
            __break(1u);
            goto LABEL_30;
          }
          v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v12, v9);
LABEL_10:
          swift_bridgeObjectRelease();
          v3 = *(_QWORD *)(v10 + 72);
          if (!((unint64_t)v3 >> 62))
          {
            v13 = *(_QWORD *)((char *)&dword_10 + (v3 & 0xFFFFFFFFFFFFF8));
            swift_bridgeObjectRetain();
            if (v13)
              goto LABEL_12;
LABEL_34:

            swift_release();
            goto LABEL_35;
          }
LABEL_30:
          if (v3 < 0)
            v38 = v3;
          else
            v38 = v3 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain();
          v13 = _CocoaArrayWrapper.endIndex.getter(v38);
          if (v13)
          {
LABEL_12:
            v14 = v13 - 1;
            if (__OFSUB__(v13, 1))
            {
              __break(1u);
            }
            else if ((v3 & 0xC000000000000001) == 0)
            {
              if ((v14 & 0x8000000000000000) != 0)
              {
                __break(1u);
              }
              else if (v14 < *(_QWORD *)((char *)&dword_10 + (v3 & 0xFFFFFFFFFFFFF8)))
              {
                v15 = *(_QWORD *)(v3 + 8 * v14 + 32);
                swift_retain();
                goto LABEL_17;
              }
              __break(1u);
              return;
            }
            v15 = specialized _ArrayBuffer._getElementSlowPath(_:)(v14, v3);
LABEL_17:
            *(_QWORD *)&v16 = swift_bridgeObjectRelease().n128_u64[0];
            if ((*(_BYTE *)(v4 + 80) & 1) != 0)
            {

              swift_release();
              swift_release();
            }
            else
            {
              v17 = a2 & 1;
              objc_msgSend(*(id *)(a1 + 168), "lineHeight", v16);
              v19 = v18 * *(double *)(a1 + 224) + *(double *)(a1 + 352) + *(double *)(a1 + 352);
              v20 = (v19 - CGRectGetHeight(*(CGRect *)(v4 + 40))) * 0.5;
              *(_BYTE *)(v4 + 80) = 1;
              v21 = (void *)objc_opt_self(UIView);
              v22 = *(double *)(a1 + 528);
              v23 = swift_allocObject(&unk_13C60B8, 593, 7);
              *(_BYTE *)(v23 + 16) = v17;
              *(_QWORD *)(v23 + 24) = v6;
              *(double *)(v23 + 32) = v20;
              *(_QWORD *)(v23 + 40) = v10;
              *(_QWORD *)(v23 + 48) = v15;
              memcpy((void *)(v23 + 56), (const void *)a1, 0x219uLL);
              v39[4] = sub_DF939C;
              v39[5] = v23;
              v39[0] = _NSConcreteStackBlock;
              v39[1] = 1107296256;
              v39[2] = sub_42D124;
              v39[3] = &block_descriptor_6_28;
              v24 = _Block_copy(v39);
              v25 = v6;
              swift_retain();
              swift_retain();
              sub_533134(a1);
              swift_release();
              objc_msgSend(v21, "animateWithDuration:delay:options:animations:completion:", 196609, v24, 0, v22, 0.0);
              _Block_release(v24);
              v26 = sub_4E684(0, (unint64_t *)&qword_15076C0, OS_dispatch_queue_ptr);
              v34 = (void *)static OS_dispatch_queue.main.getter(v26, v27, v28, v29, v30, v31, v32, v33);
              v35 = swift_allocObject(&unk_13C6108, 24, 7);
              swift_weakInit(v35 + 16);
              swift_retain();
              OS_dispatch_queue.asyncAfter(_:block:)((uint64_t)sub_DF93D8, v35, v22);

              swift_release();
              swift_release();

              swift_release_n(v35, 2);
            }
            return;
          }
          goto LABEL_34;
        }
      }
      else
      {
        v10 = *(_QWORD *)((char *)&dword_10 + (v9 & 0xFFFFFFFFFFFFF8));
        v11 = v6;
        swift_bridgeObjectRetain();
        if (v10)
          goto LABEL_5;
      }

LABEL_35:
      swift_bridgeObjectRelease();
    }
  }
}

id sub_DF7C9C(char a1, id a2, double a3, uint64_t a4, uint64_t a5)
{
  if ((a1 & 1) != 0)
  {
    objc_msgSend(a2, "frame");
    objc_msgSend(a2, "setFrame:", -a3);
  }
  CGRectGetMaxX(*(CGRect *)(a5 + 112));
  objc_msgSend(a2, "frame");
  return objc_msgSend(a2, "setFrame:");
}

double sub_DF7D44(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  double result;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    *(_BYTE *)(Strong + 80) = 0;
    *(_QWORD *)&result = swift_release(Strong).n128_u64[0];
  }
  return result;
}

void sub_DF7D90(double a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  unint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = *(_QWORD *)(v1 + 16);
  if ((unint64_t)v3 >> 62)
    goto LABEL_28;
  v4 = *(_QWORD *)((char *)&dword_10 + (v3 & 0xFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  if (!v4)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return;
  }
  while (1)
  {
    v5 = 0;
    v6 = v3 & 0xC000000000000001;
    while (1)
    {
      if (v6)
        v7 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v3);
      else
        swift_retain();
      v8 = *(_QWORD *)(v7 + 32);
      v9 = *(_QWORD *)(v8 + 16);
      if (v9)
      {
        v10 = *(double *)(v8 + 32);
        v11 = *(double *)(v8 + 32 + 56 * v9 - 48);
        swift_release();
        if (v10 > v11)
          goto LABEL_26;
      }
      else
      {
        swift_release();
        v10 = 0.0;
        v11 = 0.0;
      }
      if (v10 <= a1 && v11 > a1)
        break;
      v13 = v5 + 1;
      if (__OFADD__(v5, 1))
        goto LABEL_27;
      ++v5;
      if (v13 == v4)
        goto LABEL_18;
    }
    swift_bridgeObjectRelease();
    if (!v6)
      break;
    specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v3);
    v14 = __OFADD__(v5, 1);
    v15 = v5 + 1;
    if (!v14)
      goto LABEL_21;
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    if (v3 < 0)
      v17 = v3;
    else
      v17 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v4 = _CocoaArrayWrapper.endIndex.getter(v17);
    if (!v4)
      goto LABEL_18;
  }
  if (v5 < *(_QWORD *)((char *)&dword_10 + (v3 & 0xFFFFFFFFFFFFF8)))
  {
    swift_retain();
    v14 = __OFADD__(v5, 1);
    v15 = v5 + 1;
    if (!v14)
    {
LABEL_21:
      v16 = _s4WordCMa();
      Array.subscript.getter(v15, v3, v16, (uint64_t)&v18);
      return;
    }
    goto LABEL_25;
  }
  __break(1u);
}

uint64_t sub_DF7F38(double a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t i;
  uint64_t v7;
  uint64_t v8;
  double v9;
  double v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v2 = swift_bridgeObjectRetain();
  v3 = (uint64_t)sub_DF2488(v2);
  swift_bridgeObjectRelease();
  if ((unint64_t)v3 >> 62)
    goto LABEL_24;
  v4 = *(_QWORD *)((char *)&dword_10 + (v3 & 0xFFFFFFFFFFFFF8));
  while (v4)
  {
    v5 = v3 & 0xC000000000000001;
    for (i = 4; ; ++i)
    {
      v7 = i - 4;
      if (v5)
        v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, v3);
      else
        swift_retain();
      v9 = *(double *)(v8 + 16);
      v10 = *(double *)(v8 + 24);
      swift_release();
      if (v9 > v10)
        goto LABEL_22;
      if (v9 <= a1 && v10 > a1)
        break;
      v12 = i - 3;
      if (__OFADD__(v7, 1))
        goto LABEL_23;
      if (v12 == v4)
      {
        swift_bridgeObjectRelease();
        return 0;
      }
    }
    if (v5)
    {
      v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, v3);
      v13 = __OFADD__(v7, 1);
      v14 = i - 3;
      if (!v13)
        goto LABEL_18;
    }
    else
    {
      v4 = *(_QWORD *)(v3 + 8 * i);
      swift_retain();
      v13 = __OFADD__(v7, 1);
      v14 = i - 3;
      if (!v13)
      {
LABEL_18:
        v15 = _s8SyllableCMa();
        Array.subscript.getter(v14, v3, v15, (uint64_t)&v18);
        swift_bridgeObjectRelease();
        return v4;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    if (v3 < 0)
      v16 = v3;
    else
      v16 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v4 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return v4;
}

char *sub_DF80BC(void *a1, char a2, const void *a3, char a4, double a5, double a6, double a7, double a8)
{
  _BYTE *v8;
  objc_class *ObjectType;
  char *v18;
  id v19;
  id v20;
  void *v21;
  char *v22;
  void *v23;
  objc_super v25;

  ObjectType = (objc_class *)swift_getObjectType();
  a2 &= 1u;
  *(_QWORD *)&v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_backgroundColorLayer] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_gradientView] = 0;
  v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_kind] = a2;
  memcpy(&v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_specs], a3, 0x219uLL);
  sub_533134((uint64_t)a3);
  v25.receiver = v8;
  v25.super_class = ObjectType;
  v18 = (char *)objc_msgSendSuper2(&v25, "initWithFrame:", a5, a6, a7, a8);
  v19 = objc_msgSend(a1, "CGColor");
  v20 = sub_DF8224((uint64_t)v19, (uint64_t)a3);

  v21 = *(void **)&v18[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_backgroundColorLayer];
  *(_QWORD *)&v18[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_backgroundColorLayer] = v20;

  v22 = sub_DF834C(a2, (uint64_t)a3, a4 & 1);
  sub_532E70((uint64_t)a3);

  v23 = *(void **)&v18[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_gradientView];
  *(_QWORD *)&v18[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_gradientView] = v22;

  return v18;
}

id sub_DF8224(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  CGFloat v11;
  id v12;
  CGRect v14;
  CGRect v15;
  CGRect v16;

  v5 = objc_msgSend(objc_allocWithZone((Class)CALayer), "init");
  objc_msgSend(v5, "setBackgroundColor:", a1);
  objc_msgSend(*(id *)(a2 + 168), "lineHeight");
  v7 = v6 * *(double *)(a2 + 224) + *(double *)(a2 + 352) + *(double *)(a2 + 352);
  objc_msgSend(v2, "frame");
  v8 = (v7 - CGRectGetHeight(v14)) * 0.5;
  v9 = -v8;
  objc_msgSend(v2, "frame");
  v10 = v8 + v8;
  v11 = CGRectGetWidth(v15) + v8 + v8;
  objc_msgSend(v2, "frame");
  objc_msgSend(v5, "setFrame:", v9, v9, v11, v10 + CGRectGetHeight(v16));
  v12 = objc_msgSend(v2, "layer");
  objc_msgSend(v12, "addSublayer:", v5);

  return v5;
}

char *sub_DF834C(char a1, uint64_t a2, char a3)
{
  void *v3;
  void *v4;
  double v8;
  double v9;
  double v10;
  double v11;
  double Height;
  uint64_t v13;
  double v14;
  double v15;
  id v16;
  double v17;
  id v18;
  char *v19;
  CGRect v21;
  CGRect v22;

  v4 = v3;
  objc_msgSend(*(id *)(a2 + 168), "lineHeight");
  v9 = v8;
  v10 = *(double *)(a2 + 224);
  v11 = *(double *)(a2 + 352);
  objc_msgSend(v4, "frame");
  Height = CGRectGetHeight(v21);
  v13 = 384;
  if ((a1 & 1) == 0)
    v13 = 376;
  v14 = (v9 * v10 + v11 + v11 - Height) * 0.5;
  v15 = *(double *)(a2 + 392);
  v16 = *(id *)(a2 + v13);
  objc_msgSend(v4, "frame");
  v17 = v14 + v14 + CGRectGetHeight(v22);
  v18 = objc_allocWithZone((Class)type metadata accessor for LineProgressGradientView());
  v19 = LineProgressGradientView.init(color:featherWidth:direction:frame:)(v16, a3 & 1, v15, -v14, -v14, v14, v17);
  objc_msgSend(v4, "addSubview:", v19);
  return v19;
}

void sub_DF84EC()
{
  char *v0;
  char *v1;
  void **v2;
  void *v3;
  void *v4;
  id v5;
  char *v6;
  id v7;
  objc_super v8;

  v8.receiver = v0;
  v8.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v8, "tintColorDidChange");
  v1 = *(char **)&v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_gradientView];
  if (v1)
  {
    if (v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_kind])
      v2 = (void **)&v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_specs + 384];
    else
      v2 = (void **)&v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_specs + 376];
    v3 = *v2;
    v4 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_color];
    *(_QWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_color] = v3;
    v5 = v3;
    v6 = v1;
    sub_4E684(0, (unint64_t *)&qword_150EC20, UIColor_ptr);
    v7 = v5;
    LOBYTE(v5) = static NSObject.== infix(_:_:)(v7, v4);

    if ((v5 & 1) == 0)
      sub_E199EC();

  }
  else
  {
    __break(1u);
  }
}

void sub_DF8624(uint64_t a1)
{
  char *v1;
  char *v3;
  void **v4;
  void *v5;
  void *v6;
  id v7;
  char *v8;
  id v9;
  objc_super v10;

  v10.receiver = v1;
  v10.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v10, "traitCollectionDidChange:", a1);
  v3 = *(char **)&v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_gradientView];
  if (v3)
  {
    if (v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_kind])
      v4 = (void **)&v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_specs + 384];
    else
      v4 = (void **)&v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_specs + 376];
    v5 = *v4;
    v6 = *(void **)&v3[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_color];
    *(_QWORD *)&v3[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_color] = v5;
    v7 = v5;
    v8 = v3;
    sub_4E684(0, (unint64_t *)&qword_150EC20, UIColor_ptr);
    v9 = v7;
    LOBYTE(v7) = static NSObject.== infix(_:_:)(v9, v6);

    if ((v7 & 1) == 0)
      sub_E199EC();

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_DF8818()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 88));
  return swift_deallocClassInstance(v0, 96, 7);
}

uint64_t _s4LineCMa()
{
  return objc_opt_self(_TtCC11MusicCoreUI20SyncedLyricsLineView4Line);
}

uint64_t _s4LineC8LineViewCMa()
{
  return objc_opt_self(_TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView);
}

_UNKNOWN **sub_DF8894()
{
  return &off_15080B0;
}

void sub_DF88A0(char **a1)
{
  char *v2;
  uint64_t v3;
  _QWORD v4[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v2 = sub_DF92C8((uint64_t)v2);
  v3 = *((_QWORD *)v2 + 2);
  v4[0] = v2 + 32;
  v4[1] = v3;
  sub_DF8908(v4);
  *a1 = v2;
}

void sub_DF8908(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  Swift::Int v3;
  Swift::Int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  Swift::Int v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  Swift::Int v13;
  double v14;
  double v15;
  double v16;
  double v17;
  uint64_t *v18;
  Swift::Int v19;
  Swift::Int v20;
  uint64_t *v21;
  uint64_t v22;
  Swift::Int v23;
  double *v24;
  double v25;
  Swift::Int v26;
  double *v27;
  double v28;
  unint64_t v29;
  unint64_t v30;
  char *v31;
  char *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  BOOL v44;
  unint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  BOOL v54;
  uint64_t v55;
  char v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  unint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t i;
  double v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  unint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  _QWORD *v96;
  Swift::Int v97;
  Swift::Int v98;
  uint64_t v99;
  double *v100;

  v2 = a1;
  v3 = a1[1];
  v4 = _minimumMergeRunLength(_:)(v3);
  if (v4 >= v3)
  {
    if (v3 < 0)
      goto LABEL_137;
    if ((unint64_t)v3 >= 2)
    {
      v80 = 0;
      v81 = *v2;
      for (i = 1; i != v3; ++i)
      {
        v83 = *(double *)(v81 + 8 * i);
        v84 = v80;
        do
        {
          v85 = v81 + 8 * v84;
          if (v83 >= *(double *)v85)
            break;
          if (!v81)
            goto LABEL_141;
          *(_QWORD *)(v85 + 8) = *(_QWORD *)v85;
          *(double *)(v81 + 8 * v84--) = v83;
        }
        while (v84 != -1);
        ++v80;
      }
    }
  }
  else
  {
    if (v3 >= 0)
      v5 = v3;
    else
      v5 = v3 + 1;
    if (v3 < -1)
      goto LABEL_136;
    v97 = v4;
    v98 = v3;
    if (v3 > 1)
    {
      v6 = v5 >> 1;
      v7 = static Array._allocateBufferUninitialized(minimumCapacity:)(v5 >> 1, &type metadata for Double);
      *(_QWORD *)(v7 + 16) = v6;
      v3 = v98;
      v96 = (_QWORD *)v7;
      v100 = (double *)(v7 + 32);
LABEL_13:
      v9 = 0;
      v10 = *v2;
      v94 = v2;
      v95 = *v2 - 8;
      v11 = (char *)_swiftEmptyArrayStorage;
      v99 = *v2;
      while (1)
      {
        v13 = v9++;
        if (v9 < v3)
        {
          v14 = *(double *)(v10 + 8 * v9);
          v15 = *(double *)(v10 + 8 * v13);
          v9 = v13 + 2;
          if (v13 + 2 < v3)
          {
            v16 = v14;
            while (1)
            {
              v17 = v16;
              v16 = *(double *)(v10 + 8 * v9);
              if (v14 < v15 == v16 >= v17)
                break;
              if (v3 == ++v9)
              {
                v9 = v3;
                break;
              }
            }
          }
          if (v14 < v15)
          {
            if (v9 < v13)
              goto LABEL_138;
            if (v13 < v9)
            {
              v18 = (uint64_t *)(v95 + 8 * v9);
              v19 = v9;
              v20 = v13;
              v21 = (uint64_t *)(v10 + 8 * v13);
              do
              {
                if (v20 != --v19)
                {
                  if (!v10)
                    goto LABEL_144;
                  v22 = *v21;
                  *v21 = *v18;
                  *v18 = v22;
                }
                ++v20;
                --v18;
                ++v21;
              }
              while (v20 < v19);
            }
          }
        }
        if (v9 < v3)
        {
          if (__OFSUB__(v9, v13))
            goto LABEL_135;
          if (v9 - v13 < v97)
          {
            v23 = v13 + v97;
            if (__OFADD__(v13, v97))
              goto LABEL_139;
            if (v23 >= v3)
              v23 = v3;
            if (v23 < v13)
            {
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
              return;
            }
            if (v9 != v23)
            {
              v24 = (double *)(v95 + 8 * v9);
              do
              {
                v25 = *(double *)(v10 + 8 * v9);
                v26 = v13;
                v27 = v24;
                do
                {
                  v28 = *v27;
                  if (v25 >= *v27)
                    break;
                  if (!v10)
                    goto LABEL_142;
                  *v27 = v25;
                  v27[1] = v28;
                  --v27;
                  ++v26;
                }
                while (v9 != v26);
                ++v9;
                ++v24;
              }
              while (v9 != v23);
              v9 = v23;
            }
          }
        }
        if (v9 < v13)
          goto LABEL_130;
        if ((swift_isUniquelyReferenced_nonNull_native(v11) & 1) == 0)
          v11 = sub_DF9154(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
        v30 = *((_QWORD *)v11 + 2);
        v29 = *((_QWORD *)v11 + 3);
        v12 = v30 + 1;
        v10 = v99;
        if (v30 >= v29 >> 1)
        {
          v79 = sub_DF9154((char *)(v29 > 1), v30 + 1, 1, v11);
          v10 = v99;
          v11 = v79;
        }
        *((_QWORD *)v11 + 2) = v12;
        v31 = v11 + 32;
        v32 = &v11[16 * v30 + 32];
        *(_QWORD *)v32 = v13;
        *((_QWORD *)v32 + 1) = v9;
        if (v30)
        {
          while (1)
          {
            v33 = v12 - 1;
            if (v12 >= 4)
            {
              v38 = &v31[16 * v12];
              v39 = *((_QWORD *)v38 - 8);
              v40 = *((_QWORD *)v38 - 7);
              v44 = __OFSUB__(v40, v39);
              v41 = v40 - v39;
              if (v44)
                goto LABEL_119;
              v43 = *((_QWORD *)v38 - 6);
              v42 = *((_QWORD *)v38 - 5);
              v44 = __OFSUB__(v42, v43);
              v36 = v42 - v43;
              v37 = v44;
              if (v44)
                goto LABEL_120;
              v45 = v12 - 2;
              v46 = &v31[16 * v12 - 32];
              v48 = *(_QWORD *)v46;
              v47 = *((_QWORD *)v46 + 1);
              v44 = __OFSUB__(v47, v48);
              v49 = v47 - v48;
              if (v44)
                goto LABEL_121;
              v44 = __OFADD__(v36, v49);
              v50 = v36 + v49;
              if (v44)
                goto LABEL_123;
              if (v50 >= v41)
              {
                v68 = &v31[16 * v33];
                v70 = *(_QWORD *)v68;
                v69 = *((_QWORD *)v68 + 1);
                v44 = __OFSUB__(v69, v70);
                v71 = v69 - v70;
                if (v44)
                  goto LABEL_129;
                v61 = v36 < v71;
                goto LABEL_83;
              }
            }
            else
            {
              if (v12 != 3)
              {
                v62 = *((_QWORD *)v11 + 4);
                v63 = *((_QWORD *)v11 + 5);
                v44 = __OFSUB__(v63, v62);
                v55 = v63 - v62;
                v56 = v44;
                goto LABEL_77;
              }
              v35 = *((_QWORD *)v11 + 4);
              v34 = *((_QWORD *)v11 + 5);
              v44 = __OFSUB__(v34, v35);
              v36 = v34 - v35;
              v37 = v44;
            }
            if ((v37 & 1) != 0)
              goto LABEL_122;
            v45 = v12 - 2;
            v51 = &v31[16 * v12 - 32];
            v53 = *(_QWORD *)v51;
            v52 = *((_QWORD *)v51 + 1);
            v54 = __OFSUB__(v52, v53);
            v55 = v52 - v53;
            v56 = v54;
            if (v54)
              goto LABEL_124;
            v57 = &v31[16 * v33];
            v59 = *(_QWORD *)v57;
            v58 = *((_QWORD *)v57 + 1);
            v44 = __OFSUB__(v58, v59);
            v60 = v58 - v59;
            if (v44)
              goto LABEL_126;
            if (__OFADD__(v55, v60))
              goto LABEL_128;
            if (v55 + v60 >= v36)
            {
              v61 = v36 < v60;
LABEL_83:
              if (v61)
                v33 = v45;
              goto LABEL_85;
            }
LABEL_77:
            if ((v56 & 1) != 0)
              goto LABEL_125;
            v64 = &v31[16 * v33];
            v66 = *(_QWORD *)v64;
            v65 = *((_QWORD *)v64 + 1);
            v44 = __OFSUB__(v65, v66);
            v67 = v65 - v66;
            if (v44)
              goto LABEL_127;
            if (v67 < v55)
              goto LABEL_15;
LABEL_85:
            v72 = v33 - 1;
            if (v33 - 1 >= v12)
            {
              __break(1u);
LABEL_116:
              __break(1u);
LABEL_117:
              __break(1u);
LABEL_118:
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
              goto LABEL_140;
            }
            if (!v10)
              goto LABEL_143;
            v73 = &v31[16 * v72];
            v74 = *(_QWORD *)v73;
            v75 = v31;
            v76 = &v31[16 * v33];
            v77 = *((_QWORD *)v76 + 1);
            sub_DF8F54((double *)(v10 + 8 * *(_QWORD *)v73), (double *)(v10 + 8 * *(_QWORD *)v76), v10 + 8 * v77, v100);
            if (v1)
              goto LABEL_113;
            if (v77 < v74)
              goto LABEL_116;
            if (v33 > *((_QWORD *)v11 + 2))
              goto LABEL_117;
            *(_QWORD *)v73 = v74;
            *(_QWORD *)&v75[16 * v72 + 8] = v77;
            v78 = *((_QWORD *)v11 + 2);
            if (v33 >= v78)
              goto LABEL_118;
            v12 = v78 - 1;
            memmove(v76, v76 + 16, 16 * (v78 - 1 - v33));
            v31 = v75;
            *((_QWORD *)v11 + 2) = v78 - 1;
            v10 = v99;
            if (v78 <= 2)
              goto LABEL_15;
          }
        }
        v12 = 1;
LABEL_15:
        v3 = v98;
        if (v9 >= v98)
        {
          v8 = v96;
          v2 = v94;
          goto LABEL_102;
        }
      }
    }
    v8 = _swiftEmptyArrayStorage;
    v100 = (double *)&_swiftEmptyArrayStorage[4];
    if (v3 == 1)
    {
      v96 = _swiftEmptyArrayStorage;
      goto LABEL_13;
    }
    v12 = _swiftEmptyArrayStorage[2];
    v11 = (char *)_swiftEmptyArrayStorage;
LABEL_102:
    v96 = v8;
    if (v12 >= 2)
    {
      v86 = *v2;
      do
      {
        v87 = v12 - 2;
        if (v12 < 2)
          goto LABEL_131;
        if (!v86)
          goto LABEL_145;
        v88 = v11;
        v89 = v11 + 32;
        v90 = *(_QWORD *)&v11[16 * v87 + 32];
        v91 = *(_QWORD *)&v11[16 * v12 + 24];
        sub_DF8F54((double *)(v86 + 8 * v90), (double *)(v86 + 8 * *(_QWORD *)&v89[16 * v12 - 16]), v86 + 8 * v91, v100);
        if (v1)
          break;
        if (v91 < v90)
          goto LABEL_132;
        if ((swift_isUniquelyReferenced_nonNull_native(v88) & 1) == 0)
          v88 = sub_DF924C((uint64_t)v88);
        if (v87 >= *((_QWORD *)v88 + 2))
          goto LABEL_133;
        v92 = &v88[16 * v87 + 32];
        *(_QWORD *)v92 = v90;
        *((_QWORD *)v92 + 1) = v91;
        v93 = *((_QWORD *)v88 + 2);
        if (v12 > v93)
          goto LABEL_134;
        memmove(&v88[16 * v12 + 16], &v88[16 * v12 + 32], 16 * (v93 - v12));
        v11 = v88;
        *((_QWORD *)v88 + 2) = v93 - 1;
        v12 = v93 - 1;
      }
      while (v93 > 2);
    }
LABEL_113:
    swift_bridgeObjectRelease();
    v96[2] = 0;
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_DF8F54(double *__dst, double *__src, unint64_t a3, double *a4)
{
  double *v4;
  double *v6;
  double *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double *v14;
  double v15;
  BOOL v16;
  double *v17;
  double *v18;
  double *v19;
  double v20;
  double v21;
  int64_t v23;

  v4 = a4;
  v6 = __src;
  v7 = __dst;
  v8 = (char *)__src - (char *)__dst;
  v9 = (char *)__src - (char *)__dst + 7;
  if ((char *)__src - (char *)__dst >= 0)
    v9 = (char *)__src - (char *)__dst;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)__src;
  v12 = a3 - (_QWORD)__src + 7;
  if ((uint64_t)(a3 - (_QWORD)__src) >= 0)
    v12 = a3 - (_QWORD)__src;
  v13 = v12 >> 3;
  if (v10 >= v12 >> 3)
  {
    if (a4 != __src || &__src[v13] <= a4)
      memmove(a4, __src, 8 * v13);
    v14 = &v4[v13];
    if (v7 >= v6 || v11 < 8)
      goto LABEL_39;
    v17 = (double *)(a3 - 8);
    v18 = v6;
    while (1)
    {
      v19 = v17 + 1;
      v20 = *--v18;
      v21 = v20;
      if (*(v14 - 1) < v20)
        break;
      v21 = *(v14 - 1);
      v18 = v6;
      if (v19 != v14)
      {
        --v14;
LABEL_35:
        *v17 = v21;
        goto LABEL_36;
      }
      if (v17 >= v14--)
        goto LABEL_35;
LABEL_36:
      if (v18 > v7)
      {
        --v17;
        v6 = v18;
        if (v14 > v4)
          continue;
      }
      v6 = v18;
      goto LABEL_39;
    }
    if (v19 == v6 && v17 < v6)
      goto LABEL_36;
    goto LABEL_35;
  }
  if (a4 != __dst || &__dst[v10] <= a4)
    memmove(a4, __dst, 8 * v10);
  v14 = &v4[v10];
  if ((unint64_t)v6 < a3 && v8 >= 8)
  {
    while (1)
    {
      v15 = *v6;
      if (*v6 >= *v4)
        break;
      v16 = v7 == v6++;
      if (!v16)
        goto LABEL_16;
LABEL_17:
      ++v7;
      if (v4 >= v14 || (unint64_t)v6 >= a3)
        goto LABEL_19;
    }
    v15 = *v4;
    v16 = v7 == v4++;
    if (v16)
      goto LABEL_17;
LABEL_16:
    *v7 = v15;
    goto LABEL_17;
  }
LABEL_19:
  v6 = v7;
LABEL_39:
  v23 = (char *)v14 - (char *)v4 + ((char *)v14 - (char *)v4 < 0 ? 7uLL : 0);
  if (v6 != v4 || v6 >= (double *)((char *)v4 + (v23 & 0xFFFFFFFFFFFFFFF8)))
    memmove(v6, v4, 8 * (v23 >> 3));
  return 1;
}

char *sub_DF9154(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1507E68);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = _swift_stdlib_malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v11;
}

char *sub_DF924C(uint64_t a1)
{
  return sub_DF9154(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_DF9260()
{
  uint64_t v0;

  return swift_deallocObject(v0, 56, 7);
}

id sub_DF9284()
{
  uint64_t v0;
  id result;

  result = *(id *)(*(_QWORD *)(v0 + 16)
                 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_gradientView);
  if (result)
    return objc_msgSend(result, "setFrame:", *(double *)(v0 + 24), *(double *)(v0 + 32), *(double *)(v0 + 40), *(double *)(v0 + 48));
  __break(1u);
  return result;
}

uint64_t block_copy_helper_336(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double block_destroy_helper_336(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

char *sub_DF92C8(uint64_t a1)
{
  return sub_DDF4F0(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

char *sub_DF92DC(uint64_t a1)
{
  return sub_DDFA94(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_DF92F0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 48));

  return swift_deallocObject(v0, 593, 7);
}

id sub_DF939C()
{
  uint64_t v0;

  return sub_DF7C9C(*(_BYTE *)(v0 + 16), *(id *)(v0 + 24), *(double *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_DF93B4()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_DF93D8()
{
  uint64_t v0;

  return sub_DF7D44(v0);
}

_QWORD *sub_DF93F8(_QWORD *result, char a2, uint64_t a3)
{
  void *v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  CGAffineTransform v7;

  v3 = (void *)result[18];
  if (v3)
  {
    if ((a2 & 1) != 0)
    {
      v4 = xmmword_10683C0;
      v5 = xmmword_10759D0;
      v6 = 0uLL;
    }
    else
    {
      CGAffineTransformMakeTranslation(&v7, 0.0, -*(double *)(a3 + 504));
      v5 = *(_OWORD *)&v7.a;
      v4 = *(_OWORD *)&v7.c;
      v6 = *(_OWORD *)&v7.tx;
    }
    *(_OWORD *)&v7.a = v5;
    *(_OWORD *)&v7.c = v4;
    *(_OWORD *)&v7.tx = v6;
    return objc_msgSend(v3, "setTransform:", &v7);
  }
  return result;
}

void sub_DF9474(uint64_t a1, uint64_t a2, char a3)
{
  void *v3;
  unsigned __int8 v4;

  if (!a1)
  {
    v3 = *(void **)(a2 + 96);
    *(_QWORD *)(a2 + 96) = (a3 & 1) == 0;
    v4 = *(_BYTE *)(a2 + 104);
    *(_BYTE *)(a2 + 104) = 2;
    sub_DF4F20(v3, v4);
  }
}

id sub_DF9524()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)_s8SyllableC12SyllableViewCMa();
  return objc_msgSendSuper2(&v2, "dealloc");
}

double sub_DF9554()
{
  uint64_t v0;
  double result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_DF4F20(*(id *)(v0 + 96), *(_BYTE *)(v0 + 104));

  *(_QWORD *)&result = swift_deallocClassInstance(v0, 152, 7).n128_u64[0];
  return result;
}

uint64_t _s8SyllableCMa()
{
  return objc_opt_self(_TtCC11MusicCoreUI20SyncedLyricsLineView8Syllable);
}

uint64_t _s8SyllableC12SyllableViewCMa()
{
  return objc_opt_self(_TtCCC11MusicCoreUI20SyncedLyricsLineView8Syllable12SyllableView);
}

_UNKNOWN **sub_DF95DC()
{
  return &off_1507CC8;
}

void sub_DF95E8()
{
  uint64_t v0;
  uint64_t v1;
  Class isa;
  int v3;
  BOOL v4;
  void *v5;
  void *v6;
  void *v7;
  unsigned __int8 v8;
  objc_class *v9;
  void **v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;

  v1 = v0;
  isa = *(Class *)(v0 + 96);
  v3 = *(unsigned __int8 *)(v1 + 104);
  if (v3 == 1)
  {
    if (isa)
    {
LABEL_9:
      sub_DF4EFC(isa, v3);
      -[objc_class stopAnimation:](isa, "stopAnimation:", 1);
      goto LABEL_10;
    }
  }
  else
  {
    if (*(_BYTE *)(v1 + 104))
      v4 = 1;
    else
      v4 = isa == 0;
    if (!v4)
      goto LABEL_9;
  }
  sub_DF6544();
  isa = UIViewPropertyAnimator.init(springTimingParameters:)((UISpringTimingParameters)objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 14.0, 7.0, 0.0, 0.0)).super.isa;
LABEL_10:
  v14 = sub_DF97B8;
  v15 = v1;
  v10 = _NSConcreteStackBlock;
  v11 = 1107296256;
  v12 = sub_42D124;
  v13 = &block_descriptor_343;
  v5 = _Block_copy(&v10);
  swift_retain();
  -[objc_class addAnimations:](isa, "addAnimations:", v5, swift_release().n128_f64[0]);
  _Block_release(v5);
  v14 = sub_DF9810;
  v15 = v1;
  v10 = _NSConcreteStackBlock;
  v11 = 1107296256;
  v12 = sub_59BEF0;
  v13 = &block_descriptor_3_23;
  v6 = _Block_copy(&v10);
  swift_retain();
  -[objc_class addCompletion:](isa, "addCompletion:", v6, swift_release().n128_f64[0]);
  _Block_release(v6);
  v7 = *(void **)(v1 + 96);
  *(_QWORD *)(v1 + 96) = isa;
  v8 = *(_BYTE *)(v1 + 104);
  *(_BYTE *)(v1 + 104) = 1;
  v9 = isa;
  sub_DF4F20(v7, v8);
  -[objc_class startAnimation](v9, "startAnimation");

}

id sub_DF97B8()
{
  uint64_t v0;
  id result;
  _QWORD v2[6];

  result = *(id *)(v0 + 144);
  if (result)
  {
    v2[0] = 0x3FF0000000000000;
    v2[1] = 0;
    v2[2] = 0;
    v2[3] = 0x3FF0000000000000;
    v2[4] = 0;
    v2[5] = 0;
    return objc_msgSend(result, "setTransform:", v2);
  }
  return result;
}

uint64_t block_copy_helper_337(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double block_destroy_helper_337(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

void sub_DF9810(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  unsigned __int8 v3;

  if (!a1)
  {
    v2 = *(void **)(v1 + 96);
    *(_QWORD *)(v1 + 96) = 0;
    v3 = *(_BYTE *)(v1 + 104);
    *(_BYTE *)(v1 + 104) = 2;
    sub_DF4F20(v2, v3);
  }
}

_QWORD *sub_DF9838(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if ((unint64_t)a1 >> 62)
    goto LABEL_12;
  v2 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  while (v2)
  {
    v3 = 4;
    while (1)
    {
      v4 = v3 - 4;
      if ((a1 & 0xC000000000000001) == 0)
        break;
      v5 = specialized _ArrayBuffer._getElementSlowPath(_:)(v3 - 4, a1);
      v6 = v3 - 3;
      if (__OFADD__(v4, 1))
        goto LABEL_11;
LABEL_9:
      v7 = *(_QWORD *)(v5 + 88);
      swift_bridgeObjectRetain();
      swift_release();
      sub_E68928(v7);
      ++v3;
      if (v6 == v2)
        goto LABEL_16;
    }
    v5 = *(_QWORD *)(a1 + 8 * v3);
    swift_retain();
    v6 = v3 - 3;
    if (!__OFADD__(v4, 1))
      goto LABEL_9;
LABEL_11:
    __break(1u);
LABEL_12:
    if (a1 < 0)
      v8 = a1;
    else
      v8 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v2 = _CocoaArrayWrapper.endIndex.getter(v8);
  }
LABEL_16:
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

void sub_DF9958()
{
  unint64_t v0;
  unint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  double *v10;
  id v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  BOOL v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void *v31;
  unsigned __int8 v32;
  unint64_t v33;
  uint64_t v34;
  char v35[24];
  char v36[32];

  v1 = v0;
  v2 = *(void **)(v0 + 128);
  if (v2)
  {
    v3 = objc_msgSend(v2, "layer");
    objc_msgSend(v3, "removeAllAnimations");

  }
  if (*(_QWORD *)(v1 + 136))
  {
    swift_retain();
    Task.cancel()();
    swift_release();
  }
  *(_QWORD *)(v1 + 136) = 0;
  swift_release();
  v4 = *(void **)(v1 + 128);
  if (v4)
  {
    v5 = v4;
    sub_DFADE8();

  }
  v6 = swift_bridgeObjectRetain();
  v7 = (uint64_t)sub_DF9838(v6);
  swift_bridgeObjectRelease();
  if ((unint64_t)v7 >> 62)
    goto LABEL_37;
  v8 = *(_QWORD *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFF8));
  while (v8)
  {
    v9 = 0;
    v34 = v8;
    v33 = v1;
    while (1)
    {
      if ((v7 & 0xC000000000000001) != 0)
      {
        v14 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v7);
        v15 = __OFADD__(v9++, 1);
        if (v15)
          break;
        goto LABEL_17;
      }
      if (v9 >= *(_QWORD *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFFF8)))
        goto LABEL_36;
      v14 = *(_QWORD **)(v7 + 32 + 8 * v9);
      swift_retain();
      v15 = __OFADD__(v9++, 1);
      if (v15)
        break;
LABEL_17:
      v16 = (char *)v14[8];
      if (v16)
      {
        v17 = v14[4];
        v18 = v14[5];
        v19 = v14[6];
        v20 = v14[7];
        v21 = (uint64_t *)&v16[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView5Glyph9GlyphView_currentAnimators];
        swift_beginAccess(&v16[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView5Glyph9GlyphView_currentAnimators], v36, 0, 0);
        v22 = *v21;
        if ((unint64_t)v22 >> 62)
        {
          if (v22 < 0)
            v28 = v22;
          else
            v28 = v22 & 0xFFFFFFFFFFFFFF8;
          v29 = v16;
          swift_bridgeObjectRetain();
          v23 = _CocoaArrayWrapper.endIndex.getter(v28);
          if (!v23)
            goto LABEL_10;
        }
        else
        {
          v23 = *(_QWORD *)((char *)&dword_10 + (v22 & 0xFFFFFFFFFFFFF8));
          v24 = v16;
          swift_bridgeObjectRetain();
          if (!v23)
            goto LABEL_10;
        }
        if (v23 < 1)
          goto LABEL_35;
        v25 = 0;
        v1 = v22 & 0xC000000000000001;
        do
        {
          if (v1)
            v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v25, v22);
          else
            v26 = *(id *)(v22 + 8 * v25 + 32);
          v27 = v26;
          ++v25;
          objc_msgSend(v26, "stopAnimation:", 0, v33);

        }
        while (v23 != v25);
LABEL_10:
        swift_bridgeObjectRelease();
        sub_DF5818();
        v10 = (double *)CGPoint.center.unsafeMutableAddressor();
        swift_beginAccess(v10, v35, 0, 0);
        UIView.setAnchorPoint(_:preserveFrame:)(1, *v10, v10[1]);
        sub_4E684(0, (unint64_t *)&qword_150B080, UIView_ptr);
        sub_4E684(0, &qword_15084D0, UISpringTimingParameters_ptr);
        v11 = UISpringTimingParameters.init(dampingRatio:response:)(1.0, 1.5);
        v12 = (_QWORD *)swift_allocObject(&unk_13C62C8, 56, 7);
        v12[2] = v16;
        v12[3] = v17;
        v12[4] = v18;
        v12[5] = v19;
        v12[6] = v20;
        v13 = v16;
        static UIView.animate(withSpringTimingParameters:delay:options:animations:completion:)(v11, 0, sub_DFB7D8, (uint64_t)v12, 0, 0, 0.0);

        objc_msgSend(v13, "sizeToFit", swift_release().n128_f64[0]);
        swift_release();

        v8 = v34;
        if (v9 == v34)
          goto LABEL_33;
      }
      else
      {
        swift_release();
        if (v9 == v8)
        {
LABEL_33:
          swift_bridgeObjectRelease();
          v1 = v33;
          goto LABEL_42;
        }
      }
    }
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    if (v7 < 0)
      v30 = v7;
    else
      v30 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = _CocoaArrayWrapper.endIndex.getter(v30);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
LABEL_42:
  v31 = *(void **)(v1 + 80);
  *(_QWORD *)(v1 + 80) = 0;
  v32 = *(_BYTE *)(v1 + 88);
  *(_BYTE *)(v1 + 88) = 2;
  sub_DF4F20(v31, v32);
}

void sub_DF9D3C(uint64_t a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  unint64_t v12;
  uint64_t v13;
  double v14;
  _BOOL4 v15;
  Class isa;
  int v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  unsigned __int8 v23;
  objc_class *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  double *v35;
  id v36;
  _QWORD *v37;
  char *v38;
  _QWORD *v39;
  BOOL v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t j;
  id v52;
  void *v53;
  char *v54;
  uint64_t v55;
  void *v56;
  unsigned __int8 v57;
  double v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  double v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  unsigned __int8 v66;
  void *v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  double v73;
  double v74;
  double v75;
  double v76;
  id v77;
  double v78;
  double v79;
  double v80;
  double v81;
  double v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  double v86;
  double v87;
  double v88;
  double v89;
  uint64_t v90;
  void *v91;
  double v92;
  double v93;
  double v94;
  double v95;
  id v96;
  void *v97;
  double v98;
  id v99;
  uint64_t v100;
  _QWORD v101[2];
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t i;
  double v108;
  double v109;
  double v110;
  char v111[32];
  void **aBlock;
  uint64_t v113;
  void *v114;
  void *v115;
  void *v116;
  uint64_t v117;

  v4 = v2;
  v109 = *(double *)&a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_15085D0);
  __chkstk_darwin();
  v103 = (char *)v101 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = *(double *)(v2 + 72);
  if (*(_QWORD *)&v110 >> 62)
  {
    if (v110 < 0.0)
      v25 = *(_QWORD *)&v110;
    else
      v25 = *(_QWORD *)&v110 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v7 = _CocoaArrayWrapper.endIndex.getter(v25);
    if (v7)
      goto LABEL_3;
  }
  else
  {
    v7 = *(_QWORD *)((char *)&dword_10 + (*(_QWORD *)&v110 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    if (v7)
    {
LABEL_3:
      v8 = v7 - 1;
      if (v7 < 1)
        goto LABEL_75;
      v104 = v4;
      v9 = 0;
      v11 = v109;
      v10 = v110;
      v12 = *(_QWORD *)&v110 & 0xC000000000000001;
      while (1)
      {
        if (v12)
        {
          v13 = specialized _ArrayBuffer._getElementSlowPath(_:)(v9, *(_QWORD *)&v10);
        }
        else
        {
          v13 = *(_QWORD *)(*(_QWORD *)&v10 + 8 * v9 + 32);
          swift_retain();
        }
        v14 = *(double *)(v13 + 16);
        v15 = v14 <= a2;
        if (*(unsigned __int8 *)(v13 + 104) >= 2u)
        {
          if (*(_QWORD *)(v13 + 96))
          {
            if (v14 <= a2)
              goto LABEL_5;
            v15 = 0;
          }
          else if (v14 > a2)
          {
LABEL_5:
            swift_release();
            if (v8 == v9)
              goto LABEL_25;
            goto LABEL_6;
          }
        }
        sub_DF4F20((id)v15, 2u);
        isa = *(Class *)(v13 + 96);
        v17 = *(unsigned __int8 *)(v13 + 104);
        if (v17 == 1)
        {
          if (isa && v14 <= a2)
          {
LABEL_22:
            sub_DF4EFC(*(id *)(v13 + 96), v17);
            -[objc_class stopAnimation:](isa, "stopAnimation:", 1);
            goto LABEL_24;
          }
        }
        else if (!*(_BYTE *)(v13 + 104) && isa && v14 > a2)
        {
          goto LABEL_22;
        }
        sub_4E684(0, (unint64_t *)&qword_1508790, UIViewPropertyAnimator_ptr);
        isa = UIViewPropertyAnimator.init(springTimingParameters:)((UISpringTimingParameters)objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 14.0, 7.0, 0.0, 0.0)).super.isa;
LABEL_24:
        v18 = swift_allocObject(&unk_13C61B0, 569, 7);
        *(_QWORD *)(v18 + 16) = v13;
        *(_BYTE *)(v18 + 24) = v14 > a2;
        memcpy((void *)(v18 + 32), *(const void **)&v11, 0x219uLL);
        v116 = sub_DFB69C;
        v117 = v18;
        aBlock = _NSConcreteStackBlock;
        v113 = 1107296256;
        v114 = sub_42D124;
        v115 = &block_descriptor_344;
        v19 = _Block_copy(&aBlock);
        swift_retain();
        sub_533134(*(uint64_t *)&v11);
        -[objc_class addAnimations:](isa, "addAnimations:", v19, swift_release().n128_f64[0]);
        _Block_release(v19);
        v20 = swift_allocObject(&unk_13C6200, 25, 7);
        *(_QWORD *)(v20 + 16) = v13;
        *(_BYTE *)(v20 + 24) = v14 > a2;
        v116 = sub_DFB6E8;
        v117 = v20;
        aBlock = _NSConcreteStackBlock;
        v113 = 1107296256;
        v114 = sub_59BEF0;
        v115 = &block_descriptor_6_29;
        v21 = _Block_copy(&aBlock);
        swift_retain();
        -[objc_class addCompletion:](isa, "addCompletion:", v21, swift_release().n128_f64[0]);
        _Block_release(v21);
        v22 = *(void **)(v13 + 96);
        *(_QWORD *)(v13 + 96) = isa;
        v23 = *(_BYTE *)(v13 + 104);
        *(_BYTE *)(v13 + 104) = v14 > a2;
        v24 = isa;
        sub_DF4F20(v22, v23);
        -[objc_class startAnimation](v24, "startAnimation");
        swift_release();

        v10 = v110;
        if (v8 == v9)
        {
LABEL_25:
          swift_bridgeObjectRelease();
          v4 = v104;
          goto LABEL_31;
        }
LABEL_6:
        ++v9;
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_31:
  v26 = *(_QWORD *)(v4 + 32);
  v27 = *(_QWORD *)(v26 + 16);
  if (v27)
  {
    if (*(double *)(v26 + 32) <= a2)
    {
LABEL_81:
      if (*(double *)(v26 + 32) > a2)
        return;
      goto LABEL_84;
    }
  }
  else if (a2 >= 0.0)
  {
    goto LABEL_83;
  }
  if (*(_BYTE *)(v4 + 88) == 2 && !*(_QWORD *)(v4 + 80))
  {
    if (v27)
      goto LABEL_81;
    goto LABEL_83;
  }
  v28 = *(void **)(v4 + 128);
  if (v28)
  {
    v29 = objc_msgSend(v28, "layer");
    objc_msgSend(v29, "removeAllAnimations");

  }
  if (*(_QWORD *)(v4 + 136))
  {
    swift_retain();
    Task.cancel()();
    swift_release();
  }
  *(_QWORD *)(v4 + 136) = 0;
  swift_release();
  v30 = *(void **)(v4 + 128);
  if (v30)
  {
    v31 = v30;
    sub_DFADE8();

  }
  v102 = v26;
  v32 = swift_bridgeObjectRetain();
  v3 = (uint64_t)sub_DF9838(v32);
  swift_bridgeObjectRelease();
  v104 = v4;
  v101[1] = 0;
  if ((unint64_t)v3 >> 62)
    goto LABEL_76;
  v33 = *(_QWORD *)((char *)&dword_10 + (v3 & 0xFFFFFFFFFFFFF8));
  if (v33)
  {
LABEL_48:
    v34 = 0;
    *(_QWORD *)&v108 = v3 & 0xC000000000000001;
    v106 = v3 & 0xFFFFFFFFFFFFFF8;
    v105 = v3 + 32;
    for (i = v33; i != v34; v33 = i)
    {
      while (1)
      {
        if (v108 == 0.0)
        {
          if (v34 >= *(_QWORD *)(v106 + 16))
            goto LABEL_74;
          v39 = *(_QWORD **)(v105 + 8 * v34);
          swift_retain();
          v40 = __OFADD__(v34++, 1);
          if (v40)
          {
LABEL_72:
            __break(1u);
LABEL_73:
            __break(1u);
LABEL_74:
            __break(1u);
LABEL_75:
            __break(1u);
LABEL_76:
            if (v3 < 0)
              v55 = v3;
            else
              v55 = v3 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain();
            v33 = _CocoaArrayWrapper.endIndex.getter(v55);
            swift_bridgeObjectRelease();
            if (!v33)
              goto LABEL_80;
            goto LABEL_48;
          }
        }
        else
        {
          v39 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v34, v3);
          v40 = __OFADD__(v34++, 1);
          if (v40)
            goto LABEL_72;
        }
        v41 = (char *)v39[8];
        if (v41)
          break;
        swift_release();
        if (v34 == v33)
          goto LABEL_80;
      }
      v42 = v3;
      v43 = v39[4];
      v44 = v39[5];
      v45 = v39[6];
      v46 = v39[7];
      v47 = (uint64_t *)&v41[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView5Glyph9GlyphView_currentAnimators];
      swift_beginAccess(&v41[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView5Glyph9GlyphView_currentAnimators], &aBlock, 0, 0);
      v48 = *v47;
      if ((unint64_t)v48 >> 62)
      {
        if (v48 < 0)
          v3 = v48;
        else
          v3 = v48 & 0xFFFFFFFFFFFFFF8;
        v54 = v41;
        swift_bridgeObjectRetain();
        v49 = _CocoaArrayWrapper.endIndex.getter(v3);
        if (!v49)
          goto LABEL_49;
      }
      else
      {
        v49 = *(_QWORD *)((char *)&dword_10 + (v48 & 0xFFFFFFFFFFFFF8));
        v50 = v41;
        swift_bridgeObjectRetain();
        if (!v49)
          goto LABEL_49;
      }
      if (v49 < 1)
        goto LABEL_73;
      for (j = 0; j != v49; ++j)
      {
        if ((v48 & 0xC000000000000001) != 0)
          v52 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v48);
        else
          v52 = *(id *)(v48 + 8 * j + 32);
        v53 = v52;
        objc_msgSend(v52, "stopAnimation:", 0);

      }
LABEL_49:
      swift_bridgeObjectRelease();
      sub_DF5818();
      v35 = (double *)CGPoint.center.unsafeMutableAddressor();
      swift_beginAccess(v35, v111, 0, 0);
      UIView.setAnchorPoint(_:preserveFrame:)(1, *v35, v35[1]);
      sub_4E684(0, (unint64_t *)&qword_150B080, UIView_ptr);
      sub_4E684(0, &qword_15084D0, UISpringTimingParameters_ptr);
      v36 = UISpringTimingParameters.init(dampingRatio:response:)(1.0, 1.5);
      v37 = (_QWORD *)swift_allocObject(&unk_13C62A0, 56, 7);
      v37[2] = v41;
      v37[3] = v43;
      v37[4] = v44;
      v37[5] = v45;
      v37[6] = v46;
      v38 = v41;
      static UIView.animate(withSpringTimingParameters:delay:options:animations:completion:)(v36, 0, sub_DFB7D8, (uint64_t)v37, 0, 0, 0.0);

      objc_msgSend(v38, "sizeToFit", swift_release().n128_f64[0]);
      swift_release();

      v3 = v42;
    }
  }
LABEL_80:
  swift_bridgeObjectRelease();
  v4 = v104;
  v56 = *(void **)(v104 + 80);
  *(_QWORD *)(v104 + 80) = 0;
  v57 = *(_BYTE *)(v4 + 88);
  *(_BYTE *)(v4 + 88) = 2;
  sub_DF4F20(v56, v57);
  v26 = v102;
  if (*(_QWORD *)(v102 + 16))
    goto LABEL_81;
LABEL_83:
  if (a2 < 0.0)
    return;
LABEL_84:
  if (*(_BYTE *)(v4 + 88) == 2 && !*(_QWORD *)(v4 + 80) && (*(_BYTE *)(v4 + 48) & 1) == 0)
  {
    v58 = *(double *)(v4 + 40);
    v59 = swift_bridgeObjectRetain();
    v60 = (uint64_t)sub_DF9838(v59);
    swift_bridgeObjectRelease();
    v61 = *(_QWORD *)(v26 + 16);
    if (v61)
      v62 = *(double *)(v26 + 32 + 56 * v61 - 48) - *(double *)(v26 + 32);
    else
      v62 = 0.0;
    v63 = *(_QWORD *)&v109;
    if ((unint64_t)v60 >> 62)
    {
      if (v60 < 0)
        v100 = v60;
      else
        v100 = v60 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v64 = _CocoaArrayWrapper.endIndex.getter(v100);
      swift_bridgeObjectRelease();
      if (v64 < 1)
        goto LABEL_117;
    }
    else
    {
      v64 = *(_QWORD *)((char *)&dword_10 + (v60 & 0xFFFFFFFFFFFFF8));
      if (v64 < 1)
        goto LABEL_117;
    }
    if (v62 > 0.0)
    {
      v65 = *(void **)(v4 + 80);
      *(_QWORD *)(v4 + 80) = 0;
      v66 = *(_BYTE *)(v4 + 88);
      *(_BYTE *)(v4 + 88) = 0;
      sub_DF4F20(v65, v66);
      v67 = *(void **)(v4 + 128);
      if (v67)
      {
        v68 = v67;
        sub_DFAFF8(v63, v58, v62);

      }
      v69 = type metadata accessor for TaskPriority(0);
      v70 = (uint64_t)v103;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 56))(v103, 1, 1, v69);
      v71 = swift_allocObject(&unk_13C6250, 24, 7);
      swift_weakInit(v71 + 16);
      v72 = swift_allocObject(&unk_13C6278, 48, 7);
      *(_QWORD *)(v72 + 16) = 0;
      *(_QWORD *)(v72 + 24) = 0;
      *(_QWORD *)(v72 + 32) = v71;
      *(double *)(v72 + 40) = v62;
      *(_QWORD *)(v4 + 136) = sub_E08E7C(v70, (uint64_t)&unk_1508110, v72);
      swift_release();
      v73 = (double)v64;
      v74 = v62 / (double)v64 * 0.4;
      if (v74 > 0.4)
        v74 = 0.4;
      v110 = v74;
      v75 = *(double *)(v63 + 216) + v58 * (*(double *)(v63 + 224) - *(double *)(v63 + 216));
      if (v62 <= 3.0)
        v76 = v62;
      else
        v76 = 3.0;
      sub_4E684(0, &qword_15084D0, UISpringTimingParameters_ptr);
      v77 = UISpringTimingParameters.init(dampingRatio:response:)(1.0, v76);
      v79 = *(double *)(v4 + 112);
      v78 = *(double *)(v4 + 120);
      v80 = CGSize.scaled(_:)(v77, v75, v79, v78);
      v82 = v81;
      if ((unint64_t)v60 >> 62)
      {
        if (v60 < 0)
          v84 = v60;
        else
          v84 = v60 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        v83 = _CocoaArrayWrapper.endIndex.getter(v84);
        swift_bridgeObjectRelease();
        if (!v83)
          goto LABEL_116;
      }
      else
      {
        v83 = *(_QWORD *)((char *)&dword_10 + (v60 & 0xFFFFFFFFFFFFF8));
        if (!v83)
        {
LABEL_116:

          goto LABEL_117;
        }
      }
      if (v83 < 1)
      {
        __break(1u);
        return;
      }
      v85 = 0;
      v86 = v73 * 0.5;
      v87 = (v79 - v80) * 0.5;
      v88 = v78 - v82;
      v89 = *(double *)(*(_QWORD *)&v109 + 504);
      v108 = v87;
      v109 = v62 / v86;
      do
      {
        while (1)
        {
          if ((v60 & 0xC000000000000001) != 0)
          {
            v90 = specialized _ArrayBuffer._getElementSlowPath(_:)(v85, v60);
          }
          else
          {
            v90 = *(_QWORD *)(v60 + 8 * v85 + 32);
            swift_retain();
          }
          ++v85;
          v91 = *(void **)(v90 + 64);
          if (v91)
          {
            v92 = *(double *)(v90 + 32);
            v93 = *(double *)(v90 + 40);
            v94 = (v92 + v108 + v75 * v92) * 0.5;
            v95 = v110 * (double)v85;
            v96 = v91;
            sub_DF5CB0(v77, v94, (v93 + v88 + v75 * v93) * 0.25 - v89, v75, v95);

            v97 = *(void **)(v90 + 64);
            if (v97)
              break;
          }
          swift_release();
          if (v83 == v85)
            goto LABEL_116;
        }
        v98 = v109 + v95;
        v99 = v97;
        sub_DF606C(v77, v92, v93 - v89, v98);
        swift_release();

      }
      while (v83 != v85);
      goto LABEL_116;
    }
LABEL_117:
    swift_bridgeObjectRelease();
  }
}

void sub_DFA8CC(void *a1, uint64_t a2)
{
  double *v2;
  double *v3;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  double v10;
  double v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  unsigned __int8 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  double v24;
  double v25;
  objc_class *v26;
  id v27;
  id v28;
  NSString v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double *v36;
  double v37;
  double v38;
  double v39;
  double v40;
  objc_class *v41;
  char *v42;
  id v43;
  id v44;
  NSString v45;
  id v46;
  void *v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  objc_super v52;
  objc_super v53;
  id v54[5];

  v3 = v2;
  v5 = objc_msgSend(objc_allocWithZone((Class)_s4WordC8WordViewCMa()), "initWithFrame:", v2[12], v2[13], v2[14], v2[15]);
  v6 = *(void **)(a2 + 344);
  UIView.Shadow.init(color:opacity:radius:offset:)((uint64_t)v6, (uint64_t)v54, 0.0, *(double *)(a2 + 352), 0.0, 0.0);
  v7 = v6;
  v8 = objc_msgSend(v5, "layer");
  v9 = objc_msgSend(v5, "traitCollection");
  objc_msgSend(v9, "displayScale");
  v11 = v10;

  objc_msgSend(v8, "setRasterizationScale:", v11);
  v12 = objc_msgSend(v5, "layer");
  objc_msgSend(v12, "setShouldRasterize:", 1);

  v13 = v5;
  sub_5F430(v54);
  UIView.shadow.setter((uint64_t)v54);

  v14 = (void *)*((_QWORD *)v3 + 16);
  *((_QWORD *)v3 + 16) = v13;
  v15 = v13;

  if (!*((_QWORD *)v3 + 16))
  {
    v16 = (void *)*((_QWORD *)v3 + 10);
    v3[10] = 0.0;
    v17 = *((_BYTE *)v3 + 88);
    *((_BYTE *)v3 + 88) = 2;
    sub_DF4F20(v16, v17);
  }

  v18 = *((_QWORD *)v3 + 9);
  if (((_BYTE)v3[6] & 1) == 0)
  {
    v32 = swift_bridgeObjectRetain();
    v33 = (uint64_t)sub_DF9838(v32);
    swift_bridgeObjectRelease();
    if ((unint64_t)v33 >> 62)
    {
      if (v33 < 0)
        v50 = v33;
      else
        v50 = v33 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v34 = _CocoaArrayWrapper.endIndex.getter(v50);
      swift_bridgeObjectRelease();
      if (!v34)
        goto LABEL_24;
    }
    else
    {
      v34 = *(_QWORD *)((char *)&dword_10 + (v33 & 0xFFFFFFFFFFFFF8));
      if (!v34)
        goto LABEL_24;
    }
    if (v34 >= 1)
    {
      v35 = 0;
      do
      {
        if ((v33 & 0xC000000000000001) != 0)
        {
          v36 = (double *)specialized _ArrayBuffer._getElementSlowPath(_:)(v35, v33);
        }
        else
        {
          v36 = *(double **)(v33 + 8 * v35 + 32);
          swift_retain();
        }
        ++v35;
        v37 = v36[4];
        v38 = v36[5];
        v39 = v36[6];
        v40 = v36[7];
        v41 = (objc_class *)_s5GlyphC9GlyphViewCMa();
        v42 = (char *)objc_allocWithZone(v41);
        *(_QWORD *)&v42[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView5Glyph9GlyphView_currentAnimators] = _swiftEmptyArrayStorage;
        v53.receiver = v42;
        v53.super_class = v41;
        v43 = a1;
        swift_bridgeObjectRetain();
        v44 = objc_msgSendSuper2(&v53, "initWithFrame:", v37, v38, v39, v40);
        v45 = String._bridgeToObjectiveC()();
        objc_msgSend(v44, "setText:", v45, swift_bridgeObjectRelease().n128_f64[0]);

        objc_msgSend(v44, "setFont:", v43);
        objc_msgSend(v44, "setTextAlignment:", 0);
        v46 = v44;
        objc_msgSend(v46, "sizeToFit");

        v47 = (void *)*((_QWORD *)v36 + 8);
        *((_QWORD *)v36 + 8) = v46;
        v48 = v46;

        objc_msgSend(v15, "addSubview:", v48);
        swift_release();

      }
      while (v34 != v35);
      goto LABEL_24;
    }
    goto LABEL_31;
  }
  if ((unint64_t)v18 >> 62)
  {
    if (v18 < 0)
      v49 = *((_QWORD *)v3 + 9);
    else
      v49 = v18 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v19 = _CocoaArrayWrapper.endIndex.getter(v49);
    if (v19)
      goto LABEL_6;
LABEL_24:
    swift_bridgeObjectRelease();
    sub_5F12C(v54);
    return;
  }
  v19 = *(_QWORD *)((char *)&dword_10 + (v18 & 0xFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  if (!v19)
    goto LABEL_24;
LABEL_6:
  if (v19 >= 1)
  {
    v20 = 0;
    do
    {
      if ((v18 & 0xC000000000000001) != 0)
      {
        v21 = specialized _ArrayBuffer._getElementSlowPath(_:)(v20, v18);
      }
      else
      {
        v21 = *(_QWORD *)(v18 + 8 * v20 + 32);
        swift_retain();
      }
      ++v20;
      v22 = *(double *)(v21 + 112);
      v23 = *(double *)(v21 + 120);
      v24 = *(double *)(v21 + 136);
      v25 = *(double *)(v21 + 128) + 50.0;
      v26 = (objc_class *)_s8SyllableC12SyllableViewCMa();
      v52.receiver = objc_allocWithZone(v26);
      v52.super_class = v26;
      swift_bridgeObjectRetain();
      v27 = a1;
      v28 = objc_msgSendSuper2(&v52, "initWithFrame:", v22, v23, v25, v24);
      v29 = String._bridgeToObjectiveC()();
      objc_msgSend(v28, "setText:", v29, swift_bridgeObjectRelease().n128_f64[0]);

      objc_msgSend(v28, "setFont:", v27);
      objc_msgSend(v28, "setTextAlignment:", 0);

      v30 = *(void **)(v21 + 144);
      *(_QWORD *)(v21 + 144) = v28;
      v31 = v28;

      objc_msgSend(v15, "addSubview:", v31);
      swift_release();

    }
    while (v19 != v20);
    goto LABEL_24;
  }
  __break(1u);
LABEL_31:
  __break(1u);
}

void sub_DFADE8()
{
  void *v0;
  void *v1;
  id v2;
  NSString v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  Class isa;
  id v10;
  Class v11;
  id v12;
  id v13;
  double v14;
  id v15;

  v1 = v0;
  sub_4E684(0, &qword_15084D0, UISpringTimingParameters_ptr);
  v2 = UISpringTimingParameters.init(dampingRatio:response:)(1.0, 1.5);
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend((id)objc_opt_self(CASpringAnimation), "animationWithKeyPath:", v3);

  v5 = v4;
  objc_msgSend(v2, "settlingDuration");
  objc_msgSend(v5, "setDuration:");

  v6 = v2;
  CASpringAnimation.springParameters.setter(v6);
  v7 = v5;
  v8 = objc_msgSend(v1, "layer");
  objc_msgSend(v8, "shadowOpacity");

  isa = Float._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v7, "setFromValue:", isa);

  v10 = v7;
  v11 = Int._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v10, "setToValue:", v11);

  v12 = objc_msgSend(v1, "layer");
  v13 = objc_msgSend(v10, "keyPath");
  objc_msgSend(v12, "addAnimation:forKey:", v10, v13);

  v15 = objc_msgSend(v1, "layer");
  LODWORD(v14) = 0;
  objc_msgSend(v15, "setShadowOpacity:", v14);

}

void sub_DFAFF8(uint64_t a1, double a2, double a3)
{
  void *v3;
  void *v4;
  float v5;
  double v6;
  id v7;
  NSString v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  Class isa;
  Class v15;
  id v16;
  id v17;
  double v18;
  id v19;

  v4 = v3;
  v5 = *(double *)(a1 + 360) + (*(double *)(a1 + 368) - *(double *)(a1 + 360)) * a2;
  if (a3 <= 3.0)
    v6 = a3;
  else
    v6 = 3.0;
  sub_4E684(0, &qword_15084D0, UISpringTimingParameters_ptr);
  v7 = UISpringTimingParameters.init(dampingRatio:response:)(1.0, v6);
  v8 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend((id)objc_opt_self(CASpringAnimation), "animationWithKeyPath:", v8);

  v10 = v9;
  objc_msgSend(v7, "settlingDuration");
  objc_msgSend(v10, "setDuration:");

  v11 = v7;
  CASpringAnimation.springParameters.setter(v11);
  v12 = v10;
  v13 = objc_msgSend(v4, "layer");
  objc_msgSend(v13, "shadowOpacity");

  isa = Float._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v12, "setFromValue:", isa);

  v15 = Float._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v12, "setToValue:", v15);

  v16 = objc_msgSend(v4, "layer");
  v17 = objc_msgSend(v12, "keyPath");
  objc_msgSend(v16, "addAnimation:forKey:", v12, v17);

  v19 = objc_msgSend(v4, "layer");
  *(float *)&v18 = v5;
  objc_msgSend(v19, "setShadowOpacity:", v18);

}

uint64_t sub_DFB21C(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(double *)(v5 + 96) = a1;
  *(_QWORD *)(v5 + 88) = a5;
  return swift_task_switch(sub_DFB238, 0, 0);
}

uint64_t sub_DFB238()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  __n128 v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  unsigned __int8 v16;
  uint64_t (*v17)(double);

  v1 = *(_QWORD *)(v0 + 88) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v3 = *(void **)(Strong + 128);
    *(_QWORD *)(v0 + 104) = v3;
    if (v3)
    {
      v3;
      swift_release();
      v17 = (uint64_t (*)(double))((char *)&dword_1508118 + dword_1508118);
      v4 = (_QWORD *)swift_task_alloc(unk_150811C);
      *(_QWORD *)(v0 + 112) = v4;
      *v4 = v0;
      v4[1] = sub_DFB394;
      return v17(*(double *)(v0 + 96));
    }
    swift_release();
  }
  v6 = *(_QWORD *)(v0 + 88) + 16;
  swift_beginAccess(v6, v0 + 40, 0, 0);
  v7 = swift_weakLoadStrong(v6);
  if (!v7
    || ((v8 = *(_QWORD *)(v7 + 80), v9 = *(unsigned __int8 *)(v7 + 88), v10 = swift_release(), v9 == 2)
      ? (v11 = v8 == 0)
      : (v11 = 0),
        !v11))
  {
    v12 = *(_QWORD *)(v0 + 88) + 16;
    swift_beginAccess(v12, v0 + 64, 0, 0);
    v13 = swift_weakLoadStrong(v12);
    if (v13)
    {
      v14 = v13;
      v15 = *(void **)(v13 + 80);
      *(_QWORD *)(v14 + 80) = 1;
      v16 = *(_BYTE *)(v14 + 88);
      *(_BYTE *)(v14 + 88) = 2;
      sub_DF4F20(v15, v16);
      v10 = swift_release();
    }
  }
  return (*(uint64_t (**)(__n128))(v0 + 8))(v10);
}

uint64_t sub_DFB394()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(*(_QWORD *)v0 + 104);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 112));

  return swift_task_switch(sub_DFB3EC, 0, 0);
}

uint64_t sub_DFB3EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  int v4;
  __n128 v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  unsigned __int8 v11;

  v1 = *(_QWORD *)(v0 + 88) + 16;
  swift_beginAccess(v1, v0 + 40, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (!Strong
    || ((v3 = *(_QWORD *)(Strong + 80), v4 = *(unsigned __int8 *)(Strong + 88), v5 = swift_release(), v4 == 2)
      ? (v6 = v3 == 0)
      : (v6 = 0),
        !v6))
  {
    v7 = *(_QWORD *)(v0 + 88) + 16;
    swift_beginAccess(v7, v0 + 64, 0, 0);
    v8 = swift_weakLoadStrong(v7);
    if (v8)
    {
      v9 = v8;
      v10 = *(void **)(v8 + 80);
      *(_QWORD *)(v9 + 80) = 1;
      v11 = *(_BYTE *)(v9 + 88);
      *(_BYTE *)(v9 + 88) = 2;
      sub_DF4F20(v10, v11);
      v5 = swift_release();
    }
  }
  return (*(uint64_t (**)(__n128))(v0 + 8))(v5);
}

double sub_DFB554()
{
  uint64_t v0;
  double result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_DF4F20(*(id *)(v0 + 80), *(_BYTE *)(v0 + 88));

  swift_release();
  *(_QWORD *)&result = swift_deallocClassInstance(v0, 144, 7).n128_u64[0];
  return result;
}

uint64_t _s4WordCMa()
{
  return objc_opt_self(_TtCC11MusicCoreUI20SyncedLyricsLineView4Word);
}

uint64_t _s4WordC8WordViewCMa()
{
  return objc_opt_self(_TtCCC11MusicCoreUI20SyncedLyricsLineView4Word8WordView);
}

_UNKNOWN **sub_DFB5F4()
{
  return &off_1507F60;
}

uint64_t sub_DFB600()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 569, 7);
}

_QWORD *sub_DFB69C()
{
  uint64_t v0;

  return sub_DF93F8(*(_QWORD **)(v0 + 16), *(_BYTE *)(v0 + 24), v0 + 32);
}

uint64_t block_copy_helper_338(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double block_destroy_helper_338(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_DFB6C4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

void sub_DFB6E8(uint64_t a1)
{
  uint64_t v1;

  sub_DF9474(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

uint64_t sub_DFB6F4()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_DFB718()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_DFB744()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = (_QWORD *)swift_task_alloc(dword_150810C);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_50F8C;
  v4[12] = v3;
  v4[11] = v2;
  return swift_task_switch(sub_DFB238, 0, 0);
}

uint64_t sub_DFB7B4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_DFB7DC(double a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v2 + 24) = v1;
  *(double *)(v2 + 16) = a1;
  v3 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v2 + 32) = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  *(_QWORD *)(v2 + 40) = v5;
  *(_QWORD *)(v2 + 48) = v6;
  return swift_task_switch(sub_DFB84C, v5, v6);
}

uint64_t sub_DFB84C()
{
  uint64_t v0;
  _QWORD *v1;
  void *v3;
  id v4;
  NSString v5;
  id v6;
  id v7;
  id v8;
  id v9;
  Class isa;
  id v11;
  Class v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;

  if (*(double *)(v0 + 16) <= 0.0)
  {
    v3 = *(void **)(v0 + 24);
    v4 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 14.0, 7.0, 0.0, 0.0);
    *(_QWORD *)(v0 + 72) = v4;
    v5 = String._bridgeToObjectiveC()();
    v6 = objc_msgSend((id)objc_opt_self(CASpringAnimation), "animationWithKeyPath:", v5);
    *(_QWORD *)(v0 + 80) = v6;

    v7 = v6;
    objc_msgSend(v4, "settlingDuration");
    objc_msgSend(v7, "setDuration:");

    CASpringAnimation.springParameters.setter(v4);
    v8 = v7;
    v9 = objc_msgSend(v3, "layer");
    objc_msgSend(v9, "shadowOpacity");

    isa = Float._bridgeToObjectiveC()().super.super.isa;
    objc_msgSend(v8, "setFromValue:", isa);

    v11 = v8;
    v12 = Int._bridgeToObjectiveC()().super.super.isa;
    objc_msgSend(v11, "setToValue:", v12);

    *(_QWORD *)(v0 + 88) = objc_msgSend(v3, "layer");
    v13 = objc_msgSend(v11, "keyPath");
    if (v13)
    {
      v14 = v13;
      v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
      v17 = v16;

    }
    else
    {
      v15 = 0;
      v17 = 0;
    }
    *(_QWORD *)(v0 + 96) = v17;
    v18 = (_QWORD *)swift_task_alloc(dword_1504DFC);
    *(_QWORD *)(v0 + 104) = v18;
    *v18 = v0;
    v18[1] = sub_DFBD30;
    return CALayer.addAsyncAnimation(_:forKey:)((uint64_t)v11, v15, v17);
  }
  else
  {
    v1 = (_QWORD *)swift_task_alloc(dword_1504DAC);
    *(_QWORD *)(v0 + 56) = v1;
    *v1 = v0;
    v1[1] = sub_DFBAB4;
    return static Task<>.sleep(for:)(*(double *)(v0 + 16));
  }
}

uint64_t sub_DFBAB4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 56);
  *(_QWORD *)(*v1 + 64) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_DFBDD0;
  else
    v4 = sub_DFBB14;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48));
}

uint64_t sub_DFBB14()
{
  _QWORD *v0;
  void *v1;
  id v2;
  NSString v3;
  id v4;
  id v5;
  id v6;
  id v7;
  Class isa;
  id v9;
  Class v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v1 = (void *)v0[3];
  v2 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 14.0, 7.0, 0.0, 0.0);
  v0[9] = v2;
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend((id)objc_opt_self(CASpringAnimation), "animationWithKeyPath:", v3);
  v0[10] = v4;

  v5 = v4;
  objc_msgSend(v2, "settlingDuration");
  objc_msgSend(v5, "setDuration:");

  CASpringAnimation.springParameters.setter(v2);
  v6 = v5;
  v7 = objc_msgSend(v1, "layer");
  objc_msgSend(v7, "shadowOpacity");

  isa = Float._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v6, "setFromValue:", isa);

  v9 = v6;
  v10 = Int._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v9, "setToValue:", v10);

  v0[11] = objc_msgSend(v1, "layer");
  v11 = objc_msgSend(v9, "keyPath");
  if (v11)
  {
    v12 = v11;
    v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v15 = v14;

  }
  else
  {
    v13 = 0;
    v15 = 0;
  }
  v0[12] = v15;
  v16 = (_QWORD *)swift_task_alloc(dword_1504DFC);
  v0[13] = v16;
  *v16 = v0;
  v16[1] = sub_DFBD30;
  return CALayer.addAsyncAnimation(_:forKey:)((uint64_t)v9, v13, v15);
}

uint64_t sub_DFBD30()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;

  v1 = *v0;
  v2 = *(void **)(*v0 + 88);
  swift_task_dealloc(*(_QWORD *)(*v0 + 104));

  swift_bridgeObjectRelease();
  return swift_task_switch(sub_DFBD94, *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_DFBD94()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 72);
  v2 = *(void **)(v0 + 80);
  swift_release(*(_QWORD *)(v0 + 32));

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_DFBDD0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_release(*(_QWORD *)(v0 + 32));
  swift_errorRelease(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_DFBE0C()
{
  uint64_t v0;

  return sub_DF5C38(*(void **)(v0 + 16), *(CGFloat *)(v0 + 24), *(CGFloat *)(v0 + 32), *(CGFloat *)(v0 + 40), *(CGFloat *)(v0 + 48));
}

void sub_DFBE28()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  const void *v3;
  char *v4;
  char *v5;
  char *v6;
  _BYTE v7[544];
  _BYTE v8[544];
  _BYTE __dst[544];
  _BYTE v10[544];
  _BYTE v11[544];
  _BYTE v12[544];

  v1 = *(char **)(v0 + OBJC_IVAR___MusicSBS_TextContentView_textView);
  if (v1)
  {
    v2 = v0;
    v3 = (const void *)(v0 + OBJC_IVAR___MusicSBS_TextContentView_specs);
    memcpy(__dst, (const void *)(v0 + OBJC_IVAR___MusicSBS_TextContentView_specs), 0x219uLL);
    memcpy(v12, &v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs], 0x219uLL);
    memcpy(v10, &v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs], 0x219uLL);
    memmove(&v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs], (const void *)(v0 + OBJC_IVAR___MusicSBS_TextContentView_specs), 0x219uLL);
    sub_533134((uint64_t)__dst);
    sub_533134((uint64_t)__dst);
    v4 = v1;
    sub_533134((uint64_t)v12);
    sub_532E70((uint64_t)v10);
    sub_DF1ABC((uint64_t)v12);
    sub_532E70((uint64_t)__dst);
    sub_532E70((uint64_t)v12);

    v5 = *(char **)(v2 + OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView);
    if (v5)
    {
      memcpy(v7, v3, 0x219uLL);
      memcpy(v11, &v5[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs], 0x219uLL);
      memcpy(v8, &v5[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs], 0x219uLL);
      memmove(&v5[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs], v3, 0x219uLL);
      sub_533134((uint64_t)v7);
      sub_533134((uint64_t)v7);
      v6 = v5;
      sub_533134((uint64_t)v11);
      sub_532E70((uint64_t)v8);
      sub_DF1ABC((uint64_t)v11);
      sub_532E70((uint64_t)v7);
      sub_532E70((uint64_t)v11);

    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_DFBFAC(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  v2 = OBJC_IVAR___MusicSBS_TextContentView_isScrolling;
  v3 = *(unsigned __int8 *)(v1 + OBJC_IVAR___MusicSBS_TextContentView_isScrolling);
  *(_BYTE *)(v1 + OBJC_IVAR___MusicSBS_TextContentView_isScrolling) = result;
  if (v3 != (result & 1))
  {
    v4 = *(_QWORD *)(v1 + OBJC_IVAR___MusicSBS_TextContentView_textView);
    if (v4)
    {
      *(_BYTE *)(v4 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_isScrolling) = result & 1;
      v5 = *(_QWORD *)(v1 + OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView);
      if (v5)
        *(_BYTE *)(v5 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_isScrolling) = *(_BYTE *)(v1 + v2);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

void sub_DFC00C(char a1, char a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  void *v5;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  objc_class *v13;
  uint64_t v14;
  UISpringTimingParameters v15;
  Class isa;
  void *v17;
  _QWORD v18[6];

  v3 = a1 & 1;
  if (*(_BYTE *)(v2 + OBJC_IVAR___MusicSBS_TextContentView_isSelected) != (a1 & 1))
  {
    v4 = v2;
    *(_BYTE *)(v2 + OBJC_IVAR___MusicSBS_TextContentView_isSelected) = v3;
    v5 = *(void **)(v2 + OBJC_IVAR___MusicSBS_TextContentView_textView);
    if (v5)
    {
      v8 = v5;
      sub_DF1BCC(a1 & 1, a2 & 1);

      v9 = *(void **)(v4 + OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView);
      if (v9)
      {
        v10 = v9;
        sub_DF1BCC(a1 & 1, a2 & 1);

      }
      v11 = swift_allocObject(&unk_13C6370, 24, 7);
      swift_unknownObjectWeakInit(v11 + 16);
      v12 = swift_allocObject(&unk_13C6398, 25, 7);
      *(_QWORD *)(v12 + 16) = v11;
      *(_BYTE *)(v12 + 24) = v3;
      if ((a2 & 1) != 0)
      {
        if ((a1 & 1) != 0)
        {
          v13 = (objc_class *)objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 30.0, 9.0, 0.0, 0.0);
        }
        else
        {
          sub_4E684(0, &qword_15084D0, UISpringTimingParameters_ptr);
          v13 = (objc_class *)UISpringTimingParameters.init(dampingRatio:response:)(1.0, 0.2);
        }
        v15.super.isa = v13;
        sub_4E684(0, (unint64_t *)&qword_1508790, UIViewPropertyAnimator_ptr);
        isa = UIViewPropertyAnimator.init(springTimingParameters:)(v15).super.isa;
        v18[4] = sub_DFD5A0;
        v18[5] = v12;
        v18[0] = _NSConcreteStackBlock;
        v18[1] = 1107296256;
        v18[2] = sub_42D124;
        v18[3] = &block_descriptor_345;
        v17 = _Block_copy(v18);
        swift_retain();
        -[objc_class addAnimations:](isa, "addAnimations:", v17, swift_release().n128_f64[0]);
        _Block_release(v17);
        -[objc_class startAnimation](isa, "startAnimation");

        swift_release();
      }
      else
      {
        swift_retain();
        sub_DFC268(v14, a1 & 1);
        swift_release();
        swift_release();
      }
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_DFC268(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t Strong;
  char *v5;
  uint64_t v6;
  void *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  void *v11;
  double v12;
  id v13;
  _OWORD v14[3];
  _BYTE v15[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v15, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (char *)Strong;
    v6 = OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView;
    v7 = *(void **)(Strong + OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView);
    if (v7)
    {
      if ((a2 & 1) != 0)
      {
        v8 = xmmword_10683C0;
        v9 = xmmword_10759D0;
        v10 = 0uLL;
      }
      else
      {
        v9 = *(_OWORD *)&v5[OBJC_IVAR___MusicSBS_TextContentView_specs + 96];
        v8 = *(_OWORD *)&v5[OBJC_IVAR___MusicSBS_TextContentView_specs + 112];
        v10 = *(_OWORD *)&v5[OBJC_IVAR___MusicSBS_TextContentView_specs + 128];
      }
      v14[0] = v9;
      v14[1] = v8;
      v14[2] = v10;
      objc_msgSend(v7, "setTransform:", v14);
      v11 = *(void **)&v5[v6];
      if (v11)
      {
        if ((a2 & 1) != 0)
          v12 = 1.0;
        else
          v12 = 0.0;
        v13 = v11;
        objc_msgSend(v13, "setAlpha:", v12);

      }
    }

  }
}

id sub_DFC354(id result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  _BYTE *v10;
  void *v11;
  _BYTE *v12;
  uint64_t v18;
  char v19;
  char v20;
  id v21;
  double v22;
  uint64_t v23;
  void *v24;
  id v25;
  _OWORD *v26;
  id v27;
  id v28;
  double v29;
  double v30;
  __int128 v31;
  void *v32;
  _OWORD v34[3];
  _BYTE __dst[552];

  v11 = *(void **)&v10[OBJC_IVAR___MusicSBS_TextContentView_textView];
  if (v11)
  {
    v12 = v10;
    v18 = (uint64_t)result;
    v19 = a10 & 1;
    v20 = a5 & 1;
    v21 = v11;
    sub_DF2BFC(v18, a2, a3, a4, v20, a6);

    *(_QWORD *)&v12[OBJC_IVAR___MusicSBS_TextContentView_alignment] = a4;
    v12[OBJC_IVAR___MusicSBS_TextContentView_direction] = v20;
    *(_QWORD *)&v12[OBJC_IVAR___MusicSBS_TextContentView_capabilities] = a6;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v22 = swift_bridgeObjectRelease().n128_u64[0];
    v12[OBJC_IVAR___MusicSBS_TextContentView_backgroundDirection] = a10 & 1;
    v23 = OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView;
    v24 = *(void **)&v12[OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView];
    if (v24)
    {
      if (a8)
      {
        v25 = v24;
        sub_DF2BFC(a7, a8, a9, a4, v19, a6);

LABEL_11:
        objc_msgSend(v12, "setNeedsLayout", a9);
        return objc_msgSend(v12, "layoutIfNeeded");
      }
      objc_msgSend(v24, "removeFromSuperview", v22);
      v32 = *(void **)&v12[v23];
    }
    else
    {
      if (a8)
      {
        v26 = &v12[OBJC_IVAR___MusicSBS_TextContentView_specs];
        memcpy(__dst, &v12[OBJC_IVAR___MusicSBS_TextContentView_specs], 0x219uLL);
        v27 = objc_allocWithZone((Class)_s8TextViewCMa());
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_533134((uint64_t)__dst);
        v28 = sub_DF2D5C(a7, a8, a9, __dst, 1, a4, v19, a6);
        v29 = sub_DFD4EC(a4);
        UIView.setAnchorPoint(_:preserveFrame:)(1, v29, v30);
        objc_msgSend(v28, "setAlpha:", 0.0);
        v31 = v26[7];
        v34[0] = v26[6];
        v34[1] = v31;
        v34[2] = v26[8];
        objc_msgSend(v28, "setTransform:", v34);
        objc_msgSend(v12, "addSubview:", v28);
        v32 = *(void **)&v12[v23];
        *(_QWORD *)&v12[v23] = v28;
LABEL_10:

        goto LABEL_11;
      }
      v32 = 0;
    }
    *(_QWORD *)&v12[v23] = 0;
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

char *sub_DFC5A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, _OWORD *a11)
{
  _BYTE *v11;
  _BYTE *v12;
  uint64_t *v16;
  char v17;
  uint64_t v18;
  _BYTE *v19;
  objc_class *v20;
  id v21;
  id v22;
  void *v23;
  char v24;
  id v25;
  void *v26;
  void *v27;
  id v28;
  double v29;
  double v30;
  void *v31;
  void *v32;
  __int128 v33;
  objc_class *v34;
  char *result;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  void *v40;
  void *v41;
  id v42;
  char *v43;
  uint64_t v44;
  uint64_t v49;
  _OWORD v50[3];
  objc_super v51;

  v12 = v11;
  v11[OBJC_IVAR___MusicSBS_TextContentView_isScrolling] = 1;
  v16 = (uint64_t *)&v11[OBJC_IVAR___MusicSBS_TextContentView_text];
  *v16 = 0;
  v16[1] = 0;
  *(_QWORD *)&v11[OBJC_IVAR___MusicSBS_TextContentView_attributedText] = 0;
  v11[OBJC_IVAR___MusicSBS_TextContentView_isSelected] = 0;
  *(_QWORD *)&v11[OBJC_IVAR___MusicSBS_TextContentView_progress] = 0;
  v49 = OBJC_IVAR___MusicSBS_TextContentView_backgroundDirection;
  v11[OBJC_IVAR___MusicSBS_TextContentView_backgroundDirection] = 2;
  v17 = a5 & 1;
  v18 = OBJC_IVAR___MusicSBS_TextContentView_textView;
  *(_QWORD *)&v11[OBJC_IVAR___MusicSBS_TextContentView_textView] = 0;
  v44 = OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView;
  *(_QWORD *)&v11[OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView] = 0;
  *v16 = a1;
  v16[1] = a2;
  v19 = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  memcpy(&v19[OBJC_IVAR___MusicSBS_TextContentView_specs], a11, 0x219uLL);
  *(_QWORD *)&v19[OBJC_IVAR___MusicSBS_TextContentView_alignment] = a4;
  v19[OBJC_IVAR___MusicSBS_TextContentView_direction] = v17;
  *(_QWORD *)&v19[OBJC_IVAR___MusicSBS_TextContentView_capabilities] = a6;
  v20 = (objc_class *)_s8TextViewCMa();
  v21 = objc_allocWithZone(v20);
  swift_bridgeObjectRetain();
  sub_533134((uint64_t)a11);
  swift_bridgeObjectRetain();
  sub_533134((uint64_t)a11);
  v22 = sub_DF2D5C(a1, a2, a3, a11, 0, a4, v17, a6);
  v23 = *(void **)&v11[v18];
  *(_QWORD *)&v11[v18] = v22;

  if (a8)
  {
    v24 = a10;
    objc_allocWithZone(v20);
    sub_533134((uint64_t)a11);
    v25 = sub_DF2D5C(a7, a8, a9, a11, 1, a4, a10 & 1, a6);
    v26 = *(void **)&v11[v44];
    *(_QWORD *)&v11[v44] = v25;

    v27 = *(void **)&v11[v44];
    if (v27)
    {
      v28 = v27;
      v29 = sub_DFD4EC(a4);
      UIView.setAnchorPoint(_:preserveFrame:)(1, v29, v30);

      v31 = *(void **)&v12[v44];
      if (v31)
      {
        objc_msgSend(v31, "setAlpha:", 0.0);
        v32 = *(void **)&v12[v44];
        if (v32)
        {
          v33 = a11[7];
          v50[0] = a11[6];
          v50[1] = v33;
          v50[2] = a11[8];
          objc_msgSend(v32, "setTransform:", v50);
        }
      }
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v24 = a10;
  }
  v12[v49] = v24;

  v34 = (objc_class *)_s19SBS_TextContentViewCMa();
  v51.receiver = v19;
  v51.super_class = v34;
  result = (char *)objc_msgSendSuper2(&v51, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v36 = OBJC_IVAR___MusicSBS_TextContentView_textView;
  v37 = *(_QWORD *)&result[OBJC_IVAR___MusicSBS_TextContentView_textView];
  if (!v37)
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v38 = result;
  v39 = result;
  result = (char *)objc_msgSend(v39, "addSubview:", v37);
  v40 = *(void **)&v39[OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView];
  if (!v40)
  {
    sub_532E70((uint64_t)a11);
    goto LABEL_13;
  }
  v41 = *(void **)&v38[v36];
  if (!v41)
    goto LABEL_15;
  v42 = v40;
  objc_msgSend(v41, "frame");
  result = *(char **)&v38[v36];
  if (result)
  {
    objc_msgSend(result, "frame");
    objc_msgSend(v42, "frame");
    objc_msgSend(v42, "setFrame:");
    v43 = v39;
    objc_msgSend(v43, "addSubview:", v42);
    sub_532E70((uint64_t)a11);

LABEL_13:
    return v39;
  }
LABEL_16:
  __break(1u);
  return result;
}

void sub_DFC968(char **a1@<X8>)
{
  char *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  char v12;
  id v13;
  char *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  char *v19;
  id v20;
  __n128 v21;
  char isEscapingClosureAtFileLocation;
  objc_class *v23;
  char v25;
  uint64_t v26;
  _QWORD aBlock[6];
  _OWORD __dst[34];

  v2 = *(_QWORD *)&v1[OBJC_IVAR___MusicSBS_TextContentView_textView];
  if (v2)
  {
    v3 = v1;
    v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_text);
    v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_text + 8);
    v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_words);
    v7 = *(_QWORD *)&v1[OBJC_IVAR___MusicSBS_TextContentView_capabilities];
    v8 = *(_QWORD *)&v1[OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView];
    v26 = *(_QWORD *)&v1[OBJC_IVAR___MusicSBS_TextContentView_alignment];
    v25 = v1[OBJC_IVAR___MusicSBS_TextContentView_direction];
    if (v8)
    {
      v10 = *(_QWORD *)(v8 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_text);
      v9 = *(_QWORD *)(v8 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_text + 8);
      v11 = *(_QWORD **)(v8 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_words);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v10 = 0;
      v9 = 0;
      v11 = _swiftEmptyArrayStorage;
    }
    v12 = v1[OBJC_IVAR___MusicSBS_TextContentView_backgroundDirection];
    memcpy(__dst, &v1[OBJC_IVAR___MusicSBS_TextContentView_specs], 0x219uLL);
    v23 = (objc_class *)_s19SBS_TextContentViewCMa();
    v13 = objc_allocWithZone(v23);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_533134((uint64_t)__dst);
    v14 = sub_DFC5A8(v4, v5, v6, v26, v25, v7, v10, v9, (uint64_t)v11, v12, __dst);
    v15 = (void *)objc_opt_self(UIView);
    v16 = swift_allocObject(&unk_13C63E8, 32, 7);
    *(_QWORD *)(v16 + 16) = v14;
    *(_QWORD *)(v16 + 24) = v3;
    v17 = swift_allocObject(&unk_13C6410, 32, 7);
    *(_QWORD *)(v17 + 16) = sub_DFD5F0;
    *(_QWORD *)(v17 + 24) = v16;
    aBlock[4] = sub_62604;
    aBlock[5] = v17;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_3A1A94;
    aBlock[3] = &block_descriptor_12_19;
    v18 = _Block_copy(aBlock);
    v19 = v14;
    v20 = v3;
    swift_retain();
    objc_msgSend(v15, "performWithoutAnimation:", v18, swift_release().n128_f64[0]);
    _Block_release(v18);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v17, "", 139, 222, 44, 1, v21);
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
    {
      a1[3] = (char *)v23;
      swift_release();
      *a1 = v19;
      return;
    }
    __break(1u);
  }
  __break(1u);
}

void sub_DFCBF8(char *a1, char *a2)
{
  double v4;
  void *v5;
  id v6;
  void *v7;
  id v8;

  objc_msgSend(a2, "bounds");
  objc_msgSend(a1, "setFrame:");
  objc_msgSend(a1, "layoutIfNeeded");
  sub_DFC00C(a2[OBJC_IVAR___MusicSBS_TextContentView_isSelected], 0);
  v4 = *(double *)&a2[OBJC_IVAR___MusicSBS_TextContentView_progress];
  if (v4 != *(double *)&a1[OBJC_IVAR___MusicSBS_TextContentView_progress])
  {
    *(double *)&a1[OBJC_IVAR___MusicSBS_TextContentView_progress] = v4;
    v5 = *(void **)&a1[OBJC_IVAR___MusicSBS_TextContentView_textView];
    if (v5)
    {
      v6 = v5;
      sub_DF26C8(0, v4);

      v7 = *(void **)&a1[OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView];
      if (v7)
      {
        v8 = v7;
        sub_DF26C8(0, v4);

      }
    }
    else
    {
      __break(1u);
    }
  }
}

id sub_DFCD64(char a1, double a2, double a3)
{
  uint64_t v3;
  id result;

  result = *(id *)(v3 + OBJC_IVAR___MusicSBS_TextContentView_textView);
  if (result)
  {
    result = objc_msgSend(result, "sizeThatFits:");
    if ((a1 & 1) != 0)
    {
      result = *(id *)(v3 + OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView);
      if (result)
        return objc_msgSend(result, "sizeThatFits:", a2, a3);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_DFCE08(double a1, double a2)
{
  uint64_t v2;
  id result;
  int v6;

  result = *(id *)(v2 + OBJC_IVAR___MusicSBS_TextContentView_textView);
  if (result)
  {
    v6 = *(unsigned __int8 *)(v2 + OBJC_IVAR___MusicSBS_TextContentView_isSelected);
    result = objc_msgSend(result, "sizeThatFits:");
    if (v6 == 1)
    {
      result = *(id *)(v2 + OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView);
      if (result)
        return objc_msgSend(result, "sizeThatFits:", a1, a2);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_DFCF08()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  id v4;
  double v5;
  double v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  double v11;
  double v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  void *v19;
  id v20;
  CGFloat v21;
  CGFloat v22;
  CGFloat v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  double v28;
  double v29;
  void *v30;
  id v31;
  double v32;
  double v33;
  CGFloat v34;
  double v35;
  CGFloat v36;
  CGFloat v37;
  void *v38;
  uint64_t v39;
  void *v40;
  id v41;
  double v42;
  void *v43;
  double v44;
  double v45;
  double v46;
  void *v47;
  id v48;
  double v49;
  void *v50;
  double v51;
  void *v52;
  id v53;
  void *v54;
  CGFloat v55;
  CGFloat v56;
  CGFloat v57;
  CGFloat v58;
  void *v59;
  id v60;
  double Width;
  void *v62;
  double v63;
  double v64;
  double v65;
  void *v66;
  double v67;
  void *v68;
  double v69;
  double v70;
  objc_super v71;
  CGRect v72;
  CGRect v73;
  CGRect v74;
  CGRect v75;

  v1 = v0;
  v71.receiver = v0;
  v71.super_class = (Class)_s19SBS_TextContentViewCMa();
  objc_msgSendSuper2(&v71, "layoutSubviews");
  v2 = OBJC_IVAR___MusicSBS_TextContentView_textView;
  v3 = *(void **)&v0[OBJC_IVAR___MusicSBS_TextContentView_textView];
  if (!v3)
  {
    __break(1u);
    goto LABEL_34;
  }
  v4 = v3;
  objc_msgSend(v1, "bounds");
  objc_msgSend(v4, "sizeThatFits:", v5, v6);
  objc_msgSend(v4, "frame");
  objc_msgSend(v4, "setFrame:");

  v7 = *(void **)&v1[v2];
  if (!v7)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  objc_msgSend(v7, "layoutSubviews");
  v8 = OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView;
  v9 = *(void **)&v1[OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView];
  if (v9)
  {
    v10 = v9;
    objc_msgSend(v1, "bounds");
    objc_msgSend(v10, "sizeThatFits:", v11, v12);
    v14 = v13;
    v16 = v15;
    v17 = UIView.untransformedFrame.getter();
    UIView.untransformedFrame.setter(v17, v18, v14, v16);

    v19 = *(void **)&v1[v8];
    if (v19)
    {
      v20 = v19;
      UIView.untransformedFrame.getter();
      UIView.untransformedFrame.setter(0.0, v21, v22, v23);

      v24 = *(void **)&v1[v8];
      if (v24)
      {
        v25 = *(void **)&v1[v2];
        if (v25)
        {
          v26 = v24;
          v27 = v25;
          UIView.untransformedFrame.getter();
          v29 = v28;

          v30 = *(void **)&v1[v2];
          if (v30)
          {
            v31 = v30;
            UIView.untransformedFrame.getter();
            v33 = v32;

            v34 = v29 + v33 + *(double *)&v1[OBJC_IVAR___MusicSBS_TextContentView_specs + 88];
            v35 = UIView.untransformedFrame.getter();
            UIView.untransformedFrame.setter(v35, v34, v36, v37);

            v38 = *(void **)&v1[v8];
            goto LABEL_10;
          }
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
          goto LABEL_38;
        }
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
    }
  }
  v38 = 0;
LABEL_10:
  objc_msgSend(v38, "layoutSubviews");
  v39 = *(_QWORD *)&v1[OBJC_IVAR___MusicSBS_TextContentView_alignment];
  if (!v39)
  {
    v52 = *(void **)&v1[v2];
    if (v52)
    {
      v53 = v52;
      objc_msgSend(v53, "frame");
      objc_msgSend(v53, "setFrame:", 0.0);

      v54 = *(void **)&v1[v8];
      if (!v54)
        return;
      v48 = v54;
      UIView.untransformedFrame.getter();
      v58 = 0.0;
      goto LABEL_31;
    }
    goto LABEL_39;
  }
  if (v39 == 1)
  {
    v59 = *(void **)&v1[v2];
    if (v59)
    {
      v60 = v59;
      objc_msgSend(v1, "bounds");
      Width = CGRectGetWidth(v74);
      v62 = *(void **)&v1[v2];
      if (v62)
      {
        v63 = Width;
        objc_msgSend(v62, "bounds");
        v65 = (v63 - v64) * 0.5;
        objc_msgSend(v60, "frame");
        objc_msgSend(v60, "setFrame:", v65);

        v66 = *(void **)&v1[v8];
        if (!v66)
          return;
        v48 = v66;
        objc_msgSend(v1, "bounds");
        v67 = CGRectGetWidth(v75);
        v68 = *(void **)&v1[v8];
        if (v68)
          objc_msgSend(v68, "bounds");
        else
          v69 = 0.0;
        v70 = (v67 - v69) * 0.5;
        goto LABEL_30;
      }
LABEL_41:
      __break(1u);
      return;
    }
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  if (v39 != 2)
    return;
  v40 = *(void **)&v1[v2];
  if (!v40)
    goto LABEL_37;
  v41 = v40;
  objc_msgSend(v1, "bounds");
  v42 = CGRectGetWidth(v72);
  v43 = *(void **)&v1[v2];
  if (!v43)
  {
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v44 = v42;
  objc_msgSend(v43, "bounds");
  v46 = v44 - v45;
  objc_msgSend(v41, "frame");
  objc_msgSend(v41, "setFrame:", v46);

  v47 = *(void **)&v1[v8];
  if (!v47)
    return;
  v48 = v47;
  objc_msgSend(v1, "bounds");
  v49 = CGRectGetWidth(v73);
  v50 = *(void **)&v1[v8];
  if (v50)
    objc_msgSend(v50, "bounds");
  else
    v51 = 0.0;
  v70 = v49 - v51;
LABEL_30:
  UIView.untransformedFrame.getter();
  v58 = v70;
LABEL_31:
  UIView.untransformedFrame.setter(v58, v55, v56, v57);

}

id sub_DFD32C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)_s19SBS_TextContentViewCMa();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t _s19SBS_TextContentViewCMa()
{
  return objc_opt_self(MusicSBS_TextContentView);
}

uint64_t sub_DFD414(const void *a1)
{
  _QWORD *v1;
  void *v3;
  _BYTE v5[544];

  v3 = (void *)(*v1 + OBJC_IVAR___MusicSBS_TextContentView_specs);
  memcpy(v5, v3, 0x219uLL);
  memcpy(v3, a1, 0x219uLL);
  sub_533134((uint64_t)a1);
  sub_532E70((uint64_t)v5);
  sub_DFBE28();
  return sub_532E70((uint64_t)a1);
}

uint64_t sub_DFD48C(uint64_t a1)
{
  return sub_DFBFAC(a1);
}

void sub_DFD4AC(char a1, char a2)
{
  sub_DFC00C(a1, a2);
}

id sub_DFD4CC(char a1, double a2, double a3)
{
  return sub_DFCD64(a1, a2, a3);
}

double sub_DFD4EC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  _BYTE v4[24];

  switch(a1)
  {
    case 1:
    case 3:
      v1 = CGPoint.center.unsafeMutableAddressor();
      break;
    case 2:
      v1 = CGPoint.centerRight.unsafeMutableAddressor();
      break;
    default:
      v1 = CGPoint.centerLeft.unsafeMutableAddressor();
      break;
  }
  v2 = v1;
  swift_beginAccess(v1, v4, 0, 0);
  return *(double *)v2;
}

uint64_t sub_DFD558()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_DFD57C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

void sub_DFD5A0()
{
  uint64_t v0;

  sub_DFC268(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t block_copy_helper_339(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double block_destroy_helper_339(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_DFD5C4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_DFD5F0()
{
  uint64_t v0;

  sub_DFCBF8(*(char **)(v0 + 16), *(char **)(v0 + 24));
}

uint64_t sub_DFD5F8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_DFD608()
{
  _BYTE *v0;
  _QWORD *v1;

  v0[OBJC_IVAR___MusicSBS_TextContentView_isScrolling] = 1;
  v1 = &v0[OBJC_IVAR___MusicSBS_TextContentView_text];
  *v1 = 0;
  v1[1] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___MusicSBS_TextContentView_attributedText] = 0;
  v0[OBJC_IVAR___MusicSBS_TextContentView_isSelected] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___MusicSBS_TextContentView_progress] = 0;
  v0[OBJC_IVAR___MusicSBS_TextContentView_backgroundDirection] = 2;
  *(_QWORD *)&v0[OBJC_IVAR___MusicSBS_TextContentView_textView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000000010C4100, "MusicCoreUI/SBS_SyncedLyricsLineView+Text.swift", 47, 2, 208, 0);
  __break(1u);
}

void sub_DFD6D8()
{
  qword_1583410 = Int.seconds.getter(6);
}

void sub_DFD6F8()
{
  qword_1583418 = Int.seconds.getter(8);
}

void sub_DFD718()
{
  qword_1583420 = UIScreen.Dimensions.size.getter(0.1);
}

CGFloat sub_DFD73C(uint64_t a1)
{
  return sub_DFD7B4(0.9, a1, &xmmword_1583430, &xmmword_1583440, &xmmword_1583450);
}

CGFloat sub_DFD758(uint64_t a1)
{
  return sub_DFD7B4(1.2, a1, &xmmword_1583460, algn_1583470, &xmmword_1583480);
}

CGFloat sub_DFD778(uint64_t a1)
{
  return sub_DFD7B4(1.2, a1, &xmmword_1583490, &xmmword_15834A0, &xmmword_15834B0);
}

CGFloat sub_DFD798(uint64_t a1)
{
  return sub_DFD7B4(0.2, a1, &xmmword_15834C0, algn_15834D0, &xmmword_15834E0);
}

CGFloat sub_DFD7B4(CGFloat a1, uint64_t a2, _OWORD *a3, _OWORD *a4, _OWORD *a5)
{
  CGFloat result;
  __int128 v9;
  __int128 v10;
  CGAffineTransform v11;

  CGAffineTransformMakeScale(&v11, a1, a1);
  result = v11.a;
  v9 = *(_OWORD *)&v11.c;
  v10 = *(_OWORD *)&v11.tx;
  *a3 = *(_OWORD *)&v11.a;
  *a4 = v9;
  *a5 = v10;
  return result;
}

id sub_DFD808(uint64_t a1, char a2, void *__src, double a4, double a5)
{
  _BYTE *v5;
  _OWORD *v6;
  char *v7;
  double *v8;
  objc_super v10;

  v5[OBJC_IVAR___MusicInstrumentalContentView_isScrolling] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicInstrumentalContentView_alignment] = 0;
  v6 = &v5[OBJC_IVAR___MusicInstrumentalContentView_lastSeenBounds];
  *v6 = 0u;
  v6[1] = 0u;
  v5[OBJC_IVAR___MusicInstrumentalContentView_isSelected] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicInstrumentalContentView_dots] = _swiftEmptyArrayStorage;
  v5[OBJC_IVAR___MusicInstrumentalContentView_fadeOutCued] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicInstrumentalContentView_dotFadeInDuration] = 0;
  v7 = &v5[OBJC_IVAR___MusicInstrumentalContentView_totalDotsFadedIn];
  *(_QWORD *)v7 = 0;
  v7[8] = 1;
  *(_QWORD *)&v5[OBJC_IVAR___MusicInstrumentalContentView_totalDotsCompleted] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicInstrumentalContentView_breathDuration] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___MusicInstrumentalContentView_totalBreathsCompleted] = 0;
  v8 = (double *)&v5[OBJC_IVAR___MusicInstrumentalContentView_line];
  *(_QWORD *)v8 = a1;
  v8[1] = a4;
  v8[2] = a5;
  *((_BYTE *)v8 + 24) = a2 & 1;
  memcpy(&v5[OBJC_IVAR___MusicInstrumentalContentView_specs], __src, 0x219uLL);
  v10.receiver = v5;
  v10.super_class = (Class)_s23InstrumentalContentViewCMa();
  return objc_msgSendSuper2(&v10, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
}

uint64_t sub_DFDA08()
{
  uint64_t v0;
  double v1;
  double v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  _QWORD v13[6];
  _BYTE v14[24];

  v1 = *(double *)(v0 + OBJC_IVAR___MusicInstrumentalContentView_line + 8);
  v2 = *(double *)(v0 + OBJC_IVAR___MusicInstrumentalContentView_line + 16) + -1.8;
  *(double *)(v0 + OBJC_IVAR___MusicInstrumentalContentView_breathDuration) = (v2 - v1) / floor((v2 - v1) * 0.25) * 0.5;
  *(double *)(v0 + OBJC_IVAR___MusicInstrumentalContentView_dotFadeInDuration) = (v2 - (v1 + 1.0))
                                                                               / (double)*(uint64_t *)(v0 + OBJC_IVAR___MusicInstrumentalContentView_specs + 488);
  *(_QWORD *)(v0 + OBJC_IVAR___MusicInstrumentalContentView_totalDotsCompleted) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR___MusicInstrumentalContentView_totalBreathsCompleted) = 0;
  v3 = v0 + OBJC_IVAR___MusicInstrumentalContentView_totalDotsFadedIn;
  *(_QWORD *)v3 = 0;
  *(_BYTE *)(v3 + 8) = 1;
  *(_BYTE *)(v0 + OBJC_IVAR___MusicInstrumentalContentView_fadeOutCued) = 0;
  v4 = (uint64_t *)(v0 + OBJC_IVAR___MusicInstrumentalContentView_dots);
  swift_beginAccess(v0 + OBJC_IVAR___MusicInstrumentalContentView_dots, v14, 0, 0);
  v5 = *v4;
  if (!((unint64_t)v5 >> 62))
  {
    v6 = *(_QWORD *)((char *)&dword_10 + (v5 & 0xFFFFFFFFFFFFF8));
    result = swift_bridgeObjectRetain();
    if (v6)
      goto LABEL_3;
    return swift_bridgeObjectRelease(v5);
  }
  if (v5 < 0)
    v12 = v5;
  else
    v12 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  result = _CocoaArrayWrapper.endIndex.getter(v12);
  v6 = result;
  if (!result)
    return swift_bridgeObjectRelease(v5);
LABEL_3:
  if (v6 >= 1)
  {
    v8 = 0;
    do
    {
      if ((v5 & 0xC000000000000001) != 0)
        v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v5);
      else
        v9 = *(id *)(v5 + 8 * v8 + 32);
      v10 = v9;
      ++v8;
      v11 = objc_msgSend(v9, "layer");
      objc_msgSend(v11, "removeAllAnimations");

      objc_msgSend(v10, "setAlpha:", 0.0);
      v13[1] = 0;
      v13[2] = 0;
      v13[0] = 0x3FF0000000000000;
      v13[3] = 0x3FF0000000000000;
      v13[4] = 0;
      v13[5] = 0;
      objc_msgSend(v10, "setTransform:", v13);

    }
    while (v6 != v8);
    return swift_bridgeObjectRelease(v5);
  }
  __break(1u);
  return result;
}

void sub_DFDC20(char a1, char a2)
{
  _BYTE *v2;
  id v3;
  uint64_t v4;
  void *v5;
  _BYTE *v6;
  _QWORD v7[6];

  v2[OBJC_IVAR___MusicInstrumentalContentView_isSelected] = a1;
  if ((a1 & 1) == 0)
  {
    if ((a2 & 1) != 0)
    {
      v3 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:controlPoint1:controlPoint2:animations:", 0, 0.12, 0.33, 0.0, 0.2, 0.1);
      v4 = swift_allocObject(&unk_13C6758, 24, 7);
      *(_QWORD *)(v4 + 16) = v2;
      v7[4] = sub_DFF98C;
      v7[5] = v4;
      v7[0] = _NSConcreteStackBlock;
      v7[1] = 1107296256;
      v7[2] = sub_42D124;
      v7[3] = &block_descriptor_48_6;
      v5 = _Block_copy(v7);
      v6 = v2;
      objc_msgSend(v3, "addAnimations:", v5, swift_release().n128_f64[0]);
      _Block_release(v5);
      objc_msgSend(v3, "startAnimation");

    }
    else
    {
      sub_DFDA08();
    }
  }
}

void sub_DFDD50(double a1)
{
  char *v1;
  char *v2;
  char *v3;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  double v9;
  uint64_t v10;
  uint64_t i;
  id v12;
  _QWORD *v13;
  void *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void *v20;
  char *v21;
  void *v22;
  double v23;
  uint64_t v24;
  void *v25;
  char *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void **aBlock;
  uint64_t v33;
  void *v34;
  void *v35;
  void (*v36)();
  _QWORD *v37;
  char v38[24];

  v2 = &v1[OBJC_IVAR___MusicInstrumentalContentView_totalDotsFadedIn];
  if (v1[OBJC_IVAR___MusicInstrumentalContentView_totalDotsFadedIn + 8] == 1)
  {
    v3 = v1;
    v5 = (uint64_t *)&v1[OBJC_IVAR___MusicInstrumentalContentView_dots];
    swift_beginAccess(&v1[OBJC_IVAR___MusicInstrumentalContentView_dots], v38, 0, 0);
    v6 = *v5;
    if ((unint64_t)v6 >> 62)
    {
      if (v6 < 0)
        v30 = v6;
      else
        v30 = v6 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v31 = _CocoaArrayWrapper.endIndex.getter(v30);
      swift_bridgeObjectRelease();
      if (v31)
      {
LABEL_5:
        v7 = 0;
        *(_QWORD *)v2 = 0;
        v2[8] = 0;
        v8 = *(double *)&v1[OBJC_IVAR___MusicInstrumentalContentView_line + 8] + 1.0;
        if (v8 <= a1)
        {
          v9 = (a1 - v8) / *(double *)&v1[OBJC_IVAR___MusicInstrumentalContentView_dotFadeInDuration];
          if ((~*(_QWORD *)&v9 & 0x7FF0000000000000) == 0)
          {
LABEL_27:
            __break(1u);
            goto LABEL_28;
          }
          if (v9 <= -9.22337204e18)
          {
LABEL_28:
            __break(1u);
            goto LABEL_29;
          }
          if (v9 >= 9.22337204e18)
          {
LABEL_29:
            __break(1u);
            goto LABEL_30;
          }
          if (__OFADD__((uint64_t)v9, 1))
          {
LABEL_30:
            __break(1u);
            return;
          }
          if ((uint64_t)v9 + 1 >= 3)
            v7 = 3;
          else
            v7 = (uint64_t)v9 + 1;
        }
        v10 = *(_QWORD *)&v1[OBJC_IVAR___MusicInstrumentalContentView_specs + 488];
        if (v10 < 0)
        {
          __break(1u);
        }
        else
        {
          if (v10)
          {
            for (i = 0; i != v10; ++i)
            {
              v12 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:curve:animations:", 3, 0, 0.8);
              v13 = (_QWORD *)swift_allocObject(&unk_13C6668, 40, 7);
              v13[2] = v7;
              v13[3] = i;
              v13[4] = v3;
              v36 = sub_DFF938;
              v37 = v13;
              aBlock = _NSConcreteStackBlock;
              v33 = 1107296256;
              v34 = sub_42D124;
              v35 = &block_descriptor_30_10;
              v14 = _Block_copy(&aBlock);
              v15 = v3;
              v16 = v3;
              v17 = v7;
              v18 = v15;
              objc_msgSend(v12, "addAnimations:", v14, swift_release().n128_f64[0]);
              _Block_release(v14);
              v19 = swift_allocObject(&unk_13C66B8, 32, 7);
              *(_QWORD *)(v19 + 16) = v18;
              *(_QWORD *)(v19 + 24) = i;
              v36 = sub_DFF944;
              v37 = (_QWORD *)v19;
              aBlock = _NSConcreteStackBlock;
              v33 = 1107296256;
              v34 = sub_59BEF0;
              v35 = &block_descriptor_36_8;
              v20 = _Block_copy(&aBlock);
              v21 = v18;
              v7 = v17;
              v3 = v16;
              objc_msgSend(v12, "addCompletion:", v20, swift_release().n128_f64[0]);
              _Block_release(v20);
              objc_msgSend(v12, "startAnimationAfterDelay:", (double)i * 0.06);

            }
          }
          v22 = (void *)objc_opt_self(UIView);
          v23 = *(double *)&v3[OBJC_IVAR___MusicInstrumentalContentView_breathDuration] + -0.4;
          v24 = swift_allocObject(&unk_13C6708, 24, 7);
          *(_QWORD *)(v24 + 16) = v3;
          v36 = sub_DFF984;
          v37 = (_QWORD *)v24;
          aBlock = _NSConcreteStackBlock;
          v33 = 1107296256;
          v34 = sub_42D124;
          v35 = &block_descriptor_42_2;
          v25 = _Block_copy(&aBlock);
          v26 = v3;
          swift_release();
          objc_msgSend(v22, "animateWithDuration:delay:options:animations:completion:", 0x20000, v25, 0, v23, 0.2);
          _Block_release(v25);
          v27 = *(_QWORD *)&v26[OBJC_IVAR___MusicInstrumentalContentView_totalBreathsCompleted];
          v28 = __OFADD__(v27, 1);
          v29 = v27 + 1;
          if (!v28)
          {
            *(_QWORD *)&v26[OBJC_IVAR___MusicInstrumentalContentView_totalBreathsCompleted] = v29;
            return;
          }
        }
        __break(1u);
        goto LABEL_27;
      }
    }
    else if (*(_QWORD *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFF8)))
    {
      goto LABEL_5;
    }
    sub_DFF474();
    goto LABEL_5;
  }
}

void sub_DFE148(int64_t a1, int64_t a2, uint64_t a3)
{
  unint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  _BYTE v6[24];

  v3 = a2;
  v4 = (uint64_t *)(a3 + OBJC_IVAR___MusicInstrumentalContentView_dots);
  if (a2 >= a1)
  {
    swift_beginAccess(a3 + OBJC_IVAR___MusicInstrumentalContentView_dots, v6, 0, 0);
    v5 = *v4;
    if ((v5 & 0xC000000000000001) == 0)
    {
      if ((v3 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (*(_QWORD *)((char *)&dword_10 + (v5 & 0xFFFFFFFFFFFFF8)) > v3)
      {
        v3 = (unint64_t)*(id *)(v5 + 8 * v3 + 32);
        goto LABEL_11;
      }
      __break(1u);
      goto LABEL_20;
    }
LABEL_17:
    swift_bridgeObjectRetain();
    v3 = specialized _ArrayBuffer._getElementSlowPath(_:)(v3, v5);
    swift_bridgeObjectRelease();
LABEL_11:
    if (qword_1506138 == -1)
    {
LABEL_12:
      objc_msgSend((id)v3, "setAlpha:", *(double *)&qword_1583420);
      goto LABEL_13;
    }
LABEL_20:
    swift_once(&qword_1506138, sub_DFD718);
    goto LABEL_12;
  }
  swift_beginAccess(a3 + OBJC_IVAR___MusicInstrumentalContentView_dots, v6, 0, 0);
  v5 = *v4;
  if ((v5 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v3 = specialized _ArrayBuffer._getElementSlowPath(_:)(v3, v5);
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  if ((v3 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (*(_QWORD *)((char *)&dword_10 + (v5 & 0xFFFFFFFFFFFFF8)) <= v3)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v3 = (unint64_t)*(id *)(v5 + 8 * v3 + 32);
LABEL_6:
  objc_msgSend((id)v3, "setAlpha:", 1.0);
LABEL_13:

}

void sub_DFE2B4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  _OWORD v8[3];
  _BYTE v9[24];

  v1 = (uint64_t *)(a1 + OBJC_IVAR___MusicInstrumentalContentView_dots);
  swift_beginAccess(a1 + OBJC_IVAR___MusicInstrumentalContentView_dots, v9, 0, 0);
  v2 = *v1;
  if (!((unint64_t)v2 >> 62))
  {
    v3 = *(_QWORD *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    if (v3)
      goto LABEL_3;
LABEL_16:
    swift_bridgeObjectRelease();
    return;
  }
  if (v2 < 0)
    v7 = v2;
  else
    v7 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v3 = _CocoaArrayWrapper.endIndex.getter(v7);
  if (!v3)
    goto LABEL_16;
LABEL_3:
  if (v3 >= 1)
  {
    v4 = 0;
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
        v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v2);
      else
        v5 = *(id *)(v2 + 8 * v4 + 32);
      v6 = v5;
      if (qword_1506148 != -1)
        swift_once(&qword_1506148, sub_DFD758);
      ++v4;
      v8[0] = xmmword_1583460;
      v8[1] = *(_OWORD *)algn_1583470;
      v8[2] = xmmword_1583480;
      objc_msgSend(v6, "setTransform:", v8);

    }
    while (v3 != v4);
    goto LABEL_16;
  }
  __break(1u);
}

void sub_DFE408(double a1)
{
  uint64_t v1;
  char **v2;
  uint64_t v3;
  unint64_t v4;
  double *v6;
  double v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  BOOL v19;
  unint64_t *v20;
  id v21;
  double v22;
  uint64_t v23;
  id v24;
  id v25;
  double v26;
  double v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  char **v31;
  uint64_t v32;
  BOOL v33;
  char *v34;
  double v35;
  BOOL v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  char **v40;
  char v41[24];
  _BYTE v42[24];
  uint64_t aBlock;
  uint64_t v44;
  uint64_t (*v45)(uint64_t);
  uint64_t v46;
  void *v47;
  _QWORD *v48;

  v6 = (double *)((char *)v2 + OBJC_IVAR___MusicInstrumentalContentView_line);
  v7 = *(double *)((char *)v2 + OBJC_IVAR___MusicInstrumentalContentView_line + 8);
  v8 = OBJC_IVAR___MusicInstrumentalContentView_dotFadeInDuration;
  v9 = (a1 - (v7 + 1.0)) / *(double *)((char *)v2 + OBJC_IVAR___MusicInstrumentalContentView_dotFadeInDuration);
  if ((~*(_QWORD *)&v9 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_61;
  }
  if (v9 <= -9.22337204e18)
  {
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  if (v9 >= 9.22337204e18)
  {
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  if (__OFADD__((uint64_t)v9, 1))
  {
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  v10 = *(uint64_t *)((char *)v2 + OBJC_IVAR___MusicInstrumentalContentView_specs + 488);
  if ((uint64_t)v9 + 1 >= v10)
    v11 = *(uint64_t *)((char *)v2 + OBJC_IVAR___MusicInstrumentalContentView_specs + 488);
  else
    v11 = (uint64_t)v9 + 1;
  v12 = OBJC_IVAR___MusicInstrumentalContentView_totalDotsCompleted;
  v13 = *(uint64_t *)((char *)v2 + OBJC_IVAR___MusicInstrumentalContentView_totalDotsCompleted);
  if (v11 < v13)
  {
    sub_DFDA08();
    v14 = (uint64_t *)((char *)v2 + OBJC_IVAR___MusicInstrumentalContentView_dots);
    swift_beginAccess((char *)v2 + OBJC_IVAR___MusicInstrumentalContentView_dots, v42, 0, 0);
    v1 = *v14;
    v40 = v2;
    if (!((unint64_t)v1 >> 62))
    {
      v3 = *(_QWORD *)((char *)&dword_10 + (v1 & 0xFFFFFFFFFFFFF8));
      swift_bridgeObjectRetain();
      if (v3)
      {
LABEL_11:
        if (v3 >= 1)
        {
          v15 = 0;
          do
          {
            if ((v1 & 0xC000000000000001) != 0)
              v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v15, v1);
            else
              v16 = *(id *)(v1 + 8 * v15 + 32);
            v17 = v16;
            v18 = objc_msgSend(v16, "layer");
            objc_msgSend(v18, "removeAllAnimations");

            if (qword_1506138 != -1)
              swift_once(&qword_1506138, sub_DFD718);
            ++v15;
            objc_msgSend(v17, "setAlpha:", *(double *)&qword_1583420);
            v44 = 0;
            v45 = 0;
            aBlock = 0x3FF0000000000000;
            v46 = 0x3FF0000000000000;
            v47 = 0;
            v48 = 0;
            objc_msgSend(v17, "setTransform:", &aBlock);

          }
          while (v3 != v15);
          goto LABEL_68;
        }
        __break(1u);
LABEL_71:
        __break(1u);
LABEL_72:
        __break(1u);
LABEL_73:
        __break(1u);
LABEL_74:
        __break(1u);
LABEL_75:
        __break(1u);
LABEL_76:
        __break(1u);
        do
        {
          __break(1u);
LABEL_78:
          __break(1u);
LABEL_79:
          __break(1u);
LABEL_80:
          swift_bridgeObjectRetain();
          v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v3, v4);
          swift_bridgeObjectRelease();
LABEL_36:
          v22 = *(double *)((char *)v2 + v8) + -0.1;
          v23 = swift_allocObject(&unk_13C6618, 24, 7);
          *(_QWORD *)(v23 + 16) = v21;
          v24 = objc_allocWithZone((Class)UIViewPropertyAnimator);
          v47 = sub_18CA58;
          v48 = (_QWORD *)v23;
          aBlock = (uint64_t)_NSConcreteStackBlock;
          v44 = 1107296256;
          v45 = sub_42D124;
          v46 = (uint64_t)&block_descriptor_24_9;
          v3 = (uint64_t)_Block_copy(&aBlock);
          v25 = v21;
          v2 = v40;
          swift_release();
          v4 = (unint64_t)objc_msgSend(v24, "initWithDuration:curve:animations:", 3, v3, v22);
          _Block_release((const void *)v3);
          objc_msgSend((id)v4, "startAnimation");

          v7 = v6[1];
LABEL_37:
          v26 = *(double *)((char *)v2 + OBJC_IVAR___MusicInstrumentalContentView_breathDuration);
          v27 = (a1 - v7) / v26;
          if ((~*(_QWORD *)&v27 & 0x7FF0000000000000) == 0)
            goto LABEL_73;
          if (v27 <= -9.22337204e18)
            goto LABEL_74;
          if (v27 >= 9.22337204e18)
            goto LABEL_75;
          v3 = (uint64_t)v27 + 1;
          if (__OFADD__((uint64_t)v27, 1))
            goto LABEL_76;
          v28 = OBJC_IVAR___MusicInstrumentalContentView_totalBreathsCompleted;
          if (*(uint64_t *)((char *)v2 + OBJC_IVAR___MusicInstrumentalContentView_totalBreathsCompleted) >= v3)
            goto LABEL_44;
          v29 = (void *)objc_opt_self(UIView);
          v30 = swift_allocObject(&unk_13C65C8, 32, 7);
          *(_QWORD *)(v30 + 16) = v2;
          *(_QWORD *)(v30 + 24) = v3;
          v47 = sub_DFF90C;
          v48 = (_QWORD *)v30;
          aBlock = (uint64_t)_NSConcreteStackBlock;
          v44 = 1107296256;
          v45 = sub_42D124;
          v46 = (uint64_t)&block_descriptor_18_13;
          v3 = (uint64_t)_Block_copy(&aBlock);
          v4 = (unint64_t)v48;
          v31 = v2;
          swift_release();
          objc_msgSend(v29, "animateWithDuration:delay:options:animations:completion:", 0x20000, v3, 0, v26 + -0.4, 0.2);
          _Block_release((const void *)v3);
          v32 = *(uint64_t *)((char *)v2 + v28);
          v33 = __OFADD__(v32, 1);
          v34 = (char *)(v32 + 1);
        }
        while (v33);
        *(char **)((char *)v2 + v28) = v34;
        goto LABEL_44;
      }
LABEL_68:
      swift_bridgeObjectRelease();
      sub_DFDD50(a1);
      return;
    }
LABEL_64:
    if (v1 < 0)
      v39 = v1;
    else
      v39 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v3 = _CocoaArrayWrapper.endIndex.getter(v39);
    if (v3)
      goto LABEL_11;
    goto LABEL_68;
  }
  if ((*((_BYTE *)v2 + OBJC_IVAR___MusicInstrumentalContentView_totalDotsFadedIn + 8) & 1) != 0
    || (v7 + 1.0 < a1
      ? (v19 = *(char **)((char *)v2 + OBJC_IVAR___MusicInstrumentalContentView_totalDotsFadedIn) == (char *)v10)
      : (v19 = 0),
        !v19 || v6[2] + -1.8 <= a1))
  {
LABEL_44:
    v35 = v6[2];
    v36 = v35 > a1 && v35 + -1.8 < a1;
    if (v36 && (*((_BYTE *)v2 + OBJC_IVAR___MusicInstrumentalContentView_fadeOutCued) & 1) == 0)
      sub_DFEC0C();
    return;
  }
  if (v11 == v13 || *((_BYTE *)v2 + OBJC_IVAR___MusicInstrumentalContentView_isSelected) != 1)
    goto LABEL_37;
  v3 = v11 - 1;
  if (__OFSUB__(v11, 1))
    goto LABEL_78;
  v40 = v2;
  if (v3 < v13)
    goto LABEL_79;
  if (v13 == v3)
  {
LABEL_32:
    v2 = v40;
    *(char **)((char *)v40 + v12) = (char *)v11;
    v20 = (unint64_t *)((char *)v40 + OBJC_IVAR___MusicInstrumentalContentView_dots);
    swift_beginAccess((char *)v40 + OBJC_IVAR___MusicInstrumentalContentView_dots, v41, 0, 0);
    v4 = *v20;
    if ((*v20 & 0xC000000000000001) != 0)
      goto LABEL_80;
    if (v3 < 0)
    {
      __break(1u);
    }
    else if ((unint64_t)v3 < *(_QWORD *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFF8)))
    {
      v21 = *(id *)(v4 + 8 * v3 + 32);
      goto LABEL_36;
    }
    __break(1u);
  }
  else if (v13 < v3)
  {
    v4 = (unint64_t)v2 + OBJC_IVAR___MusicInstrumentalContentView_dots;
    swift_beginAccess((char *)v2 + OBJC_IVAR___MusicInstrumentalContentView_dots, v42, 0, 0);
    v2 = &selRef_notificationName;
    while (1)
    {
      v37 = *(_QWORD *)v4;
      if ((*(_QWORD *)v4 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        v38 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v37);
        swift_bridgeObjectRelease();
      }
      else
      {
        if (v13 < 0)
          goto LABEL_71;
        if ((unint64_t)v13 >= *(_QWORD *)((char *)&dword_10 + (v37 & 0xFFFFFFFFFFFFF8)))
          goto LABEL_72;
        v38 = *(id *)(v37 + 8 * v13 + 32);
      }
      ++v13;
      objc_msgSend(v38, "setAlpha:", 1.0);

      if (v3 == v13)
        goto LABEL_32;
    }
  }
  __break(1u);
}

void sub_DFEA6C(uint64_t a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  __int128 v7;
  id v8;
  void *v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[24];

  v3 = (uint64_t *)(a1 + OBJC_IVAR___MusicInstrumentalContentView_dots);
  swift_beginAccess(a1 + OBJC_IVAR___MusicInstrumentalContentView_dots, v14, 0, 0);
  v4 = *v3;
  if (!((unint64_t)v4 >> 62))
  {
    v5 = *(_QWORD *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    if (v5)
      goto LABEL_3;
LABEL_20:
    swift_bridgeObjectRelease();
    return;
  }
  if (v4 < 0)
    v10 = v4;
  else
    v10 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v5 = _CocoaArrayWrapper.endIndex.getter(v10);
  if (!v5)
    goto LABEL_20;
LABEL_3:
  if (v5 >= 1)
  {
    for (i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0)
        v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v4);
      else
        v8 = *(id *)(v4 + 8 * i + 32);
      v9 = v8;
      if ((a2 & 0x8000000000000001) == 1)
      {
        if (qword_1506148 != -1)
          swift_once(&qword_1506148, sub_DFD758);
        v11 = xmmword_1583460;
        v12 = *(_OWORD *)algn_1583470;
        v7 = xmmword_1583480;
      }
      else
      {
        if (qword_1506140 != -1)
          swift_once(&qword_1506140, sub_DFD73C);
        v11 = xmmword_1583430;
        v12 = xmmword_1583440;
        v7 = xmmword_1583450;
      }
      v13 = v7;
      objc_msgSend(v9, "setTransform:", &v11);

    }
    goto LABEL_20;
  }
  __break(1u);
}

void sub_DFEC0C()
{
  _BYTE *v0;
  id v1;
  uint64_t v2;
  void *v3;
  _BYTE *v4;
  id v5;
  uint64_t v6;
  void *v7;
  _BYTE *v8;
  id v9;
  uint64_t v10;
  void *v11;
  _BYTE *v12;
  void **v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  void *v16;
  void *v17;
  uint64_t v18;

  if ((v0[OBJC_IVAR___MusicInstrumentalContentView_fadeOutCued] & 1) == 0)
  {
    v0[OBJC_IVAR___MusicInstrumentalContentView_fadeOutCued] = 1;
    v1 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:controlPoint1:controlPoint2:animations:", 0, 1.0, 0.25, 0.1, 0.25, 1.0);
    v2 = swift_allocObject(&unk_13C64D8, 24, 7);
    *(_QWORD *)(v2 + 16) = v0;
    v17 = sub_DFF8B8;
    v18 = v2;
    v13 = _NSConcreteStackBlock;
    v14 = 1107296256;
    v15 = sub_42D124;
    v16 = &block_descriptor_346;
    v3 = _Block_copy(&v13);
    v4 = v0;
    objc_msgSend(v1, "addAnimations:", v3, swift_release().n128_f64[0]);
    _Block_release(v3);
    objc_msgSend(v1, "startAnimation");
    v5 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:curve:animations:", 1, 0, 0.3);
    v6 = swift_allocObject(&unk_13C6528, 24, 7);
    *(_QWORD *)(v6 + 16) = v4;
    v17 = sub_DFF8D8;
    v18 = v6;
    v13 = _NSConcreteStackBlock;
    v14 = 1107296256;
    v15 = sub_42D124;
    v16 = &block_descriptor_6_30;
    v7 = _Block_copy(&v13);
    v8 = v4;
    objc_msgSend(v5, "addAnimations:", v7, swift_release().n128_f64[0]);
    _Block_release(v7);
    objc_msgSend(v5, "startAnimationAfterDelay:", 1.0);
    v9 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:curve:animations:", 1, 0, 0.5);
    v10 = swift_allocObject(&unk_13C6578, 24, 7);
    *(_QWORD *)(v10 + 16) = v8;
    v17 = sub_DFF8E0;
    v18 = v10;
    v13 = _NSConcreteStackBlock;
    v14 = 1107296256;
    v15 = sub_42D124;
    v16 = &block_descriptor_12_20;
    v11 = _Block_copy(&v13);
    v12 = v8;
    objc_msgSend(v9, "addAnimations:", v11, swift_release().n128_f64[0]);
    _Block_release(v11);
    objc_msgSend(v9, "startAnimationAfterDelay:", 1.0);

  }
}

void sub_DFEEA0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  _OWORD v8[3];
  _BYTE v9[24];

  v1 = (uint64_t *)(a1 + OBJC_IVAR___MusicInstrumentalContentView_dots);
  swift_beginAccess(a1 + OBJC_IVAR___MusicInstrumentalContentView_dots, v9, 0, 0);
  v2 = *v1;
  if (!((unint64_t)v2 >> 62))
  {
    v3 = *(_QWORD *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    if (v3)
      goto LABEL_3;
LABEL_16:
    swift_bridgeObjectRelease();
    return;
  }
  if (v2 < 0)
    v7 = v2;
  else
    v7 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v3 = _CocoaArrayWrapper.endIndex.getter(v7);
  if (!v3)
    goto LABEL_16;
LABEL_3:
  if (v3 >= 1)
  {
    v4 = 0;
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
        v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v2);
      else
        v5 = *(id *)(v2 + 8 * v4 + 32);
      v6 = v5;
      if (qword_1506150 != -1)
        swift_once(&qword_1506150, sub_DFD778);
      ++v4;
      v8[0] = xmmword_1583490;
      v8[1] = xmmword_15834A0;
      v8[2] = xmmword_15834B0;
      objc_msgSend(v6, "setTransform:", v8);

    }
    while (v3 != v4);
    goto LABEL_16;
  }
  __break(1u);
}

uint64_t sub_DFEFF4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t i;
  id v6;
  void *v7;
  uint64_t v8;
  _BYTE v9[24];

  v1 = (uint64_t *)(a1 + OBJC_IVAR___MusicInstrumentalContentView_dots);
  swift_beginAccess(a1 + OBJC_IVAR___MusicInstrumentalContentView_dots, v9, 0, 0);
  v2 = *v1;
  if (!((unint64_t)v2 >> 62))
  {
    v3 = *(_QWORD *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFF8));
    result = swift_bridgeObjectRetain();
    if (v3)
      goto LABEL_3;
    return swift_bridgeObjectRelease(v2);
  }
  if (v2 < 0)
    v8 = v2;
  else
    v8 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  result = _CocoaArrayWrapper.endIndex.getter(v8);
  v3 = result;
  if (!result)
    return swift_bridgeObjectRelease(v2);
LABEL_3:
  if (v3 >= 1)
  {
    for (i = 0; i != v3; ++i)
    {
      if ((v2 & 0xC000000000000001) != 0)
        v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v2);
      else
        v6 = *(id *)(v2 + 8 * i + 32);
      v7 = v6;
      objc_msgSend(v6, "setAlpha:", 0.0);

    }
    return swift_bridgeObjectRelease(v2);
  }
  __break(1u);
  return result;
}

void sub_DFF0EC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  _OWORD v8[3];
  _BYTE v9[24];

  v1 = (uint64_t *)(a1 + OBJC_IVAR___MusicInstrumentalContentView_dots);
  swift_beginAccess(a1 + OBJC_IVAR___MusicInstrumentalContentView_dots, v9, 0, 0);
  v2 = *v1;
  if (!((unint64_t)v2 >> 62))
  {
    v3 = *(_QWORD *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    if (v3)
      goto LABEL_3;
LABEL_16:
    swift_bridgeObjectRelease();
    return;
  }
  if (v2 < 0)
    v7 = v2;
  else
    v7 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v3 = _CocoaArrayWrapper.endIndex.getter(v7);
  if (!v3)
    goto LABEL_16;
LABEL_3:
  if (v3 >= 1)
  {
    v4 = 0;
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
        v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v2);
      else
        v5 = *(id *)(v2 + 8 * v4 + 32);
      v6 = v5;
      if (qword_1506158 != -1)
        swift_once(&qword_1506158, sub_DFD798);
      ++v4;
      v8[0] = xmmword_15834C0;
      v8[1] = *(_OWORD *)algn_15834D0;
      v8[2] = xmmword_15834E0;
      objc_msgSend(v6, "setTransform:", v8);

    }
    while (v3 != v4);
    goto LABEL_16;
  }
  __break(1u);
}

void sub_DFF240()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  double v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  id v12;
  double v13;
  id v14;
  id v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _BYTE v19[24];

  v1 = &v0[OBJC_IVAR___MusicInstrumentalContentView_specs];
  v2 = *(_QWORD *)&v0[OBJC_IVAR___MusicInstrumentalContentView_specs + 488];
  if (v2 < 0)
  {
LABEL_16:
    __break(1u);
  }
  else if (v2)
  {
    v3 = v0;
    v4 = 0;
    v5 = &v0[OBJC_IVAR___MusicInstrumentalContentView_dots];
    do
    {
      v6 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
      v7 = v6;
      v8 = 1.3;
      if (!v4)
        goto LABEL_7;
      v9 = *((_QWORD *)v1 + 61);
      v10 = __OFSUB__(v9, 1);
      v11 = v9 - 1;
      if (v10)
      {
        __break(1u);
        goto LABEL_16;
      }
      v8 = -1.3;
      if (v4 == v11)
      {
LABEL_7:
        v12 = objc_msgSend(v6, "layer");
        objc_msgSend(v12, "anchorPoint");
        objc_msgSend(v12, "setAnchorPoint:", v13 + v8);

      }
      objc_msgSend(v7, "setBackgroundColor:", *((_QWORD *)v1 + 29));
      objc_msgSend(v7, "setAlpha:", 0.0);
      objc_msgSend(v7, "setAutoresizingMask:", 40);
      v14 = objc_msgSend(v7, "layer");
      if (qword_1506128 != -1)
        swift_once(&qword_1506128, sub_DFD6D8);
      objc_msgSend(v14, "setCornerRadius:", *(double *)&qword_1583410);

      swift_beginAccess(v5, v19, 33, 0);
      v15 = v7;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v15);
      v17 = *(_QWORD *)((char *)&dword_10 + (*(_QWORD *)v5 & 0xFFFFFFFFFFFFFF8));
      v16 = *(_QWORD *)((char *)&dword_18 + (*(_QWORD *)v5 & 0xFFFFFFFFFFFFFF8));
      if (v17 >= v16 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v16 > 1, v17 + 1, 1);
      ++v4;
      v18 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v15);
      specialized Array._endMutation()(v18);
      objc_msgSend(v3, "addSubview:", v15, swift_endAccess(v19).n128_f64[0]);

    }
    while (v2 != v4);
  }
}

void sub_DFF474()
{
  char *v0;
  char *v1;
  uint64_t *v2;
  uint64_t v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  double v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22[24];
  CGRect v23;
  CGRect v24;

  v1 = v0;
  v2 = (uint64_t *)&v0[OBJC_IVAR___MusicInstrumentalContentView_dots];
  swift_beginAccess(&v0[OBJC_IVAR___MusicInstrumentalContentView_dots], v22, 0, 0);
  v3 = *v2;
  if (!((unint64_t)*v2 >> 62))
  {
    if (*(_QWORD *)((char *)&dword_10 + (v3 & 0xFFFFFFFFFFFFF8)))
      goto LABEL_4;
    goto LABEL_3;
  }
  if (v3 < 0)
    v19 = *v2;
  else
    v19 = v3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v20 = _CocoaArrayWrapper.endIndex.getter(v19);
  swift_bridgeObjectRelease();
  if (!v20)
LABEL_3:
    sub_DFF240();
LABEL_4:
  v4 = (double)*(uint64_t *)&v1[OBJC_IVAR___MusicInstrumentalContentView_specs + 488];
  if (qword_1506128 != -1)
    swift_once(&qword_1506128, sub_DFD6D8);
  v5 = *(double *)&qword_1583410 + *(double *)&qword_1583410;
  v6 = (*(double *)&qword_1583410 + *(double *)&qword_1583410) * v4;
  v7 = v4 + -1.0;
  if (qword_1506130 != -1)
    swift_once(&qword_1506130, sub_DFD6F8);
  v8 = v6 + v7 * *(double *)&qword_1583418;
  v9 = Int.seconds.getter(0);
  v10 = *(_QWORD *)&v1[OBJC_IVAR___MusicInstrumentalContentView_alignment];
  if (v10 == 1)
  {
    objc_msgSend(v1, "bounds", v9);
    v11 = (CGRectGetWidth(v24) - v8) * 0.5;
  }
  else
  {
    v11 = v9;
    if (v10 == 2)
    {
      objc_msgSend(v1, "bounds");
      v11 = CGRectGetWidth(v23) - v8;
    }
  }
  v12 = *v2;
  if (!((unint64_t)v12 >> 62))
  {
    v13 = *(_QWORD *)((char *)&dword_10 + (v12 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    if (v13)
      goto LABEL_14;
LABEL_29:
    swift_bridgeObjectRelease();
    return;
  }
  if (v12 < 0)
    v21 = v12;
  else
    v21 = v12 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v13 = _CocoaArrayWrapper.endIndex.getter(v21);
  if (!v13)
    goto LABEL_29;
LABEL_14:
  if (v13 >= 1)
  {
    v14 = 0;
    do
    {
      if ((v12 & 0xC000000000000001) != 0)
        v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v14, v12);
      else
        v15 = *(id *)(v12 + 8 * v14 + 32);
      v16 = v15;
      ++v14;
      objc_msgSend(v1, "bounds");
      UIView.untransformedFrame.setter(v11, v17 * 0.5 - v5 * 0.5, v5, v5);
      v18 = *(double *)&qword_1583418;

      v11 = v11 + v5 + v18;
    }
    while (v13 != v14);
    goto LABEL_29;
  }
  __break(1u);
}

id sub_DFF728()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)_s23InstrumentalContentViewCMa();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t _s23InstrumentalContentViewCMa()
{
  return objc_opt_self(MusicInstrumentalContentView);
}

uint64_t sub_DFF7CC(const void *a1)
{
  _QWORD *v1;
  void *v3;
  _BYTE v5[544];

  v3 = (void *)(*v1 + OBJC_IVAR___MusicInstrumentalContentView_specs);
  memcpy(v5, v3, 0x219uLL);
  memcpy(v3, a1, 0x219uLL);
  return sub_532E70((uint64_t)v5);
}

uint64_t sub_DFF830(uint64_t result)
{
  _QWORD *v1;

  *(_BYTE *)(*v1 + OBJC_IVAR___MusicInstrumentalContentView_isScrolling) = result;
  return result;
}

uint64_t sub_DFF844()
{
  return sub_DFDA08();
}

void sub_DFF864(char a1, char a2)
{
  sub_DFDC20(a1, a2);
}

id sub_DFF884()
{
  id *v0;

  return objc_msgSend(*v0, "sizeThatFits:");
}

uint64_t sub_DFF894()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_DFF8B8()
{
  uint64_t v0;

  sub_DFEEA0(*(_QWORD *)(v0 + 16));
}

uint64_t block_copy_helper_340(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double block_destroy_helper_340(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_DFF8D8()
{
  uint64_t v0;

  return sub_DFEFF4(*(_QWORD *)(v0 + 16));
}

void sub_DFF8E0()
{
  uint64_t v0;

  sub_DFF0EC(*(_QWORD *)(v0 + 16));
}

uint64_t sub_DFF8E8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_DFF90C()
{
  uint64_t v0;

  sub_DFEA6C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_DFF914()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

void sub_DFF938()
{
  int64_t *v0;

  sub_DFE148(v0[2], v0[3], v0[4]);
}

void sub_DFF944()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 16) + OBJC_IVAR___MusicInstrumentalContentView_totalDotsFadedIn;
  if ((*(_BYTE *)(v1 + 8) & 1) == 0)
  {
    v2 = *(_QWORD *)(v0 + 24);
    if (*(_QWORD *)v1 <= v2)
    {
      v3 = __OFADD__(v2, 1);
      v4 = v2 + 1;
      if (v3)
      {
        __break(1u);
      }
      else
      {
        *(_QWORD *)v1 = v4;
        *(_BYTE *)(v1 + 8) = 0;
      }
    }
  }
}

void sub_DFF984()
{
  uint64_t v0;

  sub_DFE2B4(*(_QWORD *)(v0 + 16));
}

uint64_t sub_DFF98C()
{
  return sub_DFDA08();
}

void sub_DFF9AC()
{
  _BYTE *v0;
  _OWORD *v1;
  char *v2;

  v0[OBJC_IVAR___MusicInstrumentalContentView_isScrolling] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___MusicInstrumentalContentView_alignment] = 0;
  v1 = &v0[OBJC_IVAR___MusicInstrumentalContentView_lastSeenBounds];
  *v1 = 0u;
  v1[1] = 0u;
  v0[OBJC_IVAR___MusicInstrumentalContentView_isSelected] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___MusicInstrumentalContentView_dots] = _swiftEmptyArrayStorage;
  v0[OBJC_IVAR___MusicInstrumentalContentView_fadeOutCued] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___MusicInstrumentalContentView_dotFadeInDuration] = 0;
  v2 = &v0[OBJC_IVAR___MusicInstrumentalContentView_totalDotsFadedIn];
  *(_QWORD *)v2 = 0;
  v2[8] = 1;
  *(_QWORD *)&v0[OBJC_IVAR___MusicInstrumentalContentView_totalDotsCompleted] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___MusicInstrumentalContentView_breathDuration] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___MusicInstrumentalContentView_totalBreathsCompleted] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000000010C4100, "MusicCoreUI/SyncedLyricsLineView+Instrumental.swift", 51, 2, 75, 0);
  __break(1u);
}

void sub_DFFB00(char a1, char a2)
{
  _BYTE *v2;
  double v5;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  char **v10;
  uint64_t v11;
  NSString v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  void *v19;
  _BYTE *v20;
  uint64_t v21;
  void *v22;
  _BYTE *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void **v27;
  uint64_t v28;
  void *v29;
  void *v30;
  void *v31;
  uint64_t v32;

  v2[OBJC_IVAR___MusicTextContentView_isSelected] = a1;
  if ((a1 & 1) != 0)
  {
    v5 = Int.seconds.getter(1);
    v6 = OBJC_IVAR___MusicTextContentView_selectedLabel;
    v7 = *(void **)&v2[OBJC_IVAR___MusicTextContentView_selectedLabel];
    if (v7)
      goto LABEL_20;
    v8 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
    objc_msgSend(v8, "setLineBreakStrategy:", 3);
    objc_msgSend(v8, "setNumberOfLines:", 0);
    objc_msgSend(v8, "setTextAlignment:", 4);
    objc_msgSend(v8, "setAutoresizingMask:", 18);
    objc_msgSend(v8, "setTextAlignment:", *(_QWORD *)&v2[OBJC_IVAR___MusicTextContentView_alignment]);
    v9 = *(void **)&v2[OBJC_IVAR___MusicTextContentView_content];
    if ((v2[OBJC_IVAR___MusicTextContentView_content + 16] & 1) != 0)
    {
      v10 = &selRef_setAttributedText_;
    }
    else
    {
      v11 = *(_QWORD *)&v2[OBJC_IVAR___MusicTextContentView_content + 8];
      swift_bridgeObjectRetain();
      v12 = String._bridgeToObjectiveC()();
      sub_4E664(v9, v11, 0);
      objc_msgSend(v8, "setText:", v12);

      v9 = *(void **)&v2[OBJC_IVAR___MusicTextContentView_specs + 168];
      v10 = &selRef_setFont_;
    }
    objc_msgSend(v8, *v10, v9);
    objc_msgSend(v8, "setTextColor:", *(_QWORD *)&v2[OBJC_IVAR___MusicTextContentView_specs + 232]);
    objc_msgSend(v2, "addSubview:", v8);
    v13 = *(void **)&v2[v6];
    *(_QWORD *)&v2[v6] = v8;

    v7 = *(void **)&v2[v6];
    if (v7)
    {
LABEL_20:
      v14 = *(void **)&v2[OBJC_IVAR___MusicTextContentView_label];
      v15 = v7;
      objc_msgSend(v14, "frame");
      objc_msgSend(v15, "setFrame:");

      v16 = *(void **)&v2[v6];
      if (v16)
        objc_msgSend(v16, "setAlpha:", 0.0);
    }
  }
  else
  {
    v5 = Int.seconds.getter(0);
  }
  if ((a2 & 1) != 0)
  {
    v17 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:controlPoint1:controlPoint2:animations:", 0, 0.12, 0.33, 0.0, 0.2, 0.1);
    v18 = swift_allocObject(&unk_13C68B0, 32, 7);
    *(_QWORD *)(v18 + 16) = v2;
    *(double *)(v18 + 24) = v5;
    v31 = sub_E00A84;
    v32 = v18;
    v27 = _NSConcreteStackBlock;
    v28 = 1107296256;
    v29 = sub_42D124;
    v30 = &block_descriptor_347;
    v19 = _Block_copy(&v27);
    v20 = v2;
    objc_msgSend(v17, "addAnimations:", v19, swift_release().n128_f64[0]);
    _Block_release(v19);
    v21 = swift_allocObject(&unk_13C6900, 24, 7);
    *(_QWORD *)(v21 + 16) = v20;
    v31 = sub_E00B3C;
    v32 = v21;
    v27 = _NSConcreteStackBlock;
    v28 = 1107296256;
    v29 = sub_59BEF0;
    v30 = &block_descriptor_7_17;
    v22 = _Block_copy(&v27);
    v23 = v20;
    objc_msgSend(v17, "addCompletion:", v22, swift_release().n128_f64[0]);
    _Block_release(v22);
    objc_msgSend(v17, "startAnimation");

  }
  else
  {
    objc_msgSend(*(id *)&v2[OBJC_IVAR___MusicTextContentView_label], "setAlpha:", 1.0 - v5);
    v24 = OBJC_IVAR___MusicTextContentView_selectedLabel;
    v25 = *(void **)&v2[OBJC_IVAR___MusicTextContentView_selectedLabel];
    if (v25)
      objc_msgSend(v25, "setAlpha:", v5);
    if ((a1 & 1) == 0)
    {
      v26 = *(void **)&v2[v24];
      if (v26)
      {
        objc_msgSend(v26, "removeFromSuperview");
        v26 = *(void **)&v2[v24];
      }
      *(_QWORD *)&v2[v24] = 0;

    }
  }
}

void sub_DFFF18(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;

  if ((*(_BYTE *)(a2 + OBJC_IVAR___MusicTextContentView_isSelected) & 1) == 0)
  {
    v3 = OBJC_IVAR___MusicTextContentView_selectedLabel;
    v4 = *(void **)(a2 + OBJC_IVAR___MusicTextContentView_selectedLabel);
    if (v4)
    {
      objc_msgSend(v4, "removeFromSuperview");
      v4 = *(void **)(a2 + v3);
    }
    *(_QWORD *)(a2 + v3) = 0;

  }
}

char *sub_DFFF74(void *a1, uint64_t a2, char a3, uint64_t a4)
{
  _BYTE *v4;
  uint64_t v9;
  id v10;
  char *v11;
  id v12;
  char *v13;
  char v14;
  id v15;
  Swift::Int v16;
  char *v17;
  double v18;
  uint64_t v19;
  void *v20;
  char *v21;
  id v22;
  objc_super v24;

  v4[OBJC_IVAR___MusicTextContentView_isSelected] = 0;
  *(_QWORD *)&v4[OBJC_IVAR___MusicTextContentView_alignment] = 0;
  v4[OBJC_IVAR___MusicTextContentView_isScrolling] = 1;
  v9 = OBJC_IVAR___MusicTextContentView_label;
  v10 = objc_allocWithZone((Class)UILabel);
  v11 = v4;
  v12 = objc_msgSend(v10, "init");
  objc_msgSend(v12, "setLineBreakStrategy:", 3);
  objc_msgSend(v12, "setNumberOfLines:", 0);
  objc_msgSend(v12, "setTextAlignment:", 4);
  objc_msgSend(v12, "setAutoresizingMask:", 18);
  *(_QWORD *)&v4[v9] = v12;
  *(_QWORD *)&v11[OBJC_IVAR___MusicTextContentView_selectedLabel] = 0;
  v13 = &v11[OBJC_IVAR___MusicTextContentView_content];
  *(_QWORD *)v13 = a1;
  *((_QWORD *)v13 + 1) = a2;
  v14 = a3 & 1;
  v13[16] = a3 & 1;
  memcpy(&v11[OBJC_IVAR___MusicTextContentView_specs], (const void *)a4, 0x219uLL);
  sub_533134(a4);
  sub_4E674(a1, a2, a3 & 1);

  v24.receiver = v11;
  v24.super_class = (Class)_s15TextContentViewCMa();
  v15 = objc_msgSendSuper2(&v24, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v16 = sub_DD1744((uint64_t)&off_13C2080);
  v17 = (char *)v15;
  sub_E003A4(v16);
  *(_QWORD *)&v18 = swift_bridgeObjectRelease().n128_u64[0];
  if ((a3 & 1) == 0)
  {
    if (*(_BYTE *)(a4 + 56))
      v19 = 4;
    else
      v19 = *(_QWORD *)(a4 + 48);
    objc_msgSend(*(id *)&v17[OBJC_IVAR___MusicTextContentView_label], "setTextAlignment:", v19, v18);
  }
  v20 = *(void **)&v17[OBJC_IVAR___MusicTextContentView_label];
  v21 = v17;
  v22 = v20;
  objc_msgSend(v21, "addSubview:", v22);
  sub_532E70(a4);
  sub_4E664(a1, a2, v14);

  return v21;
}

uint64_t sub_E001D8@<X0>(char **a1@<X8>)
{
  _BYTE *v1;
  _BYTE *v2;
  char *v4;
  void *v5;
  uint64_t v6;
  char *v7;
  objc_class *v8;
  void *v9;
  uint64_t v10;
  char v11;
  char *v12;
  Swift::Int v13;
  char *v14;
  uint64_t result;
  _BYTE v16[544];

  v2 = v1;
  v4 = &v1[OBJC_IVAR___MusicTextContentView_content];
  v5 = *(void **)&v1[OBJC_IVAR___MusicTextContentView_content];
  v6 = *((_QWORD *)v4 + 1);
  v7 = &v2[OBJC_IVAR___MusicTextContentView_specs];
  if ((v4[16] & 1) != 0)
  {
    memcpy(v16, v7, 0x219uLL);
    v8 = (objc_class *)_s15TextContentViewCMa();
    objc_allocWithZone(v8);
    sub_4E674(v5, v6, 1);
    sub_533134((uint64_t)v16);
    v9 = v5;
    v10 = v6;
    v11 = 1;
  }
  else
  {
    memcpy(v16, v7, 0x219uLL);
    v8 = (objc_class *)_s15TextContentViewCMa();
    objc_allocWithZone(v8);
    sub_4E674(v5, v6, 0);
    sub_533134((uint64_t)v16);
    v9 = v5;
    v10 = v6;
    v11 = 0;
  }
  v12 = sub_DFFF74(v9, v10, v11, (uint64_t)v16);
  sub_DFFB00(v2[OBJC_IVAR___MusicTextContentView_isSelected], 0);
  *(_QWORD *)&v12[OBJC_IVAR___MusicTextContentView_alignment] = *(_QWORD *)&v2[OBJC_IVAR___MusicTextContentView_alignment];
  v13 = sub_DD1744((uint64_t)&off_13C20A8);
  sub_E003A4(v13);
  swift_bridgeObjectRelease();
  v14 = v12;
  objc_msgSend(v2, "bounds");
  objc_msgSend(v14, "setFrame:");

  result = _s15TextContentViewCMa();
  a1[3] = (char *)v8;
  *a1 = v14;
  return result;
}

double sub_E003A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double result;
  _QWORD *v10;
  int64_t v11;

  v10 = (_QWORD *)(a1 + 56);
  v1 = 1 << *(_BYTE *)(a1 + 32);
  v2 = -1;
  if (v1 < 64)
    v2 = ~(-1 << v1);
  v3 = v2 & *(_QWORD *)(a1 + 56);
  v11 = (unint64_t)(v1 + 63) >> 6;
  swift_bridgeObjectRetain();
  if (v3)
  {
    v5 = __clz(__rbit64(v3));
    goto LABEL_18;
  }
  if (v11 > 1)
  {
    v6 = v10[1];
    v7 = 1;
    if (v6)
      goto LABEL_17;
    v7 = 2;
    if (v11 <= 2)
      goto LABEL_19;
    v6 = v10[2];
    if (v6)
      goto LABEL_17;
    v7 = 3;
    if (v11 <= 3)
      goto LABEL_19;
    v6 = v10[3];
    if (v6)
    {
LABEL_17:
      v5 = __clz(__rbit64(v6)) + (v7 << 6);
LABEL_18:
      __asm { BR              X9 }
    }
    v8 = 4;
    if (v11 > 4)
    {
      v6 = v10[4];
      if (v6)
      {
        v7 = 4;
        goto LABEL_17;
      }
      while (1)
      {
        v7 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
          __break(1u);
          JUMPOUT(0xE0074CLL);
        }
        if (v7 >= v11)
          break;
        v6 = v10[v7];
        ++v8;
        if (v6)
          goto LABEL_17;
      }
    }
  }
LABEL_19:
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

id sub_E00788()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)_s15TextContentViewCMa();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t _s15TextContentViewCMa()
{
  return objc_opt_self(MusicTextContentView);
}

uint64_t sub_E00858(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  char v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_4E674(*(void **)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for JSStaticImageViewModel.ImageResource(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  char v5;
  void *v6;
  uint64_t v7;
  char v8;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_4E674(*(void **)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_4E664(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for JSStaticImageViewModel.ImageResource(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_4E664(v4, v5, v6);
  return a1;
}

ValueMetadata *_s15TextContentViewC7ContentOMa()
{
  return &_s15TextContentViewC7ContentON;
}

uint64_t sub_E00948(const void *a1)
{
  _QWORD *v1;
  void *v3;
  Swift::Int v4;
  _BYTE v6[544];

  v3 = (void *)(*v1 + OBJC_IVAR___MusicTextContentView_specs);
  memcpy(v6, v3, 0x219uLL);
  memcpy(v3, a1, 0x219uLL);
  sub_533134((uint64_t)a1);
  sub_532E70((uint64_t)v6);
  v4 = sub_DD1744((uint64_t)&off_13C2058);
  sub_E003A4(v4);
  swift_bridgeObjectRelease();
  return sub_532E70((uint64_t)a1);
}

double sub_E009DC(char a1)
{
  _QWORD *v1;
  Swift::Int v2;
  double result;

  *(_BYTE *)(*v1 + OBJC_IVAR___MusicTextContentView_isScrolling) = a1;
  v2 = sub_DD1744((uint64_t)&off_13C20D0);
  sub_E003A4(v2);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

id sub_E00A20()
{
  _QWORD *v0;

  return objc_msgSend(*(id *)(*v0 + OBJC_IVAR___MusicTextContentView_label), "setAlpha:", 1.0);
}

void sub_E00A40(char a1, char a2)
{
  sub_DFFB00(a1, a2);
}

uint64_t sub_E00A60()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_E00A84()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  id result;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(double *)(v0 + 24);
  objc_msgSend(*(id *)(v1 + OBJC_IVAR___MusicTextContentView_label), "setAlpha:", 1.0 - v2);
  result = *(id *)(v1 + OBJC_IVAR___MusicTextContentView_selectedLabel);
  if (result)
    return objc_msgSend(result, "setAlpha:", v2);
  return result;
}

uint64_t block_copy_helper_341(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double block_destroy_helper_341(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_E00B18()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_E00B3C(uint64_t a1)
{
  uint64_t v1;

  sub_DFFF18(a1, *(_QWORD *)(v1 + 16));
}

void sub_E00B44()
{
  _BYTE *v0;
  uint64_t v1;
  id v2;

  v0[OBJC_IVAR___MusicTextContentView_isSelected] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___MusicTextContentView_alignment] = 0;
  v0[OBJC_IVAR___MusicTextContentView_isScrolling] = 1;
  v1 = OBJC_IVAR___MusicTextContentView_label;
  v2 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v2, "setLineBreakStrategy:", 3);
  objc_msgSend(v2, "setNumberOfLines:", 0);
  objc_msgSend(v2, "setTextAlignment:", 4);
  objc_msgSend(v2, "setAutoresizingMask:", 18);
  *(_QWORD *)&v0[v1] = v2;
  *(_QWORD *)&v0[OBJC_IVAR___MusicTextContentView_selectedLabel] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000000010C4100, "MusicCoreUI/SyncedLyricsLineView+Text.swift", 43, 2, 121, 0);
  __break(1u);
}

uint64_t _s15TextContentViewC6ChangeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_E00C9C + 4 * byte_10ACBFD[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_E00CD0 + 4 * byte_10ACBF8[v4]))();
}

uint64_t sub_E00CD0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_E00CD8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xE00CE0);
  return result;
}

uint64_t sub_E00CEC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xE00CF4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_E00CF8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_E00D00(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s15TextContentViewC6ChangeOMa()
{
  return &_s15TextContentViewC6ChangeON;
}

unint64_t sub_E00D20()
{
  unint64_t result;

  result = qword_1508298;
  if (!qword_1508298)
  {
    result = swift_getWitnessTable(&unk_10ACC74, &_s15TextContentViewC6ChangeON);
    atomic_store(result, (unint64_t *)&qword_1508298);
  }
  return result;
}

uint64_t sub_E00D6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_55D1C(v3, a1);
}

id sub_E00DBC()
{
  char *v0;
  double v1;
  double v2;
  CGFloat v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  uint64_t v8;
  uint64_t *v9;
  double *v10;
  _BYTE v12[24];

  v1 = UIView.untransformedFrame.getter();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v8 = *(_QWORD *)&v0[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_alignment];
  if (v8 == 2)
  {
    v9 = CGPoint.centerRight.unsafeMutableAddressor();
  }
  else if (v8)
  {
    v9 = CGPoint.center.unsafeMutableAddressor();
  }
  else
  {
    v9 = CGPoint.centerLeft.unsafeMutableAddressor();
  }
  v10 = (double *)v9;
  swift_beginAccess(v9, v12, 0, 0);
  objc_msgSend(v0, "setAnchorPoint:", *v10, v10[1]);
  return UIView.untransformedFrame.setter(v1, v3, v5, v7);
}

void sub_E00E68(void *a1)
{
  char *v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  Class isa;

  if (a1)
    objc_msgSend(a1, "removeFromSuperview");
  v2 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_containerView], "addSubview:", v3);
    v4 = (void *)objc_opt_self(NSLayoutConstraint);
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1507660);
    v6 = swift_allocObject(v5, 64, 7);
    *(_OWORD *)(v6 + 16) = xmmword_1063440;
    v7 = objc_msgSend(v3, "leadingAnchor");
    v8 = objc_msgSend(v1, "leadingAnchor");
    v9 = objc_msgSend(v7, "constraintEqualToAnchor:", v8);

    *(_QWORD *)(v6 + 32) = v9;
    v10 = objc_msgSend(v3, "trailingAnchor");
    v11 = objc_msgSend(v1, "trailingAnchor");
    v12 = objc_msgSend(v10, "constraintEqualToAnchor:", v11);

    *(_QWORD *)(v6 + 40) = v12;
    v13 = objc_msgSend(v3, "topAnchor");
    v14 = objc_msgSend(v1, "topAnchor");
    v15 = objc_msgSend(v13, "constraintEqualToAnchor:", v14);

    *(_QWORD *)(v6 + 48) = v15;
    v16 = objc_msgSend(v3, "bottomAnchor");
    v17 = objc_msgSend(v1, "bottomAnchor");
    v18 = objc_msgSend(v16, "constraintEqualToAnchor:", v17);

    *(_QWORD *)(v6 + 56) = v18;
    specialized Array._endMutation()(v19);
    sub_4E684(0, &qword_1508328, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v4, "activateConstraints:", isa, swift_bridgeObjectRelease().n128_f64[0]);

  }
}

void (*sub_E01124(uint64_t a1))(__int128 *a1, char a2)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  id v4;

  v2 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView;
  *(_QWORD *)(a1 + 16) = v1;
  *(_QWORD *)(a1 + 24) = v2;
  v3 = *(_OWORD *)(v1 + v2);
  *(_OWORD *)a1 = v3;
  v4 = (id)v3;
  return sub_E0116C;
}

void sub_E0116C(__int128 *a1, char a2)
{
  id *v3;
  __int128 v4;
  id v5;
  void *v6;
  id v7;
  id v8;

  v3 = (id *)(*((_QWORD *)a1 + 2) + *((_QWORD *)a1 + 3));
  v8 = *v3;
  v4 = *a1;
  *(_OWORD *)v3 = *a1;
  v5 = (id)v4;
  v6 = v5;
  if ((a2 & 1) != 0)
  {
    v7 = v5;
    sub_E00E68(v8);

  }
  else
  {
    sub_E00E68(v8);
  }

}

id sub_E011F0()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView____lazy_storage___backgroundView;
  v2 = *(void **)&v0[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView____lazy_storage___backgroundView];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView____lazy_storage___backgroundView];
  }
  else
  {
    v4 = sub_E01250(v0);
    v5 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_E01250(char *a1)
{
  id v2;
  double *v3;
  id v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  Class isa;

  v2 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v3 = (double *)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs];
  objc_msgSend(v2, "setBackgroundColor:", *(_QWORD *)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 456]);
  objc_msgSend(v2, "setAlpha:", 0.0);
  v4 = objc_msgSend(v2, "layer");
  objc_msgSend(v4, "setCornerCurve:", kCACornerCurveContinuous);

  v5 = objc_msgSend(v2, "layer");
  objc_msgSend(v5, "setCornerRadius:", v3[58]);

  objc_msgSend(a1, "insertSubview:atIndex:", v2, 0);
  v6 = (void *)objc_opt_self(NSLayoutConstraint);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1507660);
  v8 = swift_allocObject(v7, 64, 7);
  *(_OWORD *)(v8 + 16) = xmmword_1063440;
  v9 = objc_msgSend(v2, "leadingAnchor");
  v10 = objc_msgSend(a1, "leadingAnchor");
  v11 = objc_msgSend(v9, "constraintEqualToAnchor:constant:", v10, -v3[59]);

  *(_QWORD *)(v8 + 32) = v11;
  v12 = objc_msgSend(v2, "trailingAnchor");
  v13 = objc_msgSend(a1, "trailingAnchor");
  v14 = objc_msgSend(v12, "constraintEqualToAnchor:constant:", v13, v3[59]);

  *(_QWORD *)(v8 + 40) = v14;
  v15 = objc_msgSend(v2, "topAnchor");
  v16 = objc_msgSend(a1, "topAnchor");
  v17 = objc_msgSend(v15, "constraintEqualToAnchor:constant:", v16, -v3[59]);

  *(_QWORD *)(v8 + 48) = v17;
  v18 = objc_msgSend(v2, "bottomAnchor");
  v19 = objc_msgSend(a1, "bottomAnchor");
  v20 = objc_msgSend(v18, "constraintEqualToAnchor:constant:", v19, v3[59]);

  *(_QWORD *)(v8 + 56) = v20;
  specialized Array._endMutation()(v21);
  sub_4E684(0, &qword_1508328, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v6, "activateConstraints:", isa, swift_bridgeObjectRelease().n128_f64[0]);

  return v2;
}

double sub_E0164C(char a1)
{
  char *v1;
  double result;
  id v3;
  char *v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  char *v9;
  id v10;

  if (objc_msgSend(v1, "isHighlighted") != (a1 & 1))
  {
    v3 = sub_E011F0();
    if (objc_msgSend(v1, "isHighlighted"))
    {
      v4 = &v1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_previousBlurRadius];
      *(_QWORD *)v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_blurRadius];
      v4[8] = 0;
      v5 = 0.0;
    }
    else
    {
      if ((v1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_previousBlurRadius + 8] & 1) != 0)
      {
LABEL_8:
        v6 = swift_allocObject(&unk_13C6B18, 32, 7);
        *(_QWORD *)(v6 + 16) = v3;
        *(_QWORD *)(v6 + 24) = v1;
        v7 = swift_allocObject(&unk_13C6B40, 32, 7);
        *(_QWORD *)(v7 + 16) = v1;
        *(_QWORD *)(v7 + 24) = v3;
        v8 = v3;
        v9 = v1;
        v10 = v8;
        _s11MusicCoreUI26SyncedLyricsViewControllerC5SpecsV35animateWithHighlightAnimationCurves11highlighted14fadeAnimations09transformP0ySb_yycyyctFZ_0((char)objc_msgSend(v9, "isHighlighted"), (uint64_t)sub_E03A00, v6, (uint64_t)sub_E03A08, v7);

        swift_release();
        *(_QWORD *)&result = swift_release().n128_u64[0];
        return result;
      }
      v5 = *(double *)&v1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_previousBlurRadius];
    }
    sub_E01F64(1, v5);
    goto LABEL_8;
  }
  return result;
}

void sub_E01790(void *a1, char *a2)
{
  unsigned int v4;
  double v5;
  double v6;
  id v7;

  v4 = objc_msgSend(a2, "isHighlighted");
  v5 = 0.0;
  v6 = 1.0;
  if (v4)
    v5 = 1.0;
  objc_msgSend(a1, "setAlpha:", v5);
  v7 = *(id *)&a2[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_containerView];
  if (objc_msgSend(a2, "isHighlighted"))
    v6 = *(double *)&a2[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 448];
  objc_msgSend(v7, "setAlpha:", v6);

}

id sub_E01840(char *a1, void *a2)
{
  uint64_t v4;
  double v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  double v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  uint64_t v17;

  if (objc_msgSend(a1, "isHighlighted"))
  {
    v5 = *(double *)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 400];
    v4 = *(_QWORD *)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 408];
    v6 = *(_QWORD *)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 416];
    v7 = *(double *)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 424];
    v8 = *(_QWORD *)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 432];
    v9 = *(_QWORD *)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 440];
  }
  else
  {
    v4 = 0;
    v5 = 1.0;
    v6 = 0;
    v7 = 1.0;
    v8 = 0;
    v9 = 0;
  }
  v10 = *(void **)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_containerView];
  v12 = v5;
  v13 = v4;
  v14 = v6;
  v15 = v7;
  v16 = v8;
  v17 = v9;
  objc_msgSend(v10, "setTransform:", &v12);
  v12 = v5;
  v13 = v4;
  v14 = v6;
  v15 = v7;
  v16 = v8;
  v17 = v9;
  return objc_msgSend(a2, "setTransform:", &v12);
}

double sub_E0192C(double a1, double a2)
{
  char *v2;
  void *v3;
  uint64_t v6;
  uint64_t ObjectType;
  id v8;
  double v9;

  v3 = *(void **)&v2[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
  if (!v3)
    return 0.0;
  v6 = *(_QWORD *)&v2[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView + 8];
  ObjectType = swift_getObjectType();
  v8 = v3;
  v9 = (*(double (**)(id, uint64_t, uint64_t, double, double))(v6 + 96))(objc_msgSend(v2, "isSelected"), ObjectType, v6, a1, a2);

  return v9;
}

void sub_E01A30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(__int128 *, char);
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  id v15;
  void *v16;
  _QWORD v17[4];

  v1 = v0;
  v2 = v0 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView;
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView);
  if (v3)
  {
    v4 = *(_QWORD *)(v2 + 8);
    ObjectType = swift_getObjectType();
    v17[0] = v3;
    (*(void (**)(uint64_t, uint64_t))(v4 + 80))(ObjectType, v4);
  }
  v6 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_isScrolling;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_isScrolling) = 1;
  v8 = sub_E01124((uint64_t)v17);
  v9 = *(void **)v7;
  if (*(_QWORD *)v7)
  {
    v10 = v7;
    v11 = *(unsigned __int8 *)(v1 + v6);
    v12 = *(_QWORD *)(v7 + 8);
    v13 = swift_getObjectType();
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 40);
    v15 = v9;
    v14(v11, v13, v12);
    v16 = *(void **)v10;
    *(_QWORD *)v10 = v9;
    *(_QWORD *)(v10 + 8) = v12;

  }
  v8((__int128 *)v17, 0);
  sub_E01B2C(0, 0);
}

void sub_E01B2C(char a1, void *a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)();
  void *v9;
  id v10;
  char *v11;
  void **v12;
  uint64_t v13;
  uint64_t ObjectType;
  void (*v15)(_QWORD, uint64_t, uint64_t, uint64_t);
  void **v16;
  char *Strong;
  void *v18;
  uint64_t v19;
  double v20;
  uint64_t (*v21)(uint64_t);
  double v22;
  void (*v23)();
  uint64_t v24;
  char *v25;
  void **v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(_QWORD, _QWORD, uint64_t, uint64_t);
  void **v30;
  void **aBlock;
  uint64_t v32;
  uint64_t (*v33)(uint64_t);
  double v34;
  void (*v35)();
  uint64_t v36;
  char v37[24];

  v5 = a1 & 1;
  if (objc_msgSend(v2, "isSelected") != (_DWORD)v5)
  {
    objc_msgSend(v2, "setSelected:", v5);
    if (objc_msgSend(v2, "isHighlighted"))
    {
      objc_msgSend(v2, "setHighlighted:", 0);
      objc_msgSend(v2, "cancelTrackingWithEvent:", 0);
      v6 = swift_allocObject(&unk_13C6A78, 24, 7);
      swift_unknownObjectWeakInit(v6 + 16);
      v7 = swift_allocObject(&unk_13C6AF0, 25, 7);
      *(_QWORD *)(v7 + 16) = v6;
      *(_BYTE *)(v7 + 24) = a1 & 1;
      if (a2)
      {
        v8 = sub_E03A10;
LABEL_7:
        v35 = v8;
        v36 = v7;
        aBlock = _NSConcreteStackBlock;
        v32 = 1107296256;
        v33 = sub_42D124;
        v34 = COERCE_DOUBLE(&block_descriptor_9_19);
        v9 = _Block_copy(&aBlock);
        swift_retain();
        v10 = a2;
        objc_msgSend(v10, "addAnimations:", v9, swift_release().n128_f64[0]);
        _Block_release(v9);
        v11 = &v2[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
        v12 = *(void ***)&v2[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
        if (v12)
        {
          v13 = *((_QWORD *)v11 + 1);
          ObjectType = swift_getObjectType();
          aBlock = v12;
          v15 = *(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v13 + 88);
          v16 = v12;
          v15(a1 & 1, 1, ObjectType, v13);

          swift_release();
          return;
        }

        goto LABEL_17;
      }
    }
    else
    {
      v6 = swift_allocObject(&unk_13C6A78, 24, 7);
      swift_unknownObjectWeakInit(v6 + 16);
      v7 = swift_allocObject(&unk_13C6AA0, 25, 7);
      *(_QWORD *)(v7 + 16) = v6;
      *(_BYTE *)(v7 + 24) = a1 & 1;
      if (a2)
      {
        v8 = sub_E038C4;
        goto LABEL_7;
      }
    }
    swift_beginAccess(v6 + 16, v37, 0, 0);
    Strong = (char *)swift_unknownObjectWeakLoadStrong(v6 + 16);
    if (Strong)
    {
      v18 = Strong;
      if ((a1 & 1) != 0)
      {
        v19 = 0;
        v20 = 1.0;
        v21 = 0;
        v22 = 1.0;
        v23 = 0;
        v24 = 0;
      }
      else
      {
        v20 = *(double *)&Strong[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 280];
        v19 = *(_QWORD *)&Strong[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 288];
        v21 = *(uint64_t (**)(uint64_t))&Strong[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 296];
        v22 = *(double *)&Strong[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 304];
        v23 = *(void (**)())&Strong[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 312];
        v24 = *(_QWORD *)&Strong[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 320];
      }
      aBlock = *(void ***)&v20;
      v32 = v19;
      v33 = v21;
      v34 = v22;
      v35 = v23;
      v36 = v24;
      objc_msgSend(Strong, "setTransform:", &aBlock, swift_retain().n128_f64[0]);
      swift_release();

    }
    v25 = &v2[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
    v26 = *(void ***)&v2[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
    if (v26)
    {
      v27 = *((_QWORD *)v25 + 1);
      v28 = swift_getObjectType();
      aBlock = v26;
      v29 = *(void (**)(_QWORD, _QWORD, uint64_t, uint64_t))(v27 + 88);
      v30 = v26;
      v29(a1 & 1, 0, v28, v27);

    }
LABEL_17:
    swift_release();
  }
}

void sub_E01E64(uint64_t a1, char a2)
{
  uint64_t v3;
  char *Strong;
  void *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD v9[3];
  _BYTE v10[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v10, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    if ((a2 & 1) != 0)
    {
      v6 = xmmword_10683C0;
      v7 = xmmword_10759D0;
      v8 = 0uLL;
    }
    else
    {
      v7 = *(_OWORD *)&Strong[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 280];
      v6 = *(_OWORD *)&Strong[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 296];
      v8 = *(_OWORD *)&Strong[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 312];
    }
    v9[0] = v7;
    v9[1] = v6;
    v9[2] = v8;
    objc_msgSend(Strong, "setTransform:", v9);

  }
}

void sub_E01F64(char a1, double a2)
{
  char *v2;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  NSString v10;
  id v11;
  id v12;
  double v13;
  Class isa;
  Class v15;
  id v16;
  double v17;
  float v18;
  double v19;
  float v20;
  double v21;
  float v22;
  double v23;
  float v24;
  id v25;
  double v26;
  double v27;
  double v28;
  double v29;
  id v30;
  id v31;
  void *v32;
  uint64_t v33;
  void *v34;
  char *v35;
  id v36;
  NSString v37;
  id v38;
  _QWORD aBlock[6];

  v5 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:controlPoint1:controlPoint2:animations:", 0, 0.12, 0.33, 0.0, 0.2, 0.1);
  v6 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_blurRadius;
  if (*(double *)&v2[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_blurRadius] == a2)
    goto LABEL_8;
  v38 = v5;
  v7 = objc_msgSend(v5, "timingParameters");
  if (!v7
    || (v8 = v7,
        v9 = objc_msgSend(v7, "cubicTimingParameters"),
        swift_unknownObjectRelease(v8),
        !v9))
  {
    v5 = v38;
LABEL_8:

    return;
  }
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend((id)objc_opt_self(CABasicAnimation), "animationWithKeyPath:", v10);

  v12 = v11;
  v13 = 0.0;
  if ((a1 & 1) != 0)
    objc_msgSend(v38, "duration", 0.0);
  objc_msgSend(v12, "setDuration:", v13);

  objc_msgSend(v12, "setFillMode:", kCAFillModeBoth);
  isa = CGFloat._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v12, "setFromValue:", isa);

  v15 = CGFloat._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v12, "setToValue:", v15);

  objc_msgSend(v12, "setRemovedOnCompletion:", 0);
  v16 = v12;
  objc_msgSend(v9, "controlPoint1");
  v18 = v17;
  objc_msgSend(v9, "controlPoint1");
  v20 = v19;
  objc_msgSend(v9, "controlPoint2");
  v22 = v21;
  objc_msgSend(v9, "controlPoint2");
  v24 = v23;
  v25 = objc_allocWithZone((Class)CAMediaTimingFunction);
  *(float *)&v26 = v18;
  *(float *)&v27 = v20;
  *(float *)&v28 = v22;
  *(float *)&v29 = v24;
  v30 = objc_msgSend(v25, "initWithControlPoints::::", v26, v27, v28, v29);
  objc_msgSend(v16, "setTimingFunction:", v30);

  v31 = objc_msgSend(v2, "layer");
  objc_msgSend(v31, "setShouldRasterize:", 0);

  v32 = (void *)objc_opt_self(CATransaction);
  objc_msgSend(v32, "begin");
  v33 = swift_allocObject(&unk_13C6A28, 24, 7);
  *(_QWORD *)(v33 + 16) = v2;
  aBlock[4] = sub_E03880;
  aBlock[5] = v33;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_42D124;
  aBlock[3] = &block_descriptor_348;
  v34 = _Block_copy(aBlock);
  v35 = v2;
  objc_msgSend(v32, "setCompletionBlock:", v34, swift_release().n128_f64[0]);
  _Block_release(v34);
  v36 = objc_msgSend(v35, "layer");
  v37 = String._bridgeToObjectiveC()();
  objc_msgSend(v36, "addAnimation:forKey:", v16, v37);

  objc_msgSend(v32, "commit");
  *(double *)&v2[v6] = a2;
}

void sub_E02364(void *a1)
{
  id v1;

  v1 = objc_msgSend(a1, "layer");
  objc_msgSend(v1, "setShouldRasterize:", 1);

}

uint64_t sub_E023A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  uint64_t (*v14)(void);
  void (*v15)(uint64_t *__return_ptr);
  void *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  id v35;
  NSString v36;
  uint64_t v37;
  Class isa;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  NSString *v47;
  NSString *v48;
  id v49;
  id v50;
  id v51;
  id v52;
  NSString v53;
  Class v54;
  id v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  char v66;
  id v67;
  id v68;
  Swift::Int v69;
  uint64_t v70;
  Swift::Int v71;
  uint64_t v72;
  double v73;
  double v74;
  char v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  char v97;
  uint64_t v98;
  Swift::Int v99;
  Swift::Int v100;
  uint64_t v101;
  id v102;
  void *v103;
  id v104;
  char *v105;
  char *v106;
  uint64_t v107;
  Swift::Int v108;
  void *v109;
  char *v110;
  void *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  Swift::Int v115;
  void *v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  void *v121;
  uint64_t v122;
  _QWORD *v123;
  char v124;
  char v125;
  id v126;
  char *v127;
  void *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  char v133;
  char v134;
  id v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  id v140;
  void (*v141)(char *, uint64_t);
  NSString *v142;
  id v143;
  __int128 v144;
  id v145;
  id v146;
  uint64_t v147;
  uint64_t v148;
  id v149;
  _QWORD v150[3];
  char v151;
  unsigned __int8 v152;
  uint64_t v153;
  uint64_t (*v154)(void);
  void *v155;
  uint64_t (*v156)(void);
  uint64_t v157;
  void (*v158)(uint64_t *__return_ptr);
  void *v159;
  uint64_t v160;
  _QWORD v161[5];
  uint64_t v162[8];
  uint64_t v163[8];
  uint64_t v164[8];
  uint64_t v165[6];
  char v166;
  _BYTE v167[24];
  uint64_t v168;
  char v169;
  _QWORD *v170;
  _QWORD v171[3];
  uint64_t v172;
  _QWORD *v173;
  _OWORD v174[34];

  v1 = v0;
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v3 = (char *)&v136 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for String.LocalizationValue(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v136 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v9 = (char *)&v136 - v8;
  sub_E00DBC();
  v10 = v0 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
  swift_beginAccess(v10, &v160, 0, 0);
  sub_55D1C(v10, (uint64_t)v161);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_15075B0);
  if (swift_dynamicCast(v150, v161, v11, &type metadata for Lyrics.TextLine, 0))
  {
    LODWORD(v146) = v152;
    v12 = v153;
    v13 = v154;
    v14 = v156;
    v15 = v158;
    v16 = v159;
    v148 = v157;
    v149 = v155;
    v17 = *(_QWORD *)(v156() + 16);
    v18 = swift_bridgeObjectRelease();
    v19 = v1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView;
    v20 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView);
    if (v17)
    {
      v147 = v12;
      v21 = v1;
      if (v20)
      {
        v22 = _s19SBS_TextContentViewCMa();
        if (swift_dynamicCastClass(v20, v22))
        {
          v145 = v20;
          v143 = (id)v13();
          *(_QWORD *)&v144 = v23;
          v24 = v14();
          v142 = *(NSString **)(v1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_alignment);
          v15(v163);
          v25 = sub_E03814((uint64_t)v163, (uint64_t)v174);
          v26 = *((_QWORD *)&v174[1] + 1);
          if (*((_QWORD *)&v174[1] + 1))
          {
            v141 = *(void (**)(char *, uint64_t))&v174[1];
            swift_bridgeObjectRetain();
            v25 = (uint64_t)sub_DE2440(v163);
          }
          else
          {
            v141 = 0;
          }
          v130 = v147;
          ((void (*)(uint64_t *__return_ptr, uint64_t))v15)(v164, v25);
          v131 = sub_E03814((uint64_t)v164, (uint64_t)v171);
          if (v172)
          {
            v132 = v173;
            swift_bridgeObjectRetain();
            v131 = (uint64_t)sub_DE2440(v164);
          }
          else
          {
            v132 = _swiftEmptyArrayStorage;
          }
          ((void (*)(uint64_t *__return_ptr, uint64_t))v15)(v165, v131);
          sub_E03814((uint64_t)v165, (uint64_t)v167);
          v133 = v168;
          if (v168)
          {
            v134 = v169;
            sub_DE2440(v165);
            v133 = v134 & 1;
          }
          sub_DFC354(v143, v144, v24, (uint64_t)v142, (char)v146, v130, (uint64_t)v141, v26, (uint64_t)v132, v133);
          swift_release();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_48;
        }
      }
      v145 = (id)((uint64_t (*)(__n128))v13)(v18);
      *(_QWORD *)&v144 = v85;
      v86 = v14();
      v142 = *(NSString **)(v1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_alignment);
      v87 = swift_bridgeObjectRetain();
      ((void (*)(uint64_t *__return_ptr, uint64_t))v15)(v162, v87);
      v88 = sub_E03814((uint64_t)v162, (uint64_t)v171);
      v89 = v172;
      if (v172)
      {
        v141 = (void (*)(char *, uint64_t))v171[2];
        swift_bridgeObjectRetain();
        v88 = (uint64_t)sub_DE2440(v162);
      }
      else
      {
        v141 = 0;
      }
      ((void (*)(uint64_t *__return_ptr, uint64_t))v15)(v163, v88);
      v122 = sub_E03814((uint64_t)v163, (uint64_t)v167);
      if (v168)
      {
        v123 = v170;
        swift_bridgeObjectRetain();
        v122 = (uint64_t)sub_DE2440(v163);
      }
      else
      {
        v123 = _swiftEmptyArrayStorage;
      }
      v143 = v16;
      ((void (*)(uint64_t *__return_ptr, uint64_t))v15)(v164, v122);
      sub_E03814((uint64_t)v164, (uint64_t)v165);
      if (v165[3])
      {
        v124 = v166;
        sub_DE2440(v164);
        v125 = v124 & 1;
      }
      else
      {
        v125 = 0;
      }
      memcpy(v174, (const void *)(v21 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs), 0x219uLL);
      v126 = objc_allocWithZone((Class)_s19SBS_TextContentViewCMa());
      sub_533134((uint64_t)v174);
      v127 = sub_DFC5A8((uint64_t)v145, v144, v86, (uint64_t)v142, (char)v146, v147, (uint64_t)v141, v89, (uint64_t)v123, v125, v174);
      v128 = *(void **)v19;
      *(_QWORD *)v19 = v127;
      *(_QWORD *)(v19 + 8) = &off_13C62F8;
      v129 = v127;
      sub_E00E68(v128);
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();

    }
    else
    {
      if (v20)
      {
        v90 = _s15TextContentViewCMa();
        v91 = swift_dynamicCastClass(v20, v90);
        if (v91)
        {
          v92 = v91;
          v146 = v20;
          v93 = v13();
          v94 = v92 + OBJC_IVAR___MusicTextContentView_content;
          v147 = v12;
          v96 = *(void **)(v92 + OBJC_IVAR___MusicTextContentView_content);
          v95 = *(_QWORD *)(v92 + OBJC_IVAR___MusicTextContentView_content + 8);
          v97 = *(_BYTE *)(v92 + OBJC_IVAR___MusicTextContentView_content + 16);
          *(_QWORD *)v94 = v93;
          *(_QWORD *)(v94 + 8) = v98;
          *(_BYTE *)(v94 + 16) = 0;
          swift_bridgeObjectRetain_n(v98, 2);
          sub_4E674(v96, v95, v97);
          sub_4E664(v96, v95, v97);
          v99 = sub_DD1744((uint64_t)&off_13C20F8);
          sub_E003A4(v99);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_4E664(v96, v95, v97);
          swift_bridgeObjectRelease();
          *(_QWORD *)(v92 + OBJC_IVAR___MusicTextContentView_alignment) = *(_QWORD *)(v1
                                                                                    + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_alignment);
          v100 = sub_DD1744((uint64_t)&off_13C2120);
          sub_E003A4(v100);

          swift_release();
          swift_release();
          swift_release();
LABEL_48:
          swift_bridgeObjectRelease();
LABEL_49:
          swift_bridgeObjectRelease();
          return __swift_destroy_boxed_opaque_existential_1(v161);
        }
      }
      v111 = (void *)((uint64_t (*)(__n128))v13)(v18);
      v113 = v112;
      memcpy(v174, (const void *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs), 0x219uLL);
      objc_allocWithZone((Class)_s15TextContentViewCMa());
      sub_533134((uint64_t)v174);
      v114 = sub_DFFF74(v111, v113, 0, (uint64_t)v174);
      *(_QWORD *)&v114[OBJC_IVAR___MusicTextContentView_alignment] = *(_QWORD *)(v1
                                                                               + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_alignment);
      v115 = sub_DD1744((uint64_t)&off_13C2148);
      sub_E003A4(v115);
      swift_bridgeObjectRelease();
      v116 = *(void **)v19;
      *(_QWORD *)v19 = v114;
      *(_QWORD *)(v19 + 8) = &off_13C6838;
      v117 = v114;
      sub_E00E68(v116);
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();

    }
  }
  else if (swift_dynamicCast(v150, v161, v11, &type metadata for Lyrics.SongwritersLine, 0))
  {
    v147 = v153;
    v148 = v1;
    v149 = objc_msgSend(objc_allocWithZone((Class)NSMutableAttributedString), "init");
    String.LocalizationValue.init(stringLiteral:)(0x206E657474697257, 0xEC000000203A7942);
    v146 = *(id *)(v5 + 16);
    ((void (*)(char *, char *, uint64_t))v146)(v7, v9, v4);
    if (qword_1505F70 != -1)
      swift_once(&qword_1505F70, sub_DB9248);
    v27 = qword_1583020;
    static Locale.current.getter((id)qword_1583020);
    v28 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v27, v3, 0, 0, 256);
    v137 = v29;
    v138 = v28;
    v141 = *(void (**)(char *, uint64_t))(v5 + 8);
    v141(v9, v4);
    v145 = (id)__swift_instantiateConcreteTypeFromMangledName(&qword_1507AA0);
    v30 = swift_allocObject(v145, 72, 7);
    v144 = xmmword_105B360;
    *(_OWORD *)(v30 + 16) = xmmword_105B360;
    *(_QWORD *)(v30 + 32) = NSFontAttributeName;
    v31 = (void *)objc_opt_self(UIFontMetrics);
    v143 = v31;
    v142 = NSFontAttributeName;
    v32 = objc_msgSend(v31, "defaultMetrics");
    v140 = (id)objc_opt_self(UIFont);
    v33 = objc_msgSend(v140, "systemFontOfSize:weight:", 22.0, UIFontWeightBold);
    v34 = objc_msgSend(v32, "scaledFontForFont:", v33);

    v139 = sub_4E684(0, (unint64_t *)&qword_1506538, UIFont_ptr);
    *(_QWORD *)(v30 + 64) = v139;
    *(_QWORD *)(v30 + 40) = v34;
    sub_DB9B94(v30);
    v35 = objc_allocWithZone((Class)NSAttributedString);
    v36 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    _s3__C3KeyVMa_2(0);
    v138 = v37;
    v137 = sub_DF4CE4();
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    v39 = objc_msgSend(v35, "initWithString:attributes:", v36, isa, swift_bridgeObjectRelease().n128_f64[0]);

    v136 = v39;
    objc_msgSend(v149, "appendAttributedString:", v39);
    *(_QWORD *)&v174[0] = v147;
    String.LocalizationValue.init(stringLiteral:)(8236, 0xE200000000000000);
    ((void (*)(char *, char *, uint64_t))v146)(v7, v9, v4);
    v40 = qword_1583020;
    static Locale.current.getter((id)qword_1583020);
    v41 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v40, v3, 0, 0, 256);
    v43 = v42;
    v141(v9, v4);
    v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508318);
    v45 = sub_E037C8();
    BidirectionalCollection<>.joined(separator:)(v41, v43, v44, v45);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v46 = swift_allocObject(v145, 72, 7);
    *(_OWORD *)(v46 + 16) = v144;
    v47 = v142;
    *(_QWORD *)(v46 + 32) = v142;
    v48 = v47;
    v49 = objc_msgSend(v143, "defaultMetrics");
    v50 = objc_msgSend(v140, "systemFontOfSize:weight:", 22.0, UIFontWeightMedium);
    v51 = objc_msgSend(v49, "scaledFontForFont:", v50);

    *(_QWORD *)(v46 + 64) = v139;
    *(_QWORD *)(v46 + 40) = v51;
    sub_DB9B94(v46);
    v52 = objc_allocWithZone((Class)NSAttributedString);
    v53 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v54 = Dictionary._bridgeToObjectiveC()().super.isa;
    v55 = objc_msgSend(v52, "initWithString:attributes:", v53, v54, swift_bridgeObjectRelease().n128_f64[0]);

    v56 = v149;
    objc_msgSend(v149, "appendAttributedString:", v55);
    v57 = v148;
    v58 = v148 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView;
    v59 = *(void **)(v148 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView);
    if (v59)
    {
      v60 = _s15TextContentViewCMa();
      v61 = swift_dynamicCastClass(v59, v60);
      if (v61)
      {
        v62 = v61;
        v63 = v61 + OBJC_IVAR___MusicTextContentView_content;
        v64 = *(void **)(v61 + OBJC_IVAR___MusicTextContentView_content);
        v65 = *(_QWORD *)(v61 + OBJC_IVAR___MusicTextContentView_content + 8);
        v66 = *(_BYTE *)(v61 + OBJC_IVAR___MusicTextContentView_content + 16);
        *(_QWORD *)v63 = v56;
        *(_QWORD *)(v63 + 8) = 0;
        *(_BYTE *)(v63 + 16) = 1;
        v67 = v56;
        v68 = v59;
        sub_4E674(v64, v65, v66);
        sub_4E664(v64, v65, v66);
        v69 = sub_DD1744((uint64_t)&off_13C2170);
        sub_E003A4(v69);

        swift_bridgeObjectRelease();
        sub_4E664(v64, v65, v66);
        v70 = 4;
        if (!*(_BYTE *)(v57 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 72))
          v70 = *(_QWORD *)(v57 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 64);
        *(_QWORD *)(v62 + OBJC_IVAR___MusicTextContentView_alignment) = v70;
        v71 = sub_DD1744((uint64_t)&off_13C2198);
        sub_E003A4(v71);

        goto LABEL_49;
      }
    }
    v101 = v57 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs;
    memcpy(v174, (const void *)(v57 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs), 0x219uLL);
    v102 = objc_allocWithZone((Class)_s15TextContentViewCMa());
    v103 = v56;
    v104 = v56;
    sub_533134((uint64_t)v174);
    v105 = sub_DFFF74(v103, 0, 1, (uint64_t)v174);
    v106 = v105;
    v107 = *(_QWORD *)(v101 + 64);
    if (*(_BYTE *)(v101 + 72))
      v107 = 4;
    *(_QWORD *)&v105[OBJC_IVAR___MusicTextContentView_alignment] = v107;
    v108 = sub_DD1744((uint64_t)&off_13C21C0);
    sub_E003A4(v108);
    swift_bridgeObjectRelease();
    v109 = *(void **)v58;
    *(_QWORD *)v58 = v106;
    *(_QWORD *)(v58 + 8) = &off_13C6838;
    v110 = v106;
    sub_E00E68(v109);

  }
  else if (swift_dynamicCast(v150, v161, v11, &type metadata for Lyrics.InstrumentalLine, 0))
  {
    v72 = v150[0];
    v74 = *(double *)&v150[1];
    v73 = *(double *)&v150[2];
    v75 = v151;
    v76 = v1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView;
    v77 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView);
    if (v77 && (v78 = _s23InstrumentalContentViewCMa(), (v79 = swift_dynamicCastClass(v77, v78)) != 0))
    {
      v80 = v79;
      v81 = v79 + OBJC_IVAR___MusicInstrumentalContentView_line;
      *(_QWORD *)v81 = v72;
      *(double *)(v81 + 8) = v74;
      *(double *)(v81 + 16) = v73;
      *(_BYTE *)(v81 + 24) = v75;
      *(_BYTE *)(v79 + OBJC_IVAR___MusicInstrumentalContentView_isSelected) = 0;
      v82 = v77;
      sub_DFDA08();
      v83 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_alignment);
      v84 = *(_QWORD *)(v80 + OBJC_IVAR___MusicInstrumentalContentView_alignment);
      *(_QWORD *)(v80 + OBJC_IVAR___MusicInstrumentalContentView_alignment) = v83;
      if (v83 != v84)
        sub_DFF474();
    }
    else
    {
      memcpy(v174, (const void *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs), 0x219uLL);
      objc_allocWithZone((Class)_s23InstrumentalContentViewCMa());
      sub_533134((uint64_t)v174);
      v118 = (char *)sub_DFD808(v72, v75, v174, v74, v73);
      v119 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_alignment);
      v120 = *(_QWORD *)&v118[OBJC_IVAR___MusicInstrumentalContentView_alignment];
      *(_QWORD *)&v118[OBJC_IVAR___MusicInstrumentalContentView_alignment] = v119;
      if (v119 != v120)
        sub_DFF474();
      v121 = *(void **)v76;
      *(_QWORD *)v76 = v118;
      *(_QWORD *)(v76 + 8) = &off_13C6460;
      v82 = v118;
      sub_E00E68(v121);

    }
  }
  return __swift_destroy_boxed_opaque_existential_1(v161);
}

id sub_E03308()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SyncedLyricsLineView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SyncedLyricsLineView()
{
  return objc_opt_self(_TtC11MusicCoreUI20SyncedLyricsLineView);
}

char *sub_E033EC(_QWORD *a1, uint64_t a2, const void *a3)
{
  _BYTE *v3;
  uint64_t v7;
  uint64_t v8;
  id v9;
  char *v10;
  char *v11;
  char *v12;
  id v13;
  NSString v14;
  id v15;
  char *v16;
  uint64_t v17;
  void *v18;
  char *v19;
  __int128 v20;
  __int128 v21;
  id v22;
  id v23;
  id v24;
  double v25;
  double v26;
  uint64_t v27;
  id v28;
  Class isa;
  id v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  Class v35;
  _OWORD v37[3];
  objc_super v38;

  v3[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_isScrolling] = 1;
  v7 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_alignment;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_alignment] = 0;
  v8 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_containerView;
  v9 = objc_allocWithZone((Class)UIView);
  v10 = v3;
  *(_QWORD *)&v3[v8] = objc_msgSend(v9, "init");
  v11 = &v10[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView____lazy_storage___backgroundView] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_blurRadius] = 0;
  v12 = &v10[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_previousBlurRadius];
  *(_QWORD *)v12 = 0;
  v12[8] = 1;
  sub_55D1C((uint64_t)a1, (uint64_t)&v10[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line]);
  *(_QWORD *)&v3[v7] = a2;
  memcpy(&v10[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs], a3, 0x219uLL);
  static String._unconditionallyBridgeFromObjectiveC(_:)(kCAFilterGaussianBlur);
  v13 = objc_allocWithZone((Class)CAFilter);
  sub_533134((uint64_t)a3);
  v14 = String._bridgeToObjectiveC()();
  v15 = objc_msgSend(v13, "initWithType:", v14, swift_bridgeObjectRelease().n128_f64[0]);

  *(_QWORD *)&v10[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_blurFilter] = v15;
  v38.receiver = v10;
  v38.super_class = (Class)type metadata accessor for SyncedLyricsLineView();
  v16 = (char *)objc_msgSendSuper2(&v38, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v17 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_containerView;
  v18 = *(void **)&v16[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_containerView];
  v19 = v16;
  objc_msgSend(v18, "setUserInteractionEnabled:", 0);
  objc_msgSend(*(id *)&v16[v17], "setAutoresizingMask:", 18);
  objc_msgSend(v19, "addSubview:", *(_QWORD *)&v16[v17]);
  objc_msgSend(v19, "setExclusiveTouch:", 1);
  v20 = *(_OWORD *)&v19[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 296];
  v21 = *(_OWORD *)&v19[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 312];
  v37[0] = *(_OWORD *)&v19[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 280];
  v37[1] = v20;
  v37[2] = v21;
  objc_msgSend(v19, "setTransform:", v37);
  v22 = objc_msgSend(v19, "layer");
  objc_msgSend(v22, "setShouldRasterize:", 1);

  v23 = objc_msgSend(v19, "layer");
  v24 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v24, "scale");
  v26 = v25;

  objc_msgSend(v23, "setRasterizationScale:", v26);
  v27 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_blurFilter;
  v28 = *(id *)&v19[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_blurFilter];
  isa = Int._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v28, "setValue:forKey:", isa, kCAFilterInputRadius);

  v30 = objc_msgSend(v19, "layer");
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_15070C0);
  v32 = swift_allocObject(v31, 64, 7);
  *(_OWORD *)(v32 + 16) = xmmword_105B360;
  v33 = *(void **)&v19[v27];
  *(_QWORD *)(v32 + 56) = sub_4E684(0, (unint64_t *)&qword_15070C8, CAFilter_ptr);
  *(_QWORD *)(v32 + 32) = v33;
  v34 = v33;
  v35 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v30, "setFilters:", v35, swift_bridgeObjectRelease().n128_f64[0]);

  sub_E023A8();
  sub_E01A30();

  __swift_destroy_boxed_opaque_existential_1(a1);
  return v19;
}

unint64_t sub_E037C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1508320;
  if (!qword_1508320)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1508318);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1508320);
  }
  return result;
}

uint64_t sub_E03814(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_15072C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_E0385C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_E03880()
{
  uint64_t v0;

  sub_E02364(*(void **)(v0 + 16));
}

uint64_t block_copy_helper_342(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double block_destroy_helper_342(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_E038A0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_E038C4()
{
  uint64_t v0;

  sub_E01E64(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_E038D0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

void sub_E038F4()
{
  _BYTE *v0;
  uint64_t v1;
  _QWORD *v2;
  char *v3;

  v0[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_isScrolling] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_alignment] = 0;
  v1 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_containerView;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v2 = &v0[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
  *v2 = 0;
  v2[1] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView____lazy_storage___backgroundView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_blurRadius] = 0;
  v3 = &v0[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_previousBlurRadius];
  *(_QWORD *)v3 = 0;
  v3[8] = 1;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000000010C4100, "MusicCoreUI/SyncedLyricsLineView.swift", 38, 2, 165, 0);
  __break(1u);
}

uint64_t sub_E039D4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_E03A00()
{
  uint64_t v0;

  sub_E01790(*(void **)(v0 + 16), *(char **)(v0 + 24));
}

id sub_E03A08()
{
  uint64_t v0;

  return sub_E01840(*(char **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t SegueResponseContext.completionHandler.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_retain(v0[1]);
  return v1;
}

double SyncedLyricsManager.Configuration.maxEndTimeOffset.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

uint64_t SyncedLyricsManager.Configuration.init(animationDuration:finishLineAnimationDuration:maxEndTimeOffset:maxSelectedLines:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>)
{
  *(_QWORD *)a4 = result;
  *(_QWORD *)(a4 + 8) = a2;
  *(double *)(a4 + 16) = a5;
  *(double *)(a4 + 24) = a6;
  *(_QWORD *)(a4 + 32) = a3;
  return result;
}

uint64_t SyncedLyricsManager.configuration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[24];

  swift_beginAccess(v1 + 24, v6, 0, 0);
  v3 = *(_QWORD *)(v1 + 32);
  v4 = *(_QWORD *)(v1 + 56);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v1 + 40);
  *(_QWORD *)(a1 + 32) = v4;
  return swift_retain(v3);
}

double SyncedLyricsManager.configuration.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  double result;
  _BYTE v6[24];

  swift_beginAccess(v1 + 24, v6, 1, 0);
  v3 = *(_QWORD *)(v1 + 32);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v4;
  *(_QWORD *)(v1 + 56) = *(_QWORD *)(a1 + 32);
  *(_QWORD *)&result = swift_release(v3).n128_u64[0];
  return result;
}

uint64_t SyncedLyricsManager.delegate.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 64, v2, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v0 + 64);
}

double SyncedLyricsManager.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;
  _BYTE v6[24];

  swift_beginAccess(v2 + 64, v6, 1, 0);
  *(_QWORD *)(v2 + 72) = a2;
  swift_unknownObjectWeakAssign(v2 + 64, a1);
  *(_QWORD *)&result = swift_unknownObjectRelease(a1).n128_u64[0];
  return result;
}

void (*SyncedLyricsManager.delegate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t Strong;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess(v1 + 64, v3, 33, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 64);
  v5 = *(_QWORD *)(v1 + 72);
  v3[3] = Strong;
  v3[4] = v5;
  return sub_E03C20;
}

void sub_E03C20(uint64_t a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD **)a1;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  *(_QWORD *)(v5 + 72) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign(v5 + 64, v4);
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease(v3[3]);
    swift_endAccess(v3);
  }
  else
  {
    swift_endAccess(v3);
    swift_unknownObjectRelease(v4);
  }
  free(v3);
}

uint64_t sub_E03C90(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[24];

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess(*a2 + 80, v6, 1, 0);
  v4 = *(_QWORD *)(v3 + 80);
  *(_QWORD *)(v3 + 80) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease(v4);
}

uint64_t SyncedLyricsManager.selectedLines.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 80, v2, 0, 0);
  return swift_bridgeObjectRetain();
}

uint64_t SyncedLyricsManager.isPlayingSpatial.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 88, v2, 0, 0);
  return *(unsigned __int8 *)(v0 + 88);
}

void SyncedLyricsManager.isPlayingSpatial.setter(char a1)
{
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v1 + 88, v3, 1, 0);
  *(_BYTE *)(v1 + 88) = a1;
}

uint64_t (*SyncedLyricsManager.isPlayingSpatial.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 88, a1, 33, 0);
  return j_j__swift_endAccess;
}

void SyncedLyricsManager.spatialOffset.getter()
{
  uint64_t v0;
  _BYTE v1[24];

  swift_beginAccess(v0 + 88, v1, 0, 0);
  if (*(_BYTE *)(v0 + 88) == 1)
    Lyrics.spatialOffset.getter();
}

uint64_t SyncedLyricsManager.adjustedElapsedTime.getter()
{
  uint64_t v0;
  double (*v1)(__n128);
  uint64_t v2;
  __n128 v3;
  double v4;
  double v5;
  double v6;
  uint64_t result;
  uint64_t v8;
  _BYTE v9[24];

  swift_beginAccess(v0 + 96, v9, 0, 0);
  v1 = *(double (**)(__n128))(v0 + 96);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 104);
    v3 = swift_retain();
    v4 = v1(v3);
    swift_beginAccess(v0 + 88, &v8, 0, 0);
    v5 = 0.0;
    if (*(_BYTE *)(v0 + 88) == 1)
    {
      Lyrics.spatialOffset.getter();
      v5 = v6;
    }
    sub_5C198((uint64_t)v1, v2);
    *(double *)&result = v4 - v5;
  }
  else
  {
    *(double *)&result = 0.0;
  }
  return result;
}

void sub_E03ED0()
{
  uint64_t v0;
  uint64_t v1;
  double (*v2)(__n128);
  uint64_t v3;
  __n128 v4;
  double v5;
  double v6;
  double v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t Strong;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[24];
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  _QWORD v42[3];
  uint64_t v43;
  uint64_t v44;
  _BYTE v45[24];
  _BYTE v46[24];

  v1 = v0;
  swift_beginAccess(v0 + 96, v46, 0, 0);
  v2 = *(double (**)(__n128))(v0 + 96);
  if (!v2)
    goto LABEL_27;
  v3 = *(_QWORD *)(v0 + 104);
  v4 = swift_retain();
  v5 = v2(v4);
  swift_beginAccess(v0 + 88, v45, 0, 0);
  v6 = 0.0;
  if (*(_BYTE *)(v0 + 88) == 1)
  {
    Lyrics.spatialOffset.getter();
    v6 = v7;
  }
  sub_5C198((uint64_t)v2, v3);
  v8 = v5 - v6;
  v9 = *(_QWORD *)(v0 + 16);
  Lyrics.line(before:useOriginalLines:)(0, (uint64_t)&v36, v8 + 0.1);
  if (!*((_QWORD *)&v37 + 1))
  {
    v13 = *(_QWORD *)(v9 + 40);
    if (*(_QWORD *)(v13 + 16))
    {
      sub_55D1C(v13 + 32, (uint64_t)&v39);
    }
    else
    {
      v41 = 0;
      v39 = 0u;
      v40 = 0u;
    }
    sub_E055C8((uint64_t)&v36);
    if (*((_QWORD *)&v40 + 1))
      goto LABEL_6;
    goto LABEL_26;
  }
  sub_8B15C(&v36, (uint64_t)&v39);
  if (!*((_QWORD *)&v40 + 1))
  {
LABEL_26:
    sub_E055C8((uint64_t)&v39);
LABEL_27:
    SyncedLyricsManager.update()();
    return;
  }
LABEL_6:
  sub_8B15C(&v39, (uint64_t)v42);
  v11 = v43;
  v10 = v44;
  __swift_project_boxed_opaque_existential_1(v42, v43);
  v12 = (*(double (**)(uint64_t))(*(_QWORD *)(v10 + 8) + 8))(v11);
  sub_55D1C((uint64_t)v42, (uint64_t)&v39);
  if (v12 >= v8)
  {
    v15 = *((_QWORD *)&v40 + 1);
    v14 = v41;
    __swift_project_boxed_opaque_existential_1(&v39, *((uint64_t *)&v40 + 1));
    v16 = vabdd_f64(v8, (*(double (**)(uint64_t))(*(_QWORD *)(v14 + 8) + 8))(v15));
    __swift_destroy_boxed_opaque_existential_1(&v39);
    if (v16 > 0.1)
    {
      sub_55D1C((uint64_t)v42, (uint64_t)&v36);
      swift_beginAccess(v1 + 112, v35, 33, 0);
      sub_E05770((uint64_t)&v36, v1 + 112);
      swift_endAccess(v35);
      sub_E055C8((uint64_t)&v36);
      swift_beginAccess(v1 + 80, &v36, 1, 0);
      *(_QWORD *)(v1 + 80) = _swiftEmptyArrayStorage;
      swift_bridgeObjectRelease();
      swift_beginAccess(v1 + 64, v35, 0, 0);
      Strong = swift_unknownObjectWeakLoadStrong(v1 + 64);
      if (Strong)
      {
        v18 = Strong;
        v19 = *(_QWORD *)(v1 + 72);
        ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v1, ObjectType, v19);
        swift_unknownObjectRelease(v18);
      }
      v21 = swift_unknownObjectWeakLoadStrong(v1 + 64);
      if (!v21)
        goto LABEL_23;
      v22 = v21;
      v23 = *(_QWORD *)(v1 + 72);
      v24 = swift_getObjectType();
      (*(void (**)(uint64_t, _QWORD *, _QWORD, uint64_t, uint64_t, double))(v23 + 16))(v1, v42, 0, v24, v23, v8);
      goto LABEL_22;
    }
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1(&v39);
  }
  v25 = v43;
  v26 = v44;
  __swift_project_boxed_opaque_existential_1(v42, v43);
  v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 16))(v25, v26);
  v28 = v27 + 1;
  if (__OFADD__(v27, 1))
  {
    __break(1u);
  }
  else
  {
    v29 = *(_QWORD *)(v9 + 40);
    if (v28 >= *(_QWORD *)(v29 + 16))
    {
      v38 = 0;
      v36 = 0u;
      v37 = 0u;
      goto LABEL_20;
    }
    if ((v28 & 0x8000000000000000) == 0)
    {
      sub_55D1C(v29 + 40 * v28 + 32, (uint64_t)&v36);
LABEL_20:
      swift_beginAccess(v1 + 112, v35, 33, 0);
      sub_E05770((uint64_t)&v36, v1 + 112);
      swift_endAccess(v35);
      sub_E055C8((uint64_t)&v36);
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_15075A8);
      v31 = swift_allocObject(v30, 72, 7);
      *(_OWORD *)(v31 + 16) = xmmword_105B360;
      sub_55D1C((uint64_t)v42, v31 + 32);
      swift_beginAccess(v1 + 80, &v36, 1, 0);
      *(_QWORD *)(v1 + 80) = v31;
      swift_bridgeObjectRelease();
      swift_beginAccess(v1 + 64, v35, 0, 0);
      v32 = swift_unknownObjectWeakLoadStrong(v1 + 64);
      if (!v32)
      {
LABEL_23:
        __swift_destroy_boxed_opaque_existential_1(v42);
        return;
      }
      v22 = v32;
      v33 = *(_QWORD *)(v1 + 72);
      v34 = swift_getObjectType();
      (*(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t, double))(v33 + 16))(v1, v42, 1, v34, v33, v8);
LABEL_22:
      swift_unknownObjectRelease(v22);
      goto LABEL_23;
    }
  }
  __break(1u);
}

uint64_t SyncedLyricsManager.elapsedTimeProvider.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[24];

  swift_beginAccess(v2 + 96, v8, 1, 0);
  v5 = *(_QWORD *)(v2 + 96);
  v6 = *(_QWORD *)(v2 + 104);
  *(_QWORD *)(v2 + 96) = a1;
  *(_QWORD *)(v2 + 104) = a2;
  sub_A9DEC(a1, a2);
  sub_5C198(v5, v6);
  sub_E03ED0();
  return sub_5C198(a1, a2);
}

void (*SyncedLyricsManager.elapsedTimeProvider.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + 96, a1, 33, 0);
  return sub_E04390;
}

void sub_E04390(uint64_t a1, char a2)
{
  swift_endAccess(a1);
  if ((a2 & 1) == 0)
    sub_E03ED0();
}

uint64_t SyncedLyricsManager.__allocating_init(lyrics:configuration:delegate:isPlayingSpatial:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;

  v11 = swift_allocObject(v5, 152, 7);
  ObjectType = swift_getObjectType();
  v13 = sub_E054C0(a1, a2, a3, a5, v11, ObjectType, a4);
  swift_unknownObjectRelease(a3);
  return v13;
}

uint64_t SyncedLyricsManager.init(lyrics:configuration:delegate:isPlayingSpatial:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v12;

  ObjectType = swift_getObjectType();
  v12 = sub_E054C0(a1, a2, a3, a5, v5, ObjectType, a4);
  swift_unknownObjectRelease(a3);
  return v12;
}

Swift::Void __swiftcall SyncedLyricsManager.update()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double (*v3)(__n128);
  uint64_t v4;
  __n128 v5;
  double v6;
  double v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  _UNKNOWN **v15;
  ValueMetadata *v16;
  double v17;
  double (*v18)(double);
  double v19;
  double (*v20)(double);
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t Strong;
  uint64_t v29;
  uint64_t v30;
  uint64_t ObjectType;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  double v47;
  uint64_t v48;
  uint64_t v49;
  double v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  double v59;
  uint64_t v60;
  _BYTE v61[24];
  __int128 v62;
  ValueMetadata *v63;
  _UNKNOWN **v64;
  double v65;
  _BYTE v66[40];
  _QWORD v67[3];
  uint64_t v68;
  uint64_t v69;
  _BYTE v70[24];
  _BYTE v71[24];
  _BYTE v72[24];
  _BYTE v73[24];
  _BYTE v74[24];
  _BYTE v75[24];
  _QWORD v76[3];
  uint64_t v77;
  uint64_t v78;

  v1 = v0;
  sub_E05184();
  v2 = v0 + 112;
  swift_beginAccess(v2, v75, 0, 0);
  sub_E05580(v2, (uint64_t)&v62);
  if (v63)
  {
    sub_8B15C(&v62, (uint64_t)v76);
    swift_beginAccess(v1 + 96, v74, 0, 0);
    v3 = *(double (**)(__n128))(v1 + 96);
    if (v3)
    {
      v4 = *(_QWORD *)(v1 + 104);
      v5 = swift_retain();
      v6 = v3(v5);
      swift_beginAccess(v1 + 88, v73, 0, 0);
      v7 = 0.0;
      if (*(_BYTE *)(v1 + 88) == 1)
      {
        Lyrics.spatialOffset.getter();
        v7 = v8;
      }
      sub_5C198((uint64_t)v3, v4);
      v9 = v1 + 80;
      swift_beginAccess(v1 + 80, v72, 0, 0);
      v10 = *(_QWORD *)(v1 + 80);
      v11 = *(_QWORD *)(v10 + 16);
      if (v11)
      {
        sub_55D1C(v10 + 40 * v11 - 8, (uint64_t)&v62);
        v13 = v77;
        v12 = v78;
        __swift_project_boxed_opaque_existential_1(v76, v77);
        v14 = (*(double (**)(uint64_t))(*(_QWORD *)(v12 + 8) + 8))(v13);
        v16 = v63;
        v15 = v64;
        __swift_project_boxed_opaque_existential_1(&v62, (uint64_t)v63);
        v17 = v14 - (*((double (**)(ValueMetadata *))v15[1] + 2))(v16);
        swift_beginAccess(v1 + 24, v71, 0, 0);
        v18 = *(double (**)(double))(v1 + 24);
        swift_retain();
        v19 = v18(v17);
        swift_release();
        __swift_destroy_boxed_opaque_existential_1(&v62);
      }
      else
      {
        swift_beginAccess(v1 + 24, v71, 0, 0);
        v20 = *(double (**)(double))(v1 + 24);
        swift_retain();
        v19 = v20(0.0);
        swift_release();
      }
      v21 = v6 - v7;
      v22 = *(_QWORD *)(*(_QWORD *)v9 + 16);
      if (v22)
      {
        sub_55D1C(*(_QWORD *)v9 + 40 * v22 - 8, (uint64_t)&v62);
        v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_15075B0);
        if ((swift_dynamicCast(v67, &v62, v23, &type metadata for Lyrics.InstrumentalLine, 6) & 1) != 0)
        {
          v24 = v67[0];
          v25 = v67[1];
          v26 = v67[2];
          v27 = v68;
          swift_beginAccess(v1 + 64, &v60, 0, 0);
          Strong = swift_unknownObjectWeakLoadStrong(v1 + 64);
          if (Strong)
          {
            v29 = Strong;
            v30 = *(_QWORD *)(v1 + 72);
            ObjectType = swift_getObjectType();
            v63 = &type metadata for Lyrics.InstrumentalLine;
            v64 = &protocol witness table for Lyrics.InstrumentalLine;
            v32 = swift_allocObject(&unk_13C6B68, 48, 7);
            *(_QWORD *)&v62 = v32;
            *(_QWORD *)(v32 + 16) = v24;
            *(_QWORD *)(v32 + 24) = v25;
            *(_QWORD *)(v32 + 32) = v26;
            *(_BYTE *)(v32 + 40) = v27;
            (*(void (**)(uint64_t, __int128 *, uint64_t, uint64_t, double))(v30 + 24))(v1, &v62, ObjectType, v30, v21);
            swift_unknownObjectRelease(v29);
            __swift_destroy_boxed_opaque_existential_1(&v62);
          }
        }
      }
      swift_beginAccess(v1 + 24, v70, 0, 0);
      if (sub_E04B1C(v76, v1, v21 + *(double *)(v1 + 40), v19) == 1)
      {
        v33 = *(_QWORD *)(*(_QWORD *)v9 + 16);
        if (v33)
        {
          v34 = *(_QWORD *)v9 + 32;
          swift_bridgeObjectRetain();
          swift_beginAccess(v1 + 64, v61, 0, 0);
          do
          {
            sub_55D1C(v34, (uint64_t)&v62);
            v35 = swift_unknownObjectWeakLoadStrong(v1 + 64);
            if (v35)
            {
              v36 = v35;
              v37 = *(_QWORD *)(v1 + 72);
              v38 = swift_getObjectType();
              (*(void (**)(uint64_t, __int128 *, uint64_t, uint64_t))(v37 + 40))(v1, &v62, v38, v37);
              swift_unknownObjectRelease(v36);
            }
            __swift_destroy_boxed_opaque_existential_1(&v62);
            v34 += 40;
            --v33;
          }
          while (v33);
          swift_bridgeObjectRelease();
        }
      }
      v40 = v77;
      v39 = v78;
      __swift_project_boxed_opaque_existential_1(v76, v77);
      if ((*(double (**)(uint64_t))(*(_QWORD *)(v39 + 8) + 8))(v40) <= v21 + v19)
      {
        v41 = *(_QWORD *)(*(_QWORD *)v9 + 16);
        if (v41)
        {
          sub_55D1C(*(_QWORD *)v9 + 40 * v41 - 8, (uint64_t)v67);
          v43 = v77;
          v42 = v78;
          __swift_project_boxed_opaque_existential_1(v76, v77);
          v44 = (*(double (**)(uint64_t))(*(_QWORD *)(v42 + 8) + 8))(v43);
          v46 = v68;
          v45 = v69;
          __swift_project_boxed_opaque_existential_1(v67, v68);
          v47 = (*(double (**)(uint64_t))(*(_QWORD *)(v45 + 8) + 16))(v46);
          v49 = v68;
          v48 = v69;
          __swift_project_boxed_opaque_existential_1(v67, v68);
          v50 = (*(double (**)(uint64_t))(*(_QWORD *)(v48 + 8) + 16))(v49) - *(double *)(v1 + 48);
          sub_55D1C((uint64_t)v76, (uint64_t)&v62);
          v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_15075B0);
          if (swift_dynamicCast(v66, &v62, v51, &type metadata for Lyrics.InstrumentalLine, 6))
            goto LABEL_37;
          sub_55D1C((uint64_t)v67, (uint64_t)&v62);
          if (swift_dynamicCast(v66, &v62, v51, &type metadata for Lyrics.InstrumentalLine, 6))
            goto LABEL_37;
          if (*(_QWORD *)(*(_QWORD *)(v1 + 80) + 16) >= *(_QWORD *)(v1 + 56))
            goto LABEL_37;
          v52 = v77;
          v53 = v78;
          __swift_project_boxed_opaque_existential_1(v76, v77);
          v54 = (*(uint64_t (**)(uint64_t, uint64_t))(v53 + 16))(v52, v53);
          v55 = v68;
          v56 = v69;
          __swift_project_boxed_opaque_existential_1(v67, v68);
          if ((*(uint64_t (**)(uint64_t, uint64_t))(v56 + 16))(v55, v56) >= v54
            || (v58 = v77,
                v57 = v78,
                __swift_project_boxed_opaque_existential_1(v76, v77),
                (*(double (**)(uint64_t))(*(_QWORD *)(v57 + 8) + 8))(v58) >= v21))
          {
LABEL_37:
            if (v50 < v21
              || (sub_55D1C((uint64_t)v67, (uint64_t)v66),
                  (swift_dynamicCast(&v62, v66, v51, &type metadata for Lyrics.TextLine, 6) & 1) != 0)
              && (v59 = v65,
                  swift_release(),
                  swift_release(),
                  swift_release(),
                  swift_bridgeObjectRelease(),
                  v59 - *(double *)(v1 + 48) < v21))
            {
              sub_E04DA8(v76, COERCE__INT64(v44 - v47), 0, v21);
            }
          }
          else
          {
            sub_E04F54(v76);
          }
          __swift_destroy_boxed_opaque_existential_1(v67);
        }
        else
        {
          sub_E04DA8(v76, 0, 1, v21);
        }
      }
    }
    __swift_destroy_boxed_opaque_existential_1(v76);
  }
  else
  {
    sub_E055C8((uint64_t)&v62);
  }
}

uint64_t sub_E04B1C(_QWORD *a1, uint64_t a2, double a3, double a4)
{
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v25;
  _BYTE v26[32];
  double v27;
  _BYTE v28[40];
  _BYTE v29[24];
  _BYTE v30[24];
  _QWORD v31[3];
  uint64_t v32;
  uint64_t v33;

  v7 = a3 + a4;
  v9 = a1[3];
  v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  if ((*(double (**)(uint64_t))(*(_QWORD *)(v8 + 8) + 8))(v9) <= v7)
  {
    swift_beginAccess(a2 + 80, v30, 0, 0);
    v10 = *(_QWORD *)(a2 + 80);
    v11 = *(_QWORD *)(v10 + 16);
    if (v11)
    {
      sub_55D1C(v10 + 40 * v11 - 8, (uint64_t)v31);
      v13 = v32;
      v12 = v33;
      __swift_project_boxed_opaque_existential_1(v31, v32);
      v14 = (*(double (**)(uint64_t))(*(_QWORD *)(v12 + 8) + 16))(v13);
      swift_beginAccess(a2 + 24, v29, 0, 0);
      v15 = v14 - *(double *)(a2 + 48);
      sub_55D1C((uint64_t)a1, (uint64_t)v26);
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_15075B0);
      if ((swift_dynamicCast(v28, v26, v16, &type metadata for Lyrics.InstrumentalLine, 6) & 1) == 0)
      {
        sub_55D1C((uint64_t)v31, (uint64_t)v26);
        if (!swift_dynamicCast(v28, v26, v16, &type metadata for Lyrics.InstrumentalLine, 6)
          && *(_QWORD *)(*(_QWORD *)(a2 + 80) + 16) < *(_QWORD *)(a2 + 56))
        {
          v17 = a1[3];
          v18 = a1[4];
          __swift_project_boxed_opaque_existential_1(a1, v17);
          v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 16))(v17, v18);
          v20 = v32;
          v21 = v33;
          __swift_project_boxed_opaque_existential_1(v31, v32);
          if ((*(uint64_t (**)(uint64_t, uint64_t))(v21 + 16))(v20, v21) < v19)
          {
            v23 = a1[3];
            v22 = a1[4];
            __swift_project_boxed_opaque_existential_1(a1, v23);
            if ((*(double (**)(uint64_t))(*(_QWORD *)(v22 + 8) + 8))(v23) < a3)
            {
              __swift_destroy_boxed_opaque_existential_1(v31);
              return 2;
            }
          }
        }
      }
      if (v15 < a3
        || (sub_55D1C((uint64_t)v31, (uint64_t)v28),
            (swift_dynamicCast(v26, v28, v16, &type metadata for Lyrics.TextLine, 6) & 1) != 0)
        && (v25 = v27,
            swift_release(),
            swift_release(),
            swift_release(),
            swift_bridgeObjectRelease(),
            v25 - *(double *)(a2 + 48) < a3))
      {
        __swift_destroy_boxed_opaque_existential_1(v31);
        return 1;
      }
      __swift_destroy_boxed_opaque_existential_1(v31);
    }
  }
  return 0;
}

void sub_E04DA8(_QWORD *a1, uint64_t a2, char a3, double a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t Strong;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  _BYTE v22[24];
  _OWORD v23[2];
  uint64_t v24;
  _BYTE v25[24];

  v5 = v4;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_15075A8);
  v11 = swift_allocObject(v10, 72, 7);
  *(_OWORD *)(v11 + 16) = xmmword_105B360;
  sub_55D1C((uint64_t)a1, v11 + 32);
  swift_beginAccess(v5 + 10, v25, 1, 0);
  v5[10] = v11;
  swift_bridgeObjectRelease();
  v12 = v5[2];
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 16))(v13, v14);
  v16 = v15 + 1;
  if (__OFADD__(v15, 1))
  {
    __break(1u);
    goto LABEL_10;
  }
  v17 = *(_QWORD *)(v12 + 40);
  if (v16 < *(_QWORD *)(v17 + 16))
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      sub_55D1C(v17 + 40 * v16 + 32, (uint64_t)v23);
      goto LABEL_6;
    }
LABEL_10:
    __break(1u);
    return;
  }
  v24 = 0;
  memset(v23, 0, sizeof(v23));
LABEL_6:
  swift_beginAccess(v5 + 14, v22, 33, 0);
  sub_E05770((uint64_t)v23, (uint64_t)(v5 + 14));
  swift_endAccess(v22);
  sub_E055C8((uint64_t)v23);
  swift_beginAccess(v5 + 8, v23, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5 + 8);
  if (Strong)
  {
    v19 = Strong;
    v20 = v5[9];
    ObjectType = swift_getObjectType();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t, _QWORD, uint64_t, uint64_t, double))(v20 + 8))(v5, a1, a2, a3 & 1, ObjectType, v20, a4);
    swift_unknownObjectRelease(v19);
  }
}

void sub_E04F54(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t *v4;
  _QWORD *v5;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t Strong;
  uint64_t v22;
  uint64_t v23;
  uint64_t ObjectType;
  _BYTE v25[24];
  _BYTE v26[24];
  __int128 v27;
  __int128 v28;
  uint64_t v29;

  v2 = v1;
  sub_55D1C((uint64_t)a1, (uint64_t)&v27);
  v4 = v1 + 10;
  swift_beginAccess(v4, v26, 1, 0);
  v5 = (_QWORD *)v2[10];
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v5);
  v2[10] = v5;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v5 = sub_DDE03C(0, v5[2] + 1, 1, v5);
    *v4 = (uint64_t)v5;
  }
  v8 = v5[2];
  v7 = v5[3];
  if (v8 >= v7 >> 1)
    *v4 = (uint64_t)sub_DDE03C((_QWORD *)(v7 > 1), v8 + 1, 1, v5);
  v9 = *((_QWORD *)&v28 + 1);
  v10 = v29;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v27, *((uint64_t *)&v28 + 1));
  v11 = __chkstk_darwin();
  v13 = &v25[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, double))(v14 + 16))(v13, v11);
  sub_799EB4(v8, (uint64_t)v13, v4, v9, v10);
  __swift_destroy_boxed_opaque_existential_1(&v27);
  v15 = v2[2];
  v16 = a1[3];
  v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 16))(v16, v17);
  v19 = v18 + 1;
  if (__OFADD__(v18, 1))
  {
    __break(1u);
    goto LABEL_14;
  }
  v20 = *(_QWORD *)(v15 + 40);
  if (v19 < *(_QWORD *)(v20 + 16))
  {
    if ((v19 & 0x8000000000000000) == 0)
    {
      sub_55D1C(v20 + 40 * v19 + 32, (uint64_t)&v27);
      goto LABEL_10;
    }
LABEL_14:
    __break(1u);
    return;
  }
  v29 = 0;
  v27 = 0u;
  v28 = 0u;
LABEL_10:
  swift_beginAccess(v2 + 14, v25, 33, 0);
  sub_E05770((uint64_t)&v27, (uint64_t)(v2 + 14));
  swift_endAccess(v25);
  sub_E055C8((uint64_t)&v27);
  swift_beginAccess(v2 + 8, &v27, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2 + 8);
  if (Strong)
  {
    v22 = Strong;
    v23 = v2[9];
    ObjectType = swift_getObjectType();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t, uint64_t))(v23 + 32))(v2, a1, ObjectType, v23);
    swift_unknownObjectRelease(v22);
  }
}

void sub_E05184()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double (*v4)(__n128);
  uint64_t v5;
  __n128 v6;
  double v7;
  double v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  __int128 *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v25[24];
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  _BYTE v29[24];
  _BYTE v30[24];
  _BYTE v31[24];
  __int128 v32;
  __int128 v33;
  uint64_t v34;

  v1 = v0;
  v2 = v0 + 112;
  swift_beginAccess(v0 + 112, v31, 0, 0);
  sub_E05580(v0 + 112, (uint64_t)&v32);
  v3 = *((_QWORD *)&v33 + 1);
  sub_E055C8((uint64_t)&v32);
  if (!v3)
  {
    swift_beginAccess(v1 + 96, v30, 0, 0);
    v4 = *(double (**)(__n128))(v1 + 96);
    if (v4)
    {
      v5 = *(_QWORD *)(v1 + 104);
      v6 = swift_retain();
      v7 = v4(v6);
      swift_beginAccess(v1 + 88, v29, 0, 0);
      v8 = 0.0;
      if (*(_BYTE *)(v1 + 88) == 1)
      {
        Lyrics.spatialOffset.getter();
        v8 = v9;
      }
      sub_5C198((uint64_t)v4, v5);
      v10 = *(_QWORD *)(v1 + 16);
      v11 = *(_QWORD *)(v10 + 40);
      if (!*(_QWORD *)(v11 + 16))
      {
        __break(1u);
        goto LABEL_24;
      }
      v12 = v7 - v8;
      sub_55D1C(v11 + 32, (uint64_t)&v32);
      v14 = *((_QWORD *)&v33 + 1);
      v13 = v34;
      __swift_project_boxed_opaque_existential_1(&v32, *((uint64_t *)&v33 + 1));
      v15 = (*(double (**)(uint64_t))(*(_QWORD *)(v13 + 8) + 8))(v14);
      __swift_destroy_boxed_opaque_existential_1(&v32);
      if (v12 > v15)
      {
        Lyrics.line(before:useOriginalLines:)(0, (uint64_t)&v26, v12);
        if (!*((_QWORD *)&v27 + 1))
        {
          sub_E055C8((uint64_t)&v26);
          return;
        }
        sub_8B15C(&v26, (uint64_t)&v32);
        v17 = *((_QWORD *)&v33 + 1);
        v16 = v34;
        __swift_project_boxed_opaque_existential_1(&v32, *((uint64_t *)&v33 + 1));
        if (v12 < (*(double (**)(uint64_t))(*(_QWORD *)(v16 + 8) + 16))(v17))
        {
          v18 = &v32;
LABEL_20:
          sub_55D1C((uint64_t)v18, (uint64_t)&v26);
LABEL_22:
          swift_beginAccess(v2, v25, 33, 0);
          sub_E05770((uint64_t)&v26, v2);
          swift_endAccess(v25);
          sub_E055C8((uint64_t)&v26);
          __swift_destroy_boxed_opaque_existential_1(&v32);
          return;
        }
        v20 = *((_QWORD *)&v33 + 1);
        v21 = v34;
        __swift_project_boxed_opaque_existential_1(&v32, *((uint64_t *)&v33 + 1));
        v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 16))(v20, v21);
        v23 = v22 + 1;
        if (!__OFADD__(v22, 1))
        {
          v24 = *(_QWORD *)(v10 + 40);
          if (v23 >= *(_QWORD *)(v24 + 16))
          {
            v28 = 0;
            v26 = 0u;
            v27 = 0u;
            goto LABEL_22;
          }
          if ((v23 & 0x8000000000000000) == 0)
          {
            v18 = (__int128 *)(v24 + 40 * v23 + 32);
            goto LABEL_20;
          }
          goto LABEL_25;
        }
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
        return;
      }
      v19 = *(_QWORD *)(v10 + 40);
      if (*(_QWORD *)(v19 + 16))
      {
        sub_55D1C(v19 + 32, (uint64_t)&v32);
      }
      else
      {
        v34 = 0;
        v32 = 0u;
        v33 = 0u;
      }
      swift_beginAccess(v2, &v26, 33, 0);
      sub_E05770((uint64_t)&v32, v2);
      swift_endAccess(&v26);
      sub_E055C8((uint64_t)&v32);
    }
  }
}

uint64_t SyncedLyricsManager.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  sub_64880(v0 + 64);
  swift_bridgeObjectRelease();
  sub_5C198(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
  sub_E055C8(v0 + 112);
  return v0;
}

double SyncedLyricsManager.__deallocating_deinit()
{
  uint64_t v0;
  double result;

  swift_release();
  swift_release();
  sub_64880(v0 + 64);
  swift_bridgeObjectRelease();
  sub_5C198(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
  sub_E055C8(v0 + 112);
  *(_QWORD *)&result = swift_deallocClassInstance(v0, 152, 7).n128_u64[0];
  return result;
}

uint64_t sub_E054C0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  _BYTE v17[24];

  v13 = a5 + 64;
  *(_QWORD *)(a5 + 72) = 0;
  v14 = swift_unknownObjectWeakInit(a5 + 64, 0);
  *(_QWORD *)(a5 + 80) = _swiftEmptyArrayStorage;
  *(_OWORD *)(a5 + 96) = 0u;
  *(_OWORD *)(a5 + 112) = 0u;
  *(_OWORD *)(a5 + 128) = 0u;
  *(_QWORD *)(a5 + 144) = 0;
  *(_QWORD *)(a5 + 16) = a1;
  v15 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a5 + 24) = *(_OWORD *)a2;
  *(_OWORD *)(a5 + 40) = v15;
  *(_QWORD *)(a5 + 56) = *(_QWORD *)(a2 + 32);
  swift_beginAccess(v14, v17, 1, 0);
  *(_QWORD *)(a5 + 72) = a7;
  swift_unknownObjectWeakAssign(v13, a3);
  *(_BYTE *)(a5 + 88) = a4;
  return a5;
}

uint64_t sub_E05580(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508630);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_E055C8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508630);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_E05608()
{
  uint64_t v0;

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_E05618@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[24];

  v3 = *a1;
  swift_beginAccess(*a1 + 80, v5, 0, 0);
  *a2 = *(_QWORD *)(v3 + 80);
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for SyncedLyricsManager()
{
  return objc_opt_self(_TtC11MusicCoreUI19SyncedLyricsManager);
}

uint64_t initializeWithCopy for SyncedLyricsManager.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain(v3);
  return a1;
}

_QWORD *assignWithCopy for SyncedLyricsManager.Configuration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain(v4);
  swift_release(v5);
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  return a1;
}

uint64_t assignWithTake for SyncedLyricsManager.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for SyncedLyricsManager.Configuration()
{
  return &type metadata for SyncedLyricsManager.Configuration;
}

uint64_t sub_E05770(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508630);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

id static SyncedLyricsViewController.Specs.lineChangeSpringTimingParameters()()
{
  return objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 100.0, 18.0, 0.0, 0.0);
}

void *SyncedLyricsViewController.Specs.init(_:)@<X0>(void (*a1)(_BYTE *, __n128)@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  _BYTE v5[544];

  sub_E07024(a1, a2, v5);
  return memcpy(a3, v5, 0x219uLL);
}

id static SyncedLyricsViewController.Specs.liftSpringTimingParameters()()
{
  return objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 14.0, 7.0, 0.0, 0.0);
}

id static SyncedLyricsViewController.Specs.growSyllableTimingParameters(response:)(double a1)
{
  sub_4E684(0, &qword_15084D0, UISpringTimingParameters_ptr);
  return UISpringTimingParameters.init(dampingRatio:response:)(1.0, a1);
}

id static SyncedLyricsViewController.Specs.backgroundVocalsSpringTimingParameters(showing:)(char a1)
{
  if ((a1 & 1) != 0)
    return objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 30.0, 9.0, 0.0, 0.0);
  sub_4E684(0, &qword_15084D0, UISpringTimingParameters_ptr);
  return UISpringTimingParameters.init(dampingRatio:response:)(1.0, 0.2);
}

id static SyncedLyricsViewController.Specs.opacityAnimator()()
{
  return objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:controlPoint1:controlPoint2:animations:", 0, 0.12, 0.33, 0.0, 0.2, 0.1);
}

BOOL static SyncedLyricsViewController.Specs.SelectedLinePosition.__derived_enum_equals(_:_:)(__int128 *a1, __int128 *a2)
{
  char v3;
  double v4;
  CGFloat v6;
  CGFloat v7;
  CGFloat v8;
  CGFloat v9;
  char v10;
  CGRect v11;
  char v12;
  _QWORD v13[4];
  char v14;
  CGRect v15;

  sub_17C9A8(a1, (uint64_t)v13);
  v3 = v14;
  if ((v14 & 0x80) == 0)
  {
    v4 = *(double *)v13;
    sub_17C9A8(a2, (uint64_t)&v11);
    if ((v12 & 0x80000000) == 0)
      return v4 == v11.origin.x;
    return 0;
  }
  v14 &= ~0x80u;
  v6 = *(double *)v13;
  v7 = *(double *)&v13[1];
  v8 = *(double *)&v13[2];
  v9 = *(double *)&v13[3];
  sub_17C9A8(a2, (uint64_t)&v11);
  v10 = v12;
  if ((v12 & 0x80) == 0)
    return 0;
  v12 &= ~0x80u;
  if ((v3 & 1) != 0)
  {
    if ((v10 & 1) == 0)
      return 0;
  }
  else
  {
    if ((v10 & 1) != 0)
      return 0;
    v15.origin.x = v6;
    v15.origin.y = v7;
    v15.size.width = v8;
    v15.size.height = v9;
    if (!CGRectEqualToRect(v15, v11))
      return 0;
  }
  return 1;
}

uint64_t sub_E05A54(uint64_t a1, uint64_t a2)
{
  int v2;

  v2 = *(char *)(a1 + 32);
  if (v2 < 0)
  {
    if ((*(_BYTE *)(a2 + 32) & 0x80) != 0)
    {
      if ((v2 & 1) != 0)
      {
        if ((*(_BYTE *)(a2 + 32) & 1) != 0)
          return 1;
      }
      else if ((*(_BYTE *)(a2 + 32) & 1) == 0 && CGRectEqualToRect(*(CGRect *)a1, *(CGRect *)a2))
      {
        return 1;
      }
    }
  }
  else if ((*(_BYTE *)(a2 + 32) & 0x80) == 0 && *(double *)a1 == *(double *)a2)
  {
    return 1;
  }
  return 0;
}

__n128 SyncedLyricsViewController.Specs.selectedLinePosition.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  __n128 result;
  __int128 v4;

  v2 = *(_BYTE *)(v1 + 40);
  result = *(__n128 *)(v1 + 8);
  v4 = *(_OWORD *)(v1 + 24);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = v2;
  return result;
}

uint64_t SyncedLyricsViewController.Specs.selectedLinePosition.setter(__int128 *a1)
{
  uint64_t v1;

  return sub_17C9A8(a1, v1 + 8);
}

uint64_t SyncedLyricsViewController.Specs.lineTextAlignment.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t SyncedLyricsViewController.Specs.lineTextAlignment.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = result;
  *(_BYTE *)(v2 + 56) = a2 & 1;
  return result;
}

uint64_t SyncedLyricsViewController.Specs.songwritersTextAlignment.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 64);
}

uint64_t SyncedLyricsViewController.Specs.songwritersTextAlignment.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = result;
  *(_BYTE *)(v2 + 72) = a2 & 1;
  return result;
}

double SyncedLyricsViewController.Specs.lineSpacing.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 80);
}

void SyncedLyricsViewController.Specs.lineSpacing.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 80) = a1;
}

void SyncedLyricsViewController.Specs.backgroundVocalsTopSpacing.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 88) = a1;
}

__n128 SyncedLyricsViewController.Specs.backgroundVocalsDeselectedTransform.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v2;
  __n128 result;

  v2 = *(_OWORD *)(v1 + 112);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 96);
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(v1 + 128);
  *(__n128 *)(a1 + 32) = result;
  return result;
}

__n128 SyncedLyricsViewController.Specs.backgroundVocalsDeselectedTransform.setter(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  __n128 result;

  v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 112) = v2;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v1 + 128) = result;
  return result;
}

double (*SyncedLyricsViewController.Specs.backgroundVocalsDeselectedTransform.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

double SyncedLyricsViewController.Specs.lineDelay.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 144);
}

void SyncedLyricsViewController.Specs.lineDelay.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 144) = a1;
}

double (*SyncedLyricsViewController.Specs.lineDelay.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

double SyncedLyricsViewController.Specs.maxEndTimeOffset.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 152);
}

void SyncedLyricsViewController.Specs.maxEndTimeOffset.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 152) = a1;
}

double (*SyncedLyricsSharingTransitionInfo.isSelected.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

uint64_t SyncedLyricsViewController.Specs.maxSelectedLines.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 160);
}

uint64_t SyncedLyricsViewController.Specs.maxSelectedLines.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 160) = result;
  return result;
}

double (*SyncedLyricsSharingTransitionInfo.transform.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

id SyncedLyricsViewController.Specs.font.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 168);
}

void SyncedLyricsViewController.Specs.font.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 168) = a1;
}

double (*SyncedLyricsViewController.Specs.font.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

uint64_t SyncedLyricsViewController.Specs.fontLeading.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 176);
}

uint64_t SyncedLyricsViewController.Specs.fontLeading.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 176) = result;
  *(_BYTE *)(v2 + 184) = a2 & 1;
  return result;
}

double (*SyncedLyricsViewController.Specs.fontLeading.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

id SyncedLyricsViewController.Specs.backgroundVocalsFont.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 192);
}

void SyncedLyricsViewController.Specs.backgroundVocalsFont.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 192) = a1;
}

double (*SyncedLyricsViewController.Specs.backgroundVocalsFont.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

id SyncedLyricsViewController.Specs.writtenByFont.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 200);
}

void SyncedLyricsViewController.Specs.writtenByFont.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 200) = a1;
}

double (*SyncedLyricsViewController.Specs.writtenByFont.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

id SyncedLyricsViewController.Specs.songwritersNamesFont.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 208);
}

void SyncedLyricsViewController.Specs.songwritersNamesFont.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 208) = a1;
}

double (*SyncedLyricsSharingTransitionInfo.transitionWillBeginHandler.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

double SyncedLyricsViewController.Specs.emphasizingScaleRange.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 216);
}

void SyncedLyricsViewController.Specs.emphasizingScaleRange.setter(double a1, double a2)
{
  uint64_t v2;

  *(double *)(v2 + 216) = a1;
  *(double *)(v2 + 224) = a2;
}

double (*SyncedLyricsViewController.Specs.emphasizingScaleRange.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

id SyncedLyricsViewController.Specs.selectedTextColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 232);
}

void SyncedLyricsViewController.Specs.selectedTextColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 232) = a1;
}

double (*SyncedLyricsViewController.Specs.selectedTextColor.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

id SyncedLyricsViewController.Specs.selectedUpcomingTextColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 240);
}

void SyncedLyricsViewController.Specs.selectedUpcomingTextColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 240) = a1;
}

double (*SyncedLyricsViewController.Specs.selectedUpcomingTextColor.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

id SyncedLyricsViewController.Specs.deselectedTextColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 248);
}

void SyncedLyricsViewController.Specs.deselectedTextColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 248) = a1;
}

double (*SyncedLyricsViewController.Specs.deselectedTextColor.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

id SyncedLyricsViewController.Specs.selectedBackgroundVocalsTextColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 256);
}

void SyncedLyricsViewController.Specs.selectedBackgroundVocalsTextColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 256) = a1;
}

double (*SyncedLyricsViewController.Specs.selectedBackgroundVocalsTextColor.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

id SyncedLyricsViewController.Specs.selectedUpcomingBackgroundVocalsTextColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 264);
}

void SyncedLyricsViewController.Specs.selectedUpcomingBackgroundVocalsTextColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 264) = a1;
}

double (*SyncedLyricsViewController.Specs.selectedUpcomingBackgroundVocalsTextColor.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

id SyncedLyricsViewController.Specs.deselectedScrollTextColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 272);
}

void SyncedLyricsViewController.Specs.deselectedScrollTextColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 272) = a1;
}

double (*SyncedLyricsViewController.Specs.deselectedScrollTextColor.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

__n128 SyncedLyricsViewController.Specs.deselectedTransform.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v2;
  __n128 result;

  v2 = *(_OWORD *)(v1 + 296);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 280);
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(v1 + 312);
  *(__n128 *)(a1 + 32) = result;
  return result;
}

__n128 SyncedLyricsViewController.Specs.deselectedTransform.setter(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  __n128 result;

  v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 280) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 296) = v2;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v1 + 312) = result;
  return result;
}

double (*SyncedLyricsViewController.Specs.deselectedTransform.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

id SyncedLyricsViewController.Specs.hiddenTextColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 328);
}

void SyncedLyricsViewController.Specs.hiddenTextColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 328) = a1;
}

double (*SyncedLyricsViewController.Specs.hiddenTextColor.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

double SyncedLyricsViewController.Specs.animationHeadstart.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 336);
}

void SyncedLyricsViewController.Specs.animationHeadstart.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 336) = a1;
}

double (*SyncedLyricsViewController.Specs.animationHeadstart.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

id SyncedLyricsViewController.Specs.glowColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 344);
}

void SyncedLyricsViewController.Specs.glowColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 344) = a1;
}

double (*SyncedLyricsViewController.Specs.glowColor.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

double SyncedLyricsViewController.Specs.glowRadius.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 352);
}

void SyncedLyricsViewController.Specs.glowRadius.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 352) = a1;
}

double (*SyncedLyricsViewController.Specs.glowRadius.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

double SyncedLyricsViewController.Specs.glowRange.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 360);
}

void SyncedLyricsViewController.Specs.glowRange.setter(double a1, double a2)
{
  uint64_t v2;

  *(double *)(v2 + 360) = a1;
  *(double *)(v2 + 368) = a2;
}

double (*SyncedLyricsViewController.Specs.glowRange.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

id SyncedLyricsViewController.Specs.lineProgressionGradientColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 376);
}

void SyncedLyricsViewController.Specs.lineProgressionGradientColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 376) = a1;
}

double (*SyncedLyricsViewController.Specs.lineProgressionGradientColor.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

id SyncedLyricsViewController.Specs.lineProgressionBackgroundVocalsGradientColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 384);
}

void SyncedLyricsViewController.Specs.lineProgressionBackgroundVocalsGradientColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 384) = a1;
}

double (*SyncedLyricsViewController.Specs.lineProgressionBackgroundVocalsGradientColor.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

double SyncedLyricsViewController.Specs.lineProgressionGradientFeather.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 392);
}

void SyncedLyricsViewController.Specs.lineProgressionGradientFeather.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 392) = a1;
}

double (*SyncedLyricsViewController.Specs.lineProgressionGradientFeather.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

__n128 SyncedLyricsViewController.Specs.touchDownTransform.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v2;
  __n128 result;

  v2 = *(_OWORD *)(v1 + 416);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 400);
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(v1 + 432);
  *(__n128 *)(a1 + 32) = result;
  return result;
}

__n128 SyncedLyricsViewController.Specs.touchDownTransform.setter(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  __n128 result;

  v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 400) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 416) = v2;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v1 + 432) = result;
  return result;
}

double (*SyncedLyricsViewController.Specs.touchDownTransform.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

double SyncedLyricsViewController.Specs.highlightLabelAlpha.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 448);
}

void SyncedLyricsViewController.Specs.highlightLabelAlpha.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 448) = a1;
}

double (*SyncedLyricsViewController.Specs.highlightLabelAlpha.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

id SyncedLyricsViewController.Specs.highlightViewBackgroundColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 456);
}

void SyncedLyricsViewController.Specs.highlightViewBackgroundColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 456) = a1;
}

double (*SyncedLyricsViewController.Specs.highlightViewBackgroundColor.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

double SyncedLyricsViewController.Specs.highlightViewCornerRadius.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 464);
}

void SyncedLyricsViewController.Specs.highlightViewCornerRadius.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 464) = a1;
}

double (*SyncedLyricsViewController.Specs.highlightViewCornerRadius.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

double SyncedLyricsViewController.Specs.highlightViewMargin.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 472);
}

void SyncedLyricsViewController.Specs.highlightViewMargin.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 472) = a1;
}

double (*SyncedLyricsViewController.Specs.highlightViewMargin.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

double SyncedLyricsViewController.Specs.instrumentalBreakVisualizationMinSeconds.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 480);
}

void SyncedLyricsViewController.Specs.instrumentalBreakVisualizationMinSeconds.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 480) = a1;
}

double (*SyncedLyricsViewController.Specs.instrumentalBreakVisualizationMinSeconds.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

uint64_t SyncedLyricsViewController.Specs.instrumentalBreakCountdownDotCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 488);
}

uint64_t SyncedLyricsViewController.Specs.instrumentalBreakCountdownDotCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 488) = result;
  return result;
}

double (*SyncedLyricsViewController.Specs.instrumentalBreakCountdownDotCount.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

double SyncedLyricsViewController.Specs.instrumentalBreakViewHeight.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 496);
}

void SyncedLyricsViewController.Specs.instrumentalBreakViewHeight.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 496) = a1;
}

double (*SyncedLyricsViewController.Specs.instrumentalBreakViewHeight.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

double SyncedLyricsViewController.Specs.syllableLift.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 504);
}

void SyncedLyricsViewController.Specs.syllableLift.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 504) = a1;
}

double (*SyncedLyricsViewController.Specs.syllableLift.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

double SyncedLyricsViewController.Specs.vocalGroupWidthCoefficient.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 512);
}

void SyncedLyricsViewController.Specs.vocalGroupWidthCoefficient.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 512) = a1;
}

double (*SyncedLyricsViewController.Specs.vocalGroupWidthCoefficient.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

double SyncedLyricsViewController.Specs.lineTapProgressFreezeDuration.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 520);
}

void SyncedLyricsViewController.Specs.lineTapProgressFreezeDuration.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 520) = a1;
}

double (*SyncedLyricsViewController.Specs.lineTapProgressFreezeDuration.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

double SyncedLyricsViewController.Specs.lineFinishProgressAnimationDuration.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 528);
}

void SyncedLyricsViewController.Specs.lineFinishProgressAnimationDuration.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 528) = a1;
}

double (*SyncedLyricsViewController.Specs.lineFinishProgressAnimationDuration.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

uint64_t SyncedLyricsViewController.Specs.showsVerticalScrollIndicator.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 536);
}

uint64_t SyncedLyricsViewController.Specs.showsVerticalScrollIndicator.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 536) = result;
  return result;
}

double (*SyncedLyricsViewController.Specs.showsVerticalScrollIndicator.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

void *SyncedLyricsViewController.Specs.with(_:)@<X0>(void (*a1)(_BYTE *)@<X0>, void *a2@<X8>)
{
  const void *v2;
  _BYTE v6[544];

  memcpy(v6, v2, 0x219uLL);
  sub_533134((uint64_t)v2);
  a1(v6);
  return memcpy(a2, v6, 0x219uLL);
}

void *sub_E062B4()
{
  _BYTE v1[544];

  sub_E07024(0, 0, v1);
  return memcpy(&static SyncedLyricsViewController.Specs.default, v1, 0x219uLL);
}

void *SyncedLyricsViewController.Specs.default.unsafeMutableAddressor()
{
  if (qword_1506160 != -1)
    swift_once(&qword_1506160, sub_E062B4);
  return &static SyncedLyricsViewController.Specs.default;
}

uint64_t static SyncedLyricsViewController.Specs.default.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_E06974(&qword_1506160, (uint64_t)&static SyncedLyricsViewController.Specs.default, (uint64_t)sub_E062B4, a1);
}

void *sub_E06354()
{
  _BYTE v1[544];

  sub_E07024((void (*)(_BYTE *, __n128))sub_E0639C, 0, v1);
  return memcpy(&static SyncedLyricsViewController.Specs.iPad, v1, 0x219uLL);
}

void sub_E0639C(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;

  *(_QWORD *)(a1 + 8) = 0x4034000000000000;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 40) = 0;
  *(_OWORD *)(a1 + 80) = xmmword_10A9740;
  *(_QWORD *)(a1 + 152) = 0x3FE0000000000000;
  v2 = (void *)objc_opt_self(UIFont);
  v3 = objc_msgSend(v2, "systemFontOfSize:weight:", 48.0, UIFontWeightBold);

  *(_QWORD *)(a1 + 168) = v3;
  v4 = objc_msgSend(v2, "systemFontOfSize:weight:", 32.0, UIFontWeightBold);

  *(_QWORD *)(a1 + 192) = v4;
  *(_QWORD *)(a1 + 176) = 0x404A000000000000;
  *(_BYTE *)(a1 + 184) = 0;
}

void *SyncedLyricsViewController.Specs.iPad.unsafeMutableAddressor()
{
  if (qword_1506168 != -1)
    swift_once(&qword_1506168, sub_E06354);
  return &static SyncedLyricsViewController.Specs.iPad;
}

uint64_t static SyncedLyricsViewController.Specs.iPad.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_E06974(&qword_1506168, (uint64_t)&static SyncedLyricsViewController.Specs.iPad, (uint64_t)sub_E06354, a1);
}

void *sub_E064D0()
{
  _BYTE v1[544];

  sub_E07024((void (*)(_BYTE *, __n128))sub_E06518, 0, v1);
  return memcpy(&static SyncedLyricsViewController.Specs.vision, v1, 0x219uLL);
}

void sub_E06518(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  _QWORD v19[6];

  *(_QWORD *)(a1 + 8) = 0x4042000000000000;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 40) = 0;
  *(_OWORD *)(a1 + 80) = xmmword_10A9740;
  *(_QWORD *)(a1 + 152) = 0x3FE0000000000000;
  v2 = (void *)objc_opt_self(UIFont);
  v3 = objc_msgSend(v2, "systemFontOfSize:weight:", 56.0, UIFontWeightBold);

  *(_QWORD *)(a1 + 168) = v3;
  v4 = objc_msgSend(v2, "systemFontOfSize:weight:", 34.0, UIFontWeightBold);

  *(_QWORD *)(a1 + 192) = v4;
  *(_BYTE *)(a1 + 536) = 0;
  *(_QWORD *)(a1 + 176) = 0x404C000000000000;
  *(_BYTE *)(a1 + 184) = 0;
  v5 = (void *)objc_opt_self(UIColor);
  v6 = objc_msgSend(v5, "whiteColor");
  v7 = objc_msgSend(v6, "colorWithAlphaComponent:", 0.175);

  *(_QWORD *)(a1 + 384) = v7;
  v8 = objc_msgSend(v5, "whiteColor");

  *(_QWORD *)(a1 + 376) = v8;
  v9 = objc_msgSend(v5, "whiteColor");
  v10 = objc_msgSend(v9, "colorWithAlphaComponent:", 0.35);

  v11 = objc_msgSend(v5, "labelColor");
  v12 = objc_msgSend(v11, "colorWithAlphaComponent:", 0.55);

  v13 = objc_allocWithZone((Class)UIColor);
  v14 = swift_allocObject(&unk_13C6DE0, 32, 7);
  *(_QWORD *)(v14 + 16) = v12;
  *(_QWORD *)(v14 + 24) = v10;
  v19[4] = sub_E0894C;
  v19[5] = v14;
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 1107296256;
  v19[2] = sub_12EEE0;
  v19[3] = &block_descriptor_349;
  v15 = _Block_copy(v19);
  v16 = v12;
  v17 = v10;
  v18 = objc_msgSend(v13, "initWithDynamicProvider:", v15, swift_release().n128_f64[0]);

  _Block_release(v15);
  *(_QWORD *)(a1 + 240) = v18;
}

void *SyncedLyricsViewController.Specs.vision.unsafeMutableAddressor()
{
  if (qword_1506170 != -1)
    swift_once(&qword_1506170, sub_E064D0);
  return &static SyncedLyricsViewController.Specs.vision;
}

uint64_t static SyncedLyricsViewController.Specs.vision.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_E06974(&qword_1506170, (uint64_t)&static SyncedLyricsViewController.Specs.vision, (uint64_t)sub_E064D0, a1);
}

void *sub_E06814()
{
  _BYTE v1[544];

  sub_E07024((void (*)(_BYTE *, __n128))sub_E0685C, 0, v1);
  return memcpy(&static SyncedLyricsViewController.Specs.alternative, v1, 0x219uLL);
}

void sub_E0685C(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;

  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_BYTE *)(a1 + 40) = -127;
  *(_QWORD *)(a1 + 160) = 1;
  v2 = (void *)objc_opt_self(UIFont);
  v3 = objc_msgSend(v2, "systemFontOfSize:weight:", 28.0, UIFontWeightBold);

  *(_QWORD *)(a1 + 168) = v3;
  v4 = objc_msgSend(v2, "systemFontOfSize:weight:", 24.0, UIFontWeightBold);

  *(_QWORD *)(a1 + 192) = v4;
}

void *SyncedLyricsViewController.Specs.alternative.unsafeMutableAddressor()
{
  if (qword_1506178 != -1)
    swift_once(&qword_1506178, sub_E06814);
  return &static SyncedLyricsViewController.Specs.alternative;
}

uint64_t static SyncedLyricsViewController.Specs.alternative.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_E06974(&qword_1506178, (uint64_t)&static SyncedLyricsViewController.Specs.alternative, (uint64_t)sub_E06814, a1);
}

uint64_t sub_E06974@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*a1 != -1)
    swift_once(a1, a3);
  return sub_E07E6C(a2, a4);
}

id static SyncedLyricsViewController.Specs.syllableBySyllableLineChangeSpringTimingParameters(gap:)(uint64_t a1, char a2)
{
  return sub_E07EA0(a1, a2 & 1);
}

id static SyncedLyricsViewController.Specs.tapSpringTimingParameters()()
{
  return objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 2.0, 260.0, 50.0, 0.0, 0.0);
}

id sub_E06AAC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)_s5SpecsV27CustomCurveAnimationFactoryCMa();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_E06AE4(void *__src, const void *a2)
{
  _BYTE v4[544];
  _BYTE __dst[544];

  memcpy(v4, __src, 0x219uLL);
  memcpy(__dst, a2, 0x219uLL);
  return _s11MusicCoreUI26SyncedLyricsViewControllerC5SpecsV23__derived_struct_equalsySbAE_AEtFZ_0((uint64_t)v4, (uint64_t)__dst) & 1;
}

id sub_E06B38(void *a1, void *a2, void *a3)
{
  char *v4;
  BOOL v5;
  void *v6;

  v4 = (char *)objc_msgSend(a1, "accessibilityContrast");
  if (v4 == (char *)-1)
  {
    v6 = a3;
  }
  else
  {
    v5 = v4 == (_BYTE *)&dword_0 + 1;
    v6 = a3;
    if (v5)
      v6 = a2;
  }
  return v6;
}

uint64_t _s11MusicCoreUI26SyncedLyricsViewControllerC5SpecsV23__derived_struct_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  char v4;
  double v5;
  char v6;
  CGFloat v7;
  CGFloat v8;
  CGFloat v9;
  CGFloat v10;
  char v11;
  __int128 v12;
  __int128 v13;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _OWORD v19[3];
  _OWORD v20[3];
  _OWORD v21[3];
  _OWORD v22[3];
  _OWORD v23[3];
  _OWORD v24[3];
  __int128 v25[2];
  __int128 v26[2];
  _QWORD v27[4];
  char v28;
  CGRect v29;
  char v30;
  CGRect v31;

  if (*(double *)a1 != *(double *)a2)
    goto LABEL_33;
  sub_17C9A8((__int128 *)(a1 + 8), (uint64_t)v26);
  sub_17C9A8((__int128 *)(a2 + 8), (uint64_t)v25);
  sub_17C9A8(v26, (uint64_t)v27);
  v4 = v28;
  if (v28 < 0)
  {
    v28 &= ~0x80u;
    v7 = *(double *)v27;
    v8 = *(double *)&v27[1];
    v9 = *(double *)&v27[2];
    v10 = *(double *)&v27[3];
    sub_17C9A8(v25, (uint64_t)&v29);
    v11 = v30;
    if ((v30 & 0x80) == 0)
      goto LABEL_33;
    v30 &= ~0x80u;
    if ((v4 & 1) != 0)
    {
      if ((v11 & 1) == 0)
        goto LABEL_33;
    }
    else
    {
      if ((v11 & 1) != 0)
        goto LABEL_33;
      v31.origin.x = v7;
      v31.origin.y = v8;
      v31.size.width = v9;
      v31.size.height = v10;
      if (!CGRectEqualToRect(v31, v29))
        goto LABEL_33;
    }
  }
  else
  {
    v5 = *(double *)v27;
    sub_17C9A8(v25, (uint64_t)&v29);
    v6 = 0;
    if (v30 < 0 || v5 != v29.origin.x)
      return v6 & 1;
  }
  v6 = *(_BYTE *)(a2 + 56);
  if ((*(_BYTE *)(a1 + 56) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 56))
      return v6 & 1;
  }
  else
  {
    if (*(_QWORD *)(a1 + 48) != *(_QWORD *)(a2 + 48))
      v6 = 1;
    if ((v6 & 1) != 0)
      goto LABEL_33;
  }
  v6 = *(_BYTE *)(a2 + 72);
  if ((*(_BYTE *)(a1 + 72) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 72))
      return v6 & 1;
  }
  else
  {
    if (*(_QWORD *)(a1 + 64) != *(_QWORD *)(a2 + 64))
      v6 = 1;
    if ((v6 & 1) != 0)
      goto LABEL_33;
  }
  if (*(double *)(a1 + 80) != *(double *)(a2 + 80))
    goto LABEL_33;
  if (*(double *)(a1 + 88) != *(double *)(a2 + 88))
    goto LABEL_33;
  v12 = *(_OWORD *)(a1 + 112);
  v24[0] = *(_OWORD *)(a1 + 96);
  v24[1] = v12;
  v24[2] = *(_OWORD *)(a1 + 128);
  v13 = *(_OWORD *)(a2 + 112);
  v23[0] = *(_OWORD *)(a2 + 96);
  v23[1] = v13;
  v23[2] = *(_OWORD *)(a2 + 128);
  if ((static CGAffineTransform.== infix(_:_:)(v24, v23) & 1) == 0
    || *(double *)(a1 + 144) != *(double *)(a2 + 144)
    || *(double *)(a1 + 152) != *(double *)(a2 + 152)
    || *(_QWORD *)(a1 + 160) != *(_QWORD *)(a2 + 160)
    || (sub_4E684(0, (unint64_t *)&qword_15077E0, NSObject_ptr),
        (static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 168), *(_QWORD *)(a2 + 168)) & 1) == 0))
  {
LABEL_33:
    v6 = 0;
    return v6 & 1;
  }
  v6 = *(_BYTE *)(a2 + 184);
  if ((*(_BYTE *)(a1 + 184) & 1) == 0)
  {
    if (*(double *)(a1 + 176) != *(double *)(a2 + 176))
      v6 = 1;
    if ((v6 & 1) == 0)
    {
LABEL_38:
      if ((static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 192), *(_QWORD *)(a2 + 192)) & 1) != 0
        && (static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 200), *(_QWORD *)(a2 + 200)) & 1) != 0
        && (static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 208), *(_QWORD *)(a2 + 208)) & 1) != 0
        && *(double *)(a1 + 216) == *(double *)(a2 + 216)
        && *(double *)(a1 + 224) == *(double *)(a2 + 224)
        && (static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 232), *(_QWORD *)(a2 + 232)) & 1) != 0
        && (static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 240), *(_QWORD *)(a2 + 240)) & 1) != 0
        && (static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 248), *(_QWORD *)(a2 + 248)) & 1) != 0
        && (static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 256), *(_QWORD *)(a2 + 256)) & 1) != 0
        && (static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 264), *(_QWORD *)(a2 + 264)) & 1) != 0
        && (static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 272), *(_QWORD *)(a2 + 272)) & 1) != 0)
      {
        v15 = *(_OWORD *)(a1 + 296);
        v22[0] = *(_OWORD *)(a1 + 280);
        v22[1] = v15;
        v22[2] = *(_OWORD *)(a1 + 312);
        v16 = *(_OWORD *)(a2 + 296);
        v21[0] = *(_OWORD *)(a2 + 280);
        v21[1] = v16;
        v21[2] = *(_OWORD *)(a2 + 312);
        if ((static CGAffineTransform.== infix(_:_:)(v22, v21) & 1) != 0
          && (static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 328), *(_QWORD *)(a2 + 328)) & 1) != 0
          && *(double *)(a1 + 336) == *(double *)(a2 + 336)
          && (static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 344), *(_QWORD *)(a2 + 344)) & 1) != 0
          && *(double *)(a1 + 352) == *(double *)(a2 + 352)
          && *(double *)(a1 + 360) == *(double *)(a2 + 360)
          && *(double *)(a1 + 368) == *(double *)(a2 + 368)
          && (static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 376), *(_QWORD *)(a2 + 376)) & 1) != 0
          && (static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 384), *(_QWORD *)(a2 + 384)) & 1) != 0
          && *(double *)(a1 + 392) == *(double *)(a2 + 392))
        {
          v17 = *(_OWORD *)(a1 + 416);
          v20[0] = *(_OWORD *)(a1 + 400);
          v20[1] = v17;
          v20[2] = *(_OWORD *)(a1 + 432);
          v18 = *(_OWORD *)(a2 + 416);
          v19[0] = *(_OWORD *)(a2 + 400);
          v19[1] = v18;
          v19[2] = *(_OWORD *)(a2 + 432);
          if ((static CGAffineTransform.== infix(_:_:)(v20, v19) & 1) != 0
            && *(double *)(a1 + 448) == *(double *)(a2 + 448)
            && (static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + 456), *(_QWORD *)(a2 + 456)) & 1) != 0
            && *(double *)(a1 + 464) == *(double *)(a2 + 464)
            && *(double *)(a1 + 472) == *(double *)(a2 + 472)
            && *(double *)(a1 + 480) == *(double *)(a2 + 480)
            && *(_QWORD *)(a1 + 488) == *(_QWORD *)(a2 + 488)
            && *(double *)(a1 + 496) == *(double *)(a2 + 496)
            && *(double *)(a1 + 504) == *(double *)(a2 + 504)
            && *(double *)(a1 + 512) == *(double *)(a2 + 512)
            && *(double *)(a1 + 520) == *(double *)(a2 + 520)
            && *(double *)(a1 + 528) == *(double *)(a2 + 528))
          {
            v6 = ((*(_BYTE *)(a1 + 536) & 1) == 0) ^ *(_BYTE *)(a2 + 536);
            return v6 & 1;
          }
        }
      }
      goto LABEL_33;
    }
    goto LABEL_33;
  }
  if (*(_BYTE *)(a2 + 184))
    goto LABEL_38;
  return v6 & 1;
}

void *sub_E07024@<X0>(void (*a1)(_BYTE *, __n128)@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  CGFloat v8;
  void *v9;
  CGFloat ty;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  CGFloat v19;
  void *v20;
  CGFloat v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  CGFloat v30;
  void *v31;
  CGFloat v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  CGFloat v41;
  void *v42;
  CGFloat v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  CGFloat v52;
  void *v53;
  CGFloat v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  CGFloat v63;
  void *v64;
  CGFloat v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  CGFloat v72;
  void *v73;
  CGFloat v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  CGFloat v83;
  void *v84;
  CGFloat v85;
  id v86;
  id v87;
  id v88;
  __n128 v94;
  CGAffineTransform aBlock;
  _BYTE __src[537];

  *(_QWORD *)__src = 0x404E000000000000;
  *(_QWORD *)&__src[8] = 0x4028000000000000;
  *(_QWORD *)&__src[48] = 0;
  memset(&__src[16], 0, 25);
  __src[56] = 1;
  *(_QWORD *)&__src[64] = 0;
  __src[72] = 1;
  *(_OWORD *)&__src[80] = xmmword_10A9750;
  CGAffineTransformMakeScale(&aBlock, 0.9, 0.9);
  *(CGAffineTransform *)&__src[96] = aBlock;
  *(_OWORD *)&__src[144] = xmmword_10A9760;
  *(_QWORD *)&__src[160] = 2;
  sub_4E684(0, (unint64_t *)&qword_1506538, UIFont_ptr);
  *(_QWORD *)&__src[168] = static UIFont.preferredFont(forTextStyle:weight:)(UIFontTextStyleLargeTitle, UIFontWeightBold);
  *(_QWORD *)&__src[176] = 0;
  __src[184] = 1;
  *(_QWORD *)&__src[192] = static UIFont.shortEmphasizedPreferredFont(forTextStyle:)(UIFontTextStyleTitle2);
  v3 = (void *)objc_opt_self(UIFont);
  *(_QWORD *)&__src[200] = objc_msgSend(v3, "systemFontOfSize:weight:", 22.0, UIFontWeightBold);
  *(_QWORD *)&__src[208] = objc_msgSend(v3, "systemFontOfSize:weight:", 22.0, UIFontWeightMedium);
  *(_OWORD *)&__src[216] = xmmword_10A9770;
  v4 = (void *)objc_opt_self(UIColor);
  v5 = objc_msgSend(v4, "whiteColor");
  v6 = objc_msgSend(v4, "labelColor");
  v7 = objc_allocWithZone((Class)UIColor);
  v8 = COERCE_DOUBLE(swift_allocObject(&unk_13C6E80, 32, 7));
  *(_QWORD *)(*(_QWORD *)&v8 + 16) = v6;
  *(_QWORD *)(*(_QWORD *)&v8 + 24) = v5;
  *(_QWORD *)&aBlock.tx = sub_E0894C;
  aBlock.ty = v8;
  *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
  *(_QWORD *)&aBlock.b = 1107296256;
  *(_QWORD *)&aBlock.c = sub_12EEE0;
  *(_QWORD *)&aBlock.d = &block_descriptor_15_15;
  v9 = _Block_copy(&aBlock);
  ty = aBlock.ty;
  v11 = v6;
  v12 = v5;
  v13 = objc_msgSend(v7, "initWithDynamicProvider:", v9, swift_release(*(_QWORD *)&ty).n128_f64[0]);

  _Block_release(v9);
  *(_QWORD *)&__src[232] = v13;
  v14 = objc_msgSend(v4, "whiteColor");
  v15 = objc_msgSend(v14, "colorWithAlphaComponent:", 0.35);

  v16 = objc_msgSend(v4, "labelColor");
  v17 = objc_msgSend(v16, "colorWithAlphaComponent:", 0.85);

  v18 = objc_allocWithZone((Class)UIColor);
  v19 = COERCE_DOUBLE(swift_allocObject(&unk_13C6ED0, 32, 7));
  *(_QWORD *)(*(_QWORD *)&v19 + 16) = v17;
  *(_QWORD *)(*(_QWORD *)&v19 + 24) = v15;
  *(_QWORD *)&aBlock.tx = sub_E0894C;
  aBlock.ty = v19;
  *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
  *(_QWORD *)&aBlock.b = 1107296256;
  *(_QWORD *)&aBlock.c = sub_12EEE0;
  *(_QWORD *)&aBlock.d = &block_descriptor_22_11;
  v20 = _Block_copy(&aBlock);
  v21 = aBlock.ty;
  v22 = v17;
  v23 = v15;
  v24 = objc_msgSend(v18, "initWithDynamicProvider:", v20, swift_release(*(_QWORD *)&v21).n128_f64[0]);

  _Block_release(v20);
  *(_QWORD *)&__src[240] = v24;
  v25 = objc_msgSend(v4, "whiteColor");
  v26 = objc_msgSend(v25, "colorWithAlphaComponent:", 0.175);

  v27 = objc_msgSend(v4, "labelColor");
  v28 = objc_msgSend(v27, "colorWithAlphaComponent:", 0.4);

  v29 = objc_allocWithZone((Class)UIColor);
  v30 = COERCE_DOUBLE(swift_allocObject(&unk_13C6F20, 32, 7));
  *(_QWORD *)(*(_QWORD *)&v30 + 16) = v28;
  *(_QWORD *)(*(_QWORD *)&v30 + 24) = v26;
  *(_QWORD *)&aBlock.tx = sub_E0894C;
  aBlock.ty = v30;
  *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
  *(_QWORD *)&aBlock.b = 1107296256;
  *(_QWORD *)&aBlock.c = sub_12EEE0;
  *(_QWORD *)&aBlock.d = &block_descriptor_29_8;
  v31 = _Block_copy(&aBlock);
  v32 = aBlock.ty;
  v33 = v28;
  v34 = v26;
  v35 = objc_msgSend(v29, "initWithDynamicProvider:", v31, swift_release(*(_QWORD *)&v32).n128_f64[0]);

  _Block_release(v31);
  *(_QWORD *)&__src[248] = v35;
  v36 = objc_msgSend(v4, "whiteColor");
  v37 = objc_msgSend(v36, "colorWithAlphaComponent:", 0.35);

  v38 = objc_msgSend(v4, "labelColor");
  v39 = objc_msgSend(v38, "colorWithAlphaComponent:", 0.85);

  v40 = objc_allocWithZone((Class)UIColor);
  v41 = COERCE_DOUBLE(swift_allocObject(&unk_13C6F70, 32, 7));
  *(_QWORD *)(*(_QWORD *)&v41 + 16) = v39;
  *(_QWORD *)(*(_QWORD *)&v41 + 24) = v37;
  *(_QWORD *)&aBlock.tx = sub_E0894C;
  aBlock.ty = v41;
  *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
  *(_QWORD *)&aBlock.b = 1107296256;
  *(_QWORD *)&aBlock.c = sub_12EEE0;
  *(_QWORD *)&aBlock.d = &block_descriptor_36_9;
  v42 = _Block_copy(&aBlock);
  v43 = aBlock.ty;
  v44 = v39;
  v45 = v37;
  v46 = objc_msgSend(v40, "initWithDynamicProvider:", v42, swift_release(*(_QWORD *)&v43).n128_f64[0]);

  _Block_release(v42);
  *(_QWORD *)&__src[256] = v46;
  v47 = objc_msgSend(v4, "whiteColor");
  v48 = objc_msgSend(v47, "colorWithAlphaComponent:", 0.175);

  v49 = objc_msgSend(v4, "labelColor");
  v50 = objc_msgSend(v49, "colorWithAlphaComponent:", 0.65);

  v51 = objc_allocWithZone((Class)UIColor);
  v52 = COERCE_DOUBLE(swift_allocObject(&unk_13C6FC0, 32, 7));
  *(_QWORD *)(*(_QWORD *)&v52 + 16) = v50;
  *(_QWORD *)(*(_QWORD *)&v52 + 24) = v48;
  *(_QWORD *)&aBlock.tx = sub_E0894C;
  aBlock.ty = v52;
  *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
  *(_QWORD *)&aBlock.b = 1107296256;
  *(_QWORD *)&aBlock.c = sub_12EEE0;
  *(_QWORD *)&aBlock.d = &block_descriptor_43_7;
  v53 = _Block_copy(&aBlock);
  v54 = aBlock.ty;
  v55 = v50;
  v56 = v48;
  v57 = objc_msgSend(v51, "initWithDynamicProvider:", v53, swift_release(*(_QWORD *)&v54).n128_f64[0]);

  _Block_release(v53);
  *(_QWORD *)&__src[264] = v57;
  v58 = objc_msgSend(v4, "whiteColor");
  v59 = objc_msgSend(v58, "colorWithAlphaComponent:", 0.4);

  v60 = objc_msgSend(v4, "labelColor");
  v61 = objc_msgSend(v60, "colorWithAlphaComponent:", 0.4);

  v62 = objc_allocWithZone((Class)UIColor);
  v63 = COERCE_DOUBLE(swift_allocObject(&unk_13C7010, 32, 7));
  *(_QWORD *)(*(_QWORD *)&v63 + 16) = v61;
  *(_QWORD *)(*(_QWORD *)&v63 + 24) = v59;
  *(_QWORD *)&aBlock.tx = sub_E0894C;
  aBlock.ty = v63;
  *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
  *(_QWORD *)&aBlock.b = 1107296256;
  *(_QWORD *)&aBlock.c = sub_12EEE0;
  *(_QWORD *)&aBlock.d = &block_descriptor_50_12;
  v64 = _Block_copy(&aBlock);
  v65 = aBlock.ty;
  v66 = v61;
  v67 = v59;
  v68 = objc_msgSend(v62, "initWithDynamicProvider:", v64, swift_release(*(_QWORD *)&v65).n128_f64[0]);

  _Block_release(v64);
  *(_QWORD *)&__src[272] = v68;
  CGAffineTransformMakeScale(&aBlock, 0.98, 0.98);
  *(CGAffineTransform *)&__src[280] = aBlock;
  *(_QWORD *)&__src[328] = objc_msgSend(v4, "clearColor");
  *(_QWORD *)&__src[336] = 0x3FB999999999999ALL;
  *(_QWORD *)&__src[344] = objc_msgSend(v4, "whiteColor");
  *(_OWORD *)&__src[352] = xmmword_10A9780;
  *(_QWORD *)&__src[368] = 0x3FD999999999999ALL;
  v69 = objc_msgSend(v4, "whiteColor");
  v70 = objc_msgSend(v4, "tintColor");
  v71 = objc_allocWithZone((Class)UIColor);
  v72 = COERCE_DOUBLE(swift_allocObject(&unk_13C7060, 32, 7));
  *(_QWORD *)(*(_QWORD *)&v72 + 16) = v70;
  *(_QWORD *)(*(_QWORD *)&v72 + 24) = v69;
  *(_QWORD *)&aBlock.tx = sub_E0894C;
  aBlock.ty = v72;
  *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
  *(_QWORD *)&aBlock.b = 1107296256;
  *(_QWORD *)&aBlock.c = sub_12EEE0;
  *(_QWORD *)&aBlock.d = &block_descriptor_57_6;
  v73 = _Block_copy(&aBlock);
  v74 = aBlock.ty;
  v75 = v70;
  v76 = v69;
  v77 = objc_msgSend(v71, "initWithDynamicProvider:", v73, swift_release(*(_QWORD *)&v74).n128_f64[0]);

  _Block_release(v73);
  *(_QWORD *)&__src[376] = v77;
  v78 = objc_msgSend(v4, "whiteColor");
  v79 = objc_msgSend(v78, "colorWithAlphaComponent:", 0.175);

  v80 = objc_msgSend(v4, "tintColor");
  v81 = objc_msgSend(v80, "colorWithAlphaComponent:", 0.175);

  v82 = objc_allocWithZone((Class)UIColor);
  v83 = COERCE_DOUBLE(swift_allocObject(&unk_13C70B0, 32, 7));
  *(_QWORD *)(*(_QWORD *)&v83 + 16) = v81;
  *(_QWORD *)(*(_QWORD *)&v83 + 24) = v79;
  *(_QWORD *)&aBlock.tx = sub_E0894C;
  aBlock.ty = v83;
  *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
  *(_QWORD *)&aBlock.b = 1107296256;
  *(_QWORD *)&aBlock.c = sub_12EEE0;
  *(_QWORD *)&aBlock.d = &block_descriptor_64_7;
  v84 = _Block_copy(&aBlock);
  v85 = aBlock.ty;
  v86 = v81;
  v87 = v79;
  v88 = objc_msgSend(v82, "initWithDynamicProvider:", v84, swift_release(*(_QWORD *)&v85).n128_f64[0]);

  _Block_release(v84);
  *(_QWORD *)&__src[384] = v88;
  *(_QWORD *)&__src[392] = 0x403E000000000000;
  CGAffineTransformMakeScale(&aBlock, 0.95, 0.95);
  *(CGAffineTransform *)&__src[400] = aBlock;
  *(_QWORD *)&__src[448] = 0x3FEB333333333333;
  *(_QWORD *)&__src[456] = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 1.0, 0.08);
  __asm { FMOV            V0.2D, #16.0 }
  *(_OWORD *)&__src[464] = _Q0;
  *(_QWORD *)&__src[480] = 0x401C000000000000;
  *(_QWORD *)&__src[488] = 3;
  *(_OWORD *)&__src[496] = xmmword_10A9790;
  *(_OWORD *)&__src[512] = xmmword_10A97A0;
  *(_QWORD *)&__src[528] = 0x3FD0000000000000;
  __src[536] = 1;
  if (a1)
  {
    v94 = swift_retain(a2);
    a1(__src, v94);
    sub_5C198((uint64_t)a1, a2);
    sub_5C198((uint64_t)a1, a2);
  }
  return memcpy(a3, __src, 0x219uLL);
}

void _s11MusicCoreUI26SyncedLyricsViewControllerC5SpecsV35animateWithHighlightAnimationCurves11highlighted14fadeAnimations09transformP0ySb_yycyyctFZ_0(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  id v14;
  double v15;
  double v16;
  double v17;
  objc_class *v18;
  char *v19;
  double *v20;
  double *v21;
  id v22;
  void *v23;
  void *v24;
  id v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  void *v34;
  void **aBlock;
  uint64_t v37;
  uint64_t (*v38)(uint64_t);
  void *v39;
  uint64_t v40;
  uint64_t v41;
  objc_super v42;

  v8 = a1 & 1;
  if ((a1 & 1) != 0)
    v9 = 24.0;
  else
    v9 = 50.0;
  if ((a1 & 1) != 0)
    v10 = 322.0;
  else
    v10 = 300.0;
  v11 = 1.0;
  if ((a1 & 1) != 0)
    v12 = 1.0;
  else
    v12 = 2.0;
  v13 = 0.0;
  v14 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", v12, v10, v9, 0.0, 0.0);
  if (v8)
  {
    v15 = 0.55;
    v16 = 0.2;
    v17 = 0.0;
  }
  else
  {
    v15 = 0.25;
    v13 = 0.1;
    v16 = 0.3;
    v11 = 0.1;
    v17 = 0.25;
  }
  v18 = (objc_class *)_s5SpecsV27CustomCurveAnimationFactoryCMa();
  v19 = (char *)objc_allocWithZone(v18);
  v20 = (double *)&v19[OBJC_IVAR____TtCVC11MusicCoreUI26SyncedLyricsViewController5SpecsP33_24E29E585AB6D5A617C4CD1FBB85399D27CustomCurveAnimationFactory_controlPoint1];
  *v20 = v17;
  v20[1] = v13;
  v21 = (double *)&v19[OBJC_IVAR____TtCVC11MusicCoreUI26SyncedLyricsViewController5SpecsP33_24E29E585AB6D5A617C4CD1FBB85399D27CustomCurveAnimationFactory_controlPoint2];
  *v21 = v15;
  v21[1] = v11;
  v42.receiver = v19;
  v42.super_class = v18;
  v22 = objc_msgSendSuper2(&v42, "init");
  v23 = (void *)objc_opt_self(UIView);
  v40 = a2;
  v41 = a3;
  aBlock = _NSConcreteStackBlock;
  v37 = 1107296256;
  v38 = sub_42D124;
  v39 = &block_descriptor_5_4;
  v24 = _Block_copy(&aBlock);
  v25 = v22;
  swift_retain();
  swift_release();
  objc_msgSend(v23, "_animateWithDuration:delay:options:factory:animations:completion:", 0, v25, v24, 0, v16, v13);
  _Block_release(v24);

  objc_msgSend(v14, "settlingDuration");
  v27 = v26;
  objc_msgSend(v14, "mass");
  v29 = v28;
  objc_msgSend(v14, "stiffness");
  v31 = v30;
  objc_msgSend(v14, "damping");
  v33 = v32;
  v40 = a4;
  v41 = a5;
  aBlock = _NSConcreteStackBlock;
  v37 = 1107296256;
  v38 = sub_42D124;
  v39 = &block_descriptor_8_7;
  v34 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v23, "_animateUsingSpringWithDuration:delay:options:mass:stiffness:damping:initialVelocity:animations:completion:", 0, v34, 0, v27, v13, v29, v31, v33, 0.0);

  _Block_release(v34);
}

uint64_t sub_E07E6C(uint64_t a1, uint64_t a2)
{
  _s5SpecsVwcp(a2, a1);
  return a2;
}

id sub_E07EA0(uint64_t a1, char a2)
{
  double v2;
  double v3;
  double v4;
  double v5;

  if ((a2 & 1) != 0)
    return objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 100.0, 18.0, 0.0, 0.0);
  v2 = (*(double *)&a1 + -0.2) / 0.55;
  if (*(double *)&a1 > 0.75)
    v2 = 1.0;
  v3 = 0.0;
  if (*(double *)&a1 >= 0.2)
    v3 = v2;
  v4 = (1.0 - v3) * 0.12 + 0.78;
  v5 = v3 * 0.27 + 0.48;
  sub_4E684(0, &qword_15084D0, UISpringTimingParameters_ptr);
  return UISpringTimingParameters.init(dampingRatio:response:)(v4, v5);
}

void _s5SpecsVwxx(id *a1)
{

}

uint64_t _s5SpecsVwcp(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  __int128 v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  __int128 v18;
  __int128 v19;
  void *v20;
  __int128 v21;
  __int128 v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v3 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v3;
  v4 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v4;
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  v5 = *(void **)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v5;
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  v7 = *(void **)(a2 + 192);
  v6 = *(void **)(a2 + 200);
  *(_QWORD *)(a1 + 192) = v7;
  *(_QWORD *)(a1 + 200) = v6;
  v8 = *(void **)(a2 + 208);
  *(_QWORD *)(a1 + 208) = v8;
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  v9 = *(void **)(a2 + 232);
  v10 = *(void **)(a2 + 240);
  *(_QWORD *)(a1 + 232) = v9;
  *(_QWORD *)(a1 + 240) = v10;
  v40 = *(void **)(a2 + 248);
  v41 = *(void **)(a2 + 256);
  *(_QWORD *)(a1 + 248) = v40;
  *(_QWORD *)(a1 + 256) = v41;
  v42 = *(void **)(a2 + 264);
  v43 = *(void **)(a2 + 272);
  *(_QWORD *)(a1 + 264) = v42;
  *(_QWORD *)(a1 + 272) = v43;
  v11 = *(_OWORD *)(a2 + 280);
  v12 = *(_OWORD *)(a2 + 312);
  *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 312) = v12;
  *(_OWORD *)(a1 + 280) = v11;
  v13 = *(_QWORD *)(a2 + 336);
  v39 = *(void **)(a2 + 328);
  *(_QWORD *)(a1 + 328) = v39;
  *(_QWORD *)(a1 + 336) = v13;
  v15 = *(void **)(a2 + 344);
  v14 = *(_QWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 344) = v15;
  *(_QWORD *)(a1 + 352) = v14;
  *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 360);
  v16 = *(void **)(a2 + 376);
  v17 = *(void **)(a2 + 384);
  *(_QWORD *)(a1 + 376) = v16;
  *(_QWORD *)(a1 + 384) = v17;
  *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
  v18 = *(_OWORD *)(a2 + 400);
  v19 = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 432) = v19;
  *(_OWORD *)(a1 + 400) = v18;
  v20 = *(void **)(a2 + 456);
  *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
  *(_QWORD *)(a1 + 456) = v20;
  v21 = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 480) = v21;
  v22 = *(_OWORD *)(a2 + 512);
  *(_OWORD *)(a1 + 496) = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 512) = v22;
  *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
  *(_BYTE *)(a1 + 536) = *(_BYTE *)(a2 + 536);
  v23 = v5;
  v24 = v7;
  v25 = v6;
  v26 = v8;
  v27 = v9;
  v28 = v10;
  v29 = v40;
  v30 = v41;
  v31 = v42;
  v32 = v43;
  v33 = v39;
  v34 = v15;
  v35 = v16;
  v36 = v17;
  v37 = v20;
  return a1;
}

uint64_t _s5SpecsVwca(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  void *v24;
  void *v25;
  id v26;
  void *v27;
  void *v28;
  id v29;
  void *v30;
  void *v31;
  id v32;
  void *v33;
  void *v34;
  id v35;
  void *v36;
  void *v37;
  id v38;
  void *v39;
  void *v40;
  id v41;
  void *v42;
  void *v43;
  id v44;
  void *v45;
  void *v46;
  id v47;
  void *v48;
  void *v49;
  id v50;
  void *v51;
  void *v52;
  id v53;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_OWORD *)(a2 + 8);
  v5 = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = v5;
  *(_OWORD *)(a1 + 8) = v4;
  v6 = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v6;
  v7 = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v7;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  v8 = *(void **)(a2 + 168);
  v9 = *(void **)(a1 + 168);
  *(_QWORD *)(a1 + 168) = v8;
  v10 = v8;

  v11 = *(_QWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = v11;
  v12 = *(void **)(a2 + 192);
  v13 = *(void **)(a1 + 192);
  *(_QWORD *)(a1 + 192) = v12;
  v14 = v12;

  v15 = *(void **)(a2 + 200);
  v16 = *(void **)(a1 + 200);
  *(_QWORD *)(a1 + 200) = v15;
  v17 = v15;

  v18 = *(void **)(a2 + 208);
  v19 = *(void **)(a1 + 208);
  *(_QWORD *)(a1 + 208) = v18;
  v20 = v18;

  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  v21 = *(void **)(a2 + 232);
  v22 = *(void **)(a1 + 232);
  *(_QWORD *)(a1 + 232) = v21;
  v23 = v21;

  v24 = *(void **)(a2 + 240);
  v25 = *(void **)(a1 + 240);
  *(_QWORD *)(a1 + 240) = v24;
  v26 = v24;

  v27 = *(void **)(a2 + 248);
  v28 = *(void **)(a1 + 248);
  *(_QWORD *)(a1 + 248) = v27;
  v29 = v27;

  v30 = *(void **)(a2 + 256);
  v31 = *(void **)(a1 + 256);
  *(_QWORD *)(a1 + 256) = v30;
  v32 = v30;

  v33 = *(void **)(a2 + 264);
  v34 = *(void **)(a1 + 264);
  *(_QWORD *)(a1 + 264) = v33;
  v35 = v33;

  v36 = *(void **)(a2 + 272);
  v37 = *(void **)(a1 + 272);
  *(_QWORD *)(a1 + 272) = v36;
  v38 = v36;

  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  v39 = *(void **)(a2 + 328);
  v40 = *(void **)(a1 + 328);
  *(_QWORD *)(a1 + 328) = v39;
  v41 = v39;

  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  v42 = *(void **)(a2 + 344);
  v43 = *(void **)(a1 + 344);
  *(_QWORD *)(a1 + 344) = v42;
  v44 = v42;

  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
  v45 = *(void **)(a2 + 376);
  v46 = *(void **)(a1 + 376);
  *(_QWORD *)(a1 + 376) = v45;
  v47 = v45;

  v48 = *(void **)(a2 + 384);
  v49 = *(void **)(a1 + 384);
  *(_QWORD *)(a1 + 384) = v48;
  v50 = v48;

  *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
  *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
  *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
  *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
  *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
  *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
  *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
  *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
  v51 = *(void **)(a2 + 456);
  v52 = *(void **)(a1 + 456);
  *(_QWORD *)(a1 + 456) = v51;
  v53 = v51;

  *(_QWORD *)(a1 + 464) = *(_QWORD *)(a2 + 464);
  *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
  *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
  *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
  *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
  *(_QWORD *)(a1 + 504) = *(_QWORD *)(a2 + 504);
  *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
  *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
  *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
  *(_BYTE *)(a1 + 536) = *(_BYTE *)(a2 + 536);
  return a1;
}

void *__swift_memcpy537_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x219uLL);
}

uint64_t _s5SpecsVwta(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  __int128 v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  __int128 v22;
  void *v23;
  __int128 v24;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v4 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v4;
  v5 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v5;
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  v6 = *(_QWORD *)(a2 + 168);
  v7 = *(void **)(a1 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v6;

  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  v8 = *(void **)(a1 + 192);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);

  v9 = *(void **)(a1 + 200);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);

  v10 = *(void **)(a1 + 208);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);

  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  v11 = *(void **)(a1 + 232);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);

  v12 = *(void **)(a1 + 240);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);

  v13 = *(void **)(a1 + 248);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);

  v14 = *(void **)(a1 + 256);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);

  v15 = *(void **)(a1 + 264);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);

  v16 = *(void **)(a1 + 272);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);

  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  v17 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v17;
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  v18 = *(void **)(a1 + 328);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);

  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  v19 = *(void **)(a1 + 344);
  *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);

  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
  v20 = *(void **)(a1 + 376);
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);

  v21 = *(void **)(a1 + 384);
  *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);

  *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
  v22 = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 416) = v22;
  *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
  *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
  v23 = *(void **)(a1 + 456);
  *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);

  *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
  *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
  *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
  v24 = *(_OWORD *)(a2 + 512);
  *(_OWORD *)(a1 + 496) = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 512) = v24;
  *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
  *(_BYTE *)(a1 + 536) = *(_BYTE *)(a2 + 536);
  return a1;
}

uint64_t _s5SpecsVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 537))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 168);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s5SpecsVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 536) = 0;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 537) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 168) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 537) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SyncedLyricsViewController.Specs()
{
  return &type metadata for SyncedLyricsViewController.Specs;
}

uint64_t _s5SpecsV20SelectedLinePositionOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7F && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 127);
  v3 = (*(_BYTE *)(a1 + 32) & 0x7E | (*(unsigned __int8 *)(a1 + 32) >> 7)) ^ 0x7F;
  if (v3 >= 0x7E)
    v3 = -1;
  return v3 + 1;
}

uint64_t _s5SpecsV20SelectedLinePositionOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 127;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
    {
      *(_OWORD *)result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(_BYTE *)(result + 32) = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
    }
  }
  return result;
}

uint64_t sub_E088C0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32) >> 7;
}

uint64_t sub_E088CC(uint64_t result)
{
  *(_BYTE *)(result + 32) &= ~0x80u;
  return result;
}

uint64_t sub_E088DC(uint64_t result, char a2)
{
  *(_BYTE *)(result + 32) = *(_BYTE *)(result + 32) & 1 | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for SyncedLyricsViewController.Specs.SelectedLinePosition()
{
  return &type metadata for SyncedLyricsViewController.Specs.SelectedLinePosition;
}

uint64_t _s5SpecsV27CustomCurveAnimationFactoryCMa()
{
  return objc_opt_self(_TtCVC11MusicCoreUI26SyncedLyricsViewController5SpecsP33_24E29E585AB6D5A617C4CD1FBB85399D27CustomCurveAnimationFactory);
}

uint64_t sub_E08920()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t block_copy_helper_343(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double block_destroy_helper_343(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

id sub_E08968(void *a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  char *v4;
  void *v5;
  void *v6;

  v2 = *(void **)(v1 + 16);
  v3 = *(void **)(v1 + 24);
  v4 = (char *)objc_msgSend(a1, "accessibilityContrast");
  if (v4 == (_BYTE *)&dword_0 + 1)
    v5 = v2;
  else
    v5 = v3;
  if (v4 == (char *)-1)
    v6 = v3;
  else
    v6 = v5;
  return v6;
}

_QWORD *sub_E08A10(uint64_t a1)
{
  uint64_t v2;
  _QWORD *result;
  void **v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = _swiftEmptyArrayStorage;
  if (v2)
  {
    specialized ContiguousArray.reserveCapacity(_:)(v2);
    v4 = (void **)(a1 + 32);
    do
    {
      v5 = *v4;
      v4 += 2;
      v6 = v5;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v6);
      v7 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v7);
      v8 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v7, v6);
      specialized ContiguousArray._endMutation()(v8);
      --v2;
    }
    while (v2);
    return _swiftEmptyArrayStorage;
  }
  return result;
}

BOOL sub_E08ABC(_BOOL8 result, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t i;
  uint64_t v5;
  int v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v3 = result;
  if (*(_BYTE *)(a2 + 32) == result)
    return 1;
  if (v2 == 1)
    return 0;
  for (i = 33; ; ++i)
  {
    v5 = i - 31;
    if (__OFADD__(i - 32, 1))
      break;
    v6 = *(unsigned __int8 *)(a2 + i);
    result = v6 == v3;
    if (v6 == v3 || v5 == v2)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_E08B1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  id v6;
  void *v7;
  char v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  id v16;
  char v17;
  uint64_t v18;

  if ((unint64_t)a2 >> 62)
    goto LABEL_20;
  v4 = *(_QWORD *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  for (; v4; v4 = _CocoaArrayWrapper.endIndex.getter(v18))
  {
    v5 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      v6 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
LABEL_5:
      v7 = v6;
      type metadata accessor for SyncedLyricsLineView();
      v8 = static NSObject.== infix(_:_:)(v7, a1);

      if ((v8 & 1) != 0)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v4 == 1)
        goto LABEL_18;
      if (v5)
        break;
      v5 = 5;
      while (1)
      {
        v15 = v5 - 3;
        if (__OFADD__(v5 - 4, 1))
          break;
        v16 = *(id *)(a2 + 8 * v5);
        v17 = static NSObject.== infix(_:_:)(v16, a1);

        if ((v17 & 1) != 0)
          goto LABEL_6;
        ++v5;
        if (v15 == v4)
          goto LABEL_18;
      }
      __break(1u);
    }
    v10 = 1;
    while (1)
    {
      v11 = specialized _ArrayBuffer._getElementSlowPath(_:)(v10, a2);
      v12 = v10 + 1;
      if (__OFADD__(v10, 1))
        break;
      v13 = v11;
      v14 = static NSObject.== infix(_:_:)(v11, a1);
      swift_unknownObjectRelease(v13);
      if ((v14 & 1) != 0)
        goto LABEL_6;
      ++v10;
      if (v12 == v4)
        goto LABEL_18;
    }
    __break(1u);
LABEL_20:
    if (a2 < 0)
      v18 = a2;
    else
      v18 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_E08C90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  if (*(_QWORD *)(a2 + 32) == a1)
    return 0;
  result = 0;
  v5 = v2 - 1;
  while (v5 != result)
  {
    v6 = *(_QWORD *)(a2 + 40 + 8 * result++);
    if (v6 == a1)
      return result;
  }
  return 0;
}

void sub_E08CF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  id v5;
  void *v6;
  char v7;
  uint64_t i;
  id v9;
  void *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;

  if ((unint64_t)a2 >> 62)
    goto LABEL_20;
  v4 = *(_QWORD *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFF8));
  if (v4)
  {
    while (1)
    {
      if ((a2 & 0xC000000000000001) != 0)
      {
        v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
      }
      else
      {
        if (!*(_QWORD *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFF8)))
        {
          __break(1u);
          return;
        }
        v5 = *(id *)(a2 + 32);
      }
      v6 = v5;
      type metadata accessor for SyncedLyricsLineView();
      v7 = static NSObject.== infix(_:_:)(v6, a1);

      if ((v7 & 1) == 0)
      {
        for (i = 0; ; ++i)
        {
          v12 = i + 1;
          if (__OFADD__(i, 1))
            break;
          if (v12 == v4)
            return;
          if ((a2 & 0xC000000000000001) != 0)
          {
            v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i + 1, a2);
          }
          else
          {
            if ((v12 & 0x8000000000000000) != 0)
              goto LABEL_18;
            if (v12 >= *(_QWORD *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFFF8)))
              goto LABEL_19;
            v9 = *(id *)(a2 + 32 + 8 * v12);
          }
          v10 = v9;
          v11 = static NSObject.== infix(_:_:)(v9, a1);

          if ((v11 & 1) != 0)
            return;
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        v13 = a2 < 0 ? a2 : a2 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        v4 = _CocoaArrayWrapper.endIndex.getter(v13);
        swift_bridgeObjectRelease();
        if (v4)
          continue;
      }
      return;
    }
  }
}

uint64_t sub_E08E7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD v20[4];

  v6 = type metadata accessor for TaskPriority(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6);
  if ((_DWORD)v8 == 1)
  {
    sub_56024(a1, &qword_15085D0);
    v9 = 7168;
    v10 = *(_QWORD *)(a3 + 16);
    if (v10)
    {
LABEL_3:
      v11 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v10);
      v13 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v11);
      v15 = v14;
      swift_unknownObjectRelease(v10);
      goto LABEL_6;
    }
  }
  else
  {
    v16 = TaskPriority.rawValue.getter(v8);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    v9 = v16 | 0x1C00;
    v10 = *(_QWORD *)(a3 + 16);
    if (v10)
      goto LABEL_3;
  }
  v13 = 0;
  v15 = 0;
LABEL_6:
  v17 = swift_allocObject(&unk_13C7A80, 32, 7);
  *(_QWORD *)(v17 + 16) = a2;
  *(_QWORD *)(v17 + 24) = a3;
  if (v15 | v13)
  {
    v20[0] = 0;
    v20[1] = 0;
    v18 = v20;
    v20[2] = v13;
    v20[3] = v15;
  }
  else
  {
    v18 = 0;
  }
  return swift_task_create(v9, v18, (char *)&type metadata for () + 8, &unk_1508848, v17);
}

uint64_t sub_E08FC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_E09000(a1, a2, a3, (uint64_t)&unk_13C7710, &qword_15087D0, (uint64_t)&unk_15087C8);
}

uint64_t sub_E08FE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_E09000(a1, a2, a3, (uint64_t)&unk_13C7328, &qword_1508780, (uint64_t)&unk_1508778);
}

uint64_t sub_E09000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD v27[4];

  v12 = type metadata accessor for TaskPriority(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(a1, 1, v12);
  if ((_DWORD)v14 == 1)
  {
    sub_56024(a1, &qword_15085D0);
    v15 = 7168;
    v16 = *(_QWORD *)(a3 + 16);
    if (v16)
    {
LABEL_3:
      v17 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v16);
      v19 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v17);
      v21 = v20;
      swift_unknownObjectRelease(v16);
      goto LABEL_6;
    }
  }
  else
  {
    v22 = TaskPriority.rawValue.getter(v14);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a1, v12);
    v15 = v22 | 0x1C00;
    v16 = *(_QWORD *)(a3 + 16);
    if (v16)
      goto LABEL_3;
  }
  v19 = 0;
  v21 = 0;
LABEL_6:
  v23 = swift_allocObject(a4, 32, 7);
  *(_QWORD *)(v23 + 16) = a2;
  *(_QWORD *)(v23 + 24) = a3;
  v24 = __swift_instantiateConcreteTypeFromMangledName(a5);
  if (v21 | v19)
  {
    v27[0] = 0;
    v27[1] = 0;
    v25 = v27;
    v27[2] = v19;
    v27[3] = v21;
  }
  else
  {
    v25 = 0;
  }
  return swift_task_create(v15, v25, v24, a6, v23);
}

uint64_t SyncedLyricsSharingTransitionInfo.line.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_E09168(v1, a1);
}

uint64_t sub_E09168(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for Lyrics.TextLine(a2, a1);
  return a2;
}

uint64_t SyncedLyricsSharingTransitionInfo.line.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_E091AC(a1, v1);
}

uint64_t sub_E091AC(uint64_t a1, uint64_t a2)
{
  assignWithTake for Lyrics.TextLine(a2, a1);
  return a2;
}

id JSBridge.Singletons.restrictions.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 104);
}

void SyncedLyricsSharingTransitionInfo.initialView.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 104) = a1;
}

uint64_t SyncedLyricsSharingTransitionInfo.alignment.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 112) = result;
  return result;
}

double SyncedLyricsSharingTransitionInfo.frame.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 120);
}

void SyncedLyricsSharingTransitionInfo.frame.setter(double a1, double a2, double a3, double a4)
{
  double *v4;

  v4[15] = a1;
  v4[16] = a2;
  v4[17] = a3;
  v4[18] = a4;
}

double (*SyncedLyricsSharingTransitionInfo.frame.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

uint64_t SyncedLyricsSharingTransitionInfo.isSelected.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 152);
}

uint64_t SyncedLyricsSharingTransitionInfo.isSelected.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 152) = result;
  return result;
}

__n128 SyncedLyricsSharingTransitionInfo.transform.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v2;
  __n128 result;

  v2 = *(_OWORD *)(v1 + 176);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 160);
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(v1 + 192);
  *(__n128 *)(a1 + 32) = result;
  return result;
}

__n128 SyncedLyricsSharingTransitionInfo.transform.setter(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  __n128 result;

  v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 160) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 176) = v2;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v1 + 192) = result;
  return result;
}

uint64_t SyncedLyricsSharingTransitionInfo.transitionWillBeginHandler.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 208);
  swift_retain(*(_QWORD *)(v0 + 216));
  return v1;
}

void SyncedLyricsSharingTransitionInfo.transitionWillBeginHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_release(*(_QWORD *)(v2 + 216));
  *(_QWORD *)(v2 + 208) = a1;
  *(_QWORD *)(v2 + 216) = a2;
}

uint64_t SyncedLyricsSharingTransitionInfo.transitionCompletionHandler.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 224);
  swift_retain(*(_QWORD *)(v0 + 232));
  return v1;
}

void SyncedLyricsSharingTransitionInfo.transitionCompletionHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_release(*(_QWORD *)(v2 + 232));
  *(_QWORD *)(v2 + 224) = a1;
  *(_QWORD *)(v2 + 232) = a2;
}

double (*SyncedLyricsSharingTransitionInfo.transitionCompletionHandler.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

uint64_t SyncedLyricsViewController.isPlayingSpatial.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isPlayingSpatial);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isPlayingSpatial, v3, 0, 0);
  return *v1;
}

void SyncedLyricsViewController.isPlayingSpatial.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v6[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isPlayingSpatial);
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isPlayingSpatial, v6, 1, 0);
  *v3 = a1;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager);
  if (v4)
  {
    swift_beginAccess(v4 + 88, &v5, 1, 0);
    *(_BYTE *)(v4 + 88) = a1 & 1;
  }
}

void (*SyncedLyricsViewController.isPlayingSpatial.modify(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isPlayingSpatial;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  return sub_E09468;
}

void sub_E09468(_QWORD *a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = (_QWORD *)*a1;
  swift_endAccess(*a1);
  if ((a2 & 1) == 0)
  {
    v4 = v3[3];
    v5 = *(_QWORD *)(v4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager);
    if (v5)
    {
      v6 = *(_BYTE *)(v4 + v3[4]);
      swift_beginAccess(v5 + 88, v3, 1, 0);
      *(_BYTE *)(v5 + 88) = v6;
    }
  }
  free(v3);
}

uint64_t SyncedLyricsViewController.isFullScreen.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isFullScreen);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isFullScreen, v3, 0, 0);
  return *v1;
}

void SyncedLyricsViewController.isFullScreen.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  _BYTE v4[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isFullScreen);
  swift_beginAccess(v3, v4, 1, 0);
  *v3 = a1;
}

uint64_t (*SyncedLyricsViewController.isFullScreen.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isFullScreen, a1, 33, 0);
  return j__swift_endAccess;
}

double SyncedLyricsViewController.bottomTapAreaHeight.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_bottomTapAreaHeight;
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_bottomTapAreaHeight, v3, 0, 0);
  return *(double *)v1;
}

void SyncedLyricsViewController.bottomTapAreaHeight.setter(double a1)
{
  uint64_t v1;
  double *v3;
  _BYTE v4[24];

  v3 = (double *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_bottomTapAreaHeight);
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_bottomTapAreaHeight, v4, 1, 0);
  *v3 = a1;
}

uint64_t (*SyncedLyricsViewController.bottomTapAreaHeight.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_bottomTapAreaHeight, a1, 33, 0);
  return j_j__swift_endAccess;
}

double SyncedLyricsViewController.containerHeight.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight;
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight, v3, 0, 0);
  return *(double *)v1;
}

void SyncedLyricsViewController.containerHeight.setter(double a1)
{
  uint64_t v1;
  double *v3;
  double v4;
  _BYTE v5[24];

  v3 = (double *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight);
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;
  if (v4 != a1)
    sub_E0DE64();
}

void (*SyncedLyricsViewController.containerHeight.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight;
  v3[4] = v1;
  v3[5] = v4;
  v5 = (_QWORD *)(v1 + v4);
  swift_beginAccess(v1 + v4, v3, 1, 0);
  v3[3] = *v5;
  return sub_E0978C;
}

void sub_E0978C(uint64_t a1)
{
  void *v1;
  double v2;
  uint64_t v3;
  uint64_t v4;
  double v5;

  v1 = *(void **)a1;
  v2 = *(double *)(*(_QWORD *)a1 + 24);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  v5 = *(double *)(v4 + v3);
  *(double *)(v4 + v3) = v2;
  if (v2 != v5)
    sub_E0DE64();
  free(v1);
}

void sub_E097D0(uint64_t a1)
{
  char *v1;
  char *v2;
  unsigned __int8 *v4;
  char v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *i;
  char *v11;
  char *v12;
  void **v13;
  void (*v14)(__int128 *, char);
  void **v15;
  void *v16;
  _QWORD *v17;
  uint64_t ObjectType;
  uint64_t v19;
  char *v20;
  void (*v21)(_BYTE *, uint64_t, _QWORD *);
  id v22;
  void *v23;
  uint64_t v24;
  unsigned __int8 *v25;
  unint64_t v26;
  uint64_t v27;
  _BYTE v28[32];
  _BYTE v29[544];
  _BYTE v30[544];
  char v31[24];
  char v32[24];
  _BYTE v33[544];
  _BYTE __dst[552];

  v2 = v1;
  if (objc_msgSend(v2, "isViewLoaded"))
  {
    v4 = (unsigned __int8 *)&v2[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
    swift_beginAccess(&v2[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs], v32, 0, 0);
    memcpy(__dst, v4, 0x219uLL);
    sub_533134((uint64_t)__dst);
    v5 = _s11MusicCoreUI26SyncedLyricsViewControllerC5SpecsV23__derived_struct_equalsySbAE_AEtFZ_0((uint64_t)__dst, a1);
    sub_532E70((uint64_t)__dst);
    if ((v5 & 1) == 0)
    {
      sub_E0DE64();
      objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView], "setShowsVerticalScrollIndicator:", v4[536]);
      v6 = (uint64_t *)&v2[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
      swift_beginAccess(&v2[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews], v31, 0, 0);
      v7 = *v6;
      if ((unint64_t)*v6 >> 62)
      {
        if (v7 < 0)
          v24 = *v6;
        else
          v24 = v7 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        v8 = _CocoaArrayWrapper.endIndex.getter(v24);
        if (v8)
          goto LABEL_5;
      }
      else
      {
        v8 = *(_QWORD *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFF8));
        swift_bridgeObjectRetain();
        if (v8)
        {
LABEL_5:
          v27 = v8 - 1;
          if (v8 < 1)
          {
            __break(1u);
            return;
          }
          v9 = 0;
          v25 = v4;
          v26 = v7 & 0xC000000000000001;
          if ((v7 & 0xC000000000000001) == 0)
            goto LABEL_8;
LABEL_7:
          for (i = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v7);
                ;
                i = (char *)*(id *)(v7 + 8 * v9 + 32))
          {
            v11 = i;
            memcpy(v29, v4, 0x219uLL);
            v12 = &v11[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs];
            memcpy(v30, &v11[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs], 0x219uLL);
            memmove(&v11[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs], v4, 0x219uLL);
            sub_533134((uint64_t)v29);
            sub_533134((uint64_t)v29);
            sub_532E70((uint64_t)v30);
            v14 = sub_E01124((uint64_t)v28);
            if (*v13)
            {
              v15 = v13;
              memcpy(v33, v12, 0x219uLL);
              v16 = *v15;
              v17 = v15[1];
              ObjectType = swift_getObjectType();
              v19 = v7;
              v20 = v2;
              v21 = (void (*)(_BYTE *, uint64_t, _QWORD *))v17[2];
              sub_533134((uint64_t)v33);
              v22 = v16;
              v21(v33, ObjectType, v17);
              v2 = v20;
              v7 = v19;
              v23 = *v15;
              *v15 = v16;
              v15[1] = v17;

            }
            v14((__int128 *)v28, 0);
            sub_532E70((uint64_t)v29);
            sub_E0F124(v11);

            if (v27 == v9)
              break;
            ++v9;
            v4 = v25;
            if (v26)
              goto LABEL_7;
LABEL_8:
            ;
          }
        }
      }
      swift_bridgeObjectRelease();
    }
  }
}

void *SyncedLyricsViewController.specs.getter@<X0>(void *a1@<X8>)
{
  uint64_t v1;
  const void *v3;
  _BYTE v5[24];
  _BYTE __dst[544];

  v3 = (const void *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs);
  swift_beginAccess(v3, v5, 0, 0);
  memcpy(__dst, v3, 0x219uLL);
  sub_533134((uint64_t)__dst);
  return memcpy(a1, __dst, 0x219uLL);
}

uint64_t SyncedLyricsViewController.specs.setter(const void *a1)
{
  uint64_t v1;
  void *v3;
  _BYTE v5[24];
  _BYTE __dst[544];
  _BYTE v7[544];

  v3 = (void *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs);
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs, v5, 1, 0);
  memcpy(__dst, v3, 0x219uLL);
  memcpy(v7, v3, 0x219uLL);
  memcpy(v3, a1, 0x219uLL);
  sub_533134((uint64_t)__dst);
  sub_533134((uint64_t)a1);
  sub_532E70((uint64_t)v7);
  sub_E097D0((uint64_t)__dst);
  sub_532E70((uint64_t)a1);
  return sub_532E70((uint64_t)__dst);
}

void (*SyncedLyricsViewController.specs.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  const void *v5;

  v3 = malloc(0xF08uLL);
  *a1 = v3;
  v3[479] = v1;
  v4 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs;
  v3[480] = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs;
  v5 = (const void *)(v1 + v4);
  swift_beginAccess(v5, v3 + 476, 1, 0);
  memcpy(v3, v5, 0x219uLL);
  memcpy(v3 + 204, v5, 0x219uLL);
  sub_533134((uint64_t)v3);
  return sub_E09C28;
}

void sub_E09C28(uint64_t a1, char a2)
{
  _QWORD *v2;
  const void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;

  v2 = *(_QWORD **)a1;
  v3 = (const void *)(*(_QWORD *)a1 + 1632);
  v4 = (void *)(*(_QWORD *)a1 + 2176);
  v5 = (void *)(*(_QWORD *)a1 + 2720);
  if ((a2 & 1) != 0)
  {
    v6 = (void *)(v2[479] + v2[480]);
    memcpy(v2 + 408, v3, 0x219uLL);
    memcpy(v2 + 68, v6, 0x219uLL);
    memcpy(v5, v6, 0x219uLL);
    memcpy(v6, v3, 0x219uLL);
    sub_533134((uint64_t)(v2 + 408));
    sub_533134((uint64_t)(v2 + 408));
    sub_533134((uint64_t)(v2 + 68));
    sub_532E70((uint64_t)v5);
    sub_E097D0((uint64_t)(v2 + 68));
    sub_532E70((uint64_t)(v2 + 408));
    sub_532E70((uint64_t)(v2 + 68));
    memcpy(v4, v3, 0x219uLL);
    v7 = (uint64_t)v4;
  }
  else
  {
    v8 = (void *)(v2[479] + v2[480]);
    memcpy((void *)(*(_QWORD *)a1 + 2176), v3, 0x219uLL);
    memcpy(v2 + 136, v8, 0x219uLL);
    memcpy(v5, v8, 0x219uLL);
    memcpy(v8, v3, 0x219uLL);
    sub_533134((uint64_t)(v2 + 136));
    sub_533134((uint64_t)v4);
    sub_532E70((uint64_t)v5);
    sub_E097D0((uint64_t)(v2 + 136));
    sub_532E70((uint64_t)v4);
    v7 = (uint64_t)(v2 + 136);
  }
  sub_532E70(v7);
  free(v2);
}

uint64_t SyncedLyricsViewController.delegate.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate;
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate, v3, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v1);
}

double SyncedLyricsViewController.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  double result;
  _BYTE v7[24];

  v5 = v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate;
  swift_beginAccess(v5, v7, 1, 0);
  *(_QWORD *)(v5 + 8) = a2;
  swift_unknownObjectWeakAssign(v5, a1);
  *(_QWORD *)&result = swift_unknownObjectRelease(a1).n128_u64[0];
  return result;
}

void (*SyncedLyricsViewController.delegate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = Strong;
  v3[4] = v7;
  return sub_96AA9C;
}

uint64_t SyncedLyricsViewController.mode.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode, v3, 0, 0);
  return *v1;
}

void sub_E09F00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v4;
  _QWORD *v5;
  void *v6;
  _QWORD *v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  void *v27;
  void *v28;
  _BYTE v29[24];
  _BYTE v30[24];
  _BYTE v31[24];
  _BYTE v32[24];
  _BYTE v33[24];
  _BYTE v34[24];
  _BYTE v35[24];

  v2 = v1;
  v4 = (uint64_t *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics);
  swift_beginAccess(v4, v35, 0, 0);
  if (*v4)
  {
    if (a1 && *v4 == a1)
      return;
  }
  else if (!a1)
  {
    return;
  }
  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews);
  swift_beginAccess(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews, v34, 1, 0);
  *v5 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
    && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    sub_DD1750((uint64_t)_swiftEmptyArrayStorage);
    v6 = v28;
  }
  else
  {
    v6 = &_swiftEmptySetSingleton;
  }
  v7 = (_QWORD *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_blurredLineViews);
  swift_beginAccess(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_blurredLineViews, v33, 1, 0);
  *v7 = v6;
  *(_QWORD *)&v8 = swift_bridgeObjectRelease().n128_u64[0];
  v9 = *v4;
  if (*v4)
  {
    v10 = swift_allocObject(&unk_13C7118, 24, 7);
    swift_unknownObjectWeakInit(v10 + 16);
    v11 = (_QWORD *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs);
    swift_beginAccess(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs, v32, 0, 0);
    v12 = v11[66];
    v13 = v11[19];
    v14 = v11[20];
    v15 = (char *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isPlayingSpatial);
    swift_beginAccess(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isPlayingSpatial, v31, 0, 0);
    v16 = *v15;
    v17 = type metadata accessor for SyncedLyricsManager();
    v18 = swift_allocObject(v17, 152, 7);
    *(_QWORD *)(v18 + 72) = 0;
    v19 = swift_unknownObjectWeakInit(v18 + 64);
    *(_QWORD *)(v18 + 80) = _swiftEmptyArrayStorage;
    *(_OWORD *)(v18 + 96) = 0u;
    *(_OWORD *)(v18 + 112) = 0u;
    *(_OWORD *)(v18 + 128) = 0u;
    *(_QWORD *)(v18 + 144) = 0;
    *(_QWORD *)(v18 + 16) = v9;
    *(_QWORD *)(v18 + 24) = sub_E19354;
    *(_QWORD *)(v18 + 32) = v10;
    *(_QWORD *)(v18 + 40) = v12;
    *(_QWORD *)(v18 + 48) = v13;
    *(_QWORD *)(v18 + 56) = v14;
    swift_beginAccess(v19, v30, 1, 0);
    *(_QWORD *)(v18 + 72) = &protocol witness table for SyncedLyricsViewController;
    swift_unknownObjectWeakAssign(v18 + 64, v2);
    *(_BYTE *)(v18 + 88) = v16;
    v20 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager;
    *(_QWORD *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager) = v18;
    swift_retain_n(v9, 2);
    swift_retain();
    swift_release();
    sub_E15300();
    sub_E0F330(v9);
    v21 = *(_QWORD *)(v2 + v20);
    if (v21)
    {
      v22 = swift_allocObject(&unk_13C7118, 24, 7);
      swift_unknownObjectWeakInit(v22 + 16);
      swift_beginAccess(v21 + 96, v29, 1, 0);
      v23 = *(_QWORD *)(v21 + 96);
      v24 = *(_QWORD *)(v21 + 104);
      *(_QWORD *)(v21 + 96) = sub_E192C4;
      *(_QWORD *)(v21 + 104) = v22;
      swift_retain();
      swift_retain_n(v22, 2);
      sub_5C198(v23, v24);
      sub_E03ED0();
      swift_release_n(v22, 2);
      swift_release();
    }
    v25 = *(void **)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink);
    if (v25)
    {
      v26 = v25;
      objc_msgSend(v26, "setPaused:", sub_E102CC() & 1);
      swift_release();

    }
    else
    {
      swift_release();
    }
  }
  else
  {
    v27 = *(void **)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink);
    if (v27)
      objc_msgSend(v27, "setPaused:", 1, v8);
    *(_QWORD *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager) = 0;
  }
  swift_release();
}

double sub_E0A26C(uint64_t a1, double a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  double v7;
  double v8;
  double v9;
  id v10;
  void *v11;
  double v12;
  double v13;
  uint64_t v15;
  _BYTE v16[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (!Strong)
    return 0.0;
  v5 = (void *)Strong;
  v6 = Strong + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics;
  swift_beginAccess(Strong + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics, &v15, 0, 0);
  if (*(_QWORD *)v6 && *(_BYTE *)(*(_QWORD *)v6 + 56) == 2)
  {
    v7 = (a2 + -0.2) / 0.55;
    if (a2 > 0.75)
      v7 = 1.0;
    if (a2 < 0.2)
      v7 = 0.0;
    v8 = (1.0 - v7) * 0.12 + 0.78;
    v9 = v7 * 0.27 + 0.48;
    sub_4E684(0, &qword_15084D0, UISpringTimingParameters_ptr);
    v10 = UISpringTimingParameters.init(dampingRatio:response:)(v8, v9);
  }
  else
  {
    v10 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 100.0, 18.0, 0.0, 0.0);
  }
  v11 = v10;

  objc_msgSend(v11, "settlingDuration");
  v13 = v12;

  return v13;
}

uint64_t SyncedLyricsViewController.lyrics.getter()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics, v3, 0, 0);
  return swift_retain(*v1);
}

double SyncedLyricsViewController.lyrics.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  double result;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics);
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  swift_retain();
  sub_E09F00(v4);
  swift_release();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void (*SyncedLyricsViewController.lyrics.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics;
  v3[4] = v1;
  v3[5] = v4;
  v5 = (_QWORD *)(v1 + v4);
  swift_beginAccess(v1 + v4, v3, 1, 0);
  v3[3] = *v5;
  swift_retain();
  return sub_E0A51C;
}

void sub_E0A51C(uint64_t a1, char a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  v6 = *(_QWORD *)(v5 + v4);
  *(_QWORD *)(v5 + v4) = v3;
  if ((a2 & 1) != 0)
  {
    swift_retain_n(v3, 2);
    sub_E09F00(v6);
    swift_release();
  }
  else
  {
    swift_retain();
    sub_E09F00(v6);
  }
  swift_release();
  swift_release();
  free(v2);
}

void sub_E0A5B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double (*v7)(void);
  double v8;
  uint64_t v9;
  uint64_t v10;
  double (*v11)(void);
  double v12;
  _BYTE *v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[24];
  _QWORD v30[3];
  uint64_t v31;
  uint64_t v32;

  v2 = v1;
  v4 = v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider;
  swift_beginAccess(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider, v29, 0, 0);
  sub_E0E210(v4, (uint64_t)&v26);
  if (v27)
  {
    sub_8B15C(&v26, (uint64_t)v30);
    sub_E0E210(a1, (uint64_t)&v26);
    v5 = v27;
    if (v27)
    {
      v6 = v28;
      __swift_project_boxed_opaque_existential_1(&v26, v27);
      v7 = (double (*)(void))(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
      v8 = v7();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1(&v26);
      v9 = v31;
      v10 = v32;
      __swift_project_boxed_opaque_existential_1(v30, v31);
      v11 = (double (*)(void))(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
      v12 = v11();
      swift_release();
      if (vabdd_f64(v8, v12) <= 0.5)
      {
        v13 = (_BYTE *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode);
        swift_beginAccess(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode, &v25, 0, 0);
        if (*v13 != 2)
        {
          v14 = *(void **)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink);
          if (v14)
          {
            v15 = v14;
            objc_msgSend(v15, "setPaused:", sub_E102CC() & 1);

          }
          __swift_destroy_boxed_opaque_existential_1(v30);
          return;
        }
      }
    }
    else
    {
      sub_56024((uint64_t)&v26, &qword_15085C0);
    }
    v19 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager);
    if (v19)
    {
      v20 = swift_allocObject(&unk_13C7118, 24, 7);
      swift_unknownObjectWeakInit(v20 + 16);
      swift_beginAccess(v19 + 96, &v26, 1, 0);
      v21 = *(_QWORD *)(v19 + 96);
      v22 = *(_QWORD *)(v19 + 104);
      *(_QWORD *)(v19 + 96) = sub_E192C4;
      *(_QWORD *)(v19 + 104) = v20;
      swift_retain();
      swift_retain_n(v20, 2);
      sub_5C198(v21, v22);
      sub_E03ED0();
      swift_release_n(v20, 2);
      swift_release();
    }
    __swift_destroy_boxed_opaque_existential_1(v30);
  }
  else
  {
    sub_56024((uint64_t)&v26, &qword_15085C0);
    v16 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager);
    if (v16)
    {
      swift_beginAccess(v16 + 96, v30, 1, 0);
      v17 = *(_QWORD *)(v16 + 96);
      v18 = *(_QWORD *)(v16 + 104);
      *(_QWORD *)(v16 + 96) = 0;
      *(_QWORD *)(v16 + 104) = 0;
      swift_retain();
      sub_5C198(v17, v18);
      sub_E03ED0();
      swift_release();
    }
  }
  v23 = *(void **)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink);
  if (v23)
  {
    v24 = v23;
    objc_msgSend(v24, "setPaused:", sub_E102CC() & 1);

  }
}

double sub_E0A87C(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  double v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  double (*v12)(uint64_t);
  uint64_t v13;
  _BYTE v16[24];
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v20, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  v3 = 0.0;
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = Strong + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider;
    swift_beginAccess(Strong + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider, v16, 0, 0);
    sub_E0E210(v5, (uint64_t)v17);

    v6 = v18;
    if (v18)
    {
      v7 = v19;
      __swift_project_boxed_opaque_existential_1(v17, v18);
      v8 = *(_QWORD *)(v6 - 8);
      v9 = __chkstk_darwin();
      v11 = &v16[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
      (*(void (**)(char *, double))(v8 + 16))(v11, v9);
      sub_56024((uint64_t)v17, &qword_15085C0);
      v12 = (double (*)(uint64_t))(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
      v13 = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v6);
      v3 = v12(v13);
      swift_release();
    }
    else
    {
      sub_56024((uint64_t)v17, &qword_15085C0);
    }
  }
  return v3;
}

uint64_t SyncedLyricsViewController.timingProvider.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_E0E210(v3, a1);
}

uint64_t SyncedLyricsViewController.timingProvider.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];
  _BYTE v6[24];
  _BYTE v7[40];

  v3 = v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider;
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider, v6, 0, 0);
  sub_E0E210(v3, (uint64_t)v7);
  swift_beginAccess(v3, v5, 33, 0);
  sub_E0E258(a1, v3);
  swift_endAccess(v5);
  sub_E0A5B0((uint64_t)v7);
  sub_56024(a1, &qword_15085C0);
  return sub_56024((uint64_t)v7, &qword_15085C0);
}

void (*SyncedLyricsViewController.timingProvider.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0xB8uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider;
  v3[21] = v1;
  v3[22] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3 + 18, 0, 0);
  sub_E0E210(v5, (uint64_t)v3);
  return sub_E0AB3C;
}

void sub_E0AB3C(uint64_t *a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = (_QWORD *)*a1;
  v3 = *a1 + 40;
  v4 = *a1 + 80;
  if ((a2 & 1) != 0)
  {
    v5 = v2[21] + v2[22];
    sub_E0E210(*a1, v3);
    sub_E0E210(v5, v4);
    swift_beginAccess(v5, v2 + 15, 33, 0);
    sub_E0E258(v3, v5);
    swift_endAccess(v2 + 15);
    sub_E0A5B0(v4);
    sub_56024(v3, &qword_15085C0);
    sub_56024(v4, &qword_15085C0);
    v6 = (uint64_t)v2;
  }
  else
  {
    v7 = v2[21] + v2[22];
    sub_E0E210(v7, v3);
    swift_beginAccess(v7, v4, 33, 0);
    sub_E0E258((uint64_t)v2, v7);
    swift_endAccess(v4);
    sub_E0A5B0(v3);
    sub_56024((uint64_t)v2, &qword_15085C0);
    v6 = v3;
  }
  sub_56024(v6, &qword_15085C0);
  free(v2);
}

uint64_t SyncedLyricsViewController.shareHandler.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_shareHandler);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_shareHandler, v4, 0, 0);
  v2 = *v1;
  sub_A9DEC(*v1, v1[1]);
  return v2;
}

uint64_t SyncedLyricsViewController.shareHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_shareHandler);
  swift_beginAccess(v5, v9, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return sub_5C198(v6, v7);
}

uint64_t (*SyncedLyricsViewController.shareHandler.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_shareHandler, a1, 33, 0);
  return j_j__swift_endAccess;
}

Swift::Void __swiftcall SyncedLyricsViewController.viewDidLoad()()
{
  char *v0;
  char *v1;
  uint64_t ObjectType;
  uint64_t v3;
  char *v4;
  objc_class *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  id v18;
  uint64_t v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  _QWORD *v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  _QWORD *v42;
  id v43;
  id v44;
  void *v45;
  uint64_t v46;
  char v47[24];
  objc_super v48;

  v1 = v0;
  ObjectType = swift_getObjectType();
  __swift_instantiateConcreteTypeFromMangledName(&qword_15085D0);
  __chkstk_darwin();
  v4 = &v47[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = (objc_class *)type metadata accessor for SyncedLyricsViewController();
  v48.receiver = v0;
  v48.super_class = v5;
  objc_msgSendSuper2(&v48, "viewDidLoad");
  v6 = objc_msgSend(v0, "view");
  if (!v6)
  {
    __break(1u);
    goto LABEL_7;
  }
  v7 = v6;
  objc_msgSend(v6, "setPreservesSuperviewLayoutMargins:", 1);

  objc_msgSend(v1, "setViewRespectsSystemMinimumLayoutMargins:", 0);
  v8 = objc_msgSend(v1, "view");
  if (!v8)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v9 = v8;
  objc_msgSend(v8, "bounds");
  v11 = v10;
  v13 = v12;
  v15 = v14;
  v17 = v16;

  v18 = objc_msgSend(objc_allocWithZone((Class)UIScrollView), "initWithFrame:", v11, v13, v15, v17);
  v19 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
  v20 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView];
  *(_QWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView] = v18;

  objc_msgSend(*(id *)&v1[v19], "setClipsToBounds:", 0);
  objc_msgSend(*(id *)&v1[v19], "setIndicatorStyle:", 2);
  objc_msgSend(*(id *)&v1[v19], "setShowsHorizontalScrollIndicator:", 0);
  objc_msgSend(*(id *)&v1[v19], "setAutoresizingMask:", 18);
  objc_msgSend(*(id *)&v1[v19], "setDelegate:", v1);
  objc_msgSend(*(id *)&v1[v19], "setMultipleTouchEnabled:", 0);
  objc_msgSend(*(id *)&v1[v19], "setShowsVerticalScrollIndicator:", v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs + 536], swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs], v47, 0, 0).n128_f64[0]);
  v21 = objc_msgSend(v1, "view");
  if (!v21)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v22 = v21;
  objc_msgSend(v21, "addSubview:", *(_QWORD *)&v1[v19]);

  v23 = (void *)objc_opt_self(NSNotificationCenter);
  v24 = objc_msgSend(v23, "defaultCenter");
  v25 = NSNotificationCenter.notifications(named:object:)(UISceneDidEnterBackgroundNotification, 0);

  v26 = objc_msgSend(v23, "defaultCenter");
  v46 = NSNotificationCenter.notifications(named:object:)(UISceneWillEnterForegroundNotification, 0);

  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_15085E0);
  v28 = swift_allocObject(v27, 48, 7);
  *(_OWORD *)(v28 + 16) = xmmword_105B360;
  *(_QWORD *)(v28 + 32) = type metadata accessor for UITraitAccessibilityContrast(0);
  *(_QWORD *)(v28 + 40) = &protocol witness table for UITraitAccessibilityContrast;
  v29 = UIViewController.registerForTraitChanges<A>(_:handler:)(v28, sub_E15F48, 0, ObjectType);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease(v29);
  v30 = type metadata accessor for TaskPriority(0);
  v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56);
  v31(v4, 1, 1, v30);
  v32 = (uint64_t)v4;
  v33 = swift_allocObject(&unk_13C7118, 24, 7);
  swift_unknownObjectWeakInit(v33 + 16);
  type metadata accessor for MainActor(0);
  swift_retain();
  v34 = swift_retain();
  v35 = static MainActor.shared.getter(v34);
  v36 = (_QWORD *)swift_allocObject(&unk_13C7140, 48, 7);
  v36[2] = v35;
  v36[3] = &protocol witness table for MainActor;
  v36[4] = v25;
  v36[5] = v33;
  swift_release();
  sub_E08E7C(v32, (uint64_t)&unk_15085F0, (uint64_t)v36);
  v37 = swift_release();
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))v31)(v32, 1, 1, v30, v37);
  v38 = v46;
  v39 = swift_allocObject(&unk_13C7118, 24, 7);
  swift_unknownObjectWeakInit(v39 + 16);
  swift_retain();
  v40 = swift_retain();
  v41 = static MainActor.shared.getter(v40);
  v42 = (_QWORD *)swift_allocObject(&unk_13C7168, 48, 7);
  v42[2] = v41;
  v42[3] = &protocol witness table for MainActor;
  v42[4] = v38;
  v42[5] = v39;
  swift_release();
  sub_E08E7C(v32, (uint64_t)&unk_1508600, (uint64_t)v42);
  swift_release();
  v43 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "init");
  objc_msgSend(v43, "setDelegate:", v1);
  objc_msgSend(v43, "addTarget:action:", v1, "bottomTapHandler");
  v44 = objc_msgSend(v1, "view");
  if (v44)
  {
    v45 = v44;
    objc_msgSend(v44, "addGestureRecognizer:", v43);

    swift_release();
    swift_release();
    return;
  }
LABEL_9:
  __break(1u);
}

uint64_t sub_E0B27C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;

  v5[15] = a4;
  v5[16] = a5;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v5[17] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[18] = v7;
  v5[19] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v5[20] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v5[21] = v9;
  v5[22] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for NSNotificationCenter.Notifications.Iterator(0);
  v5[23] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_15087E0);
  v5[24] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v5[25] = v12;
  v5[26] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_15087E8);
  v5[27] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v5[28] = v14;
  v5[29] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for MainActor(0);
  v5[30] = v15;
  v5[31] = static MainActor.shared.getter(v16);
  v17 = dispatch thunk of Actor.unownedExecutor.getter(v15, &protocol witness table for MainActor);
  v5[32] = v17;
  v5[33] = v18;
  return swift_task_switch(sub_E0B3B4, v17, v18);
}

uint64_t sub_E0B3B4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  char *v17;

  v1 = v0[26];
  v15 = v0[25];
  v2 = v0[23];
  v3 = v0[24];
  v16 = v0[16] + 16;
  v0[11] = v0[15];
  v4 = type metadata accessor for NSNotificationCenter.Notifications(0);
  v5 = sub_4E684(0, &qword_15087F8, UIWindowScene_ptr);
  v0[34] = v5;
  v6 = sub_4DD24(&qword_1508800, (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Notifications, (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Notifications);
  v7 = swift_retain();
  AsyncCompactMapSequence.init(_:transform:)(v0 + 11, &unk_1508850, 0, v4, v5, v6, v7);
  AsyncCompactMapSequence.base.getter(v3);
  dispatch thunk of AsyncSequence.makeAsyncIterator()(v4, v6);
  v8 = AsyncCompactMapSequence.transform.getter(v3);
  v10 = v9;
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v1, v3);
  AsyncCompactMapSequence.Iterator.init(_:transform:)(v2, v8, v10, v4, v5, v6);
  v11 = swift_beginAccess(v16, v0 + 8, 0, 0);
  v12 = static MainActor.shared.getter(v11);
  v0[35] = v12;
  v17 = (char *)&dword_1508808 + dword_1508808;
  v13 = (_QWORD *)swift_task_alloc(unk_150880C);
  v0[36] = v13;
  *v13 = v0;
  v13[1] = sub_E0B578;
  return ((uint64_t (*)(uint64_t, void *, _QWORD *))v17)(v12, &protocol witness table for MainActor, v0 + 13);
}

uint64_t sub_E0B578(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 288);
  *(_QWORD *)(*v1 + 296) = a1;
  swift_task_dealloc(v3);
  swift_release();
  return swift_task_switch(sub_E0B5D8, *(_QWORD *)(v2 + 256), *(_QWORD *)(v2 + 264));
}

void sub_E0B5D8()
{
  uint64_t v0;
  void *v1;
  void *Strong;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t);

  v1 = *(void **)(v0 + 296);
  if (!v1)
  {
    v33 = *(_QWORD *)(v0 + 232);
    v34 = *(_QWORD *)(v0 + 208);
    v36 = *(_QWORD *)(v0 + 176);
    v35 = *(_QWORD *)(v0 + 184);
    v37 = *(_QWORD *)(v0 + 152);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 224) + 8))(v33, *(_QWORD *)(v0 + 216));
    swift_release();
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  Strong = (void *)swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 128) + 16);
  if (!Strong)
    goto LABEL_11;
  v3 = Strong;
  v4 = objc_msgSend(Strong, "view");

  if (v4)
  {
    v5 = objc_msgSend(v4, "window");

    v6 = objc_msgSend(v5, "windowScene");
    if (v6)
    {
      v7 = v1;
      v8 = static NSObject.== infix(_:_:)(v7, v6);

      if ((v8 & 1) != 0)
      {
        if (qword_1506120 != -1)
          swift_once(&qword_1506120, sub_DDD864);
        v9 = type metadata accessor for Logger(0);
        v10 = __swift_project_value_buffer(v9, (uint64_t)static Logger.lyrics);
        v11 = Logger.logObject.getter(v10);
        v12 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v11, v12))
        {
          v13 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v13 = 0;
          swift_slowDealloc(v13, -1, -1);
        }
        v14 = *(_QWORD *)(v0 + 176);
        v15 = *(_QWORD *)(v0 + 152);
        v41 = *(_QWORD *)(v0 + 168);
        v42 = *(_QWORD *)(v0 + 160);
        v16 = *(_QWORD *)(v0 + 136);
        v40 = *(_QWORD *)(v0 + 144);
        v17 = *(_QWORD *)(v0 + 128);

        v18 = sub_4E684(0, (unint64_t *)&qword_15076C0, OS_dispatch_queue_ptr);
        v26 = (void *)static OS_dispatch_queue.main.getter(v18, v19, v20, v21, v22, v23, v24, v25);
        *(_QWORD *)(v0 + 48) = sub_E1934C;
        *(_QWORD *)(v0 + 56) = v17;
        *(_QWORD *)(v0 + 16) = _NSConcreteStackBlock;
        *(_QWORD *)(v0 + 24) = 1107296256;
        *(_QWORD *)(v0 + 32) = sub_42D124;
        *(_QWORD *)(v0 + 40) = &block_descriptor_175_1;
        v27 = _Block_copy((const void *)(v0 + 16));
        v28 = swift_retain();
        static DispatchQoS.unspecified.getter(v28);
        *(_QWORD *)(v0 + 112) = _swiftEmptyArrayStorage;
        v29 = sub_4DD24((unint64_t *)&unk_1508810, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
        v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506E28);
        v31 = sub_15BF84((unint64_t *)&qword_1508820, &qword_1506E28);
        dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 112, v30, v31, v16, v29);
        OS_dispatch_queue.async(group:qos:flags:execute:)(0, v14, v15, v27);
        _Block_release(v27);

        (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v15, v16);
        (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v14, v42);
        v32 = swift_release();
      }
      else
      {

      }
      goto LABEL_14;
    }
LABEL_11:

LABEL_14:
    v38 = static MainActor.shared.getter(v32);
    *(_QWORD *)(v0 + 280) = v38;
    v43 = (void (*)(uint64_t, uint64_t))((char *)&dword_1508808 + dword_1508808);
    v39 = (_QWORD *)swift_task_alloc(unk_150880C);
    *(_QWORD *)(v0 + 288) = v39;
    *v39 = v0;
    v39[1] = sub_E0B578;
    v43(v38, (uint64_t)&protocol witness table for MainActor);
    return;
  }

  __break(1u);
}

uint64_t sub_E0B9BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return swift_task_switch(sub_E0B9D4, 0, 0);
}

uint64_t sub_E0B9D4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  Notification.object.getter((_QWORD *)(v0 + 16));
  v1 = *(_QWORD **)(v0 + 48);
  if (*(_QWORD *)(v0 + 40))
  {
    v2 = sub_4E684(0, &qword_15087F8, UIWindowScene_ptr);
    if ((swift_dynamicCast(v1, v0 + 16, (char *)&type metadata for Any + 8, v2, 6) & 1) == 0)
      **(_QWORD **)(v0 + 48) = 0;
  }
  else
  {
    sub_56024(v0 + 16, &qword_1508840);
    *v1 = 0;
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_E0BA70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_15087E8);
  v3[10] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[11] = v7;
  v3[12] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508830);
  v3[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Notification(0);
  v3[14] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v3[15] = v10;
  v3[16] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    ObjectType = swift_getObjectType();
    v12 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, a2);
    v14 = v13;
  }
  else
  {
    v12 = 0;
    v14 = 0;
  }
  v3[17] = v12;
  v3[18] = v14;
  return swift_task_switch(sub_E0BB60, v12, v14);
}

uint64_t sub_E0BB60()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[19] = AsyncCompactMapSequence.Iterator.baseIterator.modify(v0 + 2, v0[10]);
  type metadata accessor for NSNotificationCenter.Notifications.Iterator(0);
  sub_4DD24(&qword_1508838, (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Notifications.Iterator, (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Notifications.Iterator);
  v1 = (_QWORD *)swift_task_alloc(_sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTjTu[1]);
  v0[20] = v1;
  *v1 = v0;
  v1[1] = sub_E0BC04;
  return _sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v0[13], v0[7], v0[8]);
}

uint64_t sub_E0BC04()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 160));
  if (v0)
  {
    v3 = *(_QWORD *)(v2 + 136);
    v4 = *(_QWORD *)(v2 + 144);
    v5 = sub_E0BDC8;
  }
  else
  {
    (*(void (**)(uint64_t, _QWORD))(v2 + 152))(v2 + 16, 0);
    v3 = *(_QWORD *)(v2 + 136);
    v4 = *(_QWORD *)(v2 + 144);
    v5 = sub_E0BC74;
  }
  return swift_task_switch(v5, v3, v4);
}

uint64_t sub_E0BC74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  int *v14;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 104);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_56024(v3, &qword_1508830);
    v4 = *(_QWORD *)(v0 + 96);
    v5 = *(_QWORD *)(v0 + 104);
    swift_task_dealloc(*(_QWORD *)(v0 + 128));
    swift_task_dealloc(v5);
    swift_task_dealloc(v4);
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 88);
    v7 = *(_QWORD *)(v0 + 96);
    v10 = *(_QWORD *)(v0 + 72);
    v9 = *(_QWORD *)(v0 + 80);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 32))(*(_QWORD *)(v0 + 128), v3, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v7, v10, v9);
    v11 = (int *)AsyncCompactMapSequence.Iterator.transform.getter(v9);
    *(_QWORD *)(v0 + 168) = v12;
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    v14 = (int *)((char *)v11 + *v11);
    v13 = (_QWORD *)swift_task_alloc(v11[1]);
    *(_QWORD *)(v0 + 176) = v13;
    *v13 = v0;
    v13[1] = sub_E0BE2C;
    return ((uint64_t (*)(uint64_t, _QWORD))v14)(v0 + 48, *(_QWORD *)(v0 + 128));
  }
}

uint64_t sub_E0BDC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t))(v0 + 152))(v0 + 16, 1);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_E0BE2C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;

  v1 = *v0;
  v3 = *(_QWORD *)(*v0 + 120);
  v2 = *(_QWORD *)(*v0 + 128);
  v4 = *(_QWORD *)(*v0 + 112);
  swift_task_dealloc(*(_QWORD *)(*v0 + 176));
  v5 = swift_release();
  (*(void (**)(uint64_t, uint64_t, __n128))(v3 + 8))(v2, v4, v5);
  return swift_task_switch(sub_E0BEA8, *(_QWORD *)(v1 + 136), *(_QWORD *)(v1 + 144));
}

uint64_t sub_E0BEA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 48);
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 96);
    v2 = *(_QWORD *)(v0 + 104);
    swift_task_dealloc(*(_QWORD *)(v0 + 128));
    swift_task_dealloc(v2);
    swift_task_dealloc(v3);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
  }
  else
  {
    *(_QWORD *)(v0 + 152) = AsyncCompactMapSequence.Iterator.baseIterator.modify(v0 + 16, *(_QWORD *)(v0 + 80));
    type metadata accessor for NSNotificationCenter.Notifications.Iterator(0);
    sub_4DD24(&qword_1508838, (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Notifications.Iterator, (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Notifications.Iterator);
    v5 = (_QWORD *)swift_task_alloc(_sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTjTu[1]);
    *(_QWORD *)(v0 + 160) = v5;
    *v5 = v0;
    v5[1] = sub_E0BC04;
    return _sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  }
}

void sub_E0BF94(uint64_t a1)
{
  uint64_t v1;
  _BYTE *Strong;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  _BYTE v8[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v8, 0, 0);
  Strong = (_BYTE *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    Strong[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isBackgrounded] = 1;

  }
  swift_beginAccess(v1, &v7, 0, 0);
  v3 = swift_unknownObjectWeakLoadStrong(v1);
  if (v3)
  {
    v4 = (void *)v3;
    v5 = *(void **)(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink);
    v6 = v5;

    if (v5)
    {
      objc_msgSend(v6, "setPaused:", 1);

    }
  }
}

uint64_t sub_E0C04C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;

  v5[15] = a4;
  v5[16] = a5;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v5[17] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[18] = v7;
  v5[19] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v5[20] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v5[21] = v9;
  v5[22] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for NSNotificationCenter.Notifications.Iterator(0);
  v5[23] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_15087E0);
  v5[24] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v5[25] = v12;
  v5[26] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_15087E8);
  v5[27] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v5[28] = v14;
  v5[29] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for MainActor(0);
  v5[30] = v15;
  v5[31] = static MainActor.shared.getter(v16);
  v17 = dispatch thunk of Actor.unownedExecutor.getter(v15, &protocol witness table for MainActor);
  v5[32] = v17;
  v5[33] = v18;
  return swift_task_switch(sub_E0C184, v17, v18);
}

uint64_t sub_E0C184()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  char *v17;

  v1 = v0[26];
  v15 = v0[25];
  v2 = v0[23];
  v3 = v0[24];
  v16 = v0[16] + 16;
  v0[11] = v0[15];
  v4 = type metadata accessor for NSNotificationCenter.Notifications(0);
  v5 = sub_4E684(0, &qword_15087F8, UIWindowScene_ptr);
  v0[34] = v5;
  v6 = sub_4DD24(&qword_1508800, (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Notifications, (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Notifications);
  v7 = swift_retain();
  AsyncCompactMapSequence.init(_:transform:)(v0 + 11, &unk_15087F0, 0, v4, v5, v6, v7);
  AsyncCompactMapSequence.base.getter(v3);
  dispatch thunk of AsyncSequence.makeAsyncIterator()(v4, v6);
  v8 = AsyncCompactMapSequence.transform.getter(v3);
  v10 = v9;
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v1, v3);
  AsyncCompactMapSequence.Iterator.init(_:transform:)(v2, v8, v10, v4, v5, v6);
  v11 = swift_beginAccess(v16, v0 + 8, 0, 0);
  v12 = static MainActor.shared.getter(v11);
  v0[35] = v12;
  v17 = (char *)&dword_1508808 + dword_1508808;
  v13 = (_QWORD *)swift_task_alloc(unk_150880C);
  v0[36] = v13;
  *v13 = v0;
  v13[1] = sub_E0C348;
  return ((uint64_t (*)(uint64_t, void *, _QWORD *))v17)(v12, &protocol witness table for MainActor, v0 + 13);
}

uint64_t sub_E0C348(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 288);
  *(_QWORD *)(*v1 + 296) = a1;
  swift_task_dealloc(v3);
  swift_release();
  return swift_task_switch(sub_E0C3A8, *(_QWORD *)(v2 + 256), *(_QWORD *)(v2 + 264));
}

void sub_E0C3A8()
{
  uint64_t v0;
  void *v1;
  void *Strong;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t);

  v1 = *(void **)(v0 + 296);
  if (!v1)
  {
    v28 = *(_QWORD *)(v0 + 232);
    v29 = *(_QWORD *)(v0 + 208);
    v31 = *(_QWORD *)(v0 + 176);
    v30 = *(_QWORD *)(v0 + 184);
    v32 = *(_QWORD *)(v0 + 152);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 224) + 8))(v28, *(_QWORD *)(v0 + 216));
    swift_release();
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  Strong = (void *)swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 128) + 16);
  if (!Strong)
    goto LABEL_7;
  v3 = Strong;
  v4 = objc_msgSend(Strong, "view");

  if (v4)
  {
    v5 = objc_msgSend(v4, "window");

    v6 = objc_msgSend(v5, "windowScene");
    if (v6)
    {
      v7 = v1;
      v8 = static NSObject.== infix(_:_:)(v7, v6);

      if ((v8 & 1) != 0)
      {
        v9 = *(_QWORD *)(v0 + 176);
        v10 = *(_QWORD *)(v0 + 152);
        v36 = *(_QWORD *)(v0 + 168);
        v37 = *(_QWORD *)(v0 + 160);
        v11 = *(_QWORD *)(v0 + 136);
        v35 = *(_QWORD *)(v0 + 144);
        v12 = *(_QWORD *)(v0 + 128);
        v13 = sub_4E684(0, (unint64_t *)&qword_15076C0, OS_dispatch_queue_ptr);
        v21 = (void *)static OS_dispatch_queue.main.getter(v13, v14, v15, v16, v17, v18, v19, v20);
        *(_QWORD *)(v0 + 48) = sub_E192BC;
        *(_QWORD *)(v0 + 56) = v12;
        *(_QWORD *)(v0 + 16) = _NSConcreteStackBlock;
        *(_QWORD *)(v0 + 24) = 1107296256;
        *(_QWORD *)(v0 + 32) = sub_42D124;
        *(_QWORD *)(v0 + 40) = &block_descriptor_163_2;
        v22 = _Block_copy((const void *)(v0 + 16));
        v23 = swift_retain();
        static DispatchQoS.unspecified.getter(v23);
        *(_QWORD *)(v0 + 112) = _swiftEmptyArrayStorage;
        v24 = sub_4DD24((unint64_t *)&unk_1508810, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
        v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506E28);
        v26 = sub_15BF84((unint64_t *)&qword_1508820, &qword_1506E28);
        dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 112, v25, v26, v11, v24);
        OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v10, v22);
        _Block_release(v22);

        (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v10, v11);
        (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v9, v37);
        v27 = swift_release();
      }
      else
      {

      }
      goto LABEL_10;
    }
LABEL_7:

LABEL_10:
    v33 = static MainActor.shared.getter(v27);
    *(_QWORD *)(v0 + 280) = v33;
    v38 = (void (*)(uint64_t, uint64_t))((char *)&dword_1508808 + dword_1508808);
    v34 = (_QWORD *)swift_task_alloc(unk_150880C);
    *(_QWORD *)(v0 + 288) = v34;
    *v34 = v0;
    v34[1] = sub_E0C348;
    v38(v33, (uint64_t)&protocol witness table for MainActor);
    return;
  }

  __break(1u);
}

uint64_t sub_E0C6DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return swift_task_switch(sub_E19360, 0, 0);
}

void sub_E0C6F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  char v19;
  char v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  void *v29;
  char v30;
  _BYTE v31[24];
  _BYTE v32[24];
  uint64_t v33[3];
  _BYTE v34[24];
  _BYTE v35[24];
  _BYTE v36[24];
  _BYTE v37[24];

  v2 = a1 + 16;
  swift_beginAccess(a1 + 16, v37, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = *(_QWORD *)(Strong + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager);
    swift_retain();

    if (v5)
    {
      v6 = swift_allocObject(&unk_13C7118, 24, 7);
      swift_beginAccess(v2, v36, 0, 0);
      v7 = (void *)swift_unknownObjectWeakLoadStrong(v2);
      swift_unknownObjectWeakInit(v6 + 16);

      swift_beginAccess(v5 + 96, v35, 1, 0);
      v8 = *(_QWORD *)(v5 + 96);
      v9 = *(_QWORD *)(v5 + 104);
      *(_QWORD *)(v5 + 96) = sub_E192C4;
      *(_QWORD *)(v5 + 104) = v6;
      swift_retain_n(v6, 2);
      sub_5C198(v8, v9);
      sub_E03ED0();
      swift_release_n(v6, 2);
      swift_release();
    }
  }
  swift_beginAccess(v2, v34, 0, 0);
  v10 = (_BYTE *)swift_unknownObjectWeakLoadStrong(v2);
  if (v10)
  {
    v10[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isBackgrounded] = 0;

  }
  if (qword_1506120 != -1)
    swift_once(&qword_1506120, sub_DDD864);
  v11 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v11, (uint64_t)static Logger.lyrics);
  v12 = swift_retain_n(a1, 2);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc(12, -1);
    v16 = swift_slowAlloc(32, -1);
    v33[0] = v16;
    *(_DWORD *)v15 = 136315138;
    swift_beginAccess(v2, v31, 0, 0);
    v17 = swift_unknownObjectWeakLoadStrong(v2);
    if (v17)
    {
      v18 = (void *)v17;
      v19 = sub_E102CC();

      v20 = v19 & 1;
    }
    else
    {
      v20 = 2;
    }
    v32[0] = v20;
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508828);
    v22 = (char *)String.init<A>(describing:)(v32, v21);
    *(_QWORD *)(v15 + 4) = sub_DCF730(v22, v23, v33);
    swift_bridgeObjectRelease();
    swift_release_n(a1, 2);
    swift_arrayDestroy(v16, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v16, -1, -1);
    swift_slowDealloc(v15, -1, -1);
  }
  else
  {
    swift_release_n(a1, 2);
  }

  swift_beginAccess(v2, v33, 0, 0);
  v24 = swift_unknownObjectWeakLoadStrong(v2);
  if (v24)
  {
    v25 = (void *)v24;
    v26 = *(void **)(v24 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink);
    v27 = v26;

    if (v26)
    {
      swift_beginAccess(v2, v32, 0, 0);
      v28 = swift_unknownObjectWeakLoadStrong(v2);
      if (v28)
      {
        v29 = (void *)v28;
        v30 = sub_E102CC();

      }
      else
      {
        v30 = 1;
      }
      objc_msgSend(v27, "setPaused:", v30 & 1);

    }
  }
}

Swift::Void __swiftcall SyncedLyricsViewController.viewDidAppear(_:)(Swift::Bool a1)
{
  char *v1;
  id v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  objc_super v16;

  v16.receiver = v1;
  v16.super_class = (Class)type metadata accessor for SyncedLyricsViewController();
  objc_msgSendSuper2(&v16, "viewDidAppear:", a1);
  v3 = objc_msgSend(v1, "view");
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, "window");

    if (v5)
    {
      v6 = objc_msgSend(v5, "screen");

      v5 = objc_msgSend(v6, "displayLinkWithTarget:selector:", v1, "displayLinkFired:");
    }
    v7 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink;
    v8 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink];
    *(_QWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink] = v5;

    v9 = *(void **)&v1[v7];
    if (v9)
    {
      v10 = v9;
      objc_msgSend(v10, "setPaused:", sub_E102CC() & 1);

      v11 = *(void **)&v1[v7];
      if (v11)
      {
        v12 = (void *)objc_opt_self(NSRunLoop);
        v13 = v11;
        v14 = objc_msgSend(v12, "mainRunLoop");
        objc_msgSend(v13, "addToRunLoop:forMode:", v14, NSRunLoopCommonModes);

        v15 = *(void **)&v1[v7];
        if (v15)
          objc_msgSend(v15, "setPreferredFramesPerSecond:", 30);
      }
    }
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall SyncedLyricsViewController.viewDidDisappear(_:)(Swift::Bool a1)
{
  char *v1;
  uint64_t v3;
  void *v4;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for SyncedLyricsViewController();
  objc_msgSendSuper2(&v5, "viewDidDisappear:", a1);
  v3 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink], "invalidate");
  v4 = *(void **)&v1[v3];
  *(_QWORD *)&v1[v3] = 0;

}

Swift::Void __swiftcall SyncedLyricsViewController.viewDidLayoutSubviews()()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  __int128 v13;
  id v14;
  void *v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  id v24;
  void *v25;
  double v26;
  CGFloat v27;
  double v28;
  CGFloat v29;
  double v30;
  CGFloat v31;
  double v32;
  CGFloat v33;
  char *v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _OWORD v46[2];
  _QWORD v47[4];
  objc_super v48;
  CGRect v49;
  CGRect v50;

  v1 = v0;
  v48.receiver = v0;
  v48.super_class = (Class)type metadata accessor for SyncedLyricsViewController();
  objc_msgSendSuper2(&v48, "viewDidLayoutSubviews");
  v2 = objc_msgSend(v0, "view");
  if (!v2)
  {
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    return;
  }
  v3 = v2;
  _s3__C6CGRectVMa_1(0);
  objc_msgSend(v3, "bounds");
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;

  v47[0] = v5;
  v47[1] = v7;
  v47[2] = v9;
  v47[3] = v11;
  v12 = &v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_previousBounds];
  v13 = *(_OWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_previousBounds + 16];
  v46[0] = *(_OWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_previousBounds];
  v46[1] = v13;
  if ((static ApproximatelyEquatable.!=~ infix(_:_:)(v47, v46) & 1) == 0)
    return;
  v14 = objc_msgSend(v1, "view");
  if (!v14)
    goto LABEL_14;
  v15 = v14;
  objc_msgSend(v14, "bounds");
  v17 = v16;
  v19 = v18;
  v21 = v20;
  v23 = v22;

  v49.origin.x = v17;
  v49.origin.y = v19;
  v49.size.width = v21;
  v49.size.height = v23;
  v47[0] = CGRectGetWidth(v49);
  *(_QWORD *)&v46[0] = CGRectGetWidth(*(CGRect *)v12);
  if ((static ApproximatelyEquatable.!=~ infix(_:_:)(v47, v46) & 1) != 0)
    sub_E0E2C0();
  v24 = objc_msgSend(v1, "view");
  if (!v24)
    goto LABEL_15;
  v25 = v24;
  objc_msgSend(v24, "bounds");
  v27 = v26;
  v29 = v28;
  v31 = v30;
  v33 = v32;

  v50.origin.x = v27;
  v50.origin.y = v29;
  v50.size.width = v31;
  v50.size.height = v33;
  v47[0] = CGRectGetHeight(v50);
  *(_QWORD *)&v46[0] = CGRectGetHeight(*(CGRect *)v12);
  if ((static ApproximatelyEquatable.!=~ infix(_:_:)(v47, v46) & 1) != 0)
  {
    sub_E10F14(0);
    v34 = &v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight];
    swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight], v47, 0, 0);
    *(_QWORD *)&v46[0] = *(_QWORD *)v34;
    v45 = 0;
    sub_E160BC();
    if ((static ApproximatelyEquatable<>.==~ infix(_:_:)(v46, &v45) & 1) != 0)
      sub_E0DE64();
  }
  v35 = objc_msgSend(v1, "view");
  if (!v35)
    goto LABEL_16;
  v36 = v35;
  objc_msgSend(v35, "bounds");
  v38 = v37;
  v40 = v39;
  v42 = v41;
  v44 = v43;

  *(_QWORD *)v12 = v38;
  *((_QWORD *)v12 + 1) = v40;
  *((_QWORD *)v12 + 2) = v42;
  *((_QWORD *)v12 + 3) = v44;
}

Swift::Void __swiftcall SyncedLyricsViewController.viewLayoutMarginsDidChange()()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for SyncedLyricsViewController();
  objc_msgSendSuper2(&v1, "viewLayoutMarginsDidChange");
  sub_E0E2C0();
}

void sub_E0D154(uint64_t a1, char a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double (*v9)(uint64_t);
  uint64_t v10;
  id v11;
  uint64_t v12;
  double v13;
  double v14;
  double v15;
  double v16;
  void *v17;
  id v18;
  char v19;
  void *v20;
  id v21;
  uint64_t v22;
  _BYTE v23[24];

  v3 = *(void **)(a1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView);
  if (v3)
  {
    v5 = _s19SBS_TextContentViewCMa();
    v6 = swift_dynamicCastClass(v3, v5);
    if (v6)
    {
      v7 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager);
      if (v7)
      {
        v8 = v6;
        swift_beginAccess(v7 + 96, v23, 0, 0);
        v9 = *(double (**)(uint64_t))(v7 + 96);
        if (v9)
        {
          v10 = *(_QWORD *)(v7 + 104);
          v11 = v3;
          swift_retain();
          v12 = sub_A9DEC((uint64_t)v9, v10);
          v13 = v9(v12);
          swift_beginAccess(v7 + 88, &v22, 0, 0);
          v14 = 0.0;
          if (*(_BYTE *)(v7 + 88) == 1)
          {
            Lyrics.spatialOffset.getter();
            v14 = v15;
          }
          sub_5C198((uint64_t)v9, v10);
          swift_release();
          v16 = v13 - v14;
          if (v16 != *(double *)(v8 + OBJC_IVAR___MusicSBS_TextContentView_progress))
          {
            *(double *)(v8 + OBJC_IVAR___MusicSBS_TextContentView_progress) = v16;
            v17 = *(void **)(v8 + OBJC_IVAR___MusicSBS_TextContentView_textView);
            if (!v17)
            {
              __break(1u);
              return;
            }
            v18 = v17;
            v19 = a2 & 1;
            sub_DF26C8(v19, v16);

            v20 = *(void **)(v8 + OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView);
            if (v20)
            {
              v21 = v20;
              sub_DF26C8(v19, v16);

              v11 = v21;
            }
          }

        }
      }
    }
  }
}

Swift::Void __swiftcall SyncedLyricsViewController.presentSharing()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  char *v5;
  uint64_t *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  double v19;
  double v20;
  double v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char v47[24];
  char v48[24];
  char v49[24];
  char v50[24];
  char v51[24];
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  char v55[24];
  _QWORD v56[3];
  uint64_t *v57;
  uint64_t v58;
  char v59[24];

  v5 = v0;
  v6 = (uint64_t *)&v0[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews];
  swift_beginAccess(v6, v59, 0, 0);
  v7 = *v6;
  if ((unint64_t)v7 >> 62)
    goto LABEL_18;
  v8 = *(char **)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  if (!v8)
    goto LABEL_22;
LABEL_3:
  v9 = v8 - 1;
  if (__OFSUB__(v8, 1))
  {
    __break(1u);
    goto LABEL_36;
  }
  if ((v7 & 0xC000000000000001) != 0)
  {
LABEL_36:
    v10 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v7);
    goto LABEL_8;
  }
  if (((unint64_t)v9 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if ((unint64_t)v9 < *(_QWORD *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFF8)))
  {
    v10 = (char *)*(id *)(v7 + 8 * (_QWORD)v9 + 32);
LABEL_8:
    v8 = v10;
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  if (v7 < 0)
    v26 = v7;
  else
    v26 = v7 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v27 = _CocoaArrayWrapper.endIndex.getter(v26);
  swift_bridgeObjectRelease();
  if (v4 >= v27)
  {
LABEL_44:
    sub_55D1C(v1, (uint64_t)v56);
    if ((swift_dynamicCast(&v52, v56, v2, &type metadata for Lyrics.SongwritersLine, 6) & 1) == 0)
      goto LABEL_52;
    swift_bridgeObjectRelease();
    sub_55D1C(v1, (uint64_t)v56);
    v28 = (uint64_t)v57;
    v29 = v58;
    __swift_project_boxed_opaque_existential_1(v56, (uint64_t)v57);
    v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 16))(v28, v29);
    __swift_destroy_boxed_opaque_existential_1(v56);
    if (v30 < 1)
      goto LABEL_52;
    sub_55D1C(v1, (uint64_t)v56);
    v1 = (uint64_t)v57;
    v31 = v58;
    __swift_project_boxed_opaque_existential_1(v56, (uint64_t)v57);
    v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 16))(v1, v31);
    v7 = v32 - 1;
    if (!__OFSUB__(v32, 1))
    {
      __swift_destroy_boxed_opaque_existential_1(v56);
      v33 = (uint64_t *)&v5[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
      swift_beginAccess(&v5[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews], v56, 0, 0);
      v1 = *v33;
      if ((v1 & 0xC000000000000001) != 0)
      {
LABEL_54:
        swift_bridgeObjectRetain();
        v34 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v1);

        swift_bridgeObjectRelease();
        goto LABEL_51;
      }
      if ((v7 & 0x8000000000000000) == 0)
      {
        if ((unint64_t)v7 < *(_QWORD *)((char *)&dword_10 + (v1 & 0xFFFFFFFFFFFFF8)))
        {
LABEL_50:
          v34 = (char *)*(id *)(v1 + 8 * v7 + 32);

LABEL_51:
          v8 = v34;
LABEL_52:
          objc_msgSend(v8, "setHighlighted:", 1);
          v35 = sub_4E684(0, (unint64_t *)&qword_15076C0, OS_dispatch_queue_ptr);
          v43 = (void *)static OS_dispatch_queue.main.getter(v35, v36, v37, v38, v39, v40, v41, v42);
          v44 = swift_allocObject(&unk_13C7190, 32, 7);
          *(_QWORD *)(v44 + 16) = v5;
          *(_QWORD *)(v44 + 24) = v8;
          v45 = v5;
          v46 = v8;
          OS_dispatch_queue.asyncAfter(_:block:)((uint64_t)sub_E1612C, v44, 0.3);

          swift_release();
          return;
        }
LABEL_59:
        __break(1u);
LABEL_60:
        swift_bridgeObjectRetain();
        v8 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v1);
        swift_bridgeObjectRelease();
        goto LABEL_32;
      }
LABEL_58:
      __break(1u);
      goto LABEL_59;
    }
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  while (1)
  {
    sub_55D1C(v1, (uint64_t)v56);
    v1 = (uint64_t)v57;
    v2 = v58;
    __swift_project_boxed_opaque_existential_1(v56, (uint64_t)v57);
    v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
    v7 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
LABEL_56:
      __break(1u);
      goto LABEL_57;
    }
    __swift_destroy_boxed_opaque_existential_1(v56);
    v1 = *v3;
    if ((*v3 & 0xC000000000000001) != 0)
      goto LABEL_54;
    if (v7 < 0)
      goto LABEL_56;
    if ((unint64_t)v7 < *(_QWORD *)((char *)&dword_10 + (v1 & 0xFFFFFFFFFFFFF8)))
      goto LABEL_50;
    __break(1u);
LABEL_18:
    if (v7 < 0)
      v14 = v7;
    else
      v14 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = (char *)_CocoaArrayWrapper.endIndex.getter(v14);
    if (v8)
      goto LABEL_3;
LABEL_22:
    swift_bridgeObjectRelease();
    v15 = *(_QWORD *)&v5[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager];
    if (!v15)
      return;
    swift_beginAccess(v15 + 96, v50, 0, 0);
    v16 = *(double (**)(uint64_t))(v15 + 96);
    if (!v16)
      return;
    v17 = *(_QWORD *)(v15 + 104);
    swift_retain();
    v18 = sub_A9DEC((uint64_t)v16, v17);
    v19 = v16(v18);
    swift_beginAccess(v15 + 88, v49, 0, 0);
    v20 = 0.0;
    if (*(_BYTE *)(v15 + 88) == 1)
    {
      Lyrics.spatialOffset.getter();
      v20 = v21;
    }
    sub_5C198((uint64_t)v16, v17);
    swift_release();
    v22 = &v5[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics];
    swift_beginAccess(&v5[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics], v48, 0, 0);
    if (!*(_QWORD *)v22)
    {
      v54 = 0;
      v52 = 0u;
      v53 = 0u;
LABEL_34:
      sub_56024((uint64_t)&v52, &qword_1508630);
      return;
    }
    swift_retain();
    Lyrics.line(before:useOriginalLines:)(0, (uint64_t)&v52, v19 - v20);
    swift_release();
    if (!*((_QWORD *)&v53 + 1))
      goto LABEL_34;
    sub_8B15C(&v52, (uint64_t)v56);
    v23 = (uint64_t)v57;
    v24 = v58;
    __swift_project_boxed_opaque_existential_1(v56, (uint64_t)v57);
    v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 16))(v23, v24);
    v25 = (uint64_t *)&v5[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
    swift_beginAccess(&v5[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews], v47, 0, 0);
    v1 = *v25;
    if ((*v25 & 0xC000000000000001) != 0)
      goto LABEL_60;
    if (v7 < 0)
      break;
    if ((unint64_t)v7 >= *(_QWORD *)((char *)&dword_10 + (v1 & 0xFFFFFFFFFFFFF8)))
      goto LABEL_62;
    v8 = (char *)*(id *)(v1 + 8 * v7 + 32);
LABEL_32:
    __swift_destroy_boxed_opaque_existential_1(v56);
LABEL_9:
    v1 = (uint64_t)&v8[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
    swift_beginAccess(&v8[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], v55, 0, 0);
    sub_55D1C(v1, (uint64_t)v56);
    v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_15075B0);
    if (!swift_dynamicCast(&v52, v56, v2, &type metadata for Lyrics.InstrumentalLine, 6))
      goto LABEL_44;
    sub_55D1C(v1, (uint64_t)v56);
    v3 = v57;
    v11 = v58;
    v7 = (uint64_t)__swift_project_boxed_opaque_existential_1(v56, (uint64_t)v57);
    v12 = (*(uint64_t (**)(uint64_t *, uint64_t))(v11 + 16))(v3, v11);
    v4 = v12 + 1;
    if (__OFADD__(v12, 1))
      goto LABEL_39;
    __swift_destroy_boxed_opaque_existential_1(v56);
    v3 = (uint64_t *)&v5[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
    swift_beginAccess(&v5[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews], v51, 0, 0);
    v7 = *v3;
    if ((unint64_t)*v3 >> 62)
      goto LABEL_40;
    if (v4 >= *(_QWORD *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFF8)))
      goto LABEL_44;
  }
  __break(1u);
LABEL_62:
  __break(1u);
}

void sub_E0D9E4(char *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  __int128 v9;
  uint64_t v10;
  char v11;
  int v12;
  char v13;
  uint64_t v14;
  __int128 v15;
  id v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  void (*v34)(__int128 *);
  uint64_t v35;
  char *v36;
  id v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  void *v42;
  __int128 v43;
  __int128 v44;
  char v45[24];
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  char v61[24];
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;

  v2 = v1;
  v4 = (uint64_t)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
  swift_beginAccess(&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], v61, 0, 0);
  sub_55D1C(v4, (uint64_t)&v46);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_15075B0);
  if ((swift_dynamicCast(&v62, &v46, v5, &type metadata for Lyrics.TextLine, 6) & 1) != 0)
  {
    v6 = v64;
    v7 = v68;
    v8 = *(void **)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
    v43 = v67;
    v44 = v66;
    if (!v8)
      goto LABEL_10;
    v9 = v62;
    v10 = v63;
    v11 = BYTE8(v63);
    v12 = BYTE9(v63);
    v13 = BYTE10(v63);
    v14 = *((_QWORD *)&v64 + 1);
    v15 = v65;
    v16 = objc_msgSend(v8, "copy");
    _bridgeAnyObjectToAny(_:)(&v62, v16);
    swift_unknownObjectRelease(v16);
    v17 = sub_4E684(0, (unint64_t *)&qword_150B080, UIView_ptr);
    if ((swift_dynamicCast(&v46, &v62, (char *)&type metadata for Any + 8, v17, 6) & 1) != 0)
    {
      v41 = v13;
      v42 = (void *)v46;
      objc_msgSend(a1, "cancelTrackingWithEvent:", 0);
      v18 = objc_msgSend(v2, "view");
      if (!v18)
      {
        __break(1u);
        return;
      }
      v19 = v18;
      if (v12)
        v20 = 2;
      else
        v20 = 0;
      objc_msgSend(v18, "convertRect:fromCoordinateSpace:", *(_QWORD *)&v2[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView], UIView.untransformedFrame.getter());
      v39 = v22;
      v40 = v21;
      v24 = v23;
      v26 = v25;

      v27 = objc_msgSend(a1, "isSelected");
      objc_msgSend(a1, "transform");
      v28 = v62;
      v29 = v63;
      v30 = v64;
      v31 = swift_allocObject(&unk_13C76C0, 24, 7);
      *(_QWORD *)(v31 + 16) = a1;
      v32 = swift_allocObject(&unk_13C76E8, 24, 7);
      *(_QWORD *)(v32 + 16) = a1;
      v46 = v9;
      *(_QWORD *)&v47 = v10;
      BYTE8(v47) = v11;
      BYTE9(v47) = v12;
      BYTE10(v47) = v41;
      *(_QWORD *)&v48 = v6;
      *((_QWORD *)&v48 + 1) = v14;
      v49 = v15;
      v50 = v44;
      v51 = v43;
      *(_QWORD *)&v52 = v7;
      *((_QWORD *)&v52 + 1) = v42;
      *(_QWORD *)&v53 = v20;
      *((_QWORD *)&v53 + 1) = v40;
      *(_QWORD *)&v54 = v39;
      *((_QWORD *)&v54 + 1) = v24;
      *(_QWORD *)&v55 = v26;
      BYTE8(v55) = v27;
      v56 = v28;
      v57 = v29;
      v58 = v30;
      *(_QWORD *)&v59 = sub_69DA84;
      *((_QWORD *)&v59 + 1) = v31;
      *(_QWORD *)&v60 = sub_E190B4;
      *((_QWORD *)&v60 + 1) = v32;
      v70 = v54;
      v71 = v55;
      v62 = v9;
      v63 = v47;
      v68 = v52;
      v69 = v53;
      v66 = v44;
      v67 = v43;
      v64 = v48;
      v65 = v15;
      v75 = v59;
      v76 = v60;
      v73 = v29;
      v74 = v30;
      v33 = &v2[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_shareHandler];
      v72 = v28;
      swift_beginAccess(&v2[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_shareHandler], v45, 0, 0);
      v34 = *(void (**)(__int128 *))v33;
      if (!*(_QWORD *)v33)
      {
        v38 = a1;
        sub_E190F4(&v46);
        return;
      }
      v35 = *((_QWORD *)v33 + 1);
      v36 = a1;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      v37 = v42;
      sub_A9DEC((uint64_t)v34, v35);
      v34(&v62);

      sub_5C198((uint64_t)v34, v35);
      sub_E190F4(&v46);
      swift_release();
      swift_release();
    }
    else
    {
LABEL_10:
      swift_release();
      swift_release();
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
}

Swift::Void __swiftcall SyncedLyricsViewController.displayLinkResumeIfNeeded()()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink);
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v2, "setPaused:", sub_E102CC() & 1);

  }
}

void sub_E0DE64()
{
  char *v0;
  char *v1;
  uint64_t v2;
  double v3;
  double v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  id v9;
  void *v10;
  double v11;
  CGFloat v12;
  CGFloat *v13;
  double v14;
  CGFloat v15;
  id v16;
  void *v17;
  double v18;
  double v19;
  double v20;
  double v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  id v31;
  id v32;
  double v33;
  double v34;
  CGFloat v35;
  double v36;
  CGFloat v37;
  double v38;
  CGFloat v39;
  double v40;
  double v41;
  uint64_t v42;
  double v43;
  uint64_t v44;
  id v45;
  id v46;
  char v47[24];
  char v48[24];
  __int128 v49[2];
  _QWORD v50[3];
  uint64_t v51;
  uint64_t v52;
  char v53[24];
  CGRect v54;

  v1 = v0;
  v2 = (uint64_t)&v0[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
  *(_QWORD *)&v3 = swift_beginAccess(v2, v53, 0, 0).n128_u64[0];
  if (*(char *)(v2 + 40) < 0)
  {
    v22 = (uint64_t *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
    swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews], v48, 0, 0);
    v23 = *v22;
    if ((unint64_t)*v22 >> 62)
    {
      if (v23 < 0)
        v42 = *v22;
      else
        v42 = v23 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      if (_CocoaArrayWrapper.endIndex.getter(v42))
      {
LABEL_9:
        if ((v23 & 0xC000000000000001) != 0)
        {
          v25 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v23);
        }
        else
        {
          if (!*(_QWORD *)((char *)&dword_10 + (v23 & 0xFFFFFFFFFFFFF8)))
          {
            __break(1u);
            goto LABEL_25;
          }
          v25 = (char *)*(id *)(v23 + 32);
        }
        v26 = v25;
        swift_bridgeObjectRelease();
        v27 = (uint64_t)&v26[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
        swift_beginAccess(&v26[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], v47, 0, 0);
        sub_55D1C(v27, (uint64_t)v49);

        sub_8B15C(v49, (uint64_t)v50);
        v28 = v51;
        v29 = v52;
        __swift_project_boxed_opaque_existential_1(v50, v51);
        v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 16))(v28, v29);
        v23 = v30;
        v2 = *v22;
        if ((*v22 & 0xC000000000000001) == 0)
        {
          if ((v30 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v30 < *(_QWORD *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFF8)))
          {
            v31 = *(id *)(v2 + 8 * v30 + 32);
LABEL_16:
            v32 = v31;
            v33 = UIView.untransformedFrame.getter();
            v35 = v34;
            v37 = v36;
            v39 = v38;

            sub_E10A00(v33, v35, v37, v39);
            v41 = v40;

            v21 = fabs(v41);
            __swift_destroy_boxed_opaque_existential_1(v50);
            goto LABEL_22;
          }
          __break(1u);
          goto LABEL_28;
        }
LABEL_25:
        swift_bridgeObjectRetain();
        v31 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v23, v2);
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
    }
    else
    {
      v24 = *(_QWORD *)((char *)&dword_10 + (v23 & 0xFFFFFFFFFFFFF8));
      swift_bridgeObjectRetain();
      if (v24)
        goto LABEL_9;
    }
    objc_msgSend(*(id *)(v2 + 168), "_bodyLeading", swift_bridgeObjectRelease().n128_f64[0]);
    v21 = v43;
    goto LABEL_22;
  }
  v4 = *(double *)(v2 + 8);
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView], "contentOffset", v3);
  v6 = v5;
  v8 = v7;
  v9 = objc_msgSend(v1, "view");
  if (!v9)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v10 = v9;
  objc_msgSend(v9, "frame");
  v12 = v11;

  v13 = (CGFloat *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight];
  *(_QWORD *)&v14 = swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight], v50, 0, 0).n128_u64[0];
  v15 = *v13;
  if (*v13 > 0.0)
  {
LABEL_6:
    v54.origin.x = v6;
    v54.origin.y = v8;
    v54.size.width = v12;
    v54.size.height = v15;
    v19 = v4 * (CGRectGetHeight(v54) / 100.0);
    objc_msgSend(*(id *)(v2 + 168), "ascender");
    v21 = v19 - v20;
LABEL_22:
    sub_E15300();
    v44 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
    v45 = *(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView];
    objc_msgSend(v45, "contentInset");
    objc_msgSend(v45, "setContentInset:", v21);

    v46 = *(id *)&v1[v44];
    objc_msgSend(v46, "contentOffset");
    objc_msgSend(v46, "setContentOffset:");

    return;
  }
  v16 = objc_msgSend(v1, "view", v14);
  if (v16)
  {
    v17 = v16;
    objc_msgSend(v16, "frame");
    v15 = v18;

    goto LABEL_6;
  }
LABEL_29:
  __break(1u);
}

uint64_t sub_E0E210(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_15085C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_E0E258(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_15085C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for SyncedLyricsViewController()
{
  return objc_opt_self(_TtC11MusicCoreUI26SyncedLyricsViewController);
}

void sub_E0E2C0()
{
  uint64_t isEscapingClosureAtFileLocation;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  unint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  __n128 v15;
  uint64_t v16;
  id v17;
  _BYTE v18[24];
  void **aBlock;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t (*v23)();
  uint64_t v24;

  v1 = swift_allocObject(&unk_13C78F0, 24, 7);
  *(_QWORD *)(v1 + 16) = isEscapingClosureAtFileLocation;
  if ((*(_BYTE *)(isEscapingClosureAtFileLocation
                 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating) & 1) != 0)
  {
    v2 = (uint64_t *)(isEscapingClosureAtFileLocation
                   + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators);
    swift_beginAccess(isEscapingClosureAtFileLocation + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators, v18, 0, 0);
    v3 = *v2;
    if (!((unint64_t)v3 >> 62))
    {
      v4 = *(_QWORD *)((char *)&dword_10 + (v3 & 0xFFFFFFFFFFFFF8));
      v5 = (id)isEscapingClosureAtFileLocation;
      swift_bridgeObjectRetain();
      if (v4)
        goto LABEL_4;
LABEL_16:
      swift_bridgeObjectRelease();
      swift_release();
      return;
    }
  }
  else
  {
    v11 = (void *)objc_opt_self(UIView);
    v3 = swift_allocObject(&unk_13C7918, 24, 7);
    *(_QWORD *)(v3 + 16) = isEscapingClosureAtFileLocation;
    v12 = swift_allocObject(&unk_13C7940, 32, 7);
    *(_QWORD *)(v12 + 16) = sub_E19294;
    *(_QWORD *)(v12 + 24) = v3;
    v23 = sub_62604;
    v24 = v12;
    aBlock = _NSConcreteStackBlock;
    v20 = 1107296256;
    v21 = sub_3A1A94;
    v22 = &block_descriptor_142_1;
    v13 = _Block_copy(&aBlock);
    v14 = (id)isEscapingClosureAtFileLocation;
    swift_retain();
    objc_msgSend(v11, "performWithoutAnimation:", v13, swift_release().n128_f64[0]);
    _Block_release(v13);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v12, "", 136, 383, 44, 1, v15);
    swift_release();
    swift_release();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
      return;
    __break(1u);
  }
  if (v3 < 0)
    v16 = v3;
  else
    v16 = v3 & 0xFFFFFFFFFFFFFF8;
  v17 = (id)isEscapingClosureAtFileLocation;
  swift_bridgeObjectRetain();
  v4 = _CocoaArrayWrapper.endIndex.getter(v16);
  if (!v4)
    goto LABEL_16;
LABEL_4:
  v6 = v4 - 1;
  if (__OFSUB__(v4, 1))
  {
    __break(1u);
    goto LABEL_19;
  }
  if ((v3 & 0xC000000000000001) != 0)
  {
LABEL_19:
    v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v3);
    goto LABEL_9;
  }
  if ((v6 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v6 < *(_QWORD *)((char *)&dword_10 + (v3 & 0xFFFFFFFFFFFFF8)))
  {
    v7 = *(id *)(v3 + 8 * v6 + 32);
LABEL_9:
    v8 = v7;
    swift_bridgeObjectRelease();
    v9 = swift_allocObject(&unk_13C7990, 32, 7);
    *(_QWORD *)(v9 + 16) = sub_E1928C;
    *(_QWORD *)(v9 + 24) = v1;
    v23 = sub_129E54;
    v24 = v9;
    aBlock = _NSConcreteStackBlock;
    v20 = 1107296256;
    v21 = sub_59BEF0;
    v22 = &block_descriptor_148_3;
    v10 = _Block_copy(&aBlock);
    swift_retain();
    objc_msgSend(v8, "addCompletion:", v10, swift_release().n128_f64[0]);
    swift_release();
    _Block_release(v10);

    return;
  }
  __break(1u);
}

void sub_E0E5A8(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  __n128 v7;
  _QWORD v8[6];

  v2 = objc_opt_self(UIView);
  v3 = swift_allocObject(&unk_13C79E0, 24, 7);
  *(_QWORD *)(v3 + 16) = a1;
  v4 = swift_allocObject(&unk_13C7A08, 32, 7);
  *(_QWORD *)(v4 + 16) = sub_E19418;
  *(_QWORD *)(v4 + 24) = v3;
  v8[4] = sub_AF944;
  v8[5] = v4;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_3A1A94;
  v8[3] = &block_descriptor_159_0;
  v5 = _Block_copy(v8);
  v6 = a1;
  swift_retain();
  objc_msgSend((id)v2, "performWithoutAnimation:", v5, swift_release().n128_f64[0]);
  _Block_release(v5);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation(v4, "", 136, 383, 44, 1, v7);
  swift_release();
  swift_release();
  if ((v2 & 1) != 0)
    __break(1u);
}

void sub_E0E6E0(uint64_t a1)
{
  uint64_t *v1;
  double v2;
  CGFloat v3;
  CGFloat v4;
  CGFloat v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  double v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t i;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  id v27;
  double v28;
  double v29;
  CGFloat v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  double v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[3];
  uint64_t v40;
  uint64_t v41;
  char v42[24];
  char v43[24];
  CGRect v44;
  CGRect v45;

  v7 = (uint64_t *)(a1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews);
  swift_beginAccess(a1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews, v43, 0, 0);
  v8 = *v7;
  if ((unint64_t)*v7 >> 62)
  {
    if (v8 < 0)
      v1 = (uint64_t *)*v7;
    else
      v1 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
    v9 = _CocoaArrayWrapper.endIndex.getter(v1);
    if (v9)
      goto LABEL_3;
LABEL_11:
    swift_bridgeObjectRelease();
    v2 = 0.0;
    v3 = 0.0;
    v4 = 0.0;
    v5 = 0.0;
    goto LABEL_12;
  }
  v9 = *(_QWORD *)((char *)&dword_10 + (v8 & 0xFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  if (!v9)
    goto LABEL_11;
LABEL_3:
  if ((v8 & 0xC000000000000001) != 0)
  {
    v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v8);
  }
  else
  {
    if (!*(_QWORD *)((char *)&dword_10 + (v8 & 0xFFFFFFFFFFFFF8)))
    {
      __break(1u);
      goto LABEL_39;
    }
    v10 = *(id *)(v8 + 32);
  }
  v11 = v10;
  swift_bridgeObjectRelease();
  v8 = (uint64_t)v11;
  v2 = UIView.untransformedFrame.getter();
  v3 = v12;
  v4 = v13;
  v5 = v14;

LABEL_12:
  v1 = (uint64_t *)(a1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
  swift_beginAccess(a1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews, v42, 0, 0);
  v15 = *v1;
  if ((unint64_t)*v1 >> 62)
  {
    if (v15 < 0)
      v8 = *v1;
    else
      v8 = v15 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v16 = _CocoaArrayWrapper.endIndex.getter(v8);
    if (!v16)
      goto LABEL_24;
  }
  else
  {
    v16 = *(_QWORD *)((char *)&dword_10 + (v15 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    if (!v16)
      goto LABEL_24;
  }
  if (v16 < 1)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  for (i = 0; i != v16; ++i)
  {
    if ((v15 & 0xC000000000000001) != 0)
      v18 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v15);
    else
      v18 = (char *)*(id *)(v15 + 8 * i + 32);
    v19 = v18;
    sub_E0F124(v18);

  }
LABEL_24:
  swift_bridgeObjectRelease();
  if (!v9)
    return;
  v8 = *v7;
  if (!((unint64_t)*v7 >> 62))
  {
    v20 = *(char **)((char *)&dword_10 + (v8 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    if (v20)
      goto LABEL_27;
LABEL_44:
    swift_bridgeObjectRelease();
    return;
  }
LABEL_40:
  if (v8 < 0)
    v37 = v8;
  else
    v37 = v8 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v20 = (char *)_CocoaArrayWrapper.endIndex.getter(v37);
  if (!v20)
    goto LABEL_44;
LABEL_27:
  if ((v8 & 0xC000000000000001) != 0)
  {
    v21 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v8);
  }
  else
  {
    if (!*(_QWORD *)((char *)&dword_10 + (v8 & 0xFFFFFFFFFFFFF8)))
    {
      __break(1u);
LABEL_48:
      swift_bridgeObjectRetain();
      v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v8);
      swift_bridgeObjectRelease();
      goto LABEL_35;
    }
    v21 = (char *)*(id *)(v8 + 32);
  }
  v20 = v21;
  objc_msgSend(v21, "frame", swift_bridgeObjectRelease().n128_f64[0]);
  v45.origin.x = v2;
  v45.origin.y = v3;
  v45.size.width = v4;
  v45.size.height = v5;
  if (CGRectEqualToRect(v44, v45))
  {
LABEL_36:

    return;
  }
  v22 = (uint64_t)&v20[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
  swift_beginAccess(&v20[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], &v38, 0, 0);
  sub_55D1C(v22, (uint64_t)v39);
  v23 = v40;
  v24 = v41;
  __swift_project_boxed_opaque_existential_1(v39, v40);
  v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 16))(v23, v24);
  v9 = v25;
  v8 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
    goto LABEL_48;
  if ((v25 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v25 < *(_QWORD *)((char *)&dword_10 + (v8 & 0xFFFFFFFFFFFFF8)))
  {
    v26 = *(id *)(v8 + 8 * v25 + 32);
LABEL_35:
    v27 = v26;
    v28 = UIView.untransformedFrame.getter();
    v30 = v29;
    v32 = v31;
    v34 = v33;

    sub_E10A00(v28, v30, v32, v34);
    v36 = v35;

    __swift_destroy_boxed_opaque_existential_1(v39);
    objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView), "setContentOffset:", 0.0, v36);
    goto LABEL_36;
  }
  __break(1u);
}

void sub_E0EAA8(char *a1, unsigned __int8 a2, uint64_t a3)
{
  char *v3;
  char *v4;
  double Width;
  id v9;
  void *v10;
  int v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  double *v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  uint64_t v22;
  uint64_t v23;
  CGFloat height;
  uint64_t v25;
  uint64_t v26;
  CGFloat v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t *v38;
  id v39;
  double v40;
  id v41;
  double v42;
  double v43;
  CGFloat v44;
  double v45;
  CGFloat v46;
  double v47;
  CGFloat v48;
  double MaxY;
  char **v50;
  double *v51;
  _BYTE *v52;
  CGFloat x;
  CGFloat y;
  CGFloat v55;
  CGFloat v56;
  double v57;
  id v58;
  void *v59;
  uint64_t v60;
  char v61[24];
  char v62[24];
  char v63[24];
  _BYTE v64[32];
  _QWORD v65[3];
  uint64_t v66;
  uint64_t v67;
  char v68[24];
  CGRect v69;
  uint64_t v70;
  CGRect v71;
  CGRect v72;
  CGRect v73;
  CGRect v74;

  v4 = v3;
  objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView], "frame");
  Width = CGRectGetWidth(v71);
  v9 = objc_msgSend(v4, "view");
  if (!v9)
    goto LABEL_42;
  v10 = v9;
  v11 = a2;
  objc_msgSend(v9, "layoutMargins");

  v13 = Width - UIEdgeInsets.horizontal.getter(v12);
  v14 = (uint64_t)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
  swift_beginAccess(&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], v68, 0, 0);
  sub_55D1C(v14, (uint64_t)&v69);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_15075B0);
  if (swift_dynamicCast(v65, &v69, v15, &type metadata for Lyrics.TextLine, 0))
  {
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    v16 = &v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics];
    swift_beginAccess(&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics], v61, 0, 0);
    if (*(_QWORD *)v16 && !*(_BYTE *)(*(_QWORD *)v16 + 96))
    {
      v18 = 1.0;
    }
    else
    {
      v17 = (double *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
      swift_beginAccess(&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs], &v60, 0, 0);
      v18 = v17[64];
    }
  }
  else
  {
    v18 = 1.0;
    if ((swift_dynamicCast(v65, &v69, v15, &type metadata for Lyrics.InstrumentalLine, 0) & 1) == 0
      && swift_dynamicCast(v65, &v69, v15, &type metadata for Lyrics.SongwritersLine, 0))
    {
      swift_bridgeObjectRelease();
    }
  }
  __swift_destroy_boxed_opaque_existential_1(&v69);
  if (v11 == 2)
  {
    objc_msgSend(a1, "sizeThatFits:", v13 * v18, INFINITY);
  }
  else
  {
    v19 = *(_QWORD *)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
    if (v19)
    {
      v20 = *(_QWORD *)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView + 8];
      ObjectType = swift_getObjectType();
      v65[0] = v19;
      (*(void (**)(_QWORD, uint64_t, uint64_t, double, double))(v20 + 96))(v11 & 1, ObjectType, v20, v13 * v18, INFINITY);
    }
  }
  sub_55D1C(v14, (uint64_t)v65);
  if (swift_dynamicCast(v64, v65, v15, &type metadata for Lyrics.InstrumentalLine, 0))
  {
    v22 = *(_QWORD *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView];
    if (v22)
    {
      v23 = v22 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
      swift_beginAccess(v22 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line, v63, 0, 0);
      sub_55D1C(v23, (uint64_t)&v69);
      height = v69.size.height;
      v25 = v70;
      __swift_project_boxed_opaque_existential_1(&v69, *(uint64_t *)&v69.size.height);
      v26 = (*(uint64_t (**)(CGFloat, uint64_t))(v25 + 16))(COERCE_CGFLOAT(*(_QWORD *)&height), v25);
      __swift_destroy_boxed_opaque_existential_1(&v69);
    }
    else
    {
      v26 = 0;
    }
    sub_55D1C(v14, (uint64_t)&v69);
    v27 = v69.size.height;
    v28 = v70;
    __swift_project_boxed_opaque_existential_1(&v69, *(uint64_t *)&v69.size.height);
    v29 = (*(uint64_t (**)(CGFloat, uint64_t))(v28 + 16))(COERCE_CGFLOAT(*(_QWORD *)&v27), v28);
    if (v22)
    {
      v30 = v29;
      __swift_destroy_boxed_opaque_existential_1(&v69);
      if (v26 == v30)
        swift_beginAccess(&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs], v62, 0, 0);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1(&v69);
    }
  }
  __swift_destroy_boxed_opaque_existential_1(v65);
  sub_55D1C(v14, (uint64_t)v65);
  v31 = v66;
  v32 = v67;
  __swift_project_boxed_opaque_existential_1(v65, v66);
  v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 16))(v31, v32);
  __swift_destroy_boxed_opaque_existential_1(v65);
  if (!v33)
  {
    *(_QWORD *)&MaxY = swift_beginAccess(&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs], v65, 0, 0).n128_u64[0];
    v50 = &selRef_sharedPreferences;
    goto LABEL_36;
  }
  sub_E1906C(a3, (uint64_t)&v69);
  if ((v70 & 1) != 0)
  {
    sub_55D1C(v14, (uint64_t)v65);
    v34 = v66;
    v35 = v67;
    __swift_project_boxed_opaque_existential_1(v65, v66);
    v36 = (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 16))(v34, v35);
    v37 = v36 - 1;
    if (__OFSUB__(v36, 1))
    {
      __break(1u);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1(v65);
      v38 = (uint64_t *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
      swift_beginAccess(&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews], v65, 0, 0);
      v34 = *v38;
      if ((v34 & 0xC000000000000001) == 0)
      {
        if ((v37 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v37 < *(_QWORD *)((char *)&dword_10 + (v34 & 0xFFFFFFFFFFFFF8)))
        {
          v39 = *(id *)(v34 + 8 * v37 + 32);
LABEL_30:
          objc_msgSend(v39, "frame");
          v40 = CGRectGetHeight(v72);
          v41 = v39;
          v42 = UIView.untransformedFrame.getter();
          v44 = v43;
          v46 = v45;
          v48 = v47;

          v73.origin.x = v42;
          v73.origin.y = v44;
          v73.size.width = v46;
          v73.size.height = v48;
          CGRectGetMaxY(v73);

          v50 = &selRef_sharedPreferences;
          if (v40 <= 0.0)
            goto LABEL_36;
          v51 = (double *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
          v52 = v64;
          goto LABEL_35;
        }
        __break(1u);
LABEL_42:
        __break(1u);
        goto LABEL_43;
      }
    }
    swift_bridgeObjectRetain();
    v39 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v37, v34);
    swift_bridgeObjectRelease();
    goto LABEL_30;
  }
  x = v69.origin.x;
  y = v69.origin.y;
  v55 = v69.size.width;
  v56 = v69.size.height;
  v57 = CGRectGetHeight(v69);
  v74.origin.x = x;
  v74.origin.y = y;
  v74.size.width = v55;
  v74.size.height = v56;
  MaxY = CGRectGetMaxY(v74);
  v50 = &selRef_sharedPreferences;
  if (v57 <= 0.0)
    goto LABEL_36;
  v51 = (double *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
  v52 = v65;
LABEL_35:
  swift_beginAccess(v51, v52, 0, 0);
  MaxY = v51[10];
LABEL_36:
  v58 = objc_msgSend(v4, v50[166], MaxY);
  if (v58)
  {
    v59 = v58;
    objc_msgSend(v58, "layoutMargins");

    return;
  }
LABEL_43:
  __break(1u);
}

void sub_E0F124(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  CGFloat v4;
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  double Width;
  double Height;
  double v20;
  double v21;
  double v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[24];
  _BYTE v28[24];
  _QWORD v29[3];
  uint64_t v30;
  uint64_t v31;
  _OWORD v32[2];
  char v33;
  CGRect v34;
  CGRect v35;
  CGRect v36;
  CGRect v37;

  v2 = v1;
  memset(v32, 0, sizeof(v32));
  v33 = 1;
  sub_E0EAA8(a1, 2u, (uint64_t)v32);
  UIView.untransformedFrame.setter(v4, v5, v6, v7);
  v8 = (uint64_t)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
  swift_beginAccess(&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], v28, 0, 0);
  sub_55D1C(v8, (uint64_t)v29);
  v9 = v30;
  v10 = v31;
  __swift_project_boxed_opaque_existential_1(v29, v30);
  v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 16))(v9, v10);
  v12 = (uint64_t *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
  swift_beginAccess(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews, v27, 0, 0);
  v13 = *v12;
  if (!((unint64_t)v13 >> 62))
  {
    v14 = *(_QWORD *)((char *)&dword_10 + (v13 & 0xFFFFFFFFFFFFF8));
    v15 = v14 - 1;
    if (!__OFSUB__(v14, 1))
      goto LABEL_3;
LABEL_13:
    __break(1u);
    return;
  }
  if (v13 < 0)
    v25 = v13;
  else
    v25 = v13 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v26 = _CocoaArrayWrapper.endIndex.getter(v25);
  swift_bridgeObjectRelease();
  v15 = v26 - 1;
  if (__OFSUB__(v26, 1))
    goto LABEL_13;
LABEL_3:
  __swift_destroy_boxed_opaque_existential_1(v29);
  if (v11 == v15)
  {
    v16 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
    v17 = *(id *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView);
    objc_msgSend(v17, "frame");
    Width = CGRectGetWidth(v34);
    v35.origin.x = UIView.untransformedFrame.getter();
    objc_msgSend(v17, "setContentSize:", Width, CGRectGetMaxY(v35));

    objc_msgSend(*(id *)(v2 + v16), "frame");
    Height = CGRectGetHeight(v36);
    objc_msgSend(*(id *)(v2 + v16), "contentInset");
    v21 = v20;
    v37.origin.x = UIView.untransformedFrame.getter();
    v22 = Height - (v21 + CGRectGetHeight(v37));
    v23 = *(id *)(v2 + v16);
    v24 = v23;
    if (v22 <= 0.0)
      objc_msgSend(v23, "contentInset");
    objc_msgSend(v24, "contentInset");
    objc_msgSend(v24, "setContentInset:");

  }
}

void sub_E0F330(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t, __n128);
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t ObjectType;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(__int128 *, char);
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t, uint64_t);
  id v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(uint64_t, uint64_t, __n128);
  __n128 v57;
  id v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  void *v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *__src;
  uint64_t v76;
  uint64_t *v77;
  _QWORD v78[3];
  uint64_t v79;
  uint64_t v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD v84[3];
  uint64_t v85;
  uint64_t v86;
  char v87[24];
  char v88[24];
  char v89[24];
  _BYTE __dst[552];

  v2 = v1;
  v4 = (uint64_t *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
  swift_beginAccess(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews, v89, 0, 0);
  v5 = *v4;
  if ((unint64_t)*v4 >> 62)
    goto LABEL_61;
  v6 = *(_QWORD *)((char *)&dword_10 + (v5 & 0xFFFFFFFFFFFFF8));
LABEL_3:
  v7 = *(_QWORD *)(a1 + 40);
  a1 = *(_QWORD *)(v7 + 16);
  if (a1 >= v6)
    goto LABEL_8;
  v8 = *v4;
  if (!((unint64_t)*v4 >> 62))
  {
    v5 = *(_QWORD *)((char *)&dword_10 + (v8 & 0xFFFFFFFFFFFFF8));
    if (v5 >= a1)
      goto LABEL_6;
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
    return;
  }
  if (v8 < 0)
    v72 = *v4;
  else
    v72 = v8 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v5 = _CocoaArrayWrapper.endIndex.getter(v72);
  swift_bridgeObjectRelease();
  if (v5 < a1)
    goto LABEL_69;
LABEL_6:
  if (a1 != v5)
  {
    if (a1 < (unint64_t)v5)
    {
      v68 = a1;
      while (1)
      {
        v69 = *v4;
        if ((*v4 & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain();
          v70 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v68, v69);
          swift_bridgeObjectRelease();
        }
        else
        {
          if ((v68 & 0x8000000000000000) != 0)
            goto LABEL_59;
          if (v68 >= *(_QWORD *)((char *)&dword_10 + (v69 & 0xFFFFFFFFFFFFF8)))
          {
LABEL_60:
            __break(1u);
LABEL_61:
            if (v5 < 0)
              v71 = v5;
            else
              v71 = v5 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain();
            v6 = _CocoaArrayWrapper.endIndex.getter(v71);
            swift_bridgeObjectRelease();
            goto LABEL_3;
          }
          v70 = *(id *)(v69 + 8 * v68 + 32);
        }
        ++v68;
        objc_msgSend(v70, "removeFromSuperview");

        if (v5 == v68)
          goto LABEL_7;
      }
    }
    goto LABEL_70;
  }
LABEL_7:
  swift_beginAccess(v4, __dst, 33, 0);
  sub_DCB434(a1, v5);
  swift_endAccess(__dst);
LABEL_8:
  v9 = *(void **)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView) = 0;

  v10 = *(_QWORD *)(v7 + 16);
  if (v10)
  {
    v11 = v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics;
    v12 = (_QWORD *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs);
    v74 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
    v13 = v7 + 32;
    swift_bridgeObjectRetain();
    v76 = v11;
    swift_beginAccess(v11, v88, 0, 0);
    __src = v12;
    swift_beginAccess(v12, v87, 0, 0);
    v73 = v2;
    v77 = v4;
    while (1)
    {
      sub_55D1C(v13, (uint64_t)v84);
      v15 = v85;
      v16 = v86;
      __swift_project_boxed_opaque_existential_1(v84, v85);
      v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 16))(v15, v16);
      v18 = v17;
      v19 = *v4;
      if ((unint64_t)*v4 >> 62)
      {
        if (v19 < 0)
          v48 = *v4;
        else
          v48 = v19 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        v49 = _CocoaArrayWrapper.endIndex.getter(v48);
        swift_bridgeObjectRelease();
        if (v18 >= v49)
        {
LABEL_34:
          sub_55D1C((uint64_t)v84, (uint64_t)&v81);
          if (*(_QWORD *)v76)
          {
            if (*(_BYTE *)(*(_QWORD *)v76 + 96))
            {
              v50 = v85;
              v51 = v86;
              __swift_project_boxed_opaque_existential_1(v84, v85);
              v52 = (*(uint64_t (**)(uint64_t, uint64_t))(v51 + 24))(v50, v51);
            }
            else
            {
              v52 = __src[6];
              v53 = *((_BYTE *)__src + 56);
              sub_55D1C((uint64_t)v84, (uint64_t)v78);
              if ((v53 & 1) != 0)
              {
                v54 = v79;
                v55 = v80;
                __swift_project_boxed_opaque_existential_1(v78, v79);
                v56 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v55 + 24);
                v57 = swift_retain();
                v52 = v56(v54, v55, v57);
              }
              else
              {
                swift_retain();
              }
              v2 = v73;
              __swift_destroy_boxed_opaque_existential_1(v78);
              swift_release();
            }
          }
          else
          {
            v52 = 4;
          }
          memcpy(__dst, __src, 0x219uLL);
          v58 = objc_allocWithZone((Class)type metadata accessor for SyncedLyricsLineView());
          sub_533134((uint64_t)__dst);
          v59 = sub_E033EC(&v81, v52, __dst);
          sub_532E70((uint64_t)__dst);
          sub_4E684(0, &qword_15087A8, UIAction_ptr);
          v60 = swift_allocObject(&unk_13C7118, 24, 7);
          swift_unknownObjectWeakInit(v60 + 16);
          v61 = swift_allocObject(&unk_13C7648, 24, 7);
          swift_unknownObjectWeakInit(v61 + 16);
          v62 = swift_allocObject(&unk_13C7670, 32, 7);
          *(_QWORD *)(v62 + 16) = v60;
          *(_QWORD *)(v62 + 24) = v61;
          v63 = v59;
          v64 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_E19038, v62);
          objc_msgSend(v63, "addAction:forControlEvents:", v64, 64);

          objc_msgSend(*(id *)(v2 + v74), "addSubview:", v63);
          swift_beginAccess(v4, &v81, 33, 0);
          v25 = v63;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v25);
          v66 = *(_QWORD *)((char *)&dword_10 + (*v4 & 0xFFFFFFFFFFFFFF8));
          v65 = *(_QWORD *)((char *)&dword_18 + (*v4 & 0xFFFFFFFFFFFFFF8));
          if (v66 >= v65 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v65 > 1, v66 + 1, 1);
          v67 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v66, v25);
          specialized Array._endMutation()(v67);
          swift_endAccess(&v81);
          v14 = (char *)objc_msgSend(objc_allocWithZone((Class)UILongPressGestureRecognizer), "init");
          objc_msgSend(v14, "setCancelsTouchesInView:", 0);
          objc_msgSend(v14, "addTarget:action:", v2, "shareGestureHandler:");
          objc_msgSend(v25, "addGestureRecognizer:", v14);
          sub_E0F124(v25);

          goto LABEL_11;
        }
      }
      else if (v17 >= *(_QWORD *)((char *)&dword_10 + (v19 & 0xFFFFFFFFFFFFF8)))
      {
        goto LABEL_34;
      }
      v20 = v85;
      v21 = v86;
      __swift_project_boxed_opaque_existential_1(v84, v85);
      v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 16))(v20, v21);
      a1 = v22;
      v5 = *v4;
      if ((*v4 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        v23 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(a1, v5);
        swift_bridgeObjectRelease();
      }
      else
      {
        if ((v22 & 0x8000000000000000) != 0)
        {
          __break(1u);
LABEL_58:
          __break(1u);
LABEL_59:
          __break(1u);
          goto LABEL_60;
        }
        if (v22 >= *(_QWORD *)((char *)&dword_10 + (v5 & 0xFFFFFFFFFFFFF8)))
          goto LABEL_58;
        v23 = (char *)*(id *)(v5 + 8 * v22 + 32);
      }
      sub_55D1C((uint64_t)v84, (uint64_t)&v81);
      v24 = &v23[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
      swift_beginAccess(&v23[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], v78, 33, 0);
      v25 = v23;
      __swift_assign_boxed_opaque_existential_1(v24, &v81);
      swift_endAccess(v78);
      sub_E023A8();
      __swift_destroy_boxed_opaque_existential_1(&v81);
      if (*(_QWORD *)v76)
      {
        if (*(_BYTE *)(*(_QWORD *)v76 + 96))
        {
          v26 = v85;
          v27 = v86;
          __swift_project_boxed_opaque_existential_1(v84, v85);
          v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 24))(v26, v27);
        }
        else
        {
          v28 = __src[6];
          v29 = *((_BYTE *)__src + 56);
          sub_55D1C((uint64_t)v84, (uint64_t)&v81);
          if ((v29 & 1) != 0)
          {
            v30 = v82;
            v31 = v83;
            __swift_project_boxed_opaque_existential_1(&v81, v82);
            v32 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v31 + 24);
            v33 = swift_retain();
            v28 = v32(v30, v31, v33);
          }
          else
          {
            swift_retain();
          }
          __swift_destroy_boxed_opaque_existential_1(&v81);
          swift_release();
        }
      }
      else
      {
        v28 = 4;
      }
      *(_QWORD *)&v25[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_alignment] = v28;
      sub_E023A8();
      v34 = *(_QWORD *)&v25[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
      if (v34)
      {
        v35 = *(_QWORD *)&v25[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView + 8];
        ObjectType = swift_getObjectType();
        *(_QWORD *)&v81 = v34;
        (*(void (**)(uint64_t, uint64_t))(v35 + 80))(ObjectType, v35);
      }
      v37 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_isScrolling;
      v25[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_isScrolling] = 1;
      v39 = sub_E01124((uint64_t)&v81);
      v40 = *(void **)v38;
      if (*(_QWORD *)v38)
      {
        v41 = v38;
        v42 = v25[v37];
        v43 = *(_QWORD *)(v38 + 8);
        v44 = swift_getObjectType();
        v78[0] = v40;
        v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 40);
        v46 = v40;
        v45(v42, v44, v43);
        v2 = v73;
        v47 = *(void **)v41;
        *(_QWORD *)v41 = v78[0];
        *(_QWORD *)(v41 + 8) = v43;

      }
      v39(&v81, 0);
      sub_E01B2C(0, 0);
      sub_E0F124(v25);
      v14 = v25;
LABEL_11:

      __swift_destroy_boxed_opaque_existential_1(v84);
      v13 += 40;
      --v10;
      v4 = v77;
      if (!v10)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  sub_E10F14(0);
  sub_E0DE64();
}

void sub_E0FBAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  id v41;
  double v42;
  double v43;
  CGFloat v44;
  CGFloat v45;
  CGFloat v46;
  CGFloat v47;
  double v48;
  id v49;
  char *v50;
  uint64_t v51;
  id v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  double (*v57)(uint64_t, uint64_t);
  id v58;
  double v59;
  uint64_t v60;
  double v61;
  double v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(uint64_t, uint64_t);
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t ObjectType;
  void *v72;
  char *v73;
  uint64_t __dst[68];
  char v75[24];
  char v76[24];
  _BYTE v77[40];
  char v78[24];
  char v79[32];
  CGRect v80;
  CGRect v81;

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v79, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (char *)Strong;
    v7 = a3 + 16;
    swift_beginAccess(v7, v78, 0, 0);
    v8 = swift_unknownObjectWeakLoadStrong(v7);
    if (!v8)
    {
      v50 = v6;
LABEL_37:

      return;
    }
    v9 = (char *)v8;
    objc_msgSend(*(id *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_tapFeedbackGenerator], "selectionChanged");
    v10 = *(void **)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink];
    if (v10)
      objc_msgSend(v10, "setPaused:", 1);
    v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_needsTapHandling] = 1;
    v11 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScrollTimer;
    objc_msgSend(*(id *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScrollTimer], "invalidate");
    v12 = *(void **)&v6[v11];
    *(_QWORD *)&v6[v11] = 0;

    v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScroll] = 1;
    v13 = (uint64_t)&v9[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
    swift_beginAccess(&v9[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], v76, 0, 0);
    sub_55D1C(v13, (uint64_t)v77);
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_15075B0);
    if ((swift_dynamicCast(__dst, v77, v14, &type metadata for Lyrics.TextLine, 6) & 1) == 0)
    {
LABEL_31:
      v53 = objc_msgSend(objc_allocWithZone((Class)MSVLyricsLine), "init");
      sub_55D1C(v13, (uint64_t)__dst);
      v55 = __dst[3];
      v54 = __dst[4];
      __swift_project_boxed_opaque_existential_1(__dst, __dst[3]);
      v56 = *(_QWORD *)(v54 + 8);
      v57 = *(double (**)(uint64_t, uint64_t))(v56 + 8);
      v58 = v53;
      v59 = v57(v55, v56);
      v60 = *(_QWORD *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager];
      v61 = 0.0;
      if (v60)
      {
        swift_beginAccess(v60 + 88, v77, 0, 0);
        if (*(_BYTE *)(v60 + 88) == 1)
        {
          swift_retain();
          Lyrics.spatialOffset.getter();
          v61 = v62;
          swift_release();
        }
      }
      __swift_destroy_boxed_opaque_existential_1(__dst);
      objc_msgSend(v58, "setStartTime:", v59 + v61);

      sub_55D1C(v13, (uint64_t)__dst);
      v64 = __dst[3];
      v63 = __dst[4];
      __swift_project_boxed_opaque_existential_1(__dst, __dst[3]);
      v65 = *(_QWORD *)(v63 + 8);
      v66 = *(void (**)(uint64_t, uint64_t))(v65 + 16);
      v50 = (char *)v58;
      v66(v64, v65);
      objc_msgSend(v50, "setEndTime:");

      __swift_destroy_boxed_opaque_existential_1(__dst);
      v67 = &v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate];
      swift_beginAccess(&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate], __dst, 0, 0);
      v68 = swift_unknownObjectWeakLoadStrong(v67);
      if (v68)
      {
        v69 = v68;
        v70 = *((_QWORD *)v67 + 1);
        ObjectType = swift_getObjectType();
        (*(void (**)(char *, char *, uint64_t, uint64_t))(v70 + 8))(v6, v50, ObjectType, v70);

        swift_unknownObjectRelease(v69);
      }
      else
      {

      }
      goto LABEL_37;
    }
    v15 = *(void **)&v9[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
    if (!v15)
      goto LABEL_23;
    v16 = _s19SBS_TextContentViewCMa();
    v17 = swift_dynamicCastClass(v15, v16);
    if (!v17)
      goto LABEL_23;
    v18 = *(_QWORD *)(v17 + OBJC_IVAR___MusicSBS_TextContentView_textView);
    if (!v18)
      goto LABEL_40;
    v19 = *(_QWORD *)(v18
                    + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation);
    if (!v19)
    {
LABEL_23:
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_31;
    }
    v73 = v9;
    v20 = *(_QWORD *)(v19 + 24);
    if ((unint64_t)v20 >> 62)
    {
      if (v20 < 0)
        v51 = *(_QWORD *)(v19 + 24);
      else
        v51 = v20 & 0xFFFFFFFFFFFFFF8;
      v52 = v15;
      swift_retain();
      swift_bridgeObjectRetain();
      v21 = _CocoaArrayWrapper.endIndex.getter(v51);
      if (v21)
        goto LABEL_12;
    }
    else
    {
      v21 = *(_QWORD *)((char *)&dword_10 + (v20 & 0xFFFFFFFFFFFFF8));
      v22 = v15;
      swift_retain();
      swift_bridgeObjectRetain();
      if (v21)
      {
LABEL_12:
        v72 = v15;
        sub_4E684(0, (unint64_t *)&qword_15076C0, OS_dispatch_queue_ptr);
        v23 = v21 - 1;
        if (v21 >= 1)
        {
          v24 = &v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
          swift_beginAccess(&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs], v75, 0, 0);
          v25 = 0;
          if ((v20 & 0xC000000000000001) == 0)
            goto LABEL_15;
LABEL_14:
          v26 = specialized _ArrayBuffer._getElementSlowPath(_:)(v25, v20);
          while (1)
          {
            memcpy(__dst, v24, 0x219uLL);
            *(_BYTE *)(v26 + 80) = 1;
            v27 = sub_533134((uint64_t)__dst);
            v35 = (void *)static OS_dispatch_queue.main.getter(v27, v28, v29, v30, v31, v32, v33, v34);
            v36 = *(double *)&__dst[65];
            v37 = swift_allocObject(&unk_13C7698, 24, 7);
            swift_weakInit(v37 + 16);
            swift_retain();
            OS_dispatch_queue.asyncAfter(_:block:)((uint64_t)sub_E19064, v37, v36);

            swift_release_n(v37, 2);
            v38 = *(_QWORD *)(v26 + 72);
            if (v38)
            {
              v39 = *(void **)(v38 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_gradientView);
              if (v39)
              {
                v40 = (void *)__dst[21];
                v41 = v39;
                objc_msgSend(v40, "lineHeight");
                v43 = v42 * *(double *)&__dst[28] + *(double *)&__dst[44] + *(double *)&__dst[44];
                v44 = *(double *)(v26 + 40);
                v45 = *(double *)(v26 + 48);
                v46 = *(double *)(v26 + 56);
                v47 = *(double *)(v26 + 64);
                v80.origin.x = v44;
                v80.origin.y = v45;
                v80.size.width = v46;
                v80.size.height = v47;
                v48 = (v43 - CGRectGetHeight(v80)) * 0.5;
                v49 = v41;
                v81.origin.x = v44;
                v81.origin.y = v45;
                v81.size.width = v46;
                v81.size.height = v47;
                objc_msgSend(v49, "setFrame:", -v48, -v48, v48, CGRectGetHeight(v81) + v48 + v48);

              }
            }
            sub_532E70((uint64_t)__dst);
            swift_release();
            if (v23 == v25)
              break;
            ++v25;
            if ((v20 & 0xC000000000000001) != 0)
              goto LABEL_14;
LABEL_15:
            v26 = *(_QWORD *)(v20 + 8 * v25 + 32);
            swift_retain();
          }
          swift_release();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v15 = v72;
          goto LABEL_30;
        }
        __break(1u);
LABEL_40:
        __break(1u);
        return;
      }
    }
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_30:

    swift_release();
    v9 = v73;
    goto LABEL_31;
  }
}

Swift::Void __swiftcall SyncedLyricsViewController.enterTrackingMode()()
{
  uint64_t v0;
  _BYTE *v1;
  _BYTE v2[24];

  v1 = (_BYTE *)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode, v2, 1, 0);
  if (*v1 != 2)
  {
    sub_E12120();
    *v1 = 2;
  }
}

Swift::Void __swiftcall SyncedLyricsViewController.leaveTrackingMode()()
{
  uint64_t v0;
  _BYTE *v1;
  _BYTE v2[24];

  v1 = (_BYTE *)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode, v2, 1, 0);
  if (*v1 == 2)
  {
    sub_E10F14(0);
    *v1 = 0;
  }
}

uint64_t sub_E102CC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _BOOL8 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v7;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];

  v1 = v0;
  v2 = (_QWORD *)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics);
  swift_beginAccess(v2, v15, 0, 0);
  if (!*v2 || (*(_BYTE *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isBackgrounded) & 1) != 0)
    return 1;
  v4 = v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider;
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider, &v9, 0, 0);
  sub_E0E210(v4, (uint64_t)&v10);
  if (v11)
  {
    sub_8B15C(&v10, (uint64_t)v12);
    v5 = v13;
    v6 = v14;
    __swift_project_boxed_opaque_existential_1(v12, v13);
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6) & 1) != 0)
    {
      v3 = 1;
    }
    else
    {
      v7 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode);
      swift_beginAccess(v7, &v10, 0, 0);
      v3 = *v7 == 2;
    }
    __swift_destroy_boxed_opaque_existential_1(v12);
  }
  else
  {
    sub_56024((uint64_t)&v10, &qword_15085C0);
    return 1;
  }
  return v3;
}

_QWORD *sub_E103F8()
{
  char *v0;
  _QWORD *result;
  void *v2;
  double *v3;
  double v4;
  void *v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  _BYTE v10[24];
  _BYTE v11[24];

  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView], "contentOffset");
  result = objc_msgSend(v0, "view");
  if (result)
  {
    v2 = result;
    objc_msgSend(result, "frame");

    v3 = (double *)&v0[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight];
    *(_QWORD *)&v4 = swift_beginAccess(&v0[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight], v11, 0, 0).n128_u64[0];
    if (*v3 > 0.0)
    {
LABEL_5:
      __chkstk_darwin();
      swift_beginAccess(&v0[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews], v10, 0, 0);
      __chkstk_darwin();
      v6 = swift_bridgeObjectRetain();
      v7 = sub_E16150(v6, (uint64_t (*)(void))sub_E18FD4);
      swift_bridgeObjectRelease();
      v8 = sub_E17C60((uint64_t)v7);
      swift_bridgeObjectRelease();
      v9 = sub_E08A10(v8);
      swift_bridgeObjectRelease();
      return v9;
    }
    result = objc_msgSend(v0, "view", v4);
    if (result)
    {
      v5 = result;
      objc_msgSend(result, "frame");

      goto LABEL_5;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_E105B8(_QWORD *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  int v15;
  BOOL v16;
  uint64_t i;
  int v18;
  uint64_t v19;
  id v20;
  id v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  BOOL v29;
  uint64_t v30;
  int v31;
  id v32;
  id v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t KeyPath;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t, uint64_t);
  _BYTE v43[24];
  unint64_t v44;
  CGRect v45;
  CGRect v46;
  CGRect v47;
  CGRect v48;

  v6 = v5;
  v44 = (unint64_t)_swiftEmptyArrayStorage;
  v11 = a1[3];
  v12 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v11);
  v42 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 16);
  v13 = v42(v11, v12);
  v14 = (uint64_t *)(v6 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
  swift_beginAccess(v14, v43, 0, 0);
  v15 = 0;
  v16 = v13 == 0;
  if (v13 <= 0)
    goto LABEL_3;
LABEL_2:
  for (i = v13 - 1; ; i = 0)
  {
    v19 = *v14;
    if ((*v14 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v19);
      swift_bridgeObjectRelease();
    }
    else
    {
      if ((unint64_t)v13 >= *(_QWORD *)((char *)&dword_10 + (v19 & 0xFFFFFFFFFFFFF8)))
      {
        __break(1u);
        goto LABEL_41;
      }
      v20 = *(id *)(v19 + 8 * v13 + 32);
    }
    objc_msgSend(v20, "frame");
    v47.origin.x = a2;
    v47.origin.y = a3;
    v47.size.width = a4;
    v47.size.height = a5;
    if (!CGRectIntersectsRect(v45, v47))
      break;
    v21 = v20;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v21);
    v23 = *(_QWORD *)((char *)&dword_10 + (v44 & 0xFFFFFFFFFFFFFF8));
    v22 = *(_QWORD *)((char *)&dword_18 + (v44 & 0xFFFFFFFFFFFFFF8));
    if (v23 >= v22 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v22 > 1, v23 + 1, 1);
    v24 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v23, v21);
    specialized Array._endMutation()(v24);

    v13 = i;
    v16 = i == 0;
    if (i > 0)
      goto LABEL_2;
LABEL_3:
    v18 = !v16;
    if (((v18 | v15) & 1) != 0)
      goto LABEL_18;
    v15 = 1;
  }

LABEL_18:
  v25 = v42(v11, v12);
  v13 = v25 + 1;
  if (__OFADD__(v25, 1))
    goto LABEL_43;
  v11 = *v14;
  if ((unint64_t)*v14 >> 62)
    goto LABEL_44;
  v26 = *(_QWORD *)((char *)&dword_10 + (v11 & 0xFFFFFFFFFFFFF8));
  v27 = v26 - 1;
  if (__OFSUB__(v26, 1))
    goto LABEL_49;
  while (2)
  {
    v28 = 0;
    v29 = v13 == v27;
    if (v13 < v27)
    {
LABEL_22:
      v30 = v13 + 1;
      goto LABEL_28;
    }
    while (1)
    {
      v31 = !v29;
      if (((v31 | v28) & 1) != 0)
        goto LABEL_39;
      v28 = 1;
      v30 = v27;
LABEL_28:
      v11 = *v14;
      if ((*v14 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v11);
        swift_bridgeObjectRelease();
        goto LABEL_32;
      }
      if (v13 < 0)
        break;
      if ((unint64_t)v13 >= *(_QWORD *)((char *)&dword_10 + (v11 & 0xFFFFFFFFFFFFF8)))
        goto LABEL_42;
      v32 = *(id *)(v11 + 8 * v13 + 32);
LABEL_32:
      objc_msgSend(v32, "frame");
      v48.origin.x = a2;
      v48.origin.y = a3;
      v48.size.width = a4;
      v48.size.height = a5;
      if (!CGRectIntersectsRect(v46, v48))
      {

LABEL_39:
        KeyPath = swift_getKeyPath(&unk_10ACF60);
        v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508798);
        v39 = sub_15BF84(&qword_15087A0, &qword_1508798);
        Sequence.sorted<A>(by:comparator:)(KeyPath, (uint64_t)sub_27AC04, 0, v38, v39, (uint64_t)&protocol witness table for Int);
        swift_release();
        swift_bridgeObjectRelease();
        return;
      }
      v33 = v32;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v33);
      v35 = *(_QWORD *)((char *)&dword_10 + (v44 & 0xFFFFFFFFFFFFFF8));
      v34 = *(_QWORD *)((char *)&dword_18 + (v44 & 0xFFFFFFFFFFFFFF8));
      if (v35 >= v34 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v34 > 1, v35 + 1, 1);
      v36 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v35, v33);
      specialized Array._endMutation()(v36);

      v13 = v30;
      v29 = v30 == v27;
      if (v30 < v27)
        goto LABEL_22;
    }
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    if (v11 < 0)
      v40 = v11;
    else
      v40 = v11 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v41 = _CocoaArrayWrapper.endIndex.getter(v40);
    swift_bridgeObjectRelease();
    v27 = v41 - 1;
    if (!__OFSUB__(v41, 1))
      continue;
    break;
  }
LABEL_49:
  __break(1u);
}

uint64_t sub_E1098C(uint64_t a1, _QWORD *a2)
{
  _QWORD *v3;
  _BYTE v5[24];
  _QWORD v6[5];

  sub_55D1C(a1, (uint64_t)v6);
  v3 = (_QWORD *)(*a2 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line);
  swift_beginAccess(v3, v5, 33, 0);
  __swift_assign_boxed_opaque_existential_1(v3, v6);
  swift_endAccess(v5);
  sub_E023A8();
  return __swift_destroy_boxed_opaque_existential_1(v6);
}

double sub_E10A00(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  uint64_t v4;
  uint64_t v9;
  double v10;
  int v11;
  CGFloat v12;
  CGFloat v13;
  char v14;
  CGFloat v15;
  CGFloat v16;
  CGFloat v17;
  CGFloat v18;
  CGFloat v19;
  CGFloat v20;
  _BYTE v22[24];
  CGRect v23;
  CGRect v24;
  CGRect v25;
  CGRect v26;

  v9 = v4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs;
  *(_QWORD *)&v10 = swift_beginAccess(v4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs, v22, 0, 0).n128_u64[0];
  v11 = *(char *)(v9 + 40);
  if (v11 < 0)
  {
    v12 = *(double *)(v9 + 8);
    v13 = *(double *)(v9 + 16);
    v14 = *(_BYTE *)(v9 + 40);
    v16 = *(double *)(v9 + 24);
    v15 = *(double *)(v9 + 32);
    if ((v11 & 1) != 0)
    {
      objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView), "frame", v10);
    }
    else
    {
      v17 = v12;
      v18 = v13;
      v19 = v16;
      v20 = v15;
    }
    CGRectGetHeight(*(CGRect *)&v17);
    v24.origin.x = a1;
    v24.origin.y = a2;
    v24.size.width = a3;
    v24.size.height = a4;
    CGRectGetHeight(v24);
    v25.origin.x = a1;
    v25.origin.y = a2;
    v25.size.width = a3;
    v25.size.height = a4;
    CGRectGetMinY(v25);
    if ((v14 & 1) == 0)
    {
      v26.origin.x = v12;
      v26.origin.y = v13;
      v26.size.width = v16;
      v26.size.height = v15;
      CGRectGetMinY(v26);
    }
  }
  else
  {
    v23.origin.x = a1;
    v23.origin.y = a2;
    v23.size.width = a3;
    v23.size.height = a4;
    CGRectGetMinY(v23);
    objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView), "contentInset");
  }
  return 0.0;
}

void sub_E10B5C(_QWORD *a1, void *a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t i;
  id v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t *v23;
  uint64_t v24;
  double v25;
  double (*v26)(uint64_t);
  uint64_t v27;
  uint64_t v28;
  double v29;
  double v30;
  double v31;
  _QWORD *v32;
  uint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  _BYTE v39[24];
  _BYTE v40[24];
  _BYTE v41[24];
  _BYTE v42[24];
  _BYTE v43[32];

  v5 = v4;
  v9 = a1[3];
  v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 16))(v9, v10);
  v12 = (uint64_t *)(v5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
  swift_beginAccess(v5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews, v43, 0, 0);
  v13 = *v12;
  if ((*v12 & 0xC000000000000001) == 0)
  {
    if ((v11 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v11 < *(_QWORD *)((char *)&dword_10 + (v13 & 0xFFFFFFFFFFFFF8)))
    {
      v12 = (uint64_t *)*(id *)(v13 + 8 * v11 + 32);
      if ((a3 & 1) == 0)
        goto LABEL_24;
LABEL_5:
      v37 = a4;
      a3 = (uint64_t *)(v5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews);
      swift_beginAccess(v5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews, v39, 1, 0);
      a4 = *a3;
      v38 = v5;
      if (!((unint64_t)*a3 >> 62))
      {
        v14 = *(_QWORD *)((char *)&dword_10 + (a4 & 0xFFFFFFFFFFFFF8));
        swift_bridgeObjectRetain();
        if (v14)
        {
LABEL_7:
          type metadata accessor for SyncedLyricsLineView();
          if (v14 < 1)
          {
            __break(1u);
            return;
          }
          for (i = 0; i != v14; ++i)
          {
            if ((a4 & 0xC000000000000001) != 0)
              v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a4);
            else
              v16 = *(id *)(a4 + 8 * i + 32);
            v17 = v16;
            if ((static NSObject.== infix(_:_:)(v16, v12) & 1) == 0)
              sub_E01B2C(0, a2);

          }
        }
LABEL_23:
        swift_bridgeObjectRelease();
        *a3 = (uint64_t)_swiftEmptyArrayStorage;
        swift_bridgeObjectRelease();
        v5 = v38;
        LOBYTE(a4) = v37;
        goto LABEL_24;
      }
LABEL_19:
      if (a4 < 0)
        v18 = a4;
      else
        v18 = a4 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v14 = _CocoaArrayWrapper.endIndex.getter(v18);
      if (v14)
        goto LABEL_7;
      goto LABEL_23;
    }
    __break(1u);
    goto LABEL_19;
  }
  swift_bridgeObjectRetain();
  v12 = (uint64_t *)specialized _ArrayBuffer._getElementSlowPath(_:)(v11, v13);
  swift_bridgeObjectRelease();
  if ((a3 & 1) != 0)
    goto LABEL_5;
LABEL_24:
  sub_E01B2C(1, a2);
  sub_E0D154((uint64_t)v12, a2 != 0);
  v19 = *(void **)((char *)v12 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView);
  if (v19)
  {
    v20 = _s23InstrumentalContentViewCMa();
    if (swift_dynamicCastClass(v19, v20))
    {
      v21 = *(void **)(v5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView);
      *(_QWORD *)(v5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView) = v12;
      v22 = v19;
      v23 = v12;

      if ((a4 & 1) != 0)
      {
        v24 = *(_QWORD *)(v5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager);
        v25 = 0.0;
        if (v24)
        {
          swift_beginAccess(v24 + 96, v41, 0, 0);
          v26 = *(double (**)(uint64_t))(v24 + 96);
          if (v26)
          {
            v27 = *(_QWORD *)(v24 + 104);
            swift_retain();
            v28 = sub_A9DEC((uint64_t)v26, v27);
            v29 = v26(v28);
            swift_beginAccess(v24 + 88, v40, 0, 0);
            v30 = 0.0;
            if (*(_BYTE *)(v24 + 88) == 1)
            {
              Lyrics.spatialOffset.getter();
              v30 = v31;
            }
            sub_5C198((uint64_t)v26, v27);
            swift_release();
            v25 = v29 - v30;
          }
        }
        sub_DFDD50(v25);
      }

    }
  }
  sub_E12008(v12, 1, 0.0);
  v32 = (_QWORD *)(v5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews);
  swift_beginAccess(v5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews, v42, 33, 0);
  v33 = v12;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v33);
  v35 = *(_QWORD *)((char *)&dword_10 + (*v32 & 0xFFFFFFFFFFFFFF8));
  v34 = *(_QWORD *)((char *)&dword_18 + (*v32 & 0xFFFFFFFFFFFFFF8));
  if (v35 >= v34 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v34 > 1, v35 + 1, 1);
  v36 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v35, v33);
  specialized Array._endMutation()(v36);
  swift_endAccess(v42);

}

void sub_E10F14(int64_t a1)
{
  char *v1;
  uint64_t v2;
  int64_t v3;
  char *v4;
  id v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  id v44;
  char *v45;
  double v46;
  void *v47;
  uint64_t v48;
  id v49;
  char *v50;
  double v52;
  void *v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  id v61;
  char *v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  double v73;
  int64_t v74;
  unint64_t v75;
  uint64_t v76;
  id v77;
  void *v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  double v90;
  CGFloat v91;
  double v92;
  CGFloat v93;
  id v94;
  void *v95;
  double v96;
  CGFloat v97;
  double *v98;
  double v99;
  CGFloat v100;
  id v101;
  void *v102;
  double v103;
  int64_t v104;
  uint64_t v105;
  unint64_t v106;
  double v107;
  CGFloat v108;
  double v109;
  CGFloat v110;
  char **v111;
  id v112;
  void *v113;
  double v114;
  CGFloat v115;
  double *v116;
  double v117;
  CGFloat v118;
  id v119;
  void *v120;
  double v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  int64_t v125;
  id v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  id v137;
  double v138;
  int64_t v139;
  unint64_t v140;
  uint64_t v141;
  id v142;
  void *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t **v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t ObjectType;
  uint64_t *v152;
  void (*v153)(uint64_t, uint64_t, uint64_t);
  id v154;
  void *v155;
  void (*v156)(__int128 *, char);
  unsigned __int8 *v157;
  unsigned __int8 *v158;
  uint64_t v159;
  uint64_t v160;
  void *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  unint64_t v171;
  unint64_t v172;
  char *v173;
  void (*v174)(__int128 *, char);
  char v175[24];
  char v176[24];
  Swift::Int v177;
  char v178[24];
  _QWORD v179[3];
  uint64_t v180;
  uint64_t v181;
  __int128 v182;
  uint64_t v183;
  uint64_t v184;
  char v185[24];
  char v186[24];
  uint64_t v187;
  _BYTE v188[24];
  char v189[24];
  int64_t v190;
  _QWORD v191[3];
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  unint64_t v196;

  v4 = v1;
  v6 = objc_msgSend(v1, "traitCollection");
  v7 = (char *)objc_msgSend(v6, "accessibilityContrast");

  v173 = v4;
  if (v7 != (_BYTE *)&dword_0 + 1)
  {
    v19 = &v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode];
    swift_beginAccess(&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode], v191, 0, 0);
    if (*v19 == 1)
      return;
    if (a1)
    {
      v190 = a1;
      v3 = a1;
      goto LABEL_10;
    }
    v88 = *(_QWORD *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager];
    if (!v88 || (swift_beginAccess(v88 + 80, v189, 0, 0), v89 = *(_QWORD *)(v88 + 80), !*(_QWORD *)(v89 + 16)))
    {
      v105 = (uint64_t)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
      v106 = swift_beginAccess(&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews], v188, 0, 0).n128_u64[0];
      v8 = *(_QWORD *)v105;
      if (*(_QWORD *)v105 >> 62)
        goto LABEL_165;
      if (*(uint64_t *)((char *)&dword_10 + (v8 & 0xFFFFFFFFFFFFF8)) < 1)
        return;
      goto LABEL_90;
    }
    sub_55D1C(v89 + 32, (uint64_t)&v192);
    objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView], "contentOffset");
    v91 = v90;
    v93 = v92;
    v94 = objc_msgSend(v4, "view");
    if (!v94)
      goto LABEL_189;
    v95 = v94;
    objc_msgSend(v94, "frame");
    v97 = v96;

    v98 = (double *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight];
    *(_QWORD *)&v99 = swift_beginAccess(&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight], v188, 0, 0).n128_u64[0];
    v100 = *v98;
    if (*v98 <= 0.0)
    {
      v101 = objc_msgSend(v4, "view", v99);
      if (!v101)
        goto LABEL_191;
      v102 = v101;
      objc_msgSend(v101, "frame");
      v100 = v103;

    }
    sub_E105B8(&v192, v91, v93, v97, v100);
    v3 = v104;
    __swift_destroy_boxed_opaque_existential_1(&v192);
    v190 = v3;
    while (1)
    {
LABEL_10:
      v8 = (uint64_t)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_blurredLineViews];
      swift_beginAccess(&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_blurredLineViews], v186, 0, 0);
      v17 = *(_QWORD *)v8;
      v187 = *(_QWORD *)v8;
      if ((unint64_t)v3 >> 62)
      {
LABEL_106:
        if (v3 < 0)
          v128 = v3;
        else
          v128 = v3 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v20 = _CocoaArrayWrapper.endIndex.getter(v128);
        swift_bridgeObjectRelease();
        if (v20)
        {
LABEL_12:
          if (v20 >= 1)
          {
            v21 = 0;
            v22 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager;
            v170 = v20;
            v171 = v3 & 0xC000000000000001;
            v169 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager;
            while (1)
            {
              if (v171)
                v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v21, v3);
              else
                v25 = *(id *)(v3 + 8 * v21 + 32);
              v17 = (uint64_t)v25;
              v26 = *(_QWORD *)&v4[v22];
              if (!v26)
                goto LABEL_33;
              swift_beginAccess(v26 + 80, v185, 0, 0);
              v27 = *(_QWORD *)(v26 + 80);
              if (!*(_QWORD *)(v27 + 16))
                goto LABEL_33;
              sub_55D1C(v27 + 32, (uint64_t)&v192);
              v28 = *(_QWORD *)(v27 + 16);
              if (!v28)
              {
                __swift_destroy_boxed_opaque_existential_1(&v192);
LABEL_33:
                v48 = v21 + 3;
                if (__OFADD__(v21, 3))
                {
                  __break(1u);
                  goto LABEL_104;
                }
                v49 = objc_msgSend(v4, "traitCollection");
                v50 = (char *)objc_msgSend(v49, "accessibilityContrast");

                if (v50 != (_BYTE *)&dword_0 + 1 || v48 <= 0)
                {
                  v52 = (double)v48;
                  if ((double)v48 > 4.0)
                    v52 = 4.0;
                  sub_E01F64(1, v52);
                  swift_beginAccess(v8, &v192, 33, 0);
                  if (v21 == -3)
                  {
                    v54 = (void *)sub_E80D44((void *)v17);
                    swift_endAccess(&v192);

                  }
                  else
                  {
                    sub_E7F664((Swift::Int *)&v182, (id)v17);
                    v53 = (void *)v182;
                    swift_endAccess(&v192);

                  }
                }
                goto LABEL_16;
              }
              v29 = v3;
              sub_55D1C(v27 + 32 + 40 * v28 - 40, (uint64_t)&v182);
              v30 = v17 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
              swift_beginAccess(v17 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line, v178, 0, 0);
              sub_55D1C(v30, (uint64_t)v179);
              v31 = v180;
              v32 = v181;
              __swift_project_boxed_opaque_existential_1(v179, v180);
              v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 16))(v31, v32);
              v35 = v183;
              v34 = v184;
              __swift_project_boxed_opaque_existential_1(&v182, v183);
              v36 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 16))(v35, v34);
              __swift_destroy_boxed_opaque_existential_1(v179);
              if (v36 >= v33)
              {
                sub_55D1C(v30, (uint64_t)v179);
                v55 = v180;
                v56 = v181;
                __swift_project_boxed_opaque_existential_1(v179, v180);
                v57 = (*(uint64_t (**)(uint64_t, uint64_t))(v56 + 16))(v55, v56);
                v58 = v195;
                v59 = v196;
                __swift_project_boxed_opaque_existential_1(&v192, v195);
                v60 = (*(uint64_t (**)(uint64_t, unint64_t))(v59 + 16))(v58, v59);
                __swift_destroy_boxed_opaque_existential_1(v179);
                v4 = v173;
                v61 = objc_msgSend(v173, "traitCollection");
                v62 = (char *)objc_msgSend(v61, "accessibilityContrast");

                if (v57 >= v60)
                {
                  sub_E01F64(1, 0.0);
                  swift_beginAccess(v8, v179, 33, 0);
                  v23 = (void *)sub_E80D44((void *)v17);
                  swift_endAccess(v179);

                  v3 = v29;
                  v22 = v169;
                  v20 = v170;
                }
                else
                {
                  v3 = v29;
                  v22 = v169;
                  v20 = v170;
                  if (v62 != (_BYTE *)&dword_0 + 1)
                  {
                    sub_E01F64(1, 3.0);
LABEL_47:
                    swift_beginAccess(v8, v179, 33, 0);
                    sub_E7F664(&v177, (id)v17);
                    v63 = (void *)v177;
                    swift_endAccess(v179);

                  }
                }
              }
              else
              {
                sub_55D1C(v30, (uint64_t)v179);
                v37 = v180;
                v38 = v181;
                __swift_project_boxed_opaque_existential_1(v179, v180);
                v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 16))(v37, v38);
                v3 = v183;
                v40 = v184;
                __swift_project_boxed_opaque_existential_1(&v182, v183);
                v41 = (*(uint64_t (**)(int64_t, uint64_t))(v40 + 16))(v3, v40);
                v42 = v39 - v41;
                v4 = v173;
                if (__OFSUB__(v39, v41))
                  goto LABEL_105;
                __swift_destroy_boxed_opaque_existential_1(v179);
                v43 = (double)v42 + 1.0;
                v44 = objc_msgSend(v173, "traitCollection");
                v45 = (char *)objc_msgSend(v44, "accessibilityContrast");

                v3 = v29;
                v22 = v169;
                v20 = v170;
                if (v45 == (_BYTE *)&dword_0 + 1 && v43 > 0.0)
                  goto LABEL_15;
                if (v43 <= 4.0)
                  v46 = (double)v42 + 1.0;
                else
                  v46 = 4.0;
                sub_E01F64(1, v46);
                if (v43 != 0.0)
                  goto LABEL_47;
                swift_beginAccess(v8, v179, 33, 0);
                v47 = (void *)sub_E80D44((void *)v17);
                swift_endAccess(v179);

              }
LABEL_15:
              __swift_destroy_boxed_opaque_existential_1(&v182);
              __swift_destroy_boxed_opaque_existential_1(&v192);
LABEL_16:
              ++v21;
              v24 = (void *)sub_E80D44((void *)v17);

              if (v20 == v21)
              {
                swift_bridgeObjectRelease();
                v17 = v187;
                if ((v187 & 0xC000000000000001) == 0)
                  goto LABEL_111;
LABEL_76:
                if (v17 < 0)
                  v80 = v17;
                else
                  v80 = v17 & 0xFFFFFFFFFFFFFF8;
                v81 = __CocoaSet.makeIterator()(v80);
                v82 = type metadata accessor for SyncedLyricsLineView();
                v83 = sub_4DD24(&qword_15087D8, (uint64_t (*)(uint64_t))type metadata accessor for SyncedLyricsLineView, (uint64_t)&protocol conformance descriptor for NSObject);
                v79 = Set.Iterator.init(_cocoa:)(&v192, v81, v82, v83);
                v17 = v192;
                v84 = v193;
                v85 = v194;
                v86 = v195;
                v87 = v196;
                goto LABEL_115;
              }
            }
          }
          goto LABEL_157;
        }
      }
      else
      {
        v20 = *(_QWORD *)((char *)&dword_10 + (v3 & 0xFFFFFFFFFFFFF8));
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v20)
          goto LABEL_12;
      }
      swift_bridgeObjectRelease();
      if ((v17 & 0xC000000000000001) != 0)
        goto LABEL_76;
LABEL_111:
      v86 = 0;
      v129 = -1 << *(_BYTE *)(v17 + 32);
      v84 = v17 + 56;
      v85 = ~v129;
      v130 = -v129;
      if (v130 < 64)
        v131 = ~(-1 << v130);
      else
        v131 = -1;
      v87 = v131 & *(_QWORD *)(v17 + 56);
LABEL_115:
      v3 = (unint64_t)(v85 + 64) >> 6;
      if (v17 < 0)
      {
        while (1)
        {
          v134 = __CocoaSet.Iterator.next()(v79);
          if (!v134)
            break;
          v135 = v134;
          v179[0] = v134;
          v136 = type metadata accessor for SyncedLyricsLineView();
          swift_unknownObjectRetain(v135);
          swift_dynamicCast(&v182, v179, (char *)&type metadata for Swift.AnyObject + 8, v136, 7);
          v137 = (id)v182;
          *(_QWORD *)&v138 = swift_unknownObjectRelease(v135).n128_u64[0];
          v133 = v86;
          v4 = (char *)v87;
          if (!v137)
            break;
LABEL_136:
          v142 = objc_msgSend(v173, "traitCollection", v138);
          objc_msgSend(v142, "accessibilityContrast");

          sub_E01F64(0, 0.0);
          swift_beginAccess(v8, &v182, 33, 0);
          v143 = (void *)sub_E80D44(v137);
          swift_endAccess(&v182);

          v86 = v133;
          v87 = (unint64_t)v4;
          if ((v17 & 0x8000000000000000) == 0)
            goto LABEL_116;
        }
      }
      else
      {
LABEL_116:
        if (v87)
        {
          v4 = (char *)((v87 - 1) & v87);
          v132 = __clz(__rbit64(v87)) | (v86 << 6);
          v133 = v86;
          goto LABEL_135;
        }
        v139 = v86 + 1;
        if (__OFADD__(v86, 1))
        {
          __break(1u);
LABEL_157:
          __break(1u);
          goto LABEL_158;
        }
        if (v139 < v3)
        {
          v140 = *(_QWORD *)(v84 + 8 * v139);
          v133 = v86 + 1;
          if (!v140)
          {
            v133 = v86 + 2;
            if (v86 + 2 >= v3)
              goto LABEL_138;
            v140 = *(_QWORD *)(v84 + 8 * v133);
            if (!v140)
            {
              v133 = v86 + 3;
              if (v86 + 3 >= v3)
                goto LABEL_138;
              v140 = *(_QWORD *)(v84 + 8 * v133);
              if (!v140)
              {
                v133 = v86 + 4;
                if (v86 + 4 >= v3)
                  goto LABEL_138;
                v140 = *(_QWORD *)(v84 + 8 * v133);
                if (!v140)
                {
                  v141 = v86 + 5;
                  do
                  {
                    if (v3 == v141)
                      goto LABEL_138;
                    v140 = *(_QWORD *)(v84 + 8 * v141++);
                  }
                  while (!v140);
                  v133 = v141 - 1;
                }
              }
            }
          }
          v4 = (char *)((v140 - 1) & v140);
          v132 = __clz(__rbit64(v140)) + (v133 << 6);
LABEL_135:
          v137 = *(id *)(*(_QWORD *)(v17 + 48) + 8 * v132);
          if (!v137)
            goto LABEL_138;
          goto LABEL_136;
        }
      }
LABEL_138:
      sub_55D68(v17);
      v105 = *(_QWORD *)v8;
      if ((*(_QWORD *)v8 & 0xC000000000000001) != 0)
      {
        if (v105 < 0)
          v144 = *(_QWORD *)v8;
        else
          v144 = v105 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        v145 = __CocoaSet.count.getter(v144);
        swift_bridgeObjectRelease();
      }
      else
      {
        v145 = *(_QWORD *)(v105 + 16);
      }
      if (v145 < 1)
        return;
      v146 = (uint64_t **)&v173[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
      swift_beginAccess(&v173[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews], v179, 0, 0);
      v8 = (uint64_t)*v146;
      if (!((unint64_t)*v146 >> 62))
      {
        v2 = *(_QWORD *)((char *)&dword_10 + (v8 & 0xFFFFFFFFFFFFF8));
        swift_bridgeObjectRetain();
        if (!v2)
          goto LABEL_162;
        goto LABEL_147;
      }
LABEL_158:
      if (v8 < 0)
        v105 = v8;
      else
        v105 = v8 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v2 = _CocoaArrayWrapper.endIndex.getter(v105);
      if (!v2)
        goto LABEL_162;
LABEL_147:
      if (v2 >= 1)
      {
        v147 = 0;
        v172 = v8 & 0xC000000000000001;
        do
        {
          if (v172)
            v157 = (unsigned __int8 *)specialized _ArrayBuffer._getElementSlowPath(_:)(v147, v8);
          else
            v157 = (unsigned __int8 *)*(id *)(v8 + 8 * v147 + 32);
          v158 = v157;
          v159 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_isScrolling;
          v157[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_isScrolling] = 0;
          v156 = sub_E01124((uint64_t)&v182);
          v161 = *(void **)v160;
          if (*(_QWORD *)v160)
          {
            v148 = v160;
            v149 = v158[v159];
            v150 = *(_QWORD *)(v160 + 8);
            v174 = v156;
            ObjectType = swift_getObjectType();
            v177 = (Swift::Int)v161;
            v152 = (uint64_t *)v8;
            v153 = *(void (**)(uint64_t, uint64_t, uint64_t))(v150 + 40);
            v154 = v161;
            v153(v149, ObjectType, v150);
            v8 = (uint64_t)v152;
            v155 = *(void **)v148;
            *(_QWORD *)v148 = v177;
            *(_QWORD *)(v148 + 8) = v150;

            v156 = v174;
          }
          v156(&v182, 0);
          ++v147;

        }
        while (v2 != v147);
LABEL_162:
        swift_bridgeObjectRelease();
        return;
      }
      __break(1u);
LABEL_165:
      if (v8 < 0)
        v162 = v8;
      else
        v162 = v8 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v163 = _CocoaArrayWrapper.endIndex.getter(v162);
      v106 = swift_bridgeObjectRelease().n128_u64[0];
      if (v163 < 1)
        return;
LABEL_90:
      objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView], "contentOffset", *(double *)&v106);
      v108 = v107;
      v110 = v109;
      v111 = &selRef_sharedPreferences;
      v112 = objc_msgSend(v4, "view");
      if (!v112)
        goto LABEL_190;
      v113 = v112;
      objc_msgSend(v112, "frame");
      v115 = v114;

      v116 = (double *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight];
      *(_QWORD *)&v117 = swift_beginAccess(&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight], v176, 0, 0).n128_u64[0];
      v118 = *v116;
      if (*v116 <= 0.0)
      {
        v119 = objc_msgSend(v4, "view", v117);
        if (!v119)
          goto LABEL_192;
        v120 = v119;
        objc_msgSend(v119, "frame");
        v118 = v121;

      }
      v122 = *(_QWORD *)v105;
      if ((*(_QWORD *)v105 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        v123 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v122);
        swift_bridgeObjectRelease();
      }
      else
      {
        if (!*(_QWORD *)((char *)&dword_10 + (v122 & 0xFFFFFFFFFFFFF8)))
        {
          __break(1u);
          goto LABEL_172;
        }
        v123 = (char *)*(id *)(v122 + 32);
      }
      v124 = (uint64_t)&v123[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
      swift_beginAccess(&v123[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], v175, 0, 0);
      sub_55D1C(v124, (uint64_t)&v192);

      sub_E105B8(&v192, v108, v110, v115, v118);
      v3 = v125;
      __swift_destroy_boxed_opaque_existential_1(&v192);
      v190 = v3;
      v111 = (char **)((unint64_t)v3 >> 62);
      if ((unint64_t)v3 >> 62)
      {
LABEL_172:
        if (v3 < 0)
          v164 = v3;
        else
          v164 = v3 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        v165 = _CocoaArrayWrapper.endIndex.getter(v164);
        v2 = v3;
        swift_bridgeObjectRelease();
        if (v165 < 1)
          goto LABEL_187;
        swift_bridgeObjectRetain();
        v166 = _CocoaArrayWrapper.endIndex.getter(v164);
        swift_bridgeObjectRelease();
        if (!v166)
          goto LABEL_193;
        swift_bridgeObjectRetain();
        v167 = _CocoaArrayWrapper.endIndex.getter(v164);
        swift_bridgeObjectRelease();
        v4 = v173;
        if (v167)
        {
LABEL_99:
          if ((v3 & 0xC000000000000001) != 0)
            goto LABEL_179;
          if (*(_QWORD *)((char *)&dword_10 + (v3 & 0xFFFFFFFFFFFFF8)))
          {
            v126 = *(id *)(v3 + 32);
            if (!v111)
              goto LABEL_102;
            goto LABEL_180;
          }
          __break(1u);
LABEL_187:
          v4 = v173;
          v3 = v2;
        }
        else
        {
          __break(1u);
LABEL_179:
          v126 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v3);
          if (!v111)
          {
LABEL_102:
            v127 = *(_QWORD *)((char *)&dword_10 + (v3 & 0xFFFFFFFFFFFFF8));
            goto LABEL_184;
          }
LABEL_180:
          if (v3 < 0)
            v168 = v3;
          else
            v168 = v3 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain();
          v127 = _CocoaArrayWrapper.endIndex.getter(v168);
          swift_bridgeObjectRelease();
LABEL_184:
          if (!v127)
          {
            __break(1u);
LABEL_189:
            __break(1u);
LABEL_190:
            __break(1u);
LABEL_191:
            __break(1u);
LABEL_192:
            __break(1u);
LABEL_193:
            __break(1u);
            return;
          }
          sub_DCB434(0, 1);

          v3 = v190;
        }
      }
      else if (*(_QWORD *)((char *)&dword_10 + (v3 & 0xFFFFFFFFFFFFF8)))
      {
        goto LABEL_99;
      }
    }
  }
  v8 = (uint64_t)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_blurredLineViews];
  swift_beginAccess(&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_blurredLineViews], &v182, 0, 0);
  v9 = *(_QWORD *)v8;
  if ((*(_QWORD *)v8 & 0xC000000000000001) != 0)
  {
    if (v9 < 0)
      v10 = *(_QWORD *)v8;
    else
      v10 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v11 = __CocoaSet.makeIterator()(v10);
    v12 = type metadata accessor for SyncedLyricsLineView();
    v13 = sub_4DD24(&qword_15087D8, (uint64_t (*)(uint64_t))type metadata accessor for SyncedLyricsLineView, (uint64_t)&protocol conformance descriptor for NSObject);
    v14 = Set.Iterator.init(_cocoa:)(&v192, v11, v12, v13);
    v9 = v192;
    v15 = v193;
    v16 = v194;
    v17 = v195;
    v18 = v196;
  }
  else
  {
    v64 = -1 << *(_BYTE *)(v9 + 32);
    v15 = v9 + 56;
    v16 = ~v64;
    v65 = -v64;
    if (v65 < 64)
      v66 = ~(-1 << v65);
    else
      v66 = -1;
    v18 = v66 & *(_QWORD *)(v9 + 56);
    v14 = (_QWORD *)swift_bridgeObjectRetain();
    v17 = 0;
  }
  v67 = (unint64_t)(v16 + 64) >> 6;
  if (v9 < 0)
    goto LABEL_55;
  while (1)
  {
    if (v18)
    {
      v4 = (char *)((v18 - 1) & v18);
      v68 = __clz(__rbit64(v18)) | (v17 << 6);
      v3 = v17;
      goto LABEL_72;
    }
    v74 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_104:
      __break(1u);
LABEL_105:
      __break(1u);
      goto LABEL_106;
    }
    if (v74 >= v67)
      goto LABEL_80;
    v75 = *(_QWORD *)(v15 + 8 * v74);
    v3 = v17 + 1;
    if (!v75)
    {
      v3 = v17 + 2;
      if (v17 + 2 >= v67)
        goto LABEL_80;
      v75 = *(_QWORD *)(v15 + 8 * v3);
      if (!v75)
      {
        v3 = v17 + 3;
        if (v17 + 3 >= v67)
          goto LABEL_80;
        v75 = *(_QWORD *)(v15 + 8 * v3);
        if (!v75)
        {
          v3 = v17 + 4;
          if (v17 + 4 >= v67)
            goto LABEL_80;
          v75 = *(_QWORD *)(v15 + 8 * v3);
          if (!v75)
            break;
        }
      }
    }
LABEL_71:
    v4 = (char *)((v75 - 1) & v75);
    v68 = __clz(__rbit64(v75)) + (v3 << 6);
LABEL_72:
    v72 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * v68);
    if (!v72)
      goto LABEL_80;
    while (1)
    {
      v77 = objc_msgSend(v173, "traitCollection", v73);
      objc_msgSend(v77, "accessibilityContrast");

      sub_E01F64(0, 0.0);
      swift_beginAccess(v8, v179, 33, 0);
      v78 = (void *)sub_E80D44(v72);
      swift_endAccess(v179);

      v17 = v3;
      v18 = (unint64_t)v4;
      if ((v9 & 0x8000000000000000) == 0)
        break;
LABEL_55:
      v69 = __CocoaSet.Iterator.next()(v14);
      if (v69)
      {
        v70 = v69;
        v191[0] = v69;
        v71 = type metadata accessor for SyncedLyricsLineView();
        swift_unknownObjectRetain(v70);
        swift_dynamicCast(v179, v191, (char *)&type metadata for Swift.AnyObject + 8, v71, 7);
        v72 = (id)v179[0];
        *(_QWORD *)&v73 = swift_unknownObjectRelease(v70).n128_u64[0];
        v3 = v17;
        v4 = (char *)v18;
        if (v72)
          continue;
      }
      goto LABEL_80;
    }
  }
  v76 = v17 + 5;
  while (v67 != v76)
  {
    v75 = *(_QWORD *)(v15 + 8 * v76++);
    if (v75)
    {
      v3 = v76 - 1;
      goto LABEL_71;
    }
  }
LABEL_80:
  sub_55D68(v9);
}

void sub_E12008(void *a1, char a2, double a3)
{
  char *v3;
  char *v4;
  id v8;
  char *v9;
  double v10;
  void *v11;
  _BYTE v12[24];
  Swift::Int v13;

  v4 = v3;
  v8 = objc_msgSend(v4, "traitCollection");
  v9 = (char *)objc_msgSend(v8, "accessibilityContrast");

  if (v9 != (_BYTE *)&dword_0 + 1 || a3 <= 0.0)
  {
    v10 = 4.0;
    if (a3 <= 4.0)
      v10 = a3;
    sub_E01F64(a2 & 1, v10);
    swift_beginAccess(&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_blurredLineViews], v12, 33, 0);
    if (a3 == 0.0)
    {
      v11 = (void *)sub_E80D44(a1);
    }
    else
    {
      sub_E7F664(&v13, a1);
      v11 = (void *)v13;
    }
    swift_endAccess(v12);

  }
}

void sub_E12120()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  double v22;
  int64_t v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t **v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 *v31;
  unsigned __int8 *v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(__int128 *, char);
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t ObjectType;
  uint64_t *v41;
  void (*v42)(uint64_t, uint64_t, uint64_t);
  id v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  int64_t v47;
  unint64_t v48;
  uint64_t v49;
  void (*v50)(__int128 *, char);
  _QWORD v51[4];
  _QWORD v52[3];
  char v53[24];
  _QWORD v54[6];

  v1 = v0;
  v2 = (uint64_t)&v0[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_blurredLineViews];
  swift_beginAccess(&v0[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_blurredLineViews], v53, 0, 0);
  v3 = *(_QWORD *)v2;
  if ((*(_QWORD *)v2 & 0xC000000000000001) != 0)
  {
    if (v3 < 0)
      v4 = *(_QWORD *)v2;
    else
      v4 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v5 = __CocoaSet.makeIterator()(v4);
    v6 = type metadata accessor for SyncedLyricsLineView();
    v7 = sub_4DD24(&qword_15087D8, (uint64_t (*)(uint64_t))type metadata accessor for SyncedLyricsLineView, (uint64_t)&protocol conformance descriptor for NSObject);
    v8 = Set.Iterator.init(_cocoa:)(v54, v5, v6, v7);
    v3 = v54[0];
    v49 = v54[1];
    v9 = v54[2];
    v10 = v54[3];
    v11 = v54[4];
  }
  else
  {
    v12 = -1 << *(_BYTE *)(v3 + 32);
    v49 = v3 + 56;
    v9 = ~v12;
    v13 = -v12;
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v11 = v14 & *(_QWORD *)(v3 + 56);
    v8 = (_QWORD *)swift_bridgeObjectRetain();
    v10 = 0;
  }
  v46 = v9;
  v47 = (unint64_t)(v9 + 64) >> 6;
  if (v3 < 0)
    goto LABEL_13;
  while (1)
  {
    if (v11)
    {
      v15 = (v11 - 1) & v11;
      v16 = __clz(__rbit64(v11)) | (v10 << 6);
      v17 = v10;
      goto LABEL_30;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    if (v23 >= v47)
      goto LABEL_33;
    v24 = *(_QWORD *)(v49 + 8 * v23);
    v17 = v10 + 1;
    if (!v24)
    {
      v17 = v10 + 2;
      if (v10 + 2 >= v47)
        goto LABEL_33;
      v24 = *(_QWORD *)(v49 + 8 * v17);
      if (!v24)
      {
        v17 = v10 + 3;
        if (v10 + 3 >= v47)
          goto LABEL_33;
        v24 = *(_QWORD *)(v49 + 8 * v17);
        if (!v24)
        {
          v17 = v10 + 4;
          if (v10 + 4 >= v47)
            goto LABEL_33;
          v24 = *(_QWORD *)(v49 + 8 * v17);
          if (!v24)
            break;
        }
      }
    }
LABEL_29:
    v15 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_30:
    v21 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v16);
    if (!v21)
      goto LABEL_33;
    while (1)
    {
      v26 = objc_msgSend(v1, "traitCollection", v22, v46);
      objc_msgSend(v26, "accessibilityContrast");

      sub_E01F64(1, 0.0);
      swift_beginAccess(v2, v51, 33, 0);
      v27 = (void *)sub_E80D44(v21);
      swift_endAccess(v51);

      v10 = v17;
      v11 = v15;
      if ((v3 & 0x8000000000000000) == 0)
        break;
LABEL_13:
      v18 = __CocoaSet.Iterator.next()(v8);
      if (v18)
      {
        v19 = v18;
        v52[0] = v18;
        v20 = type metadata accessor for SyncedLyricsLineView();
        swift_unknownObjectRetain(v19);
        swift_dynamicCast(v51, v52, (char *)&type metadata for Swift.AnyObject + 8, v20, 7);
        v21 = (id)v51[0];
        *(_QWORD *)&v22 = swift_unknownObjectRelease(v19).n128_u64[0];
        v17 = v10;
        v15 = v11;
        if (v21)
          continue;
      }
      goto LABEL_33;
    }
  }
  v25 = v10 + 5;
  while (v47 != v25)
  {
    v24 = *(_QWORD *)(v49 + 8 * v25++);
    if (v24)
    {
      v17 = v25 - 1;
      goto LABEL_29;
    }
  }
LABEL_33:
  sub_55D68(v3);
  v28 = (uint64_t **)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
  swift_beginAccess(v28, v52, 0, 0);
  v2 = (uint64_t)*v28;
  if (!((unint64_t)*v28 >> 62))
  {
    v29 = *(_QWORD *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    if (v29)
      goto LABEL_35;
LABEL_49:
    swift_bridgeObjectRelease();
    return;
  }
LABEL_45:
  if (v2 < 0)
    v45 = v2;
  else
    v45 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v29 = _CocoaArrayWrapper.endIndex.getter(v45);
  if (!v29)
    goto LABEL_49;
LABEL_35:
  if (v29 >= 1)
  {
    v30 = 0;
    v48 = v2 & 0xC000000000000001;
    do
    {
      if (v48)
        v31 = (unsigned __int8 *)specialized _ArrayBuffer._getElementSlowPath(_:)(v30, v2);
      else
        v31 = (unsigned __int8 *)*(id *)(v2 + 8 * v30 + 32);
      v32 = v31;
      v33 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_isScrolling;
      v31[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_isScrolling] = 1;
      v35 = sub_E01124((uint64_t)v51);
      v36 = *(void **)v34;
      if (*(_QWORD *)v34)
      {
        v37 = v34;
        v38 = v32[v33];
        v39 = *(_QWORD *)(v34 + 8);
        v50 = v35;
        ObjectType = swift_getObjectType();
        v41 = (uint64_t *)v2;
        v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 40);
        v43 = v36;
        v42(v38, ObjectType, v39);
        v2 = (uint64_t)v41;
        v44 = *(void **)v37;
        *(_QWORD *)v37 = v36;
        *(_QWORD *)(v37 + 8) = v39;

        v50((__int128 *)v51, 0);
      }
      else
      {
        v35((__int128 *)v51, 0);
      }
      ++v30;

    }
    while (v29 != v30);
    goto LABEL_49;
  }
  __break(1u);
}

void sub_E125A0(uint64_t a1, char a2, uint64_t a3, char a4, char a5, double a6, double a7, double a8)
{
  char *v8;
  uint64_t v16;
  uint64_t v17;
  double v18;
  double v19;
  char *v20;
  double v21;
  double v22;
  double v23;
  CGFloat v24;
  char **v25;
  id v26;
  void *v27;
  double v28;
  CGFloat v29;
  CGFloat *v30;
  double v31;
  CGFloat v32;
  id v33;
  void *v34;
  double v35;
  double v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  double v44;
  double v45;
  double v46;
  double v47;
  id v48;
  char *v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  char *v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  void (*v66)(uint64_t);
  uint64_t *v67;
  uint64_t (*v68)(void *, void (*)(uint64_t));
  id v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  BOOL v75;
  void *v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  _QWORD *v80;
  id v81;
  void *v82;
  double v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  double *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  BOOL v96;
  __int128 v97;
  char v98;
  uint64_t v99;
  __int128 v100;
  char *v101;
  char *v102;
  char v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  double v108;
  char **v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void (*v114)(uint64_t);
  void *v115;
  uint64_t v116;
  void *v117;
  void (*v118)(uint64_t);
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  void *v126;
  char *v127;
  id v128;
  unint64_t v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char v134;
  uint64_t v135;
  id v136;
  CGFloat v137;
  CGFloat v138;
  double v139;
  double v140;
  unint64_t v141;
  uint64_t v142;
  CGFloat *v143;
  id v144;
  void *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  char *v151;
  uint64_t Strong;
  uint64_t v153;
  uint64_t v154;
  uint64_t ObjectType;
  char v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  unsigned int v160;
  uint64_t v161;
  uint64_t v162;
  BOOL v163;
  char *v164;
  unsigned int v165;
  uint64_t v166;
  unint64_t v168;
  unint64_t v169;
  double *v170;
  char **v171;
  _QWORD *v172;
  id v173;
  char *v174;
  __int128 v175;
  __int128 v176;
  uint64_t v177;
  uint64_t v178;
  void *v179;
  char v180[24];
  char v181[24];
  char v182[24];
  _QWORD aBlock[3];
  void *v184;
  void (*v185)(uint64_t);
  uint64_t v186;
  __int128 v187[2];
  char v188[24];
  char v189[24];
  char v190[24];
  char v191[24];
  char v192[24];
  char v193[24];
  char v194[24];
  char v195[24];
  char v196[24];
  _OWORD v197[2];
  char v198;
  CGRect v199;
  CGRect v200;
  CGRect v201;
  CGRect v202;
  CGRect v203;

  v16 = swift_allocObject(&unk_13C7580, 32, 7);
  *(double *)(v16 + 16) = a6;
  *(double *)(v16 + 24) = a7;
  v17 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
  objc_msgSend(*(id *)&v8[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView], "contentOffset");
  v19 = v18;
  v20 = v8;
  objc_msgSend(*(id *)&v8[v17], "contentOffset");
  v22 = v21;
  v24 = v23;
  v25 = &selRef_sharedPreferences;
  v26 = objc_msgSend(v8, "view");
  if (!v26)
    goto LABEL_133;
  v27 = v26;
  objc_msgSend(v26, "frame");
  v29 = v28;

  v30 = (CGFloat *)&v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight];
  *(_QWORD *)&v31 = swift_beginAccess(&v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight], v196, 0, 0).n128_u64[0];
  v32 = *v30;
  if (*v30 <= 0.0)
  {
    v33 = objc_msgSend(v20, "view", v31);
    if (!v33)
      goto LABEL_134;
    v34 = v33;
    objc_msgSend(v33, "frame");
    v32 = v35;

  }
  v160 = a4 & 1;
  v36 = a7 - v19;
  v199.origin.x = v22;
  v199.origin.y = v24;
  v199.size.width = v29;
  v199.size.height = v32;
  v203 = CGRectOffset(v199, 0.0, v36);
  v200.origin.x = v22;
  v200.origin.y = v24;
  v200.size.width = v29;
  v200.size.height = v32;
  v201 = CGRectUnion(v200, v203);
  sub_E105B8((_QWORD *)a1, v201.origin.x, v201.origin.y, v201.size.width, v201.size.height);
  v169 = v37;
  v38 = *(_QWORD *)(a1 + 24);
  v39 = *(_QWORD *)(a1 + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)a1, v38);
  v40 = (*(uint64_t (**)(uint64_t, uint64_t))(v39 + 16))(v38, v39);
  v41 = &v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
  swift_beginAccess(&v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews], v195, 0, 0);
  v42 = *(_QWORD *)v41;
  if ((v42 & 0xC000000000000001) == 0)
  {
    if ((v40 & 0x8000000000000000) != 0)
    {
LABEL_109:
      __break(1u);
    }
    else if (v40 < *(_QWORD *)((char *)&dword_10 + (v42 & 0xFFFFFFFFFFFFF8)))
    {
      v173 = *(id *)(v42 + 8 * v40 + 32);
      if (v160)
        goto LABEL_17;
      goto LABEL_9;
    }
    __break(1u);
    goto LABEL_111;
  }
  swift_bridgeObjectRetain();
  v173 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v40, v42);
  swift_bridgeObjectRelease();
  if (v160)
    goto LABEL_17;
LABEL_9:
  v43 = &v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics];
  swift_beginAccess(&v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics], v180, 0, 0);
  if (!*(_QWORD *)v43 || *(_BYTE *)(*(_QWORD *)v43 + 56) != 2)
  {
LABEL_17:
    if ((a2 & 1) != 0)
    {
      v48 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 2.0, 260.0, 50.0, 0.0, 0.0);
    }
    else
    {
      v49 = &v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics];
      swift_beginAccess(&v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics], v194, 0, 0);
      if (*(_QWORD *)v49 && *(_BYTE *)(*(_QWORD *)v49 + 56) == 2)
        v48 = sub_E07EA0(a3, v160);
      else
        v48 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 100.0, 18.0, 0.0, 0.0);
    }
    goto LABEL_23;
  }
  v44 = (*(double *)&a3 + -0.2) / 0.55;
  if (*(double *)&a3 > 0.75)
    v44 = 1.0;
  v45 = 0.0;
  if (*(double *)&a3 >= 0.2)
    v45 = v44;
  v46 = (1.0 - v45) * 0.12 + 0.78;
  v47 = v45 * 0.27 + 0.48;
  sub_4E684(0, &qword_15084D0, UISpringTimingParameters_ptr);
  v48 = UISpringTimingParameters.init(dampingRatio:response:)(v46, v47);
LABEL_23:
  v50 = v48;
  v51 = *(_QWORD *)(a1 + 24);
  v52 = *(_QWORD *)(a1 + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)a1, v51);
  v53 = (*(double (**)(uint64_t))(*(_QWORD *)(v52 + 8) + 16))(v51);
  v170 = (double *)&v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
  *(_QWORD *)&v54 = swift_beginAccess(&v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs], v193, 0, 0).n128_u64[0];
  v166 = (uint64_t)v50;
  v157 = a3;
  if ((a2 & 1) != 0 || (v55 = v53 - v170[19], objc_msgSend(v50, "settlingDuration"), v54 = v56 + a8, v55 >= v54))
  {
    objc_msgSend(v50, "settlingDuration", v54);
    v22 = v57;
  }
  else
  {
    v22 = v55 - a8;
    objc_msgSend(v50, "setImplicitDuration:", 0);
  }
  v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating] = 1;
  v25 = (char **)OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView;
  v58 = *(char **)&v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView];
  v174 = v20;
  v171 = (char **)a1;
  v156 = a2;
  if (v58
    && (v59 = *(void **)&v58[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView]) != 0
    && (v60 = _s23InstrumentalContentViewCMa(), (v61 = swift_dynamicCastClass(v59, v60)) != 0))
  {
    v62 = v61;
    v63 = v16;
    v64 = (uint64_t)&v58[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
    swift_beginAccess(&v58[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], v181, 0, 0);
    sub_55D1C(v64, (uint64_t)aBlock);
    v65 = v184;
    v66 = v185;
    v67 = __swift_project_boxed_opaque_existential_1(aBlock, (uint64_t)v184);
    v68 = (uint64_t (*)(void *, void (*)(uint64_t)))*((_QWORD *)v66 + 2);
    v39 = v58;
    v69 = v59;
    v70 = v67;
    v71 = v68(v65, v66);
    a1 = v71 + 1;
    if (__OFADD__(v71, 1))
    {
      __break(1u);
      goto LABEL_116;
    }
    __swift_destroy_boxed_opaque_existential_1(aBlock);
    v72 = (uint64_t)v171[3];
    v73 = v171[4];
    __swift_project_boxed_opaque_existential_1(v171, v72);
    v74 = (*((uint64_t (**)(uint64_t, char *))v73 + 2))(v72, v73);
    v75 = a1 == v74;
    v16 = v63;
    v20 = v174;
    if (a1 == v74)
    {
      v76 = *(char **)((char *)v25 + (_QWORD)v174);
      *(char **)((char *)v25 + (_QWORD)v174) = 0;

      objc_msgSend((id)v39, "frame");
      *(double *)(v16 + 24) = *(double *)(v16 + 24) - (CGRectGetHeight(v202) + v170[10]);
      sub_DFDA08();
    }

    a1 = (uint64_t)v171;
  }
  else
  {
    v75 = 0;
  }
  sub_55D1C(a1, (uint64_t)aBlock);
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_15075B0);
  v25 = (char **)v166;
  if ((swift_dynamicCast(v187, aBlock, v77, &type metadata for Lyrics.InstrumentalLine, 6) & 1) != 0)
  {
    v78 = (_QWORD *)a1;
    a1 = v169;
    sub_E1385C(v78, v169, v166, *(double *)(v16 + 16), *(double *)(v16 + 24), v22, v36, a8);
    goto LABEL_123;
  }
  if (v75)
  {
    v79 = (_QWORD *)a1;
    a1 = v169;
    sub_E14344(v79, v169, v166, *(double *)(v16 + 16), *(double *)(v16 + 24), v22, v36);
    goto LABEL_123;
  }
  a1 = v169;
  v20 = (char *)(v169 >> 62);
  if (!(v169 >> 62))
  {
    v62 = *(_QWORD *)((char *)&dword_10 + (v169 & 0xFFFFFFFFFFFFF8));
    goto LABEL_41;
  }
LABEL_111:
  if (a1 < 0)
    v146 = a1;
  else
    v146 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v62 = _CocoaArrayWrapper.endIndex.getter(v146);
  swift_bridgeObjectRelease();
LABEL_41:
  v80 = _swiftEmptyArrayStorage;
  if (v62)
  {
    aBlock[0] = _swiftEmptyArrayStorage;
    v70 = aBlock;
    sub_DDED64(0, v62 & ~(v62 >> 63), 0);
    if ((v62 & 0x8000000000000000) == 0)
    {
      v39 = 0;
      v80 = (_QWORD *)aBlock[0];
      do
      {
        if ((a1 & 0xC000000000000001) != 0)
          v81 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v39, a1);
        else
          v81 = *(id *)(a1 + 8 * v39 + 32);
        v82 = v81;
        v83 = UIView.untransformedFrame.getter();
        v85 = v84;
        v87 = v86;
        v89 = v88;

        aBlock[0] = v80;
        v91 = v80[2];
        v90 = v80[3];
        if (v91 >= v90 >> 1)
        {
          sub_DDED64((char *)(v90 > 1), v91 + 1, 1);
          v80 = (_QWORD *)aBlock[0];
        }
        ++v39;
        v80[2] = v91 + 1;
        v92 = (double *)&v80[4 * v91];
        v92[4] = v83;
        *((_QWORD *)v92 + 5) = v85;
        *((_QWORD *)v92 + 6) = v87;
        *((_QWORD *)v92 + 7) = v89;
      }
      while (v62 != v39);
      v25 = (char **)v166;
      goto LABEL_51;
    }
LABEL_116:
    __break(1u);
    goto LABEL_117;
  }
LABEL_51:
  v159 = v16;
  if (v20)
  {
    if (a1 < 0)
      v94 = a1;
    else
      v94 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v93 = _CocoaArrayWrapper.endIndex.getter(v94);
    v20 = v174;
    if (!v93)
    {
LABEL_87:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_E08CF4((uint64_t)v173, a1);
      v25 = v171;
      if ((v134 & 1) != 0)
        goto LABEL_121;
      v62 = v133;
      v70 = (uint64_t *)&v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators];
      swift_beginAccess(&v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators], v188, 0, 0);
      v39 = *v70;
      if (!((unint64_t)*v70 >> 62))
      {
        if (v62 < *(_QWORD *)((char *)&dword_10 + (v39 & 0xFFFFFFFFFFFFF8)))
          goto LABEL_90;
        goto LABEL_121;
      }
LABEL_117:
      if (v39 < 0)
        v147 = v39;
      else
        v147 = v39 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v148 = v147;
      v20 = v174;
      v149 = _CocoaArrayWrapper.endIndex.getter(v148);
      swift_bridgeObjectRelease();
      if (v62 < v149)
      {
LABEL_90:
        v135 = *v70;
        if ((v135 & 0xC000000000000001) == 0)
        {
          if (v62 < 0)
          {
            __break(1u);
          }
          else if ((unint64_t)v62 < *(_QWORD *)((char *)&dword_10 + (v135 & 0xFFFFFFFFFFFFF8)))
          {
            v136 = *(id *)(v135 + 8 * v62 + 32);
LABEL_94:
            sub_E10B5C(v25, v136, (uint64_t *)((char *)&dword_0 + 1), 1);

LABEL_122:
            v25 = (char **)v166;
LABEL_123:
            v150 = &v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode];
            swift_beginAccess(&v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode], aBlock, 1, 0);
            if (*v150 == 1)
            {
              *v150 = 0;
              v151 = &v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate];
              swift_beginAccess(&v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate], v187, 0, 0);
              Strong = swift_unknownObjectWeakLoadStrong(v151);
              if (Strong)
              {
                v153 = Strong;
                v154 = *((_QWORD *)v151 + 1);
                ObjectType = swift_getObjectType();
                (*(void (**)(char *, uint64_t, uint64_t))(v154 + 24))(v20, ObjectType, v154);
                swift_unknownObjectRelease(v153);
              }
            }
            sub_E10F14(a1);
            swift_bridgeObjectRelease();

LABEL_127:
            swift_release();

            return;
          }
          __break(1u);
          goto LABEL_131;
        }
        swift_bridgeObjectRetain();
        v136 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v62, v135);
        swift_bridgeObjectRelease();
        goto LABEL_94;
      }
LABEL_121:
      sub_E10B5C(v25, 0, (uint64_t *)((char *)&dword_0 + 1), 1);
      goto LABEL_122;
    }
  }
  else
  {
    v93 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    v20 = v174;
    if (!v93)
      goto LABEL_87;
  }
  sub_4E684(0, (unint64_t *)&qword_15077E0, NSObject_ptr);
  v95 = 0;
  v165 = 0;
  v164 = &v20[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators];
  v168 = a1 & 0xC000000000000001;
  v158 = a1 + 32;
  v161 = v62 - 1;
  v96 = __OFSUB__(v62, 1);
  v163 = v96;
  v97 = 0uLL;
  v98 = 1;
  v99 = 56;
  v100 = 0uLL;
  v162 = v93;
  v172 = v80;
  while (1)
  {
    v197[0] = v97;
    v197[1] = v100;
    v198 = v98 & 1;
    if (v168)
      v101 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v95, a1);
    else
      v101 = (char *)*(id *)(v158 + 8 * v95);
    v102 = v101;
    if (__OFADD__(v95, 1))
    {
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
      goto LABEL_109;
    }
    v177 = v95 + 1;
    v16 = (uint64_t)objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:timingParameters:", v25, v22);
    v39 = swift_allocObject(&unk_13C75A8, 48, 7);
    v103 = static NSObject.== infix(_:_:)(v102, v173);
    sub_E0EAA8(v102, v103 & 1, (uint64_t)v197);
    *(_QWORD *)(v39 + 16) = v104;
    *(_QWORD *)(v39 + 24) = v105;
    *(_QWORD *)(v39 + 32) = v106;
    *(_QWORD *)(v39 + 40) = v107;
    v178 = v99;
    v179 = (void *)v16;
    if (v95)
    {
      if ((a5 & 1) != 0)
        goto LABEL_78;
    }
    else
    {
      swift_beginAccess(v39 + 16, v182, 1, 0);
      *(double *)(v39 + 24) = *(double *)(v39 + 24) - v36;
      if ((a5 & 1) != 0)
        goto LABEL_78;
    }
    if ((unint64_t)v95 >= v172[2])
      goto LABEL_108;
    v108 = *(double *)((char *)v172 + v99);
    swift_beginAccess(v39 + 16, v192, 1, 0);
    if (v108 == *(double *)(v39 + 40))
    {
      v16 = v165;
      v109 = v171;
    }
    else
    {
      v109 = v171;
      v111 = (uint64_t)v171[3];
      v110 = v171[4];
      __swift_project_boxed_opaque_existential_1(v171, v111);
      v112 = (*((uint64_t (**)(uint64_t, char *))v110 + 2))(v111, v110);
      v113 = (uint64_t)&v102[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
      swift_beginAccess(&v102[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], v191, 0, 0);
      sub_55D1C(v113, (uint64_t)aBlock);
      v115 = v184;
      v114 = v185;
      __swift_project_boxed_opaque_existential_1(aBlock, (uint64_t)v184);
      LODWORD(v112) = (*((uint64_t (**)(void *, void (*)(uint64_t)))v114 + 2))(v115, v114) < v112;
      __swift_destroy_boxed_opaque_existential_1(aBlock);
      v16 = v112 | v165;
    }
    v116 = (uint64_t)&v102[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
    swift_beginAccess(&v102[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], v190, 0, 0);
    sub_55D1C(v116, (uint64_t)aBlock);
    v117 = v184;
    v118 = v185;
    __swift_project_boxed_opaque_existential_1(aBlock, (uint64_t)v184);
    v119 = (*((uint64_t (**)(void *, void (*)(uint64_t)))v118 + 2))(v117, v118);
    v121 = (uint64_t)v109[3];
    v120 = v109[4];
    __swift_project_boxed_opaque_existential_1(v109, v121);
    v122 = (*((uint64_t (**)(uint64_t, char *))v120 + 2))(v121, v120);
    __swift_destroy_boxed_opaque_existential_1(aBlock);
    v165 = (v119 != v122) & v16;
    if (v119 != v122)
    {
      v20 = v174;
      a1 = v169;
      v25 = (char **)v166;
      goto LABEL_78;
    }
    v20 = v174;
    a1 = v169;
    v25 = (char **)v166;
    if ((v16 & 1) != 0)
      break;
LABEL_78:
    swift_beginAccess(v39 + 16, v189, 0, 0);
    v175 = *(_OWORD *)(v39 + 32);
    v176 = *(_OWORD *)(v39 + 16);
    v123 = swift_allocObject(&unk_13C75D0, 32, 7);
    *(_QWORD *)(v123 + 16) = v102;
    *(_QWORD *)(v123 + 24) = v39;
    v124 = v102;
    swift_retain();
    UIViewPropertyAnimator.addModifiedAnimations(with:animations:)(2, (uint64_t)sub_E18E90, v123);
    swift_release();
    if (v163)
      goto LABEL_107;
    if (v161 == v95)
    {
      sub_55D1C((uint64_t)v171, (uint64_t)v187);
      v125 = swift_allocObject(&unk_13C75F8, 88, 7);
      *(_QWORD *)(v125 + 16) = a1;
      *(double *)(v125 + 24) = v36;
      *(_QWORD *)(v125 + 32) = v20;
      *(_QWORD *)(v125 + 40) = v159;
      sub_8B15C(v187, v125 + 48);
      v185 = sub_E18ED4;
      v186 = v125;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_59BEF0;
      v184 = &block_descriptor_72_6;
      v126 = _Block_copy(aBlock);
      swift_bridgeObjectRetain();
      v127 = v174;
      v20 = v174;
      swift_retain();
      objc_msgSend(v179, "addCompletion:", v126, swift_release().n128_f64[0]);
      _Block_release(v126);
    }
    swift_beginAccess(v164, aBlock, 33, 0);
    v128 = v179;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v128);
    v130 = *(_QWORD *)((char *)&dword_10 + (*(_QWORD *)v164 & 0xFFFFFFFFFFFFFF8));
    v129 = *(_QWORD *)((char *)&dword_18 + (*(_QWORD *)v164 & 0xFFFFFFFFFFFFFF8));
    v16 = v162;
    if (v130 >= v129 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v129 > 1, v130 + 1, 1);
    v131 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v130, v128);
    specialized Array._endMutation()(v131);
    swift_endAccess(aBlock);
    if (v95 <= 1)
      v132 = 1;
    else
      v132 = v95;
    objc_msgSend(v128, "startAnimationAfterDelay:", v170[18] * (double)(v132 - 1));
    swift_release();

    v98 = 0;
    ++v95;
    v99 = v178 + 32;
    v100 = v175;
    v97 = v176;
    if (v177 == v162)
      goto LABEL_87;
  }
  swift_bridgeObjectRelease();
  sub_E15300();
  v137 = *(double *)(v39 + 16);
  v138 = v36 + *(double *)(v39 + 24);
  *(CGFloat *)(v39 + 24) = v138;
  sub_E10A00(v137, v138, *(CGFloat *)(v39 + 32), *(CGFloat *)(v39 + 40));
  v140 = v139;
  if (!v95)
  {
LABEL_105:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_E125A0(v171, v156 & 1, v157, v160, 1, 0.0, v140, a8);

    swift_release();
    goto LABEL_127;
  }
  if (v168)
  {
    v141 = v95 - 1;
  }
  else
  {
    v141 = v95 - 1;
    if ((unint64_t)(v95 - 1) >= *(_QWORD *)((char *)&dword_10 + (v169 & 0xFFFFFFFFFFFFF8)))
      goto LABEL_132;
  }
  if (v141 < v172[2])
  {
    v142 = 0;
    v143 = (CGFloat *)(v172 + 7);
    do
    {
      if (v168)
        v144 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v142, v169);
      else
        v144 = *(id *)(v169 + 8 * v142 + 32);
      v145 = v144;
      ++v142;
      UIView.untransformedFrame.setter(*(v143 - 3), *(v143 - 2), *(v143 - 1), *v143);

      v143 += 4;
    }
    while (v95 != v142);
    goto LABEL_105;
  }
LABEL_131:
  __break(1u);
LABEL_132:
  __break(1u);
LABEL_133:
  __break(1u);
LABEL_134:
  __break(1u);
}

id sub_E135B0(uint64_t a1, CGFloat *a2)
{
  _BYTE v4[24];

  swift_beginAccess(a2 + 2, v4, 0, 0);
  return UIView.untransformedFrame.setter(a2[2], a2[3], a2[4], a2[5]);
}

void sub_E135F8(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  unint64_t v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  CGFloat v17;
  CGFloat v18;
  uint64_t v19;
  void *v20;
  id v21;
  double v22;
  double v23;
  CGFloat v24;
  CGFloat v25;
  void *v26;
  _QWORD *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t);
  uint64_t *v32;
  id v33;
  _BYTE v34[24];
  _BYTE v35[24];
  _BYTE v36[24];

  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v6 = a3;
    else
      v6 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v12 = _CocoaArrayWrapper.endIndex.getter(v6);
    if (!v12)
      goto LABEL_10;
  }
  else
  {
    v12 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    if (!v12)
      goto LABEL_10;
  }
  if (v12 < 1)
  {
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, a5);
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  if ((a3 & 0xC000000000000001) != 0)
  {
    v13 = 0;
    do
    {
      v14 = specialized _ArrayBuffer._getElementSlowPath(_:)(v13++, a3);
      v15 = UIView.untransformedFrame.getter();
      UIView.untransformedFrame.setter(v15, v16 + a1, v17, v18);
      swift_unknownObjectRelease(v14);
    }
    while (v12 != v13);
  }
  else
  {
    v19 = 0;
    do
    {
      v20 = *(void **)(a3 + 8 * v19++ + 32);
      v21 = v20;
      v22 = UIView.untransformedFrame.getter();
      UIView.untransformedFrame.setter(v22, v23 + a1, v24, v25);

    }
    while (v12 != v19);
  }
LABEL_10:
  swift_bridgeObjectRelease();
  v26 = *(void **)(a4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView);
  swift_beginAccess(a5 + 16, v36, 0, 0);
  objc_msgSend(v26, "setContentOffset:", *(double *)(a5 + 16), *(double *)(a5 + 24));
  *(_BYTE *)(a4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating) = 0;
  v27 = (_QWORD *)(a4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators);
  swift_beginAccess(a4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators, v35, 1, 0);
  *v27 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  v28 = *(void **)(a4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView);
  if (!v28)
    return;
  v29 = a6[3];
  v30 = a6[4];
  __swift_project_boxed_opaque_existential_1(a6, v29);
  v31 = *(uint64_t (**)(uint64_t, uint64_t))(v30 + 16);
  a6 = v28;
  v6 = v31(v29, v30);
  v32 = (uint64_t *)(a4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
  swift_beginAccess(a4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews, v34, 0, 0);
  a5 = *v32;
  if ((a5 & 0xC000000000000001) != 0)
    goto LABEL_23;
  if ((v6 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_25;
  }
  if (v6 >= *(_QWORD *)((char *)&dword_10 + (a5 & 0xFFFFFFFFFFFFF8)))
  {
LABEL_25:
    __break(1u);
    return;
  }
  v33 = *(id *)(a5 + 8 * v6 + 32);
LABEL_15:
  sub_E14B44((uint64_t)a6, (uint64_t)v33);

}

void sub_E1385C(_QWORD *a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6, double a7, double a8)
{
  uint64_t v11;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  void *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void *v26;
  uint64_t (**v27)(void *, void *);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  char *v39;
  char *v40;
  id v41;
  uint64_t v42;
  void *v43;
  id v44;
  uint64_t v45;
  void *v46;
  char *v47;
  char *v48;
  id v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  double *v56;
  uint64_t v57;
  uint64_t v58;
  char *v60;
  uint64_t v61;
  char v63[24];
  void **aBlock;
  uint64_t v65;
  void *v66;
  void *v67;
  uint64_t (**v68)(void *, void *);
  uint64_t v69;
  __int128 v70[2];
  char v71[32];

  v11 = a2;
  if (!((unint64_t)a2 >> 62))
  {
    v14 = *(_QWORD *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    v15 = v14;
    v61 = v14;
    if (v14)
      goto LABEL_3;
LABEL_27:
    swift_bridgeObjectRelease();
    return;
  }
  if (a2 < 0)
    v54 = a2;
  else
    v54 = a2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v61 = _CocoaArrayWrapper.endIndex.getter(v54);
  if (!v61)
    goto LABEL_27;
  swift_bridgeObjectRetain();
  v15 = _CocoaArrayWrapper.endIndex.getter(v54);
  swift_bridgeObjectRelease();
LABEL_3:
  v58 = v15 - 1;
  if (__OFSUB__(v15, 1))
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v61 < 1)
  {
LABEL_29:
    __break(1u);
    return;
  }
  v16 = &v60[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators];
  v55 = v11 & 0xC000000000000001;
  v56 = (double *)&v60[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
  swift_beginAccess(&v60[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs], v71, 0, 0);
  v17 = 0;
  v57 = v11;
  do
  {
    if (v55)
      v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v17, v11);
    else
      v18 = *(id *)(v11 + 8 * v17 + 32);
    v19 = v18;
    v20 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:timingParameters:", a3, a6);
    sub_55D1C((uint64_t)a1, (uint64_t)v70);
    v21 = swift_allocObject(&unk_13C7440, 80, 7);
    *(_QWORD *)(v21 + 16) = v19;
    sub_8B15C(v70, v21 + 24);
    *(_QWORD *)(v21 + 64) = v60;
    *(double *)(v21 + 72) = a7;
    v68 = (uint64_t (**)(void *, void *))sub_E18D58;
    v69 = v21;
    aBlock = _NSConcreteStackBlock;
    v65 = 1107296256;
    v66 = sub_42D124;
    v67 = &block_descriptor_39_10;
    v22 = _Block_copy(&aBlock);
    v23 = v19;
    v24 = v60;
    objc_msgSend(v20, "addAnimations:", v22, swift_release().n128_f64[0]);
    _Block_release(v22);
    v25 = (uint64_t)&v23[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
    swift_beginAccess(&v23[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], v63, 0, 0);
    sub_55D1C(v25, (uint64_t)&aBlock);
    v26 = v67;
    v27 = v68;
    __swift_project_boxed_opaque_existential_1(&aBlock, (uint64_t)v67);
    v28 = v27[2](v26, v27);
    v30 = a1[3];
    v29 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v30);
    v31 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 16))(v30, v29);
    __swift_destroy_boxed_opaque_existential_1(&aBlock);
    if (v28 == v31)
    {
      v32 = v20;
      sub_E10B5C(a1, v20, (uint64_t *)((char *)&dword_0 + 1), 0);

      v33 = *(void **)&v23[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
      if (v33)
      {
        v34 = _s23InstrumentalContentViewCMa();
        v35 = swift_dynamicCastClass(v33, v34);
        if (v35)
        {
          v36 = v35;
          v37 = swift_allocObject(&unk_13C74E0, 40, 7);
          *(_QWORD *)(v37 + 16) = v24;
          *(_QWORD *)(v37 + 24) = v23;
          *(double *)(v37 + 32) = a7;
          v68 = (uint64_t (**)(void *, void *))sub_E18DEC;
          v69 = v37;
          aBlock = _NSConcreteStackBlock;
          v65 = 1107296256;
          v66 = sub_42D124;
          v67 = &block_descriptor_51_5;
          v38 = _Block_copy(&aBlock);
          v39 = v23;
          v40 = v24;
          v41 = v33;
          objc_msgSend(v32, "addAnimations:", v38, swift_release().n128_f64[0]);
          _Block_release(v38);
          v42 = swift_allocObject(&unk_13C7530, 32, 7);
          *(_QWORD *)(v42 + 16) = v36;
          *(double *)(v42 + 24) = a8;
          v68 = (uint64_t (**)(void *, void *))sub_E18E1C;
          v69 = v42;
          aBlock = _NSConcreteStackBlock;
          v65 = 1107296256;
          v66 = sub_59BEF0;
          v67 = &block_descriptor_57_7;
          v43 = _Block_copy(&aBlock);
          v44 = v41;
          objc_msgSend(v32, "addCompletion:", v43, swift_release().n128_f64[0]);
          _Block_release(v43);

        }
      }
    }
    v11 = v57;
    if (v58 == v17)
    {
      sub_55D1C((uint64_t)a1, (uint64_t)v70);
      v45 = swift_allocObject(&unk_13C7490, 104, 7);
      *(_QWORD *)(v45 + 16) = v57;
      *(double *)(v45 + 24) = a7;
      *(_QWORD *)(v45 + 32) = v23;
      *(_QWORD *)(v45 + 40) = v24;
      *(double *)(v45 + 48) = a4;
      *(double *)(v45 + 56) = a5;
      sub_8B15C(v70, v45 + 64);
      v68 = (uint64_t (**)(void *, void *))sub_E18DA8;
      v69 = v45;
      aBlock = _NSConcreteStackBlock;
      v65 = 1107296256;
      v66 = sub_59BEF0;
      v67 = &block_descriptor_45_6;
      v46 = _Block_copy(&aBlock);
      swift_bridgeObjectRetain();
      v47 = v23;
      v48 = v24;
      objc_msgSend(v20, "addCompletion:", v46, swift_release().n128_f64[0]);
      _Block_release(v46);
    }
    swift_beginAccess(v16, &aBlock, 33, 0);
    v49 = v20;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v49);
    v51 = *(_QWORD *)((char *)&dword_10 + (*(_QWORD *)v16 & 0xFFFFFFFFFFFFFF8));
    v50 = *(_QWORD *)((char *)&dword_18 + (*(_QWORD *)v16 & 0xFFFFFFFFFFFFFF8));
    if (v51 >= v50 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v50 > 1, v51 + 1, 1);
    v52 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v51, v49);
    specialized Array._endMutation()(v52);
    swift_endAccess(&aBlock);
    if (v17 <= 1)
      v53 = 1;
    else
      v53 = v17;
    ++v17;
    objc_msgSend(v49, "startAnimationAfterDelay:", v56[18] * (double)(v53 - 1), v55);

  }
  while (v61 != v17);
  swift_bridgeObjectRelease();
}

id sub_E13E54(char *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;

  v6 = (uint64_t)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
  swift_beginAccess(&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], &v14, 0, 0);
  sub_55D1C(v6, (uint64_t)v15);
  v7 = v16;
  v8 = v17;
  __swift_project_boxed_opaque_existential_1(v15, v16);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 16))(v7, v8);
  v10 = a2[3];
  v11 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v10);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 16))(v10, v11);
  __swift_destroy_boxed_opaque_existential_1(v15);
  if (v12 < v9)
    swift_beginAccess(a3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs, v15, 0, 0);
  objc_msgSend(a1, "frame");
  return objc_msgSend(a1, "setFrame:");
}

id sub_E13FA0(uint64_t a1, char *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id result;
  uint64_t v8;
  _QWORD v9[3];
  uint64_t v10;
  uint64_t v11;

  sub_E0F124(a2);
  v3 = (uint64_t)&a2[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
  swift_beginAccess(&a2[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], &v8, 0, 0);
  sub_55D1C(v3, (uint64_t)v9);
  v4 = v10;
  v5 = v11;
  __swift_project_boxed_opaque_existential_1(v9, v10);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
  result = (id)__swift_destroy_boxed_opaque_existential_1(v9);
  if (!v6)
  {
    objc_msgSend(a2, "frame");
    return objc_msgSend(a2, "setFrame:");
  }
  return result;
}

void sub_E1406C(double a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  uint64_t v26;
  _BYTE v27[24];
  _BYTE v28[24];
  _QWORD v29[3];
  uint64_t v30;
  uint64_t v31;

  if ((unint64_t)a5 >> 62)
  {
    if (a5 < 0)
      v16 = a5;
    else
      v16 = a5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v12 = _CocoaArrayWrapper.endIndex.getter(v16);
    if (!v12)
      goto LABEL_13;
  }
  else
  {
    v12 = *(_QWORD *)((char *)&dword_10 + (a5 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    if (!v12)
      goto LABEL_13;
  }
  if (v12 < 1)
    goto LABEL_32;
  v13 = 0;
  do
  {
    if ((a5 & 0xC000000000000001) != 0)
      v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v13, a5);
    else
      v14 = *(id *)(a5 + 8 * v13 + 32);
    v15 = v14;
    ++v13;
    objc_msgSend(v14, "frame");
    objc_msgSend(v15, "setFrame:");

  }
  while (v12 != v13);
LABEL_13:
  swift_bridgeObjectRelease();
  v17 = a6 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
  swift_beginAccess(v17, v28, 0, 0);
  sub_55D1C(v17, (uint64_t)v29);
  v18 = v30;
  v19 = v31;
  __swift_project_boxed_opaque_existential_1(v29, v30);
  v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 16))(v18, v19);
  v21 = (uint64_t *)(a7 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
  swift_beginAccess(a7 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews, v27, 0, 0);
  v22 = *v21;
  if ((unint64_t)*v21 >> 62)
    goto LABEL_27;
  v23 = *(_QWORD *)((char *)&dword_10 + (v22 & 0xFFFFFFFFFFFFF8));
  while (v23 >= v20)
  {
    __swift_destroy_boxed_opaque_existential_1(v29);
    if (v20 == v23)
    {
LABEL_16:
      objc_msgSend(*(id *)(a7 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView), "setContentOffset:", a2, a3);
      *(_BYTE *)(a7 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating) = 0;
      v24 = (_QWORD *)(a7 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators);
      swift_beginAccess(v24, v29, 1, 0);
      *v24 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRelease();
      return;
    }
    if (v20 >= v23)
      goto LABEL_33;
    while (1)
    {
      v22 = *v21;
      if ((*v21 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        v25 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v20, v22);
        swift_bridgeObjectRelease();
        goto LABEL_22;
      }
      if (v20 < 0)
        break;
      if ((unint64_t)v20 >= *(_QWORD *)((char *)&dword_10 + (v22 & 0xFFFFFFFFFFFFF8)))
        goto LABEL_26;
      v25 = (char *)*(id *)(v22 + 8 * v20 + 32);
LABEL_22:
      ++v20;
      sub_E0F124(v25);

      if (v23 == v20)
        goto LABEL_16;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    if (v22 < 0)
      v26 = v22;
    else
      v26 = v22 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v23 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
}

void sub_E14344(_QWORD *a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6, double a7)
{
  uint64_t v9;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  void *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void *v25;
  uint64_t (**v26)(void *, void *);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  void *v33;
  char *v34;
  id v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  double *v42;
  uint64_t v43;
  uint64_t v44;
  char *v46;
  uint64_t v47;
  char v48[24];
  void **aBlock;
  uint64_t v50;
  void *v51;
  void *v52;
  uint64_t (**v53)(void *, void *);
  uint64_t v54;
  __int128 v55[2];
  char v56[32];

  v9 = a2;
  if (!((unint64_t)a2 >> 62))
  {
    v13 = *(_QWORD *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    v14 = v13;
    v47 = v13;
    if (v13)
      goto LABEL_3;
LABEL_25:
    swift_bridgeObjectRelease();
    return;
  }
  if (a2 < 0)
    v40 = a2;
  else
    v40 = a2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v47 = _CocoaArrayWrapper.endIndex.getter(v40);
  if (!v47)
    goto LABEL_25;
  swift_bridgeObjectRetain();
  v14 = _CocoaArrayWrapper.endIndex.getter(v40);
  swift_bridgeObjectRelease();
LABEL_3:
  v44 = v14 - 1;
  if (__OFSUB__(v14, 1))
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v47 < 1)
  {
LABEL_27:
    __break(1u);
    return;
  }
  v15 = &v46[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators];
  v41 = v9 & 0xC000000000000001;
  v42 = (double *)&v46[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
  swift_beginAccess(&v46[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs], v56, 0, 0);
  v16 = 0;
  v43 = v9;
  do
  {
    if (v41)
      v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v16, v9);
    else
      v17 = *(id *)(v9 + 8 * v16 + 32);
    v18 = v17;
    v19 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:timingParameters:", a3, a6);
    sub_55D1C((uint64_t)a1, (uint64_t)v55);
    v20 = swift_allocObject(&unk_13C73A0, 80, 7);
    *(_QWORD *)(v20 + 16) = v18;
    sub_8B15C(v55, v20 + 24);
    *(double *)(v20 + 64) = a7;
    *(_QWORD *)(v20 + 72) = v46;
    v53 = (uint64_t (**)(void *, void *))sub_E18CCC;
    v54 = v20;
    aBlock = _NSConcreteStackBlock;
    v50 = 1107296256;
    v51 = sub_42D124;
    v52 = &block_descriptor_27_11;
    v21 = _Block_copy(&aBlock);
    v22 = v18;
    v23 = v46;
    objc_msgSend(v19, "addAnimations:", v21, swift_release().n128_f64[0]);
    _Block_release(v21);
    v24 = (uint64_t)&v22[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
    swift_beginAccess(&v22[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], v48, 0, 0);
    sub_55D1C(v24, (uint64_t)&aBlock);
    v25 = v52;
    v26 = v53;
    __swift_project_boxed_opaque_existential_1(&aBlock, (uint64_t)v52);
    v27 = v26[2](v25, v26);
    v29 = a1[3];
    v28 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v29);
    v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 16))(v29, v28);
    __swift_destroy_boxed_opaque_existential_1(&aBlock);
    if (v27 == v30)
    {
      v31 = v19;
      sub_E10B5C(a1, v19, (uint64_t *)((char *)&dword_0 + 1), 1);

    }
    v9 = v43;
    if (v44 == v16)
    {
      sub_55D1C((uint64_t)a1, (uint64_t)v55);
      v32 = swift_allocObject(&unk_13C73F0, 88, 7);
      *(_QWORD *)(v32 + 16) = v43;
      *(_QWORD *)(v32 + 24) = v23;
      *(double *)(v32 + 32) = a4;
      *(double *)(v32 + 40) = a5;
      sub_8B15C(v55, v32 + 48);
      v53 = (uint64_t (**)(void *, void *))sub_E18D14;
      v54 = v32;
      aBlock = _NSConcreteStackBlock;
      v50 = 1107296256;
      v51 = sub_59BEF0;
      v52 = &block_descriptor_33_10;
      v33 = _Block_copy(&aBlock);
      swift_bridgeObjectRetain();
      v34 = v23;
      objc_msgSend(v19, "addCompletion:", v33, swift_release().n128_f64[0]);
      _Block_release(v33);
    }
    swift_beginAccess(v15, &aBlock, 33, 0);
    v35 = v19;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v35);
    v37 = *(_QWORD *)((char *)&dword_10 + (*(_QWORD *)v15 & 0xFFFFFFFFFFFFFF8));
    v36 = *(_QWORD *)((char *)&dword_18 + (*(_QWORD *)v15 & 0xFFFFFFFFFFFFFF8));
    if (v37 >= v36 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v36 > 1, v37 + 1, 1);
    v38 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v37, v35);
    specialized Array._endMutation()(v38);
    swift_endAccess(&aBlock);
    if (v16 <= 1)
      v39 = 1;
    else
      v39 = v16;
    ++v16;
    objc_msgSend(v35, "startAnimationAfterDelay:", v42[18] * (double)(v39 - 1));

  }
  while (v47 != v16);
  swift_bridgeObjectRelease();
}

id sub_E147DC(char *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;

  v6 = (uint64_t)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
  swift_beginAccess(&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], &v14, 0, 0);
  sub_55D1C(v6, (uint64_t)v15);
  v7 = v16;
  v8 = v17;
  __swift_project_boxed_opaque_existential_1(v15, v16);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 16))(v7, v8);
  v10 = a2[3];
  v11 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v10);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 16))(v10, v11);
  __swift_destroy_boxed_opaque_existential_1(v15);
  if (v9 < v12)
    swift_beginAccess(a3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs, v15, 0, 0);
  objc_msgSend(a1, "frame");
  return objc_msgSend(a1, "setFrame:");
}

void sub_E14910(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  char *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  _BYTE v21[24];
  _BYTE v22[24];
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;

  if ((a4 & 0xC000000000000001) != 0)
    goto LABEL_18;
  if (*(_QWORD *)((char *)&dword_10 + (a4 & 0xFFFFFFFFFFFFF8)))
  {
    v11 = (char *)*(id *)(a4 + 32);
    goto LABEL_4;
  }
  __break(1u);
  do
  {
    if (v5 < 0)
      v20 = v5;
    else
      v20 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v16 = _CocoaArrayWrapper.endIndex.getter(v20);
    swift_bridgeObjectRelease();
    if (v16 < v6)
      goto LABEL_24;
LABEL_6:
    __swift_destroy_boxed_opaque_existential_1(v23);
    if (v6 == v16)
    {
LABEL_7:
      objc_msgSend(*(id *)(a5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView), "setContentOffset:", a1, a2);
      *(_BYTE *)(a5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating) = 0;
      v17 = (_QWORD *)(a5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators);
      swift_beginAccess(v17, v23, 1, 0);
      *v17 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRelease();
      return;
    }
    if (v6 >= v16)
      goto LABEL_25;
    while (1)
    {
      v18 = *v7;
      if ((*v7 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        v19 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v18);
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
      if (v6 < 0)
        break;
      if ((unint64_t)v6 >= *(_QWORD *)((char *)&dword_10 + (v18 & 0xFFFFFFFFFFFFF8)))
        goto LABEL_17;
      v19 = (char *)*(id *)(v18 + 8 * v6 + 32);
LABEL_13:
      ++v6;
      sub_E0F124(v19);

      if (v16 == v6)
        goto LABEL_7;
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    v11 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a4);
LABEL_4:
    v12 = v11;
    v13 = (uint64_t)&v11[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
    swift_beginAccess(&v11[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line], v22, 0, 0);
    sub_55D1C(v13, (uint64_t)v23);

    v14 = v24;
    v15 = v25;
    __swift_project_boxed_opaque_existential_1(v23, v24);
    v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 16))(v14, v15);
    v7 = (uint64_t *)(a5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
    swift_beginAccess(a5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews, v21, 0, 0);
    v5 = *v7;
  }
  while ((unint64_t)*v7 >> 62);
  v16 = *(_QWORD *)((char *)&dword_10 + (v5 & 0xFFFFFFFFFFFFF8));
  if (v16 >= v6)
    goto LABEL_6;
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
}

void sub_E14B44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  id v11;
  void *v12;
  double v13;
  CGFloat v14;
  double *v15;
  double v16;
  CGFloat v17;
  id v18;
  void *v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void (*v26)();
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void (*v30)();
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  void *v41;
  id v42;
  void *v43;
  char v44;
  id v45;
  Class isa;
  uint64_t v47;
  void *v48;
  id v49;
  id v50;
  objc_class *v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  BOOL v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  id v63;
  char v64;
  uint64_t v65;
  id v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  _QWORD aBlock[3];
  void *v81;
  void (*v82)();
  uint64_t v83;
  char v84[24];
  char v85[24];
  _QWORD v86[3];
  uint64_t v87;
  uint64_t v88;
  char v89[24];
  char v90[24];
  char v91[32];

  v3 = v2;
  v6 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
  objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView), "contentOffset");
  v8 = v7;
  v10 = v9;
  v11 = objc_msgSend((id)v3, "view");
  if (!v11)
  {
    __break(1u);
    goto LABEL_73;
  }
  v12 = v11;
  objc_msgSend(v11, "frame");
  v14 = v13;

  v15 = (double *)(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight);
  *(_QWORD *)&v16 = swift_beginAccess(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight, v91, 0, 0).n128_u64[0];
  v17 = *v15;
  if (*v15 > 0.0)
    goto LABEL_5;
  v18 = objc_msgSend((id)v3, "view", v16);
  if (!v18)
  {
LABEL_73:
    __break(1u);
    return;
  }
  v19 = v18;
  objc_msgSend(v18, "frame");
  v17 = v20;

LABEL_5:
  v21 = a2 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
  swift_beginAccess(a2 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line, v90, 0, 0);
  sub_55D1C(v21, (uint64_t)aBlock);
  sub_E105B8(aBlock, v8, v10, v14, v17);
  v23 = v22;
  __swift_destroy_boxed_opaque_existential_1(aBlock);
  v24 = a1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
  swift_beginAccess(v24, v89, 0, 0);
  sub_55D1C(v24, (uint64_t)aBlock);
  v25 = v81;
  v26 = v82;
  __swift_project_boxed_opaque_existential_1(aBlock, (uint64_t)v81);
  v76 = (*((uint64_t (**)(void *, void (*)()))v26 + 2))(v25, v26);
  sub_55D1C(v21, (uint64_t)v86);
  v27 = v87;
  v28 = v88;
  __swift_project_boxed_opaque_existential_1(v86, v87);
  v75 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 16))(v27, v28);
  __swift_destroy_boxed_opaque_existential_1(v86);
  __swift_destroy_boxed_opaque_existential_1(aBlock);
  sub_55D1C(v24, (uint64_t)aBlock);
  v29 = v81;
  v30 = v82;
  __swift_project_boxed_opaque_existential_1(aBlock, (uint64_t)v81);
  v31 = (*((uint64_t (**)(void *, void (*)()))v30 + 2))(v29, v30);
  v32 = (uint64_t *)(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
  swift_beginAccess(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews, v86, 0, 0);
  v79 = v32;
  v33 = *v32;
  v70 = v6;
  if ((unint64_t)*v32 >> 62)
    goto LABEL_63;
  v34 = *(_QWORD *)((char *)&dword_10 + (v33 & 0xFFFFFFFFFFFFF8));
  if (v34 >= v31)
    goto LABEL_7;
LABEL_67:
  __break(1u);
LABEL_68:
  if (v23 < 0)
    v69 = v23;
  else
    v69 = v23 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v37 = _CocoaArrayWrapper.endIndex.getter(v69);
  swift_bridgeObjectRelease();
  while (1)
  {
    v72 = (_QWORD *)(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators);
    v33 = v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs;
    swift_beginAccess(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics, v85, 0, 0);
    v71 = v33;
    swift_beginAccess(v33, v84, 0, 0);
    v74 = 0;
    if (v31 <= v34)
      v38 = v34;
    else
      v38 = v31;
    v77 = v23 & 0xC000000000000001;
    v78 = v38;
    v73 = v3;
    while (1)
    {
      if (v31 == v78)
      {
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
        goto LABEL_60;
      }
      v33 = *v79;
      if ((*v79 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        v39 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v31, v33);
        swift_bridgeObjectRelease();
        if (!v37)
          goto LABEL_18;
      }
      else
      {
        if (v31 < 0)
          goto LABEL_58;
        if ((unint64_t)v31 >= *(_QWORD *)((char *)&dword_10 + (v33 & 0xFFFFFFFFFFFFF8)))
          goto LABEL_59;
        v39 = *(id *)(v33 + 8 * v31 + 32);
        if (!v37)
          goto LABEL_18;
      }
      v40 = v34;
      if (v77)
      {
        swift_bridgeObjectRetain();
        v42 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v23);
      }
      else
      {
        v41 = *(void **)(v23 + 32);
        swift_bridgeObjectRetain();
        v42 = v41;
      }
      v43 = v42;
      v33 = type metadata accessor for SyncedLyricsLineView();
      v44 = static NSObject.== infix(_:_:)(v43, v39);

      if ((v44 & 1) == 0)
        break;
      swift_bridgeObjectRelease();
LABEL_29:
      v34 = v40;
LABEL_30:
      if (v75 >= v76)
        goto LABEL_18;
      v45 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 100.0, 18.0, 0.0, 0.0);
      sub_4E684(0, (unint64_t *)&qword_1508790, UIViewPropertyAnimator_ptr);
      isa = UIViewPropertyAnimator.init(springTimingParameters:)((UISpringTimingParameters)v45).super.isa;
      v47 = swift_allocObject(&unk_13C7350, 32, 7);
      *(_QWORD *)(v47 + 16) = v3;
      *(_QWORD *)(v47 + 24) = v39;
      v82 = sub_E18C5C;
      v83 = v47;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_42D124;
      v81 = &block_descriptor_350;
      v48 = _Block_copy(aBlock);
      v49 = (id)v3;
      v50 = v39;
      -[objc_class addAnimations:](isa, "addAnimations:", v48, swift_release().n128_f64[0]);
      _Block_release(v48);
      swift_beginAccess(v72, aBlock, 33, 0);
      v51 = isa;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v51);
      v53 = *(_QWORD *)((char *)&dword_10 + (*v72 & 0xFFFFFFFFFFFFFF8));
      v52 = *(_QWORD *)((char *)&dword_18 + (*v72 & 0xFFFFFFFFFFFFFF8));
      if (v53 >= v52 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v52 > 1, v53 + 1, 1);
      v54 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v53, v51);
      specialized Array._endMutation()(v54);
      swift_endAccess(aBlock);
      -[objc_class startAnimationAfterDelay:](v51, "startAnimationAfterDelay:", *(double *)(v71 + 144) * (double)v74);

      v55 = __OFADD__(v74, 1);
      v33 = ++v74;
      if (v55)
        goto LABEL_62;
LABEL_19:
      if (++v31 == v34)
        goto LABEL_8;
    }
    v34 = v40;
    if (v37 == 1)
      goto LABEL_17;
    if (v77)
    {
      v56 = specialized _ArrayBuffer._getElementSlowPath(_:)(1, v23);
      v57 = static NSObject.== infix(_:_:)(v56, v39);
      swift_unknownObjectRelease(v56);
      if ((v57 & 1) == 0)
      {
        if (v37 == 2)
        {
LABEL_17:
          swift_bridgeObjectRelease();
LABEL_18:
          v33 = v3;
          sub_E0F124((char *)v39);

          goto LABEL_19;
        }
        v58 = 2;
        while (1)
        {
          v59 = specialized _ArrayBuffer._getElementSlowPath(_:)(v58, v23);
          v60 = v58 + 1;
          if (__OFADD__(v58, 1))
            break;
          v61 = v59;
          v62 = static NSObject.== infix(_:_:)(v59, v39);
          swift_unknownObjectRelease(v61);
          if ((v62 & 1) != 0)
            goto LABEL_53;
          ++v58;
          v3 = v73;
          if (v60 == v37)
          {
            swift_bridgeObjectRelease();
            v34 = v40;
            goto LABEL_18;
          }
        }
LABEL_60:
        __break(1u);
        goto LABEL_61;
      }
LABEL_46:
      swift_bridgeObjectRelease();
      goto LABEL_30;
    }
    v63 = *(id *)(v23 + 40);
    v64 = static NSObject.== infix(_:_:)(v63, v39);

    if ((v64 & 1) != 0)
      goto LABEL_46;
    if (v37 == 2)
      goto LABEL_17;
    v3 = 6;
    while (1)
    {
      v65 = v3 - 3;
      if (__OFADD__(v3 - 4, 1))
        break;
      v66 = *(id *)(v23 + 8 * v3);
      v67 = static NSObject.== infix(_:_:)(v66, v39);

      if ((v67 & 1) != 0)
      {
LABEL_53:
        swift_bridgeObjectRelease();
        v3 = v73;
        goto LABEL_29;
      }
      ++v3;
      if (v65 == v37)
      {
        swift_bridgeObjectRelease();
        v3 = v73;
        v34 = v40;
        goto LABEL_18;
      }
    }
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    if (v33 < 0)
      v68 = v33;
    else
      v68 = v33 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v34 = _CocoaArrayWrapper.endIndex.getter(v68);
    swift_bridgeObjectRelease();
    if (v34 < v31)
      goto LABEL_67;
LABEL_7:
    __swift_destroy_boxed_opaque_existential_1(aBlock);
    if (v31 == v34)
      break;
    if ((unint64_t)v23 >> 62)
      goto LABEL_68;
    v37 = *(_QWORD *)((char *)&dword_10 + (v23 & 0xFFFFFFFFFFFFF8));
  }
LABEL_8:
  swift_bridgeObjectRelease();
  if (v75 >= v76)
  {
    v35 = *(void **)(v3 + v70);
    swift_beginAccess(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs, aBlock, 0, 0);
    v36 = v35;
    objc_msgSend(v36, "contentOffset");
    objc_msgSend(v36, "setContentOffset:");

  }
}

uint64_t sub_E15300()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t i;
  id v6;
  void *v7;
  uint64_t v8;
  _BYTE v9[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators, v9, 0, 0);
  v2 = *v1;
  if (!((unint64_t)v2 >> 62))
  {
    v3 = *(_QWORD *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFF8));
    result = swift_bridgeObjectRetain();
    if (v3)
      goto LABEL_3;
    return swift_bridgeObjectRelease(v2);
  }
  if (v2 < 0)
    v8 = v2;
  else
    v8 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  result = _CocoaArrayWrapper.endIndex.getter(v8);
  v3 = result;
  if (!result)
    return swift_bridgeObjectRelease(v2);
LABEL_3:
  if (v3 >= 1)
  {
    for (i = 0; i != v3; ++i)
    {
      if ((v2 & 0xC000000000000001) != 0)
        v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v2);
      else
        v6 = *(id *)(v2 + 8 * i + 32);
      v7 = v6;
      if (objc_msgSend(v6, "state") == (char *)&dword_0 + 1)
      {
        objc_msgSend(v7, "stopAnimation:", 0);
        objc_msgSend(v7, "finishAnimationAtPosition:", 0);
      }

    }
    return swift_bridgeObjectRelease(v2);
  }
  __break(1u);
  return result;
}

id SyncedLyricsViewController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  _BYTE *v3;
  uint64_t v6;
  double v7;
  char *v8;
  _BYTE *v9;
  char *v10;
  char *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  NSString v16;
  id v17;
  objc_super v19;
  _BYTE __src[544];

  v3[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isPlayingSpatial] = 0;
  v3[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isFullScreen] = 0;
  v6 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_bottomTapAreaHeight;
  v7 = Int.seconds.getter(0);
  *(double *)&v3[v6] = v7;
  *(double *)&v3[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight] = v7;
  v8 = &v3[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
  v9 = v3;
  sub_E07024(0, 0, __src);
  memcpy(v8, __src, 0x219uLL);
  v10 = &v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate];
  *((_QWORD *)v10 + 1) = 0;
  swift_unknownObjectWeakInit(v10);
  v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics] = 0;
  v11 = &v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider];
  *(_OWORD *)v11 = 0u;
  *((_OWORD *)v11 + 1) = 0u;
  *((_QWORD *)v11 + 4) = 0;
  v12 = &v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_shareHandler];
  *v12 = 0;
  v12[1] = 0;
  v13 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
  *(_QWORD *)&v9[v13] = objc_msgSend(objc_allocWithZone((Class)UIScrollView), "init");
  *(_QWORD *)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_blurredLineViews] = &_swiftEmptySetSingleton;
  *(_QWORD *)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView] = 0;
  v14 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_tapFeedbackGenerator;
  *(_QWORD *)&v9[v14] = objc_msgSend(objc_allocWithZone((Class)UISelectionFeedbackGenerator), "init");
  *(_QWORD *)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators] = _swiftEmptyArrayStorage;
  v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating] = 0;
  v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_needsTapHandling] = 0;
  v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isBackgrounded] = 0;
  v15 = &v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_previousBounds];
  *v15 = 0u;
  v15[1] = 0u;
  *(_QWORD *)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScrollTimer] = 0;
  v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScroll] = 1;

  if (a2)
  {
    v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = 0;
  }
  v19.receiver = v9;
  v19.super_class = (Class)type metadata accessor for SyncedLyricsViewController();
  v17 = objc_msgSendSuper2(&v19, "initWithNibName:bundle:", v16, a3);

  return v17;
}

id SyncedLyricsViewController.init(coder:)(void *a1)
{
  _BYTE *v1;
  uint64_t v3;
  double v4;
  char *v5;
  _BYTE *v6;
  char *v7;
  char *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  id v13;
  objc_super v15;
  _BYTE __src[544];

  v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isPlayingSpatial] = 0;
  v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isFullScreen] = 0;
  v3 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_bottomTapAreaHeight;
  v4 = Int.seconds.getter(0);
  *(double *)&v1[v3] = v4;
  *(double *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight] = v4;
  v5 = &v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
  v6 = v1;
  sub_E07024(0, 0, __src);
  memcpy(v5, __src, 0x219uLL);
  v7 = &v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate];
  *((_QWORD *)v7 + 1) = 0;
  swift_unknownObjectWeakInit(v7);
  v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics] = 0;
  v8 = &v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider];
  *(_OWORD *)v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;
  *((_QWORD *)v8 + 4) = 0;
  v9 = &v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_shareHandler];
  *v9 = 0;
  v9[1] = 0;
  v10 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
  *(_QWORD *)&v6[v10] = objc_msgSend(objc_allocWithZone((Class)UIScrollView), "init");
  *(_QWORD *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_blurredLineViews] = &_swiftEmptySetSingleton;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView] = 0;
  v11 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_tapFeedbackGenerator;
  *(_QWORD *)&v6[v11] = objc_msgSend(objc_allocWithZone((Class)UISelectionFeedbackGenerator), "init");
  *(_QWORD *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators] = _swiftEmptyArrayStorage;
  v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating] = 0;
  v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_needsTapHandling] = 0;
  v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isBackgrounded] = 0;
  v12 = &v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_previousBounds];
  *v12 = 0u;
  v12[1] = 0u;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScrollTimer] = 0;
  v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScroll] = 1;

  v15.receiver = v6;
  v15.super_class = (Class)type metadata accessor for SyncedLyricsViewController();
  v13 = objc_msgSendSuper2(&v15, "initWithCoder:", a1);

  return v13;
}

id SyncedLyricsViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SyncedLyricsViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void SyncedLyricsViewController.syncedLyrics(_:animateTo:elapsedTime:gap:)(double a1, uint64_t a2, _QWORD *a3, uint64_t a4, char a5)
{
  sub_E16508(a3, a4, a5 & 1, a1);
}

void SyncedLyricsViewController.syncedLyrics(_:jumpTo:select:elapsedTime:)(double a1, uint64_t a2, _QWORD *a3, int a4)
{
  sub_E16B1C(a3, a4, a1);
}

void SyncedLyricsViewController.syncedLyrics(_:update:elapsedTime:)(double a1, uint64_t a2, _QWORD *a3)
{
  sub_E1765C(a3, a1);
}

void SyncedLyricsViewController.syncedLyrics(_:select:)(uint64_t a1, _QWORD *a2)
{
  sub_E17A54(a2);
}

void sub_E15ABC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char *v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  double v18;
  double v19;
  double v20;
  double v21;
  char *v22;
  __int128 v23;
  __int128 v24;
  char v25;

  v0 = (uint64_t)sub_E103F8();
  v1 = v0;
  if ((unint64_t)v0 >> 62)
  {
    if (v0 >= 0)
      v0 &= 0xFFFFFFFFFFFFFF8uLL;
    v2 = _CocoaArrayWrapper.endIndex.getter(v0);
    if (!v2)
      goto LABEL_8;
  }
  else
  {
    v2 = *(_QWORD *)((char *)&dword_10 + (v0 & 0xFFFFFFFFFFFFF8));
    if (!v2)
    {
LABEL_8:
      swift_bridgeObjectRelease();
      return;
    }
  }
  if (v2 >= 1)
  {
    v23 = 0u;
    v24 = 0u;
    v25 = 1;
    if ((v1 & 0xC000000000000001) != 0)
      v3 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v1);
    else
      v3 = (char *)*(id *)(v1 + 32);
    v4 = v3;
    sub_E0EAA8(v3, 2u, (uint64_t)&v23);
    v6 = v5;
    v8 = v7;
    v10 = v9;
    v12 = v11;
    v13 = v4;
    UIView.untransformedFrame.setter(v6, v8, v10, v12);

    v14 = v2 - 1;
    if (v2 != 1)
    {
      v15 = 0;
      do
      {
        *(CGFloat *)&v23 = v6;
        *((CGFloat *)&v23 + 1) = v8;
        *(CGFloat *)&v24 = v10;
        *((CGFloat *)&v24 + 1) = v12;
        v25 = 0;
        if ((v1 & 0xC000000000000001) != 0)
          v16 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v15 + 1, v1);
        else
          v16 = (char *)*(id *)(v1 + 8 * v15 + 40);
        v17 = v16;
        sub_E0EAA8(v16, 2u, (uint64_t)&v23);
        v6 = v18;
        v8 = v19;
        v10 = v20;
        v12 = v21;
        v22 = v17;
        UIView.untransformedFrame.setter(v6, v8, v10, v12);

        ++v15;
      }
      while (v14 != v15);
    }
    goto LABEL_8;
  }
  __break(1u);
}

void sub_E15C5C(uint64_t a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[24];

  v3 = (uint64_t *)(a2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators);
  swift_beginAccess(a2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators, v7, 0, 0);
  v4 = *v3;
  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0)
      v6 = v4;
    else
      v6 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v5 = _CocoaArrayWrapper.endIndex.getter(v6);
    swift_bridgeObjectRelease(v4);
  }
  else
  {
    v5 = *(_QWORD *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFF8));
  }
  *(_BYTE *)(a2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating) = v5 > 0;
}

void SyncedLyricsViewController.syncedLyrics(_:finish:)(uint64_t a1, uint64_t a2)
{
  sub_E17788(a2);
}

Swift::Bool __swiftcall SyncedLyricsViewController.gestureRecognizer(_:shouldReceive:)(UIGestureRecognizer _, UITouch shouldReceive)
{
  return sub_E18168(shouldReceive.super.isa);
}

Swift::Void __swiftcall SyncedLyricsViewController.scrollViewWillBeginDragging(_:)(UIScrollView a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  sub_E12120();
  sub_E15300();
  *(_BYTE *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScroll) = 0;
  v2 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScrollTimer;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScrollTimer), "invalidate");
  v3 = *(void **)(v1 + v2);
  *(_QWORD *)(v1 + v2) = 0;

}

void sub_E15E3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BYTE *Strong;
  _BYTE v4[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v4, 0, 0);
  Strong = (_BYTE *)swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    Strong[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScroll] = 1;

  }
}

void sub_E15F48()
{
  sub_E10F14(0);
}

uint64_t sub_E15F6C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_E15F94(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_15085EC);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_50F8C;
  return sub_E0B27C(a1, v4, v5, v7, v6);
}

uint64_t objectdestroy_2Tm_6()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_E16044(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_15085FC);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_C3150;
  return sub_E0C04C(a1, v4, v5, v7, v6);
}

unint64_t sub_E160BC()
{
  unint64_t result;

  result = qword_1508618;
  if (!qword_1508618)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CGFloat, &type metadata for CGFloat);
    atomic_store(result, (unint64_t *)&qword_1508618);
  }
  return result;
}

uint64_t sub_E16100()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_E1612C()
{
  uint64_t v0;

  sub_E0D9E4(*(char **)(v0 + 24));
}

_QWORD *sub_E16150(unint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *result;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  char v10;
  char v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  unint64_t v16;

  v2 = a1;
  if (a1 >> 62)
    goto LABEL_15;
  v3 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  while (1)
  {
    if (!v3)
      return _swiftEmptyArrayStorage;
    result = sub_DDED80(0, v3 & ~(v3 >> 63), 0);
    if (v3 < 0)
      break;
    v5 = 0;
    v16 = v2 & 0xC000000000000001;
    v6 = v2;
    while (v3 != v5)
    {
      if (v16)
        v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v2);
      else
        v7 = *(id *)(v2 + 8 * v5 + 32);
      v8 = v7;
      v9 = a2();
      v11 = v10;

      v13 = _swiftEmptyArrayStorage[2];
      v12 = _swiftEmptyArrayStorage[3];
      if (v13 >= v12 >> 1)
        sub_DDED80((_QWORD *)(v12 > 1), v13 + 1, 1);
      ++v5;
      _swiftEmptyArrayStorage[2] = v13 + 1;
      v14 = &_swiftEmptyArrayStorage[2 * v13];
      v14[4] = v9;
      *((_BYTE *)v14 + 40) = v11 & 1;
      v2 = v6;
      if (v3 == v5)
        return _swiftEmptyArrayStorage;
    }
    __break(1u);
LABEL_15:
    if (v2 < 0)
      v15 = v2;
    else
      v15 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v3 = _CocoaArrayWrapper.endIndex.getter(v15);
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

id sub_E162C8(uint64_t a1, char *a2)
{
  uint64_t v4;
  CGFloat *v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  id result;
  void *v23;
  double v24;
  CGFloat v25;
  CGFloat v26;
  void *v27;
  double v28;
  _BOOL4 v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[24];
  unint64_t v33;
  CGRect v34;
  CGRect v35;

  if (!((unint64_t)a1 >> 62))
  {
    v4 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    if (v4)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease(a1);
    return 0;
  }
LABEL_17:
  if (a1 < 0)
    v30 = a1;
  else
    v30 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v4 = _CocoaArrayWrapper.endIndex.getter(v30);
  if (!v4)
    goto LABEL_14;
LABEL_3:
  v33 = a1 & 0xC000000000000001;
  v31 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
  v5 = (CGFloat *)&a2[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight];
  swift_beginAccess(&a2[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight], v32, 0, 0);
  v6 = 4;
  while (1)
  {
    if (v33)
      v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6 - 4, a1);
    else
      v7 = *(id *)(a1 + 8 * v6);
    v8 = v7;
    v9 = v6 - 3;
    if (__OFADD__(v6 - 4, 1))
    {
      __break(1u);
      goto LABEL_17;
    }
    objc_msgSend(v7, "frame");
    v11 = v10;
    v13 = v12;
    v15 = v14;
    v17 = v16;
    objc_msgSend(*(id *)&a2[v31], "contentOffset");
    v19 = v18;
    v21 = v20;
    result = objc_msgSend(a2, "view");
    if (!result)
      break;
    v23 = result;
    objc_msgSend(result, "frame");
    v25 = v24;

    v26 = *v5;
    if (*v5 <= 0.0)
    {
      result = objc_msgSend(a2, "view");
      if (!result)
        goto LABEL_23;
      v27 = result;
      objc_msgSend(result, "frame");
      v26 = v28;

    }
    v34.origin.x = v11;
    v34.origin.y = v13;
    v34.size.width = v15;
    v34.size.height = v17;
    v35.origin.x = v19;
    v35.origin.y = v21;
    v35.size.width = v25;
    v35.size.height = v26;
    v29 = CGRectIntersectsRect(v34, v35);

    if (v29)
    {
      swift_bridgeObjectRelease(a1);
      return &dword_0 + 1;
    }
    ++v6;
    if (v9 == v4)
      goto LABEL_14;
  }
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

void sub_E16508(_QWORD *a1, uint64_t a2, uint64_t a3, double a4)
{
  char *v4;
  char v5;
  char *v6;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  uint64_t v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  uint64_t v24;
  double v25;
  CGFloat v26;
  double v27;
  CGFloat v28;
  id v29;
  void *v30;
  double v31;
  CGFloat v32;
  CGFloat *v33;
  double v34;
  CGFloat v35;
  id v36;
  void *v37;
  double v38;
  int v39;
  char *v40;
  uint64_t v41;
  unsigned int v42;
  char *v43;
  double v44;
  void *v45;
  uint64_t (*v46)();
  unint64_t v47;
  id v48;
  id v49;
  double v50;
  double v51;
  CGFloat v52;
  double v53;
  CGFloat v54;
  double v55;
  CGFloat v56;
  double v57;
  double v58;
  uint64_t v59;
  char *v60;
  objc_class *v61;
  UISpringTimingParameters v62;
  Class isa;
  uint64_t v64;
  void *v65;
  char *v66;
  BOOL v67;
  uint64_t v68;
  void *v69;
  char *v70;
  double v71;
  void **aBlock;
  uint64_t v73;
  void *v74;
  void *v75;
  uint64_t (*v76)();
  uint64_t v77;
  _BYTE v78[24];
  char v79[32];
  char v80[24];
  char v81[24];
  char v82[32];
  CGRect v83;
  CGRect v84;

  v6 = v4;
  v10 = a1;
  v11 = a1[3];
  v12 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v11);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 16))(v11, v12);
  v14 = &v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
  swift_beginAccess(&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews], v82, 0, 0);
  v15 = *(_QWORD *)v14;
  v71 = a4;
  if ((*(_QWORD *)v14 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v13 = specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v15);
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  if ((v13 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v13 >= *(_QWORD *)((char *)&dword_10 + (v15 & 0xFFFFFFFFFFFFF8)))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v13 = (unint64_t)*(id *)(v15 + 8 * v13 + 32);
LABEL_6:
  objc_msgSend((id)v13, "frame", *(_QWORD *)&a4);
  v17 = v16;
  v19 = v18;
  v21 = v20;
  v23 = v22;
  v24 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
  objc_msgSend(*(id *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView], "contentOffset");
  v26 = v25;
  v28 = v27;
  v29 = objc_msgSend(v6, "view");
  if (!v29)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v30 = v29;
  objc_msgSend(v29, "frame");
  v32 = v31;

  v33 = (CGFloat *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight];
  *(_QWORD *)&v34 = swift_beginAccess(&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight], v81, 0, 0).n128_u64[0];
  v35 = *v33;
  if (*v33 <= 0.0)
  {
    v36 = objc_msgSend(v6, "view", v34);
    if (!v36)
    {
LABEL_32:
      __break(1u);
      return;
    }
    v37 = v36;
    objc_msgSend(v36, "frame");
    v35 = v38;

  }
  v5 = a3 & 1;
  v83.origin.x = v17;
  v83.origin.y = v19;
  v83.size.width = v21;
  v83.size.height = v23;
  v84.origin.x = v26;
  v84.origin.y = v28;
  v84.size.width = v32;
  v84.size.height = v35;
  if (CGRectIntersectsRect(v83, v84))
  {
    v39 = 0;
  }
  else
  {
    swift_beginAccess(&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews], v80, 0, 0);
    v40 = v6;
    v41 = swift_bridgeObjectRetain();
    v42 = sub_E162C8(v41, v40);

    swift_bridgeObjectRelease();
    v39 = v42 ^ 1;
  }
  v43 = &v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode];
  *(_QWORD *)&v44 = swift_beginAccess(&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode], v79, 0, 0).n128_u64[0];
  if (*v43 != 2
    && ((objc_msgSend(*(id *)&v6[v24], "isDragging", v44) | v39) & 1) == 0
    && v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScroll] == 1)
  {
    a3 = v13 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
    swift_beginAccess(v13 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line, v78, 0, 0);
    sub_55D1C(a3, (uint64_t)&aBlock);
    v45 = v75;
    v46 = v76;
    __swift_project_boxed_opaque_existential_1(&aBlock, (uint64_t)v75);
    v47 = (*((uint64_t (**)(void *, uint64_t (*)()))v46 + 2))(v45, v46);
    v10 = (_QWORD *)v47;
    v15 = *(_QWORD *)v14;
    if ((*(_QWORD *)v14 & 0xC000000000000001) == 0)
    {
      if ((v47 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v47 < *(_QWORD *)((char *)&dword_10 + (v15 & 0xFFFFFFFFFFFFF8)))
      {
        v48 = *(id *)(v15 + 8 * v47 + 32);
LABEL_20:
        v49 = v48;
        v50 = UIView.untransformedFrame.getter();
        v52 = v51;
        v54 = v53;
        v56 = v55;

        sub_E10A00(v50, v52, v54, v56);
        v58 = v57;

        __swift_destroy_boxed_opaque_existential_1(&aBlock);
        sub_55D1C(a3, (uint64_t)&aBlock);
        v59 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_needsTapHandling;
        sub_E125A0((uint64_t)&aBlock, v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_needsTapHandling], a2, v5, 0, 0.0, v58, v71);

        __swift_destroy_boxed_opaque_existential_1(&aBlock);
        v6[v59] = 0;
        return;
      }
      __break(1u);
      goto LABEL_31;
    }
LABEL_28:
    swift_bridgeObjectRetain();
    v48 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v15);
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  v60 = &v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics];
  swift_beginAccess(&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics], v78, 0, 0);
  if (*(_QWORD *)v60 && *(_BYTE *)(*(_QWORD *)v60 + 56) == 2)
    v61 = (objc_class *)sub_E07EA0(a2, v5);
  else
    v61 = (objc_class *)objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 100.0, 18.0, 0.0, 0.0);
  v62.super.isa = v61;
  sub_4E684(0, (unint64_t *)&qword_1508790, UIViewPropertyAnimator_ptr);
  isa = UIViewPropertyAnimator.init(springTimingParameters:)(v62).super.isa;
  sub_E10B5C(v10, isa, (uint64_t *)((char *)&dword_0 + 1), 1);
  v64 = swift_allocObject(&unk_13C7850, 24, 7);
  *(_QWORD *)(v64 + 16) = v6;
  v76 = sub_E19404;
  v77 = v64;
  aBlock = _NSConcreteStackBlock;
  v73 = 1107296256;
  v74 = sub_42D124;
  v75 = &block_descriptor_124_1;
  v65 = _Block_copy(&aBlock);
  v66 = v6;
  -[objc_class addAnimations:](isa, "addAnimations:", v65, swift_release().n128_f64[0]);
  _Block_release(v65);
  v67 = -[objc_class state](isa, "state") == (char *)&dword_0 + 3;
  v66[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating] = v67;
  v68 = swift_allocObject(&unk_13C78A0, 24, 7);
  *(_QWORD *)(v68 + 16) = v66;
  v76 = sub_E1935C;
  v77 = v68;
  aBlock = _NSConcreteStackBlock;
  v73 = 1107296256;
  v74 = sub_59BEF0;
  v75 = &block_descriptor_130_1;
  v69 = _Block_copy(&aBlock);
  v70 = v66;
  -[objc_class addCompletion:](isa, "addCompletion:", v69, swift_release().n128_f64[0]);
  _Block_release(v69);
  -[objc_class startAnimation](isa, "startAnimation");

}

void sub_E16B1C(_QWORD *a1, int a2, double a3)
{
  char *v3;
  char *v4;
  char v5;
  double v6;
  char *v7;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  void *v16;
  id (*v17)();
  unint64_t v18;
  id v19;
  id v20;
  double v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  double v28;
  uint64_t *v29;
  uint64_t v30;
  double v31;
  double *v32;
  id v33;
  void *v34;
  char *v35;
  id v36;
  id v37;
  double v38;
  CGFloat v39;
  double v40;
  CGFloat v41;
  id v42;
  void *v43;
  double v44;
  CGFloat v45;
  CGFloat *v46;
  double v47;
  CGFloat v48;
  id v49;
  void *v50;
  double v51;
  CGFloat v52;
  CGFloat v53;
  CGFloat v54;
  CGFloat v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char *v60;
  void *v61;
  id v62;
  uint64_t v63;
  void *v64;
  id v65;
  double v66;
  double v67;
  void *v68;
  id (*v69)();
  uint64_t v70;
  double v71;
  CGFloat v72;
  double v73;
  CGFloat v74;
  id v75;
  void *v76;
  double v77;
  CGFloat v78;
  CGFloat v79;
  id v80;
  void *v81;
  double v82;
  int64_t v83;
  int64_t v84;
  char *v85;
  uint64_t v86;
  unsigned int v87;
  CGFloat *v88;
  uint64_t v89;
  _QWORD aBlock[3];
  void *v91;
  id (*v92)();
  double *v93;
  char v94[24];
  char v95[24];
  char v96[24];
  char v97[24];
  char v98[24];
  _BYTE v99[64];
  CGRect v100;
  CGRect v101;

  v7 = v3;
  LODWORD(v9) = a2;
  v10 = a1;
  v11 = a1[3];
  v12 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v11);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 16))(v11, v12);
  v14 = (uint64_t *)&v3[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
  swift_beginAccess(&v3[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews], v98, 0, 0);
  v15 = *v14;
  if ((*v14 & 0xC000000000000001) != 0)
    goto LABEL_56;
  if ((v13 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v13 < *(_QWORD *)((char *)&dword_10 + (v15 & 0xFFFFFFFFFFFFF8)))
  {
    v13 = (unint64_t)*(id *)(v15 + 8 * v13 + 32);
    goto LABEL_5;
  }
  __break(1u);
LABEL_59:
  swift_bridgeObjectRetain();
  v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v15);
  swift_bridgeObjectRelease();
LABEL_9:
  v20 = v19;
  v21 = UIView.untransformedFrame.getter();
  v23 = v22;
  v25 = v24;
  v27 = v26;

  sub_E10A00(v21, v23, v25, v27);
  v6 = v28;

  __swift_destroy_boxed_opaque_existential_1(aBlock);
  v29 = (uint64_t *)&v7[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews];
  swift_beginAccess(&v7[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews], v96, 0, 0);
  v30 = *v29;
  swift_bridgeObjectRetain();
  v5 = sub_E08B1C(v13, v30);
  swift_bridgeObjectRelease();
  v4 = &v7[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode];
  *(_QWORD *)&v31 = swift_beginAccess(&v7[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode], v95, 0, 0).n128_u64[0];
  if (*v4 == 2 && (v5 & 1) == 0)
  {
    sub_E15300();
    v32 = (double *)swift_allocObject(&unk_13C7800, 48, 7);
    *((_QWORD *)v32 + 2) = v7;
    v32[3] = 0.0;
    v32[4] = v6;
    *((_QWORD *)v32 + 5) = v13;
    v33 = objc_allocWithZone((Class)UIViewPropertyAnimator);
    v92 = sub_E1926C;
    v93 = v32;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_42D124;
    v91 = &block_descriptor_118_3;
    v34 = _Block_copy(aBlock);
    v35 = v7;
    v36 = (id)v13;
    swift_release();
    v13 = (unint64_t)objc_msgSend(v33, "initWithDuration:curve:animations:", 3, v34, 0.25);
    _Block_release(v34);
    if ((v9 & 1) != 0)
    {
      sub_55D1C(v12, (uint64_t)aBlock);
      v37 = (id)v13;
      sub_E10B5C(aBlock, (void *)v13, (uint64_t *)((char *)&dword_0 + 1), 1);

      __swift_destroy_boxed_opaque_existential_1(aBlock);
    }
    objc_msgSend((id)v13, "startAnimation");

    goto LABEL_45;
  }
  v89 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
  objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView], "contentOffset", v31);
  v39 = v38;
  v41 = v40;
  v42 = objc_msgSend(v7, "view");
  if (!v42)
    goto LABEL_71;
  v43 = v42;
  objc_msgSend(v42, "frame");
  v45 = v44;

  v46 = (CGFloat *)&v7[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight];
  *(_QWORD *)&v47 = swift_beginAccess(&v7[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight], v94, 0, 0).n128_u64[0];
  v88 = v46;
  v48 = *v46;
  if (*v46 <= 0.0)
  {
    v49 = objc_msgSend(v7, "view", v47);
    if (!v49)
    {
LABEL_72:
      __break(1u);
LABEL_73:
      __break(1u);
      goto LABEL_74;
    }
    v50 = v49;
    objc_msgSend(v49, "frame");
    v48 = v51;

  }
  objc_msgSend((id)v13, "frame");
  v101.origin.x = v52;
  v101.origin.y = v53;
  v101.size.width = v54;
  v101.size.height = v55;
  v100.origin.x = v39;
  v100.origin.y = v41;
  v100.size.width = v45;
  v100.size.height = v48;
  if (CGRectIntersectsRect(v100, v101))
  {
    sub_55D1C((uint64_t)v10, (uint64_t)aBlock);
    v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_15075B0);
    if ((swift_dynamicCast(v99, aBlock, v56, &type metadata for Lyrics.InstrumentalLine, 6) & 1) == 0
      && (v9 & 1) != 0)
    {
      sub_E15300();
      sub_E16508(v10, 0, 1, a3);
LABEL_45:

      return;
    }
  }
  sub_55D1C((uint64_t)v10, (uint64_t)aBlock);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_15075B0);
  if (swift_dynamicCast(v99, aBlock, v57, &type metadata for Lyrics.InstrumentalLine, 6))
  {
    v87 = v9;
    v58 = v10[3];
    v9 = v10[4];
    __swift_project_boxed_opaque_existential_1(v10, v58);
    v59 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 16))(v58, v9);
    v10 = (_QWORD *)v59;
    v15 = *v14;
    if ((*v14 & 0xC000000000000001) != 0)
      goto LABEL_62;
    if ((v59 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      v9 = v87;
      if (v59 < *(_QWORD *)((char *)&dword_10 + (v15 & 0xFFFFFFFFFFFFF8)))
      {
        v60 = (char *)*(id *)(v15 + 8 * v59 + 32);
        goto LABEL_27;
      }
    }
    __break(1u);
LABEL_65:
    if (v15 < 0)
      v86 = v15;
    else
      v86 = v15 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v10 = (_QWORD *)_CocoaArrayWrapper.endIndex.getter(v86);
    swift_bridgeObjectRelease();
    if ((uint64_t)v10 >= v9)
      goto LABEL_38;
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
LABEL_33:
  if (!(v5 & 1 | ((v9 & 1) == 0)))
  {
    sub_55D1C(v12, (uint64_t)aBlock);
    sub_E10B5C(aBlock, 0, (uint64_t *)((char *)&dword_0 + 1), 0);
    __swift_destroy_boxed_opaque_existential_1(aBlock);
  }
LABEL_35:
  v13 = (unint64_t)(id)v13;
  UIView.untransformedFrame.getter();
  a3 = v66;

  memset(v99, 0, 32);
  v99[32] = 1;
  sub_E0EAA8((char *)v13, 2u, (uint64_t)v99);
  if (v67 != a3)
  {
    sub_55D1C(v12, (uint64_t)aBlock);
    v68 = v91;
    v69 = v92;
    __swift_project_boxed_opaque_existential_1(aBlock, (uint64_t)v91);
    v70 = (*((uint64_t (**)(void *, id (*)()))v69 + 2))(v68, v69);
    v9 = v70;
    v15 = *v14;
    if ((unint64_t)*v14 >> 62)
      goto LABEL_65;
    v10 = *(_QWORD **)((char *)&dword_10 + (v15 & 0xFFFFFFFFFFFFF8));
    if ((uint64_t)v10 < v70)
      goto LABEL_69;
LABEL_38:
    __swift_destroy_boxed_opaque_existential_1(aBlock);
    if ((_QWORD *)v9 != v10)
    {
      if (v9 >= (uint64_t)v10)
        goto LABEL_70;
      do
      {
        v15 = *v14;
        if ((*v14 & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain();
          v85 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v15);
          swift_bridgeObjectRelease();
        }
        else
        {
          if (v9 < 0)
          {
            __break(1u);
LABEL_55:
            __break(1u);
LABEL_56:
            swift_bridgeObjectRetain();
            v13 = specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v15);
            swift_bridgeObjectRelease();
LABEL_5:
            v12 = v13 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
            swift_beginAccess(v13 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line, v97, 0, 0);
            sub_55D1C(v12, (uint64_t)aBlock);
            v16 = v91;
            v17 = v92;
            __swift_project_boxed_opaque_existential_1(aBlock, (uint64_t)v91);
            v18 = (*((uint64_t (**)(void *, id (*)()))v17 + 2))(v16, v17);
            v4 = (char *)v18;
            v15 = *v14;
            if ((*v14 & 0xC000000000000001) != 0)
              goto LABEL_59;
            if ((v18 & 0x8000000000000000) != 0)
            {
              __break(1u);
            }
            else if (v18 < *(_QWORD *)((char *)&dword_10 + (v15 & 0xFFFFFFFFFFFFF8)))
            {
              v19 = *(id *)(v15 + 8 * v18 + 32);
              goto LABEL_9;
            }
            __break(1u);
LABEL_62:
            swift_bridgeObjectRetain();
            v60 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v15);
            swift_bridgeObjectRelease();
            LOBYTE(v9) = v87;
LABEL_27:
            v61 = *(void **)&v60[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
            v62 = v61;

            if (v61)
            {
              v63 = _s23InstrumentalContentViewCMa();
              if (swift_dynamicCastClass(v62, v63))
              {
                v64 = *(void **)&v7[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView];
                *(_QWORD *)&v7[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView] = v13;
                v65 = (id)v13;

                if ((v5 & 1) != 0)
                {
                  sub_DFE408(a3);

                  goto LABEL_35;
                }
                sub_DFDD50(a3);
                LOBYTE(v9) = v87;
              }

            }
            goto LABEL_33;
          }
          if ((unint64_t)v9 >= *(_QWORD *)((char *)&dword_10 + (v15 & 0xFFFFFFFFFFFFF8)))
            goto LABEL_55;
          v85 = (char *)*(id *)(v15 + 8 * v9 + 32);
        }
        ++v9;
        sub_E0F124(v85);

      }
      while (v10 != (_QWORD *)v9);
    }
  }
  sub_E15300();
  objc_msgSend(*(id *)&v7[v89], "setContentOffset:", 0.0, v6);
  if (*v4)
    goto LABEL_45;
  objc_msgSend(*(id *)&v7[v89], "contentOffset");
  v72 = v71;
  v74 = v73;
  v75 = objc_msgSend(v7, "view");
  if (!v75)
    goto LABEL_73;
  v76 = v75;
  objc_msgSend(v75, "frame");
  v78 = v77;

  v79 = *v88;
  if (*v88 > 0.0)
  {
LABEL_44:
    sub_55D1C(v12, (uint64_t)aBlock);
    sub_E105B8(aBlock, v72, v74, v78, v79);
    v84 = v83;
    __swift_destroy_boxed_opaque_existential_1(aBlock);
    sub_E10F14(v84);
    swift_bridgeObjectRelease();
    goto LABEL_45;
  }
  v80 = objc_msgSend(v7, "view");
  if (v80)
  {
    v81 = v80;
    objc_msgSend(v80, "frame");
    v79 = v82;

    goto LABEL_44;
  }
LABEL_74:
  __break(1u);
}

void _s11MusicCoreUI26SyncedLyricsViewControllerC06syncedE14DesectAllLinesyyAA0dE7ManagerCF_0()
{
  char *v0;
  char *v1;
  char *v2;
  double v3;
  id v4;
  UIViewPropertyAnimator v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  objc_class *v13;
  id v14;
  char *v15;
  id v16;
  uint64_t v17;
  char *v18;
  _BYTE v19[24];
  Swift::Int v20;
  char v21[24];
  char v22[24];
  char v23[24];

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode];
  *(_QWORD *)&v3 = swift_beginAccess(v2, v23, 0, 0).n128_u64[0];
  if (!*v2
    && (objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView], "isDragging", v3) & 1) == 0)
  {
    swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics], v22, 0, 0);
    v4 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 100.0, 18.0, 0.0, 0.0);
    sub_4E684(0, (unint64_t *)&qword_1508790, UIViewPropertyAnimator_ptr);
    v5.super.isa = UIViewPropertyAnimator.init(springTimingParameters:)((UISpringTimingParameters)v4).super.isa;
    v6 = &v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews];
    swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews], v21, 1, 0);
    v18 = v6;
    v7 = *(_QWORD *)v6;
    if (*(_QWORD *)v6 >> 62)
    {
      if (v7 < 0)
        v17 = *(_QWORD *)v6;
      else
        v17 = v7 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v8 = _CocoaArrayWrapper.endIndex.getter(v17);
      if (v8)
        goto LABEL_5;
    }
    else
    {
      v8 = *(_QWORD *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFF8));
      swift_bridgeObjectRetain();
      if (v8)
      {
LABEL_5:
        if (v8 < 1)
        {
          __break(1u);
          return;
        }
        v9 = 0;
        v10 = &v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_blurredLineViews];
        do
        {
          if ((v7 & 0xC000000000000001) != 0)
            v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v7);
          else
            v11 = *(id *)(v7 + 8 * v9 + 32);
          v12 = v11;
          v13 = v5.super.isa;
          sub_E01B2C(0, v5.super.isa);

          v14 = objc_msgSend(v1, "traitCollection");
          v15 = (char *)objc_msgSend(v14, "accessibilityContrast");

          if (v15 != (_BYTE *)&dword_0 + 1)
          {
            sub_E01F64(1, 3.0);
            swift_beginAccess(v10, v19, 33, 0);
            v16 = v12;
            sub_E7F664(&v20, v16);
            v12 = (void *)v20;
            swift_endAccess(v19);

          }
          ++v9;
        }
        while (v8 != v9);
      }
    }
    swift_bridgeObjectRelease();
    *(_QWORD *)v18 = _swiftEmptyArrayStorage;

    swift_bridgeObjectRelease();
  }
}

void sub_E1765C(_QWORD *a1, double a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;
  uint64_t v12;
  id v13;
  _BYTE v14[24];

  v4 = a1[3];
  v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
  v7 = (uint64_t *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
  swift_beginAccess(v7, v14, 0, 0);
  v8 = *v7;
  if ((v8 & 0xC000000000000001) == 0)
  {
    if ((v6 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v6 < *(_QWORD *)((char *)&dword_10 + (v8 & 0xFFFFFFFFFFFFF8)))
    {
      v9 = (char *)*(id *)(v8 + 8 * v6 + 32);
      goto LABEL_5;
    }
    __break(1u);
    return;
  }
  swift_bridgeObjectRetain();
  v9 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v8);
  swift_bridgeObjectRelease();
LABEL_5:
  v10 = *(void **)&v9[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
  v11 = v10;

  if (v10)
  {
    v12 = _s23InstrumentalContentViewCMa();
    if (swift_dynamicCastClass(v11, v12))
    {
      v13 = v11;
      sub_DFE408(a2);

    }
  }
}

void sub_E17788(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  _BYTE v21[24];
  _BYTE v22[40];
  _QWORD __dst[69];

  sub_55D1C(a1, (uint64_t)v22);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_15075B0);
  if ((swift_dynamicCast(__dst, v22, v2, &type metadata for Lyrics.TextLine, 6) & 1) != 0)
  {
    v3 = __dst[2];
    v4 = BYTE1(__dst[3]);
    v5 = (uint64_t *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
    swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews, v22, 0, 0);
    v6 = *v5;
    v7 = type metadata accessor for SyncedLyricsLineView();
    swift_bridgeObjectRetain();
    Array.subscript.getter(v3, v6, v7, (uint64_t)__dst);
    swift_bridgeObjectRelease();
    v8 = (void *)__dst[0];
    if (!__dst[0])
    {
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      return;
    }
    v9 = *(void **)(__dst[0] + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView);
    if (!v9)
      goto LABEL_15;
    v10 = _s19SBS_TextContentViewCMa();
    v11 = swift_dynamicCastClass(v9, v10);
    if (!v11)
      goto LABEL_15;
    v12 = *(_QWORD *)(v11 + OBJC_IVAR___MusicSBS_TextContentView_textView);
    if (!v12)
      goto LABEL_24;
    v13 = *(_QWORD *)(v12
                    + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation);
    if (!v13)
    {
LABEL_15:
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();

      return;
    }
    v14 = *(_QWORD *)(v13 + 24);
    if ((unint64_t)v14 >> 62)
    {
      if (v14 < 0)
        v19 = *(_QWORD *)(v13 + 24);
      else
        v19 = v14 & 0xFFFFFFFFFFFFFF8;
      v20 = v9;
      swift_retain();
      swift_bridgeObjectRetain();
      v15 = _CocoaArrayWrapper.endIndex.getter(v19);
      if (v15)
        goto LABEL_9;
    }
    else
    {
      v15 = *(_QWORD *)((char *)&dword_10 + (v14 & 0xFFFFFFFFFFFFF8));
      v16 = v9;
      swift_retain();
      swift_bridgeObjectRetain();
      if (v15)
      {
LABEL_9:
        if (v15 >= 1)
        {
          v17 = (const void *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs);
          swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs, v21, 0, 0);
          v18 = 0;
          do
          {
            if ((v14 & 0xC000000000000001) != 0)
              specialized _ArrayBuffer._getElementSlowPath(_:)(v18, v14);
            else
              swift_retain();
            ++v18;
            memcpy(__dst, v17, 0x219uLL);
            sub_533134((uint64_t)__dst);
            sub_DF78B8((uint64_t)__dst, v4);
            sub_532E70((uint64_t)__dst);
            swift_release();
          }
          while (v15 != v18);
          goto LABEL_21;
        }
        __break(1u);
LABEL_24:
        __break(1u);
        return;
      }
    }
LABEL_21:
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();

  }
}

void sub_E17A54(_QWORD *a1)
{
  char *v1;
  id v3;
  Class isa;
  uint64_t v5;
  void *v6;
  char *v7;
  BOOL v8;
  uint64_t v9;
  void *v10;
  char *v11;
  void **aBlock;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  char v18[24];

  swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics], v18, 0, 0);
  v3 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 100.0, 18.0, 0.0, 0.0);
  sub_4E684(0, (unint64_t *)&qword_1508790, UIViewPropertyAnimator_ptr);
  isa = UIViewPropertyAnimator.init(springTimingParameters:)((UISpringTimingParameters)v3).super.isa;
  sub_E10B5C(a1, isa, 0, 1);
  v5 = swift_allocObject(&unk_13C7760, 24, 7);
  *(_QWORD *)(v5 + 16) = v1;
  v16 = sub_E19210;
  v17 = v5;
  aBlock = _NSConcreteStackBlock;
  v13 = 1107296256;
  v14 = sub_42D124;
  v15 = &block_descriptor_106_1;
  v6 = _Block_copy(&aBlock);
  v7 = v1;
  -[objc_class addAnimations:](isa, "addAnimations:", v6, swift_release().n128_f64[0]);
  _Block_release(v6);
  v8 = -[objc_class state](isa, "state") == (char *)&dword_0 + 3;
  v7[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating] = v8;
  v9 = swift_allocObject(&unk_13C77B0, 24, 7);
  *(_QWORD *)(v9 + 16) = v7;
  v16 = sub_E19228;
  v17 = v9;
  aBlock = _NSConcreteStackBlock;
  v13 = 1107296256;
  v14 = sub_59BEF0;
  v15 = &block_descriptor_112_1;
  v10 = _Block_copy(&aBlock);
  v11 = v7;
  -[objc_class addCompletion:](isa, "addCompletion:", v10, swift_release().n128_f64[0]);
  _Block_release(v10);
  -[objc_class startAnimation](isa, "startAnimation");

}

uint64_t sub_E17C60(uint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unsigned __int8 *v6;
  unsigned __int8 *v7;
  int v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;

  v1 = 0;
  v2 = *(_QWORD *)(result + 16);
  v3 = result + 40;
LABEL_2:
  if (v1 <= v2)
    v4 = v2;
  else
    v4 = v1;
  v5 = v4 + 1;
  v6 = (unsigned __int8 *)(v3 + 16 * v1);
  while (1)
  {
    if (v2 == v1)
      return (uint64_t)_swiftEmptyArrayStorage;
    if (v5 == ++v1)
      break;
    v7 = v6 + 16;
    v8 = *v6;
    v6 += 16;
    if (v8 == 1)
    {
      v9 = *((id *)v7 - 3);
      result = swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage);
      if ((result & 1) == 0)
        result = (uint64_t)sub_DDED80(0, _swiftEmptyArrayStorage[2] + 1, 1);
      v11 = _swiftEmptyArrayStorage[2];
      v10 = _swiftEmptyArrayStorage[3];
      if (v11 >= v10 >> 1)
        result = (uint64_t)sub_DDED80((_QWORD *)(v10 > 1), v11 + 1, 1);
      _swiftEmptyArrayStorage[2] = v11 + 1;
      v12 = &_swiftEmptyArrayStorage[2 * v11];
      v12[4] = v9;
      *((_BYTE *)v12 + 40) = 1;
      goto LABEL_2;
    }
  }
  __break(1u);
  return result;
}

void sub_E17D74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __objc2_class **p_superclass;
  unint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  double (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  double v21;
  double v22;
  double v23;
  double v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  unint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  char v40;
  void *v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE v49[24];
  _BYTE v50[24];
  _BYTE v51[24];

  v1 = v0;
  v2 = (uint64_t)sub_E103F8();
  if ((unint64_t)v2 >> 62)
    goto LABEL_26;
  v3 = *(_QWORD *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFF8));
  p_superclass = _TtCC11MusicCoreUI20SyncedLyricsLineView4Word.superclass;
  while (v3)
  {
    v48 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager;
    v5 = v2 & 0xC000000000000001;
    v6 = &OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView;
    v7 = 4;
    v44 = v1;
    v45 = v3;
    v47 = v2;
    while (1)
    {
      v8 = v5
         ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v7 - 4, v2)
         : (char *)*(id *)(v2 + 8 * v7);
      v9 = v8;
      v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1))
        break;
      v11 = *(void **)&v8[*v6];
      if (v11)
      {
        v12 = _s19SBS_TextContentViewCMa();
        v13 = swift_dynamicCastClass(v11, v12);
        if (v13)
        {
          v14 = v6;
          v15 = *(_QWORD *)(v1 + v48);
          if (v15)
          {
            v16 = v13;
            v17 = v5;
            swift_beginAccess(v15 + 96, v50, 0, 0);
            v18 = *(double (**)(uint64_t))(v15 + 96);
            if (v18)
            {
              v19 = *(_QWORD *)(v15 + 104);
              v46 = v11;
              swift_retain();
              v20 = sub_A9DEC((uint64_t)v18, v19);
              v21 = v18(v20);
              swift_beginAccess(v15 + 88, v49, 0, 0);
              v22 = 0.0;
              if (*(_BYTE *)(v15 + 88) == 1)
              {
                Lyrics.spatialOffset.getter();
                v22 = v23;
              }
              sub_5C198((uint64_t)v18, v19);
              swift_release();
              v24 = v21 - v22;
              if (v24 == *(double *)(v16 + OBJC_IVAR___MusicSBS_TextContentView_progress))
              {
                v5 = v17;
                v1 = v44;
                v3 = v45;
                v6 = v14;
                v25 = v46;
                v2 = v47;
              }
              else
              {
                *(double *)(v16 + OBJC_IVAR___MusicSBS_TextContentView_progress) = v24;
                v26 = *(void **)(v16 + OBJC_IVAR___MusicSBS_TextContentView_textView);
                v1 = v44;
                if (!v26)
                  goto LABEL_56;
                v5 = v17;
                v6 = v14;
                v27 = v26;
                sub_DF26C8(1, v24);

                v28 = *(void **)(v16 + OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView);
                v3 = v45;
                v2 = v47;
                if (v28)
                {
                  v25 = v28;
                  sub_DF26C8(1, v24);

                  v9 = v46;
                }
                else
                {
                  v25 = v46;
                }
              }

              v9 = v25;
              goto LABEL_6;
            }
            v5 = v17;
            v3 = v45;
          }
          v6 = v14;
          v2 = v47;
        }
      }
LABEL_6:

      ++v7;
      if (v10 == v3)
      {
        swift_bridgeObjectRelease();
        p_superclass = (__objc2_class **)(_TtCC11MusicCoreUI20SyncedLyricsLineView4Word + 8);
        goto LABEL_31;
      }
    }
    __break(1u);
LABEL_26:
    if (v2 < 0)
      v29 = v2;
    else
      v29 = v2 & 0xFFFFFFFFFFFFFF8;
    v3 = _CocoaArrayWrapper.endIndex.getter(v29);
    p_superclass = _TtCC11MusicCoreUI20SyncedLyricsLineView4Word.superclass;
  }
  swift_bridgeObjectRelease();
LABEL_31:
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating) & 1) != 0)
    return;
  v30 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView;
  v31 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView);
  if (!v31)
    goto LABEL_49;
  v32 = (uint64_t *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews);
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews, v51, 0, 0);
  v33 = *v32;
  if (!((unint64_t)*v32 >> 62))
  {
    v34 = *(_QWORD *)((char *)&dword_10 + (v33 & 0xFFFFFFFFFFFFF8));
    v35 = v31;
    swift_bridgeObjectRetain();
    if (v34)
      goto LABEL_35;
LABEL_47:
    swift_bridgeObjectRelease();
LABEL_48:

LABEL_49:
    if (*(__objc2_class **)((char *)&p_superclass[175]->isa + v1))
    {
      swift_retain();
      SyncedLyricsManager.update()();
      swift_release();
    }
    return;
  }
  if (v33 < 0)
    v42 = *v32;
  else
    v42 = v33 & 0xFFFFFFFFFFFFFF8;
  v43 = v31;
  swift_bridgeObjectRetain();
  v34 = _CocoaArrayWrapper.endIndex.getter(v42);
  if (!v34)
    goto LABEL_47;
LABEL_35:
  v36 = v34 - 1;
  if (__OFSUB__(v34, 1))
  {
    __break(1u);
    goto LABEL_53;
  }
  if ((v33 & 0xC000000000000001) != 0)
  {
LABEL_53:
    v37 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v36, v33);
    goto LABEL_40;
  }
  if ((v36 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v36 < *(_QWORD *)((char *)&dword_10 + (v33 & 0xFFFFFFFFFFFFF8)))
  {
    v37 = *(id *)(v33 + 8 * v36 + 32);
LABEL_40:
    v38 = v37;
    swift_bridgeObjectRelease();
    v39 = *v32;
    swift_bridgeObjectRetain();
    v40 = sub_E08B1C((uint64_t)v31, v39);
    swift_bridgeObjectRelease();
    if ((v40 & 1) == 0)
    {
      v41 = *(void **)(v1 + v30);
      *(_QWORD *)(v1 + v30) = 0;

      sub_E14B44((uint64_t)v31, (uint64_t)v38);
      sub_E01A30();
    }

    goto LABEL_48;
  }
  __break(1u);
LABEL_56:
  __break(1u);
}

id sub_E18168(void *a1)
{
  char *v1;
  char *v3;
  char *v4;
  double *v5;
  id v6;
  double v7;
  double v8;
  id result;
  void *v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  char v19[24];
  char v20[24];
  char v21[24];
  CGRect v22;

  v3 = &v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isFullScreen];
  swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isFullScreen], v21, 0, 0);
  if (*v3 != 1)
    return 0;
  v4 = &v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode];
  swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode], v20, 0, 0);
  if (*v4)
    return 0;
  v5 = (double *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_bottomTapAreaHeight];
  swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_bottomTapAreaHeight], v19, 0, 0);
  if (*v5 <= 0.0)
    return 0;
  v6 = objc_msgSend(v1, "view", *v5);
  objc_msgSend(a1, "locationInView:", v6);
  v8 = v7;

  result = objc_msgSend(v1, "view");
  if (result)
  {
    v10 = result;
    objc_msgSend(result, "frame");
    v12 = v11;
    v14 = v13;
    v16 = v15;
    v18 = v17;

    v22.origin.x = v12;
    v22.origin.y = v14;
    v22.size.width = v16;
    v22.size.height = v18;
    return (id)(CGRectGetHeight(v22) - *v5 < v8);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void _s11MusicCoreUI26SyncedLyricsViewControllerC06scrollF14DidEndDragging_14willDecelerateySo08UIScrollF0C_SbtF_0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  _QWORD v6[6];

  v1 = (void *)objc_opt_self(NSTimer);
  v2 = swift_allocObject(&unk_13C7118, 24, 7);
  swift_unknownObjectWeakInit(v2 + 16);
  v6[4] = sub_E191E4;
  v6[5] = v2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 1107296256;
  v6[2] = sub_5FEBC;
  v6[3] = &block_descriptor_100_1;
  v3 = _Block_copy(v6);
  swift_release();
  v4 = objc_msgSend(v1, "scheduledTimerWithTimeInterval:repeats:block:", 0, v3, 3.0);
  _Block_release(v3);
  v5 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScrollTimer);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScrollTimer) = v4;

}

double _s11MusicCoreUI26SyncedLyricsViewControllerC06scrollF15WillEndDragging_12withVelocity19targetContentOffsetySo08UIScrollF0C_So7CGPointVSpyAJGtF_0(double a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  double result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t Strong;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[24];
  _BYTE v22[24];
  _BYTE v23[24];

  v3 = v2;
  if (a2 <= 0.0)
  {
    if (a2 < 0.0)
    {
      v11 = (_BYTE *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode);
      swift_beginAccess(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode, v23, 1, 0);
      if (*v11 == 1)
      {
        *v11 = 0;
        v12 = v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate;
        swift_beginAccess(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate, v21, 0, 0);
        Strong = swift_unknownObjectWeakLoadStrong(v12);
        if (Strong)
        {
          v14 = Strong;
          v15 = *(_QWORD *)(v12 + 8);
          ObjectType = swift_getObjectType();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 24))(v3, ObjectType, v15);
          swift_unknownObjectRelease(v14);
        }
      }
      v17 = v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate;
      swift_beginAccess(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate, v22, 0, 0);
      v18 = swift_unknownObjectWeakLoadStrong(v17);
      if (v18)
      {
        v8 = v18;
        v19 = *(_QWORD *)(v17 + 8);
        v20 = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32))(v3, v20, v19);
        goto LABEL_11;
      }
    }
  }
  else
  {
    v4 = (_BYTE *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode);
    *(_QWORD *)&result = swift_beginAccess(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode, v23, 1, 0).n128_u64[0];
    if (*v4 != 1)
    {
      *v4 = 1;
      v6 = v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate;
      swift_beginAccess(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate, v22, 0, 0);
      v7 = swift_unknownObjectWeakLoadStrong(v6);
      if (v7)
      {
        v8 = v7;
        v9 = *(_QWORD *)(v6 + 8);
        v10 = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v3, v10, v9);
LABEL_11:
        *(_QWORD *)&result = swift_unknownObjectRelease(v8).n128_u64[0];
      }
    }
  }
  return result;
}

unint64_t sub_E1854C()
{
  unint64_t result;

  result = qword_1508680;
  if (!qword_1508680)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SyncedLyricsViewController.Mode, &type metadata for SyncedLyricsViewController.Mode);
    atomic_store(result, (unint64_t *)&qword_1508680);
  }
  return result;
}

void sub_E18590(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  _BYTE v4[24];

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode);
  swift_beginAccess(v3, v4, 0, 0);
  *a2 = *v3;
}

void sub_E185E0(char *a1, _QWORD *a2)
{
  char v2;
  _BYTE *v3;
  _BYTE v4[24];

  v2 = *a1;
  v3 = (_BYTE *)(*a2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode);
  swift_beginAccess(v3, v4, 1, 0);
  *v3 = v2;
}

double destroy for SyncedLyricsSharingTransitionInfo(uint64_t a1)
{
  double result;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 32));
  swift_release(*(_QWORD *)(a1 + 64));
  swift_release(*(_QWORD *)(a1 + 80));
  swift_release(*(_QWORD *)(a1 + 96));

  swift_release(*(_QWORD *)(a1 + 216));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 232)).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for SyncedLyricsSharingTransitionInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  __int128 v5;
  uint64_t v6;
  id v7;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v10 = *(_OWORD *)(a2 + 64);
  v11 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = v10;
  *(_OWORD *)(a1 + 80) = v11;
  v3 = *(_QWORD *)(a2 + 96);
  v4 = *(void **)(a2 + 104);
  *(_QWORD *)(a1 + 96) = v3;
  *(_QWORD *)(a1 + 104) = v4;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  v5 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v5;
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  v6 = *(_QWORD *)(a2 + 232);
  v9 = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 216) = v9;
  *(_QWORD *)(a1 + 232) = v6;
  swift_bridgeObjectRetain();
  swift_retain(v10);
  swift_retain(v11);
  swift_retain(v3);
  v7 = v4;
  swift_retain(v9);
  swift_retain(v6);
  return a1;
}

uint64_t assignWithCopy for SyncedLyricsSharingTransitionInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  v4 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v5 = *(_QWORD *)(a2 + 64);
  v6 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  swift_retain(v5);
  swift_release(v6);
  v7 = *(_QWORD *)(a2 + 80);
  v8 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v7;
  swift_retain(v7);
  swift_release(v8);
  v9 = *(_QWORD *)(a2 + 96);
  v10 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v9;
  swift_retain(v9);
  swift_release(v10);
  v11 = *(void **)(a2 + 104);
  v12 = *(void **)(a1 + 104);
  *(_QWORD *)(a1 + 104) = v11;
  v13 = v11;

  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  v14 = *(_QWORD *)(a2 + 216);
  v15 = *(_QWORD *)(a1 + 216);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = v14;
  swift_retain(v14);
  swift_release(v15);
  v17 = *(_QWORD *)(a2 + 224);
  v16 = *(_QWORD *)(a2 + 232);
  v18 = *(_QWORD *)(a1 + 232);
  *(_QWORD *)(a1 + 224) = v17;
  *(_QWORD *)(a1 + 232) = v16;
  swift_retain(v16);
  swift_release(v18);
  return a1;
}

__n128 __swift_memcpy240_8_0(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __n128 result;
  __int128 v11;
  __int128 v12;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  v7 = a2[7];
  v8 = a2[8];
  v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  result = (__n128)a2[11];
  v11 = a2[12];
  v12 = a2[14];
  *(_OWORD *)(a1 + 208) = a2[13];
  *(_OWORD *)(a1 + 224) = v12;
  *(__n128 *)(a1 + 176) = result;
  *(_OWORD *)(a1 + 192) = v11;
  return result;
}

uint64_t assignWithTake for SyncedLyricsSharingTransitionInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  v4 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease(v4);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a1 + 64);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release(v5);
  v6 = *(_QWORD *)(a1 + 80);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_release(v6);
  v7 = *(_QWORD *)(a1 + 96);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_release(v7);
  v8 = *(void **)(a1 + 104);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);

  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  v9 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v9;
  v10 = *(_QWORD *)(a1 + 216);
  v11 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v11;
  swift_release(v10);
  v12 = *(_QWORD *)(a1 + 232);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  swift_release(v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for SyncedLyricsSharingTransitionInfo(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 240))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SyncedLyricsSharingTransitionInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 232) = 0;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 240) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 240) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SyncedLyricsSharingTransitionInfo()
{
  return &type metadata for SyncedLyricsSharingTransitionInfo;
}

uint64_t storeEnumTagSinglePayload for SyncedLyricsViewController.Mode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_E18B48 + 4 * byte_10ACE25[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_E18B7C + 4 * asc_10ACE20[v4]))();
}

uint64_t sub_E18B7C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_E18B84(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xE18B8CLL);
  return result;
}

uint64_t sub_E18B98(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xE18BA0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_E18BA4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_E18BAC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SyncedLyricsViewController.Mode()
{
  return &type metadata for SyncedLyricsViewController.Mode;
}

uint64_t sub_E18BC8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_E18BEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1508774);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_50F8C;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1508770 + dword_1508770))(a1, v4);
}

void sub_E18C5C()
{
  uint64_t v0;

  sub_E0F124(*(char **)(v0 + 24));
}

uint64_t block_copy_helper_344(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double block_destroy_helper_344(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_E18C98()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 80, 7);
}

id sub_E18CCC()
{
  uint64_t v0;

  return sub_E147DC(*(char **)(v0 + 16), (_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 72));
}

uint64_t sub_E18CE0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 88, 7);
}

void sub_E18D14(uint64_t a1)
{
  uint64_t v1;

  sub_E14910(*(double *)(v1 + 32), *(double *)(v1 + 40), a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_E18D24()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 80, 7);
}

id sub_E18D58()
{
  uint64_t v0;

  return sub_E13E54(*(char **)(v0 + 16), (_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 64));
}

uint64_t sub_E18D6C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 64));
  return swift_deallocObject(v0, 104, 7);
}

void sub_E18DA8(uint64_t a1)
{
  uint64_t v1;

  sub_E1406C(*(double *)(v1 + 24), *(double *)(v1 + 48), *(double *)(v1 + 56), a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_E18DC0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

id sub_E18DEC()
{
  uint64_t v0;

  return sub_E13FA0(*(_QWORD *)(v0 + 16), *(char **)(v0 + 24));
}

uint64_t sub_E18DF8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_E18E1C()
{
  uint64_t v0;

  sub_DFDD50(*(double *)(v0 + 24));
}

uint64_t sub_E18E44()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_E18E54()
{
  uint64_t v0;

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_E18E64()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

id sub_E18E90()
{
  uint64_t v0;

  return sub_E135B0(*(_QWORD *)(v0 + 16), *(CGFloat **)(v0 + 24));
}

uint64_t sub_E18E98()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_release();
  __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 88, 7);
}

void sub_E18ED4(uint64_t a1)
{
  uint64_t v1;

  sub_E135F8(*(double *)(v1 + 24), a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), (_QWORD *)(v1 + 48));
}

uint64_t sub_E18EE8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[24];

  v3 = *a1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_55D1C(v3, a2);
}

uint64_t sub_E18F44@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = a1[3];
  v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4);
  *a2 = result;
  return result;
}

BOOL sub_E18F8C(void *a1)
{
  double *v1;
  CGFloat v2;
  CGFloat v3;
  CGFloat v4;
  CGFloat v5;
  CGRect v7;
  CGRect v8;

  v2 = v1[2];
  v3 = v1[3];
  v4 = v1[4];
  v5 = v1[5];
  objc_msgSend(a1, "frame");
  v8.origin.x = v2;
  v8.origin.y = v3;
  v8.size.width = v4;
  v8.size.height = v5;
  return CGRectIntersectsRect(v7, v8);
}

id sub_E18FD4(void *a1)
{
  uint64_t v1;
  void (*v2)(void);
  id v3;

  v2 = *(void (**)(void))(v1 + 16);
  v3 = a1;
  v2();
  return v3;
}

uint64_t sub_E1900C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_E19038(uint64_t a1)
{
  uint64_t v1;

  sub_E0FBAC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_E19040()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_E19064()
{
  uint64_t v0;

  return sub_DF78B4(v0);
}

uint64_t sub_E1906C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_15087B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_E190B4()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 16);
  objc_msgSend(v1, "setHidden:", 0);
  return objc_msgSend(v1, "setHighlighted:", 0);
}

_QWORD *sub_E190F4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;

  v2 = a1[4];
  v3 = a1[8];
  v4 = a1[10];
  v5 = a1[12];
  v6 = (void *)a1[13];
  v7 = a1[27];
  swift_release(a1[29]);
  swift_release(v7);

  swift_release(v5);
  swift_release(v4);
  swift_release(v3);
  swift_bridgeObjectRelease(v2);
  return a1;
}

uint64_t sub_E19174(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_15087C4);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_C3150;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_15087C0 + dword_15087C0))(a1, v4);
}

void sub_E191E4(uint64_t a1)
{
  uint64_t v1;

  sub_E15E3C(a1, v1);
}

uint64_t sub_E191EC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_E19210()
{
  sub_E15ABC();
}

void sub_E19228(uint64_t a1)
{
  uint64_t v1;

  sub_E15C5C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_E19240()
{
  uint64_t v0;

  return swift_deallocObject(v0, 48, 7);
}

id sub_E1926C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView), "setContentOffset:", *(double *)(v0 + 24), *(double *)(v0 + 32));
}

void sub_E1928C()
{
  uint64_t v0;

  sub_E0E5A8(*(void **)(v0 + 16));
}

void sub_E19294()
{
  uint64_t v0;

  sub_E0E6E0(*(_QWORD *)(v0 + 16));
}

uint64_t sub_E1929C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_E192AC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_E192BC()
{
  uint64_t v0;

  sub_E0C6F4(v0);
}

double sub_E192C4()
{
  uint64_t v0;

  return sub_E0A87C(v0);
}

uint64_t sub_E192DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_150878C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_C3150;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1508788 + dword_1508788))(a1, v4);
}

void sub_E1934C()
{
  uint64_t v0;

  sub_E0BF94(v0);
}

double sub_E19354(double a1)
{
  uint64_t v1;

  return sub_E0A26C(v1, a1);
}

char *LineProgressGradientView.__allocating_init(color:featherWidth:direction:frame:)(void *a1, char a2, double a3, double a4, double a5, double a6, double a7)
{
  objc_class *v7;
  char v14;
  id v15;

  v14 = a2 & 1;
  v15 = objc_allocWithZone(v7);
  return LineProgressGradientView.init(color:featherWidth:direction:frame:)(a1, v14, a3, a4, a5, a6, a7);
}

char *LineProgressGradientView.init(color:featherWidth:direction:frame:)(void *a1, char a2, double a3, double a4, double a5, double a6, double a7)
{
  char *v7;
  uint64_t v14;
  char v15;
  id v16;
  char *v17;
  uint64_t v18;
  id v19;
  char *v20;
  objc_super v22;

  v14 = OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_gradientView;
  v15 = a2 & 1;
  type metadata accessor for LineProgressGradientView.GradientView();
  v16 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v17 = v7;
  *(_QWORD *)&v7[v14] = objc_msgSend(v16, "init");
  v18 = OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_fillView;
  *(_QWORD *)&v17[v18] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  *(_QWORD *)&v17[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_color] = a1;
  *(double *)&v17[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_featherWidth] = a3;
  v17[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_direction] = v15;
  v19 = a1;

  v22.receiver = v17;
  v22.super_class = (Class)type metadata accessor for LineProgressGradientView();
  v20 = (char *)objc_msgSendSuper2(&v22, "initWithFrame:", a4, a5, a6, a7);
  objc_msgSend(v20, "setClipsToBounds:", 1);
  objc_msgSend(v20, "addSubview:", *(_QWORD *)&v20[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_fillView]);
  objc_msgSend(v20, "addSubview:", *(_QWORD *)&v20[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_gradientView]);
  sub_E197AC();
  sub_E199EC();

  return v20;
}

uint64_t type metadata accessor for LineProgressGradientView.GradientView()
{
  return objc_opt_self(_TtCC11MusicCoreUI24LineProgressGradientViewP33_CAA5E92EB35A39E050897B33043EE84412GradientView);
}

uint64_t type metadata accessor for LineProgressGradientView()
{
  return objc_opt_self(_TtC11MusicCoreUI24LineProgressGradientView);
}

Swift::Void __swiftcall LineProgressGradientView.layoutSubviews()()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for LineProgressGradientView();
  objc_msgSendSuper2(&v1, "layoutSubviews");
  sub_E198A4();
}

void sub_E197AC()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  void *v5;
  double v6;
  double v7;
  id v8;
  uint64_t v9;

  v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_direction);
  v2 = OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_gradientView;
  v3 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_gradientView), "layer"));
  v4 = objc_opt_self(CAGradientLayer);
  v5 = (void *)swift_dynamicCastObjCClassUnconditional(v3, v4, 0, 0, 0);
  if (v1)
    v6 = 1.0;
  else
    v6 = 0.0;
  if (v1)
    v7 = 0.0;
  else
    v7 = 1.0;
  objc_msgSend(v5, "setStartPoint:", v6);

  v8 = objc_msgSend(*(id *)(v0 + v2), "layer");
  v9 = objc_opt_self(CAGradientLayer);
  objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v8, v9, 0, 0, 0), "setEndPoint:", v7, 0.0);

  sub_E198A4();
}

void sub_E198A4()
{
  char *v0;
  uint64_t v1;
  double v2;
  double v3;
  double v4;
  double Width;
  id v6;
  double v7;
  double v8;
  id v9;
  CGRect v10;
  CGRect v11;
  CGRect v12;
  CGRect v13;

  if ((v0[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_direction] & 1) != 0)
  {
    v1 = OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_featherWidth;
    v2 = *(double *)&v0[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_featherWidth];
    v3 = 0.0;
    v4 = v2;
  }
  else
  {
    objc_msgSend(v0, "bounds");
    Width = CGRectGetWidth(v10);
    v1 = OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_featherWidth;
    v4 = *(double *)&v0[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_featherWidth];
    v3 = Width - v4;
    if (Width - v4 <= 0.0)
      v2 = Width - v4;
    else
      v2 = 0.0;
  }
  v6 = *(id *)&v0[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_gradientView];
  objc_msgSend(v0, "bounds");
  objc_msgSend(v6, "setFrame:", v3, 0.0, v4, CGRectGetHeight(v11));

  v9 = *(id *)&v0[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_fillView];
  objc_msgSend(v0, "bounds");
  v7 = CGRectGetWidth(v12) - *(double *)&v0[v1];
  if (v7 < 0.0)
    v8 = 0.0;
  else
    v8 = v7;
  objc_msgSend(v0, "bounds");
  objc_msgSend(v9, "setFrame:", v2, 0.0, v8, CGRectGetHeight(v13));

}

id sub_E199EC()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  Class isa;

  v1 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_gradientView), "layer"));
  v2 = objc_opt_self(CAGradientLayer);
  v3 = (void *)swift_dynamicCastObjCClassUnconditional(v1, v2, 0, 0, 0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_15070C0);
  v5 = swift_allocObject(v4, 96, 7);
  *(_OWORD *)(v5 + 16) = xmmword_105F890;
  v6 = OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_color;
  v7 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_color), "CGColor"));
  _s3__C7CGColorCMa_1(0);
  v9 = v8;
  *(_QWORD *)(v5 + 56) = v8;
  *(_QWORD *)(v5 + 32) = v7;
  v10 = objc_msgSend(*(id *)(v0 + v6), "colorWithAlphaComponent:", 0.0);
  v11 = objc_msgSend(v10, "CGColor");

  *(_QWORD *)(v5 + 88) = v9;
  *(_QWORD *)(v5 + 64) = v11;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v3, "setColors:", isa, swift_bridgeObjectRelease(v5).n128_f64[0]);

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_fillView), "setBackgroundColor:", *(_QWORD *)(v0 + v6));
}

id sub_E19C38()
{
  return sub_15A49C(0, type metadata accessor for LineProgressGradientView.GradientView);
}

void LineProgressGradientView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer("MusicCoreUI.LineProgressGradientView", 36, "init(frame:)", 12, 0);
  __break(1u);
}

id LineProgressGradientView.__deallocating_deinit(uint64_t a1)
{
  return sub_15A49C(a1, type metadata accessor for LineProgressGradientView);
}

id MPCPlayerResponseItem.hasStoreLyrics.getter()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  void *v6;

  v1 = objc_msgSend(v0, "metadataObject");
  v2 = v1;
  if (v1)
  {
    v3 = objc_msgSend(v1, "innermostModelObject");

    objc_opt_self(MPModelSong);
    v4 = (void *)swift_dynamicCastObjCClass(v3);
    if (v4 && (v5 = objc_msgSend(v4, "lyrics")) != 0)
    {
      v6 = v5;
      v2 = objc_msgSend(v5, "hasStoreLyrics");

    }
    else
    {
      v2 = 0;
    }

  }
  return v2;
}

id MPCPlayerResponseItem.supportsLyrics.getter()
{
  void *v0;
  id result;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  unsigned int v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;

  result = objc_msgSend(v0, "metadataObject");
  if (result)
  {
    v2 = result;
    v3 = objc_msgSend(result, "innermostModelObject");

    objc_opt_self(MPModelSong);
    v4 = (void *)swift_dynamicCastObjCClass(v3);
    if (!v4)
      goto LABEL_11;
    v5 = v4;
    if ((_s11MusicCoreUI12LyricsLoaderC08supportsD03forSbSo11MPModelSongC_tFZ_0(v4) & 1) == 0)
      goto LABEL_11;
    v6 = objc_msgSend((id)objc_opt_self(ICEnvironmentMonitor), "sharedMonitor");
    v7 = objc_msgSend(v6, "isRemoteServerLikelyReachable");

    if (v7)
    {

      return &dword_0 + 1;
    }
    v8 = objc_msgSend(v5, "lyrics");
    if (v8 && (v9 = v8, v10 = objc_msgSend(v8, "text"), v9, v10))
    {
      v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
      v13 = v12;

      swift_bridgeObjectRelease(v13);
      v14 = HIBYTE(v13) & 0xF;
      if ((v13 & 0x2000000000000000) == 0)
        v14 = v11 & 0xFFFFFFFFFFFFLL;
      return (id)(v14 != 0);
    }
    else
    {
LABEL_11:

      return 0;
    }
  }
  return result;
}

unint64_t sub_E19F04()
{
  unint64_t result;

  result = qword_1508888;
  if (!qword_1508888)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for LineProgressGradientView.Direction, &type metadata for LineProgressGradientView.Direction);
    atomic_store(result, (unint64_t *)&qword_1508888);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for LineProgressGradientView.Direction(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_E19F94 + 4 * byte_10ACFA5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_E19FC8 + 4 * byte_10ACFA0[v4]))();
}

uint64_t sub_E19FC8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_E19FD0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xE19FD8);
  return result;
}

uint64_t sub_E19FE4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xE19FECLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_E19FF0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_E19FF8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LineProgressGradientView.Direction()
{
  return &type metadata for LineProgressGradientView.Direction;
}

unint64_t sub_E1A014()
{
  unint64_t result;
  uint64_t v1;

  result = qword_15088E0;
  if (!qword_15088E0)
  {
    v1 = objc_opt_self(CAGradientLayer);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_15088E0);
  }
  return result;
}

char *VocalsAttenuationSlider.init(frame:)(double a1, double a2, double a3, double a4)
{
  void *v4;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[24];
  objc_super v30;
  _QWORD v31[11];

  v30.receiver = v4;
  v30.super_class = (Class)swift_getObjectType();
  v9 = objc_msgSendSuper2(&v30, "initWithFrame:", a1, a2, a3, a4);
  v10 = static AccessibilityIdentifier.named(_:)(0xD000000000000017, (void *)0x800000000110D890);
  UIAccessibilityIdentification.musicAccessibilityIdentifier.setter(v10, v11);
  v12 = qword_1505F70;
  v13 = (char *)v9;
  if (v12 != -1)
    swift_once(&qword_1505F70, sub_DB9248);
  v14 = (void *)qword_1583020;
  v15 = (uint64_t *)&v13[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageDefinition];
  swift_beginAccess(&v13[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageDefinition], v29, 1, 0);
  sub_E1A364((uint64_t)v15, (uint64_t)v31);
  v27 = v15[1];
  v28 = *v15;
  v16 = v15[4];
  v25 = v15[3];
  v26 = (void *)v15[2];
  v17 = v15[5];
  v18 = v15[6];
  v20 = v15[7];
  v19 = v15[8];
  v21 = v15[9];
  *(_OWORD *)v15 = xmmword_10A97B0;
  v15[2] = (uint64_t)v14;
  v15[3] = 0x3FF0000000000000;
  v15[4] = 0;
  v15[5] = 0;
  v15[6] = 0x3FF0000000000000;
  v15[7] = 0;
  v15[8] = 0;
  v15[9] = (uint64_t)_swiftEmptyArrayStorage;
  v22 = v14;
  sub_8AC29C(v31, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2A4704);
  swift_bridgeObjectRetain();
  v23 = v22;
  swift_bridgeObjectRetain();
  sub_2A473C(v28, v27, v26, v25, v16, v17, v18, v20, v19, v21);
  sub_EEF124((uint64_t)v31);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_8AC29C(v31, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2A473C);

  return v13;
}

void VocalsAttenuationSlider.accessibilitySliderCurrentPercentageValue.getter()
{
  uint64_t v0;

  if (*(float *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__minValue) > *(float *)(v0
                                                                                                 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__maxValue))
    __break(1u);
}

uint64_t sub_E1A364(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_15088E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for VocalsAttenuationSlider()
{
  return objc_opt_self(MusicVocalsAttenuationSlider);
}

double Corner.radius(in:)(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, uint64_t a6, char a7)
{
  double Width;
  double Height;
  CGRect v14;

  if ((a7 & 1) == 0)
    return *(double *)&a1;
  Width = CGRectGetWidth(*(CGRect *)&a2);
  v14.origin.x = a2;
  v14.origin.y = a3;
  v14.size.width = a4;
  v14.size.height = a5;
  Height = CGRectGetHeight(v14);
  if (Height >= Width)
    Height = Width;
  return Height * 0.5;
}

void Corner.hash(into:)(uint64_t a1, Swift::UInt64 a2, Swift::UInt a3, char a4)
{
  Swift::UInt64 v6;

  if ((a4 & 1) != 0)
  {
    String.hash(into:)(a1, 0x6465646E756F72, 0xE700000000000000);
  }
  else
  {
    String.hash(into:)(a1, 0x737569646172, 0xE600000000000000);
    if ((a2 & 0x7FFFFFFFFFFFFFFFLL) != 0)
      v6 = a2;
    else
      v6 = 0;
    Hasher._combine(_:)(v6);
    Hasher._combine(_:)(a3);
  }
}

BOOL static Corner.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  _BOOL4 v6;

  v6 = (a6 & 1) == 0;
  if (*(double *)&a1 != *(double *)&a4)
    v6 = 0;
  if (a2 != a5)
    v6 = 0;
  if ((a3 & 1) != 0)
    return a6 & 1;
  else
    return v6;
}

Swift::Int Corner.hashValue.getter(Swift::UInt64 a1, Swift::UInt a2, char a3)
{
  Swift::UInt64 v6;
  _QWORD v8[9];

  Hasher.init(_seed:)(v8);
  if ((a3 & 1) != 0)
  {
    String.hash(into:)(v8, 0x6465646E756F72, 0xE700000000000000);
  }
  else
  {
    String.hash(into:)(v8, 0x737569646172, 0xE600000000000000);
    if ((a1 & 0x7FFFFFFFFFFFFFFFLL) != 0)
      v6 = a1;
    else
      v6 = 0;
    Hasher._combine(_:)(v6);
    Hasher._combine(_:)(a2);
  }
  return Hasher._finalize()();
}

Swift::Int sub_E1A58C()
{
  uint64_t v0;
  Swift::UInt64 v1;
  Swift::UInt v2;
  char v3;
  _QWORD v5[9];

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(_BYTE *)(v0 + 16);
  Hasher.init(_seed:)(v5);
  Corner.hash(into:)((uint64_t)v5, v1, v2, v3);
  return Hasher._finalize()();
}

void sub_E1A5E4(uint64_t a1)
{
  uint64_t v1;

  Corner.hash(into:)(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_BYTE *)(v1 + 16));
}

Swift::Int sub_E1A5F0()
{
  uint64_t v0;
  Swift::UInt64 v1;
  Swift::UInt v2;
  char v3;
  _QWORD v5[9];

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(_BYTE *)(v0 + 16);
  Hasher.init(_seed:)(v5);
  Corner.hash(into:)((uint64_t)v5, v1, v2, v3);
  return Hasher._finalize()();
}

uint64_t sub_E1A644(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t result;
  uint64_t v5;
  unsigned int v6;

  v3 = *(_BYTE *)(a1 + 16);
  result = *(unsigned __int8 *)(a2 + 16);
  if ((v3 & 1) == 0)
  {
    v5 = *(_QWORD *)(a1 + 8);
    v6 = (*(double *)a1 == *(double *)a2) & ~(_DWORD)result;
    if (v5 == *(_QWORD *)(a2 + 8))
      return v6;
    else
      return 0;
  }
  return result;
}

void Border.hash(into:)(uint64_t a1, uint64_t a2, unsigned __int8 a3, double a4)
{
  Swift::UInt64 v8;

  swift_retain(a2);
  Color.hash(into:)(a1, a2);
  swift_release(a2);
  if ((*(_QWORD *)&a4 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v8 = *(_QWORD *)&a4;
  else
    v8 = 0;
  Hasher._combine(_:)(v8);
  Hasher._combine(_:)(a3);
}

uint64_t static Border.__derived_struct_equals(_:_:)(uint64_t a1, unsigned __int8 a2, uint64_t a3, unsigned __int8 a4, double a5, double a6)
{
  int v7;
  unsigned int v8;

  v7 = a2;
  v8 = static Color.== infix(_:_:)(a1, a3) & (a5 == a6);
  if (v7 == a4)
    return v8;
  else
    return 0;
}

Swift::Int Border.hashValue.getter(uint64_t a1, unsigned __int8 a2, double a3)
{
  Swift::UInt64 v6;
  _QWORD v8[9];

  Hasher.init(_seed:)(v8);
  swift_retain(a1);
  Color.hash(into:)(v8, a1);
  swift_release(a1);
  if ((*(_QWORD *)&a3 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v6 = *(_QWORD *)&a3;
  else
    v6 = 0;
  Hasher._combine(_:)(v6);
  Hasher._combine(_:)(a2);
  return Hasher._finalize()();
}

Swift::Int sub_E1A7C0()
{
  uint64_t v0;

  return Border.hashValue.getter(*(_QWORD *)v0, *(_BYTE *)(v0 + 16), *(double *)(v0 + 8));
}

void sub_E1A7D0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  Swift::UInt64 v4;
  Swift::UInt v5;
  Swift::UInt64 v6;

  v3 = *v1;
  v4 = v1[1];
  v5 = *((unsigned __int8 *)v1 + 16);
  swift_retain(*v1);
  Color.hash(into:)(a1, v3);
  swift_release(v3);
  if ((v4 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v6 = v4;
  else
    v6 = 0;
  Hasher._combine(_:)(v6);
  Hasher._combine(_:)(v5);
}

Swift::Int sub_E1A838()
{
  uint64_t *v0;
  uint64_t v1;
  Swift::UInt64 v2;
  Swift::UInt v3;
  Swift::UInt64 v4;
  _QWORD v6[9];

  v1 = *v0;
  v2 = v0[1];
  v3 = *((unsigned __int8 *)v0 + 16);
  Hasher.init(_seed:)(v6);
  swift_retain(v1);
  Color.hash(into:)(v6, v1);
  swift_release(v1);
  if ((v2 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v4 = v2;
  else
    v4 = 0;
  Hasher._combine(_:)(v4);
  Hasher._combine(_:)(v3);
  return Hasher._finalize()();
}

BOOL sub_E1A8B0(uint64_t a1, uint64_t a2)
{
  double v2;
  int v3;
  double v4;
  int v5;
  char v6;
  _BOOL8 result;

  v2 = *(double *)(a1 + 8);
  v3 = *(unsigned __int8 *)(a1 + 16);
  v4 = *(double *)(a2 + 8);
  v5 = *(unsigned __int8 *)(a2 + 16);
  v6 = static Color.== infix(_:_:)(*(_QWORD *)a1, *(_QWORD *)a2);
  result = 0;
  if ((v6 & 1) != 0 && v2 == v4)
    return v3 == v5;
  return result;
}

uint64_t View.corner(_:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[2];
  char v7;

  v6[0] = a1;
  v6[1] = a2;
  v7 = a3 & 1;
  return View.modifier<A>(_:)(v6, a4, &type metadata for CornerRadiusModifier, a5);
}

uint64_t sub_E1A94C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1508948);
  __chkstk_darwin();
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v2;
  v8 = v2[1];
  v9 = *((_BYTE *)v2 + 16);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508950);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v6, a1, v10);
  sub_E1C0BC((uint64_t)v6, a2);
  v11 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1508958) + 36);
  *(_QWORD *)v11 = v7;
  *(_QWORD *)(v11 + 8) = v8;
  *(_BYTE *)(v11 + 16) = v9;
  *(_QWORD *)(v11 + 24) = 0;
  *(_WORD *)(v11 + 32) = 256;
  return sub_56024((uint64_t)v6, &qword_1508948);
}

uint64_t View.border(_:corner:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, double a8)
{
  _QWORD v9[2];
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  v9[0] = a1;
  *(double *)&v9[1] = a8;
  v10 = a2;
  v11 = a3;
  v12 = a4;
  v13 = a5 & 1;
  return View.modifier<A>(_:)(v9, a6, &type metadata for BorderViewModifier, a7);
}

uint64_t sub_E1AA78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  uint64_t v10;
  char v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[5];

  v28 = a1;
  v29 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508960);
  __chkstk_darwin();
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(double *)v2;
  v7 = *((double *)v2 + 1);
  if (!*((_BYTE *)v2 + 16))
  {
    v9 = 0.5;
    goto LABEL_5;
  }
  v8 = 0.0;
  if (*((_BYTE *)v2 + 16) == 1)
  {
    v9 = -0.5;
LABEL_5:
    v8 = v7 * v9;
  }
  v10 = v2[3];
  v27 = v2[4];
  v11 = *((_BYTE *)v2 + 40);
  swift_retain();
  v12 = StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(v30, 0, 0, _swiftEmptyArrayStorage, v7, 10.0, 0.0);
  v13 = v30[0];
  v14 = v30[2];
  v15 = v30[3];
  v16 = v30[4];
  v17 = static Alignment.center.getter(v12);
  v19 = v18;
  v20 = static Alignment.center.getter(v17);
  v22 = v21;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508968);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v5, v28, v23);
  v24 = &v5[*(int *)(v3 + 36)];
  v25 = v27;
  *(_QWORD *)v24 = v10;
  *((_QWORD *)v24 + 1) = v25;
  v24[16] = v11;
  *((double *)v24 + 3) = v8;
  *((_QWORD *)v24 + 4) = v13;
  *((_QWORD *)v24 + 5) = v30[1];
  *((_QWORD *)v24 + 6) = v14;
  *((_QWORD *)v24 + 7) = v15;
  *((_QWORD *)v24 + 8) = v16;
  *((double *)v24 + 9) = v6;
  *((_WORD *)v24 + 40) = 256;
  *((_QWORD *)v24 + 11) = v17;
  *((_QWORD *)v24 + 12) = v19;
  *((_QWORD *)v24 + 13) = v20;
  *((_QWORD *)v24 + 14) = v22;
  return sub_E1C104((uint64_t)v5, v29);
}

uint64_t sub_E1AC00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_E1AA78(a1, a2);
}

uint64_t View.hover(corner:outset:isRelative:namespace:isEnabled:)(uint64_t a1, uint64_t a2, unsigned __int8 a3, unsigned __int8 a4, uint64_t a5, char a6, char a7, uint64_t a8, double a9, uint64_t a10)
{
  double v10;
  _QWORD v12[2];
  char v13;
  double v14;
  uint64_t v15;
  char v16;
  char v17;

  if (((a4 | a3) & 1) != 0)
    v10 = *(double *)&a1;
  else
    v10 = *(double *)&a1 - a9;
  *(double *)v12 = v10;
  v12[1] = a2;
  v13 = a3 & 1;
  v14 = a9;
  v15 = a5;
  v16 = a6 & 1;
  v17 = a7;
  return View.modifier<A>(_:)(v12, a8, &type metadata for HoverViewModifier, a10);
}

uint64_t sub_E1ACA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  double v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  double v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _BYTE v26[12];
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v28 = a1;
  v30 = a2;
  v29 = type metadata accessor for HighlightHoverEffect(0);
  v31 = *(_QWORD *)(v29 - 8);
  v3 = __chkstk_darwin();
  v5 = &v26[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for ContentShapeKinds(0, v3);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = &v26[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508970);
  v11 = __chkstk_darwin();
  v13 = &v26[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = *v2;
  v15 = v2[1];
  v16 = *((_BYTE *)v2 + 16);
  v17 = *((double *)v2 + 3);
  v27 = *((unsigned __int8 *)v2 + 41);
  static ContentShapeKinds.hoverEffect.getter(v11);
  v18 = &v13[*(int *)(v10 + 36)];
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508978);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 16))(&v18[*(int *)(v19 + 40)], v9, v6);
  *(_QWORD *)v18 = v14;
  *((_QWORD *)v18 + 1) = v15;
  v18[16] = v16;
  *((double *)v18 + 3) = -v17;
  v18[32] = 0;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508980);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v13, v28, v20);
  v21 = (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
  static CustomHoverEffect<>.highlight.getter(v21);
  v22 = sub_E1C14C();
  v23 = sub_E1C1E8();
  v24 = v29;
  View.hoverEffect<A>(_:isEnabled:)(v5, v27, v10, v29, v22, v23);
  (*(void (**)(_BYTE *, uint64_t))(v31 + 8))(v5, v24);
  return sub_56024((uint64_t)v13, &qword_1508970);
}

void sub_E1AE90(double a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>, double a8@<D3>, CGFloat a9@<D4>)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  double v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  void (*v37)(char *, _QWORD, uint64_t, double);
  uint64_t v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  double v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  CGRect v49;
  CGRect v50;

  v42 = a1;
  v43 = a2;
  v16 = type metadata accessor for RoundedCornerStyle(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin();
  v19 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Capsule(0);
  __chkstk_darwin();
  v21 = (char *)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin();
  v24 = (char *)&v41 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for RoundedRectangle._Inset(0);
  v26 = __chkstk_darwin();
  v28 = (char *)&v41 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) != 0)
  {
    v37 = *(void (**)(char *, _QWORD, uint64_t, double))(v17 + 104);
    v37(v21, enum case for RoundedCornerStyle.continuous(_:), v16, v26);
    ((void (*)(char *, _QWORD, uint64_t))v37)(v19, enum case for RoundedCornerStyle.circular(_:), v16);
    LOBYTE(v37) = static RoundedCornerStyle.== infix(_:_:)(v21, v19);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    v38 = sub_5C0DC((uint64_t)v21, (uint64_t (*)(_QWORD))&type metadata accessor for Capsule);
    Capsule._Inset.path(in:)(&v44, v38, a5, a6, a7, a8, COERCE_DOUBLE(*(_QWORD *)&a9 & 0xFFFFFFFFFFFFFFFELL | ((v37 & 1) == 0)));
    v32 = v44;
    v33 = v45;
    v34 = v46;
    v35 = v47;
    v36 = v48;
  }
  else
  {
    v29 = v43;
    if (v43 == -1)
    {
      (*(void (**)(char *, _QWORD, uint64_t, double))(v17 + 104))(&v24[*(int *)(v22 + 20)], enum case for RoundedCornerStyle.continuous(_:), v16, v26);
      v39 = v42;
      *(double *)v24 = v42;
      *((double *)v24 + 1) = v39;
      sub_AF858((uint64_t)v24, (uint64_t)v28);
      *(CGFloat *)&v28[*(int *)(v25 + 20)] = a9;
      v40 = sub_5C0DC((uint64_t)v24, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
      RoundedRectangle._Inset.path(in:)(&v44, v40, a5, a6, a7, a8);
      v32 = v44;
      v33 = v45;
      v34 = v46;
      v35 = v47;
      v36 = v48;
      sub_5C0DC((uint64_t)v28, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle._Inset);
    }
    else
    {
      v30 = v42;
      v49.origin.x = a5;
      v49.origin.y = a6;
      v49.size.width = a7;
      v49.size.height = a8;
      v50 = CGRectInset(v49, a9, a9);
      v31 = objc_msgSend((id)objc_opt_self(UIBezierPath), "bezierPathWithRoundedRect:byRoundingCorners:cornerRadii:", v29, v50.origin.x, v50.origin.y, v50.size.width, v50.size.height, v30, v30);
      Path.init(_:)(&v44, objc_msgSend(v31, "CGPath"));
      v32 = v44;
      v33 = v45;
      v34 = v46;
      v35 = v47;
      v36 = v48;

    }
  }
  *(_QWORD *)a4 = v32;
  *(_QWORD *)(a4 + 8) = v33;
  *(_QWORD *)(a4 + 16) = v34;
  *(_QWORD *)(a4 + 24) = v35;
  *(_BYTE *)(a4 + 32) = v36;
}

double sub_E1B1C4@<D0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v2;
  char v3;
  double result;

  v3 = *(_BYTE *)(v2 + 16);
  result = *(double *)(v2 + 24) + a2;
  *(_OWORD *)a1 = *(_OWORD *)v2;
  *(_BYTE *)(a1 + 16) = v3;
  *(double *)(a1 + 24) = result;
  return result;
}

double sub_E1B1E4@<D0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  uint64_t v5;
  double result;
  __int128 v8;
  _OWORD v9[2];
  char v10;

  sub_E1AE90(*(double *)v5, *(_QWORD *)(v5 + 8), *(_BYTE *)(v5 + 16), (uint64_t)v9, a2, a3, a4, a5, *(CGFloat *)(v5 + 24));
  result = *(double *)v9;
  v8 = v9[1];
  *(_OWORD *)a1 = v9[0];
  *(_OWORD *)(a1 + 16) = v8;
  *(_BYTE *)(a1 + 32) = v10;
  return result;
}

uint64_t sub_E1B230(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_E1C530();
  return static Shape._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_E1B280(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_E1C530();
  return static Shape._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_E1B2D0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E1C530();
  return Shape.body.getter(a1, v2);
}

void sub_E1B308()
{
  id v0;
  char *v1;

  v0 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v1 = (char *)objc_msgSend(v0, "userInterfaceIdiom");

  byte_1508918 = v1 == (_BYTE *)&dword_4 + 2;
}

uint64_t sub_E1B368()
{
  uint64_t v0;
  uint64_t result;

  if (qword_1506180 != -1)
    result = swift_once(&qword_1506180, sub_E1B308);
  v0 = 0x4008000000000000;
  if (byte_1508918)
    v0 = 0x4018000000000000;
  static Corner.extraSmall = v0;
  *(_QWORD *)algn_1583D78 = -1;
  byte_1583D80 = 0;
  return result;
}

uint64_t *Corner.extraSmall.unsafeMutableAddressor()
{
  if (qword_1506188 != -1)
    swift_once(&qword_1506188, sub_E1B368);
  return &static Corner.extraSmall;
}

uint64_t static Corner.extraSmall.getter()
{
  if (qword_1506188 != -1)
    swift_once(&qword_1506188, sub_E1B368);
  return static Corner.extraSmall;
}

uint64_t sub_E1B454()
{
  uint64_t v0;
  uint64_t result;

  if (qword_1506180 != -1)
    result = swift_once(&qword_1506180, sub_E1B308);
  v0 = 0x4014000000000000;
  if (byte_1508918)
    v0 = 0x4020000000000000;
  static Corner.small = v0;
  unk_1583D90 = -1;
  byte_1583D98 = 0;
  return result;
}

uint64_t *Corner.small.unsafeMutableAddressor()
{
  if (qword_1506190 != -1)
    swift_once(&qword_1506190, sub_E1B454);
  return &static Corner.small;
}

uint64_t static Corner.small.getter()
{
  if (qword_1506190 != -1)
    swift_once(&qword_1506190, sub_E1B454);
  return static Corner.small;
}

uint64_t sub_E1B540()
{
  uint64_t v0;
  uint64_t result;

  if (qword_1506180 != -1)
    result = swift_once(&qword_1506180, sub_E1B308);
  v0 = 0x4020000000000000;
  if (byte_1508918)
    v0 = 0x4024000000000000;
  static Corner.medium = v0;
  *(_QWORD *)algn_1583DA8 = -1;
  byte_1583DB0 = 0;
  return result;
}

uint64_t *Corner.medium.unsafeMutableAddressor()
{
  if (qword_1506198 != -1)
    swift_once(&qword_1506198, sub_E1B540);
  return &static Corner.medium;
}

uint64_t static Corner.medium.getter()
{
  if (qword_1506198 != -1)
    swift_once(&qword_1506198, sub_E1B540);
  return static Corner.medium;
}

uint64_t sub_E1B62C()
{
  uint64_t v0;
  uint64_t result;

  if (qword_1506180 != -1)
    result = swift_once(&qword_1506180, sub_E1B308);
  v0 = 0x4024000000000000;
  if (byte_1508918)
    v0 = 0x4030000000000000;
  static Corner.large = v0;
  unk_1583DC0 = -1;
  byte_1583DC8 = 0;
  return result;
}

uint64_t *Corner.large.unsafeMutableAddressor()
{
  if (qword_15061A0 != -1)
    swift_once(&qword_15061A0, sub_E1B62C);
  return &static Corner.large;
}

uint64_t static Corner.large.getter()
{
  if (qword_15061A0 != -1)
    swift_once(&qword_15061A0, sub_E1B62C);
  return static Corner.large;
}

uint64_t sub_E1B718()
{
  uint64_t v0;
  uint64_t result;

  if (qword_1506180 != -1)
    result = swift_once(&qword_1506180, sub_E1B308);
  v0 = 0x402C000000000000;
  if (byte_1508918)
    v0 = 0x4038000000000000;
  static Corner.extraLarge = v0;
  *(_QWORD *)algn_1583DD8 = -1;
  byte_1583DE0 = 0;
  return result;
}

uint64_t *Corner.extraLarge.unsafeMutableAddressor()
{
  if (qword_15061A8 != -1)
    swift_once(&qword_15061A8, sub_E1B718);
  return &static Corner.extraLarge;
}

uint64_t static Corner.extraLarge.getter()
{
  if (qword_15061A8 != -1)
    swift_once(&qword_15061A8, sub_E1B718);
  return static Corner.extraLarge;
}

uint64_t sub_E1B804()
{
  id v0;
  void *v1;
  id v2;
  __n128 v3;
  uint64_t result;
  _QWORD v5[5];
  uint64_t v6;

  v0 = objc_allocWithZone((Class)UIColor);
  v5[4] = sub_E1B8BC;
  v6 = 0;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 1107296256;
  v5[2] = sub_12EEE0;
  v5[3] = &block_descriptor_351;
  v1 = _Block_copy(v5);
  v2 = objc_msgSend(v0, "initWithDynamicProvider:", v1);
  _Block_release(v1);
  v3 = swift_release(v6);
  result = Color.init(uiColor:)(v2, v3);
  static Border.artwork = result;
  qword_1583DF0 = 0x3FE0000000000000;
  byte_1583DF8 = 0;
  return result;
}

id sub_E1B8BC(void *a1)
{
  char *v1;
  void *v2;
  id v3;
  id v4;
  id v5;

  v1 = (char *)objc_msgSend(a1, "userInterfaceStyle");
  v2 = (void *)objc_opt_self(UIColor);
  if (v1 == (_BYTE *)&dword_0 + 1)
  {
    v3 = objc_msgSend(v2, "blackColor");
    v4 = objc_msgSend(v3, "colorWithAlphaComponent:", 0.08);
  }
  else
  {
    v3 = objc_msgSend(v2, "whiteColor");
    v4 = objc_msgSend(v3, "colorWithAlphaComponent:", 0.1);
  }
  v5 = v4;

  return v5;
}

uint64_t *Border.artwork.unsafeMutableAddressor()
{
  if (qword_15061B0 != -1)
    swift_once(&qword_15061B0, sub_E1B804);
  return &static Border.artwork;
}

double static Border.artwork.getter()
{
  double v0;

  if (qword_15061B0 != -1)
    swift_once(&qword_15061B0, sub_E1B804);
  v0 = *(double *)&qword_1583DF0;
  swift_retain();
  return v0;
}

unint64_t sub_E1BA0C()
{
  unint64_t result;

  result = qword_1508920;
  if (!qword_1508920)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Corner, &type metadata for Corner);
    atomic_store(result, (unint64_t *)&qword_1508920);
  }
  return result;
}

unint64_t sub_E1BA54()
{
  unint64_t result;

  result = qword_1508928;
  if (!qword_1508928)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Border.StrokeStyle, &type metadata for Border.StrokeStyle);
    atomic_store(result, (unint64_t *)&qword_1508928);
  }
  return result;
}

unint64_t sub_E1BA9C()
{
  unint64_t result;

  result = qword_1508930;
  if (!qword_1508930)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Border, &type metadata for Border);
    atomic_store(result, (unint64_t *)&qword_1508930);
  }
  return result;
}

ValueMetadata *type metadata accessor for Corner()
{
  return &type metadata for Corner;
}

uint64_t sub_E1BAF4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  swift_retain(v3);
  return a1;
}

uint64_t *assignWithCopy for Border(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  a1[1] = a2[1];
  *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
  return a1;
}

uint64_t *assignWithTake for Border(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  a1[1] = a2[1];
  *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for Border()
{
  return &type metadata for Border;
}

uint64_t storeEnumTagSinglePayload for Border.StrokeStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_E1BC1C + 4 * byte_10AD085[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_E1BC50 + 4 * asc_10AD080[v4]))();
}

uint64_t sub_E1BC50(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_E1BC58(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xE1BC60);
  return result;
}

uint64_t sub_E1BC6C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xE1BC74);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_E1BC78(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_E1BC80(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Border.StrokeStyle()
{
  return &type metadata for Border.StrokeStyle;
}

uint64_t sub_E1BC9C(_QWORD *a1)
{
  return get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyx09MusicCoreB020CornerRadiusModifier33_0FA4743D1401B6C1F29D2373CEDF9367LLVGAaBHPxAaBHD1__AhA0cJ0HPyHCHCTm(a1, (uint64_t)&type metadata for CornerRadiusModifier, (void (*)(void))sub_E1BCB0);
}

unint64_t sub_E1BCB0()
{
  unint64_t result;

  result = qword_150BF30;
  if (!qword_150BF30)
  {
    result = swift_getWitnessTable(&unk_10AD2E8, &type metadata for CornerRadiusModifier);
    atomic_store(result, (unint64_t *)&qword_150BF30);
  }
  return result;
}

uint64_t sub_E1BCF4(_QWORD *a1)
{
  return get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyx09MusicCoreB020CornerRadiusModifier33_0FA4743D1401B6C1F29D2373CEDF9367LLVGAaBHPxAaBHD1__AhA0cJ0HPyHCHCTm(a1, (uint64_t)&type metadata for BorderViewModifier, (void (*)(void))sub_E1BD08);
}

unint64_t sub_E1BD08()
{
  unint64_t result;

  result = qword_1508938;
  if (!qword_1508938)
  {
    result = swift_getWitnessTable(&unk_10AD298, &type metadata for BorderViewModifier);
    atomic_store(result, (unint64_t *)&qword_1508938);
  }
  return result;
}

uint64_t sub_E1BD4C(_QWORD *a1)
{
  return get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyx09MusicCoreB020CornerRadiusModifier33_0FA4743D1401B6C1F29D2373CEDF9367LLVGAaBHPxAaBHD1__AhA0cJ0HPyHCHCTm(a1, (uint64_t)&type metadata for HoverViewModifier, (void (*)(void))sub_E1BDBC);
}

uint64_t get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyx09MusicCoreB020CornerRadiusModifier33_0FA4743D1401B6C1F29D2373CEDF9367LLVGAaBHPxAaBHD1__AhA0cJ0HPyHCHCTm(_QWORD *a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v4;

  v4 = type metadata accessor for ModifiedContent(255, *a1, a2);
  a3();
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v4);
}

unint64_t sub_E1BDBC()
{
  unint64_t result;

  result = qword_1508940;
  if (!qword_1508940)
  {
    result = swift_getWitnessTable(&unk_10AD248, &type metadata for HoverViewModifier);
    atomic_store(result, (unint64_t *)&qword_1508940);
  }
  return result;
}

__n128 __swift_memcpy42_8_0(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 26) = *(_OWORD *)(a2 + 26);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for HoverViewModifier(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 42))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 41);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for HoverViewModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 42) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 42) = 0;
    if (a2)
      *(_BYTE *)(result + 41) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for HoverViewModifier()
{
  return &type metadata for HoverViewModifier;
}

uint64_t initializeWithCopy for BorderViewModifier(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
  *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
  swift_retain(v3);
  return a1;
}

uint64_t *assignWithCopy for BorderViewModifier(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  a1[1] = a2[1];
  *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
  v6 = *(_OWORD *)(a2 + 3);
  *((_BYTE *)a1 + 40) = *((_BYTE *)a2 + 40);
  *(_OWORD *)(a1 + 3) = v6;
  return a1;
}

__n128 __swift_memcpy41_8_1(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t *assignWithTake for BorderViewModifier(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  a1[1] = a2[1];
  *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
  *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
  *((_BYTE *)a1 + 40) = *((_BYTE *)a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for BorderViewModifier(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 41))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BorderViewModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 41) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for BorderViewModifier()
{
  return &type metadata for BorderViewModifier;
}

ValueMetadata *type metadata accessor for CornerRadiusModifier()
{
  return &type metadata for CornerRadiusModifier;
}

uint64_t sub_E1C08C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_12113D4, 1);
}

uint64_t sub_E1C09C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_12113AC, 1);
}

uint64_t sub_E1C0AC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1211384, 1);
}

uint64_t sub_E1C0BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508948);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_E1C104(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508960);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_E1C14C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1508988;
  if (!qword_1508988)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1508970);
    sub_5C150(&qword_1508990, &qword_1508980, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    sub_5C150(&qword_1508998, &qword_1508978, (uint64_t)&protocol conformance descriptor for _ContentShapeKindModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1508988);
  }
  return result;
}

unint64_t sub_E1C1E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_15089A0;
  if (!qword_15089A0)
  {
    v1 = type metadata accessor for HighlightHoverEffect(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for HighlightHoverEffect, v1);
    atomic_store(result, (unint64_t *)&qword_15089A0);
  }
  return result;
}

uint64_t block_copy_helper_345(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double block_destroy_helper_345(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

ValueMetadata *type metadata accessor for CornerShape()
{
  return &type metadata for CornerShape;
}

unint64_t sub_E1C25C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_15089A8;
  if (!qword_15089A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1508958);
    sub_E1C2E0();
    sub_5C150(&qword_15089C0, &qword_15089C8, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_15089A8);
  }
  return result;
}

unint64_t sub_E1C2E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_15089B0;
  if (!qword_15089B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1508948);
    sub_5C150(&qword_15089B8, &qword_1508950, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_15089B0);
  }
  return result;
}

unint64_t sub_E1C368()
{
  unint64_t result;
  uint64_t v1;

  result = qword_15089D0;
  if (!qword_15089D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1508960);
    sub_5C150(&qword_15089D8, &qword_1508968, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    sub_5C150(&qword_15089E0, &qword_15089E8, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_15089D0);
  }
  return result;
}

uint64_t sub_E1C404()
{
  _QWORD v1[4];

  v1[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1508970);
  v1[1] = type metadata accessor for HighlightHoverEffect(255);
  v1[2] = sub_E1C14C();
  v1[3] = sub_E1C1E8();
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>, 1);
}

uint64_t sub_E1C470()
{
  return sub_5C150(&qword_15089F0, &qword_15089F8, (uint64_t)&protocol conformance descriptor for _ShapeView<A, B>);
}

unint64_t sub_E1C4A0()
{
  unint64_t result;

  result = qword_1508A00;
  if (!qword_1508A00)
  {
    result = swift_getWitnessTable(&unk_10AD394, &type metadata for CornerShape);
    atomic_store(result, (unint64_t *)&qword_1508A00);
  }
  return result;
}

unint64_t sub_E1C4E8()
{
  unint64_t result;

  result = qword_1508A08;
  if (!qword_1508A08)
  {
    result = swift_getWitnessTable(&unk_10AD344, &type metadata for CornerShape);
    atomic_store(result, (unint64_t *)&qword_1508A08);
  }
  return result;
}

unint64_t sub_E1C530()
{
  unint64_t result;

  result = qword_1508A10;
  if (!qword_1508A10)
  {
    result = swift_getWitnessTable(&unk_10AD3E4, &type metadata for CornerShape);
    atomic_store(result, (unint64_t *)&qword_1508A10);
  }
  return result;
}

unint64_t sub_E1C578()
{
  unint64_t result;

  result = qword_1508A18;
  if (!qword_1508A18)
  {
    result = swift_getWitnessTable(&unk_10AD434, &type metadata for CornerShape);
    atomic_store(result, (unint64_t *)&qword_1508A18);
  }
  return result;
}

uint64_t NoticePresenter.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  NoticePresenter.init()();
  return v1;
}

uint64_t NoticePresenter.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  CGFloat bottom;
  CGFloat trailing;
  uint64_t v17;
  _QWORD *v18;
  __int128 v20;
  _BYTE v21[16];
  uint64_t v22;
  __int128 v23;
  CGFloat v24;
  CGFloat v25;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508A28);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v21[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508A30);
  v6 = __chkstk_darwin(v5);
  v8 = &v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v6);
  v10 = &v21[-v9 - 8];
  v11 = v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter__notice;
  v12 = type metadata accessor for Notice(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v10, 1, 1, v12);
  sub_5C238((uint64_t)v10, (uint64_t)v8, &qword_1508A30);
  Published.init(initialValue:)(v8, v5);
  sub_56024((uint64_t)v10, &qword_1508A30);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v2 + 32))(v11, v4, v1);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_dismissalWorkItem) = 0;
  v13 = OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration;
  if (qword_15061B8 != -1)
    swift_once(&qword_15061B8, sub_E1D2AC);
  v14 = static NoticePresenter.defaultEdgePadding;
  v20 = *(_OWORD *)&NSDirectionalEdgeInsetsZero.top;
  bottom = NSDirectionalEdgeInsetsZero.bottom;
  trailing = NSDirectionalEdgeInsetsZero.trailing;
  v17 = swift_unknownObjectWeakInit(v21, 0);
  v21[8] = 2;
  v22 = v14;
  v23 = v20;
  v24 = bottom;
  v25 = trailing;
  sub_E2054C(v17, v0 + v13, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakTakeInit);
  v18 = (_QWORD *)(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_willPresentHandler);
  *v18 = 0;
  v18[1] = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_passthroughWindow) = 0;
  return v0;
}

uint64_t property wrapper backing initializer of NoticePresenter.notice(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508A30);
  __chkstk_darwin();
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5C238(a1, (uint64_t)v4, &qword_1508A30);
  Published.init(initialValue:)(v4, v2);
  return sub_56024(a1, &qword_1508A30);
}

double sub_E1C898@<D0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10AD490);
  v5 = swift_getKeyPath(&unk_10AD4B8);
  static Published.subscript.getter(a2, v3, KeyPath, v5);
  swift_release(KeyPath);
  *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  return result;
}

uint64_t sub_E1C900(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v12;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1508A30);
  __chkstk_darwin();
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v7 = (char *)&v12 - v6;
  sub_5C238(a1, (uint64_t)&v12 - v6, &qword_1508A30);
  v8 = *a2;
  KeyPath = swift_getKeyPath(&unk_10AD490);
  v10 = swift_getKeyPath(&unk_10AD4B8);
  sub_5C238((uint64_t)v7, (uint64_t)v5, &qword_1508A30);
  swift_retain();
  static Published.subscript.setter(v5, v8, KeyPath, v10);
  return sub_56024((uint64_t)v7, &qword_1508A30);
}

double NoticePresenter.notice.getter@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  double result;

  KeyPath = swift_getKeyPath(&unk_10AD490);
  v4 = swift_getKeyPath(&unk_10AD4B8);
  static Published.subscript.getter(a1, v1, KeyPath, v4);
  swift_release(KeyPath);
  *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  return result;
}

double sub_E1CA5C(_QWORD *a1)
{
  uint64_t v1;
  double result;
  _BYTE v3[24];

  swift_beginAccess(*a1 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter__notice, v3, 33, 0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508A28);
  Published.projectedValue.getter(v1);
  *(_QWORD *)&result = swift_endAccess(v3).n128_u64[0];
  return result;
}

uint64_t sub_E1CAC0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  double v8;
  uint64_t v9;
  _BYTE *v10;
  void (*v11)(_BYTE *, uint64_t, uint64_t, double);
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  _BYTE v17[24];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508CD8);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = __chkstk_darwin();
  v10 = &v17[-v9 - 8];
  v11 = *(void (**)(_BYTE *, uint64_t, uint64_t, double))(v5 + 16);
  v11(&v17[-v9 - 8], a1, v4, v8);
  v12 = *a2;
  ((void (*)(_BYTE *, _BYTE *, uint64_t))v11)(v7, v10, v4);
  swift_beginAccess(v12 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter__notice, v17, 33, 0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508A28);
  Published.projectedValue.setter(v7, v13);
  v14 = swift_endAccess(v17);
  return (*(uint64_t (**)(_BYTE *, uint64_t, __n128))(v5 + 8))(v10, v4, v14);
}

double NoticePresenter.$notice.getter()
{
  uint64_t v0;
  uint64_t v1;
  double result;
  _BYTE v3[24];

  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter__notice, v3, 33, 0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508A28);
  Published.projectedValue.getter(v1);
  *(_QWORD *)&result = swift_endAccess(v3).n128_u64[0];
  return result;
}

Swift::Void __swiftcall NoticePresenter.dismiss(_:)(Swift::Bool a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t KeyPath;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  double v21;
  uint64_t v22;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1508A30);
  __chkstk_darwin();
  v5 = (uint64_t *)((char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  KeyPath = swift_getKeyPath(&unk_10AD490);
  swift_getKeyPath(&unk_10AD4B8);
  static Published.subscript.getter(v5, v1, KeyPath);
  swift_release();
  swift_release();
  v7 = type metadata accessor for Notice(0);
  LODWORD(KeyPath) = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7);
  sub_56024((uint64_t)v5, &qword_1508A30);
  if ((_DWORD)KeyPath != 1)
  {
    v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_dismissalWorkItem);
    *(_QWORD *)(v2 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_dismissalWorkItem) = 0;
    if (v9)
    {
      dispatch thunk of DispatchWorkItem.cancel()(v8);
      v8.n128_u64[0] = swift_release().n128_u64[0];
    }
    if (a1)
      v10 = static Animation.default.getter(v8.n128_f64[0]);
    else
      v10 = 0;
    withAnimation<A>(_:_:)(v10, sub_E1D3B4, v2, (char *)&type metadata for () + 8);
    swift_release();
    v11 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_passthroughWindow);
    if (v11)
    {
      *(_BYTE *)(v11
               + OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C117PassthroughWindow_canReceiveTouches) = 0;
      v12 = sub_4E684(0, (unint64_t *)&qword_15076C0, OS_dispatch_queue_ptr);
      v20 = (void *)static OS_dispatch_queue.main.getter(v12, v13, v14, v15, v16, v17, v18, v19);
      if (a1)
        v21 = 2.0;
      else
        v21 = 0.0;
      swift_retain();
      OS_dispatch_queue.asyncAfter(_:block:)((uint64_t)sub_E1D3CC, v2, v21);

      swift_release();
    }
  }
}

uint64_t sub_E1CE00(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  _QWORD v10[2];

  __swift_instantiateConcreteTypeFromMangledName(&qword_1508A30);
  __chkstk_darwin();
  v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v5 = (char *)v10 - v4;
  v6 = type metadata accessor for Notice(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  KeyPath = swift_getKeyPath(&unk_10AD490);
  v8 = swift_getKeyPath(&unk_10AD4B8);
  sub_5C238((uint64_t)v5, (uint64_t)v3, &qword_1508A30);
  swift_retain();
  static Published.subscript.setter(v3, a1, KeyPath, v8);
  return sub_56024((uint64_t)v5, &qword_1508A30);
}

void sub_E1CF14(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1508A30);
  __chkstk_darwin();
  v3 = (uint64_t *)((char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  KeyPath = swift_getKeyPath(&unk_10AD490);
  v5 = swift_getKeyPath(&unk_10AD4B8);
  static Published.subscript.getter(v3, a1, KeyPath, v5);
  swift_release();
  swift_release();
  v6 = type metadata accessor for Notice(0);
  LODWORD(KeyPath) = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v3, 1, v6);
  sub_56024((uint64_t)v3, &qword_1508A30);
  if ((_DWORD)KeyPath == 1)
    sub_E1D734(0);
}

uint64_t NoticePresenter.present(_:internalOnly:)(uint64_t a1, char a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v7;

  type metadata accessor for Notice(0);
  __chkstk_darwin();
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Notice.variant(_:)(a1);
  _s11MusicCoreUI15NoticePresenterC7present_12internalOnlyy0aB00D0V_SbtF_0((uint64_t)v5, a2);
  return sub_5C0DC((uint64_t)v5, type metadata accessor for Notice);
}

void sub_E1D09C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1508A30);
  __chkstk_darwin();
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v7 = (char *)&v24 - v6;
  sub_5BDB8(a2, (uint64_t)&v24 - v6, type metadata accessor for Notice);
  v8 = type metadata accessor for Notice(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 0, 1, v8);
  KeyPath = swift_getKeyPath(&unk_10AD490);
  v10 = swift_getKeyPath(&unk_10AD4B8);
  sub_5C238((uint64_t)v7, (uint64_t)v5, &qword_1508A30);
  swift_retain();
  static Published.subscript.setter(v5, a1, KeyPath, v10);
  sub_56024((uint64_t)v7, &qword_1508A30);
  v11 = OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_passthroughWindow;
  v12 = *(void **)(a1 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_passthroughWindow);
  if (v12)
  {
    v13 = objc_msgSend(v12, "rootViewController");
    if (v13)
    {
      v14 = v13;
      v15 = type metadata accessor for NoticePresenter.UIRootViewController();
      v16 = (void *)swift_dynamicCastClass(v14, v15);
      if (v16)
      {
        v17 = objc_msgSend(v16, "view");

        if (!v17)
        {
          __break(1u);
          goto LABEL_15;
        }
        objc_msgSend(v17, "setNeedsLayout");
        v14 = v17;
      }

    }
    v18 = *(void **)(a1 + v11);
    if (v18)
    {
      v19 = objc_msgSend(v18, "rootViewController");
      if (v19)
      {
        v20 = v19;
        v21 = type metadata accessor for NoticePresenter.UIRootViewController();
        v22 = (void *)swift_dynamicCastClass(v20, v21);
        if (!v22)
        {
LABEL_12:

          return;
        }
        v23 = objc_msgSend(v22, "view");

        if (v23)
        {
          objc_msgSend(v23, "layoutIfNeeded");
          v20 = v23;
          goto LABEL_12;
        }
LABEL_15:
        __break(1u);
      }
    }
  }
}

void sub_E1D2AC()
{
  static NoticePresenter.defaultEdgePadding = 0x4024000000000000;
}

uint64_t *NoticePresenter.defaultEdgePadding.unsafeMutableAddressor()
{
  if (qword_15061B8 != -1)
    swift_once(&qword_15061B8, sub_E1D2AC);
  return &static NoticePresenter.defaultEdgePadding;
}

double static NoticePresenter.defaultEdgePadding.getter()
{
  if (qword_15061B8 != -1)
    swift_once(&qword_15061B8, sub_E1D2AC);
  return *(double *)&static NoticePresenter.defaultEdgePadding;
}

void *NoticePresenter.defaultEdge.unsafeMutableAddressor()
{
  return &static NoticePresenter.defaultEdge;
}

uint64_t NoticePresenter.UIKitConfiguration.init(edge:padding:insets:)@<X0>(char a1@<W0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>, double a7@<D4>)
{
  uint64_t result;

  result = swift_unknownObjectWeakInit(a2, 0);
  *(_BYTE *)(result + 8) = a1;
  *(double *)(result + 16) = a3;
  *(double *)(result + 24) = a4;
  *(double *)(result + 32) = a5;
  *(double *)(result + 40) = a6;
  *(double *)(result + 48) = a7;
  return result;
}

uint64_t sub_E1D3B4()
{
  uint64_t v0;

  return sub_E1CE00(v0);
}

void sub_E1D3CC()
{
  uint64_t v0;

  sub_E1CF14(v0);
}

uint64_t NoticePresenter.uiKitConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_E2054C(v3, a1, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
}

uint64_t NoticePresenter.uiKitConfiguration.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  _BYTE v10[56];
  _BYTE v11[24];
  _BYTE v12[56];

  v3 = v1 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration;
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration, v11, 0, 0);
  sub_E2054C(v3, (uint64_t)v12, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
  swift_beginAccess(v3, v10, 33, 0);
  sub_E2059C(a1, v3);
  swift_endAccess(v10);
  sub_E2054C(v3, (uint64_t)v10, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
  v4 = _s11MusicCoreUI15NoticePresenterC18UIKitConfigurationV23__derived_struct_equalsySbAE_AEtFZ_0((uint64_t)v12, (uint64_t)v10);
  sub_64880((uint64_t)v10);
  if ((v4 & 1) == 0)
  {
    v5 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_passthroughWindow);
    if (v5)
    {
      v6 = objc_msgSend(v5, "rootViewController");
      if (v6)
      {
        v7 = v6;
        v8 = type metadata accessor for NoticePresenter.UIRootViewController();
        if (swift_dynamicCastClass(v7, v8))
        {
          sub_E2054C(v3, (uint64_t)v10, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
          sub_E1EF10((uint64_t)v10);
        }

      }
    }
  }
  sub_64880(a1);
  return sub_64880((uint64_t)v12);
}

void (*NoticePresenter.uiKitConfiguration.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x90uLL);
  *a1 = v3;
  v3[17] = v1;
  v4 = v1 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration;
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration, v3 + 14, 0, 0);
  sub_E2054C(v4, (uint64_t)v3, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
  return sub_E1D5D4;
}

void sub_E1D5D4(uint64_t *a1, char a2)
{
  void *v2;

  v2 = (void *)*a1;
  if ((a2 & 1) != 0)
  {
    sub_E2054C(*a1, (uint64_t)v2 + 56, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
    NoticePresenter.uiKitConfiguration.setter((uint64_t)v2 + 56);
    sub_64880((uint64_t)v2);
  }
  else
  {
    NoticePresenter.uiKitConfiguration.setter(*a1);
  }
  free(v2);
}

uint64_t NoticePresenter.willPresentHandler.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_willPresentHandler);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_willPresentHandler, v4, 0, 0);
  v2 = *v1;
  sub_A9DEC(*v1, v1[1]);
  return v2;
}

uint64_t NoticePresenter.willPresentHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_willPresentHandler);
  swift_beginAccess(v5, v9, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return sub_5C198(v6, v7);
}

uint64_t (*NoticePresenter.willPresentHandler.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_willPresentHandler, a1, 33, 0);
  return j__swift_endAccess;
}

void sub_E1D734(void *a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  id v5;
  id v6;
  char v7;
  id v8;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_passthroughWindow);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_passthroughWindow) = a1;
  v4 = a1;
  if (v3)
  {
    v8 = v4;
    if (!a1
      || (type metadata accessor for NoticePresenter.PassthroughWindow(),
          v5 = v3,
          v6 = v8,
          v7 = static NSObject.== infix(_:_:)(v5, v6),
          v5,
          v6,
          (v7 & 1) == 0))
    {
      objc_msgSend(v3, "resignKeyWindow");
    }

    v4 = v8;
  }

}

uint64_t NoticePresenter.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter__notice;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508A28);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  sub_64880(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration);
  sub_5C198(*(_QWORD *)(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_willPresentHandler), *(_QWORD *)(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_willPresentHandler + 8));

  return v0;
}

double NoticePresenter.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double result;

  v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter__notice;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508A28);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  sub_64880(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration);
  sub_5C198(*(_QWORD *)(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_willPresentHandler), *(_QWORD *)(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_willPresentHandler + 8));

  *(_QWORD *)&result = swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52)).n128_u64[0];
  return result;
}

uint64_t sub_E1D8F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for NoticePresenter(0);
  result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

void sub_E1D934(uint64_t a1, char a2)
{
  _s11MusicCoreUI15NoticePresenterC7present_12internalOnlyy0aB00D0V_SbtF_0(a1, a2);
}

uint64_t View.noticePresenting(_:edge:padding:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>, double a6@<D0>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t WitnessTable;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD v24[2];
  char v25;
  double v26;

  v20 = a5;
  v21 = a1;
  v10 = type metadata accessor for ModifiedContent(0, a3, &type metadata for NoticePresentingModifier);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin();
  v13 = (char *)&v20 - v12;
  v14 = type metadata accessor for NoticePresenter(0);
  v15 = sub_4DD24(&qword_1506540, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
  v24[0] = EnvironmentObject.init()(v14, v15);
  v24[1] = v16;
  v25 = a2;
  v26 = a6;
  View.modifier<A>(_:)(v24, a3, &type metadata for NoticePresentingModifier, a4);
  swift_release();
  v17 = sub_E20658();
  v22 = a4;
  v23 = v17;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v10);
  View.environmentObject<A>(_:)(v20, v21, v10, v14, WitnessTable, v15);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

double NoticePresentingModifier.init(edge:padding:)(double a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for NoticePresenter(0);
  v3 = sub_4DD24(&qword_1506540, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
  EnvironmentObject.init()(v2, v3);
  return a1;
}

void NoticePresentingModifier.controller.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  if (a1)
  {
    swift_retain();
  }
  else
  {
    v3 = type metadata accessor for NoticePresenter(0);
    v4 = sub_4DD24(&qword_1506540, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
    EnvironmentObject.error()(0, a2, v3, v4);
    __break(1u);
  }
}

uint64_t NoticePresentingModifier.$controller.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for NoticePresenter(0);
  v5 = sub_4DD24(&qword_1506540, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
  return EnvironmentObject.projectedValue.getter(a1, a2, v4, v5);
}

uint64_t NoticePresentingModifier.edge.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

void NoticePresentingModifier.padding.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 24) = a1;
}

void NoticePresentingModifier.body(content:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  __asm { BR              X10 }
}

uint64_t sub_E1DC20(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;

  v7 = static Alignment.top.getter(a1);
  v9 = v8;
  if (v3)
  {
    swift_retain();
    v10 = Edge.Set.init(_:)(v5);
    v11 = _s7SwiftUI10EdgeInsetsV09MusicCoreB0E_6lengthAcA0C0O3SetV_0F8Graphics7CGFloatVtcfC_0(v10, v6);
    v13 = v12;
    v15 = v14;
    v17 = v16;
    v18 = type metadata accessor for NoticePresenter(0);
    v19 = sub_4DD24(&qword_1506540, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
    v20 = ObservedObject.init(wrappedValue:)(v3, v18, v19);
    v22 = v21;
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508A60);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v1, v2, v23);
    result = __swift_instantiateConcreteTypeFromMangledName(&qword_1508A68);
    v25 = (uint64_t *)(v1 + *(int *)(result + 36));
    *v25 = v20;
    v25[1] = v22;
    *((double *)v25 + 2) = v11;
    v25[3] = v13;
    v25[4] = v15;
    v25[5] = v17;
    v25[6] = v7;
    v25[7] = v9;
  }
  else
  {
    v26 = type metadata accessor for NoticePresenter(0);
    v27 = sub_4DD24(&qword_1506540, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
    result = EnvironmentObject.error()(0, v4, v26, v27);
    __break(1u);
  }
  return result;
}

void sub_E1DD58()
{
  __asm { BR              X9 }
}

uint64_t sub_E1DDA4(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;

  v7 = static Alignment.top.getter(a1);
  v9 = v8;
  if (v2)
  {
    swift_retain();
    v10 = Edge.Set.init(_:)(v4);
    v11 = _s7SwiftUI10EdgeInsetsV09MusicCoreB0E_6lengthAcA0C0O3SetV_0F8Graphics7CGFloatVtcfC_0(v10, v6);
    v13 = v12;
    v15 = v14;
    v17 = v16;
    v18 = type metadata accessor for NoticePresenter(0);
    v19 = sub_4DD24(&qword_1506540, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
    v20 = ObservedObject.init(wrappedValue:)(v2, v18, v19);
    v22 = v21;
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508A60);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v1, v5, v23);
    result = __swift_instantiateConcreteTypeFromMangledName(&qword_1508A68);
    v25 = (uint64_t *)(v1 + *(int *)(result + 36));
    *v25 = v20;
    v25[1] = v22;
    *((double *)v25 + 2) = v11;
    v25[3] = v13;
    v25[4] = v15;
    v25[5] = v17;
    v25[6] = v7;
    v25[7] = v9;
  }
  else
  {
    v26 = type metadata accessor for NoticePresenter(0);
    v27 = sub_4DD24(&qword_1506540, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
    result = EnvironmentObject.error()(0, v3, v26, v27);
    __break(1u);
  }
  return result;
}

uint64_t sub_E1DEDC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  int *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t KeyPath;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  __int128 v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  double v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  double v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  __n128 v79;
  __n128 v80;
  __n128 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  double v85;
  double v86;
  uint64_t v87;
  __n128 v88;
  __n128 v89;
  __n128 v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  double v94;
  double v95;
  uint64_t v96;
  __n128 v97;
  __n128 v98;
  __n128 v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  __n128 v106;
  uint64_t v107;
  uint64_t v108;
  __int128 v109;
  __n128 v110;
  uint64_t v111;
  uint64_t v112;
  __int128 v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char v122;
  uint64_t v123;
  char v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  int v148;
  uint64_t v149;
  int v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  _QWORD *v156;
  uint64_t v157;
  uint64_t v158;
  unsigned __int8 v159;
  uint64_t v160;
  unsigned __int8 v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  __int128 v166;
  uint64_t v167;
  uint64_t v168;

  v156 = a2;
  v3 = (int *)type metadata accessor for NoticeView(0);
  __chkstk_darwin();
  v5 = (char *)&v133 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508CA0);
  __chkstk_darwin();
  v137 = (uint64_t)&v133 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508CA8);
  __chkstk_darwin();
  v138 = (uint64_t)&v133 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508CB0);
  __chkstk_darwin();
  v141 = (uint64_t)&v133 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508CB8);
  __chkstk_darwin();
  v143 = (uint64_t)&v133 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508CC0);
  v154 = *(_QWORD *)(v153 - 8);
  __chkstk_darwin();
  v142 = (uint64_t)&v133 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1508A30);
  __chkstk_darwin();
  v12 = (uint64_t *)((char *)&v133 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = type metadata accessor for Notice(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin();
  v16 = (char *)&v133 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v144 = (uint64_t)&v133 - v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1508CC8);
  __chkstk_darwin();
  v155 = (uint64_t)&v133 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v145 = (uint64_t)&v133 - v19;
  v20 = *(_QWORD *)(a1 + 16);
  v21 = *(double *)(a1 + 24);
  v152 = *(_QWORD *)(a1 + 32);
  v22 = *(double *)(a1 + 40);
  v24 = static Alignment.center.getter(v23);
  _FrameLayout.init(width:height:alignment:)(&v158, 0, 1, v20, 0, v24, v25);
  v151 = v158;
  v150 = v159;
  v149 = v160;
  v148 = v161;
  v147 = v162;
  v146 = v163;
  v26 = *(_QWORD *)(a1 + 8);
  KeyPath = swift_getKeyPath(&unk_10AD490);
  swift_getKeyPath(&unk_10AD4B8);
  swift_retain();
  v139 = v26;
  static Published.subscript.getter(v12, v28, KeyPath);
  swift_release();
  swift_release();
  sub_2B5CA8(a1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_56024((uint64_t)v12, &qword_1508A30);
    v29 = 1;
    v30 = v153;
    v31 = v145;
  }
  else
  {
    v32 = v144;
    sub_1A63E0((uint64_t)v12, v144);
    sub_5BDB8(v32, (uint64_t)v16, type metadata accessor for Notice);
    v33 = &v5[v3[5]];
    *(_QWORD *)v33 = swift_getKeyPath(&unk_10AD6E8);
    *((_QWORD *)v33 + 1) = 0;
    *((_WORD *)v33 + 8) = 0;
    v34 = &v5[v3[6]];
    v157 = 0x3FF0000000000000;
    State.init(wrappedValue:)(&v164, &v157, &type metadata for Double);
    v35 = v165;
    *(_QWORD *)v34 = v164;
    *((_QWORD *)v34 + 1) = v35;
    v36 = &v5[v3[7]];
    LOBYTE(v157) = 0;
    GestureState.init(wrappedValue:)(&v164, &v157, &type metadata for Bool);
    v37 = v165;
    v38 = v166;
    *v36 = v164;
    *((_QWORD *)v36 + 1) = v37;
    *((_OWORD *)v36 + 1) = v38;
    v39 = &v5[v3[8]];
    LOBYTE(v157) = 0;
    State.init(wrappedValue:)(&v164, &v157, &type metadata for Bool);
    v40 = v165;
    *v39 = v164;
    *((_QWORD *)v39 + 1) = v40;
    v41 = sub_1A63E0((uint64_t)v16, (uint64_t)v5);
    v42 = static Edge.Set.leading.getter(v41);
    v43 = v42;
    v44 = EdgeInsets.init(_all:)(v42, v21);
    v46 = v45;
    v48 = v47;
    v50 = v49;
    v51 = v137;
    sub_5BDB8((uint64_t)v5, v137, type metadata accessor for NoticeView);
    v52 = v51 + *(int *)(v134 + 36);
    *(_BYTE *)v52 = v43;
    *(double *)(v52 + 8) = v44;
    *(_QWORD *)(v52 + 16) = v46;
    *(_QWORD *)(v52 + 24) = v48;
    *(_QWORD *)(v52 + 32) = v50;
    *(_BYTE *)(v52 + 40) = 0;
    v53 = sub_5C0DC((uint64_t)v5, type metadata accessor for NoticeView);
    v54 = static Edge.Set.trailing.getter(v53);
    v55 = v54;
    v56 = EdgeInsets.init(_all:)(v54, v22);
    v58 = v57;
    v60 = v59;
    v62 = v61;
    v63 = v138;
    sub_5C238(v51, v138, &qword_1508CA0);
    v64 = v63 + *(int *)(v135 + 36);
    *(_BYTE *)v64 = v55;
    *(double *)(v64 + 8) = v56;
    *(_QWORD *)(v64 + 16) = v58;
    *(_QWORD *)(v64 + 24) = v60;
    *(_QWORD *)(v64 + 32) = v62;
    *(_BYTE *)(v64 + 40) = 0;
    v65 = sub_56024(v51, &qword_1508CA0);
    v66 = static Edge.Set.vertical.getter(v65);
    v67 = v66;
    v68 = EdgeInsets.init(_all:)(v66, 0.0);
    v70 = v69;
    v72 = v71;
    v74 = v73;
    v75 = v141;
    sub_5C238(v63, v141, &qword_1508CA8);
    v76 = v75 + *(int *)(v136 + 36);
    *(_BYTE *)v76 = v67;
    *(double *)(v76 + 8) = v68;
    *(_QWORD *)(v76 + 16) = v70;
    *(_QWORD *)(v76 + 24) = v72;
    *(_QWORD *)(v76 + 32) = v74;
    *(_BYTE *)(v76 + 40) = 0;
    v77 = sub_56024(v63, &qword_1508CA8);
    v78 = static AnyTransition.opacity.getter(v77);
    v79.n128_u64[0] = 0x4072C00000000000;
    v80.n128_u64[0] = 0x4044000000000000;
    v81.n128_u64[0] = 1.0;
    v82 = static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)(v78, v81, v79, v80, 1.0);
    v83 = AnyTransition.animation(_:)(v82, v78);
    swift_release();
    swift_release();
    v85 = static UnitPoint.center.getter(v84);
    v87 = static AnyTransition.scale(scale:anchor:)(0.85, v85, v86);
    v88.n128_u64[0] = 0x4081300000000000;
    v89.n128_u64[0] = 1.0;
    v90.n128_u64[0] = 26.0;
    v91 = static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)(v87, v89, v88, v90, 1.0);
    v92 = AnyTransition.animation(_:)(v91, v87);
    swift_release();
    swift_release();
    v94 = static UnitPoint.center.getter(v93);
    v96 = static AnyTransition.scale(scale:anchor:)(0.9, v94, v95);
    v97.n128_u64[0] = 0x4083600000000000;
    v98.n128_u64[0] = 0x4049000000000000;
    v99.n128_u64[0] = 1.0;
    v100 = static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)(v96, v99, v97, v98, 1.0);
    v101 = AnyTransition.animation(_:)(v100, v96);
    swift_release();
    swift_release();
    v102 = static AnyTransition.asymmetric(insertion:removal:)(v92, v101);
    swift_release();
    swift_release();
    v103 = AnyTransition.combined(with:)(v102, v83);
    swift_release();
    swift_release();
    v104 = v143;
    sub_5C238(v75, v143, &qword_1508CB0);
    *(_QWORD *)(v104 + *(int *)(v140 + 36)) = v103;
    sub_56024(v75, &qword_1508CB0);
    v105 = swift_getKeyPath(&unk_10AD6E8);
    type metadata accessor for MainActor(0);
    v106 = swift_retain();
    v107 = static MainActor.shared.getter(v106);
    v108 = swift_allocObject(&unk_13C82B0, 80, 7);
    *(_QWORD *)(v108 + 16) = v107;
    *(_QWORD *)(v108 + 24) = &protocol witness table for MainActor;
    v109 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v108 + 32) = *(_OWORD *)a1;
    *(_OWORD *)(v108 + 48) = v109;
    *(_OWORD *)(v108 + 64) = *(_OWORD *)(a1 + 32);
    v110 = swift_retain();
    v111 = static MainActor.shared.getter(v110);
    v112 = swift_allocObject(&unk_13C82D8, 80, 7);
    *(_QWORD *)(v112 + 16) = v111;
    *(_QWORD *)(v112 + 24) = &protocol witness table for MainActor;
    v113 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v112 + 32) = *(_OWORD *)a1;
    *(_OWORD *)(v112 + 48) = v113;
    *(_OWORD *)(v112 + 64) = *(_OWORD *)(a1 + 32);
    Binding.init(get:set:)(&v164, sub_E20C94, v108, sub_E20CD0, v112, &type metadata for Bool);
    v114 = v164;
    v115 = v165;
    LOBYTE(v108) = v166;
    v116 = v142;
    sub_5C238(v104, v142, &qword_1508CB8);
    v117 = v153;
    v118 = v116 + *(int *)(v153 + 36);
    *(_QWORD *)v118 = v105;
    *(_QWORD *)(v118 + 8) = v114;
    *(_QWORD *)(v118 + 16) = v115;
    *(_BYTE *)(v118 + 24) = v108;
    sub_56024(v104, &qword_1508CB8);
    sub_5C0DC(v144, type metadata accessor for Notice);
    v31 = v145;
    sub_5C090(v116, v145, &qword_1508CC0);
    v29 = 0;
    v30 = v117;
  }
  v119 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v154 + 56))(v31, v29, 1, v30);
  v120 = static Alignment.center.getter(v119);
  _FrameLayout.init(width:height:alignment:)(&v164, 0, 1, v152, 0, v120, v121);
  v154 = v164;
  v122 = v165;
  v123 = v166;
  v124 = BYTE8(v166);
  v125 = v167;
  v126 = v168;
  v127 = v155;
  sub_5C238(v31, v155, &qword_1508CC8);
  v128 = v156;
  *v156 = 0;
  *((_BYTE *)v128 + 8) = 1;
  v128[2] = v151;
  *((_BYTE *)v128 + 24) = v150;
  v128[4] = v149;
  *((_BYTE *)v128 + 40) = v148;
  v129 = v146;
  v128[6] = v147;
  v128[7] = v129;
  v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508CD0);
  sub_5C238(v127, (uint64_t)v128 + *(int *)(v130 + 48), &qword_1508CC8);
  v131 = (char *)v128 + *(int *)(v130 + 64);
  *(_QWORD *)v131 = 0;
  v131[8] = 1;
  *((_QWORD *)v131 + 2) = v154;
  v131[24] = v122;
  *((_QWORD *)v131 + 4) = v123;
  v131[40] = v124;
  *((_QWORD *)v131 + 6) = v125;
  *((_QWORD *)v131 + 7) = v126;
  sub_56024(v31, &qword_1508CC8);
  return sub_56024(v127, &qword_1508CC8);
}

uint64_t sub_E1E93C@<X0>(uint64_t a1@<X2>, _BYTE *a2@<X8>)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1508A30);
  __chkstk_darwin();
  v5 = (uint64_t *)((char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  KeyPath = swift_getKeyPath(&unk_10AD490);
  swift_getKeyPath(&unk_10AD4B8);
  swift_retain();
  static Published.subscript.getter(v5, v7, KeyPath);
  swift_release();
  swift_release();
  sub_2B5CA8(a1);
  v8 = type metadata accessor for Notice(0);
  LOBYTE(a1) = (*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v5, 1, v8) != 1;
  result = sub_56024((uint64_t)v5, &qword_1508A30);
  *a2 = a1;
  return result;
}

_BYTE *sub_E1EA40(_BYTE *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((*result & 1) == 0)
  {
    swift_retain();
    NoticePresenter.dismiss(_:)(1);
    return (_BYTE *)sub_2B5CA8(a4);
  }
  return result;
}

uint64_t sub_E1EA88@<X0>(uint64_t a1@<X8>)
{
  _OWORD *v1;
  uint64_t v3;
  char *v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD v11[2];
  __int128 v12;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CE50);
  __chkstk_darwin();
  v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v1[1];
  v11[0] = *v1;
  v11[1] = v5;
  v12 = v1[2];
  *(_QWORD *)v4 = static HorizontalAlignment.center.getter(*(double *)&v12);
  *((_QWORD *)v4 + 1) = 0;
  v4[16] = 1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508C98);
  v7 = sub_E1DEDC((uint64_t)v11, &v4[*(int *)(v6 + 44)]);
  v8 = static Alignment.center.getter(v7);
  sub_E98DA0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, a1, 0.0, 1, 0.0, 1, v8, v9);
  return sub_56024((uint64_t)v4, (uint64_t *)&unk_150CE50);
}

uint64_t NoticePresenter.UIKitConfiguration.edge.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = result;
  return result;
}

double NoticePresenter.UIKitConfiguration.insets.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

void NoticePresenter.UIKitConfiguration.insets.setter(double a1, double a2, double a3, double a4)
{
  double *v4;

  v4[3] = a1;
  v4[4] = a2;
  v4[5] = a3;
  v4[6] = a4;
}

id sub_E1EBD0(uint64_t a1, double a2, double a3)
{
  void *v3;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id result;
  void *v13;
  unsigned __int8 v14;
  objc_super v15;

  v15.receiver = v3;
  v15.super_class = (Class)type metadata accessor for NoticePresenter.PassthroughWindow();
  v7 = objc_msgSendSuper2(&v15, "hitTest:withEvent:", a1, a2, a3);
  v8 = v7;
  if (*((_BYTE *)v3
       + OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C117PassthroughWindow_canReceiveTouches) != 1)
  {
    v9 = v7;
LABEL_8:

    return 0;
  }
  if (!v7)
    return v8;
  v9 = v7;
  v10 = objc_msgSend(v3, "rootViewController");
  if (!v10)
  {

    goto LABEL_8;
  }
  v11 = v10;
  result = objc_msgSend(v10, "view");
  if (result)
  {
    v13 = result;
    v14 = objc_msgSend(v9, "isDescendantOfView:", result);

    if ((v14 & 1) != 0)
      return v8;
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

id sub_E1EF04()
{
  return sub_1A9A14((uint64_t (*)(_QWORD))type metadata accessor for NoticePresenter.PassthroughWindow);
}

id sub_E1EF10(uint64_t a1)
{
  char *v1;
  void *v2;
  uint64_t v4;
  unsigned int v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(_BYTE *, _QWORD);
  double *v14;
  id result;
  void *v16;
  void *v17;
  _BYTE v18[32];

  v2 = v1;
  v4 = (uint64_t)&v1[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_configuration];
  swift_beginAccess(&v1[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_configuration], v18, 33, 0);
  sub_E2059C(a1, v4);
  swift_endAccess(v18);
  if (!objc_msgSend(v1, "isViewLoaded"))
    return (id)sub_64880(a1);
  v5 = Edge.Set.init(_:)(*(unsigned __int8 *)(v4 + 8));
  v6 = _s7SwiftUI10EdgeInsetsV09MusicCoreB0E_6lengthAcA0C0O3SetV_0F8Graphics7CGFloatVtcfC_0(v5, *(double *)(v4 + 16));
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v13 = (void (*)(_BYTE *, _QWORD))dispatch thunk of UIHostingController.rootView.modify(v18);
  v14[2] = v6;
  *((_QWORD *)v14 + 3) = v8;
  *((_QWORD *)v14 + 4) = v10;
  *((_QWORD *)v14 + 5) = v12;
  v13(v18, 0);
  result = objc_msgSend(v1, "view");
  if (result)
  {
    v16 = result;
    objc_msgSend(result, "setNeedsLayout");

    result = objc_msgSend(v2, "view");
    if (result)
    {
      v17 = result;
      objc_msgSend(result, "layoutIfNeeded");

      return (id)sub_64880(a1);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_E1F174()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  double *v6;
  unsigned int v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(_BYTE *, _QWORD);
  double *v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  _BYTE v23[32];
  char v24[24];
  objc_super v25;

  v1 = v0;
  v25.receiver = v0;
  v25.super_class = (Class)type metadata accessor for NoticePresenter.UIRootViewController();
  objc_msgSendSuper2(&v25, "viewDidLoad");
  v2 = *(void **)&v0[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_hostingController];
  v3 = objc_msgSend(v2, "view");
  if (!v3)
  {
    __break(1u);
    goto LABEL_7;
  }
  v4 = v3;
  v5 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  objc_msgSend(v4, "setBackgroundColor:", v5);

  v6 = (double *)&v1[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_configuration];
  swift_beginAccess(&v1[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_configuration], v24, 0, 0);
  v7 = Edge.Set.init(_:)(*((unsigned __int8 *)v6 + 8));
  v8 = _s7SwiftUI10EdgeInsetsV09MusicCoreB0E_6lengthAcA0C0O3SetV_0F8Graphics7CGFloatVtcfC_0(v7, v6[2]);
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v15 = (void (*)(_BYTE *, _QWORD))dispatch thunk of UIHostingController.rootView.modify(v23);
  v16[2] = v8;
  *((_QWORD *)v16 + 3) = v10;
  *((_QWORD *)v16 + 4) = v12;
  *((_QWORD *)v16 + 5) = v14;
  v15(v23, 0);
  v17 = objc_msgSend(v1, "view");
  if (!v17)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v18 = v17;
  v19 = objc_msgSend(v2, "view");
  if (!v19)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v20 = v19;
  objc_msgSend(v18, "addSubview:", v19);

  v21 = objc_msgSend(v2, "view");
  if (v21)
  {
    v22 = v21;
    objc_msgSend(v21, "layoutIfNeeded");

    return;
  }
LABEL_9:
  __break(1u);
}

void sub_E1F364()
{
  char *v0;
  id v1;
  void *v2;
  uint64_t v3;
  double v4;
  double v5;
  double v6;
  double v7;
  id v8;
  void *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  char *v18;
  __n128 v19;
  char isEscapingClosureAtFileLocation;
  id v21;
  char v22[24];
  _QWORD aBlock[3];
  double v24;
  uint64_t (*v25)();
  double v26;
  double v27;
  objc_super v28;

  v28.receiver = v0;
  v28.super_class = (Class)type metadata accessor for NoticePresenter.UIRootViewController();
  objc_msgSendSuper2(&v28, "viewDidLayoutSubviews");
  v1 = objc_msgSend(v0, "view");
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, "bounds");

    v3 = (uint64_t)&v0[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_configuration];
    swift_beginAccess(&v0[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_configuration], v22, 0, 0);
    sub_E2054C(v3, (uint64_t)aBlock, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
    v4 = v24;
    v5 = *(double *)&v25;
    v6 = v26;
    v7 = v27;
    v8 = objc_msgSend(v0, "view");
    if (!v8)
    {
LABEL_7:
      __break(1u);
      JUMPOUT(0xE1F760);
    }
    v9 = v8;
    sub_64880((uint64_t)aBlock);
    objc_msgSend(v9, "effectiveUserInterfaceLayoutDirection");

    CGRect.inset(by:for:)(v4, v5, v6, v7);
    v11 = v10;
    v13 = v12;
    v14 = (void *)objc_opt_self(UIView);
    v15 = swift_allocObject(&unk_13C8300, 24, 7);
    *(_QWORD *)(v15 + 16) = v0;
    v16 = swift_allocObject(&unk_13C8328, 32, 7);
    *(_QWORD *)(v16 + 16) = sub_E20D00;
    *(_QWORD *)(v16 + 24) = v15;
    *(double *)&v25 = COERCE_DOUBLE(sub_62604);
    v26 = *(double *)&v16;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_3A1A94;
    v24 = COERCE_DOUBLE(&block_descriptor_352);
    v17 = _Block_copy(aBlock);
    v18 = v0;
    swift_retain();
    objc_msgSend(v14, "performWithoutAnimation:", v17, swift_release().n128_f64[0]);
    _Block_release(v17);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v16, "", 129, 462, 44, 1, v19);
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
    {
      dispatch thunk of UIHostingController.sizeThatFits(in:)(v11, v13);
      v21 = objc_msgSend(v18, "traitCollection");
      objc_msgSend(v21, "displayScale");

      CGRect.centeringAlong(axes:bounds:scale:)(3);
      __asm { BR              X10 }
    }
    __break(1u);
  }
  __break(1u);
  goto LABEL_7;
}

void sub_E1F774(uint64_t a1)
{
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;

  v1 = *(void **)(a1
                + OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_hostingController);
  v2 = objc_msgSend(v1, "view");
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, "setNeedsLayout");

    v4 = objc_msgSend(v1, "view");
    if (v4)
    {
      v5 = v4;
      objc_msgSend(v4, "layoutIfNeeded");

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_E1F870()
{
  return sub_1A9A14((uint64_t (*)(_QWORD))type metadata accessor for NoticePresenter.UIRootViewController);
}

uint64_t sub_E1F8C4()
{
  uint64_t result;

  result = swift_slowAlloc(1, -1);
  qword_1508A20 = result;
  return result;
}

char *UIWindowScene.noticePresenter.getter()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  _BYTE v10[24];
  uint64_t v11;
  _OWORD v12[2];

  v1 = v0;
  if (qword_15061C0 != -1)
    swift_once(&qword_15061C0, sub_E1F8C4);
  v2 = objc_getAssociatedObject(v0, (const void *)qword_1508A20);
  if (v2)
  {
    v3 = v2;
    _bridgeAnyObjectToAny(_:)(v12, v2);
    swift_unknownObjectRelease(v3);
  }
  else
  {
    memset(v12, 0, sizeof(v12));
  }
  sub_5C090((uint64_t)v12, (uint64_t)v10, &qword_1508840);
  if (!v11)
  {
    sub_56024((uint64_t)v10, &qword_1508840);
    goto LABEL_10;
  }
  v4 = type metadata accessor for NoticePresenter(0);
  if ((swift_dynamicCast(&v9, v10, (char *)&type metadata for Any + 8, v4, 6) & 1) == 0)
  {
LABEL_10:
    v6 = type metadata accessor for NoticePresenter(0);
    v5 = (char *)swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
    NoticePresenter.init()();
    objc_setAssociatedObject(v1, (const void *)qword_1508A20, v5, (char *)&dword_0 + 1);
    v7 = (uint64_t)&v5[OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration];
    swift_beginAccess(&v5[OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration], v12, 0, 0);
    sub_E2054C(v7, (uint64_t)v10, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
    swift_unknownObjectWeakAssign(v10, v1);
    NoticePresenter.uiKitConfiguration.setter((uint64_t)v10);
    return v5;
  }
  return (char *)v9;
}

char *UIView.noticePresenter.getter()
{
  void *v0;
  char *v1;
  char *v2;
  id v3;

  v1 = (char *)objc_msgSend(v0, "window");
  v2 = v1;
  if (v1)
  {
    v3 = objc_msgSend(v1, "windowScene");

    if (v3)
    {
      v2 = UIWindowScene.noticePresenter.getter();

    }
    else
    {
      return 0;
    }
  }
  return v2;
}

char *UIViewController.noticePresenter.getter()
{
  void *v0;
  char *result;
  char *v2;
  char *v3;
  char *v4;
  id v5;
  uint64_t v6;

  if (!objc_msgSend(v0, "isViewLoaded"))
  {
    v4 = (char *)objc_msgSend(v0, "parentViewController");
    if (v4)
    {
      v6 = UIViewController.noticePresenter.getter();

      return (char *)v6;
    }
    return v4;
  }
  result = (char *)objc_msgSend(v0, "view");
  if (result)
  {
    v2 = result;
    v3 = (char *)objc_msgSend(result, "window");
    v4 = v3;
    if (v3)
    {
      v5 = objc_msgSend(v3, "windowScene");

      if (v5)
      {
        v4 = UIWindowScene.noticePresenter.getter();

      }
      else
      {

        return 0;
      }
    }
    else
    {

    }
    return v4;
  }
  __break(1u);
  return result;
}

uint64_t _s11MusicCoreUI15NoticePresenterC18UIKitConfigurationV23__derived_struct_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  void *Strong;
  void *v5;
  void *v6;
  id v7;
  char v8;
  uint64_t v9;
  int v10;
  char v11;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(a1);
  v5 = (void *)swift_unknownObjectWeakLoadStrong(a2);
  v6 = v5;
  if (Strong)
  {
    if (v5)
    {
      sub_4E684(0, &qword_15087F8, UIWindowScene_ptr);
      v7 = Strong;
      v8 = static NSObject.== infix(_:_:)(v7, v6);

      if ((v8 & 1) != 0)
        goto LABEL_7;
    }
    else
    {

    }
LABEL_11:
    v11 = 0;
    return v11 & 1;
  }
  if (v5)
  {

    goto LABEL_11;
  }
LABEL_7:
  v9 = *(unsigned __int8 *)(a2 + 8);
  v10 = Edge.rawValue.getter(*(unsigned __int8 *)(a1 + 8));
  if (v10 != Edge.rawValue.getter(v9) || *(double *)(a1 + 16) != *(double *)(a2 + 16))
    goto LABEL_11;
  v11 = vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 24), *(float64x2_t *)(a2 + 24)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 40), *(float64x2_t *)(a2 + 40)))), 0xFuLL)));
  return v11 & 1;
}

char *sub_E1FCD0(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  char *v6;
  double *v7;
  uint64_t v8;
  char *v9;
  unsigned int v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  objc_class *v22;
  char *v23;
  void *v24;
  char *v25;
  uint64_t v27;
  objc_super v28;
  _QWORD v29[6];
  char v30[24];

  type metadata accessor for UIHostingControllerSizingOptions(0);
  __chkstk_darwin();
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v2[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController__noticePresenter] = a1;
  v7 = (double *)&v2[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_configuration];
  sub_E2054C(a2, (uint64_t)&v2[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_configuration], (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
  swift_beginAccess(v7, v30, 0, 0);
  v8 = *((unsigned __int8 *)v7 + 8);
  swift_retain_n(a1, 2);
  v9 = v2;
  v10 = Edge.Set.init(_:)(v8);
  v11 = _s7SwiftUI10EdgeInsetsV09MusicCoreB0E_6lengthAcA0C0O3SetV_0F8Graphics7CGFloatVtcfC_0(v10, v7[2]);
  v13 = v12;
  v15 = v14;
  v17 = v16;
  v18 = type metadata accessor for NoticePresenter(0);
  v19 = sub_4DD24(&qword_1506540, type metadata accessor for NoticePresenter, (uint64_t)&protocol conformance descriptor for NoticePresenter);
  v29[0] = ObservedObject.init(wrappedValue:)(a1, v18, v19);
  v29[1] = v20;
  *(double *)&v29[2] = v11;
  v29[3] = v13;
  v29[4] = v15;
  v29[5] = v17;
  v21 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_1508CE0));
  *(_QWORD *)&v9[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_hostingController] = UIHostingController.init(rootView:)(v29);

  v22 = (objc_class *)type metadata accessor for NoticePresenter.UIRootViewController();
  v28.receiver = v9;
  v28.super_class = v22;
  v23 = (char *)objc_msgSendSuper2(&v28, "initWithNibName:bundle:", 0, 0);
  v24 = *(void **)&v23[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_hostingController];
  v25 = v23;
  static UIHostingControllerSizingOptions.intrinsicContentSize.getter();
  dispatch thunk of UIHostingController.sizingOptions.setter(v6);
  objc_msgSend(v25, "addChildViewController:", v24);
  objc_msgSend(v24, "didMoveToParentViewController:", v25);

  sub_64880(a2);
  return v25;
}

void _s11MusicCoreUI15NoticePresenterC7present_12internalOnlyy0aB00D0V_SbtF_0(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(void ***, __n128);
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  char *v26;
  id v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  double v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  char *v56;
  char *v57;
  void (*v58)(char *, uint64_t);
  char *v59;
  uint64_t v60;
  uint64_t v61;
  __n128 v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  _QWORD *v69;
  char v70[24];
  char v71[24];
  void **aBlock;
  uint64_t v73;
  uint64_t (*v74)(uint64_t);
  void *v75;
  void (*v76)();
  uint64_t v77;
  char v78[32];

  v3 = v2;
  v6 = type metadata accessor for DispatchTime(0);
  v68 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v67 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v9 = (char *)&v63 - v8;
  v65 = type metadata accessor for DispatchWorkItemFlags(0);
  __chkstk_darwin();
  v66 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (int *)type metadata accessor for Notice(0);
  v12 = *((_QWORD *)v11 - 1);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin();
  v14 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) == 0 || *DeviceCapabilities.isInternalInstall.unsafeMutableAddressor() == 1)
  {
    v63 = v9;
    v64 = v6;
    v15 = v3 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_willPresentHandler;
    swift_beginAccess(v3 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_willPresentHandler, v78, 0, 0);
    v16 = *(void (**)(void ***, __n128))v15;
    if (*(_QWORD *)v15)
    {
      v17 = *(_QWORD *)(v15 + 8);
      v18 = v3 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration;
      swift_beginAccess(v3 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration, v71, 0, 0);
      sub_E2054C(v18, (uint64_t)&aBlock, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
      v19 = swift_retain();
      v16(&aBlock, v19);
      sub_5C198((uint64_t)v16, v17);
      NoticePresenter.uiKitConfiguration.setter((uint64_t)&aBlock);
    }
    v20 = v3 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration;
    swift_beginAccess(v3 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration, v70, 0, 0);
    sub_E2054C(v20, (uint64_t)&aBlock, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
    v21 = (void *)swift_unknownObjectWeakLoadStrong(&aBlock);
    sub_64880((uint64_t)&aBlock);
    if (v21)
    {
      if (!*(_QWORD *)(v3 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_passthroughWindow))
      {
        v22 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for NoticePresenter.PassthroughWindow()), "initWithWindowScene:", v21);
        objc_msgSend(v22, "setWindowLevel:", UIWindowLevelStatusBar);
        sub_E2054C(v20, (uint64_t)&aBlock, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
        v23 = objc_allocWithZone((Class)type metadata accessor for NoticePresenter.UIRootViewController());
        v24 = v22;
        swift_retain();
        v26 = sub_E1FCD0(v25, (uint64_t)&aBlock);
        objc_msgSend(v24, "setRootViewController:", v26, swift_release().n128_f64[0]);

        objc_msgSend(v24, "makeKeyAndVisible");
        objc_msgSend(v24, "resignKeyWindow");
        v27 = v24;
        sub_E1D734(v24);

        v21 = v27;
      }

    }
    v28 = *(_BYTE **)(v3 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_passthroughWindow);
    if (v28)
    {
      v28[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C117PassthroughWindow_canReceiveTouches] = 1;
      objc_msgSend(v28, "makeKeyAndVisible");
    }
    v29 = objc_opt_self(UIView);
    sub_5BDB8(a1, (uint64_t)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for Notice);
    v30 = *(unsigned __int8 *)(v12 + 80);
    v31 = (v30 + 24) & ~v30;
    v32 = swift_allocObject(&unk_13C8378, v31 + v13, v30 | 7);
    *(_QWORD *)(v32 + 16) = v3;
    sub_1A63E0((uint64_t)v14, v32 + v31);
    v33 = swift_allocObject(&unk_13C83A0, 32, 7);
    *(_QWORD *)(v33 + 16) = sub_E20E4C;
    *(_QWORD *)(v33 + 24) = v32;
    v76 = (void (*)())sub_AF944;
    v77 = v33;
    aBlock = _NSConcreteStackBlock;
    v73 = 1107296256;
    v74 = sub_3A1A94;
    v75 = &block_descriptor_29_9;
    v34 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    objc_msgSend((id)v29, "performWithoutAnimation:", v34, swift_release().n128_f64[0]);
    _Block_release(v34);
    LOBYTE(v29) = swift_isEscapingClosureAtFileLocation(v33, "", 129, 163, 40, 1, v35);
    swift_release();
    if ((v29 & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      v36 = a1 + v11[9];
      if ((*(_BYTE *)(v36 + 8) & 1) == 0)
      {
        v37 = *(_QWORD *)v36;
        v38 = objc_msgSend(objc_allocWithZone((Class)UINotificationFeedbackGenerator), "init");
        objc_msgSend(v38, "notificationOccurred:", v37);

      }
      if (*(_BYTE *)(a1 + v11[10]) == 1)
      {
        v76 = sub_E20E8C;
        v77 = v3;
        aBlock = _NSConcreteStackBlock;
        v73 = 1107296256;
        v74 = sub_42D124;
        v75 = &block_descriptor_32_5;
        v39 = _Block_copy(&aBlock);
        v69 = _swiftEmptyArrayStorage;
        v40 = sub_4DD24((unint64_t *)&unk_1508810, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
        swift_retain();
        v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506E28);
        v42 = sub_5C150((unint64_t *)&qword_1508820, &qword_1506E28, (uint64_t)&protocol conformance descriptor for [A]);
        v43 = v66;
        dispatch thunk of SetAlgebra.init<A>(_:)(&v69, v41, v42, v65, v40);
        v44 = type metadata accessor for DispatchWorkItem(0);
        swift_allocObject(v44, *(unsigned int *)(v44 + 48), *(unsigned __int16 *)(v44 + 52));
        v45 = DispatchWorkItem.init(flags:block:)(v43, v39);
        swift_release();
        if (*(_QWORD *)(a1 + v11[8]))
          v46 = 3.0;
        else
          v46 = 1.5;
        v47 = sub_4E684(0, (unint64_t *)&qword_15076C0, OS_dispatch_queue_ptr);
        v55 = (void *)static OS_dispatch_queue.main.getter(v47, v48, v49, v50, v51, v52, v53, v54);
        v56 = v67;
        static DispatchTime.now()(v55);
        v57 = v63;
        + infix(_:_:)(v56, v46);
        v58 = *(void (**)(char *, uint64_t))(v68 + 8);
        v59 = v56;
        v60 = v64;
        v58(v59, v64);
        OS_dispatch_queue.asyncAfter(deadline:execute:)(v57, v45);

        v58(v57, v60);
        v61 = *(_QWORD *)(v3 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_dismissalWorkItem);
        *(_QWORD *)(v3 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_dismissalWorkItem) = v45;
        swift_retain_n(v45, 2);
        if (v61)
        {
          dispatch thunk of DispatchWorkItem.cancel()(v62);
          swift_release();
        }
        swift_release();
        swift_release_n(v45, 2);
      }
      else
      {
        swift_release();
      }
    }
  }
}

uint64_t sub_E2054C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  __int128 v5;

  a3(a2, a1);
  *(_BYTE *)(a2 + 8) = *(_BYTE *)(a1 + 8);
  *(_QWORD *)(a2 + 16) = *(_QWORD *)(a1 + 16);
  v5 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 40) = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(a2 + 24) = v5;
  return a2;
}

uint64_t sub_E2059C(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectWeakCopyAssign(a2, a1);
  *(_BYTE *)(a2 + 8) = *(_BYTE *)(a1 + 8);
  *(_QWORD *)(a2 + 16) = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a2 + 24) = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a2 + 48) = *(_QWORD *)(a1 + 48);
  return a2;
}

uint64_t type metadata accessor for NoticePresenter.UIRootViewController()
{
  return objc_opt_self(_TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController);
}

uint64_t type metadata accessor for NoticePresenter(uint64_t a1)
{
  uint64_t result;

  result = qword_1508A98;
  if (!qword_1508A98)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for NoticePresenter);
  return result;
}

unint64_t sub_E20658()
{
  unint64_t result;

  result = qword_1508A58;
  if (!qword_1508A58)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for NoticePresentingModifier, &type metadata for NoticePresentingModifier);
    atomic_store(result, (unint64_t *)&qword_1508A58);
  }
  return result;
}

uint64_t sub_E2069C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of NoticePresentingModifier.body(content:)>>, 1);
}

uint64_t sub_E206B4()
{
  return type metadata accessor for NoticePresenter(0);
}

void sub_E206BC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  sub_E20748(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = "\b";
    v4[2] = &unk_10AD5D0;
    v4[3] = &unk_10AD5E8;
    v4[4] = "\b";
    swift_updateClassMetadata2(a1, 256, 5, v4, a1 + 80);
  }
}

void sub_E20748(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1508AA8)
  {
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1508A30);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1508AA8);
  }
}

uint64_t initializeWithCopy for NoticePresentingModifier(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  *(_QWORD *)(a1 + 24) = a2[3];
  swift_retain(v3);
  return a1;
}

uint64_t *assignWithCopy for NoticePresentingModifier(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a1;
  v5 = *a2;
  *a1 = *a2;
  swift_retain(v5);
  swift_release(v4);
  a1[1] = a2[1];
  *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
  a1[3] = a2[3];
  return a1;
}

uint64_t *assignWithTake for NoticePresentingModifier(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  a1[1] = a2[1];
  *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
  a1[3] = a2[3];
  return a1;
}

ValueMetadata *type metadata accessor for NoticePresentingModifier()
{
  return &type metadata for NoticePresentingModifier;
}

double initializeWithCopy for NoticePresenter.UIKitConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double result;

  *(_QWORD *)&result = sub_E208FC(a1, a2, a3, (uint64_t (*)(void))&_swift_unknownObjectWeakCopyInit).n128_u64[0];
  return result;
}

double assignWithCopy for NoticePresenter.UIKitConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  double result;

  v3 = swift_unknownObjectWeakCopyAssign(a1, a2);
  *(_BYTE *)(v3 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(v3 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v3 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(v3 + 40) = *(_QWORD *)(a2 + 40);
  result = *(double *)(a2 + 48);
  *(double *)(v3 + 48) = result;
  return result;
}

double initializeWithTake for NoticePresenter.UIKitConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double result;

  *(_QWORD *)&result = sub_E208FC(a1, a2, a3, (uint64_t (*)(void))&_swift_unknownObjectWeakTakeInit).n128_u64[0];
  return result;
}

__n128 sub_E208FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v5;
  __n128 result;

  v5 = a4();
  *(_BYTE *)(v5 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(v5 + 24) = *(_OWORD *)(a2 + 24);
  result = *(__n128 *)(a2 + 40);
  *(__n128 *)(v5 + 40) = result;
  return result;
}

double assignWithTake for NoticePresenter.UIKitConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;
  double result;

  v3 = swift_unknownObjectWeakTakeAssign(a1, a2);
  *(_BYTE *)(v3 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v3 + 32) = v4;
  result = *(double *)(a2 + 48);
  *(double *)(v3 + 48) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for NoticePresenter.UIKitConfiguration(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 56))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = v3 >= 4;
  v5 = v3 - 4;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for NoticePresenter.UIKitConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 56) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = a2 + 3;
  }
  return result;
}

ValueMetadata *type metadata accessor for NoticePresenter.UIKitConfiguration()
{
  return &type metadata for NoticePresenter.UIKitConfiguration;
}

uint64_t type metadata accessor for NoticePresenter.PassthroughWindow()
{
  return objc_opt_self(_TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C117PassthroughWindow);
}

uint64_t sub_E20A38(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = type metadata accessor for ModifiedContent(255, *a1, &type metadata for NoticePresentingModifier);
  v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1508C68);
  v3 = type metadata accessor for ModifiedContent(255, v1, v2);
  sub_E20658();
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
  sub_5C150(&qword_1508C70, &qword_1508C68, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v3);
}

unint64_t sub_E20AF0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1508C78;
  if (!qword_1508C78)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1508A68);
    sub_5C150(&qword_1508C80, &qword_1508A60, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    sub_5C150(&qword_1508C88, &qword_1508C90, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1508C78);
  }
  return result;
}

uint64_t initializeWithCopy for NoticePresentationView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  swift_retain(v3);
  return a1;
}

_QWORD *assignWithCopy for NoticePresentationView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_retain(v4);
  swift_release(v5);
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  return a1;
}

uint64_t assignWithTake for NoticePresentationView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_release(v5);
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  return a1;
}

ValueMetadata *type metadata accessor for NoticePresentationView()
{
  return &type metadata for NoticePresentationView;
}

uint64_t sub_E20C78(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1211684, 1);
}

uint64_t sub_E20C94@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_E1E93C(v1 + 32, a1);
}

uint64_t objectdestroyTm_31()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 80, 7);
}

_BYTE *sub_E20CD0(_BYTE *a1)
{
  uint64_t v1;

  return sub_E1EA40(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + 32);
}

uint64_t sub_E20CDC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_E20D00()
{
  uint64_t v0;

  sub_E1F774(*(_QWORD *)(v0 + 16));
}

uint64_t sub_E20D08()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t block_copy_helper_346(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double block_destroy_helper_346(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_E20D30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v10;

  v1 = type metadata accessor for Notice(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release();
  swift_bridgeObjectRelease();
  v6 = v0 + v4 + *(int *)(v1 + 20);
  v7 = type metadata accessor for Notice.Thumbnail(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v6, v7);
    if (EnumCaseMultiPayload == 1)
    {
      v10 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v6, v10);
    }
    else if (!EnumCaseMultiPayload)
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + v4 + *(int *)(v1 + 32)))
    swift_release();
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

void sub_E20E4C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Notice(0) - 8) + 80);
  sub_E1D09C(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_E20E7C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_E20E8C()
{
  NoticePresenter.dismiss(_:)(1);
}

unint64_t sub_E20E98()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1508CE8;
  if (!qword_1508CE8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1508CF0);
    sub_5C150(&qword_1508CF8, (uint64_t *)&unk_150CE50, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1508CE8);
  }
  return result;
}

uint64_t sub_E20FE4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;
  int *v7;

  v1 = (_QWORD *)v0[2];
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  v4 = *(int **)(v3 + 24);
  v7 = (int *)((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc(v4[1]);
  v0[11] = v5;
  *v5 = v0;
  v5[1] = sub_E21064;
  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t))v7)(v0[4], v2, v3);
}

uint64_t sub_E21064()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 88));
  return swift_task_switch(sub_E210B0, *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80));
}

uint64_t sub_E210B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = swift_release();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v2 + 48))(v3, 1, v1, v4) == 1)
  {
    sub_DBC8E0(*(_QWORD *)(v0 + 32));
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 48);
    v5 = *(_QWORD *)(v0 + 56);
    v7 = *(_QWORD *)(v0 + 40);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 32))(v5, *(_QWORD *)(v0 + 32), v7);
    PresentedViewState.present(_:animated:)(v5, 1);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  }
  v8 = *(_QWORD *)(v0 + 32);
  swift_task_dealloc(*(_QWORD *)(v0 + 56));
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_E21164(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1508D04);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_50F8C;
  return PresentedViewState<A>.present(_:)(a1);
}

uint64_t sub_E211B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t OpaqueTypeConformance2;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t KeyPath;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned __int8 v46;
  char v47[24];

  v37 = a2;
  v40 = a1;
  v43 = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508D28);
  v38 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508D30);
  __chkstk_darwin();
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508D38);
  v39 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin();
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_15068B0);
  __chkstk_darwin();
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for URL(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin();
  v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a3 + *(_QWORD *)(*(_QWORD *)a3 + 96);
  swift_beginAccess(v18, v47, 0, 0);
  sub_E21710(v18, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_DBC8E0((uint64_t)v13);
    v19 = v38;
    v20 = *(void (**)(char *, uint64_t, uint64_t))(v38 + 16);
    v20(v7, v40, v5);
    v20(v9, (uint64_t)v7, v5);
    swift_storeEnumTagMultiPayload(v9, v41, 1);
    v21 = sub_5C150(&qword_1508D40, &qword_1508D28, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    v44 = v5;
    v45 = v21;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v44, &opaque type descriptor for <<opaque return type of View.sharingPicker(isPresented:item:subject:message:)>>, 1);
    _ConditionalContent<>.init(storage:)(v9, v42, v5, OpaqueTypeConformance2, v21);
    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v7, v5);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508D08);
    v25 = sub_5C150(&qword_1508D10, &qword_1508D08, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
    v26 = ObservedObject.projectedValue.getter(v37, a3, v24, v25);
    KeyPath = swift_getKeyPath(&unk_10AD7A8);
    ObservedObject.Wrapper.subscript.getter(&v44, KeyPath, v26, v25);
    swift_release();
    swift_release();
    v28 = v44;
    v29 = v45;
    v30 = v46;
    v31 = sub_5C150(&qword_1508D40, &qword_1508D28, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    View.sharingPicker(isPresented:item:subject:message:)(v28, v29, v30, v17, 0, 0, 0, 0, 0, 0, 0, 0, v5, v31);
    swift_release();
    v32 = swift_release();
    v33 = v39;
    v34 = v42;
    (*(void (**)(char *, char *, uint64_t, __n128))(v39 + 16))(v9, v11, v42, v32);
    swift_storeEnumTagMultiPayload(v9, v41, 0);
    v44 = v5;
    v45 = v31;
    v35 = swift_getOpaqueTypeConformance2(&v44, &opaque type descriptor for <<opaque return type of View.sharingPicker(isPresented:item:subject:message:)>>, 1);
    _ConditionalContent<>.init(storage:)(v9, v34, v5, v35, v31);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v11, v34);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
}

uint64_t sub_E2159C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_E211B4(a1, *v2, v2[1], a2);
}

double View.shareSheetPresenting(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double result;
  _QWORD v10[2];

  swift_retain();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508D08);
  v7 = sub_5C150(&qword_1508D10, &qword_1508D08, (uint64_t)&protocol conformance descriptor for PresentedViewState<A>);
  v10[0] = ObservedObject.init(wrappedValue:)(a1, v6, v7);
  v10[1] = v8;
  View.modifier<A>(_:)(v10, a2, &type metadata for ShareSheetModifier, a3);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_E21658(_QWORD *a1)
{
  uint64_t v1;

  v1 = type metadata accessor for ModifiedContent(255, *a1, &type metadata for ShareSheetModifier);
  sub_E216AC();
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
}

unint64_t sub_E216AC()
{
  unint64_t result;

  result = qword_1508D20;
  if (!qword_1508D20)
  {
    result = swift_getWitnessTable(&unk_10AD754, &type metadata for ShareSheetModifier);
    atomic_store(result, (unint64_t *)&qword_1508D20);
  }
  return result;
}

ValueMetadata *type metadata accessor for ShareSheetModifier()
{
  return &type metadata for ShareSheetModifier;
}

uint64_t sub_E21700(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1211724, 1);
}

uint64_t sub_E21710(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_15068B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_E21758@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = PresentedViewState.isPresented.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_E21784(char *a1)
{
  return PresentedViewState.isPresented.setter(*a1);
}

unint64_t sub_E217AC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1508D48;
  if (!qword_1508D48)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1508D50);
    v2[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1508D28);
    v2[1] = sub_5C150(&qword_1508D40, &qword_1508D28, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.sharingPicker(isPresented:item:subject:message:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1508D48);
  }
  return result;
}

uint64_t Optional<A>.fontTextStyle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = enum case for Font.TextStyle.body(_:);
  v3 = type metadata accessor for Font.TextStyle(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_E218A0@<X0>(uint64_t a1@<X8>)
{
  return Optional<A>.fontTextStyle.getter(a1);
}

uint64_t sub_E218B4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, a2);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t MusicUIContentConfiguration.makeContentView()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v12;

  v5 = *(_QWORD *)(a1 - 8);
  __chkstk_darwin(a1);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v8, a1, &protocol requirements base descriptor for MusicUIContentConfiguration, &associated type descriptor for MusicUIContentConfiguration.View);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, a1);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(a2, a1, AssociatedTypeWitness, &protocol requirements base descriptor for MusicUIContentConfiguration, &associated conformance descriptor for MusicUIContentConfiguration.MusicUIContentConfiguration.View: MusicUIContentView);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(AssociatedConformanceWitness + 32))(v7, AssociatedTypeWitness, AssociatedConformanceWitness);
}

uint64_t MusicUIContentConfiguration.updated(for:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(a2, v2, a1);
}

uint64_t MusicUIContentView.configuration.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t AssociatedTypeWitness;

  v6 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 40);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, a2, a1, &protocol requirements base descriptor for MusicUIContentView, &associated type descriptor for MusicUIContentView.Configuration);
  a3[3] = AssociatedTypeWitness;
  a3[4] = *(_QWORD *)(swift_getAssociatedConformanceWitness(a2, a1, AssociatedTypeWitness, &protocol requirements base descriptor for MusicUIContentView, &associated conformance descriptor for MusicUIContentView.MusicUIContentView.Configuration: MusicUIContentConfiguration)+ 16);
  __swift_allocate_boxed_opaque_existential_1Tm(a3);
  return v6(a1, a2);
}

uint64_t MusicUIContentView.configuration.setter(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE v12[40];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, a3, a2, &protocol requirements base descriptor for MusicUIContentView, &associated type descriptor for MusicUIContentView.Configuration);
  __chkstk_darwin(AssociatedTypeWitness);
  v8 = &v12[-v7 - 8];
  sub_55D1C((uint64_t)a1, (uint64_t)v12);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506E20);
  swift_dynamicCast(v8, v12, v9, AssociatedTypeWitness, 7);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(a3 + 48))(v8, a2, a3);
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

void (*MusicUIContentView.configuration.modify(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t *a1, char a2)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = malloc(0x68uLL);
  *a1 = v7;
  v7[11] = a3;
  v7[12] = v3;
  v7[10] = a2;
  MusicUIContentView.configuration.getter(a2, a3, v7);
  return sub_E21BA8;
}

void sub_E21BA8(uint64_t *a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = (_QWORD *)*a1;
  if ((a2 & 1) != 0)
  {
    v3 = v2[11];
    v4 = v2[10];
    sub_55D1C(*a1, (uint64_t)(v2 + 5));
    MusicUIContentView.configuration.setter(v2 + 5, v4, v3);
    __swift_destroy_boxed_opaque_existential_1(v2);
  }
  else
  {
    MusicUIContentView.configuration.setter((_QWORD *)*a1, v2[10], v2[11]);
  }
  free(v2);
}

uint64_t ArtistRazzmatazzView.init(artist:navigationHandler:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD v17[2];

  v8 = type metadata accessor for ArtistRazzmatazzView(0);
  v9 = (_QWORD *)(a4 + *(int *)(v8 + 24));
  v16 = _swiftEmptyArrayStorage;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1507590);
  State.init(wrappedValue:)(v17, &v16, v10);
  v11 = v17[1];
  *v9 = v17[0];
  v9[1] = v11;
  v17[0] = 0x4052C00000000000;
  v12 = sub_E21D94();
  ScaledMetric.init(wrappedValue:)(v17, &type metadata for CGFloat, v12);
  v13 = type metadata accessor for Artist(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a4, a1, v13);
  v15 = (_QWORD *)(a4 + *(int *)(v8 + 20));
  *v15 = a2;
  v15[1] = a3;
  return result;
}

uint64_t type metadata accessor for ArtistRazzmatazzView(uint64_t a1)
{
  return sub_6345C(a1, (uint64_t *)&unk_1508E00, (uint64_t)&nominal type descriptor for ArtistRazzmatazzView);
}

uint64_t property wrapper backing initializer of ArtistRazzmatazzView.razzmatazz(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1507590);
  State.init(wrappedValue:)(&v4, &v3, v1);
  return v4;
}

uint64_t property wrapper backing initializer of ArtistRazzmatazzView.rowHeight(double a1)
{
  unint64_t v1;
  double v3;

  v3 = a1;
  v1 = sub_E21D94();
  return ScaledMetric.init(wrappedValue:)(&v3, &type metadata for CGFloat, v1);
}

unint64_t sub_E21D94()
{
  unint64_t result;

  result = qword_1508D68;
  if (!qword_1508D68)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CGFloat, &type metadata for CGFloat);
    atomic_store(result, (unint64_t *)&qword_1508D68);
  }
  return result;
}

uint64_t ArtistRazzmatazzView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(_QWORD *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v41 = a1;
  v42 = type metadata accessor for TaskPriority(0);
  v40 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin();
  v39 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = *(_QWORD *)(type metadata accessor for ArtistRazzmatazzView(0) - 8);
  __chkstk_darwin();
  v36 = v3;
  v37 = (uint64_t)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1508D70);
  v4 = __chkstk_darwin();
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for GridItem.Size(0, v4);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin();
  v10 = (uint64_t *)((char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508D78);
  v12 = *(_QWORD *)(type metadata accessor for GridItem(0) - 8);
  v13 = swift_allocObject(v11, ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ 2 * *(_QWORD *)(v12 + 72), *(unsigned __int8 *)(v12 + 80) | 7);
  *(_OWORD *)(v13 + 16) = xmmword_105F890;
  v38 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1508D80);
  ScaledMetric.wrappedValue.getter(&v43);
  *v10 = v43;
  v14 = enum case for GridItem.Size.fixed(_:);
  v15 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v8 + 104);
  v15(v10, enum case for GridItem.Size.fixed(_:), v7);
  GridItem.init(_:spacing:alignment:)(v10, 0, 1, 0, 0, 1);
  ScaledMetric.wrappedValue.getter(&v43);
  *v10 = v43;
  v15(v10, v14, v7);
  v16 = GridItem.init(_:spacing:alignment:)(v10, 0, 1, 0, 0, 1);
  v17 = static HorizontalAlignment.leading.getter(v16);
  if (qword_15061D0 != -1)
    swift_once(&qword_15061D0, sub_E246D0);
  v18 = qword_1508D60;
  *(_QWORD *)v6 = v17;
  *((_QWORD *)v6 + 1) = v18;
  v6[16] = 0;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508D88);
  v20 = v38;
  sub_E22160(v13, v38, (uint64_t)&v6[*(int *)(v19 + 44)]);
  swift_bridgeObjectRelease();
  v21 = v37;
  sub_5BDB8(v20, v37, type metadata accessor for ArtistRazzmatazzView);
  v22 = *(unsigned __int8 *)(v35 + 80);
  v23 = (v22 + 16) & ~v22;
  v24 = swift_allocObject(&unk_13C85F0, v23 + v36, v22 | 7);
  sub_5C04C(v21, v24 + v23, type metadata accessor for ArtistRazzmatazzView);
  v25 = v39;
  static TaskPriority.userInitiated.getter(v26);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508DA0);
  v28 = v41;
  v29 = (char *)(v41 + *(int *)(v27 + 36));
  v30 = type metadata accessor for _TaskModifier(0);
  v31 = v40;
  v32 = v42;
  (*(void (**)(char *, char *, uint64_t))(v40 + 16))(&v29[*(int *)(v30 + 20)], v25, v42);
  *(_QWORD *)v29 = &unk_1508D98;
  *((_QWORD *)v29 + 1) = v24;
  sub_5C238((uint64_t)v6, v28, &qword_1508D70);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v25, v32);
  return sub_56024((uint64_t)v6, &qword_1508D70);
}

void sub_E22160(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  double v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  unsigned int v36;
  __n128 v37;
  unsigned int v38;
  uint64_t v39;
  int v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __int128 v81;
  __int128 v82;
  uint64_t v83;
  uint64_t v84;
  __int128 v85;
  __int128 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __int128 v91;
  uint64_t v92;
  char v93[16];
  uint64_t v94;
  uint64_t v95;
  _OWORD v96[5];
  uint64_t v97;
  char v98;

  *(_QWORD *)&v91 = a1;
  *(_QWORD *)&v81 = type metadata accessor for ScrollIndicatorVisibility(0);
  v80 = *(_QWORD *)(v81 - 8);
  __chkstk_darwin();
  v6 = (char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509010);
  v77 = *(_QWORD *)(v78 - 8);
  __chkstk_darwin();
  v8 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509018);
  *(_QWORD *)&v85 = *(_QWORD *)(v86 - 8);
  __chkstk_darwin();
  *(_QWORD *)&v82 = (char *)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509020);
  __chkstk_darwin();
  v11 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509028);
  __chkstk_darwin();
  v92 = (uint64_t)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v84 = (uint64_t)&v74 - v13;
  v14.n128_f64[0] = __chkstk_darwin();
  v90 = (uint64_t)&v74 - v15;
  v16 = static Font.title2.getter(v14);
  v17 = Text.font(_:)(v16, 0x6174616D7A7A6152, 0xEA00000000007A7ALL, 0, _swiftEmptyArrayStorage);
  v19 = v18;
  v21 = v20;
  v23 = v22;
  v24 = swift_release();
  v25 = static Font.Weight.semibold.getter(v24);
  v88 = Text.fontWeight(_:)(*(_QWORD *)&v25, 0, v17, v19, v21 & 1, v23);
  v87 = v26;
  v75 = v27;
  v89 = v28;
  sub_AF8E8(v17, v19, v21 & 1);
  swift_bridgeObjectRelease();
  v76 = static Edge.Set.horizontal.getter(v29);
  v31 = static Axis.Set.horizontal.getter(v30);
  v94 = v91;
  v95 = a2;
  *(_QWORD *)&v91 = a2;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509030);
  v33 = sub_184F98(&qword_1509038, &qword_1509030, (void (*)(void))sub_E25D58);
  v34 = ScrollView.init(_:showsIndicators:content:)(v31, 1, sub_E25D50, v93, v32, v33);
  v35 = static ScrollIndicatorVisibility.hidden.getter(v34);
  v36 = static Axis.Set.vertical.getter(v35);
  v38 = static Axis.Set.horizontal.getter(v37);
  v39 = Axis.Set.init(rawValue:)(0);
  v40 = Axis.Set.init(rawValue:)(v39);
  if (Axis.Set.init(rawValue:)(v40 & v36) != v36)
    v39 = Axis.Set.init(rawValue:)(v39 | v36);
  v41 = Axis.Set.init(rawValue:)(v39);
  if (Axis.Set.init(rawValue:)(v41 & v38) != v38)
    v39 = Axis.Set.init(rawValue:)(v39 | v38);
  v42 = v82;
  v43 = sub_5C150(&qword_1509060, &qword_1509010, (uint64_t)&protocol conformance descriptor for ScrollView<A>);
  v44 = v78;
  View.scrollIndicators(_:axes:)(v6, v39, v78, v43);
  (*(void (**)(char *, _QWORD))(v80 + 8))(v6, v81);
  v45 = (*(uint64_t (**)(char *, uint64_t))(v77 + 8))(v8, v44);
  v46 = static Edge.Set.bottom.getter(v45);
  v47 = v46;
  if (qword_15061C8 != -1)
    v46 = swift_once(&qword_15061C8, sub_E246C0);
  v48 = v75 & 1;
  v49 = EdgeInsets.init(_all:)(v46, *(double *)&qword_1508D58);
  v51 = v50;
  v53 = v52;
  v55 = v54;
  v56 = v85;
  v57 = v86;
  (*(void (**)(char *, uint64_t, _QWORD))(v85 + 16))(v11, v42, v86);
  v58 = &v11[*(int *)(v79 + 36)];
  *v58 = v47;
  *((double *)v58 + 1) = v49;
  *((_QWORD *)v58 + 2) = v51;
  *((_QWORD *)v58 + 3) = v53;
  *((_QWORD *)v58 + 4) = v55;
  v58[40] = 0;
  v59 = (*(uint64_t (**)(uint64_t, uint64_t))(v56 + 8))(v42, v57);
  v60 = static Alignment.center.getter(v59);
  v62 = v61;
  sub_E22D28(v91, (uint64_t)v96);
  v91 = v96[0];
  v86 = v96[1];
  v85 = v96[2];
  v82 = v96[3];
  v81 = v96[4];
  v63 = v97;
  v64 = v98;
  v65 = v84;
  sub_5C238((uint64_t)v11, v84, &qword_1509020);
  v66 = v65 + *(int *)(v83 + 36);
  v67 = v86;
  *(_OWORD *)v66 = v91;
  *(_OWORD *)(v66 + 16) = v67;
  v68 = v82;
  *(_OWORD *)(v66 + 32) = v85;
  *(_OWORD *)(v66 + 48) = v68;
  *(_OWORD *)(v66 + 64) = v81;
  *(_QWORD *)(v66 + 80) = v63;
  *(_BYTE *)(v66 + 88) = v64;
  *(_QWORD *)(v66 + 96) = v60;
  *(_QWORD *)(v66 + 104) = v62;
  sub_56024((uint64_t)v11, &qword_1509020);
  v69 = v90;
  sub_5C090(v65, v90, &qword_1509028);
  v70 = v92;
  sub_5C238(v69, v92, &qword_1509028);
  v71 = v88;
  v72 = v87;
  *(_QWORD *)a3 = v88;
  *(_QWORD *)(a3 + 8) = v72;
  *(_BYTE *)(a3 + 16) = v48;
  *(_QWORD *)(a3 + 24) = v89;
  *(_BYTE *)(a3 + 32) = v76;
  *(_OWORD *)(a3 + 40) = 0u;
  *(_OWORD *)(a3 + 56) = 0u;
  *(_BYTE *)(a3 + 72) = 1;
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509068);
  sub_5C238(v70, a3 + *(int *)(v73 + 48), &qword_1509028);
  sub_AF8D8(v71, v72, v48);
  swift_bridgeObjectRetain();
  sub_56024(v69, &qword_1509028);
  sub_56024(v70, &qword_1509028);
  sub_AF8E8(v71, v72, v48);
  swift_bridgeObjectRelease();
}

uint64_t sub_E227E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _OWORD v35[3];

  v32 = a2;
  v34 = a3;
  v4 = type metadata accessor for PinnedScrollableViews(0);
  __chkstk_darwin();
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509058);
  v31 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin();
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509048);
  __chkstk_darwin();
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  v12 = static VerticalAlignment.center.getter(v11);
  if (qword_15061C8 != -1)
    swift_once(&qword_15061C8, sub_E246C0);
  v13 = qword_1508D58;
  __chkstk_darwin();
  LODWORD(v35[0]) = 0;
  v14 = sub_4DD24(&qword_1509070, (uint64_t (*)(uint64_t))&type metadata accessor for PinnedScrollableViews, (uint64_t)&protocol conformance descriptor for PinnedScrollableViews);
  dispatch thunk of OptionSet.init(rawValue:)(v35, v4, v14);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509078);
  v16 = sub_E25DEC();
  LazyHGrid.init(rows:alignment:spacing:pinnedViews:content:)(a1, v12, v13, 0, v6, sub_E25DE4, &v29 - 4, v15, v16);
  type metadata accessor for ArtistRazzmatazzView(0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1508D80);
  v17 = ScaledMetric.wrappedValue.getter(v35);
  v18 = (*(double *)v35 + *(double *)&qword_1508D58) * (double)*(uint64_t *)(a1 + 16);
  v19 = static Alignment.center.getter(v17);
  _FrameLayout.init(width:height:alignment:)(v35, 0, 1, *(_QWORD *)&v18, 0, v19, v20);
  v21 = v31;
  v22 = v33;
  (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v10, v8, v33);
  v23 = &v10[*(int *)(v30 + 36)];
  v24 = v35[1];
  *(_OWORD *)v23 = v35[0];
  *((_OWORD *)v23 + 1) = v24;
  *((_OWORD *)v23 + 2) = v35[2];
  v25 = (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v8, v22);
  LOBYTE(v22) = static Edge.Set.horizontal.getter(v25);
  v26 = v34;
  sub_5C238((uint64_t)v10, v34, &qword_1509048);
  v27 = v26 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1509030) + 36);
  *(_BYTE *)v27 = v22;
  *(_OWORD *)(v27 + 8) = 0u;
  *(_OWORD *)(v27 + 24) = 0u;
  *(_BYTE *)(v27 + 40) = 1;
  return sub_56024((uint64_t)v10, &qword_1509048);
}

uint64_t sub_E22AD8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v20[3];

  v2 = *(_QWORD *)(type metadata accessor for ArtistRazzmatazzView(0) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  __chkstk_darwin();
  v5 = (uint64_t *)(a1 + *(int *)(v4 + 24));
  v7 = *v5;
  v6 = v5[1];
  v20[1] = v7;
  v20[2] = v6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509008);
  State.wrappedValue.getter(v20, v8);
  KeyPath = swift_getKeyPath(&unk_10ADAE8);
  sub_5BDB8(a1, (uint64_t)&v20[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ArtistRazzmatazzView);
  v10 = *(unsigned __int8 *)(v2 + 80);
  v11 = (v10 + 16) & ~v10;
  v12 = swift_allocObject(&unk_13C8640, v11 + v3, v10 | 7);
  sub_5C04C((uint64_t)&v20[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v12 + v11, type metadata accessor for ArtistRazzmatazzView);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1507590);
  v14 = type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell(0);
  v15 = sub_5C150(&qword_1509090, &qword_1507590, (uint64_t)&protocol conformance descriptor for [A]);
  v16 = sub_4DD24(&qword_1509098, type metadata accessor for Razzmatazz, (uint64_t)&protocol conformance descriptor for Razzmatazz);
  v17 = sub_4DD24(&qword_1509088, type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell, (uint64_t)&unk_10AD950);
  return ForEach<>.init(_:id:content:)(v20, KeyPath, sub_E25F38, v12, v13, v14, v15, v16, v17);
}

uint64_t sub_E22C80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  _QWORD *v10;
  uint64_t v11;

  sub_5BDB8(a1, a3, type metadata accessor for Razzmatazz);
  v5 = (uint64_t *)(a2 + *(int *)(type metadata accessor for ArtistRazzmatazzView(0) + 20));
  v7 = *v5;
  v6 = v5[1];
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1508D80);
  ScaledMetric.wrappedValue.getter(&v11);
  v8 = v11;
  result = type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell(0);
  v10 = (_QWORD *)(a3 + *(int *)(result + 20));
  *v10 = v7;
  v10[1] = v6;
  *(_QWORD *)(a3 + *(int *)(result + 24)) = v8;
  return result;
}

void sub_E22D28(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  int64x2_t v15;
  uint64_t v16;
  Swift::String v17;
  Swift::String v18;
  __n128 v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t KeyPath;
  unsigned __int8 v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for ArtistRazzmatazzView(0) + 24));
  v5 = *v3;
  v4 = v3[1];
  v26 = v5;
  v27 = v4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509008);
  State.wrappedValue.getter(&v28, v6);
  v7 = *(_QWORD *)(v28 + 16);
  swift_bridgeObjectRelease();
  v8 = 0uLL;
  if (v7)
  {
    v9 = 0;
    v10 = 0;
    v11 = 0;
    v12 = 0;
    v13 = 0;
    v14 = 0;
    v15 = 0uLL;
  }
  else
  {
    _StringGuts.grow(_:)(25);
    swift_bridgeObjectRelease();
    HIDWORD(v26) = -805306368;
    v27 = 0x800000000110DB80;
    v17._countAndFlagsBits = Artist.name.getter(v16);
    String.append(_:)(v17);
    swift_bridgeObjectRelease();
    v18._countAndFlagsBits = 46;
    v18._object = (void *)0xE100000000000000;
    String.append(_:)(v18);
    LODWORD(v26) = static HierarchicalShapeStyle.secondary.getter(v19);
    v9 = Text.foregroundStyle<A>(_:)(&v26, 0xD000000000000016, 0x800000000110DB80, 0, _swiftEmptyArrayStorage, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
    v10 = v20;
    v22 = v21;
    v12 = v23;
    swift_bridgeObjectRelease();
    v11 = v22 & 1;
    KeyPath = swift_getKeyPath(&unk_10ADAB0);
    v25 = static Edge.Set.horizontal.getter(KeyPath);
    v8 = 0uLL;
    v13 = v25;
    v14 = 1;
    v15 = vdupq_n_s64(1uLL);
    v15.i64[0] = KeyPath;
  }
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v10;
  *(_QWORD *)(a2 + 16) = v11;
  *(_QWORD *)(a2 + 24) = v12;
  *(int64x2_t *)(a2 + 32) = v15;
  *(_QWORD *)(a2 + 48) = v13;
  *(_OWORD *)(a2 + 56) = v8;
  *(_OWORD *)(a2 + 72) = v8;
  *(_BYTE *)(a2 + 88) = v14;
}

uint64_t sub_E22EC0(uint64_t a1)
{
  _QWORD *v1;
  __n128 v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v1[6] = a1;
  v1[7] = type metadata accessor for MainActor(0);
  v1[8] = static MainActor.shared.getter(v3);
  v6 = (uint64_t (*)(uint64_t))((char *)&dword_15095C8 + dword_15095C8);
  v4 = (_QWORD *)swift_task_alloc(unk_15095CC);
  v1[9] = v4;
  *v4 = v1;
  v4[1] = sub_E22F40;
  return v6(a1);
}

uint64_t sub_E22F40(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  *(_QWORD *)(*(_QWORD *)v1 + 80) = a1;
  swift_task_dealloc(v2);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  return swift_task_switch(sub_E22FB8, v4, v5);
}

uint64_t sub_E22FB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 48);
  swift_release();
  *(_QWORD *)(v0 + 32) = v1;
  KeyPath = swift_getKeyPath(&unk_10ADA90);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1507590);
  v5 = sub_5C150((unint64_t *)&qword_1508FF8, &qword_1507590, (uint64_t)&protocol conformance descriptor for [A]);
  v6 = sub_4DD24(&qword_1509000, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  v7 = Sequence.sorted<A>(by:comparator:)(KeyPath, (uint64_t)sub_E2FED4, 0, v4, v5, v6);
  swift_release();
  swift_bridgeObjectRelease();
  v8 = (uint64_t *)(v2 + *(int *)(type metadata accessor for ArtistRazzmatazzView(0) + 24));
  v10 = *v8;
  v9 = v8[1];
  *(_QWORD *)(v0 + 16) = v10;
  *(_QWORD *)(v0 + 24) = v9;
  *(_QWORD *)(v0 + 40) = v7;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509008);
  State.wrappedValue.setter(v0 + 40, v11);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_E230D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  __int128 v35;
  id v36;
  uint64_t v37;
  char v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  _OWORD v48[3];

  v2 = v1;
  v47 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1508EF8);
  __chkstk_darwin();
  v4 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508F00);
  __chkstk_darwin();
  v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508F08);
  __chkstk_darwin();
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508F10);
  v12 = __chkstk_darwin();
  v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_15061C8 != -1)
    swift_once(&qword_15061C8, sub_E246C0);
  v15 = qword_1508D58;
  *(_QWORD *)v4 = static VerticalAlignment.center.getter(v12);
  *((_QWORD *)v4 + 1) = v15;
  v4[16] = 0;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508F18);
  v17 = sub_E23460(v2, (uint64_t)&v4[*(int *)(v16 + 44)]);
  if (qword_15061D0 != -1)
    v17 = swift_once(&qword_15061D0, sub_E246D0);
  v18 = *(double *)&qword_1508D60;
  v19 = static Edge.Set.all.getter(v17);
  v20 = v19;
  v21 = EdgeInsets.init(_all:)(v19, v18);
  v23 = v22;
  v25 = v24;
  v27 = v26;
  sub_5C238((uint64_t)v4, (uint64_t)v7, &qword_1508EF8);
  v28 = &v7[*(int *)(v5 + 36)];
  *v28 = v20;
  *((double *)v28 + 1) = v21;
  *((_QWORD *)v28 + 2) = v23;
  *((_QWORD *)v28 + 3) = v25;
  *((_QWORD *)v28 + 4) = v27;
  v28[40] = 0;
  sub_56024((uint64_t)v4, &qword_1508EF8);
  v29 = type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell(0);
  v30 = *(double *)(v2 + *(int *)(v29 + 24)) * 4.0;
  v31 = *(_QWORD *)(v2 + *(int *)(v29 + 24));
  v32 = static Alignment.center.getter(v29);
  _FrameLayout.init(width:height:alignment:)(v48, *(_QWORD *)&v30, 0, v31, 0, v32, v33);
  sub_5C238((uint64_t)v7, (uint64_t)v10, &qword_1508F00);
  v34 = &v10[*(int *)(v8 + 36)];
  v35 = v48[1];
  *(_OWORD *)v34 = v48[0];
  *((_OWORD *)v34 + 1) = v35;
  *((_OWORD *)v34 + 2) = v48[2];
  sub_56024((uint64_t)v7, &qword_1508F00);
  v36 = objc_msgSend((id)objc_opt_self(UIColor), "secondarySystemBackgroundColor");
  v37 = Color.init(_:)(v36);
  v38 = static Edge.Set.all.getter(v37);
  sub_5C238((uint64_t)v10, (uint64_t)v14, &qword_1508F08);
  v39 = &v14[*(int *)(v11 + 36)];
  *(_QWORD *)v39 = v37;
  v39[8] = v38;
  sub_56024((uint64_t)v10, &qword_1508F08);
  if (qword_15061A0 != -1)
    swift_once(&qword_15061A0, sub_E1B62C);
  v40 = static Corner.large;
  v41 = unk_1583DC0;
  v42 = byte_1583DC8;
  v43 = v47;
  sub_5C238((uint64_t)v14, v47, &qword_1508F10);
  v44 = v43 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1508F20) + 36);
  *(_QWORD *)v44 = v40;
  *(_QWORD *)(v44 + 8) = v41;
  *(_BYTE *)(v44 + 16) = v42;
  return sub_56024((uint64_t)v14, &qword_1508F10);
}

uint64_t sub_E23460@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  __int128 v31;
  id v32;
  uint64_t v33;
  char v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char *v48;
  __n128 v49;
  __n128 v50;
  uint64_t v51;
  uint64_t KeyPath;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _OWORD v72[3];

  v71 = a2;
  v3 = type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell(0);
  v61 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v62 = v4;
  v64 = (uint64_t)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508F28);
  v68 = *(_QWORD *)(v5 - 8);
  v69 = v5;
  __chkstk_darwin();
  v67 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508F30);
  __chkstk_darwin();
  v8 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v70 = (uint64_t)&v61 - v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1508F38);
  __chkstk_darwin();
  v11 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508F40);
  __chkstk_darwin();
  v14 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508F48);
  __chkstk_darwin();
  v17 = (char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508F50);
  __chkstk_darwin();
  v20 = (char *)&v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __chkstk_darwin();
  v63 = (uint64_t)&v61 - v22;
  *(_QWORD *)v11 = static HorizontalAlignment.center.getter(v21);
  *((_QWORD *)v11 + 1) = 0;
  v11[16] = 1;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508F58);
  v24 = sub_E23A28(a1, (uint64_t)&v11[*(int *)(v23 + 44)]);
  v25 = *(int *)(v3 + 24);
  v65 = a1;
  v26 = *(double *)(a1 + v25);
  if (qword_15061D0 != -1)
    v24 = swift_once(&qword_15061D0, sub_E246D0);
  v27 = v26 - (*(double *)&qword_1508D60 + *(double *)&qword_1508D60);
  v28 = static Alignment.center.getter(v24);
  _FrameLayout.init(width:height:alignment:)(v72, *(_QWORD *)&v27, 0, *(_QWORD *)&v27, 0, v28, v29);
  sub_5C238((uint64_t)v11, (uint64_t)v14, &qword_1508F38);
  v30 = &v14[*(int *)(v12 + 36)];
  v31 = v72[1];
  *(_OWORD *)v30 = v72[0];
  *((_OWORD *)v30 + 1) = v31;
  *((_OWORD *)v30 + 2) = v72[2];
  sub_56024((uint64_t)v11, &qword_1508F38);
  v32 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
  v33 = Color.init(_:)(v32);
  v34 = static Edge.Set.all.getter(v33);
  sub_5C238((uint64_t)v14, (uint64_t)v17, &qword_1508F40);
  v35 = &v17[*(int *)(v15 + 36)];
  *(_QWORD *)v35 = v33;
  v35[8] = v34;
  sub_56024((uint64_t)v14, &qword_1508F40);
  if (qword_1506198 != -1)
    swift_once(&qword_1506198, sub_E1B540);
  v36 = static Corner.medium;
  v37 = *(_QWORD *)algn_1583DA8;
  v38 = byte_1583DB0;
  sub_5C238((uint64_t)v17, (uint64_t)v20, &qword_1508F48);
  v39 = &v20[*(int *)(v18 + 36)];
  *(_QWORD *)v39 = v36;
  *((_QWORD *)v39 + 1) = v37;
  v39[16] = v38;
  sub_56024((uint64_t)v17, &qword_1508F48);
  v40 = v63;
  sub_5C090((uint64_t)v20, v63, &qword_1508F50);
  v41 = v64;
  v42 = v65;
  sub_5BDB8(v65, v64, type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell);
  v43 = *(unsigned __int8 *)(v61 + 80);
  v44 = (v43 + 16) & ~v43;
  v45 = swift_allocObject(&unk_13C8618, v44 + v62, v43 | 7);
  sub_5C04C(v41, v45 + v44, type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell);
  __chkstk_darwin();
  *(&v61 - 2) = v42;
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508F60);
  v47 = sub_E25B84();
  v48 = v67;
  Button.init(action:label:)(sub_E25B34, v45, sub_E25B7C, &v61 - 4, v46, v47, v49);
  v51 = static Color.primary.getter(v50);
  KeyPath = swift_getKeyPath(&unk_10AD9A0);
  v54 = v68;
  v53 = v69;
  (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v8, v48, v69);
  v55 = (uint64_t *)&v8[*(int *)(v66 + 36)];
  *v55 = KeyPath;
  v55[1] = v51;
  (*(void (**)(char *, uint64_t))(v54 + 8))(v48, v53);
  v56 = v70;
  sub_5C090((uint64_t)v8, v70, &qword_1508F30);
  sub_5C238(v40, (uint64_t)v20, &qword_1508F50);
  sub_5C238(v56, (uint64_t)v8, &qword_1508F30);
  v57 = v71;
  sub_5C238((uint64_t)v20, v71, &qword_1508F50);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508F90);
  sub_5C238((uint64_t)v8, v57 + *(int *)(v58 + 48), &qword_1508F30);
  v59 = v57 + *(int *)(v58 + 64);
  *(_QWORD *)v59 = 0;
  *(_BYTE *)(v59 + 8) = 1;
  sub_56024(v56, &qword_1508F30);
  sub_56024(v40, &qword_1508F50);
  sub_56024((uint64_t)v8, &qword_1508F30);
  return sub_56024((uint64_t)v20, &qword_1508F50);
}

uint64_t sub_E23A28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t KeyPath;
  uint64_t *v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  __n128 v53;
  double v54;
  unint64_t v55;
  char *v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  char *v75;
  uint64_t v76;
  void (*v77)(char *, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(char *, uint64_t);
  char *v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  void (*v109)(char *);
  uint64_t (*v110)(char *);
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;

  v121 = a2;
  v3 = type metadata accessor for Date.FormatStyle.Symbol.Day(0);
  v119 = *(_QWORD *)(v3 - 8);
  v120 = v3;
  __chkstk_darwin();
  v118 = (char *)&v96 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508F98);
  __chkstk_darwin();
  v115 = (uint64_t *)((char *)&v96 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1508FA0);
  v6 = __chkstk_darwin();
  v106 = (char *)&v96 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = type metadata accessor for Date.FormatStyle.Symbol.Month(0, v6);
  v104 = *(_QWORD *)(v105 - 8);
  __chkstk_darwin();
  v9 = (char *)&v96 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = type metadata accessor for TimeZone(0);
  v10 = *(_QWORD *)(v125 - 8);
  v11 = __chkstk_darwin();
  v13 = (char *)&v96 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = type metadata accessor for Date.FormatStyle(0, v11);
  v103 = *(_QWORD *)(v123 - 8);
  __chkstk_darwin();
  v15 = (char *)&v96 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v122 = (char *)&v96 - v16;
  v17 = type metadata accessor for Date(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin();
  v20 = (char *)&v96 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508FA8);
  __chkstk_darwin();
  v22 = (char *)&v96 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508FB0);
  __chkstk_darwin();
  v99 = (uint64_t)&v96 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508FB8);
  v114 = *(_QWORD *)(v116 - 8);
  __chkstk_darwin();
  v101 = (char *)&v96 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508FC0);
  __chkstk_darwin();
  v124 = (uint64_t)&v96 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v112 = (uint64_t)&v96 - v26;
  v27 = type metadata accessor for Razzmatazz(0);
  v28 = a1 + *(int *)(v27 + 24);
  v110 = *(uint64_t (**)(char *))(v18 + 16);
  v111 = v28;
  v97 = v17;
  v29 = v110(v20);
  static ParseableFormatStyle<>.dateTime.getter(v29);
  v30 = a1 + *(int *)(v27 + 32);
  v108 = v30 + *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v109 = *(void (**)(char *))(v10 + 16);
  v107 = v13;
  v109(v13);
  v31 = Date.FormatStyle.timeZone.setter(v13);
  static Date.FormatStyle.Symbol.Month.abbreviated.getter(v31);
  v32 = v122;
  Date.FormatStyle.month(_:)(v9);
  (*(void (**)(char *, uint64_t))(v104 + 8))(v9, v105);
  v33 = *(void (**)(char *, uint64_t))(v103 + 8);
  v34 = v123;
  v33(v15, v123);
  v100 = v33;
  v105 = sub_4DD24(&qword_1508FC8, (uint64_t (*)(uint64_t))&type metadata accessor for Date.FormatStyle, (uint64_t)&protocol conformance descriptor for Date.FormatStyle);
  v96 = v20;
  Date.formatted<A>(_:)(&v128, v32, v34, v105);
  v33(v32, v34);
  v104 = *(_QWORD *)(v18 + 8);
  ((void (*)(char *, uint64_t))v104)(v20, v17);
  v126 = v128;
  v127 = v129;
  v103 = sub_DD0BF8();
  v35 = Text.init<A>(_:)(&v126, &type metadata for String, v103);
  v37 = v36;
  v39 = v38;
  LOBYTE(v17) = v40 & 1;
  v41 = enum case for Text.Case.uppercase(_:);
  v42 = type metadata accessor for Text.Case(0);
  v43 = *(_QWORD *)(v42 - 8);
  v44 = (uint64_t)v106;
  (*(void (**)(char *, uint64_t, uint64_t))(v43 + 104))(v106, v41, v42);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v43 + 56))(v44, 0, 1, v42);
  KeyPath = swift_getKeyPath(&unk_10ADA00);
  v46 = v115;
  sub_5C238(v44, (uint64_t)v115 + *(int *)(v117 + 28), &qword_1508FA0);
  *v46 = KeyPath;
  sub_5C238((uint64_t)v46, (uint64_t)&v22[*(int *)(v98 + 36)], &qword_1508F98);
  *(_QWORD *)v22 = v35;
  *((_QWORD *)v22 + 1) = v37;
  v22[16] = v17;
  *((_QWORD *)v22 + 3) = v39;
  sub_AF8D8(v35, v37, v17);
  swift_bridgeObjectRetain();
  sub_56024((uint64_t)v46, &qword_1508F98);
  sub_56024(v44, &qword_1508FA0);
  sub_AF8E8(v35, v37, v17);
  v47 = swift_bridgeObjectRelease();
  v48 = static Font.caption.getter(v47);
  v49 = swift_getKeyPath(&unk_10ADA30);
  v50 = v99;
  sub_5C238((uint64_t)v22, v99, &qword_1508FA8);
  v51 = v102;
  v52 = (uint64_t *)(v50 + *(int *)(v102 + 36));
  *v52 = v49;
  v52[1] = v48;
  sub_56024((uint64_t)v22, &qword_1508FA8);
  v54 = static Font.Weight.semibold.getter(v53);
  v55 = sub_E25C40();
  v56 = v101;
  View.fontWeight(_:)(*(_QWORD *)&v54, 0, v51, v55);
  sub_56024(v50, &qword_1508FB0);
  v57 = objc_msgSend((id)objc_opt_self(UIColor), "systemRedColor");
  v58 = Color.init(_:)(v57);
  v59 = swift_getKeyPath(&unk_10ADA60);
  v60 = v114;
  v61 = v124;
  v62 = v56;
  v63 = v56;
  v64 = v116;
  (*(void (**)(uint64_t, char *, uint64_t))(v114 + 16))(v124, v62, v116);
  v65 = (uint64_t *)(v61 + *(int *)(v113 + 36));
  *v65 = v59;
  v65[1] = v58;
  (*(void (**)(char *, uint64_t))(v60 + 8))(v63, v64);
  v66 = v61;
  v67 = v112;
  sub_5C090(v66, v112, &qword_1508FC0);
  v68 = v96;
  v69 = v97;
  v70 = ((uint64_t (*)(char *, uint64_t, uint64_t))v110)(v96, v111, v97);
  static ParseableFormatStyle<>.dateTime.getter(v70);
  v71 = v107;
  ((void (*)(char *, uint64_t, uint64_t))v109)(v107, v108, v125);
  v72 = Date.FormatStyle.timeZone.setter(v71);
  v73 = v118;
  static Date.FormatStyle.Symbol.Day.defaultDigits.getter(v72);
  v74 = v122;
  Date.FormatStyle.day(_:)(v73);
  (*(void (**)(char *, uint64_t))(v119 + 8))(v73, v120);
  v75 = v15;
  v76 = v123;
  v77 = v100;
  v100(v75, v123);
  Date.formatted<A>(_:)(&v128, v74, v76, v105);
  v77(v74, v76);
  ((void (*)(char *, uint64_t))v104)(v68, v69);
  v126 = v128;
  v127 = v129;
  v78 = Text.init<A>(_:)(&v126, &type metadata for String, v103);
  v80 = v79;
  v82 = v81;
  v84 = v83 & 1;
  v85 = static Font.title3.getter(v78);
  v86 = Text.font(_:)(v85, v78, v80, v84, v82);
  v88 = v87;
  LOBYTE(v41) = v89;
  v91 = v90;
  swift_release();
  sub_AF8E8(v78, v80, v84);
  swift_bridgeObjectRelease();
  v92 = v124;
  sub_5C238(v67, v124, &qword_1508FC0);
  v93 = v121;
  sub_5C238(v92, v121, &qword_1508FC0);
  v94 = v93 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1508FF0) + 48);
  *(_QWORD *)v94 = v86;
  *(_QWORD *)(v94 + 8) = v88;
  *(_BYTE *)(v94 + 16) = v41 & 1;
  *(_QWORD *)(v94 + 24) = v91;
  sub_AF8D8(v86, v88, v41 & 1);
  swift_bridgeObjectRetain();
  sub_56024(v67, &qword_1508FC0);
  sub_AF8E8(v86, v88, v41 & 1);
  swift_bridgeObjectRelease();
  return sub_56024(v92, &qword_1508FC0);
}

__n128 sub_E24310@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unsigned __int8 v7;
  unint64_t v8;
  unsigned __int8 v9;
  unint64_t v10;
  uint64_t KeyPath;
  __n128 result;
  __n128 v13;
  _QWORD v14[2];
  unsigned __int8 v15;
  __n128 v16;
  unint64_t v17;
  unsigned __int8 v18;
  unint64_t v19;

  v4 = static HorizontalAlignment.leading.getter(a1);
  sub_E243C0(a1, (uint64_t)v14);
  v5 = v14[0];
  v6 = v14[1];
  v7 = v15;
  v13 = v16;
  v8 = v17;
  v9 = v18;
  v10 = v19;
  KeyPath = swift_getKeyPath(&unk_10AD9D0);
  a2->n128_u64[0] = v4;
  a2->n128_u64[1] = 0x4000000000000000;
  a2[1].n128_u8[0] = 0;
  a2[1].n128_u64[1] = v5;
  a2[2].n128_u64[0] = v6;
  a2[2].n128_u8[8] = v7;
  result = v13;
  a2[3] = v13;
  a2[4].n128_u64[0] = v8;
  a2[4].n128_u8[8] = v9;
  a2[5].n128_u64[0] = v10;
  a2[5].n128_u64[1] = KeyPath;
  a2[6].n128_u64[0] = 1;
  a2[6].n128_u8[8] = 0;
  return result;
}

double sub_E243C0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  __n128 v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  double result;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  uint64_t v59;

  v58 = Razzmatazz.shortName.getter();
  v59 = v3;
  v4 = sub_DD0BF8();
  v5 = Text.init<A>(_:)(&v58, &type metadata for String, v4);
  v7 = v6;
  v9 = v8;
  v11 = v10 & 1;
  v13 = static Font.Weight.semibold.getter(v12);
  v14 = Text.fontWeight(_:)(*(_QWORD *)&v13, 0, v5, v7, v11, v9);
  v54 = v15;
  v55 = v14;
  v17 = v16;
  v56 = v18;
  sub_AF8E8(v5, v7, v11);
  swift_bridgeObjectRelease();
  v19 = (_QWORD *)(a1 + *(int *)(type metadata accessor for Razzmatazz(0) + 32));
  v21 = v19[6];
  v20 = v19[7];
  v22 = v19[9];
  if (!v22)
    goto LABEL_5;
  v23 = v19[8];
  swift_bridgeObjectRetain();
  if (String.count.getter(v23, v22) != 2)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    swift_bridgeObjectRetain();
    goto LABEL_6;
  }
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_15076A0);
  v25 = swift_allocObject(v24, 64, 7);
  *(_OWORD *)(v25 + 16) = xmmword_105F890;
  *(_QWORD *)(v25 + 32) = v21;
  *(_QWORD *)(v25 + 40) = v20;
  *(_QWORD *)(v25 + 48) = v23;
  *(_QWORD *)(v25 + 56) = v22;
  v58 = v25;
  swift_bridgeObjectRetain();
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508318);
  v27 = sub_5C150((unint64_t *)&qword_1508320, &qword_1508318, (uint64_t)&protocol conformance descriptor for [A]);
  v21 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v26, v27);
  v20 = v28;
  swift_bridgeObjectRelease();
LABEL_6:
  v29 = v17 & 1;
  v58 = v21;
  v59 = v20;
  v30 = Text.init<A>(_:)(&v58, &type metadata for String, v4);
  v32 = v31;
  v34 = v33;
  v36 = v35 & 1;
  LODWORD(v58) = static HierarchicalShapeStyle.secondary.getter(v37);
  v38 = Text.foregroundStyle<A>(_:)(&v58, v30, v32, v36, v34, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v40 = v39;
  v42 = v41;
  v44 = v43 & 1;
  sub_AF8E8(v30, v32, v36);
  swift_bridgeObjectRelease();
  v46 = static Font.subheadline.getter(v45);
  v47 = Text.font(_:)(v46, v38, v40, v44, v42);
  v49 = v48;
  LOBYTE(v36) = v50;
  v52 = v51;
  swift_release();
  sub_AF8E8(v38, v40, v44);
  swift_bridgeObjectRelease();
  LOBYTE(v58) = v29;
  *(_QWORD *)a2 = v55;
  *(_QWORD *)(a2 + 8) = v54;
  *(_BYTE *)(a2 + 16) = v29;
  *(_QWORD *)(a2 + 24) = v56;
  *(_QWORD *)(a2 + 32) = v47;
  *(_QWORD *)(a2 + 40) = v49;
  *(_BYTE *)(a2 + 48) = v36 & 1;
  *(_QWORD *)(a2 + 56) = v52;
  sub_AF8D8(v55, v54, v29);
  swift_bridgeObjectRetain();
  sub_AF8D8(v47, v49, v36 & 1);
  swift_bridgeObjectRetain();
  sub_AF8E8(v47, v49, v36 & 1);
  swift_bridgeObjectRelease();
  sub_AF8E8(v55, v54, v58);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

void sub_E246C0()
{
  qword_1508D58 = 0x4020000000000000;
}

void sub_E246D0()
{
  qword_1508D60 = 0x4028000000000000;
}

uint64_t sub_E246E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ArtistRazzmatazzView(0) - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = (_QWORD *)swift_task_alloc(dword_1508D94);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_50F8C;
  return sub_E22EC0(v3);
}

uint64_t sub_E24748(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of ArtistRazzmatazzView.body>>, 1);
}

uint64_t *initializeBufferWithCopyOfBuffer for ArtistRazzmatazzView(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for Artist(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (uint64_t *)((char *)a1 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508D80);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for ArtistRazzmatazzView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  v5 = a1 + *(int *)(a2 + 28);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508D80);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t initializeWithCopy for ArtistRazzmatazzView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508D80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for ArtistRazzmatazzView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_retain();
  swift_release();
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
  swift_retain();
  swift_release();
  v14 = a3[7];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508D80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v15, v16, v17);
  return a1;
}

uint64_t initializeWithTake for ArtistRazzmatazzView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[7];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508D80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  return a1;
}

uint64_t assignWithTake for ArtistRazzmatazzView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  swift_release();
  v7 = a3[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  swift_release();
  v10 = a3[7];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508D80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArtistRazzmatazzView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_E24BE8);
}

uint64_t sub_E24BE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = type metadata accessor for Artist(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508D80);
    v10 = a1 + *(int *)(a3 + 28);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for ArtistRazzmatazzView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_E24CA0);
}

uint64_t sub_E24CA0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = type metadata accessor for Artist(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
      return result;
    }
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508D80);
    v12 = a1 + *(int *)(a4 + 28);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_E24D48(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[4];

  v2 = type metadata accessor for Artist(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = (char *)&value witness table for () + 64;
    v6[2] = &unk_10AD928;
    sub_E24DE4(319);
    if (v5 <= 0x3F)
    {
      v6[3] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 4, v6, a1 + 16);
    }
  }
}

void sub_E24DE4(uint64_t a1)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1508E10)
  {
    v2 = sub_E21D94();
    v3 = type metadata accessor for ScaledMetric(a1, &type metadata for CGFloat, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1508E10);
  }
}

unint64_t sub_E24E40()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1508E48;
  if (!qword_1508E48)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1508DA0);
    sub_5C150(&qword_1508E50, &qword_1508D70, (uint64_t)&protocol conformance descriptor for VStack<A>);
    sub_4DD24(&qword_1508E58, (uint64_t (*)(uint64_t))&type metadata accessor for _TaskModifier, (uint64_t)&protocol conformance descriptor for _TaskModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1508E48);
  }
  return result;
}

uint64_t *sub_E24EDC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  id v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  char *v38;
  char *v39;
  void *v40;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v36 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v36 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    v8 = (int *)type metadata accessor for Razzmatazz(0);
    v9 = v8[6];
    v10 = (char *)v4 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for Date(0);
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    v14 = v8[7];
    v15 = (char *)v4 + v14;
    v16 = (char *)a2 + v14;
    v17 = type metadata accessor for Artist(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    v18 = v8[8];
    v19 = (uint64_t *)((char *)v4 + v18);
    v20 = (char *)a2 + v18;
    v21 = *(uint64_t *)((char *)a2 + v18 + 8);
    *v19 = *(uint64_t *)((char *)a2 + v18);
    v19[1] = v21;
    v22 = *(uint64_t *)((char *)a2 + v18 + 24);
    v19[2] = *(uint64_t *)((char *)a2 + v18 + 16);
    v19[3] = v22;
    v23 = *(uint64_t *)((char *)a2 + v18 + 40);
    v19[4] = *(uint64_t *)((char *)a2 + v18 + 32);
    v19[5] = v23;
    v24 = *(uint64_t *)((char *)a2 + v18 + 56);
    v19[6] = *(uint64_t *)((char *)a2 + v18 + 48);
    v19[7] = v24;
    v25 = *(uint64_t *)((char *)a2 + v18 + 72);
    v19[8] = *(uint64_t *)((char *)a2 + v18 + 64);
    v19[9] = v25;
    v26 = *(uint64_t *)((char *)a2 + v18 + 88);
    v19[10] = *(uint64_t *)((char *)a2 + v18 + 80);
    v19[11] = v26;
    v40 = *(void **)((char *)a2 + v18 + 96);
    v19[12] = v40;
    v27 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
    v38 = &v20[v27];
    v39 = (char *)v19 + v27;
    v28 = type metadata accessor for TimeZone(0);
    v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v30 = v40;
    v29(v39, v38, v28);
    v31 = *(int *)(a3 + 20);
    v32 = *(int *)(a3 + 24);
    v33 = (uint64_t *)((char *)v4 + v31);
    v34 = (uint64_t *)((char *)a2 + v31);
    v35 = v34[1];
    *v33 = *v34;
    v33[1] = v35;
    *(uint64_t *)((char *)v4 + v32) = *(uint64_t *)((char *)a2 + v32);
  }
  swift_retain();
  return v4;
}

double sub_E250B8(uint64_t a1)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = (int *)type metadata accessor for Razzmatazz(0);
  v3 = a1 + v2[6];
  v4 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = a1 + v2[7];
  v6 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + v2[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v8 = v7 + *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v9 = type metadata accessor for TimeZone(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

_QWORD *sub_E251BC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  id v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  char *v36;
  char *v37;
  void *v38;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v7 = (int *)type metadata accessor for Razzmatazz(0);
  v8 = v7[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for Date(0);
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  v13 = v7[7];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  v17 = v7[8];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (char *)a2 + v17;
  v20 = *(_QWORD *)((char *)a2 + v17 + 8);
  *v18 = *(_QWORD *)((char *)a2 + v17);
  v18[1] = v20;
  v21 = *(_QWORD *)((char *)a2 + v17 + 24);
  v18[2] = *(_QWORD *)((char *)a2 + v17 + 16);
  v18[3] = v21;
  v22 = *(_QWORD *)((char *)a2 + v17 + 40);
  v18[4] = *(_QWORD *)((char *)a2 + v17 + 32);
  v18[5] = v22;
  v23 = *(_QWORD *)((char *)a2 + v17 + 56);
  v18[6] = *(_QWORD *)((char *)a2 + v17 + 48);
  v18[7] = v23;
  v24 = *(_QWORD *)((char *)a2 + v17 + 72);
  v18[8] = *(_QWORD *)((char *)a2 + v17 + 64);
  v18[9] = v24;
  v25 = *(_QWORD *)((char *)a2 + v17 + 88);
  v18[10] = *(_QWORD *)((char *)a2 + v17 + 80);
  v18[11] = v25;
  v38 = *(void **)((char *)a2 + v17 + 96);
  v18[12] = v38;
  v26 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v36 = &v19[v26];
  v37 = (char *)v18 + v26;
  v27 = type metadata accessor for TimeZone(0);
  v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v29 = v38;
  v28(v37, v36, v27);
  v30 = *(int *)(a3 + 20);
  v31 = *(int *)(a3 + 24);
  v32 = (_QWORD *)((char *)a1 + v30);
  v33 = (_QWORD *)((char *)a2 + v30);
  v34 = v33[1];
  *v32 = *v33;
  v32[1] = v34;
  *(_QWORD *)((char *)a1 + v31) = *(_QWORD *)((char *)a2 + v31);
  swift_retain();
  return a1;
}

_QWORD *sub_E25370(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (int *)type metadata accessor for Razzmatazz(0);
  v7 = v6[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = v6[7];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = v6[8];
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  *v16 = *(_QWORD *)((char *)a2 + v15);
  v16[1] = *(_QWORD *)((char *)a2 + v15 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[2] = v17[2];
  v16[3] = v17[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[4] = v17[4];
  v16[5] = v17[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[6] = v17[6];
  v16[7] = v17[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[8] = v17[8];
  v16[9] = v17[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[10] = v17[10];
  v16[11] = v17[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = (void *)v17[12];
  v19 = (void *)v16[12];
  v16[12] = v18;
  v20 = v18;

  v21 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v22 = (char *)v16 + v21;
  v23 = (char *)v17 + v21;
  v24 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 24))(v22, v23, v24);
  v25 = *(int *)(a3 + 20);
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (_QWORD *)((char *)a2 + v25);
  v28 = v27[1];
  *v26 = *v27;
  v26[1] = v28;
  swift_retain();
  swift_release();
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_OWORD *sub_E25590(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = (int *)type metadata accessor for Razzmatazz(0);
  v8 = v7[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = v7[7];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  v16 = v7[8];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = *(_OWORD *)((char *)a2 + v16 + 16);
  *(_OWORD *)v17 = *(_OWORD *)((char *)a2 + v16);
  *((_OWORD *)v17 + 1) = v19;
  v20 = *(_OWORD *)((char *)a2 + v16 + 48);
  *((_OWORD *)v17 + 2) = *(_OWORD *)((char *)a2 + v16 + 32);
  *((_OWORD *)v17 + 3) = v20;
  v21 = *(_OWORD *)((char *)a2 + v16 + 80);
  *((_OWORD *)v17 + 4) = *(_OWORD *)((char *)a2 + v16 + 64);
  *((_OWORD *)v17 + 5) = v21;
  *((_QWORD *)v17 + 12) = *(_QWORD *)((char *)a2 + v16 + 96);
  v22 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v23 = &v17[v22];
  v24 = &v18[v22];
  v25 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
  v26 = *(int *)(a3 + 24);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
  *(_QWORD *)((char *)a1 + v26) = *(_QWORD *)((char *)a2 + v26);
  return a1;
}

_QWORD *sub_E256A8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = (int *)type metadata accessor for Razzmatazz(0);
  v9 = v8[6];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  v13 = v8[7];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  v17 = v8[8];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  v20 = *(_QWORD *)((char *)a2 + v17 + 8);
  *v18 = *(_QWORD *)((char *)a2 + v17);
  v18[1] = v20;
  swift_bridgeObjectRelease();
  v21 = v19[3];
  v18[2] = v19[2];
  v18[3] = v21;
  swift_bridgeObjectRelease();
  v22 = v19[5];
  v18[4] = v19[4];
  v18[5] = v22;
  swift_bridgeObjectRelease();
  v23 = v19[7];
  v18[6] = v19[6];
  v18[7] = v23;
  swift_bridgeObjectRelease();
  v24 = v19[9];
  v18[8] = v19[8];
  v18[9] = v24;
  swift_bridgeObjectRelease();
  v25 = v19[11];
  v18[10] = v19[10];
  v18[11] = v25;
  swift_bridgeObjectRelease();
  v26 = (void *)v18[12];
  v18[12] = v19[12];

  v27 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v28 = (char *)v18 + v27;
  v29 = (char *)v19 + v27;
  v30 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
  swift_release();
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_E25838(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_E25844);
}

uint64_t sub_E25844(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for Razzmatazz(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_E258C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_E258CC);
}

uint64_t sub_E258CC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Razzmatazz(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell(uint64_t a1)
{
  return sub_6345C(a1, qword_1508EB8, (uint64_t)&nominal type descriptor for ArtistRazzmatazzView.RazzmatazzCell);
}

uint64_t sub_E25958(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for Razzmatazz(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for () + 64;
    v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_E259DC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_12118E8, 1);
}

uint64_t sub_E259EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = v3 + *(_QWORD *)(v1 + 64);
  v5 = v2 | 7;
  v6 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7 = (int *)type metadata accessor for Razzmatazz(0);
  v8 = v6 + v7[6];
  v9 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = v6 + v7[7];
  v11 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  v12 = v6 + v7[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v13 = v12 + *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v14 = type metadata accessor for TimeZone(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  swift_release();
  return swift_deallocObject(v0, v4, v5);
}

uint64_t sub_E25B34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return (*(uint64_t (**)(uint64_t))(v0 + ((v2 + 16) & ~v2) + *(int *)(v1 + 20)))(v0 + ((v2 + 16) & ~v2));
}

double sub_E25B7C@<D0>(__n128 *a1@<X8>)
{
  uint64_t v1;
  double result;

  *(_QWORD *)&result = sub_E24310(*(_QWORD *)(v1 + 16), a1).n128_u64[0];
  return result;
}

unint64_t sub_E25B84()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1508F68;
  if (!qword_1508F68)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1508F60);
    sub_5C150(&qword_1508F70, &qword_1508F78, (uint64_t)&protocol conformance descriptor for VStack<A>);
    sub_5C150((unint64_t *)&qword_1508F80, &qword_1508F88, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1508F68);
  }
  return result;
}

unint64_t sub_E25C40()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1508FD0;
  if (!qword_1508FD0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1508FB0);
    sub_E25CC4();
    sub_5C150((unint64_t *)&unk_150BD10, &qword_1508FE8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1508FD0);
  }
  return result;
}

unint64_t sub_E25CC4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1508FD8;
  if (!qword_1508FD8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1508FA8);
    sub_5C150(&qword_1508FE0, &qword_1508F98, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1508FD8);
  }
  return result;
}

uint64_t sub_E25D50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_E227E4(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_E25D58()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1509040;
  if (!qword_1509040)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1509048);
    sub_5C150(&qword_1509050, &qword_1509058, (uint64_t)&protocol conformance descriptor for LazyHGrid<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1509040);
  }
  return result;
}

uint64_t sub_E25DE4()
{
  uint64_t v0;

  return sub_E22AD8(*(_QWORD *)(v0 + 16));
}

unint64_t sub_E25DEC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1509080;
  if (!qword_1509080)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1509078);
    sub_4DD24(&qword_1509088, type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell, (uint64_t)&unk_10AD950);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_1509080);
  }
  return result;
}

uint64_t objectdestroyTm_32()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = type metadata accessor for ArtistRazzmatazzView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = v0 + v4;
  v8 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  v9 = v7 + *(int *)(v1 + 28);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508D80);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_E25F38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ArtistRazzmatazzView(0) - 8) + 80);
  return sub_E22C80(a1, v2 + ((v5 + 16) & ~v5), a2);
}

unint64_t sub_E25F88()
{
  unint64_t result;
  uint64_t v1;

  result = qword_15090A0;
  if (!qword_15090A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1508F20);
    sub_E25FF4();
    sub_E1BCB0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_15090A0);
  }
  return result;
}

unint64_t sub_E25FF4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_15090A8;
  if (!qword_15090A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1508F10);
    sub_184F98(&qword_15090B0, &qword_1508F08, (void (*)(void))sub_E26098);
    sub_5C150((unint64_t *)&unk_150CC20, &qword_150C3F0, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_15090A8);
  }
  return result;
}

unint64_t sub_E26098()
{
  unint64_t result;
  uint64_t v1;

  result = qword_15090B8;
  if (!qword_15090B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1508F00);
    sub_5C150(&qword_15090C0, &qword_1508EF8, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_15090B8);
  }
  return result;
}

id sub_E2611C()
{
  return objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CitySearchController(0)), "init");
}

uint64_t sub_E26140@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t OpaqueTypeConformance2;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t KeyPath;
  uint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v28;
  uint64_t v29;
  char v30[16];
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;

  v28 = a1;
  v29 = type metadata accessor for SearchFieldPlacement(0);
  v2 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin();
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_15091C8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = v1;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_15091D0);
  v10 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_15091D8);
  v11 = sub_E28320();
  v12 = sub_DD0BF8();
  v32 = v10;
  v33 = &type metadata for String;
  v34 = v11;
  v35 = v12;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v32, &opaque type descriptor for <<opaque return type of View.navigationTitle<A>(_:)>>, 1);
  NavigationStack.init<>(root:)(sub_E28318, v30, v9, OpaqueTypeConformance2);
  v14 = *(_QWORD *)(v1 + 16);
  v15 = *(_QWORD *)(v1 + 24);
  v16 = *(unsigned __int8 *)(v1 + 32);
  v17 = type metadata accessor for CitySearchController(0);
  v18 = sub_4DD24(&qword_1509208, type metadata accessor for CitySearchController, (uint64_t)&unk_10ADB68);
  v19 = (void *)StateObject.projectedValue.getter(v14, v15, v16, v17, v18);
  KeyPath = swift_getKeyPath(&unk_10ADBF0);
  ObservedObject.Wrapper.subscript.getter(&v32, KeyPath, v19, v18);
  swift_release();

  v21 = v32;
  v22 = v33;
  v23 = v34;
  v24 = v35;
  static SearchFieldPlacement.navigationBarDrawer.getter();
  v25 = sub_5C150(&qword_1509210, &qword_15091C8, (uint64_t)&protocol conformance descriptor for NavigationStack<A, B>);
  View.searchable(text:placement:prompt:)(v21, v22, v23, v24, v4, 2037672259, 0xE400000000000000, 0, _swiftEmptyArrayStorage, v5, v25);
  swift_bridgeObjectRelease();
  swift_release();
  v26 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v2 + 8))(v4, v29, v26);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_E26390@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t KeyPath;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  _QWORD v32[2];
  char v33[16];
  _QWORD *v34;
  uint64_t v35;
  double (*v36)@<D0>(void **@<X0>, uint64_t@<X8>);
  uint64_t v37;
  _QWORD v38[2];

  v32[1] = a2;
  v3 = *(_QWORD *)(type metadata accessor for CitySelectionView(0) - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin();
  v5 = (char *)v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_15091D8);
  __chkstk_darwin();
  v8 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  v11 = *(unsigned __int8 *)(a1 + 32);
  v12 = type metadata accessor for CitySearchController(0);
  v13 = sub_4DD24(&qword_1509208, type metadata accessor for CitySearchController, (uint64_t)&unk_10ADB68);
  v14 = (void *)StateObject.wrappedValue.getter(v9, v10, v11, v12, v13);
  KeyPath = swift_getKeyPath(&unk_10ADC38);
  swift_getKeyPath(&unk_10ADC60);
  static Published.subscript.getter(v38, v14, KeyPath);

  swift_release();
  swift_release();
  v16 = v38[0];
  v17 = swift_getKeyPath(&unk_10ADC88);
  sub_E28404(a1, (uint64_t)v5);
  v18 = *(unsigned __int8 *)(v3 + 80);
  v19 = (v18 + 16) & ~v18;
  v20 = swift_allocObject(&unk_13C86D0, v19 + v4, v18 | 7);
  sub_E28504((uint64_t)v5, v20 + v19);
  v37 = v20;
  v38[0] = v16;
  v34 = v38;
  v35 = v17;
  v36 = sub_E28548;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509218);
  v22 = sub_E28888();
  List<>.init(content:)(sub_E2887C, v33, v21, v22);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v24 = static Alignment.center.getter(v23);
  v26 = v25;
  v27 = (uint64_t)&v8[*(int *)(v6 + 36)];
  sub_E26F4C(a1, v27);
  v28 = (uint64_t *)(v27 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1509200) + 36));
  *v28 = v24;
  v28[1] = v26;
  v38[0] = 0x686372616553;
  v38[1] = 0xE600000000000000;
  v29 = sub_E28320();
  v30 = sub_DD0BF8();
  View.navigationTitle<A>(_:)(v38, v6, &type metadata for String, v29, v30);
  return sub_56024((uint64_t)v8, &qword_15091D8);
}

uint64_t sub_E26618()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10ADC38);
  v2 = swift_getKeyPath(&unk_10ADC60);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

double sub_E26688@<D0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void *v5;
  uint64_t v6;

  v5 = *a1;
  *(_QWORD *)a3 = static HorizontalAlignment.leading.getter(a1);
  *(_QWORD *)(a3 + 8) = 0;
  *(_BYTE *)(a3 + 16) = 0;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509258);
  return sub_E266E0(v5, a2, (_QWORD *)(a3 + *(int *)(v6 + 44)));
}

double sub_E266E0@<D0>(void *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  double v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  double v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  id v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _OWORD *v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  double result;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  double v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  _OWORD v122[3];

  v101 = a3;
  v105 = *(_QWORD *)(type metadata accessor for CitySelectionView(0) - 8);
  v5 = *(_QWORD *)(v105 + 64);
  __chkstk_darwin();
  v106 = (uint64_t)&v98 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150B260);
  v109 = *(_QWORD *)(v110 - 8);
  __chkstk_darwin();
  v108 = (char *)&v98 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509260);
  __chkstk_darwin();
  v112 = (char *)&v98 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin();
  v111 = (uint64_t)&v98 - v9;
  v10 = objc_msgSend(a1, "title", v8);
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v13 = v12;

  *(_QWORD *)&v122[0] = v11;
  *((_QWORD *)&v122[0] + 1) = v13;
  v14 = sub_DD0BF8();
  v15 = Text.init<A>(_:)(v122, &type metadata for String, v14);
  v17 = v16;
  v19 = v18;
  v21 = v20 & 1;
  LODWORD(v122[0]) = static HierarchicalShapeStyle.primary.getter(v22);
  v117 = Text.foregroundStyle<A>(_:)(v122, v15, v17, v21, v19, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v120 = v23;
  v121 = v24;
  v26 = v25;
  sub_AF8E8(v15, v17, v21);
  v27 = objc_msgSend(a1, "subtitle", swift_bridgeObjectRelease().n128_f64[0]);
  v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
  v30 = v29;

  *(_QWORD *)&v31 = swift_bridgeObjectRelease().n128_u64[0];
  v32 = HIBYTE(v30) & 0xF;
  if ((v30 & 0x2000000000000000) == 0)
    v32 = v28 & 0xFFFFFFFFFFFFLL;
  if (v32)
  {
    v33 = objc_msgSend(a1, "subtitle", v31);
    v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
    v36 = v35;

    *(_QWORD *)&v122[0] = v34;
    *((_QWORD *)&v122[0] + 1) = v36;
    v37 = Text.init<A>(_:)(v122, &type metadata for String, v14);
    v39 = v38;
    v41 = v40;
    v43 = v42 & 1;
    LODWORD(v122[0]) = static HierarchicalShapeStyle.secondary.getter(v44);
    v45 = Text.foregroundStyle<A>(_:)(v122, v37, v39, v43, v41, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
    v98 = a1;
    v46 = v45;
    v47 = v14;
    v49 = v48;
    v100 = v5;
    v99 = a2;
    v51 = v50;
    v52 = v26;
    v54 = v53 & 1;
    sub_AF8E8(v37, v39, v43);
    swift_bridgeObjectRelease();
    v56 = static Font.subheadline.getter(v55);
    v116 = Text.font(_:)(v56, v46, v49, v54, v51);
    v119 = v57;
    LOBYTE(v39) = v58;
    v104 = v59;
    swift_release();
    v103 = v39 & 1;
    v60 = v49;
    v14 = v47;
    v61 = v54;
    v26 = v52;
    sub_AF8E8(v46, v60, v61);
    a2 = v99;
    v5 = v100;
    swift_bridgeObjectRelease();
    v63 = static Edge.Set.top.getter(v62);
    LOBYTE(v46) = v63;
    v64 = EdgeInsets.init(_all:)(v63, 2.0);
    v114 = v65;
    v115 = v64;
    v113 = v66;
    v102 = v67;
    v118 = v46;
    a1 = v98;
  }
  else
  {
    v116 = 0;
    v119 = 0;
    v103 = 0;
    v104 = 0;
    v118 = 0;
    v114 = 0;
    v115 = 0.0;
    v113 = 0;
    v102 = 0;
  }
  v68 = v26 & 1;
  *(_QWORD *)&v122[0] = 0;
  *((_QWORD *)&v122[0] + 1) = 0xE000000000000000;
  v69 = v106;
  sub_E28404(a2, v106);
  v70 = *(unsigned __int8 *)(v105 + 80);
  v71 = (v70 + 16) & ~v70;
  v72 = (v5 + v71 + 7) & 0xFFFFFFFFFFFFFFF8;
  v73 = swift_allocObject(&unk_13C8720, v72 + 8, v70 | 7);
  sub_E28504(v69, v73 + v71);
  *(_QWORD *)(v73 + v72) = a1;
  v74 = a1;
  v75 = v108;
  Button<>.init<A>(_:action:)(v122, sub_E28A70, v73, &type metadata for String, v14);
  v77 = static Alignment.center.getter(v76);
  _FrameLayout.init(width:height:alignment:)(v122, 0, 1, 0, 0, v77, v78);
  v79 = v109;
  v80 = (uint64_t)v112;
  v81 = v110;
  (*(void (**)(char *, char *, uint64_t))(v109 + 16))(v112, v75, v110);
  v82 = (_OWORD *)(v80 + *(int *)(v107 + 36));
  v83 = v122[1];
  *v82 = v122[0];
  v82[1] = v83;
  v82[2] = v122[2];
  (*(void (**)(char *, uint64_t))(v79 + 8))(v75, v81);
  v84 = v111;
  sub_E28AB0(v80, v111);
  sub_E28AF8(v84, v80);
  v85 = v117;
  v86 = v101;
  v87 = v120;
  *v101 = v117;
  v86[1] = v87;
  LODWORD(v100) = v26 & 1;
  *((_BYTE *)v86 + 16) = v26 & 1;
  v88 = v116;
  v86[3] = v121;
  v86[4] = v88;
  v89 = v118;
  v90 = v119;
  v91 = v103;
  v86[5] = v119;
  v86[6] = v91;
  v92 = v104;
  v86[7] = v104;
  v86[8] = v89;
  v118 = v89;
  v93 = v114;
  *((double *)v86 + 9) = v115;
  v86[10] = v93;
  v94 = v102;
  v86[11] = v113;
  v86[12] = v94;
  *((_BYTE *)v86 + 104) = 0;
  v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509268);
  sub_E28AF8(v80, (uint64_t)v86 + *(int *)(v95 + 64));
  sub_AF8D8(v85, v120, v68);
  swift_bridgeObjectRetain();
  v96 = v116;
  sub_184E34(v116, v90, v91, v92);
  sub_56024(v84, &qword_1509260);
  sub_56024(v80, &qword_1509260);
  sub_184E64(v96, v119, v91, v92);
  sub_AF8E8(v117, v120, v100);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_E26D38(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;

  v24[1] = a1;
  v4 = type metadata accessor for DismissAction(0);
  v25 = *(_QWORD *)(v4 - 8);
  v26 = v4;
  __chkstk_darwin();
  v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 8);
  v8 = objc_msgSend(a2, "title", swift_retain().n128_f64[0]);
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v11 = v10;

  v12 = objc_msgSend(a2, "subtitle");
  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v15 = v14;

  objc_msgSend(a2, "coordinate");
  v17 = v16;
  objc_msgSend(a2, "coordinate");
  v19 = v18;
  KeyPath = swift_getKeyPath(&unk_10ADCA0);
  swift_getKeyPath(&unk_10ADCC8);
  static Published.subscript.getter(&v27, v7, KeyPath);
  swift_release();
  swift_release();
  v30 = v27;
  v31 = v28;
  v32 = v29;
  v21 = swift_getKeyPath(&unk_10ADCA0);
  v22 = swift_getKeyPath(&unk_10ADCC8);
  *(_QWORD *)&v27 = v9;
  *((_QWORD *)&v27 + 1) = v11;
  *(_QWORD *)&v28 = v13;
  *((_QWORD *)&v28 + 1) = v15;
  *(_QWORD *)&v29 = v17;
  *((_QWORD *)&v29 + 1) = v19;
  swift_retain();
  static Published.subscript.setter(&v27, v7, v21, v22);
  sub_E2C4E4((uint64_t)&v30);
  v33 = v30;
  sub_8B134((uint64_t)&v33);
  v27 = v31;
  sub_8B134((uint64_t)&v27);
  swift_release();
  type metadata accessor for CitySelectionView(0);
  sub_E429D0((uint64_t)v6);
  DismissAction.callAsFunction()();
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v6, v26);
}

uint64_t sub_E26F4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t KeyPath;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(unsigned __int8 *)(a1 + 32);
  v6 = type metadata accessor for CitySearchController(0);
  v7 = sub_4DD24(&qword_1509208, type metadata accessor for CitySearchController, (uint64_t)&unk_10ADB68);
  v8 = (void *)StateObject.wrappedValue.getter(v3, v4, v5, v6, v7);
  KeyPath = swift_getKeyPath(&unk_10ADC38);
  swift_getKeyPath(&unk_10ADC60);
  static Published.subscript.getter(&v16, v8, KeyPath);

  swift_release();
  swift_release();
  if ((unint64_t)v16 >> 62)
  {
    if (v16 < 0)
      v15 = v16;
    else
      v15 = v16 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v10 = _CocoaArrayWrapper.endIndex.getter(v15);
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = *(_QWORD *)((char *)&dword_10 + (v16 & 0xFFFFFFFFFFFFF8));
  }
  v11 = swift_bridgeObjectRelease();
  if (v10)
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509238);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a2, 1, 1, v12);
  }
  else
  {
    static ContentUnavailableView<>.search.getter(v11);
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509238);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a2, 0, 1, v14);
  }
}

uint64_t sub_E270B4()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10ADBF0);
  v2 = swift_getKeyPath(&unk_10ADC18);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

void sub_E27124(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[2];

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10ADBF0);
  v5 = swift_getKeyPath(&unk_10ADC18);
  static Published.subscript.getter(v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  v6 = v7[1];
  *a2 = v7[0];
  a2[1] = v6;
}

void sub_E271A0(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t KeyPath;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSString v12;
  uint64_t v13;
  uint64_t v14;

  KeyPath = swift_getKeyPath(&unk_10ADBF0);
  v6 = swift_getKeyPath(&unk_10ADC18);
  v13 = a1;
  v14 = a2;
  v7 = v2;
  static Published.subscript.setter(&v13, v7, KeyPath, v6);
  v8 = *(void **)&v7[OBJC_IVAR____TtC11MusicCoreUIP33_66D9DE5C50A23191A347FA0B4F8C41B820CitySearchController_searchCompleter];
  v9 = swift_getKeyPath(&unk_10ADBF0);
  v10 = swift_getKeyPath(&unk_10ADC18);
  static Published.subscript.getter(&v13, v7, v9, v10);
  swift_release(v9);
  swift_release(v10);
  v11 = v14;
  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v11);
  objc_msgSend(v8, "setQuery:", v12, v13);

}

void sub_E272A4(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10ADC38);
  v5 = swift_getKeyPath(&unk_10ADC60);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  *a2 = v6;
}

uint64_t sub_E27320(uint64_t *a1, void **a2)
{
  uint64_t v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10ADC38);
  v5 = swift_getKeyPath(&unk_10ADC60);
  v7 = v2;
  swift_bridgeObjectRetain();
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

char *sub_E27394()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  id v15;
  char *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  char *v20;
  id v21;
  void **aBlock;
  unint64_t v24;
  double (*v25)(uint64_t, uint64_t);
  void *v26;
  void (*v27)(uint64_t);
  uint64_t v28;
  objc_super v29;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509270);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v6 = (char *)&aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509278);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin();
  v10 = (char *)&aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = &v1[OBJC_IVAR____TtC11MusicCoreUIP33_66D9DE5C50A23191A347FA0B4F8C41B820CitySearchController__query];
  aBlock = 0;
  v24 = 0xE000000000000000;
  v12 = v1;
  Published.init(initialValue:)(&aBlock, &type metadata for String);
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v10, v7);
  v13 = &v12[OBJC_IVAR____TtC11MusicCoreUIP33_66D9DE5C50A23191A347FA0B4F8C41B820CitySearchController__completionResults];
  aBlock = (void **)_swiftEmptyArrayStorage;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509128);
  Published.init(initialValue:)(&aBlock, v14);
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v13, v6, v3);
  v15 = objc_msgSend(objc_allocWithZone((Class)MusicMapKitLocalSearchWrapper), "init");
  *(_QWORD *)&v12[OBJC_IVAR____TtC11MusicCoreUIP33_66D9DE5C50A23191A347FA0B4F8C41B820CitySearchController_searchCompleter] = v15;

  v29.receiver = v12;
  v29.super_class = ObjectType;
  v16 = (char *)objc_msgSendSuper2(&v29, "init");
  v17 = *(void **)&v16[OBJC_IVAR____TtC11MusicCoreUIP33_66D9DE5C50A23191A347FA0B4F8C41B820CitySearchController_searchCompleter];
  v18 = swift_allocObject(&unk_13C8748, 24, 7);
  *(_QWORD *)(v18 + 16) = v16;
  v27 = sub_E28B6C;
  v28 = v18;
  aBlock = _NSConcreteStackBlock;
  v24 = 1107296256;
  v25 = sub_E27988;
  v26 = &block_descriptor_353;
  v19 = _Block_copy(&aBlock);
  v20 = v16;
  v21 = v17;
  objc_msgSend(v21, "setDidUpdateResults:", v19, swift_release().n128_f64[0]);

  _Block_release(v19);
  return v20;
}

void sub_E275D0(uint64_t a1, void *a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t i;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  __n128 v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  void *v26;
  char *v27;
  _QWORD v28[4];
  _QWORD *v29;

  __swift_instantiateConcreteTypeFromMangledName(&qword_15085D0);
  __chkstk_darwin();
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = _swiftEmptyArrayStorage;
  if (!((unint64_t)a1 >> 62))
  {
    v6 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    if (v6)
      goto LABEL_3;
LABEL_17:
    swift_bridgeObjectRelease();
    v18 = _swiftEmptyArrayStorage;
LABEL_18:
    v20 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v5, 1, 1, v20);
    type metadata accessor for MainActor(0);
    swift_bridgeObjectRetain();
    v21 = a2;
    v23 = static MainActor.shared.getter(v22);
    v24 = (_QWORD *)swift_allocObject(&unk_13C8798, 56, 7);
    v24[2] = v23;
    v24[3] = &protocol witness table for MainActor;
    v24[4] = v21;
    v24[5] = v18;
    v24[6] = a1;
    sub_E08E7C((uint64_t)v5, (uint64_t)&unk_1509288, (uint64_t)v24);
    swift_release();
    return;
  }
  if (a1 < 0)
    v19 = a1;
  else
    v19 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v6 = _CocoaArrayWrapper.endIndex.getter(v19);
  if (!v6)
    goto LABEL_17;
LABEL_3:
  if (v6 >= 1)
  {
    v26 = a2;
    v27 = v5;
    for (i = 0; i != v6; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
      else
        v10 = *(id *)(a1 + 8 * i + 32);
      v11 = v10;
      v12 = objc_msgSend(v10, "subtitle");
      v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
      v15 = v14;

      v28[2] = v13;
      v28[3] = v15;
      v28[0] = 44;
      v28[1] = 0xE100000000000000;
      v16 = sub_DD0BF8();
      LOBYTE(v12) = StringProtocol.contains<A>(_:)(v28, &type metadata for String, &type metadata for String, v16, v16);
      swift_bridgeObjectRelease();
      if ((v12 & 1) != 0)
      {

      }
      else
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v17);
        v8 = v29[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v8);
        v9 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v8, v11);
        specialized ContiguousArray._endMutation()(v9);
      }
    }
    swift_bridgeObjectRelease();
    v18 = v29;
    a2 = v26;
    v5 = v27;
    goto LABEL_18;
  }
  __break(1u);
}

uint64_t sub_E27834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;

  v6[4] = a5;
  v6[5] = a6;
  v6[3] = a4;
  v7 = type metadata accessor for MainActor(0);
  v6[6] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  return swift_task_switch(sub_E278A4, v9, v10);
}

uint64_t sub_E278A4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  void *v4;
  uint64_t v5;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 32);
  swift_release(*(_QWORD *)(v0 + 48));
  if (v1 >> 62)
  {
    v9 = *(_QWORD *)(v0 + 32);
    if (v9 < 0)
      v10 = *(_QWORD *)(v0 + 32);
    else
      v10 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v2 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(v9);
  }
  else
  {
    v2 = *(_QWORD *)((char *)&dword_10 + (v1 & 0xFFFFFFFFFFFFF8));
  }
  v3 = (uint64_t *)(v0 + 40);
  v4 = *(void **)(v0 + 24);
  if (v2)
    v3 = (uint64_t *)(v0 + 32);
  v5 = *v3;
  swift_bridgeObjectRetain();
  KeyPath = swift_getKeyPath(&unk_10ADC38);
  v7 = swift_getKeyPath(&unk_10ADC60);
  *(_QWORD *)(v0 + 16) = v5;
  static Published.subscript.setter(v0 + 16, v4, KeyPath, v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_E27988(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t, __n128);
  unint64_t v4;
  uint64_t v5;
  __n128 v6;
  double result;

  v3 = *(void (**)(uint64_t, __n128))(a1 + 32);
  v4 = sub_E2895C();
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v4);
  v6 = swift_retain();
  v3(v5, v6);
  swift_release();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_E27A84()
{
  return type metadata accessor for CitySearchController(0);
}

uint64_t type metadata accessor for CitySearchController(uint64_t a1)
{
  return sub_6345C(a1, (uint64_t *)&unk_1509108, (uint64_t)&nominal type descriptor for CitySearchController);
}

void sub_E27AA0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  sub_E27B34();
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_E27B88(319);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      v6[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
      swift_updateClassMetadata2(a1, 256, 3, v6, a1 + 80);
    }
  }
}

void sub_E27B34()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1509118)
  {
    v0 = type metadata accessor for Published(0, &type metadata for String);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1509118);
  }
}

void sub_E27B88(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1509120)
  {
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1509128);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1509120);
  }
}

uint64_t sub_E27BE0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v19 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[2];
    v9 = (void *)a2[3];
    v10 = *((_BYTE *)a2 + 32);
    swift_retain();
    sub_E27CEC(v8, v9, v10);
    *(_QWORD *)(a1 + 16) = v8;
    *(_QWORD *)(a1 + 24) = v9;
    *(_BYTE *)(a1 + 32) = v10;
    v11 = *(int *)(a3 + 24);
    v12 = (_QWORD *)(a1 + v11);
    v13 = (uint64_t *)((char *)a2 + v11);
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CE90);
    if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
    {
      v15 = type metadata accessor for DismissAction(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v12, v13, v15);
      v16 = v12;
      v17 = v14;
      v18 = 1;
    }
    else
    {
      *v12 = *v13;
      swift_retain();
      v16 = v12;
      v17 = v14;
      v18 = 0;
    }
    swift_storeEnumTagMultiPayload(v16, v17, v18);
  }
  return a1;
}

id sub_E27CEC(uint64_t a1, void *a2, char a3)
{
  if ((a3 & 1) != 0)
    return a2;
  else
    return (id)swift_retain(a2);
}

double sub_E27CFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  swift_release();
  sub_E27D80(*(_QWORD *)(a1 + 16), *(void **)(a1 + 24), *(_BYTE *)(a1 + 32));
  v4 = a1 + *(int *)(a2 + 24);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CE90);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for DismissAction(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_E27D80(uint64_t a1, void *a2, char a3)
{
  double result;

  if ((a3 & 1) != 0)

  else
    *(_QWORD *)&result = swift_release(a2).n128_u64[0];
  return result;
}

uint64_t sub_E27D90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(void **)(a2 + 24);
  v9 = *(_BYTE *)(a2 + 32);
  swift_retain();
  sub_E27CEC(v7, v8, v9);
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v8;
  *(_BYTE *)(a1 + 32) = v9;
  v10 = *(int *)(a3 + 24);
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CE90);
  if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
  {
    v14 = type metadata accessor for DismissAction(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v11, v12, v14);
    v15 = 1;
  }
  else
  {
    *v11 = *v12;
    swift_retain();
    v15 = 0;
  }
  swift_storeEnumTagMultiPayload(v11, v13, v15);
  return a1;
}

uint64_t sub_E27E68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  char v8;
  uint64_t v9;
  void *v10;
  char v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(void **)(a2 + 24);
  v8 = *(_BYTE *)(a2 + 32);
  sub_E27CEC(v6, v7, v8);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(void **)(a1 + 24);
  v11 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v8;
  sub_E27D80(v9, v10, v11);
  if (a1 != a2)
  {
    v12 = *(int *)(a3 + 24);
    v13 = (_QWORD *)(a1 + v12);
    v14 = (_QWORD *)(a2 + v12);
    sub_56024(a1 + v12, &qword_150CE90);
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CE90);
    if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
    {
      v16 = type metadata accessor for DismissAction(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v13, v14, v16);
      v17 = 1;
    }
    else
    {
      *v13 = *v14;
      swift_retain();
      v17 = 0;
    }
    swift_storeEnumTagMultiPayload(v13, v15, v17);
  }
  return a1;
}

uint64_t sub_E27F78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  void *v6;
  const void *v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = *(int *)(a3 + 24);
  v6 = (void *)(a1 + v5);
  v7 = (const void *)(a2 + v5);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CE90);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for DismissAction(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v6, v7, v9);
    swift_storeEnumTagMultiPayload(v6, v8, 1);
  }
  else
  {
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t sub_E28028(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  void *v9;
  char v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_release();
  v7 = *(_BYTE *)(a2 + 32);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(void **)(a1 + 24);
  v10 = *(_BYTE *)(a1 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = v7;
  sub_E27D80(v8, v9, v10);
  if (a1 != a2)
  {
    v11 = *(int *)(a3 + 24);
    v12 = (void *)(a1 + v11);
    v13 = (const void *)(a2 + v11);
    sub_56024(a1 + v11, &qword_150CE90);
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CE90);
    if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
    {
      v15 = type metadata accessor for DismissAction(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v12, v13, v15);
      swift_storeEnumTagMultiPayload(v12, v14, 1);
    }
    else
    {
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_E28114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_E28120);
}

uint64_t sub_E28120(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_150B660);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_E281A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_E281AC);
}

uint64_t sub_E281AC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_150B660);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for CitySelectionView(uint64_t a1)
{
  return sub_6345C(a1, qword_1509188, (uint64_t)&nominal type descriptor for CitySelectionView);
}

void sub_E28238(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = &unk_10ADB38;
  v4[1] = &unk_10ADB50;
  sub_E282B4(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
  }
}

void sub_E282B4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_150B6E0)
  {
    v2 = type metadata accessor for DismissAction(255);
    v3 = type metadata accessor for Environment.Content(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_150B6E0);
  }
}

uint64_t sub_E28308(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1211978, 1);
}

uint64_t sub_E28318@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_E26390(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_E28320()
{
  unint64_t result;
  uint64_t v1;

  result = qword_15091E0;
  if (!qword_15091E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_15091D8);
    sub_5C150(&qword_15091E8, &qword_15091F0, (uint64_t)&protocol conformance descriptor for List<A, B>);
    sub_5C150(&qword_15091F8, &qword_1509200, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_15091E0);
  }
  return result;
}

void sub_E283C0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  sub_E271A0(v1, v2);
}

uint64_t sub_E28404(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CitySelectionView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_E28448()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for CitySelectionView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release();
  sub_E27D80(*(_QWORD *)(v0 + v4 + 16), *(void **)(v0 + v4 + 24), *(_BYTE *)(v0 + v4 + 32));
  v6 = v0 + v4 + *(int *)(v1 + 24);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CE90);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for DismissAction(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_E28504(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CitySelectionView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double sub_E28548@<D0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CitySelectionView(0) - 8) + 80);
  return sub_E26688(a1, v2 + ((v5 + 16) & ~v5), a2);
}

double sub_E28594@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10ADCA0);
  v5 = swift_getKeyPath(&unk_10ADCC8);
  static Published.subscript.getter(&v10, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  result = *(double *)&v10;
  v7 = v11;
  v8 = v12;
  v9 = v13;
  *(_OWORD *)a2 = v10;
  *(_QWORD *)(a2 + 16) = v7;
  *(_QWORD *)(a2 + 24) = v8;
  *(_OWORD *)(a2 + 32) = v9;
  return result;
}

uint64_t sub_E28620(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;

  v3 = *a1;
  v2 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v6 = a1[4];
  v7 = a1[5];
  v8 = *a2;
  KeyPath = swift_getKeyPath(&unk_10ADCA0);
  swift_getKeyPath(&unk_10ADCC8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  static Published.subscript.getter(&v13, v8, KeyPath);
  swift_release();
  swift_release();
  v16 = v13;
  v17 = v14;
  v18 = v15;
  v10 = swift_getKeyPath(&unk_10ADCA0);
  v11 = swift_getKeyPath(&unk_10ADCC8);
  *(_QWORD *)&v13 = v3;
  *((_QWORD *)&v13 + 1) = v2;
  *(_QWORD *)&v14 = v5;
  *((_QWORD *)&v14 + 1) = v4;
  *(_QWORD *)&v15 = v6;
  *((_QWORD *)&v15 + 1) = v7;
  swift_retain();
  static Published.subscript.setter(&v13, v8, v10, v11);
  sub_E2C4E4((uint64_t)&v16);
  v19 = v16;
  sub_8B134((uint64_t)&v19);
  v13 = v17;
  return sub_8B134((uint64_t)&v13);
}

uint64_t sub_E2874C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v14 = *a1;
  v7 = swift_allocObject(&unk_13C86F8, 32, 7);
  *(_QWORD *)(v7 + 16) = a3;
  *(_QWORD *)(v7 + 24) = a4;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509128);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509230);
  v10 = sub_5C150(&qword_1509240, &qword_1509128, (uint64_t)&protocol conformance descriptor for [A]);
  v11 = sub_4DD24(&qword_1509248, (uint64_t (*)(uint64_t))sub_E2895C, (uint64_t)&protocol conformance descriptor for NSObject);
  v12 = sub_5C150(&qword_1509228, &qword_1509230, (uint64_t)&protocol conformance descriptor for VStack<A>);
  return ForEach<>.init(_:id:content:)(&v14, a2, sub_E28928, v7, v8, v9, v10, v11, v12);
}

uint64_t sub_E2887C()
{
  uint64_t v0;

  return sub_E2874C(*(uint64_t **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

unint64_t sub_E28888()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1509220;
  if (!qword_1509220)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1509218);
    sub_5C150(&qword_1509228, &qword_1509230, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_1509220);
  }
  return result;
}

uint64_t sub_E28904()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_E28928(uint64_t *a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t *);
  uint64_t v4;

  v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  v4 = *a1;
  return v2(&v4);
}

unint64_t sub_E2895C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1509250;
  if (!qword_1509250)
  {
    v1 = objc_opt_self(MusicMapKitLocalSearchCompletionWrapper);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1509250);
  }
  return result;
}

uint64_t sub_E28998()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v1 = type metadata accessor for CitySelectionView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release();
  sub_E27D80(*(_QWORD *)(v0 + v4 + 16), *(void **)(v0 + v4 + 24), *(_BYTE *)(v0 + v4 + 32));
  v6 = v0 + v4 + *(int *)(v1 + 24);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CE90);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for DismissAction(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {
    swift_release();
  }
  v9 = (v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = v9 + 8;

  return swift_deallocObject(v0, v10, v3 | 7);
}

uint64_t sub_E28A70()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for CitySelectionView(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_E26D38(v0 + v2, *(void **)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_E28AB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509260);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_E28AF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509260);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_E28B48()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_E28B6C(uint64_t a1)
{
  uint64_t v1;

  sub_E275D0(a1, *(void **)(v1 + 16));
}

uint64_t block_copy_helper_347(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double block_destroy_helper_347(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_E28B8C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_E28BC8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_1509284);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_50F8C;
  return sub_E27834(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_E28C48()
{
  _QWORD v1[2];

  v1[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_15091C8);
  v1[1] = sub_5C150(&qword_1509210, &qword_15091C8, (uint64_t)&protocol conformance descriptor for NavigationStack<A, B>);
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.searchable(text:placement:prompt:)>>, 1);
}

uint64_t Razzmatazz.shortName.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v21;
  char v22[16];
  __n128 *v23;
  __n128 v24;
  unint64_t v25;
  unint64_t v26;

  v1 = v0;
  v2 = type metadata accessor for Razzmatazz(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CharacterSet(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v0 + 16);
  v10 = *(_QWORD *)(v1 + 24);
  v24.n128_u64[0] = 64;
  v24.n128_u64[1] = 0xE100000000000000;
  v23 = &v24;
  swift_bridgeObjectRetain_n(v10, 2);
  v11 = sub_E29E08(0x7FFFFFFFFFFFFFFFLL, 1, sub_D6E940, (uint64_t)v22, v9, v10);
  swift_bridgeObjectRelease(v10);
  v12 = *((_QWORD *)v11 + 2);
  if (!v12)
  {
    swift_bridgeObjectRelease(v11);
    sub_E2A370(v1, (uint64_t)v4);
LABEL_5:
    v17 = *((_QWORD *)v4 + 2);
    swift_bridgeObjectRetain();
    goto LABEL_6;
  }
  v13 = (__n128 *)&v11[32 * v12];
  v21 = *v13;
  v15 = v13[1].n128_u64[0];
  v14 = v13[1].n128_u64[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v11);
  v24 = v21;
  v25 = v15;
  v26 = v14;
  static CharacterSet.whitespaces.getter(v21);
  v16 = sub_E2A32C();
  v17 = StringProtocol.trimmingCharacters(in:)(v8, &type metadata for Substring, v16);
  v19 = v18;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRelease(v26);
  sub_E2A370(v1, (uint64_t)v4);
  if (!v19)
    goto LABEL_5;
LABEL_6:
  sub_E2A3B4((uint64_t)v4);
  return v17;
}

uint64_t sub_E28E68(char a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  _OWORD *v44;
  __int128 v45;
  uint64_t v46;
  unint64_t v47;
  char *v49;
  char *v50;
  char *v51;
  char *v52;
  _QWORD v53[2];
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _OWORD *v60;
  __int128 v61;
  __int128 v62;

  if (!a1)
  {
    sub_E2B8C8((uint64_t)v1, (uint64_t)&v62);
    sub_E2B8C8((uint64_t)&v62, (uint64_t)v53);
    v9 = v1[3];
    v54 = v1[2];
    v55 = v9;
    sub_E2B8C8((uint64_t)(v1 + 4), (uint64_t)&v61);
    sub_E2B8C8((uint64_t)&v61, (uint64_t)&v56);
    v10 = v1[7];
    v58 = v1[6];
    v59 = v10;
    v12 = v53[0];
    v11 = v53[1];
    sub_1391E0((uint64_t)&v62);
    swift_bridgeObjectRetain();
    sub_1391E0((uint64_t)&v61);
    if (v11)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v13 = sub_DDDAA8(0, 1, 1, (char *)_swiftEmptyArrayStorage);
      v15 = *((_QWORD *)v13 + 2);
      v14 = *((_QWORD *)v13 + 3);
      v16 = v15 + 1;
      if (v15 >= v14 >> 1)
      {
        v49 = sub_DDDAA8((char *)(v14 > 1), v15 + 1, 1, v13);
        v16 = v15 + 1;
        v13 = v49;
      }
      *((_QWORD *)v13 + 2) = v16;
      v17 = &v13[16 * v15];
      *((_QWORD *)v17 + 4) = v12;
      *((_QWORD *)v17 + 5) = v11;
      v18 = v55;
      if (!v55)
        goto LABEL_21;
    }
    else
    {
      swift_bridgeObjectRetain();
      v13 = (char *)_swiftEmptyArrayStorage;
      v18 = v55;
      if (!v55)
      {
LABEL_21:
        v30 = v57;
        if (v57)
        {
          v31 = v56;
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native(v13) & 1) == 0)
            v13 = sub_DDDAA8(0, *((_QWORD *)v13 + 2) + 1, 1, v13);
          v33 = *((_QWORD *)v13 + 2);
          v32 = *((_QWORD *)v13 + 3);
          v34 = v33 + 1;
          if (v33 >= v32 >> 1)
          {
            v51 = sub_DDDAA8((char *)(v32 > 1), v33 + 1, 1, v13);
            v34 = v33 + 1;
            v13 = v51;
          }
          *((_QWORD *)v13 + 2) = v34;
          v35 = &v13[16 * v33];
          *((_QWORD *)v35 + 4) = v31;
          *((_QWORD *)v35 + 5) = v30;
        }
        v36 = v59;
        if (v59)
        {
          v37 = v58;
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native(v13) & 1) == 0)
            v13 = sub_DDDAA8(0, *((_QWORD *)v13 + 2) + 1, 1, v13);
          v39 = *((_QWORD *)v13 + 2);
          v38 = *((_QWORD *)v13 + 3);
          v40 = v39 + 1;
          if (v39 >= v38 >> 1)
          {
            v52 = sub_DDDAA8((char *)(v38 > 1), v39 + 1, 1, v13);
            v40 = v39 + 1;
            v13 = v52;
          }
          *((_QWORD *)v13 + 2) = v40;
          v41 = &v13[16 * v39];
          *((_QWORD *)v41 + 4) = v37;
          *((_QWORD *)v41 + 5) = v36;
        }
        v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_150E7F0);
        swift_arrayDestroy(v53, 4, v42);
        v60 = v13;
        goto LABEL_38;
      }
    }
    v25 = v54;
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native(v13) & 1) == 0)
      v13 = sub_DDDAA8(0, *((_QWORD *)v13 + 2) + 1, 1, v13);
    v27 = *((_QWORD *)v13 + 2);
    v26 = *((_QWORD *)v13 + 3);
    v28 = v27 + 1;
    if (v27 >= v26 >> 1)
    {
      v50 = sub_DDDAA8((char *)(v26 > 1), v27 + 1, 1, v13);
      v28 = v27 + 1;
      v13 = v50;
    }
    *((_QWORD *)v13 + 2) = v28;
    v29 = &v13[16 * v27];
    *((_QWORD *)v29 + 4) = v25;
    *((_QWORD *)v29 + 5) = v18;
    goto LABEL_21;
  }
  if (a1 != 1)
  {
    v19 = v1[5];
    if (v19)
    {
      v20 = v1[4];
      swift_bridgeObjectRetain();
      if (String.count.getter(v20, v19) == 2)
      {
        v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_15076A0);
        v22 = swift_allocObject(v21, 80, 7);
        v23 = *((_OWORD *)v1 + 1);
        *(_OWORD *)(v22 + 16) = xmmword_1060460;
        *(_OWORD *)(v22 + 32) = v23;
        *(_QWORD *)(v22 + 48) = v20;
        *(_QWORD *)(v22 + 56) = v19;
        v61 = *((_OWORD *)v1 + 3);
        v62 = v23;
        *(_OWORD *)(v22 + 64) = v61;
        v60 = (_OWORD *)v22;
        sub_1391E0((uint64_t)&v62);
        sub_1391E0((uint64_t)&v61);
        v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508318);
        v8 = sub_E037C8();
        goto LABEL_14;
      }
      swift_bridgeObjectRelease();
    }
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_15076A0);
    v44 = (_OWORD *)swift_allocObject(v43, 64, 7);
    v45 = *((_OWORD *)v1 + 1);
    v44[1] = xmmword_105F890;
    v44[2] = v45;
    v61 = *((_OWORD *)v1 + 3);
    v62 = v45;
    v44[3] = v61;
    v60 = v44;
    sub_1391E0((uint64_t)&v62);
    sub_1391E0((uint64_t)&v61);
LABEL_38:
    v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508318);
    v47 = sub_E037C8();
    v24 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v46, v47);
    goto LABEL_39;
  }
  v2 = v1[5];
  if (v2)
  {
    v3 = v1[4];
    swift_bridgeObjectRetain();
    if (String.count.getter(v3, v2) == 2)
    {
      v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_15076A0);
      v5 = swift_allocObject(v4, 64, 7);
      v62 = *((_OWORD *)v1 + 1);
      v6 = v62;
      *(_OWORD *)(v5 + 16) = xmmword_105F890;
      *(_OWORD *)(v5 + 32) = v6;
      *(_QWORD *)(v5 + 48) = v3;
      *(_QWORD *)(v5 + 56) = v2;
      *(_QWORD *)&v61 = v5;
      sub_1391E0((uint64_t)&v62);
      v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508318);
      v8 = sub_E037C8();
LABEL_14:
      v24 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v7, v8);
LABEL_39:
      swift_bridgeObjectRelease();
      return v24;
    }
    swift_bridgeObjectRelease();
  }
  v24 = v1[2];
  swift_bridgeObjectRetain();
  return v24;
}

uint64_t Razzmatazz.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Razzmatazz(0) + 24);
  v4 = type metadata accessor for Date(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t Razzmatazz.performingArtist.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Razzmatazz(0) + 28);
  v4 = type metadata accessor for Artist(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for Razzmatazz(uint64_t a1)
{
  return sub_6345C(a1, qword_1509310, (uint64_t)&nominal type descriptor for Razzmatazz);
}

uint64_t sub_E293E0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = v1;
  v4 = v2[1];
  if (v4)
  {
    v5 = *v2;
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)(a1, v5, v4);
    swift_bridgeObjectRelease(v4);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  v6 = v2[2];
  v7 = v2[3];
  swift_bridgeObjectRetain();
  String.hash(into:)(a1, v6, v7);
  swift_bridgeObjectRelease(v7);
  v8 = v2[5];
  if (v8)
  {
    v9 = v2[4];
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)(a1, v9, v8);
    swift_bridgeObjectRelease(v8);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  v11 = v2[6];
  v10 = v2[7];
  swift_bridgeObjectRetain();
  String.hash(into:)(a1, v11, v10);
  return swift_bridgeObjectRelease(v10);
}

uint64_t sub_E294CC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_E294FC + 4 * byte_10ADCE8[*v0]))(0x73736572646461, 0xE700000000000000);
}

uint64_t sub_E294FC()
{
  return 2037672291;
}

uint64_t sub_E2950C()
{
  return 0x6E6F69676572;
}

uint64_t sub_E29520()
{
  return 0x7972746E756F63;
}

uint64_t sub_E29534@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_E2B9D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_E29558(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E2BE50();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_E29580(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E2BE50();
  return CodingKey.debugDescription.getter(a1, v2);
}

Swift::Int sub_E295A8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[9];
  _OWORD v13[4];

  v1 = v0;
  Hasher.init(_seed:)(v12);
  v2 = *v0;
  v3 = v1[1];
  swift_bridgeObjectRetain();
  String.hash(into:)(v12, v2, v3);
  swift_bridgeObjectRelease();
  v4 = v1[2];
  v5 = v1[3];
  swift_bridgeObjectRetain();
  String.hash(into:)(v12, v4, v5);
  swift_bridgeObjectRelease();
  v6 = *((_OWORD *)v1 + 3);
  v13[0] = *((_OWORD *)v1 + 2);
  v13[1] = v6;
  v7 = *((_OWORD *)v1 + 5);
  v13[2] = *((_OWORD *)v1 + 4);
  v13[3] = v7;
  sub_E2A3F0((uint64_t)v13);
  sub_E293E0((uint64_t)v12);
  sub_E2A444(v13);
  v8 = (id)v1[12];
  NSObject.hash(into:)(v12);

  type metadata accessor for Razzmatazz.Venue(0);
  v9 = type metadata accessor for TimeZone(0);
  v10 = sub_4DD24(&qword_15092A8, (uint64_t (*)(uint64_t))&type metadata accessor for TimeZone, (uint64_t)&protocol conformance descriptor for TimeZone);
  dispatch thunk of Hashable.hash(into:)(v12, v9, v10);
  return Hasher._finalize()();
}

double sub_E296C0@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[2];
  __int128 v8;
  __int128 v9;

  sub_E2BB78(a1, (uint64_t *)v7);
  if (!v2)
  {
    v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    result = *(double *)&v8;
    v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

Swift::Int sub_E29700()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  sub_E293E0((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_E29740()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  sub_E293E0((uint64_t)v1);
  return Hasher._finalize()();
}

uint64_t sub_E29778(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[4];
  _OWORD v8[4];

  v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  v3 = a1[3];
  v7[2] = a1[2];
  v7[3] = v3;
  v4 = a2[1];
  v8[0] = *a2;
  v8[1] = v4;
  v5 = a2[3];
  v8[2] = a2[2];
  v8[3] = v5;
  return sub_E2A4AC((uint64_t *)v7, v8) & 1;
}

uint64_t sub_E297C4(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD v14[4];

  v2 = v1;
  v4 = *v1;
  v5 = v2[1];
  swift_bridgeObjectRetain();
  String.hash(into:)(a1, v4, v5);
  swift_bridgeObjectRelease();
  v6 = v2[2];
  v7 = v2[3];
  swift_bridgeObjectRetain();
  String.hash(into:)(a1, v6, v7);
  swift_bridgeObjectRelease();
  v8 = *((_OWORD *)v2 + 3);
  v14[0] = *((_OWORD *)v2 + 2);
  v14[1] = v8;
  v9 = *((_OWORD *)v2 + 5);
  v14[2] = *((_OWORD *)v2 + 4);
  v14[3] = v9;
  sub_E2A3F0((uint64_t)v14);
  sub_E293E0(a1);
  sub_E2A444(v14);
  v10 = (id)v2[12];
  NSObject.hash(into:)(a1);

  v11 = type metadata accessor for TimeZone(0);
  v12 = sub_4DD24(&qword_15092A8, (uint64_t (*)(uint64_t))&type metadata accessor for TimeZone, (uint64_t)&protocol conformance descriptor for TimeZone);
  return dispatch thunk of Hashable.hash(into:)(a1, v11, v12);
}

Swift::Int sub_E298D0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[9];
  _OWORD v13[4];

  v1 = v0;
  Hasher.init(_seed:)(v12);
  v2 = *v0;
  v3 = v1[1];
  swift_bridgeObjectRetain();
  String.hash(into:)(v12, v2, v3);
  swift_bridgeObjectRelease();
  v4 = v1[2];
  v5 = v1[3];
  swift_bridgeObjectRetain();
  String.hash(into:)(v12, v4, v5);
  swift_bridgeObjectRelease();
  v6 = *((_OWORD *)v1 + 3);
  v13[0] = *((_OWORD *)v1 + 2);
  v13[1] = v6;
  v7 = *((_OWORD *)v1 + 5);
  v13[2] = *((_OWORD *)v1 + 4);
  v13[3] = v7;
  sub_E2A3F0((uint64_t)v13);
  sub_E293E0((uint64_t)v12);
  sub_E2A444(v13);
  v8 = (id)v1[12];
  NSObject.hash(into:)(v12);

  v9 = type metadata accessor for TimeZone(0);
  v10 = sub_4DD24(&qword_15092A8, (uint64_t (*)(uint64_t))&type metadata accessor for TimeZone, (uint64_t)&protocol conformance descriptor for TimeZone);
  dispatch thunk of Hashable.hash(into:)(v12, v9, v10);
  return Hasher._finalize()();
}

uint64_t Razzmatazz.hash(into:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD v24[4];

  v2 = v1;
  v4 = *v1;
  v5 = v2[1];
  swift_bridgeObjectRetain();
  String.hash(into:)(a1, v4, v5);
  swift_bridgeObjectRelease();
  v6 = v2[2];
  v7 = v2[3];
  swift_bridgeObjectRetain();
  String.hash(into:)(a1, v6, v7);
  swift_bridgeObjectRelease();
  v8 = type metadata accessor for Razzmatazz(0);
  v9 = type metadata accessor for Date(0);
  v10 = sub_4DD24(&qword_1509298, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  dispatch thunk of Hashable.hash(into:)(a1, v9, v10);
  v11 = type metadata accessor for Artist(0);
  v12 = sub_4DD24(&qword_15092A0, (uint64_t (*)(uint64_t))&type metadata accessor for Artist, (uint64_t)&protocol conformance descriptor for Artist);
  dispatch thunk of Hashable.hash(into:)(a1, v11, v12);
  v13 = (char *)v2 + *(int *)(v8 + 32);
  v14 = *(_QWORD *)v13;
  v15 = *((_QWORD *)v13 + 1);
  swift_bridgeObjectRetain();
  String.hash(into:)(a1, v14, v15);
  swift_bridgeObjectRelease();
  v16 = *((_QWORD *)v13 + 2);
  v17 = *((_QWORD *)v13 + 3);
  swift_bridgeObjectRetain();
  String.hash(into:)(a1, v16, v17);
  swift_bridgeObjectRelease();
  v18 = *((_OWORD *)v13 + 3);
  v24[0] = *((_OWORD *)v13 + 2);
  v24[1] = v18;
  v19 = *((_OWORD *)v13 + 5);
  v24[2] = *((_OWORD *)v13 + 4);
  v24[3] = v19;
  sub_E2A3F0((uint64_t)v24);
  sub_E293E0(a1);
  sub_E2A444(v24);
  v20 = *((id *)v13 + 12);
  NSObject.hash(into:)(a1);

  type metadata accessor for Razzmatazz.Venue(0);
  v21 = type metadata accessor for TimeZone(0);
  v22 = sub_4DD24(&qword_15092A8, (uint64_t (*)(uint64_t))&type metadata accessor for TimeZone, (uint64_t)&protocol conformance descriptor for TimeZone);
  return dispatch thunk of Hashable.hash(into:)(a1, v21, v22);
}

Swift::Int Razzmatazz.hashValue.getter()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[9];
  _OWORD v23[4];

  v1 = v0;
  Hasher.init(_seed:)(v22);
  v2 = *v0;
  v3 = v1[1];
  swift_bridgeObjectRetain();
  String.hash(into:)(v22, v2, v3);
  swift_bridgeObjectRelease();
  v4 = v1[2];
  v5 = v1[3];
  swift_bridgeObjectRetain();
  String.hash(into:)(v22, v4, v5);
  swift_bridgeObjectRelease();
  v6 = type metadata accessor for Razzmatazz(0);
  v7 = type metadata accessor for Date(0);
  v8 = sub_4DD24(&qword_1509298, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  dispatch thunk of Hashable.hash(into:)(v22, v7, v8);
  v9 = type metadata accessor for Artist(0);
  v10 = sub_4DD24(&qword_15092A0, (uint64_t (*)(uint64_t))&type metadata accessor for Artist, (uint64_t)&protocol conformance descriptor for Artist);
  dispatch thunk of Hashable.hash(into:)(v22, v9, v10);
  v11 = (char *)v1 + *(int *)(v6 + 32);
  v12 = *(_QWORD *)v11;
  v13 = *((_QWORD *)v11 + 1);
  swift_bridgeObjectRetain();
  String.hash(into:)(v22, v12, v13);
  swift_bridgeObjectRelease();
  v14 = *((_QWORD *)v11 + 2);
  v15 = *((_QWORD *)v11 + 3);
  swift_bridgeObjectRetain();
  String.hash(into:)(v22, v14, v15);
  swift_bridgeObjectRelease();
  v16 = *((_OWORD *)v11 + 3);
  v23[0] = *((_OWORD *)v11 + 2);
  v23[1] = v16;
  v17 = *((_OWORD *)v11 + 5);
  v23[2] = *((_OWORD *)v11 + 4);
  v23[3] = v17;
  sub_E2A3F0((uint64_t)v23);
  sub_E293E0((uint64_t)v22);
  sub_E2A444(v23);
  v18 = *((id *)v11 + 12);
  NSObject.hash(into:)(v22);

  type metadata accessor for Razzmatazz.Venue(0);
  v19 = type metadata accessor for TimeZone(0);
  v20 = sub_4DD24(&qword_15092A8, (uint64_t (*)(uint64_t))&type metadata accessor for TimeZone, (uint64_t)&protocol conformance descriptor for TimeZone);
  dispatch thunk of Hashable.hash(into:)(v22, v19, v20);
  return Hasher._finalize()();
}

Swift::Int sub_E29DD0()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  Razzmatazz.hash(into:)((uint64_t)v1);
  return Hasher._finalize()();
}

char *sub_E29E08(uint64_t a1, char a2, uint64_t (*a3)(_QWORD *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char *v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  unint64_t v50;
  _QWORD v52[4];

  v52[3] = a4;
  if (a1 < 0)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  v11 = a5;
  v14 = swift_allocObject(&unk_13C8820, 24, 7);
  *(_QWORD *)(v14 + 16) = _swiftEmptyArrayStorage;
  v49 = swift_allocObject(&unk_13C8848, 24, 7);
  *(_QWORD *)(v49 + 16) = 15;
  v15 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (v16 = HIBYTE(a6) & 0xF) : (v16 = v11 & 0xFFFFFFFFFFFFLL), !v16))
  {
    if ((a6 & 0x2000000000000000) == 0)
      v15 = v11 & 0xFFFFFFFFFFFFLL;
    v33 = 7;
    if (((a6 >> 60) & ((v11 & 0x800000000000000) == 0)) != 0)
      v33 = 11;
    sub_E2A220(v33 | (v15 << 16), v49, a2 & 1, v14, v11, a6);
    swift_bridgeObjectRelease(a6);
    v10 = *(char **)(v14 + 16);
    swift_bridgeObjectRetain();
    swift_release(v14);
    v34 = v49;
    goto LABEL_40;
  }
  v44 = a1;
  v45 = v14;
  v17 = 7;
  if (((a6 >> 60) & ((v11 & 0x800000000000000) == 0)) != 0)
    v17 = 11;
  v43 = v17 | (v16 << 16);
  v50 = 4 * v16;
  v10 = (char *)_swiftEmptyArrayStorage;
  v9 = 15;
  v8 = 15;
  v18 = 15;
  while (1)
  {
    v19 = String.subscript.getter(v9, v11, a6);
    v21 = v20;
    v52[0] = v19;
    v52[1] = v20;
    v22 = a3(v52);
    if (v7)
    {
      swift_release(v45);
      swift_release(v49);
      swift_bridgeObjectRelease(v21);
      swift_bridgeObjectRelease(a6);
      return v10;
    }
    v6 = v22;
    swift_bridgeObjectRelease(v21);
    if ((v6 & 1) != 0)
      break;
    v9 = String.index(after:)(v9, v11, a6);
LABEL_11:
    if (v50 == v9 >> 14)
      goto LABEL_31;
  }
  if (v8 >> 14 == v9 >> 14 && (a2 & 1) != 0)
  {
    v9 = String.index(after:)(v9, v11, a6);
    *(_QWORD *)(v49 + 16) = v9;
    v8 = v9;
    v18 = v9;
    goto LABEL_11;
  }
  if (v9 >> 14 < v8 >> 14)
  {
    __break(1u);
    goto LABEL_43;
  }
  v23 = String.subscript.getter(v8, v9, v11, a6);
  v46 = v24;
  v47 = v23;
  v26 = v25;
  v28 = v27;
  if ((swift_isUniquelyReferenced_nonNull_native(v10) & 1) == 0)
    v10 = sub_DDE2A4(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
  v30 = *((_QWORD *)v10 + 2);
  v29 = *((_QWORD *)v10 + 3);
  v6 = v30 + 1;
  if (v30 >= v29 >> 1)
    v10 = sub_DDE2A4((char *)(v29 > 1), v30 + 1, 1, v10);
  *((_QWORD *)v10 + 2) = v6;
  v31 = &v10[32 * v30];
  *((_QWORD *)v31 + 4) = v47;
  *((_QWORD *)v31 + 5) = v26;
  *((_QWORD *)v31 + 6) = v28;
  *((_QWORD *)v31 + 7) = v46;
  *(_QWORD *)(v45 + 16) = v10;
  v32 = String.index(after:)(v9, v11, a6);
  v9 = v32;
  *(_QWORD *)(v49 + 16) = v32;
  if (*((_QWORD *)v10 + 2) != v44)
  {
    v8 = v32;
    v18 = v32;
    goto LABEL_11;
  }
  v18 = v32;
  v8 = v32;
LABEL_31:
  if (v50 == v8 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease(a6);
    v35 = v45;
    goto LABEL_39;
  }
  if (v50 >= v18 >> 14)
  {
    v6 = String.subscript.getter(v18, v43, v11, a6);
    v8 = v36;
    v9 = v37;
    v11 = v38;
    swift_bridgeObjectRelease(a6);
    if ((swift_isUniquelyReferenced_nonNull_native(v10) & 1) == 0)
      goto LABEL_45;
    goto LABEL_36;
  }
LABEL_44:
  __break(1u);
LABEL_45:
  v10 = sub_DDE2A4(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
LABEL_36:
  v40 = *((_QWORD *)v10 + 2);
  v39 = *((_QWORD *)v10 + 3);
  if (v40 >= v39 >> 1)
    v10 = sub_DDE2A4((char *)(v39 > 1), v40 + 1, 1, v10);
  *((_QWORD *)v10 + 2) = v40 + 1;
  v41 = &v10[32 * v40];
  *((_QWORD *)v41 + 4) = v6;
  *((_QWORD *)v41 + 5) = v8;
  *((_QWORD *)v41 + 6) = v9;
  *((_QWORD *)v41 + 7) = v11;
  v35 = v45;
  *(_QWORD *)(v45 + 16) = v10;
LABEL_39:
  swift_bridgeObjectRetain();
  swift_release(v35);
  v34 = v49;
LABEL_40:
  swift_release(v34);
  return v10;
}

uint64_t sub_E2A220(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v19;
  unint64_t v20;
  char *v21;

  v13 = *(_QWORD *)(a2 + 16);
  v14 = (v13 >> 14 == a1 >> 14) & a3;
  if (v14 == 1)
    return v14 ^ 1u;
  if (a1 >> 14 < v13 >> 14)
  {
    __break(1u);
    goto LABEL_9;
  }
  v6 = a4;
  v7 = String.subscript.getter(v13, a1, a5, a6);
  v8 = v15;
  v9 = v16;
  v10 = v17;
  v11 = *(char **)(v6 + 16);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v11);
  *(_QWORD *)(v6 + 16) = v11;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_9:
    v11 = sub_DDE2A4(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    *(_QWORD *)(v6 + 16) = v11;
  }
  v20 = *((_QWORD *)v11 + 2);
  v19 = *((_QWORD *)v11 + 3);
  if (v20 >= v19 >> 1)
  {
    v11 = sub_DDE2A4((char *)(v19 > 1), v20 + 1, 1, v11);
    *(_QWORD *)(v6 + 16) = v11;
  }
  *((_QWORD *)v11 + 2) = v20 + 1;
  v21 = &v11[32 * v20];
  *((_QWORD *)v21 + 4) = v7;
  *((_QWORD *)v21 + 5) = v8;
  *((_QWORD *)v21 + 6) = v9;
  *((_QWORD *)v21 + 7) = v10;
  return v14 ^ 1u;
}

unint64_t sub_E2A32C()
{
  unint64_t result;

  result = qword_1509290;
  if (!qword_1509290)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Substring, &type metadata for Substring);
    atomic_store(result, (unint64_t *)&qword_1509290);
  }
  return result;
}

uint64_t sub_E2A370(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Razzmatazz(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_E2A3B4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Razzmatazz(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_E2A3F0(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_E2A444(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[5];
  swift_bridgeObjectRelease(a1[7]);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t type metadata accessor for Razzmatazz.Venue(uint64_t a1)
{
  return sub_6345C(a1, qword_15093B0, (uint64_t)&nominal type descriptor for Razzmatazz.Venue);
}

uint64_t sub_E2A4AC(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = a1[1];
  v5 = a2[1];
  if (!v4)
  {
    if (v5)
      return 0;
    goto LABEL_10;
  }
  if (!v5)
    return 0;
  v6 = *a1;
  v7 = *a1 == *a2 && v4 == v5;
  if (v7 || (v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v4, *a2, v5, 0), result = 0, (v8 & 1) != 0))
  {
LABEL_10:
    v10 = a1[2];
    v11 = a1[3];
    v12 = a2[2];
    v13 = a2[3];
    if (v10 != v12 || v11 != v13)
    {
      v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v11, v12, v13, 0);
      result = 0;
      if ((v15 & 1) == 0)
        return result;
    }
    v16 = a1[5];
    v17 = a2[5];
    if (v16)
    {
      if (v17)
      {
        v18 = a1[4];
        v19 = a2[4];
        if (v18 != v19 || v16 != v17)
        {
          v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v16, v19, v17, 0);
          result = 0;
          if ((v20 & 1) == 0)
            return result;
        }
LABEL_24:
        v21 = a1[6];
        v22 = a1[7];
        v23 = a2[6];
        v24 = a2[7];
        if (v21 == v23 && v22 == v24)
          return 1;
        else
          return _stringCompareWithSmolCheck(_:_:expecting:)(v21, v22, v23, v24, 0);
      }
    }
    else if (!v17)
    {
      goto LABEL_24;
    }
    return 0;
  }
  return result;
}

uint64_t sub_E2A5AC(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  _OWORD v19[4];
  _OWORD v20[4];

  v4 = *a1;
  v5 = a1[1];
  v6 = *(_QWORD *)(a2 + 8);
  v7 = v4 == *(_QWORD *)a2 && v5 == v6;
  if (!v7 && (_stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *(_QWORD *)a2, v6, 0) & 1) == 0)
    return 0;
  v8 = a1[2];
  v9 = a1[3];
  v10 = *(_QWORD *)(a2 + 16);
  v11 = *(_QWORD *)(a2 + 24);
  v12 = v8 == v10 && v9 == v11;
  if (!v12 && (_stringCompareWithSmolCheck(_:_:expecting:)(v8, v9, v10, v11, 0) & 1) == 0)
    return 0;
  v13 = *((_OWORD *)a1 + 3);
  v19[0] = *((_OWORD *)a1 + 2);
  v19[1] = v13;
  v14 = *((_OWORD *)a1 + 5);
  v19[2] = *((_OWORD *)a1 + 4);
  v19[3] = v14;
  v15 = *(_OWORD *)(a2 + 48);
  v20[0] = *(_OWORD *)(a2 + 32);
  v20[1] = v15;
  v16 = *(_OWORD *)(a2 + 80);
  v20[2] = *(_OWORD *)(a2 + 64);
  v20[3] = v16;
  if ((sub_E2A4AC((uint64_t *)v19, v20) & 1) == 0)
    return 0;
  sub_E2B910();
  if ((static NSObject.== infix(_:_:)(a1[12], *(_QWORD *)(a2 + 96)) & 1) == 0)
    return 0;
  v17 = type metadata accessor for Razzmatazz.Venue(0);
  return static TimeZone.== infix(_:_:)((char *)a1 + *(int *)(v17 + 32), a2 + *(int *)(v17 + 32));
}

uint64_t _s11MusicCoreUI10RazzmatazzV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  int *v13;
  double v14;

  v4 = *a1;
  v5 = a1[1];
  v6 = a2[1];
  v7 = v4 == *a2 && v5 == v6;
  if ((v7 || (_stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *a2, v6, 0) & 1) != 0)
    && ((v8 = a1[2], v9 = a1[3], v10 = a2[2], v11 = a2[3], v8 == v10) ? (v12 = v9 == v11) : (v12 = 0),
        (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)(v8, v9, v10, v11, 0) & 1) != 0)
     && (v13 = (int *)type metadata accessor for Razzmatazz(0),
         (static Date.== infix(_:_:)((char *)a1 + v13[6], (char *)a2 + v13[6], v14) & 1) != 0)
     && (static Artist.== infix(_:_:)((char *)a1 + v13[7], (char *)a2 + v13[7]) & 1) != 0))
  {
    return sub_E2A5AC((uint64_t *)((char *)a1 + v13[8]), (uint64_t)a2 + v13[8]);
  }
  else
  {
    return 0;
  }
}

uint64_t sub_E2A758()
{
  return sub_4DD24(&qword_15092B0, type metadata accessor for Razzmatazz, (uint64_t)&protocol conformance descriptor for Razzmatazz);
}

uint64_t *initializeBufferWithCopyOfBuffer for Razzmatazz(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  id v32;
  uint64_t v33;
  char *v35;
  void *v36;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v33 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v33 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a3[6];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for Date(0);
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    v14 = a3[7];
    v15 = (char *)v4 + v14;
    v16 = (char *)a2 + v14;
    v17 = type metadata accessor for Artist(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    v18 = a3[8];
    v19 = (uint64_t *)((char *)v4 + v18);
    v20 = (uint64_t *)((char *)a2 + v18);
    v21 = *(uint64_t *)((char *)a2 + v18);
    v22 = v20[1];
    *v19 = v21;
    v19[1] = v22;
    v23 = v20[3];
    v19[2] = v20[2];
    v19[3] = v23;
    v24 = v20[5];
    v19[4] = v20[4];
    v19[5] = v24;
    v25 = v20[7];
    v19[6] = v20[6];
    v19[7] = v25;
    v26 = v20[9];
    v19[8] = v20[8];
    v19[9] = v26;
    v27 = v20[11];
    v19[10] = v20[10];
    v19[11] = v27;
    v36 = (void *)v20[12];
    v19[12] = v36;
    v28 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
    v35 = (char *)v19 + v28;
    v29 = (char *)v20 + v28;
    v30 = type metadata accessor for TimeZone(0);
    v31 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v32 = v36;
    v31(v35, v29, v30);
  }
  return v4;
}

uint64_t destroy for Razzmatazz(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[6];
  v5 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + a2[7];
  v7 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = a1 + a2[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v9 = v8 + *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v10 = type metadata accessor for TimeZone(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

_QWORD *initializeWithCopy for Razzmatazz(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  id v31;
  char *v33;
  void *v34;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for Date(0);
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  v13 = a3[7];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  v17 = a3[8];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  v20 = *(_QWORD *)((char *)a2 + v17 + 8);
  *v18 = *(_QWORD *)((char *)a2 + v17);
  v18[1] = v20;
  v21 = *(_QWORD *)((char *)a2 + v17 + 16);
  v22 = v19[3];
  v18[2] = v21;
  v18[3] = v22;
  v23 = v19[5];
  v18[4] = v19[4];
  v18[5] = v23;
  v24 = v19[7];
  v18[6] = v19[6];
  v18[7] = v24;
  v25 = v19[9];
  v18[8] = v19[8];
  v18[9] = v25;
  v26 = v19[11];
  v18[10] = v19[10];
  v18[11] = v26;
  v34 = (void *)v19[12];
  v18[12] = v34;
  v27 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v33 = (char *)v18 + v27;
  v28 = (char *)v19 + v27;
  v29 = type metadata accessor for TimeZone(0);
  v30 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v31 = v34;
  v30(v33, v28, v29);
  return a1;
}

_QWORD *assignWithCopy for Razzmatazz(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[7];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  v14 = a3[8];
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  *v15 = *(_QWORD *)((char *)a2 + v14);
  v15[1] = *(_QWORD *)((char *)a2 + v14 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[2] = v16[2];
  v15[3] = v16[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[4] = v16[4];
  v15[5] = v16[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[6] = v16[6];
  v15[7] = v16[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[8] = v16[8];
  v15[9] = v16[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[10] = v16[10];
  v15[11] = v16[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = (void *)v16[12];
  v18 = (void *)v15[12];
  v15[12] = v17;
  v19 = v17;

  v20 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v21 = (char *)v15 + v20;
  v22 = (char *)v16 + v20;
  v23 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 24))(v21, v22, v23);
  return a1;
}

_OWORD *initializeWithTake for Razzmatazz(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[7];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[8];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = *((_OWORD *)v17 + 1);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *((_OWORD *)v16 + 1) = v18;
  v19 = *((_OWORD *)v17 + 3);
  *((_OWORD *)v16 + 2) = *((_OWORD *)v17 + 2);
  *((_OWORD *)v16 + 3) = v19;
  v20 = *((_OWORD *)v17 + 5);
  *((_OWORD *)v16 + 4) = *((_OWORD *)v17 + 4);
  *((_OWORD *)v16 + 5) = v20;
  *((_QWORD *)v16 + 12) = *((_QWORD *)v17 + 12);
  v21 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v22 = &v16[v21];
  v23 = &v17[v21];
  v24 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
  return a1;
}

_QWORD *assignWithTake for Razzmatazz(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = a3[7];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v16 = a3[8];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  v20 = v18[3];
  v17[2] = v18[2];
  v17[3] = v20;
  swift_bridgeObjectRelease();
  v21 = v18[5];
  v17[4] = v18[4];
  v17[5] = v21;
  swift_bridgeObjectRelease();
  v22 = v18[7];
  v17[6] = v18[6];
  v17[7] = v22;
  swift_bridgeObjectRelease();
  v23 = v18[9];
  v17[8] = v18[8];
  v17[9] = v23;
  swift_bridgeObjectRelease();
  v24 = v18[11];
  v17[10] = v18[10];
  v17[11] = v24;
  swift_bridgeObjectRelease();
  v25 = (void *)v17[12];
  v17[12] = v18[12];

  v26 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v27 = (char *)v17 + v26;
  v28 = (char *)v18 + v26;
  v29 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 40))(v27, v28, v29);
  return a1;
}

uint64_t getEnumTagSinglePayload for Razzmatazz(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_E2AFF0);
}

uint64_t sub_E2AFF0(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for Date(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[6];
    }
    else
    {
      v12 = type metadata accessor for Artist(0);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[7];
      }
      else
      {
        v10 = type metadata accessor for Razzmatazz.Venue(0);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a3[8];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for Razzmatazz(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_E2B0C0);
}

uint64_t sub_E2B0C0(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for Date(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[6];
    }
    else
    {
      v12 = type metadata accessor for Artist(0);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[7];
      }
      else
      {
        v10 = type metadata accessor for Razzmatazz.Venue(0);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[8];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t sub_E2B180(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  _QWORD v6[5];

  v6[0] = &unk_10ADD80;
  v6[1] = &unk_10ADD80;
  result = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v6[2] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for Artist(319);
    if (v4 <= 0x3F)
    {
      v6[3] = *(_QWORD *)(result - 8) + 64;
      result = type metadata accessor for Razzmatazz.Venue(319);
      if (v5 <= 0x3F)
      {
        v6[4] = *(_QWORD *)(result - 8) + 64;
        swift_initStructMetadata(a1, 256, 5, v6, a1 + 16);
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_E2B22C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  id v15;
  uint64_t v16;
  char *v18;
  char *v19;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v16 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v16 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v16);
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = a2[5];
    a1[4] = a2[4];
    a1[5] = v7;
    v8 = a2[7];
    a1[6] = a2[6];
    a1[7] = v8;
    v9 = a2[9];
    a1[8] = a2[8];
    a1[9] = v9;
    v10 = a2[11];
    a1[10] = a2[10];
    a1[11] = v10;
    v11 = (void *)a2[12];
    v12 = *(int *)(a3 + 32);
    v18 = (char *)a2 + v12;
    v19 = (char *)a1 + v12;
    a1[12] = (uint64_t)v11;
    v13 = type metadata accessor for TimeZone(0);
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15 = v11;
    v14(v19, v18, v13);
  }
  return v3;
}

uint64_t sub_E2B33C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 72));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 88));

  v4 = a1 + *(int *)(a2 + 32);
  v5 = type metadata accessor for TimeZone(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_E2B3B4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  id v14;
  char *v16;
  char *v17;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  v10 = (void *)a2[12];
  v11 = *(int *)(a3 + 32);
  v16 = (char *)a2 + v11;
  v17 = (char *)a1 + v11;
  a1[12] = v10;
  v12 = type metadata accessor for TimeZone(0);
  v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14 = v10;
  v13(v17, v16, v12);
  return a1;
}

_QWORD *sub_E2B498(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  *a1 = *a2;
  v6 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  a1[2] = a2[2];
  v7 = a1[3];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v7);
  a1[4] = a2[4];
  v8 = a1[5];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v8);
  a1[6] = a2[6];
  v9 = a1[7];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v9);
  a1[8] = a2[8];
  v10 = a1[9];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v10);
  a1[10] = a2[10];
  v11 = a1[11];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v11);
  v12 = (void *)a2[12];
  v13 = (void *)a1[12];
  a1[12] = v12;
  v14 = v12;

  v15 = *(int *)(a3 + 32);
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t sub_E2B5C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  v7 = *(int *)(a3 + 32);
  v8 = a2 + v7;
  v9 = a1 + v7;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  v10 = type metadata accessor for TimeZone(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v9, v8, v10);
  return a1;
}

_QWORD *sub_E2B63C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = a2[3];
  v9 = a1[3];
  a1[2] = a2[2];
  a1[3] = v8;
  swift_bridgeObjectRelease(v9);
  v10 = a2[5];
  v11 = a1[5];
  a1[4] = a2[4];
  a1[5] = v10;
  swift_bridgeObjectRelease(v11);
  v12 = a2[7];
  v13 = a1[7];
  a1[6] = a2[6];
  a1[7] = v12;
  swift_bridgeObjectRelease(v13);
  v14 = a2[9];
  v15 = a1[9];
  a1[8] = a2[8];
  a1[9] = v14;
  swift_bridgeObjectRelease(v15);
  v16 = a2[11];
  v17 = a1[11];
  a1[10] = a2[10];
  a1[11] = v16;
  swift_bridgeObjectRelease(v17);
  v18 = (void *)a1[12];
  a1[12] = a2[12];

  v19 = *(int *)(a3 + 32);
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t sub_E2B708(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_E2B714);
}

uint64_t sub_E2B714(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for TimeZone(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v8);
  }
}

uint64_t sub_E2B790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_E2B79C);
}

uint64_t sub_E2B79C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for TimeZone(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

uint64_t sub_E2B810(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = &unk_10ADD80;
  v4[1] = &unk_10ADD80;
  v4[2] = "@";
  v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  result = type metadata accessor for TimeZone(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_E2B89C()
{
  return sub_4DD24(&qword_15093F8, type metadata accessor for Razzmatazz.Venue, (uint64_t)&unk_10ADDB8);
}

uint64_t sub_E2B8C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_150E7F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_E2B910()
{
  unint64_t result;
  uint64_t v1;

  result = qword_15077E0;
  if (!qword_15077E0)
  {
    v1 = objc_opt_self(NSObject);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_15077E0);
  }
  return result;
}

uint64_t sub_E2B94C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_E2B970()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

ValueMetadata *type metadata accessor for Razzmatazz.Venue.Address()
{
  return &type metadata for Razzmatazz.Venue.Address;
}

unint64_t sub_E2B994()
{
  unint64_t result;

  result = qword_1509400;
  if (!qword_1509400)
  {
    result = swift_getWitnessTable(&unk_10ADE60, &type metadata for Razzmatazz.Venue.Address);
    atomic_store(result, (unint64_t *)&qword_1509400);
  }
  return result;
}

uint64_t sub_E2B9D8(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  char v9;

  if (a1 == 0x73736572646461 && a2 == 0xE700000000000000)
  {
    v5 = 0xE700000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x73736572646461, 0xE700000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 2037672291 && a2 == 0xE400000000000000)
  {
    v7 = 0xE400000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(2037672291, 0xE400000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x6E6F69676572 && a2 == 0xE600000000000000)
  {
    v8 = 0xE600000000000000;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F69676572, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 0x7972746E756F63 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease(0xE700000000000000);
    return 3;
  }
  else
  {
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(0x7972746E756F63, 0xE700000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v9 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

void sub_E2BB78(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;
  char v34;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509408);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  v11 = sub_E2BE50();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for Razzmatazz.Venue.Address.CodingKeys, &type metadata for Razzmatazz.Venue.Address.CodingKeys, v11, v9, v10);
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  else
  {
    v34 = 0;
    v12 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v34, v5);
    v14 = v13;
    v29 = v12;
    v33 = 1;
    swift_bridgeObjectRetain();
    v15 = KeyedDecodingContainer.decode(_:forKey:)(&v33, v5);
    v30 = v16;
    v28 = v15;
    v32 = 2;
    swift_bridgeObjectRetain();
    v26 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v32, v5);
    v27 = v17;
    v31 = 3;
    swift_bridgeObjectRetain();
    v18 = KeyedDecodingContainer.decode(_:forKey:)(&v31, v5);
    v20 = v19;
    v21 = *(void (**)(char *, uint64_t))(v6 + 8);
    v22 = v18;
    v21(v8, v5);
    swift_bridgeObjectRetain();
    v23 = v30;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(a1);
    swift_bridgeObjectRelease();
    v24 = v27;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *a2 = v29;
    a2[1] = v14;
    a2[2] = v28;
    a2[3] = v23;
    a2[4] = v26;
    a2[5] = v24;
    a2[6] = v22;
    a2[7] = v20;
  }
}

unint64_t sub_E2BE50()
{
  unint64_t result;

  result = qword_1509410;
  if (!qword_1509410)
  {
    result = swift_getWitnessTable(&unk_10ADFB4, &type metadata for Razzmatazz.Venue.Address.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1509410);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for Razzmatazz.Venue.Address.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_E2BEE0 + 4 * byte_10ADCF1[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_E2BF14 + 4 * byte_10ADCEC[v4]))();
}

uint64_t sub_E2BF14(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_E2BF1C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xE2BF24);
  return result;
}

uint64_t sub_E2BF30(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xE2BF38);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_E2BF3C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_E2BF44(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Razzmatazz.Venue.Address.CodingKeys()
{
  return &type metadata for Razzmatazz.Venue.Address.CodingKeys;
}

unint64_t sub_E2BF64()
{
  unint64_t result;

  result = qword_1509418;
  if (!qword_1509418)
  {
    result = swift_getWitnessTable(&unk_10ADF8C, &type metadata for Razzmatazz.Venue.Address.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1509418);
  }
  return result;
}

unint64_t sub_E2BFAC()
{
  unint64_t result;

  result = qword_1509420;
  if (!qword_1509420)
  {
    result = swift_getWitnessTable(&unk_10ADEFC, &type metadata for Razzmatazz.Venue.Address.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1509420);
  }
  return result;
}

unint64_t sub_E2BFF4()
{
  unint64_t result;

  result = qword_1509428;
  if (!qword_1509428)
  {
    result = swift_getWitnessTable(&unk_10ADF24, &type metadata for Razzmatazz.Venue.Address.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1509428);
  }
  return result;
}

uint64_t sub_E2C038(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  int64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  void (*v49)(uint64_t);
  uint64_t v50;

  v49 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_15095F0);
  __chkstk_darwin();
  v48 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Razzmatazz(0);
  v7 = *(_QWORD *)(v6 - 8);
  v44 = v6;
  v45 = v7;
  __chkstk_darwin();
  v40 = (uint64_t)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v39 = (uint64_t)&v38 - v9;
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_15095F8);
  __chkstk_darwin();
  v46 = (uint64_t)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v12 = (uint64_t *)((char *)&v38 - v11);
  v13 = *(_QWORD *)(a3 + 64);
  v42 = a3 + 64;
  v14 = 1 << *(_BYTE *)(a3 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v43 = (unint64_t)(v14 + 63) >> 6;
  v50 = a3;
  result = swift_bridgeObjectRetain();
  v18 = 0;
  v41 = _swiftEmptyArrayStorage;
  while (1)
  {
    if (v16)
    {
      v19 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v20 = v19 | (v18 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v18++, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v18 >= v43)
      goto LABEL_32;
    v22 = *(_QWORD *)(v42 + 8 * v18);
    if (!v22)
      break;
LABEL_18:
    v16 = (v22 - 1) & v22;
    v20 = __clz(__rbit64(v22)) + (v18 << 6);
LABEL_19:
    v24 = *(_QWORD *)(v50 + 56);
    v25 = (uint64_t *)(*(_QWORD *)(v50 + 48) + 16 * v20);
    v26 = *v25;
    v27 = v25[1];
    v28 = type metadata accessor for ShazamEvent(0);
    sub_5BDB8(v24 + *(_QWORD *)(*(_QWORD *)(v28 - 8) + 72) * v20, (uint64_t)v12 + *(int *)(v47 + 48), type metadata accessor for ShazamEvent);
    *v12 = v26;
    v12[1] = v27;
    v29 = v46;
    sub_5C090((uint64_t)v12, v46, &qword_15095F8);
    swift_bridgeObjectRetain();
    v30 = (uint64_t)v48;
    v49(v29);
    if (v3)
    {
      sub_56024(v29, &qword_15095F8);
      v37 = v41;
      swift_bridgeObjectRelease();
LABEL_33:
      swift_release();
      return (uint64_t)v37;
    }
    sub_56024(v29, &qword_15095F8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v30, 1, v44) == 1)
    {
      result = sub_56024(v30, &qword_15095F0);
    }
    else
    {
      v31 = v30;
      v32 = v39;
      sub_5C04C(v31, v39, type metadata accessor for Razzmatazz);
      sub_5C04C(v32, v40, type metadata accessor for Razzmatazz);
      if ((swift_isUniquelyReferenced_nonNull_native(v41) & 1) == 0)
        v41 = (_QWORD *)sub_DDE290(0, v41[2] + 1, 1, v41);
      v34 = v41[2];
      v33 = v41[3];
      if (v34 >= v33 >> 1)
        v41 = (_QWORD *)sub_DDE290(v33 > 1, v34 + 1, 1, v41);
      v35 = v40;
      v36 = v41;
      v41[2] = v34 + 1;
      result = sub_5C04C(v35, (uint64_t)v36+ ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))+ *(_QWORD *)(v45 + 72) * v34, type metadata accessor for Razzmatazz);
    }
  }
  v23 = v18 + 1;
  if (v18 + 1 >= v43)
    goto LABEL_32;
  v22 = *(_QWORD *)(v42 + 8 * v23);
  if (v22)
    goto LABEL_17;
  v23 = v18 + 2;
  if (v18 + 2 >= v43)
    goto LABEL_32;
  v22 = *(_QWORD *)(v42 + 8 * v23);
  if (v22)
    goto LABEL_17;
  v23 = v18 + 3;
  if (v18 + 3 >= v43)
    goto LABEL_32;
  v22 = *(_QWORD *)(v42 + 8 * v23);
  if (v22)
    goto LABEL_17;
  v23 = v18 + 4;
  if (v18 + 4 >= v43)
  {
LABEL_32:
    v37 = v41;
    goto LABEL_33;
  }
  v22 = *(_QWORD *)(v42 + 8 * v23);
  if (v22)
  {
LABEL_17:
    v18 = v23;
    goto LABEL_18;
  }
  while (1)
  {
    v18 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v18 >= v43)
      goto LABEL_32;
    v22 = *(_QWORD *)(v42 + 8 * v18);
    ++v23;
    if (v22)
      goto LABEL_18;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_E2C474()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&off_10AE1B8);
  v2 = swift_getKeyPath(&unk_10AE1E0);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

void sub_E2C4E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;

  KeyPath = swift_getKeyPath(&unk_10AE150);
  v4 = swift_getKeyPath(&unk_10AE178);
  static Published.subscript.getter(&v16, v1, KeyPath, v4);
  swift_release(KeyPath);
  swift_release(v4);
  v5 = v17;
  v7 = v18;
  v6 = v19;
  v8 = v20;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = v16 == *(_QWORD *)a1 && v17 == v9;
  if (!v10 && (_stringCompareWithSmolCheck(_:_:expecting:)(v16, v17, *(_QWORD *)a1, v9, 0) & 1) == 0)
  {
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v5);
    goto LABEL_14;
  }
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  if (v7 != v11 || v6 != v12)
  {
    v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v6, v11, v12, 0);
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v5);
    if ((v13 & 1) != 0)
      goto LABEL_10;
LABEL_14:
    v14 = swift_getKeyPath(&unk_10AE150);
    v15 = swift_getKeyPath(&unk_10AE178);
    static Published.subscript.getter(&v16, v1, v14, v15);
    swift_release(v14);
    swift_release(v15);
    sub_E318A0((uint64_t)&v16);
    return;
  }
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v5);
LABEL_10:
  if (*(double *)&v8 != *(double *)(a1 + 32) || *((double *)&v8 + 1) != *(double *)(a1 + 40))
    goto LABEL_14;
}

double sub_E2C670@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  double result;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;

  KeyPath = swift_getKeyPath(&unk_10AE150);
  v4 = swift_getKeyPath(&unk_10AE178);
  static Published.subscript.getter(&v9, v1, KeyPath, v4);
  swift_release(KeyPath);
  swift_release(v4);
  result = *(double *)&v9;
  v6 = v10;
  v7 = v11;
  v8 = v12;
  *(_OWORD *)a1 = v9;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_OWORD *)(a1 + 32) = v8;
  return result;
}

uint64_t sub_E2C6F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[48];
  _OWORD v16[3];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509538);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v0 + OBJC_IVAR____TtC11MusicCoreUI20RazzmatazzController__razzmatazz;
  *(_QWORD *)&v20 = _swiftEmptyArrayStorage;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1507590);
  Published.init(initialValue:)(&v20, v6);
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v5, v4, v1);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI20RazzmatazzController__location, &v17, 33, 0);
  strcpy((char *)&v20, "Cupertino, CA");
  HIWORD(v20) = -4864;
  strcpy((char *)&v21, "United States");
  HIWORD(v21) = -4864;
  v22 = xmmword_10A97C0;
  Published.init(initialValue:)(&v20, &type metadata for RazzmatazzController.Location);
  swift_endAccess(&v17);
  sub_E31C54((uint64_t)v15);
  sub_5C090((uint64_t)v15, (uint64_t)v16, &qword_1509510);
  if (*((_QWORD *)&v16[0] + 1))
  {
    v17 = v16[0];
    v18 = v16[1];
    v19 = v16[2];
    KeyPath = swift_getKeyPath(&unk_10AE150);
    v8 = swift_getKeyPath(&unk_10AE178);
    static Published.subscript.getter(&v12, v0, KeyPath, v8);
    swift_release(KeyPath);
    swift_release(v8);
    v20 = v12;
    v21 = v13;
    v22 = v14;
    v9 = swift_getKeyPath(&unk_10AE150);
    v10 = swift_getKeyPath(&unk_10AE178);
    v12 = v17;
    v13 = v18;
    v14 = v19;
    swift_retain(v0);
    static Published.subscript.setter(&v12, v0, v9, v10);
    sub_E2C4E4((uint64_t)&v20);
    v23 = v20;
    sub_8B134((uint64_t)&v23);
    v12 = v21;
    sub_8B134((uint64_t)&v12);
  }
  return v0;
}

uint64_t sub_E2C940(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  __n128 v7;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t);

  v5[4] = a4;
  v5[5] = type metadata accessor for MainActor(0);
  v5[6] = static MainActor.shared.getter(v7);
  v10 = (uint64_t (*)(uint64_t))((char *)&dword_1509550 + dword_1509550);
  v8 = (_QWORD *)swift_task_alloc(unk_1509554);
  v5[7] = v8;
  *v8 = v5;
  v8[1] = sub_E2C9C0;
  return v10(a5);
}

uint64_t sub_E2C9C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  *(_QWORD *)(*(_QWORD *)v1 + 64) = a1;
  swift_task_dealloc(v2);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  return swift_task_switch(sub_E2CA38, v4, v5);
}

uint64_t sub_E2CA38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 32);
  swift_release();
  *(_QWORD *)(v0 + 16) = v1;
  KeyPath = swift_getKeyPath(&unk_10AE198);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1507590);
  v5 = sub_E32690();
  v6 = sub_4DD24(&qword_1509000, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  v7 = Sequence.sorted<A>(by:comparator:)(KeyPath, (uint64_t)sub_E2FED4, 0, v4, v5, v6);
  swift_release();
  swift_bridgeObjectRelease();
  v8 = swift_getKeyPath(&off_10AE1B8);
  v9 = swift_getKeyPath(&unk_10AE1E0);
  *(_QWORD *)(v0 + 24) = v7;
  swift_retain();
  static Published.subscript.setter(v0 + 24, v2, v8, v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_E2CB44(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Swift::UInt64 v8;
  Swift::UInt64 v9;

  v2 = v1;
  v4 = *v2;
  v5 = v2[1];
  swift_bridgeObjectRetain();
  String.hash(into:)(a1, v4, v5);
  swift_bridgeObjectRelease(v5);
  v6 = v2[2];
  v7 = v2[3];
  swift_bridgeObjectRetain();
  String.hash(into:)(a1, v6, v7);
  swift_bridgeObjectRelease(v7);
  if ((v2[4] & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v8 = v2[4];
  else
    v8 = 0;
  Hasher._combine(_:)(v8);
  if ((v2[5] & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v9 = v2[5];
  else
    v9 = 0;
  Hasher._combine(_:)(v9);
}

uint64_t sub_E2CBD4(_QWORD *a1)
{
  double *v1;
  uint64_t v2;
  double *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  double v17;
  uint64_t v19;
  char v20;
  char v21;
  char v22;
  char v23;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509530);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  v11 = sub_E3264C();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for RazzmatazzController.Location.CodingKeys, &type metadata for RazzmatazzController.Location.CodingKeys, v11, v9, v10);
  v12 = *v3;
  v13 = *((_QWORD *)v3 + 1);
  v23 = 0;
  KeyedEncodingContainer.encode(_:forKey:)(*(_QWORD *)&v12, v13, &v23, v5);
  if (!v2)
  {
    v14 = *((_QWORD *)v3 + 2);
    v15 = *((_QWORD *)v3 + 3);
    v22 = 1;
    KeyedEncodingContainer.encode(_:forKey:)(v14, v15, &v22, v5);
    v16 = v3[4];
    v21 = 2;
    KeyedEncodingContainer.encode(_:forKey:)(&v21, v5, v16);
    v17 = v3[5];
    v20 = 3;
    KeyedEncodingContainer.encode(_:forKey:)(&v20, v5, v17);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_E2CD38()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_E2CD64 + 4 * byte_10AE010[*v0]))(0x656C746974, 0xE500000000000000);
}

uint64_t sub_E2CD64()
{
  return 0x656C746974627573;
}

uint64_t sub_E2CD7C()
{
  return 0x656475746974616CLL;
}

uint64_t sub_E2CD94()
{
  return 0x64757469676E6F6CLL;
}

uint64_t sub_E2CDB0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_E3224C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_E2CDD4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E3264C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_E2CDFC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E3264C();
  return CodingKey.debugDescription.getter(a1, v2);
}

Swift::Int sub_E2CE24()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  sub_E2CB44((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_E2CE64()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  sub_E2CB44((uint64_t)v1);
  return Hasher._finalize()();
}

double sub_E2CE9C@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;

  sub_E32408(a1, (uint64_t *)v6);
  if (!v2)
  {
    v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_E2CEDC(_QWORD *a1)
{
  return sub_E2CBD4(a1);
}

BOOL sub_E2CEF0(_OWORD *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[3];
  _OWORD v8[3];

  v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  v3 = *a2;
  v4 = a2[1];
  v7[2] = a1[2];
  v8[0] = v3;
  v5 = a2[2];
  v8[1] = v4;
  v8[2] = v5;
  return sub_E309BC((double *)v7, (uint64_t)v8);
}

double sub_E2CF34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double result;

  v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI20RazzmatazzController__razzmatazz;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509538);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC11MusicCoreUI20RazzmatazzController__location;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509540);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  *(_QWORD *)&result = swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52)).n128_u64[0];
  return result;
}

uint64_t sub_E2CFB4()
{
  return type metadata accessor for RazzmatazzController(0);
}

uint64_t type metadata accessor for RazzmatazzController(uint64_t a1)
{
  return sub_6345C(a1, (uint64_t *)&unk_1509468, (uint64_t)&nominal type descriptor for RazzmatazzController);
}

void sub_E2CFD0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[2];

  sub_E2D058(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_E2D0B0();
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      swift_updateClassMetadata2(a1, 256, 2, v6, a1 + 80);
    }
  }
}

void sub_E2D058(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1509478)
  {
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1507590);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1509478);
  }
}

void sub_E2D0B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1509480)
  {
    v0 = type metadata accessor for Published(0, &type metadata for RazzmatazzController.Location);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1509480);
  }
}

uint64_t initializeWithCopy for RazzmatazzController.Location(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for RazzmatazzController.Location(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  *a1 = *a2;
  v4 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  a1[2] = a2[2];
  v5 = a1[3];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v5);
  a1[4] = a2[4];
  a1[5] = a2[5];
  return a1;
}

uint64_t assignWithTake for RazzmatazzController.Location(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease(v7);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for RazzmatazzController.Location()
{
  return &type metadata for RazzmatazzController.Location;
}

unint64_t sub_E2D228()
{
  unint64_t result;

  result = qword_1509508;
  if (!qword_1509508)
  {
    result = swift_getWitnessTable(&unk_10AE060, &type metadata for RazzmatazzController.Location);
    atomic_store(result, (unint64_t *)&qword_1509508);
  }
  return result;
}

uint64_t sub_E2D274@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v9 = type metadata accessor for Artist(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin();
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_15095F8);
  __chkstk_darwin();
  v15 = *(int *)(v14 + 48);
  v16 = (uint64_t *)((char *)&v29 + v15 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_5BDB8(a1 + v15, (uint64_t)v16, type metadata accessor for ShazamEvent);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a3, v9);
  swift_bridgeObjectRetain();
  sub_E2D558(v16, a2, (uint64_t)v12, a4);
  if (v4)
  {
    if (qword_15061D8 != -1)
      swift_once(&qword_15061D8, sub_E2FD80);
    v17 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v17, (uint64_t)qword_1583E18);
    swift_errorRetain(v4);
    v18 = swift_errorRetain(v4);
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.error.getter(v19);
    if (os_log_type_enabled(v19, v20))
    {
      v21 = swift_slowAlloc(12, -1);
      v22 = swift_slowAlloc(32, -1);
      v31 = v22;
      *(_DWORD *)v21 = 136315138;
      v30 = v4;
      swift_errorRetain(v4);
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1507690);
      v24 = (char *)String.init<A>(describing:)(&v30, v23);
      *(_QWORD *)(v21 + 4) = sub_DCF730(v24, v25, &v31);
      swift_bridgeObjectRelease();
      swift_errorRelease(v4);
      swift_errorRelease(v4);
      _os_log_impl(&dword_0, v19, v20, "Could not initialize Razzmatazz with error=%s", (uint8_t *)v21, 0xCu);
      swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v22, -1, -1);
      swift_slowDealloc(v21, -1, -1);

      swift_errorRelease(v4);
    }
    else
    {
      swift_errorRelease(v4);
      swift_errorRelease(v4);
      swift_errorRelease(v4);

    }
    v28 = type metadata accessor for Razzmatazz(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(a4, 1, 1, v28);
  }
  else
  {
    v26 = type metadata accessor for Razzmatazz(0);
    return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(a4, 0, 1, v26);
  }
}

uint64_t sub_E2D558@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  int *v48;
  char *v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD v59[2];
  int *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  v5 = v4;
  v83 = a3;
  v9 = type metadata accessor for TimeZone(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin();
  v12 = (char *)v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Date(0);
  v81 = *(_QWORD *)(v13 - 8);
  v82 = v13;
  __chkstk_darwin();
  v15 = (char *)v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for ShazamEvent(0);
  v17 = *(_QWORD **)((char *)a1 + *(int *)(v16 + 24) + 8);
  if (v17[2] && *(_QWORD *)(a2 + 16))
  {
    v18 = v16;
    v80 = a4;
    v19 = v17[4];
    v20 = v17[5];
    swift_bridgeObjectRetain();
    v21 = sub_21BAD0(v19, v20);
    if ((v22 & 1) != 0)
    {
      v23 = (uint64_t *)(*(_QWORD *)(a2 + 56) + 104 * v21);
      v24 = *v23;
      v76 = v12;
      v25 = v23[2];
      v75 = v23[1];
      v71 = v25;
      v72 = v24;
      v78 = v10;
      v26 = v23[4];
      v77 = v23[3];
      v64 = v5;
      v27 = v23[5];
      v69 = v23[6];
      v70 = v26;
      v59[0] = v23[7];
      v29 = v23[8];
      v28 = v23[9];
      v67 = v23[10];
      v68 = v29;
      v79 = v9;
      v30 = (void *)v23[12];
      v62 = v23[11];
      v63 = v28;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v60 = v30;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v31 = v59[0];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v32 = *a1;
      v33 = a1[1];
      v34 = (char *)a1 + *(int *)(v18 + 20);
      v35 = *((_QWORD *)v34 + 1);
      v73 = *(_QWORD *)v34;
      v74 = v32;
      v65 = v35;
      v66 = v33;
      v36 = type metadata accessor for ShazamEvent.Attributes(0);
      (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v15, &v34[*(int *)(v36 + 20)], v82);
      (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v76, &v34[*(int *)(v36 + 24)], v79);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v37 = v75;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v59[1] = v27;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v61 = v15;
      v38 = v63;
      swift_bridgeObjectRetain();
      v39 = v62;
      swift_bridgeObjectRetain();
      v40 = v60;
      sub_5C0DC((uint64_t)a1, type metadata accessor for ShazamEvent);
      v60 = (int *)type metadata accessor for Razzmatazz(0);
      v41 = v80;
      v42 = &v80[v60[8]];
      *(_QWORD *)v42 = v72;
      *((_QWORD *)v42 + 1) = v37;
      v43 = v77;
      *((_QWORD *)v42 + 2) = v71;
      *((_QWORD *)v42 + 3) = v43;
      *((_QWORD *)v42 + 4) = v70;
      *((_QWORD *)v42 + 5) = v27;
      *((_QWORD *)v42 + 6) = v69;
      *((_QWORD *)v42 + 7) = v31;
      *((_QWORD *)v42 + 8) = v68;
      *((_QWORD *)v42 + 9) = v38;
      *((_QWORD *)v42 + 10) = v67;
      *((_QWORD *)v42 + 11) = v39;
      *((_QWORD *)v42 + 12) = v40;
      v44 = type metadata accessor for Razzmatazz.Venue(0);
      (*(void (**)(char *, char *, uint64_t))(v78 + 32))(&v42[*(int *)(v44 + 32)], v76, v79);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v45 = swift_bridgeObjectRelease();
      v46 = v66;
      *(_QWORD *)v41 = v74;
      *((_QWORD *)v41 + 1) = v46;
      v47 = v65;
      *((_QWORD *)v41 + 2) = v73;
      *((_QWORD *)v41 + 3) = v47;
      v48 = v60;
      (*(void (**)(char *, char *, uint64_t, __n128))(v81 + 32))(&v41[v60[6]], v61, v82, v45);
      v49 = &v41[v48[7]];
      v50 = type metadata accessor for Artist(0);
      return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v49, v83, v50);
    }
    swift_bridgeObjectRelease();
  }
  v52 = type metadata accessor for RazzmatazzAPI.CustomError(0);
  v53 = sub_4DD24(&qword_1509600, type metadata accessor for RazzmatazzAPI.CustomError, (uint64_t)&unk_10AE3C4);
  swift_allocError(v52, v53, 0, 0);
  v55 = v54;
  v56 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1509608) + 48);
  sub_5BDB8((uint64_t)a1, v55, type metadata accessor for ShazamEvent);
  *(_QWORD *)(v55 + v56) = a2;
  v57 = swift_storeEnumTagMultiPayload(v55, v52, 1);
  swift_willThrow(v57);
  v58 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 8))(v83, v58);
  return sub_5C0DC((uint64_t)a1, type metadata accessor for ShazamEvent);
}

uint64_t sub_E2D9BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  *(_QWORD *)(v2 + 16) = a1;
  v6 = (uint64_t (*)(uint64_t))((char *)&dword_15095C8 + dword_15095C8);
  v4 = (_QWORD *)swift_task_alloc(unk_15095CC);
  *(_QWORD *)(v2 + 24) = v4;
  *v4 = v2;
  v4[1] = sub_E2DA20;
  return v6(a2);
}

uint64_t sub_E2DA20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 24);
  *(_QWORD *)(*(_QWORD *)v1 + 32) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_E2DA7C, 0, 0);
}

uint64_t sub_E2DA7C()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 16) = *(_QWORD *)(v0 + 32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_E2DA94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[38] = a2;
  v3[39] = a3;
  v3[37] = a1;
  v3[34] = a3;
  return swift_task_switch(sub_E2DAB4, 0, 0);
}

uint64_t sub_E2DAB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  __int128 v14;

  v14 = *(_OWORD *)(v9 + 296);
  *(_QWORD *)(v9 + 280) = sub_E2FF40(0, *(_QWORD *)(*(_QWORD *)(v9 + 312) + 16));
  v10 = swift_task_alloc(48);
  *(_QWORD *)(v9 + 320) = v10;
  *(_QWORD *)(v10 + 16) = v9 + 272;
  *(_OWORD *)(v10 + 24) = v14;
  *(_QWORD *)(v10 + 40) = v9 + 280;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509588);
  *(_QWORD *)(v9 + 328) = v11;
  if (!__isPlatformVersionAtLeast(2, 18, 0, 0))
    return swift_task_switch(sub_E2DC34, 0, 0);
  v12 = (_QWORD *)swift_task_alloc(async function pointer to withThrowingTaskGroup<A, B>(of:returning:isolation:body:)[1]);
  *(_QWORD *)(v9 + 336) = v12;
  *v12 = v9;
  v12[1] = sub_E2DBC8;
  return withThrowingTaskGroup<A, B>(of:returning:isolation:body:)(v12, v11, (char *)&type metadata for () + 8, 0, 0, &unk_1509580, v10, v11, a9);
}

uint64_t sub_E2DBC8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 336));
  if (v0)
  {
    *(_QWORD *)(v2 + 376) = v0;
    v3 = sub_358A18;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 320));
    v3 = sub_E2DE98;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_E2DC34()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  swift_taskGroup_initialize(v0 + 2, v0[41]);
  v0[36] = v0 + 2;
  v1 = v0[34];
  v4 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1509590
                                                                                    + dword_1509590);
  v2 = (_QWORD *)swift_task_alloc(unk_1509594);
  v0[43] = v2;
  *v2 = v0;
  v2[1] = sub_E2DCC4;
  return v4((uint64_t)v4, (uint64_t)(v0 + 36), v1, v0[37], v0[38], (uint64_t)(v0 + 35));
}

uint64_t sub_E2DCC4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;

  v2 = *(_QWORD *)(*v1 + 344);
  v3 = *v1;
  *(_QWORD *)(v3 + 352) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_E2DE08, 0, 0);
  v5 = (_QWORD *)swift_task_alloc(async function pointer to ThrowingTaskGroup.awaitAllRemainingTasks()[1]);
  *(_QWORD *)(v3 + 360) = v5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509598);
  *v5 = v3;
  v5[1] = sub_E2DD70;
  return ThrowingTaskGroup.awaitAllRemainingTasks()(v6);
}

uint64_t sub_E2DD70()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 360));
  return swift_task_switch(sub_E2DDC4, 0, 0);
}

uint64_t sub_E2DDC4()
{
  uint64_t v0;

  swift_taskGroup_destroy(v0 + 16);
  swift_task_dealloc(*(_QWORD *)(v0 + 320));
  return swift_task_switch(sub_E2DE98, 0, 0);
}

uint64_t sub_E2DE08()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1507690);
  ThrowingTaskGroup.cancelAll()();
  v1 = (_QWORD *)swift_task_alloc(async function pointer to ThrowingTaskGroup.awaitAllRemainingTasks()[1]);
  *(_QWORD *)(v0 + 368) = v1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509598);
  *v1 = v0;
  v1[1] = sub_358858;
  return ThrowingTaskGroup.awaitAllRemainingTasks()(v2);
}

uint64_t sub_E2DE98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  __n128 v8;

  v1 = *(_QWORD *)(v0 + 280);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain_n(*(_QWORD *)(v0 + 280), 2);
    v3 = 0;
    v4 = _swiftEmptyArrayStorage;
    do
    {
      v5 = *(_QWORD *)(v1 + 8 * v3 + 32);
      if (v5)
      {
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native(v4) & 1) == 0)
          v4 = sub_DDE3A4(0, v4[2] + 1, 1, v4);
        v7 = v4[2];
        v6 = v4[3];
        if (v7 >= v6 >> 1)
          v4 = sub_DDE3A4((_QWORD *)(v6 > 1), v7 + 1, 1, v4);
        v4[2] = v7 + 1;
        v4[v7 + 4] = v5;
      }
      ++v3;
    }
    while (v2 != v3);
    swift_bridgeObjectRelease_n(v1, 2);
  }
  else
  {
    v4 = _swiftEmptyArrayStorage;
  }
  v8 = swift_bridgeObjectRelease();
  return (*(uint64_t (**)(_QWORD *, __n128))(v0 + 8))(v4, v8);
}

uint64_t sub_E2DFB0()
{
  return 0x656372756F736572;
}

uint64_t sub_E2DFCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v6;
  uint64_t result;
  char v8;

  if (a1 == 0x656372756F736572 && a2 == 0xE900000000000073)
  {
    result = swift_bridgeObjectRelease(0xE900000000000073);
    v8 = 0;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)(0x656372756F736572, 0xE900000000000073, a1, a2, 0);
    result = swift_bridgeObjectRelease(a2);
    v8 = v6 ^ 1;
  }
  *a3 = v8 & 1;
  return result;
}

uint64_t sub_E2E06C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E34568();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_E2E094(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E34568();
  return CodingKey.debugDescription.getter(a1, v2);
}

_QWORD *sub_E2E0BC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;

  result = sub_E34444(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_E2E0E4(char *a1, char *a2)
{
  return sub_DD7F80(*a1, *a2);
}

Swift::Int sub_E2E0F0()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  if (v1)
    v2 = 0x7365756E6576;
  else
    v2 = 0x652D6D617A616873;
  if (v1)
    v3 = 0xE600000000000000;
  else
    v3 = 0xED000073746E6576;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_E2E178(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0x7365756E6576;
  else
    v2 = 0x652D6D617A616873;
  if (*v1)
    v3 = 0xE600000000000000;
  else
    v3 = 0xED000073746E6576;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_E2E1DC()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  if (v1)
    v2 = 0x7365756E6576;
  else
    v2 = 0x652D6D617A616873;
  if (v1)
    v3 = 0xE600000000000000;
  else
    v3 = 0xED000073746E6576;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_E2E260@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::OpaquePointer v2;

  v2._rawValue = &off_13C21E8;
  return sub_5ADC14(v2, a1, a2);
}

void sub_E2E26C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x652D6D617A616873;
  if (*v1)
    v2 = 0x7365756E6576;
  v3 = 0xED000073746E6576;
  if (*v1)
    v3 = 0xE600000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_E2E2B4()
{
  _BYTE *v0;

  if (*v0)
    return 0x7365756E6576;
  else
    return 0x652D6D617A616873;
}

uint64_t sub_E2E2F8@<X0>(Swift::String a1@<X1:X0>, char *a2@<X8>)
{
  Swift::OpaquePointer v2;

  v2._rawValue = &off_13C21E8;
  return sub_E2EFD4(a1, v2, a2);
}

uint64_t sub_E2E304(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E3632C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_E2E32C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E3632C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_E2E354@<X0>(uint64_t *a1@<X8>)
{
  return sub_E2F6B0((uint64_t (*)(void))sub_E34678, a1);
}

uint64_t sub_E2E370(char *a1, char *a2)
{
  return sub_DD82DC(*a1, *a2);
}

Swift::Int sub_E2E37C()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  _QWORD v4[9];

  v1 = *v0;
  Hasher.init(_seed:)(v4);
  if (v1)
    v2 = 1701669236;
  else
    v2 = 1701667182;
  String.hash(into:)(v4, v2, 0xE400000000000000);
  swift_bridgeObjectRelease(0xE400000000000000);
  return Hasher._finalize()();
}

uint64_t sub_E2E3DC(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;

  if (*v1)
    v2 = 1701669236;
  else
    v2 = 1701667182;
  String.hash(into:)(a1, v2, 0xE400000000000000);
  return swift_bridgeObjectRelease(0xE400000000000000);
}

Swift::Int sub_E2E410()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  _QWORD v4[9];

  v1 = *v0;
  Hasher.init(_seed:)(v4);
  if (v1)
    v2 = 1701669236;
  else
    v2 = 1701667182;
  String.hash(into:)(v4, v2, 0xE400000000000000);
  swift_bridgeObjectRelease(0xE400000000000000);
  return Hasher._finalize()();
}

uint64_t sub_E2E46C@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::OpaquePointer v2;

  v2._rawValue = &off_13C2238;
  return sub_5ADC14(v2, a1, a2);
}

void sub_E2E478(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;

  if (*v1)
    v2 = 1701669236;
  else
    v2 = 1701667182;
  *a1 = v2;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_E2E49C()
{
  _BYTE *v0;

  if (*v0)
    return 1701669236;
  else
    return 1701667182;
}

uint64_t sub_E2E4BC@<X0>(Swift::String a1@<X1:X0>, char *a2@<X8>)
{
  Swift::OpaquePointer v2;

  v2._rawValue = &off_13C2238;
  return sub_E2EFD4(a1, v2, a2);
}

uint64_t sub_E2E4C8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E345F0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_E2E4F0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E345F0();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_E2E518(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  double v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  unint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  __n128 v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  char *v48;
  char *v49;
  char *v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  __n128 v61;
  uint64_t v62;
  _QWORD v63[2];
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;

  v71 = a2;
  v70 = type metadata accessor for Date(0);
  v69 = *(_QWORD *)(v70 - 8);
  v3 = __chkstk_darwin();
  v78 = (char *)v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = type metadata accessor for Date.ISO8601FormatStyle.TimeZoneSeparator(0, v3);
  v85 = *(_QWORD *)(v88 - 8);
  v5 = __chkstk_darwin();
  v87 = (char *)v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Date.ISO8601FormatStyle.TimeSeparator(0, v5);
  v81 = *(_QWORD *)(v7 - 8);
  v82 = v7;
  v8 = __chkstk_darwin();
  v83 = (char *)v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = type metadata accessor for Date.ISO8601FormatStyle.DateTimeSeparator(0, v8);
  v75 = *(_QWORD *)(v77 - 8);
  v10 = __chkstk_darwin();
  v80 = (char *)v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = type metadata accessor for Date.ISO8601FormatStyle.DateSeparator(0, v10);
  v73 = *(_QWORD *)(v74 - 8);
  __chkstk_darwin();
  v76 = (char *)v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = type metadata accessor for Date.ISO8601FormatStyle(0);
  v86 = *(_QWORD *)(v89 - 8);
  __chkstk_darwin();
  v79 = (char *)v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v84 = (char *)v63 - v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1509820);
  __chkstk_darwin();
  v92 = (char *)v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = type metadata accessor for TimeZone(0);
  v91 = *(_QWORD *)(v93 - 8);
  __chkstk_darwin();
  v72 = (char *)v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v90 = (char *)v63 - v17;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509828);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin();
  v21 = (char *)v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for ShazamEvent.Attributes(0);
  __chkstk_darwin();
  v24 = (char *)v63 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = a1[3];
  v26 = a1[4];
  v27 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v25);
  v28 = sub_E345F0();
  v29 = v94;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for ShazamEvent.Attributes.CodingKeys, &type metadata for ShazamEvent.Attributes.CodingKeys, v28, v25, v26);
  if (v29)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  else
  {
    v30 = v92;
    v94 = v19;
    v68 = v22;
    v31 = v91;
    v32 = v93;
    LOBYTE(v95) = 0;
    *(_QWORD *)v24 = KeyedDecodingContainer.decode(_:forKey:)(&v95, v18);
    *((_QWORD *)v24 + 1) = v33;
    v99 = 1;
    v34 = sub_E34634();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for ShazamEvent.Attributes.Time, &v99, v18, &type metadata for ShazamEvent.Attributes.Time, v34);
    v66 = v21;
    v67 = v18;
    v64 = v95;
    v35 = v97;
    v65 = v96;
    v36 = v98;
    v37 = (uint64_t)v30;
    TimeZone.init(identifier:)(v97, v98);
    v38 = v30;
    v39 = v32;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v38, 1, v32) == 1)
    {
      sub_56024(v37, &qword_1509820);
      v40 = type metadata accessor for RazzmatazzAPI.CustomError(0);
      v41 = sub_4DD24(&qword_1509600, type metadata accessor for RazzmatazzAPI.CustomError, (uint64_t)&unk_10AE3C4);
      swift_allocError(v40, v41, 0, 0);
      *v42 = v35;
      v42[1] = v36;
      swift_storeEnumTagMultiPayload(v42, v40, 0);
      v43 = swift_bridgeObjectRetain();
      swift_willThrow(v43);
      swift_bridgeObjectRelease();
      v44 = swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t, __n128))(v94 + 8))(v66, v67, v44);
      __swift_destroy_boxed_opaque_existential_1(v27);
      swift_bridgeObjectRelease();
    }
    else
    {
      v63[1] = v36;
      v45 = v90;
      (*(void (**)(char *, uint64_t, uint64_t))(v31 + 32))(v90, v37, v39);
      v46 = *(int *)(v68 + 24);
      v92 = v24;
      v47 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
      v47(&v24[v46], v45, v39);
      v48 = v72;
      v47(v72, v45, v39);
      v49 = v76;
      (*(void (**)(char *, _QWORD, uint64_t))(v73 + 104))(v76, enum case for Date.ISO8601FormatStyle.DateSeparator.dash(_:), v74);
      v50 = v80;
      (*(void (**)(char *, _QWORD, uint64_t))(v75 + 104))(v80, enum case for Date.ISO8601FormatStyle.DateTimeSeparator.standard(_:), v77);
      v51 = v83;
      (*(void (**)(char *, _QWORD, uint64_t))(v81 + 104))(v83, enum case for Date.ISO8601FormatStyle.TimeSeparator.colon(_:), v82);
      v52 = v87;
      (*(void (**)(char *, _QWORD, uint64_t))(v85 + 104))(v87, enum case for Date.ISO8601FormatStyle.TimeZoneSeparator.omitted(_:), v88);
      v53 = v84;
      Date.ISO8601FormatStyle.init(dateSeparator:dateTimeSeparator:timeSeparator:timeZoneSeparator:includingFractionalSeconds:timeZone:)(v49, v50, v51, v52, 0, v48);
      v95 = v64;
      v96 = v65;
      v54 = v86;
      v55 = v79;
      v56 = v89;
      (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v79, v53, v89);
      v57 = sub_4DD24(&qword_1509840, (uint64_t (*)(uint64_t))&type metadata accessor for Date.ISO8601FormatStyle, (uint64_t)&protocol conformance descriptor for Date.ISO8601FormatStyle);
      v58 = v78;
      Date.init<A>(_:strategy:)(&v95, v55, v56, v57);
      v59 = v93;
      v60 = v94;
      v61 = swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t, __n128))(v54 + 8))(v53, v56, v61);
      (*(void (**)(char *, uint64_t))(v31 + 8))(v90, v59);
      (*(void (**)(char *, uint64_t))(v60 + 8))(v66, v67);
      v62 = (uint64_t)v92;
      (*(void (**)(char *, char *, uint64_t))(v69 + 32))(&v92[*(int *)(v68 + 20)], v58, v70);
      sub_5BDB8(v62, v71, type metadata accessor for ShazamEvent.Attributes);
      __swift_destroy_boxed_opaque_existential_1(v27);
      sub_5C0DC(v62, type metadata accessor for ShazamEvent.Attributes);
    }
  }
}

uint64_t sub_E2ECFC()
{
  _BYTE *v0;

  if (*v0)
    return 0x656E6F7A656D6974;
  else
    return 0x6D69547472617473;
}

uint64_t sub_E2ED3C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_E3484C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_E2ED60(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E364A4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_E2ED88(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E364A4();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_E2EDB0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = sub_E34948(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

void sub_E2EDDC(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_E2E518(a1, a2);
}

uint64_t sub_E2EDF0(char *a1, char *a2)
{
  return sub_DD823C(*a1, *a2);
}

Swift::Int sub_E2EDFC()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  if (v1)
    v2 = 0x7365756E6576;
  else
    v2 = 0x73747369747261;
  if (v1)
    v3 = 0xE600000000000000;
  else
    v3 = 0xE700000000000000;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_E2EE78(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0x7365756E6576;
  else
    v2 = 0x73747369747261;
  if (*v1)
    v3 = 0xE600000000000000;
  else
    v3 = 0xE700000000000000;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_E2EED0()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5);
  if (v1)
    v2 = 0x7365756E6576;
  else
    v2 = 0x73747369747261;
  if (v1)
    v3 = 0xE600000000000000;
  else
    v3 = 0xE700000000000000;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_E2EF48@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::OpaquePointer v2;

  v2._rawValue = &off_13C2288;
  return sub_5ADC14(v2, a1, a2);
}

void sub_E2EF54(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x73747369747261;
  if (*v1)
    v2 = 0x7365756E6576;
  v3 = 0xE700000000000000;
  if (*v1)
    v3 = 0xE600000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_E2EF90()
{
  _BYTE *v0;

  if (*v0)
    return 0x7365756E6576;
  else
    return 0x73747369747261;
}

uint64_t sub_E2EFC8@<X0>(Swift::String a1@<X1:X0>, char *a2@<X8>)
{
  Swift::OpaquePointer v2;

  v2._rawValue = &off_13C2288;
  return sub_E2EFD4(a1, v2, a2);
}

uint64_t sub_E2EFD4@<X0>(Swift::String string@<0:X0, 8:X1>, Swift::OpaquePointer cases@<0:X4>, char *a3@<X8>)
{
  void *object;
  Swift::String v4;
  Swift::Int v6;
  uint64_t result;
  char v8;

  object = string._object;
  v4._countAndFlagsBits = string._countAndFlagsBits;
  v4._object = object;
  v6 = _findStringSwitchCase(cases:string:)(cases, v4);
  result = swift_bridgeObjectRelease(object);
  if (v6 == 1)
    v8 = 1;
  else
    v8 = 2;
  if (!v6)
    v8 = 0;
  *a3 = v8;
  return result;
}

uint64_t sub_E2F030(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E365B4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_E2F058(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E365B4();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_E2F080(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  __int128 v25;
  char v26;

  v20 = a2;
  v3 = type metadata accessor for ShazamEvent.Attributes(0);
  __chkstk_darwin();
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509860);
  v6 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin();
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ShazamEvent(0);
  __chkstk_darwin();
  v11 = (uint64_t *)((char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = a1[3];
  v12 = a1[4];
  v23 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v14 = sub_E35C84();
  v21 = v8;
  v15 = v24;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for ShazamEvent.CodingKeys, &type metadata for ShazamEvent.CodingKeys, v14, v13, v12);
  if (v15)
  {
    __swift_destroy_boxed_opaque_existential_1(v23);
  }
  else
  {
    LOBYTE(v25) = 0;
    *v11 = KeyedDecodingContainer.decode(_:forKey:)(&v25, v22);
    v11[1] = v16;
    LOBYTE(v25) = 1;
    v17 = sub_4DD24(&qword_1509870, type metadata accessor for ShazamEvent.Attributes, (uint64_t)&unk_10AE39C);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v3, &v25, v22, v3, v17);
    sub_5C04C((uint64_t)v5, (uint64_t)v11 + *(int *)(v9 + 20), type metadata accessor for ShazamEvent.Attributes);
    v26 = 2;
    v18 = sub_E35CC8();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for ShazamEvent.Relationships, &v26, v22, &type metadata for ShazamEvent.Relationships, v18);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v21, v22);
    *(_OWORD *)((char *)v11 + *(int *)(v9 + 24)) = v25;
    sub_5BDB8((uint64_t)v11, v20, type metadata accessor for ShazamEvent);
    __swift_destroy_boxed_opaque_existential_1(v23);
    sub_5C0DC((uint64_t)v11, type metadata accessor for ShazamEvent);
  }
}

uint64_t sub_E2F334()
{
  return 25705;
}

uint64_t sub_E2F340@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v6;
  uint64_t result;
  char v8;

  if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    result = swift_bridgeObjectRelease(0xE200000000000000);
    v8 = 0;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)(25705, 0xE200000000000000, a1, a2, 0);
    result = swift_bridgeObjectRelease(a2);
    v8 = v6 ^ 1;
  }
  *a3 = v8 & 1;
  return result;
}

uint64_t sub_E2F3BC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E36FA0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_E2F3E4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E36FA0();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_E2F40C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509A60);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  v11 = sub_E36FA0();
  v12 = dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for ShazamEvent.Relationships.Data.ID.CodingKeys, &type metadata for ShazamEvent.Relationships.Data.ID.CodingKeys, v11, v9, v10);
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1(a1);
  v13 = KeyedDecodingContainer.decode(_:forKey:)(v12, v5);
  v15 = v14;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  result = __swift_destroy_boxed_opaque_existential_1(a1);
  *a2 = v13;
  a2[1] = v15;
  return result;
}

uint64_t sub_E2F530(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509A70);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v8 = v1[1];
  v9 = a1[3];
  v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  v11 = sub_E36FA0();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for ShazamEvent.Relationships.Data.ID.CodingKeys, &type metadata for ShazamEvent.Relationships.Data.ID.CodingKeys, v11, v9, v10);
  KeyedEncodingContainer.encode(_:forKey:)(v7, v8, v12, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_E2F61C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E36B94();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_E2F644(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E36B94();
  return CodingKey.debugDescription.getter(a1, v2);
}

_QWORD *sub_E2F66C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_E34E50(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_E2F694@<X0>(uint64_t *a1@<X8>)
{
  return sub_E2F6B0((uint64_t (*)(void))sub_E34AF4, a1);
}

uint64_t sub_E2F6B0@<X0>(uint64_t (*a1)(void)@<X3>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = a1();
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_E2F6D8()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x7475626972747461;
  if (*v0 != 1)
    v1 = 0x6E6F6974616C6572;
  if (*v0)
    return v1;
  else
    return 25705;
}

uint64_t sub_E2F738@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_E34F9C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_E2F75C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E35C84();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_E2F784(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E35C84();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_E2F7AC(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_E2F080(a1, a2);
}

uint64_t sub_E2F7C0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_DD8144(*a1, *a2);
}

Swift::Int sub_E2F7CC()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7);
  v2 = 0xE700000000000000;
  v3 = 0x73736572646461;
  if (v1 != 1)
  {
    v3 = 7300455;
    v2 = 0xE300000000000000;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 1701667182;
  if (v1)
    v5 = v2;
  else
    v5 = 0xE400000000000000;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

uint64_t sub_E2F85C(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = 0xE700000000000000;
  v3 = 0x73736572646461;
  if (*v1 != 1)
  {
    v3 = 7300455;
    v2 = 0xE300000000000000;
  }
  if (*v1)
    v4 = v3;
  else
    v4 = 1701667182;
  if (*v1)
    v5 = v2;
  else
    v5 = 0xE400000000000000;
  String.hash(into:)(a1, v4, v5);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_E2F8C8()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7);
  v2 = 0xE700000000000000;
  v3 = 0x73736572646461;
  if (v1 != 1)
  {
    v3 = 7300455;
    v2 = 0xE300000000000000;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 1701667182;
  if (v1)
    v5 = v2;
  else
    v5 = 0xE400000000000000;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

unint64_t sub_E2F954@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_E35108(*a1);
  *a2 = result;
  return result;
}

void sub_E2F980(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE400000000000000;
  v4 = 0xE700000000000000;
  v5 = 0x73736572646461;
  if (v2 != 1)
  {
    v5 = 7300455;
    v4 = 0xE300000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 1701667182;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_E2F9D0()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x73736572646461;
  if (*v0 != 1)
    v1 = 7300455;
  if (*v0)
    return v1;
  else
    return 1701667182;
}

unint64_t sub_E2FA1C@<X0>(Swift::String a1@<X1:X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_E35108(a1);
  *a2 = result;
  return result;
}

uint64_t sub_E2FA40(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E364E8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_E2FA68(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E364E8();
  return CodingKey.debugDescription.getter(a1, v2);
}

unint64_t sub_E2FA90()
{
  return 0xD000000000000011;
}

uint64_t sub_E2FAAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_E354AC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_E2FAD4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E36AC8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_E2FAFC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E36AC8();
  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_E2FB24@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[2];
  __int128 v8;
  __int128 v9;

  sub_E35530(a1, (uint64_t)v7);
  if (!v2)
  {
    v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    result = *(double *)&v8;
    v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

uint64_t sub_E2FB64()
{
  _BYTE *v0;

  if (*v0)
    return 6778476;
  else
    return 7627116;
}

uint64_t sub_E2FB88@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_E35684(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_E2FBAC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E36B50();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_E2FBD4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E36B50();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_E2FBFC(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double v4;
  uint64_t v5;

  v4 = sub_E35754(a1);
  if (!v2)
  {
    *(double *)a2 = v4;
    *(_QWORD *)(a2 + 8) = v5;
  }
}

double sub_E2FC24@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[5];
  uint64_t v8;

  sub_E35150(a1, (uint64_t *)v7);
  if (!v2)
  {
    v5 = v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 64) = v7[4];
    *(_QWORD *)(a2 + 80) = v8;
    result = *(double *)v7;
    v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_E2FC7C()
{
  _BYTE *v0;

  if (*v0)
    return 0x7475626972747461;
  else
    return 25705;
}

uint64_t sub_E2FCB0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_E358AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_E2FCD4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E35BFC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_E2FCFC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E35BFC();
  return CodingKey.debugDescription.getter(a1, v2);
}

__n128 sub_E2FD24@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[6];
  uint64_t v8;

  sub_E35990(a1, (uint64_t *)v7);
  if (!v2)
  {
    v5 = v7[5];
    *(_OWORD *)(a2 + 64) = v7[4];
    *(_OWORD *)(a2 + 80) = v5;
    *(_QWORD *)(a2 + 96) = v8;
    v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
    result = (__n128)v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(__n128 *)(a2 + 48) = result;
  }
  return result;
}

uint64_t sub_E2FD80()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  __swift_allocate_value_buffer(v0, qword_1583E18);
  __swift_project_value_buffer(v0, (uint64_t)qword_1583E18);
  return static Logger.music(_:)(0x6174616D7A7A6152, 0xEA00000000007A7ALL);
}

void sub_E2FDE0(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&off_10AE1B8);
  v5 = swift_getKeyPath(&unk_10AE1E0);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  *a2 = v6;
}

uint64_t sub_E2FE5C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&off_10AE1B8);
  v5 = swift_getKeyPath(&unk_10AE1E0);
  v7 = v2;
  swift_bridgeObjectRetain();
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_E2FED4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for Date(0);
  v5 = sub_4DD24(&qword_1509000, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  return dispatch thunk of static Comparable.< infix(_:_:)(a1, a2, v4, v5) & 1;
}

_QWORD *sub_E2FF40(_QWORD *result, uint64_t a2)
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;

  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    v3 = result;
    if (a2)
    {
      v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1507580);
      v5 = (_QWORD *)static Array._allocateBufferUninitialized(minimumCapacity:)(a2, v4);
      v6 = v5;
      v5[2] = a2;
      v5[4] = v3;
      if (a2 != 1)
      {
        v5[5] = v3;
        v7 = a2 - 2;
        if (v7)
        {
          v8 = v5 + 6;
          do
          {
            *v8++ = v3;
            swift_bridgeObjectRetain();
            --v7;
          }
          while (v7);
        }
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      return _swiftEmptyArrayStorage;
    }
    return v6;
  }
  return result;
}

uint64_t sub_E2FFE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;

  v6[15] = a5;
  v6[16] = a6;
  v6[13] = a3;
  v6[14] = a4;
  v6[12] = a2;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_15095A0);
  v6[17] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[18] = v8;
  v6[19] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Artist(0);
  v6[20] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v6[21] = v10;
  v11 = *(_QWORD *)(v10 + 64);
  v6[22] = v11;
  v6[23] = swift_task_alloc((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (*(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_15085D0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[24] = swift_task_alloc(v12);
  v6[25] = swift_task_alloc(v12);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_15095A8);
  v6[26] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v6[27] = v14;
  v6[28] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (*(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_15095B0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[29] = swift_task_alloc(v15);
  v6[30] = swift_task_alloc(v15);
  return swift_task_switch(sub_E30110, 0, 0);
}

uint64_t sub_E30110()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t ObjectType;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned __int8 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v45;
  char v46;
  _QWORD *v47;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;

  v2 = *(_QWORD *)(v1 + 216);
  v51 = *(_QWORD *)(v1 + 168);
  v52 = *(_QWORD *)(v1 + 208);
  v3 = *(_QWORD *)(*(_QWORD *)(v1 + 104) + 16);
  swift_bridgeObjectRetain();
  v4 = 0;
  v50 = v2;
  v49 = v3;
  while (1)
  {
    if (v4 == v3)
    {
      (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v2 + 56))(*(_QWORD *)(v1 + 232), 1, 1, *(_QWORD *)(v1 + 208));
      v5 = v3;
    }
    else
    {
      if (v4 >= v3)
      {
        __break(1u);
        goto LABEL_20;
      }
      v6 = *(unint64_t **)(v1 + 232);
      v57 = *(_QWORD *)(v1 + 208);
      v7 = *(_QWORD *)(v1 + 160);
      v5 = v4 + 1;
      v8 = *(_QWORD *)(v1 + 224) + *(int *)(v52 + 48);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v51 + 16))(v8, *(_QWORD *)(v1 + 104)+ ((*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80))+ *(_QWORD *)(v51 + 72) * v4, v7);
      v9 = (char *)v6 + *(int *)(v52 + 48);
      *v6 = v4;
      (*(void (**)(char *, uint64_t, uint64_t))(v51 + 32))(v9, v8, v7);
      (*(void (**)(unint64_t *, _QWORD, uint64_t, uint64_t))(v2 + 56))(v6, 0, 1, v57);
    }
    v10 = *(_QWORD *)(v1 + 240);
    v11 = *(_QWORD *)(v1 + 208);
    sub_5C090(*(_QWORD *)(v1 + 232), v10, &qword_15095B0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v10, 1, v11) == 1)
      break;
    v58 = v5;
    v12 = *(uint64_t **)(v1 + 240);
    v13 = *(_QWORD *)(v1 + 200);
    v14 = *(_QWORD *)(v1 + 176);
    v15 = *(char **)(v1 + 184);
    v16 = *(_QWORD *)(v1 + 160);
    v17 = *(_QWORD *)(v1 + 120);
    v55 = *(_QWORD *)(v1 + 112);
    v56 = *(_QWORD *)(v1 + 192);
    v53 = v13;
    v54 = *v12;
    v18 = (char *)v12 + *(int *)(v52 + 48);
    v19 = type metadata accessor for TaskPriority(0);
    v20 = *(_QWORD *)(v19 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56))(v13, 1, 1, v19);
    v21 = *(void (**)(uint64_t, char *, uint64_t))(v51 + 32);
    v21((uint64_t)v15, v18, v16);
    v22 = *(unsigned __int8 *)(v51 + 80);
    v23 = (v22 + 56) & ~v22;
    v24 = (_QWORD *)swift_allocObject(&unk_13C8AD0, v23 + v14, v22 | 7);
    v24[2] = 0;
    v25 = v24 + 2;
    v24[3] = 0;
    v24[4] = v54;
    v24[5] = v55;
    v24[6] = v17;
    v21((uint64_t)v24 + v23, v15, v16);
    sub_E32914(v53, v56);
    LODWORD(v16) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v56, 1, v19);
    swift_retain();
    v27 = *(_QWORD *)(v1 + 192);
    if ((_DWORD)v16 == 1)
    {
      sub_56024(*(_QWORD *)(v1 + 192), &qword_15085D0);
      v28 = 0;
      v29 = *v25;
      if (*v25)
        goto LABEL_10;
    }
    else
    {
      v35 = TaskPriority.rawValue.getter(v26);
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v27, v19);
      v28 = v35;
      v29 = *v25;
      if (*v25)
      {
LABEL_10:
        v30 = v24[3];
        ObjectType = swift_getObjectType();
        swift_unknownObjectRetain(v29);
        v32 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v30);
        v34 = v33;
        swift_unknownObjectRelease(v29);
        goto LABEL_13;
      }
    }
    v32 = 0;
    v34 = 0;
LABEL_13:
    v2 = v50;
    v36 = **(_QWORD **)(v1 + 96);
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509588);
    v38 = v34 | v32;
    if (v34 | v32)
    {
      v38 = v1 + 16;
      *(_QWORD *)(v1 + 16) = 0;
      *(_QWORD *)(v1 + 24) = 0;
      *(_QWORD *)(v1 + 32) = v32;
      *(_QWORD *)(v1 + 40) = v34;
    }
    v0 = *(_QWORD **)(v1 + 200);
    *(_QWORD *)(v1 + 48) = 1;
    *(_QWORD *)(v1 + 56) = v38;
    *(_QWORD *)(v1 + 64) = v36;
    swift_task_create(v28 | 0x3100, v1 + 48, v37, &unk_15095C0, v24);
    swift_release();
    sub_56024((uint64_t)v0, &qword_15085D0);
    v3 = v49;
    v4 = v58;
  }
  v39 = *(_QWORD **)(v1 + 128);
  v40 = *(uint64_t **)(v1 + 96);
  swift_bridgeObjectRelease();
  v41 = *v40;
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509588);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1507690);
  ThrowingTaskGroup.makeAsyncIterator()(v41, v42, v43, &protocol self-conformance witness table for Error);
  v0 = (_QWORD *)*v39;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v39);
  *v39 = v0;
  if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    goto LABEL_16;
LABEL_20:
  v0 = sub_EFA4B4(v0);
LABEL_16:
  v45 = *(_QWORD **)(v1 + 128);
  v46 = swift_isUniquelyReferenced_nonNull_native(v0);
  *v45 = v0;
  if ((v46 & 1) == 0)
    v0 = sub_EFA4B4(v0);
  **(_QWORD **)(v1 + 128) = v0;
  v47 = (_QWORD *)swift_task_alloc(_sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
  *(_QWORD *)(v1 + 248) = v47;
  *v47 = v1;
  v47[1] = sub_E3054C;
  return _sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v1 + 72, 0, 0, *(_QWORD *)(v1 + 136), v1 + 88);
}

uint64_t sub_E3054C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 248));
  if (v0)
    v2 = sub_E30718;
  else
    v2 = sub_E305B0;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_E305B0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  unint64_t v3;
  _QWORD *v4;
  uint64_t result;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;

  v1 = *(_QWORD *)(v0 + 80);
  if (!v1)
  {
    v7 = *(_QWORD *)(v0 + 232);
    v8 = *(_QWORD *)(v0 + 240);
    v9 = *(_QWORD *)(v0 + 224);
    v11 = *(_QWORD *)(v0 + 192);
    v10 = *(_QWORD *)(v0 + 200);
    v12 = *(_QWORD *)(v0 + 184);
    v13 = *(_QWORD *)(v0 + 152);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 144) + 8))(v13, *(_QWORD *)(v0 + 136));
    swift_task_dealloc(v8);
    swift_task_dealloc(v7);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v2 = *(_QWORD **)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 72);
  v4 = (_QWORD *)*v2;
  result = swift_isUniquelyReferenced_nonNull_native(*v2);
  *v2 = v4;
  if ((result & 1) != 0)
  {
    if ((v3 & 0x8000000000000000) == 0)
      goto LABEL_4;
  }
  else
  {
    v14 = *(uint64_t **)(v0 + 128);
    result = (uint64_t)sub_EFA4B4(v4);
    v4 = (_QWORD *)result;
    *v14 = result;
    if ((v3 & 0x8000000000000000) == 0)
    {
LABEL_4:
      if (v3 < v4[2])
      {
        swift_bridgeObjectRelease();
        v4[v3 + 4] = v1;
        v6 = (_QWORD *)swift_task_alloc(_sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
        *(_QWORD *)(v0 + 256) = v6;
        *v6 = v0;
        v6[1] = sub_E307B8;
        return _sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v0 + 72, 0, 0, *(_QWORD *)(v0 + 136), v0 + 88);
      }
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_E30718()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 232);
  v2 = *(_QWORD *)(v0 + 240);
  v3 = *(_QWORD *)(v0 + 224);
  v5 = *(_QWORD *)(v0 + 192);
  v4 = *(_QWORD *)(v0 + 200);
  v6 = *(_QWORD *)(v0 + 184);
  v7 = *(_QWORD *)(v0 + 152);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 144) + 8))(v7, *(_QWORD *)(v0 + 136));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_E307B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 256));
  if (v0)
    v2 = sub_E30718;
  else
    v2 = sub_E305B0;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_E3081C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v12;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v12 = *a3;
  v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1509590
                                                                                     + dword_1509590);
  v13 = (_QWORD *)swift_task_alloc(unk_1509594);
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_50F8C;
  return v15(a1, a2, v12, a4, a5, a6);
}

uint64_t sub_E308BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int *a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  _QWORD *v9;
  int *v11;

  v7[3] = a1;
  v7[4] = a4;
  v11 = (int *)((char *)a5 + *a5);
  v9 = (_QWORD *)swift_task_alloc(a5[1]);
  v7[5] = v9;
  *v9 = v7;
  v9[1] = sub_E30934;
  return ((uint64_t (*)(_QWORD *, uint64_t))v11)(v7 + 2, a7);
}

uint64_t sub_E30934()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_E309B0;
  else
    v3 = sub_E30998;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_E30998()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = *(_QWORD **)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 16);
  *v1 = *(_QWORD *)(v0 + 32);
  v1[1] = v2;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_E309B0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

BOOL sub_E309BC(double *a1, uint64_t a2)
{
  double v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char v8;
  _BOOL8 result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;

  v4 = *a1;
  v5 = *((_QWORD *)a1 + 1);
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)&v4 == *(_QWORD *)a2 && v5 == v6;
  if (v7
    || (v8 = _stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)&v4, v5, *(_QWORD *)a2, v6, 0),
        result = 0,
        (v8 & 1) != 0))
  {
    v10 = *((_QWORD *)a1 + 2);
    v11 = *((_QWORD *)a1 + 3);
    v12 = *(_QWORD *)(a2 + 16);
    v13 = *(_QWORD *)(a2 + 24);
    if (v10 == v12 && v11 == v13)
      return a1[4] == *(double *)(a2 + 32) && a1[5] == *(double *)(a2 + 40);
    v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v11, v12, v13, 0);
    result = 0;
    if ((v15 & 1) != 0)
      return a1[4] == *(double *)(a2 + 32) && a1[5] == *(double *)(a2 + 40);
  }
  return result;
}

uint64_t sub_E30A58(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1[7] = a1;
  v2 = type metadata accessor for URLRequest(0);
  v1[8] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[9] = v3;
  v1[10] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for URL(0);
  v1[11] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v1[12] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[13] = swift_task_alloc(v6);
  v1[14] = swift_task_alloc(v6);
  v7 = type metadata accessor for Date.ISO8601FormatStyle(0);
  v1[15] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v1[16] = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[17] = swift_task_alloc(v9);
  v1[18] = swift_task_alloc(v9);
  v1[19] = swift_task_alloc(v9);
  v1[20] = swift_task_alloc(v9);
  v10 = type metadata accessor for Date(0);
  v1[21] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v1[22] = v11;
  v1[23] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Locale(0);
  v1[24] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v1[25] = v13;
  v1[26] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (*(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_15068B0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[27] = swift_task_alloc(v14);
  v1[28] = swift_task_alloc(v14);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_15095D0);
  v1[29] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v15 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for URLComponents(0);
  v1[30] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v1[31] = v17;
  v1[32] = swift_task_alloc((*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_E30C10, 0, 0);
}

uint64_t sub_E30C10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t (*v66)(uint64_t, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;

  v2 = Artist.catalogID.getter(a1);
  *(_QWORD *)(v1 + 264) = v2;
  *(_QWORD *)(v1 + 272) = v3;
  if (!v3)
    goto LABEL_6;
  v4 = v2;
  v5 = v3;
  v6 = *(_QWORD *)(v1 + 224);
  v7 = *(_QWORD *)(v1 + 88);
  v8 = *(_QWORD *)(v1 + 96);
  URL.init(string:)(0xD000000000000030, 0x800000000110DC90);
  v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  result = v9(v6, 1, v7);
  if ((_DWORD)result == 1)
  {
    __break(1u);
    goto LABEL_9;
  }
  v64 = v4;
  v66 = v9;
  v11 = *(_QWORD *)(v1 + 240);
  v12 = *(_QWORD *)(v1 + 248);
  v14 = *(_QWORD *)(v1 + 224);
  v13 = *(_QWORD *)(v1 + 232);
  v15 = *(_QWORD *)(v1 + 88);
  v16 = *(_QWORD *)(v1 + 96);
  URLComponents.init(url:resolvingAgainstBaseURL:)(v14, 0);
  v17 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
  *(_QWORD *)(v1 + 280) = v17;
  v17(v14, v15);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v13, 1, v11);
  if ((_DWORD)result == 1)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  v18 = *(_QWORD *)(v1 + 208);
  v63 = *(_QWORD *)(v1 + 216);
  v53 = *(_QWORD *)(v1 + 200);
  v54 = *(_QWORD *)(v1 + 192);
  v60 = *(_QWORD *)(v1 + 176);
  v61 = *(_QWORD *)(v1 + 168);
  v19 = *(_QWORD *)(v1 + 144);
  v57 = *(_QWORD *)(v1 + 152);
  v58 = *(_QWORD *)(v1 + 160);
  v20 = *(_QWORD *)(v1 + 136);
  v55 = *(_QWORD *)(v1 + 184);
  v56 = *(_QWORD *)(v1 + 128);
  v21 = *(_QWORD *)(v1 + 120);
  v62 = *(_QWORD *)(v1 + 88);
  (*(void (**)(void))(*(_QWORD *)(v1 + 248) + 32))();
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_15095D8);
  v23 = *(_QWORD *)(type metadata accessor for URLQueryItem(0) - 8);
  v59 = swift_allocObject(v22, ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ 3 * *(_QWORD *)(v23 + 72), *(unsigned __int8 *)(v23 + 80) | 7);
  *(_OWORD *)(v59 + 16) = xmmword_1060460;
  v24 = static Locale.current.getter(v59);
  v25 = Locale.identifier.getter(v24);
  v27 = v26;
  (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v18, v54);
  URLQueryItem.init(name:value:)(108, 0xE100000000000000, v25, v27);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  URLQueryItem.init(name:value:)(0x6449747369747261, 0xE800000000000000, v64, v5);
  swift_bridgeObjectRelease();
  v29 = static Date.now.getter(v28);
  v30 = static FormatStyle<>.iso8601.getter(v29);
  Date.ISO8601FormatStyle.day()(v30);
  v31 = *(uint64_t (**)(uint64_t, uint64_t))(v56 + 8);
  v32 = v31(v20, v21);
  Date.ISO8601FormatStyle.month()(v32);
  v33 = v31(v19, v21);
  Date.ISO8601FormatStyle.year()(v33);
  v31(v57, v21);
  v34 = sub_4DD24(&qword_15095E0, (uint64_t (*)(uint64_t))&type metadata accessor for Date.ISO8601FormatStyle, (uint64_t)&protocol conformance descriptor for Date.ISO8601FormatStyle);
  Date.formatted<A>(_:)((_QWORD *)(v1 + 16), v58, v21, v34);
  v31(v58, v21);
  (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v55, v61);
  URLQueryItem.init(name:value:)(1836020326, 0xE400000000000000, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
  v35 = swift_bridgeObjectRelease();
  v36 = URLComponents.queryItems.setter(v59, v35);
  URLComponents.url.getter(v36);
  v37 = v66(v63, 1, v62);
  v38 = *(_QWORD *)(v1 + 216);
  if (v37 == 1)
  {
    swift_bridgeObjectRelease();
    sub_56024(v38, &qword_15068B0);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 248) + 8))(*(_QWORD *)(v1 + 256), *(_QWORD *)(v1 + 240));
LABEL_6:
    v39 = *(_QWORD *)(v1 + 224);
    v40 = *(_QWORD *)(v1 + 232);
    v42 = *(_QWORD *)(v1 + 208);
    v41 = *(_QWORD *)(v1 + 216);
    v43 = *(_QWORD *)(v1 + 184);
    v45 = *(_QWORD *)(v1 + 152);
    v44 = *(_QWORD *)(v1 + 160);
    v47 = *(_QWORD *)(v1 + 136);
    v46 = *(_QWORD *)(v1 + 144);
    v65 = *(_QWORD *)(v1 + 112);
    v67 = *(_QWORD *)(v1 + 104);
    v68 = *(_QWORD *)(v1 + 80);
    swift_task_dealloc(*(_QWORD *)(v1 + 256));
    swift_task_dealloc(v40);
    swift_task_dealloc(v39);
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    swift_task_dealloc(v43);
    swift_task_dealloc(v44);
    swift_task_dealloc(v45);
    swift_task_dealloc(v46);
    swift_task_dealloc(v47);
    swift_task_dealloc(v65);
    swift_task_dealloc(v67);
    swift_task_dealloc(v68);
    return (*(uint64_t (**)(_QWORD *))(v1 + 8))(_swiftEmptyArrayStorage);
  }
  v49 = *(_QWORD *)(v1 + 104);
  v48 = *(_QWORD *)(v1 + 112);
  v50 = *(_QWORD *)(v1 + 88);
  v51 = *(_QWORD *)(v1 + 96);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v51 + 32))(v48, *(_QWORD *)(v1 + 216), v50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 16))(v49, v48, v50);
  URLRequest.init(url:cachePolicy:timeoutInterval:)(v49, 0, 60.0);
  *(_QWORD *)(v1 + 288) = objc_msgSend((id)objc_opt_self(NSURLSession), "sharedSession");
  v52 = (_QWORD *)swift_task_alloc(async function pointer to NSURLSession.data(for:delegate:)[1]);
  *(_QWORD *)(v1 + 296) = v52;
  *v52 = v1;
  v52[1] = sub_E310E8;
  return NSURLSession.data(for:delegate:)(*(_QWORD *)(v1 + 80), 0);
}

uint64_t sub_E310E8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v6;
  uint64_t v7;
  uint64_t (*v8)();
  void *v9;

  v6 = *(_QWORD **)v4;
  v7 = *(_QWORD *)(*(_QWORD *)v4 + 296);
  v6[38] = a1;
  v6[39] = a2;
  v6[40] = v3;
  swift_task_dealloc(v7);
  if (v3)
  {
    v8 = sub_E31594;
  }
  else
  {
    v9 = (void *)v6[36];

    v8 = sub_E31170;
  }
  return swift_task_switch(v8, 0, 0);
}

uint64_t sub_E31170()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t);
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53[2];

  v2 = *(_QWORD *)(v0 + 312);
  v1 = *(_QWORD *)(v0 + 320);
  v3 = *(_QWORD *)(v0 + 304);
  v4 = type metadata accessor for JSONDecoder(0);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  JSONDecoder.init()();
  v5 = sub_E3295C();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)(&type metadata for Root, v3, v2, &type metadata for Root, v5);
  v7 = *(_QWORD *)(v0 + 304);
  v6 = *(_QWORD *)(v0 + 312);
  if (v1)
  {
    sub_50C60(*(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 312));
    swift_release();
    if (qword_15061D8 != -1)
      swift_once(&qword_15061D8, sub_E2FD80);
    v8 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v8, (uint64_t)qword_1583E18);
    swift_errorRetain(v1);
    swift_bridgeObjectRetain();
    v9 = swift_errorRetain(v1);
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.error.getter(v10);
    v12 = os_log_type_enabled(v10, v11);
    v13 = *(_QWORD *)(v0 + 272);
    if (v12)
    {
      v14 = *(_QWORD *)(v0 + 264);
      v15 = swift_slowAlloc(22, -1);
      v16 = swift_slowAlloc(64, -1);
      v53[0] = v16;
      *(_DWORD *)v15 = 136315394;
      swift_bridgeObjectRetain();
      v17 = (char *)MusicItemID.description.getter(v14, v13);
      v19 = v18;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v15 + 4) = sub_DCF730(v17, v19, v53);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n(v13, 2);
      *(_WORD *)(v15 + 12) = 2080;
      *(_QWORD *)(v0 + 48) = v1;
      swift_errorRetain(v1);
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1507690);
      v21 = (char *)String.init<A>(describing:)(v0 + 48, v20);
      *(_QWORD *)(v15 + 14) = sub_DCF730(v21, v22, v53);
      swift_bridgeObjectRelease();
      swift_errorRelease(v1);
      swift_errorRelease(v1);
      _os_log_impl(&dword_0, v10, v11, "Could not load for artistID=%s with error=%s", (uint8_t *)v15, 0x16u);
      swift_arrayDestroy(v16, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v16, -1, -1);
      swift_slowDealloc(v15, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 272), 2);
      swift_errorRelease(v1);
      swift_errorRelease(v1);
    }

    v28 = *(void (**)(uint64_t, uint64_t))(v0 + 280);
    v29 = *(_QWORD *)(v0 + 112);
    v31 = *(_QWORD *)(v0 + 80);
    v30 = *(_QWORD *)(v0 + 88);
    v32 = *(_QWORD *)(v0 + 64);
    v33 = *(_QWORD *)(v0 + 72);
    swift_errorRelease(v1);
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v31, v32);
    v28(v29, v30);
    v52 = _swiftEmptyArrayStorage;
  }
  else
  {
    v48 = *(_QWORD *)(v0 + 112);
    v50 = *(void (**)(uint64_t, uint64_t))(v0 + 280);
    v23 = *(_QWORD *)(v0 + 72);
    v45 = *(_QWORD *)(v0 + 80);
    v46 = *(_QWORD *)(v0 + 88);
    v24 = *(_QWORD *)(v0 + 56);
    v44 = *(_QWORD *)(v0 + 64);
    swift_release();
    swift_bridgeObjectRelease();
    v26 = *(_QWORD *)(v0 + 32);
    v25 = *(_QWORD *)(v0 + 40);
    v27 = (_QWORD *)swift_task_alloc(48);
    v27[2] = v26;
    v27[3] = v25;
    v27[4] = v24;
    swift_bridgeObjectRetain();
    v52 = (_QWORD *)sub_E2C038((void (*)(uint64_t))sub_E329A0, (uint64_t)v27, v26);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_50C60(v7, v6);
    swift_bridgeObjectRelease();
    swift_task_dealloc(v27);
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v45, v44);
    v50(v48, v46);
  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 248) + 8))(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 240));
  v35 = *(_QWORD *)(v0 + 224);
  v34 = *(_QWORD *)(v0 + 232);
  v37 = *(_QWORD *)(v0 + 208);
  v36 = *(_QWORD *)(v0 + 216);
  v38 = *(_QWORD *)(v0 + 184);
  v40 = *(_QWORD *)(v0 + 152);
  v39 = *(_QWORD *)(v0 + 160);
  v41 = *(_QWORD *)(v0 + 136);
  v42 = *(_QWORD *)(v0 + 144);
  v47 = *(_QWORD *)(v0 + 112);
  v49 = *(_QWORD *)(v0 + 104);
  v51 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 256));
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v42);
  swift_task_dealloc(v41);
  swift_task_dealloc(v47);
  swift_task_dealloc(v49);
  swift_task_dealloc(v51);
  return (*(uint64_t (**)(_QWORD *))(v0 + 8))(v52);
}

uint64_t sub_E31594()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v1 = *(_QWORD *)(v0 + 320);
  if (qword_15061D8 != -1)
    swift_once(&qword_15061D8, sub_E2FD80);
  v2 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v2, (uint64_t)qword_1583E18);
  swift_errorRetain(v1);
  swift_bridgeObjectRetain();
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 272);
  if (v6)
  {
    v8 = *(_QWORD *)(v0 + 264);
    v9 = swift_slowAlloc(22, -1);
    v10 = swift_slowAlloc(64, -1);
    v36 = v10;
    *(_DWORD *)v9 = 136315394;
    swift_bridgeObjectRetain();
    v11 = (char *)MusicItemID.description.getter(v8, v7);
    v13 = v12;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v9 + 4) = sub_DCF730(v11, v13, &v36);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n(v7, 2);
    *(_WORD *)(v9 + 12) = 2080;
    *(_QWORD *)(v0 + 48) = v1;
    swift_errorRetain(v1);
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1507690);
    v15 = (char *)String.init<A>(describing:)(v0 + 48, v14);
    *(_QWORD *)(v9 + 14) = sub_DCF730(v15, v16, &v36);
    swift_bridgeObjectRelease();
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl(&dword_0, v4, v5, "Could not load for artistID=%s with error=%s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy(v10, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 272), 2);
    swift_errorRelease(v1);
    swift_errorRelease(v1);
  }

  v17 = *(void (**)(uint64_t, uint64_t))(v0 + 280);
  v18 = *(_QWORD *)(v0 + 112);
  v20 = *(_QWORD *)(v0 + 80);
  v19 = *(_QWORD *)(v0 + 88);
  v21 = *(_QWORD *)(v0 + 64);
  v22 = *(_QWORD *)(v0 + 72);
  swift_errorRelease(v1);
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
  v17(v18, v19);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 248) + 8))(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 240));
  v23 = *(_QWORD *)(v0 + 224);
  v24 = *(_QWORD *)(v0 + 232);
  v26 = *(_QWORD *)(v0 + 208);
  v25 = *(_QWORD *)(v0 + 216);
  v27 = *(_QWORD *)(v0 + 184);
  v29 = *(_QWORD *)(v0 + 152);
  v28 = *(_QWORD *)(v0 + 160);
  v31 = *(_QWORD *)(v0 + 136);
  v30 = *(_QWORD *)(v0 + 144);
  v33 = *(_QWORD *)(v0 + 112);
  v34 = *(_QWORD *)(v0 + 104);
  v35 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 256));
  swift_task_dealloc(v24);
  swift_task_dealloc(v23);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  return (*(uint64_t (**)(_QWORD *))(v0 + 8))(_swiftEmptyArrayStorage);
}

void sub_E318A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  id v4;
  NSString v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  id v9;
  Class isa;
  NSString v11;
  _OWORD v12[3];
  _OWORD v13[3];
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;

  sub_5C090(a1, (uint64_t)v13, &qword_1509510);
  if (*((_QWORD *)&v13[0] + 1))
  {
    v14 = v13[0];
    v15 = v13[1];
    v16 = v13[2];
    v1 = type metadata accessor for JSONEncoder(0);
    swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
    v2 = JSONEncoder.init()();
    v12[0] = v14;
    v12[1] = v15;
    v12[2] = v16;
    v3 = sub_E31C10();
    v6 = dispatch thunk of JSONEncoder.encode<A>(_:)(v12, &type metadata for RazzmatazzController.Location, v3);
    v8 = v7;
    swift_release(v2);
    v17 = v14;
    sub_8B134((uint64_t)&v17);
    v18 = v15;
    sub_8B134((uint64_t)&v18);
    v9 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    isa = Data._bridgeToObjectiveC()().super.isa;
    v11 = String._bridgeToObjectiveC()();
    objc_msgSend(v9, "setValue:forKey:", isa, v11);

    sub_50C60(v6, v8);
  }
  else
  {
    v4 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    v5 = String._bridgeToObjectiveC()();
    objc_msgSend(v4, "setValue:forKey:", 0, v5);

  }
}

unint64_t sub_E31C10()
{
  unint64_t result;

  result = qword_1509518;
  if (!qword_1509518)
  {
    result = swift_getWitnessTable(&unk_10AE088, &type metadata for RazzmatazzController.Location);
    atomic_store(result, (unint64_t *)&qword_1509518);
  }
  return result;
}

void sub_E31C54(uint64_t a1@<X8>)
{
  id v2;
  NSString v3;
  id v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  _QWORD v15[3];
  uint64_t v16;
  __int128 v17;
  _QWORD v18[2];
  _OWORD v19[2];

  v2 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v2, "valueForKey:", v3);

  if (v4)
  {
    _bridgeAnyObjectToAny(_:)(v19, v4);
    swift_unknownObjectRelease(v4);
  }
  else
  {
    memset(v19, 0, sizeof(v19));
  }
  sub_5C090((uint64_t)v19, (uint64_t)v15, &qword_1508840);
  if (!v16)
  {
    sub_56024((uint64_t)v15, &qword_1508840);
    goto LABEL_8;
  }
  if ((swift_dynamicCast(v18, v15, (char *)&type metadata for Any + 8, &type metadata for Data, 6) & 1) == 0)
  {
LABEL_8:
    v10 = 0;
    v11 = 0;
    v12 = 0;
    v13 = 0;
    v14 = 0uLL;
    goto LABEL_9;
  }
  v6 = v18[0];
  v5 = v18[1];
  v7 = type metadata accessor for JSONDecoder(0);
  swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
  v8 = JSONDecoder.init()();
  v9 = sub_E329F8();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)(&type metadata for RazzmatazzController.Location, v6, v5, &type metadata for RazzmatazzController.Location, v9);
  sub_50C60(v6, v5);
  swift_release(v8);
  v10 = v15[0];
  v11 = v15[1];
  v12 = v15[2];
  v13 = v16;
  v14 = v17;
LABEL_9:
  *(_QWORD *)a1 = v10;
  *(_QWORD *)(a1 + 8) = v11;
  *(_QWORD *)(a1 + 16) = v12;
  *(_QWORD *)(a1 + 24) = v13;
  *(_OWORD *)(a1 + 32) = v14;
}

uint64_t sub_E31FA0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_E31FB8, 0, 0);
}

uint64_t sub_E31FB8()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *KeyPath;
  uint64_t v3;
  double v4;
  uint64_t v5;
  _QWORD *v6;
  char *v8;

  v1 = v0[2];
  KeyPath = (_QWORD *)swift_getKeyPath(&unk_10AE200);
  v3 = sub_1F6F44(&qword_1509558, (uint64_t *)&unk_1507930, (void (*)(void))sub_E3270C, (uint64_t)&protocol conformance descriptor for <A> A?);
  v5 = Array.removingDuplicates<A>(with:)(KeyPath, v1, v3, v4);
  v0[3] = v5;
  swift_release();
  v8 = (char *)&dword_1509570 + dword_1509570;
  v6 = (_QWORD *)swift_task_alloc(unk_1509574);
  v0[4] = v6;
  *v6 = v0;
  v6[1] = sub_E32080;
  return ((uint64_t (*)(void *, _QWORD, uint64_t))v8)(&unk_1509568, 0, v5);
}

uint64_t sub_E32080(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  *(_QWORD *)(*(_QWORD *)v1 + 40) = a1;
  swift_task_dealloc(v2);
  swift_bridgeObjectRelease();
  return swift_task_switch(sub_E320E4, 0, 0);
}

void sub_E320E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  int64_t v8;
  size_t isUniquelyReferenced_nonNull_native;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  __n128 v17;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v1 + 16);
  if (!v2)
  {
    v4 = _swiftEmptyArrayStorage;
LABEL_20:
    v17 = swift_bridgeObjectRelease();
    (*(void (**)(_QWORD *, __n128))(v0 + 8))(v4, v17);
    return;
  }
  v3 = (uint64_t *)(v1 + 32);
  swift_bridgeObjectRetain();
  v4 = _swiftEmptyArrayStorage;
  while (1)
  {
    v5 = *v3;
    v6 = *(_QWORD *)(*v3 + 16);
    v7 = v4[2];
    v8 = v7 + v6;
    if (__OFADD__(v7, v6))
      break;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v4);
    if ((_DWORD)isUniquelyReferenced_nonNull_native && v8 <= v4[3] >> 1)
    {
      if (*(_QWORD *)(v5 + 16))
        goto LABEL_14;
    }
    else
    {
      if (v7 <= v8)
        v10 = v7 + v6;
      else
        v10 = v7;
      v4 = (_QWORD *)sub_DDE290(isUniquelyReferenced_nonNull_native, v10, 1, v4);
      if (*(_QWORD *)(v5 + 16))
      {
LABEL_14:
        v11 = v4[2];
        v12 = (v4[3] >> 1) - v11;
        v13 = type metadata accessor for Razzmatazz(0);
        if (v12 < v6)
          goto LABEL_23;
        swift_arrayInitWithCopy((char *)v4+ ((*(unsigned __int8 *)(*(_QWORD *)(v13 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v13 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v13 - 8) + 72) * v11);
        if (v6)
        {
          v14 = v4[2];
          v15 = __OFADD__(v14, v6);
          v16 = v14 + v6;
          if (v15)
            goto LABEL_24;
          v4[2] = v16;
        }
        goto LABEL_4;
      }
    }
    if (v6)
    {
      __break(1u);
      break;
    }
LABEL_4:
    swift_bridgeObjectRelease();
    ++v3;
    if (!--v2)
    {
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
}

uint64_t sub_E3224C(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  char v9;

  if (a1 == 0x656C746974 && a2 == 0xE500000000000000)
  {
    v5 = 0xE500000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656C746974, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x656C746974627573 && a2 == 0xE800000000000000)
  {
    v7 = 0xE800000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656C746974627573, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x656475746974616CLL && a2 == 0xE800000000000000)
  {
    v8 = 0xE800000000000000;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656475746974616CLL, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 0x64757469676E6F6CLL && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease(0xE900000000000065);
    return 3;
  }
  else
  {
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(0x64757469676E6F6CLL, 0xE900000000000065, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v9 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

void sub_E32408(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  char v25;
  char v26;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509520);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  v11 = sub_E3264C();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for RazzmatazzController.Location.CodingKeys, &type metadata for RazzmatazzController.Location.CodingKeys, v11, v9, v10);
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  else
  {
    v26 = 0;
    v12 = KeyedDecodingContainer.decode(_:forKey:)(&v26, v5);
    v14 = v13;
    v25 = 1;
    swift_bridgeObjectRetain();
    v21 = KeyedDecodingContainer.decode(_:forKey:)(&v25, v5);
    v22 = v15;
    v24 = 2;
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode(_:forKey:)(&v24, v5);
    v17 = v16;
    v23 = 3;
    KeyedDecodingContainer.decode(_:forKey:)(&v23, v5);
    v19 = v18;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    __swift_destroy_boxed_opaque_existential_1(a1);
    v20 = v22;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *a2 = v12;
    a2[1] = v14;
    a2[2] = v21;
    a2[3] = v20;
    a2[4] = v17;
    a2[5] = v19;
  }
}

unint64_t sub_E3264C()
{
  unint64_t result;

  result = qword_1509528;
  if (!qword_1509528)
  {
    result = swift_getWitnessTable(&unk_10AE42C, &type metadata for RazzmatazzController.Location.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1509528);
  }
  return result;
}

unint64_t sub_E32690()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1508FF8;
  if (!qword_1508FF8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1507590);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1508FF8);
  }
  return result;
}

uint64_t sub_E326E4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = Artist.catalogID.getter(a1);
  *a2 = result;
  a2[1] = v4;
  return result;
}

unint64_t sub_E3270C()
{
  unint64_t result;

  result = qword_1509560;
  if (!qword_1509560)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MusicItemID, &type metadata for MusicItemID);
    atomic_store(result, (unint64_t *)&qword_1509560);
  }
  return result;
}

uint64_t sub_E32750(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v6 = (uint64_t *)v2[2];
  v7 = v2[3];
  v9 = v2[4];
  v8 = v2[5];
  v10 = (_QWORD *)swift_task_alloc(dword_150957C);
  *(_QWORD *)(v3 + 16) = v10;
  *v10 = v3;
  v10[1] = sub_50F8C;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t))((char *)&dword_1509578
                                                                                         + dword_1509578))(a1, a2, v6, v7, v9, v8);
}

uint64_t sub_E327E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v1 = type metadata accessor for Artist(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 56) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v7 = swift_release(*(_QWORD *)(v0 + 48));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_E32860(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Artist(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (int *)v1[5];
  v9 = v1[6];
  v10 = (uint64_t)v1 + ((v4 + 56) & ~v4);
  v11 = (_QWORD *)swift_task_alloc(dword_15095BC);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_C3150;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_15095B8
                                                                                              + dword_15095B8))(a1, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_E32914(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_15085D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_E3295C()
{
  unint64_t result;

  result = qword_15095E8;
  if (!qword_15095E8)
  {
    result = swift_getWitnessTable(&unk_10AE404, &type metadata for Root);
    atomic_store(result, (unint64_t *)&qword_15095E8);
  }
  return result;
}

uint64_t sub_E329A0@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;

  return sub_E2D274(a1, *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), a2);
}

uint64_t type metadata accessor for ShazamEvent(uint64_t a1)
{
  return sub_6345C(a1, qword_15097B0, (uint64_t)&nominal type descriptor for ShazamEvent);
}

uint64_t type metadata accessor for RazzmatazzAPI.CustomError(uint64_t a1)
{
  return sub_6345C(a1, qword_1509720, (uint64_t)&nominal type descriptor for RazzmatazzAPI.CustomError);
}

uint64_t type metadata accessor for ShazamEvent.Attributes(uint64_t a1)
{
  return sub_6345C(a1, qword_1509670, (uint64_t)&nominal type descriptor for ShazamEvent.Attributes);
}

unint64_t sub_E329F8()
{
  unint64_t result;

  result = qword_1509610;
  if (!qword_1509610)
  {
    result = swift_getWitnessTable(&unk_10AE0B0, &type metadata for RazzmatazzController.Location);
    atomic_store(result, (unint64_t *)&qword_1509610);
  }
  return result;
}

uint64_t *sub_E32A3C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v17);
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for Date(0);
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = *(int *)(a3 + 24);
    v14 = (char *)v4 + v13;
    v15 = (char *)a2 + v13;
    v16 = type metadata accessor for TimeZone(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  }
  return v4;
}

uint64_t sub_E32B14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 24);
  v7 = type metadata accessor for TimeZone(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

_QWORD *sub_E32B88(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Date(0);
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = *(int *)(a3 + 24);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  return a1;
}

_QWORD *sub_E32C34(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  *a1 = *a2;
  v6 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

_OWORD *sub_E32CE4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  return a1;
}

_QWORD *sub_E32D7C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = *(int *)(a3 + 24);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t sub_E32E1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_E32E28);
}

uint64_t sub_E32E28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for Date(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = type metadata accessor for TimeZone(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_E32EC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_E32ED4);
}

uint64_t sub_E32ED4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for Date(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = type metadata accessor for TimeZone(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t sub_E32F70(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[3];

  v5[0] = &unk_10AE238;
  result = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v5[1] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for TimeZone(319);
    if (v4 <= 0x3F)
    {
      v5[2] = *(_QWORD *)(result - 8) + 64;
      swift_initStructMetadata(a1, 256, 3, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

void destroy for VenueElement(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 72));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 88));

}

_QWORD *initializeWithCopy for VenueElement(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  v9 = (void *)a2[12];
  a1[12] = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10 = v9;
  return a1;
}

_QWORD *assignWithCopy for VenueElement(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;

  *a1 = *a2;
  v4 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  a1[2] = a2[2];
  v5 = a1[3];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v5);
  a1[4] = a2[4];
  v6 = a1[5];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  a1[6] = a2[6];
  v7 = a1[7];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v7);
  a1[8] = a2[8];
  v8 = a1[9];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v8);
  a1[10] = a2[10];
  v9 = a1[11];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v9);
  v10 = (void *)a2[12];
  v11 = (void *)a1[12];
  a1[12] = v10;
  v12 = v10;

  return a1;
}

_QWORD *assignWithTake for VenueElement(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = a1[1];
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = a1[3];
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = a1[5];
  a1[4] = *(_QWORD *)(a2 + 32);
  a1[5] = v8;
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = a1[7];
  a1[6] = *(_QWORD *)(a2 + 48);
  a1[7] = v10;
  swift_bridgeObjectRelease(v11);
  v12 = *(_QWORD *)(a2 + 72);
  v13 = a1[9];
  a1[8] = *(_QWORD *)(a2 + 64);
  a1[9] = v12;
  swift_bridgeObjectRelease(v13);
  a1[10] = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease(a1[11]);
  v14 = (void *)a1[12];
  *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 88);

  return a1;
}

ValueMetadata *type metadata accessor for VenueElement()
{
  return &type metadata for VenueElement;
}

uint64_t *sub_E33294(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v31;
  char *v32;
  uint64_t v33;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v29 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    if (EnumCaseMultiPayload == 1)
    {
      v33 = type metadata accessor for ShazamEvent(0);
      v9 = *(int *)(v33 + 20);
      v10 = (uint64_t *)((char *)a1 + v9);
      v11 = (char *)a2 + v9;
      v12 = *(uint64_t *)((char *)a2 + v9 + 8);
      *v10 = *(uint64_t *)((char *)a2 + v9);
      v10[1] = v12;
      v13 = type metadata accessor for ShazamEvent.Attributes(0);
      v14 = *(int *)(v13 + 20);
      v31 = &v11[v14];
      v32 = (char *)v10 + v14;
      v15 = type metadata accessor for Date(0);
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v16(v32, v31, v15);
      v17 = *(int *)(v13 + 24);
      v18 = (char *)v10 + v17;
      v19 = &v11[v17];
      v20 = type metadata accessor for TimeZone(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
      v21 = *(int *)(v33 + 24);
      v22 = (uint64_t *)((char *)a1 + v21);
      v23 = (uint64_t *)((char *)a2 + v21);
      v24 = v23[1];
      *v22 = *v23;
      v22[1] = v24;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509608);
      *(uint64_t *)((char *)a1 + *(int *)(v25 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v25 + 48));
      swift_bridgeObjectRetain();
      v26 = a1;
      v27 = a3;
      v28 = 1;
    }
    else
    {
      swift_bridgeObjectRetain();
      v26 = a1;
      v27 = a3;
      v28 = 0;
    }
    swift_storeEnumTagMultiPayload(v26, v27, v28);
  }
  return a1;
}

double sub_E3342C(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  double result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1, a2);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  if (EnumCaseMultiPayload == 1)
  {
    v5 = a1 + *(int *)(type metadata accessor for ShazamEvent(0) + 20);
    swift_bridgeObjectRelease();
    v6 = type metadata accessor for ShazamEvent.Attributes(0);
    v7 = v5 + *(int *)(v6 + 20);
    v8 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
    v9 = v5 + *(int *)(v6 + 24);
    v10 = type metadata accessor for TimeZone(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1509608);
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  return result;
}

_QWORD *sub_E33520(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v28;
  uint64_t v29;
  uint64_t v30;

  v3 = a3;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  v7 = a2[1];
  *a1 = *a2;
  a1[1] = v7;
  if (EnumCaseMultiPayload == 1)
  {
    v29 = type metadata accessor for ShazamEvent(0);
    v30 = v3;
    v8 = *(int *)(v29 + 20);
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (char *)a2 + v8;
    v11 = *(_QWORD *)((char *)a2 + v8 + 8);
    *v9 = *(_QWORD *)((char *)a2 + v8);
    v9[1] = v11;
    v12 = type metadata accessor for ShazamEvent.Attributes(0);
    v13 = *(int *)(v12 + 20);
    v28 = (char *)v9 + v13;
    v14 = &v10[v13];
    v15 = type metadata accessor for Date(0);
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16(v28, v14, v15);
    v17 = *(int *)(v12 + 24);
    v18 = (char *)v9 + v17;
    v19 = &v10[v17];
    v3 = v30;
    v20 = type metadata accessor for TimeZone(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
    v21 = *(int *)(v29 + 24);
    v22 = (_QWORD *)((char *)a1 + v21);
    v23 = (_QWORD *)((char *)a2 + v21);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509608);
    *(_QWORD *)((char *)a1 + *(int *)(v25 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v25 + 48));
    v26 = 1;
  }
  else
  {
    v26 = 0;
  }
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload(a1, v3, v26);
  return a1;
}

_QWORD *sub_E3368C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  _QWORD *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char *v25;
  uint64_t v26;
  uint64_t v27;

  if (a1 != a2)
  {
    sub_5C0DC((uint64_t)a1, type metadata accessor for RazzmatazzAPI.CustomError);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    *a1 = *a2;
    a1[1] = a2[1];
    if (EnumCaseMultiPayload == 1)
    {
      v26 = type metadata accessor for ShazamEvent(0);
      v27 = a3;
      v7 = *(int *)(v26 + 20);
      v8 = (_QWORD *)((char *)a1 + v7);
      v9 = (char *)a2 + v7;
      *v8 = *(_QWORD *)((char *)a2 + v7);
      v8[1] = *(_QWORD *)((char *)a2 + v7 + 8);
      v10 = type metadata accessor for ShazamEvent.Attributes(0);
      v11 = *(int *)(v10 + 20);
      v25 = (char *)v8 + v11;
      v12 = &v9[v11];
      v13 = type metadata accessor for Date(0);
      v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v14(v25, v12, v13);
      v15 = *(int *)(v10 + 24);
      v16 = (char *)v8 + v15;
      v17 = &v9[v15];
      a3 = v27;
      v18 = type metadata accessor for TimeZone(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
      v19 = *(int *)(v26 + 24);
      v20 = (_QWORD *)((char *)a1 + v19);
      v21 = (_QWORD *)((char *)a2 + v19);
      *v20 = *v21;
      v20[1] = v21[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509608);
      *(_QWORD *)((char *)a1 + *(int *)(v22 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v22 + 48));
      v23 = 1;
    }
    else
    {
      v23 = 0;
    }
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload(a1, a3, v23);
  }
  return a1;
}

_OWORD *sub_E33828(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    *a1 = *a2;
    v6 = type metadata accessor for ShazamEvent(0);
    v7 = *(int *)(v6 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    *(_OWORD *)((char *)a1 + v7) = *(_OWORD *)((char *)a2 + v7);
    v10 = type metadata accessor for ShazamEvent.Attributes(0);
    v11 = *(int *)(v10 + 20);
    v12 = &v8[v11];
    v13 = &v9[v11];
    v14 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    v15 = *(int *)(v10 + 24);
    v16 = &v8[v15];
    v17 = &v9[v15];
    v18 = type metadata accessor for TimeZone(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
    *(_OWORD *)((char *)a1 + *(int *)(v6 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(v6 + 24));
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509608);
    *(_QWORD *)((char *)a1 + *(int *)(v19 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v19 + 48));
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_E3395C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;

  if (a1 != a2)
  {
    sub_5C0DC((uint64_t)a1, type metadata accessor for RazzmatazzAPI.CustomError);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      *a1 = *a2;
      v6 = type metadata accessor for ShazamEvent(0);
      v7 = *(int *)(v6 + 20);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      *(_OWORD *)((char *)a1 + v7) = *(_OWORD *)((char *)a2 + v7);
      v10 = type metadata accessor for ShazamEvent.Attributes(0);
      v11 = *(int *)(v10 + 20);
      v12 = &v8[v11];
      v13 = &v9[v11];
      v14 = type metadata accessor for Date(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
      v15 = *(int *)(v10 + 24);
      v16 = &v8[v15];
      v17 = &v9[v15];
      v18 = type metadata accessor for TimeZone(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
      *(_OWORD *)((char *)a1 + *(int *)(v6 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(v6 + 24));
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509608);
      *(_QWORD *)((char *)a1 + *(int *)(v19 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v19 + 48));
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_E33AA8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _BYTE v4[32];
  _QWORD v5[2];

  v5[0] = &unk_10AE238;
  result = type metadata accessor for ShazamEvent(319);
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout2(v4, *(_QWORD *)(result - 8) + 64, (char *)&value witness table for Builtin.BridgeObject + 64);
    v5[1] = v4;
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v5);
    return 0;
  }
  return result;
}

uint64_t *sub_E33B30(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  char *v26;
  char *v27;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (char *)a2 + v8;
    v11 = *(uint64_t *)((char *)a2 + v8 + 8);
    *v9 = *(uint64_t *)((char *)a2 + v8);
    v9[1] = v11;
    v12 = type metadata accessor for ShazamEvent.Attributes(0);
    v13 = *(int *)(v12 + 20);
    v26 = &v10[v13];
    v27 = (char *)v9 + v13;
    v14 = type metadata accessor for Date(0);
    v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15(v27, v26, v14);
    v16 = *(int *)(v12 + 24);
    v17 = (char *)v9 + v16;
    v18 = &v10[v16];
    v19 = type metadata accessor for TimeZone(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = *(int *)(a3 + 24);
    v21 = (uint64_t *)((char *)v4 + v20);
    v22 = (uint64_t *)((char *)a2 + v20);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

double sub_E33C60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double result;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  v5 = type metadata accessor for ShazamEvent.Attributes(0);
  v6 = v4 + *(int *)(v5 + 20);
  v7 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = v4 + *(int *)(v5 + 24);
  v9 = type metadata accessor for TimeZone(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

_QWORD *sub_E33D10(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  char *v24;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = *(int *)(a3 + 20);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (char *)a2 + v6;
  v9 = *(_QWORD *)((char *)a2 + v6 + 8);
  *v7 = *(_QWORD *)((char *)a2 + v6);
  v7[1] = v9;
  v10 = type metadata accessor for ShazamEvent.Attributes(0);
  v11 = *(int *)(v10 + 20);
  v24 = (char *)v7 + v11;
  v12 = &v8[v11];
  v13 = type metadata accessor for Date(0);
  v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14(v24, v12, v13);
  v15 = *(int *)(v10 + 24);
  v16 = (char *)v7 + v15;
  v17 = &v8[v15];
  v18 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = *(int *)(a3 + 24);
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_E33E1C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (char *)a2 + v6;
  *v7 = *(_QWORD *)((char *)a2 + v6);
  v7[1] = *(_QWORD *)((char *)a2 + v6 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = type metadata accessor for ShazamEvent.Attributes(0);
  v10 = *(int *)(v9 + 20);
  v11 = (char *)v7 + v10;
  v12 = &v8[v10];
  v13 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  v14 = *(int *)(v9 + 24);
  v15 = (char *)v7 + v14;
  v16 = &v8[v14];
  v17 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v15, v16, v17);
  v18 = *(int *)(a3 + 24);
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  *(_QWORD *)((char *)a1 + v18) = *(_QWORD *)((char *)a2 + v18);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v19 + 1) = *((_QWORD *)v20 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_E33F48(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *(_OWORD *)((char *)a1 + v6) = *(_OWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for ShazamEvent.Attributes(0);
  v10 = *(int *)(v9 + 20);
  v11 = &v7[v10];
  v12 = &v8[v10];
  v13 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  v14 = *(int *)(v9 + 24);
  v15 = &v7[v14];
  v16 = &v8[v14];
  v17 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *sub_E34014(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  _QWORD *v22;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (char *)a2 + v7;
  v10 = *(_QWORD *)((char *)a2 + v7 + 8);
  *v8 = *(_QWORD *)((char *)a2 + v7);
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v11 = type metadata accessor for ShazamEvent.Attributes(0);
  v12 = *(int *)(v11 + 20);
  v13 = (char *)v8 + v12;
  v14 = &v9[v12];
  v15 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v16 = *(int *)(v11 + 24);
  v17 = (char *)v8 + v16;
  v18 = &v9[v16];
  v19 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 40))(v17, v18, v19);
  v20 = *(int *)(a3 + 24);
  v21 = (char *)a1 + v20;
  v22 = (_QWORD *)((char *)a2 + v20);
  *(_QWORD *)((char *)a1 + v20) = *v22;
  swift_bridgeObjectRelease();
  *((_QWORD *)v21 + 1) = v22[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_E34110(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_E3411C);
}

uint64_t sub_E3411C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for ShazamEvent.Attributes(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_E34198(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_E341A4);
}

uint64_t sub_E341A4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for ShazamEvent.Attributes(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_E34218(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = &unk_10AE238;
  result = type metadata accessor for ShazamEvent.Attributes(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = &unk_10AE238;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for Root()
{
  return &type metadata for Root;
}

uint64_t storeEnumTagSinglePayload for RazzmatazzController.Location.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_E342EC + 4 * byte_10AE019[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_E34320 + 4 * byte_10AE014[v4]))();
}

uint64_t sub_E34320(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_E34328(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xE34330);
  return result;
}

uint64_t sub_E3433C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xE34344);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_E34348(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_E34350(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RazzmatazzController.Location.CodingKeys()
{
  return &type metadata for RazzmatazzController.Location.CodingKeys;
}

unint64_t sub_E34370()
{
  unint64_t result;

  result = qword_15097F0;
  if (!qword_15097F0)
  {
    result = swift_getWitnessTable(&unk_10AE324, &type metadata for RazzmatazzController.Location.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_15097F0);
  }
  return result;
}

unint64_t sub_E343B8()
{
  unint64_t result;

  result = qword_15097F8;
  if (!qword_15097F8)
  {
    result = swift_getWitnessTable("ݴ1", &type metadata for RazzmatazzController.Location.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_15097F8);
  }
  return result;
}

unint64_t sub_E34400()
{
  unint64_t result;

  result = qword_1509800;
  if (!qword_1509800)
  {
    result = swift_getWitnessTable(&unk_10AE2BC, &type metadata for RazzmatazzController.Location.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1509800);
  }
  return result;
}

_QWORD *sub_E34444(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v14;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509808);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v8 = a1[4];
  v9 = __swift_project_boxed_opaque_existential_1(a1, v7);
  v10 = sub_E34568();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for Root.CodingKeys, &type metadata for Root.CodingKeys, v10, v7, v8);
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  else
  {
    v11 = sub_E345AC();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for Resources, v12, v3, &type metadata for Resources, v11);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v9 = v14;
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  return v9;
}

unint64_t sub_E34568()
{
  unint64_t result;

  result = qword_1509810;
  if (!qword_1509810)
  {
    result = swift_getWitnessTable(&unk_10AE944, &type metadata for Root.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1509810);
  }
  return result;
}

unint64_t sub_E345AC()
{
  unint64_t result;

  result = qword_1509818;
  if (!qword_1509818)
  {
    result = swift_getWitnessTable(&unk_10AE91C, &type metadata for Resources);
    atomic_store(result, (unint64_t *)&qword_1509818);
  }
  return result;
}

unint64_t sub_E345F0()
{
  unint64_t result;

  result = qword_1509830;
  if (!qword_1509830)
  {
    result = swift_getWitnessTable(&unk_10AE8CC, &type metadata for ShazamEvent.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1509830);
  }
  return result;
}

unint64_t sub_E34634()
{
  unint64_t result;

  result = qword_1509838;
  if (!qword_1509838)
  {
    result = swift_getWitnessTable(&unk_10AE8A4, &type metadata for ShazamEvent.Attributes.Time);
    atomic_store(result, (unint64_t *)&qword_1509838);
  }
  return result;
}

uint64_t sub_E34678(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_15098E0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  v9 = sub_E3632C();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for Resources.CodingKeys, &type metadata for Resources.CodingKeys, v9, v7, v8);
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  else
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_15098F0);
    HIBYTE(v15) = 0;
    v11 = sub_E36370();
    KeyedDecodingContainer.decode<A>(_:forKey:)(v10, (char *)&v15 + 7, v3, v10, v11);
    v7 = v16;
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509908);
    HIBYTE(v15) = 1;
    v14 = sub_E363F4();
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode<A>(_:forKey:)(v13, (char *)&v15 + 7, v3, v13, v14);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1(a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t sub_E3484C(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 0x6D69547472617473 && a2 == 0xE900000000000065)
  {
    v5 = 0xE900000000000065;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6D69547472617473, 0xE900000000000065, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x656E6F7A656D6974 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease(0xE800000000000000);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0x656E6F7A656D6974, 0xE800000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_E34948(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  char v12;
  char v13;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509920);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  v9 = sub_E364A4();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for ShazamEvent.Attributes.Time.CodingKeys, &type metadata for ShazamEvent.Attributes.Time.CodingKeys, v9, v7, v8);
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  else
  {
    v13 = 0;
    v8 = KeyedDecodingContainer.decode(_:forKey:)(&v13, v3);
    v12 = 1;
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode(_:forKey:)(&v12, v3);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1(a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v8;
}

_QWORD *sub_E34AF4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  int64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  __n128 v30;
  uint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char v38;
  _QWORD *v39;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509950);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (_QWORD *)a1[3];
  v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, (uint64_t)v8);
  v10 = sub_E365B4();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for ShazamEvent.Relationships.CodingKeys, &type metadata for ShazamEvent.Relationships.CodingKeys, v10, v8, v9);
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  else
  {
    v38 = 0;
    v11 = sub_E365F8();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for ShazamEvent.Relationships.Data, &v38, v4, &type metadata for ShazamEvent.Relationships.Data, v11);
    v13 = v39;
    v14 = v39[2];
    v37 = v7;
    if (v14)
    {
      v32 = v11;
      v34 = v5;
      v35 = v4;
      v36 = 0;
      v39 = _swiftEmptyArrayStorage;
      v33 = v13;
      sub_DDECBC(0, v14, 0);
      v8 = v39;
      v15 = v33 + 5;
      do
      {
        v16 = *(v15 - 1);
        v17 = *v15;
        v39 = v8;
        v19 = v8[2];
        v18 = v8[3];
        swift_bridgeObjectRetain();
        if (v19 >= v18 >> 1)
        {
          sub_DDECBC((char *)(v18 > 1), v19 + 1, 1);
          v8 = v39;
        }
        v15 += 2;
        v8[2] = v19 + 1;
        v20 = &v8[2 * v19];
        v20[4] = v16;
        v20[5] = v17;
        --v14;
      }
      while (v14);
      swift_bridgeObjectRelease();
      v4 = v35;
      v2 = v36;
      v5 = v34;
      v7 = v37;
      v11 = v32;
    }
    else
    {
      swift_bridgeObjectRelease();
      v8 = _swiftEmptyArrayStorage;
    }
    v38 = 1;
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for ShazamEvent.Relationships.Data, &v38, v4, &type metadata for ShazamEvent.Relationships.Data, v11);
    if (v2)
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(a1);
      swift_bridgeObjectRelease();
    }
    else
    {
      v21 = v39;
      v22 = v39[2];
      if (v22)
      {
        v34 = v5;
        v35 = v4;
        v36 = 0;
        v39 = _swiftEmptyArrayStorage;
        sub_DDECBC(0, v22, 0);
        v23 = v39;
        v33 = v21;
        v24 = v21 + 5;
        do
        {
          v25 = *(v24 - 1);
          v26 = *v24;
          v39 = v23;
          v28 = v23[2];
          v27 = v23[3];
          swift_bridgeObjectRetain();
          if (v28 >= v27 >> 1)
          {
            sub_DDECBC((char *)(v27 > 1), v28 + 1, 1);
            v23 = v39;
          }
          v24 += 2;
          v23[2] = v28 + 1;
          v29 = &v23[2 * v28];
          v29[4] = v25;
          v29[5] = v26;
          --v22;
        }
        while (v22);
        v30 = swift_bridgeObjectRelease();
        v4 = v35;
        v5 = v34;
      }
      else
      {
        v30 = swift_bridgeObjectRelease();
      }
      (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v37, v4, v30);
      swift_bridgeObjectRetain();
      __swift_destroy_boxed_opaque_existential_1(a1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  return v8;
}

_QWORD *sub_E34E50(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_15099F0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v8 = a1[4];
  v9 = __swift_project_boxed_opaque_existential_1(a1, v7);
  v10 = sub_E36B94();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for ShazamEvent.Relationships.Data.CodingKeys, &type metadata for ShazamEvent.Relationships.Data.CodingKeys, v10, v7, v8);
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  else
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509A00);
    v12 = sub_1F6F44(&qword_1509A08, &qword_1509A00, (void (*)(void))sub_E36BD8, (uint64_t)&protocol conformance descriptor for <A> [A]);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v11, v13, v3, v11, v12);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v9 = (_QWORD *)v15[1];
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  return v9;
}

uint64_t sub_E34F9C(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  char v8;

  if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    v5 = 0xE200000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(25705, 0xE200000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x7475626972747461 && a2 == 0xEA00000000007365)
  {
    v7 = 0xEA00000000007365;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7475626972747461, 0xEA00000000007365, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x6E6F6974616C6572 && a2 == 0xED00007370696873)
  {
    swift_bridgeObjectRelease(0xED00007370696873);
    return 2;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F6974616C6572, 0xED00007370696873, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v8 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_E35108(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_13C22D8, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3)
    return 3;
  else
    return v3;
}

void sub_E35150(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  double v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509930);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  v11 = sub_E364E8();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for VenueElement.Attributes.CodingKeys, &type metadata for VenueElement.Attributes.CodingKeys, v11, v9, v10);
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  else
  {
    LOBYTE(v38) = 0;
    v12 = KeyedDecodingContainer.decode(_:forKey:)(&v38, v5);
    v14 = v13;
    v37 = v12;
    v46 = 1;
    v15 = sub_E3652C();
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for VenueElement.Attributes.StructuredAddress, &v46, v5, &type metadata for VenueElement.Attributes.StructuredAddress, v15);
    v16 = v39;
    v31 = v38;
    v32 = v14;
    v17 = v41;
    v18 = v43;
    v29 = v42;
    v30 = v40;
    v28 = v44;
    v36 = v45;
    v46 = 2;
    v19 = sub_E36570();
    v35 = v16;
    swift_bridgeObjectRetain();
    v34 = v17;
    swift_bridgeObjectRetain();
    v33 = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for VenueElement.Attributes.Geo, &v46, v5, &type metadata for VenueElement.Attributes.Geo, v19);
    v20 = objc_msgSend(objc_allocWithZone((Class)CLLocation), "initWithLatitude:longitude:", v38, v39);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v21 = v32;
    swift_bridgeObjectRetain();
    v22 = v20;
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(a1);

    v23 = v36;
    swift_bridgeObjectRelease();
    v24 = v33;
    swift_bridgeObjectRelease();
    v25 = v34;
    swift_bridgeObjectRelease();
    v26 = v35;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *a2 = v37;
    a2[1] = v21;
    *((double *)a2 + 2) = v31;
    *((double *)a2 + 3) = v26;
    a2[4] = v30;
    a2[5] = v25;
    a2[6] = v29;
    a2[7] = v24;
    a2[8] = v28;
    a2[9] = v23;
    a2[10] = (uint64_t)v22;
  }
}

uint64_t sub_E354AC(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0xD000000000000011 && a2 == 0x800000000110DCD0)
  {
    swift_bridgeObjectRelease(0x800000000110DCD0);
    v3 = 0;
  }
  else
  {
    v4 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000011, 0x800000000110DCD0, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    v3 = v4 ^ 1;
  }
  return v3 & 1;
}

uint64_t sub_E35530@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_15099C8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  v11 = sub_E36AC8();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for VenueElement.Attributes.StructuredAddress.CodingKeys, &type metadata for VenueElement.Attributes.StructuredAddress.CodingKeys, v11, v9, v10);
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1(a1);
  v12 = sub_E36B0C();
  KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for Razzmatazz.Venue.Address, v13, v5, &type metadata for Razzmatazz.Venue.Address, v12);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v19 = v22;
  v20 = v21;
  v18 = v23;
  v14 = v24;
  v15 = v25;
  result = __swift_destroy_boxed_opaque_existential_1(a1);
  v17 = v19;
  *(_OWORD *)a2 = v20;
  *(_OWORD *)(a2 + 16) = v17;
  *(_OWORD *)(a2 + 32) = v18;
  *(_QWORD *)(a2 + 48) = v14;
  *(_QWORD *)(a2 + 56) = v15;
  return result;
}

uint64_t sub_E35684(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 7627116 && a2 == 0xE300000000000000)
  {
    v5 = 0xE300000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(7627116, 0xE300000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 6778476 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease(0xE300000000000000);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(6778476, 0xE300000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

double sub_E35754(_QWORD *a1)
{
  uint64_t v1;
  double v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  double v11;
  uint64_t v13;
  char v14;
  char v15;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_15099E0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1[3];
  v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  v10 = sub_E36B50();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for VenueElement.Attributes.Geo.CodingKeys, &type metadata for VenueElement.Attributes.Geo.CodingKeys, v10, v8, v9);
  if (!v1)
  {
    v15 = 0;
    KeyedDecodingContainer.decode(_:forKey:)(&v15, v4);
    v2 = v11;
    v14 = 1;
    KeyedDecodingContainer.decode(_:forKey:)(&v14, v4);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v2;
}

uint64_t sub_E358AC(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    v5 = 0xE200000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(25705, 0xE200000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x7475626972747461 && a2 == 0xEA00000000007365)
  {
    swift_bridgeObjectRelease(0xEA00000000007365);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0x7475626972747461, 0xEA00000000007365, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void sub_E35990(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[11];
  char v33;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509848);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  v11 = sub_E35BFC();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for VenueElement.CodingKeys, &type metadata for VenueElement.CodingKeys, v11, v9, v10);
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  else
  {
    LOBYTE(v32[0]) = 0;
    v12 = KeyedDecodingContainer.decode(_:forKey:)(v32, v5);
    v14 = v13;
    v33 = 1;
    v15 = sub_E35C40();
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&type metadata for VenueElement.Attributes, &v33, v5, &type metadata for VenueElement.Attributes, v15);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v29 = v32[2];
    v30 = v32[0];
    v24 = v32[3];
    v25 = v32[1];
    v16 = v32[5];
    v27 = v32[6];
    v28 = v32[4];
    v31 = v32[7];
    v17 = v32[9];
    v26 = v32[8];
    v18 = (void *)v32[10];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v19 = v18;
    swift_bridgeObjectRetain();
    v20 = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1(a1);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v21 = v25;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *a2 = v12;
    a2[1] = v14;
    a2[2] = v30;
    a2[3] = v21;
    a2[4] = v29;
    a2[5] = v20;
    a2[6] = v28;
    a2[7] = v16;
    v22 = v31;
    a2[8] = v27;
    a2[9] = v22;
    a2[10] = v26;
    a2[11] = v17;
    a2[12] = (uint64_t)v19;
  }
}

unint64_t sub_E35BFC()
{
  unint64_t result;

  result = qword_1509850;
  if (!qword_1509850)
  {
    result = swift_getWitnessTable(&unk_10AE854, &type metadata for VenueElement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1509850);
  }
  return result;
}

unint64_t sub_E35C40()
{
  unint64_t result;

  result = qword_1509858;
  if (!qword_1509858)
  {
    result = swift_getWitnessTable(&unk_10AE82C, &type metadata for VenueElement.Attributes);
    atomic_store(result, (unint64_t *)&qword_1509858);
  }
  return result;
}

unint64_t sub_E35C84()
{
  unint64_t result;

  result = qword_1509868;
  if (!qword_1509868)
  {
    result = swift_getWitnessTable(&unk_10AE7DC, &type metadata for ShazamEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1509868);
  }
  return result;
}

unint64_t sub_E35CC8()
{
  unint64_t result;

  result = qword_1509878;
  if (!qword_1509878)
  {
    result = swift_getWitnessTable(&unk_10AE7B4, &type metadata for ShazamEvent.Relationships);
    atomic_store(result, (unint64_t *)&qword_1509878);
  }
  return result;
}

ValueMetadata *type metadata accessor for ShazamEvent.CodingKeys()
{
  return &type metadata for ShazamEvent.CodingKeys;
}

ValueMetadata *type metadata accessor for VenueElement.CodingKeys()
{
  return &type metadata for VenueElement.CodingKeys;
}

ValueMetadata *type metadata accessor for ShazamEvent.Attributes.Time()
{
  return &type metadata for ShazamEvent.Attributes.Time;
}

ValueMetadata *type metadata accessor for ShazamEvent.Attributes.CodingKeys()
{
  return &type metadata for ShazamEvent.Attributes.CodingKeys;
}

ValueMetadata *type metadata accessor for Root.CodingKeys()
{
  return &type metadata for Root.CodingKeys;
}

void destroy for VenueElement.Attributes(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 72));

}

_QWORD *initializeWithCopy for VenueElement.Attributes(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  v8 = (void *)a2[10];
  a1[10] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = v8;
  return a1;
}

_QWORD *assignWithCopy for VenueElement.Attributes(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;

  *a1 = *a2;
  v4 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  a1[2] = a2[2];
  v5 = a1[3];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v5);
  a1[4] = a2[4];
  v6 = a1[5];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  a1[6] = a2[6];
  v7 = a1[7];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v7);
  a1[8] = a2[8];
  v8 = a1[9];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v8);
  v9 = (void *)a2[10];
  v10 = (void *)a1[10];
  a1[10] = v9;
  v11 = v9;

  return a1;
}

_QWORD *assignWithTake for VenueElement.Attributes(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = a1[1];
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = a1[3];
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = a1[5];
  a1[4] = *(_QWORD *)(a2 + 32);
  a1[5] = v8;
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = a1[7];
  a1[6] = *(_QWORD *)(a2 + 48);
  a1[7] = v10;
  swift_bridgeObjectRelease(v11);
  a1[8] = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease(a1[9]);
  v12 = (void *)a1[10];
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 72);

  return a1;
}

ValueMetadata *type metadata accessor for VenueElement.Attributes()
{
  return &type metadata for VenueElement.Attributes;
}

ValueMetadata *type metadata accessor for ShazamEvent.Relationships()
{
  return &type metadata for ShazamEvent.Relationships;
}

ValueMetadata *type metadata accessor for Resources()
{
  return &type metadata for Resources;
}

unint64_t sub_E35FD0()
{
  unint64_t result;

  result = qword_1509880;
  if (!qword_1509880)
  {
    result = swift_getWitnessTable(&unk_10AE52C, &type metadata for Root.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1509880);
  }
  return result;
}

unint64_t sub_E36018()
{
  unint64_t result;

  result = qword_1509888;
  if (!qword_1509888)
  {
    result = swift_getWitnessTable(&unk_10AE61C, &type metadata for ShazamEvent.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1509888);
  }
  return result;
}

unint64_t sub_E36060()
{
  unint64_t result;

  result = qword_1509890;
  if (!qword_1509890)
  {
    result = swift_getWitnessTable(&unk_10AE6D4, &type metadata for VenueElement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1509890);
  }
  return result;
}

unint64_t sub_E360A8()
{
  unint64_t result;

  result = qword_1509898;
  if (!qword_1509898)
  {
    result = swift_getWitnessTable(&unk_10AE78C, &type metadata for ShazamEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1509898);
  }
  return result;
}

unint64_t sub_E360F0()
{
  unint64_t result;

  result = qword_15098A0;
  if (!qword_15098A0)
  {
    result = swift_getWitnessTable(&unk_10AE6FC, &type metadata for ShazamEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_15098A0);
  }
  return result;
}

unint64_t sub_E36138()
{
  unint64_t result;

  result = qword_15098A8;
  if (!qword_15098A8)
  {
    result = swift_getWitnessTable(&unk_10AE724, &type metadata for ShazamEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_15098A8);
  }
  return result;
}

unint64_t sub_E36180()
{
  unint64_t result;

  result = qword_15098B0;
  if (!qword_15098B0)
  {
    result = swift_getWitnessTable(&unk_10AE644, &type metadata for VenueElement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_15098B0);
  }
  return result;
}

unint64_t sub_E361C8()
{
  unint64_t result;

  result = qword_15098B8;
  if (!qword_15098B8)
  {
    result = swift_getWitnessTable(&unk_10AE66C, &type metadata for VenueElement.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_15098B8);
  }
  return result;
}

unint64_t sub_E36210()
{
  unint64_t result;

  result = qword_15098C0;
  if (!qword_15098C0)
  {
    result = swift_getWitnessTable(&unk_10AE554, &type metadata for ShazamEvent.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_15098C0);
  }
  return result;
}

unint64_t sub_E36258()
{
  unint64_t result;

  result = qword_15098C8;
  if (!qword_15098C8)
  {
    result = swift_getWitnessTable(&unk_10AE57C, &type metadata for ShazamEvent.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_15098C8);
  }
  return result;
}

unint64_t sub_E362A0()
{
  unint64_t result;

  result = qword_15098D0;
  if (!qword_15098D0)
  {
    result = swift_getWitnessTable("ղ1", &type metadata for Root.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_15098D0);
  }
  return result;
}

unint64_t sub_E362E8()
{
  unint64_t result;

  result = qword_15098D8;
  if (!qword_15098D8)
  {
    result = swift_getWitnessTable(&unk_10AE4C4, &type metadata for Root.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_15098D8);
  }
  return result;
}

unint64_t sub_E3632C()
{
  unint64_t result;

  result = qword_15098E8;
  if (!qword_15098E8)
  {
    result = swift_getWitnessTable(&unk_10AEEA4, &type metadata for Resources.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_15098E8);
  }
  return result;
}

unint64_t sub_E36370()
{
  unint64_t result;
  uint64_t v1;

  result = qword_15098F8;
  if (!qword_15098F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_15098F0);
    sub_4DD24(&qword_1509900, type metadata accessor for ShazamEvent, (uint64_t)&unk_10AE34C);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> [A : B], v1);
    atomic_store(result, (unint64_t *)&qword_15098F8);
  }
  return result;
}

unint64_t sub_E363F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1509910;
  if (!qword_1509910)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1509908);
    sub_E36460();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> [A : B], v1);
    atomic_store(result, (unint64_t *)&qword_1509910);
  }
  return result;
}

unint64_t sub_E36460()
{
  unint64_t result;

  result = qword_1509918;
  if (!qword_1509918)
  {
    result = swift_getWitnessTable(&unk_10AE374, &type metadata for VenueElement);
    atomic_store(result, (unint64_t *)&qword_1509918);
  }
  return result;
}

unint64_t sub_E364A4()
{
  unint64_t result;

  result = qword_1509928;
  if (!qword_1509928)
  {
    result = swift_getWitnessTable(&unk_10AEE54, &type metadata for ShazamEvent.Attributes.Time.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1509928);
  }
  return result;
}

unint64_t sub_E364E8()
{
  unint64_t result;

  result = qword_1509938;
  if (!qword_1509938)
  {
    result = swift_getWitnessTable(&unk_10AEE04, &type metadata for VenueElement.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1509938);
  }
  return result;
}

unint64_t sub_E3652C()
{
  unint64_t result;

  result = qword_1509940;
  if (!qword_1509940)
  {
    result = swift_getWitnessTable(&unk_10AEDDC, &type metadata for VenueElement.Attributes.StructuredAddress);
    atomic_store(result, (unint64_t *)&qword_1509940);
  }
  return result;
}

unint64_t sub_E36570()
{
  unint64_t result;

  result = qword_1509948;
  if (!qword_1509948)
  {
    result = swift_getWitnessTable(&unk_10AEDB4, &type metadata for VenueElement.Attributes.Geo);
    atomic_store(result, (unint64_t *)&qword_1509948);
  }
  return result;
}

unint64_t sub_E365B4()
{
  unint64_t result;

  result = qword_1509958;
  if (!qword_1509958)
  {
    result = swift_getWitnessTable(&unk_10AED64, &type metadata for ShazamEvent.Relationships.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1509958);
  }
  return result;
}

unint64_t sub_E365F8()
{
  unint64_t result;

  result = qword_1509960;
  if (!qword_1509960)
  {
    result = swift_getWitnessTable(&unk_10AED3C, &type metadata for ShazamEvent.Relationships.Data);
    atomic_store(result, (unint64_t *)&qword_1509960);
  }
  return result;
}

ValueMetadata *type metadata accessor for ShazamEvent.Relationships.Data()
{
  return &type metadata for ShazamEvent.Relationships.Data;
}

ValueMetadata *type metadata accessor for ShazamEvent.Relationships.CodingKeys()
{
  return &type metadata for ShazamEvent.Relationships.CodingKeys;
}

ValueMetadata *type metadata accessor for VenueElement.Attributes.Geo()
{
  return &type metadata for VenueElement.Attributes.Geo;
}

ValueMetadata *type metadata accessor for VenueElement.Attributes.StructuredAddress()
{
  return &type metadata for VenueElement.Attributes.StructuredAddress;
}

uint64_t _s11MusicCoreUI11ShazamEventV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_E366C8 + 4 * byte_10AE023[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_E366FC + 4 * byte_10AE01E[v4]))();
}

uint64_t sub_E366FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_E36704(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xE3670CLL);
  return result;
}

uint64_t sub_E36718(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xE36720);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_E36724(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_E3672C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VenueElement.Attributes.CodingKeys()
{
  return &type metadata for VenueElement.Attributes.CodingKeys;
}

ValueMetadata *type metadata accessor for ShazamEvent.Attributes.Time.CodingKeys()
{
  return &type metadata for ShazamEvent.Attributes.Time.CodingKeys;
}

ValueMetadata *type metadata accessor for Resources.CodingKeys()
{
  return &type metadata for Resources.CodingKeys;
}

unint64_t sub_E3676C()
{
  unint64_t result;

  result = qword_1509968;
  if (!qword_1509968)
  {
    result = swift_getWitnessTable(&unk_10AEA7C, &type metadata for Resources.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1509968);
  }
  return result;
}

unint64_t sub_E367B4()
{
  unint64_t result;

  result = qword_1509970;
  if (!qword_1509970)
  {
    result = swift_getWitnessTable(&unk_10AEB34, &type metadata for ShazamEvent.Attributes.Time.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1509970);
  }
  return result;
}

unint64_t sub_E367FC()
{
  unint64_t result;

  result = qword_1509978;
  if (!qword_1509978)
  {
    result = swift_getWitnessTable(&unk_10AEC24, &type metadata for VenueElement.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1509978);
  }
  return result;
}

unint64_t sub_E36844()
{
  unint64_t result;

  result = qword_1509980;
  if (!qword_1509980)
  {
    result = swift_getWitnessTable(&unk_10AED14, &type metadata for ShazamEvent.Relationships.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1509980);
  }
  return result;
}

unint64_t sub_E3688C()
{
  unint64_t result;

  result = qword_1509988;
  if (!qword_1509988)
  {
    result = swift_getWitnessTable(&unk_10AEC4C, &type metadata for ShazamEvent.Relationships.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1509988);
  }
  return result;
}

unint64_t sub_E368D4()
{
  unint64_t result;

  result = qword_1509990;
  if (!qword_1509990)
  {
    result = swift_getWitnessTable(&unk_10AEC74, &type metadata for ShazamEvent.Relationships.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1509990);
  }
  return result;
}

unint64_t sub_E3691C()
{
  unint64_t result;

  result = qword_1509998;
  if (!qword_1509998)
  {
    result = swift_getWitnessTable(&unk_10AEB5C, &type metadata for VenueElement.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1509998);
  }
  return result;
}

unint64_t sub_E36964()
{
  unint64_t result;

  result = qword_15099A0;
  if (!qword_15099A0)
  {
    result = swift_getWitnessTable(&unk_10AEB84, &type metadata for VenueElement.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_15099A0);
  }
  return result;
}

unint64_t sub_E369AC()
{
  unint64_t result;

  result = qword_15099A8;
  if (!qword_15099A8)
  {
    result = swift_getWitnessTable(&unk_10AEAA4, &type metadata for ShazamEvent.Attributes.Time.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_15099A8);
  }
  return result;
}

unint64_t sub_E369F4()
{
  unint64_t result;

  result = qword_15099B0;
  if (!qword_15099B0)
  {
    result = swift_getWitnessTable(&unk_10AEACC, &type metadata for ShazamEvent.Attributes.Time.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_15099B0);
  }
  return result;
}

unint64_t sub_E36A3C()
{
  unint64_t result;

  result = qword_15099B8;
  if (!qword_15099B8)
  {
    result = swift_getWitnessTable(&unk_10AE9B4, &type metadata for Resources.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_15099B8);
  }
  return result;
}

unint64_t sub_E36A84()
{
  unint64_t result;

  result = qword_15099C0;
  if (!qword_15099C0)
  {
    result = swift_getWitnessTable(&unk_10AE9DC, &type metadata for Resources.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_15099C0);
  }
  return result;
}

unint64_t sub_E36AC8()
{
  unint64_t result;

  result = qword_15099D0;
  if (!qword_15099D0)
  {
    result = swift_getWitnessTable(&unk_10AF210, &type metadata for VenueElement.Attributes.StructuredAddress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_15099D0);
  }
  return result;
}

unint64_t sub_E36B0C()
{
  unint64_t result;

  result = qword_15099D8;
  if (!qword_15099D8)
  {
    result = swift_getWitnessTable(&unk_10ADEC8, &type metadata for Razzmatazz.Venue.Address);
    atomic_store(result, (unint64_t *)&qword_15099D8);
  }
  return result;
}

unint64_t sub_E36B50()
{
  unint64_t result;

  result = qword_15099E8;
  if (!qword_15099E8)
  {
    result = swift_getWitnessTable(&unk_10AF1C0, &type metadata for VenueElement.Attributes.Geo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_15099E8);
  }
  return result;
}

unint64_t sub_E36B94()
{
  unint64_t result;

  result = qword_15099F8;
  if (!qword_15099F8)
  {
    result = swift_getWitnessTable(&unk_10AF170, &type metadata for ShazamEvent.Relationships.Data.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_15099F8);
  }
  return result;
}

unint64_t sub_E36BD8()
{
  unint64_t result;

  result = qword_1509A10;
  if (!qword_1509A10)
  {
    result = swift_getWitnessTable(&unk_10AF148, &type metadata for ShazamEvent.Relationships.Data.ID);
    atomic_store(result, (unint64_t *)&qword_1509A10);
  }
  return result;
}

ValueMetadata *type metadata accessor for ShazamEvent.Relationships.Data.CodingKeys()
{
  return &type metadata for ShazamEvent.Relationships.Data.CodingKeys;
}

uint64_t _s11MusicCoreUI12VenueElementV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_E36C78 + 4 * byte_10AE02D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_E36CAC + 4 * byte_10AE028[v4]))();
}

uint64_t sub_E36CAC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_E36CB4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0xE36CBCLL);
  return result;
}

uint64_t sub_E36CC8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0xE36CD0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_E36CD4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_E36CDC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VenueElement.Attributes.Geo.CodingKeys()
{
  return &type metadata for VenueElement.Attributes.Geo.CodingKeys;
}

ValueMetadata *type metadata accessor for VenueElement.Attributes.StructuredAddress.CodingKeys()
{
  return &type metadata for VenueElement.Attributes.StructuredAddress.CodingKeys;
}

ValueMetadata *type metadata accessor for ShazamEvent.Relationships.Data.ID()
{
  return &type metadata for ShazamEvent.Relationships.Data.ID;
}

unint64_t sub_E36D1C()
{
  unint64_t result;

  result = qword_1509A18;
  if (!qword_1509A18)
  {
    result = swift_getWitnessTable(&unk_10AEFB0, &type metadata for VenueElement.Attributes.StructuredAddress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1509A18);
  }
  return result;
}

unint64_t sub_E36D64()
{
  unint64_t result;

  result = qword_1509A20;
  if (!qword_1509A20)
  {
    result = swift_getWitnessTable(&unk_10AF068, &type metadata for VenueElement.Attributes.Geo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1509A20);
  }
  return result;
}

unint64_t sub_E36DAC()
{
  unint64_t result;

  result = qword_1509A28;
  if (!qword_1509A28)
  {
    result = swift_getWitnessTable(&unk_10AF120, &type metadata for ShazamEvent.Relationships.Data.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1509A28);
  }
  return result;
}

unint64_t sub_E36DF4()
{
  unint64_t result;

  result = qword_1509A30;
  if (!qword_1509A30)
  {
    result = swift_getWitnessTable(&unk_10AF090, &type metadata for ShazamEvent.Relationships.Data.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1509A30);
  }
  return result;
}

unint64_t sub_E36E3C()
{
  unint64_t result;

  result = qword_1509A38;
  if (!qword_1509A38)
  {
    result = swift_getWitnessTable(&unk_10AF0B8, &type metadata for ShazamEvent.Relationships.Data.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1509A38);
  }
  return result;
}

unint64_t sub_E36E84()
{
  unint64_t result;

  result = qword_1509A40;
  if (!qword_1509A40)
  {
    result = swift_getWitnessTable(&unk_10AEFD8, &type metadata for VenueElement.Attributes.Geo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1509A40);
  }
  return result;
}

unint64_t sub_E36ECC()
{
  unint64_t result;

  result = qword_1509A48;
  if (!qword_1509A48)
  {
    result = swift_getWitnessTable(&unk_10AF000, &type metadata for VenueElement.Attributes.Geo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1509A48);
  }
  return result;
}

unint64_t sub_E36F14()
{
  unint64_t result;

  result = qword_1509A50;
  if (!qword_1509A50)
  {
    result = swift_getWitnessTable(&unk_10AEF20, &type metadata for VenueElement.Attributes.StructuredAddress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1509A50);
  }
  return result;
}

unint64_t sub_E36F5C()
{
  unint64_t result;

  result = qword_1509A58;
  if (!qword_1509A58)
  {
    result = swift_getWitnessTable(&unk_10AEF48, &type metadata for VenueElement.Attributes.StructuredAddress.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1509A58);
  }
  return result;
}

unint64_t sub_E36FA0()
{
  unint64_t result;

  result = qword_1509A68;
  if (!qword_1509A68)
  {
    result = swift_getWitnessTable(&unk_10AF318, &type metadata for ShazamEvent.Relationships.Data.ID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1509A68);
  }
  return result;
}

uint64_t _s11MusicCoreUI4RootV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_E37024 + 4 * byte_10AE032[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_E37044 + 4 * byte_10AE037[v4]))();
}

_BYTE *sub_E37024(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_E37044(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_E3704C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_E37054(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_E3705C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_E37064(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ShazamEvent.Relationships.Data.ID.CodingKeys()
{
  return &type metadata for ShazamEvent.Relationships.Data.ID.CodingKeys;
}

unint64_t sub_E37084()
{
  unint64_t result;

  result = qword_1509A78;
  if (!qword_1509A78)
  {
    result = swift_getWitnessTable(&unk_10AF2F0, &type metadata for ShazamEvent.Relationships.Data.ID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1509A78);
  }
  return result;
}

unint64_t sub_E370CC()
{
  unint64_t result;

  result = qword_1509A80;
  if (!qword_1509A80)
  {
    result = swift_getWitnessTable(&unk_10AF260, &type metadata for ShazamEvent.Relationships.Data.ID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1509A80);
  }
  return result;
}

unint64_t sub_E37114()
{
  unint64_t result;

  result = qword_1509A88;
  if (!qword_1509A88)
  {
    result = swift_getWitnessTable(&unk_10AF288, &type metadata for ShazamEvent.Relationships.Data.ID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1509A88);
  }
  return result;
}

uint64_t RazzmatazzDetailView.init(razzmatazz:noticePresenter:navigateToArtistHandler:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t result;
  _QWORD *v10;

  sub_5C04C(a1, a5, type metadata accessor for Razzmatazz);
  result = type metadata accessor for RazzmatazzDetailView(0);
  *(_QWORD *)(a5 + *(int *)(result + 20)) = a2;
  v10 = (_QWORD *)(a5 + *(int *)(result + 24));
  *v10 = a3;
  v10[1] = a4;
  return result;
}

uint64_t type metadata accessor for RazzmatazzDetailView(uint64_t a1)
{
  uint64_t result;

  result = qword_1509B00;
  if (!qword_1509B00)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for RazzmatazzDetailView);
  return result;
}

uint64_t RazzmatazzDetailView.body.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509A98);
  v1 = sub_5C150(&qword_1509AA0, &qword_1509A98, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  return List<>.init(content:)(sub_E37858, &v3, v0, v1);
}

uint64_t sub_E37268@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t OpaqueTypeConformance2;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  char *v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  int *v47;
  char *v48;
  void (*v49)(char *, uint64_t);
  void (*v50)(char *, uint64_t);
  void (*v51)(char *, uint64_t);
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  _QWORD v70[2];
  uint64_t v71;
  unint64_t v72;

  v56 = a2;
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509B88);
  v69 = *(_QWORD *)(v59 - 8);
  __chkstk_darwin();
  v58 = (char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v67 = (char *)&v53 - v4;
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509B90);
  v66 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin();
  v68 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v64 = (char *)&v53 - v6;
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509B98);
  v63 = *(_QWORD *)(v55 - 8);
  __chkstk_darwin();
  v65 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v9 = (char *)&v53 - v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1509BA0);
  __chkstk_darwin();
  v62 = (uint64_t)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v12 = (char *)&v53 - v11;
  v13 = Razzmatazz.shortName.getter();
  v15 = *(_QWORD *)(a1 + 16);
  v16 = *(_QWORD *)(a1 + 24);
  v61 = v12;
  if (v13 == v15 && v14 == v16)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v14, v15, v16, 0);
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0)
    {
      __chkstk_darwin();
      *(&v53 - 2) = a1;
      Section<>.init(content:)(sub_E3B55C, &v53 - 4, &type metadata for Text, &protocol witness table for Text);
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509BA8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v12, 0, 1, v19);
      goto LABEL_7;
    }
  }
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509BA8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v12, 1, 1, v18);
LABEL_7:
  v71 = 1702125892;
  v72 = 0xE400000000000000;
  __chkstk_darwin();
  *(&v53 - 2) = a1;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509BB0);
  v21 = sub_5C150(&qword_1509BB8, &qword_1509BB0, (uint64_t)&protocol conformance descriptor for VStack<A>);
  v54 = sub_DD0BF8();
  Section<>.init<A>(_:content:)(&v71, sub_E3B564, &v53 - 4, v20, &type metadata for String, v21, v54);
  v22 = LocalizedStringKey.init(stringLiteral:)(0x747369747241, 0xE600000000000000);
  v24 = v23;
  LOBYTE(v20) = v25;
  v27 = v26;
  __chkstk_darwin();
  *(&v53 - 2) = a1;
  v60 = v9;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509BC0);
  v29 = sub_5C150(&qword_1509BC8, &qword_1509BC0, (uint64_t)&protocol conformance descriptor for HStack<A>);
  v30 = v64;
  Section<>.init(_:content:)(v22, v24, v20 & 1, v27, sub_E3B594, &v53 - 4, v28, v29);
  v71 = 0x6E6F697461636F4CLL;
  v72 = 0xE800000000000000;
  __chkstk_darwin();
  *(&v53 - 2) = a1;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509BD0);
  v32 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1509BD8);
  v33 = sub_E3B5CC();
  v70[0] = v32;
  v70[1] = v33;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v70, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v35 = v67;
  Section<>.init<A>(_:content:)(&v71, sub_E3B5C4, &v53 - 4, v31, &type metadata for String, OpaqueTypeConformance2, v54);
  v36 = v62;
  sub_5C238((uint64_t)v61, v62, &qword_1509BA0);
  v37 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
  v38 = v65;
  v39 = v55;
  v37(v65, v60, v55);
  v40 = *(void (**)(char *, char *, uint64_t))(v66 + 16);
  v41 = v57;
  v40(v68, v30, v57);
  v42 = *(void (**)(char *, char *, uint64_t))(v69 + 16);
  v43 = v58;
  v44 = v35;
  v45 = v59;
  v42(v58, v44, v59);
  v46 = v56;
  sub_5C238(v36, v56, &qword_1509BA0);
  v47 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1509C00);
  v37((char *)(v46 + v47[12]), v38, v39);
  v48 = v68;
  v40((char *)(v46 + v47[16]), v68, v41);
  v42((char *)(v46 + v47[20]), v43, v45);
  v49 = *(void (**)(char *, uint64_t))(v69 + 8);
  v49(v67, v45);
  v50 = *(void (**)(char *, uint64_t))(v66 + 8);
  v50(v64, v41);
  v51 = *(void (**)(char *, uint64_t))(v63 + 8);
  v51(v60, v39);
  sub_56024((uint64_t)v61, &qword_1509BA0);
  v49(v43, v45);
  v50(v48, v41);
  v51(v65, v39);
  return sub_56024(v62, &qword_1509BA0);
}

uint64_t sub_E37858@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_E37268(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_E37860(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of RazzmatazzDetailView.body>>, 1);
}

void sub_E37870(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[2];

  v3 = *(_QWORD *)(a1 + 24);
  v20[0] = *(_QWORD *)(a1 + 16);
  v20[1] = v3;
  v4 = sub_DD0BF8();
  swift_bridgeObjectRetain();
  v5 = Text.init<A>(_:)(v20, &type metadata for String, v4);
  v7 = v6;
  v9 = v8;
  v11 = v10 & 1;
  LODWORD(v20[0]) = static HierarchicalShapeStyle.secondary.getter(v12);
  v13 = Text.foregroundStyle<A>(_:)(v20, v5, v7, v11, v9, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v15 = v14;
  v17 = v16;
  v19 = v18;
  sub_AF8E8(v5, v7, v11);
  swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v13;
  *(_QWORD *)(a2 + 8) = v15;
  *(_BYTE *)(a2 + 16) = v17 & 1;
  *(_QWORD *)(a2 + 24) = v19;
}

double sub_E37958@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  __n128 v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  __n128 v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t OpaqueTypeConformance2;
  char *v100;
  __n128 v101;
  void (*v102)(char *, char *, uint64_t);
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  void (*v111)(char *, uint64_t);
  double result;
  char *v113;
  char *v114;
  uint64_t v115;
  void (*v116)(char *);
  uint64_t v117;
  uint64_t (*v118)(char *);
  char *v119;
  unint64_t v120;
  void (*v121)(char *, uint64_t);
  uint64_t v122;
  char *v123;
  char *v124;
  _QWORD *v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  unsigned __int8 v165;
  uint64_t v166;
  char *v167;

  v125 = a2;
  v148 = *(_QWORD *)(type metadata accessor for RazzmatazzDetailView(0) - 8);
  v149 = *(_QWORD *)(v148 + 64);
  __chkstk_darwin();
  v147 = (uint64_t)&v113 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509C30);
  v157 = *(_QWORD *)(v151 - 8);
  __chkstk_darwin();
  v150 = (char *)&v113 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin();
  v156 = (char *)&v113 - v6;
  v146 = type metadata accessor for Date.FormatStyle.Symbol.Minute(0, v5);
  v145 = *(_QWORD *)(v146 - 8);
  v7 = __chkstk_darwin();
  v144 = (char *)&v113 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = type metadata accessor for Date.FormatStyle.Symbol.Hour.AMPMStyle(0, v7);
  v142 = *(_QWORD *)(v143 - 8);
  v9 = __chkstk_darwin();
  v139 = (char *)&v113 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = type metadata accessor for Date.FormatStyle.Symbol.Hour(0, v9);
  v140 = *(_QWORD *)(v141 - 8);
  v11 = __chkstk_darwin();
  v138 = (char *)&v113 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = type metadata accessor for Date.FormatStyle.Symbol.Year(0, v11);
  v136 = *(_QWORD *)(v137 - 8);
  v13 = __chkstk_darwin();
  v134 = (char *)&v113 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = type metadata accessor for Date.FormatStyle.Symbol.Month(0, v13);
  v131 = *(_QWORD *)(v132 - 8);
  __chkstk_darwin();
  v130 = (char *)&v113 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = type metadata accessor for Date.FormatStyle.Symbol.Day(0);
  v128 = *(_QWORD *)(v129 - 8);
  v16 = __chkstk_darwin();
  v127 = (char *)&v113 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for Date.FormatStyle.Symbol.Weekday(0, v16);
  v154 = *(_QWORD *)(v18 - 8);
  v155 = v18;
  __chkstk_darwin();
  v20 = (char *)&v113 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v152 = type metadata accessor for TimeZone(0);
  v21 = *(_QWORD *)(v152 - 8);
  v22 = __chkstk_darwin();
  v24 = (char *)&v113 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for Date.FormatStyle(0, v22);
  v153 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin();
  v119 = (char *)&v113 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v123 = (char *)&v113 - v27;
  __chkstk_darwin();
  v124 = (char *)&v113 - v28;
  __chkstk_darwin();
  v126 = (char *)&v113 - v29;
  __chkstk_darwin();
  v31 = (char *)&v113 - v30;
  __chkstk_darwin();
  v113 = (char *)&v113 - v32;
  v33 = type metadata accessor for Date(0);
  v34 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin();
  v36 = (char *)&v113 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = type metadata accessor for Razzmatazz(0);
  v38 = *(int *)(v37 + 24);
  v135 = a1;
  v117 = a1 + v38;
  v118 = *(uint64_t (**)(char *))(v34 + 16);
  v39 = v118(v36);
  static ParseableFormatStyle<>.dateTime.getter(v39);
  v40 = a1 + *(int *)(v37 + 32);
  v115 = v40 + *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v116 = *(void (**)(char *))(v21 + 16);
  v114 = v24;
  v116(v24);
  v41 = Date.FormatStyle.timeZone.setter(v24);
  static Date.FormatStyle.Symbol.Weekday.wide.getter(v41);
  v42 = v113;
  Date.FormatStyle.weekday(_:)(v20);
  (*(void (**)(char *, uint64_t))(v154 + 8))(v20, v155);
  v43 = *(void (**)(char *, uint64_t))(v153 + 8);
  v43(v31, v25);
  v122 = sub_4DD24(&qword_1508FC8, (uint64_t (*)(uint64_t))&type metadata accessor for Date.FormatStyle, (uint64_t)&protocol conformance descriptor for Date.FormatStyle);
  Date.formatted<A>(_:)(&v162, v42, v25, v122);
  v43(v42, v25);
  v121 = *(void (**)(char *, uint64_t))(v34 + 8);
  v44 = v33;
  v121(v36, v33);
  v158 = (uint64_t)v162;
  v159 = v163;
  v120 = sub_DD0BF8();
  v45 = Text.init<A>(_:)(&v158, &type metadata for String, v120);
  v47 = v46;
  v49 = v48;
  v51 = v50 & 1;
  LODWORD(v162) = static HierarchicalShapeStyle.secondary.getter(v52);
  v53 = Text.foregroundStyle<A>(_:)(&v162, v45, v47, v51, v49, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v154 = v54;
  v155 = v53;
  v133 = v55;
  LODWORD(v153) = v56 & 1;
  sub_AF8E8(v45, v47, v51);
  v57 = swift_bridgeObjectRelease();
  v58 = ((uint64_t (*)(char *, uint64_t, uint64_t, __n128))v118)(v36, v117, v44, v57);
  v59 = v119;
  static ParseableFormatStyle<>.dateTime.getter(v58);
  v60 = v114;
  ((void (*)(char *, uint64_t, uint64_t))v116)(v114, v115, v152);
  v61 = Date.FormatStyle.timeZone.setter(v60);
  v62 = v127;
  static Date.FormatStyle.Symbol.Day.defaultDigits.getter(v61);
  v63 = v123;
  Date.FormatStyle.day(_:)(v62);
  (*(void (**)(char *, uint64_t))(v128 + 8))(v62, v129);
  v64 = ((uint64_t (*)(char *, uint64_t))v43)(v59, v25);
  v65 = v130;
  static Date.FormatStyle.Symbol.Month.wide.getter(v64);
  v66 = v124;
  Date.FormatStyle.month(_:)(v65);
  (*(void (**)(char *, uint64_t))(v131 + 8))(v65, v132);
  v67 = ((uint64_t (*)(char *, uint64_t))v43)(v63, v25);
  v68 = v134;
  static Date.FormatStyle.Symbol.Year.defaultDigits.getter(v67);
  v69 = v126;
  Date.FormatStyle.year(_:)(v68);
  (*(void (**)(char *, uint64_t))(v136 + 8))(v68, v137);
  v70 = ((uint64_t (*)(char *, uint64_t))v43)(v66, v25);
  v71 = v139;
  static Date.FormatStyle.Symbol.Hour.AMPMStyle.abbreviated.getter(v70);
  v72 = v138;
  static Date.FormatStyle.Symbol.Hour.defaultDigits(amPM:)(v71);
  (*(void (**)(char *, uint64_t))(v142 + 8))(v71, v143);
  Date.FormatStyle.hour(_:)(v72);
  (*(void (**)(char *, uint64_t))(v140 + 8))(v72, v141);
  v73 = ((uint64_t (*)(char *, uint64_t))v43)(v69, v25);
  v74 = v144;
  static Date.FormatStyle.Symbol.Minute.defaultDigits.getter(v73);
  Date.FormatStyle.minute(_:)(v74);
  (*(void (**)(char *, uint64_t))(v145 + 8))(v74, v146);
  v43(v31, v25);
  Date.formatted<A>(_:)(&v162, v42, v25, v122);
  v43(v42, v25);
  v121(v36, v44);
  v158 = (uint64_t)v162;
  v159 = v163;
  v75 = Text.init<A>(_:)(&v158, &type metadata for String, v120);
  v77 = v76;
  v79 = v78;
  v81 = v80 & 1;
  LODWORD(v162) = static HierarchicalShapeStyle.primary.getter(v82);
  v83 = Text.foregroundStyle<A>(_:)(&v162, v75, v77, v81, v79, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v146 = v84;
  v152 = v85;
  LODWORD(v145) = v86 & 1;
  sub_AF8E8(v75, v77, v81);
  swift_bridgeObjectRelease();
  v88 = static Alignment.center.getter(v87);
  _FrameLayout.init(width:height:alignment:)(&v162, 0, 1, 0x4024000000000000, 0, v88, v89);
  v144 = v162;
  LODWORD(v143) = v163;
  v142 = v164;
  LODWORD(v141) = v165;
  v140 = v166;
  v139 = v167;
  v90 = v147;
  sub_E3B668(v135, v147);
  v91 = *(unsigned __int8 *)(v148 + 80);
  v92 = (v91 + 16) & ~v91;
  v93 = swift_allocObject(&unk_13C9968, v92 + v149, v91 | 7);
  sub_5C04C(v90, v93 + v92, type metadata accessor for RazzmatazzDetailView);
  v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509C38);
  v95 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1509C40);
  v96 = type metadata accessor for TitleAndIconLabelStyle(255);
  v97 = sub_5C150(&qword_1509C48, &qword_1509C40, (uint64_t)&protocol conformance descriptor for Label<A, B>);
  v98 = sub_4DD24(&qword_1509C50, (uint64_t (*)(uint64_t))&type metadata accessor for TitleAndIconLabelStyle, (uint64_t)&protocol conformance descriptor for TitleAndIconLabelStyle);
  v158 = v95;
  v159 = v96;
  v160 = v97;
  v161 = v98;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v158, &opaque type descriptor for <<opaque return type of View.labelStyle<A>(_:)>>, 1);
  v100 = v156;
  Button.init(action:label:)(sub_E3B8A8, v93, sub_E38EF0, 0, v94, OpaqueTypeConformance2, v101);
  LOBYTE(v36) = v153;
  LOBYTE(v158) = v153;
  v102 = *(void (**)(char *, char *, uint64_t))(v157 + 16);
  v104 = v150;
  v103 = v151;
  v102(v150, v100, v151);
  v106 = v154;
  v105 = v155;
  v107 = v125;
  *v125 = v155;
  v107[1] = v106;
  *((_BYTE *)v107 + 16) = (_BYTE)v36;
  v107[3] = v133;
  v107[4] = v83;
  v108 = v146;
  v107[5] = v146;
  LOBYTE(v97) = v145;
  *((_BYTE *)v107 + 48) = v145;
  v107[7] = v152;
  v107[8] = 0;
  *((_BYTE *)v107 + 72) = 1;
  v107[10] = v144;
  *((_BYTE *)v107 + 88) = v143;
  v107[12] = v142;
  *((_BYTE *)v107 + 104) = v141;
  v109 = v139;
  v107[14] = v140;
  v107[15] = v109;
  v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509C58);
  v102((char *)v107 + *(int *)(v110 + 80), v104, v103);
  sub_AF8D8(v105, v106, v153);
  swift_bridgeObjectRetain();
  sub_AF8D8(v83, v108, v97);
  v111 = *(void (**)(char *, uint64_t))(v157 + 8);
  swift_bridgeObjectRetain();
  v111(v156, v103);
  v111(v104, v103);
  sub_AF8E8(v83, v108, v97);
  swift_bridgeObjectRelease();
  sub_AF8E8(v155, v154, v158);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

void sub_E3851C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  _QWORD aBlock[6];

  v2 = *(_QWORD *)(type metadata accessor for RazzmatazzDetailView(0) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  __chkstk_darwin();
  v4 = objc_msgSend(objc_allocWithZone((Class)EKEventStore), "init");
  sub_E3B668(a1, (uint64_t)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *(unsigned __int8 *)(v2 + 80);
  v6 = (v5 + 24) & ~v5;
  v7 = swift_allocObject(&unk_13C9990, v6 + v3, v5 | 7);
  *(_QWORD *)(v7 + 16) = v4;
  sub_5C04C((uint64_t)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6, type metadata accessor for RazzmatazzDetailView);
  aBlock[4] = sub_E3BA4C;
  aBlock[5] = v7;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_995FDC;
  aBlock[3] = &block_descriptor_20_8;
  v8 = _Block_copy(aBlock);
  v9 = v4;
  objc_msgSend(v9, "requestWriteOnlyAccessToEventsWithCompletion:", v8, swift_release().n128_f64[0]);
  _Block_release(v8);

}

void sub_E38664(char a1, void *a2, void *a3, uint64_t a4)
{
  Class isa;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  NSString v16;
  uint64_t v17;
  Class v18;
  uint64_t v19;
  Class v20;
  _OWORD *v21;
  __int128 v22;
  __int128 v23;
  id v24;
  NSString v25;
  id v26;
  id v27;
  unsigned int v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  __n128 v35;
  uint64_t v36;
  uint64_t isa_low;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  os_log_type_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  NSObject *v62;
  uint64_t v63;
  id v64;
  _OWORD v65[4];

  v62 = *(NSObject **)(type metadata accessor for RazzmatazzDetailView(0) - 8);
  isa = v62[8].isa;
  __chkstk_darwin();
  __swift_instantiateConcreteTypeFromMangledName(&qword_15085D0);
  __chkstk_darwin();
  v10 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Date(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin();
  v14 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
  {
    v60 = v10;
    v61 = (uint64_t)&v60 - (((unint64_t)isa + 15) & 0xFFFFFFFFFFFFFFF0);
    v15 = objc_msgSend((id)objc_opt_self(EKEvent), "eventWithEventStore:", a3);
    v16 = String._bridgeToObjectiveC()();
    objc_msgSend(v15, "setTitle:", v16);

    v17 = type metadata accessor for Razzmatazz(0);
    v18 = Date._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v15, "setStartDate:", v18);

    Date.addingTimeInterval(_:)(v19, 7200.0);
    v20 = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    objc_msgSend(v15, "setEndDate:", v20);

    v21 = (_OWORD *)(a4 + *(int *)(v17 + 32));
    v22 = v21[3];
    v65[0] = v21[2];
    v65[1] = v22;
    v23 = v21[5];
    v65[2] = v21[4];
    v65[3] = v23;
    v24 = v15;
    sub_E28E68(0);
    v25 = String._bridgeToObjectiveC()();
    objc_msgSend(v24, "setLocation:", v25, swift_bridgeObjectRelease().n128_f64[0]);

    v26 = v24;
    v27 = objc_msgSend(a3, "defaultCalendarForNewEvents");
    objc_msgSend(v26, "setCalendar:", v27);

    v64 = 0;
    v28 = objc_msgSend(a3, "saveEvent:span:error:", v26, 0, &v64);
    v29 = v64;
    if (v28)
    {
      v30 = type metadata accessor for TaskPriority(0);
      v31 = (uint64_t)v60;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v60, 1, 1, v30);
      v32 = a4;
      v33 = v61;
      sub_E3B668(v32, v61);
      type metadata accessor for MainActor(0);
      v34 = v29;
      v36 = static MainActor.shared.getter(v35);
      isa_low = LOBYTE(v62[10].isa);
      v38 = (isa_low + 32) & ~isa_low;
      v39 = swift_allocObject(&unk_13C99E0, (char *)isa + v38, isa_low | 7);
      *(_QWORD *)(v39 + 16) = v36;
      *(_QWORD *)(v39 + 24) = &protocol witness table for MainActor;
      sub_5C04C(v33, v39 + v38, type metadata accessor for RazzmatazzDetailView);
      sub_E08FC8(v31, (uint64_t)&unk_1509C68, v39);
      swift_release();

    }
    else
    {
      v48 = v64;
      v49 = _convertNSErrorToError(_:)(v29);

      swift_willThrow(v50);
      if (qword_15061D8 != -1)
        swift_once(&qword_15061D8, sub_E2FD80);
      v51 = type metadata accessor for Logger(0);
      __swift_project_value_buffer(v51, (uint64_t)qword_1583E18);
      swift_errorRetain(v49);
      v52 = swift_errorRetain(v49);
      v53 = Logger.logObject.getter(v52);
      v54 = static os_log_type_t.error.getter(v53);
      if (os_log_type_enabled(v53, v54))
      {
        v55 = swift_slowAlloc(12, -1);
        v56 = (void *)swift_slowAlloc(32, -1);
        v64 = v56;
        *(_DWORD *)v55 = 136315138;
        v63 = v49;
        swift_errorRetain(v49);
        v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1507690);
        v58 = (char *)String.init<A>(describing:)(&v63, v57);
        *(_QWORD *)(v55 + 4) = sub_DCF730(v58, v59, (uint64_t *)&v64);
        swift_bridgeObjectRelease();
        swift_errorRelease(v49);
        swift_errorRelease(v49);
        _os_log_impl(&dword_0, v53, v54, "Failed to save event: %s", (uint8_t *)v55, 0xCu);
        swift_arrayDestroy(v56, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v56, -1, -1);
        swift_slowDealloc(v55, -1, -1);

        swift_errorRelease(v49);
      }
      else
      {

        swift_errorRelease(v49);
        swift_errorRelease(v49);
        swift_errorRelease(v49);

      }
    }
  }
  else
  {
    if (qword_15061D8 != -1)
      swift_once(&qword_15061D8, sub_E2FD80);
    v40 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v40, (uint64_t)qword_1583E18);
    swift_errorRetain(a2);
    v41 = swift_errorRetain(a2);
    v62 = Logger.logObject.getter(v41);
    v42 = static os_log_type_t.error.getter(v62);
    if (os_log_type_enabled(v62, v42))
    {
      v43 = swift_slowAlloc(12, -1);
      v44 = swift_slowAlloc(32, -1);
      v64 = a2;
      *(_QWORD *)&v65[0] = v44;
      *(_DWORD *)v43 = 136315138;
      swift_errorRetain(a2);
      v45 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150D7E0);
      v46 = (char *)String.init<A>(describing:)(&v64, v45);
      *(_QWORD *)(v43 + 4) = sub_DCF730(v46, v47, (uint64_t *)v65);
      swift_bridgeObjectRelease();
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl(&dword_0, v62, v42, "No Calendar access: %s", (uint8_t *)v43, 0xCu);
      swift_arrayDestroy(v44, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v44, -1, -1);
      swift_slowDealloc(v43, -1, -1);
    }
    else
    {
      swift_errorRelease(a2);
      swift_errorRelease(a2);
    }

  }
}

uint64_t sub_E38D20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;

  v4[2] = a1;
  v4[3] = a4;
  v5 = type metadata accessor for UUID(0);
  v4[4] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[5] = v6;
  v4[6] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Notice(0);
  v4[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MainActor(0);
  v4[8] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  return swift_task_switch(sub_E38DD4, v10, v11);
}

uint64_t sub_E38DD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 24);
  swift_release();
  v2 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for RazzmatazzDetailView(0) + 20));
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 48);
    v4 = *(_QWORD **)(v0 + 56);
    v5 = *(_QWORD *)(v0 + 32);
    v6 = *(_QWORD *)(v0 + 40);
    v7 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
    v8 = UUID.uuidString.getter(v7);
    v10 = v9;
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v3, v5);
    Notice.init(id:symbol:message:headnote:link:hapticFeedback:)(v8, v10, 0x7261646E656C6163, 0xE800000000000000, 0xD000000000000011, 0x800000000110DD40, 0, 0, v4, 0, 0, 0, 0);
    _s11MusicCoreUI15NoticePresenterC7present_12internalOnlyy0aB00D0V_SbtF_0((uint64_t)v4, 0);
    sub_5C0DC((uint64_t)v4, type metadata accessor for Notice);
  }
  v12 = *(_QWORD *)(v0 + 48);
  v11 = *(_QWORD *)(v0 + 56);
  **(_BYTE **)(v0 + 16) = v2 == 0;
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_E38EF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[2];

  v0 = type metadata accessor for TitleAndIconLabelStyle(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin();
  v3 = (char *)v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509C40);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[0] = 0x43206F7420646441;
  v13[1] = 0xEF7261646E656C61;
  v8 = sub_DD0BF8();
  v9 = Label<>.init<A>(_:systemImage:)(v13, 0xD000000000000013, 0x800000000110DD20, &type metadata for String, v8);
  TitleAndIconLabelStyle.init()(v9);
  v10 = sub_5C150(&qword_1509C48, &qword_1509C40, (uint64_t)&protocol conformance descriptor for Label<A, B>);
  v11 = sub_4DD24(&qword_1509C50, (uint64_t (*)(uint64_t))&type metadata accessor for TitleAndIconLabelStyle, (uint64_t)&protocol conformance descriptor for TitleAndIconLabelStyle);
  View.labelStyle<A>(_:)(v3, v4, v0, v10, v11);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_E39088@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t *a3@<X2>, uint64_t (*a4)(uint64_t)@<X3>, uint64_t a5@<X8>)
{
  *(_QWORD *)a5 = a2();
  *(_QWORD *)(a5 + 8) = 0;
  *(_BYTE *)(a5 + 16) = 1;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  return a4(a1);
}

uint64_t sub_E390E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD v57[2];
  uint64_t v58;
  char v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  __int16 v63;

  v55 = a2;
  v53 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v3 = *(_QWORD *)(v53 - 8);
  __chkstk_darwin();
  v5 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CEE0);
  __chkstk_darwin();
  v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509C10);
  v10 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin();
  v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_150BBF0);
  __chkstk_darwin();
  v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509C18);
  __chkstk_darwin();
  v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v56 = (uint64_t)&v49 - v17;
  type metadata accessor for Razzmatazz(0);
  v54 = a1;
  sub_DCC264(v9);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF20);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v7, 6, 10, v18);
  if (qword_15061E0 != -1)
    swift_once(&qword_15061E0, sub_E3A5BC);
  v58 = qword_1509A90;
  v59 = 0;
  v60 = qword_1509A90;
  v61 = 0;
  v62 = 0;
  v63 = 513;
  v19 = v53;
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v53);
  static ArtworkImage.with(_:placeholder:size:reusePolicy:)((uint64_t)v9, (uint64_t)v7, (uint64_t)&v58, (uint64_t)v5, (uint64_t)v12);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v19);
  sub_5C0DC((uint64_t)v7, type metadata accessor for ArtworkImage.Placeholder);
  sub_56024((uint64_t)v9, (uint64_t *)&unk_150CEE0);
  v20 = v52;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v14, v12, v52);
  v21 = &v14[*(int *)(v50 + 36)];
  *(_QWORD *)v21 = 0;
  *((_QWORD *)v21 + 1) = 0;
  v21[16] = 1;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v20);
  if (qword_15061B0 != -1)
    swift_once(&qword_15061B0, sub_E1B804);
  v22 = static Border.artwork;
  v23 = qword_1583DF0;
  v24 = byte_1583DF8;
  sub_5C238((uint64_t)v14, (uint64_t)v16, &qword_150BBF0);
  v25 = &v16[*(int *)(v51 + 36)];
  *(_QWORD *)v25 = v22;
  *((_QWORD *)v25 + 1) = v23;
  v25[16] = v24;
  *((_QWORD *)v25 + 3) = 0;
  *((_QWORD *)v25 + 4) = 0;
  v25[40] = 1;
  swift_retain();
  sub_56024((uint64_t)v14, &qword_150BBF0);
  v26 = sub_5C090((uint64_t)v16, v56, &qword_1509C18);
  v57[0] = Artist.name.getter(v26);
  v57[1] = v27;
  v28 = sub_DD0BF8();
  v29 = Text.init<A>(_:)(v57, &type metadata for String, v28);
  v31 = v30;
  v33 = v32;
  v53 = v34;
  v35 = (uint64_t *)(v54 + *(int *)(type metadata accessor for RazzmatazzDetailView(0) + 24));
  v36 = *v35;
  v37 = (uint64_t)v16;
  if (*v35)
  {
    v38 = v35[1];
    swift_retain();
    sub_A9DEC(v36, v38);
    swift_release();
    v39 = 1;
  }
  else
  {
    v39 = 0;
    v38 = 0;
  }
  v40 = v33 & 1;
  v41 = v56;
  v42 = v37;
  sub_5C238(v56, v37, &qword_1509C18);
  v43 = v37;
  v44 = v55;
  sub_5C238(v43, v55, &qword_1509C18);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509C20);
  v46 = v44 + *(int *)(v45 + 48);
  *(_QWORD *)v46 = v29;
  *(_QWORD *)(v46 + 8) = v31;
  *(_BYTE *)(v46 + 16) = v40;
  *(_QWORD *)(v46 + 24) = v53;
  v47 = (_QWORD *)(v44 + *(int *)(v45 + 64));
  *v47 = 0;
  v47[1] = v39;
  v47[2] = v36;
  v47[3] = v38;
  sub_AF8D8(v29, v31, v40);
  swift_bridgeObjectRetain();
  sub_E3B730(0, v39, v36, v38);
  sub_56024(v41, &qword_1509C18);
  sub_E3B740(0, v39, v36, v38);
  sub_AF8E8(v29, v31, v40);
  swift_bridgeObjectRelease();
  return sub_56024(v42, &qword_1509C18);
}

uint64_t sub_E395E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  __n128 v12;
  __int128 v14;
  _OWORD v15[14];
  _OWORD v16[9];
  _OWORD v17[2];
  _OWORD v18[11];
  char v19;
  char v20;
  _OWORD v21[13];
  _OWORD v22[2];

  v2 = *(_QWORD *)(type metadata accessor for RazzmatazzDetailView(0) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  __chkstk_darwin();
  v4 = (char *)&v15[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = static HorizontalAlignment.leading.getter(v5);
  sub_E39838(a1, (uint64_t)v16);
  *(_OWORD *)((char *)&v18[7] + 7) = v16[7];
  *(_OWORD *)((char *)&v18[8] + 7) = v16[8];
  *(_OWORD *)((char *)&v18[9] + 7) = v17[0];
  v18[10] = *(_OWORD *)((char *)v17 + 9);
  *(_OWORD *)((char *)&v18[3] + 7) = v16[3];
  *(_OWORD *)((char *)&v18[4] + 7) = v16[4];
  *(_OWORD *)((char *)&v18[5] + 7) = v16[5];
  *(_OWORD *)((char *)&v18[6] + 7) = v16[6];
  *(_OWORD *)((char *)v18 + 7) = v16[0];
  *(_OWORD *)((char *)&v18[1] + 7) = v16[1];
  v19 = 0;
  *(_OWORD *)((char *)&v18[2] + 7) = v16[2];
  if (qword_1506020 != -1)
    swift_once(&qword_1506020, sub_DD0094);
  *(_OWORD *)((char *)&v15[7] + 1) = v18[7];
  *(_OWORD *)((char *)&v15[8] + 1) = v18[8];
  *(_OWORD *)((char *)&v15[9] + 1) = v18[9];
  *(_OWORD *)((char *)&v15[10] + 1) = v18[10];
  *(_OWORD *)((char *)&v15[3] + 1) = v18[3];
  *(_OWORD *)((char *)&v15[4] + 1) = v18[4];
  *(_OWORD *)((char *)&v15[5] + 1) = v18[5];
  *(_OWORD *)((char *)&v15[6] + 1) = v18[6];
  *(_OWORD *)((char *)v15 + 1) = v18[0];
  *(_OWORD *)((char *)&v15[1] + 1) = v18[1];
  *(_OWORD *)((char *)&v15[2] + 1) = v18[2];
  *(_OWORD *)((char *)&v15[11] + 8) = static EdgeInsets.zero;
  v20 = 0;
  v14 = (unint64_t)v6;
  LOBYTE(v15[0]) = 0;
  *(_OWORD *)((char *)&v15[12] + 8) = *(_OWORD *)&qword_1583258;
  BYTE8(v15[13]) = 0;
  sub_E3B668(a1, (uint64_t)&v15[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *(unsigned __int8 *)(v2 + 80);
  v8 = (v7 + 16) & ~v7;
  v9 = swift_allocObject(&unk_13C9940, v8 + v3, v7 | 7);
  sub_5C04C((uint64_t)v4, v9 + v8, type metadata accessor for RazzmatazzDetailView);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509BD8);
  v11 = sub_E3B5CC();
  View.onTapGesture(count:perform:)(1, sub_E3B6B0, v9, v10, v11, v12);
  swift_release();
  v21[12] = v15[11];
  v22[0] = v15[12];
  *(_OWORD *)((char *)v22 + 9) = *(_OWORD *)((char *)&v15[12] + 9);
  v21[8] = v15[7];
  v21[9] = v15[8];
  v21[10] = v15[9];
  v21[11] = v15[10];
  v21[4] = v15[3];
  v21[5] = v15[4];
  v21[6] = v15[5];
  v21[7] = v15[6];
  v21[0] = v14;
  v21[1] = v15[0];
  v21[2] = v15[1];
  v21[3] = v15[2];
  return sub_E3B6BC((uint64_t)v21);
}

void sub_E39838(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD v49[2];
  uint64_t v50;
  char v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  _OWORD v56[4];
  char v57;
  _BYTE v58[7];
  _BYTE v59[7];
  char v60;
  _BYTE v61[7];
  char v62;
  char v63;

  v3 = a1 + *(int *)(type metadata accessor for Razzmatazz(0) + 32);
  objc_msgSend(*(id *)(v3 + 96), "coordinate");
  v5 = v4;
  v7 = v6;
  v47 = *(_QWORD *)(v3 + 24);
  v48 = *(_QWORD *)(v3 + 16);
  v50 = 0;
  swift_bridgeObjectRetain();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506E70);
  v9 = State.init(wrappedValue:)(v56, &v50, v8);
  v46 = v56[0];
  v10 = static Alignment.center.getter(v9);
  _FrameLayout.init(width:height:alignment:)(&v50, 0, 1, 0x4069000000000000, 0, v10, v11);
  v12 = v51;
  v44 = v52;
  v45 = v50;
  v41 = v53;
  v42 = v55;
  v43 = v54;
  v13 = *(_OWORD *)(v3 + 48);
  v56[0] = *(_OWORD *)(v3 + 32);
  v56[1] = v13;
  v14 = *(_OWORD *)(v3 + 80);
  v56[2] = *(_OWORD *)(v3 + 64);
  v56[3] = v14;
  v49[0] = sub_E28E68(0);
  v49[1] = v15;
  v16 = sub_DD0BF8();
  v17 = Text.init<A>(_:)(v49, &type metadata for String, v16);
  v19 = v18;
  v21 = v20;
  v23 = v22 & 1;
  LODWORD(v49[0]) = static HierarchicalShapeStyle.secondary.getter(v24);
  v25 = Text.foregroundStyle<A>(_:)(v49, v17, v19, v23, v21, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v27 = v26;
  v29 = v28;
  v31 = v30 & 1;
  sub_AF8E8(v17, v19, v23);
  swift_bridgeObjectRelease();
  v33 = static Edge.Set.all.getter(v32);
  LOBYTE(v23) = v33;
  v34 = EdgeInsets.init(_all:)(v33, 8.0);
  v63 = v12;
  v62 = v41;
  v60 = v31;
  v57 = 0;
  *(_DWORD *)(a2 + 57) = v49[0];
  *(_DWORD *)(a2 + 60) = *(_DWORD *)((char *)v49 + 3);
  *(_DWORD *)(a2 + 73) = *(_DWORD *)v61;
  *(_DWORD *)(a2 + 76) = *(_DWORD *)&v61[3];
  v35 = *(_DWORD *)v59;
  *(_DWORD *)(a2 + 116) = *(_DWORD *)&v59[3];
  *(_DWORD *)(a2 + 113) = v35;
  v36 = *(_DWORD *)v58;
  *(_DWORD *)(a2 + 132) = *(_DWORD *)&v58[3];
  *(_DWORD *)(a2 + 129) = v36;
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v7;
  *(_QWORD *)(a2 + 16) = v48;
  *(_QWORD *)(a2 + 24) = v47;
  *(_OWORD *)(a2 + 32) = v46;
  *(_QWORD *)(a2 + 48) = v45;
  *(_BYTE *)(a2 + 56) = v12;
  *(_QWORD *)(a2 + 64) = v44;
  *(_BYTE *)(a2 + 72) = v41;
  *(_QWORD *)(a2 + 80) = v43;
  *(_QWORD *)(a2 + 88) = v42;
  *(_QWORD *)(a2 + 96) = v25;
  *(_QWORD *)(a2 + 104) = v27;
  *(_BYTE *)(a2 + 112) = v31;
  *(_QWORD *)(a2 + 120) = v29;
  *(_BYTE *)(a2 + 128) = v23;
  *(double *)(a2 + 136) = v34;
  *(_QWORD *)(a2 + 144) = v37;
  *(_QWORD *)(a2 + 152) = v38;
  *(_QWORD *)(a2 + 160) = v39;
  *(_BYTE *)(a2 + 168) = 0;
  swift_retain();
  swift_bridgeObjectRetain();
  v40 = (id)v46;
  sub_AF8D8(v25, v27, v31);
  swift_bridgeObjectRetain();
  sub_AF8E8(v25, v27, v31);
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

uint64_t sub_E39AEC(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  double v10;
  double v11;
  double v12;
  Swift::String v13;
  uint64_t v14;
  void *v15;
  Swift::String v16;
  Swift::String v17;
  Swift::String v18;
  Swift::String v19;
  __n128 v20;
  void *v22;
  id v23;
  NSURL *v24;
  void *v25;
  void *v26;
  unsigned int v27;
  id v28;
  NSURL *v29;
  void *v30;
  void *v31;
  Class isa;
  uint64_t v33;
  unint64_t v34;

  __swift_instantiateConcreteTypeFromMangledName(&qword_15068B0);
  __chkstk_darwin();
  v3 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1 + *(int *)(type metadata accessor for Razzmatazz(0) + 32);
  objc_msgSend(*(id *)(v8 + 96), "coordinate");
  v10 = v9;
  v12 = v11;
  v33 = 0;
  v34 = 0xE000000000000000;
  _StringGuts.grow(_:)(25);
  v13._countAndFlagsBits = 0x3F2F2F3A7370616DLL;
  v13._object = (void *)0xEA00000000003D71;
  String.append(_:)(v13);
  v14 = *(_QWORD *)(v8 + 16);
  v15 = *(void **)(v8 + 24);
  swift_bridgeObjectRetain();
  v16._countAndFlagsBits = v14;
  v16._object = v15;
  String.append(_:)(v16);
  swift_bridgeObjectRelease();
  v17._countAndFlagsBits = 1030515750;
  v17._object = (void *)0xE400000000000000;
  String.append(_:)(v17);
  Double.write<A>(to:)(&v33, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v10);
  v18._countAndFlagsBits = 44;
  v18._object = (void *)0xE100000000000000;
  String.append(_:)(v18);
  Double.write<A>(to:)(&v33, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v12);
  v19._countAndFlagsBits = 893221414;
  v19._object = (void *)0xE400000000000000;
  String.append(_:)(v19);
  URL.init(string:)(v33, v34);
  v20 = swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v5 + 48))(v3, 1, v4, v20) == 1)
    return sub_56024((uint64_t)v3, &qword_15068B0);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
  v22 = (void *)objc_opt_self(UIApplication);
  v23 = objc_msgSend(v22, "sharedApplication");
  URL._bridgeToObjectiveC()(v24);
  v26 = v25;
  v27 = objc_msgSend(v23, "canOpenURL:", v25);

  if (v27)
  {
    v28 = objc_msgSend(v22, "sharedApplication");
    URL._bridgeToObjectiveC()(v29);
    v31 = v30;
    sub_DB9BB0((uint64_t)_swiftEmptyArrayStorage);
    _s3__C25OpenExternalURLOptionsKeyVMa_1(0);
    sub_4DD24(&qword_1506958, (uint64_t (*)(uint64_t))_s3__C25OpenExternalURLOptionsKeyVMa_1, (uint64_t)&unk_10AAEDC);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v28, "openURL:options:completionHandler:", v31, isa, 0, swift_bridgeObjectRelease().n128_f64[0]);

  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

double sub_E39DF4@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  void *v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  __n128 v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double result;
  __int128 v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  char v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  id v50[2];

  v37 = a1;
  v5 = type metadata accessor for Image.ResizingMode(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for GeometryProxy(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin();
  v48 = a2[2];
  v43 = a2[2];
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509B58);
  State.wrappedValue.getter(&v38, v12);
  if (v38)
  {
    v13 = v38;
    v14 = Image.init(uiImage:)(v13);
    (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for Image.ResizingMode.stretch(_:), v5);
    v15 = (void *)Image.resizable(capInsets:resizingMode:)(v8, v14, 0.0, 0.0, 0.0, 0.0);
    v16 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v16);
    v38 = v15;
    v39 = xmmword_1060DF0;
    v40 = 0;
    v41 = 0;
    v42 = 0;
    swift_retain();
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509B60);
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509B68);
    v19 = sub_2D4CB4(&qword_1509B70, &qword_1509B60);
    v20 = sub_2D4CB4(&qword_1509B78, &qword_1509B68);
    _ConditionalContent<>.init(storage:)(&v38, v17, v18, v19, v20);
    swift_release();

  }
  else
  {
    sub_5C090((uint64_t)&v48, (uint64_t)v50, &qword_1506E70);
    sub_5C090((uint64_t)&v48 + 8, (uint64_t)&v49, &qword_1509B50);
    v21 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.97, 0.96, 0.93, 1.0);
    v23 = (void *)Color.init(uiColor:)(v21, v22);
    v47 = a2[1];
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v37, v9);
    v24 = *(unsigned __int8 *)(v10 + 80);
    v25 = (v24 + 64) & ~v24;
    v26 = (char *)swift_allocObject(&unk_13C98C8, v25 + v11, v24 | 7);
    v27 = a2[1];
    *((_OWORD *)v26 + 1) = *a2;
    *((_OWORD *)v26 + 2) = v27;
    *((_OWORD *)v26 + 3) = a2[2];
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v26[v25], (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
    v38 = v23;
    *(_QWORD *)&v39 = sub_E3B470;
    v40 = 0;
    v41 = 0;
    *((_QWORD *)&v39 + 1) = v26;
    v42 = 1;
    sub_1391E0((uint64_t)&v47);
    sub_5F430(v50);
    sub_3B3AF4(&v49);
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509B60);
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509B68);
    v30 = sub_2D4CB4(&qword_1509B70, &qword_1509B60);
    v31 = sub_2D4CB4(&qword_1509B78, &qword_1509B68);
    _ConditionalContent<>.init(storage:)(&v38, v28, v29, v30, v31);
  }
  result = *(double *)&v43;
  v33 = v44;
  v34 = v45;
  v35 = v46;
  *(_OWORD *)a3 = v43;
  *(_OWORD *)(a3 + 16) = v33;
  *(_QWORD *)(a3 + 32) = v34;
  *(_BYTE *)(a3 + 40) = v35;
  return result;
}

void sub_E3A19C(double a1)
{
  double v1;
  double v2;

  v1 = GeometryProxy.size.getter(a1);
  GeometryProxy.size.getter(v1);
  sub_E3A1DC(v1, v2);
}

void sub_E3A1DC(double a1, double a2)
{
  double *v2;
  double *v3;
  id v6;
  id v7;
  NSString v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  Class isa;
  id v14;
  _OWORD *v15;
  __int128 v16;
  void *v17;
  _QWORD v18[6];
  __int128 v19;
  uint64_t v20;
  id v21;

  v3 = v2;
  v6 = objc_msgSend(objc_allocWithZone((Class)MKPlacemark), "initWithCoordinate:", *v2, v2[1]);
  v7 = objc_msgSend(objc_allocWithZone((Class)MKMapItem), "initWithPlacemark:", v6);

  v8 = String._bridgeToObjectiveC()();
  objc_msgSend(v7, "setName:", v8);

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1507660);
  v10 = swift_allocObject(v9, 40, 7);
  *(_OWORD *)(v10 + 16) = xmmword_1060220;
  *(_QWORD *)(v10 + 32) = v7;
  v18[0] = v10;
  specialized Array._endMutation()(v10);
  v11 = objc_allocWithZone((Class)MusicMapKitAnnotatedMapSnapshotter);
  sub_E3B4A0();
  v12 = v7;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v11, "initWithMapItems:mapSize:distance:", isa, a1, a2, 5000.0, v18[0]);

  v19 = *((_OWORD *)v3 + 2);
  sub_5C090((uint64_t)&v19, (uint64_t)&v21, &qword_1506E70);
  sub_5C090((uint64_t)&v19 + 8, (uint64_t)&v20, &qword_1509B50);
  v15 = (_OWORD *)swift_allocObject(&unk_13C98F0, 64, 7);
  v16 = *((_OWORD *)v3 + 1);
  v15[1] = *(_OWORD *)v3;
  v15[2] = v16;
  v15[3] = *((_OWORD *)v3 + 2);
  v18[4] = sub_E3B514;
  v18[5] = v15;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 1107296256;
  v18[2] = sub_21B54C;
  v18[3] = &block_descriptor_354;
  v17 = _Block_copy(v18);
  swift_bridgeObjectRetain();
  sub_5F430(&v21);
  sub_3B3AF4(&v20);
  objc_msgSend(v14, "startWithCompletionHandler:", v17, swift_release().n128_f64[0]);
  _Block_release(v17);

}

_QWORD *sub_E3A42C(_QWORD *result, uint64_t a2, uint64_t a3)
{
  _QWORD *v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  __int128 v9;
  __int128 v10;
  id v11;
  uint64_t v12;

  if (result)
  {
    v4 = result;
    v5 = objc_msgSend(v4, "image");
    v10 = *(_OWORD *)(a3 + 32);
    sub_5C090((uint64_t)&v10 + 8, (uint64_t)&v12, &qword_1509B50);
    sub_5C090((uint64_t)&v10, (uint64_t)&v11, &qword_1506E70);
    v9 = v10;
    v8 = v5;
    sub_5F430(&v11);
    sub_3B3AF4(&v12);
    v6 = v5;
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509B58);
    State.wrappedValue.setter(&v8, v7);

    sub_5F12C(&v11);
    return sub_E3B534(&v12);
  }
  return result;
}

_QWORD *sub_E3A508@<X0>(double (**a1)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  _OWORD *v1;
  double (*v3)@<D0>(uint64_t@<X0>, uint64_t@<X8>);
  __int128 v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  id v10;

  v6 = v1[2];
  v7 = v1[1];
  v8 = v6;
  sub_5C090((uint64_t)&v8, (uint64_t)&v10, &qword_1506E70);
  sub_5C090((uint64_t)&v8 + 8, (uint64_t)&v9, &qword_1509B50);
  v3 = (double (*)@<D0>(uint64_t@<X0>, uint64_t@<X8>))swift_allocObject(&unk_13C98A0, 64, 7);
  v4 = v1[1];
  *((_OWORD *)v3 + 1) = *v1;
  *((_OWORD *)v3 + 2) = v4;
  *((_OWORD *)v3 + 3) = v1[2];
  *a1 = sub_E3B3E4;
  a1[1] = v3;
  sub_1391E0((uint64_t)&v7);
  sub_5F430(&v10);
  return sub_3B3AF4(&v9);
}

void sub_E3A5BC()
{
  qword_1509A90 = 0x4046000000000000;
}

uint64_t sub_E3A5CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509A98);
  v1 = sub_5C150(&qword_1509AA0, &qword_1509A98, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  return List<>.init(content:)(sub_E3BCA8, &v3, v0, v1);
}

uint64_t *initializeBufferWithCopyOfBuffer for RazzmatazzDetailView(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  id v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v38;
  char *v39;
  void *v40;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v36 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v36 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    v8 = (int *)type metadata accessor for Razzmatazz(0);
    v9 = v8[6];
    v10 = (char *)v4 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for Date(0);
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    v14 = v8[7];
    v15 = (char *)v4 + v14;
    v16 = (char *)a2 + v14;
    v17 = type metadata accessor for Artist(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    v18 = v8[8];
    v19 = (uint64_t *)((char *)v4 + v18);
    v20 = (char *)a2 + v18;
    v21 = *(uint64_t *)((char *)a2 + v18 + 8);
    *v19 = *(uint64_t *)((char *)a2 + v18);
    v19[1] = v21;
    v22 = *(uint64_t *)((char *)a2 + v18 + 24);
    v19[2] = *(uint64_t *)((char *)a2 + v18 + 16);
    v19[3] = v22;
    v23 = *(uint64_t *)((char *)a2 + v18 + 40);
    v19[4] = *(uint64_t *)((char *)a2 + v18 + 32);
    v19[5] = v23;
    v24 = *(uint64_t *)((char *)a2 + v18 + 56);
    v19[6] = *(uint64_t *)((char *)a2 + v18 + 48);
    v19[7] = v24;
    v25 = *(uint64_t *)((char *)a2 + v18 + 72);
    v19[8] = *(uint64_t *)((char *)a2 + v18 + 64);
    v19[9] = v25;
    v26 = *(uint64_t *)((char *)a2 + v18 + 88);
    v19[10] = *(uint64_t *)((char *)a2 + v18 + 80);
    v19[11] = v26;
    v40 = *(void **)((char *)a2 + v18 + 96);
    v19[12] = v40;
    v27 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
    v38 = &v20[v27];
    v39 = (char *)v19 + v27;
    v28 = type metadata accessor for TimeZone(0);
    v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v30 = v40;
    v29(v39, v38, v28);
    v31 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    v32 = (uint64_t *)((char *)v4 + v31);
    v33 = (uint64_t *)((char *)a2 + v31);
    v34 = *v33;
    swift_retain();
    if (v34)
    {
      v35 = v33[1];
      *v32 = v34;
      v32[1] = v35;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v32 = *(_OWORD *)v33;
    }
  }
  return v4;
}

double destroy for RazzmatazzDetailView(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = (int *)type metadata accessor for Razzmatazz(0);
  v5 = a1 + v4[6];
  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + v4[7];
  v8 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + v4[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v10 = v9 + *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v11 = type metadata accessor for TimeZone(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  if (*(_QWORD *)(a1 + *(int *)(a2 + 24)))
    *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

_QWORD *initializeWithCopy for RazzmatazzDetailView(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  id v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  char *v36;
  char *v37;
  void *v38;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v7 = (int *)type metadata accessor for Razzmatazz(0);
  v8 = v7[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for Date(0);
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  v13 = v7[7];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  v17 = v7[8];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (char *)a2 + v17;
  v20 = *(_QWORD *)((char *)a2 + v17 + 8);
  *v18 = *(_QWORD *)((char *)a2 + v17);
  v18[1] = v20;
  v21 = *(_QWORD *)((char *)a2 + v17 + 24);
  v18[2] = *(_QWORD *)((char *)a2 + v17 + 16);
  v18[3] = v21;
  v22 = *(_QWORD *)((char *)a2 + v17 + 40);
  v18[4] = *(_QWORD *)((char *)a2 + v17 + 32);
  v18[5] = v22;
  v23 = *(_QWORD *)((char *)a2 + v17 + 56);
  v18[6] = *(_QWORD *)((char *)a2 + v17 + 48);
  v18[7] = v23;
  v24 = *(_QWORD *)((char *)a2 + v17 + 72);
  v18[8] = *(_QWORD *)((char *)a2 + v17 + 64);
  v18[9] = v24;
  v25 = *(_QWORD *)((char *)a2 + v17 + 88);
  v18[10] = *(_QWORD *)((char *)a2 + v17 + 80);
  v18[11] = v25;
  v38 = *(void **)((char *)a2 + v17 + 96);
  v18[12] = v38;
  v26 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v36 = &v19[v26];
  v37 = (char *)v18 + v26;
  v27 = type metadata accessor for TimeZone(0);
  v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v29 = v38;
  v28(v37, v36, v27);
  v30 = *(int *)(a3 + 24);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  v31 = (_QWORD *)((char *)a1 + v30);
  v32 = (_QWORD *)((char *)a2 + v30);
  v33 = *v32;
  swift_retain();
  if (v33)
  {
    v34 = v32[1];
    *v31 = v33;
    v31[1] = v34;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v31 = *(_OWORD *)v32;
  }
  return a1;
}

_QWORD *assignWithCopy for RazzmatazzDetailView(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (int *)type metadata accessor for Razzmatazz(0);
  v7 = v6[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = v6[7];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = v6[8];
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  *v16 = *(_QWORD *)((char *)a2 + v15);
  v16[1] = *(_QWORD *)((char *)a2 + v15 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[2] = v17[2];
  v16[3] = v17[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[4] = v17[4];
  v16[5] = v17[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[6] = v17[6];
  v16[7] = v17[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[8] = v17[8];
  v16[9] = v17[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[10] = v17[10];
  v16[11] = v17[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = (void *)v17[12];
  v19 = (void *)v16[12];
  v16[12] = v18;
  v20 = v18;

  v21 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v22 = (char *)v16 + v21;
  v23 = (char *)v17 + v21;
  v24 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 24))(v22, v23, v24);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  v25 = *(int *)(a3 + 24);
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (_QWORD *)((char *)a2 + v25);
  v28 = *(_QWORD *)((char *)a1 + v25);
  v29 = *v27;
  if (!v28)
  {
    if (v29)
    {
      v31 = v27[1];
      *v26 = v29;
      v26[1] = v31;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)v26 = *(_OWORD *)v27;
    return a1;
  }
  if (!v29)
  {
    swift_release();
    goto LABEL_7;
  }
  v30 = v27[1];
  *v26 = v29;
  v26[1] = v30;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *initializeWithTake for RazzmatazzDetailView(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = (int *)type metadata accessor for Razzmatazz(0);
  v8 = v7[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = v7[7];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  v16 = v7[8];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = *(_OWORD *)((char *)a2 + v16 + 16);
  *(_OWORD *)v17 = *(_OWORD *)((char *)a2 + v16);
  *((_OWORD *)v17 + 1) = v19;
  v20 = *(_OWORD *)((char *)a2 + v16 + 48);
  *((_OWORD *)v17 + 2) = *(_OWORD *)((char *)a2 + v16 + 32);
  *((_OWORD *)v17 + 3) = v20;
  v21 = *(_OWORD *)((char *)a2 + v16 + 80);
  *((_OWORD *)v17 + 4) = *(_OWORD *)((char *)a2 + v16 + 64);
  *((_OWORD *)v17 + 5) = v21;
  *((_QWORD *)v17 + 12) = *(_QWORD *)((char *)a2 + v16 + 96);
  v22 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v23 = &v17[v22];
  v24 = &v18[v22];
  v25 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
  v26 = *(int *)(a3 + 24);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  v27 = (_QWORD *)((char *)a1 + v26);
  v28 = (uint64_t *)((char *)a2 + v26);
  v29 = *v28;
  if (*v28)
  {
    v30 = v28[1];
    *v27 = v29;
    v27[1] = v30;
  }
  else
  {
    *(_OWORD *)v27 = *(_OWORD *)v28;
  }
  return a1;
}

_QWORD *assignWithTake for RazzmatazzDetailView(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = (int *)type metadata accessor for Razzmatazz(0);
  v9 = v8[6];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  v13 = v8[7];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  v17 = v8[8];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  v20 = *(_QWORD *)((char *)a2 + v17 + 8);
  *v18 = *(_QWORD *)((char *)a2 + v17);
  v18[1] = v20;
  swift_bridgeObjectRelease();
  v21 = v19[3];
  v18[2] = v19[2];
  v18[3] = v21;
  swift_bridgeObjectRelease();
  v22 = v19[5];
  v18[4] = v19[4];
  v18[5] = v22;
  swift_bridgeObjectRelease();
  v23 = v19[7];
  v18[6] = v19[6];
  v18[7] = v23;
  swift_bridgeObjectRelease();
  v24 = v19[9];
  v18[8] = v19[8];
  v18[9] = v24;
  swift_bridgeObjectRelease();
  v25 = v19[11];
  v18[10] = v19[10];
  v18[11] = v25;
  swift_bridgeObjectRelease();
  v26 = (void *)v18[12];
  v18[12] = v19[12];

  v27 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v28 = (char *)v18 + v27;
  v29 = (char *)v19 + v27;
  v30 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  swift_release();
  v31 = *(int *)(a3 + 24);
  v32 = (_QWORD *)((char *)a1 + v31);
  v33 = (_QWORD *)((char *)a2 + v31);
  v34 = *(_QWORD *)((char *)a1 + v31);
  v35 = *v33;
  if (!v34)
  {
    if (v35)
    {
      v37 = v33[1];
      *v32 = v35;
      v32[1] = v37;
      return a1;
    }
LABEL_7:
    *(_OWORD *)v32 = *(_OWORD *)v33;
    return a1;
  }
  if (!v35)
  {
    swift_release();
    goto LABEL_7;
  }
  v36 = v33[1];
  *v32 = v35;
  v32[1] = v36;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for RazzmatazzDetailView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_E3B0A8);
}

uint64_t sub_E3B0A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = type metadata accessor for Razzmatazz(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for RazzmatazzDetailView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_E3B13C);
}

uint64_t sub_E3B13C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Razzmatazz(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = a2;
  return result;
}

uint64_t sub_E3B1B4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for Razzmatazz(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = "\b";
    v4[2] = &unk_10AF400;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_E3B230()
{
  return sub_5C150(&qword_1509B40, &qword_1509B48, (uint64_t)&protocol conformance descriptor for List<A, B>);
}

double destroy for RazzmatazzDetailView.MapImage(uint64_t a1)
{
  double result;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for RazzmatazzDetailView.MapImage(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  v5 = *(void **)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  v6 = v5;
  swift_retain(v4);
  return a1;
}

_QWORD *assignWithCopy for RazzmatazzDetailView.MapImage(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  v4 = a1[3];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  v5 = (void *)a1[4];
  v6 = (void *)a2[4];
  a1[4] = v6;
  v7 = v6;

  v8 = a1[5];
  v9 = a2[5];
  a1[5] = v9;
  swift_retain(v9);
  swift_release(v8);
  return a1;
}

uint64_t assignWithTake for RazzmatazzDetailView.MapImage(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  v4 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  v5 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release(v5);
  return a1;
}

ValueMetadata *type metadata accessor for RazzmatazzDetailView.MapImage()
{
  return &type metadata for RazzmatazzDetailView.MapImage;
}

uint64_t sub_E3B3D0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1211E50, 1);
}

double sub_E3B3E4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_E39DF4(a1, (_OWORD *)(v2 + 16), a2);
}

uint64_t sub_E3B3EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v1 = type metadata accessor for GeometryProxy(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 64) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));

  v7 = swift_release(*(_QWORD *)(v0 + 56));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  return swift_deallocObject(v0, v5, v6);
}

void sub_E3B470()
{
  double v0;

  type metadata accessor for GeometryProxy(0);
  sub_E3A19C(v0);
}

unint64_t sub_E3B4A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1509B80;
  if (!qword_1509B80)
  {
    v1 = objc_opt_self(MKMapItem);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1509B80);
  }
  return result;
}

uint64_t objectdestroyTm_33()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));

  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

_QWORD *sub_E3B514(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_E3A42C(a1, a2, v2 + 16);
}

uint64_t block_copy_helper_348(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double block_destroy_helper_348(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

_QWORD *sub_E3B534(_QWORD *a1)
{
  swift_release(*a1);
  return a1;
}

void sub_E3B55C(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_E37870(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_E3B564@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_E39088(*(_QWORD *)(v1 + 16), (uint64_t (*)(void))&static HorizontalAlignment.leading.getter, &qword_1509C28, (uint64_t (*)(uint64_t))sub_E37958, a1);
}

uint64_t sub_E3B594@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_E39088(*(_QWORD *)(v1 + 16), (uint64_t (*)(void))&static VerticalAlignment.center.getter, &qword_1509C08, (uint64_t (*)(uint64_t))sub_E390E0, a1);
}

uint64_t sub_E3B5C4()
{
  uint64_t v0;

  return sub_E395E8(*(_QWORD *)(v0 + 16));
}

unint64_t sub_E3B5CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1509BE0;
  if (!qword_1509BE0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1509BD8);
    sub_5C150(&qword_1509BE8, &qword_1509BF0, (uint64_t)&protocol conformance descriptor for VStack<A>);
    sub_5C150(&qword_1509BF8, &qword_150C000, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1509BE0);
  }
  return result;
}

uint64_t sub_E3B668(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RazzmatazzDetailView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_E3B6B0()
{
  return sub_E3B8B4(sub_E39AEC);
}

uint64_t sub_E3B6BC(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v2 = *(void **)(a1 + 56);
  v3 = *(_QWORD *)(a1 + 120);
  v4 = *(_QWORD *)(a1 + 128);
  v5 = *(_BYTE *)(a1 + 136);
  swift_bridgeObjectRelease();

  swift_release();
  sub_AF8E8(v3, v4, v5);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_E3B730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a3)
    return swift_retain(a4);
  return result;
}

double sub_E3B740(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  double result;

  if (a3)
    *(_QWORD *)&result = swift_release(a4).n128_u64[0];
  return result;
}

uint64_t objectdestroy_10Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = type metadata accessor for RazzmatazzDetailView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = (int *)type metadata accessor for Razzmatazz(0);
  v7 = v0 + v4 + v6[6];
  v8 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = v0 + v4 + v6[7];
  v10 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = v0 + v4 + v6[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v12 = v11 + *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v13 = type metadata accessor for TimeZone(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  swift_release();
  if (*(_QWORD *)(v0 + v4 + *(int *)(v1 + 24)))
    swift_release();
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_E3B8A8()
{
  return sub_E3B8B4((uint64_t (*)(uint64_t))sub_E3851C);
}

uint64_t sub_E3B8B4(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for RazzmatazzDetailView(0) - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

uint64_t sub_E3B8F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = type metadata accessor for RazzmatazzDetailView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = (int *)type metadata accessor for Razzmatazz(0);
  v7 = v0 + v4 + v6[6];
  v8 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = v0 + v4 + v6[7];
  v10 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = v0 + v4 + v6[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v12 = v11 + *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v13 = type metadata accessor for TimeZone(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  swift_release();
  if (*(_QWORD *)(v0 + v4 + *(int *)(v1 + 24)))
    swift_release();
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

void sub_E3BA4C(char a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for RazzmatazzDetailView(0) - 8) + 80);
  sub_E38664(a1, a2, *(void **)(v2 + 16), v2 + ((v5 + 24) & ~v5));
}

uint64_t sub_E3BA9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = type metadata accessor for RazzmatazzDetailView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = (int *)type metadata accessor for Razzmatazz(0);
  v7 = v0 + v4 + v6[6];
  v8 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = v0 + v4 + v6[7];
  v10 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = v0 + v4 + v6[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v12 = v11 + *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v13 = type metadata accessor for TimeZone(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  swift_release();
  if (*(_QWORD *)(v0 + v4 + *(int *)(v1 + 24)))
    swift_release();
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_E3BBF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for RazzmatazzDetailView(0) - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v1 + ((v4 + 32) & ~v4);
  v8 = (_QWORD *)swift_task_alloc(dword_1509C64);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_50F8C;
  return sub_E38D20(a1, v5, v6, v7);
}

uint64_t sub_E3BC7C()
{
  return sub_5C150(&qword_1509C70, &qword_1509C78, (uint64_t)&protocol conformance descriptor for GeometryReader<A>);
}

uint64_t RazzmatazzView.init(navigationHandler:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v6;
  uint64_t v7;
  uint64_t result;
  char v9;
  _QWORD v10[2];

  v9 = 0;
  State.init(wrappedValue:)(v10, &v9, &type metadata for Bool);
  v6 = v10[0];
  v7 = v10[1];
  result = AppStorage.init<A>(wrappedValue:_:store:)(0, 0xD000000000000010, 0x800000000110DD60, 0);
  *(_QWORD *)a3 = a1;
  *(_QWORD *)(a3 + 8) = a2;
  *(_QWORD *)(a3 + 16) = sub_E3BDC0;
  *(_QWORD *)(a3 + 24) = 0;
  *(_BYTE *)(a3 + 32) = 0;
  *(_BYTE *)(a3 + 40) = v6;
  *(_QWORD *)(a3 + 48) = v7;
  *(_QWORD *)(a3 + 56) = result;
  return result;
}

uint64_t (*variable initialization expression of RazzmatazzView._controller())()
{
  return sub_E3BDC0;
}

uint64_t property wrapper backing initializer of Radiosity.ViewModifier.isRadiosityEnabled(char a1)
{
  char v2;
  uint64_t v3;

  v2 = a1;
  State.init(wrappedValue:)(&v3, &v2, &type metadata for Bool);
  return v3;
}

uint64_t property wrapper backing initializer of RazzmatazzView.isFilteringToFavorites(uint64_t a1)
{
  return AppStorage.init<A>(wrappedValue:_:store:)(a1, 0xD000000000000010, 0x800000000110DD60, 0);
}

uint64_t sub_E3BDC0()
{
  uint64_t v0;

  v0 = type metadata accessor for RazzmatazzController(0);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  return sub_E2C6F8();
}

uint64_t RazzmatazzView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  _OWORD *v17;
  __int128 v18;
  __int128 v19;
  __n128 v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _OWORD *v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  __n128 v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t OpaqueTypeConformance2;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  _OWORD *v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char v73[16];
  _OWORD *v74;
  char v75[16];
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  char v84;

  v2 = (_OWORD *)v1;
  v71 = a1;
  v64 = type metadata accessor for TaskPriority(0);
  v3 = *(_QWORD *)(v64 - 8);
  __chkstk_darwin();
  v5 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509C98);
  v61 = *(_QWORD *)(v62 - 8);
  __chkstk_darwin();
  v7 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509CA0);
  v60 = v8;
  __chkstk_darwin();
  v72 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509CA8);
  v68 = *(_QWORD *)(v67 - 8);
  __chkstk_darwin();
  v65 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509CB0);
  v70 = *(_QWORD *)(v69 - 8);
  __chkstk_darwin();
  v66 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = v1;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509CB8);
  v13 = sub_5C150(&qword_1509CC0, &qword_1509CB8, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  List<>.init(content:)(sub_E3C764, v75, v12, v13);
  v14 = *(_QWORD *)(v1 + 8);
  v15 = *(_OWORD *)(v1 + 16);
  v84 = *(_BYTE *)(v1 + 32);
  v82 = *(_OWORD *)(v1 + 40);
  v83 = v15;
  v16 = *(_QWORD *)(v1 + 56);
  v17 = (_OWORD *)swift_allocObject(&unk_13C9A40, 80, 7);
  v18 = *(_OWORD *)(v1 + 16);
  v17[1] = *(_OWORD *)v1;
  v17[2] = v18;
  v19 = *(_OWORD *)(v1 + 48);
  v17[3] = *(_OWORD *)(v1 + 32);
  v17[4] = v19;
  v63 = v14;
  swift_retain();
  sub_686F54((uint64_t *)&v83);
  sub_2051C8((uint64_t)&v82);
  v59 = v16;
  v20 = swift_retain();
  static TaskPriority.userInitiated.getter(v20);
  v21 = v72;
  v22 = &v72[*(int *)(v8 + 36)];
  v23 = type metadata accessor for _TaskModifier(0);
  v24 = v64;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(&v22[*(int *)(v23 + 20)], v5, v64);
  *(_QWORD *)v22 = &unk_1509CD0;
  *((_QWORD *)v22 + 1) = v17;
  v25 = v61;
  v26 = v21;
  v27 = v62;
  (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v26, v7, v62);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v24);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v27);
  v81 = v82;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509CD8);
  State.projectedValue.getter(&v77, v28);
  v29 = v77;
  v30 = v78;
  v31 = v79;
  v32 = (_OWORD *)swift_allocObject(&unk_13C9A68, 80, 7);
  v33 = v2[1];
  v32[1] = *v2;
  v32[2] = v33;
  v34 = v2[3];
  v32[3] = v2[2];
  v32[4] = v34;
  swift_retain();
  sub_686F54((uint64_t *)&v83);
  sub_2051C8((uint64_t)&v82);
  v35 = type metadata accessor for CitySelectionView(0);
  v36 = sub_E3DDA4();
  v37 = sub_4DD24(&qword_1509CF0, type metadata accessor for CitySelectionView, (uint64_t)&unk_10ADBA0);
  v38 = swift_retain();
  v39 = v65;
  v40 = v31;
  v41 = v60;
  v42 = (uint64_t)v72;
  View.sheet<A>(isPresented:onDismiss:content:)(v29, v30, v40, 0, 0, sub_E3DD9C, v32, v60, v38, v35, v36, v37);
  swift_release();
  swift_release();
  swift_release();
  sub_56024(v42, &qword_1509CA0);
  v74 = v2;
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509CF8);
  v77 = v41;
  v78 = v35;
  v79 = v36;
  v80 = v37;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v77, &opaque type descriptor for <<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>, 1);
  v45 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1509D00);
  v46 = sub_5C150(&qword_1509D08, &qword_1509D00, (uint64_t)&protocol conformance descriptor for ToolbarItem<A, B>);
  v77 = v45;
  v78 = v46;
  v47 = swift_getOpaqueTypeConformance2(&v77, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
  v48 = v66;
  v49 = v67;
  View.toolbar<A>(content:)(sub_E3DFEC, v73, v67, v43, OpaqueTypeConformance2, v47);
  v50 = v49;
  v51.n128_f64[0] = (*(double (**)(char *, uint64_t))(v68 + 8))(v39, v49);
  AppStorage.wrappedValue.getter(&v77, v51);
  LOBYTE(v81) = v77;
  v52 = (_OWORD *)swift_allocObject(&unk_13C9A90, 80, 7);
  v53 = v2[1];
  v52[1] = *v2;
  v52[2] = v53;
  v54 = v2[3];
  v52[3] = v2[2];
  v52[4] = v54;
  swift_retain();
  sub_686F54((uint64_t *)&v83);
  sub_2051C8((uint64_t)&v82);
  swift_retain();
  v77 = v50;
  v78 = v43;
  v79 = OpaqueTypeConformance2;
  v80 = v47;
  v55 = swift_getOpaqueTypeConformance2(&v77, &opaque type descriptor for <<opaque return type of View.toolbar<A>(content:)>>, 1);
  v56 = v69;
  View.onChange<A>(of:initial:_:)(&v81, 0, sub_E3E844, v52, v69, &type metadata for Bool, v55, &protocol witness table for Bool);
  v57 = swift_release();
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v70 + 8))(v48, v56, v57);
}

uint64_t sub_E3C3D4@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  double v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  void (*v37)(char *, uint64_t);
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char v47[16];
  uint64_t v48;
  char v49[16];
  uint64_t v50;

  v40 = a1;
  v46 = a2;
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509EE0);
  __chkstk_darwin();
  v3 = (char *)&v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509EE8);
  v45 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin();
  v43 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v6 = (char *)&v39 - v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1509EF0);
  __chkstk_darwin();
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509EF8);
  __chkstk_darwin();
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v13 = (char *)&v39 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509F00);
  v41 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin();
  v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin();
  v19 = (char *)&v39 - v18;
  v20 = v40;
  v50 = v40;
  *(_QWORD *)v8 = static VerticalAlignment.center.getter(v17);
  *((_QWORD *)v8 + 1) = 0;
  v8[16] = 0;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509F08);
  sub_E3CD78(v20, (uint64_t)&v8[*(int *)(v21 + 44)]);
  sub_E3D040((uint64_t)v11);
  sub_56024((uint64_t)v8, &qword_1509EF0);
  sub_5C090((uint64_t)v11, (uint64_t)v13, &qword_1509EF8);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509F10);
  v23 = sub_E41E38();
  v24 = sub_E4201C();
  v39 = v19;
  Section<>.init(header:content:)(v13, sub_E41E30, v49, v9, v22, v23, v24);
  v48 = v20;
  sub_E3D3DC(0x6F637055206C6C41, 0xEC000000676E696DLL, 0, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v3);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509F98);
  v26 = sub_E421B0();
  v27 = sub_E4212C();
  Section<>.init(header:content:)(v3, sub_E421A8, v47, v44, v25, v26, v27);
  v28 = v41;
  v29 = *(void (**)(char *, char *, uint64_t))(v41 + 16);
  v29(v16, v19, v14);
  v30 = v45;
  v31 = *(void (**)(char *, char *, uint64_t))(v45 + 16);
  v32 = v42;
  v33 = v43;
  v31(v43, v6, v42);
  v34 = v46;
  v29(v46, v16, v14);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509FE0);
  v31(&v34[*(int *)(v35 + 48)], v33, v32);
  v36 = *(void (**)(char *, uint64_t))(v30 + 8);
  v36(v6, v32);
  v37 = *(void (**)(char *, uint64_t))(v28 + 8);
  v37(v39, v14);
  v36(v33, v32);
  return ((uint64_t (*)(char *, uint64_t))v37)(v16, v14);
}

uint64_t sub_E3C764@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_E3C3D4(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_E3C76C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _OWORD *v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  Swift::String v40;
  __n128 v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  _OWORD v71[2];

  v64 = a2;
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509F98);
  v61 = *(_QWORD *)(v65 - 8);
  __chkstk_darwin();
  v60 = (char *)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A000);
  __chkstk_darwin();
  v63 = (uint64_t *)((char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(unsigned __int8 *)(a1 + 32);
  v8 = type metadata accessor for RazzmatazzController(0);
  v9 = sub_4DD24(&qword_1509E28, type metadata accessor for RazzmatazzController, (uint64_t)&unk_10AE118);
  v10 = StateObject.wrappedValue.getter(v5, v6, v7, v8, v9);
  KeyPath = swift_getKeyPath(&unk_10AF690);
  swift_getKeyPath(&unk_10AF6B8);
  static Published.subscript.getter(&v66, v10, KeyPath);
  swift_release();
  swift_release();
  swift_release();
  v12 = (uint64_t)v66;
  v71[0] = *(_OWORD *)(a1 + 40);
  v70 = *(_QWORD *)(a1 + 56);
  swift_retain();
  KeyValueObservationTrigger.keyPath.getter(v5, v6);
  sub_2051C8((uint64_t)v71);
  sub_3B3AF4(&v70);
  v13 = sub_E412B8(v12, v5, v6, v7);
  swift_release();
  sub_14E55C(v5, v6);
  sub_2B5CA8((uint64_t)v71);
  sub_E3B534(&v70);
  swift_bridgeObjectRelease();
  v14 = v13[2];
  swift_bridgeObjectRelease();
  if (v14)
  {
    v15 = StateObject.wrappedValue.getter(v5, v6, v7, v8, v9);
    v16 = swift_getKeyPath(&unk_10AF690);
    swift_getKeyPath(&unk_10AF6B8);
    static Published.subscript.getter(&v66, v15, v16);
    swift_release();
    swift_release();
    swift_release();
    v17 = (uint64_t)v66;
    swift_retain();
    KeyValueObservationTrigger.keyPath.getter(v5, v6);
    sub_2051C8((uint64_t)v71);
    sub_3B3AF4(&v70);
    v18 = sub_E412B8(v17, v5, v6, v7);
    swift_release();
    sub_14E55C(v5, v6);
    sub_2B5CA8((uint64_t)v71);
    sub_E3B534(&v70);
    swift_bridgeObjectRelease();
    v66 = v18;
    v19 = swift_getKeyPath(&unk_10AF6E0);
    v20 = (_OWORD *)swift_allocObject(&unk_13C9C30, 80, 7);
    v21 = *(_OWORD *)(a1 + 16);
    v20[1] = *(_OWORD *)a1;
    v20[2] = v21;
    v22 = *(_OWORD *)(a1 + 48);
    v20[3] = *(_OWORD *)(a1 + 32);
    v20[4] = v22;
    swift_retain();
    KeyValueObservationTrigger.keyPath.getter(v5, v6);
    sub_2051C8((uint64_t)v71);
    sub_3B3AF4(&v70);
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1507590);
    v24 = type metadata accessor for RazzmatazzView.CompactListCell(0);
    v25 = sub_5C150(&qword_1509090, &qword_1507590, (uint64_t)&protocol conformance descriptor for [A]);
    v26 = sub_4DD24(&qword_1509098, type metadata accessor for Razzmatazz, (uint64_t)&protocol conformance descriptor for Razzmatazz);
    v27 = sub_4DD24(&qword_1509FA0, type metadata accessor for RazzmatazzView.CompactListCell, (uint64_t)&unk_10AF4F8);
    v28 = v60;
    ForEach<>.init(_:id:content:)(&v66, v19, sub_E42688, v20, v23, v24, v25, v26, v27);
    v29 = v61;
    v30 = v63;
    v31 = v65;
    (*(void (**)(uint64_t *, char *, uint64_t))(v61 + 16))(v63, v28, v65);
    swift_storeEnumTagMultiPayload(v30, v62, 1);
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509F68);
    v33 = sub_E42088();
    v34 = sub_E4212C();
    _ConditionalContent<>.init(storage:)(v30, v32, v31, v33, v34);
    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v28, v31);
  }
  else
  {
    v66 = 0;
    v67 = 0xE000000000000000;
    _StringGuts.grow(_:)(25);
    swift_bridgeObjectRelease();
    v68 = 0xD000000000000017;
    v69 = 0x800000000110DD80;
    v36 = StateObject.wrappedValue.getter(v5, v6, v7, v8, v9);
    v37 = swift_getKeyPath(&unk_10AF6F8);
    swift_getKeyPath(&unk_10AF720);
    static Published.subscript.getter(&v66, v36, v37);
    swift_release();
    swift_release();
    swift_release();
    v38 = (uint64_t)v66;
    v39 = (void *)v67;
    swift_bridgeObjectRelease();
    v40._countAndFlagsBits = v38;
    v40._object = v39;
    String.append(_:)(v40);
    v41 = swift_bridgeObjectRelease();
    v42 = v68;
    v43 = v69;
    LODWORD(v66) = static HierarchicalShapeStyle.secondary.getter(v41);
    v44 = Text.foregroundStyle<A>(_:)(&v66, v42, v43, 0, _swiftEmptyArrayStorage, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
    v46 = v45;
    v48 = v47;
    v50 = v49;
    swift_bridgeObjectRelease();
    v51 = swift_getKeyPath(&unk_10AF740);
    v52 = static Font.subheadline.getter(v51);
    v53 = swift_getKeyPath(&unk_10AF548);
    v54 = v62;
    v55 = v63;
    *v63 = v44;
    v55[1] = v46;
    *((_BYTE *)v55 + 16) = v48 & 1;
    v55[3] = v50;
    v55[4] = v51;
    *((_BYTE *)v55 + 40) = 1;
    v55[6] = v53;
    v55[7] = v52;
    swift_storeEnumTagMultiPayload(v55, v54, 0);
    v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509F68);
    v57 = sub_E42088();
    v58 = sub_E4212C();
    return _ConditionalContent<>.init(storage:)(v55, v56, v65, v57, v58);
  }
}

double sub_E3CD78@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  __int128 v15;
  _OWORD *v16;
  __int128 v17;
  __int128 v18;
  unint64_t v19;
  double v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t, double);
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  double result;
  char *v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150B260);
  v28 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v27 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v7 = (char *)&v27 - v6;
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(unsigned __int8 *)(a1 + 32);
  v11 = type metadata accessor for RazzmatazzController(0);
  v12 = sub_4DD24(&qword_1509E28, type metadata accessor for RazzmatazzController, (uint64_t)&unk_10AE118);
  v13 = StateObject.wrappedValue.getter(v8, v9, v10, v11, v12);
  KeyPath = swift_getKeyPath(&unk_10AF6F8);
  swift_getKeyPath(&unk_10AF720);
  static Published.subscript.getter(&v30, v13, KeyPath);
  swift_release();
  swift_release();
  swift_release();
  v15 = v30;
  swift_bridgeObjectRelease();
  v29 = v15;
  v30 = *(_OWORD *)(a1 + 40);
  v31 = *(_QWORD *)(a1 + 56);
  v16 = (_OWORD *)swift_allocObject(&unk_13C9C08, 80, 7);
  v17 = *(_OWORD *)(a1 + 16);
  v16[1] = *(_OWORD *)a1;
  v16[2] = v17;
  v18 = *(_OWORD *)(a1 + 48);
  v16[3] = *(_OWORD *)(a1 + 32);
  v16[4] = v18;
  swift_retain();
  KeyValueObservationTrigger.keyPath.getter(v8, v9);
  sub_2051C8((uint64_t)&v30);
  sub_3B3AF4(&v31);
  v19 = sub_DD0BF8();
  v20 = Button<>.init<A>(_:action:)(&v29, sub_E423D8, v16, &type metadata for String, v19);
  v21 = v27;
  v22 = v28;
  v23 = *(void (**)(char *, char *, uint64_t, double))(v28 + 16);
  v23(v27, v7, v4, v20);
  *(_OWORD *)a2 = xmmword_10A97D0;
  *(_BYTE *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = _swiftEmptyArrayStorage;
  *(_OWORD *)(a2 + 32) = xmmword_10A97E0;
  *(_BYTE *)(a2 + 48) = 0;
  *(_QWORD *)(a2 + 56) = _swiftEmptyArrayStorage;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509FF8);
  ((void (*)(uint64_t, char *, uint64_t))v23)(a2 + *(int *)(v24 + 64), v21, v4);
  sub_AF8D8(1918985550, 0xE400000000000000, 0);
  swift_bridgeObjectRetain();
  sub_AF8D8(32, 0xE100000000000000, 0);
  v25 = *(void (**)(char *, uint64_t))(v22 + 8);
  swift_bridgeObjectRetain();
  v25(v7, v4);
  v25(v21, v4);
  sub_AF8E8(32, 0xE100000000000000, 0);
  swift_bridgeObjectRelease();
  sub_AF8E8(1918985550, 0xE400000000000000, 0);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_E3D040@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t *v17;
  __n128 v18;
  double v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;

  v45 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1508FA0);
  __chkstk_darwin();
  v2 = (char *)&v42 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509F40);
  __chkstk_darwin();
  v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509FF0);
  v6 = *(_QWORD *)(v43 - 8);
  __chkstk_darwin();
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509F38);
  __chkstk_darwin();
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509F28);
  v12.n128_f64[0] = __chkstk_darwin();
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = static Font.callout.getter(v12);
  KeyPath = swift_getKeyPath(&unk_10AF548);
  sub_5C238(v42, (uint64_t)v5, &qword_1509EF0);
  v17 = (uint64_t *)&v5[*(int *)(v3 + 36)];
  *v17 = KeyPath;
  v17[1] = v15;
  v19 = static Font.Weight.semibold.getter(v18);
  v20 = sub_E41F80();
  View.fontWeight(_:)(*(_QWORD *)&v19, 0, v3, v20);
  sub_56024((uint64_t)v5, &qword_1509F40);
  v21 = type metadata accessor for Text.Case(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v2, 1, 1, v21);
  v22 = swift_getKeyPath(&unk_10AF660);
  v23 = (uint64_t *)&v11[*(int *)(v9 + 36)];
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508F98);
  sub_5C238((uint64_t)v2, (uint64_t)v23 + *(int *)(v24 + 28), &qword_1508FA0);
  *v23 = v22;
  v25 = v43;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v11, v8, v43);
  sub_56024((uint64_t)v2, &qword_1508FA0);
  v26 = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v25);
  v27 = static Edge.Set.horizontal.getter(v26);
  v28 = v27;
  if (qword_15061F8 != -1)
    v27 = swift_once(&qword_15061F8, sub_E40EB8);
  v29 = EdgeInsets.init(_all:)(v27, *(double *)&qword_1509C90);
  v31 = v30;
  v33 = v32;
  v35 = v34;
  sub_5C238((uint64_t)v11, (uint64_t)v14, &qword_1509F38);
  v36 = &v14[*(int *)(v44 + 36)];
  *v36 = v28;
  *((double *)v36 + 1) = v29;
  *((_QWORD *)v36 + 2) = v31;
  *((_QWORD *)v36 + 3) = v33;
  *((_QWORD *)v36 + 4) = v35;
  v36[40] = 0;
  sub_56024((uint64_t)v11, &qword_1509F38);
  if (qword_1506020 != -1)
    swift_once(&qword_1506020, sub_DD0094);
  v44 = static EdgeInsets.zero;
  v37 = qword_1583258;
  v38 = unk_1583260;
  v39 = v45;
  sub_5C238((uint64_t)v14, v45, &qword_1509F28);
  v40 = v39 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1509EF8) + 36);
  *(_OWORD *)v40 = v44;
  *(_QWORD *)(v40 + 16) = v37;
  *(_QWORD *)(v40 + 24) = v38;
  *(_BYTE *)(v40 + 32) = 0;
  return sub_56024((uint64_t)v14, &qword_1509F28);
}

uint64_t sub_E3D3DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t KeyPath;
  __n128 v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v55 = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1508FA0);
  __chkstk_darwin();
  v50 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509FE8);
  v51 = *(_QWORD *)(v10 - 8);
  v52 = v10;
  __chkstk_darwin();
  v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509FC8);
  __chkstk_darwin();
  v48 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509FB8);
  v14.n128_f64[0] = __chkstk_darwin();
  v54 = (uint64_t)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = static Font.callout.getter(v14);
  KeyPath = swift_getKeyPath(&unk_10AF548);
  v56 = a1;
  v57 = a2;
  v58 = a3 & 1;
  v59 = a4;
  v60 = KeyPath;
  v61 = v16;
  sub_AF8D8(a1, a2, a3 & 1);
  swift_bridgeObjectRetain();
  v19 = static Font.Weight.semibold.getter(v18);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509FD0);
  v21 = sub_E42320(&qword_1509FD8, &qword_1509FD0, (unint64_t *)&unk_150BD10, &qword_1508FE8);
  View.fontWeight(_:)(*(_QWORD *)&v19, 0, v20, v21);
  sub_AF8E8(a1, a2, a3 & 1);
  v22 = (uint64_t)v48;
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v23 = type metadata accessor for Text.Case(0);
  v24 = (uint64_t)v50;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v50, 1, 1, v23);
  v25 = swift_getKeyPath(&unk_10AF660);
  v26 = (uint64_t *)(v22 + *(int *)(v49 + 36));
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1508F98);
  sub_5C238(v24, (uint64_t)v26 + *(int *)(v27 + 28), &qword_1508FA0);
  *v26 = v25;
  v29 = v51;
  v28 = v52;
  (*(void (**)(uint64_t, char *, uint64_t))(v51 + 16))(v22, v12, v52);
  sub_56024(v24, &qword_1508FA0);
  v30 = (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v12, v28);
  v31 = static Edge.Set.horizontal.getter(v30);
  v32 = v31;
  if (qword_15061F8 != -1)
    v31 = swift_once(&qword_15061F8, sub_E40EB8);
  v33 = EdgeInsets.init(_all:)(v31, *(double *)&qword_1509C90);
  v35 = v34;
  v37 = v36;
  v39 = v38;
  v40 = v54;
  sub_5C238(v22, v54, &qword_1509FC8);
  v41 = v40 + *(int *)(v53 + 36);
  *(_BYTE *)v41 = v32;
  *(double *)(v41 + 8) = v33;
  *(_QWORD *)(v41 + 16) = v35;
  *(_QWORD *)(v41 + 24) = v37;
  *(_QWORD *)(v41 + 32) = v39;
  *(_BYTE *)(v41 + 40) = 0;
  sub_56024(v22, &qword_1509FC8);
  if (qword_1506020 != -1)
    swift_once(&qword_1506020, sub_DD0094);
  v53 = static EdgeInsets.zero;
  v42 = qword_1583258;
  v43 = unk_1583260;
  v44 = v55;
  sub_5C238(v40, v55, &qword_1509FB8);
  v45 = v44 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1509EE0) + 36);
  *(_OWORD *)v45 = v53;
  *(_QWORD *)(v45 + 16) = v42;
  *(_QWORD *)(v45 + 24) = v43;
  *(_BYTE *)(v45 + 32) = 0;
  return sub_56024(v40, &qword_1509FB8);
}

uint64_t sub_E3D7C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  _OWORD *v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(unsigned __int8 *)(a1 + 32);
  v5 = type metadata accessor for RazzmatazzController(0);
  v6 = sub_4DD24(&qword_1509E28, type metadata accessor for RazzmatazzController, (uint64_t)&unk_10AE118);
  v7 = StateObject.wrappedValue.getter(v2, v3, v4, v5, v6);
  KeyPath = swift_getKeyPath(&unk_10AF690);
  swift_getKeyPath(&unk_10AF6B8);
  static Published.subscript.getter(&v21, v7, KeyPath);
  swift_release();
  swift_release();
  swift_release();
  v19 = v21;
  v9 = swift_getKeyPath(&unk_10AF6E0);
  v21 = *(_OWORD *)(a1 + 40);
  v20 = *(_QWORD *)(a1 + 56);
  v10 = (_OWORD *)swift_allocObject(&unk_13C9BE0, 80, 7);
  v11 = *(_OWORD *)(a1 + 16);
  v10[1] = *(_OWORD *)a1;
  v10[2] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v10[3] = *(_OWORD *)(a1 + 32);
  v10[4] = v12;
  swift_retain();
  KeyValueObservationTrigger.keyPath.getter(v2, v3);
  sub_2051C8((uint64_t)&v21);
  sub_3B3AF4(&v20);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1507590);
  v14 = type metadata accessor for RazzmatazzView.CompactListCell(0);
  v15 = sub_5C150(&qword_1509090, &qword_1507590, (uint64_t)&protocol conformance descriptor for [A]);
  v16 = sub_4DD24(&qword_1509098, type metadata accessor for Razzmatazz, (uint64_t)&protocol conformance descriptor for Razzmatazz);
  v17 = sub_4DD24(&qword_1509FA0, type metadata accessor for RazzmatazzView.CompactListCell, (uint64_t)&unk_10AF4F8);
  return ForEach<>.init(_:id:content:)(&v19, v9, sub_E423B4, v10, v13, v14, v15, v16, v17);
}

double sub_E3D9C4@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  double result;

  sub_5BDB8(a1, a3, type metadata accessor for Razzmatazz);
  v6 = *a2;
  v5 = a2[1];
  v7 = (_QWORD *)(a3 + *(int *)(type metadata accessor for RazzmatazzView.CompactListCell(0) + 20));
  *v7 = v6;
  v7[1] = v5;
  *(_QWORD *)&result = swift_retain().n128_u64[0];
  return result;
}

uint64_t sub_E3DA18(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  __n128 v4;
  __n128 v5;
  uint64_t v6;
  _QWORD *v7;

  v1[2] = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_15085D0);
  v1[3] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v1[4] = type metadata accessor for MainActor(0);
  v1[5] = static MainActor.shared.getter(v4);
  v1[6] = static MainActor.shared.getter(v5);
  v6 = *(_QWORD *)(a1 + 56);
  v7 = (_QWORD *)swift_task_alloc(dword_1509E24);
  v1[7] = v7;
  *v7 = v1;
  v7[1] = sub_E3DAB0;
  return sub_E4157C(v6);
}

uint64_t sub_E3DAB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  *(_QWORD *)(*(_QWORD *)v1 + 64) = a1;
  swift_task_dealloc(v2);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  return swift_task_switch(sub_E3DB28, v4, v5);
}

uint64_t sub_E3DB28()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  v1 = v0[8];
  v3 = v0[3];
  v2 = v0[4];
  v4 = v0[2];
  swift_release();
  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = *(unsigned __int8 *)(v4 + 32);
  v8 = type metadata accessor for RazzmatazzController(0);
  v9 = sub_4DD24(&qword_1509E28, type metadata accessor for RazzmatazzController, (uint64_t)&unk_10AE118);
  v10 = StateObject.wrappedValue.getter(v5, v6, v7, v8, v9);
  v11 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v3, 1, 1, v11);
  swift_retain();
  swift_bridgeObjectRetain();
  v13 = static MainActor.shared.getter(v12);
  v14 = (_QWORD *)swift_allocObject(&unk_13C9BB8, 48, 7);
  v14[2] = v13;
  v14[3] = &protocol witness table for MainActor;
  v14[4] = v10;
  v14[5] = v1;
  sub_E08E7C(v3, (uint64_t)&unk_1509ED8, (uint64_t)v14);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v15 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_E42684, v15, v16);
}

uint64_t sub_E3DC7C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_1509CCC);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_C3150;
  return sub_E3DA18(v0 + 16);
}

uint64_t sub_E3DCC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(unsigned __int8 *)(a1 + 32);
  v6 = type metadata accessor for RazzmatazzController(0);
  v7 = sub_4DD24(&qword_1509E28, type metadata accessor for RazzmatazzController, (uint64_t)&unk_10AE118);
  v8 = StateObject.wrappedValue.getter(v3, v4, v5, v6, v7);
  *(_QWORD *)a2 = ObservedObject.init(wrappedValue:)(v8, v6, v7);
  *(_QWORD *)(a2 + 8) = v9;
  *(_QWORD *)(a2 + 16) = sub_E2611C;
  *(_QWORD *)(a2 + 24) = 0;
  *(_BYTE *)(a2 + 32) = 0;
  v10 = (_QWORD *)(a2 + *(int *)(type metadata accessor for CitySelectionView(0) + 24));
  *v10 = swift_getKeyPath(&unk_10AF630);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CE90);
  return swift_storeEnumTagMultiPayload(v10, v11, 0);
}

uint64_t sub_E3DD9C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_E3DCC8(v1 + 16, a1);
}

unint64_t sub_E3DDA4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1509CE0;
  if (!qword_1509CE0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1509CA0);
    sub_5C150(&qword_1509CE8, &qword_1509C98, (uint64_t)&protocol conformance descriptor for List<A, B>);
    sub_4DD24(&qword_1508E58, (uint64_t (*)(uint64_t))&type metadata accessor for _TaskModifier, (uint64_t)&protocol conformance descriptor for _TaskModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1509CE0);
  }
  return result;
}

uint64_t sub_E3DE40(uint64_t a1, double a2)
{
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t OpaqueTypeConformance2;
  uint64_t v16;
  _BYTE v18[16];
  uint64_t v19;
  _QWORD v20[4];

  type metadata accessor for ToolbarItemPlacement(0, a2);
  __chkstk_darwin();
  v4 = &v18[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509D00);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  static ToolbarItemPlacement.topBarTrailing.getter(v9);
  v19 = a1;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509E60);
  v11 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1509E68);
  v12 = type metadata accessor for ButtonMenuStyle(255);
  v13 = sub_5C150(&qword_1509E70, &qword_1509E68, (uint64_t)&protocol conformance descriptor for Menu<A, B>);
  v14 = sub_4DD24(&qword_1509E78, (uint64_t (*)(uint64_t))&type metadata accessor for ButtonMenuStyle, (uint64_t)&protocol conformance descriptor for ButtonMenuStyle);
  v20[0] = v11;
  v20[1] = v12;
  v20[2] = v13;
  v20[3] = v14;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v20, &opaque type descriptor for <<opaque return type of View.menuStyle<A>(_:)>>, 1);
  ToolbarItem<>.init(placement:content:)(v4, sub_E41D58, v18, v10, OpaqueTypeConformance2);
  v16 = sub_5C150(&qword_1509D08, &qword_1509D00, (uint64_t)&protocol conformance descriptor for ToolbarItem<A, B>);
  static ToolbarContentBuilder.buildBlock<A>(_:)(v8, v5, v16);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_E3DFEC(double a1)
{
  uint64_t v1;

  return sub_E3DE40(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_E3DFF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[2];
  _BYTE v19[16];
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;

  v18[1] = a2;
  v3 = type metadata accessor for ButtonMenuStyle(0);
  v18[0] = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509E68);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = a1;
  v20 = a1;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509E80);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509E88);
  v12 = sub_E41D70();
  v13 = sub_5C150(&qword_1509EA8, &qword_1509E88, (uint64_t)&protocol conformance descriptor for Picker<A, B, C>);
  v14 = Menu.init(content:label:)(sub_E41D60, v21, sub_E41D68, v19, v10, v11, v12, v13);
  ButtonMenuStyle.init()(v14);
  v15 = sub_5C150(&qword_1509E70, &qword_1509E68, (uint64_t)&protocol conformance descriptor for Menu<A, B>);
  v16 = sub_4DD24(&qword_1509E78, (uint64_t (*)(uint64_t))&type metadata accessor for ButtonMenuStyle, (uint64_t)&protocol conformance descriptor for ButtonMenuStyle);
  View.menuStyle<A>(_:)(v5, v6, v3, v15, v16);
  (*(void (**)(char *, uint64_t))(v18[0] + 8))(v5, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_E3E1B8(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v5;
  _QWORD v6[2];

  v6[0] = 0;
  v6[1] = 0xE000000000000000;
  AppStorage.projectedValue.getter(&v5, a1);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509EB0);
  v2 = sub_5C150(&qword_1509EB8, &qword_1509EB0, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  v3 = sub_DD0BF8();
  return Picker<>.init<A>(_:selection:content:)(v6, &v5, sub_E3E280, 0, &type metadata for Bool, v1, &type metadata for String, &protocol witness table for Bool, v2, v3);
}

uint64_t sub_E3E280@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v27 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509EC0);
  v25 = v1;
  __chkstk_darwin();
  v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509C40);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509EC8);
  __chkstk_darwin();
  v26 = (uint64_t)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v11 = (char *)&v24 - v10;
  __chkstk_darwin();
  v13 = (char *)&v24 - v12;
  __chkstk_darwin();
  v15 = (char *)&v24 - v14;
  v16 = LocalizedStringKey.init(stringLiteral:)(7105601, 0xE300000000000000);
  Label<>.init(_:systemImage:)(v16);
  v17 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v17(v3, v7, v4);
  v3[*(int *)(v1 + 36)] = 0;
  sub_5C238((uint64_t)v3, (uint64_t)v13, &qword_1509EC0);
  v13[*(int *)(v8 + 36)] = 0;
  sub_56024((uint64_t)v3, &qword_1509EC0);
  v18 = *(void (**)(char *, uint64_t))(v5 + 8);
  v18(v7, v4);
  sub_5C090((uint64_t)v13, (uint64_t)v15, &qword_1509EC8);
  v19 = LocalizedStringKey.init(stringLiteral:)(0x657469726F766146, 0xE900000000000073);
  Label<>.init(_:systemImage:)(v19);
  v17(v3, v7, v4);
  v3[*(int *)(v25 + 36)] = 1;
  sub_5C238((uint64_t)v3, (uint64_t)v11, &qword_1509EC0);
  v11[*(int *)(v8 + 36)] = 1;
  sub_56024((uint64_t)v3, &qword_1509EC0);
  v18(v7, v4);
  sub_5C090((uint64_t)v11, (uint64_t)v13, &qword_1509EC8);
  sub_5C238((uint64_t)v15, (uint64_t)v11, &qword_1509EC8);
  v20 = v26;
  sub_5C238((uint64_t)v13, v26, &qword_1509EC8);
  v21 = v27;
  sub_5C238((uint64_t)v11, v27, &qword_1509EC8);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509ED0);
  sub_5C238(v20, v21 + *(int *)(v22 + 48), &qword_1509EC8);
  sub_56024((uint64_t)v13, &qword_1509EC8);
  sub_56024((uint64_t)v15, &qword_1509EC8);
  sub_56024(v20, &qword_1509EC8);
  return sub_56024((uint64_t)v11, &qword_1509EC8);
}

uint64_t sub_E3E59C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  _QWORD *v8;
  __n128 v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t result;
  id v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;

  __swift_instantiateConcreteTypeFromMangledName(&qword_150C380);
  __chkstk_darwin();
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = Image.init(systemName:)(0xD000000000000026, 0x80000000010D5180);
  static SymbolRenderingMode.palette.getter();
  v5 = type metadata accessor for SymbolRenderingMode(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v3, 0, 1, v5);
  v6 = Image.symbolRenderingMode(_:)(v3, v4);
  swift_release();
  sub_56024((uint64_t)v3, &qword_150C380);
  v8 = AppStorage.wrappedValue.getter((uint64_t *)((char *)&v18 + 1), v7);
  if (BYTE1(v18) == 1)
    v10 = static Color.white.getter(v9);
  else
    v10 = static Color.accentColor.getter(v8);
  v12 = v10;
  v13 = AppStorage.wrappedValue.getter(&v18, v11);
  if (v18 == 1)
  {
    result = static Color.accentColor.getter(v13);
  }
  else
  {
    v15 = objc_msgSend((id)objc_opt_self(UIColor), "tertiarySystemFillColor");
    result = Color.init(uiColor:)(v15, v16);
  }
  *a1 = v6;
  a1[1] = v12;
  a1[2] = result;
  return result;
}

double sub_E3E708(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  double result;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __int128 v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  char v20;

  __swift_instantiateConcreteTypeFromMangledName(&qword_15085D0);
  result = __chkstk_darwin();
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1 != *a2)
  {
    v9 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
    type metadata accessor for MainActor(0);
    v10 = *(_OWORD *)(a3 + 16);
    v20 = *(_BYTE *)(a3 + 32);
    v18 = *(_OWORD *)(a3 + 40);
    v19 = v10;
    v17 = *(_QWORD *)(a3 + 56);
    swift_retain();
    sub_686F54((uint64_t *)&v19);
    sub_2051C8((uint64_t)&v18);
    sub_3B3AF4(&v17);
    v12 = static MainActor.shared.getter(v11);
    v13 = swift_allocObject(&unk_13C9B68, 96, 7);
    *(_QWORD *)(v13 + 16) = v12;
    *(_QWORD *)(v13 + 24) = &protocol witness table for MainActor;
    v14 = *(_OWORD *)(a3 + 16);
    *(_OWORD *)(v13 + 32) = *(_OWORD *)a3;
    *(_OWORD *)(v13 + 48) = v14;
    v15 = *(_OWORD *)(a3 + 48);
    *(_OWORD *)(v13 + 64) = *(_OWORD *)(a3 + 32);
    *(_OWORD *)(v13 + 80) = v15;
    sub_E08E7C((uint64_t)v8, (uint64_t)&unk_1509E18, v13);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_E3E844(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2;

  return sub_E3E708(a1, a2, v2 + 16);
}

uint64_t sub_E3E84C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of RazzmatazzView.body>>, 1);
}

uint64_t sub_E3E85C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;
  __n128 v7;
  __n128 v8;
  uint64_t v9;
  _QWORD *v10;

  v4[2] = a4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_15085D0);
  v4[3] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4[4] = type metadata accessor for MainActor(0);
  v4[5] = static MainActor.shared.getter(v7);
  v4[6] = static MainActor.shared.getter(v8);
  v9 = *(_QWORD *)(a4 + 56);
  v10 = (_QWORD *)swift_task_alloc(dword_1509E24);
  v4[7] = v10;
  *v10 = v4;
  v10[1] = sub_E3E8F4;
  return sub_E4157C(v9);
}

uint64_t sub_E3E8F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  *(_QWORD *)(*(_QWORD *)v1 + 64) = a1;
  swift_task_dealloc(v2);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  return swift_task_switch(sub_E3E96C, v4, v5);
}

uint64_t sub_E3E96C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  v1 = v0[8];
  v3 = v0[3];
  v2 = v0[4];
  v4 = v0[2];
  swift_release();
  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = *(unsigned __int8 *)(v4 + 32);
  v8 = type metadata accessor for RazzmatazzController(0);
  v9 = sub_4DD24(&qword_1509E28, type metadata accessor for RazzmatazzController, (uint64_t)&unk_10AE118);
  v10 = StateObject.wrappedValue.getter(v5, v6, v7, v8, v9);
  v11 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v3, 1, 1, v11);
  swift_retain();
  swift_bridgeObjectRetain();
  v13 = static MainActor.shared.getter(v12);
  v14 = (_QWORD *)swift_allocObject(&unk_13C9B90, 48, 7);
  v14[2] = v13;
  v14[3] = &protocol witness table for MainActor;
  v14[4] = v10;
  v14[5] = v1;
  sub_E08E7C(v3, (uint64_t)&unk_1509E30, (uint64_t)v14);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v15 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_E3EABC, v15, v16);
}

uint64_t sub_E3EABC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_release(*(_QWORD *)(v0 + 40));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_E3EAF8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  double *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  __int128 v51;
  uint64_t v52;

  v52 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1509DA0);
  __chkstk_darwin();
  v3 = (double *)((char *)&v51 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509DA8);
  __chkstk_darwin();
  v6 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509DB0);
  __chkstk_darwin();
  v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509DB8);
  v11 = __chkstk_darwin();
  v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = static VerticalAlignment.center.getter(v11);
  if (qword_15061F8 != -1)
    swift_once(&qword_15061F8, sub_E40EB8);
  v15 = *(double *)&qword_1509C90;
  *(_QWORD *)v3 = v14;
  v3[1] = v15;
  *((_BYTE *)v3 + 16) = 0;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509DC0);
  v17 = sub_E3EE50(v1, (uint64_t)v3 + *(int *)(v16 + 44));
  v18 = static Edge.Set.all.getter(v17);
  v19 = v18;
  v20 = EdgeInsets.init(_all:)(v18, v15);
  v22 = v21;
  v24 = v23;
  v26 = v25;
  sub_5C238((uint64_t)v3, (uint64_t)v6, &qword_1509DA0);
  v27 = &v6[*(int *)(v4 + 36)];
  *v27 = v19;
  *((double *)v27 + 1) = v20;
  *((_QWORD *)v27 + 2) = v22;
  *((_QWORD *)v27 + 3) = v24;
  *((_QWORD *)v27 + 4) = v26;
  v27[40] = 0;
  v28 = sub_56024((uint64_t)v3, &qword_1509DA0);
  v29 = static Edge.Set.leading.getter(v28);
  v30 = v29;
  if (qword_15061F0 != -1)
    v29 = swift_once(&qword_15061F0, sub_E40EA8);
  v31 = EdgeInsets.init(_all:)(v29, *(double *)&qword_1509C88);
  v33 = v32;
  v35 = v34;
  v37 = v36;
  sub_5C238((uint64_t)v6, (uint64_t)v9, &qword_1509DA8);
  v38 = &v9[*(int *)(v7 + 36)];
  *v38 = v30;
  *((double *)v38 + 1) = v31;
  *((_QWORD *)v38 + 2) = v33;
  *((_QWORD *)v38 + 3) = v35;
  *((_QWORD *)v38 + 4) = v37;
  v38[40] = 0;
  sub_56024((uint64_t)v6, &qword_1509DA8);
  if (qword_1506020 != -1)
    swift_once(&qword_1506020, sub_DD0094);
  v51 = static EdgeInsets.zero;
  v39 = qword_1583258;
  v40 = unk_1583260;
  sub_5C238((uint64_t)v9, (uint64_t)v13, &qword_1509DB0);
  v41 = &v13[*(int *)(v10 + 36)];
  *(_OWORD *)v41 = v51;
  *((_QWORD *)v41 + 2) = v39;
  *((_QWORD *)v41 + 3) = v40;
  v41[32] = 0;
  sub_56024((uint64_t)v9, &qword_1509DB0);
  v43 = static Alignment.leading.getter(v42);
  v45 = v44;
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509DC8);
  v47 = v52;
  v48 = v52 + *(int *)(v46 + 36);
  sub_E3FC50(v48);
  v49 = (uint64_t *)(v48 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1509DD0) + 36));
  *v49 = v43;
  v49[1] = v45;
  return sub_5C090((uint64_t)v13, v47, &qword_1509DB8);
}

uint64_t sub_E3EE50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  unsigned __int8 v31;
  unsigned __int8 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned __int8 v37;
  unsigned __int8 v38;
  unsigned __int8 v39;
  unsigned __int8 v40;
  uint64_t v41;
  uint64_t v42;
  int *v43;
  _OWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  uint64_t (**v58)();
  uint64_t v60;
  uint64_t KeyPath;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  __int16 v85;
  char v86;
  _BYTE v87[7];
  unsigned __int8 v88;
  _BYTE v89[7];
  unsigned __int8 v90;
  _BYTE v91[7];
  unsigned __int8 v92;
  _BYTE v93[7];
  unsigned __int8 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  _OWORD v102[2];
  uint64_t v103;
  uint64_t v104;
  unsigned __int8 v105;
  _BYTE v106[7];
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char v117;
  _BYTE v118[7];
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char v122;

  v70 = a2;
  v66 = *(_QWORD *)(type metadata accessor for RazzmatazzView.CompactListCell(0) - 8);
  __chkstk_darwin();
  v67 = v3;
  v69 = (uint64_t)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v4 = *(_QWORD *)(v77 - 8);
  __chkstk_darwin();
  v6 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CEE0);
  __chkstk_darwin();
  v10 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509C10);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin();
  v14 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_150BBF0);
  __chkstk_darwin();
  v16 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509C18);
  __chkstk_darwin();
  v79 = (uint64_t)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v78 = (uint64_t)&v60 - v18;
  type metadata accessor for Razzmatazz(0);
  v68 = a1;
  sub_DCC264(v10);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF20);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v8, 6, 10, v19);
  if (qword_15061E8 != -1)
    swift_once(&qword_15061E8, sub_E4012C);
  v80 = qword_1509C80;
  v81 = 0;
  v82 = qword_1509C80;
  v83 = 0;
  v84 = 0;
  v85 = 513;
  v20 = v77;
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v77);
  static ArtworkImage.with(_:placeholder:size:reusePolicy:)((uint64_t)v10, (uint64_t)v8, (uint64_t)&v80, (uint64_t)v6, (uint64_t)v14);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v20);
  sub_5C0DC((uint64_t)v8, type metadata accessor for ArtworkImage.Placeholder);
  sub_56024((uint64_t)v10, (uint64_t *)&unk_150CEE0);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v16, v14, v11);
  v21 = &v16[*(int *)(v75 + 36)];
  *(_QWORD *)v21 = 0;
  *((_QWORD *)v21 + 1) = 0;
  v21[16] = 1;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (qword_15061B0 != -1)
    swift_once(&qword_15061B0, sub_E1B804);
  v22 = static Border.artwork;
  v23 = qword_1583DF0;
  v24 = byte_1583DF8;
  v25 = v79;
  sub_5C238((uint64_t)v16, v79, &qword_150BBF0);
  v26 = v25 + *(int *)(v76 + 36);
  *(_QWORD *)v26 = v22;
  *(_QWORD *)(v26 + 8) = v23;
  *(_BYTE *)(v26 + 16) = v24;
  *(_QWORD *)(v26 + 24) = 0;
  *(_QWORD *)(v26 + 32) = 0;
  *(_BYTE *)(v26 + 40) = 1;
  swift_retain();
  sub_56024((uint64_t)v16, &qword_150BBF0);
  v27 = v78;
  v28 = sub_5C090(v25, v78, &qword_1509C18);
  v65 = static HorizontalAlignment.leading.getter(v28);
  if (qword_15061F0 != -1)
    swift_once(&qword_15061F0, sub_E40EA8);
  v75 = qword_1509C88;
  v29 = v68;
  sub_E3F594(v68, &v103);
  v30 = v105;
  v73 = v104;
  v74 = v107;
  v76 = v109;
  v77 = v108;
  v31 = v110;
  v62 = v112;
  v63 = v111;
  v71 = v103;
  v72 = v113;
  v32 = v114;
  v64 = v115;
  KeyPath = swift_getKeyPath(&unk_10AF5D8);
  v94 = 0;
  v92 = v30;
  v90 = v31;
  v88 = v32;
  v86 = 0;
  v33 = v69;
  sub_5BDB8(v29, v69, type metadata accessor for RazzmatazzView.CompactListCell);
  v34 = *(unsigned __int8 *)(v66 + 80);
  v35 = (v34 + 16) & ~v34;
  v36 = swift_allocObject(&unk_13C9B40, v35 + v67, v34 | 7);
  sub_5C04C(v33, v36 + v35, type metadata accessor for RazzmatazzView.CompactListCell);
  sub_5C238(v27, v25, &qword_1509C18);
  v37 = v94;
  LODWORD(v66) = v94;
  v38 = v92;
  LODWORD(v67) = v92;
  v39 = v90;
  LODWORD(v68) = v90;
  v40 = v88;
  LODWORD(v69) = v88;
  LOBYTE(v33) = v86;
  v41 = v25;
  v42 = v70;
  sub_5C238(v41, v70, &qword_1509C18);
  v43 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1509DF8);
  v44 = (_OWORD *)(v42 + v43[12]);
  v45 = v65;
  *(_QWORD *)&v95 = v65;
  *((_QWORD *)&v95 + 1) = v75;
  LOBYTE(v96) = v37;
  *(_DWORD *)((char *)&v96 + 1) = *(_DWORD *)v93;
  DWORD1(v96) = *(_DWORD *)&v93[3];
  *((_QWORD *)&v96 + 1) = v71;
  *(_QWORD *)&v97 = v73;
  BYTE8(v97) = v38;
  *(_DWORD *)((char *)&v97 + 9) = *(_DWORD *)v91;
  HIDWORD(v97) = *(_DWORD *)&v91[3];
  *(_QWORD *)&v98 = v74;
  *((_QWORD *)&v98 + 1) = v77;
  *(_QWORD *)&v99 = v76;
  BYTE8(v99) = v39;
  *(_DWORD *)((char *)&v99 + 9) = *(_DWORD *)v89;
  HIDWORD(v99) = *(_DWORD *)&v89[3];
  v47 = v62;
  v46 = v63;
  *(_QWORD *)&v100 = v63;
  *((_QWORD *)&v100 + 1) = v62;
  *(_QWORD *)&v101 = v72;
  BYTE8(v101) = v40;
  *(_DWORD *)((char *)&v101 + 9) = *(_DWORD *)v87;
  HIDWORD(v101) = *(_DWORD *)&v87[3];
  v48 = v64;
  v49 = KeyPath;
  *(_QWORD *)&v102[0] = v64;
  *((_QWORD *)&v102[0] + 1) = KeyPath;
  *(_QWORD *)&v102[1] = 1;
  BYTE8(v102[1]) = v33;
  v50 = v95;
  v51 = v96;
  v52 = v98;
  v53 = v99;
  v44[2] = v97;
  v44[3] = v52;
  *v44 = v50;
  v44[1] = v51;
  v54 = v100;
  v55 = v101;
  *(_OWORD *)((char *)v44 + 121) = *(_OWORD *)((char *)v102 + 9);
  v56 = v102[0];
  v44[6] = v55;
  v44[7] = v56;
  v44[4] = v53;
  v44[5] = v54;
  v57 = v42 + v43[16];
  *(_QWORD *)v57 = 0;
  *(_BYTE *)(v57 + 8) = 0;
  v58 = (uint64_t (**)())(v42 + v43[20]);
  *v58 = sub_E4104C;
  v58[1] = (uint64_t (*)())v36;
  sub_E41094((uint64_t)&v95);
  swift_retain();
  sub_56024(v78, &qword_1509C18);
  swift_release();
  v103 = v45;
  v104 = v75;
  v105 = v66;
  *(_DWORD *)v106 = *(_DWORD *)v93;
  *(_DWORD *)&v106[3] = *(_DWORD *)&v93[3];
  v107 = v71;
  v108 = v73;
  LOBYTE(v109) = v67;
  *(_DWORD *)((char *)&v109 + 1) = *(_DWORD *)v91;
  HIDWORD(v109) = *(_DWORD *)&v91[3];
  v110 = v74;
  v111 = v77;
  v112 = v76;
  LOBYTE(v113) = v68;
  HIDWORD(v113) = *(_DWORD *)&v89[3];
  *(_DWORD *)((char *)&v113 + 1) = *(_DWORD *)v89;
  v114 = v46;
  v115 = v47;
  v116 = v72;
  v117 = v69;
  *(_DWORD *)&v118[3] = *(_DWORD *)&v87[3];
  *(_DWORD *)v118 = *(_DWORD *)v87;
  v119 = v48;
  v120 = v49;
  v121 = 1;
  v122 = v33;
  sub_E4114C((uint64_t)&v103);
  return sub_56024(v79, &qword_1509C18);
}

double sub_E3F594@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  double v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  __n128 v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  double (*v35)(char *, char *, uint64_t);
  char *v36;
  __n128 v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  Swift::String v45;
  Swift::String v46;
  __n128 v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char v58;
  char *v59;
  char v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(char *, uint64_t);
  double result;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  char *v99;
  char *v100;
  char *v101;
  unint64_t v102;
  int v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char v110;
  char v111;
  __int128 v112;
  _OWORD v113[4];

  v96 = a1;
  v97 = a2;
  type metadata accessor for FormatStyleCapitalizationContext(0);
  __chkstk_darwin();
  v101 = (char *)&v95 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Calendar(0);
  __chkstk_darwin();
  v100 = (char *)&v95 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v99 = (char *)&v95 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = type metadata accessor for TimeZone(0);
  v5 = *(_QWORD *)(v98 - 8);
  __chkstk_darwin();
  v7 = (char *)&v95 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1509E00);
  __chkstk_darwin();
  v9 = (char *)&v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1509E08);
  v10 = __chkstk_darwin();
  v12 = (char *)&v95 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = type metadata accessor for Date.FormatStyle(0, v10);
  v106 = *(_QWORD *)(v109 - 8);
  __chkstk_darwin();
  v107 = (char *)&v95 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Razzmatazz(0);
  *(_QWORD *)&v113[0] = Artist.name.getter(v14);
  *((_QWORD *)&v113[0] + 1) = v15;
  v102 = sub_DD0BF8();
  v16 = Text.init<A>(_:)(v113, &type metadata for String, v102);
  v18 = v17;
  v20 = v19;
  v22 = v21 & 1;
  LODWORD(v113[0]) = static HierarchicalShapeStyle.primary.getter(v23);
  v108 = Text.foregroundStyle<A>(_:)(v113, v16, v18, v22, v20, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v104 = v24;
  v105 = v25;
  v103 = v26 & 1;
  sub_AF8E8(v16, v18, v22);
  v27 = swift_bridgeObjectRelease();
  v28 = static Date.FormatStyle.DateStyle.abbreviated.getter(v27);
  v29 = type metadata accessor for Date.FormatStyle.DateStyle(0, v28);
  v30 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v12, 0, 1, v29);
  static Date.FormatStyle.TimeStyle.omitted.getter(v30);
  v32 = type metadata accessor for Date.FormatStyle.TimeStyle(0, v31);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v9, 0, 1, v32);
  v33 = (char *)(v96 + *(int *)(v14 + 32));
  v34 = type metadata accessor for Razzmatazz.Venue(0);
  v35 = *(double (**)(char *, char *, uint64_t))(v5 + 16);
  v36 = v7;
  v37.n128_f64[0] = v35(v7, &v33[*(int *)(v34 + 32)], v98);
  v38 = v99;
  v39 = static Locale.autoupdatingCurrent.getter(v37);
  v40 = v100;
  v41 = static Calendar.autoupdatingCurrent.getter(v39);
  v42 = v101;
  static FormatStyleCapitalizationContext.unknown.getter(v41);
  v43 = v107;
  Date.FormatStyle.init(date:time:locale:calendar:timeZone:capitalizationContext:)(v12, v9, v38, v40, v36, v42);
  v44 = sub_4DD24(&qword_1508FC8, (uint64_t (*)(uint64_t))&type metadata accessor for Date.FormatStyle, (uint64_t)&protocol conformance descriptor for Date.FormatStyle);
  Date.formatted<A>(_:)(&v112, v43, v109, v44);
  v113[0] = v112;
  v45._countAndFlagsBits = 12288995;
  v45._object = (void *)0xA300000000000000;
  String.append(_:)(v45);
  v46._countAndFlagsBits = Razzmatazz.shortName.getter();
  String.append(_:)(v46);
  v47 = swift_bridgeObjectRelease();
  v48 = v113[0];
  LODWORD(v113[0]) = static HierarchicalShapeStyle.secondary.getter(v47);
  v49 = Text.foregroundStyle<A>(_:)(v113, v48, *((_QWORD *)&v48 + 1), 0, _swiftEmptyArrayStorage, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v51 = v50;
  LOBYTE(v9) = v52;
  v54 = v53;
  swift_bridgeObjectRelease();
  v56 = static Font.footnote.getter(v55);
  v100 = (char *)Text.font(_:)(v56, v49, v51, v9 & 1, v54);
  v99 = v57;
  LOBYTE(v36) = v58;
  v101 = v59;
  swift_release();
  v60 = v36 & 1;
  sub_AF8E8(v49, v51, v9 & 1);
  swift_bridgeObjectRelease();
  v61 = *((_OWORD *)v33 + 3);
  v113[0] = *((_OWORD *)v33 + 2);
  v113[1] = v61;
  v62 = *((_OWORD *)v33 + 5);
  v113[2] = *((_OWORD *)v33 + 4);
  v113[3] = v62;
  *(_QWORD *)&v112 = sub_E28E68(2);
  *((_QWORD *)&v112 + 1) = v63;
  v64 = Text.init<A>(_:)(&v112, &type metadata for String, v102);
  v66 = v65;
  v68 = v67;
  v70 = v69 & 1;
  LODWORD(v112) = static HierarchicalShapeStyle.secondary.getter(v71);
  v72 = Text.foregroundStyle<A>(_:)(&v112, v64, v66, v70, v68, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v74 = v73;
  v76 = v75;
  v78 = v77 & 1;
  sub_AF8E8(v64, v66, v70);
  swift_bridgeObjectRelease();
  v80 = static Font.footnote.getter(v79);
  v81 = Text.font(_:)(v80, v72, v74, v78, v76);
  v83 = v82;
  LOBYTE(v9) = v84;
  v86 = v85;
  swift_release();
  LOBYTE(v9) = v9 & 1;
  sub_AF8E8(v72, v74, v78);
  swift_bridgeObjectRelease();
  v87 = v103;
  LOBYTE(v112) = v103;
  v111 = v60;
  v110 = (char)v9;
  v88 = v108;
  v89 = v97;
  v90 = v104;
  *v97 = v108;
  v89[1] = v90;
  *((_BYTE *)v89 + 16) = v87;
  v91 = (uint64_t)v100;
  v89[3] = v105;
  v89[4] = v91;
  v92 = (uint64_t)v99;
  v89[5] = v99;
  *((_BYTE *)v89 + 48) = v60;
  v89[7] = v101;
  v89[8] = v81;
  v89[9] = v83;
  *((_BYTE *)v89 + 80) = (_BYTE)v9;
  v89[11] = v86;
  sub_AF8D8(v88, v90, v87);
  swift_bridgeObjectRetain();
  sub_AF8D8(v91, v92, v60);
  swift_bridgeObjectRetain();
  sub_AF8D8(v81, v83, (char)v9);
  v93 = *(void (**)(char *, uint64_t))(v106 + 8);
  swift_bridgeObjectRetain();
  v93(v107, v109);
  sub_AF8E8(v81, v83, v110);
  swift_bridgeObjectRelease();
  sub_AF8E8(v91, v92, v111);
  swift_bridgeObjectRelease();
  sub_AF8E8(v108, v90, v112);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_E3FC50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  __n128 v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t KeyPath;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v61 = a1;
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_150BE60);
  __chkstk_darwin();
  v2 = (uint64_t *)((char *)&v52 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = type metadata accessor for Image.Scale(0);
  v56 = *(_QWORD *)(v3 - 8);
  v57 = v3;
  __chkstk_darwin();
  v5 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1509DD8);
  __chkstk_darwin();
  v7 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509DE0);
  __chkstk_darwin();
  v9 = (uint64_t *)((char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509DE8);
  __chkstk_darwin();
  v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509DF0);
  v59 = *(_QWORD *)(v12 - 8);
  v60 = v12;
  __chkstk_darwin();
  v58 = (uint64_t)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for MusicFavoriteStatus(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin();
  v17 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v19 = (char *)&v52 - v18;
  v20 = type metadata accessor for Razzmatazz(0);
  Artist.favoriteStatus.getter(v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v17, enum case for MusicFavoriteStatus.favorited(_:), v14);
  v21 = static MusicFavoriteStatus.== infix(_:_:)(v19, v17);
  v22 = *(void (**)(char *, uint64_t))(v15 + 8);
  v22(v17, v14);
  v22(v19, v14);
  if ((v21 & 1) != 0)
  {
    v23 = Image.init(systemName:)(0x6C69662E72617473, 0xE90000000000006CLL);
    v25 = static Font.Weight.semibold.getter(v24);
    v26 = type metadata accessor for Font.Design(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v7, 1, 1, v26);
    v27 = static Font.system(size:weight:design:)(*(_QWORD *)&v25, 0, v7, 7.0);
    sub_56024((uint64_t)v7, &qword_1509DD8);
    KeyPath = swift_getKeyPath(&unk_10AF548);
    v30 = v56;
    v29 = v57;
    (*(void (**)(char *, _QWORD, uint64_t))(v56 + 104))(v5, enum case for Image.Scale.medium(_:), v57);
    v31 = swift_getKeyPath(&unk_10AF578);
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))((char *)v2 + *(int *)(v54 + 28), v5, v29);
    *v2 = v31;
    sub_5C238((uint64_t)v2, (uint64_t)v9 + *(int *)(v53 + 36), &qword_150BE60);
    *v9 = v23;
    v9[1] = KeyPath;
    v9[2] = v27;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_56024((uint64_t)v2, &qword_150BE60);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v5, v29);
    swift_release();
    swift_release();
    swift_release();
    v33 = static Color.accentColor.getter(v32);
    v34 = swift_getKeyPath(&unk_10AF5A8);
    sub_5C238((uint64_t)v9, (uint64_t)v11, &qword_1509DE0);
    v35 = (uint64_t *)&v11[*(int *)(v55 + 36)];
    *v35 = v34;
    v35[1] = v33;
    v36 = sub_56024((uint64_t)v9, &qword_1509DE0);
    v37 = static Edge.Set.leading.getter(v36);
    v38 = v37;
    if (qword_15061F0 != -1)
      v37 = swift_once(&qword_15061F0, sub_E40EA8);
    v39 = EdgeInsets.init(_all:)(v37, *(double *)&qword_1509C88);
    v41 = v40;
    v43 = v42;
    v45 = v44;
    v46 = v58;
    sub_5C238((uint64_t)v11, v58, &qword_1509DE8);
    v47 = v60;
    v48 = v46 + *(int *)(v60 + 36);
    *(_BYTE *)v48 = v38;
    *(double *)(v48 + 8) = v39;
    *(_QWORD *)(v48 + 16) = v41;
    *(_QWORD *)(v48 + 24) = v43;
    *(_QWORD *)(v48 + 32) = v45;
    *(_BYTE *)(v48 + 40) = 0;
    sub_56024((uint64_t)v11, &qword_1509DE8);
    v49 = v61;
    sub_5C090(v46, v61, &qword_1509DF0);
    v50 = 0;
  }
  else
  {
    v50 = 1;
    v47 = v60;
    v49 = v61;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 56))(v49, v50, 1, v47);
}

void sub_E4012C()
{
  qword_1509C80 = 0x404B000000000000;
}

uint64_t sub_E4013C@<X0>(uint64_t a1@<X8>)
{
  return RazzmatazzView.body.getter(a1);
}

double destroy for RazzmatazzView(uint64_t a1)
{
  double result;

  swift_release();
  sub_14E55C(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
  swift_release();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for RazzmatazzView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  swift_retain();
  KeyValueObservationTrigger.keyPath.getter(v5, v6);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for RazzmatazzView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  KeyValueObservationTrigger.keyPath.getter(v5, v6);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  sub_14E55C(v8, v9);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for RazzmatazzView(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  v4 = *(_BYTE *)(a2 + 32);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = v4;
  sub_14E55C(v5, v6);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  swift_release();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for RazzmatazzView()
{
  return &type metadata for RazzmatazzView;
}

uint64_t sub_E4035C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  void *v10;
  unint64_t v11;
  void *v12;

  v0 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1509CB0);
  v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1509CA8);
  v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1509CF8);
  v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1509CA0);
  v10 = (void *)type metadata accessor for CitySelectionView(255);
  v11 = sub_E3DDA4();
  v12 = (void *)sub_4DD24(&qword_1509CF0, type metadata accessor for CitySelectionView, (uint64_t)&unk_10ADBA0);
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v9, &opaque type descriptor for <<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>, 1);
  v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1509D00);
  v5 = sub_5C150(&qword_1509D08, &qword_1509D00, (uint64_t)&protocol conformance descriptor for ToolbarItem<A, B>);
  v9 = v4;
  v10 = (void *)v5;
  v6 = swift_getOpaqueTypeConformance2(&v9, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
  v9 = v1;
  v10 = (void *)v2;
  v11 = OpaqueTypeConformance2;
  v12 = (void *)v6;
  v7 = swift_getOpaqueTypeConformance2(&v9, &opaque type descriptor for <<opaque return type of View.toolbar<A>(content:)>>, 1);
  v9 = v0;
  v10 = &type metadata for Bool;
  v11 = v7;
  v12 = &protocol witness table for Bool;
  return swift_getOpaqueTypeConformance2(&v9, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
}

uint64_t *sub_E404B4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  id v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  char *v37;
  char *v38;
  void *v39;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v35 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v35 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    v8 = (int *)type metadata accessor for Razzmatazz(0);
    v9 = v8[6];
    v10 = (char *)v4 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for Date(0);
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    v14 = v8[7];
    v15 = (char *)v4 + v14;
    v16 = (char *)a2 + v14;
    v17 = type metadata accessor for Artist(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    v18 = v8[8];
    v19 = (uint64_t *)((char *)v4 + v18);
    v20 = (char *)a2 + v18;
    v21 = *(uint64_t *)((char *)a2 + v18 + 8);
    *v19 = *(uint64_t *)((char *)a2 + v18);
    v19[1] = v21;
    v22 = *(uint64_t *)((char *)a2 + v18 + 24);
    v19[2] = *(uint64_t *)((char *)a2 + v18 + 16);
    v19[3] = v22;
    v23 = *(uint64_t *)((char *)a2 + v18 + 40);
    v19[4] = *(uint64_t *)((char *)a2 + v18 + 32);
    v19[5] = v23;
    v24 = *(uint64_t *)((char *)a2 + v18 + 56);
    v19[6] = *(uint64_t *)((char *)a2 + v18 + 48);
    v19[7] = v24;
    v25 = *(uint64_t *)((char *)a2 + v18 + 72);
    v19[8] = *(uint64_t *)((char *)a2 + v18 + 64);
    v19[9] = v25;
    v26 = *(uint64_t *)((char *)a2 + v18 + 88);
    v19[10] = *(uint64_t *)((char *)a2 + v18 + 80);
    v19[11] = v26;
    v39 = *(void **)((char *)a2 + v18 + 96);
    v19[12] = v39;
    v27 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
    v37 = &v20[v27];
    v38 = (char *)v19 + v27;
    v28 = type metadata accessor for TimeZone(0);
    v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v30 = v39;
    v29(v38, v37, v28);
    v31 = *(int *)(a3 + 20);
    v32 = (uint64_t *)((char *)v4 + v31);
    v33 = (uint64_t *)((char *)a2 + v31);
    v34 = v33[1];
    *v32 = *v33;
    v32[1] = v34;
  }
  swift_retain();
  return v4;
}

_QWORD *sub_E40688(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  id v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  char *v35;
  char *v36;
  void *v37;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v7 = (int *)type metadata accessor for Razzmatazz(0);
  v8 = v7[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for Date(0);
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  v13 = v7[7];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  v17 = v7[8];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (char *)a2 + v17;
  v20 = *(_QWORD *)((char *)a2 + v17 + 8);
  *v18 = *(_QWORD *)((char *)a2 + v17);
  v18[1] = v20;
  v21 = *(_QWORD *)((char *)a2 + v17 + 24);
  v18[2] = *(_QWORD *)((char *)a2 + v17 + 16);
  v18[3] = v21;
  v22 = *(_QWORD *)((char *)a2 + v17 + 40);
  v18[4] = *(_QWORD *)((char *)a2 + v17 + 32);
  v18[5] = v22;
  v23 = *(_QWORD *)((char *)a2 + v17 + 56);
  v18[6] = *(_QWORD *)((char *)a2 + v17 + 48);
  v18[7] = v23;
  v24 = *(_QWORD *)((char *)a2 + v17 + 72);
  v18[8] = *(_QWORD *)((char *)a2 + v17 + 64);
  v18[9] = v24;
  v25 = *(_QWORD *)((char *)a2 + v17 + 88);
  v18[10] = *(_QWORD *)((char *)a2 + v17 + 80);
  v18[11] = v25;
  v37 = *(void **)((char *)a2 + v17 + 96);
  v18[12] = v37;
  v26 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v35 = &v19[v26];
  v36 = (char *)v18 + v26;
  v27 = type metadata accessor for TimeZone(0);
  v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v29 = v37;
  v28(v36, v35, v27);
  v30 = *(int *)(a3 + 20);
  v31 = (_QWORD *)((char *)a1 + v30);
  v32 = (_QWORD *)((char *)a2 + v30);
  v33 = v32[1];
  *v31 = *v32;
  v31[1] = v33;
  swift_retain();
  return a1;
}

_QWORD *sub_E40834(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (int *)type metadata accessor for Razzmatazz(0);
  v7 = v6[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = v6[7];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = v6[8];
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  *v16 = *(_QWORD *)((char *)a2 + v15);
  v16[1] = *(_QWORD *)((char *)a2 + v15 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[2] = v17[2];
  v16[3] = v17[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[4] = v17[4];
  v16[5] = v17[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[6] = v17[6];
  v16[7] = v17[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[8] = v17[8];
  v16[9] = v17[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[10] = v17[10];
  v16[11] = v17[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = (void *)v17[12];
  v19 = (void *)v16[12];
  v16[12] = v18;
  v20 = v18;

  v21 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v22 = (char *)v16 + v21;
  v23 = (char *)v17 + v21;
  v24 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 24))(v22, v23, v24);
  v25 = *(int *)(a3 + 20);
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (_QWORD *)((char *)a2 + v25);
  v28 = v27[1];
  *v26 = *v27;
  v26[1] = v28;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_E40A48(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = (int *)type metadata accessor for Razzmatazz(0);
  v8 = v7[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = v7[7];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  v16 = v7[8];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = *(_OWORD *)((char *)a2 + v16 + 16);
  *(_OWORD *)v17 = *(_OWORD *)((char *)a2 + v16);
  *((_OWORD *)v17 + 1) = v19;
  v20 = *(_OWORD *)((char *)a2 + v16 + 48);
  *((_OWORD *)v17 + 2) = *(_OWORD *)((char *)a2 + v16 + 32);
  *((_OWORD *)v17 + 3) = v20;
  v21 = *(_OWORD *)((char *)a2 + v16 + 80);
  *((_OWORD *)v17 + 4) = *(_OWORD *)((char *)a2 + v16 + 64);
  *((_OWORD *)v17 + 5) = v21;
  *((_QWORD *)v17 + 12) = *(_QWORD *)((char *)a2 + v16 + 96);
  v22 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v23 = &v17[v22];
  v24 = &v18[v22];
  v25 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
  return a1;
}

_QWORD *sub_E40B58(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = (int *)type metadata accessor for Razzmatazz(0);
  v9 = v8[6];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  v13 = v8[7];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = type metadata accessor for Artist(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  v17 = v8[8];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  v20 = *(_QWORD *)((char *)a2 + v17 + 8);
  *v18 = *(_QWORD *)((char *)a2 + v17);
  v18[1] = v20;
  swift_bridgeObjectRelease();
  v21 = v19[3];
  v18[2] = v19[2];
  v18[3] = v21;
  swift_bridgeObjectRelease();
  v22 = v19[5];
  v18[4] = v19[4];
  v18[5] = v22;
  swift_bridgeObjectRelease();
  v23 = v19[7];
  v18[6] = v19[6];
  v18[7] = v23;
  swift_bridgeObjectRelease();
  v24 = v19[9];
  v18[8] = v19[8];
  v18[9] = v24;
  swift_bridgeObjectRelease();
  v25 = v19[11];
  v18[10] = v19[10];
  v18[11] = v25;
  swift_bridgeObjectRelease();
  v26 = (void *)v18[12];
  v18[12] = v19[12];

  v27 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v28 = (char *)v18 + v27;
  v29 = (char *)v19 + v27;
  v30 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
  swift_release();
  return a1;
}

uint64_t sub_E40CDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_E40CE8);
}

uint64_t sub_E40CE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for Razzmatazz(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_E40D64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_E40D70);
}

uint64_t sub_E40D70(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Razzmatazz(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for RazzmatazzView.CompactListCell(uint64_t a1)
{
  uint64_t result;

  result = qword_1509D68;
  if (!qword_1509D68)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for RazzmatazzView.CompactListCell);
  return result;
}

uint64_t sub_E40E24(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for Razzmatazz(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for () + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_E40E98(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1211EEC, 1);
}

void sub_E40EA8()
{
  qword_1509C88 = 0x4010000000000000;
}

void sub_E40EB8()
{
  qword_1509C90 = 0x4028000000000000;
}

uint64_t sub_E40ED0()
{
  return EnvironmentValues.imageScale.getter();
}

uint64_t sub_E40F04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(type metadata accessor for RazzmatazzView.CompactListCell(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = v3 + *(_QWORD *)(v1 + 64);
  v5 = v2 | 7;
  v6 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7 = (int *)type metadata accessor for Razzmatazz(0);
  v8 = v6 + v7[6];
  v9 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = v6 + v7[7];
  v11 = type metadata accessor for Artist(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  v12 = v6 + v7[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v13 = v12 + *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  v14 = type metadata accessor for TimeZone(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  swift_release();
  return swift_deallocObject(v0, v4, v5);
}

uint64_t sub_E4104C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = type metadata accessor for RazzmatazzView.CompactListCell(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return (*(uint64_t (**)(uint64_t))(v0 + ((v2 + 16) & ~v2) + *(int *)(v1 + 20)))(v0 + ((v2 + 16) & ~v2));
}

uint64_t sub_E41094(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(a1 + 64);
  v4 = *(_BYTE *)(a1 + 72);
  v5 = *(_QWORD *)(a1 + 88);
  v6 = *(_QWORD *)(a1 + 96);
  v7 = *(_BYTE *)(a1 + 104);
  sub_AF8D8(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRetain();
  sub_AF8D8(v2, v3, v4);
  swift_bridgeObjectRetain();
  sub_AF8D8(v5, v6, v7);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_E4114C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(a1 + 64);
  v4 = *(_BYTE *)(a1 + 72);
  v5 = *(_QWORD *)(a1 + 88);
  v6 = *(_QWORD *)(a1 + 96);
  v7 = *(_BYTE *)(a1 + 104);
  sub_AF8E8(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRelease();
  sub_AF8E8(v2, v3, v4);
  swift_bridgeObjectRelease();
  sub_AF8E8(v5, v6, v7);
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_E41204()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release();
  sub_14E55C(v0[6], v0[7]);
  swift_release();
  swift_release();
  return swift_deallocObject(v0, 96, 7);
}

uint64_t sub_E4124C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1509E14);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_50F8C;
  return sub_E3E85C(a1, v4, v5, v1 + 32);
}

_QWORD *sub_E412B8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t KeyPath;
  id v20;
  double v21;
  double v22;
  _QWORD *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char *v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[6];
  _QWORD *v35;

  v32 = a2;
  v33 = a3;
  v31 = type metadata accessor for Razzmatazz(0);
  __chkstk_darwin();
  v30 = (uint64_t)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v10 = (char *)&v26 - v9;
  result = _swiftEmptyArrayStorage;
  v35 = _swiftEmptyArrayStorage;
  v12 = *(_QWORD *)(a1 + 16);
  if (v12)
  {
    v26 = v4;
    v29 = a4 & 1;
    v28 = v10 + 96;
    v27 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v13 = a1 + v27;
    v14 = *(_QWORD *)(v8 + 72);
    do
    {
      sub_5BDB8(v13, (uint64_t)v10, type metadata accessor for Razzmatazz);
      v15 = *(void **)&v28[*(int *)(v31 + 32)];
      v16 = type metadata accessor for RazzmatazzController(0);
      v17 = sub_4DD24(&qword_1509E28, type metadata accessor for RazzmatazzController, (uint64_t)&unk_10AE118);
      v18 = StateObject.wrappedValue.getter(v32, v33, v29, v16, v17);
      KeyPath = swift_getKeyPath(&unk_10AF6F8);
      swift_getKeyPath(&unk_10AF720);
      static Published.subscript.getter(v34, v18, KeyPath);
      swift_release();
      swift_release();
      swift_release();
      v20 = objc_msgSend(objc_allocWithZone((Class)CLLocation), "initWithLatitude:longitude:", *(double *)&v34[4], *(double *)&v34[5]);
      swift_bridgeObjectRelease();
      objc_msgSend(v15, "distanceFromLocation:", v20, swift_bridgeObjectRelease().n128_f64[0]);
      v22 = v21;

      if (v22 > 85000.0)
      {
        sub_5C0DC((uint64_t)v10, type metadata accessor for Razzmatazz);
      }
      else
      {
        sub_5C04C((uint64_t)v10, v30, type metadata accessor for Razzmatazz);
        v23 = v35;
        if ((swift_isUniquelyReferenced_nonNull_native(v35) & 1) == 0)
        {
          sub_DDED9C(0, v23[2] + 1, 1);
          v23 = v35;
        }
        v25 = v23[2];
        v24 = v23[3];
        if (v25 >= v24 >> 1)
        {
          sub_DDED9C(v24 > 1, v25 + 1, 1);
          v23 = v35;
        }
        v23[2] = v25 + 1;
        sub_5C04C(v30, (uint64_t)v23 + v27 + v25 * v14, type metadata accessor for Razzmatazz);
      }
      v13 += v14;
      --v12;
    }
    while (v12);
    return v35;
  }
  return result;
}

uint64_t sub_E4157C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;

  v1[8] = a1;
  v2 = type metadata accessor for Artist(0);
  v1[9] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[10] = v3;
  v1[11] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509E38);
  v1[12] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v1[13] = v5;
  v1[14] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509E40);
  v1[15] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v1[16] = v7;
  v1[17] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MusicFavoriteStatus(0);
  v1[18] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v1[19] = v9;
  v1[20] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509E48);
  v1[21] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v1[22] = v11;
  v1[23] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MainActor(0);
  v1[24] = static MainActor.shared.getter(v13);
  v14 = dispatch thunk of Actor.unownedExecutor.getter(v12, &protocol witness table for MainActor);
  v1[25] = v14;
  v1[26] = v15;
  return swift_task_switch(sub_E416BC, v14, v15);
}

uint64_t sub_E416BC()
{
  _QWORD *v0;
  __n128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t KeyPath;
  uint64_t v7;
  __n128 v8;
  _QWORD *v9;

  MusicLibraryRequest.init()(v0[9], &protocol witness table for Artist);
  AppStorage.wrappedValue.getter(v0 + 29, v1);
  if (*((_BYTE *)v0 + 232) == 1)
  {
    v3 = v0[20];
    v2 = v0[21];
    v4 = v0[18];
    v5 = v0[19];
    KeyPath = swift_getKeyPath(&unk_10AF608);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v3, enum case for MusicFavoriteStatus.favorited(_:), v4);
    v7 = sub_4DD24(&qword_1509E58, (uint64_t (*)(uint64_t))&type metadata accessor for MusicFavoriteStatus, (uint64_t)&protocol conformance descriptor for MusicFavoriteStatus);
    MusicLibraryRequest<>.filter<A>(matching:equalTo:)(KeyPath, v3, v2, &protocol witness table for Artist, v7);
    v8 = swift_release();
    (*(void (**)(uint64_t, uint64_t, __n128))(v5 + 8))(v3, v4, v8);
  }
  v9 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibraryRequest.response()[1]);
  v0[27] = v9;
  *v9 = v0;
  v9[1] = sub_E417E4;
  return MusicLibraryRequest.response()(v0[17], v0[21]);
}

uint64_t sub_E417E4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 216);
  *(_QWORD *)(*v1 + 224) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_E41A80;
  else
    v4 = sub_E41844;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 200), *(_QWORD *)(v2 + 208));
}

uint64_t sub_E41844()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, _QWORD);
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = *(_QWORD *)(v0 + 128);
  v1 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 96);
  swift_release();
  MusicLibraryResponse.items.getter(v3);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v5 = sub_5C150(&qword_1509E50, &qword_1509E38, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  v6 = dispatch thunk of Collection.count.getter(v4, v5);
  if (!v6)
  {
LABEL_7:
    v22 = *(_QWORD *)(v0 + 176);
    v21 = *(_QWORD *)(v0 + 184);
    v23 = *(_QWORD *)(v0 + 168);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 96));
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
    v24 = *(_QWORD *)(v0 + 160);
    v25 = *(_QWORD *)(v0 + 136);
    v26 = *(_QWORD *)(v0 + 112);
    v27 = *(_QWORD *)(v0 + 88);
    swift_task_dealloc(*(_QWORD *)(v0 + 184));
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    return (*(uint64_t (**)(_QWORD *))(v0 + 8))(_swiftEmptyArrayStorage);
  }
  v7 = v6;
  v8 = v0 + 56;
  v9 = *(_QWORD *)(v0 + 96);
  sub_DDEDC8(0, v6 & ~(v6 >> 63), 0);
  result = dispatch thunk of Collection.startIndex.getter(v9);
  if ((v7 & 0x8000000000000000) == 0)
  {
    v28 = v0 + 16;
    v11 = *(_QWORD *)(v0 + 80);
    do
    {
      v12 = *(_QWORD *)(v0 + 88);
      v13 = (void (*)(uint64_t, _QWORD))dispatch thunk of Collection.subscript.read(v28, v8, *(_QWORD *)(v0 + 96), v5);
      (*(void (**)(uint64_t))(v11 + 16))(v12);
      v13(v28, 0);
      v14 = v8;
      v15 = v5;
      v17 = _swiftEmptyArrayStorage[2];
      v16 = _swiftEmptyArrayStorage[3];
      if (v17 >= v16 >> 1)
        sub_DDEDC8(v16 > 1, v17 + 1, 1);
      v18 = *(_QWORD *)(v0 + 88);
      v19 = *(_QWORD *)(v0 + 96);
      v20 = *(_QWORD *)(v0 + 72);
      _swiftEmptyArrayStorage[2] = v17 + 1;
      (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))((char *)_swiftEmptyArrayStorage+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v17, v18, v20);
      dispatch thunk of Collection.formIndex(after:)(v14, v19, v15);
      --v7;
      v5 = v15;
      v8 = v14;
    }
    while (v7);
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_E41A80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  swift_release();
  if (qword_15061D8 != -1)
    swift_once(&qword_15061D8, sub_E2FD80);
  v1 = *(_QWORD *)(v0 + 224);
  v2 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v2, (uint64_t)qword_1583E18);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 224);
  if (v6)
  {
    v8 = swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v21 = v9;
    *(_DWORD *)v8 = 136315138;
    *(_QWORD *)(v0 + 48) = v7;
    swift_errorRetain(v7);
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1507690);
    v11 = (char *)String.init<A>(describing:)(v0 + 48, v10);
    *(_QWORD *)(v8 + 4) = sub_DCF730(v11, v12, &v21);
    swift_bridgeObjectRelease();
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl(&dword_0, v4, v5, "Could not load favorite artists error=%s", (uint8_t *)v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 224));
    swift_errorRelease(v7);
  }

  v14 = *(_QWORD *)(v0 + 176);
  v13 = *(_QWORD *)(v0 + 184);
  v15 = *(_QWORD *)(v0 + 168);
  swift_errorRelease(*(_QWORD *)(v0 + 224));
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  v16 = *(_QWORD *)(v0 + 160);
  v17 = *(_QWORD *)(v0 + 136);
  v18 = *(_QWORD *)(v0 + 112);
  v19 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 184));
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(_QWORD *))(v0 + 8))(_swiftEmptyArrayStorage);
}

uint64_t sub_E41C9C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_150954C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_C3150;
  return sub_E2C940(a1, v4, v5, v7, v6);
}

uint64_t sub_E41D14(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return dispatch thunk of LibraryArtistInternalFilter.favoriteStatus.getter(v1, v2);
}

uint64_t sub_E41D58@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_E3DFF4(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_E41D60(__n128 a1)
{
  return sub_E3E1B8(a1);
}

uint64_t sub_E41D68@<X0>(uint64_t *a1@<X8>)
{
  return sub_E3E59C(a1);
}

unint64_t sub_E41D70()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1509E90;
  if (!qword_1509E90)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1509E80);
    sub_5C150(&qword_1509E98, &qword_1509EA0, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier2<A, B>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1509E90);
  }
  return result;
}

uint64_t objectdestroy_29Tm_3()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_bridgeObjectRelease(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_E41E30@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_E3C76C(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_E41E38()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1509F18;
  if (!qword_1509F18)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1509EF8);
    sub_E42594(&qword_1509F20, &qword_1509F28, (void (*)(void))sub_E41ED4);
    sub_5C150(&qword_1509BF8, &qword_150C000, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1509F18);
  }
  return result;
}

unint64_t sub_E41ED4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1509F30;
  if (!qword_1509F30)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1509F38);
    v2[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1509F40);
    v2[1] = sub_E41F80();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>, 1);
    sub_5C150(&qword_1508FE0, &qword_1508F98, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1509F30);
  }
  return result;
}

unint64_t sub_E41F80()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1509F48;
  if (!qword_1509F48)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1509F40);
    sub_5C150(&qword_1509F50, &qword_1509EF0, (uint64_t)&protocol conformance descriptor for HStack<A>);
    sub_5C150((unint64_t *)&unk_150BD10, &qword_1508FE8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1509F48);
  }
  return result;
}

unint64_t sub_E4201C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1509F58;
  if (!qword_1509F58)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1509F10);
    sub_E42088();
    sub_E4212C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1509F58);
  }
  return result;
}

unint64_t sub_E42088()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1509F60;
  if (!qword_1509F60)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1509F68);
    sub_E42320(&qword_1509F70, &qword_1509F78, &qword_1509F80, &qword_1509F88);
    sub_5C150((unint64_t *)&unk_150BD10, &qword_1508FE8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1509F60);
  }
  return result;
}

unint64_t sub_E4212C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1509F90;
  if (!qword_1509F90)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1509F98);
    sub_4DD24(&qword_1509FA0, type metadata accessor for RazzmatazzView.CompactListCell, (uint64_t)&unk_10AF4F8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_1509F90);
  }
  return result;
}

uint64_t sub_E421A8()
{
  uint64_t v0;

  return sub_E3D7C4(*(_QWORD *)(v0 + 16));
}

unint64_t sub_E421B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1509FA8;
  if (!qword_1509FA8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1509EE0);
    sub_E42594(&qword_1509FB0, &qword_1509FB8, (void (*)(void))sub_E4224C);
    sub_5C150(&qword_1509BF8, &qword_150C000, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1509FA8);
  }
  return result;
}

unint64_t sub_E4224C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1509FC0;
  if (!qword_1509FC0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1509FC8);
    v2[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1509FD0);
    v2[1] = sub_E42320(&qword_1509FD8, &qword_1509FD0, (unint64_t *)&unk_150BD10, &qword_1508FE8);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>, 1);
    sub_5C150(&qword_1508FE0, &qword_1508F98, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1509FC0);
  }
  return result;
}

uint64_t sub_E42320(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    sub_5C150(a3, a4, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v8);
    atomic_store(result, a1);
  }
  return result;
}

double sub_E423B4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_E3D9C4(a1, (uint64_t *)(v2 + 16), a2);
}

uint64_t sub_E423D8()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  __int128 v4;

  v4 = *(_OWORD *)(v0 + 56);
  v3 = 1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509CD8);
  return State.wrappedValue.setter(&v3, v1);
}

uint64_t objectdestroyTm_34()
{
  uint64_t v0;

  swift_release();
  sub_14E55C(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  swift_release();
  swift_release();
  return swift_deallocObject(v0, 80, 7);
}

unint64_t sub_E42474()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150A008;
  if (!qword_150A008)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1509DC8);
    sub_E424F8();
    sub_5C150(&qword_150A030, &qword_1509DD0, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150A008);
  }
  return result;
}

unint64_t sub_E424F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150A010;
  if (!qword_150A010)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1509DB8);
    sub_E42594(&qword_150A018, &qword_1509DB0, (void (*)(void))sub_E42600);
    sub_5C150(&qword_1509BF8, &qword_150C000, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150A010);
  }
  return result;
}

uint64_t sub_E42594(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_E42600()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150A020;
  if (!qword_150A020)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1509DA8);
    sub_5C150(&qword_150A028, &qword_1509DA0, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150A020);
  }
  return result;
}

uint64_t Logger.artwork.unsafeMutableAddressor()
{
  return sub_E42968(&qword_1506230, (uint64_t (*)(_QWORD))&type metadata accessor for Logger, (uint64_t)static Logger.artwork, (uint64_t)sub_E4B228);
}

uint64_t MPModelPlaylistType.variant.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unsigned int *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  switch(a1)
  {
    case 0:
      v3 = (unsigned int *)&enum case for Playlist.Variant.regular(_:);
      goto LABEL_10;
    case 1:
      v3 = (unsigned int *)&enum case for Playlist.Variant.smart(_:);
      goto LABEL_10;
    case 2:
      v3 = (unsigned int *)&enum case for Playlist.Variant.genius(_:);
      goto LABEL_10;
    case 3:
      v3 = (unsigned int *)&enum case for Playlist.Variant.folder(_:);
      goto LABEL_10;
    case 4:
    case 5:
    case 6:
    case 8:
      v3 = (unsigned int *)&enum case for Playlist.Variant.subscribed(_:);
      goto LABEL_10;
    case 7:
      v3 = (unsigned int *)&enum case for Playlist.Variant.personalMix(_:);
      goto LABEL_10;
    case 9:
      v3 = (unsigned int *)&enum case for Playlist.Variant.favoriteSongs(_:);
LABEL_10:
      v8 = *v3;
      v9 = type metadata accessor for Playlist.Variant(0);
      v10 = *(_QWORD *)(v9 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 104))(a2, v8, v9);
      v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
      v6 = a2;
      v7 = 0;
      v4 = v9;
      break;
    default:
      v4 = type metadata accessor for Playlist.Variant(0);
      v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56);
      v6 = a2;
      v7 = 1;
      break;
  }
  return v5(v6, v7, 1, v4);
}

uint64_t Playlist.Variant.symbolName.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  uint64_t v8;

  v1 = v0;
  v2 = type metadata accessor for Playlist.Variant(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == enum case for Playlist.Variant.smart(_:))
    return 0x7061687372616567;
  if (v6 == enum case for Playlist.Variant.genius(_:))
    return 0x7375696E6567;
  if (v6 == enum case for Playlist.Variant.folder(_:))
    return 0x7265646C6F66;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return 0x6F6E2E636973756DLL;
}

uint64_t ArtworkImage.ViewModel.init(artwork:cropStyle:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a3, a1, v6);
  v7 = type metadata accessor for ArtworkImage.ViewModel(0);
  return sub_5C090(a2, a3 + *(int *)(v7 + 20), &qword_15070F0);
}

uint64_t Artwork.CropStyle.fallback.unsafeMutableAddressor()
{
  return sub_E42968(&qword_1506220, (uint64_t (*)(_QWORD))&type metadata accessor for Artwork.CropStyle, (uint64_t)static Artwork.CropStyle.fallback, (uint64_t)sub_E4B058);
}

uint64_t sub_E42968(_QWORD *a1, uint64_t (*a2)(_QWORD), uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  if (*a1 != -1)
    swift_once(a1, a4);
  v6 = a2(0);
  return __swift_project_value_buffer(v6, a3);
}

uint64_t Artwork.ImageFormat.fallback.unsafeMutableAddressor()
{
  return sub_E42968(&qword_1506228, (uint64_t (*)(_QWORD))&type metadata accessor for Artwork.ImageFormat, (uint64_t)static Artwork.ImageFormat.fallback, (uint64_t)sub_E4B0C4);
}

uint64_t sub_E429D0@<X0>(uint64_t a1@<X8>)
{
  return sub_E42BE4(&qword_150CE90, (uint64_t (*)(_QWORD))&type metadata accessor for DismissAction, (char *)0x417373696D736944, (char *)0xED00006E6F697463, a1);
}

uint64_t sub_E42A04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  os_log_type_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v15;

  v4 = type metadata accessor for EnvironmentValues(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 0x100) == 0)
  {
    swift_retain();
    v9 = static os_log_type_t.fault.getter(v8);
    v10 = static Log.runtimeIssuesLog.getter();
    if (os_log_type_enabled(v10, v9))
    {
      v11 = swift_slowAlloc(12, -1);
      v12 = swift_slowAlloc(32, -1);
      v15 = v12;
      *(_DWORD *)v11 = 136315138;
      *(_QWORD *)(v11 + 4) = sub_DCF730((char *)0xD000000000000011, (char *)0x800000000110DE30, &v15);
      _os_log_impl(&dword_0, v10, v9, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v11, 0xCu);
      swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v12, -1, -1);
      swift_slowDealloc(v11, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(v7, a1);
    v13 = sub_E55134(a1, a2, 0);
    (*(void (**)(char *, uint64_t, double))(v5 + 8))(v7, v4, v13);
    return v15;
  }
  return a1;
}

uint64_t sub_E42BB0@<X0>(uint64_t a1@<X8>)
{
  return sub_E42BE4((uint64_t *)&unk_1506560, (uint64_t (*)(_QWORD))&type metadata accessor for LayoutDirection, (char *)0x694474756F79614CLL, (char *)0xEF6E6F6974636572, a1);
}

uint64_t sub_E42BE4@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, char *a3@<X2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t v21;
  os_log_type_t v22;
  NSObject *v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  char *v27;
  uint64_t v28;

  v27 = a4;
  v9 = v5;
  v11 = type metadata accessor for EnvironmentValues(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin();
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(a1);
  __chkstk_darwin();
  v17 = (uint64_t *)((char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_5C238(v9, (uint64_t)v17, a1);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v17, v15);
  if ((_DWORD)EnumCaseMultiPayload == 1)
  {
    v19 = a2(0);
    return (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a5, v17, v19);
  }
  else
  {
    v21 = *v17;
    v22 = static os_log_type_t.fault.getter(EnumCaseMultiPayload);
    v23 = static Log.runtimeIssuesLog.getter();
    if (os_log_type_enabled(v23, v22))
    {
      v24 = swift_slowAlloc(12, -1);
      v25 = swift_slowAlloc(32, -1);
      v28 = v25;
      *(_DWORD *)v24 = 136315138;
      *(_QWORD *)(v24 + 4) = sub_DCF730(a3, v27, &v28);
      _os_log_impl(&dword_0, v23, v22, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v24, 0xCu);
      swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v25, -1, -1);
      swift_slowDealloc(v24, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(v14, v21);
    v26 = swift_release();
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v26);
  }
}

uint64_t sub_E42DEC@<X0>(uint64_t a1@<X8>)
{
  return sub_E42BE4(&qword_1506570, (uint64_t (*)(_QWORD))&type metadata accessor for DynamicTypeSize, (char *)0x5463696D616E7944, (char *)0xEF657A6953657079, a1);
}

uint64_t sub_E42E20(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  os_log_type_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  unsigned __int8 v15;

  v4 = type metadata accessor for EnvironmentValues(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
    return a1 & 1;
  swift_retain();
  v9 = static os_log_type_t.fault.getter(v8);
  v10 = static Log.runtimeIssuesLog.getter();
  if (os_log_type_enabled(v10, v9))
  {
    v11 = swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    v14 = v12;
    *(_DWORD *)v11 = 136315138;
    *(_QWORD *)(v11 + 4) = sub_DCF730((char *)0x6C6F6F42, (char *)0xE400000000000000, &v14);
    _os_log_impl(&dword_0, v10, v9, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath(v7, a1);
  sub_270154(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v15;
}

uint64_t sub_E42FAC@<X0>(uint64_t a1@<X8>)
{
  return sub_E42BE4(&qword_15065E8, (uint64_t (*)(_QWORD))&type metadata accessor for ColorScheme, (char *)0x686353726F6C6F43, (char *)0xEB00000000656D65, a1);
}

uint64_t sub_E42FDC@<X0>(uint64_t a1@<X8>)
{
  return sub_E43008(&qword_1506580, &qword_1506880, (char *)0xD000000000000020, (char *)0x80000000010EE900, a1);
}

uint64_t sub_E43008@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, char *a3@<X2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t EnumCaseMultiPayload;
  uint64_t v20;
  os_log_type_t v21;
  NSObject *v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  char *v26;
  uint64_t v27;

  v26 = a4;
  v9 = v5;
  v11 = type metadata accessor for EnvironmentValues(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(a1);
  __chkstk_darwin(v15);
  v17 = (uint64_t *)((char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_5C238(v9, (uint64_t)v17, a1);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v17, v15);
  if ((_DWORD)EnumCaseMultiPayload == 1)
    return sub_5C090((uint64_t)v17, a5, a2);
  v20 = *v17;
  v21 = static os_log_type_t.fault.getter(EnumCaseMultiPayload);
  v22 = static Log.runtimeIssuesLog.getter();
  if (os_log_type_enabled(v22, v21))
  {
    v23 = swift_slowAlloc(12, -1);
    v24 = swift_slowAlloc(32, -1);
    v27 = v24;
    *(_DWORD *)v23 = 136315138;
    *(_QWORD *)(v23 + 4) = sub_DCF730(a3, v26, &v27);
    _os_log_impl(&dword_0, v22, v21, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v23, 0xCu);
    swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v23, -1, -1);
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath(v14, v20);
  v25 = swift_release(v20);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v25);
}

uint64_t sub_E43200(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  os_log_type_t v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v17;
  uint64_t v18;

  v6 = type metadata accessor for EnvironmentValues(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 0x100) != 0)
  {
    sub_E55108(a1, a2);
  }
  else
  {
    swift_retain();
    v11 = static os_log_type_t.fault.getter(v10);
    v12 = static Log.runtimeIssuesLog.getter();
    if (os_log_type_enabled(v12, v11))
    {
      v13 = swift_slowAlloc(12, -1);
      v14 = swift_slowAlloc(32, -1);
      v18 = v14;
      *(_DWORD *)v13 = 136315138;
      *(_QWORD *)(v13 + 4) = sub_DCF730((char *)0xD000000000000019, (char *)0x800000000110DE10, &v18);
      _os_log_impl(&dword_0, v12, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v13, 0xCu);
      swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v14, -1, -1);
      swift_slowDealloc(v13, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(v9, a1);
    v15 = sub_E550CC(a1, a2, a3, 0);
    (*(void (**)(char *, uint64_t, double))(v7 + 8))(v9, v6, v15);
    return v18;
  }
  return a1;
}

uint64_t sub_E433C4(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  os_log_type_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  unsigned __int8 v15;

  v4 = type metadata accessor for EnvironmentValues(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) == 0)
  {
    swift_retain();
    v9 = static os_log_type_t.fault.getter(v8);
    v10 = static Log.runtimeIssuesLog.getter();
    if (os_log_type_enabled(v10, v9))
    {
      v11 = swift_slowAlloc(12, -1);
      v12 = swift_slowAlloc(32, -1);
      v14 = v12;
      *(_DWORD *)v11 = 136315138;
      *(_QWORD *)(v11 + 4) = sub_DCF730((char *)0xD000000000000017, (char *)0x800000000110DDF0, &v14);
      _os_log_impl(&dword_0, v10, v9, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v11, 0xCu);
      swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v12, -1, -1);
      swift_slowDealloc(v11, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(v7, a1);
    sub_270154(a1, 0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v15;
  }
  return a1;
}

uint64_t sub_E43558(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  os_log_type_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v15;
  uint64_t v16;

  v4 = type metadata accessor for EnvironmentValues(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  if ((a2 & 1) == 0)
  {
    v9 = static os_log_type_t.fault.getter(v8);
    v10 = static Log.runtimeIssuesLog.getter();
    if (os_log_type_enabled(v10, v9))
    {
      v11 = swift_slowAlloc(12, -1);
      v12 = swift_slowAlloc(32, -1);
      v16 = v12;
      *(_DWORD *)v11 = 136315138;
      *(_QWORD *)(v11 + 4) = sub_DCF730((char *)0x6C616E6F6974704FLL, (char *)0xEF3E726F6C6F433CLL, &v16);
      _os_log_impl(&dword_0, v10, v9, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v11, 0xCu);
      swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v12, -1, -1);
      swift_slowDealloc(v11, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(v7, a1);
    v13 = j__swift_release_0(a1);
    (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v13);
    return v16;
  }
  return a1;
}

uint64_t sub_E436F4@<X0>(uint64_t a1@<X8>)
{
  return sub_E42BE4((uint64_t *)&unk_1506550, (uint64_t (*)(_QWORD))&type metadata accessor for ColorSchemeContrast, (char *)0xD000000000000013, (char *)0x800000000110DDD0, a1);
}

uint64_t ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, char a7@<W6>, uint64_t a8@<X8>)
{
  *(_QWORD *)a8 = result;
  *(_BYTE *)(a8 + 8) = a2 & 1;
  *(_QWORD *)(a8 + 16) = a3;
  *(_BYTE *)(a8 + 24) = a4 & 1;
  *(_QWORD *)(a8 + 32) = a5;
  *(_BYTE *)(a8 + 40) = a6 & 1;
  *(_BYTE *)(a8 + 41) = a7;
  return result;
}

uint64_t static ArtworkImage.with(_:placeholder:size:reusePolicy:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  void (*v52)(char *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _OWORD *v57;
  __int128 v58;
  uint64_t v59;
  unint64_t v60;
  char *v61;
  __n128 v62;
  char *v64;
  uint64_t v65;
  unsigned int (*v66)(char *, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;

  v68 = a4;
  v79 = a2;
  v76 = a5;
  v7 = type metadata accessor for ArtworkImage.Placeholder(0);
  v77 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v78 = v8;
  v72 = (uint64_t)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_15070F0);
  __chkstk_darwin(v9);
  v11 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Artwork.CropStyle(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1509C10);
  v73 = *(_QWORD *)(v16 - 8);
  v74 = v16;
  __chkstk_darwin(v16);
  v71 = (char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CEE0);
  __chkstk_darwin(v18);
  v67 = (uint64_t)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v64 - v21;
  v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CB40);
  v24 = __chkstk_darwin(v23);
  v26 = (char *)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = type metadata accessor for ArtworkImage(0, v24);
  v27 = *(_QWORD *)(v75 - 8);
  __chkstk_darwin(v75);
  v80 = (char *)&v64 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v70 = (char *)&v64 - v30;
  __chkstk_darwin(v31);
  v33 = (char *)&v64 - v32;
  __chkstk_darwin(v34);
  v81 = (char *)&v64 - v35;
  v69 = a1;
  sub_5C238(a1, (uint64_t)v22, (uint64_t *)&unk_150CEE0);
  v36 = type metadata accessor for ArtworkImage.ViewModel(0);
  v66 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 48);
  if (v66(v22, 1, v36) == 1)
  {
    sub_56024((uint64_t)v22, (uint64_t *)&unk_150CEE0);
    v37 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v26, 1, 1, v37);
  }
  else
  {
    v38 = type metadata accessor for Artwork(0);
    v64 = v33;
    v65 = a3;
    v39 = v11;
    v40 = v15;
    v41 = v13;
    v42 = v12;
    v43 = v38;
    v44 = v27;
    v45 = *(_QWORD *)(v38 - 8);
    (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v26, v22, v38);
    sub_5C0DC((uint64_t)v22, type metadata accessor for ArtworkImage.ViewModel);
    v46 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56);
    v27 = v44;
    v47 = v43;
    v12 = v42;
    v13 = v41;
    v15 = v40;
    v11 = v39;
    v33 = v64;
    a3 = v65;
    v46(v26, 0, 1, v47);
  }
  sub_E44150((uint64_t)v26, *(_QWORD *)a3, *(_BYTE *)(a3 + 8), *(_QWORD *)(a3 + 16), *(_BYTE *)(a3 + 24));
  ArtworkImage.artworkReusablePolicy(_:)(v68);
  v48 = v67;
  sub_5C238(v69, v67, (uint64_t *)&unk_150CEE0);
  if (v66((char *)v48, 1, v36) == 1)
  {
    sub_56024(v48, (uint64_t *)&unk_150CEE0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
  }
  else
  {
    sub_5C238(v48 + *(int *)(v36 + 20), (uint64_t)v11, &qword_15070F0);
    sub_5C0DC(v48, type metadata accessor for ArtworkImage.ViewModel);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
      goto LABEL_11;
    }
  }
  if (qword_1506220 != -1)
    swift_once(&qword_1506220, sub_E4B058);
  v49 = __swift_project_value_buffer(v12, (uint64_t)static Artwork.CropStyle.fallback);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v49, v12);
  sub_56024((uint64_t)v11, &qword_15070F0);
LABEL_11:
  v50 = v70;
  v51 = v80;
  ArtworkImage.artworkCropStyle(_:)(v15);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v52 = *(void (**)(char *, uint64_t))(v27 + 8);
  v53 = v75;
  v52(v51, v75);
  ArtworkImage.artworkIdealAspectRatio(_:contentMode:)(*(_QWORD *)(a3 + 32), *(unsigned __int8 *)(a3 + 40), *(unsigned __int8 *)(a3 + 41));
  v52(v50, v53);
  v54 = v72;
  sub_5BDB8(v79, v72, type metadata accessor for ArtworkImage.Placeholder);
  v55 = *(unsigned __int8 *)(v77 + 80);
  v56 = (v55 + 58) & ~v55;
  v57 = (_OWORD *)swift_allocObject(&unk_13C9CD8, v56 + v78, v55 | 7);
  v58 = *(_OWORD *)(a3 + 16);
  v57[1] = *(_OWORD *)a3;
  v57[2] = v58;
  *(_OWORD *)((char *)v57 + 42) = *(_OWORD *)(a3 + 26);
  sub_5C04C(v54, (uint64_t)v57 + v56, type metadata accessor for ArtworkImage.Placeholder);
  v59 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150BED0);
  v60 = sub_E4B3D8();
  v61 = v71;
  ArtworkImage.artworkPlaceholder<A>(_:)(sub_E4B368, v57, v59, v60);
  v62 = swift_release(v57);
  ((void (*)(char *, uint64_t, __n128))v52)(v33, v53, v62);
  v52(v81, v53);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v73 + 32))(v76, v61, v74);
}

uint64_t ArtworkImage.ViewModel.artwork.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Artwork(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t ArtworkImage.ViewModel.cropStyle.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_E43E1C(type metadata accessor for ArtworkImage.ViewModel, (uint64_t)&qword_15070F0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_5C238, a1);
}

uint64_t ArtworkImage.ViewModel.calculatedAspectRatio.getter()
{
  double v0;
  uint64_t result;

  if (Artwork.maximumWidth.getter() < 1 || Artwork.maximumHeight.getter() < 1)
  {
    *(double *)&result = 0.0;
  }
  else
  {
    v0 = (double)Artwork.maximumWidth.getter();
    *(double *)&result = v0 / (double)Artwork.maximumHeight.getter();
  }
  return result;
}

uint64_t ArtworkImage.Info.viewModel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_5C238(v1, a1, (uint64_t *)&unk_150CEE0);
}

uint64_t ArtworkImage.Info.placeholder.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_E43E1C(type metadata accessor for ArtworkImage.Info, (uint64_t)type metadata accessor for ArtworkImage.Placeholder, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_5BDB8, a1);
}

uint64_t sub_E43E1C@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;

  v8 = a1(0);
  return a3(v4 + *(int *)(v8 + 20), a4, a2);
}

uint64_t ArtworkImage.Info.aspectRatio.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for ArtworkImage.Info(0) + 24));
}

uint64_t ArtworkImage.Info.size.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;

  result = type metadata accessor for ArtworkImage.Info(0);
  v4 = (uint64_t *)(v1 + *(int *)(result + 28));
  v5 = *v4;
  v6 = *((_BYTE *)v4 + 8);
  v7 = v4[2];
  v8 = *((_BYTE *)v4 + 24);
  v9 = v4[4];
  v10 = *((_BYTE *)v4 + 40);
  LOBYTE(v4) = *((_BYTE *)v4 + 41);
  *(_QWORD *)a1 = v5;
  *(_BYTE *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = v7;
  *(_BYTE *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = v9;
  *(_BYTE *)(a1 + 40) = v10;
  *(_BYTE *)(a1 + 41) = (_BYTE)v4;
  return result;
}

uint64_t ArtworkImage.Info.corner.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for ArtworkImage.Info(0) + 32));
}

__n128 ArtworkImage.Info.init(viewModel:placeholder:aspectRatio:size:corner:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>)
{
  int *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __n128 result;
  uint64_t v22;

  sub_5C090(a1, a9, (uint64_t *)&unk_150CEE0);
  v17 = (int *)type metadata accessor for ArtworkImage.Info(0);
  sub_5C04C(a2, a9 + v17[5], type metadata accessor for ArtworkImage.Placeholder);
  v18 = a9 + v17[6];
  *(_QWORD *)v18 = a3;
  *(_BYTE *)(v18 + 8) = a4 & 1;
  v19 = a9 + v17[7];
  v20 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)v19 = *(_OWORD *)a5;
  *(_OWORD *)(v19 + 16) = v20;
  result = *(__n128 *)(a5 + 26);
  *(__n128 *)(v19 + 26) = result;
  v22 = a9 + v17[8];
  *(_QWORD *)v22 = a6;
  *(_QWORD *)(v22 + 8) = a7;
  *(_BYTE *)(v22 + 16) = a8 & 1;
  return result;
}

uint64_t ArtworkImage.Size.height.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t ArtworkImage.Size.height.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = result;
  *(_BYTE *)(v2 + 24) = a2 & 1;
  return result;
}

uint64_t ArtworkImage.Size.fittingAspectRatio.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = result;
  *(_BYTE *)(v2 + 40) = a2 & 1;
  return result;
}

uint64_t ArtworkImage.Size.init(cgSize:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  char v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a3 & 1;
  if ((a3 & 1) != 0)
    v5 = 0;
  else
    v5 = result;
  *(_QWORD *)a4 = v5;
  *(_BYTE *)(a4 + 8) = v4;
  if ((a3 & 1) != 0)
    v6 = 0;
  else
    v6 = a2;
  *(_QWORD *)(a4 + 16) = v6;
  *(_BYTE *)(a4 + 24) = v4;
  *(_QWORD *)(a4 + 32) = 0;
  *(_WORD *)(a4 + 40) = 513;
  return result;
}

void *CGFloat.squareAspectRatio.unsafeMutableAddressor()
{
  return &static CGFloat.squareAspectRatio;
}

uint64_t ArtworkImage.Size.init(width:aspectRatio:fittingAspectRatio:)@<X0>(uint64_t result@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, uint64_t a5@<X8>, double a6@<D0>)
{
  double v6;

  v6 = 0.0;
  if ((a2 & 1) == 0)
  {
    v6 = *(double *)&result / a6;
    if ((a4 & 1) == 0 && a3 > a6)
    {
      v6 = *(double *)&result / a3;
      *(double *)&result = *(double *)&result / a3 * a6;
    }
  }
  *(double *)a5 = *(double *)&result;
  *(_BYTE *)(a5 + 8) = a2 & 1;
  *(double *)(a5 + 16) = v6;
  *(_BYTE *)(a5 + 24) = a2 & 1;
  *(double *)(a5 + 32) = a3;
  *(_BYTE *)(a5 + 40) = a4 & 1;
  *(_BYTE *)(a5 + 41) = 2;
  return result;
}

uint64_t ArtworkImage.Size.init(height:aspectRatio:fittingAspectRatio:)@<X0>(uint64_t result@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, uint64_t a5@<X8>, double a6@<D0>)
{
  double v6;

  v6 = 0.0;
  if ((a2 & 1) == 0)
  {
    v6 = *(double *)&result * a6;
    if ((a4 & 1) == 0 && a3 < a6)
    {
      v6 = *(double *)&result * a3;
      *(double *)&result = *(double *)&result * a3 / a6;
    }
  }
  *(double *)a5 = v6;
  *(_BYTE *)(a5 + 8) = a2 & 1;
  *(double *)(a5 + 16) = *(double *)&result;
  *(_BYTE *)(a5 + 24) = a2 & 1;
  *(double *)(a5 + 32) = a3;
  *(_BYTE *)(a5 + 40) = a4 & 1;
  *(_BYTE *)(a5 + 41) = 2;
  return result;
}

uint64_t sub_E44108(__int128 *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;
  _OWORD v8[2];

  v2 = a1[1];
  v5 = *a1;
  v6[0] = v2;
  *(_OWORD *)((char *)v6 + 10) = *(__int128 *)((char *)a1 + 26);
  v3 = a2[1];
  v7 = *a2;
  v8[0] = v3;
  *(_OWORD *)((char *)v8 + 10) = *(__int128 *)((char *)a2 + 26);
  return _s17_MusicKit_SwiftUI12ArtworkImageV0a4CoreD0E4SizeV23__derived_struct_equalsySbAF_AFtFZ_0((uint64_t)&v5, (uint64_t)&v7) & 1;
}

uint64_t sub_E44150(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5)
{
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  uint64_t v15;

  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CB40);
  __chkstk_darwin(v10);
  v12 = (v11 + 15) & 0xFFFFFFFFFFFFFFF0;
  v13 = (char *)&v15 - v12;
  if ((a3 & 1) != 0)
  {
    sub_5C238(a1, (uint64_t)&v15 - v12, (uint64_t *)&unk_150CB40);
    if ((a5 & 1) != 0)
      ArtworkImage.init(_:)(v13);
    else
      ArtworkImage.init(_:height:)(v13, *(double *)&a4);
  }
  else
  {
    sub_5C238(a1, (uint64_t)&v15 - v12, (uint64_t *)&unk_150CB40);
    if ((a5 & 1) != 0)
      ArtworkImage.init(_:width:)(v13, *(double *)&a2);
    else
      ArtworkImage.init(_:width:height:)(v13, *(double *)&a2, *(double *)&a4);
  }
  return sub_56024(a1, (uint64_t *)&unk_150CB40);
}

uint64_t sub_E442A0@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t (**v9)@<X0>(uint64_t@<X8>);
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  __int128 v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _OWORD *v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _OWORD v65[3];
  _BYTE v66[16];
  uint64_t v67;
  char v68;

  v61 = a2;
  v64 = a3;
  v4 = type metadata accessor for ArtworkImage.Placeholder(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A868);
  __chkstk_darwin(v63);
  v9 = (uint64_t (**)@<X0>(uint64_t@<X8>))((char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = type metadata accessor for ArtworkImage.Placeholder.View(0);
  __chkstk_darwin(v10);
  v12 = (uint64_t *)((char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v13);
  v15 = (char *)&v58 - v14;
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A060);
  __chkstk_darwin(v58);
  v17 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A058);
  __chkstk_darwin(v62);
  v59 = (uint64_t)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v60 = (uint64_t)&v58 - v20;
  sub_5C090(a1, (uint64_t)v66, &qword_150A8A0);
  sub_5C090((uint64_t)v66, (uint64_t)&v67, &qword_150A8A0);
  if ((v68 & 1) != 0 || (*(_BYTE *)(a1 + 24) & 1) != 0)
  {
    sub_5BDB8(v61, (uint64_t)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ArtworkImage.Placeholder);
    v21 = *(unsigned __int8 *)(v5 + 80);
    v22 = (v21 + 16) & ~v21;
    v23 = (v6 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
    v24 = swift_allocObject(&unk_13CA0C8, v23 + 42, v21 | 7);
    sub_5C04C((uint64_t)v7, v24 + v22, type metadata accessor for ArtworkImage.Placeholder);
    v25 = (_OWORD *)(v24 + v23);
    v26 = *(_OWORD *)(a1 + 16);
    *v25 = *(_OWORD *)a1;
    v25[1] = v26;
    *(_OWORD *)((char *)v25 + 26) = *(_OWORD *)(a1 + 26);
    *v9 = sub_E55600;
    v9[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v24;
    swift_storeEnumTagMultiPayload(v9, v63, 1);
    v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150BF20);
    v28 = sub_E4B45C();
    v29 = sub_5C150(&qword_150A070, (uint64_t *)&unk_150BF20, (uint64_t)&protocol conformance descriptor for GeometryReader<A>);
    return _ConditionalContent<>.init(storage:)(v9, v62, v27, v28, v29);
  }
  else
  {
    v31 = *(_QWORD *)(a1 + 16);
    v32 = v67;
    sub_E45F74();
    v34 = v33;
    v36 = v35;
    sub_E45F74();
    v38 = v37;
    swift_bridgeObjectRelease(v39);
    sub_E45F74();
    v41 = v40;
    swift_bridgeObjectRelease(v42);
    v43 = (_QWORD *)((char *)v12 + *(int *)(v10 + 32));
    *v43 = swift_getKeyPath(&off_10AF800);
    v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506548);
    swift_storeEnumTagMultiPayload(v43, v44, 0);
    v45 = (_QWORD *)((char *)v12 + *(int *)(v10 + 36));
    *v45 = swift_getKeyPath(&unk_10AF828);
    v46 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1506550);
    swift_storeEnumTagMultiPayload(v45, v46, 0);
    *v12 = v34;
    v12[1] = v36;
    v12[2] = v38;
    v12[3] = v32;
    v12[4] = v31;
    v12[5] = v41;
    sub_5C04C((uint64_t)v12, (uint64_t)v15, type metadata accessor for ArtworkImage.Placeholder.View);
    sub_5BDB8((uint64_t)v15, (uint64_t)v17, type metadata accessor for ArtworkImage.Placeholder.View);
    v17[*(int *)(v58 + 36)] = 0;
    v47 = sub_5C0DC((uint64_t)v15, type metadata accessor for ArtworkImage.Placeholder.View);
    v48 = static Alignment.center.getter(v47);
    _FrameLayout.init(width:height:alignment:)(v65, v32, 0, v31, 0, v48, v49);
    v50 = v59;
    sub_5C238((uint64_t)v17, v59, &qword_150A060);
    v51 = v62;
    v52 = (_OWORD *)(v50 + *(int *)(v62 + 36));
    v53 = v65[1];
    *v52 = v65[0];
    v52[1] = v53;
    v52[2] = v65[2];
    sub_56024((uint64_t)v17, &qword_150A060);
    v54 = v60;
    sub_5C090(v50, v60, &qword_150A058);
    sub_5C238(v54, (uint64_t)v9, &qword_150A058);
    swift_storeEnumTagMultiPayload(v9, v63, 0);
    v55 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150BF20);
    v56 = sub_E4B45C();
    v57 = sub_5C150(&qword_150A070, (uint64_t *)&unk_150BF20, (uint64_t)&protocol conformance descriptor for GeometryReader<A>);
    _ConditionalContent<>.init(storage:)(v9, v51, v55, v56, v57);
    return sub_56024(v54, &qword_150A058);
  }
}

uint64_t ArtworkImage.Placeholder.view(availableSize:)@<X0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v25;

  v6 = type metadata accessor for ArtworkImage.Placeholder.View(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v25 - v10;
  sub_E45F74();
  v13 = v12;
  v15 = v14;
  sub_E45F74();
  v17 = v16;
  swift_bridgeObjectRelease();
  sub_E45F74();
  v19 = v18;
  swift_bridgeObjectRelease();
  v20 = &v8[*(int *)(v6 + 32)];
  *(_QWORD *)v20 = swift_getKeyPath(&off_10AF800);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506548);
  swift_storeEnumTagMultiPayload(v20, v21, 0);
  v22 = &v8[*(int *)(v6 + 36)];
  *(_QWORD *)v22 = swift_getKeyPath(&unk_10AF828);
  v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1506550);
  swift_storeEnumTagMultiPayload(v22, v23, 0);
  *(_QWORD *)v8 = v13;
  *((_QWORD *)v8 + 1) = v15;
  *((_QWORD *)v8 + 2) = v17;
  *((double *)v8 + 3) = a2;
  *((double *)v8 + 4) = a3;
  *((_QWORD *)v8 + 5) = v19;
  sub_5C04C((uint64_t)v8, (uint64_t)v11, type metadata accessor for ArtworkImage.Placeholder.View);
  sub_5BDB8((uint64_t)v11, a1, type metadata accessor for ArtworkImage.Placeholder.View);
  *(_BYTE *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_150A060) + 36)) = 0;
  return sub_5C0DC((uint64_t)v11, type metadata accessor for ArtworkImage.Placeholder.View);
}

uint64_t sub_E448F4@<X0>(uint64_t *a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  double *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _OWORD *v38;
  __int128 v39;
  uint64_t v41;
  uint64_t v42;
  _OWORD v43[3];

  v42 = a2;
  v3 = type metadata accessor for ArtworkImage.Placeholder.View(0);
  __chkstk_darwin(v3);
  v5 = (double *)((char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  v8 = (char *)&v41 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A060);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = GeometryProxy.size.getter(v10);
  v15 = v14;
  sub_E45F74();
  v17 = v16;
  v19 = v18;
  sub_E45F74();
  v21 = v20;
  swift_bridgeObjectRelease(v22);
  sub_E45F74();
  v24 = v23;
  swift_bridgeObjectRelease(v25);
  v26 = (_QWORD *)((char *)v5 + *(int *)(v3 + 32));
  *v26 = swift_getKeyPath(&off_10AF800);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506548);
  swift_storeEnumTagMultiPayload(v26, v27, 0);
  v28 = (_QWORD *)((char *)v5 + *(int *)(v3 + 36));
  *v28 = swift_getKeyPath(&unk_10AF828);
  v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1506550);
  swift_storeEnumTagMultiPayload(v28, v29, 0);
  *(_QWORD *)v5 = v17;
  *((_QWORD *)v5 + 1) = v19;
  *((_QWORD *)v5 + 2) = v21;
  v5[3] = v13;
  *((_QWORD *)v5 + 4) = v15;
  *((_QWORD *)v5 + 5) = v24;
  sub_5C04C((uint64_t)v5, (uint64_t)v8, type metadata accessor for ArtworkImage.Placeholder.View);
  sub_5BDB8((uint64_t)v8, (uint64_t)v12, type metadata accessor for ArtworkImage.Placeholder.View);
  v12[*(int *)(v9 + 36)] = 0;
  v30 = sub_5C0DC((uint64_t)v8, type metadata accessor for ArtworkImage.Placeholder.View);
  v31 = *a1;
  v32 = *((unsigned __int8 *)a1 + 8);
  v33 = a1[2];
  v34 = *((unsigned __int8 *)a1 + 24);
  v35 = static Alignment.center.getter(v30);
  _FrameLayout.init(width:height:alignment:)(v43, v31, v32, v33, v34, v35, v36);
  v37 = v42;
  sub_5C238((uint64_t)v12, v42, &qword_150A060);
  v38 = (_OWORD *)(v37 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_150A058) + 36));
  v39 = v43[1];
  *v38 = v43[0];
  v38[1] = v39;
  v38[2] = v43[2];
  return sub_56024((uint64_t)v12, &qword_150A060);
}

uint64_t ArtworkMotionView.init(videoArtwork:artwork:cropStyle:size:placeholder:reusePolicy:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  int *v13;
  _OWORD *v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  sub_5C090(a1, a7, &qword_150A078);
  v13 = (int *)type metadata accessor for ArtworkMotionView(0);
  sub_5C090(a2, a7 + v13[5], (uint64_t *)&unk_150CB40);
  sub_5C090(a3, a7 + v13[6], &qword_15070F0);
  v14 = (_OWORD *)(a7 + v13[7]);
  v15 = a4[1];
  *v14 = *a4;
  v14[1] = v15;
  *(_OWORD *)((char *)v14 + 26) = *(_OWORD *)((char *)a4 + 26);
  sub_5C090(a5, a7 + v13[8], &qword_150A080);
  v16 = a7 + v13[9];
  v17 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v16, a6, v17);
}

uint64_t ArtworkMotionView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  double v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  int *v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char *v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  double v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v2 = v1;
  v79 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_15070F0);
  __chkstk_darwin();
  v70 = (uint64_t)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = type metadata accessor for Artwork.CropStyle(0);
  v73 = *(_QWORD *)(v75 - 8);
  __chkstk_darwin();
  v71 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = type metadata accessor for ArtworkMotionView(0);
  v76 = *(_QWORD *)(v72 - 8);
  __chkstk_darwin();
  v77 = v5;
  v78 = (uint64_t)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v7 = (char *)&v61 - v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_150A078);
  __chkstk_darwin();
  v9 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CB40);
  __chkstk_darwin();
  v11 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin();
  v14 = (char *)&v61 - v13;
  v74 = type metadata accessor for ArtworkImage(0, v12);
  v61 = *(_QWORD *)(v74 - 8);
  __chkstk_darwin();
  v16 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v18 = (char *)&v61 - v17;
  __chkstk_darwin();
  v20 = (char *)&v61 - v19;
  __chkstk_darwin();
  v64 = (char *)&v61 - v21;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A088);
  v67 = *(_QWORD *)(v22 - 8);
  v68 = v22;
  __chkstk_darwin();
  v65 = (char *)&v61 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A090);
  __chkstk_darwin();
  v69 = (char *)&v61 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A098);
  __chkstk_darwin();
  v66 = (char *)&v61 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5C238(v2, (uint64_t)v9, &qword_150A078);
  v26 = type metadata accessor for VideoArtwork(0);
  v27 = *(_QWORD *)(v26 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v9, 1, v26) == 1)
  {
    sub_56024((uint64_t)v9, &qword_150A078);
    v28 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v11, 1, 1, v28);
  }
  else
  {
    VideoArtwork.previewFrame.getter();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v26);
    v28 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v11, 0, 1, v28);
  }
  sub_5BDB8(v2, (uint64_t)v7, type metadata accessor for ArtworkMotionView);
  type metadata accessor for Artwork(0);
  v29 = *(_QWORD *)(v28 - 8);
  v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 48))(v11, 1, v28);
  v31 = v74;
  if (v30 == 1)
  {
    v32 = (int *)v72;
    sub_5C238((uint64_t)&v7[*(int *)(v72 + 20)], (uint64_t)v14, (uint64_t *)&unk_150CB40);
    sub_5C0DC((uint64_t)v7, type metadata accessor for ArtworkMotionView);
    sub_56024((uint64_t)v11, (uint64_t *)&unk_150CB40);
  }
  else
  {
    sub_5C0DC((uint64_t)v7, type metadata accessor for ArtworkMotionView);
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v14, v11, v28);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v14, 0, 1, v28);
    v32 = (int *)v72;
  }
  ArtworkImage.init(_:)(v14);
  ArtworkImage.artworkReusablePolicy(_:)(v2 + v32[9]);
  v33 = *(void (**)(char *, uint64_t))(v61 + 8);
  v33(v16, v31);
  v34 = v70;
  sub_5C238(v2 + v32[6], v70, &qword_15070F0);
  v35 = v73;
  v36 = v75;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v73 + 48))(v34, 1, v75) == 1)
  {
    v37 = v71;
    if (qword_1506220 != -1)
      swift_once(&qword_1506220, sub_E4B058);
    v38 = __swift_project_value_buffer(v36, (uint64_t)static Artwork.CropStyle.fallback);
    (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v37, v38, v36);
    sub_56024(v34, &qword_15070F0);
  }
  else
  {
    v37 = v71;
    (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(v71, v34, v36);
  }
  ArtworkImage.artworkCropStyle(_:)(v37);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v36);
  v33(v18, v31);
  v39 = v64;
  ArtworkImage.artworkIdealAspectRatio(_:contentMode:)(*(_QWORD *)(v2 + v32[7] + 32), *(unsigned __int8 *)(v2 + v32[7] + 40), *(unsigned __int8 *)(v2 + v32[7] + 41));
  v33(v20, v31);
  v40 = v78;
  sub_5BDB8(v2, v78, type metadata accessor for ArtworkMotionView);
  v41 = *(unsigned __int8 *)(v76 + 80);
  v42 = (v41 + 16) & ~v41;
  v43 = swift_allocObject(&unk_13C9D00, v42 + v77, v41 | 7);
  sub_5C04C(v40, v43 + v42, type metadata accessor for ArtworkMotionView);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A0A0);
  v45 = sub_E4D284();
  v46 = v65;
  ArtworkImage.artworkPlaceholder<A>(_:)(sub_E4D218, v43, v44, v45);
  v47 = swift_release();
  v48 = ((uint64_t (*)(char *, uint64_t, __n128))v33)(v39, v31, v47);
  v49 = static Alignment.center.getter(v48);
  v51 = v50;
  v52 = (uint64_t)v69;
  v53 = (uint64_t)&v69[*(int *)(v62 + 36)];
  sub_E45C38(v2, v53);
  v54 = (uint64_t *)(v53 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_150A0B0) + 36));
  *v54 = v49;
  v54[1] = v51;
  v55 = (*(double (**)(uint64_t, char *, uint64_t))(v67 + 32))(v52, v46, v68);
  v56 = static Animation.default.getter(v55);
  v57 = (uint64_t)v66;
  v58 = (uint64_t *)&v66[*(int *)(v63 + 36)];
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A0B8);
  sub_5C238(v2, (uint64_t)v58 + *(int *)(v59 + 36), &qword_150A078);
  *v58 = v56;
  sub_5C090(v52, v57, &qword_150A090);
  return sub_5C090(v57, v79, &qword_150A098);
}

uint64_t sub_E45354@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (**v32)@<X0>(uint64_t@<X8>);
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  char *v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _OWORD *v60;
  __int128 v61;
  uint64_t v62;
  uint64_t (**v63)@<X0>(uint64_t@<X8>);
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t (**v81)@<X0>(uint64_t@<X8>);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _OWORD v85[3];

  v84 = a2;
  v3 = type metadata accessor for ArtworkMotionView(0);
  v76 = *(_QWORD *)(v3 - 8);
  v4 = *(_QWORD *)(v76 + 64);
  __chkstk_darwin();
  v77 = (uint64_t)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A868);
  __chkstk_darwin();
  v81 = (uint64_t (**)@<X0>(uint64_t@<X8>))((char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v69 = type metadata accessor for ArtworkImage.Placeholder.View(0);
  __chkstk_darwin();
  v71 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v72 = (uint64_t)&v68 - v7;
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A060);
  __chkstk_darwin();
  v74 = (uint64_t)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A058);
  __chkstk_darwin();
  v73 = (uint64_t)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v75 = (uint64_t)&v68 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150BED0);
  v82 = *(_QWORD *)(v11 - 8);
  v83 = v11;
  __chkstk_darwin();
  v78 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_150A080);
  __chkstk_darwin();
  v14 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ArtworkImage.Placeholder(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  __chkstk_darwin();
  v18 = (char *)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v20 = (char *)&v68 - v19;
  sub_5C238(a1 + *(int *)(v3 + 32), (uint64_t)v14, &qword_150A080);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_56024((uint64_t)v14, &qword_150A080);
    v21 = 1;
    v22 = v84;
  }
  else
  {
    sub_5C04C((uint64_t)v14, (uint64_t)v20, type metadata accessor for ArtworkImage.Placeholder);
    v23 = a1 + *(int *)(v3 + 28);
    if ((*(_BYTE *)(v23 + 8) & 1) != 0 || (*(_BYTE *)(v23 + 24) & 1) != 0)
    {
      sub_5BDB8((uint64_t)v20, (uint64_t)v18, type metadata accessor for ArtworkImage.Placeholder);
      v24 = a1;
      v25 = v77;
      sub_5BDB8(v24, v77, type metadata accessor for ArtworkMotionView);
      v26 = *(unsigned __int8 *)(v16 + 80);
      v27 = (v26 + 16) & ~v26;
      v28 = *(unsigned __int8 *)(v76 + 80);
      v29 = (v17 + v28 + v27) & ~v28;
      v30 = swift_allocObject(&unk_13CA0A0, v29 + v4, v26 | v28 | 7);
      sub_5C04C((uint64_t)v18, v30 + v27, type metadata accessor for ArtworkImage.Placeholder);
      sub_5C04C(v25, v30 + v29, type metadata accessor for ArtworkMotionView);
      v31 = v80;
      v32 = v81;
      *v81 = sub_E554C0;
      v32[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v30;
      swift_storeEnumTagMultiPayload(v32, v31, 1);
      v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150BF20);
      v34 = sub_E4B45C();
      v35 = sub_5C150(&qword_150A070, (uint64_t *)&unk_150BF20, (uint64_t)&protocol conformance descriptor for GeometryReader<A>);
      v36 = (uint64_t)v78;
      _ConditionalContent<>.init(storage:)(v32, v79, v33, v34, v35);
    }
    else
    {
      v37 = *(_QWORD *)v23;
      v38 = *(_QWORD *)(v23 + 16);
      sub_E45F74();
      v40 = v39;
      v42 = v41;
      sub_E45F74();
      v44 = v43;
      swift_bridgeObjectRelease();
      sub_E45F74();
      v46 = v45;
      swift_bridgeObjectRelease();
      v47 = v69;
      v48 = v71;
      v49 = &v71[*(int *)(v69 + 32)];
      *(_QWORD *)v49 = swift_getKeyPath(&off_10AF800);
      v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506548);
      swift_storeEnumTagMultiPayload(v49, v50, 0);
      v51 = (_QWORD *)((char *)v48 + *(int *)(v47 + 36));
      *v51 = swift_getKeyPath(&unk_10AF828);
      v52 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1506550);
      swift_storeEnumTagMultiPayload(v51, v52, 0);
      *v48 = v40;
      v48[1] = v42;
      v48[2] = v44;
      v48[3] = v37;
      v48[4] = v38;
      v48[5] = v46;
      v53 = v72;
      sub_5C04C((uint64_t)v48, v72, type metadata accessor for ArtworkImage.Placeholder.View);
      v54 = v74;
      sub_5BDB8(v53, v74, type metadata accessor for ArtworkImage.Placeholder.View);
      *(_BYTE *)(v54 + *(int *)(v70 + 36)) = 0;
      v55 = sub_5C0DC(v53, type metadata accessor for ArtworkImage.Placeholder.View);
      v56 = static Alignment.center.getter(v55);
      _FrameLayout.init(width:height:alignment:)(v85, v37, 0, v38, 0, v56, v57);
      v58 = v73;
      sub_5C238(v54, v73, &qword_150A060);
      v59 = v79;
      v60 = (_OWORD *)(v58 + *(int *)(v79 + 36));
      v61 = v85[1];
      *v60 = v85[0];
      v60[1] = v61;
      v60[2] = v85[2];
      sub_56024(v54, &qword_150A060);
      v62 = v75;
      sub_5C090(v58, v75, &qword_150A058);
      v63 = v81;
      sub_5C238(v62, (uint64_t)v81, &qword_150A058);
      swift_storeEnumTagMultiPayload(v63, v80, 0);
      v64 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150BF20);
      v65 = sub_E4B45C();
      v66 = sub_5C150(&qword_150A070, (uint64_t *)&unk_150BF20, (uint64_t)&protocol conformance descriptor for GeometryReader<A>);
      v36 = (uint64_t)v78;
      _ConditionalContent<>.init(storage:)(v63, v59, v64, v65, v66);
      sub_56024(v62, &qword_150A058);
    }
    sub_5C0DC((uint64_t)v20, type metadata accessor for ArtworkImage.Placeholder);
    v22 = v84;
    sub_5C090(v36, v84, (uint64_t *)&unk_150BED0);
    v21 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v82 + 56))(v22, v21, 1, v83);
}

uint64_t sub_E459CC@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  double *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _OWORD *v35;
  __int128 v36;
  uint64_t v38;
  uint64_t v39;
  _OWORD v40[3];

  v39 = a1;
  v3 = type metadata accessor for ArtworkImage.Placeholder.View(0);
  __chkstk_darwin();
  v5 = (double *)((char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  v7 = (char *)&v38 - v6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A060);
  v9 = __chkstk_darwin();
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = GeometryProxy.size.getter(v9);
  v14 = v13;
  sub_E45F74();
  v16 = v15;
  v18 = v17;
  sub_E45F74();
  v20 = v19;
  swift_bridgeObjectRelease();
  sub_E45F74();
  v22 = v21;
  swift_bridgeObjectRelease();
  v23 = (_QWORD *)((char *)v5 + *(int *)(v3 + 32));
  *v23 = swift_getKeyPath(&off_10AF800);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506548);
  swift_storeEnumTagMultiPayload(v23, v24, 0);
  v25 = (_QWORD *)((char *)v5 + *(int *)(v3 + 36));
  *v25 = swift_getKeyPath(&unk_10AF828);
  v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1506550);
  swift_storeEnumTagMultiPayload(v25, v26, 0);
  *(_QWORD *)v5 = v16;
  *((_QWORD *)v5 + 1) = v18;
  *((_QWORD *)v5 + 2) = v20;
  v5[3] = v12;
  *((_QWORD *)v5 + 4) = v14;
  *((_QWORD *)v5 + 5) = v22;
  sub_5C04C((uint64_t)v5, (uint64_t)v7, type metadata accessor for ArtworkImage.Placeholder.View);
  sub_5BDB8((uint64_t)v7, (uint64_t)v11, type metadata accessor for ArtworkImage.Placeholder.View);
  v11[*(int *)(v8 + 36)] = 0;
  sub_5C0DC((uint64_t)v7, type metadata accessor for ArtworkImage.Placeholder.View);
  v27 = type metadata accessor for ArtworkMotionView(0);
  v28 = (uint64_t *)(v39 + *(int *)(v27 + 28));
  v29 = *v28;
  v30 = *((unsigned __int8 *)v28 + 8);
  v31 = v28[2];
  v32 = *((unsigned __int8 *)v28 + 24);
  v33 = static Alignment.center.getter(v27);
  _FrameLayout.init(width:height:alignment:)(v40, v29, v30, v31, v32, v33, v34);
  sub_5C238((uint64_t)v11, a2, &qword_150A060);
  v35 = (_OWORD *)(a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_150A058) + 36));
  v36 = v40[1];
  *v35 = v40[0];
  v35[1] = v36;
  v35[2] = v40[2];
  return sub_56024((uint64_t)v11, &qword_150A060);
}

uint64_t sub_E45C38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v33 = a1;
  v34 = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A848);
  v31 = *(_QWORD *)(v2 - 8);
  v32 = v2;
  __chkstk_darwin();
  v30 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for URL(0);
  __chkstk_darwin();
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A850);
  v28 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A858);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin();
  v29 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_150A078);
  __chkstk_darwin();
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for VideoArtwork(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin();
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5C238(v33, (uint64_t)v13, &qword_150A078);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_56024((uint64_t)v13, &qword_150A078);
    v18 = 1;
    v19 = v34;
  }
  else
  {
    v20 = (*(uint64_t (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
    VideoArtwork.url.getter(v20);
    MotionView.init(url:previewFrame:fallback:)(v5, sub_E55660, 0, sub_E45F4C, 0, &type metadata for Color, &type metadata for Color);
    v21 = sub_5C150(&qword_150A860, &qword_150A850, (uint64_t)&protocol conformance descriptor for MotionView<A, B>);
    v22 = v30;
    View.mcui.getter(v6, v21);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v8, v6);
    v23 = v29;
    v24 = v32;
    MCUINamespace<A>.motionShouldResetOnSizeChange(_:)(0, v32, v21);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v22, v24);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    v25 = v34;
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v34, v23, v9);
    v18 = 0;
    v19 = v25;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v19, v18, 1, v9);
}

uint64_t sub_E45F4C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = static Color.clear.getter();
  *a1 = result;
  return result;
}

void sub_E45F74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(_QWORD);
  uint64_t v9;
  char *v10;
  uint64_t v11;

  v1 = type metadata accessor for Playlist.Variant(0);
  __chkstk_darwin(v1);
  __chkstk_darwin(v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506E88);
  __chkstk_darwin(v3);
  __chkstk_darwin(v4);
  v5 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5BDB8(v0, (uint64_t)v7, v8);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF20);
  v10 = (char *)sub_E460C4
      + 4
      * byte_10AF77A[(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v7, 10, v9)];
  __asm { BR              X10 }
}

double sub_E460C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v8;
  uint64_t v9;
  double v10;

  sub_5C090(v5, v4, &qword_1506E88);
  sub_5C238(v4, v2, &qword_1506E88);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v0) == 1)
  {
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 104))(v1, enum case for Playlist.Variant.regular(_:), v0);
    sub_56024(v2, &qword_1506E88);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v1, v2, v0);
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v3, v1, v0);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 88))(v3, v0);
  if (v8 != enum case for Playlist.Variant.smart(_:)
    && v8 != enum case for Playlist.Variant.genius(_:)
    && v8 != enum case for Playlist.Variant.folder(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v3, v0);
  }
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v1, v0);
  v10 = ((double (*)(uint64_t))static Font.Weight.light.getter)(v9);
  sub_56024(v4, &qword_1506E88);
  return v10;
}

uint64_t ArtworkImage.Placeholder.View.init(name:weight:availableSize:scaleFactor:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D2>, double a7@<D3>)
{
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t result;

  v14 = type metadata accessor for ArtworkImage.Placeholder.View(0);
  v15 = (_QWORD *)(a3 + *(int *)(v14 + 32));
  *v15 = swift_getKeyPath(&off_10AF800);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506548);
  swift_storeEnumTagMultiPayload(v15, v16, 0);
  v17 = (_QWORD *)(a3 + *(int *)(v14 + 36));
  *v17 = swift_getKeyPath(&unk_10AF828);
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1506550);
  result = swift_storeEnumTagMultiPayload(v17, v18, 0);
  *(_QWORD *)a3 = a1;
  *(_QWORD *)(a3 + 8) = a2;
  *(double *)(a3 + 16) = a4;
  *(double *)(a3 + 24) = a5;
  *(double *)(a3 + 32) = a6;
  *(double *)(a3 + 40) = a7;
  return result;
}

_QWORD *EnvironmentValues.placeholderStyle.getter@<X0>(_QWORD *a1@<X8>)
{
  unint64_t v2;

  v2 = sub_E4D2E8();
  return EnvironmentValues.subscript.getter(a1, &_s19PlaceholderStyleKeyVN, &_s19PlaceholderStyleKeyVN, v2);
}

_QWORD *sub_E464C0@<X0>(_QWORD *a1@<X8>)
{
  unint64_t v2;

  v2 = sub_E4D2E8();
  return EnvironmentValues.subscript.getter(a1, &_s19PlaceholderStyleKeyVN, &_s19PlaceholderStyleKeyVN, v2);
}

uint64_t sub_E464FC(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  uint64_t v8;

  __swift_instantiateConcreteTypeFromMangledName(&qword_150A0C8);
  __chkstk_darwin();
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v5 = (char *)&v8 - v4;
  sub_5C238(a1, (uint64_t)&v8 - v4, &qword_150A0C8);
  sub_5C238((uint64_t)v5, (uint64_t)v3, &qword_150A0C8);
  v6 = sub_E4D2E8();
  EnvironmentValues.subscript.setter(v3, &_s19PlaceholderStyleKeyVN, &_s19PlaceholderStyleKeyVN, v6);
  return sub_56024((uint64_t)v5, &qword_150A0C8);
}

uint64_t EnvironmentValues.placeholderStyle.setter(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  unint64_t v4;
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName(&qword_150A0C8);
  __chkstk_darwin();
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5C238(a1, (uint64_t)v3, &qword_150A0C8);
  v4 = sub_E4D2E8();
  EnvironmentValues.subscript.setter(v3, &_s19PlaceholderStyleKeyVN, &_s19PlaceholderStyleKeyVN, v4);
  return sub_56024(a1, &qword_150A0C8);
}

uint64_t ArtworkImage.Placeholder.View.body.getter@<X0>(uint64_t a1@<X8>)
{
  double *v1;
  uint64_t *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  double v11;
  double v12;
  double v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  double v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  _QWORD v50[3];
  uint64_t v51;
  uint64_t v52;

  v2 = (uint64_t *)v1;
  v46 = a1;
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A0D0);
  __chkstk_darwin();
  v4 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A0D8);
  __chkstk_darwin();
  v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_150A0C8);
  __chkstk_darwin();
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v10 = (char *)&v43 - v9;
  v11 = v1[3];
  v12 = v1[4];
  v13 = v1[5];
  type metadata accessor for ArtworkImage.Placeholder.View(0);
  sub_E43008(&qword_1506548, &qword_150A0C8, (char *)0x6C616E6F6974704FLL, (char *)0xEF3E656C7974533CLL, (uint64_t)v10);
  v14 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48);
  if (v15(v10, 1, v14) == 1)
  {
    sub_56024((uint64_t)v10, &qword_150A0C8);
    v47 = 0u;
    v48 = 0u;
    v49 = 0;
  }
  else
  {
    sub_5C238((uint64_t)(v10 + 40), (uint64_t)&v47, (uint64_t *)&unk_150BF60);
    sub_5C0DC((uint64_t)v10, type metadata accessor for ArtworkImage.Placeholder.View.Style);
    if (*((_QWORD *)&v48 + 1))
    {
      sub_8B15C(&v47, (uint64_t)v50);
      v16 = v51;
      v43 = v52;
      __swift_project_boxed_opaque_existential_1(v50, v51);
      v17 = __chkstk_darwin();
      v19 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, double))(v20 + 16))(v19, v17);
      v21 = AnyShapeStyle.init<A>(_:)(v19, v16, v43);
      __swift_destroy_boxed_opaque_existential_1(v50);
      goto LABEL_6;
    }
  }
  sub_56024((uint64_t)&v47, (uint64_t *)&unk_150BF60);
  v21 = 0;
LABEL_6:
  sub_E43008(&qword_1506548, &qword_150A0C8, (char *)0x6C616E6F6974704FLL, (char *)0xEF3E656C7974533CLL, (uint64_t)v8);
  if (v15(v8, 1, v14) == 1)
  {
    sub_56024((uint64_t)v8, &qword_150A0C8);
    v47 = 0u;
    v48 = 0u;
    v49 = 0;
  }
  else
  {
    sub_5C238((uint64_t)v8, (uint64_t)&v47, (uint64_t *)&unk_150BF60);
    sub_5C0DC((uint64_t)v8, type metadata accessor for ArtworkImage.Placeholder.View.Style);
    if (*((_QWORD *)&v48 + 1))
    {
      sub_8B15C(&v47, (uint64_t)v50);
      v22 = v51;
      v23 = v52;
      __swift_project_boxed_opaque_existential_1(v50, v51);
      v24 = __chkstk_darwin();
      v26 = (char *)&v43 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, double))(v27 + 16))(v26, v24);
      v28 = AnyShapeStyle.init<A>(_:)(v26, v22, v23);
      v29 = __swift_destroy_boxed_opaque_existential_1(v50);
      goto LABEL_11;
    }
  }
  v29 = sub_56024((uint64_t)&v47, (uint64_t *)&unk_150BF60);
  v28 = 0;
LABEL_11:
  v30 = static Color.clear.getter(v29);
  if (v21)
  {
    v31 = v21;
  }
  else
  {
    v32 = objc_msgSend((id)objc_opt_self(UIColor), "secondarySystemFillColor");
    v50[0] = Color.init(_:)(v32);
    v31 = AnyShapeStyle.init<A>(_:)(v50, &type metadata for Color, &protocol witness table for Color);
  }
  if (v12 >= v11)
    v33 = v11;
  else
    v33 = v12;
  v34 = v13 * v33;
  swift_retain();
  v36 = static Edge.Set.all.getter(v35);
  v37 = v36;
  v38 = static Alignment.center.getter(v36);
  v40 = v39;
  sub_E46B44(v2, v28, (uint64_t)v4, v34);
  v41 = (uint64_t *)&v4[*(int *)(v45 + 36)];
  *v41 = v38;
  v41[1] = v40;
  sub_5C238((uint64_t)v4, (uint64_t)&v6[*(int *)(v44 + 36)], &qword_150A0D0);
  *(_QWORD *)v6 = v30;
  *((_QWORD *)v6 + 1) = v31;
  v6[16] = v37;
  swift_retain();
  swift_retain();
  sub_56024((uint64_t)v4, &qword_150A0D0);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return sub_5C090((uint64_t)v6, v46, &qword_150A0D8);
}

uint64_t sub_E46B44@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t KeyPath;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t OpaqueTypeConformance2;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v53 = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_150A0C8);
  __chkstk_darwin();
  v48 = (uint64_t)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_150A0E0);
  __chkstk_darwin();
  v49 = (uint64_t)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for BlendMode(0);
  v9 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin();
  v50 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1509DD8);
  __chkstk_darwin();
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A800);
  v43 = *(_QWORD *)(v13 - 8);
  v44 = v13;
  __chkstk_darwin();
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_150A808);
  __chkstk_darwin();
  v47 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A810);
  __chkstk_darwin();
  v46 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *a1;
  v19 = a1[1];
  swift_bridgeObjectRetain();
  v20 = Image.init(_internalSystemName:)(v18, v19);
  v51 = v9;
  if (a2)
  {
    v21 = a2;
  }
  else
  {
    v22 = objc_msgSend((id)objc_opt_self(UIColor), "tertiaryLabelColor");
    v54 = Color.init(_:)(v22);
    v21 = AnyShapeStyle.init<A>(_:)(&v54, &type metadata for Color, &protocol witness table for Color);
  }
  v23 = type metadata accessor for Font.Design(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v12, 1, 1, v23);
  swift_retain();
  v24 = static Font.system(size:weight:design:)(0, 1, v12, a4);
  sub_56024((uint64_t)v12, &qword_1509DD8);
  KeyPath = swift_getKeyPath(&off_10B0580);
  v54 = v20;
  v55 = v21;
  v56 = KeyPath;
  v57 = v24;
  v26 = a1[2];
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A818);
  v28 = sub_E55148();
  View.fontWeight(_:)(v26, 0, v27, v28);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v54 = v27;
  v55 = v28;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v54, &opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>, 1);
  v30 = (uint64_t)v47;
  v31 = v44;
  View.accessibility(hidden:)(1, v44, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v15, v31);
  type metadata accessor for ArtworkImage.Placeholder.View(0);
  v32 = v48;
  sub_E43008(&qword_1506548, &qword_150A0C8, (char *)0x6C616E6F6974704FLL, (char *)0xEF3E656C7974533CLL, v48);
  v33 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v32, 1, v33) == 1)
  {
    sub_56024(v32, &qword_150A0C8);
    v35 = v51;
    v34 = v52;
    v36 = v49;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 56))(v49, 1, 1, v52);
    v37 = v50;
  }
  else
  {
    v38 = v32 + *(int *)(v33 + 24);
    v36 = v49;
    sub_5C238(v38, v49, &qword_150A0E0);
    sub_5C0DC(v32, type metadata accessor for ArtworkImage.Placeholder.View.Style);
    v35 = v51;
    v34 = v52;
    v39 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v36, 1, v52);
    v37 = v50;
    if (v39 != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(v50, v36, v34);
      goto LABEL_9;
    }
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v35 + 104))(v37, enum case for BlendMode.normal(_:), v34);
  sub_56024(v36, &qword_150A0E0);
LABEL_9:
  v40 = (uint64_t)v46;
  (*(void (**)(char *, char *, uint64_t))(v35 + 16))(&v46[*(int *)(v45 + 36)], v37, v34);
  sub_5C238(v30, v40, &qword_150A808);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v34);
  sub_56024(v30, &qword_150A808);
  return sub_5C090(v40, v53, &qword_150A810);
}

uint64_t sub_E47068()
{
  return EnvironmentValues.colorSchemeContrast.getter();
}

uint64_t ArtworkImage.Placeholder.View.Style.foreground.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_5C238(v1, a1, (uint64_t *)&unk_150BF60);
}

uint64_t ArtworkImage.Placeholder.View.Style.foreground.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_5C1F4(a1, v1, (uint64_t *)&unk_150BF60);
}

uint64_t ArtworkImage.Placeholder.View.Style.background.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_5C238(v1 + 40, a1, (uint64_t *)&unk_150BF60);
}

uint64_t ArtworkImage.Placeholder.View.Style.background.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_5C1F4(a1, v1 + 40, (uint64_t *)&unk_150BF60);
}

uint64_t ArtworkImage.Placeholder.View.Style.blendMode.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  return sub_5C238(v1 + *(int *)(v3 + 24), a1, &qword_150A0E0);
}

uint64_t ArtworkImage.Placeholder.View.Style.blendMode.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  return sub_5C1F4(a1, v1 + *(int *)(v3 + 24), &qword_150A0E0);
}

double (*ArtworkImage.Placeholder.View.Style.blendMode.modify())(double)
{
  type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t ArtworkImage.Placeholder.View.Style.init(foreground:background:blendMode:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = (uint64_t)a4 + 40;
  v9 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  *a4 = 0u;
  a4[1] = 0u;
  a4[2] = 0u;
  a4[3] = 0u;
  a4[4] = 0u;
  v10 = (uint64_t)a4 + *(int *)(v9 + 24);
  v11 = type metadata accessor for BlendMode(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  sub_5C1F4(a1, (uint64_t)a4, (uint64_t *)&unk_150BF60);
  sub_5C1F4(a2, v8, (uint64_t *)&unk_150BF60);
  return sub_5C1F4(a3, v10, &qword_150A0E0);
}

uint64_t sub_E47274()
{
  uint64_t v0;
  uint64_t v1;
  _OWORD *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  _QWORD v14[5];
  _QWORD v15[5];

  v0 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  __chkstk_darwin();
  v2 = (_OWORD *)((char *)v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&qword_150A0E0);
  __chkstk_darwin();
  v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_allocate_value_buffer(v0, static ArtworkImage.Placeholder.View.Style.nowPlaying);
  v5 = __swift_project_value_buffer(v0, (uint64_t)static ArtworkImage.Placeholder.View.Style.nowPlaying);
  static Color.white.getter(v6);
  v7 = Color.opacity(_:)(0.12);
  swift_release();
  v15[3] = &type metadata for Color;
  v15[4] = &protocol witness table for Color;
  v15[0] = v7;
  static Color.black.getter(v8);
  v9 = Color.opacity(_:)(0.1);
  swift_release();
  v14[3] = &type metadata for Color;
  v14[4] = &protocol witness table for Color;
  v14[0] = v9;
  v10 = type metadata accessor for BlendMode(0);
  v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  v11(v4, 1, 1, v10);
  v2[3] = 0u;
  v2[4] = 0u;
  v2[1] = 0u;
  v2[2] = 0u;
  *v2 = 0u;
  v12 = (uint64_t)v2 + *(int *)(v0 + 24);
  v11((char *)v12, 1, 1, v10);
  sub_5C1F4((uint64_t)v15, (uint64_t)v2, (uint64_t *)&unk_150BF60);
  sub_5C1F4((uint64_t)v14, (uint64_t)v2 + 40, (uint64_t *)&unk_150BF60);
  sub_5C1F4((uint64_t)v4, v12, &qword_150A0E0);
  return sub_5C04C((uint64_t)v2, v5, type metadata accessor for ArtworkImage.Placeholder.View.Style);
}

uint64_t ArtworkImage.Placeholder.View.Style.nowPlaying.unsafeMutableAddressor()
{
  return sub_E42968(&qword_1506200, type metadata accessor for ArtworkImage.Placeholder.View.Style, (uint64_t)static ArtworkImage.Placeholder.View.Style.nowPlaying, (uint64_t)sub_E47274);
}

uint64_t static ArtworkImage.Placeholder.View.Style.nowPlaying.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_E47ADC(&qword_1506200, (uint64_t)static ArtworkImage.Placeholder.View.Style.nowPlaying, (uint64_t)sub_E47274, a1);
}

uint64_t sub_E47494()
{
  uint64_t v0;
  uint64_t v1;
  _OWORD *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  _QWORD v13[5];
  _QWORD v14[5];

  v0 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  __chkstk_darwin();
  v2 = (_OWORD *)((char *)v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&qword_150A0E0);
  __chkstk_darwin();
  v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_allocate_value_buffer(v0, static ArtworkImage.Placeholder.View.Style.miniPlayer);
  v5 = __swift_project_value_buffer(v0, (uint64_t)static ArtworkImage.Placeholder.View.Style.miniPlayer);
  v6 = (void *)objc_opt_self(UIColor);
  v7 = Color.init(_:)(objc_msgSend(v6, "quaternaryLabelColor"));
  v14[3] = &type metadata for Color;
  v14[4] = &protocol witness table for Color;
  v14[0] = v7;
  v8 = Color.init(_:)(objc_msgSend(v6, "tertiarySystemFillColor"));
  v13[3] = &type metadata for Color;
  v13[4] = &protocol witness table for Color;
  v13[0] = v8;
  v9 = type metadata accessor for BlendMode(0);
  v10 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56);
  v10(v4, 1, 1, v9);
  v2[3] = 0u;
  v2[4] = 0u;
  v2[1] = 0u;
  v2[2] = 0u;
  *v2 = 0u;
  v11 = (uint64_t)v2 + *(int *)(v0 + 24);
  v10((char *)v11, 1, 1, v9);
  sub_5C1F4((uint64_t)v14, (uint64_t)v2, (uint64_t *)&unk_150BF60);
  sub_5C1F4((uint64_t)v13, (uint64_t)v2 + 40, (uint64_t *)&unk_150BF60);
  sub_5C1F4((uint64_t)v4, v11, &qword_150A0E0);
  return sub_5C04C((uint64_t)v2, v5, type metadata accessor for ArtworkImage.Placeholder.View.Style);
}

uint64_t ArtworkImage.Placeholder.View.Style.miniPlayer.unsafeMutableAddressor()
{
  return sub_E42968(&qword_1506208, type metadata accessor for ArtworkImage.Placeholder.View.Style, (uint64_t)static ArtworkImage.Placeholder.View.Style.miniPlayer, (uint64_t)sub_E47494);
}

uint64_t static ArtworkImage.Placeholder.View.Style.miniPlayer.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_E47ADC(&qword_1506208, (uint64_t)static ArtworkImage.Placeholder.View.Style.miniPlayer, (uint64_t)sub_E47494, a1);
}

uint64_t sub_E476B8()
{
  uint64_t v0;
  uint64_t v1;
  _OWORD *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  _QWORD v16[5];
  _QWORD v17[5];

  v0 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  __chkstk_darwin();
  v2 = (_OWORD *)((char *)v16 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&qword_150A0E0);
  __chkstk_darwin();
  v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_allocate_value_buffer(v0, static ArtworkImage.Placeholder.View.Style.widgets);
  v5 = __swift_project_value_buffer(v0, (uint64_t)static ArtworkImage.Placeholder.View.Style.widgets);
  static Color.white.getter(v6);
  v7 = Color.opacity(_:)(0.25);
  v8 = swift_release();
  v17[3] = &type metadata for Color;
  v17[4] = &protocol witness table for Color;
  v17[0] = v7;
  static Color.white.getter(v8);
  v9 = Color.opacity(_:)(0.07);
  swift_release();
  v16[3] = &type metadata for Color;
  v16[4] = &protocol witness table for Color;
  v16[0] = v9;
  v10 = enum case for BlendMode.plusLighter(_:);
  v11 = type metadata accessor for BlendMode(0);
  v12 = *(_QWORD *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 104))(v4, v10, v11);
  v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  v13(v4, 0, 1, v11);
  v2[3] = 0u;
  v2[4] = 0u;
  v2[1] = 0u;
  v2[2] = 0u;
  *v2 = 0u;
  v14 = (uint64_t)v2 + *(int *)(v0 + 24);
  v13((char *)v14, 1, 1, v11);
  sub_5C1F4((uint64_t)v17, (uint64_t)v2, (uint64_t *)&unk_150BF60);
  sub_5C1F4((uint64_t)v16, (uint64_t)v2 + 40, (uint64_t *)&unk_150BF60);
  sub_5C1F4((uint64_t)v4, v14, &qword_150A0E0);
  return sub_5C04C((uint64_t)v2, v5, type metadata accessor for ArtworkImage.Placeholder.View.Style);
}

uint64_t ArtworkImage.Placeholder.View.Style.widgets.unsafeMutableAddressor()
{
  return sub_E42968(&qword_1506210, type metadata accessor for ArtworkImage.Placeholder.View.Style, (uint64_t)static ArtworkImage.Placeholder.View.Style.widgets, (uint64_t)sub_E476B8);
}

uint64_t static ArtworkImage.Placeholder.View.Style.widgets.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_E47ADC(&qword_1506210, (uint64_t)static ArtworkImage.Placeholder.View.Style.widgets, (uint64_t)sub_E476B8, a1);
}

uint64_t sub_E478F4()
{
  uint64_t v0;
  uint64_t v1;
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  _OWORD v12[2];
  uint64_t v13;
  _QWORD v14[5];

  v0 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  __chkstk_darwin(v0);
  v2 = (_OWORD *)((char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A0E0);
  __chkstk_darwin(v3);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_allocate_value_buffer(v0, static ArtworkImage.Placeholder.View.Style.accentuated);
  v6 = __swift_project_value_buffer(v0, (uint64_t)static ArtworkImage.Placeholder.View.Style.accentuated);
  v7 = static Color.accentColor.getter(v6);
  v14[3] = &type metadata for Color;
  v14[4] = &protocol witness table for Color;
  v14[0] = v7;
  v8 = type metadata accessor for BlendMode(0);
  memset(v12, 0, sizeof(v12));
  v13 = 0;
  v9 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56);
  v9(v5, 1, 1, v8);
  v2[3] = 0u;
  v2[4] = 0u;
  v2[1] = 0u;
  v2[2] = 0u;
  *v2 = 0u;
  v10 = (uint64_t)v2 + *(int *)(v0 + 24);
  v9((char *)v10, 1, 1, v8);
  sub_5C1F4((uint64_t)v14, (uint64_t)v2, (uint64_t *)&unk_150BF60);
  sub_5C1F4((uint64_t)v12, (uint64_t)v2 + 40, (uint64_t *)&unk_150BF60);
  sub_5C1F4((uint64_t)v5, v10, &qword_150A0E0);
  return sub_5C04C((uint64_t)v2, v6, type metadata accessor for ArtworkImage.Placeholder.View.Style);
}

uint64_t ArtworkImage.Placeholder.View.Style.accentuated.unsafeMutableAddressor()
{
  return sub_E42968(&qword_1506218, type metadata accessor for ArtworkImage.Placeholder.View.Style, (uint64_t)static ArtworkImage.Placeholder.View.Style.accentuated, (uint64_t)sub_E478F4);
}

uint64_t static ArtworkImage.Placeholder.View.Style.accentuated.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_E47ADC(&qword_1506218, (uint64_t)static ArtworkImage.Placeholder.View.Style.accentuated, (uint64_t)sub_E478F4, a1);
}

uint64_t sub_E47ADC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  if (*a1 != -1)
    swift_once(a1, a3);
  v6 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  v7 = __swift_project_value_buffer(v6, a2);
  return sub_5BDB8(v7, a4, type metadata accessor for ArtworkImage.Placeholder.View.Style);
}

void ArtworkImage.Placeholder.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t (*v3)(_QWORD);
  uint64_t v4;
  char *v5;
  uint64_t v6;

  type metadata accessor for Playlist.Variant(0);
  __chkstk_darwin();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1506E88);
  __chkstk_darwin();
  __chkstk_darwin();
  type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5BDB8(v0, (uint64_t)v2, v3);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF20);
  v5 = (char *)sub_E47C78
     + 4
     * byte_10AF785[(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v2, 10, v4)];
  __asm { BR              X10 }
}

uint64_t sub_E47C78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_5C090(v5, v3, &qword_1506E88);
  Hasher._combine(_:)(3uLL);
  sub_5C238(v3, v4, &qword_1506E88);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v0) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v2, v4, v0);
    Hasher._combine(_:)(1u);
    v7 = sub_4DD24(&qword_150A0E8, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Variant, (uint64_t)&protocol conformance descriptor for Playlist.Variant);
    dispatch thunk of Hashable.hash(into:)(v1, v0, v7);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v2, v0);
  }
  return sub_56024(v3, &qword_1506E88);
}

uint64_t sub_E47DAC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_E47DDC + 4 * byte_10AF790[a1]))(0x636973756DLL, 0xE500000000000000);
}

uint64_t sub_E47DDC()
{
  return 0x6979616C50776F6ELL;
}

uint64_t sub_E47DFC()
{
  return 0x6C79616C5077656ELL;
}

uint64_t sub_E47E1C()
{
  return 0x7473696C79616C70;
}

uint64_t sub_E47E34()
{
  return 0x646956636973756DLL;
}

uint64_t sub_E47E54()
{
  return 30324;
}

uint64_t sub_E47E60()
{
  return 0x6F68706F7263696DLL;
}

uint64_t sub_E47E7C()
{
  return 0x6E6F73726570;
}

uint64_t sub_E47E90()
{
  return 0x65726E6567;
}

uint64_t sub_E47EA0()
{
  return 0x7265736F706D6F63;
}

uint64_t sub_E47EB8()
{
  return 0x6F69646172;
}

uint64_t sub_E47EC8()
{
  unsigned __int8 *v0;

  return sub_E47DAC(*v0);
}

uint64_t sub_E47ED0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_E54C64(a1, a2);
  *a3 = result;
  return result;
}

void sub_E47EF4(_BYTE *a1@<X8>)
{
  *a1 = 11;
}

uint64_t sub_E47F00(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E4D340();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_E47F28(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E4D340();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_E47F50(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E4D384();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_E47F78(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E4D384();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_E47FA0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E4D3C8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_E47FC8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E4D3C8();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_E47FF0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E4D494();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_E48018(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E4D494();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_E48040@<X0>(uint64_t a1@<X1>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease(a1);
  *a2 = 1;
  return result;
}

uint64_t sub_E4806C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E4D62C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_E48094(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E4D62C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_E480BC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E4D51C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_E480E4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E4D51C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_E4810C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E4D5A4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_E48134(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E4D5A4();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_E4815C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E4D5E8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_E48184(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E4D5E8();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_E481AC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E4D450();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_E481D4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E4D450();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_E481FC()
{
  return 1701869940;
}

uint64_t sub_E4820C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v6;
  uint64_t result;
  char v8;

  if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    result = swift_bridgeObjectRelease(0xE400000000000000);
    v8 = 0;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)(1701869940, 0xE400000000000000, a1, a2, 0);
    result = swift_bridgeObjectRelease(a2);
    v8 = v6 ^ 1;
  }
  *a3 = v8 & 1;
  return result;
}

uint64_t sub_E48290(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E4D560();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_E482B8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E4D560();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_E482E0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E4D40C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_E48308(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E4D40C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_E48330(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E4D4D8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_E48358(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_E4D4D8();
  return CodingKey.debugDescription.getter(a1, v2);
}

void ArtworkImage.Placeholder.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char *v25;
  _QWORD v26[3];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A0F0);
  v53 = *(_QWORD *)(v2 - 8);
  v54 = v2;
  __chkstk_darwin();
  v52 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A0F8);
  v50 = *(_QWORD *)(v4 - 8);
  v51 = v4;
  __chkstk_darwin();
  v49 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A100);
  v26[2] = *(_QWORD *)(v27 - 8);
  __chkstk_darwin();
  v26[1] = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A108);
  v47 = *(_QWORD *)(v7 - 8);
  v48 = v7;
  __chkstk_darwin();
  v46 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A110);
  v44 = *(_QWORD *)(v9 - 8);
  v45 = v9;
  __chkstk_darwin();
  v43 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A118);
  v41 = *(_QWORD *)(v11 - 8);
  v42 = v11;
  __chkstk_darwin();
  v38 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A120);
  v35 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin();
  v33 = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A128);
  v39 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin();
  v37 = (char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1506E88);
  __chkstk_darwin();
  v34 = (char *)v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A130);
  v31 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin();
  v30 = (char *)v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A138);
  v28 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin();
  __swift_instantiateConcreteTypeFromMangledName(&qword_150A140);
  __chkstk_darwin();
  type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  v18 = (char *)v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A148);
  v55 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin();
  v20 = (char *)v26 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = a1[3];
  v22 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v21);
  v23 = sub_E4D340();
  v56 = v20;
  dispatch thunk of Encoder.container<A>(keyedBy:)(&_s11PlaceholderO10CodingKeysON, &_s11PlaceholderO10CodingKeysON, v23, v21, v22);
  sub_5BDB8(v58, (uint64_t)v18, type metadata accessor for ArtworkImage.Placeholder);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF20);
  v25 = (char *)sub_E487F0
      + 4
      * byte_10AF79B[(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v18, 10, v24)];
  __asm { BR              X10 }
}

uint64_t sub_E487F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(v1 - 304);
  sub_5C090(v0, v2, &qword_1506E88);
  *(_BYTE *)(v1 - 72) = 3;
  v3 = sub_E4D560();
  v4 = *(_QWORD *)(v1 - 280);
  v6 = *(_QWORD *)(v1 - 128);
  v5 = *(_QWORD *)(v1 - 120);
  ((void (*)(ValueMetadata *, uint64_t, uint64_t, ValueMetadata *, unint64_t))KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:))(&_s11PlaceholderO18PlaylistCodingKeysON, v1 - 72, v5, &_s11PlaceholderO18PlaylistCodingKeysON, v3);
  v7 = type metadata accessor for Playlist.Variant(0);
  v8 = sub_4DD24(&qword_150A198, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Variant, (uint64_t)&protocol conformance descriptor for Playlist.Variant);
  v9 = *(_QWORD *)(v1 - 256);
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v2, v10, v9, v7, v8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 264) + 8))(v4, v9);
  sub_56024(v2, &qword_1506E88);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 136) + 8))(v6, v5);
}

Swift::Int ArtworkImage.Placeholder.hashValue.getter()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  ArtworkImage.Placeholder.hash(into:)();
  return Hasher._finalize()();
}

uint64_t ArtworkImage.Placeholder.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  _QWORD v38[4];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  _QWORD *v73;
  uint64_t v74;

  v65 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A1B8);
  v70 = *(_QWORD *)(v3 - 8);
  v71 = v3;
  __chkstk_darwin();
  v64 = (char *)v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A1C0);
  v66 = *(_QWORD *)(v5 - 8);
  v67 = v5;
  __chkstk_darwin();
  v63 = (char *)v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A1C8);
  v53 = *(_QWORD *)(v54 - 8);
  __chkstk_darwin();
  v62 = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A1D0);
  v51 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin();
  v61 = (char *)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A1D8);
  v49 = *(_QWORD *)(v50 - 8);
  __chkstk_darwin();
  v69 = (char *)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A1E0);
  v46 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin();
  v59 = (char *)v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A1E8);
  v44 = *(_QWORD *)(v45 - 8);
  __chkstk_darwin();
  v58 = (char *)v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A1F0);
  v55 = *(_QWORD *)(v48 - 8);
  __chkstk_darwin();
  v60 = (char *)v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A1F8);
  v42 = *(_QWORD *)(v43 - 8);
  __chkstk_darwin();
  v57 = (char *)v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A200);
  v40 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin();
  v56 = (char *)v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A208);
  v38[3] = *(_QWORD *)(v39 - 8);
  __chkstk_darwin();
  v68 = (char *)v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A210);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin();
  v19 = (char *)v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  v22 = (char *)v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v24 = (char *)v38 - v23;
  v25 = a1[3];
  v26 = a1[4];
  v73 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v25);
  v27 = sub_E4D340();
  v72 = v19;
  v28 = v74;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&_s11PlaceholderO10CodingKeysON, &_s11PlaceholderO10CodingKeysON, v27, v25, v26);
  if (!v28)
  {
    v38[0] = v22;
    v38[2] = 0;
    v74 = v17;
    v38[1] = v24;
    v29 = KeyedDecodingContainer.allKeys.getter(v16);
    if (*(_QWORD *)(v29 + 16) == 1)
      __asm { BR              X10 }
    v30 = type metadata accessor for DecodingError(0);
    swift_allocError(v30, &protocol witness table for DecodingError, 0, 0);
    v32 = v31;
    __swift_instantiateConcreteTypeFromMangledName(&qword_150A218);
    *v32 = v20;
    v33 = v72;
    v34 = KeyedDecodingContainer.codingPath.getter(v16);
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)(v34, 0xD00000000000002BLL, 0x800000000110DDA0, 0);
    v35 = (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v32, enum case for DecodingError.typeMismatch(_:), v30);
    swift_willThrow(v35);
    v36 = swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, __n128))(v74 + 8))(v33, v16, v36);
  }
  return __swift_destroy_boxed_opaque_existential_1(v73);
}

void sub_E49230()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v2 - 90) = 1;
  v3 = sub_E4D5E8();
  v4 = *(_QWORD *)(v2 - 248);
  v5 = *(_QWORD *)(v2 - 400);
  KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&_s11PlaceholderO20NowPlayingCodingKeysON, v2 - 90, v1, &_s11PlaceholderO20NowPlayingCodingKeysON, v3);
  if (!v5)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 376) + 8))(v4, *(_QWORD *)(v2 - 368));
    v6 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v2 - 104) + 8))(v0, v1, v6);
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF20);
    v8 = *(_QWORD *)(v2 - 408);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v8, 2, 10, v7);
    sub_5C04C(v8, *(_QWORD *)(v2 - 176), type metadata accessor for ArtworkImage.Placeholder);
    JUMPOUT(0xE49208);
  }
  JUMPOUT(0xE491E8);
}

void sub_E492D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v2 - 89) = 2;
  v3 = sub_E4D5A4();
  v4 = *(_QWORD *)(v2 - 240);
  v5 = *(_QWORD *)(v2 - 400);
  KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&_s11PlaceholderO21NewPlaylistCodingKeysON, v2 - 89, v1, &_s11PlaceholderO21NewPlaylistCodingKeysON, v3);
  if (!v5)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 360) + 8))(v4, *(_QWORD *)(v2 - 352));
    v6 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v2 - 104) + 8))(v0, v1, v6);
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF20);
    v8 = *(_QWORD *)(v2 - 408);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v8, 3, 10, v7);
    sub_5C04C(v8, *(_QWORD *)(v2 - 176), type metadata accessor for ArtworkImage.Placeholder);
    JUMPOUT(0xE49208);
  }
  JUMPOUT(0xE491E8);
}

void sub_E49378()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;

  *(_BYTE *)(v2 - 72) = 3;
  v3 = sub_E4D560();
  v4 = *(_QWORD *)(v2 - 216);
  v5 = *(_QWORD *)(v2 - 400);
  KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&_s11PlaceholderO18PlaylistCodingKeysON, v2 - 72, v1, &_s11PlaceholderO18PlaylistCodingKeysON, v3);
  if (!v5)
  {
    v6 = type metadata accessor for Playlist.Variant(0);
    v7 = sub_4DD24(&qword_150A220, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Variant, (uint64_t)&protocol conformance descriptor for Playlist.Variant);
    v8 = *(_QWORD **)(v2 - 416);
    v9 = *(_QWORD *)(v2 - 312);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v8, v6, v10, v9, v6, v7);
    v11 = *(_QWORD *)(v2 - 104);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 256) + 8))(v4, v9);
    v12 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, __n128))(v11 + 8))(v0, v1, v12);
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF20);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 10, v13);
    sub_5C04C((uint64_t)v8, *(_QWORD *)(v2 - 408), type metadata accessor for ArtworkImage.Placeholder);
    JUMPOUT(0xE49818);
  }
  JUMPOUT(0xE491E8);
}

void sub_E4944C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v2 - 71) = 4;
  v3 = sub_E4D51C();
  v4 = *(_QWORD *)(v2 - 232);
  v5 = *(_QWORD *)(v2 - 400);
  KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&_s11PlaceholderO20MusicVideoCodingKeysON, v2 - 71, v1, &_s11PlaceholderO20MusicVideoCodingKeysON, v3);
  if (!v5)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 344) + 8))(v4, *(_QWORD *)(v2 - 336));
    v6 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v2 - 104) + 8))(v0, v1, v6);
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF20);
    v8 = *(_QWORD *)(v2 - 408);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v8, 4, 10, v7);
    sub_5C04C(v8, *(_QWORD *)(v2 - 176), type metadata accessor for ArtworkImage.Placeholder);
    JUMPOUT(0xE49208);
  }
  JUMPOUT(0xE491E8);
}

void sub_E494F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v2 - 70) = 5;
  v3 = sub_E4D4D8();
  v4 = *(_QWORD *)(v2 - 224);
  v5 = *(_QWORD *)(v2 - 400);
  KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&_s11PlaceholderO12TvCodingKeysON, v2 - 70, v1, &_s11PlaceholderO12TvCodingKeysON, v3);
  if (!v5)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 328) + 8))(v4, *(_QWORD *)(v2 - 320));
    v6 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v2 - 104) + 8))(v0, v1, v6);
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF20);
    v8 = *(_QWORD *)(v2 - 408);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v8, 5, 10, v7);
    sub_5C04C(v8, *(_QWORD *)(v2 - 176), type metadata accessor for ArtworkImage.Placeholder);
    JUMPOUT(0xE49208);
  }
  JUMPOUT(0xE491E8);
}

void sub_E49594()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v3 - 69) = 6;
  v4 = sub_E4D494();
  v5 = *(_QWORD *)(v3 - 400);
  KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&_s11PlaceholderO20MicrophoneCodingKeysON, v3 - 69, v1, &_s11PlaceholderO20MicrophoneCodingKeysON, v4);
  if (!v5)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 304) + 8))(v2, *(_QWORD *)(v3 - 296));
    v6 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v3 - 104) + 8))(v0, v1, v6);
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF20);
    v8 = *(_QWORD *)(v3 - 408);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v8, 6, 10, v7);
    sub_5C04C(v8, *(_QWORD *)(v3 - 176), type metadata accessor for ArtworkImage.Placeholder);
    JUMPOUT(0xE49208);
  }
  JUMPOUT(0xE491E8);
}

void sub_E49634()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v2 - 68) = 7;
  v3 = sub_E4D450();
  v4 = *(_QWORD *)(v2 - 208);
  v5 = *(_QWORD *)(v2 - 400);
  KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&_s11PlaceholderO16PersonCodingKeysON, v2 - 68, v1, &_s11PlaceholderO16PersonCodingKeysON, v3);
  if (!v5)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 288) + 8))(v4, *(_QWORD *)(v2 - 280));
    v6 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v2 - 104) + 8))(v0, v1, v6);
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF20);
    v8 = *(_QWORD *)(v2 - 408);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v8, 7, 10, v7);
    sub_5C04C(v8, *(_QWORD *)(v2 - 176), type metadata accessor for ArtworkImage.Placeholder);
    JUMPOUT(0xE49208);
  }
  JUMPOUT(0xE491E8);
}

void sub_E496D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v2 - 67) = 8;
  v3 = sub_E4D40C();
  v4 = *(_QWORD *)(v2 - 200);
  v5 = *(_QWORD *)(v2 - 400);
  KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&_s11PlaceholderO15RadioCodingKeysON, v2 - 67, v1, &_s11PlaceholderO15RadioCodingKeysON, v3);
  if (!v5)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 272) + 8))(v4, *(_QWORD *)(v2 - 264));
    v6 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v2 - 104) + 8))(v0, v1, v6);
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF20);
    v8 = *(_QWORD *)(v2 - 408);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v8, 8, 10, v7);
    sub_5C04C(v8, *(_QWORD *)(v2 - 176), type metadata accessor for ArtworkImage.Placeholder);
    JUMPOUT(0xE49208);
  }
  JUMPOUT(0xE491E8);
}

void sub_E4977C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;

  *(_BYTE *)(v4 - 66) = 9;
  v5 = sub_E4D3C8();
  v6 = *(_QWORD *)(v4 - 192);
  v7 = *(_QWORD *)(v4 - 400);
  KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&_s11PlaceholderO15GenreCodingKeysON, v4 - 66, v3, &_s11PlaceholderO15GenreCodingKeysON, v5);
  if (!v7)
  {
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v6, v1);
    v8 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v4 - 104) + 8))(v0, v3, v8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_150CF20);
    JUMPOUT(0xE49810);
  }
  JUMPOUT(0xE491E8);
}

void sub_E49838()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  __n128 v9;
  uint64_t v10;

  *(_BYTE *)(v4 - 65) = 10;
  v5 = sub_E4D384();
  v6 = *(_QWORD *)(v4 - 184);
  v7 = *(_QWORD *)(v4 - 400);
  KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&_s11PlaceholderO18ComposerCodingKeysON, v4 - 65, v1, &_s11PlaceholderO18ComposerCodingKeysON, v5);
  if (v7)
  {
    v8 = swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v4 - 104) + 8))(v0, v1, v8);
    JUMPOUT(0xE49208);
  }
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v6, v2);
  v9 = swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v4 - 104) + 8))(v0, v1, v9);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF20);
  (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(*(_QWORD *)(v4 - 408), 10, 10, v10);
  JUMPOUT(0xE49820);
}

uint64_t sub_E49980@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ArtworkImage.Placeholder.init(from:)(a1, a2);
}

void sub_E49994(_QWORD *a1)
{
  ArtworkImage.Placeholder.encode(to:)(a1);
}

Swift::Int sub_E499AC()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  ArtworkImage.Placeholder.hash(into:)();
  return Hasher._finalize()();
}

uint64_t GenericMusicItem.placeholder.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  double v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t, uint64_t, double);
  int v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  __n128 v37;
  void (*v38)(char *, uint64_t, __n128);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v3 = type metadata accessor for Playlist(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for GenericMusicItem(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin();
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin();
  v13 = (char *)&v40 - v12;
  v14 = *(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16);
  v14((char *)&v40 - v12, v1, v7, v11);
  v15 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v13, v7);
  if (v15 == enum case for GenericMusicItem.album(_:))
    goto LABEL_2;
  if (v15 == enum case for GenericMusicItem.artist(_:))
    goto LABEL_13;
  if (v15 == enum case for GenericMusicItem.composer(_:))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF20);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a1, 10, 10, v18);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  }
  if (v15 == enum case for GenericMusicItem.creditArtist(_:) || v15 == enum case for GenericMusicItem.curator(_:))
    goto LABEL_13;
  if (v15 == enum case for GenericMusicItem.editorialItem(_:))
    goto LABEL_2;
  if (v15 == enum case for GenericMusicItem.genre(_:))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF20);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a1, 9, 10, v21);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  }
  if (v15 == enum case for GenericMusicItem.musicMovie(_:))
    goto LABEL_18;
  if (v15 == enum case for GenericMusicItem.musicVideo(_:))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF20);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(a1, 4, 10, v23);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  }
  if (v15 == enum case for GenericMusicItem.playlist(_:))
  {
    (*(void (**)(char *, uint64_t))(v8 + 96))(v13, v7);
    v24 = (*(uint64_t (**)(char *, char *, uint64_t))(v4 + 32))(v6, v13, v3);
    Playlist.variant.getter(v24);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF20);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(a1, 0, 10, v25);
  }
  if (v15 == enum case for GenericMusicItem.radioShow(_:))
    goto LABEL_24;
  if (v15 == enum case for GenericMusicItem.recordLabel(_:))
  {
LABEL_13:
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF20);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a1, 6, 10, v20);
  }
  if (v15 == enum case for GenericMusicItem.socialProfile(_:))
  {
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF20);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(a1, 7, 10, v27);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  }
  if (v15 == enum case for GenericMusicItem.song(_:))
    goto LABEL_2;
  if (v15 == enum case for GenericMusicItem.station(_:))
  {
LABEL_24:
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF20);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(a1, 8, 10, v26);
  }
  if (v15 == enum case for GenericMusicItem.tvEpisode(_:)
    || v15 == enum case for GenericMusicItem.tvSeason(_:)
    || v15 == enum case for GenericMusicItem.tvShow(_:))
  {
LABEL_18:
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF20);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(a1, 5, 10, v22);
  }
  if (v15 == enum case for GenericMusicItem.uploadedAudio(_:))
  {
LABEL_2:
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
LABEL_3:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF20);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a1, 1, 10, v16);
  }
  if (v15 == enum case for GenericMusicItem.uploadedVideo(_:))
    goto LABEL_18;
  if (v15 == enum case for GenericMusicItem.other(_:))
  {
    (*(void (**)(char *, uint64_t))(v8 + 96))(v13, v7);
    swift_bridgeObjectRelease();
    goto LABEL_3;
  }
  if (qword_1506230 != -1)
    swift_once(&qword_1506230, sub_E4B228);
  v28 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v28, (uint64_t)static Logger.artwork);
  v29 = ((uint64_t (*)(char *, uint64_t, uint64_t))v14)(v10, v1, v7);
  v30 = Logger.logObject.getter(v29);
  v31 = static os_log_type_t.fault.getter(v30);
  if (os_log_type_enabled(v30, v31))
  {
    v32 = swift_slowAlloc(22, -1);
    v33 = swift_slowAlloc(64, -1);
    v41 = v33;
    *(_DWORD *)v32 = 136315394;
    *(_QWORD *)(v32 + 4) = sub_DCF730((char *)0xD000000000000010, (char *)0x800000000110C330, &v41);
    *(_WORD *)(v32 + 12) = 2080;
    v34 = sub_4DD24((unint64_t *)&qword_15070F8, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t)&protocol conformance descriptor for GenericMusicItem);
    v35 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v7, v34);
    *(_QWORD *)(v32 + 14) = sub_DCF730(v35, v36, &v41);
    v37 = swift_bridgeObjectRelease();
    v38 = *(void (**)(char *, uint64_t, __n128))(v8 + 8);
    v38(v10, v7, v37);
    _os_log_impl(&dword_0, v30, v31, "Unhandled case for %s: %s", (uint8_t *)v32, 0x16u);
    swift_arrayDestroy(v33, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v33, -1, -1);
    swift_slowDealloc(v32, -1, -1);
  }
  else
  {
    v38 = *(void (**)(char *, uint64_t, __n128))(v8 + 8);
    ((void (*)(char *, uint64_t))v38)(v10, v7);
  }

  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF20);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(a1, 1, 10, v39);
  return ((uint64_t (*)(char *, uint64_t))v38)(v13, v7);
}

void GenericMusicItem.aspectRatio.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  double v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t, uint64_t, double);
  int v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  __n128 v27;
  void (*v28)(char *, uint64_t, __n128);
  double v29;
  uint64_t v30;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CEE0);
  __chkstk_darwin();
  v2 = (char *)&v29 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for UploadedVideo(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for GenericMusicItem(0);
  v8 = *(double *)(v7 - 8);
  __chkstk_darwin();
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin();
  v13 = (char *)&v29 - v12;
  v14 = *(void (**)(char *, uint64_t, uint64_t, double))(*(_QWORD *)&v8 + 16);
  v14((char *)&v29 - v12, v0, v7, v11);
  v15 = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)&v8 + 88))(v13, v7);
  if (v15 == enum case for GenericMusicItem.album(_:)
    || v15 == enum case for GenericMusicItem.artist(_:)
    || v15 == enum case for GenericMusicItem.composer(_:)
    || v15 == enum case for GenericMusicItem.creditArtist(_:)
    || v15 == enum case for GenericMusicItem.curator(_:)
    || v15 == enum case for GenericMusicItem.editorialItem(_:)
    || v15 == enum case for GenericMusicItem.genre(_:)
    || v15 == enum case for GenericMusicItem.musicMovie(_:)
    || v15 == enum case for GenericMusicItem.musicVideo(_:)
    || v15 == enum case for GenericMusicItem.playlist(_:)
    || v15 == enum case for GenericMusicItem.radioShow(_:)
    || v15 == enum case for GenericMusicItem.recordLabel(_:)
    || v15 == enum case for GenericMusicItem.socialProfile(_:)
    || v15 == enum case for GenericMusicItem.song(_:))
  {
    goto LABEL_10;
  }
  v29 = v8;
  if (v15 == enum case for GenericMusicItem.station(_:))
  {
LABEL_23:
    (*(void (**)(char *, uint64_t))(*(_QWORD *)&v29 + 8))(v13, v7);
    return;
  }
  v8 = v29;
  if (v15 == enum case for GenericMusicItem.tvEpisode(_:))
  {
LABEL_10:
    (*(void (**)(char *, uint64_t))(*(_QWORD *)&v8 + 8))(v13, v7);
    return;
  }
  if (v15 == enum case for GenericMusicItem.tvSeason(_:)
    || v15 == enum case for GenericMusicItem.tvShow(_:)
    || v15 == enum case for GenericMusicItem.uploadedAudio(_:))
  {
    goto LABEL_23;
  }
  if (v15 == enum case for GenericMusicItem.uploadedVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(*(_QWORD *)&v29 + 96))(v13, v7);
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v13, v3);
    sub_DCC250(v2);
    v16 = type metadata accessor for ArtworkImage.ViewModel(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v2, 1, v16) == 1)
    {
      sub_56024((uint64_t)v2, (uint64_t *)&unk_150CEE0);
    }
    else
    {
      if (Artwork.maximumWidth.getter() >= 1 && Artwork.maximumHeight.getter() >= 1)
      {
        v17 = (double)Artwork.maximumWidth.getter();
        v29 = v17 / (double)Artwork.maximumHeight.getter();
        sub_5C0DC((uint64_t)v2, type metadata accessor for ArtworkImage.ViewModel);
LABEL_38:
        (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
        return;
      }
      sub_5C0DC((uint64_t)v2, type metadata accessor for ArtworkImage.ViewModel);
    }
    v29 = 1.77777778;
    goto LABEL_38;
  }
  if (v15 == enum case for GenericMusicItem.other(_:))
  {
    (*(void (**)(char *, uint64_t))(*(_QWORD *)&v29 + 96))(v13, v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_1506230 != -1)
      swift_once(&qword_1506230, sub_E4B228);
    v18 = type metadata accessor for Logger(0);
    __swift_project_value_buffer(v18, (uint64_t)static Logger.artwork);
    v19 = ((uint64_t (*)(char *, uint64_t, uint64_t))v14)(v10, v0, v7);
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.fault.getter(v20);
    if (os_log_type_enabled(v20, v21))
    {
      v22 = swift_slowAlloc(22, -1);
      v23 = swift_slowAlloc(64, -1);
      v30 = v23;
      *(_DWORD *)v22 = 136315394;
      *(_QWORD *)(v22 + 4) = sub_DCF730((char *)0xD000000000000010, (char *)0x800000000110C330, &v30);
      *(_WORD *)(v22 + 12) = 2080;
      v24 = sub_4DD24((unint64_t *)&qword_15070F8, (uint64_t (*)(uint64_t))&type metadata accessor for GenericMusicItem, (uint64_t)&protocol conformance descriptor for GenericMusicItem);
      v25 = (char *)dispatch thunk of CustomStringConvertible.description.getter(v7, v24);
      *(_QWORD *)(v22 + 14) = sub_DCF730(v25, v26, &v30);
      v27 = swift_bridgeObjectRelease();
      v28 = *(void (**)(char *, uint64_t, __n128))(*(_QWORD *)&v29 + 8);
      v28(v10, v7, v27);
      _os_log_impl(&dword_0, v20, v21, "Unhandled case for %s: %s", (uint8_t *)v22, 0x16u);
      swift_arrayDestroy(v23, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v23, -1, -1);
      swift_slowDealloc(v22, -1, -1);
    }
    else
    {
      v28 = *(void (**)(char *, uint64_t, __n128))(*(_QWORD *)&v29 + 8);
      ((void (*)(char *, uint64_t))v28)(v10, v7);
    }

    ((void (*)(char *, uint64_t))v28)(v13, v7);
  }
}

void *CGFloat.videoAspectRatio.unsafeMutableAddressor()
{
  return &static CGFloat.videoAspectRatio;
}

void *CGFloat.moviePosterAspectRatio.unsafeMutableAddressor()
{
  return &static CGFloat.moviePosterAspectRatio;
}

void Playlist.Variant.symbolImage.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  unint64_t v7;
  NSString v8;
  id v9;
  uint64_t v10;

  v1 = v0;
  v2 = type metadata accessor for Playlist.Variant(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == enum case for Playlist.Variant.smart(_:))
  {
    v7 = 0xE900000000000065;
  }
  else if (v6 == enum case for Playlist.Variant.genius(_:))
  {
    v7 = 0xE600000000000000;
  }
  else if (v6 == enum case for Playlist.Variant.folder(_:))
  {
    v7 = 0xE600000000000000;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v7 = 0xEF7473696C2E6574;
  }
  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v7);
  v9 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v8);

  if (!v9)
    __break(1u);
}

uint64_t ArtworkImage.ViewModel.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  id v19;
  id v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  NSString v26;
  uint64_t v27;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  _QWORD v35[4];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_15070F0);
  __chkstk_darwin(v4);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Artwork(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v31 - v12;
  v14 = type metadata accessor for ArtworkImage.ViewModel(0);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, double))(v15 + 56))(a2, 1, 1, v14, v16);
  v33 = v15;
  v19 = a1;
  Artwork.init(_:)(v19);
  v20 = objc_msgSend(v19, "token");
  _bridgeAnyObjectToAny(_:)(v35, v20);
  swift_unknownObjectRelease(v20);
  v21 = sub_4E684(0, &qword_150A228, MPStoreArtworkRequestToken_ptr);
  if ((swift_dynamicCast(&v34, v35, (char *)&type metadata for Any + 8, v21, 6) & 1) == 0)
  {

LABEL_8:
    v29 = &v18[*(int *)(v14 + 20)];
    v30 = type metadata accessor for Artwork.CropStyle(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v29, 1, 1, v30);
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v18, v13, v7);
    goto LABEL_9;
  }
  v32 = a2;
  v22 = v34;
  v23 = objc_msgSend(v34, "cropStyle");

  if (!v23)
  {

    a2 = v32;
    goto LABEL_8;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
  v31 = v6;
  v25 = v24;

  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v13, v7);
  v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v25);
  v27 = (uint64_t)v31;
  Artwork.CropStyle.init(_:)(v26, (uint64_t)v31);

  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v18, v10, v7);
  sub_5C090(v27, (uint64_t)&v18[*(int *)(v14 + 20)], &qword_15070F0);
  a2 = v32;
LABEL_9:
  sub_5C04C((uint64_t)v18, a2, type metadata accessor for ArtworkImage.ViewModel);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v33 + 56))(a2, 0, 1, v14);
}

uint64_t Artwork.CropStyle.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  char v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t v85;

  v4 = type metadata accessor for Artwork.CropStyle(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v85 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a2, 1, 1, v4);
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(ICStoreArtworkInfoCropStyleBoundedBox);
  v10 = v9;
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  if (v8 == v11 && v10 == v12)
  {
    v34 = a1;
    v17 = swift_bridgeObjectRelease_n(v10, 2);
    goto LABEL_16;
  }
  v14 = v12;
  v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v10, v11, v12, 0);
  v16 = a1;
  swift_bridgeObjectRelease(v10);
  v17 = swift_bridgeObjectRelease(v14);
  if ((v15 & 1) != 0)
  {
LABEL_16:
    static Artwork.CropStyle.boundedBox.getter(v17);
LABEL_17:

    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2, v7, v4);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a2, 0, 1, v4);
  }
  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(ICStoreArtworkInfoCropStyleConstrainedWidth);
  v20 = v19;
  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  if (v18 == v21 && v20 == v22)
  {
    v26 = swift_bridgeObjectRelease_n(v20, 2);
    goto LABEL_19;
  }
  v24 = v22;
  v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v20, v21, v22, 0);
  swift_bridgeObjectRelease(v20);
  v26 = swift_bridgeObjectRelease(v24);
  if ((v25 & 1) != 0)
  {
LABEL_19:
    static Artwork.CropStyle.constrainedWidth.getter(v26);
    goto LABEL_17;
  }
  v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(ICStoreArtworkInfoCropStyleConstrainedHeight);
  v29 = v28;
  v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v32 = v30;
  if (v27 == v31 && v29 == v30)
  {
    v33 = swift_bridgeObjectRelease_n(v29, 2);
LABEL_21:
    static Artwork.CropStyle.constrainedHeight.getter(v33);
    goto LABEL_17;
  }
  v36 = _stringCompareWithSmolCheck(_:_:expecting:)(v27, v29, v31, v30, 0);
  swift_bridgeObjectRelease(v29);
  v33 = swift_bridgeObjectRelease(v32);
  if ((v36 & 1) != 0)
    goto LABEL_21;
  v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(ICStoreArtworkInfoCropStyleFCCrop270);
  v39 = v38;
  v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v42 = v40;
  if (v37 == v41 && v39 == v40)
  {
    v43 = swift_bridgeObjectRelease_n(v39, 2);
LABEL_26:
    static Artwork.CropStyle.featuredContentCrop270.getter(v43);
    goto LABEL_17;
  }
  v44 = _stringCompareWithSmolCheck(_:_:expecting:)(v37, v39, v41, v40, 0);
  swift_bridgeObjectRelease(v39);
  v43 = swift_bridgeObjectRelease(v42);
  if ((v44 & 1) != 0)
    goto LABEL_26;
  v45 = static String._unconditionallyBridgeFromObjectiveC(_:)(ICStoreArtworkInfoCropStyleFCCrop44);
  v47 = v46;
  v49 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v50 = v48;
  if (v45 == v49 && v47 == v48)
  {
    v51 = swift_bridgeObjectRelease_n(v47, 2);
LABEL_31:
    static Artwork.CropStyle.featuredContentCrop44.getter(v51);
    goto LABEL_17;
  }
  v52 = _stringCompareWithSmolCheck(_:_:expecting:)(v45, v47, v49, v48, 0);
  swift_bridgeObjectRelease(v47);
  v51 = swift_bridgeObjectRelease(v50);
  if ((v52 & 1) != 0)
    goto LABEL_31;
  v53 = static String._unconditionallyBridgeFromObjectiveC(_:)(ICStoreArtworkInfoCropStyleFCCrop170T100B);
  v55 = v54;
  v57 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v58 = v56;
  if (v53 == v57 && v55 == v56)
  {
    v59 = swift_bridgeObjectRelease_n(v55, 2);
LABEL_36:
    static Artwork.CropStyle.featuredContentCrop170T100B.getter(v59);
    goto LABEL_17;
  }
  v60 = _stringCompareWithSmolCheck(_:_:expecting:)(v53, v55, v57, v56, 0);
  swift_bridgeObjectRelease(v55);
  v59 = swift_bridgeObjectRelease(v58);
  if ((v60 & 1) != 0)
    goto LABEL_36;
  v61 = static String._unconditionallyBridgeFromObjectiveC(_:)(ICStoreArtworkInfoCropStyleSourceSize);
  v63 = v62;
  v65 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v66 = v64;
  if (v61 == v65 && v63 == v64)
  {
    v67 = swift_bridgeObjectRelease_n(v63, 2);
LABEL_41:
    static Artwork.CropStyle.sourceSize.getter(v67);
    goto LABEL_17;
  }
  v68 = _stringCompareWithSmolCheck(_:_:expecting:)(v61, v63, v65, v64, 0);
  swift_bridgeObjectRelease(v63);
  v67 = swift_bridgeObjectRelease(v66);
  if ((v68 & 1) != 0)
    goto LABEL_41;
  v69 = static String._unconditionallyBridgeFromObjectiveC(_:)(ICStoreArtworkInfoCropStyleSpecificRectangle);
  v71 = v70;
  v73 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v74 = v72;
  if (v69 == v73 && v71 == v72)
  {
    v75 = swift_bridgeObjectRelease_n(v71, 2);
LABEL_46:
    static Artwork.CropStyle.specificRectangle.getter(v75);
    goto LABEL_17;
  }
  v76 = _stringCompareWithSmolCheck(_:_:expecting:)(v69, v71, v73, v72, 0);
  swift_bridgeObjectRelease(v71);
  v75 = swift_bridgeObjectRelease(v74);
  if ((v76 & 1) != 0)
    goto LABEL_46;
  v77 = static String._unconditionallyBridgeFromObjectiveC(_:)(ICStoreArtworkInfoCropStyleSquareCenterCrop);
  v79 = v78;
  v81 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v82 = v80;
  if (v77 == v81 && v79 == v80)
  {
    v83 = swift_bridgeObjectRelease_n(v79, 2);
LABEL_51:
    static Artwork.CropStyle.squareCenterCrop.getter(v83);
    goto LABEL_17;
  }
  v84 = _stringCompareWithSmolCheck(_:_:expecting:)(v77, v79, v81, v80, 0);
  swift_bridgeObjectRelease(v79);
  v83 = swift_bridgeObjectRelease(v82);
  if ((v84 & 1) != 0)
    goto LABEL_51;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a2, 1, 1, v4);
}

uint64_t sub_E4B058()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for Artwork.CropStyle(0);
  __swift_allocate_value_buffer(v0, static Artwork.CropStyle.fallback);
  v1 = __swift_project_value_buffer(v0, (uint64_t)static Artwork.CropStyle.fallback);
  return static Artwork.CropStyle.boundedBox.getter(v1);
}

uint64_t static Artwork.CropStyle.fallback.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_E4B59C(&qword_1506220, (uint64_t (*)(_QWORD))&type metadata accessor for Artwork.CropStyle, (uint64_t)static Artwork.CropStyle.fallback, (uint64_t)sub_E4B058, a1);
}

uint64_t sub_E4B0C4()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for Artwork.ImageFormat(0);
  __swift_allocate_value_buffer(v0, static Artwork.ImageFormat.fallback);
  v1 = __swift_project_value_buffer(v0, (uint64_t)static Artwork.ImageFormat.fallback);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v1, enum case for Artwork.ImageFormat.heic(_:), v0);
}

uint64_t static Artwork.ImageFormat.fallback.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_E4B59C(&qword_1506228, (uint64_t (*)(_QWORD))&type metadata accessor for Artwork.ImageFormat, (uint64_t)static Artwork.ImageFormat.fallback, (uint64_t)sub_E4B0C4, a1);
}

double static CGFloat.videoAspectRatio.getter()
{
  return 1.77777778;
}

void *CGFloat.verticalVideoAspectRatio.unsafeMutableAddressor()
{
  return &static CGFloat.verticalVideoAspectRatio;
}

double static CGFloat.verticalVideoAspectRatio.getter()
{
  return 0.5625;
}

double static CGFloat.moviePosterAspectRatio.getter()
{
  return 0.666666667;
}

uint64_t static Artwork.monogramArtwork(for:layoutDirection:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  char v9;
  id v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;

  v9 = a4 & 1;
  sub_4E684(0, (unint64_t *)&qword_150BC50, MPArtworkCatalog_ptr);
  v10 = static MPArtworkCatalog.monogram(for:layoutDirection:)(a1, a2, a3, v9);
  if (v10)
  {
    Artwork.init(_:)(v10);
    v11 = type metadata accessor for Artwork(0);
    v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
    v13 = a5;
    v14 = 0;
  }
  else
  {
    v11 = type metadata accessor for Artwork(0);
    v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
    v13 = a5;
    v14 = 1;
  }
  return v12(v13, v14, 1, v11);
}

uint64_t sub_E4B228()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  __swift_allocate_value_buffer(v0, static Logger.artwork);
  __swift_project_value_buffer(v0, (uint64_t)static Logger.artwork);
  return static Logger.music(_:)(0x6B726F77747241, 0xE700000000000000);
}

uint64_t type metadata accessor for ArtworkImage.ViewModel(uint64_t a1)
{
  return sub_6345C(a1, (uint64_t *)&unk_150A2A8, (uint64_t)&nominal type descriptor for ArtworkImage.ViewModel);
}

uint64_t type metadata accessor for ArtworkImage.Placeholder(uint64_t a1)
{
  return sub_6345C(a1, (uint64_t *)&unk_150A4B8, (uint64_t)&nominal type descriptor for ArtworkImage.Placeholder);
}

uint64_t sub_E4B2AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(type metadata accessor for ArtworkImage.Placeholder(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 58) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF20);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v0 + v3, 10, v5))
  {
    v6 = type metadata accessor for Playlist.Variant(0);
    v7 = *(_QWORD *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v0 + v3, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v3, v6);
  }
  return swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_E4B368@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ArtworkImage.Placeholder(0) - 8) + 80);
  return sub_E442A0(v1 + 16, v1 + ((v3 + 58) & ~v3), a1);
}

unint64_t sub_E4B3D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150A050;
  if (!qword_150A050)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_150BED0);
    sub_E4B45C();
    sub_5C150(&qword_150A070, (uint64_t *)&unk_150BF20, (uint64_t)&protocol conformance descriptor for GeometryReader<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150A050);
  }
  return result;
}

unint64_t sub_E4B45C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150BEE0;
  if (!qword_150BEE0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150A058);
    sub_E4B4C8();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150BEE0);
  }
  return result;
}

unint64_t sub_E4B4C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150BEF0;
  if (!qword_150BEF0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150A060);
    sub_4DD24((unint64_t *)&unk_150BF00, type metadata accessor for ArtworkImage.Placeholder.View, (uint64_t)&protocol conformance descriptor for ArtworkImage.Placeholder.View);
    sub_5C150(&qword_150A068, (uint64_t *)&unk_150BF10, (uint64_t)&protocol conformance descriptor for _PreferenceWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_150BEF0);
  }
  return result;
}

uint64_t type metadata accessor for ArtworkImage.Placeholder.View(uint64_t a1)
{
  return sub_6345C(a1, (uint64_t *)&unk_150A538, (uint64_t)&nominal type descriptor for ArtworkImage.Placeholder.View);
}

uint64_t static Logger.artwork.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_E4B59C(&qword_1506230, (uint64_t (*)(_QWORD))&type metadata accessor for Logger, (uint64_t)static Logger.artwork, (uint64_t)sub_E4B228, a1);
}

uint64_t sub_E4B59C@<X0>(_QWORD *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;

  if (*a1 != -1)
    swift_once(a1, a4);
  v8 = a2(0);
  v9 = __swift_project_value_buffer(v8, a3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a5, v9, v8);
}

uint64_t sub_E4B608()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A0C8);
  __swift_allocate_value_buffer(v0, qword_150A038);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_150A038);
  v2 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
}

uint64_t sub_E4B670@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1506238 != -1)
    swift_once(&qword_1506238, sub_E4B608);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A0C8);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_150A038);
  return sub_5C238(v3, a1, &qword_150A0C8);
}

void (*EnvironmentValues.placeholderStyle.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  _QWORD *v5;
  unint64_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_150A0C8) - 8) + 64);
  v3[1] = malloc(v4);
  v3[2] = malloc(v4);
  v5 = malloc(v4);
  v3[3] = v5;
  v6 = sub_E4D2E8();
  v3[4] = v6;
  EnvironmentValues.subscript.getter(v5, &_s19PlaceholderStyleKeyVN, &_s19PlaceholderStyleKeyVN, v6);
  return sub_E4B780;
}

void sub_E4B780(uint64_t **a1, char a2)
{
  uint64_t *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;

  v3 = *a1;
  sub_5C238((*a1)[3], (*a1)[2], &qword_150A0C8);
  v4 = (void *)v3[3];
  v5 = v3[4];
  v6 = (void *)v3[1];
  v7 = (void *)v3[2];
  if ((a2 & 1) != 0)
  {
    sub_5C238(v3[2], v3[1], &qword_150A0C8);
    EnvironmentValues.subscript.setter(v6, &_s19PlaceholderStyleKeyVN, &_s19PlaceholderStyleKeyVN, v5);
    sub_56024((uint64_t)v7, &qword_150A0C8);
  }
  else
  {
    EnvironmentValues.subscript.setter(v3[2], &_s19PlaceholderStyleKeyVN, &_s19PlaceholderStyleKeyVN, v3[4]);
  }
  sub_56024((uint64_t)v4, &qword_150A0C8);
  free(v4);
  free(v7);
  free(v6);
  free(v3);
}

uint64_t sub_E4B85C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23[2];

  v20 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_150A0E0);
  __chkstk_darwin();
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for BlendMode(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_150A0C8);
  __chkstk_darwin();
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin();
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5C238(a2, (uint64_t)v10, &qword_150A0C8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    return sub_56024((uint64_t)v10, &qword_150A0C8);
  sub_5C04C((uint64_t)v10, (uint64_t)v14, type metadata accessor for ArtworkImage.Placeholder.View.Style);
  sub_5C238((uint64_t)v14, (uint64_t)&v21, (uint64_t *)&unk_150BF60);
  if (v22)
  {
    sub_8B15C(&v21, (uint64_t)v23);
    v16 = v20;
    sub_56024(v20, (uint64_t *)&unk_150BF60);
    sub_8B15C(v23, v16);
  }
  else
  {
    sub_56024((uint64_t)&v21, (uint64_t *)&unk_150BF60);
    v16 = v20;
  }
  sub_5C238((uint64_t)(v14 + 40), (uint64_t)&v21, (uint64_t *)&unk_150BF60);
  if (v22)
  {
    sub_8B15C(&v21, (uint64_t)v23);
    sub_56024(v16 + 40, (uint64_t *)&unk_150BF60);
    sub_8B15C(v23, v16 + 40);
  }
  else
  {
    sub_56024((uint64_t)&v21, (uint64_t *)&unk_150BF60);
  }
  sub_5C238((uint64_t)&v14[*(int *)(v11 + 24)], (uint64_t)v4, &qword_150A0E0);
  sub_5C0DC((uint64_t)v14, type metadata accessor for ArtworkImage.Placeholder.View.Style);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    return sub_56024((uint64_t)v4, &qword_150A0E0);
  v17 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  v17(v8, v4, v5);
  v18 = v16 + *(int *)(v11 + 24);
  sub_56024(v18, &qword_150A0E0);
  v17((char *)v18, v8, v5);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56))(v18, 0, 1, v5);
}

uint64_t PlaceholderStyleModifier.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  char *v5;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  __swift_instantiateConcreteTypeFromMangledName(&qword_150A0C8);
  __chkstk_darwin();
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&off_10AF800);
  sub_E4BC58((uint64_t)v5);
  v7 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 0, 1, v7);
  v8 = (uint64_t *)(a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_150A230) + 36));
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A238);
  sub_5C238((uint64_t)v5, (uint64_t)v8 + *(int *)(v9 + 28), &qword_150A0C8);
  *v8 = KeyPath;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A240);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a2, a1, v10);
  return sub_56024((uint64_t)v5, &qword_150A0C8);
}

uint64_t sub_E4BC58@<X0>(uint64_t a1@<X8>)
{
  uint64_t (**v1)(uint64_t);
  uint64_t (**v2)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  _OWORD v16[2];
  uint64_t v17;
  _OWORD v18[2];
  uint64_t v19;

  v2 = v1;
  v4 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (_OWORD *)((char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&qword_150A0E0);
  __chkstk_darwin();
  v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_150A0C8);
  __chkstk_darwin();
  v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PlaceholderStyleModifier(0);
  sub_E43008(&qword_1506548, &qword_150A0C8, (char *)0x6C616E6F6974704FLL, (char *)0xEF3E656C7974533CLL, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v11, 1, v4) == 1)
  {
    v19 = 0;
    memset(v18, 0, sizeof(v18));
    v12 = type metadata accessor for BlendMode(0);
    memset(v16, 0, sizeof(v16));
    v17 = 0;
    v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
    v13(v9, 1, 1, v12);
    v7[3] = 0u;
    v7[4] = 0u;
    v7[1] = 0u;
    v7[2] = 0u;
    *v7 = 0u;
    v14 = (uint64_t)v7 + *(int *)(v4 + 24);
    v13((char *)v14, 1, 1, v12);
    sub_5C1F4((uint64_t)v18, (uint64_t)v7, (uint64_t *)&unk_150BF60);
    sub_5C1F4((uint64_t)v16, (uint64_t)v7 + 40, (uint64_t *)&unk_150BF60);
    sub_5C1F4((uint64_t)v9, v14, &qword_150A0E0);
    sub_5C04C((uint64_t)v7, a1, type metadata accessor for ArtworkImage.Placeholder.View.Style);
    sub_56024((uint64_t)v11, &qword_150A0C8);
  }
  else
  {
    sub_5C04C((uint64_t)v11, a1, type metadata accessor for ArtworkImage.Placeholder.View.Style);
  }
  return (*v2)(a1);
}

uint64_t View.placeholderStyle(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v20 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A0C8);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = type metadata accessor for PlaceholderStyleModifier(0);
  __chkstk_darwin(v8);
  v10 = (uint64_t *)((char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  v13 = (char *)&v20 - v12;
  sub_5C238(a1, (uint64_t)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_150A0C8);
  v14 = (_QWORD *)((char *)v10 + *(int *)(v8 + 20));
  *v14 = swift_getKeyPath(&off_10AF800);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506548);
  swift_storeEnumTagMultiPayload(v14, v15, 0);
  v16 = *(unsigned __int8 *)(v6 + 80);
  v17 = (v16 + 16) & ~v16;
  v18 = swift_allocObject(&unk_13C9D28, v17 + v7, v16 | 7);
  sub_5C090((uint64_t)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17, &qword_150A0C8);
  *v10 = sub_E4D688;
  v10[1] = v18;
  sub_5C04C((uint64_t)v10, (uint64_t)v13, type metadata accessor for PlaceholderStyleModifier);
  View.modifier<A>(_:)(v13, a2, v8, v20);
  return sub_5C0DC((uint64_t)v13, type metadata accessor for PlaceholderStyleModifier);
}

uint64_t View.placeholderStyle(_:)(void (*a1)(double), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v22 = a4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A0C8);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = type metadata accessor for PlaceholderStyleModifier(0);
  __chkstk_darwin(v9);
  v11 = (uint64_t *)((char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v22 - v14;
  a1(v13);
  v16 = (_QWORD *)((char *)v11 + *(int *)(v9 + 20));
  *v16 = swift_getKeyPath(&off_10AF800);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506548);
  swift_storeEnumTagMultiPayload(v16, v17, 0);
  v18 = *(unsigned __int8 *)(v7 + 80);
  v19 = (v18 + 16) & ~v18;
  v20 = swift_allocObject(&unk_13C9D50, v19 + v8, v18 | 7);
  sub_5C090((uint64_t)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v20 + v19, &qword_150A0C8);
  *v11 = sub_E4D688;
  v11[1] = v20;
  sub_5C04C((uint64_t)v11, (uint64_t)v15, type metadata accessor for PlaceholderStyleModifier);
  View.modifier<A>(_:)(v15, a3, v9, v22);
  return sub_5C0DC((uint64_t)v15, type metadata accessor for PlaceholderStyleModifier);
}

uint64_t View.placeholderStyle(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v18;

  v8 = type metadata accessor for PlaceholderStyleModifier(0);
  __chkstk_darwin(v8);
  v10 = (uint64_t *)((char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  v13 = (char *)&v18 - v12;
  v15 = (_QWORD *)((char *)v10 + *(int *)(v14 + 20));
  *v15 = swift_getKeyPath(&off_10AF800);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506548);
  swift_storeEnumTagMultiPayload(v15, v16, 0);
  *v10 = a1;
  v10[1] = a2;
  sub_5C04C((uint64_t)v10, (uint64_t)v13, type metadata accessor for PlaceholderStyleModifier);
  swift_retain(a2);
  View.modifier<A>(_:)(v13, a3, v8, a4);
  return sub_5C0DC((uint64_t)v13, type metadata accessor for PlaceholderStyleModifier);
}

uint64_t _s17_MusicKit_SwiftUI12ArtworkImageV0a4CoreD0E4SizeV23__derived_struct_equalsySbAF_AFtFZ_0(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;
  char v4;
  int v5;
  int v6;

  v2 = *(_BYTE *)(a2 + 8);
  if ((*(_BYTE *)(a1 + 8) & 1) == 0)
  {
    if (*(double *)a1 != *(double *)a2)
      v2 = 1;
    if ((v2 & 1) != 0)
      return 0;
LABEL_7:
    v3 = *(_BYTE *)(a2 + 24);
    if ((*(_BYTE *)(a1 + 24) & 1) != 0)
    {
      if (!*(_BYTE *)(a2 + 24))
        return 0;
    }
    else
    {
      if (*(double *)(a1 + 16) != *(double *)(a2 + 16))
        v3 = 1;
      if ((v3 & 1) != 0)
        return 0;
    }
    v4 = *(_BYTE *)(a2 + 40);
    if ((*(_BYTE *)(a1 + 40) & 1) != 0)
    {
      if (!*(_BYTE *)(a2 + 40))
        return 0;
    }
    else
    {
      if (*(double *)(a1 + 32) != *(double *)(a2 + 32))
        v4 = 1;
      if ((v4 & 1) != 0)
        return 0;
    }
    v5 = *(unsigned __int8 *)(a1 + 41);
    v6 = *(unsigned __int8 *)(a2 + 41);
    if (v5 == 2)
    {
      if (v6 != 2)
        return 0;
    }
    else if (v6 == 2 || (static ContentMode.== infix(_:_:)(v5 & 1, v6 & 1) & 1) == 0)
    {
      return 0;
    }
    return 1;
  }
  if (*(_BYTE *)(a2 + 8))
    goto LABEL_7;
  return 0;
}

BOOL _s17_MusicKit_SwiftUI12ArtworkImageV0a4CoreD0E9ViewModelV23__derived_struct_equalsySbAF_AFtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(uint64_t, uint64_t, uint64_t);
  char *v20;
  uint64_t v21;
  char v22;
  void (*v23)(char *, uint64_t);
  uint64_t v25;
  char *v26;

  v4 = type metadata accessor for Artwork.CropStyle(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A890);
  __chkstk_darwin();
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_15070F0);
  __chkstk_darwin();
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v14 = (char *)&v25 - v13;
  __chkstk_darwin();
  v16 = (char *)&v25 - v15;
  if ((static Artwork.== infix(_:_:)(a1, a2) & 1) == 0)
    return 0;
  v26 = v7;
  v17 = type metadata accessor for ArtworkImage.ViewModel(0);
  sub_5C238(a1 + *(int *)(v17 + 20), (uint64_t)v16, &qword_15070F0);
  sub_5C238(a2 + *(int *)(v17 + 20), (uint64_t)v14, &qword_15070F0);
  v18 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_5C238((uint64_t)v16, (uint64_t)v10, &qword_15070F0);
  sub_5C238((uint64_t)v14, v18, &qword_15070F0);
  v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v19((uint64_t)v10, 1, v4) == 1)
  {
    sub_56024((uint64_t)v14, &qword_15070F0);
    sub_56024((uint64_t)v16, &qword_15070F0);
    if (v19(v18, 1, v4) == 1)
    {
      sub_56024((uint64_t)v10, &qword_15070F0);
      return 1;
    }
    goto LABEL_7;
  }
  sub_5C238((uint64_t)v10, (uint64_t)v12, &qword_15070F0);
  if (v19(v18, 1, v4) == 1)
  {
    sub_56024((uint64_t)v14, &qword_15070F0);
    sub_56024((uint64_t)v16, &qword_15070F0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v12, v4);
LABEL_7:
    sub_56024((uint64_t)v10, &qword_150A890);
    return 0;
  }
  v20 = v26;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v26, v18, v4);
  v21 = sub_4DD24(&qword_150A898, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork.CropStyle, (uint64_t)&protocol conformance descriptor for Artwork.CropStyle);
  v22 = dispatch thunk of static Equatable.== infix(_:_:)(v12, v20, v4, v21);
  v23 = *(void (**)(char *, uint64_t))(v5 + 8);
  v23(v20, v4);
  sub_56024((uint64_t)v14, &qword_15070F0);
  sub_56024((uint64_t)v16, &qword_15070F0);
  v23(v12, v4);
  sub_56024((uint64_t)v10, &qword_15070F0);
  return (v22 & 1) != 0;
}

uint64_t type metadata accessor for ArtworkImage.Info(uint64_t a1)
{
  return sub_6345C(a1, (uint64_t *)&unk_150A340, (uint64_t)&nominal type descriptor for ArtworkImage.Info);
}

uint64_t _s17_MusicKit_SwiftUI12ArtworkImageV0a4CoreD0E4InfoV23__derived_struct_equalsySbAF_AFtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unsigned int (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  BOOL v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  double *v25;
  char v26;
  double *v27;
  int v28;
  __int128 *v29;
  __int128 v30;
  __int128 v31;
  __int128 *v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  _OWORD v44[2];
  __int128 v45;
  _BYTE v46[26];

  v4 = type metadata accessor for ArtworkImage.ViewModel(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v40 = (uint64_t)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A888);
  __chkstk_darwin();
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CEE0);
  __chkstk_darwin();
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v13 = (char *)&v39 - v12;
  __chkstk_darwin();
  v15 = (char *)&v39 - v14;
  v41 = a1;
  sub_5C238(a1, (uint64_t)&v39 - v14, (uint64_t *)&unk_150CEE0);
  v42 = a2;
  sub_5C238(a2, (uint64_t)v13, (uint64_t *)&unk_150CEE0);
  v16 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_5C238((uint64_t)v15, (uint64_t)v9, (uint64_t *)&unk_150CEE0);
  sub_5C238((uint64_t)v13, v16, (uint64_t *)&unk_150CEE0);
  v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v17((uint64_t)v9, 1, v4) != 1)
  {
    sub_5C238((uint64_t)v9, (uint64_t)v11, (uint64_t *)&unk_150CEE0);
    if (v17(v16, 1, v4) != 1)
    {
      v18 = v40;
      sub_5C04C(v16, v40, type metadata accessor for ArtworkImage.ViewModel);
      v19 = _s17_MusicKit_SwiftUI12ArtworkImageV0a4CoreD0E9ViewModelV23__derived_struct_equalsySbAF_AFtFZ_0((uint64_t)v11, v18);
      sub_5C0DC(v18, type metadata accessor for ArtworkImage.ViewModel);
      sub_56024((uint64_t)v13, (uint64_t *)&unk_150CEE0);
      sub_56024((uint64_t)v15, (uint64_t *)&unk_150CEE0);
      sub_5C0DC((uint64_t)v11, type metadata accessor for ArtworkImage.ViewModel);
      sub_56024((uint64_t)v9, (uint64_t *)&unk_150CEE0);
      if (!v19)
        return 0;
      goto LABEL_8;
    }
    sub_56024((uint64_t)v13, (uint64_t *)&unk_150CEE0);
    sub_56024((uint64_t)v15, (uint64_t *)&unk_150CEE0);
    sub_5C0DC((uint64_t)v11, type metadata accessor for ArtworkImage.ViewModel);
LABEL_6:
    sub_56024((uint64_t)v9, &qword_150A888);
    return 0;
  }
  sub_56024((uint64_t)v13, (uint64_t *)&unk_150CEE0);
  sub_56024((uint64_t)v15, (uint64_t *)&unk_150CEE0);
  if (v17(v16, 1, v4) != 1)
    goto LABEL_6;
  sub_56024((uint64_t)v9, (uint64_t *)&unk_150CEE0);
LABEL_8:
  v20 = (int *)type metadata accessor for ArtworkImage.Info(0);
  v22 = v41;
  v21 = v42;
  _s17_MusicKit_SwiftUI12ArtworkImageV0a4CoreD0E11PlaceholderO21__derived_enum_equalsySbAF_AFtFZ_0(v41 + v20[5], v42 + v20[5]);
  if ((v23 & 1) != 0)
  {
    v24 = v20[6];
    v25 = (double *)(v22 + v24);
    v26 = *(_BYTE *)(v22 + v24 + 8);
    v27 = (double *)(v21 + v24);
    v28 = *(unsigned __int8 *)(v21 + v24 + 8);
    if ((v26 & 1) != 0)
    {
      if (!v28)
        return 0;
    }
    else
    {
      if (*v25 != *v27)
        LOBYTE(v28) = 1;
      if ((v28 & 1) != 0)
        return 0;
    }
    v29 = (__int128 *)(v22 + v20[7]);
    v30 = *(__int128 *)((char *)v29 + 26);
    v31 = v29[1];
    v43 = *v29;
    v44[0] = v31;
    *(_OWORD *)((char *)v44 + 10) = v30;
    v32 = (__int128 *)(v21 + v20[7]);
    *(_OWORD *)&v46[10] = *(__int128 *)((char *)v32 + 26);
    v33 = v32[1];
    v45 = *v32;
    *(_OWORD *)v46 = v33;
    if ((_s17_MusicKit_SwiftUI12ArtworkImageV0a4CoreD0E4SizeV23__derived_struct_equalsySbAF_AFtFZ_0((uint64_t)&v43, (uint64_t)&v45) & 1) != 0)
    {
      v34 = v20[8];
      v35 = v22 + v34;
      v36 = *(_BYTE *)(v22 + v34 + 16);
      v37 = v21 + v34;
      if ((v36 & 1) != 0)
      {
        if ((*(_BYTE *)(v37 + 16) & 1) == 0)
          return 0;
      }
      else if ((*(_BYTE *)(v37 + 16) & 1) != 0
             || *(double *)v35 != *(double *)v37
             || *(_QWORD *)(v35 + 8) != *(_QWORD *)(v37 + 8))
      {
        return 0;
      }
      return 1;
    }
  }
  return 0;
}

void _s17_MusicKit_SwiftUI12ArtworkImageV0a4CoreD0E11PlaceholderO21__derived_enum_equalsySbAF_AFtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD v11[3];
  uint64_t v12;

  v12 = type metadata accessor for Playlist.Variant(0);
  v11[1] = *(_QWORD *)(v12 - 8);
  __chkstk_darwin();
  __swift_instantiateConcreteTypeFromMangledName(&qword_150A870);
  __chkstk_darwin();
  v11[2] = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1506E88);
  __chkstk_darwin();
  __chkstk_darwin();
  type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  __swift_instantiateConcreteTypeFromMangledName(&qword_150A878);
  __chkstk_darwin();
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t)&v6[*(int *)(v7 + 48)];
  sub_5BDB8(a1, (uint64_t)v6, type metadata accessor for ArtworkImage.Placeholder);
  sub_5BDB8(a2, v8, type metadata accessor for ArtworkImage.Placeholder);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF20);
  v10 = (char *)sub_E4CC8C
      + 4
      * byte_10AF7BC[(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v6, 10, v9)];
  __asm { BR              X10 }
}

uint64_t sub_E4CC8C()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  char v17;
  void (*v18)(uint64_t, uint64_t);

  sub_5BDB8(v0, v8, type metadata accessor for ArtworkImage.Placeholder);
  if (!v2(v1, 10, v7))
  {
    sub_5C090(v1, v5, &qword_1506E88);
    v11 = *(_QWORD *)(v9 - 96);
    v12 = v11 + *(int *)(v6 + 48);
    sub_5C090(v8, v11, &qword_1506E88);
    sub_5C238(v5, v12, &qword_1506E88);
    v13 = *(_QWORD *)(v9 - 104);
    v14 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
    v15 = *(_QWORD *)(v9 - 88);
    if (v14(v11, 1, v15) == 1)
    {
      sub_56024(v5, &qword_1506E88);
      if (v14(v12, 1, v15) == 1)
      {
        sub_56024(v11, &qword_1506E88);
LABEL_3:
        sub_5C0DC(v0, type metadata accessor for ArtworkImage.Placeholder);
        return 1;
      }
    }
    else
    {
      sub_5C238(v11, v4, &qword_1506E88);
      if (v14(v12, 1, v15) != 1)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(v3, v12, v15);
        v16 = sub_4DD24(&qword_150A880, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Variant, (uint64_t)&protocol conformance descriptor for Playlist.Variant);
        v17 = dispatch thunk of static Equatable.== infix(_:_:)(v4, v3, v15, v16);
        v18 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
        v18(v3, v15);
        sub_56024(v5, &qword_1506E88);
        v18(v4, v15);
        sub_56024(v11, &qword_1506E88);
        if ((v17 & 1) != 0)
          goto LABEL_3;
LABEL_12:
        sub_5C0DC(v0, type metadata accessor for ArtworkImage.Placeholder);
        return 0;
      }
      sub_56024(v5, &qword_1506E88);
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v4, v15);
    }
    sub_56024(v11, &qword_150A870);
    goto LABEL_12;
  }
  sub_56024(v8, &qword_1506E88);
  sub_56024(v0, &qword_150A878);
  return 0;
}

_QWORD *sub_E4CFCC@<X0>(_QWORD *a1@<X8>)
{
  unint64_t v2;

  v2 = sub_E4D2E8();
  return EnvironmentValues.subscript.getter(a1, &_s19PlaceholderStyleKeyVN, &_s19PlaceholderStyleKeyVN, v2);
}

uint64_t sub_E4D00C()
{
  return EnvironmentValues.colorSchemeContrast.getter();
}

uint64_t type metadata accessor for ArtworkMotionView(uint64_t a1)
{
  return sub_6345C(a1, (uint64_t *)&unk_150A3E8, (uint64_t)&nominal type descriptor for ArtworkMotionView);
}

uint64_t sub_E4D040()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = (int *)type metadata accessor for ArtworkMotionView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  v7 = type metadata accessor for VideoArtwork(0);
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v0 + v4, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0 + v4, v7);
  v9 = v6 + v1[5];
  v10 = type metadata accessor for Artwork(0);
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  v12 = v6 + v1[6];
  v13 = type metadata accessor for Artwork.CropStyle(0);
  v14 = *(_QWORD *)(v13 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  v15 = v6 + v1[8];
  v16 = type metadata accessor for ArtworkImage.Placeholder(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF20);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v15, 10, v17))
    {
      v18 = type metadata accessor for Playlist.Variant(0);
      v19 = *(_QWORD *)(v18 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v15, 1, v18))
        (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v15, v18);
    }
  }
  v20 = v6 + v1[9];
  v21 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_E4D218@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ArtworkMotionView(0) - 8) + 80);
  return sub_E45354(v1 + ((v3 + 16) & ~v3), a1);
}

unint64_t sub_E4D284()
{
  unint64_t result;
  uint64_t v1;

  result = qword_150A0A8;
  if (!qword_150A0A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150A0A0);
    sub_E4B3D8();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_150A0A8);
  }
  return result;
}

unint64_t sub_E4D2E8()
{
  unint64_t result;

  result = qword_150A0C0;
  if (!qword_150A0C0)
  {
    result = swift_getWitnessTable(&unk_10B0544, &_s19PlaceholderStyleKeyVN);
    atomic_store(result, (unint64_t *)&qword_150A0C0);
  }
  return result;
}

uint64_t type metadata accessor for ArtworkImage.Placeholder.View.Style(uint64_t a1)
{
  return sub_6345C(a1, (uint64_t *)&unk_150A5E8, (uint64_t)&nominal type descriptor for ArtworkImage.Placeholder.View.Style);
}

unint64_t sub_E4D340()
{
  unint64_t result;

  result = qword_150A150;
  if (!qword_150A150)
  {
    result = swift_getWitnessTable(&unk_10B04F4, &_s11PlaceholderO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_150A150);
  }
  return result;
}

unint64_t sub_E4D384()
{
  unint64_t result;

  result = qword_150A158;
  if (!qword_150A158)
  {
    result = swift_getWitnessTable(&unk_10B04A4, &_s11PlaceholderO18ComposerCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_150A158);
  }
  return result;
}

unint64_t sub_E4D3C8()
{
  unint64_t result;

  result = qword_150A160;
  if (!qword_150A160)
  {
    result = swift_getWitnessTable(&unk_10B0454, &_s11PlaceholderO15GenreCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_150A160);
  }
  return result;
}

unint64_t sub_E4D40C()
{
  unint64_t result;

  result = qword_150A168;
  if (!qword_150A168)
  {
    result = swift_getWitnessTable(&unk_10B0404, &_s11PlaceholderO15RadioCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_150A168);
  }
  return result;
}

unint64_t sub_E4D450()
{
  unint64_t result;

  result = qword_150A170;
  if (!qword_150A170)
  {
    result = swift_getWitnessTable(&unk_10B03B4, &_s11PlaceholderO16PersonCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_150A170);
  }
  return result;
}

unint64_t sub_E4D494()
{
  unint64_t result;

  result = qword_150A178;
  if (!qword_150A178)
  {
    result = swift_getWitnessTable(&unk_10B0364, &_s11PlaceholderO20MicrophoneCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_150A178);
  }
  return result;
}

unint64_t sub_E4D4D8()
{
  unint64_t result;

  result = qword_150A180;
  if (!qword_150A180)
  {
    result = swift_getWitnessTable(&unk_10B0314, &_s11PlaceholderO12TvCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_150A180);
  }
  return result;
}

unint64_t sub_E4D51C()
{
  unint64_t result;

  result = qword_150A188;
  if (!qword_150A188)
  {
    result = swift_getWitnessTable(&unk_10B02C4, &_s11PlaceholderO20MusicVideoCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_150A188);
  }
  return result;
}

unint64_t sub_E4D560()
{
  unint64_t result;

  result = qword_150A190;
  if (!qword_150A190)
  {
    result = swift_getWitnessTable(&unk_10B0274, &_s11PlaceholderO18PlaylistCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_150A190);
  }
  return result;
}

unint64_t sub_E4D5A4()
{
  unint64_t result;

  result = qword_150A1A0;
  if (!qword_150A1A0)
  {
    result = swift_getWitnessTable(&unk_10B0224, &_s11PlaceholderO21NewPlaylistCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_150A1A0);
  }
  return result;
}

unint64_t sub_E4D5E8()
{
  unint64_t result;

  result = qword_150A1A8;
  if (!qword_150A1A8)
  {
    result = swift_getWitnessTable(&unk_10B01D4, &_s11PlaceholderO20NowPlayingCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_150A1A8);
  }
  return result;
}

unint64_t sub_E4D62C()
{
  unint64_t result;

  result = qword_150A1B0;
  if (!qword_150A1B0)
  {
    result = swift_getWitnessTable(&unk_10B0184, &_s11PlaceholderO15MusicCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_150A1B0);
  }
  return result;
}

uint64_t type metadata accessor for PlaceholderStyleModifier(uint64_t a1)
{
  return sub_6345C(a1, qword_150A688, (uint64_t)&nominal type descriptor for PlaceholderStyleModifier);
}

uint64_t objectdestroy_8Tm_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_150A0C8) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = (_QWORD *)(v0 + v3);
  v6 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v0 + v3, 1, v6))
  {
    if (v5[3])
      __swift_destroy_boxed_opaque_existential_1((_QWORD *)(v0 + v3));
    if (v5[8])
      __swift_destroy_boxed_opaque_existential_1(v5 + 5);
    v7 = (char *)v5 + *(int *)(v6 + 24);
    v8 = type metadata accessor for BlendMode(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
      (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
  }
  return swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_E4D778(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_150A0C8) - 8) + 80);
  return sub_E4B85C(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_E4D7B8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of ArtworkMotionView.body>>, 1);
}

uint64_t sub_E4D7C8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of ArtworkImage.Placeholder.View.body>>, 1);
}

uint64_t sub_E4D7D8()
{
  return sub_4DD24(&qword_150A248, type metadata accessor for ArtworkImage.Placeholder, (uint64_t)&protocol conformance descriptor for ArtworkImage.Placeholder);
}

uint64_t sub_E4D804(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of PlaceholderStyleModifier.body(content:)>>, 1);
}

uint64_t *_s9ViewModelVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for Artwork.CropStyle(0);
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_15070F0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
  }
  return a1;
}

uint64_t _s9ViewModelVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v4 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = type metadata accessor for Artwork.CropStyle(0);
  v7 = *(_QWORD *)(v6 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  return result;
}

uint64_t _s9ViewModelVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for Artwork.CropStyle(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_15070F0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  return a1;
}

uint64_t _s9ViewModelVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = type metadata accessor for Artwork.CropStyle(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_15070F0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t _s9ViewModelVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for Artwork.CropStyle(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_15070F0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  return a1;
}

uint64_t _s9ViewModelVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = type metadata accessor for Artwork.CropStyle(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_15070F0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t _s9ViewModelVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_E4DDC0);
}

uint64_t sub_E4DDC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for Artwork(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_15070F0);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t _s9ViewModelVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_E4DE44);
}

uint64_t sub_E4DE44(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for Artwork(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_15070F0);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_E4DEC4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[2];

  v2 = type metadata accessor for Artwork(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1D1B7C(319, (unint64_t *)&unk_150A2B8, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork.CropStyle, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 2, v6, a1 + 16);
    }
  }
}

uint64_t *_s4InfoVwCP(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  _OWORD *v31;
  _OWORD *v32;
  __int128 v33;
  uint64_t v34;
  char *v35;
  char *v36;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for ArtworkImage.ViewModel(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CEE0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      v12 = *(int *)(v7 + 20);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = type metadata accessor for Artwork.CropStyle(0);
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_15070F0);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v18 = a3[5];
    v19 = (char *)a1 + v18;
    v20 = (char *)a2 + v18;
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF20);
    v22 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 10, v21))
    {
      v23 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      v24 = type metadata accessor for Playlist.Variant(0);
      v25 = *(_QWORD *)(v24 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v20, 1, v24))
      {
        v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506E88);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v19, v20, v24);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v19, 0, 1, v24);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 10, v21);
    }
    v27 = a3[6];
    v28 = a3[7];
    v29 = (char *)a1 + v27;
    v30 = (char *)a2 + v27;
    *(_QWORD *)v29 = *(_QWORD *)v30;
    v29[8] = v30[8];
    v31 = (_OWORD *)((char *)a1 + v28);
    v32 = (_OWORD *)((char *)a2 + v28);
    v33 = v32[1];
    *v31 = *v32;
    v31[1] = v33;
    *(_OWORD *)((char *)v31 + 26) = *(_OWORD *)((char *)v32 + 26);
    v34 = a3[8];
    v35 = (char *)a1 + v34;
    v36 = (char *)a2 + v34;
    *(_OWORD *)v35 = *(_OWORD *)v36;
    v35[16] = v36[16];
  }
  return a1;
}

uint64_t _s4InfoVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;

  v4 = type metadata accessor for ArtworkImage.ViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4))
  {
    v5 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
    v6 = a1 + *(int *)(v4 + 20);
    v7 = type metadata accessor for Artwork.CropStyle(0);
    v8 = *(_QWORD *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  v9 = a1 + *(int *)(a2 + 20);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF20);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 10, v10);
  if (!(_DWORD)result)
  {
    v12 = type metadata accessor for Playlist.Variant(0);
    v13 = *(_QWORD *)(v12 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v9, 1, v12);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v9, v12);
  }
  return result;
}

char *_s4InfoVwcp(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  char *v30;
  __int128 v31;
  uint64_t v32;
  char *v33;
  char *v34;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CEE0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
    v10 = *(int *)(v6 + 20);
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = type metadata accessor for Artwork.CropStyle(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_15070F0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v16 = a3[5];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF20);
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 10, v19))
  {
    v21 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v22 = type metadata accessor for Playlist.Variant(0);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v18, 1, v22))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506E88);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v17, v18, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v17, 0, 1, v22);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 10, v19);
  }
  v25 = a3[6];
  v26 = a3[7];
  v27 = &a1[v25];
  v28 = &a2[v25];
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v27[8] = v28[8];
  v29 = &a1[v26];
  v30 = &a2[v26];
  v31 = *((_OWORD *)v30 + 1);
  *(_OWORD *)v29 = *(_OWORD *)v30;
  *((_OWORD *)v29 + 1) = v31;
  *(_OWORD *)(v29 + 26) = *(_OWORD *)(v30 + 26);
  v32 = a3[8];
  v33 = &a1[v32];
  v34 = &a2[v32];
  *(_OWORD *)v33 = *(_OWORD *)v34;
  v33[16] = v34[16];
  return a1;
}

uint64_t _s4InfoVwca(uint64_t a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(void *, uint64_t, uint64_t);
  int v28;
  int v29;
  uint64_t v30;
  void *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(void *, uint64_t, uint64_t);
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(void *, uint64_t, uint64_t);
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  __int128 v60;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8((uint64_t)a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v21 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(a1, a2, v21);
      v22 = *(int *)(v6 + 20);
      v23 = (void *)(a1 + v22);
      v24 = &a2[v22];
      v25 = type metadata accessor for Artwork.CropStyle(0);
      v26 = *(_QWORD *)(v25 - 8);
      v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
      v28 = v27(v23, 1, v25);
      v29 = v27(v24, 1, v25);
      if (v28)
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 24))(v23, v24, v25);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_15070F0) - 8) + 64);
      v19 = v23;
      v20 = v24;
LABEL_8:
      memcpy(v19, v20, v18);
      goto LABEL_14;
    }
    sub_5C0DC(a1, type metadata accessor for ArtworkImage.ViewModel);
LABEL_7:
    v18 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CEE0) - 8) + 64);
    v19 = (void *)a1;
    v20 = a2;
    goto LABEL_8;
  }
  if (v10)
    goto LABEL_7;
  v11 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
  v12 = *(int *)(v6 + 20);
  v13 = (void *)(a1 + v12);
  v14 = &a2[v12];
  v15 = type metadata accessor for Artwork.CropStyle(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_15070F0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  v30 = a3[5];
  v31 = (void *)(a1 + v30);
  v32 = &a2[v30];
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF20);
  v34 = *(_QWORD *)(v33 - 8);
  v35 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v34 + 48);
  v36 = v35(v31, 10, v33);
  v37 = v35(v32, 10, v33);
  if (!v36)
  {
    if (!v37)
    {
      v42 = type metadata accessor for Playlist.Variant(0);
      v43 = *(_QWORD *)(v42 - 8);
      v44 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v43 + 48);
      v45 = v44(v31, 1, v42);
      v46 = v44(v32, 1, v42);
      if (v45)
      {
        if (!v46)
        {
          (*(void (**)(void *, char *, uint64_t))(v43 + 16))(v31, v32, v42);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v31, 0, 1, v42);
          goto LABEL_27;
        }
      }
      else
      {
        if (!v46)
        {
          (*(void (**)(void *, char *, uint64_t))(v43 + 24))(v31, v32, v42);
          goto LABEL_27;
        }
        (*(void (**)(void *, uint64_t))(v43 + 8))(v31, v42);
      }
      v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506E88);
      goto LABEL_21;
    }
    sub_56024((uint64_t)v31, &qword_150CF20);
LABEL_20:
    v41 = type metadata accessor for ArtworkImage.Placeholder(0);
LABEL_21:
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    goto LABEL_27;
  }
  if (v37)
    goto LABEL_20;
  v38 = type metadata accessor for Playlist.Variant(0);
  v39 = *(_QWORD *)(v38 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v32, 1, v38))
  {
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506E88);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v39 + 16))(v31, v32, v38);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v31, 0, 1, v38);
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 10, v33);
LABEL_27:
  v47 = a3[6];
  v48 = a1 + v47;
  v49 = &a2[v47];
  v50 = *(_QWORD *)v49;
  *(_BYTE *)(v48 + 8) = v49[8];
  *(_QWORD *)v48 = v50;
  v51 = a3[7];
  v52 = a1 + v51;
  v53 = &a2[v51];
  v54 = *(_QWORD *)v53;
  *(_BYTE *)(v52 + 8) = v53[8];
  *(_QWORD *)v52 = v54;
  v55 = *((_QWORD *)v53 + 2);
  *(_BYTE *)(v52 + 24) = v53[24];
  *(_QWORD *)(v52 + 16) = v55;
  v56 = *((_QWORD *)v53 + 4);
  *(_BYTE *)(v52 + 40) = v53[40];
  *(_QWORD *)(v52 + 32) = v56;
  *(_BYTE *)(v52 + 41) = v53[41];
  v57 = a3[8];
  v58 = a1 + v57;
  v59 = &a2[v57];
  v60 = *(_OWORD *)v59;
  *(_BYTE *)(v58 + 16) = v59[16];
  *(_OWORD *)v58 = v60;
  return a1;
}

char *_s4InfoVwtk(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  char *v30;
  __int128 v31;
  uint64_t v32;
  char *v33;
  char *v34;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CEE0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
    v10 = *(int *)(v6 + 20);
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = type metadata accessor for Artwork.CropStyle(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_15070F0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v16 = a3[5];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF20);
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 10, v19))
  {
    v21 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v22 = type metadata accessor for Playlist.Variant(0);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v18, 1, v22))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506E88);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v17, v18, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v17, 0, 1, v22);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 10, v19);
  }
  v25 = a3[6];
  v26 = a3[7];
  v27 = &a1[v25];
  v28 = &a2[v25];
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v27[8] = v28[8];
  v29 = &a1[v26];
  v30 = &a2[v26];
  v31 = *((_OWORD *)v30 + 1);
  *(_OWORD *)v29 = *(_OWORD *)v30;
  *((_OWORD *)v29 + 1) = v31;
  *(_OWORD *)(v29 + 26) = *(_OWORD *)(v30 + 26);
  v32 = a3[8];
  v33 = &a1[v32];
  v34 = &a2[v32];
  *(_OWORD *)v33 = *(_OWORD *)v34;
  v33[16] = v34[16];
  return a1;
}

uint64_t _s4InfoVwta(uint64_t a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(void *, uint64_t, uint64_t);
  int v28;
  int v29;
  uint64_t v30;
  void *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(void *, uint64_t, uint64_t);
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(void *, uint64_t, uint64_t);
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8((uint64_t)a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v21 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(a1, a2, v21);
      v22 = *(int *)(v6 + 20);
      v23 = (void *)(a1 + v22);
      v24 = &a2[v22];
      v25 = type metadata accessor for Artwork.CropStyle(0);
      v26 = *(_QWORD *)(v25 - 8);
      v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
      v28 = v27(v23, 1, v25);
      v29 = v27(v24, 1, v25);
      if (v28)
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 40))(v23, v24, v25);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_15070F0) - 8) + 64);
      v19 = v23;
      v20 = v24;
LABEL_8:
      memcpy(v19, v20, v18);
      goto LABEL_14;
    }
    sub_5C0DC(a1, type metadata accessor for ArtworkImage.ViewModel);
LABEL_7:
    v18 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CEE0) - 8) + 64);
    v19 = (void *)a1;
    v20 = a2;
    goto LABEL_8;
  }
  if (v10)
    goto LABEL_7;
  v11 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
  v12 = *(int *)(v6 + 20);
  v13 = (void *)(a1 + v12);
  v14 = &a2[v12];
  v15 = type metadata accessor for Artwork.CropStyle(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_15070F0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  v30 = a3[5];
  v31 = (void *)(a1 + v30);
  v32 = &a2[v30];
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF20);
  v34 = *(_QWORD *)(v33 - 8);
  v35 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v34 + 48);
  v36 = v35(v31, 10, v33);
  v37 = v35(v32, 10, v33);
  if (!v36)
  {
    if (!v37)
    {
      v42 = type metadata accessor for Playlist.Variant(0);
      v43 = *(_QWORD *)(v42 - 8);
      v44 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v43 + 48);
      v45 = v44(v31, 1, v42);
      v46 = v44(v32, 1, v42);
      if (v45)
      {
        if (!v46)
        {
          (*(void (**)(void *, char *, uint64_t))(v43 + 32))(v31, v32, v42);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v31, 0, 1, v42);
          goto LABEL_27;
        }
      }
      else
      {
        if (!v46)
        {
          (*(void (**)(void *, char *, uint64_t))(v43 + 40))(v31, v32, v42);
          goto LABEL_27;
        }
        (*(void (**)(void *, uint64_t))(v43 + 8))(v31, v42);
      }
      v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506E88);
      goto LABEL_21;
    }
    sub_56024((uint64_t)v31, &qword_150CF20);
LABEL_20:
    v41 = type metadata accessor for ArtworkImage.Placeholder(0);
LABEL_21:
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    goto LABEL_27;
  }
  if (v37)
    goto LABEL_20;
  v38 = type metadata accessor for Playlist.Variant(0);
  v39 = *(_QWORD *)(v38 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v32, 1, v38))
  {
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506E88);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v39 + 32))(v31, v32, v38);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v31, 0, 1, v38);
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 10, v33);
LABEL_27:
  v47 = a3[6];
  v48 = a3[7];
  v49 = a1 + v47;
  v50 = &a2[v47];
  *(_QWORD *)v49 = *(_QWORD *)v50;
  *(_BYTE *)(v49 + 8) = v50[8];
  v51 = a1 + v48;
  v52 = &a2[v48];
  *(_QWORD *)v51 = *(_QWORD *)v52;
  *(_BYTE *)(v51 + 8) = v52[8];
  *(_QWORD *)(v51 + 16) = *((_QWORD *)v52 + 2);
  *(_BYTE *)(v51 + 24) = v52[24];
  *(_BYTE *)(v51 + 40) = v52[40];
  *(_QWORD *)(v51 + 32) = *((_QWORD *)v52 + 4);
  *(_BYTE *)(v51 + 41) = v52[41];
  v53 = a3[8];
  v54 = a1 + v53;
  v55 = &a2[v53];
  *(_OWORD *)v54 = *(_OWORD *)v55;
  *(_BYTE *)(v54 + 16) = v55[16];
  return a1;
}

uint64_t _s4InfoVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_E4F180);
}

uint64_t sub_E4F180(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v14;
  unsigned int v15;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CEE0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = type metadata accessor for ArtworkImage.Placeholder(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 28) + 41) <= 2u)
    v14 = 2;
  else
    v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28) + 41);
  v15 = v14 - 2;
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 28) + 41) >= 2u)
    return v15;
  else
    return 0;
}

uint64_t _s4InfoVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_E4F244);
}

uint64_t sub_E4F244(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CEE0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = type metadata accessor for ArtworkImage.Placeholder(0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 28) + 41) = a2 + 2;
  return result;
}

void sub_E4F2F0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[5];

  sub_1D1B7C(319, (unint64_t *)&unk_150A350, type metadata accessor for ArtworkImage.ViewModel, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v4 = type metadata accessor for ArtworkImage.Placeholder(319);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      v6[2] = "\t";
      v6[3] = &unk_10AFAB0;
      v6[4] = &unk_10AFAC8;
      swift_initStructMetadata(a1, 256, 5, v6, a1 + 16);
    }
  }
}

uint64_t _s4SizeVwet(uint64_t a1, unsigned int a2)
{
  int v3;
  int v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 42))
    return (*(_DWORD *)a1 + 254);
  if (*(unsigned __int8 *)(a1 + 41) <= 2u)
    v3 = 2;
  else
    v3 = *(unsigned __int8 *)(a1 + 41);
  v4 = v3 - 3;
  if (*(unsigned __int8 *)(a1 + 41) < 2u)
    v5 = -1;
  else
    v5 = v4;
  return (v5 + 1);
}

uint64_t _s4SizeVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 42) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 42) = 0;
    if (a2)
      *(_BYTE *)(result + 41) = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ArtworkImage.Size()
{
  return &type metadata for ArtworkImage.Size;
}

uint64_t *initializeBufferWithCopyOfBuffer for ArtworkMotionView(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  _OWORD *v26;
  __int128 v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v42;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for VideoArtwork(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A078);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = a3[5];
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = type metadata accessor for Artwork(0);
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CB40);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    v17 = a3[6];
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    v20 = type metadata accessor for Artwork.CropStyle(0);
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_15070F0);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    v23 = a3[7];
    v24 = a3[8];
    v25 = (_OWORD *)((char *)a1 + v23);
    v26 = (_OWORD *)((char *)a2 + v23);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    *(_OWORD *)((char *)v25 + 26) = *(_OWORD *)((char *)v26 + 26);
    v28 = (char *)a1 + v24;
    v29 = (char *)a2 + v24;
    v30 = type metadata accessor for ArtworkImage.Placeholder(0);
    v31 = *(_QWORD *)(v30 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
    {
      v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A080);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF20);
      v34 = *(_QWORD *)(v33 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v29, 10, v33))
      {
        memcpy(v28, v29, *(_QWORD *)(v31 + 64));
      }
      else
      {
        v35 = type metadata accessor for Playlist.Variant(0);
        v42 = *(_QWORD *)(v35 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v29, 1, v35))
        {
          v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506E88);
          memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v28, v29, v35);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v28, 0, 1, v35);
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v28, 0, 10, v33);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
    }
    v37 = a3[9];
    v38 = (char *)a1 + v37;
    v39 = (char *)a2 + v37;
    v40 = type metadata accessor for ArtworkImage.ReusePolicy(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v38, v39, v40);
  }
  return a1;
}

uint64_t destroy for ArtworkMotionView(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = type metadata accessor for VideoArtwork(0);
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v6 = a1 + a2[5];
  v7 = type metadata accessor for Artwork(0);
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  v9 = a1 + a2[6];
  v10 = type metadata accessor for Artwork.CropStyle(0);
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  v12 = a1 + a2[8];
  v13 = type metadata accessor for ArtworkImage.Placeholder(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 1, v13))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF20);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v12, 10, v14))
    {
      v15 = type metadata accessor for Playlist.Variant(0);
      v16 = *(_QWORD *)(v15 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v12, 1, v15))
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v12, v15);
    }
  }
  v17 = a1 + a2[9];
  v18 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
}

char *initializeWithCopy for ArtworkMotionView(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  __int128 v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v40;

  v6 = type metadata accessor for VideoArtwork(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A078);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = type metadata accessor for Artwork(0);
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CB40);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  v15 = a3[6];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = type metadata accessor for Artwork.CropStyle(0);
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_15070F0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  v21 = a3[7];
  v22 = a3[8];
  v23 = &a1[v21];
  v24 = &a2[v21];
  v25 = *((_OWORD *)v24 + 1);
  *(_OWORD *)v23 = *(_OWORD *)v24;
  *((_OWORD *)v23 + 1) = v25;
  *(_OWORD *)(v23 + 26) = *(_OWORD *)(v24 + 26);
  v26 = &a1[v22];
  v27 = &a2[v22];
  v28 = type metadata accessor for ArtworkImage.Placeholder(0);
  v29 = *(_QWORD *)(v28 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
  {
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A080);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF20);
    v32 = *(_QWORD *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v27, 10, v31))
    {
      memcpy(v26, v27, *(_QWORD *)(v29 + 64));
    }
    else
    {
      v33 = type metadata accessor for Playlist.Variant(0);
      v40 = *(_QWORD *)(v33 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v27, 1, v33))
      {
        v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506E88);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v26, v27, v33);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v26, 0, 1, v33);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v26, 0, 10, v31);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
  }
  v35 = a3[9];
  v36 = &a1[v35];
  v37 = &a2[v35];
  v38 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  return a1;
}

char *assignWithCopy for ArtworkMotionView(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t, uint64_t);
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t (*v41)(char *, uint64_t, uint64_t);
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  size_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(char *, uint64_t, uint64_t);
  int v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v64;
  uint64_t (*v65)(char *, uint64_t, uint64_t);
  int v66;
  int v67;
  uint64_t v68;

  v6 = type metadata accessor for VideoArtwork(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A078);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = type metadata accessor for Artwork(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
LABEL_12:
    v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CB40);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v13, v14, v15);
LABEL_13:
  v21 = a3[6];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = type metadata accessor for Artwork.CropStyle(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
  v27 = v26(v22, 1, v24);
  v28 = v26(v23, 1, v24);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v22, v24);
LABEL_18:
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_15070F0);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v25 + 24))(v22, v23, v24);
LABEL_19:
  v30 = a3[7];
  v31 = &a1[v30];
  v32 = &a2[v30];
  v33 = *(_QWORD *)v32;
  v31[8] = v32[8];
  *(_QWORD *)v31 = v33;
  v34 = *((_QWORD *)v32 + 2);
  v31[24] = v32[24];
  *((_QWORD *)v31 + 2) = v34;
  v35 = *((_QWORD *)v32 + 4);
  v31[40] = v32[40];
  *((_QWORD *)v31 + 4) = v35;
  v31[41] = v32[41];
  v36 = a3[8];
  v37 = &a1[v36];
  v38 = &a2[v36];
  v39 = type metadata accessor for ArtworkImage.Placeholder(0);
  v40 = *(_QWORD **)(v39 - 8);
  v41 = (uint64_t (*)(char *, uint64_t, uint64_t))v40[6];
  v42 = v41(v37, 1, v39);
  v43 = v41(v38, 1, v39);
  if (v42)
  {
    if (!v43)
    {
      v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF20);
      v45 = *(_QWORD *)(v44 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v38, 10, v44))
      {
        memcpy(v37, v38, v40[8]);
      }
      else
      {
        v56 = type metadata accessor for Playlist.Variant(0);
        v68 = *(_QWORD *)(v56 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v38, 1, v56))
        {
          v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506E88);
          memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v37, v38, v56);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v37, 0, 1, v56);
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v37, 0, 10, v44);
      }
      v58 = (void (*)(char *, _QWORD, uint64_t, uint64_t))v40[7];
      goto LABEL_43;
    }
    goto LABEL_25;
  }
  if (v43)
  {
    sub_5C0DC((uint64_t)v37, type metadata accessor for ArtworkImage.Placeholder);
LABEL_25:
    v46 = &qword_150A080;
LABEL_26:
    v47 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(v46) - 8) + 64);
LABEL_27:
    memcpy(v37, v38, v47);
    goto LABEL_44;
  }
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF20);
  v49 = *(_QWORD *)(v48 - 8);
  v50 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v49 + 48);
  v51 = v50(v37, 10, v48);
  v52 = v50(v38, 10, v48);
  if (!v51)
  {
    if (!v52)
    {
      v39 = type metadata accessor for Playlist.Variant(0);
      v64 = *(_QWORD *)(v39 - 8);
      v65 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v64 + 48);
      v66 = v65(v37, 1, v39);
      v67 = v65(v38, 1, v39);
      if (v66)
      {
        if (!v67)
        {
          (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v37, v38, v39);
          v58 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56);
LABEL_43:
          v58(v37, 0, 1, v39);
          goto LABEL_44;
        }
      }
      else
      {
        if (!v67)
        {
          (*(void (**)(char *, char *, uint64_t))(v64 + 24))(v37, v38, v39);
          goto LABEL_44;
        }
        (*(void (**)(char *, uint64_t))(v64 + 8))(v37, v39);
      }
      v46 = &qword_1506E88;
      goto LABEL_26;
    }
    sub_56024((uint64_t)v37, &qword_150CF20);
LABEL_39:
    v47 = v40[8];
    goto LABEL_27;
  }
  if (v52)
    goto LABEL_39;
  v53 = type metadata accessor for Playlist.Variant(0);
  v54 = *(_QWORD *)(v53 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v38, 1, v53))
  {
    v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506E88);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v37, v38, v53);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v37, 0, 1, v53);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v37, 0, 10, v48);
LABEL_44:
  v59 = a3[9];
  v60 = &a1[v59];
  v61 = &a2[v59];
  v62 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 24))(v60, v61, v62);
  return a1;
}

char *initializeWithTake for ArtworkMotionView(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  __int128 v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v40;

  v6 = type metadata accessor for VideoArtwork(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A078);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = type metadata accessor for Artwork(0);
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CB40);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  v15 = a3[6];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = type metadata accessor for Artwork.CropStyle(0);
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_15070F0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  v21 = a3[7];
  v22 = a3[8];
  v23 = &a1[v21];
  v24 = &a2[v21];
  v25 = *((_OWORD *)v24 + 1);
  *(_OWORD *)v23 = *(_OWORD *)v24;
  *((_OWORD *)v23 + 1) = v25;
  *(_OWORD *)(v23 + 26) = *(_OWORD *)(v24 + 26);
  v26 = &a1[v22];
  v27 = &a2[v22];
  v28 = type metadata accessor for ArtworkImage.Placeholder(0);
  v29 = *(_QWORD *)(v28 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
  {
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A080);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF20);
    v32 = *(_QWORD *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v27, 10, v31))
    {
      memcpy(v26, v27, *(_QWORD *)(v29 + 64));
    }
    else
    {
      v33 = type metadata accessor for Playlist.Variant(0);
      v40 = *(_QWORD *)(v33 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v27, 1, v33))
      {
        v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506E88);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v26, v27, v33);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v26, 0, 1, v33);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v26, 0, 10, v31);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
  }
  v35 = a3[9];
  v36 = &a1[v35];
  v37 = &a2[v35];
  v38 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  return a1;
}

char *assignWithTake for ArtworkMotionView(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t, uint64_t);
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t (*v38)(char *, uint64_t, uint64_t);
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  size_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(char *, uint64_t, uint64_t);
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v61;
  uint64_t (*v62)(char *, uint64_t, uint64_t);
  int v63;
  int v64;
  uint64_t v65;

  v6 = type metadata accessor for VideoArtwork(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A078);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = type metadata accessor for Artwork(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
LABEL_12:
    v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CB40);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v13, v14, v15);
LABEL_13:
  v21 = a3[6];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = type metadata accessor for Artwork.CropStyle(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
  v27 = v26(v22, 1, v24);
  v28 = v26(v23, 1, v24);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v22, v23, v24);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v22, v24);
LABEL_18:
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_15070F0);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v25 + 40))(v22, v23, v24);
LABEL_19:
  v30 = a3[7];
  v31 = a3[8];
  v32 = &a1[v30];
  v33 = &a2[v30];
  *(_QWORD *)v32 = *(_QWORD *)v33;
  v32[8] = v33[8];
  *((_QWORD *)v32 + 2) = *((_QWORD *)v33 + 2);
  v32[24] = v33[24];
  *((_QWORD *)v32 + 4) = *((_QWORD *)v33 + 4);
  *((_WORD *)v32 + 20) = *((_WORD *)v33 + 20);
  v34 = &a1[v31];
  v35 = &a2[v31];
  v36 = type metadata accessor for ArtworkImage.Placeholder(0);
  v37 = *(_QWORD **)(v36 - 8);
  v38 = (uint64_t (*)(char *, uint64_t, uint64_t))v37[6];
  v39 = v38(v34, 1, v36);
  v40 = v38(v35, 1, v36);
  if (v39)
  {
    if (!v40)
    {
      v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF20);
      v42 = *(_QWORD *)(v41 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v35, 10, v41))
      {
        memcpy(v34, v35, v37[8]);
      }
      else
      {
        v53 = type metadata accessor for Playlist.Variant(0);
        v65 = *(_QWORD *)(v53 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v35, 1, v53))
        {
          v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506E88);
          memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v34, v35, v53);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v34, 0, 1, v53);
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v34, 0, 10, v41);
      }
      v55 = (void (*)(char *, _QWORD, uint64_t, uint64_t))v37[7];
      goto LABEL_43;
    }
    goto LABEL_25;
  }
  if (v40)
  {
    sub_5C0DC((uint64_t)v34, type metadata accessor for ArtworkImage.Placeholder);
LABEL_25:
    v43 = &qword_150A080;
LABEL_26:
    v44 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(v43) - 8) + 64);
LABEL_27:
    memcpy(v34, v35, v44);
    goto LABEL_44;
  }
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF20);
  v46 = *(_QWORD *)(v45 - 8);
  v47 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v46 + 48);
  v48 = v47(v34, 10, v45);
  v49 = v47(v35, 10, v45);
  if (!v48)
  {
    if (!v49)
    {
      v36 = type metadata accessor for Playlist.Variant(0);
      v61 = *(_QWORD *)(v36 - 8);
      v62 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v61 + 48);
      v63 = v62(v34, 1, v36);
      v64 = v62(v35, 1, v36);
      if (v63)
      {
        if (!v64)
        {
          (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v34, v35, v36);
          v55 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56);
LABEL_43:
          v55(v34, 0, 1, v36);
          goto LABEL_44;
        }
      }
      else
      {
        if (!v64)
        {
          (*(void (**)(char *, char *, uint64_t))(v61 + 40))(v34, v35, v36);
          goto LABEL_44;
        }
        (*(void (**)(char *, uint64_t))(v61 + 8))(v34, v36);
      }
      v43 = &qword_1506E88;
      goto LABEL_26;
    }
    sub_56024((uint64_t)v34, &qword_150CF20);
LABEL_39:
    v44 = v37[8];
    goto LABEL_27;
  }
  if (v49)
    goto LABEL_39;
  v50 = type metadata accessor for Playlist.Variant(0);
  v51 = *(_QWORD *)(v50 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v35, 1, v50))
  {
    v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506E88);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v34, v35, v50);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v34, 0, 1, v50);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v34, 0, 10, v45);
LABEL_44:
  v56 = a3[9];
  v57 = &a1[v56];
  v58 = &a2[v56];
  v59 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 40))(v57, v58, v59);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArtworkMotionView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_E50C44);
}

uint64_t sub_E50C44(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  unsigned int v15;
  uint64_t v16;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A078);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CB40);
  v10 = *(_QWORD *)(v9 - 8);
  if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
  {
    v11 = v9;
    v12 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_15070F0);
  v10 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
  {
    v11 = v13;
    v12 = a3[6];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
  if ((_DWORD)a2 != 253)
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A080);
    v10 = *(_QWORD *)(v16 - 8);
    if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
    {
      v11 = v16;
      v12 = a3[8];
    }
    else
    {
      v11 = type metadata accessor for ArtworkImage.ReusePolicy(0);
      v10 = *(_QWORD *)(v11 - 8);
      v12 = a3[9];
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
  if (*(unsigned __int8 *)(a1 + a3[7] + 41) <= 2u)
    v14 = 2;
  else
    v14 = *(unsigned __int8 *)(a1 + a3[7] + 41);
  v15 = v14 - 2;
  if (*(unsigned __int8 *)(a1 + a3[7] + 41) >= 2u)
    return v15;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ArtworkMotionView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_E50D7C);
}

uint64_t sub_E50D7C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A078);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_150CB40);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      result = __swift_instantiateConcreteTypeFromMangledName(&qword_15070F0);
      v14 = *(_QWORD *)(result - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = result;
        v15 = a4[6];
      }
      else
      {
        if (a3 == 253)
        {
          *(_BYTE *)(a1 + a4[7] + 41) = a2 + 2;
          return result;
        }
        v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A080);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[8];
        }
        else
        {
          v10 = type metadata accessor for ArtworkImage.ReusePolicy(0);
          v14 = *(_QWORD *)(v10 - 8);
          v15 = a4[9];
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_E50E9C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD v12[6];

  sub_1D1B7C(319, &qword_150A3F8, (uint64_t (*)(uint64_t))&type metadata accessor for VideoArtwork, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v3 <= 0x3F)
  {
    v12[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1D1B7C(319, &qword_150A400, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    if (v5 <= 0x3F)
    {
      v12[1] = *(_QWORD *)(v4 - 8) + 64;
      sub_1D1B7C(319, (unint64_t *)&unk_150A2B8, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork.CropStyle, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
      if (v7 <= 0x3F)
      {
        v12[2] = *(_QWORD *)(v6 - 8) + 64;
        v12[3] = &unk_10AFAB0;
        sub_1D1B7C(319, (unint64_t *)&unk_150A408, type metadata accessor for ArtworkImage.Placeholder, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
        if (v9 <= 0x3F)
        {
          v12[4] = *(_QWORD *)(v8 - 8) + 64;
          v10 = type metadata accessor for ArtworkImage.ReusePolicy(319);
          if (v11 <= 0x3F)
          {
            v12[5] = *(_QWORD *)(v10 - 8) + 64;
            swift_initStructMetadata(a1, 256, 6, v12, a1 + 16);
          }
        }
      }
    }
  }
}

uint64_t *_s11PlaceholderOwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF20);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 10, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v10 = type metadata accessor for Playlist.Variant(0);
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v11 + 48))(a2, 1, v10))
      {
        v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506E88);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v11 + 16))(a1, a2, v10);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 10, v7);
    }
  }
  return a1;
}

uint64_t _s11PlaceholderOwxx(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF20);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 10, v2);
  if (!(_DWORD)result)
  {
    v4 = type metadata accessor for Playlist.Variant(0);
    v5 = *(_QWORD *)(v4 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  return result;
}

void *_s11PlaceholderOwcp(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF20);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 10, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = type metadata accessor for Playlist.Variant(0);
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506E88);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(a1, a2, v8);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 10, v6);
  }
  return a1;
}

void *_s11PlaceholderOwca(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void *, uint64_t, uint64_t);
  int v18;
  int v19;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF20);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 10, v6);
  v10 = v8(a2, 10, v6);
  if (!v9)
  {
    if (!v10)
    {
      v15 = type metadata accessor for Playlist.Variant(0);
      v16 = *(_QWORD *)(v15 - 8);
      v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
      v18 = v17(a1, 1, v15);
      v19 = v17(a2, 1, v15);
      if (v18)
      {
        if (!v19)
        {
          (*(void (**)(void *, void *, uint64_t))(v16 + 16))(a1, a2, v15);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
          return a1;
        }
      }
      else
      {
        if (!v19)
        {
          (*(void (**)(void *, void *, uint64_t))(v16 + 24))(a1, a2, v15);
          return a1;
        }
        (*(void (**)(void *, uint64_t))(v16 + 8))(a1, v15);
      }
      v14 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1506E88) - 8);
      goto LABEL_8;
    }
    sub_56024((uint64_t)a1, &qword_150CF20);
LABEL_7:
    v14 = *(_QWORD *)(a3 - 8);
LABEL_8:
    memcpy(a1, a2, *(_QWORD *)(v14 + 64));
    return a1;
  }
  if (v10)
    goto LABEL_7;
  v11 = type metadata accessor for Playlist.Variant(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506E88);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v12 + 16))(a1, a2, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 10, v6);
  return a1;
}

void *_s11PlaceholderOwtk(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF20);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 10, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = type metadata accessor for Playlist.Variant(0);
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506E88);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(a1, a2, v8);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 10, v6);
  }
  return a1;
}

void *_s11PlaceholderOwta(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void *, uint64_t, uint64_t);
  int v18;
  int v19;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF20);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 10, v6);
  v10 = v8(a2, 10, v6);
  if (!v9)
  {
    if (!v10)
    {
      v15 = type metadata accessor for Playlist.Variant(0);
      v16 = *(_QWORD *)(v15 - 8);
      v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
      v18 = v17(a1, 1, v15);
      v19 = v17(a2, 1, v15);
      if (v18)
      {
        if (!v19)
        {
          (*(void (**)(void *, void *, uint64_t))(v16 + 32))(a1, a2, v15);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
          return a1;
        }
      }
      else
      {
        if (!v19)
        {
          (*(void (**)(void *, void *, uint64_t))(v16 + 40))(a1, a2, v15);
          return a1;
        }
        (*(void (**)(void *, uint64_t))(v16 + 8))(a1, v15);
      }
      v14 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1506E88) - 8);
      goto LABEL_8;
    }
    sub_56024((uint64_t)a1, &qword_150CF20);
LABEL_7:
    v14 = *(_QWORD *)(a3 - 8);
LABEL_8:
    memcpy(a1, a2, *(_QWORD *)(v14 + 64));
    return a1;
  }
  if (v10)
    goto LABEL_7;
  v11 = type metadata accessor for Playlist.Variant(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506E88);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v12 + 32))(a1, a2, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 10, v6);
  return a1;
}

uint64_t _s11PlaceholderOwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_E51790);
}

uint64_t sub_E51790(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF20);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 0xB)
    return v5 - 10;
  else
    return 0;
}

uint64_t _s11PlaceholderOwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_E517EC);
}

uint64_t sub_E517EC(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 10);
  else
    v5 = 0;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF20);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_E51844(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF20);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 10, v2);
}

uint64_t sub_E51880(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_150CF20);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 10, v4);
}

void sub_E518C4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  sub_1D1B7C(319, &qword_150A4C8, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Variant, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v3 <= 0x3F)
    swift_initEnumMetadataSinglePayload(a1, 256, *(_QWORD *)(v2 - 8) + 64, 10);
}

uint64_t _s11PlaceholderO4ViewVwCP(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  _OWORD *v20;
  _OWORD *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  char *__dst;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v16 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    v8 = *(int *)(a3 + 32);
    v9 = (_OWORD *)(a1 + v8);
    v10 = (_OWORD *)((char *)a2 + v8);
    *(_QWORD *)(a1 + 40) = a2[5];
    swift_bridgeObjectRetain();
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506548);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A0C8);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
        v15 = 1;
      }
      else
      {
        v17 = *((_QWORD *)v10 + 3);
        if (v17)
        {
          v18 = *((_QWORD *)v10 + 4);
          *((_QWORD *)v9 + 3) = v17;
          *((_QWORD *)v9 + 4) = v18;
          (**(void (***)(_OWORD *, _OWORD *))(v17 - 8))(v9, v10);
        }
        else
        {
          v19 = v10[1];
          *v9 = *v10;
          v9[1] = v19;
          *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
        }
        v20 = (_OWORD *)((char *)v9 + 40);
        v21 = (_OWORD *)((char *)v10 + 40);
        v22 = *((_QWORD *)v10 + 8);
        if (v22)
        {
          v23 = *((_QWORD *)v10 + 9);
          *((_QWORD *)v9 + 8) = v22;
          *((_QWORD *)v9 + 9) = v23;
          (**(void (***)(_OWORD *, _OWORD *))(v22 - 8))(v20, v21);
        }
        else
        {
          v24 = *(_OWORD *)((char *)v10 + 56);
          *v20 = *v21;
          *(_OWORD *)((char *)v9 + 56) = v24;
          *((_QWORD *)v9 + 9) = *((_QWORD *)v10 + 9);
        }
        v25 = *(int *)(v12 + 24);
        __dst = (char *)v9 + v25;
        v26 = (char *)v10 + v25;
        v27 = type metadata accessor for BlendMode(0);
        v28 = *(_QWORD *)(v27 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
        {
          v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A0E0);
          memcpy(__dst, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v28 + 16))(__dst, v26, v27);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(__dst, 0, 1, v27);
        }
        v15 = 1;
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
      }
    }
    else
    {
      *(_QWORD *)v9 = *(_QWORD *)v10;
      swift_retain();
      v15 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v11, v15);
    v30 = *(int *)(a3 + 36);
    v31 = (_QWORD *)(a1 + v30);
    v32 = (uint64_t *)((char *)a2 + v30);
    v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1506550);
    if (swift_getEnumCaseMultiPayload(v32, v33) == 1)
    {
      v34 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v31, v32, v34);
      v35 = v31;
      v36 = v33;
      v37 = 1;
    }
    else
    {
      *v31 = *v32;
      swift_retain();
      v35 = v31;
      v36 = v33;
      v37 = 0;
    }
    swift_storeEnumTagMultiPayload(v35, v36, v37);
  }
  return a1;
}

double _s11PlaceholderO4ViewVwxx(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double result;

  swift_bridgeObjectRelease();
  v4 = (_QWORD *)(a1 + *(int *)(a2 + 32));
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506548);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v4, 1, v6))
    {
      if (v4[3])
        __swift_destroy_boxed_opaque_existential_1(v4);
      if (v4[8])
        __swift_destroy_boxed_opaque_existential_1(v4 + 5);
      v7 = (char *)v4 + *(int *)(v6 + 24);
      v8 = type metadata accessor for BlendMode(0);
      v9 = *(_QWORD *)(v8 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
        (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
    }
  }
  else
  {
    swift_release();
  }
  v10 = a1 + *(int *)(a2 + 36);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1506550);
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v12 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v10, v12);
  }
  else
  {
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t _s11PlaceholderO4ViewVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  _OWORD *v18;
  _OWORD *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *__dst;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v7 = *(int *)(a3 + 32);
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  swift_bridgeObjectRetain();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506548);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A0C8);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      v14 = 1;
    }
    else
    {
      v15 = *((_QWORD *)v9 + 3);
      if (v15)
      {
        v16 = *((_QWORD *)v9 + 4);
        *((_QWORD *)v8 + 3) = v15;
        *((_QWORD *)v8 + 4) = v16;
        (**(void (***)(_OWORD *, _OWORD *))(v15 - 8))(v8, v9);
      }
      else
      {
        v17 = v9[1];
        *v8 = *v9;
        v8[1] = v17;
        *((_QWORD *)v8 + 4) = *((_QWORD *)v9 + 4);
      }
      v18 = (_OWORD *)((char *)v8 + 40);
      v19 = (_OWORD *)((char *)v9 + 40);
      v20 = *((_QWORD *)v9 + 8);
      if (v20)
      {
        v21 = *((_QWORD *)v9 + 9);
        *((_QWORD *)v8 + 8) = v20;
        *((_QWORD *)v8 + 9) = v21;
        (**(void (***)(_OWORD *, _OWORD *))(v20 - 8))(v18, v19);
      }
      else
      {
        v22 = *(_OWORD *)((char *)v9 + 56);
        *v18 = *v19;
        *(_OWORD *)((char *)v8 + 56) = v22;
        *((_QWORD *)v8 + 9) = *((_QWORD *)v9 + 9);
      }
      v23 = *(int *)(v11 + 24);
      __dst = (char *)v8 + v23;
      v24 = (char *)v9 + v23;
      v25 = type metadata accessor for BlendMode(0);
      v26 = *(_QWORD *)(v25 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
      {
        v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A0E0);
        memcpy(__dst, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 16))(__dst, v24, v25);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(__dst, 0, 1, v25);
      }
      v14 = 1;
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
    }
  }
  else
  {
    *(_QWORD *)v8 = *(_QWORD *)v9;
    swift_retain();
    v14 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v10, v14);
  v28 = *(int *)(a3 + 36);
  v29 = (_QWORD *)(a1 + v28);
  v30 = (_QWORD *)(a2 + v28);
  v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1506550);
  if (swift_getEnumCaseMultiPayload(v30, v31) == 1)
  {
    v32 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v29, v30, v32);
    v33 = 1;
  }
  else
  {
    *v29 = *v30;
    swift_retain();
    v33 = 0;
  }
  swift_storeEnumTagMultiPayload(v29, v31, v33);
  return a1;
}

_QWORD *_s11PlaceholderO4ViewVwca(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _OWORD *v7;
  __int128 *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  _OWORD *v17;
  __int128 *v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *__dst;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 32);
    v7 = (_OWORD *)((char *)a1 + v6);
    v8 = (__int128 *)((char *)a2 + v6);
    sub_56024((uint64_t)a1 + v6, &qword_1506548);
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506548);
    if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
    {
      v10 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(__int128 *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
      {
        v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A0C8);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        v13 = 1;
      }
      else
      {
        v14 = *((_QWORD *)v8 + 3);
        if (v14)
        {
          *((_QWORD *)v7 + 3) = v14;
          *((_QWORD *)v7 + 4) = *((_QWORD *)v8 + 4);
          (**(void (***)(_OWORD *, __int128 *))(v14 - 8))(v7, v8);
        }
        else
        {
          v15 = *v8;
          v16 = v8[1];
          *((_QWORD *)v7 + 4) = *((_QWORD *)v8 + 4);
          *v7 = v15;
          v7[1] = v16;
        }
        v17 = (_OWORD *)((char *)v7 + 40);
        v18 = (__int128 *)((char *)v8 + 40);
        v19 = *((_QWORD *)v8 + 8);
        if (v19)
        {
          *((_QWORD *)v7 + 8) = v19;
          *((_QWORD *)v7 + 9) = *((_QWORD *)v8 + 9);
          (**(void (***)(_OWORD *, __int128 *))(v19 - 8))(v17, v18);
        }
        else
        {
          v20 = *v18;
          v21 = *(__int128 *)((char *)v8 + 56);
          *((_QWORD *)v7 + 9) = *((_QWORD *)v8 + 9);
          *v17 = v20;
          *(_OWORD *)((char *)v7 + 56) = v21;
        }
        v22 = *(int *)(v10 + 24);
        __dst = (char *)v7 + v22;
        v23 = (char *)v8 + v22;
        v24 = type metadata accessor for BlendMode(0);
        v25 = *(_QWORD *)(v24 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
        {
          v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A0E0);
          memcpy(__dst, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v25 + 16))(__dst, v23, v24);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(__dst, 0, 1, v24);
        }
        v13 = 1;
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
      }
    }
    else
    {
      *(_QWORD *)v7 = *(_QWORD *)v8;
      swift_retain();
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v7, v9, v13);
    v27 = *(int *)(a3 + 36);
    v28 = (_QWORD *)((char *)a1 + v27);
    v29 = (_QWORD *)((char *)a2 + v27);
    sub_56024((uint64_t)a1 + v27, (uint64_t *)&unk_1506550);
    v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1506550);
    if (swift_getEnumCaseMultiPayload(v29, v30) == 1)
    {
      v31 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v28, v29, v31);
      v32 = 1;
    }
    else
    {
      *v28 = *v29;
      swift_retain();
      v32 = 0;
    }
    swift_storeEnumTagMultiPayload(v28, v30, v32);
  }
  return a1;
}

uint64_t _s11PlaceholderO4ViewVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  char *__dst;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v6 = *(int *)(a3 + 32);
  v7 = (_OWORD *)(a1 + v6);
  v8 = (_OWORD *)(a2 + v6);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506548);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A0C8);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v13 = v8[1];
      *v7 = *v8;
      v7[1] = v13;
      *((_QWORD *)v7 + 4) = *((_QWORD *)v8 + 4);
      *(_OWORD *)((char *)v7 + 40) = *(_OWORD *)((char *)v8 + 40);
      *(_OWORD *)((char *)v7 + 56) = *(_OWORD *)((char *)v8 + 56);
      *((_QWORD *)v7 + 9) = *((_QWORD *)v8 + 9);
      v14 = *(int *)(v10 + 24);
      __dst = (char *)v7 + v14;
      v15 = (char *)v8 + v14;
      v16 = type metadata accessor for BlendMode(0);
      v17 = *(_QWORD *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      {
        v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A0E0);
        memcpy(__dst, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 32))(__dst, v15, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v16);
      }
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
    }
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v19 = *(int *)(a3 + 36);
  v20 = (void *)(a1 + v19);
  v21 = (const void *)(a2 + v19);
  v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1506550);
  if (swift_getEnumCaseMultiPayload(v21, v22) == 1)
  {
    v23 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v20, v21, v23);
    swift_storeEnumTagMultiPayload(v20, v22, 1);
  }
  else
  {
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  return a1;
}

uint64_t _s11PlaceholderO4ViewVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  char *__dst;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v7;
  if (a1 != a2)
  {
    v8 = *(int *)(a3 + 32);
    v9 = (_OWORD *)(a1 + v8);
    v10 = (_OWORD *)(a2 + v8);
    sub_56024(a1 + v8, &qword_1506548);
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1506548);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A0C8);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        v15 = v10[1];
        *v9 = *v10;
        v9[1] = v15;
        *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
        *(_OWORD *)((char *)v9 + 40) = *(_OWORD *)((char *)v10 + 40);
        *(_OWORD *)((char *)v9 + 56) = *(_OWORD *)((char *)v10 + 56);
        *((_QWORD *)v9 + 9) = *((_QWORD *)v10 + 9);
        v16 = *(int *)(v12 + 24);
        __dst = (char *)v9 + v16;
        v17 = (char *)v10 + v16;
        v18 = type metadata accessor for BlendMode(0);
        v19 = *(_QWORD *)(v18 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
        {
          v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A0E0);
          memcpy(__dst, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v19 + 32))(__dst, v17, v18);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
        }
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
      }
      swift_storeEnumTagMultiPayload(v9, v11, 1);
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    v21 = *(int *)(a3 + 36);
    v22 = (void *)(a1 + v21);
    v23 = (const void *)(a2 + v21);
    sub_56024(a1 + v21, (uint64_t *)&unk_1506550);
    v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1506550);
    if (swift_getEnumCaseMultiPayload(v23, v24) == 1)
    {
      v25 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v22, v23, v25);
      swift_storeEnumTagMultiPayload(v22, v24, 1);
    }
    else
    {
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
  }
  return a1;
}

uint64_t _s11PlaceholderO4ViewVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_E527B0);
}

uint64_t sub_E527B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A4D0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 32);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A4D8);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 36);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t _s11PlaceholderO4ViewVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_E52864);
}

uint64_t sub_E52864(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A4D0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 32);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A4D8);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 36);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_E52908(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[6];

  v6[0] = &unk_10AFB38;
  v6[1] = (char *)&value witness table for Builtin.Int64 + 64;
  v6[2] = &unk_10AFB50;
  v6[3] = (char *)&value witness table for Builtin.Int64 + 64;
  sub_E529C8(319);
  if (v3 <= 0x3F)
  {
    v6[4] = *(_QWORD *)(v2 - 8) + 64;
    sub_1D1B7C(319, (unint64_t *)&unk_150A550, (uint64_t (*)(uint64_t))&type metadata accessor for ColorSchemeContrast, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v5 <= 0x3F)
    {
      v6[5] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 6, v6, a1 + 16);
    }
  }
}

void sub_E529C8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_150A548)
  {
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_150A0C8);
    v3 = type metadata accessor for Environment.Content(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_150A548);
  }
}

uint64_t _s11PlaceholderO4ViewV5StyleVwCP(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  _OWORD *v11;
  _OWORD *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  void *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = v9 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[3];
    if (v7)
    {
      v8 = a2[4];
      *(_QWORD *)(a1 + 24) = v7;
      *(_QWORD *)(a1 + 32) = v8;
      (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    }
    else
    {
      v10 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v10;
      *(_QWORD *)(a1 + 32) = a2[4];
    }
    v11 = (_OWORD *)(v4 + 40);
    v12 = a2 + 5;
    v13 = a2[8];
    if (v13)
    {
      v14 = a2[9];
      *(_QWORD *)(v4 + 64) = v13;
      *(_QWORD *)(v4 + 72) = v14;
      (**(void (***)(_OWORD *, _OWORD *))(v13 - 8))(v11, v12);
    }
    else
    {
      v15 = *(_OWORD *)(a2 + 7);
      *v11 = *v12;
      *(_OWORD *)(v4 + 56) = v15;
      *(_QWORD *)(v4 + 72) = a2[9];
    }
    v16 = *(int *)(a3 + 24);
    v17 = (void *)(v4 + v16);
    v18 = (char *)a2 + v16;
    v19 = type metadata accessor for BlendMode(0);
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A0E0);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
  }
  return v4;
}

uint64_t _s11PlaceholderO4ViewV5StyleVwxx(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  if (a1[3])
    __swift_destroy_boxed_opaque_existential_1(a1);
  if (a1[8])
    __swift_destroy_boxed_opaque_existential_1(a1 + 5);
  v4 = (char *)a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for BlendMode(0);
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

uint64_t _s11PlaceholderO4ViewV5StyleVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  _OWORD *v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = *(_QWORD *)(a2 + 24);
  if (v6)
  {
    v7 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 32) = v7;
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
  }
  else
  {
    v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  }
  v9 = (_OWORD *)(a1 + 40);
  v10 = (_OWORD *)(a2 + 40);
  v11 = *(_QWORD *)(a2 + 64);
  if (v11)
  {
    v12 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v11;
    *(_QWORD *)(a1 + 72) = v12;
    (**(void (***)(_OWORD *, _OWORD *))(v11 - 8))(v9, v10);
  }
  else
  {
    v13 = *(_OWORD *)(a2 + 56);
    *v9 = *v10;
    *(_OWORD *)(a1 + 56) = v13;
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  }
  v14 = *(int *)(a3 + 24);
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  v17 = type metadata accessor for BlendMode(0);
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A0E0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 16))(v15, v16, v17);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  return a1;
}

uint64_t _s11PlaceholderO4ViewV5StyleVwca(uint64_t a1, __int128 *a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;

  v6 = *((_QWORD *)a2 + 3);
  if (*(_QWORD *)(a1 + 24))
  {
    if (v6)
    {
      __swift_assign_boxed_opaque_existential_1((_QWORD *)a1, a2);
      goto LABEL_8;
    }
    __swift_destroy_boxed_opaque_existential_1((_QWORD *)a1);
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    (**(void (***)(uint64_t, __int128 *))(v6 - 8))(a1, a2);
    goto LABEL_8;
  }
  v7 = *a2;
  v8 = a2[1];
  *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
  *(_OWORD *)a1 = v7;
  *(_OWORD *)(a1 + 16) = v8;
LABEL_8:
  v9 = *((_QWORD *)a2 + 8);
  if (*(_QWORD *)(a1 + 64))
  {
    if (v9)
    {
      __swift_assign_boxed_opaque_existential_1((_QWORD *)(a1 + 40), (_QWORD *)a2 + 5);
      goto LABEL_15;
    }
    __swift_destroy_boxed_opaque_existential_1((_QWORD *)(a1 + 40));
  }
  else if (v9)
  {
    *(_QWORD *)(a1 + 64) = v9;
    *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
    (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 40, (uint64_t)a2 + 40);
    goto LABEL_15;
  }
  v10 = *(__int128 *)((char *)a2 + 40);
  v11 = *(__int128 *)((char *)a2 + 56);
  *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
  *(_OWORD *)(a1 + 40) = v10;
  *(_OWORD *)(a1 + 56) = v11;
LABEL_15:
  v12 = *(int *)(a3 + 24);
  v13 = (void *)(a1 + v12);
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for BlendMode(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, char *, uint64_t))(v16 + 24))(v13, v14, v15);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_20;
  }
  if (v19)
  {
LABEL_20:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A0E0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

uint64_t _s11PlaceholderO4ViewV5StyleVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  const void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v5 = *(int *)(a3 + 24);
  v6 = (const void *)(a2 + v5);
  v7 = (void *)(a1 + v5);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v8 = type metadata accessor for BlendMode(0);
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A0E0);
    memcpy(v7, v6, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v7, v6, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  }
  return a1;
}

uint64_t _s11PlaceholderO4ViewV5StyleVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;

  if (*(_QWORD *)(a1 + 24))
    __swift_destroy_boxed_opaque_existential_1((_QWORD *)a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 64))
    __swift_destroy_boxed_opaque_existential_1((_QWORD *)(a1 + 40));
  v7 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v7;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v8 = *(int *)(a3 + 24);
  v9 = (void *)(a1 + v8);
  v10 = (void *)(a2 + v8);
  v11 = type metadata accessor for BlendMode(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_10;
  }
  if (v15)
  {
LABEL_10:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A0E0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return a1;
}

uint64_t _s11PlaceholderO4ViewV5StyleVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_E5313C);
}

uint64_t sub_E5313C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_150A0E0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v9);
  }
}

uint64_t _s11PlaceholderO4ViewV5StyleVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_E531D4);
}

