double sub_9B1030(uint64_t a1, uint64_t a2)
{
  return _s16MusicApplication36_BrowseCollectionViewCellConfiguringPA2A0cdefG0RzrlE09_registerF5Class010collectionE0ySo012UICollectionE0C_tF_0(a1, a2, (uint64_t)&off_14DFE68);
}

id sub_9B103C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t a6, uint64_t a7)
{
  return _BrowseCollectionViewCellConfiguring<>._prepareCell(itemModelObject:presentationIndexPath:modelIndexPath:collectionView:reuseConfigurationHandler:)(a1, a2, a3, a4, a5, a6, a7, (uint64_t)&off_14DFE68);
}

uint64_t sub_9B1048(uint64_t a1, uint64_t a2, double a3, double a4)
{
  return sub_9B19B0(a1, a2, (uint64_t)&off_14DFE68, (uint64_t)&protocol requirements base descriptor for BrowseCollectionViewCellConfiguring, (uint64_t)&associated type descriptor for BrowseCollectionViewCellConfiguring.CellType, a3, a4);
}

id sub_9B1078(uint64_t a1)
{
  return _s16MusicApplication36_BrowseCollectionViewCellConfiguringPA2A0cdefG0RzrlE27_cellTypeImpliesTableLayoutSbyF_0(a1, (uint64_t)&off_14DFE68);
}

uint64_t sub_9B1084(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _BrowseCollectionViewCellConfiguring<>._configure(cell:modelIndexPath:itemModelObject:)(a1, a2, a3, a4, (uint64_t)&off_14DFE68);
}

uint64_t sub_9B1090(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _BrowseCollectionViewCellConfiguring<>._configureForDisplay(cell:modelIndexPath:itemModelObject:)(a1, a2, a3, a4, (uint64_t)&off_14DFE68);
}

uint64_t sub_9B109C(uint64_t a1, uint64_t a2)
{
  return _BrowseCollectionViewCellConfiguring<>._artworkCatalogToPrefetch(for:)(a1, a2, (uint64_t)&off_14DFE68);
}

uint64_t sub_9B10A8(uint64_t a1, uint64_t a2)
{
  return _BrowseCollectionViewCellConfiguring<>._artworkCatalogPreferredFittingSize(at:)(a1, a2, (uint64_t)&off_14DFE68);
}

uint64_t sub_9B10B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _BrowseCollectionViewCellConfiguring<>._performPrimaryAction(itemModelObject:at:presentationIndexPath:)(a1, a2, a3, a4, (uint64_t)&off_14DFE68);
}

uint64_t sub_9B10C0(uint64_t a1)
{
  return _BrowseCollectionViewCustomLayoutProviding<>._createCustomCollectionViewLayout()(a1, (uint64_t)&off_14DFE40);
}

void sub_9B10CC(void *a1, uint64_t a2)
{
  _BrowseCollectionViewCustomLayoutProviding<>._updateMetricsOfCustomCollectionViewLayout(_:)(a1, a2, (uint64_t)&off_14DFE40);
}

uint64_t sub_9B10D8(uint64_t a1, uint64_t a2)
{
  return _BrowseCollectionViewCellArtworkPrefetching<>._artworkCatalogToPrefetch(for:)(a1, a2, (uint64_t)&protocol witness table for JSShelfViewController);
}

uint64_t sub_9B10E4(uint64_t a1, uint64_t a2)
{
  return _BrowseCollectionViewCellArtworkPrefetching<>._artworkCatalogPreferredFittingSize(at:)(a1, a2, (uint64_t)&protocol witness table for JSShelfViewController);
}

uint64_t sub_9B10F0(uint64_t a1)
{
  return _BrowseCollectionViewCustomLayoutProviding<>._createCustomCollectionViewLayout()(a1, (uint64_t)&protocol witness table for JSShelfViewController);
}

void sub_9B10FC(void *a1, uint64_t a2)
{
  _BrowseCollectionViewCustomLayoutProviding<>._updateMetricsOfCustomCollectionViewLayout(_:)(a1, a2, (uint64_t)&protocol witness table for JSShelfViewController);
}

double sub_9B1108(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_9B12A0(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for SongCell);
}

id sub_9B1114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_9B1150(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t))sub_8763A0, (uint64_t *)MPModelSong_ptr, (void (*)(id, uint64_t, uint64_t))sub_8B3970);
}

id sub_9B1150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(uint64_t), uint64_t *a10, void (*a11)(id, uint64_t, uint64_t))
{
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  void *v18;

  v14 = (void *)a9(a2);
  a5();
  swift_unknownObjectRetain(a1);
  v15 = *a10;
  v16 = v14;
  objc_opt_self(v15);
  v17 = swift_dynamicCastObjCClass(a1);
  if (v17)
  {
    v18 = (void *)v17;
    a11(v16, v17, a3);

  }
  else
  {

    swift_unknownObjectRelease(a1);
  }
  return v16;
}

uint64_t sub_9B120C(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  return sub_9B13F8(a1, a4, a5, a2, a3, type metadata accessor for SongCell);
}

id sub_9B1218(uint64_t a1, uint64_t a2)
{
  return sub_9B0ABC(a1, a2, (void (*)(_QWORD))type metadata accessor for SongCell);
}

double sub_9B1224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_9B156C(a1, a2, a3, a4, a5, MPModelSong_ptr, type metadata accessor for SongCell, (void (*)(uint64_t, id, uint64_t))sub_8B3970);
}

uint64_t sub_9B1244(uint64_t a1)
{
  void *v2;

  swift_unknownObjectRetain(a1);
  objc_opt_self(MPModelSong);
  v2 = (void *)swift_dynamicCastObjCClass(a1);
  if (v2)

  else
    swift_unknownObjectRelease(a1);
  return 0;
}

double sub_9B1294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_9B16C0(a1, a2, a3, a4, a5, MPModelSong_ptr);
}

double sub_9B12A0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD))
{
  double result;

  a4(0);
  static UICollectionReusableView.reuseIdentifier.getter();
  UICollectionView.register<A>(_:reuseIdentifier:)();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

id sub_9B12F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_9B1334(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t))sub_8763A0, (uint64_t *)MPModelStoreBrowseContentItem_ptr, (void (*)(id, uint64_t, uint64_t))sub_97643C);
}

id sub_9B1334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(uint64_t), uint64_t *a10, void (*a11)(id, uint64_t, uint64_t))
{
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  void *v18;

  v14 = (void *)a9(a2);
  a5();
  swift_unknownObjectRetain(a1);
  v15 = *a10;
  v16 = v14;
  objc_opt_self(v15);
  v17 = swift_dynamicCastObjCClass(a1);
  if (v17)
  {
    v18 = (void *)v17;
    a11(v16, v17, a3);

  }
  else
  {

    swift_unknownObjectRelease(a1);
  }
  return v16;
}

uint64_t sub_9B13F8(uint64_t a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(_QWORD))
{
  uint64_t v9;
  uint64_t result;

  v9 = a6(0);
  result = swift_conformsToProtocol2(v9, &protocol descriptor for BrowseCollectionSizeable);
  if (result)
    return (*(double (**)(uint64_t, uint64_t, uint64_t, double, double))(result + 8))(a1, v9, result, a2, a3);
  __break(1u);
  return result;
}

double sub_9B146C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_9B1488(a1, a2, a3, a4, a5, MPModelStoreBrowseContentItem_ptr, type metadata accessor for SongCell, (void (*)(uint64_t, id, uint64_t))sub_97643C);
}

double sub_9B1488(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6, uint64_t (*a7)(_QWORD), void (*a8)(uint64_t, id, uint64_t))
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double result;
  id v18;

  swift_unknownObjectRetain(a3);
  objc_opt_self(*a6);
  v14 = swift_dynamicCastObjCClass(a3);
  if (v14)
  {
    v18 = (id)v14;
    v15 = a7(0);
    v16 = swift_dynamicCastClassUnconditional(a1, v15, 0, 0, 0);
    a8(v16, v18, a2);

  }
  else
  {
    *(_QWORD *)&result = swift_unknownObjectRelease(a3).n128_u64[0];
  }
  return result;
}

double sub_9B1550(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_9B156C(a1, a2, a3, a4, a5, MPModelStoreBrowseContentItem_ptr, type metadata accessor for SongCell, (void (*)(uint64_t, id, uint64_t))sub_9771B8);
}

double sub_9B156C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6, uint64_t (*a7)(_QWORD), void (*a8)(uint64_t, id, uint64_t))
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double result;
  id v18;

  swift_unknownObjectRetain(a3);
  objc_opt_self(*a6);
  v14 = swift_dynamicCastObjCClass(a3);
  if (v14)
  {
    v18 = (id)v14;
    v15 = a7(0);
    v16 = swift_dynamicCastClassUnconditional(a1, v15, 0, 0, 0);
    a8(v16, v18, a2);

  }
  else
  {
    *(_QWORD *)&result = swift_unknownObjectRelease(a3).n128_u64[0];
  }
  return result;
}

id sub_9B1624(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  void *v5;
  id v6;

  swift_unknownObjectRetain(a1);
  objc_opt_self(MPModelStoreBrowseContentItem);
  v2 = (void *)swift_dynamicCastObjCClass(a1);
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v2, "playlist");
    if (v4)
    {
      v5 = v4;
      v6 = MPModelPlaylist.preferredArtworkCatalog.getter();

      return v6;
    }

  }
  else
  {
    swift_unknownObjectRelease(a1);
  }
  return 0;
}

double sub_9B16B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_9B16C0(a1, a2, a3, a4, a5, MPModelStoreBrowseContentItem_ptr);
}

double sub_9B16C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  void *v8;
  double result;

  swift_unknownObjectRetain(a1);
  objc_opt_self(*a6);
  v8 = (void *)swift_dynamicCastObjCClass(a1);
  if (v8)

  else
    *(_QWORD *)&result = swift_unknownObjectRelease(a1).n128_u64[0];
  return result;
}

void sub_9B170C(void *a1, uint64_t a2, uint64_t a3)
{
  sub_9B1720(a1, a2, a3, UICollectionViewTableLayout_ptr, (void (*)(uint64_t))sub_976304);
}

void sub_9B1720(void *a1, uint64_t a2, uint64_t a3, _QWORD *a4, void (*a5)(uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  id v9;

  objc_opt_self(*a4);
  v7 = swift_dynamicCastObjCClass(a1);
  if (v7)
  {
    v8 = v7;
    v9 = a1;
    a5(v8);

  }
}

double sub_9B1798(uint64_t a1, uint64_t a2)
{
  return _s16MusicApplication36_BrowseCollectionViewCellConfiguringPA2A0cdefG0RzrlE09_registerF5Class010collectionE0ySo012UICollectionE0C_tF_0(a1, a2, (uint64_t)&off_14ECF70);
}

id sub_9B17A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t a6, uint64_t a7)
{
  return _BrowseCollectionViewCellConfiguring<>._prepareCell(itemModelObject:presentationIndexPath:modelIndexPath:collectionView:reuseConfigurationHandler:)(a1, a2, a3, a4, a5, a6, a7, (uint64_t)&off_14ECF70);
}

uint64_t sub_9B17B0(uint64_t a1, uint64_t a2, double a3, double a4)
{
  return sub_9B19B0(a1, a2, (uint64_t)&off_14ECF70, (uint64_t)&protocol requirements base descriptor for BrowseCollectionViewCellConfiguring, (uint64_t)&associated type descriptor for BrowseCollectionViewCellConfiguring.CellType, a3, a4);
}

id sub_9B17E0(uint64_t a1)
{
  return _s16MusicApplication36_BrowseCollectionViewCellConfiguringPA2A0cdefG0RzrlE27_cellTypeImpliesTableLayoutSbyF_0(a1, (uint64_t)&off_14ECF70);
}

uint64_t sub_9B17EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _BrowseCollectionViewCellConfiguring<>._configure(cell:modelIndexPath:itemModelObject:)(a1, a2, a3, a4, (uint64_t)&off_14ECF70);
}

uint64_t sub_9B17F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _BrowseCollectionViewCellConfiguring<>._configureForDisplay(cell:modelIndexPath:itemModelObject:)(a1, a2, a3, a4, (uint64_t)&off_14ECF70);
}

uint64_t sub_9B1804(uint64_t a1, uint64_t a2)
{
  return _BrowseCollectionViewCellConfiguring<>._artworkCatalogToPrefetch(for:)(a1, a2, (uint64_t)&off_14ECF70);
}

uint64_t sub_9B1810(uint64_t a1, uint64_t a2)
{
  return _BrowseCollectionViewCellConfiguring<>._artworkCatalogPreferredFittingSize(at:)(a1, a2, (uint64_t)&off_14ECF70);
}

uint64_t sub_9B181C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _BrowseCollectionViewCellConfiguring<>._performPrimaryAction(itemModelObject:at:presentationIndexPath:)(a1, a2, a3, a4, (uint64_t)&off_14ECF70);
}

uint64_t sub_9B1828(uint64_t a1)
{
  return _BrowseCollectionViewCustomLayoutProviding<>._createCustomCollectionViewLayout()(a1, (uint64_t)&off_14ECF48);
}

void sub_9B1834(void *a1, uint64_t a2)
{
  _BrowseCollectionViewCustomLayoutProviding<>._updateMetricsOfCustomCollectionViewLayout(_:)(a1, a2, (uint64_t)&off_14ECF48);
}

double sub_9B1840(uint64_t a1, uint64_t a2)
{
  return _s16MusicApplication36_BrowseCollectionViewCellConfiguringPA2A0cdefG0RzrlE09_registerF5Class010collectionE0ySo012UICollectionE0C_tF_0(a1, a2, (uint64_t)&off_14F01A0);
}

id sub_9B184C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t a6, uint64_t a7)
{
  return _BrowseCollectionViewCellConfiguring<>._prepareCell(itemModelObject:presentationIndexPath:modelIndexPath:collectionView:reuseConfigurationHandler:)(a1, a2, a3, a4, a5, a6, a7, (uint64_t)&off_14F01A0);
}

uint64_t sub_9B1858(uint64_t a1, uint64_t a2, double a3, double a4)
{
  return sub_9B19B0(a1, a2, (uint64_t)&off_14F01A0, (uint64_t)&protocol requirements base descriptor for BrowseCollectionViewCellConfiguring, (uint64_t)&associated type descriptor for BrowseCollectionViewCellConfiguring.CellType, a3, a4);
}

id sub_9B1888(uint64_t a1)
{
  return _s16MusicApplication36_BrowseCollectionViewCellConfiguringPA2A0cdefG0RzrlE27_cellTypeImpliesTableLayoutSbyF_0(a1, (uint64_t)&off_14F01A0);
}

uint64_t sub_9B1894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _BrowseCollectionViewCellConfiguring<>._configure(cell:modelIndexPath:itemModelObject:)(a1, a2, a3, a4, (uint64_t)&off_14F01A0);
}

uint64_t sub_9B18A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _BrowseCollectionViewCellConfiguring<>._configureForDisplay(cell:modelIndexPath:itemModelObject:)(a1, a2, a3, a4, (uint64_t)&off_14F01A0);
}

uint64_t sub_9B18AC(uint64_t a1, uint64_t a2)
{
  return _BrowseCollectionViewCellConfiguring<>._artworkCatalogToPrefetch(for:)(a1, a2, (uint64_t)&off_14F01A0);
}

uint64_t sub_9B18B8(uint64_t a1, uint64_t a2)
{
  return _BrowseCollectionViewCellConfiguring<>._artworkCatalogPreferredFittingSize(at:)(a1, a2, (uint64_t)&off_14F01A0);
}

uint64_t sub_9B18C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _BrowseCollectionViewCellConfiguring<>._performPrimaryAction(itemModelObject:at:presentationIndexPath:)(a1, a2, a3, a4, (uint64_t)&off_14F01A0);
}

uint64_t sub_9B18D0(uint64_t a1)
{
  return _BrowseCollectionViewCustomLayoutProviding<>._createCustomCollectionViewLayout()(a1, (uint64_t)&off_14F0178);
}

void sub_9B18DC(void *a1, uint64_t a2)
{
  _BrowseCollectionViewCustomLayoutProviding<>._updateMetricsOfCustomCollectionViewLayout(_:)(a1, a2, (uint64_t)&off_14F0178);
}

uint64_t sub_9B18E8(uint64_t a1)
{
  return _BrowseCollectionViewCustomLayoutProviding<>._createCustomCollectionViewLayout()(a1, (uint64_t)&off_14F0CE8);
}

void sub_9B18F4(void *a1, uint64_t a2)
{
  _BrowseCollectionViewCustomLayoutProviding<>._updateMetricsOfCustomCollectionViewLayout(_:)(a1, a2, (uint64_t)&off_14F0CE8);
}

uint64_t sub_9B1900(uint64_t a1)
{
  return _BrowseCollectionViewCustomLayoutProviding<>._createCustomCollectionViewLayout()(a1, (uint64_t)&off_14F2B98);
}

void sub_9B190C(void *a1, uint64_t a2)
{
  _BrowseCollectionViewCustomLayoutProviding<>._updateMetricsOfCustomCollectionViewLayout(_:)(a1, a2, (uint64_t)&off_14F2B98);
}

uint64_t sub_9B1918(uint64_t a1, uint64_t a2)
{
  return _BrowseCollectionViewCellArtworkPrefetching<>._artworkCatalogToPrefetch(for:)(a1, a2, (uint64_t)&off_14F2B70);
}

uint64_t sub_9B1924(uint64_t a1, uint64_t a2)
{
  return _BrowseCollectionViewCellArtworkPrefetching<>._artworkCatalogPreferredFittingSize(at:)(a1, a2, (uint64_t)&off_14F2B70);
}

double sub_9B1930(uint64_t a1, uint64_t a2)
{
  return _s16MusicApplication45_BrowseCollectionViewSectionHeaderConfiguringPA2A0cdefgH0RzrlE09_registerfgE5Class010collectionE0ySo012UICollectionE0C_tF_0(a1, a2, (uint64_t)&off_14F4128);
}

id sub_9B193C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t a6, uint64_t a7)
{
  return _BrowseCollectionViewSectionHeaderConfiguring<>._prepareHeaderView(sectionModelObject:presentationIndexPath:modelIndexPath:collectionView:reuseConfigurationHandler:)(a1, a2, a3, a4, a5, a6, a7, (uint64_t)&off_14F4128);
}

uint64_t sub_9B1948(uint64_t a1, uint64_t a2, double a3, double a4)
{
  return sub_9B19B0(a1, a2, (uint64_t)&off_14F4128, (uint64_t)&protocol requirements base descriptor for BrowseCollectionViewSectionHeaderConfiguring, (uint64_t)&associated type descriptor for BrowseCollectionViewSectionHeaderConfiguring.SectionHeaderViewType, a3, a4);
}

uint64_t sub_9B1978(uint64_t a1)
{
  return _BrowseCollectionViewCustomLayoutProviding<>._createCustomCollectionViewLayout()(a1, (uint64_t)&off_14F4100);
}

void sub_9B1984(void *a1, uint64_t a2)
{
  _BrowseCollectionViewCustomLayoutProviding<>._updateMetricsOfCustomCollectionViewLayout(_:)(a1, a2, (uint64_t)&off_14F4100);
}

uint64_t sub_9B1990(uint64_t a1, uint64_t a2)
{
  return _BrowseCollectionViewCellArtworkPrefetching<>._artworkCatalogToPrefetch(for:)(a1, a2, (uint64_t)&off_14F40D8);
}

uint64_t sub_9B199C(uint64_t a1, uint64_t a2)
{
  return _BrowseCollectionViewCellArtworkPrefetching<>._artworkCatalogPreferredFittingSize(at:)(a1, a2, (uint64_t)&off_14F40D8);
}

double Int.seconds.getter(uint64_t a1)
{
  return (double)a1;
}

uint64_t sub_9B19B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6, double a7)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, a3, a2, a4, a5);
  v11 = swift_conformsToProtocol2(AssociatedTypeWitness, &protocol descriptor for BrowseCollectionSizeable);
  if (v11)
    v12 = v11;
  else
    v12 = 0;
  if (!v11)
    AssociatedTypeWitness = 0;
  if (AssociatedTypeWitness)
    return (*(double (**)(uint64_t, uint64_t, double, double))(v12 + 8))(a1, AssociatedTypeWitness, a6, a7);
  else
    return 0;
}

double sub_9B1A44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  double result;
  id v15;

  swift_unknownObjectRetain(a3);
  objc_opt_self(MPModelSong);
  v5 = swift_dynamicCastObjCClass(a3);
  if (v5)
  {
    v6 = (void *)v5;
    v7 = type metadata accessor for SongCell(0);
    v8 = swift_dynamicCastClassUnconditional(a1, v7, 0, 0, 0);
    v9 = objc_msgSend(v6, "artworkCatalog");
    v10 = OBJC_IVAR____TtC16MusicApplication34HorizontalLockupCollectionViewCell_lockupImageArtworkCatalog;
    v11 = *(void **)(v8
                   + OBJC_IVAR____TtC16MusicApplication34HorizontalLockupCollectionViewCell_lockupImageArtworkCatalog);
    *(_QWORD *)(v8 + OBJC_IVAR____TtC16MusicApplication34HorizontalLockupCollectionViewCell_lockupImageArtworkCatalog) = v9;
    v15 = v9;

    v12 = *(void **)(v8 + v10);
    v13 = v12;
    sub_150E90(v12);

  }
  else
  {
    *(_QWORD *)&result = swift_unknownObjectRelease(a3).n128_u64[0];
  }
  return result;
}

double sub_9B1B38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  double result;
  id v15;

  swift_unknownObjectRetain(a3);
  objc_opt_self(MPModelSocialPerson);
  v5 = swift_dynamicCastObjCClass(a3);
  if (v5)
  {
    v6 = (void *)v5;
    v7 = type metadata accessor for SocialPersonHorizontalCell(0);
    v8 = swift_dynamicCastClassUnconditional(a1, v7, 0, 0, 0);
    v9 = objc_msgSend(v6, "artworkCatalog");
    v10 = OBJC_IVAR____TtC16MusicApplication34HorizontalLockupCollectionViewCell_lockupImageArtworkCatalog;
    v11 = *(void **)(v8
                   + OBJC_IVAR____TtC16MusicApplication34HorizontalLockupCollectionViewCell_lockupImageArtworkCatalog);
    *(_QWORD *)(v8 + OBJC_IVAR____TtC16MusicApplication34HorizontalLockupCollectionViewCell_lockupImageArtworkCatalog) = v9;
    v15 = v9;

    v12 = *(void **)(v8 + v10);
    v13 = v12;
    sub_150E90(v12);

    sub_1D2888();
  }
  else
  {
    *(_QWORD *)&result = swift_unknownObjectRelease(a3).n128_u64[0];
  }
  return result;
}

id _s16MusicApplication36_BrowseCollectionViewCellConfiguringPA2A0cdefG0RzrlE27_cellTypeImpliesTableLayoutSbyF_0(uint64_t a1, uint64_t a2)
{
  void *ObjCClassFromMetadata;

  swift_getAssociatedTypeWitness(0, a2, a1, &protocol requirements base descriptor for BrowseCollectionViewCellConfiguring, &associated type descriptor for BrowseCollectionViewCellConfiguring.CellType);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  sub_4E684(0, &qword_14ED3C8, UICollectionViewTableCell_ptr);
  if ((objc_msgSend(ObjCClassFromMetadata, "isSubclassOfClass:", swift_getObjCClassFromMetadata()) & 1) != 0)
    return &dword_0 + 1;
  sub_4E684(0, (unint64_t *)&unk_14AD5C0, UICollectionViewListCell_ptr);
  return objc_msgSend(ObjCClassFromMetadata, "isSubclassOfClass:", swift_getObjCClassFromMetadata());
}

double _s16MusicApplication36_BrowseCollectionViewCellConfiguringPA2A0cdefG0RzrlE09_registerF5Class010collectionE0ySo012UICollectionE0C_tF_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double result;

  swift_getAssociatedTypeWitness(0, a3, a2, &protocol requirements base descriptor for BrowseCollectionViewCellConfiguring, &associated type descriptor for BrowseCollectionViewCellConfiguring.CellType);
  static UICollectionReusableView.reuseIdentifier.getter();
  UICollectionView.register<A>(_:reuseIdentifier:)();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

double _s16MusicApplication45_BrowseCollectionViewSectionHeaderConfiguringPA2A0cdefgH0RzrlE09_registerfgE5Class010collectionE0ySo012UICollectionE0C_tF_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double result;

  swift_getAssociatedTypeWitness(0, a3, a2, &protocol requirements base descriptor for BrowseCollectionViewSectionHeaderConfiguring, &associated type descriptor for BrowseCollectionViewSectionHeaderConfiguring.SectionHeaderViewType);
  static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
  static UICollectionReusableView.reuseIdentifier.getter();
  UICollectionView.register<A>(_:ofKind:reuseIdentifier:)();
  swift_bridgeObjectRelease();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_9B1DF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  id *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;

  v1 = type metadata accessor for PlaybackIntentDescriptor(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v6 = (id *)(v0 + v4);
  v7 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {

  }
  v9 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v10 = (id *)((char *)v6 + *(int *)(v1 + 28));
  if (v10[3])
    __swift_destroy_boxed_opaque_existential_1(v10);

  if (*(_QWORD *)(v0 + v9))
    swift_release(*(_QWORD *)(v0 + v9 + 8));
  return swift_deallocObject(v0, v9 + 16, v3 | 7);
}

char *JSPrivacyLinkViewController.__allocating_init(privacyLinkViewModel:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return JSPrivacyLinkViewController.init(privacyLinkViewModel:)(a1);
}

char *JSPrivacyLinkViewController.init(privacyLinkViewModel:)(void *a1)
{
  char *v1;
  objc_class *ObjectType;
  char *v4;
  id v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  char *v10;
  NSString v11;
  id v12;
  void *v13;
  char v15[24];
  objc_super v16;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v1[OBJC_IVAR____TtC16MusicApplication27JSPrivacyLinkViewController_privacyLinkViewController] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC16MusicApplication27JSPrivacyLinkViewController_privacyLinkViewModel] = a1;
  v16.receiver = v1;
  v16.super_class = ObjectType;
  v4 = a1;
  v5 = objc_msgSendSuper2(&v16, "initWithNibName:bundle:", 0, 0);
  v6 = &v4[OBJC_IVAR____TtC11MusicJSCore22JSPrivacyLinkViewModel_privacyLinkIdentifier];
  swift_beginAccess(&v4[OBJC_IVAR____TtC11MusicJSCore22JSPrivacyLinkViewModel_privacyLinkIdentifier], v15, 0, 0);
  v7 = *((_QWORD *)v6 + 1);
  if (v7)
    v8 = *((_QWORD *)v6 + 1);
  else
    v8 = 0x80000000010CCD70;
  v9 = (void *)objc_opt_self(OBPrivacyLinkController);
  swift_bridgeObjectRetain(v7);
  v10 = (char *)v5;
  v11 = String._bridgeToObjectiveC()();
  v12 = objc_msgSend(v9, "linkWithBundleIdentifier:", v11);

  swift_bridgeObjectRelease(v8);
  if (v12)
  {
    v13 = *(void **)&v10[OBJC_IVAR____TtC16MusicApplication27JSPrivacyLinkViewController_privacyLinkViewController];
    *(_QWORD *)&v10[OBJC_IVAR____TtC16MusicApplication27JSPrivacyLinkViewController_privacyLinkViewController] = v12;

  }
  return v10;
}

void JSPrivacyLinkViewController.init(coder:)()
{
  char *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC16MusicApplication27JSPrivacyLinkViewController_privacyLinkViewController] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000000010C4100, "MusicApplication/JSPrivacyLinkViewController.swift", 50, 2, 27, 0);
  __break(1u);
}

Swift::Void __swiftcall JSPrivacyLinkViewController.viewDidLoad()()
{
  char *v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  objc_super v13;

  v1 = v0;
  v13.receiver = v0;
  v13.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v13, "viewDidLoad");
  v2 = *(void **)&v0[OBJC_IVAR____TtC16MusicApplication27JSPrivacyLinkViewController_privacyLinkViewController];
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v0, "view");
    if (v4)
    {
      v5 = v4;
      objc_msgSend(v4, "setMaximumContentSizeCategory:", UIContentSizeCategoryExtraExtraExtraLarge);

      v6 = objc_msgSend(v3, "view");
      if (v6)
      {
        v7 = v6;
        v8 = AccessibilityIdentifier.privacyTermsLink.unsafeMutableAddressor();
        v9 = *v8;
        v10 = v8[1];
        sub_14FAC4();
        swift_bridgeObjectRetain();
        UIAccessibilityIdentification.musicAccessibilityIdentifier.setter(v9, v10);
        objc_msgSend(v1, "addChildViewController:", v3);
        objc_msgSend(v3, "didMoveToParentViewController:", v1);
        v11 = objc_msgSend(v1, "view");
        if (v11)
        {
          v12 = v11;
          objc_msgSend(v11, "addSubview:", v7);

          sub_9B22AC();
          return;
        }
LABEL_9:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_9;
  }
}

void sub_9B22AC()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  CGFloat Width;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  id v24;
  CGRect v25;

  if (objc_msgSend(v0, "isViewLoaded"))
  {
    v1 = *(void **)&v0[OBJC_IVAR____TtC16MusicApplication27JSPrivacyLinkViewController_privacyLinkViewController];
    if (v1)
    {
      v24 = v1;
      v2 = objc_msgSend(v24, "view");
      if (!v2)
      {
LABEL_14:

        return;
      }
      v3 = v2;
      v4 = objc_msgSend(v0, "view");
      if (v4)
      {
        v5 = v4;
        objc_msgSend(v4, "bounds");
        v7 = v6;
        v9 = v8;
        v11 = v10;
        v13 = v12;

        v25.origin.x = v7;
        v25.origin.y = v9;
        v25.size.width = v11;
        v25.size.height = v13;
        Width = CGRectGetWidth(v25);
        LODWORD(v15) = 1148846080;
        LODWORD(v16) = 1112014848;
        objc_msgSend(v3, "systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:", Width, 1.79769313e308, v15, v16);
        v19 = v18;
        if (v17 < 70.0)
          v20 = 92.0;
        else
          v20 = v17 + 22.0;
        objc_msgSend(v0, "preferredContentSize");
        if (v22 != v19 || v21 != v20)
          objc_msgSend(v0, "setPreferredContentSize:", v19, v20);

        goto LABEL_14;
      }
      __break(1u);
    }
  }
}

Swift::Void __swiftcall JSPrivacyLinkViewController.viewDidLayoutSubviews()()
{
  char *v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  objc_super v8;

  v1 = v0;
  v8.receiver = v0;
  v8.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v8, "viewDidLayoutSubviews");
  v2 = *(void **)&v0[OBJC_IVAR____TtC16MusicApplication27JSPrivacyLinkViewController_privacyLinkViewController];
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v3, "view");
    if (v4)
    {
      v5 = v4;
      v6 = objc_msgSend(v1, "view");
      if (v6)
      {
        v7 = v6;
        objc_msgSend(v6, "bounds");
        objc_msgSend(v5, "setFrame:");

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

void JSPrivacyLinkViewController.viewWillTransition(to:with:)(void *a1, double a2, double a3)
{
  void *v3;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  _QWORD v11[5];
  uint64_t v12;
  objc_super v13;

  v13.receiver = v3;
  v13.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v13, "viewWillTransitionToSize:withTransitionCoordinator:", a1, a2, a3);
  v7 = swift_allocObject(&unk_1392030, 24, 7);
  *(_QWORD *)(v7 + 16) = v3;
  v11[4] = sub_9B266C;
  v12 = v7;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_20B50C;
  v11[3] = &block_descriptor_252;
  v8 = _Block_copy(v11);
  v9 = v12;
  v10 = v3;
  objc_msgSend(a1, "animateAlongsideTransition:completion:", v8, 0, swift_release(v9).n128_f64[0]);
  _Block_release(v8);
}

uint64_t sub_9B2648()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_9B266C()
{
  sub_9B22AC();
}

uint64_t block_copy_helper_248(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_248(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

Swift::Void __swiftcall JSPrivacyLinkViewController.traitCollectionDidChange(_:)(UITraitCollection_optional a1)
{
  void *v1;
  Class isa;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  objc_super v14;

  isa = a1.value.super.isa;
  v14.receiver = v1;
  v14.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v14, "traitCollectionDidChange:", isa);
  v3 = objc_msgSend(v1, "traitCollection");
  v4 = objc_msgSend(v3, "horizontalSizeClass");

  if (!isa || v4 != -[objc_class horizontalSizeClass](isa, "horizontalSizeClass"))
    goto LABEL_7;
  v5 = objc_msgSend(v1, "traitCollection");
  v6 = objc_msgSend(v5, "preferredContentSizeCategory");

  v7 = -[objc_class preferredContentSizeCategory](isa, "preferredContentSizeCategory");
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v10 = v9;
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  if (v8 == v12 && v10 == v11)
  {

    swift_bridgeObjectRelease_n(v10, 2);
    return;
  }
  v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v10, v12, v11, 0);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v13 & 1) == 0)
LABEL_7:
    sub_9B22AC();
}

Swift::Void __swiftcall JSPrivacyLinkViewController.systemLayoutFittingSizeDidChange(forChildViewController:)(UIViewController forChildViewController)
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v3, "systemLayoutFittingSizeDidChangeForChildViewController:", forChildViewController.super.super.isa);
  sub_9B22AC();
}

void JSPrivacyLinkViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer("MusicApplication.JSPrivacyLinkViewController", 44, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

uint64_t type metadata accessor for JSPrivacyLinkViewController()
{
  return objc_opt_self(_TtC16MusicApplication27JSPrivacyLinkViewController);
}

char *sub_9B2AF0(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  _OWORD *v9;
  uint64_t v10;
  id v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  char v24[24];
  objc_super v25;

  *(_QWORD *)&v4[OBJC_IVAR____TtC16MusicApplication15MultilineButton_backgroundCornerRadius] = 0x4020000000000000;
  v4[OBJC_IVAR____TtC16MusicApplication15MultilineButton_hasBackground] = 1;
  *(_QWORD *)&v4[OBJC_IVAR____TtC16MusicApplication15MultilineButton_borderColor] = 0;
  v4[OBJC_IVAR____TtC16MusicApplication15MultilineButton_isActivityIndicatorActive] = 0;
  v9 = &v4[OBJC_IVAR____TtC16MusicApplication15MultilineButton_contentEdgeInsets];
  *v9 = xmmword_1085B70;
  v9[1] = xmmword_1085B70;
  *(_QWORD *)&v4[OBJC_IVAR____TtC16MusicApplication15MultilineButton_lineComponents] = _swiftEmptyArrayStorage;
  v10 = OBJC_IVAR____TtC16MusicApplication15MultilineButton_textStackView;
  type metadata accessor for TextStackView();
  v11 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v12 = v4;
  *(_QWORD *)&v4[v10] = objc_msgSend(v11, "init");
  v13 = OBJC_IVAR____TtC16MusicApplication15MultilineButton_backgroundImageView;
  *(_QWORD *)&v12[v13] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v14 = OBJC_IVAR____TtC16MusicApplication15MultilineButton_backgroundImagesForStates;
  *(_QWORD *)&v12[v14] = sub_1A26AC(_swiftEmptyArrayStorage);
  *(_QWORD *)&v12[OBJC_IVAR____TtC16MusicApplication15MultilineButton_activityIndicatorView] = 0;

  v25.receiver = v12;
  v25.super_class = (Class)type metadata accessor for MultilineButton();
  v15 = (char *)objc_msgSendSuper2(&v25, "initWithFrame:", a1, a2, a3, a4);
  v16 = OBJC_IVAR____TtC16MusicApplication15MultilineButton_textStackView;
  v17 = *(_QWORD *)&v15[OBJC_IVAR____TtC16MusicApplication15MultilineButton_textStackView];
  v18 = type metadata accessor for TextDrawing.Cache();
  swift_allocObject(v18, 120, 7);
  v19 = v15;
  v20 = TextDrawing.Cache.init()();
  v21 = (uint64_t *)(v17 + OBJC_IVAR____TtC16MusicApplication13TextStackView_textDrawingCache);
  swift_beginAccess(v17 + OBJC_IVAR____TtC16MusicApplication13TextStackView_textDrawingCache, v24, 1, 0);
  v22 = *v21;
  *v21 = v20;
  swift_retain(v20);
  sub_700E28(v22);
  swift_release(v20);
  objc_msgSend(v19, "addSubview:", *(_QWORD *)&v19[OBJC_IVAR____TtC16MusicApplication15MultilineButton_backgroundImageView], swift_release(v22).n128_f64[0]);

  objc_msgSend(v19, "addSubview:", *(_QWORD *)&v15[v16]);
  sub_9B3DD0();

  return v19;
}

void sub_9B2D60(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  char v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  double v16;
  double v17;
  id v18;
  id v19;
  id v20;

  v2 = v1;
  v4 = OBJC_IVAR____TtC16MusicApplication15MultilineButton_borderColor;
  v5 = *(void **)&v2[OBJC_IVAR____TtC16MusicApplication15MultilineButton_borderColor];
  if (!v5)
  {
    if (!a1)
      return;
LABEL_8:
    v19 = objc_msgSend(v2, "layer");
    objc_msgSend(v19, "setBorderColor:", 0);

    v20 = objc_msgSend(v2, "layer");
    objc_msgSend(v20, "setBorderWidth:", 0.0);

    v18 = objc_msgSend(v2, "layer");
    objc_msgSend(v18, "setCornerRadius:", 0.0);
    goto LABEL_9;
  }
  if (a1)
  {
    sub_4E684(0, (unint64_t *)&qword_14C8070, UIColor_ptr);
    v6 = a1;
    v7 = v5;
    v8 = static NSObject.== infix(_:_:)(v7, v6);

    if ((v8 & 1) != 0)
      return;
    v5 = *(void **)&v2[v4];
    if (!v5)
      goto LABEL_8;
  }
  v9 = v5;
  v10 = objc_msgSend(v2, "layer");
  v11 = objc_retainAutorelease(v9);
  v12 = objc_msgSend(v11, "cgColor");
  if (v12)
  {
    v13 = v12;
    objc_msgSend(v10, "setBorderColor:", v13);

    v14 = objc_msgSend(v2, "layer");
    v15 = objc_msgSend(v2, "traitCollection");
    objc_msgSend(v15, "displayScale");
    v17 = v16;

    objc_msgSend(v14, "setBorderWidth:", 2.0 / v17);
    v18 = objc_msgSend(v2, "layer");
    objc_msgSend(v18, "setCornerRadius:", *(double *)&v2[OBJC_IVAR____TtC16MusicApplication15MultilineButton_backgroundCornerRadius]);

LABEL_9:
    sub_9B3DD0();
    return;
  }
  __break(1u);
}

void sub_9B2FA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(__n128);
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE v54[24];
  _QWORD *v55;

  v3 = OBJC_IVAR____TtC16MusicApplication15MultilineButton_lineComponents;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16MusicApplication15MultilineButton_lineComponents);
  v5 = swift_bridgeObjectRetain();
  LOBYTE(a1) = sub_30E720(v5, a1);
  swift_bridgeObjectRelease(v4);
  if ((a1 & 1) == 0)
  {
    v6 = *(_QWORD *)(v1 + v3);
    v7 = *(_QWORD *)(v6 + 16);
    v8 = _swiftEmptyArrayStorage;
    if (v7)
    {
      v55 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      specialized ContiguousArray.reserveCapacity(_:)(v7);
      v47 = type metadata accessor for TextStackView.Component();
      v48 = v6;
      v9 = 0;
      do
      {
        v52 = v9;
        v53 = v7;
        v13 = v6 + v9;
        v14 = *(_QWORD *)(v13 + 40);
        v51 = *(_QWORD *)(v13 + 48);
        v15 = *(void **)(v13 + 64);
        v49 = *(_QWORD *)(v13 + 32);
        v50 = *(_QWORD *)(v13 + 56);
        v16 = *(void **)(v13 + 72);
        v17 = *(unsigned __int8 *)(v13 + 80);
        v18 = *(_QWORD *)(v13 + 88);
        v19 = *(_QWORD *)(v13 + 96);
        v20 = *(unsigned __int8 *)(v13 + 104);
        v21 = *(void **)(v13 + 112);
        v22 = *(_QWORD *)(v13 + 120);
        v23 = *(_QWORD *)(v13 + 128);
        v24 = (_QWORD *)swift_allocObject(v47, 264, 7);
        v24[14] = 0;
        v24[15] = 0xE000000000000000;
        v24[16] = 0;
        v24[28] = 0;
        v24[29] = 0xE000000000000000;
        v24[31] = 0;
        v24[32] = 0;
        v24[30] = 0;
        v24[2] = v49;
        v24[3] = v14;
        v24[4] = v15;
        v24[5] = v16;
        v24[6] = v17;
        v24[7] = v18;
        v24[8] = v19;
        v24[9] = v20;
        v24[10] = v21;
        v24[11] = 0;
        v24[12] = v22;
        v24[13] = v23;
        v24[17] = 0;
        v24[18] = v15;
        v24[19] = v16;
        v24[20] = v17;
        v24[21] = v18;
        v24[22] = v19;
        v25 = v14;
        v24[23] = v20;
        v24[24] = v21;
        v24[25] = 0;
        v24[26] = v22;
        v24[27] = v23;
        swift_beginAccess(v24 + 14, v54, 1, 0);
        v26 = v24[15];
        v24[14] = v51;
        v24[15] = v50;
        v27 = v16;
        v28 = v21;
        v29 = v15;
        v30 = v27;
        v31 = v28;
        v32 = v29;
        v33 = v30;
        v34 = v31;
        swift_bridgeObjectRetain_n(v25, 2);
        swift_bridgeObjectRetain_n(v50, 2);
        v35 = v32;
        v36 = v33;
        v37 = v34;
        v38 = v35;
        swift_bridgeObjectRelease(v26);
        v39 = v24[28];
        v40 = v24[29];
        v41 = v24[14];
        v42 = v24[15];
        if ((v39 != v41 || v40 != v42)
          && (_stringCompareWithSmolCheck(_:_:expecting:)(v39, v40, v41, v24[15], 0) & 1) == 0)
        {
          v43 = v24[29];
          v24[28] = v41;
          v24[29] = v42;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease(v43);
          v44 = (void (*)(__n128))v24[30];
          if (v44)
          {
            v45 = v24[31];
            v46 = swift_retain(v45);
            v44(v46);
            sub_5C198((uint64_t)v44, v45);
          }
        }
        swift_bridgeObjectRelease(v50);
        swift_bridgeObjectRelease(v25);

        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v10);
        v11 = v55[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v11);
        v12 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v11, v24);
        specialized ContiguousArray._endMutation()(v12);
        v9 = v52 + 104;
        v7 = v53 - 1;
        v6 = v48;
      }
      while (v53 != 1);
      v8 = v55;
      swift_bridgeObjectRelease(v48);
    }
    TextStackView.replace(with:)((Swift::OpaquePointer)v8);
    swift_bridgeObjectRelease(v8);
  }
}

id sub_9B3358(char a1)
{
  char *v1;
  char *v2;
  objc_class *v4;
  unsigned int v5;
  id result;
  void *v7;
  id v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  id v13;
  char v14;
  void *v15;
  unsigned int v16;
  double v17;
  char v18[24];
  objc_super v19;
  objc_super v20;

  v2 = v1;
  v4 = (objc_class *)type metadata accessor for MultilineButton();
  v20.receiver = v2;
  v20.super_class = v4;
  v5 = objc_msgSendSuper2(&v20, "isHighlighted");
  v19.receiver = v2;
  v19.super_class = v4;
  objc_msgSendSuper2(&v19, "setHighlighted:", a1 & 1);
  result = objc_msgSend(v2, "isHighlighted");
  if (v5 != (_DWORD)result)
  {
    v7 = *(void **)&v2[OBJC_IVAR____TtC16MusicApplication15MultilineButton_backgroundImageView];
    v8 = objc_msgSend(v2, "state");
    v9 = &v2[OBJC_IVAR____TtC16MusicApplication15MultilineButton_backgroundImagesForStates];
    swift_beginAccess(&v2[OBJC_IVAR____TtC16MusicApplication15MultilineButton_backgroundImagesForStates], v18, 0, 0);
    v10 = *(_QWORD *)v9;
    if (*(_QWORD *)(v10 + 16))
    {
      v11 = sub_22239C(v8);
      if ((v12 & 1) != 0 || (v11 = sub_22239C(0), v13 = 0, (v14 & 1) != 0))
        v13 = *(id *)(*(_QWORD *)(v10 + 56) + 8 * v11);
    }
    else
    {
      v13 = 0;
    }
    objc_msgSend(v7, "setImage:", v13);

    v15 = *(void **)&v2[OBJC_IVAR____TtC16MusicApplication15MultilineButton_textStackView];
    v16 = objc_msgSend(v2, "isHighlighted");
    v17 = 1.0;
    if (v16)
      v17 = 0.25;
    return objc_msgSend(v15, "setAlpha:", v17);
  }
  return result;
}

id sub_9B34B8(void *a1, uint64_t a2, SEL *a3)
{
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for MultilineButton();
  return objc_msgSendSuper2(&v5, *a3);
}

void sub_9B3544(char a1, SEL *a2, SEL *a3)
{
  char *v3;
  objc_class *v7;
  unsigned int v8;
  void *v9;
  id v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  id v15;
  char v16;
  char v17[24];
  objc_super v18;
  objc_super v19;

  v7 = (objc_class *)type metadata accessor for MultilineButton();
  v19.receiver = v3;
  v19.super_class = v7;
  v8 = objc_msgSendSuper2(&v19, *a2);
  v18.receiver = v3;
  v18.super_class = v7;
  objc_msgSendSuper2(&v18, *a3, a1 & 1);
  if (v8 != objc_msgSend(v3, *a2))
  {
    v9 = *(void **)&v3[OBJC_IVAR____TtC16MusicApplication15MultilineButton_backgroundImageView];
    v10 = objc_msgSend(v3, "state");
    v11 = &v3[OBJC_IVAR____TtC16MusicApplication15MultilineButton_backgroundImagesForStates];
    swift_beginAccess(v11, v17, 0, 0);
    v12 = *(_QWORD *)v11;
    if (*(_QWORD *)(v12 + 16))
    {
      v13 = sub_22239C(v10);
      if ((v14 & 1) != 0 || (v13 = sub_22239C(0), v15 = 0, (v16 & 1) != 0))
        v15 = *(id *)(*(_QWORD *)(v12 + 56) + 8 * v13);
    }
    else
    {
      v15 = 0;
    }
    objc_msgSend(v9, "setImage:", v15);

  }
}

void sub_9B365C()
{
  char *v0;
  double v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  objc_super v26;

  v26.receiver = v0;
  v26.super_class = (Class)type metadata accessor for MultilineButton();
  objc_msgSendSuper2(&v26, "layoutSubviews");
  objc_msgSend(v0, "bounds");
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v9 = UIEdgeInsetsInsetRect(v1, v3, v5, v7, *(double *)&v0[OBJC_IVAR____TtC16MusicApplication15MultilineButton_contentEdgeInsets], *(double *)&v0[OBJC_IVAR____TtC16MusicApplication15MultilineButton_contentEdgeInsets + 8]);
  v11 = v10;
  v13 = v12;
  v15 = v14;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC16MusicApplication15MultilineButton_backgroundImageView], "setFrame:", v2, v4, v6, v8);
  v16 = *(void **)&v0[OBJC_IVAR____TtC16MusicApplication15MultilineButton_textStackView];
  objc_msgSend(v16, "setFrame:", v9, v11, v13, v15);
  v17 = OBJC_IVAR____TtC16MusicApplication15MultilineButton_isActivityIndicatorActive;
  objc_msgSend(v16, "setHidden:", v0[OBJC_IVAR____TtC16MusicApplication15MultilineButton_isActivityIndicatorActive]);
  v18 = OBJC_IVAR____TtC16MusicApplication15MultilineButton_activityIndicatorView;
  v19 = *(void **)&v0[OBJC_IVAR____TtC16MusicApplication15MultilineButton_activityIndicatorView];
  if (v0[v17] == 1)
  {
    if (v19)
    {
      v20 = *(id *)&v0[OBJC_IVAR____TtC16MusicApplication15MultilineButton_activityIndicatorView];
    }
    else
    {
      v21 = objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "initWithActivityIndicatorStyle:", 100);
      v22 = (void *)objc_opt_self(UIColor);
      v20 = v21;
      v23 = objc_msgSend(v22, "whiteColor");
      objc_msgSend(v20, "setColor:", v23);

      v24 = *(void **)&v0[v18];
      *(_QWORD *)&v0[v18] = v20;

      v19 = 0;
    }
    v25 = v19;
    if ((objc_msgSend(v20, "isDescendantOfView:", v0) & 1) == 0)
      objc_msgSend(v0, "addSubview:", v20);
    objc_msgSend(v20, "startAnimating");
    objc_msgSend(v20, "setFrame:", v9, v11, v13, v15);
    objc_msgSend(v20, "setHidesWhenStopped:", 1);

  }
  else
  {
    objc_msgSend(v19, "stopAnimating");
  }
}

double sub_9B38D0(double a1, double a2)
{
  uint64_t v2;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  char v9;
  double v10;
  double v11;
  char v12;
  double v13;
  double v14;
  double v15;
  uint64_t v17;
  double v18;

  v4 = a1;
  v5 = *(double *)(v2 + OBJC_IVAR____TtC16MusicApplication15MultilineButton_contentEdgeInsets);
  v6 = *(double *)(v2 + OBJC_IVAR____TtC16MusicApplication15MultilineButton_contentEdgeInsets + 8);
  v7 = *(double *)(v2 + OBJC_IVAR____TtC16MusicApplication15MultilineButton_contentEdgeInsets + 16);
  v8 = *(double *)(v2 + OBJC_IVAR____TtC16MusicApplication15MultilineButton_contentEdgeInsets + 24);
  v18 = a1;
  v17 = 0;
  v9 = static ApproximatelyEquatable.!=~ infix(_:_:)(&v18, &v17);
  v10 = v6 + v8;
  v11 = v4 - v10;
  if (v4 - v10 <= 0.0)
    v11 = 0.0;
  if ((v9 & 1) != 0)
    v4 = v11;
  v18 = a2;
  v17 = 0;
  v12 = static ApproximatelyEquatable.!=~ infix(_:_:)(&v18, &v17);
  v13 = a2 - (v5 + v7);
  if (v13 <= 0.0)
    v13 = 0.0;
  if ((v12 & 1) != 0)
    v14 = v13;
  else
    v14 = a2;
  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC16MusicApplication15MultilineButton_textStackView), "sizeThatFits:", v4, v14);
  return v10 + v15;
}

uint64_t sub_9B3BB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicApplication15MultilineButton_lineComponents);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v13 = swift_bridgeObjectRetain(v1);
    v3 = v13 + 56;
    do
    {
      v5 = *(_QWORD *)(v3 - 16);
      v14 = *(_QWORD *)(v3 - 8);
      v6 = *(void **)v3;
      v7 = *(void **)(v3 + 8);
      v8 = *(void **)(v3 + 56);
      v9 = *(id *)(v3 + 16);
      v10 = v8;
      swift_bridgeObjectRetain(0xE000000000000000);
      swift_bridgeObjectRetain(v5);
      swift_bridgeObjectRetain(v6);
      v11 = v7;
      v3 += 104;
      v4._countAndFlagsBits = v14;
      v4._object = v6;
      String.append(_:)(v4);
      swift_bridgeObjectRelease(0xE000000000000000);

      swift_bridgeObjectRelease(v6);
      swift_bridgeObjectRelease(v5);
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease(v13);
  }
  return 0;
}

void sub_9B3DD0()
{
  char *v0;
  char *v1;
  id v2;
  double v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  id v33;
  char v34;
  char *v35;
  void *v36;
  void *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  id v42;
  char v43;
  void *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  id v49;
  char v50;
  void *v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  id v56;
  char v57;
  void *v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  id v63;
  char v64;
  void *v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  id v70;
  char v71;
  void *v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  id v77;
  char v78;
  void *v79;
  _BYTE v80[24];

  v1 = v0;
  if (v0[OBJC_IVAR____TtC16MusicApplication15MultilineButton_hasBackground] == 1)
  {
    v2 = objc_msgSend(v0, "tintColor");
    if (!v2)
      v2 = (id)*UIColor.MusicTint.normal.unsafeMutableAddressor();
    v3 = *(double *)&v0[OBJC_IVAR____TtC16MusicApplication15MultilineButton_backgroundCornerRadius];
    _sSo7UIImageC16MusicApplicationE16stretchableImage10filledWith12cornerRadiusABSgSo7UIColorC_12CoreGraphics7CGFloatVtFZ_0(v2, v3);
    v79 = v4;
    v5 = objc_msgSend((id)objc_opt_self(UIColor), "systemGray3Color");
    _sSo7UIImageC16MusicApplicationE16stretchableImage10filledWith12cornerRadiusABSgSo7UIColorC_12CoreGraphics7CGFloatVtFZ_0(v5, v3);
    v7 = v6;

    v8 = objc_msgSend(v2, "colorWithAlphaComponent:", 0.5);
    _sSo7UIImageC16MusicApplicationE16stretchableImage10filledWith12cornerRadiusABSgSo7UIColorC_12CoreGraphics7CGFloatVtFZ_0(v8, v3);
    v10 = v9;

    v11 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 0.0, 0.25);
    v12 = kCAFilterPlusD;
    v13 = objc_msgSend(v2, "_colorBlendedWithColor:compositingFilter:", v11, kCAFilterPlusD);

    if (v13)
    {
      _sSo7UIImageC16MusicApplicationE16stretchableImage10filledWith12cornerRadiusABSgSo7UIColorC_12CoreGraphics7CGFloatVtFZ_0(v13, v3);
      v15 = v14;

      v16 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 0.0, 0.25);
      v17 = objc_msgSend(v2, "_colorBlendedWithColor:compositingFilter:", v16, v12);

      if (v17)
      {
        v18 = objc_msgSend(v17, "colorWithAlphaComponent:", 0.5);

        _sSo7UIImageC16MusicApplicationE16stretchableImage10filledWith12cornerRadiusABSgSo7UIColorC_12CoreGraphics7CGFloatVtFZ_0(v18, v3);
        v20 = v19;

        v21 = v79;
        sub_9B4FB4(v79, 0);

        v22 = v7;
        sub_9B4FB4(v7, 2);

        v23 = v22;
        sub_9B4FB4(v7, 6);

        v24 = v10;
        sub_9B4FB4(v10, 1);

        v25 = v15;
        sub_9B4FB4(v15, 4);

        v26 = v20;
        sub_9B4FB4(v20, 5);

        v27 = *(void **)&v0[OBJC_IVAR____TtC16MusicApplication15MultilineButton_backgroundImageView];
        v28 = objc_msgSend(v0, "state");
        v29 = &v0[OBJC_IVAR____TtC16MusicApplication15MultilineButton_backgroundImagesForStates];
        swift_beginAccess(&v0[OBJC_IVAR____TtC16MusicApplication15MultilineButton_backgroundImagesForStates], v80, 0, 0);
        v30 = *(_QWORD *)v29;
        if (*(_QWORD *)(*(_QWORD *)v29 + 16))
        {
          v31 = sub_22239C(v28);
          if ((v32 & 1) != 0 || (v31 = sub_22239C(0), v33 = 0, (v34 & 1) != 0))
            v33 = *(id *)(*(_QWORD *)(v30 + 56) + 8 * v31);
        }
        else
        {
          v33 = 0;
        }
        objc_msgSend(v27, "setImage:", v33, v79);

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return;
  }
  v35 = &v0[OBJC_IVAR____TtC16MusicApplication15MultilineButton_backgroundImagesForStates];
  swift_beginAccess(&v0[OBJC_IVAR____TtC16MusicApplication15MultilineButton_backgroundImagesForStates], v80, 33, 0);
  v36 = (void *)sub_706E20(0);
  swift_endAccess(v80);

  v37 = *(void **)&v1[OBJC_IVAR____TtC16MusicApplication15MultilineButton_backgroundImageView];
  v38 = objc_msgSend(v1, "state");
  v39 = *(_QWORD *)v35;
  if (*(_QWORD *)(*(_QWORD *)v35 + 16))
  {
    v40 = sub_22239C(v38);
    if ((v41 & 1) != 0 || (v40 = sub_22239C(0), v42 = 0, (v43 & 1) != 0))
      v42 = *(id *)(*(_QWORD *)(v39 + 56) + 8 * v40);
  }
  else
  {
    v42 = 0;
  }
  objc_msgSend(v37, "setImage:", v42);

  swift_beginAccess(v35, v80, 33, 0);
  v44 = (void *)sub_706E20(2);
  swift_endAccess(v80);

  v45 = objc_msgSend(v1, "state");
  v46 = *(_QWORD *)v35;
  if (*(_QWORD *)(*(_QWORD *)v35 + 16))
  {
    v47 = sub_22239C(v45);
    if ((v48 & 1) != 0 || (v47 = sub_22239C(0), v49 = 0, (v50 & 1) != 0))
      v49 = *(id *)(*(_QWORD *)(v46 + 56) + 8 * v47);
  }
  else
  {
    v49 = 0;
  }
  objc_msgSend(v37, "setImage:", v49);

  swift_beginAccess(v35, v80, 33, 0);
  v51 = (void *)sub_706E20(6);
  swift_endAccess(v80);

  v52 = objc_msgSend(v1, "state");
  v53 = *(_QWORD *)v35;
  if (*(_QWORD *)(*(_QWORD *)v35 + 16))
  {
    v54 = sub_22239C(v52);
    if ((v55 & 1) != 0 || (v54 = sub_22239C(0), v56 = 0, (v57 & 1) != 0))
      v56 = *(id *)(*(_QWORD *)(v53 + 56) + 8 * v54);
  }
  else
  {
    v56 = 0;
  }
  objc_msgSend(v37, "setImage:", v56);

  swift_beginAccess(v35, v80, 33, 0);
  v58 = (void *)sub_706E20(1);
  swift_endAccess(v80);

  v59 = objc_msgSend(v1, "state");
  v60 = *(_QWORD *)v35;
  if (*(_QWORD *)(*(_QWORD *)v35 + 16))
  {
    v61 = sub_22239C(v59);
    if ((v62 & 1) != 0 || (v61 = sub_22239C(0), v63 = 0, (v64 & 1) != 0))
      v63 = *(id *)(*(_QWORD *)(v60 + 56) + 8 * v61);
  }
  else
  {
    v63 = 0;
  }
  objc_msgSend(v37, "setImage:", v63);

  swift_beginAccess(v35, v80, 33, 0);
  v65 = (void *)sub_706E20(4);
  swift_endAccess(v80);

  v66 = objc_msgSend(v1, "state");
  v67 = *(_QWORD *)v35;
  if (*(_QWORD *)(*(_QWORD *)v35 + 16))
  {
    v68 = sub_22239C(v66);
    if ((v69 & 1) != 0 || (v68 = sub_22239C(0), v70 = 0, (v71 & 1) != 0))
      v70 = *(id *)(*(_QWORD *)(v67 + 56) + 8 * v68);
  }
  else
  {
    v70 = 0;
  }
  objc_msgSend(v37, "setImage:", v70);

  swift_beginAccess(v35, v80, 33, 0);
  v72 = (void *)sub_706E20(5);
  swift_endAccess(v80);

  v73 = objc_msgSend(v1, "state");
  v74 = *(_QWORD *)v35;
  if (*(_QWORD *)(*(_QWORD *)v35 + 16))
  {
    v75 = sub_22239C(v73);
    if ((v76 & 1) != 0 || (v75 = sub_22239C(0), v77 = 0, (v78 & 1) != 0))
      v77 = *(id *)(*(_QWORD *)(v74 + 56) + 8 * v75);
  }
  else
  {
    v77 = 0;
  }
  objc_msgSend(v37, "setImage:", v77);

  objc_msgSend(v37, "setImage:", 0);
}

BOOL sub_9B4494(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD v11[6];
  uint64_t v12;
  _OWORD v13[6];
  uint64_t v14;

  v2 = *(_OWORD *)(a1 + 80);
  v11[4] = *(_OWORD *)(a1 + 64);
  v11[5] = v2;
  v12 = *(_QWORD *)(a1 + 96);
  v3 = *(_OWORD *)(a1 + 16);
  v11[0] = *(_OWORD *)a1;
  v11[1] = v3;
  v4 = *(_OWORD *)(a1 + 48);
  v11[2] = *(_OWORD *)(a1 + 32);
  v11[3] = v4;
  v5 = *(_OWORD *)(a2 + 16);
  v13[0] = *(_OWORD *)a2;
  v13[1] = v5;
  v6 = *(_OWORD *)(a2 + 32);
  v7 = *(_OWORD *)(a2 + 48);
  v8 = *(_OWORD *)(a2 + 64);
  v9 = *(_OWORD *)(a2 + 80);
  v14 = *(_QWORD *)(a2 + 96);
  v13[4] = v8;
  v13[5] = v9;
  v13[2] = v6;
  v13[3] = v7;
  return sub_9B4ED0((uint64_t *)v11, (uint64_t)v13);
}

id sub_9B44FC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MultilineButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for MultilineButton()
{
  return objc_opt_self(_TtC16MusicApplication15MultilineButton);
}

double sub_9B45C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  id v33;
  uint64_t v34;
  double result;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v1 = v0;
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicApplication15SubtitledButton_title);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicApplication15SubtitledButton_title + 8);
  sub_4E684(0, qword_14ADF70, UIFont_ptr);
  swift_bridgeObjectRetain();
  v4 = (void *)static UIFont.preferredFont(forTextStyle:weight:)(UIFontTextStyleHeadline, UIFontWeightMedium);
  v5 = (void *)objc_opt_self(UIColor);
  v6 = objc_msgSend(v5, "blackColor");
  v7 = objc_msgSend(v5, "clearColor");
  v41 = OBJC_IVAR____TtC16MusicApplication15SubtitledButton_textColor;
  v8 = *(void **)(v1 + OBJC_IVAR____TtC16MusicApplication15SubtitledButton_textColor);
  v9 = v8;
  v10 = v7;

  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_14B30F0);
  v12 = (_QWORD *)swift_allocObject(v11, 136, 7);
  *((_OWORD *)v12 + 1) = xmmword_105B360;
  v12[4] = 0x656C746974;
  v12[5] = 0xE500000000000000;
  v12[6] = v3;
  v12[7] = v2;
  v12[8] = v8;
  v12[9] = v7;
  *((_BYTE *)v12 + 80) = 3;
  v12[11] = 4;
  v12[12] = 0;
  *((_BYTE *)v12 + 104) = 0;
  v12[14] = v4;
  *(_OWORD *)(v12 + 15) = xmmword_1077170;
  v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16MusicApplication15SubtitledButton_subtitle + 8);
  if (!v13)
    goto LABEL_8;
  v14 = HIBYTE(v13) & 0xF;
  if ((v13 & 0x2000000000000000) == 0)
    v14 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16MusicApplication15SubtitledButton_subtitle) & 0xFFFFFFFFFFFFLL;
  if (v14)
  {
    v38 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16MusicApplication15SubtitledButton_subtitle);
    swift_bridgeObjectRetain();
    v39 = v2;
    swift_bridgeObjectRetain();
    v37 = v9;
    v36 = v10;
    v15 = v4;
    swift_bridgeObjectRetain();
    v40 = static UIFont.preferredFont(forTextStyle:weight:)(UIFontTextStyleHeadline, UIFontWeightBold);
    v16 = objc_msgSend(v5, "blackColor");
    v17 = objc_msgSend(v5, "clearColor");
    v18 = *(id *)(v1 + v41);
    v19 = v17;

    v20 = static UIFont.preferredFont(forTextStyle:weight:)(UIFontTextStyleCaption1, UIFontWeightRegular);
    v21 = objc_msgSend(v5, "blackColor");
    v22 = objc_msgSend(v5, "clearColor");
    v23 = *(void **)(v1 + v41);
    v24 = v23;

    v26 = v12[2];
    v25 = v12[3];
    if (v26 >= v25 >> 1)
      v12 = sub_121388((_QWORD *)(v25 > 1), v26 + 1, 1, v12);
    v12[2] = v26 + 1;
    v27 = &v12[13 * v26];
    v27[4] = 0x656C746974627573;
    v27[5] = 0xE800000000000000;
    v27[6] = v38;
    v27[7] = v13;
    v27[8] = v23;
    v27[9] = v22;
    *((_BYTE *)v27 + 80) = 3;
    v27[11] = 4;
    v27[12] = 0;
    *((_BYTE *)v27 + 104) = 0;
    v27[14] = v20;
    __asm { FMOV            V0.2D, #16.0 }
    *(_OWORD *)(v27 + 15) = _Q0;
    v2 = v39;
    v33 = (id)v40;
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v18 = v9;
    v19 = v10;
    v33 = v4;
  }
  v34 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16MusicApplication15MultilineButton_lineComponents);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC16MusicApplication15MultilineButton_lineComponents) = v12;
  sub_9B2FA4(v34);

  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(0xE500000000000000);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v34).n128_u64[0];
  return result;
}

void sub_9B4BD0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicApplication15SubtitledButton_title + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicApplication15SubtitledButton_subtitle + 8));

}

uint64_t type metadata accessor for SubtitledButton()
{
  return objc_opt_self(_TtC16MusicApplication15SubtitledButton);
}

void destroy for MultilineButton.LineComponent(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));

}

uint64_t initializeWithCopy for MultilineButton.LineComponent(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(void **)(a2 + 32);
  v6 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v7 = *(void **)(a2 + 80);
  *(_QWORD *)(a1 + 80) = v7;
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  v8 = v5;
  v9 = v6;
  v10 = v7;
  return a1;
}

uint64_t assignWithCopy for MultilineButton.LineComponent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  id v16;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = *(void **)(a1 + 32);
  v9 = *(void **)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v9;
  v10 = v9;

  v11 = *(void **)(a1 + 40);
  v12 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v12;
  v13 = v12;

  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v14 = *(void **)(a2 + 80);
  v15 = *(void **)(a1 + 80);
  *(_QWORD *)(a1 + 80) = v14;
  v16 = v14;

  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  return a1;
}

uint64_t assignWithTake for MultilineButton.LineComponent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  v6 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  v7 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);

  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v8 = *(void **)(a1 + 80);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);

  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  return a1;
}

ValueMetadata *type metadata accessor for MultilineButton.LineComponent()
{
  return &type metadata for MultilineButton.LineComponent;
}

BOOL sub_9B4ED0(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char v8;
  _BOOL8 result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  __int128 v16;
  __int128 v17;
  _OWORD v18[3];
  uint64_t v19;
  _OWORD v20[3];
  uint64_t v21;

  v4 = *a1;
  v5 = a1[1];
  v6 = *(_QWORD *)(a2 + 8);
  v7 = v4 == *(_QWORD *)a2 && v5 == v6;
  if (v7
    || (v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *(_QWORD *)a2, v6, 0), result = 0, (v8 & 1) != 0))
  {
    v10 = a1[2];
    v11 = a1[3];
    v12 = *(_QWORD *)(a2 + 16);
    v13 = *(_QWORD *)(a2 + 24);
    v14 = v10 == v12 && v11 == v13;
    if (v14
      || (v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v11, v12, v13, 0), result = 0, (v15 & 1) != 0))
    {
      v16 = *((_OWORD *)a1 + 3);
      v20[0] = *((_OWORD *)a1 + 2);
      v20[1] = v16;
      v20[2] = *((_OWORD *)a1 + 4);
      v21 = a1[10];
      v17 = *(_OWORD *)(a2 + 48);
      v18[0] = *(_OWORD *)(a2 + 32);
      v18[1] = v17;
      v18[2] = *(_OWORD *)(a2 + 64);
      v19 = *(_QWORD *)(a2 + 80);
      return _s16MusicApplication14TextAttributesV2eeoiySbAC_ACtFZ_0((uint64_t)v20, (uint64_t)v18)
          && *((double *)a1 + 11) == *(double *)(a2 + 88)
          && *((double *)a1 + 12) == *(double *)(a2 + 96);
    }
  }
  return result;
}

void sub_9B4FB4(void *a1, uint64_t a2)
{
  char *v2;
  char *v3;
  char *v5;
  id v7;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  void *v10;
  id v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  id v16;
  char v17;
  uint64_t v18;
  _BYTE v19[24];

  v3 = v2;
  v5 = &v2[OBJC_IVAR____TtC16MusicApplication15MultilineButton_backgroundImagesForStates];
  if (a1)
  {
    swift_beginAccess(v5, v19, 33, 0);
    v7 = a1;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)v5);
    v18 = *(_QWORD *)v5;
    *(_QWORD *)v5 = 0x8000000000000000;
    sub_19D40C((uint64_t)v7, a2, isUniquelyReferenced_nonNull_native);
    v9 = *(_QWORD *)v5;
    *(_QWORD *)v5 = v18;
    swift_bridgeObjectRelease(v9);
  }
  else
  {
    swift_beginAccess(&v2[OBJC_IVAR____TtC16MusicApplication15MultilineButton_backgroundImagesForStates], v19, 33, 0);
    v7 = (id)sub_706E20(a2);
  }
  swift_endAccess(v19);

  v10 = *(void **)&v3[OBJC_IVAR____TtC16MusicApplication15MultilineButton_backgroundImageView];
  v11 = objc_msgSend(v3, "state");
  v12 = &v3[OBJC_IVAR____TtC16MusicApplication15MultilineButton_backgroundImagesForStates];
  swift_beginAccess(v12, v19, 0, 0);
  v13 = *(_QWORD *)v12;
  if (*(_QWORD *)(*(_QWORD *)v12 + 16))
  {
    v14 = sub_22239C(v11);
    if ((v15 & 1) != 0 || (v14 = sub_22239C(0), v16 = 0, (v17 & 1) != 0))
      v16 = *(id *)(*(_QWORD *)(v13 + 56) + 8 * v14);
  }
  else
  {
    v16 = 0;
  }
  objc_msgSend(v10, "setImage:", v16, v18);

}

void sub_9B5124()
{
  _BYTE *v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)&v0[OBJC_IVAR____TtC16MusicApplication15MultilineButton_backgroundCornerRadius] = 0x4020000000000000;
  v0[OBJC_IVAR____TtC16MusicApplication15MultilineButton_hasBackground] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MusicApplication15MultilineButton_borderColor] = 0;
  v0[OBJC_IVAR____TtC16MusicApplication15MultilineButton_isActivityIndicatorActive] = 0;
  v1 = &v0[OBJC_IVAR____TtC16MusicApplication15MultilineButton_contentEdgeInsets];
  *v1 = xmmword_1085B70;
  v1[1] = xmmword_1085B70;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MusicApplication15MultilineButton_lineComponents] = _swiftEmptyArrayStorage;
  v2 = OBJC_IVAR____TtC16MusicApplication15MultilineButton_textStackView;
  type metadata accessor for TextStackView();
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  v3 = OBJC_IVAR____TtC16MusicApplication15MultilineButton_backgroundImageView;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v4 = OBJC_IVAR____TtC16MusicApplication15MultilineButton_backgroundImagesForStates;
  *(_QWORD *)&v0[v4] = sub_1A26AC(_swiftEmptyArrayStorage);
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MusicApplication15MultilineButton_activityIndicatorView] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000000010C4100, "MusicApplication/MultilineButton.swift", 38, 2, 29, 0);
  __break(1u);
}

char *sub_9B5254()
{
  _BYTE *v0;
  _QWORD *v1;
  uint64_t v2;
  id v3;
  char *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  char *v15;
  char *v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  char *v28;
  _QWORD *v29;
  NSString v30;
  objc_super v32;
  __int128 v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v1 = &v0[OBJC_IVAR____TtC16MusicApplication22SocialProfileHeaderRow_title];
  *v1 = 0;
  v1[1] = 0xE000000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MusicApplication22SocialProfileHeaderRow_badgeValue] = 0;
  v0[OBJC_IVAR____TtC16MusicApplication22SocialProfileHeaderRow_isBackgroundViewHidden] = 0;
  v2 = OBJC_IVAR____TtC16MusicApplication22SocialProfileHeaderRow_backgroundView;
  v3 = objc_allocWithZone((Class)UIView);
  v4 = v0;
  *(_QWORD *)&v0[v2] = objc_msgSend(v3, "init");
  v5 = OBJC_IVAR____TtC16MusicApplication22SocialProfileHeaderRow_badgeView;
  v6 = objc_allocWithZone((Class)type metadata accessor for NotificationBadgeView());
  *(_QWORD *)&v4[v5] = sub_AAB58(0);
  v7 = OBJC_IVAR____TtC16MusicApplication22SocialProfileHeaderRow_chevronImageView;
  *(_QWORD *)&v4[v7] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v8 = OBJC_IVAR____TtC16MusicApplication22SocialProfileHeaderRow_titleCompositingView;
  if (qword_14AB5E8 != -1)
    swift_once(&qword_14AB5E8, sub_609A80);
  v9 = (void *)qword_1580AE8;
  sub_18A1E0();
  v10 = v9;
  v11 = (void *)static UIFont.preferredFont(forTextStyle:weight:)(UIFontTextStyleBody, UIFontWeightMedium);
  if (qword_14AB5F0 != -1)
    swift_once(&qword_14AB5F0, sub_609B24);
  v12 = (void *)qword_1580AF0;
  LOBYTE(v33) = 0;
  *((_QWORD *)&v33 + 1) = 0;
  v34 = v10;
  v35 = v11;
  v36 = 4;
  v37 = 0;
  v38 = 1;
  v39 = qword_1580AF0;
  v13 = objc_allocWithZone((Class)type metadata accessor for VibrancyLabelCompositingView());
  v14 = v12;
  v15 = sub_824A5C(&v33);

  *(_QWORD *)&v4[v8] = v15;
  v32.receiver = v4;
  v32.super_class = (Class)type metadata accessor for SocialProfileHeaderRow();
  v16 = (char *)objc_msgSendSuper2(&v32, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v17 = objc_msgSend(v16, "layer");
  objc_msgSend(v17, "setAllowsGroupBlending:", 0);

  v18 = objc_msgSend(v16, "layer");
  objc_msgSend(v18, "setAllowsGroupOpacity:", 0);

  v19 = (void *)objc_opt_self(UIColor);
  v20 = objc_msgSend(v19, "clearColor");
  objc_msgSend(v16, "setBackgroundColor:", v20);

  v21 = OBJC_IVAR____TtC16MusicApplication22SocialProfileHeaderRow_backgroundView;
  v22 = *(void **)&v16[OBJC_IVAR____TtC16MusicApplication22SocialProfileHeaderRow_backgroundView];
  v23 = objc_msgSend(v16, "traitCollection");

  if (objc_msgSend(v23, "horizontalSizeClass") == (char *)&dword_0 + 2)
  {
    v24 = objc_msgSend(v19, "clearColor");
  }
  else
  {
    if (qword_14AB5E0 != -1)
      swift_once(&qword_14AB5E0, sub_609A54);
    v24 = (id)qword_1580AE0;
  }
  v25 = v24;

  objc_msgSend(v22, "setBackgroundColor:", v25);
  v26 = objc_msgSend(*(id *)&v16[v21], "layer");
  v27 = objc_msgSend(v16, "traitCollection");

  v28 = (char *)objc_msgSend(v27, "userInterfaceStyle");
  v29 = &kCAFilterColorDodgeBlendMode;
  if (v28 != (_BYTE *)&dword_0 + 2)
    v29 = &kCAFilterColorBurnBlendMode;
  static String._unconditionallyBridgeFromObjectiveC(_:)(*v29);

  v30 = String._bridgeToObjectiveC()();
  objc_msgSend(v26, "setCompositingFilter:", v30, swift_bridgeObjectRelease().n128_f64[0]);

  objc_msgSend(v16, "addSubview:", *(_QWORD *)&v16[v21]);
  objc_msgSend(v16, "addSubview:", *(_QWORD *)&v16[OBJC_IVAR____TtC16MusicApplication22SocialProfileHeaderRow_titleCompositingView]);

  objc_msgSend(v16, "addSubview:", *(_QWORD *)&v16[OBJC_IVAR____TtC16MusicApplication22SocialProfileHeaderRow_badgeView]);
  objc_msgSend(v16, "addSubview:", *(_QWORD *)&v16[OBJC_IVAR____TtC16MusicApplication22SocialProfileHeaderRow_chevronImageView]);

  sub_9B63D8();
  return v16;
}

double sub_9B5734(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  double result;

  v3 = (uint64_t *)&v2[OBJC_IVAR____TtC16MusicApplication22SocialProfileHeaderRow_title];
  v4 = *(_QWORD *)&v2[OBJC_IVAR____TtC16MusicApplication22SocialProfileHeaderRow_title];
  v5 = *(_QWORD *)&v2[OBJC_IVAR____TtC16MusicApplication22SocialProfileHeaderRow_title + 8];
  *v3 = a1;
  v3[1] = a2;
  v6 = v4 == a1 && v5 == a2;
  if (!v6 && (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, v4, v5, 0) & 1) == 0)
  {
    v9 = (uint64_t *)(*(_QWORD *)&v2[OBJC_IVAR____TtC16MusicApplication22SocialProfileHeaderRow_titleCompositingView]
                   + OBJC_IVAR____TtC16MusicApplication28VibrancyLabelCompositingView_text);
    v10 = *v9;
    v11 = v9[1];
    *v9 = a1;
    v9[1] = a2;
    swift_bridgeObjectRetain();
    sub_824168(v10, v11, v12);
    objc_msgSend(v2, "setNeedsLayout", swift_bridgeObjectRelease(v11).n128_f64[0]);
  }
  *(_QWORD *)&result = swift_bridgeObjectRelease(v5).n128_u64[0];
  return result;
}

id sub_9B58B0(char a1)
{
  char *v1;
  int v2;
  id result;
  void *v4;
  char v5;
  id v6;
  id v7;

  v2 = a1 & 1;
  result = objc_msgSend(v1, "isHighlighted");
  if ((_DWORD)result != v2)
  {
    v4 = *(void **)&v1[OBJC_IVAR____TtC16MusicApplication22SocialProfileHeaderRow_backgroundView];
    v5 = objc_msgSend(v1, "state");
    v6 = objc_msgSend(v1, "traitCollection");
    v7 = sub_9B665C(v5, v6);

    objc_msgSend(v4, "setBackgroundColor:", v7);
    return objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC16MusicApplication22SocialProfileHeaderRow_chevronImageView], "setHighlighted:", objc_msgSend(v1, "isHighlighted"));
  }
  return result;
}

id sub_9B5998()
{
  char *v0;
  double v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  id v9;
  id v10;
  double v11;
  double v12;
  double v13;
  double v14;
  CGFloat v15;
  double v16;
  double v17;
  CGFloat v18;
  void *v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  double v24;
  double v25;
  CGFloat v26;
  double v27;
  CGFloat v28;
  double v30;
  CGFloat v31;
  CGFloat rect;
  objc_super v33;
  CGRect v34;
  CGRect v35;
  CGRect v36;
  CGRect v37;
  CGRect v38;
  CGRect v39;

  v33.receiver = v0;
  v33.super_class = (Class)type metadata accessor for SocialProfileHeaderRow();
  objc_msgSendSuper2(&v33, "layoutSubviews");
  objc_msgSend(v0, "bounds");
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v9 = objc_msgSend(v0, "traitCollection");
  objc_msgSend(v9, "displayScale");

  v10 = objc_msgSend(v0, "effectiveUserInterfaceLayoutDirection");
  objc_msgSend(v0, "music_inheritedLayoutInsets");
  v13 = UIEdgeInsetsInsetRect(v2, v4, v6, v8, v11, v12);
  v15 = v14;
  v30 = v16;
  v18 = v17;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC16MusicApplication22SocialProfileHeaderRow_backgroundView], "setFrame:", v2, v4, v6, v8);
  v19 = *(void **)&v0[OBJC_IVAR____TtC16MusicApplication22SocialProfileHeaderRow_chevronImageView];
  objc_msgSend(v19, "sizeThatFits:");
  v21 = v20;
  v23 = v22;
  v31 = v15;
  v34.origin.x = v13;
  v34.origin.y = v15;
  v34.size.width = v30;
  rect = v18;
  v34.size.height = v18;
  CGRectGetMaxX(v34);
  v35.origin.x = 0.0;
  v35.origin.y = 0.0;
  v35.size.width = v21;
  v35.size.height = v23;
  CGRectGetWidth(v35);
  v36.origin.x = CGRect.centeringAlong(axes:bounds:scale:)(2);
  v24 = v30 - (CGRectGetWidth(v36) + 12.0);
  if (*(uint64_t *)&v0[OBJC_IVAR____TtC16MusicApplication22SocialProfileHeaderRow_badgeValue] >= 1)
  {
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC16MusicApplication22SocialProfileHeaderRow_badgeView], "sizeThatFits:", 0.0, 0.0, *(_QWORD *)&v23);
    v26 = v25;
    v28 = v27;
    v37.origin.y = v31;
    v37.origin.x = v13;
    v37.size.width = v24;
    v37.size.height = rect;
    CGRectGetMaxX(v37);
    v38.origin.x = 0.0;
    v38.origin.y = 0.0;
    v38.size.width = v26;
    v38.size.height = v28;
    CGRectGetWidth(v38);
    v39.origin.x = CGRect.centeringAlong(axes:bounds:scale:)(2);
    CGRectGetWidth(v39);
  }
  objc_msgSend(v19, "setFrame:", CGRect.applyingLayoutDirection(_:inBounds:)(v10));
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC16MusicApplication22SocialProfileHeaderRow_badgeView], "setFrame:", CGRect.applyingLayoutDirection(_:inBounds:)(v10));
  return objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC16MusicApplication22SocialProfileHeaderRow_titleCompositingView], "setFrame:", CGRect.applyingLayoutDirection(_:inBounds:)(v10));
}

double sub_9B5E80()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  double v3;
  double v4;
  double v5;
  double v6;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicApplication22SocialProfileHeaderRow_title + 8);
  if ((v1 & 0x2000000000000000) != 0)
    v2 = HIBYTE(v1) & 0xF;
  else
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicApplication22SocialProfileHeaderRow_title) & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC16MusicApplication22SocialProfileHeaderRow_titleCompositingView), "sizeThatFits:", 0.0, 0.0);
    v4 = v3 + 12.0;
  }
  else
  {
    v4 = 0.0;
  }
  if (*(uint64_t *)(v0 + OBJC_IVAR____TtC16MusicApplication22SocialProfileHeaderRow_badgeValue) >= 1)
  {
    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC16MusicApplication22SocialProfileHeaderRow_badgeView), "sizeThatFits:", 0.0, 0.0);
    v4 = v4 + v5 + 12.0;
  }
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC16MusicApplication22SocialProfileHeaderRow_chevronImageView), "sizeThatFits:", 0.0, 0.0);
  return v4 + v6;
}

void sub_9B5F58(uint64_t a1)
{
  char *v1;
  void *v3;
  char v4;
  id v5;
  id v6;
  id v7;
  id v8;
  char *v9;
  _QWORD *v10;
  NSString v11;
  objc_super v12;

  v12.receiver = v1;
  v12.super_class = (Class)type metadata accessor for SocialProfileHeaderRow();
  objc_msgSendSuper2(&v12, "traitCollectionDidChange:", a1);
  v3 = *(void **)&v1[OBJC_IVAR____TtC16MusicApplication22SocialProfileHeaderRow_backgroundView];
  v4 = objc_msgSend(v1, "state");
  v5 = objc_msgSend(v1, "traitCollection");
  v6 = sub_9B665C(v4, v5);

  objc_msgSend(v3, "setBackgroundColor:", v6);
  v7 = objc_msgSend(v3, "layer");
  v8 = objc_msgSend(v1, "traitCollection");
  v9 = (char *)objc_msgSend(v8, "userInterfaceStyle");
  v10 = &kCAFilterColorDodgeBlendMode;
  if (v9 != (_BYTE *)&dword_0 + 2)
    v10 = &kCAFilterColorBurnBlendMode;
  static String._unconditionallyBridgeFromObjectiveC(_:)(*v10);

  v11 = String._bridgeToObjectiveC()();
  objc_msgSend(v7, "setCompositingFilter:", v11, swift_bridgeObjectRelease().n128_f64[0]);

  sub_9B63D8();
}

uint64_t sub_9B6234()
{
  char *v0;
  id v1;
  void *v2;
  uint64_t v3;
  objc_super v5;

  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for SocialProfileHeaderRow();
  v1 = objc_msgSendSuper2(&v5, "accessibilityValue");
  if (v1)
  {
    v2 = v1;
    v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);

  }
  else
  {
    v3 = 0;
  }
  if (*(uint64_t *)&v0[OBJC_IVAR____TtC16MusicApplication22SocialProfileHeaderRow_badgeValue] >= 1)
  {
    swift_bridgeObjectRelease();
    return dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  }
  return v3;
}

void sub_9B62F8(void *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  id v6;
  NSString v7;
  id v8;
  objc_super v9;

  if (a3)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
    v6 = a1;
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = a1;
    v7 = 0;
  }
  v9.receiver = a1;
  v9.super_class = (Class)type metadata accessor for SocialProfileHeaderRow();
  objc_msgSendSuper2(&v9, *a4, v7);

}

void sub_9B63D8()
{
  char *v0;
  id v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;

  v1 = objc_msgSend(v0, "traitCollection");
  v2 = objc_msgSend(v1, "preferredContentSizeCategory");

  v3 = sub_9B7460();
  if (v3)
  {
    v4 = (void *)objc_opt_self(UIColor);
    v5 = objc_msgSend(v4, "blackColor");
    v6 = objc_msgSend(v3, "flattenedImageWithColor:", v5);
    v7 = objc_msgSend(v6, "imageWithRenderingMode:", 1);

    v3 = v7;
    v8 = objc_msgSend(v4, "whiteColor");
    v9 = objc_msgSend(v3, "flattenedImageWithColor:", v8);
    v11 = objc_msgSend(v9, "imageWithRenderingMode:", 1);

  }
  else
  {
    v11 = 0;
  }
  v10 = *(void **)&v0[OBJC_IVAR____TtC16MusicApplication22SocialProfileHeaderRow_chevronImageView];
  objc_msgSend(v10, "setImage:", v3);
  objc_msgSend(v10, "setHighlightedImage:", v11);

}

id sub_9B65A0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SocialProfileHeaderRow();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SocialProfileHeaderRow()
{
  return objc_opt_self(_TtC16MusicApplication22SocialProfileHeaderRow);
}

id sub_9B665C(char a1, id a2)
{
  id v3;

  if (objc_msgSend(a2, "horizontalSizeClass") == (char *)&dword_0 + 2)
  {
    v3 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
    return v3;
  }
  if ((a1 & 5) != 0)
  {
    if (qword_14AB5E0 != -1)
      swift_once(&qword_14AB5E0, sub_609A54);
    v3 = objc_msgSend((id)qword_1580AE0, "colorWithAlphaComponent:", 0.4);
    return v3;
  }
  if (qword_14AB5E0 != -1)
    swift_once(&qword_14AB5E0, sub_609A54);
  return (id)qword_1580AE0;
}

void sub_9B673C()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  char *v14;
  __int128 v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC16MusicApplication22SocialProfileHeaderRow_title];
  *(_QWORD *)v2 = 0;
  *((_QWORD *)v2 + 1) = 0xE000000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MusicApplication22SocialProfileHeaderRow_badgeValue] = 0;
  v0[OBJC_IVAR____TtC16MusicApplication22SocialProfileHeaderRow_isBackgroundViewHidden] = 0;
  v3 = OBJC_IVAR____TtC16MusicApplication22SocialProfileHeaderRow_backgroundView;
  *(_QWORD *)&v1[v3] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v4 = OBJC_IVAR____TtC16MusicApplication22SocialProfileHeaderRow_badgeView;
  v5 = objc_allocWithZone((Class)type metadata accessor for NotificationBadgeView());
  *(_QWORD *)&v1[v4] = sub_AAB58(0);
  v6 = OBJC_IVAR____TtC16MusicApplication22SocialProfileHeaderRow_chevronImageView;
  *(_QWORD *)&v1[v6] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v7 = OBJC_IVAR____TtC16MusicApplication22SocialProfileHeaderRow_titleCompositingView;
  if (qword_14AB5E8 != -1)
    swift_once(&qword_14AB5E8, sub_609A80);
  v8 = (void *)qword_1580AE8;
  sub_18A1E0();
  v9 = v8;
  v10 = (void *)static UIFont.preferredFont(forTextStyle:weight:)(UIFontTextStyleBody, UIFontWeightMedium);
  if (qword_14AB5F0 != -1)
    swift_once(&qword_14AB5F0, sub_609B24);
  v11 = (void *)qword_1580AF0;
  LOBYTE(v15) = 0;
  *((_QWORD *)&v15 + 1) = 0;
  v16 = v9;
  v17 = v10;
  v18 = 4;
  v19 = 0;
  v20 = 1;
  v21 = qword_1580AF0;
  v12 = objc_allocWithZone((Class)type metadata accessor for VibrancyLabelCompositingView());
  v13 = v11;
  v14 = sub_824A5C(&v15);

  *(_QWORD *)&v1[v7] = v14;
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000000010C4100, "MusicApplication/SocialProfileHeaderRow.swift", 45, 2, 41, 0);
  __break(1u);
}

uint64_t *sub_9B6930()
{
  if (qword_14ABD68 != -1)
    swift_once(&qword_14ABD68, sub_9B6D50);
  return &qword_15814F8;
}

UIImage __swiftcall UIImage.applying(tintColor:)(UIColor tintColor)
{
  void *v1;
  id v2;
  id v3;

  v2 = objc_msgSend(v1, "flattenedImageWithColor:", tintColor.super.isa);
  v3 = objc_msgSend(v2, "imageWithRenderingMode:", 1);

  return (UIImage)v3;
}

id sub_9B69CC()
{
  id result;

  sub_1E23C4();
  result = UIColor.init(decimalRed:decimalGreen:decimalBlue:alpha:)(140, 142, 148, 1.0);
  qword_1581480 = (uint64_t)result;
  return result;
}

id sub_9B6A0C(uint64_t a1)
{
  return sub_2EA560(a1, (SEL *)&selRef_systemBackgroundColor, &qword_1581488);
}

void sub_9B6A20(uint64_t a1)
{
  sub_1B0F84(a1, (uint64_t)sub_9B6A3C, (uint64_t)&block_descriptor_3_10, &qword_1581490);
}

id sub_9B6A3C(void *a1)
{
  char *v1;
  void *v2;
  char **v3;
  id v4;
  id v5;

  v1 = (char *)objc_msgSend(a1, "userInterfaceStyle");
  v2 = (void *)objc_opt_self(UIColor);
  v3 = &selRef_whiteColor;
  if (v1 != (_BYTE *)&dword_0 + 2)
    v3 = &selRef_blackColor;
  v4 = objc_msgSend(v2, *v3);
  v5 = objc_msgSend(v4, "colorWithAlphaComponent:", 0.15);

  return v5;
}

id sub_9B6AC8(uint64_t a1)
{
  return sub_2EA560(a1, (SEL *)&selRef_secondarySystemBackgroundColor, &qword_1581498);
}

void sub_9B6ADC(uint64_t a1)
{
  sub_1B0F84(a1, (uint64_t)sub_9B6AF8, (uint64_t)&block_descriptor_253, &qword_15814A0);
}

id sub_9B6AF8(void *a1)
{
  if (objc_msgSend(a1, "userInterfaceStyle") == (char *)&dword_0 + 2)
    return objc_msgSend((id)objc_opt_self(UIColor), "tertiaryLabelColor");
  if (qword_14ABD40 != -1)
    swift_once(&qword_14ABD40, sub_9B6C10);
  return (id)qword_15814D0;
}

id sub_9B6B70(uint64_t a1)
{
  return sub_2EA560(a1, (SEL *)&selRef_separatorColor, &qword_15814A8);
}

void sub_9B6B84(uint64_t a1)
{
  sub_1B0F84(a1, (uint64_t)sub_9B6BA0, (uint64_t)&block_descriptor_9_8, &qword_15814B0);
}

id sub_9B6BA0(void *a1)
{
  return sub_9B6CA0(a1, 239, 244);
}

id sub_9B6BAC()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 0.0, 0.32);
  qword_15814B8 = (uint64_t)result;
  return result;
}

id sub_9B6BE8(uint64_t a1)
{
  return sub_2EA560(a1, (SEL *)&selRef_secondarySystemBackgroundColor, &qword_15814C0);
}

id sub_9B6BFC(uint64_t a1)
{
  return sub_2EA560(a1, (SEL *)&selRef_secondaryLabelColor, &qword_15814C8);
}

id sub_9B6C10()
{
  id result;

  sub_1E23C4();
  result = UIColor.init(decimalRed:decimalGreen:decimalBlue:alpha:)(229, 229, 234, 1.0);
  qword_15814D0 = (uint64_t)result;
  return result;
}

id sub_9B6C50(uint64_t a1)
{
  return sub_2EA560(a1, (SEL *)&selRef_labelColor, &qword_15814D8);
}

id sub_9B6C64(uint64_t a1)
{
  return sub_2EA560(a1, (SEL *)&selRef_tertiaryLabelColor, &qword_15814E0);
}

void sub_9B6C78(uint64_t a1)
{
  sub_1B0F84(a1, (uint64_t)sub_9B6C94, (uint64_t)&block_descriptor_6_14, &qword_15814E8);
}

id sub_9B6C94(void *a1)
{
  return sub_9B6CA0(a1, 249, 254);
}

id sub_9B6CA0(void *a1, uint64_t a2, uint64_t a3)
{
  if (objc_msgSend(a1, "userInterfaceStyle") == (char *)&dword_0 + 2)
    return objc_msgSend((id)objc_opt_self(UIColor), "secondarySystemBackgroundColor");
  sub_1E23C4();
  return UIColor.init(decimalRed:decimalGreen:decimalBlue:alpha:)(a2, a2, a3, 1.0);
}

id sub_9B6D20()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)AVTimeFormatter), "init");
  qword_15814F0 = (uint64_t)result;
  return result;
}

void sub_9B6D50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  Class isa;
  uint64_t v12;

  v0 = type metadata accessor for TimeZone(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Calendar(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(objc_allocWithZone((Class)NSDateFormatter), "init");
  objc_msgSend(v8, "setDateStyle:", 3);
  v9 = Calendar.musicDefaultCalendar.unsafeMutableAddressor();
  v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v9, v4);
  Calendar.timeZone.getter(v10);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  isa = TimeZone._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  objc_msgSend(v8, "setTimeZone:", isa);

  qword_15814F8 = (uint64_t)v8;
}

void sub_9B6E8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  Class isa;
  uint64_t v12;

  v0 = type metadata accessor for TimeZone(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Calendar(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(objc_allocWithZone((Class)NSDateFormatter), "init");
  v9 = Calendar.musicDefaultCalendar.unsafeMutableAddressor();
  v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v9, v4);
  Calendar.timeZone.getter(v10);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  isa = TimeZone._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  objc_msgSend(v8, "setTimeZone:", isa);

  qword_14ED520 = (uint64_t)v8;
}

id sub_9B6FB8()
{
  qword_1581500 = ICStoreArtworkInfoCropStyleFCCrop170T100B;
  return ICStoreArtworkInfoCropStyleFCCrop170T100B;
}

id sub_9B6FD0()
{
  qword_1581508 = ICStoreArtworkInfoCropStyleSpecificRectangle;
  return ICStoreArtworkInfoCropStyleSpecificRectangle;
}

void sub_9B6FE8(void *a1, void *a2, double *a3, void **a4, CGFloat a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  CGContext *v14;
  id v15;
  CGColor *v16;
  double v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  const CGPath *v21;
  CGContext *v22;
  id v23;
  id v24;
  void *v25;
  uint64_t v26;

  v10 = type metadata accessor for CGPathFillRule(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (CGContext *)objc_msgSend(a1, "CGContext");
  v15 = objc_msgSend(objc_retainAutorelease(a2), "cgColor");
  if (v15)
  {
    v16 = (CGColor *)v15;
    CGContextSetFillColorWithColor(v14, v16);

    v17 = *a3;
    v18 = a3[1];
    if (a5 <= 0.0)
    {
      objc_msgSend(a1, "fillRect:", 0.0, 0.0, v17, v18);
    }
    else
    {
      v19 = 0;
      v20 = 0;
      v21 = CGPathCreateWithRoundedRect(*(CGRect *)(&v17 - 2), a5, a5, 0);
      v22 = (CGContext *)objc_msgSend(a1, "CGContext");
      CGContextAddPath(v22, v21);

      v23 = objc_msgSend(a1, "CGContext");
      (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for CGPathFillRule.winding(_:), v10);
      CGContextRef.fillPath(using:)(v13);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);

    }
    v24 = objc_msgSend(a1, "currentImage");
    v25 = *a4;
    *a4 = v24;

  }
  else
  {
    __break(1u);
  }
}

void _sSo7UIImageC16MusicApplicationE16stretchableImage10filledWith12cornerRadiusABSgSo7UIColorC_12CoreGraphics7CGFloatVtFZ_0(void *a1, double a2)
{
  double v9;
  id v10;
  id v11;
  double v12;
  double v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  id v20;
  __n128 v21;
  id v22;
  id v23;
  _QWORD aBlock[5];
  uint64_t v25;
  id v26;
  __int128 v27;

  __asm { FMOV            V0.2D, #1.0 }
  v27 = _Q0;
  v9 = 1.0;
  if (a2 > 0.0)
  {
    v9 = a2 + a2 + 1.0;
    *(double *)&v27 = v9;
    *((double *)&v27 + 1) = v9;
  }
  v10 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRendererFormat), "init");
  v11 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v11, "scale");
  v13 = v12;

  objc_msgSend(v10, "setScale:", v13);
  v14 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:format:", v10, v9, v9);
  v26 = 0;
  v15 = swift_allocObject(&unk_1392238, 48, 7);
  *(_QWORD *)(v15 + 16) = a1;
  *(_QWORD *)(v15 + 24) = &v27;
  *(double *)(v15 + 32) = a2;
  *(_QWORD *)(v15 + 40) = &v26;
  v16 = swift_allocObject(&unk_1392260, 32, 7);
  *(_QWORD *)(v16 + 16) = sub_9B82C0;
  *(_QWORD *)(v16 + 24) = v15;
  aBlock[4] = sub_103BD8;
  v25 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23E9F0;
  aBlock[3] = &block_descriptor_15_9;
  v17 = _Block_copy(aBlock);
  v18 = v25;
  v19 = a1;
  swift_retain(v16);
  v20 = objc_msgSend(v14, "imageWithActions:", v17, swift_release(v18).n128_f64[0]);
  _Block_release(v17);
  LOBYTE(v17) = swift_isEscapingClosureAtFileLocation(v16, "", 82, 324, 41, 1, v21);

  swift_release(v16);
  if ((v17 & 1) != 0)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (!v26)
  {

    goto LABEL_10;
  }
  if ((~*(_QWORD *)&a2 & 0x7FF0000000000000) == 0)
    goto LABEL_12;
  if (a2 <= -9.22337204e18)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (a2 < 9.22337204e18)
  {
    v22 = v26;
    objc_msgSend(v22, "stretchableImageWithLeftCapWidth:topCapHeight:", (uint64_t)a2, (uint64_t)a2);

LABEL_10:
    v23 = v26;
    swift_release(v15);

    return;
  }
LABEL_14:
  __break(1u);
}

id sub_9B7460()
{
  uint64_t v0;
  id v1;
  NSString v2;
  id v3;
  id v4;
  id v5;
  id v6;

  if ((UIContentSizeCategory.isAccessibilityCategory.getter() & 1) != 0)
    v0 = 1;
  else
    v0 = -1;
  v1 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithTextStyle:scale:", UIFontTextStyleSubheadline, v0);
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v2, v1);

  if (v3)
  {
    v4 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
    v5 = objc_msgSend(v3, "flattenedImageWithColor:", v4);
    v6 = objc_msgSend(v5, "imageWithRenderingMode:", 1);

  }
  else
  {

    return 0;
  }
  return v6;
}

uint64_t sub_9B75B4(void *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  id v9;
  char v10;
  char v12;
  uint64_t v13;
  uint64_t v14;
  CGFloat Width;
  CGRect v16;
  CGRect v17;
  CGRect v18;
  CGRect v19;
  CGRect v20;
  CGRect v21;

  v9 = objc_msgSend(a1, "preferredContentSizeCategory");
  v10 = UIContentSizeCategory.isAccessibilityCategory.getter(v9);

  v16.origin.x = a2;
  v16.origin.y = a3;
  v16.size.width = a4;
  v16.size.height = a5;
  Width = CGRectGetWidth(v16);
  v14 = 0x40A3880000000000;
  sub_E1C20();
  if ((static ApproximatelyComparable<>.>=~ infix(_:_:)(&Width, &v14) & 1) != 0)
  {
    if ((v10 & 1) != 0)
      return 7;
    else
      return 8;
  }
  else
  {
    v17.origin.x = a2;
    v17.origin.y = a3;
    v17.size.width = a4;
    v17.size.height = a5;
    Width = CGRectGetWidth(v17);
    v14 = 0x4097700000000000;
    if ((static ApproximatelyComparable<>.>=~ infix(_:_:)(&Width, &v14) & 1) != 0)
    {
      if ((v10 & 1) != 0)
        return 6;
      else
        return 7;
    }
    else
    {
      v18.origin.x = a2;
      v18.origin.y = a3;
      v18.size.width = a4;
      v18.size.height = a5;
      Width = CGRectGetWidth(v18);
      v14 = 0x4092C00000000000;
      if ((static ApproximatelyComparable<>.>=~ infix(_:_:)(&Width, &v14) & 1) != 0)
      {
        if ((v10 & 1) != 0)
          return 5;
        else
          return 6;
      }
      else
      {
        v19.origin.x = a2;
        v19.origin.y = a3;
        v19.size.width = a4;
        v19.size.height = a5;
        Width = CGRectGetWidth(v19);
        v14 = 0x408F400000000000;
        if ((static ApproximatelyComparable<>.>=~ infix(_:_:)(&Width, &v14) & 1) != 0)
        {
          if ((v10 & 1) != 0)
            return 4;
          else
            return 5;
        }
        else
        {
          v20.origin.x = a2;
          v20.origin.y = a3;
          v20.size.width = a4;
          v20.size.height = a5;
          Width = CGRectGetWidth(v20);
          v14 = 0x4084500000000000;
          if ((static ApproximatelyComparable<>.>=~ infix(_:_:)(&Width, &v14) & 1) != 0)
          {
            if ((v10 & 1) != 0)
              return 3;
            else
              return 4;
          }
          else
          {
            v21.origin.x = a2;
            v21.origin.y = a3;
            v21.size.width = a4;
            v21.size.height = a5;
            Width = CGRectGetWidth(v21);
            v14 = 0x407C200000000000;
            v12 = static ApproximatelyComparable<>.>=~ infix(_:_:)(&Width, &v14);
            if ((v10 & 1) != 0)
              v13 = 2;
            else
              v13 = 3;
            if ((v12 & 1) != 0)
              return v13;
            else
              return 2;
          }
        }
      }
    }
  }
}

uint64_t sub_9B7880()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  Class isa;
  NSString v11;
  Class v12;
  id v13;
  uint64_t v15;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD5F0);
  __chkstk_darwin(v0);
  v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Date(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  DateComponents.date.getter(v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_812730((uint64_t)v2);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v2, v3);
    if (qword_14ABD70 != -1)
      swift_once(&qword_14ABD70, sub_9B6E8C);
    v9 = (void *)qword_14ED520;
    isa = Locale._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v9, "setLocale:", isa);

    v11 = String._bridgeToObjectiveC()();
    objc_msgSend(v9, "setLocalizedDateFormatFromTemplate:", v11);

    v12 = Date._bridgeToObjectiveC()().super.isa;
    v13 = objc_msgSend(v9, "stringFromDate:", v12);

    v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);

  }
  return v8;
}

uint64_t sub_9B7A48(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  uint64_t v29;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_14ED528);
  __chkstk_darwin(v2);
  v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14ED530);
  __chkstk_darwin(v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DateComponents(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 < 1)
    return 0;
  v12 = Calendar.musicDefaultCalendar.unsafeMutableAddressor();
  v13 = type metadata accessor for Calendar(0);
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v7, v12, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v7, 0, 1, v13);
  v15 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v4, 1, 1, v15);
  v28 = 1;
  v27 = 1;
  v26 = 1;
  v25 = 1;
  v24 = 1;
  v23 = 1;
  v22 = 1;
  v21 = 1;
  v20 = 1;
  v19 = 1;
  v18 = 1;
  DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)(v7, v4, 0, 1, a1, 0, 0, 1, 0, v18, 0, v19, 0, v20, 0, v21, 0, v22, 0,
    v23,
    0,
    v24,
    0,
    v25,
    0,
    v26,
    0,
    v27,
    0,
    v28);
  v16 = sub_9B7880();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v16;
}

uint64_t sub_9B7C68(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  __n128 v22;
  uint64_t v23;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v28 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14ED530);
  __chkstk_darwin(v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DateComponents(0);
  v26 = *(_QWORD *)(v6 - 8);
  v27 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Calendar(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = Calendar.musicDefaultCalendar.unsafeMutableAddressor();
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v25(v12, v13, v9);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_14ED538);
  v15 = type metadata accessor for Calendar.Component(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v18 = (v17 + 32) & ~v17;
  v19 = swift_allocObject(v14, v18 + *(_QWORD *)(v16 + 72), v17 | 7);
  *(_OWORD *)(v19 + 16) = xmmword_105B360;
  v20 = v19 + v18;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v16 + 104))(v20, enum case for Calendar.Component.year(_:), v15);
  v21 = sub_4BDF0(v19);
  swift_setDeallocating(v19);
  swift_arrayDestroy(v20, 1, v15);
  swift_deallocClassInstance(v19, 32, 7);
  Calendar.dateComponents(_:from:)(v21, a1);
  v22 = swift_bridgeObjectRelease(v21);
  ((void (*)(char *, char *, uint64_t, __n128))v25)(v5, v12, v9, v22);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v5, 0, 1, v9);
  DateComponents.calendar.setter(v5);
  v23 = sub_9B7880();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v8, v27);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v23;
}

uint64_t block_copy_helper_249(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_249(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_9B7EC0(void *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  id v9;
  char v10;
  uint64_t v12;
  CGFloat Width;
  CGRect v14;
  CGRect v15;
  CGRect v16;
  CGRect v17;
  CGRect v18;
  CGRect v19;

  v9 = objc_msgSend(a1, "preferredContentSizeCategory");
  v10 = UIContentSizeCategory.isAccessibilityCategory.getter(v9);

  v14.origin.x = a2;
  v14.origin.y = a3;
  v14.size.width = a4;
  v14.size.height = a5;
  Width = CGRectGetWidth(v14);
  v12 = 0x40A3880000000000;
  sub_E1C20();
  if ((static ApproximatelyComparable<>.>=~ infix(_:_:)(&Width, &v12) & 1) != 0)
  {
    if ((v10 & 1) != 0)
      return 7;
    else
      return 9;
  }
  else
  {
    v15.origin.x = a2;
    v15.origin.y = a3;
    v15.size.width = a4;
    v15.size.height = a5;
    Width = CGRectGetWidth(v15);
    v12 = 0x4097700000000000;
    if ((static ApproximatelyComparable<>.>=~ infix(_:_:)(&Width, &v12) & 1) != 0)
    {
      if ((v10 & 1) != 0)
        return 6;
      else
        return 8;
    }
    else
    {
      v16.origin.x = a2;
      v16.origin.y = a3;
      v16.size.width = a4;
      v16.size.height = a5;
      Width = CGRectGetWidth(v16);
      v12 = 0x4092C00000000000;
      if ((static ApproximatelyComparable<>.>=~ infix(_:_:)(&Width, &v12) & 1) != 0)
      {
        if ((v10 & 1) != 0)
          return 5;
        else
          return 7;
      }
      else
      {
        v17.origin.x = a2;
        v17.origin.y = a3;
        v17.size.width = a4;
        v17.size.height = a5;
        Width = CGRectGetWidth(v17);
        v12 = 0x408F400000000000;
        if ((static ApproximatelyComparable<>.>=~ infix(_:_:)(&Width, &v12) & 1) != 0)
        {
          if ((v10 & 1) != 0)
            return 4;
          else
            return 6;
        }
        else
        {
          v18.origin.x = a2;
          v18.origin.y = a3;
          v18.size.width = a4;
          v18.size.height = a5;
          Width = CGRectGetWidth(v18);
          v12 = 0x4084500000000000;
          if ((static ApproximatelyComparable<>.>=~ infix(_:_:)(&Width, &v12) & 1) != 0)
          {
            if ((v10 & 1) != 0)
              return 3;
            else
              return 5;
          }
          else
          {
            v19.origin.x = a2;
            v19.origin.y = a3;
            v19.size.width = a4;
            v19.size.height = a5;
            Width = CGRectGetWidth(v19);
            v12 = 0x407C200000000000;
            if ((static ApproximatelyComparable<>.>=~ infix(_:_:)(&Width, &v12) & 1) != 0)
            {
              if ((v10 & 1) != 0)
                return 2;
              else
                return 4;
            }
            else if ((v10 & 1) != 0)
            {
              return 2;
            }
            else
            {
              return 3;
            }
          }
        }
      }
    }
  }
}

uint64_t sub_9B81AC(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  uint64_t result;
  uint64_t v9;
  CGFloat Width;
  CGRect v11;

  Width = CGRectGetWidth(*(CGRect *)&a1);
  v9 = 0x408F400000000000;
  sub_E1C20();
  result = static ApproximatelyComparable<>.>=~ infix(_:_:)(&Width, &v9);
  if ((result & 1) == 0)
  {
    v11.origin.x = a1;
    v11.origin.y = a2;
    v11.size.width = a3;
    v11.size.height = a4;
    Width = CGRectGetWidth(v11);
    v9 = 0x4084500000000000;
    return static ApproximatelyComparable<>.>=~ infix(_:_:)(&Width, &v9);
  }
  return result;
}

uint64_t sub_9B829C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 48, 7);
}

void sub_9B82C0(void *a1)
{
  uint64_t v1;

  sub_9B6FE8(a1, *(void **)(v1 + 16), *(double **)(v1 + 24), *(void ***)(v1 + 40), *(CGFloat *)(v1 + 32));
}

uint64_t sub_9B82D0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_9B8300(_QWORD *a1, id a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  Class isa;
  id v28;
  _QWORD *v30;
  unint64_t v31;
  void *v32;

  v12 = objc_msgSend(a2, "innermostModelObject");
  v13 = sub_9BA0EC((uint64_t)a1, v12, a6);
  if (v13)
  {
    v32 = a3;
    v14 = a5;
    v15 = v12;
    v16 = v13;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v16);
    v18 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
    v17 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
    if (v18 >= v17 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v17 > 1, v18 + 1, 1);
    v19 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v16);
    specialized Array._endMutation()(v19);

    v12 = v15;
    a5 = v14;
    a3 = v32;
  }
  if (*a1 == 1)
  {
    v20 = sub_9BA9D0(a2, a3, a4, a5, a6);
    if (v20)
    {
      v21 = v20;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v21);
      v23 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
      v22 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
      if (v23 >= v22 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v22 > 1, v23 + 1, 1);
      v24 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v23, v21);
      specialized Array._endMutation()(v24);

    }
  }
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    if ((uint64_t)_swiftEmptyArrayStorage < 0)
      v30 = _swiftEmptyArrayStorage;
    else
      v30 = (_QWORD *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
    v31 = sub_9B9C98();
    swift_bridgeObjectRetain();
    v26 = (_QWORD *)_bridgeCocoaArray<A>(_:)(v30, v31);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  }
  else
  {
    v25 = swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v25);
    sub_9B9C98();
    v26 = _swiftEmptyArrayStorage;
  }
  sub_9B9C98();
  isa = Array._bridgeToObjectiveC()().super.isa;
  v28 = objc_msgSend((id)objc_opt_self(UISwipeActionsConfiguration), "configurationWithActions:", isa);

  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease(v26);

  return v28;
}

id sub_9B8558(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSString v33;
  void *v34;
  id v35;
  uint64_t v36;
  NSString v37;
  id v38;
  void *v39;
  id v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  void *v49;
  id v50;
  NSString v51;
  void *v52;
  id v53;
  uint64_t v54;
  NSString v55;
  id v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  Class isa;
  uint64_t v67;
  unint64_t v68;
  id v69;
  id v70;
  uint64_t v71;
  char *v72;
  id v73;
  char *v74;
  id v75;
  id v76;
  unint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void **aBlock;
  uint64_t v88;
  void (*v89)(uint64_t, void *, void *);
  void *v90;
  double (*v91)(uint64_t, uint64_t);
  uint64_t v92;
  _QWORD v93[10];

  v85 = a3;
  v84 = a1;
  v4 = type metadata accessor for SwipeActions(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v83 = (uint64_t)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PlaybackIntentDescriptor(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v10 = type metadata accessor for Locale(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_14AAC38 != -1)
    swift_once(&qword_14AAC38, sub_27AC88);
  v16 = objc_msgSend(a2, "innermostModelObject");
  v17 = sub_27BE18(v16);

  if ((v17 & 0xFFFFFFFFFFFFFFFELL) == 6)
    return 0;
  v19 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001BLL, 0x80000000010FAB30);
  static Locale.current.getter(v19);
  v75 = (id)String.init(localized:table:bundle:locale:comment:)(v15, 0, 0, 0, v12, 0, 0, 256);
  v21 = v20;
  sub_5BDB8(v84, (uint64_t)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for PlaybackIntentDescriptor);
  sub_6087C(v85, (uint64_t)v93);
  v22 = v83;
  sub_5BDB8(v86, v83, type metadata accessor for SwipeActions);
  v23 = *(unsigned __int8 *)(v8 + 80);
  v74 = v12;
  v24 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = v24;
  v25 = (v23 + 16) & ~v23;
  v80 = v25;
  v26 = *(unsigned __int8 *)(v5 + 80);
  v27 = (v9 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
  v81 = v27;
  v78 = v23 | v26 | 7;
  v28 = (v26 + v27 + 72) & ~v26;
  v82 = v28;
  v29 = (v6 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
  v77 = v29 + 8;
  v30 = v29;
  v79 = v29;
  v31 = swift_allocObject(&unk_13922B0, v29 + 8, v78);
  sub_5C04C((uint64_t)v24, v31 + v25, type metadata accessor for PlaybackIntentDescriptor);
  sub_648A4((uint64_t)v93, v31 + v27);
  v32 = v22;
  sub_5C04C(v22, v31 + v28, type metadata accessor for SwipeActions);
  *(_QWORD *)(v31 + v30) = a2;
  v76 = a2;
  v33 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v21);
  v91 = sub_9B8F58;
  v92 = v31;
  aBlock = _NSConcreteStackBlock;
  v88 = 1107296256;
  v89 = sub_9B9720;
  v90 = &block_descriptor_254;
  v34 = _Block_copy(&aBlock);
  v75 = (id)objc_opt_self(UISwipeAction);
  v35 = objc_msgSend(v75, "swipeActionWithStyle:title:handler:", 0, v33, v34);
  _Block_release(v34);
  v36 = v92;

  swift_release(v36);
  v37 = String._bridgeToObjectiveC()();
  v73 = (id)objc_opt_self(UIImage);
  v38 = objc_msgSend(v73, "systemImageNamed:", v37);

  objc_msgSend(v35, "setIcon:", v38);
  v39 = (void *)objc_opt_self(UIColor);
  v40 = objc_msgSend(v39, "systemIndigoColor");
  objc_msgSend(v35, "setColor:", v40);

  v41 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001BLL, 0x80000000010FAB80);
  v42 = v74;
  static Locale.current.getter(v41);
  String.init(localized:table:bundle:locale:comment:)(v15, 0, 0, 0, v42, 0, 0, 256);
  v44 = v43;
  v45 = (uint64_t)v72;
  sub_5BDB8(v84, (uint64_t)v72, type metadata accessor for PlaybackIntentDescriptor);
  sub_6087C(v85, (uint64_t)v93);
  sub_5BDB8(v86, v32, type metadata accessor for SwipeActions);
  v46 = swift_allocObject(&unk_1392300, v77, v78);
  v47 = v45;
  v48 = v35;
  sub_5C04C(v47, v46 + v80, type metadata accessor for PlaybackIntentDescriptor);
  sub_648A4((uint64_t)v93, v46 + v81);
  sub_5C04C(v32, v46 + v82, type metadata accessor for SwipeActions);
  v49 = v76;
  *(_QWORD *)(v46 + v79) = v76;
  v50 = v49;
  v51 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v44);
  v91 = sub_9B9BCC;
  v92 = v46;
  aBlock = _NSConcreteStackBlock;
  v88 = 1107296256;
  v89 = sub_9B9720;
  v90 = &block_descriptor_6_15;
  v52 = _Block_copy(&aBlock);
  v53 = objc_msgSend(v75, "swipeActionWithStyle:title:handler:", 0, v51, v52);
  _Block_release(v52);
  v54 = v92;

  swift_release(v54);
  v55 = String._bridgeToObjectiveC()();
  v56 = objc_msgSend(v73, "systemImageNamed:", v55);

  objc_msgSend(v53, "setIcon:", v56);
  v57 = objc_msgSend(v39, "systemOrangeColor");
  objc_msgSend(v53, "setColor:", v57);

  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_14ADF50);
  v59 = swift_allocObject(v58, 48, 7);
  *(_OWORD *)(v59 + 16) = xmmword_105F8A0;
  *(_QWORD *)(v59 + 32) = v48;
  *(_QWORD *)(v59 + 40) = v53;
  v93[0] = v59;
  specialized Array._endMutation()(v59);
  v60 = v93[0];
  if (v93[0] >> 62)
  {
    if (v93[0] < 0)
      v67 = v93[0];
    else
      v67 = v93[0] & 0xFFFFFFFFFFFFFF8;
    v68 = sub_9B9C98();
    v69 = v48;
    v70 = v53;
    swift_bridgeObjectRetain();
    v64 = _bridgeCocoaArray<A>(_:)(v67, v68);
    swift_bridgeObjectRelease(v60);
  }
  else
  {
    v61 = v48;
    v62 = v53;
    v63 = swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v63);
    sub_9B9C98();
    v64 = v60;
  }
  sub_9B9C98();
  isa = Array._bridgeToObjectiveC()().super.isa;
  v18 = objc_msgSend((id)objc_opt_self(UISwipeActionsConfiguration), "configurationWithActions:", isa);

  swift_bridgeObjectRelease(v60);
  swift_bridgeObjectRelease(v64);

  return v18;
}

uint64_t type metadata accessor for SwipeActions(uint64_t a1)
{
  return sub_6345C(a1, qword_14ED6A8, (uint64_t)&nominal type descriptor for SwipeActions);
}

id sub_9B8D4C(_QWORD *a1, void *a2, uint64_t a3)
{
  id v6;
  id v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  Class isa;
  id v19;
  _QWORD *v21;
  unint64_t v22;

  v6 = sub_9BA0EC((uint64_t)a1, a2, a3);
  if (v6)
  {
    v7 = v6;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v7);
    v9 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
    v8 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
    if (v9 >= v8 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v8 > 1, v9 + 1, 1);
    v10 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v7);
    specialized Array._endMutation()(v10);

  }
  if (*a1 == 1)
  {
    v11 = sub_9BA6C4(a2, a3);
    if (v11)
    {
      v12 = v11;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v12);
      v14 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
      v13 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
      if (v14 >= v13 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v13 > 1, v14 + 1, 1);
      v15 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v12);
      specialized Array._endMutation()(v15);

    }
  }
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    if ((uint64_t)_swiftEmptyArrayStorage < 0)
      v21 = _swiftEmptyArrayStorage;
    else
      v21 = (_QWORD *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
    v22 = sub_9B9C98();
    swift_bridgeObjectRetain();
    v17 = (_QWORD *)_bridgeCocoaArray<A>(_:)(v21, v22);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  }
  else
  {
    v16 = swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v16);
    sub_9B9C98();
    v17 = _swiftEmptyArrayStorage;
  }
  sub_9B9C98();
  isa = Array._bridgeToObjectiveC()().super.isa;
  v19 = objc_msgSend((id)objc_opt_self(UISwipeActionsConfiguration), "configurationWithActions:", isa);
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease(v17);

  return v19;
}

uint64_t type metadata accessor for SwipeActions.Analytics(uint64_t a1)
{
  return sub_6345C(a1, qword_14ED618, (uint64_t)&nominal type descriptor for SwipeActions.Analytics);
}

double sub_9B8F58(uint64_t a1, uint64_t a2)
{
  return sub_9B9BE0(a1, a2, (uint64_t)&unk_1392378, (uint64_t)&unk_14ED568);
}

uint64_t sub_9B8F6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;

  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  v8 = type metadata accessor for Notice.Variant(0);
  v7[6] = v8;
  v7[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Notice(0);
  v7[8] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MainActor(0);
  v7[9] = static MainActor.shared.getter(v11);
  v12 = dispatch thunk of Actor.unownedExecutor.getter(v10, &protocol witness table for MainActor);
  v7[10] = v12;
  v7[11] = v13;
  return swift_task_switch(sub_9B9020, v12, v13);
}

uint64_t sub_9B9020()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  if (qword_14AB558 != -1)
    swift_once(&qword_14AB558, sub_5BBDBC);
  v1 = PlaybackIntentDescriptor.intent.getter();
  *(_QWORD *)(v0 + 96) = v1;
  v2 = (_QWORD *)swift_task_alloc(dword_15007DC);
  *(_QWORD *)(v0 + 104) = v2;
  *v2 = v0;
  v2[1] = sub_9B90B8;
  return PlaybackController.insert(_:location:)(v1, 0);
}

uint64_t sub_9B90B8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 104);
  *(_QWORD *)(*v1 + 112) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 80);
    v5 = *(_QWORD *)(v2 + 88);
    v6 = sub_9BF784;
  }
  else
  {

    v4 = *(_QWORD *)(v2 + 80);
    v5 = *(_QWORD *)(v2 + 88);
    v6 = sub_9B9124;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_9B9124()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  sub_5BD064();
  if (v1)
  {
    v2 = v1;
    v4 = *(_QWORD *)(v0 + 56);
    v3 = *(_QWORD *)(v0 + 64);
    swift_storeEnumTagMultiPayload(v4, *(_QWORD *)(v0 + 48), 3);
    static Notice.variant(_:)(v4);
    sub_5C0DC(v4, type metadata accessor for Notice.Variant);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 192))(v3, 0);
    sub_5C0DC(v3, type metadata accessor for Notice);
    swift_release(v2);
  }
  v5 = *(_QWORD *)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 40);
  v7 = sub_196558((uint64_t)&off_133F3B8);
  sub_9B9210(v6, 24, v7, 0, 0, 768);
  swift_bridgeObjectRelease();
  swift_release(v5);
  v8 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 64));
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_9B9210(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  char isUniquelyReferenced_nonNull_native;
  __int128 v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  int v58;
  void *v59;
  char *v60;
  uint64_t v61;
  _BYTE v62[24];
  _QWORD v63[3];

  v7 = v6;
  v61 = a5;
  v59 = (void *)a3;
  v58 = a2;
  v10 = type metadata accessor for MetricsEvent.Click(0);
  __chkstk_darwin(v10);
  v60 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AED20);
  __chkstk_darwin(v12);
  v14 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_14B1FF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for MetricsPageProperties(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (uint64_t *)((char *)&v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v22);
  v24 = (uint64_t *)((char *)&v55 - v23);
  v57 = MPModelObject.bestIdentifier(for:)(0, 2u);
  v26 = v25;
  v27 = type metadata accessor for SwipeActions.Analytics(0);
  sub_1BC2B0(v7 + *(int *)(v27 + 20), (uint64_t)v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    v28 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v14, 1, 1, v28);
    MetricsPageProperties.init(pageIdentifier:pageType:pageURL:pageDetails:extRefUrl:)(0x497972617262694CLL, 0xEB000000006D6574, 0, 0xE000000000000000, (uint64_t)v14, 0, 0, 0, v24);
    sub_80964C((uint64_t)v17);
  }
  else
  {
    sub_5C04C((uint64_t)v17, (uint64_t)v24, type metadata accessor for MetricsPageProperties);
  }
  v29 = (uint64_t)v24;
  v30 = *(unsigned __int16 *)(v7 + 24);
  v32 = (uint64_t)v60;
  v31 = v61;
  v33 = v59;
  if (v30 >> 8 <= 0xFE
    && (MetricsEvent.Click.ActionDetails.dictionary.getter(*(_QWORD *)v7, *(_QWORD *)(v7 + 8), *(_QWORD *)(v7 + 16), v30), v34))
  {
    v35 = v34;
    if (BYTE1(a6) == 255)
    {
      a4 = 0;
      v31 = 0;
      a6 = 768;
      v33 = v34;
    }
    else
    {
      v56 = v21;
      MetricsEvent.Click.ActionDetails.dictionary.getter((uint64_t)v33, a4, v31, a6);
      if (v51)
      {
        v52 = v51;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v35);
        v63[0] = v35;
        sub_9BC46C(v52, (uint64_t)sub_9BC774, 0, isUniquelyReferenced_nonNull_native, v63);
        v33 = (void *)v63[0];
        swift_bridgeObjectRelease();
        a4 = 0;
        v31 = 0;
        a6 = 768;
      }
      else
      {
        a4 = 0;
        v31 = 0;
        a6 = 768;
        v33 = v35;
      }
      v21 = v56;
    }
  }
  else
  {
    sub_805810(v33, a4, v31, a6);
  }
  v36 = v57;
  v61 = v31;
  LODWORD(v57) = a6;
  if (v26)
    v37 = v36;
  else
    v37 = 0x497972617262694CLL;
  if (!v26)
    v26 = 0xEB000000006D6574;
  v38 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v14, 1, 1, v38);
  sub_5BDB8(v29, (uint64_t)v21, type metadata accessor for MetricsPageProperties);
  sub_805810(v33, a4, v31, a6);
  *((_QWORD *)&v54 + 1) = a4;
  *(_QWORD *)&v54 = v33;
  MetricsEvent.Click.init(targetIdentifier:targetType:actionType:actionURL:locations:actionContext:actionDetails:metricsPageProperties:snapshotImpressions:)(v37, v26, 5, v58, (uint64_t)v14, 0, 0, 7, v32, v54, v31, a6, v21, 0);
  v39 = (id)*MetricsReportingController.shared.unsafeMutableAddressor();
  sub_53F8B4();
  v41 = v40;
  v43 = v42;
  v59 = (void *)v29;
  v44 = v33;
  if (qword_14AB568 != -1)
    swift_once(&qword_14AB568, sub_5BC10C);
  swift_beginAccess(&static UIApplication.groupActivitiesManager, v63, 0, 0);
  v45 = static UIApplication.groupActivitiesManager;
  swift_retain(static UIApplication.groupActivitiesManager);
  v46 = GroupActivitiesManager.hasJoined.getter();
  v47 = GroupActivitiesManager.participantsCount.getter();
  v48 = (uint64_t *)(v45 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount);
  swift_beginAccess(v45 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount, v62, 0, 0);
  v49 = *v48;
  v50 = swift_release(v45);
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, __n128))&stru_B8.sectname[swift_isaMask & *v39])(v32, v41, v43, v46 & 1, v47, v49, v50);
  swift_bridgeObjectRelease();
  sub_79B674(v44, a4, v61, v57);
  sub_5C0DC(v32, type metadata accessor for MetricsEvent.Click);
  sub_5C0DC((uint64_t)v59, type metadata accessor for MetricsPageProperties);

}

void sub_9B9720(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5;
  void (*v6)(id, id);
  id v7;
  id v8;

  v6 = *(void (**)(id, id))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  v7 = a2;
  v8 = a3;
  v6(v7, v8);
  swift_release(v5);

}

uint64_t block_copy_helper_250(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_250(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

double sub_9B97AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  id v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double result;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE v39[72];

  v37 = a7;
  v38 = a8;
  v35 = a5;
  v36 = a6;
  v10 = type metadata accessor for SwipeActions(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for PlaybackIntentDescriptor(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  __chkstk_darwin(v14);
  v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD5A0);
  __chkstk_darwin(v18);
  v20 = (char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 1, v21);
  sub_5BDB8(a3, (uint64_t)v17, type metadata accessor for PlaybackIntentDescriptor);
  sub_6087C(a4, (uint64_t)v39);
  sub_5BDB8(v35, (uint64_t)v13, type metadata accessor for SwipeActions);
  type metadata accessor for MainActor(0);
  v22 = v36;
  v24 = static MainActor.shared.getter(v23);
  v25 = *(unsigned __int8 *)(v15 + 80);
  v26 = (v25 + 32) & ~v25;
  v27 = (v16 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  v28 = *(unsigned __int8 *)(v11 + 80);
  v29 = (v28 + v27 + 72) & ~v28;
  v30 = (v12 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  v31 = swift_allocObject(v37, v30 + 8, v25 | v28 | 7);
  *(_QWORD *)(v31 + 16) = v24;
  *(_QWORD *)(v31 + 24) = &protocol witness table for MainActor;
  sub_5C04C((uint64_t)v17, v31 + v26, type metadata accessor for PlaybackIntentDescriptor);
  sub_648A4((uint64_t)v39, v31 + v27);
  sub_5C04C((uint64_t)v13, v31 + v29, type metadata accessor for SwipeActions);
  *(_QWORD *)(v31 + v30) = v22;
  v32 = sub_2223C8((uint64_t)v20, v38, v31);
  *(_QWORD *)&result = swift_release(v32).n128_u64[0];
  return result;
}

uint64_t objectdestroyTm_17()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;

  v1 = type metadata accessor for PlaybackIntentDescriptor(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)(type metadata accessor for SwipeActions(0) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = (id *)(v0 + v4);
  v10 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v9, v11);
  }
  else
  {

  }
  v12 = (id *)((char *)v9 + *(int *)(v1 + 28));
  if (v12[3])
    __swift_destroy_boxed_opaque_existential_1(v12);
  v13 = v0 + v5;
  swift_unknownObjectWeakDestroy(v0 + v5);
  v14 = *(unsigned __int8 *)(v0 + v5 + 48);
  if (v14 != 255)
    sub_626A8(*(id *)(v13 + 8), *(_QWORD *)(v13 + 16), *(_QWORD *)(v13 + 24), *(_QWORD *)(v13 + 32), *(_QWORD *)(v13 + 40), v14);
  v15 = (v5 + v7 + 72) & ~v7;
  if (*(_QWORD *)(v13 + 56))
    swift_release(*(_QWORD *)(v13 + 64));
  v16 = v0 + v15;
  v17 = *(unsigned __int16 *)(v0 + v15 + 24);
  if (v17 >> 8 <= 0xFE)
    sub_79B688(*(void **)v16, *(_QWORD *)(v16 + 8), *(_QWORD *)(v16 + 16), v17, SBYTE1(v17));
  v18 = v16 + *(int *)(type metadata accessor for SwipeActions.Analytics(0) + 20);
  v19 = type metadata accessor for MetricsPageProperties(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v18, 1, v19))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v20 = v18 + *(int *)(v19 + 24);
    v21 = type metadata accessor for URL(0);
    v22 = *(_QWORD *)(v21 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v23 = (v8 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  v24 = v23 + 8;

  return swift_deallocObject(v0, v24, v3 | v7 | 7);
}

double sub_9B9BCC(uint64_t a1, uint64_t a2)
{
  return sub_9B9BE0(a1, a2, (uint64_t)&unk_1392350, (uint64_t)&unk_14ED558);
}

double sub_9B9BE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v9 = *(_QWORD *)(type metadata accessor for PlaybackIntentDescriptor(0) - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = (*(_QWORD *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  v12 = *(_QWORD *)(type metadata accessor for SwipeActions(0) - 8);
  v13 = (v11 + *(unsigned __int8 *)(v12 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  return sub_9B97AC(a1, a2, v4 + v10, v4 + v11, v4 + v13, *(void **)(v4 + ((*(_QWORD *)(v12 + 64) + v13 + 7) & 0xFFFFFFFFFFFFF8)), a3, a4);
}

unint64_t sub_9B9C98()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14B51C0;
  if (!qword_14B51C0)
  {
    v1 = objc_opt_self(UIContextualAction);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_14B51C0);
  }
  return result;
}

uint64_t sub_9B9CD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;

  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  v8 = type metadata accessor for Notice.Variant(0);
  v7[6] = v8;
  v7[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Notice(0);
  v7[8] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MainActor(0);
  v7[9] = static MainActor.shared.getter(v11);
  v12 = dispatch thunk of Actor.unownedExecutor.getter(v10, &protocol witness table for MainActor);
  v7[10] = v12;
  v7[11] = v13;
  return swift_task_switch(sub_9B9D88, v12, v13);
}

uint64_t sub_9B9D88()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  if (qword_14AB558 != -1)
    swift_once(&qword_14AB558, sub_5BBDBC);
  v1 = PlaybackIntentDescriptor.intent.getter();
  *(_QWORD *)(v0 + 96) = v1;
  v2 = (_QWORD *)swift_task_alloc(dword_15007DC);
  *(_QWORD *)(v0 + 104) = v2;
  *v2 = v0;
  v2[1] = sub_9B9E20;
  return PlaybackController.insert(_:location:)(v1, 1);
}

uint64_t sub_9B9E20()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 104);
  *(_QWORD *)(*v1 + 112) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 80);
    v5 = *(_QWORD *)(v2 + 88);
    v6 = sub_9B9F78;
  }
  else
  {

    v4 = *(_QWORD *)(v2 + 80);
    v5 = *(_QWORD *)(v2 + 88);
    v6 = sub_9B9E8C;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_9B9E8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  sub_5BD064();
  if (v1)
  {
    v2 = v1;
    v4 = *(_QWORD *)(v0 + 56);
    v3 = *(_QWORD *)(v0 + 64);
    swift_storeEnumTagMultiPayload(v4, *(_QWORD *)(v0 + 48), 4);
    static Notice.variant(_:)(v4);
    sub_5C0DC(v4, type metadata accessor for Notice.Variant);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 192))(v3, 0);
    sub_5C0DC(v3, type metadata accessor for Notice);
    swift_release(v2);
  }
  v5 = *(_QWORD *)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 40);
  v7 = sub_196558((uint64_t)&off_133F3F8);
  sub_9B9210(v6, 24, v7, 0, 0, 768);
  swift_bridgeObjectRelease();
  swift_release(v5);
  v8 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 64));
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_9B9F78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 72);

  v3 = sub_3A1858();
  PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v3, 1, (char *)&dword_C + 3, (void **)((char *)&dword_0 + 1), 0, 0);

  swift_errorRelease(v1);
  swift_release(v2);
  v4 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 64));
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_9BA004(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v4 = *(_QWORD *)(type metadata accessor for PlaybackIntentDescriptor(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(_QWORD *)(type metadata accessor for SwipeActions(0) - 8);
  v8 = (v6 + *(unsigned __int8 *)(v7 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v1 + 16);
  v10 = *(_QWORD *)(v1 + 24);
  v11 = v1 + v5;
  v12 = v1 + v6;
  v13 = v1 + v8;
  v14 = *(_QWORD *)(v1 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFF8));
  v15 = (_QWORD *)swift_task_alloc(dword_14ED554);
  *(_QWORD *)(v2 + 16) = v15;
  *v15 = v2;
  v15[1] = sub_50F8C;
  return sub_9B9CD4(a1, v9, v10, v11, v12, v13, v14);
}

id sub_9BA0EC(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  id v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  id v26;
  NSString v27;
  void *v28;
  uint64_t v29;
  id v30;
  NSString v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  NSString v41;
  void *v42;
  uint64_t v43;
  id v44;
  NSString v45;
  _BYTE v47[16];
  void **aBlock;
  uint64_t v49;
  void (*v50)(uint64_t, void *, void *);
  void *v51;
  double (*v52)(uint64_t, uint64_t);
  uint64_t v53;
  _BYTE v54[80];

  v7 = type metadata accessor for SwipeActions(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v10 = &v47[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for Locale(0);
  __chkstk_darwin(v11);
  v13 = &v47[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v14);
  v16 = &v47[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = 0;
  v18 = *(unsigned __int8 *)(a1 + 32);
  if ((v18 & 0xFE) != 0x7A)
  {
    if ((~v18 & 0x7E) == 0)
    {
      v19 = String.LocalizationValue.init(stringLiteral:)(0x4C206F7420646441, 0xEE00797261726269);
      static Locale.current.getter(v19);
      String.init(localized:table:bundle:locale:comment:)(v16, 0, 0, 0, v13, 0, 0, 256);
      v21 = v20;
      sub_6087C(a3, (uint64_t)v54);
      sub_5BDB8(v3, (uint64_t)&v47[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)], type metadata accessor for SwipeActions);
      v22 = *(unsigned __int8 *)(v8 + 80);
      v23 = (v22 + 144) & ~v22;
      v24 = swift_allocObject(&unk_1392440, v23 + v9, v22 | 7);
      *(_QWORD *)(v24 + 16) = a2;
      v25 = *(_OWORD *)(a1 + 16);
      *(_OWORD *)(v24 + 24) = *(_OWORD *)a1;
      *(_OWORD *)(v24 + 40) = v25;
      *(_OWORD *)(v24 + 56) = *(_OWORD *)(a1 + 32);
      sub_648A4((uint64_t)v54, v24 + 72);
      sub_5C04C((uint64_t)v10, v24 + v23, type metadata accessor for SwipeActions);
      v26 = a2;
      v27 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v21);
      v52 = sub_9BCDC8;
      v53 = v24;
      aBlock = _NSConcreteStackBlock;
      v49 = 1107296256;
      v50 = sub_9B9720;
      v51 = &block_descriptor_34_4;
      v28 = _Block_copy(&aBlock);
      v17 = objc_msgSend((id)objc_opt_self(UISwipeAction), "swipeActionWithStyle:title:handler:", 0, v27, v28);
      _Block_release(v28);
      v29 = v53;

      swift_release(v29);
      if (qword_14ABD90 != -1)
        swift_once(&qword_14ABD90, sub_9BC3C8);
      objc_msgSend(v17, "setColor:", qword_14ED548);
      if (qword_14ABD88 != -1)
        swift_once(&qword_14ABD88, sub_9BC38C);
      v30 = (id)qword_14ED540;
      v31 = String._bridgeToObjectiveC()();
      v32 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v31, v30);

      if (!v32)
      {
        v33 = 0;
        goto LABEL_16;
      }
      v33 = objc_msgSend(v32, "imageWithTintColor:renderingMode:", *UIColor.MusicTint.normal.unsafeMutableAddressor(), 1);
LABEL_13:

LABEL_16:
      objc_msgSend(v17, "setIcon:", v33);

      return v17;
    }
    if (v18 >> 1 == 126)
    {
      v34 = String.LocalizationValue.init(stringLiteral:)(0x64616F6C6E776F44, 0xE800000000000000);
      static Locale.current.getter(v34);
      String.init(localized:table:bundle:locale:comment:)(v16, 0, 0, 0, v13, 0, 0, 256);
      v36 = v35;
      sub_6087C(a3, (uint64_t)v54);
      sub_5BDB8(v3, (uint64_t)&v47[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)], type metadata accessor for SwipeActions);
      v37 = *(unsigned __int8 *)(v8 + 80);
      v38 = (v37 + 96) & ~v37;
      v39 = swift_allocObject(&unk_13923F0, v38 + v9, v37 | 7);
      *(_QWORD *)(v39 + 16) = a2;
      sub_648A4((uint64_t)v54, v39 + 24);
      sub_5C04C((uint64_t)v10, v39 + v38, type metadata accessor for SwipeActions);
      v40 = a2;
      v41 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v36);
      v52 = sub_9BCC14;
      v53 = v39;
      aBlock = _NSConcreteStackBlock;
      v49 = 1107296256;
      v50 = sub_9B9720;
      v51 = &block_descriptor_28_5;
      v42 = _Block_copy(&aBlock);
      v17 = objc_msgSend((id)objc_opt_self(UISwipeAction), "swipeActionWithStyle:title:handler:", 0, v41, v42);
      _Block_release(v42);
      v43 = v53;

      swift_release(v43);
      v44 = objc_msgSend((id)objc_opt_self(UIColor), "systemBlueColor");
      objc_msgSend(v17, "setColor:", v44);

      if (qword_14ABD88 != -1)
        swift_once(&qword_14ABD88, sub_9BC38C);
      v32 = (id)qword_14ED540;
      v45 = String._bridgeToObjectiveC()();
      v33 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v45, v32);

      goto LABEL_13;
    }
    return 0;
  }
  return v17;
}

id sub_9BA6C4(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  unsigned int v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  NSString v18;
  void *v19;
  uint64_t v20;
  id v21;
  id v22;
  NSString v23;
  id v24;
  _QWORD aBlock[5];
  uint64_t v27;
  _BYTE v28[80];

  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend((id)objc_opt_self(MPRestrictionsMonitor), "sharedRestrictionsMonitor");
  v11 = objc_msgSend(v10, "allowsDeletion");

  v12 = 0;
  if (v11)
  {
    if (((unint64_t)objc_msgSend(a1, "libraryRemovalSupportedOptions") & 3) != 0)
    {
      v13 = String.LocalizationValue.init(stringLiteral:)(0x65766F6D6552, 0xE600000000000000);
      static Locale.current.getter(v13);
      String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, 0, v6, 0, 0, 256);
      v15 = v14;
      sub_6087C(a2, (uint64_t)v28);
      v16 = swift_allocObject(&unk_13923A0, 96, 7);
      *(_QWORD *)(v16 + 16) = a1;
      sub_648A4((uint64_t)v28, v16 + 24);
      v17 = a1;
      v18 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v15);
      aBlock[4] = sub_9BCAA8;
      v27 = v16;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_9B9720;
      aBlock[3] = &block_descriptor_22_9;
      v19 = _Block_copy(aBlock);
      v12 = objc_msgSend((id)objc_opt_self(UISwipeAction), "swipeActionWithStyle:title:handler:", 0, v18, v19);
      _Block_release(v19);
      v20 = v27;

      swift_release(v20);
      v21 = objc_msgSend((id)objc_opt_self(UIColor), "systemRedColor");
      objc_msgSend(v12, "setColor:", v21);

      if (qword_14ABD88 != -1)
        swift_once(&qword_14ABD88, sub_9BC38C);
      v22 = (id)qword_14ED540;
      v23 = String._bridgeToObjectiveC()();
      v24 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v23, v22);

      objc_msgSend(v12, "setIcon:", v24);
    }
    else
    {
      return 0;
    }
  }
  return v12;
}

id sub_9BA9D0(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  unsigned int v19;
  id v20;
  id v21;
  id v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  id v31;
  id v32;
  NSString v33;
  void *v34;
  _QWORD *v35;
  id v36;
  id v37;
  NSString v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD aBlock[5];
  _QWORD *v44;
  _BYTE v45[88];

  v41 = a4;
  v40 = a3;
  v8 = type metadata accessor for SwipeActions(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Locale(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = objc_msgSend((id)objc_opt_self(MPRestrictionsMonitor), "sharedRestrictionsMonitor");
  v19 = objc_msgSend(v18, "allowsDeletion");

  v20 = 0;
  if (v19)
  {
    if (objc_msgSend(a2, "type") != (char *)&dword_8 + 1
      && (objc_msgSend(a2, "userEditableComponents") & 1) == 0)
    {
      v21 = objc_msgSend(a1, "innermostModelObject");
      v22 = sub_9BA6C4(v21, a5);

      return v22;
    }
    v24 = String.LocalizationValue.init(stringLiteral:)(0x65766F6D6552, 0xE600000000000000);
    static Locale.current.getter(v24);
    String.init(localized:table:bundle:locale:comment:)(v17, 0, 0, 0, v14, 0, 0, 256);
    v26 = v25;
    sub_6087C(a5, (uint64_t)v45);
    sub_5BDB8(v42, (uint64_t)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SwipeActions);
    v27 = *(unsigned __int8 *)(v9 + 80);
    v28 = (v27 + 120) & ~v27;
    v29 = (_QWORD *)swift_allocObject(&unk_1392530, v28 + v10, v27 | 7);
    v29[2] = a1;
    v29[3] = a2;
    sub_648A4((uint64_t)v45, (uint64_t)(v29 + 4));
    v30 = v41;
    v29[13] = v40;
    v29[14] = v30;
    sub_5C04C((uint64_t)v11, (uint64_t)v29 + v28, type metadata accessor for SwipeActions);
    v31 = a1;
    v32 = a2;
    swift_retain(v30);
    v33 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v26);
    aBlock[4] = sub_9BD490;
    v44 = v29;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_9B9720;
    aBlock[3] = &block_descriptor_56_7;
    v34 = _Block_copy(aBlock);
    v20 = objc_msgSend((id)objc_opt_self(UISwipeAction), "swipeActionWithStyle:title:handler:", 0, v33, v34);
    _Block_release(v34);
    v35 = v44;

    swift_release(v35);
    v36 = objc_msgSend((id)objc_opt_self(UIColor), "systemRedColor");
    objc_msgSend(v20, "setColor:", v36);

    if (qword_14ABD88 != -1)
      swift_once(&qword_14ABD88, sub_9BC38C);
    v37 = (id)qword_14ED540;
    v38 = String._bridgeToObjectiveC()();
    v39 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v38, v37);

    objc_msgSend(v20, "setIcon:", v39);
  }
  return v20;
}

double sub_9BADB8(uint64_t a1, uint64_t a2, void *a3, _OWORD *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  id v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  double result;
  _BYTE v28[72];

  v10 = type metadata accessor for SwipeActions(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  v13 = &v28[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD5A0);
  __chkstk_darwin(v14);
  v16 = &v28[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v17 = type metadata accessor for TaskPriority(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  sub_6087C(a5, (uint64_t)v28);
  sub_5BDB8(a6, (uint64_t)v13, type metadata accessor for SwipeActions);
  type metadata accessor for MainActor(0);
  v18 = a3;
  v20 = static MainActor.shared.getter(v19);
  v21 = *(unsigned __int8 *)(v11 + 80);
  v22 = (v21 + 160) & ~v21;
  v23 = swift_allocObject(&unk_13924B8, v22 + v12, v21 | 7);
  *(_QWORD *)(v23 + 16) = v20;
  *(_QWORD *)(v23 + 24) = &protocol witness table for MainActor;
  *(_QWORD *)(v23 + 32) = v18;
  v24 = a4[1];
  *(_OWORD *)(v23 + 40) = *a4;
  *(_OWORD *)(v23 + 56) = v24;
  *(_OWORD *)(v23 + 72) = a4[2];
  sub_648A4((uint64_t)v28, v23 + 88);
  sub_5C04C((uint64_t)v13, v23 + v22, type metadata accessor for SwipeActions);
  v25 = sub_2223C8((uint64_t)v16, (uint64_t)&unk_14ED578, v23);
  *(_QWORD *)&result = swift_release(v25).n128_u64[0];
  return result;
}

uint64_t sub_9BAF58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;

  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  v8 = *(_QWORD *)(type metadata accessor for SwipeActions(0) - 8);
  v7[6] = v8;
  v9 = *(_QWORD *)(v8 + 64);
  v7[7] = v9;
  v7[8] = swift_task_alloc((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD5A0);
  v7[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MainActor(0);
  v7[10] = v11;
  v7[11] = static MainActor.shared.getter(v12);
  v13 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor);
  v7[12] = v13;
  v7[13] = v14;
  return swift_task_switch(sub_9BB018, v13, v14);
}

uint64_t sub_9BB018()
{
  uint64_t v0;
  uint64_t *v1;
  id v2;
  id v3;
  NSString v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  _QWORD *v8;

  v1 = *(uint64_t **)(v0 + 24);
  v2 = objc_msgSend(*(id *)(v0 + 16), "innermostModelObject");
  v3 = objc_msgSend(objc_allocWithZone((Class)MPMutableSectionedCollection), "init");
  *(_QWORD *)(v0 + 112) = v3;
  v4 = String._bridgeToObjectiveC()();
  objc_msgSend(v3, "appendSection:", v4);

  objc_msgSend(v3, "appendItem:", v2);
  type metadata accessor for LibraryAddKeepLocalHandlingController();
  v5 = *v1;
  v6 = dword_14D963C;
  v7 = v3;
  v8 = (_QWORD *)swift_task_alloc(v6);
  *(_QWORD *)(v0 + 120) = v8;
  *v8 = v0;
  v8[1] = sub_9BB110;
  return sub_6A05B8((uint64_t)v3, v5, 0, 0, *(_QWORD *)(v0 + 32));
}

uint64_t sub_9BB110(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = *v1;
  v4 = *(void **)(*v1 + 112);
  v3 = *(_QWORD *)(*v1 + 120);
  *(_BYTE *)(*v1 + 128) = a1;
  swift_task_dealloc(v3);

  return swift_task_switch(sub_9BB16C, *(_QWORD *)(v2 + 96), *(_QWORD *)(v2 + 104));
}

uint64_t sub_9BB16C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  id v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  void *v23;

  v1 = *(_QWORD *)(v0 + 88);
  if (*(_BYTE *)(v0 + 128) == 1)
  {
    v3 = *(_QWORD *)(v0 + 64);
    v2 = *(_QWORD *)(v0 + 72);
    v22 = v2;
    v23 = *(void **)(v0 + 112);
    v5 = *(_QWORD *)(v0 + 48);
    v4 = *(_QWORD *)(v0 + 56);
    v6 = *(_QWORD *)(v0 + 40);
    v7 = *(void **)(v0 + 16);
    v8 = sub_196558((uint64_t)&off_133F438);
    v9 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v2, 1, 1, v9);
    sub_5BDB8(v6, v3, type metadata accessor for SwipeActions);
    v10 = v7;
    swift_bridgeObjectRetain();
    v12 = static MainActor.shared.getter(v11);
    v13 = *(unsigned __int8 *)(v5 + 80);
    v14 = (v13 + 32) & ~v13;
    v15 = (v4 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
    v16 = (v15 + 15) & 0xFFFFFFFFFFFFFFF8;
    v17 = swift_allocObject(&unk_13924E0, v16 + 26, v13 | 7);
    *(_QWORD *)(v17 + 16) = v12;
    *(_QWORD *)(v17 + 24) = &protocol witness table for MainActor;
    sub_5C04C(v3, v17 + v14, type metadata accessor for SwipeActions);
    *(_QWORD *)(v17 + v15) = v10;
    v18 = v17 + v16;
    *(_WORD *)(v18 + 24) = 768;
    *(_QWORD *)v18 = v8;
    *(_QWORD *)(v18 + 8) = 0;
    *(_QWORD *)(v18 + 16) = 0;
    v19 = sub_2223C8(v22, (uint64_t)&unk_14ED588, v17);
    swift_bridgeObjectRelease();

    swift_release(v19);
  }
  else
  {

  }
  swift_release(v1);
  v20 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 72));
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_9BB304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  __int16 v14;

  *(_WORD *)(v8 + 64) = v14;
  *(_QWORD *)(v8 + 40) = a7;
  *(_QWORD *)(v8 + 48) = a8;
  *(_QWORD *)(v8 + 24) = a5;
  *(_QWORD *)(v8 + 32) = a6;
  *(_QWORD *)(v8 + 16) = a4;
  v9 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v8 + 56) = static MainActor.shared.getter(v10);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  return swift_task_switch(sub_9BB384, v11, v12);
}

uint64_t sub_9BB384()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;

  v1 = *(_QWORD *)(v0 + 56);
  sub_9B9210(*(_QWORD *)(v0 + 24), 3, *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(unsigned __int16 *)(v0 + 64));
  v2 = swift_release(v1);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
}

double sub_9BB3CC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double result;
  uint64_t v25;

  v8 = type metadata accessor for SwipeActions(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD5A0);
  __chkstk_darwin(v12);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_6A3FC0(a3, 0, a4);
  v15 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  sub_5BDB8(a5, (uint64_t)v11, type metadata accessor for SwipeActions);
  type metadata accessor for MainActor(0);
  v16 = a3;
  v18 = static MainActor.shared.getter(v17);
  v19 = *(unsigned __int8 *)(v9 + 80);
  v20 = (v19 + 32) & ~v19;
  v21 = (v10 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v22 = swift_allocObject(&unk_1392508, v21 + 8, v19 | 7);
  *(_QWORD *)(v22 + 16) = v18;
  *(_QWORD *)(v22 + 24) = &protocol witness table for MainActor;
  sub_5C04C((uint64_t)v11, v22 + v20, type metadata accessor for SwipeActions);
  *(_QWORD *)(v22 + v21) = v16;
  v23 = sub_2223C8((uint64_t)v14, (uint64_t)&unk_14ED598, v22);
  *(_QWORD *)&result = swift_release(v23).n128_u64[0];
  return result;
}

uint64_t sub_9BB54C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v5[2] = a4;
  v5[3] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[4] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_9BB5B8, v8, v9);
}

uint64_t sub_9BB5B8()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;

  v1 = *(_QWORD *)(v0 + 32);
  sub_9B9210(*(_QWORD *)(v0 + 24), 12, 0, 0, 0, 65280);
  v2 = swift_release(v1);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
}

void sub_9BB608(int a1, int a2, id a3, uint64_t a4)
{
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  id v13;

  v13 = objc_msgSend(a3, "innermostModelObject");
  ObjectType = swift_getObjectType();
  v7 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for LibraryAddable);
  if (v7)
    v8 = v7;
  else
    v8 = 0;
  if (v7)
    v9 = v13;
  else
    v9 = 0;
  if (v9)
  {
    v10 = swift_getObjectType();
    v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v10, v8);

    if ((v11 & 1) != 0)
    {
      sub_27F118();
      if (v12 == 2)
        sub_6A4470(a3, 0, a4);
      else
        sub_6A4F7C(a3, a4, 0, 0);
    }
  }
  else
  {

  }
}

void sub_9BB708(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  char *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  NSString v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  id v44;
  NSString v45;
  void *v46;
  id v47;
  uint64_t v48;
  void *v49;
  id v50;
  unint64_t v51;
  const char *v52;
  unint64_t v53;
  const char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  NSString v64;
  void *v65;
  void *v66;
  id v67;
  uint64_t v68;
  NSString v69;
  id v70;
  NSString v71;
  id v72;
  void *v73;
  char *v74;
  uint64_t v75;
  id v76;
  id v77;
  void **aBlock;
  uint64_t v79;
  void (*v80)(uint64_t, void *);
  void *v81;
  void *v82;
  uint64_t v83;
  _QWORD v84[5];
  uint64_t v85;

  v76 = (id)a8;
  v77 = a6;
  v12 = type metadata accessor for SwipeActions(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  __chkstk_darwin(v12);
  v15 = (char *)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Locale(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for String.LocalizationValue(0);
  v20 = __chkstk_darwin(v19);
  v22 = (char *)&v74 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = objc_msgSend(a3, "innermostModelObject", v20);
  if (objc_msgSend(a4, "type") == (char *)&dword_8 + 1)
  {
    v24 = String.LocalizationValue.init(stringLiteral:)(0x766146206F646E55, 0xED0000657469726FLL);
    static Locale.current.getter(v24);
    String.init(localized:table:bundle:locale:comment:)(v22, 0, 0, 0, v18, 0, 0, 256);
    v26 = v25;
    v27 = a5;
    sub_6087C(a5, (uint64_t)v84);
    v28 = swift_allocObject(&unk_1392620, 96, 7);
    *(_QWORD *)(v28 + 16) = v23;
    sub_648A4((uint64_t)v84, v28 + 24);
    v29 = v23;
    v30 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v26);
    v82 = sub_9BD6F0;
    v83 = v28;
    aBlock = _NSConcreteStackBlock;
    v79 = 1107296256;
    v80 = sub_5FEBC;
    v81 = &block_descriptor_74_3;
    v31 = _Block_copy(&aBlock);
    swift_release(v83);
    v77 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v30, 2, v31);
    _Block_release(v31);

    v32 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000054, 0x80000000010F9AC0);
    static Locale.current.getter(v32);
    String.init(localized:table:bundle:locale:comment:)(v22, 0, 0, 0, v18, 0, 0, 256);
    v34 = v33;
    v35 = v23;
    v36 = v18;
  }
  else
  {
    v75 = a5;
    v37 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000019, 0x80000000010F9770);
    static Locale.current.getter(v37);
    v74 = v18;
    String.init(localized:table:bundle:locale:comment:)(v22, 0, 0, 0, v18, 0, 0, 256);
    v39 = v38;
    sub_5BDB8((uint64_t)v76, (uint64_t)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SwipeActions);
    v40 = *(unsigned __int8 *)(v13 + 80);
    v41 = (v40 + 32) & ~v40;
    v42 = (v14 + v41 + 7) & 0xFFFFFFFFFFFFFFF8;
    v43 = swift_allocObject(&unk_1392580, v42 + 8, v40 | 7);
    *(_QWORD *)(v43 + 16) = v77;
    *(_QWORD *)(v43 + 24) = a7;
    sub_5C04C((uint64_t)v15, v43 + v41, type metadata accessor for SwipeActions);
    *(_QWORD *)(v43 + v42) = v23;
    v76 = v23;
    v44 = v23;
    swift_retain(a7);
    v45 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v39);
    v84[4] = sub_9BD630;
    v85 = v43;
    v84[0] = _NSConcreteStackBlock;
    v84[1] = 1107296256;
    v84[2] = sub_5FEBC;
    v84[3] = &block_descriptor_62_1;
    v46 = _Block_copy(v84);
    swift_release(v85);
    v47 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v45, 2, v46);
    _Block_release(v46);

    objc_opt_self(MPModelSong);
    v48 = swift_dynamicCastObjCClass(v44);
    v77 = v47;
    if (v48)
    {
      v49 = (void *)v48;
      v50 = v44;
      if (objc_msgSend(v49, "hasVideo"))
      {
        v51 = 0xD00000000000006ELL;
        v52 = "Would you like to remove this music video from this playlist or delete it from your library and all playlists?";
      }
      else
      {
        v51 = 0xD000000000000067;
        v52 = "Would you like to remove this song from this playlist or delete it from your library and all playlists?";
      }
      v55 = String.LocalizationValue.init(stringLiteral:)(v51, (unint64_t)(v52 - 32) | 0x8000000000000000);
      v36 = v74;
      static Locale.current.getter(v55);
      String.init(localized:table:bundle:locale:comment:)(v22, 0, 0, 0, v36, 0, 0, 256);
      v34 = v56;

    }
    else
    {
      objc_opt_self(MPModelMovie);
      if (swift_dynamicCastObjCClass(v44))
      {
        v53 = 0xD000000000000068;
        v54 = "Would you like to remove this movie from this playlist or delete it from your library and all playlists?";
      }
      else
      {
        v53 = 0xD000000000000062;
        v54 = "Would you like to remove this from this playlist or delete it from your library and all playlists?";
      }
      v57 = String.LocalizationValue.init(stringLiteral:)(v53, (unint64_t)(v54 - 32) | 0x8000000000000000);
      v36 = v74;
      static Locale.current.getter(v57);
      String.init(localized:table:bundle:locale:comment:)(v22, 0, 0, 0, v36, 0, 0, 256);
      v34 = v58;
    }
    v27 = v75;
    v35 = v76;
  }
  v59 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000013, 0x80000000010D98D0);
  static Locale.current.getter(v59);
  String.init(localized:table:bundle:locale:comment:)(v22, 0, 0, 0, v36, 0, 0, 256);
  v61 = v60;
  sub_6087C(v27, (uint64_t)v84);
  v62 = swift_allocObject(&unk_13925D0, 96, 7);
  *(_QWORD *)(v62 + 16) = v35;
  sub_648A4((uint64_t)v84, v62 + 24);
  v63 = v35;
  v64 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v61);
  v82 = sub_9BD688;
  v83 = v62;
  aBlock = _NSConcreteStackBlock;
  v79 = 1107296256;
  v80 = sub_5FEBC;
  v81 = &block_descriptor_68_4;
  v65 = _Block_copy(&aBlock);
  swift_release(v83);
  v66 = (void *)objc_opt_self(UIAlertAction);
  v67 = objc_msgSend(v66, "actionWithTitle:style:handler:", v64, 2, v65);
  _Block_release(v65);

  v68 = String.cancelButtonTitle.unsafeMutableAddressor()[1];
  swift_bridgeObjectRetain();
  v69 = String._bridgeToObjectiveC()();
  v70 = objc_msgSend(v66, "actionWithTitle:style:handler:", v69, 1, 0, swift_bridgeObjectRelease(v68).n128_f64[0]);

  v71 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v34);
  v72 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", 0, v71, 0);

  v73 = v77;
  objc_msgSend(v72, "addAction:", v77);
  objc_msgSend(v72, "addAction:", v67);
  objc_msgSend(v72, "addAction:", v70);
  PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v72, 1, (char *)&dword_C + 3, (void **)((char *)&dword_0 + 1), 0, 0);

}

double sub_9BBEC0(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  id v9;
  __n128 v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  double result;
  _BYTE v16[72];

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD5A0);
  __chkstk_darwin(v5);
  v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = type metadata accessor for TaskPriority(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  sub_6087C(a3, (uint64_t)v16);
  type metadata accessor for MainActor(0);
  v9 = a2;
  v11 = static MainActor.shared.getter(v10);
  v12 = (_QWORD *)swift_allocObject(&unk_1392670, 112, 7);
  v12[2] = v11;
  v12[3] = &protocol witness table for MainActor;
  v12[4] = v9;
  sub_648A4((uint64_t)v16, (uint64_t)(v12 + 5));
  v13 = sub_222420((uint64_t)v7, (uint64_t)&unk_14ED5A8, (uint64_t)v12);
  *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  return result;
}

uint64_t sub_9BBFC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  __n128 v8;
  _QWORD *v9;
  uint64_t (*v11)(char, uint64_t, uint64_t, char);

  v5[2] = a1;
  v5[3] = type metadata accessor for MainActor(0);
  v5[4] = static MainActor.shared.getter(v8);
  v11 = (uint64_t (*)(char, uint64_t, uint64_t, char))((char *)&dword_14B9520 + dword_14B9520);
  v9 = (_QWORD *)swift_task_alloc(unk_14B9524);
  v5[5] = v9;
  *v9 = v5;
  v9[1] = sub_7A0EB0;
  return v11(1, a4, a5, 1);
}

double sub_9BC054(uint64_t a1, void (*a2)(double), uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double result;
  uint64_t v26;

  v8 = type metadata accessor for SwipeActions(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD5A0);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(v13);
  v16 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  sub_5BDB8(a4, (uint64_t)v11, type metadata accessor for SwipeActions);
  type metadata accessor for MainActor(0);
  v17 = a5;
  v19 = static MainActor.shared.getter(v18);
  v20 = *(unsigned __int8 *)(v9 + 80);
  v21 = (v20 + 32) & ~v20;
  v22 = (v10 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  v23 = swift_allocObject(&unk_1392698, v22 + 8, v20 | 7);
  *(_QWORD *)(v23 + 16) = v19;
  *(_QWORD *)(v23 + 24) = &protocol witness table for MainActor;
  sub_5C04C((uint64_t)v11, v23 + v21, type metadata accessor for SwipeActions);
  *(_QWORD *)(v23 + v22) = v17;
  v24 = sub_2223C8((uint64_t)v15, (uint64_t)&unk_14ED5B8, v23);
  *(_QWORD *)&result = swift_release(v24).n128_u64[0];
  return result;
}

uint64_t sub_9BC1D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  v5[2] = a4;
  v5[3] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[4] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_9BC23C, v8, v9);
}

uint64_t sub_9BC23C()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;

  v1 = *(_QWORD *)(v0 + 32);
  sub_9B9210(*(_QWORD *)(v0 + 24), 31, 0, 0, 0, 65280);
  v2 = swift_release(v1);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
}

void sub_9BC28C(int a1, id a2, uint64_t a3)
{
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  id v12;

  v12 = objc_msgSend(a2, "innermostModelObject");
  ObjectType = swift_getObjectType();
  v6 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for LibraryAddable);
  if (v6)
    v7 = v6;
  else
    v7 = 0;
  if (v6)
    v8 = v12;
  else
    v8 = 0;
  if (v8)
  {
    v9 = swift_getObjectType();
    v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v9, v7);

    if ((v10 & 1) != 0)
    {
      sub_27F118();
      if (v11 == 2)
        sub_6A4470(a2, 0, a3);
      else
        sub_6A4F7C(a2, a3, 0, 0);
    }
  }
  else
  {

  }
}

id sub_9BC38C()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithWeight:", 5);
  qword_14ED540 = (uint64_t)result;
  return result;
}

void sub_9BC3C8()
{
  id v0;
  void *v1;
  id v2;
  _QWORD v3[5];
  uint64_t v4;

  v0 = objc_allocWithZone((Class)UIColor);
  v3[4] = sub_97D1FC;
  v4 = 0;
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 1107296256;
  v3[2] = sub_12EEE0;
  v3[3] = &block_descriptor_37_7;
  v1 = _Block_copy(v3);
  v2 = objc_msgSend(v0, "initWithDynamicProvider:", v1);
  _Block_release(v1);
  swift_release(v4);
  qword_14ED548 = (uint64_t)v2;
}

void sub_9BC46C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t v21;
  char v22;
  unint64_t v23;
  char v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t *v27;
  _QWORD *v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  char v45;
  unint64_t v46;
  uint64_t v47;
  _BOOL8 v48;
  uint64_t v49;
  char v50;
  unint64_t v51;
  char v52;
  _QWORD *v53;
  uint64_t *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;

  swift_bridgeObjectRetain();
  swift_retain(a3);
  v8 = sub_42E1C4();
  if (!v9)
    goto LABEL_24;
  v12 = v8;
  v13 = v9;
  v14 = v10;
  v15 = v11;
  v16 = (_QWORD *)*a5;
  v18 = sub_21BAD0(v8, v9);
  v19 = v16[2];
  v20 = (v17 & 1) == 0;
  v21 = v19 + v20;
  if (__OFADD__(v19, v20))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v22 = v17;
  if (v16[3] >= v21)
  {
    if ((a4 & 1) != 0)
    {
      v25 = (_QWORD *)*a5;
      if ((v17 & 1) != 0)
        goto LABEL_9;
    }
    else
    {
      sub_765BB8();
      v25 = (_QWORD *)*a5;
      if ((v22 & 1) != 0)
        goto LABEL_9;
    }
LABEL_11:
    v25[(v18 >> 6) + 8] |= 1 << v18;
    v27 = (uint64_t *)(v25[6] + 16 * v18);
    *v27 = v12;
    v27[1] = v13;
    v28 = (_QWORD *)(v25[7] + 16 * v18);
    *v28 = v14;
    v28[1] = v15;
    v29 = v25[2];
    v30 = __OFADD__(v29, 1);
    v31 = v29 + 1;
    if (v30)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v25[2] = v31;
LABEL_13:
    v32 = sub_42E1C4();
    if (v33)
    {
      v36 = v32;
      v37 = v33;
      v38 = v34;
      v39 = v35;
      do
      {
        v44 = (_QWORD *)*a5;
        v46 = sub_21BAD0(v36, v37);
        v47 = v44[2];
        v48 = (v45 & 1) == 0;
        v49 = v47 + v48;
        if (__OFADD__(v47, v48))
          goto LABEL_25;
        v50 = v45;
        if (v44[3] < v49)
        {
          sub_757658(v49, 1);
          v51 = sub_21BAD0(v36, v37);
          if ((v50 & 1) != (v52 & 1))
            goto LABEL_27;
          v46 = v51;
        }
        v53 = (_QWORD *)*a5;
        if ((v50 & 1) != 0)
        {
          swift_bridgeObjectRelease();
          v40 = (_QWORD *)(v53[7] + 16 * v46);
          swift_bridgeObjectRelease();
          *v40 = v38;
          v40[1] = v39;
        }
        else
        {
          v53[(v46 >> 6) + 8] |= 1 << v46;
          v54 = (uint64_t *)(v53[6] + 16 * v46);
          *v54 = v36;
          v54[1] = v37;
          v55 = (_QWORD *)(v53[7] + 16 * v46);
          *v55 = v38;
          v55[1] = v39;
          v56 = v53[2];
          v30 = __OFADD__(v56, 1);
          v57 = v56 + 1;
          if (v30)
            goto LABEL_26;
          v53[2] = v57;
        }
        v36 = sub_42E1C4();
        v37 = v41;
        v38 = v42;
        v39 = v43;
      }
      while (v41);
    }
LABEL_24:
    swift_release(a3);
    swift_bridgeObjectRelease();
    sub_55D68(a1);
    swift_release(a3);
    return;
  }
  sub_757658(v21, a4 & 1);
  v23 = sub_21BAD0(v12, v13);
  if ((v22 & 1) == (v24 & 1))
  {
    v18 = v23;
    v25 = (_QWORD *)*a5;
    if ((v22 & 1) == 0)
      goto LABEL_11;
LABEL_9:
    swift_bridgeObjectRelease();
    v26 = (_QWORD *)(v25[7] + 16 * v18);
    swift_bridgeObjectRelease();
    *v26 = v14;
    v26[1] = v15;
    goto LABEL_13;
  }
LABEL_27:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

uint64_t sub_9BC774@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;
  swift_bridgeObjectRetain(v2);
  return swift_bridgeObjectRetain(v4);
}

uint64_t objectdestroy_8Tm_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;

  v1 = type metadata accessor for PlaybackIntentDescriptor(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)(type metadata accessor for SwipeActions(0) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v9 = (id *)(v0 + v4);
  v10 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v9, v11);
  }
  else
  {

  }
  v12 = (id *)((char *)v9 + *(int *)(v1 + 28));
  if (v12[3])
    __swift_destroy_boxed_opaque_existential_1(v12);
  v13 = v0 + v5;
  swift_unknownObjectWeakDestroy(v0 + v5);
  v14 = *(unsigned __int8 *)(v0 + v5 + 48);
  if (v14 != 255)
    sub_626A8(*(id *)(v13 + 8), *(_QWORD *)(v13 + 16), *(_QWORD *)(v13 + 24), *(_QWORD *)(v13 + 32), *(_QWORD *)(v13 + 40), v14);
  v15 = (v5 + v7 + 72) & ~v7;
  if (*(_QWORD *)(v13 + 56))
    swift_release(*(_QWORD *)(v13 + 64));
  v16 = v0 + v15;
  v17 = *(unsigned __int16 *)(v0 + v15 + 24);
  if (v17 >> 8 <= 0xFE)
    sub_79B688(*(void **)v16, *(_QWORD *)(v16 + 8), *(_QWORD *)(v16 + 16), v17, SBYTE1(v17));
  v18 = v16 + *(int *)(type metadata accessor for SwipeActions.Analytics(0) + 20);
  v19 = type metadata accessor for MetricsPageProperties(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v18, 1, v19))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v20 = v18 + *(int *)(v19 + 24);
    v21 = type metadata accessor for URL(0);
    v22 = *(_QWORD *)(v21 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v23 = (v8 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  v24 = v23 + 8;

  return swift_deallocObject(v0, v24, v3 | v7 | 7);
}

uint64_t sub_9BC9BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v4 = *(_QWORD *)(type metadata accessor for PlaybackIntentDescriptor(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(_QWORD *)(type metadata accessor for SwipeActions(0) - 8);
  v8 = (v6 + *(unsigned __int8 *)(v7 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v1 + 16);
  v10 = *(_QWORD *)(v1 + 24);
  v11 = v1 + v5;
  v12 = v1 + v6;
  v13 = v1 + v8;
  v14 = *(_QWORD *)(v1 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFF8));
  v15 = (_QWORD *)swift_task_alloc(dword_14ED564);
  *(_QWORD *)(v2 + 16) = v15;
  *v15 = v2;
  v15[1] = sub_C3150;
  return sub_9B8F6C(a1, v9, v10, v11, v12, v13, v14);
}

void sub_9BCAA8(int a1, int a2)
{
  uint64_t v2;

  sub_9BB608(a1, a2, *(id *)(v2 + 16), v2 + 24);
}

uint64_t sub_9BCAB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(type metadata accessor for SwipeActions(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);

  swift_unknownObjectWeakDestroy(v0 + 24);
  v4 = *(unsigned __int8 *)(v0 + 72);
  if (v4 != 255)
    sub_626A8(*(id *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), v4);
  v5 = (v2 + 96) & ~v2;
  if (*(_QWORD *)(v0 + 80))
    swift_release(*(_QWORD *)(v0 + 88));
  v6 = v0 + v5;
  v7 = *(unsigned __int16 *)(v0 + v5 + 24);
  if (v7 >> 8 <= 0xFE)
    sub_79B688(*(void **)v6, *(_QWORD *)(v6 + 8), *(_QWORD *)(v6 + 16), v7, SBYTE1(v7));
  v8 = v6 + *(int *)(type metadata accessor for SwipeActions.Analytics(0) + 20);
  v9 = type metadata accessor for MetricsPageProperties(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v10 = v8 + *(int *)(v9 + 24);
    v11 = type metadata accessor for URL(0);
    v12 = *(_QWORD *)(v11 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject(v0, v5 + v3, v2 | 7);
}

double sub_9BCC14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SwipeActions(0) - 8) + 80);
  return sub_9BB3CC(a1, a2, *(void **)(v2 + 16), v2 + 24, v2 + ((v5 + 96) & ~v5));
}

uint64_t sub_9BCC68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(type metadata accessor for SwipeActions(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);

  swift_unknownObjectWeakDestroy(v0 + 72);
  v4 = *(unsigned __int8 *)(v0 + 120);
  if (v4 != 255)
    sub_626A8(*(id *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), v4);
  v5 = (v2 + 144) & ~v2;
  if (*(_QWORD *)(v0 + 128))
    swift_release(*(_QWORD *)(v0 + 136));
  v6 = v0 + v5;
  v7 = *(unsigned __int16 *)(v0 + v5 + 24);
  if (v7 >> 8 <= 0xFE)
    sub_79B688(*(void **)v6, *(_QWORD *)(v6 + 8), *(_QWORD *)(v6 + 16), v7, SBYTE1(v7));
  v8 = v6 + *(int *)(type metadata accessor for SwipeActions.Analytics(0) + 20);
  v9 = type metadata accessor for MetricsPageProperties(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v10 = v8 + *(int *)(v9 + 24);
    v11 = type metadata accessor for URL(0);
    v12 = *(_QWORD *)(v11 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject(v0, v5 + v3, v2 | 7);
}

double sub_9BCDC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SwipeActions(0) - 8) + 80);
  return sub_9BADB8(a1, a2, *(void **)(v2 + 16), (_OWORD *)(v2 + 24), v2 + 72, v2 + ((v5 + 144) & ~v5));
}

uint64_t sub_9BCE20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(type metadata accessor for SwipeActions(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_unknownObjectWeakDestroy(v0 + 88);
  v4 = *(unsigned __int8 *)(v0 + 136);
  if (v4 != 255)
    sub_626A8(*(id *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), v4);
  v5 = (v2 + 160) & ~v2;
  if (*(_QWORD *)(v0 + 144))
    swift_release(*(_QWORD *)(v0 + 152));
  v6 = v0 + v5;
  v7 = *(unsigned __int16 *)(v0 + v5 + 24);
  if (v7 >> 8 <= 0xFE)
    sub_79B688(*(void **)v6, *(_QWORD *)(v6 + 8), *(_QWORD *)(v6 + 16), v7, SBYTE1(v7));
  v8 = v6 + *(int *)(type metadata accessor for SwipeActions.Analytics(0) + 20);
  v9 = type metadata accessor for MetricsPageProperties(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v10 = v8 + *(int *)(v9 + 24);
    v11 = type metadata accessor for URL(0);
    v12 = *(_QWORD *)(v11 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject(v0, v5 + v3, v2 | 7);
}

uint64_t sub_9BCF88(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SwipeActions(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)(v1 + 5);
  v9 = (uint64_t)(v1 + 11);
  v10 = (uint64_t)v1 + ((v4 + 160) & ~v4);
  v11 = (_QWORD *)swift_task_alloc(dword_14ED574);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_C3150;
  return sub_9BAF58(a1, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_9BD034()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v1 = *(_QWORD *)(type metadata accessor for SwipeActions(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 32) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v5 = v0 + v3;
  v6 = *(unsigned __int16 *)(v0 + v3 + 24);
  if (v6 >> 8 <= 0xFE)
    sub_79B688(*(void **)v5, *(_QWORD *)(v5 + 8), *(_QWORD *)(v5 + 16), v6, SBYTE1(v6));
  v7 = v5 + *(int *)(type metadata accessor for SwipeActions.Analytics(0) + 20);
  v8 = type metadata accessor for MetricsPageProperties(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v9 = v7 + *(int *)(v8 + 24);
    v10 = type metadata accessor for URL(0);
    v11 = *(_QWORD *)(v10 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v12 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v13 = (v12 + 15) & 0xFFFFFFFFFFFFFFF8;

  sub_79B688(*(void **)(v0 + v13), *(_QWORD *)(v0 + v13 + 8), *(_QWORD *)(v0 + v13 + 16), *(unsigned __int8 *)(v0 + v13 + 24), *(_BYTE *)(v0 + v13 + 25));
  return swift_deallocObject(v0, v13 + 26, v2 | 7);
}

uint64_t sub_9BD19C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v4 = *(_QWORD *)(type metadata accessor for SwipeActions(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(_QWORD *)(v1 + 16);
  v8 = *(_QWORD *)(v1 + 24);
  v9 = v1 + v5;
  v10 = *(_QWORD *)(v1 + v6);
  v11 = (uint64_t *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));
  v12 = *v11;
  v13 = v11[1];
  v14 = v11[2];
  v15 = (_QWORD *)swift_task_alloc(dword_14ED584);
  *(_QWORD *)(v2 + 16) = v15;
  *v15 = v2;
  v15[1] = sub_C3150;
  return sub_9BB304(a1, v7, v8, v9, v10, v12, v13, v14);
}

uint64_t sub_9BD27C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(type metadata accessor for SwipeActions(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc(dword_14ED594);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_C3150;
  return sub_9BB54C(a1, v6, v7, v8, v9);
}

uint64_t sub_9BD320()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(type metadata accessor for SwipeActions(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);

  swift_unknownObjectWeakDestroy(v0 + 32);
  v4 = *(unsigned __int8 *)(v0 + 80);
  if (v4 != 255)
    sub_626A8(*(id *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), v4);
  v5 = (v2 + 120) & ~v2;
  if (*(_QWORD *)(v0 + 88))
    swift_release(*(_QWORD *)(v0 + 96));
  swift_release(*(_QWORD *)(v0 + 112));
  v6 = v0 + v5;
  v7 = *(unsigned __int16 *)(v0 + v5 + 24);
  if (v7 >> 8 <= 0xFE)
    sub_79B688(*(void **)v6, *(_QWORD *)(v6 + 8), *(_QWORD *)(v6 + 16), v7, SBYTE1(v7));
  v8 = v6 + *(int *)(type metadata accessor for SwipeActions.Analytics(0) + 20);
  v9 = type metadata accessor for MetricsPageProperties(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v10 = v8 + *(int *)(v9 + 24);
    v11 = type metadata accessor for URL(0);
    v12 = *(_QWORD *)(v11 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject(v0, v5 + v3, v2 | 7);
}

void sub_9BD490(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SwipeActions(0) - 8) + 80);
  sub_9BB708(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24), v2 + 32, *(void **)(v2 + 104), *(_QWORD *)(v2 + 112), v2 + ((v5 + 120) & ~v5));
}

uint64_t sub_9BD4E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v1 = *(_QWORD *)(type metadata accessor for SwipeActions(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 32) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  swift_release(*(_QWORD *)(v0 + 24));
  v5 = v0 + v3;
  v6 = *(unsigned __int16 *)(v0 + v3 + 24);
  if (v6 >> 8 <= 0xFE)
    sub_79B688(*(void **)v5, *(_QWORD *)(v5 + 8), *(_QWORD *)(v5 + 16), v6, SBYTE1(v6));
  v7 = v5 + *(int *)(type metadata accessor for SwipeActions.Analytics(0) + 20);
  v8 = type metadata accessor for MetricsPageProperties(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v9 = v7 + *(int *)(v8 + 24);
    v10 = type metadata accessor for URL(0);
    v11 = *(_QWORD *)(v10 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v12 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v13 = v12 + 8;

  return swift_deallocObject(v0, v13, v2 | 7);
}

double sub_9BD630(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for SwipeActions(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_9BC054(a1, *(void (**)(double))(v1 + 16), *(_QWORD *)(v1 + 24), v1 + v4, *(void **)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

void sub_9BD688(int a1)
{
  uint64_t v1;

  sub_9BC28C(a1, *(id *)(v1 + 16), v1 + 24);
}

uint64_t objectdestroy_18Tm_1()
{
  uint64_t v0;
  int v1;

  swift_unknownObjectWeakDestroy(v0 + 24);
  v1 = *(unsigned __int8 *)(v0 + 72);
  if (v1 != 255)
    sub_626A8(*(id *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), v1);
  if (*(_QWORD *)(v0 + 80))
    swift_release(*(_QWORD *)(v0 + 88));
  return swift_deallocObject(v0, 96, 7);
}

double sub_9BD6F0(uint64_t a1)
{
  uint64_t v1;

  return sub_9BBEC0(a1, *(void **)(v1 + 16), v1 + 24);
}

uint64_t sub_9BD6FC()
{
  uint64_t v0;
  int v1;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_unknownObjectWeakDestroy(v0 + 40);
  v1 = *(unsigned __int8 *)(v0 + 88);
  if (v1 != 255)
    sub_626A8(*(id *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), v1);
  if (*(_QWORD *)(v0 + 96))
    swift_release(*(_QWORD *)(v0 + 104));
  return swift_deallocObject(v0, 112, 7);
}

uint64_t sub_9BD75C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_14ED5A4);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_C3150;
  return sub_9BBFC0(a1, v4, v5, v6, (uint64_t)(v1 + 5));
}

uint64_t objectdestroy_48Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v1 = *(_QWORD *)(type metadata accessor for SwipeActions(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 32) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v5 = v0 + v3;
  v6 = *(unsigned __int16 *)(v0 + v3 + 24);
  if (v6 >> 8 <= 0xFE)
    sub_79B688(*(void **)v5, *(_QWORD *)(v5 + 8), *(_QWORD *)(v5 + 16), v6, SBYTE1(v6));
  v7 = v5 + *(int *)(type metadata accessor for SwipeActions.Analytics(0) + 20);
  v8 = type metadata accessor for MetricsPageProperties(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v9 = v7 + *(int *)(v8 + 24);
    v10 = type metadata accessor for URL(0);
    v11 = *(_QWORD *)(v10 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v12 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v13 = v12 + 8;

  return swift_deallocObject(v0, v13, v2 | 7);
}

uint64_t sub_9BD924(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(type metadata accessor for SwipeActions(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc(dword_14ED5B4);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_C3150;
  return sub_9BC1D0(a1, v6, v7, v8, v9);
}

char *sub_9BD9C8(_OWORD *a1, char **a2, uint64_t a3)
{
  char *v4;
  int v5;
  unsigned int v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  char *v26;
  _QWORD *v27;
  uint64_t v28;
  void (*v29)(char *, _QWORD, uint64_t, int *);
  uint64_t v31;
  char *__dst;

  v4 = (char *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = &v8[(v5 + 16) & ~(unint64_t)v5];
    swift_retain(v8);
  }
  else
  {
    v7 = *((unsigned __int16 *)a2 + 12);
    if (v7 >> 8 <= 0xFE)
    {
      v9 = *a2;
      v10 = (uint64_t)a2[1];
      v11 = (uint64_t)a2[2];
      sub_805824(*a2, v10, v11, *((unsigned __int16 *)a2 + 12), SBYTE1(v7));
      *(_QWORD *)v4 = v9;
      *((_QWORD *)v4 + 1) = v10;
      *((_QWORD *)v4 + 2) = v11;
      *((_WORD *)v4 + 12) = v7;
    }
    else
    {
      *a1 = *(_OWORD *)a2;
      *(_OWORD *)((char *)a1 + 10) = *(_OWORD *)((char *)a2 + 10);
    }
    v12 = *(int *)(a3 + 20);
    v13 = &v4[v12];
    v14 = (char **)((char *)a2 + v12);
    v15 = (int *)type metadata accessor for MetricsPageProperties(0);
    v16 = *((_QWORD *)v15 - 1);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v16 + 48))(v14, 1, v15))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_14B1FF0);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v18 = v14[1];
      *(_QWORD *)v13 = *v14;
      *((_QWORD *)v13 + 1) = v18;
      v19 = v14[3];
      *((_QWORD *)v13 + 2) = v14[2];
      *((_QWORD *)v13 + 3) = v19;
      v20 = v15[6];
      __dst = &v13[v20];
      v21 = (char *)v14 + v20;
      v22 = type metadata accessor for URL(0);
      v31 = *(_QWORD *)(v22 - 8);
      v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v23(v21, 1, v22))
      {
        v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AED20);
        memcpy(__dst, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v31 + 16))(__dst, v21, v22);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(__dst, 0, 1, v22);
      }
      *(_QWORD *)&v13[v15[7]] = *(_QWORD *)((char *)v14 + v15[7]);
      v25 = v15[8];
      v26 = &v13[v25];
      v27 = (_QWORD *)((char *)v14 + v25);
      v28 = v27[1];
      *(_QWORD *)v26 = *v27;
      *((_QWORD *)v26 + 1) = v28;
      v29 = *(void (**)(char *, _QWORD, uint64_t, int *))(v16 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v29(v13, 0, 1, v15);
    }
  }
  return v4;
}

double sub_9BDBE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(unsigned __int16 *)(a1 + 24);
  if (v4 >> 8 <= 0xFE)
    sub_79B688(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), v4, SBYTE1(v4));
  v5 = a1 + *(int *)(a2 + 20);
  v6 = type metadata accessor for MetricsPageProperties(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v8 = v5 + *(int *)(v6 + 24);
    v9 = type metadata accessor for URL(0);
    v10 = *(_QWORD *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    swift_bridgeObjectRelease();
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  return result;
}

uint64_t sub_9BDCE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  void (*v27)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v29;
  char *__dst;

  v6 = *(unsigned __int16 *)(a2 + 24);
  if (v6 >> 8 <= 0xFE)
  {
    v7 = *(id *)a2;
    v8 = *(_QWORD *)(a2 + 8);
    v9 = *(_QWORD *)(a2 + 16);
    sub_805824(*(id *)a2, v8, v9, v6, SBYTE1(v6));
    *(_QWORD *)a1 = v7;
    *(_QWORD *)(a1 + 8) = v8;
    *(_QWORD *)(a1 + 16) = v9;
    *(_WORD *)(a1 + 24) = v6;
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 10) = *(_OWORD *)(a2 + 10);
  }
  v10 = *(int *)(a3 + 20);
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  v13 = (int *)type metadata accessor for MetricsPageProperties(0);
  v14 = *((_QWORD *)v13 - 1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v14 + 48))(v12, 1, v13))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_14B1FF0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v16 = v12[1];
    *v11 = *v12;
    v11[1] = v16;
    v17 = v12[3];
    v11[2] = v12[2];
    v11[3] = v17;
    v18 = v13[6];
    __dst = (char *)v11 + v18;
    v19 = (char *)v12 + v18;
    v20 = type metadata accessor for URL(0);
    v29 = *(_QWORD *)(v20 - 8);
    v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v21(v19, 1, v20))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AED20);
      memcpy(__dst, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(__dst, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(__dst, 0, 1, v20);
    }
    *(_QWORD *)((char *)v11 + v13[7]) = *(_QWORD *)((char *)v12 + v13[7]);
    v23 = v13[8];
    v24 = (_QWORD *)((char *)v11 + v23);
    v25 = (_QWORD *)((char *)v12 + v23);
    v26 = v25[1];
    *v24 = *v25;
    v24[1] = v26;
    v27 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v14 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v27(v11, 0, 1, v13);
  }
  return a1;
}

uint64_t sub_9BDED4(uint64_t a1, __int128 *a2, uint64_t a3)
{
  uint64_t v6;
  unsigned int v7;
  __int128 v8;
  __int128 v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  int *v24;
  uint64_t v25;
  uint64_t (*v26)(_QWORD *, uint64_t, int *);
  int v27;
  int v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  unsigned int (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(char *, uint64_t, uint64_t);
  int v41;
  int v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  void (*v46)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v52;
  char *__dst;

  v6 = *((unsigned __int16 *)a2 + 12);
  v7 = v6 >> 8;
  if (*(unsigned __int8 *)(a1 + 25) == 255)
  {
    if (v7 <= 0xFE)
    {
      v10 = *(id *)a2;
      v11 = *((_QWORD *)a2 + 1);
      v12 = *((_QWORD *)a2 + 2);
      sub_805824(*(id *)a2, v11, v12, v6, SBYTE1(v6));
      *(_QWORD *)a1 = v10;
      *(_QWORD *)(a1 + 8) = v11;
      *(_QWORD *)(a1 + 16) = v12;
      *(_WORD *)(a1 + 24) = v6;
    }
    else
    {
      v8 = *a2;
      *(_OWORD *)(a1 + 10) = *(__int128 *)((char *)a2 + 10);
      *(_OWORD *)a1 = v8;
    }
  }
  else if (v7 <= 0xFE)
  {
    v13 = *(id *)a2;
    v14 = *((_QWORD *)a2 + 1);
    v15 = *((_QWORD *)a2 + 2);
    sub_805824(*(id *)a2, v14, v15, v6, SBYTE1(v6));
    v16 = *(void **)a1;
    v17 = *(_QWORD *)(a1 + 8);
    v18 = *(_QWORD *)(a1 + 16);
    *(_QWORD *)a1 = v13;
    *(_QWORD *)(a1 + 8) = v14;
    *(_QWORD *)(a1 + 16) = v15;
    v19 = *(unsigned __int8 *)(a1 + 24);
    *(_BYTE *)(a1 + 24) = v6;
    v20 = *(_BYTE *)(a1 + 25);
    *(_BYTE *)(a1 + 25) = BYTE1(v6);
    sub_79B688(v16, v17, v18, v19, v20);
  }
  else
  {
    sub_9BE2D8(a1);
    v9 = *(__int128 *)((char *)a2 + 10);
    *(_OWORD *)a1 = *a2;
    *(_OWORD *)(a1 + 10) = v9;
  }
  v21 = *(int *)(a3 + 20);
  v22 = (_QWORD *)(a1 + v21);
  v23 = (_QWORD *)((char *)a2 + v21);
  v24 = (int *)type metadata accessor for MetricsPageProperties(0);
  v25 = *((_QWORD *)v24 - 1);
  v26 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v25 + 48);
  v27 = v26(v22, 1, v24);
  v28 = v26(v23, 1, v24);
  if (!v27)
  {
    if (v28)
    {
      sub_5C0DC((uint64_t)v22, type metadata accessor for MetricsPageProperties);
      goto LABEL_14;
    }
    *v22 = *v23;
    v22[1] = v23[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v22[2] = v23[2];
    v22[3] = v23[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v35 = v24[6];
    v36 = (char *)v22 + v35;
    v37 = (char *)v23 + v35;
    v38 = type metadata accessor for URL(0);
    v39 = *(_QWORD *)(v38 - 8);
    v40 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v39 + 48);
    v41 = v40(v36, 1, v38);
    v42 = v40(v37, 1, v38);
    if (v41)
    {
      if (!v42)
      {
        (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v36, v37, v38);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
LABEL_23:
        *(_QWORD *)((char *)v22 + v24[7]) = *(_QWORD *)((char *)v23 + v24[7]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v48 = v24[8];
        v49 = (_QWORD *)((char *)v22 + v48);
        v50 = (_QWORD *)((char *)v23 + v48);
        *v49 = *v50;
        v49[1] = v50[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        return a1;
      }
    }
    else
    {
      if (!v42)
      {
        (*(void (**)(char *, char *, uint64_t))(v39 + 24))(v36, v37, v38);
        goto LABEL_23;
      }
      (*(void (**)(char *, uint64_t))(v39 + 8))(v36, v38);
    }
    v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AED20);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    goto LABEL_23;
  }
  if (v28)
  {
LABEL_14:
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_14B1FF0);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    return a1;
  }
  *v22 = *v23;
  v22[1] = v23[1];
  v22[2] = v23[2];
  v22[3] = v23[3];
  v29 = v24[6];
  __dst = (char *)v22 + v29;
  v30 = (char *)v23 + v29;
  v31 = type metadata accessor for URL(0);
  v52 = *(_QWORD *)(v31 - 8);
  v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v32(v30, 1, v31))
  {
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AED20);
    memcpy(__dst, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v52 + 16))(__dst, v30, v31);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(__dst, 0, 1, v31);
  }
  *(_QWORD *)((char *)v22 + v24[7]) = *(_QWORD *)((char *)v23 + v24[7]);
  v43 = v24[8];
  v44 = (_QWORD *)((char *)v22 + v43);
  v45 = (_QWORD *)((char *)v23 + v43);
  *v44 = *v45;
  v44[1] = v45[1];
  v46 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v25 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v46(v22, 0, 1, v24);
  return a1;
}

uint64_t sub_9BE2D8(uint64_t a1)
{
  destroy for MetricsEvent.Click.ActionDetails(a1);
  return a1;
}

_OWORD *sub_9BE30C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  _OWORD *v5;
  _OWORD *v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *a1 = *a2;
  *(_OWORD *)((char *)a1 + 10) = *(_OWORD *)((char *)a2 + 10);
  v4 = *(int *)(a3 + 20);
  v5 = (_OWORD *)((char *)a1 + v4);
  v6 = (_OWORD *)((char *)a2 + v4);
  v7 = (int *)type metadata accessor for MetricsPageProperties(0);
  v8 = *((_QWORD *)v7 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v8 + 48))(v6, 1, v7))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_14B1FF0);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    v10 = v6[1];
    *v5 = *v6;
    v5[1] = v10;
    v11 = v7[6];
    v12 = (char *)v5 + v11;
    v13 = (char *)v6 + v11;
    v14 = type metadata accessor for URL(0);
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AED20);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    *(_QWORD *)((char *)v5 + v7[7]) = *(_QWORD *)((char *)v6 + v7[7]);
    *(_OWORD *)((char *)v5 + v7[8]) = *(_OWORD *)((char *)v6 + v7[8]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_9BE470(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  int *v15;
  uint64_t v16;
  uint64_t (*v17)(_QWORD *, uint64_t, int *);
  int v18;
  int v19;
  __int128 v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(char *, uint64_t, uint64_t);
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;

  v6 = *(unsigned __int16 *)(a1 + 24);
  if (v6 >> 8 > 0xFE)
    goto LABEL_4;
  v7 = *(unsigned __int16 *)(a2 + 24);
  if (v7 >> 8 > 0xFE)
  {
    sub_9BE2D8(a1);
LABEL_4:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 10) = *(_OWORD *)(a2 + 10);
    goto LABEL_6;
  }
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(void **)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v8;
  *(_WORD *)(a1 + 24) = v7;
  sub_79B688(v9, v10, v11, v6, SBYTE1(v6));
LABEL_6:
  v12 = *(int *)(a3 + 20);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  v15 = (int *)type metadata accessor for MetricsPageProperties(0);
  v16 = *((_QWORD *)v15 - 1);
  v17 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (v19)
    {
      sub_5C0DC((uint64_t)v13, type metadata accessor for MetricsPageProperties);
      goto LABEL_12;
    }
    v28 = v14[1];
    *v13 = *v14;
    v13[1] = v28;
    swift_bridgeObjectRelease();
    v29 = v14[3];
    v13[2] = v14[2];
    v13[3] = v29;
    swift_bridgeObjectRelease();
    v30 = v15[6];
    v31 = (char *)v13 + v30;
    v32 = (char *)v14 + v30;
    v33 = type metadata accessor for URL(0);
    v34 = *(_QWORD *)(v33 - 8);
    v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48);
    v36 = v35(v31, 1, v33);
    v37 = v35(v32, 1, v33);
    if (v36)
    {
      if (!v37)
      {
        (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v31, v32, v33);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
LABEL_21:
        *(_QWORD *)((char *)v13 + v15[7]) = *(_QWORD *)((char *)v14 + v15[7]);
        swift_bridgeObjectRelease();
        v39 = v15[8];
        v40 = (_QWORD *)((char *)v13 + v39);
        v41 = (_QWORD *)((char *)v14 + v39);
        v43 = *v41;
        v42 = v41[1];
        *v40 = v43;
        v40[1] = v42;
        swift_bridgeObjectRelease();
        return a1;
      }
    }
    else
    {
      if (!v37)
      {
        (*(void (**)(char *, char *, uint64_t))(v34 + 40))(v31, v32, v33);
        goto LABEL_21;
      }
      (*(void (**)(char *, uint64_t))(v34 + 8))(v31, v33);
    }
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AED20);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    goto LABEL_21;
  }
  if (v19)
  {
LABEL_12:
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_14B1FF0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    return a1;
  }
  v20 = *((_OWORD *)v14 + 1);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v20;
  v21 = v15[6];
  v22 = (char *)v13 + v21;
  v23 = (char *)v14 + v21;
  v24 = type metadata accessor for URL(0);
  v25 = *(_QWORD *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AED20);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v22, v23, v24);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  *(_QWORD *)((char *)v13 + v15[7]) = *(_QWORD *)((char *)v14 + v15[7]);
  *(_OWORD *)((char *)v13 + v15[8]) = *(_OWORD *)((char *)v14 + v15[8]);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

uint64_t sub_9BE774(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_9BE780);
}

uint64_t sub_9BE780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 250)
  {
    v4 = *(unsigned __int8 *)(a1 + 25);
    if (v4 <= 4)
      return 0;
    else
      return v4 ^ 0xFF;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14B1FF0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_9BE7F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_9BE804);
}

uint64_t sub_9BE804(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 250)
  {
    *(_BYTE *)(result + 25) = ~(_BYTE)a2;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14B1FF0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

void sub_9BE878(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = &unk_108F040;
  sub_12A264(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
  }
}

char *sub_9BE8EC(char *a1, char **a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  unsigned int v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  char *v26;
  _QWORD *v27;
  uint64_t v28;
  void (*v29)(char *, _QWORD, uint64_t, int *);
  uint64_t v31;
  char *__dst;

  v4 = type metadata accessor for SwipeActions.Analytics(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v8[(v5 + 16) & ~(unint64_t)v5];
    swift_retain(v8);
  }
  else
  {
    v6 = v4;
    v7 = *((unsigned __int16 *)a2 + 12);
    if (v7 >> 8 <= 0xFE)
    {
      v9 = *a2;
      v10 = (uint64_t)a2[1];
      v11 = (uint64_t)a2[2];
      sub_805824(*a2, v10, v11, *((unsigned __int16 *)a2 + 12), SBYTE1(v7));
      *(_QWORD *)a1 = v9;
      *((_QWORD *)a1 + 1) = v10;
      *((_QWORD *)a1 + 2) = v11;
      *((_WORD *)a1 + 12) = v7;
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 10) = *(_OWORD *)((char *)a2 + 10);
    }
    v12 = *(int *)(v6 + 20);
    v13 = &a1[v12];
    v14 = (char **)((char *)a2 + v12);
    v15 = (int *)type metadata accessor for MetricsPageProperties(0);
    v16 = *((_QWORD *)v15 - 1);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v16 + 48))(v14, 1, v15))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_14B1FF0);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v18 = v14[1];
      *(_QWORD *)v13 = *v14;
      *((_QWORD *)v13 + 1) = v18;
      v19 = v14[3];
      *((_QWORD *)v13 + 2) = v14[2];
      *((_QWORD *)v13 + 3) = v19;
      v20 = v15[6];
      __dst = &v13[v20];
      v21 = (char *)v14 + v20;
      v22 = type metadata accessor for URL(0);
      v31 = *(_QWORD *)(v22 - 8);
      v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v23(v21, 1, v22))
      {
        v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AED20);
        memcpy(__dst, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v31 + 16))(__dst, v21, v22);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(__dst, 0, 1, v22);
      }
      *(_QWORD *)&v13[v15[7]] = *(_QWORD *)((char *)v14 + v15[7]);
      v25 = v15[8];
      v26 = &v13[v25];
      v27 = (_QWORD *)((char *)v14 + v25);
      v28 = v27[1];
      *(_QWORD *)v26 = *v27;
      *((_QWORD *)v26 + 1) = v28;
      v29 = *(void (**)(char *, _QWORD, uint64_t, int *))(v16 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v29(v13, 0, 1, v15);
    }
  }
  return a1;
}

double sub_9BEB14(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(unsigned __int16 *)(a1 + 24);
  if (v2 >> 8 <= 0xFE)
    sub_79B688(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), v2, SBYTE1(v2));
  v3 = a1 + *(int *)(type metadata accessor for SwipeActions.Analytics(0) + 20);
  v4 = type metadata accessor for MetricsPageProperties(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = v3 + *(int *)(v4 + 24);
    v7 = type metadata accessor for URL(0);
    v8 = *(_QWORD *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    swift_bridgeObjectRelease();
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  return result;
}

uint64_t sub_9BEC10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  void (*v25)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v27;
  char *__dst;

  v4 = *(unsigned __int16 *)(a2 + 24);
  if (v4 >> 8 <= 0xFE)
  {
    v5 = *(id *)a2;
    v6 = *(_QWORD *)(a2 + 8);
    v7 = *(_QWORD *)(a2 + 16);
    sub_805824(*(id *)a2, v6, v7, v4, SBYTE1(v4));
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v6;
    *(_QWORD *)(a1 + 16) = v7;
    *(_WORD *)(a1 + 24) = v4;
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 10) = *(_OWORD *)(a2 + 10);
  }
  v8 = *(int *)(type metadata accessor for SwipeActions.Analytics(0) + 20);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = (int *)type metadata accessor for MetricsPageProperties(0);
  v12 = *((_QWORD *)v11 - 1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_14B1FF0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v14 = v10[1];
    *v9 = *v10;
    v9[1] = v14;
    v15 = v10[3];
    v9[2] = v10[2];
    v9[3] = v15;
    v16 = v11[6];
    __dst = (char *)v9 + v16;
    v17 = (char *)v10 + v16;
    v18 = type metadata accessor for URL(0);
    v27 = *(_QWORD *)(v18 - 8);
    v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v19(v17, 1, v18))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AED20);
      memcpy(__dst, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(__dst, v17, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(__dst, 0, 1, v18);
    }
    *(_QWORD *)((char *)v9 + v11[7]) = *(_QWORD *)((char *)v10 + v11[7]);
    v21 = v11[8];
    v22 = (_QWORD *)((char *)v9 + v21);
    v23 = (_QWORD *)((char *)v10 + v21);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    v25 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v12 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v25(v9, 0, 1, v11);
  }
  return a1;
}

uint64_t sub_9BEE08(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  unsigned int v5;
  __int128 v6;
  __int128 v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  int *v22;
  uint64_t v23;
  uint64_t (*v24)(_QWORD *, uint64_t, int *);
  int v25;
  int v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(char *, uint64_t, uint64_t);
  int v39;
  int v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  void (*v44)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v50;
  char *__dst;

  v4 = *((unsigned __int16 *)a2 + 12);
  v5 = v4 >> 8;
  if (*(unsigned __int8 *)(a1 + 25) == 255)
  {
    if (v5 <= 0xFE)
    {
      v8 = *(id *)a2;
      v9 = *((_QWORD *)a2 + 1);
      v10 = *((_QWORD *)a2 + 2);
      sub_805824(*(id *)a2, v9, v10, v4, SBYTE1(v4));
      *(_QWORD *)a1 = v8;
      *(_QWORD *)(a1 + 8) = v9;
      *(_QWORD *)(a1 + 16) = v10;
      *(_WORD *)(a1 + 24) = v4;
    }
    else
    {
      v6 = *a2;
      *(_OWORD *)(a1 + 10) = *(__int128 *)((char *)a2 + 10);
      *(_OWORD *)a1 = v6;
    }
  }
  else if (v5 <= 0xFE)
  {
    v11 = *(id *)a2;
    v12 = *((_QWORD *)a2 + 1);
    v13 = *((_QWORD *)a2 + 2);
    sub_805824(*(id *)a2, v12, v13, v4, SBYTE1(v4));
    v14 = *(void **)a1;
    v15 = *(_QWORD *)(a1 + 8);
    v16 = *(_QWORD *)(a1 + 16);
    *(_QWORD *)a1 = v11;
    *(_QWORD *)(a1 + 8) = v12;
    *(_QWORD *)(a1 + 16) = v13;
    v17 = *(unsigned __int8 *)(a1 + 24);
    *(_BYTE *)(a1 + 24) = v4;
    v18 = *(_BYTE *)(a1 + 25);
    *(_BYTE *)(a1 + 25) = BYTE1(v4);
    sub_79B688(v14, v15, v16, v17, v18);
  }
  else
  {
    sub_9BE2D8(a1);
    v7 = *(__int128 *)((char *)a2 + 10);
    *(_OWORD *)a1 = *a2;
    *(_OWORD *)(a1 + 10) = v7;
  }
  v19 = *(int *)(type metadata accessor for SwipeActions.Analytics(0) + 20);
  v20 = (_QWORD *)(a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  v22 = (int *)type metadata accessor for MetricsPageProperties(0);
  v23 = *((_QWORD *)v22 - 1);
  v24 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v23 + 48);
  v25 = v24(v20, 1, v22);
  v26 = v24(v21, 1, v22);
  if (!v25)
  {
    if (v26)
    {
      sub_5C0DC((uint64_t)v20, type metadata accessor for MetricsPageProperties);
      goto LABEL_14;
    }
    *v20 = *v21;
    v20[1] = v21[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v20[2] = v21[2];
    v20[3] = v21[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v33 = v22[6];
    v34 = (char *)v20 + v33;
    v35 = (char *)v21 + v33;
    v36 = type metadata accessor for URL(0);
    v37 = *(_QWORD *)(v36 - 8);
    v38 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 48);
    v39 = v38(v34, 1, v36);
    v40 = v38(v35, 1, v36);
    if (v39)
    {
      if (!v40)
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
LABEL_23:
        *(_QWORD *)((char *)v20 + v22[7]) = *(_QWORD *)((char *)v21 + v22[7]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v46 = v22[8];
        v47 = (_QWORD *)((char *)v20 + v46);
        v48 = (_QWORD *)((char *)v21 + v46);
        *v47 = *v48;
        v47[1] = v48[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        return a1;
      }
    }
    else
    {
      if (!v40)
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 24))(v34, v35, v36);
        goto LABEL_23;
      }
      (*(void (**)(char *, uint64_t))(v37 + 8))(v34, v36);
    }
    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AED20);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    goto LABEL_23;
  }
  if (v26)
  {
LABEL_14:
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_14B1FF0);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    return a1;
  }
  *v20 = *v21;
  v20[1] = v21[1];
  v20[2] = v21[2];
  v20[3] = v21[3];
  v27 = v22[6];
  __dst = (char *)v20 + v27;
  v28 = (char *)v21 + v27;
  v29 = type metadata accessor for URL(0);
  v50 = *(_QWORD *)(v29 - 8);
  v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v30(v28, 1, v29))
  {
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AED20);
    memcpy(__dst, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v50 + 16))(__dst, v28, v29);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(__dst, 0, 1, v29);
  }
  *(_QWORD *)((char *)v20 + v22[7]) = *(_QWORD *)((char *)v21 + v22[7]);
  v41 = v22[8];
  v42 = (_QWORD *)((char *)v20 + v41);
  v43 = (_QWORD *)((char *)v21 + v41);
  *v42 = *v43;
  v42[1] = v43[1];
  v44 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v23 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v44(v20, 0, 1, v22);
  return a1;
}

_OWORD *sub_9BF210(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  _OWORD *v5;
  _OWORD *v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *a1 = *a2;
  *(_OWORD *)((char *)a1 + 10) = *(_OWORD *)((char *)a2 + 10);
  v4 = *(int *)(type metadata accessor for SwipeActions.Analytics(0) + 20);
  v5 = (_OWORD *)((char *)a1 + v4);
  v6 = (_OWORD *)((char *)a2 + v4);
  v7 = (int *)type metadata accessor for MetricsPageProperties(0);
  v8 = *((_QWORD *)v7 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v8 + 48))(v6, 1, v7))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_14B1FF0);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    v10 = v6[1];
    *v5 = *v6;
    v5[1] = v10;
    v11 = v7[6];
    v12 = (char *)v5 + v11;
    v13 = (char *)v6 + v11;
    v14 = type metadata accessor for URL(0);
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AED20);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    *(_QWORD *)((char *)v5 + v7[7]) = *(_QWORD *)((char *)v6 + v7[7]);
    *(_OWORD *)((char *)v5 + v7[8]) = *(_OWORD *)((char *)v6 + v7[8]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_9BF380(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  int *v13;
  uint64_t v14;
  uint64_t (*v15)(_QWORD *, uint64_t, int *);
  int v16;
  int v17;
  __int128 v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(char *, uint64_t, uint64_t);
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;

  v4 = *(unsigned __int16 *)(a1 + 24);
  if (v4 >> 8 > 0xFE)
    goto LABEL_4;
  v5 = *(unsigned __int16 *)(a2 + 24);
  if (v5 >> 8 > 0xFE)
  {
    sub_9BE2D8(a1);
LABEL_4:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 10) = *(_OWORD *)(a2 + 10);
    goto LABEL_6;
  }
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(void **)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v6;
  *(_WORD *)(a1 + 24) = v5;
  sub_79B688(v7, v8, v9, v4, SBYTE1(v4));
LABEL_6:
  v10 = *(int *)(type metadata accessor for SwipeActions.Analytics(0) + 20);
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  v13 = (int *)type metadata accessor for MetricsPageProperties(0);
  v14 = *((_QWORD *)v13 - 1);
  v15 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (v17)
    {
      sub_5C0DC((uint64_t)v11, type metadata accessor for MetricsPageProperties);
      goto LABEL_12;
    }
    v26 = v12[1];
    *v11 = *v12;
    v11[1] = v26;
    swift_bridgeObjectRelease();
    v27 = v12[3];
    v11[2] = v12[2];
    v11[3] = v27;
    swift_bridgeObjectRelease();
    v28 = v13[6];
    v29 = (char *)v11 + v28;
    v30 = (char *)v12 + v28;
    v31 = type metadata accessor for URL(0);
    v32 = *(_QWORD *)(v31 - 8);
    v33 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 48);
    v34 = v33(v29, 1, v31);
    v35 = v33(v30, 1, v31);
    if (v34)
    {
      if (!v35)
      {
        (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v29, v30, v31);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
LABEL_21:
        *(_QWORD *)((char *)v11 + v13[7]) = *(_QWORD *)((char *)v12 + v13[7]);
        swift_bridgeObjectRelease();
        v37 = v13[8];
        v38 = (_QWORD *)((char *)v11 + v37);
        v39 = (_QWORD *)((char *)v12 + v37);
        v41 = *v39;
        v40 = v39[1];
        *v38 = v41;
        v38[1] = v40;
        swift_bridgeObjectRelease();
        return a1;
      }
    }
    else
    {
      if (!v35)
      {
        (*(void (**)(char *, char *, uint64_t))(v32 + 40))(v29, v30, v31);
        goto LABEL_21;
      }
      (*(void (**)(char *, uint64_t))(v32 + 8))(v29, v31);
    }
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AED20);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    goto LABEL_21;
  }
  if (v17)
  {
LABEL_12:
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_14B1FF0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    return a1;
  }
  v18 = *((_OWORD *)v12 + 1);
  *(_OWORD *)v11 = *(_OWORD *)v12;
  *((_OWORD *)v11 + 1) = v18;
  v19 = v13[6];
  v20 = (char *)v11 + v19;
  v21 = (char *)v12 + v19;
  v22 = type metadata accessor for URL(0);
  v23 = *(_QWORD *)(v22 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AED20);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v20, v21, v22);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  *(_QWORD *)((char *)v11 + v13[7]) = *(_QWORD *)((char *)v12 + v13[7]);
  *(_OWORD *)((char *)v11 + v13[8]) = *(_OWORD *)((char *)v12 + v13[8]);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v14 + 56))(v11, 0, 1, v13);
  return a1;
}

uint64_t sub_9BF688(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_9BF694);
}

uint64_t sub_9BF694(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SwipeActions.Analytics(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_9BF6D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_9BF6DC);
}

uint64_t sub_9BF6DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SwipeActions.Analytics(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_9BF71C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for SwipeActions.Analytics(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
    return 0;
  }
  return result;
}

void sub_9BF7D0(char a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[3];
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[24];

  v2 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC16MusicApplication26LibraryDownloadsController_isReloadingEnabled);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC16MusicApplication26LibraryDownloadsController_isReloadingEnabled) = a1;
  if (v2 != (a1 & 1))
  {
    if ((a1 & 1) != 0)
    {
      sub_9BFB0C();
    }
    else
    {
      v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16MusicApplication26LibraryDownloadsController_viewModel);
      *(_QWORD *)(v1 + OBJC_IVAR____TtC16MusicApplication26LibraryDownloadsController_viewModel) = 0;
      swift_release(v3);
      v4 = v1 + OBJC_IVAR____TtC16MusicApplication26LibraryDownloadsController_downloadQueueSubscription;
      swift_beginAccess(v1 + OBJC_IVAR____TtC16MusicApplication26LibraryDownloadsController_downloadQueueSubscription, v10, 0, 0);
      if (*(_QWORD *)(v4 + 24))
      {
        sub_55D1C(v4, (uint64_t)v7);
        v5 = v8;
        v6 = v9;
        __swift_project_boxed_opaque_existential_1(v7, v8);
        dispatch thunk of Cancellable.cancel()(v5, v6);
        __swift_destroy_boxed_opaque_existential_1(v7);
      }
    }
  }
}

void sub_9BF89C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, __n128);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  __n128 v22;
  void (*v23)(char *, uint64_t, uint64_t, __n128);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[24];
  _BYTE v34[24];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE7A0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v31 - v9;
  __chkstk_darwin(v11);
  v13 = (char *)&v31 - v12;
  v14 = *(void (**)(char *, __n128))(v1
                                              + OBJC_IVAR____TtC16MusicApplication26LibraryDownloadsController_didUpdateDownloadQueue);
  if (v14)
  {
    v15 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16MusicApplication26LibraryDownloadsController_didUpdateDownloadQueue + 8);
    v16 = a1;
    v17 = v2 + OBJC_IVAR____TtC16MusicApplication26LibraryDownloadsController_downloadQueue;
    v18 = swift_beginAccess(v2 + OBJC_IVAR____TtC16MusicApplication26LibraryDownloadsController_downloadQueue, v34, 0, 0);
    v19 = v17;
    a1 = v16;
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))(v13, v19, v4, v18);
    v20 = swift_retain(v15);
    v14(v13, v20);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
    sub_5C198((uint64_t)v14, v15);
  }
  v21 = v2 + OBJC_IVAR____TtC16MusicApplication26LibraryDownloadsController_downloadQueue;
  v22 = swift_beginAccess(v2 + OBJC_IVAR____TtC16MusicApplication26LibraryDownloadsController_downloadQueue, v33, 0, 0);
  v23 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16);
  v23(v10, v21, v4, v22);
  v24 = sub_5C150((unint64_t *)&qword_14BAFB0, (uint64_t *)&unk_14AE7A0, (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  dispatch thunk of Collection.startIndex.getter(v4);
  dispatch thunk of Collection.endIndex.getter(v4, v24);
  v26 = v31;
  v25 = v32;
  v27 = *(void (**)(char *, uint64_t))(v5 + 8);
  v27(v10, v4);
  ((void (*)(char *, uint64_t, uint64_t))v23)(v7, a1, v4);
  if (v25 == v26)
  {
    v27(v7, v4);
  }
  else
  {
    dispatch thunk of Collection.startIndex.getter(v4);
    dispatch thunk of Collection.endIndex.getter(v4, v24);
    v29 = v31;
    v28 = v32;
    v27(v7, v4);
    if (v28 != v29)
      return;
  }
  v30 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v30, "postNotificationName:object:", *MusicLibrary.downloadingStateDidChange.unsafeMutableAddressor(), 0);

}

void sub_9BFB0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD v45[3];
  __int128 v46;
  __int128 v47;
  void *v48;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14BAF30);
  __chkstk_darwin(v2);
  v4 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14ED7D0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_14ED7D8);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_14ED7E0);
  v16 = __chkstk_darwin(v13);
  v18 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC16MusicApplication26LibraryDownloadsController_isReloadingEnabled) == 1)
  {
    v19 = OBJC_IVAR____TtC16MusicApplication26LibraryDownloadsController_viewModel;
    if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC16MusicApplication26LibraryDownloadsController_viewModel))
    {
      v42 = v10;
      v43 = v15;
      v44 = v14;
      v20 = type metadata accessor for MusicLibraryDownloadQueueViewModel(0, v16);
      swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
      v21 = MusicLibraryDownloadQueueViewModel.init()();
      v22 = *(_QWORD *)(v1 + v19);
      *(_QWORD *)(v1 + v19) = v21;
      swift_release(v22);
      v23 = *(_QWORD *)(v1 + v19);
      if (v23)
      {
        v24 = swift_retain(*(_QWORD *)(v1 + v19));
        dispatch thunk of MusicLibraryDownloadQueueViewModel.$downloadQueue.getter(v24);
        swift_release(v23);
        v25 = sub_5C150(&qword_14ED7E8, &qword_14ED7D0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
        Publisher.dropFirst(_:)(1, v5, v25);
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        v26 = sub_10F850();
        *(_QWORD *)&v46 = static OS_dispatch_queue.main.getter(v26, v27, v28, v29, v30, v31, v32, v33, v42, v43, v44, v45[0], v45[1], v45[2], v46);
        v34 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v4, 1, 1, v34);
        v35 = sub_5C150(&qword_14ED7F0, &qword_14ED7D8, (uint64_t)&protocol conformance descriptor for Publishers.Drop<A>);
        v36 = sub_DB674();
        Publisher.receive<A>(on:options:)(&v46, v4, v9, v26, v35, v36);
        sub_56024((uint64_t)v4, (uint64_t *)&unk_14BAF30);

        (*(void (**)(char *, uint64_t))(v42 + 8))(v12, v9);
        v37 = swift_allocObject(&unk_13926C0, 24, 7);
        swift_weakInit(v37 + 16);
        v38 = sub_5C150(&qword_14ED7F8, &qword_14ED7E0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
        v39 = v44;
        v40 = Publisher<>.sink(receiveValue:)(sub_9C02FC, v37, v44, v38);
        (*(void (**)(char *, uint64_t))(v43 + 8))(v18, v39);
        swift_release(v37);
        *((_QWORD *)&v47 + 1) = type metadata accessor for AnyCancellable(0);
        v48 = &protocol witness table for AnyCancellable;
        *(_QWORD *)&v46 = v40;
      }
      else
      {
        v48 = 0;
        v46 = 0u;
        v47 = 0u;
      }
      v41 = v1 + OBJC_IVAR____TtC16MusicApplication26LibraryDownloadsController_downloadQueueSubscription;
      swift_beginAccess(v41, v45, 33, 0);
      sub_1BEA30((uint64_t)&v46, v41);
      swift_endAccess(v45);
    }
  }
}

uint64_t sub_9BFE7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  _BYTE v20[24];

  v3 = Track.id.getter(a1);
  v5 = v4;
  v6 = (_QWORD *)(v1 + OBJC_IVAR____TtC16MusicApplication26LibraryDownloadsController_itemStateCache);
  swift_beginAccess(v1 + OBJC_IVAR____TtC16MusicApplication26LibraryDownloadsController_itemStateCache, v20, 32, 0);
  v7 = *v6;
  if (*(_QWORD *)(*v6 + 16) && (v8 = sub_21BB38(v3, v5), (v9 & 1) != 0))
  {
    v10 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v8);
    swift_endAccess(v20);
    swift_retain();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_endAccess(v20);
    type metadata accessor for MusicLibrary(0);
    static MusicLibrary.shared.getter(v11);
    v12 = type metadata accessor for Track(0);
    v10 = MusicLibrary.state<A>(for:)(a1, v12, &protocol witness table for Track);
    swift_release();
    v14 = Track.id.getter(v13);
    v16 = v15;
    swift_beginAccess(v6, v20, 33, 0);
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v6);
    v19 = *v6;
    *v6 = 0x8000000000000000;
    sub_1A0BD0(v10, v14, v16, isUniquelyReferenced_nonNull_native);
    *v6 = v19;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess(v20);
  }
  return v10;
}

double sub_9BFFF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t Strong;
  double result;
  uint64_t v13;
  void (*v14)(_BYTE *, uint64_t, uint64_t);
  uint64_t v15;
  __n128 v16;
  __n128 v17;
  void (*v18)(_BYTE *, uint64_t);
  _BYTE v20[24];
  char v21[24];
  char v22[24];

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE7A0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v8);
  v10 = &v20[-v9 - 8];
  a2 += 16;
  swift_beginAccess(a2, v22, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v13 = Strong;
    v14 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16);
    v14(v10, a1, v4);
    v15 = v13 + OBJC_IVAR____TtC16MusicApplication26LibraryDownloadsController_downloadQueue;
    v16 = swift_beginAccess(v13 + OBJC_IVAR____TtC16MusicApplication26LibraryDownloadsController_downloadQueue, v21, 0, 0);
    ((void (*)(_BYTE *, uint64_t, uint64_t, __n128))v14)(v7, v15, v4, v16);
    v17 = swift_beginAccess(v15, v20, 33, 0);
    (*(void (**)(uint64_t, _BYTE *, uint64_t, __n128))(v5 + 24))(v15, v10, v4, v17);
    swift_endAccess(v20);
    sub_9BF89C((uint64_t)v7);
    v18 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
    v18(v10, v4);
    v18(v7, v4);
    *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  }
  return result;
}

double sub_9C0154()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double result;

  v1 = v0 + OBJC_IVAR____TtC16MusicApplication26LibraryDownloadsController_downloadQueue;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE7A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_5C198(*(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicApplication26LibraryDownloadsController_didUpdateDownloadQueue), *(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicApplication26LibraryDownloadsController_didUpdateDownloadQueue + 8));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicApplication26LibraryDownloadsController_viewModel));
  sub_56024(v0 + OBJC_IVAR____TtC16MusicApplication26LibraryDownloadsController_downloadQueueSubscription, (uint64_t *)&unk_14C06B0);
  swift_bridgeObjectRelease();
  *(_QWORD *)&result = swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52)).n128_u64[0];
  return result;
}

uint64_t sub_9C01F4()
{
  return type metadata accessor for LibraryDownloadsController(0);
}

uint64_t type metadata accessor for LibraryDownloadsController(uint64_t a1)
{
  uint64_t result;

  result = qword_14ED720;
  if (!qword_14ED720)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for LibraryDownloadsController);
  return result;
}

void sub_9C0238(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[6];

  sub_40DBD4(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = &unk_108F090;
    v4[2] = &unk_108F0A8;
    v4[3] = &unk_108F0C0;
    v4[4] = &unk_108F0D8;
    v4[5] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_updateClassMetadata2(a1, 256, 6, v4, a1 + 80);
  }
}

uint64_t sub_9C02D8()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_9C02FC(uint64_t a1)
{
  uint64_t v1;

  return sub_9BFFF4(a1, v1);
}

uint64_t type metadata accessor for PlaylistSongSuggestionsViewController(uint64_t a1)
{
  return sub_6345C(a1, (uint64_t *)&unk_14ED830, (uint64_t)&nominal type descriptor for PlaylistSongSuggestionsViewController);
}

uint64_t sub_9C0318(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  return swift_initClassMetadata2(a1, 0, 2, v2, a1 + qword_1581660);
}

double sub_9C0364@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_9C0DA4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_14B55D8, &qword_14B55E0).n128_u64[0];
  return result;
}

_QWORD *sub_9C03BC@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  __int128 *v15;
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v28;
  double v29;
  double v30;
  uint64_t v32;
  void *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  unsigned int v41;
  double v42;
  double v43;
  double v44;
  double v45;
  _OWORD v46[7];
  uint64_t v47;
  char v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  _BYTE v52[32];

  v17 = a15;
  v18 = a12;
  v19 = a10;
  v20 = a2 & 1;
  v21 = a1;
  if ((_DWORD)v20)
    v21 = -INFINITY;
  v22 = a4 & 1;
  v23 = a3;
  if ((a4 & 1) != 0)
    v23 = v21;
  v24 = a6 & 1;
  v25 = a8 & 1;
  v26 = a5;
  if ((a6 & 1) != 0)
    v26 = v23;
  if (v21 > v23 || v23 > v26)
    goto LABEL_22;
  v28 = a7;
  if ((a8 & 1) != 0)
    v28 = -INFINITY;
  v29 = a10;
  if ((a11 & 1) != 0)
    v29 = v28;
  v30 = a12;
  if ((a13 & 1) != 0)
    v30 = v29;
  if (v28 > v29 || v29 > v30)
  {
LABEL_22:
    v44 = a5;
    v45 = a7;
    v43 = a3;
    v42 = a1;
    v41 = v20;
    v32 = static os_log_type_t.fault.getter(*(_QWORD *)&a1);
    v33 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v32, &dword_0, v33, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v17 = a15;
    v20 = v41;
    v19 = a10;
    a1 = v42;
    a3 = v43;
    v18 = a12;
    a5 = v44;
    a7 = v45;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v46, *(_QWORD *)&a1, v20, *(_QWORD *)&a3, v22, *(_QWORD *)&a5, v24, *(_QWORD *)&a7, v25, *(_QWORD *)&v19, a11 & 1, *(_QWORD *)&v18, a13 & 1, a14, v17);
  v34 = v15[1];
  v49 = *v15;
  v50 = v34;
  sub_9D38DC((uint64_t)&v49, (uint64_t)v52);
  v51 = *((_QWORD *)&v50 + 1);
  v47 = *((_QWORD *)v15 + 4);
  v48 = *((_BYTE *)v15 + 40);
  v35 = v15[1];
  *a9 = *v15;
  a9[1] = v35;
  *(_OWORD *)((char *)a9 + 25) = *(__int128 *)((char *)v15 + 25);
  v36 = v46[6];
  v37 = v46[4];
  a9[8] = v46[5];
  a9[9] = v36;
  v38 = v46[1];
  a9[3] = v46[0];
  a9[4] = v38;
  v39 = v46[2];
  a9[6] = v46[3];
  a9[7] = v37;
  a9[5] = v39;
  sub_9D3918((uint64_t)v52);
  sub_94FF8(&v51);
  return sub_3B3AF4(&v47);
}

uint64_t sub_9C0594@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  _OWORD *v15;
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v28;
  double v29;
  double v30;
  uint64_t v32;
  void *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  unsigned int v40;
  double v41;
  double v42;
  double v43;
  double v44;
  _OWORD v45[7];

  v17 = a15;
  v18 = a12;
  v19 = a10;
  v20 = a2 & 1;
  v21 = a1;
  if ((_DWORD)v20)
    v21 = -INFINITY;
  v22 = a4 & 1;
  v23 = a3;
  if ((a4 & 1) != 0)
    v23 = v21;
  v24 = a6 & 1;
  v25 = a8 & 1;
  v26 = a5;
  if ((a6 & 1) != 0)
    v26 = v23;
  if (v21 > v23 || v23 > v26)
    goto LABEL_22;
  v28 = a7;
  if ((a8 & 1) != 0)
    v28 = -INFINITY;
  v29 = a10;
  if ((a11 & 1) != 0)
    v29 = v28;
  v30 = a12;
  if ((a13 & 1) != 0)
    v30 = v29;
  if (v28 > v29 || v29 > v30)
  {
LABEL_22:
    v43 = a5;
    v44 = a7;
    v42 = a3;
    v41 = a1;
    v40 = v20;
    v32 = static os_log_type_t.fault.getter(*(_QWORD *)&a1);
    v33 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v32, &dword_0, v33, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v17 = a15;
    v20 = v40;
    v19 = a10;
    a1 = v41;
    a3 = v42;
    v18 = a12;
    a5 = v43;
    a7 = v44;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v45, *(_QWORD *)&a1, v20, *(_QWORD *)&a3, v22, *(_QWORD *)&a5, v24, *(_QWORD *)&a7, v25, *(_QWORD *)&v19, a11 & 1, *(_QWORD *)&v18, a13 & 1, a14, v17);
  v34 = v15[3];
  a9[2] = v15[2];
  a9[3] = v34;
  *(_OWORD *)((char *)a9 + 57) = *(_OWORD *)((char *)v15 + 57);
  v35 = v15[1];
  *a9 = *v15;
  a9[1] = v35;
  v36 = v45[5];
  a9[9] = v45[4];
  a9[10] = v36;
  a9[11] = v45[6];
  v37 = v45[1];
  a9[5] = v45[0];
  a9[6] = v37;
  v38 = v45[3];
  a9[7] = v45[2];
  a9[8] = v38;
  return sub_9DB018((uint64_t)v15);
}

uint64_t sub_9C0740@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  const void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  double v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  double v28;
  double v30;
  double v31;
  double v32;
  uint64_t v34;
  void *v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  double v40;
  double v41;
  double v42;
  double v43;
  _OWORD v45[7];

  v16 = v15;
  v17 = a9;
  v18 = a15;
  v19 = a12;
  v20 = a10;
  v21 = a2 & 1;
  v22 = a1;
  if ((a2 & 1) != 0)
    v22 = -INFINITY;
  v23 = a4 & 1;
  v24 = a3;
  if ((a4 & 1) != 0)
    v24 = v22;
  v25 = a6 & 1;
  v26 = a8 & 1;
  v27 = a13 & 1;
  v28 = a5;
  if ((a6 & 1) != 0)
    v28 = v24;
  if (v22 > v24 || v24 > v28)
    goto LABEL_22;
  v30 = a7;
  if ((a8 & 1) != 0)
    v30 = -INFINITY;
  v31 = a10;
  if ((a11 & 1) != 0)
    v31 = v30;
  v32 = a12;
  if ((a13 & 1) != 0)
    v32 = v31;
  if (v30 > v31 || v31 > v32)
  {
LABEL_22:
    v43 = a7;
    v42 = a5;
    v40 = a1;
    v41 = a3;
    v34 = static os_log_type_t.fault.getter(*(_QWORD *)&a1);
    v35 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v34, &dword_0, v35, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v27 = a13 & 1;
    v18 = a15;
    v20 = a10;
    a1 = v40;
    a3 = v41;
    v19 = a12;
    a5 = v42;
    a7 = v43;
    v17 = a9;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v45, *(_QWORD *)&a1, v21, *(_QWORD *)&a3, v23, *(_QWORD *)&a5, v25, *(_QWORD *)&a7, v26, *(_QWORD *)&v20, a11 & 1, *(_QWORD *)&v19, v27, a14, v18);
  memcpy((void *)v17, v16, 0x1B1uLL);
  v36 = v45[5];
  *(_OWORD *)(v17 + 504) = v45[4];
  *(_OWORD *)(v17 + 520) = v36;
  *(_OWORD *)(v17 + 536) = v45[6];
  v37 = v45[1];
  *(_OWORD *)(v17 + 440) = v45[0];
  *(_OWORD *)(v17 + 456) = v37;
  v38 = v45[3];
  *(_OWORD *)(v17 + 472) = v45[2];
  *(_OWORD *)(v17 + 488) = v38;
  return sub_270928((uint64_t)v16);
}

double sub_9C08F0@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_9C0948(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, type metadata accessor for JSSearchLandingUpsellCompactContentView, &qword_14BC650).n128_u64[0];
  return result;
}

__n128 sub_9C0948@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t (*a16)(_QWORD), uint64_t *a17)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  double v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  double v33;
  double v34;
  double v35;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __n128 result;
  unsigned int v45;
  unsigned int v46;
  double v47;
  double v48;
  double v49;
  double v50;
  _OWORD v51[7];

  v18 = v17;
  v19 = a9;
  v20 = a17;
  v22 = a14;
  v21 = a15;
  v23 = a12;
  v24 = a10;
  v25 = a2 & 1;
  v26 = a1;
  if ((_DWORD)v25)
    v26 = -INFINITY;
  v27 = a4 & 1;
  v28 = a3;
  if ((_DWORD)v27)
    v28 = v26;
  v29 = a6 & 1;
  v30 = a8 & 1;
  v31 = a5;
  if ((a6 & 1) != 0)
    v31 = v28;
  if (v26 > v28 || v28 > v31)
    goto LABEL_22;
  v33 = a7;
  if ((a8 & 1) != 0)
    v33 = -INFINITY;
  v34 = a10;
  if ((a11 & 1) != 0)
    v34 = v33;
  v35 = a12;
  if ((a13 & 1) != 0)
    v35 = v34;
  if (v33 > v34 || v34 > v35)
  {
LABEL_22:
    v49 = a5;
    v50 = a7;
    v47 = a3;
    v48 = a1;
    v46 = v25;
    v45 = v27;
    v38 = static os_log_type_t.fault.getter(*(_QWORD *)&a1);
    v39 = (void *)static Log.runtimeIssuesLog.getter();
    v40 = v38;
    v19 = a9;
    os_log(_:dso:log:_:_:)(v40, &dword_0, v39, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v27 = v45;
    v22 = a14;
    v21 = a15;
    v25 = v46;
    v24 = a10;
    v23 = a12;
    a3 = v47;
    a1 = v48;
    a5 = v49;
    a7 = v50;
    v20 = a17;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v51, *(_QWORD *)&a1, v25, *(_QWORD *)&a3, v27, *(_QWORD *)&a5, v29, *(_QWORD *)&a7, v30, *(_QWORD *)&v24, a11 & 1, *(_QWORD *)&v23, a13 & 1, v22, v21);
  sub_5BDB8(v18, v19, a16);
  v41 = v19 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(v20) + 36);
  v42 = v51[5];
  *(_OWORD *)(v41 + 64) = v51[4];
  *(_OWORD *)(v41 + 80) = v42;
  *(_OWORD *)(v41 + 96) = v51[6];
  v43 = v51[1];
  *(_OWORD *)v41 = v51[0];
  *(_OWORD *)(v41 + 16) = v43;
  result = (__n128)v51[3];
  *(_OWORD *)(v41 + 32) = v51[2];
  *(__n128 *)(v41 + 48) = result;
  return result;
}

double sub_9C0B14@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_9C0948(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, type metadata accessor for JSSearchLandingUpsellRegularContentView, &qword_14BC638).n128_u64[0];
  return result;
}

uint64_t sub_9C0B6C@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19)
{
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  double v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  double v34;
  double v36;
  double v37;
  double v38;
  uint64_t v40;
  void *v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  unsigned int v46;
  unsigned int v47;
  double v48;
  double v49;
  double v50;
  double v51;
  _OWORD v52[7];

  v20 = a19;
  v21 = a18;
  v22 = a17;
  v24 = a14;
  v23 = a15;
  v25 = a12;
  v26 = a10;
  v27 = a2 & 1;
  v28 = a1;
  if ((_DWORD)v27)
    v28 = -INFINITY;
  v29 = a4 & 1;
  v30 = a3;
  if ((_DWORD)v29)
    v30 = v28;
  v31 = a6 & 1;
  v32 = a8 & 1;
  v33 = a13 & 1;
  v34 = a5;
  if ((a6 & 1) != 0)
    v34 = v30;
  if (v28 > v30 || v30 > v34)
    goto LABEL_22;
  v36 = a7;
  if ((a8 & 1) != 0)
    v36 = -INFINITY;
  v37 = a10;
  if ((a11 & 1) != 0)
    v37 = v36;
  v38 = a12;
  if ((a13 & 1) != 0)
    v38 = v37;
  if (v36 > v37 || v37 > v38)
  {
LABEL_22:
    v50 = a7;
    v51 = a5;
    v48 = a1;
    v49 = a3;
    v47 = v27;
    v46 = v29;
    v40 = static os_log_type_t.fault.getter(*(_QWORD *)&a1);
    v41 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v40, &dword_0, v41, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v33 = a13 & 1;
    v29 = v46;
    v24 = a14;
    v23 = a15;
    v27 = v47;
    v26 = a10;
    v25 = a12;
    a1 = v48;
    a3 = v49;
    a7 = v50;
    a5 = v51;
    v21 = a18;
    v20 = a19;
    v22 = a17;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v52, *(_QWORD *)&a1, v27, *(_QWORD *)&a3, v29, *(_QWORD *)&a5, v31, *(_QWORD *)&a7, v32, *(_QWORD *)&v26, a11 & 1, *(_QWORD *)&v25, v33, v24, v23);
  *(_QWORD *)a9 = a16;
  *(_QWORD *)(a9 + 8) = v22;
  *(_BYTE *)(a9 + 16) = v21 & 1;
  *(_QWORD *)(a9 + 24) = v20;
  v42 = v52[5];
  *(_OWORD *)(a9 + 96) = v52[4];
  *(_OWORD *)(a9 + 112) = v42;
  *(_OWORD *)(a9 + 128) = v52[6];
  v43 = v52[1];
  *(_OWORD *)(a9 + 32) = v52[0];
  *(_OWORD *)(a9 + 48) = v43;
  v44 = v52[3];
  *(_OWORD *)(a9 + 64) = v52[2];
  *(_OWORD *)(a9 + 80) = v44;
  sub_AF8D8(a16, v22, v21 & 1);
  return swift_bridgeObjectRetain();
}

double sub_9C0D4C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_9C0DA4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_14BF758, &qword_14BFC60).n128_u64[0];
  return result;
}

__n128 sub_9C0DA4@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  double v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  double v33;
  double v34;
  double v35;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __n128 result;
  unsigned int v45;
  unsigned int v46;
  double v47;
  double v48;
  double v49;
  double v50;
  _OWORD v51[7];

  v18 = v17;
  v19 = a9;
  v20 = a17;
  v22 = a14;
  v21 = a15;
  v23 = a12;
  v24 = a10;
  v25 = a2 & 1;
  v26 = a1;
  if ((_DWORD)v25)
    v26 = -INFINITY;
  v27 = a4 & 1;
  v28 = a3;
  if ((_DWORD)v27)
    v28 = v26;
  v29 = a6 & 1;
  v30 = a8 & 1;
  v31 = a5;
  if ((a6 & 1) != 0)
    v31 = v28;
  if (v26 > v28 || v28 > v31)
    goto LABEL_22;
  v33 = a7;
  if ((a8 & 1) != 0)
    v33 = -INFINITY;
  v34 = a10;
  if ((a11 & 1) != 0)
    v34 = v33;
  v35 = a12;
  if ((a13 & 1) != 0)
    v35 = v34;
  if (v33 > v34 || v34 > v35)
  {
LABEL_22:
    v49 = a5;
    v50 = a7;
    v47 = a3;
    v48 = a1;
    v46 = v25;
    v45 = v27;
    v38 = static os_log_type_t.fault.getter(*(_QWORD *)&a1);
    v39 = (void *)static Log.runtimeIssuesLog.getter();
    v40 = v38;
    v19 = a9;
    os_log(_:dso:log:_:_:)(v40, &dword_0, v39, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v27 = v45;
    v22 = a14;
    v21 = a15;
    v25 = v46;
    v24 = a10;
    v23 = a12;
    a3 = v47;
    a1 = v48;
    a5 = v49;
    a7 = v50;
    v20 = a17;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v51, *(_QWORD *)&a1, v25, *(_QWORD *)&a3, v27, *(_QWORD *)&a5, v29, *(_QWORD *)&a7, v30, *(_QWORD *)&v24, a11 & 1, *(_QWORD *)&v23, a13 & 1, v22, v21);
  sub_5C238(v18, v19, a16);
  v41 = v19 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(v20) + 36);
  v42 = v51[5];
  *(_OWORD *)(v41 + 64) = v51[4];
  *(_OWORD *)(v41 + 80) = v42;
  *(_OWORD *)(v41 + 96) = v51[6];
  v43 = v51[1];
  *(_OWORD *)v41 = v51[0];
  *(_OWORD *)(v41 + 16) = v43;
  result = (__n128)v51[3];
  *(_OWORD *)(v41 + 32) = v51[2];
  *(__n128 *)(v41 + 48) = result;
  return result;
}

double sub_9C0F70@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_9C2624(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_14BF798, &qword_14BF7A0).n128_u64[0];
  return result;
}

double sub_9C0FC8@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_9C2624(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_14BF768, &qword_14BF770).n128_u64[0];
  return result;
}

double sub_9C1020@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_9C2624(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_14BFB78, &qword_14BFB80).n128_u64[0];
  return result;
}

double sub_9C1078@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_9C0DA4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_14BFB90, &qword_14BFC08).n128_u64[0];
  return result;
}

_QWORD *sub_9C10D0@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  __int128 *v15;
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v28;
  double v29;
  double v30;
  uint64_t v32;
  void *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  unsigned int v41;
  double v42;
  double v43;
  double v44;
  double v45;
  _OWORD v46[7];
  __int128 v47;
  char v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  _BYTE v52[32];

  v17 = a15;
  v18 = a12;
  v19 = a10;
  v20 = a2 & 1;
  v21 = a1;
  if ((_DWORD)v20)
    v21 = -INFINITY;
  v22 = a4 & 1;
  v23 = a3;
  if ((a4 & 1) != 0)
    v23 = v21;
  v24 = a6 & 1;
  v25 = a8 & 1;
  v26 = a5;
  if ((a6 & 1) != 0)
    v26 = v23;
  if (v21 > v23 || v23 > v26)
    goto LABEL_22;
  v28 = a7;
  if ((a8 & 1) != 0)
    v28 = -INFINITY;
  v29 = a10;
  if ((a11 & 1) != 0)
    v29 = v28;
  v30 = a12;
  if ((a13 & 1) != 0)
    v30 = v29;
  if (v28 > v29 || v29 > v30)
  {
LABEL_22:
    v44 = a5;
    v45 = a7;
    v43 = a3;
    v42 = a1;
    v41 = v20;
    v32 = static os_log_type_t.fault.getter(*(_QWORD *)&a1);
    v33 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v32, &dword_0, v33, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v17 = a15;
    v20 = v41;
    v19 = a10;
    a1 = v42;
    a3 = v43;
    v18 = a12;
    a5 = v44;
    a7 = v45;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v46, *(_QWORD *)&a1, v20, *(_QWORD *)&a3, v22, *(_QWORD *)&a5, v24, *(_QWORD *)&a7, v25, *(_QWORD *)&v19, a11 & 1, *(_QWORD *)&v18, a13 & 1, a14, v17);
  v34 = v15[1];
  v49 = *v15;
  v50 = v34;
  sub_9D38DC((uint64_t)&v49, (uint64_t)v52);
  v36 = v15[1];
  v47 = v15[2];
  v35 = v47;
  *(_OWORD *)a9 = *v15;
  *(_OWORD *)(a9 + 16) = v36;
  *(_OWORD *)(a9 + 32) = v35;
  *(_OWORD *)(a9 + 152) = v46[6];
  v37 = v46[4];
  *(_OWORD *)(a9 + 136) = v46[5];
  *(_OWORD *)(a9 + 120) = v37;
  v38 = v46[2];
  *(_OWORD *)(a9 + 104) = v46[3];
  v39 = v46[1];
  *(_OWORD *)(a9 + 56) = v46[0];
  v51 = *((_QWORD *)&v50 + 1);
  v48 = *((_BYTE *)v15 + 48);
  *(_BYTE *)(a9 + 48) = v48;
  *(_OWORD *)(a9 + 72) = v39;
  *(_OWORD *)(a9 + 88) = v38;
  sub_9D3918((uint64_t)v52);
  sub_94FF8(&v51);
  return sub_3B3AF4(&v47);
}

double sub_9C12B4@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_9C0DA4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_14BFBF8, &qword_14BFBB8).n128_u64[0];
  return result;
}

double sub_9C130C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_9C0DA4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_14BF2E0, &qword_14BF2E8).n128_u64[0];
  return result;
}

double sub_9C1364@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_9C0DA4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_14BF2B8, &qword_14BF2C0).n128_u64[0];
  return result;
}

uint64_t sub_9C13BC@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v28;
  double v29;
  double v30;
  uint64_t v32;
  void *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  unsigned int v38;
  double v39;
  double v40;
  double v41;
  double v42;
  _OWORD v43[7];

  v17 = a15;
  v18 = a12;
  v19 = a10;
  v20 = a2 & 1;
  v21 = a1;
  if ((_DWORD)v20)
    v21 = -INFINITY;
  v22 = a4 & 1;
  v23 = a3;
  if ((a4 & 1) != 0)
    v23 = v21;
  v24 = a6 & 1;
  v25 = a8 & 1;
  v26 = a5;
  if ((a6 & 1) != 0)
    v26 = v23;
  if (v21 > v23 || v23 > v26)
    goto LABEL_22;
  v28 = a7;
  if ((a8 & 1) != 0)
    v28 = -INFINITY;
  v29 = a10;
  if ((a11 & 1) != 0)
    v29 = v28;
  v30 = a12;
  if ((a13 & 1) != 0)
    v30 = v29;
  if (v28 > v29 || v29 > v30)
  {
LABEL_22:
    v42 = a7;
    v40 = a1;
    v41 = a5;
    v39 = a3;
    v38 = v20;
    v32 = static os_log_type_t.fault.getter();
    v33 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v32, &dword_0, v33, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v17 = a15;
    v20 = v38;
    v19 = a10;
    a3 = v39;
    a1 = v40;
    a5 = v41;
    v18 = a12;
    a7 = v42;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v43, *(_QWORD *)&a1, v20, *(_QWORD *)&a3, v22, *(_QWORD *)&a5, v24, *(_QWORD *)&a7, v25, *(_QWORD *)&v19, a11 & 1, *(_QWORD *)&v18, a13 & 1, a14, v17);
  v34 = v43[2];
  *(_OWORD *)(a9 + 56) = v43[3];
  v35 = v43[5];
  *(_OWORD *)(a9 + 72) = v43[4];
  *(_OWORD *)(a9 + 88) = v35;
  *(_OWORD *)(a9 + 104) = v43[6];
  v36 = v43[1];
  *(_OWORD *)(a9 + 8) = v43[0];
  *(_OWORD *)(a9 + 24) = v36;
  *(_QWORD *)a9 = a16;
  *(_OWORD *)(a9 + 40) = v34;
  return swift_retain(a16);
}

double sub_9C1564@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_9C0DA4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_14C2350, &qword_14C2490).n128_u64[0];
  return result;
}

double sub_9C15BC@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_9C0DA4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_14C7640, &qword_14C7628).n128_u64[0];
  return result;
}

double sub_9C1614@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_9C0DA4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_14C8BF0, &qword_14C8BF8).n128_u64[0];
  return result;
}

double sub_9C166C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_9C0DA4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_14D4190, &qword_14D4198).n128_u64[0];
  return result;
}

double sub_9C16C4@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_9C0DA4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_14D4248, &qword_14D4250).n128_u64[0];
  return result;
}

double sub_9C171C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_9C0DA4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_14D4210, &qword_14D4218).n128_u64[0];
  return result;
}

double sub_9C1774@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_9C0DA4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_14D9AC8, &qword_14D9AD0).n128_u64[0];
  return result;
}

double sub_9C17CC@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_9C0DA4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_14DCF98, &qword_14DCFA0).n128_u64[0];
  return result;
}

double sub_9C1824@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_9C0DA4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_14E0240, &qword_14E0248).n128_u64[0];
  return result;
}

double sub_9C187C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_9C0DA4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_14E0218, &qword_14E0288).n128_u64[0];
  return result;
}

double sub_9C18D4@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_9C0DA4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_14E0C78, &qword_14E0C80).n128_u64[0];
  return result;
}

double sub_9C192C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_9C0DA4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_14E0D60, &qword_14E0D68).n128_u64[0];
  return result;
}

double sub_9C1984@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_9C0DA4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_14E0AB8, &qword_14E09D0).n128_u64[0];
  return result;
}

double sub_9C19DC@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_9C0DA4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_14E0B48, &qword_14E09E0).n128_u64[0];
  return result;
}

double sub_9C1A34@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_9C0DA4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_14E0B38, &qword_14E0B40).n128_u64[0];
  return result;
}

double sub_9C1A8C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_9C0DA4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_14E1030, &qword_14E1038).n128_u64[0];
  return result;
}

uint64_t sub_9C1AE4@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  _OWORD *v15;
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v28;
  double v29;
  double v30;
  uint64_t v32;
  void *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  unsigned int v40;
  double v41;
  double v42;
  double v43;
  double v44;
  _OWORD v45[7];

  v17 = a15;
  v18 = a12;
  v19 = a10;
  v20 = a2 & 1;
  v21 = a1;
  if ((_DWORD)v20)
    v21 = -INFINITY;
  v22 = a4 & 1;
  v23 = a3;
  if ((a4 & 1) != 0)
    v23 = v21;
  v24 = a6 & 1;
  v25 = a8 & 1;
  v26 = a5;
  if ((a6 & 1) != 0)
    v26 = v23;
  if (v21 > v23 || v23 > v26)
    goto LABEL_22;
  v28 = a7;
  if ((a8 & 1) != 0)
    v28 = -INFINITY;
  v29 = a10;
  if ((a11 & 1) != 0)
    v29 = v28;
  v30 = a12;
  if ((a13 & 1) != 0)
    v30 = v29;
  if (v28 > v29 || v29 > v30)
  {
LABEL_22:
    v43 = a5;
    v44 = a7;
    v42 = a3;
    v41 = a1;
    v40 = v20;
    v32 = static os_log_type_t.fault.getter(*(_QWORD *)&a1);
    v33 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v32, &dword_0, v33, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v17 = a15;
    v20 = v40;
    v19 = a10;
    a1 = v41;
    a3 = v42;
    v18 = a12;
    a5 = v43;
    a7 = v44;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v45, *(_QWORD *)&a1, v20, *(_QWORD *)&a3, v22, *(_QWORD *)&a5, v24, *(_QWORD *)&a7, v25, *(_QWORD *)&v19, a11 & 1, *(_QWORD *)&v18, a13 & 1, a14, v17);
  v34 = v15[3];
  a9[2] = v15[2];
  a9[3] = v34;
  *(_OWORD *)((char *)a9 + 57) = *(_OWORD *)((char *)v15 + 57);
  v35 = v15[1];
  *a9 = *v15;
  a9[1] = v35;
  v36 = v45[5];
  a9[9] = v45[4];
  a9[10] = v36;
  a9[11] = v45[6];
  v37 = v45[1];
  a9[5] = v45[0];
  a9[6] = v37;
  v38 = v45[3];
  a9[7] = v45[2];
  a9[8] = v38;
  return sub_3D2080((uint64_t)v15);
}

double sub_9C1C90@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_9C0DA4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_14D9B18, &qword_14E0720).n128_u64[0];
  return result;
}

double sub_9C1CE8@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_9C2624(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_14E55E8, &qword_14E55F0).n128_u64[0];
  return result;
}

double sub_9C1D40@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_9C2624(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_14E9688, &qword_14E9670).n128_u64[0];
  return result;
}

double sub_9C1D98@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_9C0DA4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_14EC0A0, &qword_14EC0A8).n128_u64[0];
  return result;
}

double sub_9C1DF0@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_9C0DA4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_14EC060, &qword_14EC068).n128_u64[0];
  return result;
}

double sub_9C1E48@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_9C0DA4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_14EC118, &qword_14EC100).n128_u64[0];
  return result;
}

double sub_9C1EA0@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_9C0DA4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_14EDBA0, &qword_14EDBA8).n128_u64[0];
  return result;
}

double sub_9C1EF8@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_9C0DA4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_14EDBB0, &qword_14EDBB8).n128_u64[0];
  return result;
}

__n128 sub_9C1F50@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  char v18;
  uint64_t v19;
  double v20;
  double v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  double v30;
  double v31;
  double v32;
  uint64_t v34;
  void *v35;
  __int128 v36;
  __int128 v37;
  __n128 result;
  unsigned int v39;
  unsigned int v40;
  double v41;
  double v42;
  double v43;
  double v44;
  _OWORD v45[7];

  v18 = a17;
  v19 = a15;
  v20 = a12;
  v21 = a10;
  v22 = a2 & 1;
  v23 = a1;
  if ((_DWORD)v22)
    v23 = -INFINITY;
  v24 = a4 & 1;
  v25 = a3;
  if ((_DWORD)v24)
    v25 = v23;
  v26 = a6 & 1;
  v27 = a8 & 1;
  v28 = a5;
  if ((a6 & 1) != 0)
    v28 = v25;
  if (v23 > v25 || v25 > v28)
    goto LABEL_22;
  v30 = a7;
  if ((a8 & 1) != 0)
    v30 = -INFINITY;
  v31 = a10;
  if ((a11 & 1) != 0)
    v31 = v30;
  v32 = a12;
  if ((a13 & 1) != 0)
    v32 = v31;
  if (v30 > v31 || v31 > v32)
  {
LABEL_22:
    v43 = a5;
    v44 = a7;
    v41 = a1;
    v42 = a3;
    v39 = v24;
    v40 = v22;
    v34 = static os_log_type_t.fault.getter();
    v35 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v34, &dword_0, v35, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v24 = v39;
    v22 = v40;
    v19 = a15;
    v21 = a10;
    v20 = a12;
    a1 = v41;
    a3 = v42;
    a5 = v43;
    v18 = a17;
    a7 = v44;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v45, *(_QWORD *)&a1, v22, *(_QWORD *)&a3, v24, *(_QWORD *)&a5, v26, *(_QWORD *)&a7, v27, *(_QWORD *)&v21, a11 & 1, *(_QWORD *)&v20, a13 & 1, a14, v19);
  *(_QWORD *)a9 = a16;
  *(_BYTE *)(a9 + 8) = v18 & 1;
  v36 = v45[5];
  *(_OWORD *)(a9 + 80) = v45[4];
  *(_OWORD *)(a9 + 96) = v36;
  *(_OWORD *)(a9 + 112) = v45[6];
  v37 = v45[1];
  *(_OWORD *)(a9 + 16) = v45[0];
  *(_OWORD *)(a9 + 32) = v37;
  result = (__n128)v45[3];
  *(_OWORD *)(a9 + 48) = v45[2];
  *(__n128 *)(a9 + 64) = result;
  return result;
}

uint64_t sub_9C20F8@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v28;
  double v29;
  double v30;
  uint64_t v32;
  void *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  unsigned int v43;
  double v44;
  double v45;
  double v46;
  double v47;
  _OWORD v48[7];

  v17 = a15;
  v18 = a12;
  v19 = a10;
  v20 = a2 & 1;
  v21 = a1;
  if ((_DWORD)v20)
    v21 = -INFINITY;
  v22 = a4 & 1;
  v23 = a3;
  if ((a4 & 1) != 0)
    v23 = v21;
  v24 = a6 & 1;
  v25 = a8 & 1;
  v26 = a5;
  if ((a6 & 1) != 0)
    v26 = v23;
  if (v21 > v23 || v23 > v26)
    goto LABEL_22;
  v28 = a7;
  if ((a8 & 1) != 0)
    v28 = -INFINITY;
  v29 = a10;
  if ((a11 & 1) != 0)
    v29 = v28;
  v30 = a12;
  if ((a13 & 1) != 0)
    v30 = v29;
  if (v28 > v29 || v29 > v30)
  {
LABEL_22:
    v47 = a7;
    v45 = a1;
    v46 = a5;
    v44 = a3;
    v43 = v20;
    v32 = static os_log_type_t.fault.getter(*(_QWORD *)&a1);
    v33 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v32, &dword_0, v33, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v17 = a15;
    v19 = a10;
    v20 = v43;
    a3 = v44;
    a1 = v45;
    a5 = v46;
    v18 = a12;
    a7 = v47;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v48, *(_QWORD *)&a1, v20, *(_QWORD *)&a3, v22, *(_QWORD *)&a5, v24, *(_QWORD *)&a7, v25, *(_QWORD *)&v19, a11 & 1, *(_QWORD *)&v18, a13 & 1, a14, v17);
  v34 = *(_OWORD *)(v15 + 144);
  *(_OWORD *)(a9 + 128) = *(_OWORD *)(v15 + 128);
  *(_OWORD *)(a9 + 144) = v34;
  v35 = *(_OWORD *)(v15 + 80);
  *(_OWORD *)(a9 + 64) = *(_OWORD *)(v15 + 64);
  *(_OWORD *)(a9 + 80) = v35;
  v36 = *(_OWORD *)(v15 + 112);
  *(_OWORD *)(a9 + 96) = *(_OWORD *)(v15 + 96);
  *(_OWORD *)(a9 + 112) = v36;
  v37 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v15;
  *(_OWORD *)(a9 + 16) = v37;
  v38 = *(_OWORD *)(v15 + 48);
  *(_OWORD *)(a9 + 32) = *(_OWORD *)(v15 + 32);
  *(_OWORD *)(a9 + 48) = v38;
  v39 = v48[2];
  *(_OWORD *)(a9 + 216) = v48[3];
  v40 = v48[5];
  *(_OWORD *)(a9 + 232) = v48[4];
  *(_OWORD *)(a9 + 248) = v40;
  *(_OWORD *)(a9 + 264) = v48[6];
  v41 = v48[1];
  *(_OWORD *)(a9 + 168) = v48[0];
  *(_OWORD *)(a9 + 184) = v41;
  *(_BYTE *)(a9 + 160) = *(_BYTE *)(v15 + 160);
  *(_OWORD *)(a9 + 200) = v39;
  return sub_9D4EFC(v15);
}

double sub_9C22CC@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_9C0DA4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_14EDD30, &qword_14F1680).n128_u64[0];
  return result;
}

double sub_9C2324@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_9C0DA4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t *)&unk_14F1510, &qword_14EDD28).n128_u64[0];
  return result;
}

double sub_9C237C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_9C0DA4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_14EE028, &qword_14EE030).n128_u64[0];
  return result;
}

uint64_t sub_9C23D4@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v18;
  double v19;
  double v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  double v29;
  double v30;
  double v31;
  uint64_t v33;
  void *v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  unsigned int v39;
  unsigned int v40;
  double v41;
  double v42;
  double v43;
  double v44;
  _OWORD v45[7];

  v18 = a15;
  v19 = a12;
  v20 = a10;
  v21 = a2 & 1;
  v22 = a1;
  if ((_DWORD)v21)
    v22 = -INFINITY;
  v23 = a4 & 1;
  v24 = a3;
  if ((_DWORD)v23)
    v24 = v22;
  v25 = a6 & 1;
  v26 = a8 & 1;
  v27 = a5;
  if ((a6 & 1) != 0)
    v27 = v24;
  if (v22 > v24 || v24 > v27)
    goto LABEL_22;
  v29 = a7;
  if ((a8 & 1) != 0)
    v29 = -INFINITY;
  v30 = a10;
  if ((a11 & 1) != 0)
    v30 = v29;
  v31 = a12;
  if ((a13 & 1) != 0)
    v31 = v30;
  if (v29 > v30 || v30 > v31)
  {
LABEL_22:
    v43 = a7;
    v44 = a5;
    v41 = a3;
    v42 = a1;
    v39 = v23;
    v40 = v21;
    v33 = static os_log_type_t.fault.getter();
    v34 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v33, &dword_0, v34, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v23 = v39;
    v21 = v40;
    v18 = a15;
    v20 = a10;
    v19 = a12;
    a3 = v41;
    a1 = v42;
    a7 = v43;
    a5 = v44;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v45, *(_QWORD *)&a1, v21, *(_QWORD *)&a3, v23, *(_QWORD *)&a5, v25, *(_QWORD *)&a7, v26, *(_QWORD *)&v20, a11 & 1, *(_QWORD *)&v19, a13 & 1, a14, v18);
  *(_QWORD *)a9 = a16;
  *(_QWORD *)(a9 + 8) = a17;
  v35 = v45[5];
  *(_OWORD *)(a9 + 80) = v45[4];
  *(_OWORD *)(a9 + 96) = v35;
  *(_OWORD *)(a9 + 112) = v45[6];
  v36 = v45[1];
  *(_OWORD *)(a9 + 16) = v45[0];
  *(_OWORD *)(a9 + 32) = v36;
  v37 = v45[3];
  *(_OWORD *)(a9 + 48) = v45[2];
  *(_OWORD *)(a9 + 64) = v37;
  swift_retain(a17);
  return swift_retain(a16);
}

double sub_9C2574@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_9C0DA4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_14EDD08, &qword_14EDD10).n128_u64[0];
  return result;
}

double sub_9C25CC@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_9C2624(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_14EDD18, &qword_14EDD20).n128_u64[0];
  return result;
}

__n128 sub_9C2624@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  double v32;
  double v33;
  double v34;
  uint64_t v36;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __n128 result;
  unsigned int v46;
  double v47;
  double v48;
  double v49;
  double v50;
  _OWORD v51[7];

  v18 = a9;
  v19 = a16;
  v21 = a14;
  v20 = a15;
  v22 = a12;
  v23 = a10;
  v24 = a2 & 1;
  v25 = a1;
  if ((_DWORD)v24)
    v25 = -INFINITY;
  v26 = a4 & 1;
  v27 = a3;
  if ((_DWORD)v26)
    v27 = v25;
  v28 = a6 & 1;
  v29 = a8 & 1;
  v30 = a5;
  if ((a6 & 1) != 0)
    v30 = v27;
  if (v25 > v27 || v27 > v30)
    goto LABEL_22;
  v32 = a7;
  if ((a8 & 1) != 0)
    v32 = -INFINITY;
  v33 = a10;
  if ((a11 & 1) != 0)
    v33 = v32;
  v34 = a12;
  if ((a13 & 1) != 0)
    v34 = v33;
  if (v32 > v33 || v33 > v34)
  {
LABEL_22:
    v49 = a7;
    v50 = a5;
    v47 = a1;
    v48 = a3;
    v46 = v24;
    v36 = v26;
    v38 = static os_log_type_t.fault.getter(*(_QWORD *)&a1);
    v39 = (void *)static Log.runtimeIssuesLog.getter();
    v40 = v38;
    v18 = a9;
    os_log(_:dso:log:_:_:)(v40, &dword_0, v39, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v26 = v36;
    v21 = a14;
    v20 = a15;
    v24 = v46;
    v23 = a10;
    v22 = a12;
    a1 = v47;
    a3 = v48;
    a7 = v49;
    a5 = v50;
    v19 = a16;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v51, *(_QWORD *)&a1, v24, *(_QWORD *)&a3, v26, *(_QWORD *)&a5, v28, *(_QWORD *)&a7, v29, *(_QWORD *)&v23, a11 & 1, *(_QWORD *)&v22, a13 & 1, v21, v20);
  v41 = __swift_instantiateConcreteTypeFromMangledName(v19);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v18, v17, v41);
  v42 = v18 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(a17) + 36);
  v43 = v51[5];
  *(_OWORD *)(v42 + 64) = v51[4];
  *(_OWORD *)(v42 + 80) = v43;
  *(_OWORD *)(v42 + 96) = v51[6];
  v44 = v51[1];
  *(_OWORD *)v42 = v51[0];
  *(_OWORD *)(v42 + 16) = v44;
  result = (__n128)v51[3];
  *(_OWORD *)(v42 + 32) = v51[2];
  *(__n128 *)(v42 + 48) = result;
  return result;
}

uint64_t sub_9C2800()
{
  return EnvironmentValues.dynamicTypeSize.getter();
}

uint64_t sub_9C2820(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_9D2E9C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(char *))&EnvironmentValues.dynamicTypeSize.setter);
}

uint64_t sub_9C2834()
{
  return EnvironmentValues.horizontalSizeClass.getter();
}

uint64_t sub_9C2854(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E0470);
  __chkstk_darwin(v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5C238(a1, (uint64_t)v4, &qword_14E0470);
  return EnvironmentValues.horizontalSizeClass.setter(v4);
}

double sub_9C28D4@<D0>(char *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _OWORD *a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, char *, uint64_t);
  uint64_t v33;
  char *v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  __int128 v39;
  _OWORD *v40;
  __int128 v41;
  double result;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _OWORD *v52;
  _OWORD v53[4];

  v50 = a4;
  v51 = a5;
  v52 = a6;
  v9 = type metadata accessor for Song(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v48 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v43 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)&v43 - v16;
  v47 = a2;
  v49 = MusicLibrary.state<A>(for:)(a1, v9, &protocol witness table for Song);
  v18 = 0;
  v19 = 0;
  if ((a3 & 1) == 0)
  {
    v20 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
    v21 = (char *)objc_msgSend(v20, "userInterfaceIdiom");

    if (v21 == (_BYTE *)&dword_4 + 2)
    {
      v22 = (*(uint64_t (**)(char *, char *, uint64_t))(v10 + 16))(v17, a1, v9);
      v18 = Song.albumTitle.getter(v22);
      v19 = v23;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
    }
    else
    {
      v18 = 0;
      v19 = 0;
    }
  }
  v44 = v19;
  v46 = v18;
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v24(v17, (uint64_t)a1, v9);
  v24(v14, (uint64_t)a1, v9);
  v25 = *(unsigned __int8 *)(v10 + 80);
  v45 = v17;
  v26 = (v25 + 24) & ~v25;
  v27 = v25 | 7;
  v28 = v11 + 7;
  v29 = (v11 + 7 + v26) & 0xFFFFFFFFFFFFFFF8;
  v30 = swift_allocObject(&unk_1392918, v29 + 8, v25 | 7);
  *(_QWORD *)(v30 + 16) = v47;
  v31 = v30 + v26;
  v32 = *(void (**)(uint64_t, char *, uint64_t))(v10 + 32);
  v32(v31, v14, v9);
  v33 = v49;
  *(_QWORD *)(v30 + v29) = v49;
  v34 = v48;
  v32((uint64_t)v48, a1, v9);
  v35 = (v25 + 16) & ~v25;
  v36 = (v28 + v35) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 15) & 0xFFFFFFFFFFFFFFF8;
  v38 = swift_allocObject(&unk_1392940, v37 + 8, v27);
  v32(v38 + v35, v34, v9);
  *(_QWORD *)(v38 + v36) = v50;
  *(_QWORD *)(v38 + v37) = v33;
  Actions.GoToAlbum.Context.init<A>(item:subtitle:canGoToAlbum:goToAlbum:metricsReportingContext:)((uint64_t)v45, v46, v44, (uint64_t)sub_9D8EB0, v30, (uint64_t)&unk_14EE1F8, v38, v51, v53, v9, (uint64_t)&protocol witness table for Song);
  v39 = v53[1];
  v40 = v52;
  *v52 = v53[0];
  v40[1] = v39;
  v41 = v53[3];
  v40[2] = v53[2];
  v40[3] = v41;
  *(_QWORD *)&result = swift_retain(v33).n128_u64[0];
  return result;
}

unint64_t sub_9C2B84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __n128 v10;
  uint64_t v11;
  char v12;
  __n128 v13;
  uint64_t v14;
  char v15;
  uint64_t v17;

  v6 = type metadata accessor for Song(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MusicLibrary(0);
  v11 = static MusicLibrary.shared.getter(v10);
  v12 = static MusicLibrary.== infix(_:_:)(a1, v11);
  v13 = swift_release(v11);
  if ((v12 & 1) == 0)
    return 0xD00000000000001DLL;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))(v9, a2, v6, v13);
  swift_retain(a3);
  v15 = Song.supportsContainerNavigation(itemState:)(v14);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_release(a3);
  if ((v15 & 1) != 0)
    return 0;
  else
    return 0xD000000000000010;
}

uint64_t sub_9C2CB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v4 = type metadata accessor for MusicPropertySource(0);
  v3[5] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[6] = v5;
  v3[7] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Track(0);
  v3[8] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[9] = v7;
  v3[10] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Song(0);
  v3[11] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v3[12] = v9;
  v3[13] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_9C2D68, 0, 0);
}

uint64_t sub_9C2D68()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  _QWORD *v8;
  char *v10;

  v1 = v0[13];
  v3 = v0[10];
  v2 = v0[11];
  v4 = v0[8];
  v5 = v0[9];
  v6 = v0[7];
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[12] + 16);
  v7(v1, v0[2], v2);
  v7(v3, v1, v2);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v3, enum case for Track.song(_:), v4);
  MusicLibrary.ItemState.containerLoadingSource.getter(v6);
  v10 = (char *)&dword_14E7A50 + dword_14E7A50;
  v8 = (_QWORD *)swift_task_alloc(unk_14E7A54);
  v0[14] = v8;
  *v8 = v0;
  v8[1] = sub_9C2E48;
  return ((uint64_t (*)(_QWORD, _QWORD, _QWORD))v10)(v0[3], v0[10], v0[7]);
}

uint64_t sub_9C2E48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 72);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  v4 = *(_QWORD *)(*(_QWORD *)v0 + 56);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 64);
  v5 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  v6 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 112));
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch(sub_9C2ED8, 0, 0);
}

uint64_t sub_9C2ED8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 56);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(v1, *(_QWORD *)(v0 + 88));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_9C2F3C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t KeyPath;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  double v63;
  uint64_t v64;
  double v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  double v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __n128 v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  __n128 v94;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char v114;
  char v115;
  double v116;
  uint64_t v117;

  v2 = v1;
  v104 = type metadata accessor for PlaylistSongSuggestionsView(0);
  v110 = *(_QWORD *)(v104 - 8);
  __chkstk_darwin(v104);
  v111 = v4;
  v5 = (char *)&v96 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E0470);
  __chkstk_darwin(v6);
  v106 = (uint64_t)&v96 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v101);
  v9 = (uint64_t *)((char *)&v96 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EDB28);
  __chkstk_darwin(v10);
  v12 = (char *)&v96 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EDB30);
  __chkstk_darwin(v13);
  v15 = (char *)&v96 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EDB38);
  __chkstk_darwin(v16);
  v18 = (char *)&v96 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EDB40);
  __chkstk_darwin(v100);
  v103 = (char *)&v96 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EDB48);
  __chkstk_darwin(v102);
  v105 = (char *)&v96 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EDB50);
  __chkstk_darwin(v109);
  v108 = (uint64_t)&v96 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EDB58);
  v112 = *(_QWORD *)(v22 - 8);
  v113 = v22;
  __chkstk_darwin(v22);
  v107 = (char *)&v96 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = *(_QWORD *)(v1 + 8);
  v25 = swift_retain(v24);
  v26 = dispatch thunk of MusicSuggestedSongsViewModel.suggestedSongs.getter(v25);
  swift_release(v24);
  v27 = *(_QWORD *)(v26 + 16);
  v28 = swift_bridgeObjectRelease();
  if (v27)
  {
    v99 = v5;
    v29 = *(_QWORD *)(v2 + 24);
    KeyPath = swift_getKeyPath(&unk_108F290);
    v31 = swift_getKeyPath(&unk_108F2B8);
    swift_retain(v29);
    static Published.subscript.getter(&v117, v32, KeyPath, v31);
    swift_release(v29);
    swift_release(KeyPath);
    v28 = swift_release(v31);
    v34 = 1;
    if ((v117 & 1) == 0)
    {
      v98 = a1;
      *(_QWORD *)v12 = static HorizontalAlignment.leading.getter(v33);
      *((_QWORD *)v12 + 1) = 0;
      v12[16] = 0;
      v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EDB60);
      sub_9C3798(v2, (uint64_t)&v12[*(int *)(v35 + 44)]);
      v97 = v2;
      v36 = *(_QWORD *)(v2 + 24);
      v37 = swift_getKeyPath(&unk_108F2D8);
      v38 = swift_getKeyPath(&unk_108F300);
      swift_retain(v36);
      static Published.subscript.getter(&v116, v39, v37, v38);
      swift_release(v36);
      swift_release(v37);
      swift_release(v38);
      v40 = v116;
      v42 = static Alignment.center.getter(v41);
      sub_9C0DA4(0.0, 1, 0.0, 1, v40, 0, 0.0, 1, (uint64_t)v15, 0.0, 1, 0.0, 1, v42, v43, &qword_14EDB28, &qword_14EDB30);
      sub_56024((uint64_t)v12, &qword_14EDB28);
      if (qword_14ABDA8 != -1)
        swift_once(&qword_14ABDA8, sub_9D04B0);
      v44 = Color.init(_:)((id)qword_1581540);
      v45 = static Edge.Set.all.getter(v44);
      sub_5C238((uint64_t)v15, (uint64_t)v18, &qword_14EDB30);
      v46 = &v18[*(int *)(v16 + 36)];
      *(_QWORD *)v46 = v44;
      v46[8] = v45;
      sub_56024((uint64_t)v15, &qword_14EDB30);
      v47 = (uint64_t)v99;
      v48 = (uint64_t)v105;
      if (qword_14ABDA0 != -1)
        swift_once(&qword_14ABDA0, sub_9D0490);
      v49 = qword_1581538;
      v50 = (char *)v9 + *(int *)(v101 + 20);
      v51 = enum case for RoundedCornerStyle.continuous(_:);
      v52 = type metadata accessor for RoundedCornerStyle(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 104))(v50, v51, v52);
      *v9 = v49;
      v9[1] = v49;
      v53 = (uint64_t)v103;
      v54 = (uint64_t)&v103[*(int *)(v100 + 36)];
      sub_5BDB8((uint64_t)v9, v54, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
      *(_WORD *)(v54 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14DD170) + 36)) = 256;
      sub_5C238((uint64_t)v18, v53, &qword_14EDB38);
      sub_5C0DC((uint64_t)v9, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
      v55 = sub_56024((uint64_t)v18, &qword_14EDB38);
      v56 = static Edge.Set.top.getter(v55);
      v57 = v97;
      v58 = v106;
      sub_7249C4(v106);
      v59 = *(_QWORD *)(v57 + 24);
      v60 = swift_getKeyPath(&unk_108F320);
      v61 = swift_getKeyPath(&unk_108F348);
      swift_retain(v59);
      static Published.subscript.getter(&v115, v62, v60, v61);
      swift_release(v59);
      swift_release(v60);
      swift_release(v61);
      v63 = sub_9D3290(v58, v115);
      v64 = sub_56024(v58, &qword_14E0470);
      v65 = EdgeInsets.init(_all:)(v64, v63);
      v67 = v66;
      v69 = v68;
      v71 = v70;
      sub_5C238(v53, v48, &qword_14EDB40);
      v72 = v48 + *(int *)(v102 + 36);
      *(_BYTE *)v72 = v56;
      *(double *)(v72 + 8) = v65;
      *(_QWORD *)(v72 + 16) = v67;
      *(_QWORD *)(v72 + 24) = v69;
      *(_QWORD *)(v72 + 32) = v71;
      *(_BYTE *)(v72 + 40) = 0;
      v73 = sub_56024(v53, &qword_14EDB40);
      v74 = static Edge.Set.bottom.getter(v73);
      v75 = v74;
      if (qword_14ABD98 != -1)
        v74 = swift_once(&qword_14ABD98, sub_9D0470);
      v76 = EdgeInsets.init(_all:)(v74, *(double *)&qword_1581530);
      v78 = v77;
      v80 = v79;
      v82 = v81;
      v83 = v108;
      sub_5C238(v48, v108, &qword_14EDB48);
      v84 = v109;
      v85 = v83 + *(int *)(v109 + 36);
      *(_BYTE *)v85 = v75;
      *(double *)(v85 + 8) = v76;
      *(_QWORD *)(v85 + 16) = v78;
      *(_QWORD *)(v85 + 24) = v80;
      *(_QWORD *)(v85 + 32) = v82;
      *(_BYTE *)(v85 + 40) = 0;
      sub_56024(v48, &qword_14EDB48);
      v86 = *(_QWORD *)(v57 + 8);
      v87 = swift_retain(v86);
      v88 = dispatch thunk of MusicSuggestedSongsViewModel.isPerformingUserInitiatedRefresh.getter(v87);
      swift_release(v86);
      v114 = v88 & 1;
      sub_5BDB8(v57, v47, type metadata accessor for PlaylistSongSuggestionsView);
      v89 = *(unsigned __int8 *)(v110 + 80);
      v90 = (v89 + 16) & ~v89;
      v91 = swift_allocObject(&unk_13926E8, v90 + v111, v89 | 7);
      sub_5C04C(v47, v91 + v90, type metadata accessor for PlaylistSongSuggestionsView);
      v92 = sub_184F98(&qword_14EDB68, &qword_14EDB50, (void (*)(void))sub_9D3684);
      v93 = v107;
      View.onChange<A>(of:initial:_:)(&v114, 0, sub_9D3638, v91, v84, &type metadata for Bool, v92, &protocol witness table for Bool);
      sub_56024(v83, &qword_14EDB50);
      v94 = swift_release(v91);
      a1 = v98;
      (*(void (**)(uint64_t, char *, uint64_t, __n128))(v112 + 32))(v98, v93, v113, v94);
      v34 = 0;
    }
  }
  else
  {
    v34 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v112 + 56))(a1, v34, 1, v113, v28);
}

uint64_t sub_9C3798@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  _QWORD v54[2];
  char v55;

  v51 = a2;
  v49 = type metadata accessor for PlaylistSongSuggestionsView.ContentView(0);
  __chkstk_darwin(v49);
  v4 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v48 = (char *)&v45 - v6;
  v7 = type metadata accessor for PlaylistSongSuggestionsView.HeaderView(0);
  __chkstk_darwin(v7);
  v9 = (uint64_t *)((char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11.n128_f64[0] = __chkstk_darwin(v10);
  v13 = (char *)&v45 - v12;
  v14 = *(_QWORD *)(a1 + 8);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = type metadata accessor for MusicSuggestedSongsViewModel(0, v11);
  v47 = v16;
  v17 = sub_4DD24((unint64_t *)&unk_14E3FB8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicSuggestedSongsViewModel, (uint64_t)&protocol conformance descriptor for MusicSuggestedSongsViewModel);
  v46 = v17;
  swift_retain(v14);
  swift_retain(v15);
  *v9 = ObservedObject.init(wrappedValue:)(v14, v16, v17);
  v9[1] = v18;
  v19 = type metadata accessor for SuggestedSongsDataSource(0);
  v20 = sub_4DD24((unint64_t *)&unk_14EA220, type metadata accessor for SuggestedSongsDataSource, (uint64_t)&unk_108F254);
  v9[2] = ObservedObject.init(wrappedValue:)(v15, v19, v20);
  v9[3] = v21;
  v22 = (_QWORD *)((char *)v9 + *(int *)(v7 + 24));
  *v22 = swift_getKeyPath(&unk_108F368);
  v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14CD210);
  swift_storeEnumTagMultiPayload(v22, v23, 0);
  v50 = v13;
  sub_5C04C((uint64_t)v9, (uint64_t)v13, type metadata accessor for PlaylistSongSuggestionsView.HeaderView);
  v24 = *(_QWORD *)(a1 + 8);
  v25 = *(_QWORD *)(a1 + 24);
  v26 = *(_QWORD *)(a1 + 40);
  v52 = *(_BYTE *)(a1 + 32);
  v53 = v26;
  swift_retain(v24);
  swift_retain(v25);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EBFB0);
  State.projectedValue.getter(v54, v27);
  v28 = v54[0];
  v29 = v54[1];
  v30 = v55;
  v31 = v24;
  v32 = (uint64_t)v48;
  *(_QWORD *)v4 = ObservedObject.init(wrappedValue:)(v31, v47, v46);
  *((_QWORD *)v4 + 1) = v33;
  *((_QWORD *)v4 + 2) = ObservedObject.init(wrappedValue:)(v25, v19, v20);
  *((_QWORD *)v4 + 3) = v34;
  *((_QWORD *)v4 + 4) = v28;
  *((_QWORD *)v4 + 5) = v29;
  v4[48] = v30;
  v35 = v49;
  v36 = &v4[*(int *)(v49 + 28)];
  *(_QWORD *)v36 = swift_getKeyPath(&unk_108F398);
  v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
  swift_storeEnumTagMultiPayload(v36, v37, 0);
  v38 = &v4[*(int *)(v35 + 32)];
  *(_QWORD *)v38 = swift_getKeyPath(&unk_108F368);
  swift_storeEnumTagMultiPayload(v38, v23, 0);
  sub_5C04C((uint64_t)v4, v32, type metadata accessor for PlaylistSongSuggestionsView.ContentView);
  if (qword_14ABDB0 != -1)
    swift_once(&qword_14ABDB0, sub_9D05C4);
  v39 = qword_1581548;
  v40 = (uint64_t)v50;
  sub_5BDB8((uint64_t)v50, (uint64_t)v9, type metadata accessor for PlaylistSongSuggestionsView.HeaderView);
  sub_5BDB8(v32, (uint64_t)v4, type metadata accessor for PlaylistSongSuggestionsView.ContentView);
  v41 = v51;
  sub_5BDB8((uint64_t)v9, v51, type metadata accessor for PlaylistSongSuggestionsView.HeaderView);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EDB98);
  sub_5BDB8((uint64_t)v4, v41 + *(int *)(v42 + 48), type metadata accessor for PlaylistSongSuggestionsView.ContentView);
  v43 = v41 + *(int *)(v42 + 64);
  *(_QWORD *)v43 = v39;
  *(_BYTE *)(v43 + 8) = 0;
  sub_5C0DC(v32, type metadata accessor for PlaylistSongSuggestionsView.ContentView);
  sub_5C0DC(v40, type metadata accessor for PlaylistSongSuggestionsView.HeaderView);
  sub_5C0DC((uint64_t)v4, type metadata accessor for PlaylistSongSuggestionsView.ContentView);
  return sub_5C0DC((uint64_t)v9, type metadata accessor for PlaylistSongSuggestionsView.HeaderView);
}

uint64_t sub_9C3B48(uint64_t a1, char *a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[9];
  uint64_t v8;

  v3 = *a2;
  v4 = *(_QWORD *)(a3 + 40);
  v7[1] = *(_BYTE *)(a3 + 32);
  v8 = v4;
  v7[0] = v3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EBFB0);
  return State.wrappedValue.setter(v7, v5);
}

uint64_t sub_9C3B9C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char v26;
  double v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E0470);
  __chkstk_darwin(v3);
  v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EDDC0);
  __chkstk_darwin(v6);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EDDC8);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v8 = static VerticalAlignment.center.getter(v10);
  *((_QWORD *)v8 + 1) = 0;
  v8[16] = 1;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EDDD0);
  v14 = sub_9C3DE0(v1, (uint64_t)&v8[*(int *)(v13 + 44)]);
  v15 = static Edge.Set.leading.getter(v14);
  v16 = v15;
  if (qword_14ABDB8 != -1)
    v15 = swift_once(&qword_14ABDB8, sub_9D05E4);
  v17 = EdgeInsets.init(_all:)(v15, *(double *)&qword_1581550);
  v19 = v18;
  v21 = v20;
  v23 = v22;
  sub_5C238((uint64_t)v8, (uint64_t)v12, &qword_14EDDC0);
  v24 = &v12[*(int *)(v9 + 36)];
  *v24 = v16;
  *((double *)v24 + 1) = v17;
  *((_QWORD *)v24 + 2) = v19;
  *((_QWORD *)v24 + 3) = v21;
  *((_QWORD *)v24 + 4) = v23;
  v24[40] = 0;
  v25 = sub_56024((uint64_t)v8, &qword_14EDDC0);
  v26 = static Edge.Set.trailing.getter(v25);
  type metadata accessor for PlaylistSongSuggestionsView.HeaderView(0);
  sub_7249C4((uint64_t)v5);
  v27 = sub_9D5344((uint64_t)v5);
  v28 = sub_56024((uint64_t)v5, &qword_14E0470);
  v29 = EdgeInsets.init(_all:)(v28, v27);
  v31 = v30;
  v33 = v32;
  v35 = v34;
  sub_5C238((uint64_t)v12, a1, &qword_14EDDC8);
  v36 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14EDDD8) + 36);
  *(_BYTE *)v36 = v26;
  *(double *)(v36 + 8) = v29;
  *(_QWORD *)(v36 + 16) = v31;
  *(_QWORD *)(v36 + 24) = v33;
  *(_QWORD *)(v36 + 32) = v35;
  *(_BYTE *)(v36 + 40) = 0;
  return sub_56024((uint64_t)v12, &qword_14EDDC8);
}

uint64_t sub_9C3DE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  double v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _OWORD *v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  double v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD v123[3];
  __int128 v124;
  _OWORD v125[2];
  __int128 v126;
  __int128 v127;
  __int128 v128;
  _OWORD v129[2];
  uint64_t v130;
  char v131;
  char v132;
  char v133;
  char v134;
  __int128 v135;
  __int128 v136;
  _OWORD v137[3];
  __int128 v138;
  __int128 v139;
  __int128 v140;
  uint64_t v141;

  v105 = a1;
  v122 = a2;
  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v120 = (char *)&v101 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v4);
  v118 = (char *)&v101 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EDDE0);
  __chkstk_darwin(v6);
  v107 = (uint64_t)&v101 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EDDE8);
  __chkstk_darwin(v106);
  v109 = (char *)&v101 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EDDF0);
  __chkstk_darwin(v108);
  v110 = (char *)&v101 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EDDF8);
  __chkstk_darwin(v113);
  v115 = (uint64_t)&v101 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EDE00);
  __chkstk_darwin(v117);
  v116 = (char *)&v101 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EDE08);
  __chkstk_darwin(v12);
  v121 = (uint64_t)&v101 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v114 = (char *)&v101 - v15;
  v17 = __chkstk_darwin(v16);
  v119 = (uint64_t)&v101 - v18;
  v19 = type metadata accessor for AccessibilityChildBehavior(0, v17);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v101 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EDE10);
  v23 = *(_QWORD *)(v103 - 8);
  __chkstk_darwin(v103);
  v25 = (char *)&v101 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EDE18);
  __chkstk_darwin(v102);
  v27 = (char *)&v101 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EDE20);
  __chkstk_darwin(v104);
  v112 = (uint64_t)&v101 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v111 = (uint64_t)&v101 - v30;
  v32 = static HorizontalAlignment.leading.getter(v31);
  sub_9C47D8((uint64_t)&v135);
  v134 = 0;
  v133 = v136;
  v132 = BYTE8(v137[2]);
  v131 = v139;
  v124 = (unint64_t)v32;
  LOBYTE(v125[0]) = 0;
  *(_OWORD *)((char *)v125 + 8) = v135;
  BYTE8(v125[1]) = v136;
  *(_QWORD *)&v126 = *((_QWORD *)&v136 + 1);
  BYTE8(v126) = v137[0];
  v127 = *(_OWORD *)((char *)v137 + 8);
  v128 = *(_OWORD *)((char *)&v137[1] + 8);
  LOBYTE(v129[0]) = BYTE8(v137[2]);
  *(_OWORD *)((char *)v129 + 8) = v138;
  BYTE8(v129[1]) = v139;
  v130 = *((_QWORD *)&v139 + 1);
  static AccessibilityChildBehavior.combine.getter(v33);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EDE28);
  v35 = sub_5C150(&qword_14EDE30, &qword_14EDE28, (uint64_t)&protocol conformance descriptor for VStack<A>);
  View.accessibilityElement(children:)(v22, v34, v35);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  v139 = v129[0];
  v140 = v129[1];
  v141 = v130;
  v137[0] = v125[1];
  v137[1] = v126;
  v137[2] = v127;
  v138 = v128;
  v135 = v124;
  v136 = v125[0];
  v36 = sub_3B43C8((uint64_t)&v135);
  v37 = static Edge.Set.top.getter(v36);
  v38 = v37;
  if (qword_14ABDC0 != -1)
    v37 = swift_once(&qword_14ABDC0, sub_9D0604);
  v39 = EdgeInsets.init(_all:)(v37, *(double *)&qword_1581558);
  v41 = v40;
  v43 = v42;
  v45 = v44;
  v46 = v103;
  (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v27, v25, v103);
  v47 = &v27[*(int *)(v102 + 36)];
  *v47 = v38;
  *((double *)v47 + 1) = v39;
  *((_QWORD *)v47 + 2) = v41;
  *((_QWORD *)v47 + 3) = v43;
  *((_QWORD *)v47 + 4) = v45;
  v47[40] = 0;
  v48 = (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v25, v46);
  v49 = static Edge.Set.bottom.getter(v48);
  v50 = v49;
  if (qword_14ABDC8 != -1)
    v49 = swift_once(&qword_14ABDC8, sub_9D0624);
  v51 = EdgeInsets.init(_all:)(v49, *(double *)&qword_1581560);
  v53 = v52;
  v55 = v54;
  v57 = v56;
  v58 = v112;
  sub_5C238((uint64_t)v27, v112, &qword_14EDE18);
  v59 = v58 + *(int *)(v104 + 36);
  *(_BYTE *)v59 = v50;
  *(double *)(v59 + 8) = v51;
  *(_QWORD *)(v59 + 16) = v53;
  *(_QWORD *)(v59 + 24) = v55;
  *(_QWORD *)(v59 + 32) = v57;
  *(_BYTE *)(v59 + 40) = 0;
  sub_56024((uint64_t)v27, &qword_14EDE18);
  v60 = v111;
  sub_5C090(v58, v111, &qword_14EDE20);
  v61 = v107;
  v62 = sub_9C4C28(v105, v107);
  v64 = (uint64_t)v109;
  v63 = (uint64_t)v110;
  if (qword_14ABDF0 != -1)
    v62 = swift_once(&qword_14ABDF0, sub_9D06B8);
  v65 = qword_1581588;
  v66 = static Alignment.center.getter(v62);
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(&v124, v65, 0, 0, 1, 0, 1, v65, 0, 0, 1, 0, 1, v66, v67);
  sub_5C238(v61, v64, &qword_14EDDE0);
  v68 = (_OWORD *)(v64 + *(int *)(v106 + 36));
  v69 = v128;
  v68[4] = v127;
  v68[5] = v69;
  v68[6] = v129[0];
  v70 = v125[0];
  *v68 = v124;
  v68[1] = v70;
  v71 = v126;
  v68[2] = v125[1];
  v68[3] = v71;
  v72 = sub_56024(v61, &qword_14EDDE0);
  v73 = static Edge.Set.top.getter(v72);
  v74 = v73;
  if (qword_14ABDF8 != -1)
    v73 = swift_once(&qword_14ABDF8, sub_9D06D8);
  v75 = EdgeInsets.init(_all:)(v73, *(double *)&qword_1581590);
  v77 = v76;
  v79 = v78;
  v81 = v80;
  sub_5C238(v64, v63, &qword_14EDDE8);
  v82 = v63 + *(int *)(v108 + 36);
  *(_BYTE *)v82 = v74;
  *(double *)(v82 + 8) = v75;
  *(_QWORD *)(v82 + 16) = v77;
  *(_QWORD *)(v82 + 24) = v79;
  *(_QWORD *)(v82 + 32) = v81;
  *(_BYTE *)(v82 + 40) = 0;
  sub_56024(v64, &qword_14EDDE8);
  if (qword_14ABE80 != -1)
    swift_once(&qword_14ABE80, sub_9D08F8);
  v83 = qword_1581648;
  v84 = v115;
  sub_5C238(v63, v115, &qword_14EDDF0);
  v85 = v113;
  *(_QWORD *)(v84 + *(int *)(v113 + 36)) = v83;
  swift_retain(v83);
  sub_56024(v63, &qword_14EDDF0);
  v86 = v118;
  v87 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000017, 0x80000000010FADF0);
  v88 = v120;
  static Locale.current.getter(v87);
  v123[0] = String.init(localized:table:bundle:locale:comment:)(v86, 0, 0, 0, v88, "Accessibility label for suggested songs refresh button", 54, 2);
  v123[1] = v89;
  v90 = sub_9D55F8();
  v91 = sub_55EA0();
  v92 = (uint64_t)v116;
  View.accessibilityLabel<A>(_:)(v123, v85, &type metadata for String, v90, v91);
  swift_bridgeObjectRelease();
  sub_56024(v84, &qword_14EDDF8);
  AccessibilityIdentifier.playlistSuggestedSongsRefreshButton.unsafeMutableAddressor();
  sub_9D5840();
  swift_bridgeObjectRetain();
  v93 = v114;
  View.accessibilityIdentifier(_:)();
  sub_56024(v92, &qword_14EDE00);
  swift_bridgeObjectRelease();
  v94 = (uint64_t)v93;
  v95 = v119;
  sub_5C090(v94, v119, &qword_14EDE08);
  sub_5C238(v60, v58, &qword_14EDE20);
  v96 = v121;
  sub_5C238(v95, v121, &qword_14EDE08);
  v97 = v122;
  sub_5C238(v58, v122, &qword_14EDE20);
  v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EDEA0);
  v99 = v97 + *(int *)(v98 + 48);
  *(_QWORD *)v99 = 0;
  *(_BYTE *)(v99 + 8) = 1;
  sub_5C238(v96, v97 + *(int *)(v98 + 64), &qword_14EDE08);
  sub_56024(v95, &qword_14EDE08);
  sub_56024(v60, &qword_14EDE20);
  sub_56024(v96, &qword_14EDE08);
  return sub_56024(v58, &qword_14EDE20);
}

void sub_9C47D8(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE v67[12];
  int v68;
  unint64_t v69;
  _BYTE *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = &v67[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v5);
  v7 = &v67[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = String.LocalizationValue.init(stringLiteral:)(0x6574736567677553, 0xEF73676E6F532064);
  static Locale.current.getter(v8);
  v70 = v4;
  v74 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, "Title for suggested songs module", 32, 2);
  v75 = v9;
  v69 = sub_55EA0();
  v10 = Text.init<A>(_:)(&v74, &type metadata for String, v69);
  v12 = v11;
  v14 = v13;
  v16 = v15;
  if (qword_14ABDD8 != -1)
    swift_once(&qword_14ABDD8, sub_9D0664);
  v17 = v14 & 1;
  v18 = Text.font(_:)(qword_1581570, v10, v12, v14 & 1, v16);
  v20 = v19;
  v22 = v21;
  v24 = v23;
  sub_AF8E8(v10, v12, v17);
  swift_bridgeObjectRelease();
  if (qword_14ABDE0 != -1)
    swift_once(&qword_14ABDE0, sub_9D0680);
  v25 = Text.fontWeight(_:)(qword_1581578, 0, v18, v20, v22 & 1, v24);
  v71 = v26;
  v72 = v25;
  v28 = v27;
  v73 = v29;
  sub_AF8E8(v18, v20, v22 & 1);
  swift_bridgeObjectRelease();
  v31 = static Edge.Set.bottom.getter(v30);
  v68 = v31;
  if (qword_14ABDD0 != -1)
    v31 = swift_once(&qword_14ABDD0, sub_9D0644);
  v32 = EdgeInsets.init(_all:)(v31, *(double *)&qword_1581568);
  v34 = v33;
  v36 = v35;
  v38 = v37;
  v39 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001BLL, 0x80000000010FAE80);
  v40 = v70;
  static Locale.current.getter(v39);
  v74 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v40, 0, 0, 256);
  v75 = v41;
  v42 = Text.init<A>(_:)(&v74, &type metadata for String, v69);
  v44 = v43;
  v46 = v45;
  v48 = v47;
  if (qword_14ABDE8 != -1)
    swift_once(&qword_14ABDE8, sub_9D069C);
  v49 = v46 & 1;
  v50 = v28 & 1;
  v51 = Text.font(_:)(qword_1581580, v42, v44, v49, v48);
  v53 = v52;
  v55 = v54;
  v57 = v56 & 1;
  sub_AF8E8(v42, v44, v49);
  v58 = swift_bridgeObjectRelease();
  LODWORD(v74) = static HierarchicalShapeStyle.secondary.getter(v58);
  v59 = Text.foregroundStyle<A>(_:)(&v74, v51, v53, v57, v55, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v61 = v60;
  v63 = v62;
  LOBYTE(v49) = v64 & 1;
  sub_AF8E8(v51, v53, v57);
  swift_bridgeObjectRelease();
  LOBYTE(v74) = v50;
  v66 = v71;
  v65 = v72;
  *(_QWORD *)a1 = v72;
  *(_QWORD *)(a1 + 8) = v66;
  *(_BYTE *)(a1 + 16) = v50;
  *(_QWORD *)(a1 + 24) = v73;
  *(_BYTE *)(a1 + 32) = v68;
  *(double *)(a1 + 40) = v32;
  *(_QWORD *)(a1 + 48) = v34;
  *(_QWORD *)(a1 + 56) = v36;
  *(_QWORD *)(a1 + 64) = v38;
  *(_BYTE *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 80) = v59;
  *(_QWORD *)(a1 + 88) = v61;
  *(_BYTE *)(a1 + 96) = v49;
  *(_QWORD *)(a1 + 104) = v63;
  sub_AF8D8(v65, v66, v50);
  swift_bridgeObjectRetain();
  sub_AF8D8(v59, v61, v49);
  swift_bridgeObjectRetain();
  sub_AF8E8(v59, v61, v49);
  swift_bridgeObjectRelease();
  sub_AF8E8(v65, v66, v74);
  swift_bridgeObjectRelease();
}

uint64_t sub_9C4C28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t OpaqueTypeConformance2;
  char *v35;
  __n128 v36;
  uint64_t v37;
  char *v38;
  uint64_t KeyPath;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD v62[2];

  v61 = a2;
  v3 = type metadata accessor for ButtonBorderShape(0);
  v56 = *(_QWORD *)(v3 - 8);
  v57 = v3;
  __chkstk_darwin(v3);
  v55 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for PlaylistSongSuggestionsView.HeaderView(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EDE80);
  v52 = *(_QWORD *)(v8 - 8);
  v53 = v8;
  __chkstk_darwin(v8);
  v51 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EDE70);
  __chkstk_darwin(v60);
  v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v54 = (uint64_t)&v50 - v13;
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EDEA8);
  __chkstk_darwin(v58);
  v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_14CFF00);
  v16 = *(_QWORD *)(v59 - 8);
  __chkstk_darwin(v59);
  v18 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a1;
  v20 = *(_QWORD *)(a1 + 8);
  v21 = swift_retain(v20);
  v22 = dispatch thunk of MusicSuggestedSongsViewModel.isPerformingUserInitiatedRefresh.getter(v21);
  swift_release(v20);
  if ((v22 & 1) != 0)
  {
    ProgressView<>.init<>()(v23);
    v24 = v59;
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v15, v18, v59);
    swift_storeEnumTagMultiPayload(v15, v58, 0);
    v25 = sub_5C150(&qword_14CFEF8, &qword_14CFF00, (uint64_t)&protocol conformance descriptor for ProgressView<A, B>);
    v26 = sub_9D57A4();
    _ConditionalContent<>.init(storage:)(v15, v24, v60, v25, v26);
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v24);
  }
  else
  {
    sub_5BDB8(v19, (uint64_t)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for PlaylistSongSuggestionsView.HeaderView);
    v28 = *(unsigned __int8 *)(v6 + 80);
    v29 = (v28 + 16) & ~v28;
    v30 = swift_allocObject(&unk_13927B0, v29 + v7, v28 | 7);
    sub_5C04C((uint64_t)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v30 + v29, type metadata accessor for PlaylistSongSuggestionsView.HeaderView);
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_14B9030);
    v32 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14B5648);
    v33 = sub_185000();
    v62[0] = v32;
    v62[1] = v33;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v62, &opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>, 1);
    v35 = v51;
    v37 = Button.init(action:label:)(sub_9D59A0, v30, sub_9C554C, 0, v31, OpaqueTypeConformance2, v36);
    v38 = v55;
    static ButtonBorderShape.circle.getter(v37);
    KeyPath = swift_getKeyPath(&unk_108F4A0);
    v40 = v60;
    v41 = (uint64_t *)&v11[*(int *)(v60 + 36)];
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EDE90);
    v44 = v56;
    v43 = v57;
    (*(void (**)(char *, char *, uint64_t))(v56 + 16))((char *)v41 + *(int *)(v42 + 28), v38, v57);
    *v41 = KeyPath;
    v46 = v52;
    v45 = v53;
    (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v11, v35, v53);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v38, v43);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v35, v45);
    v47 = v54;
    sub_5C090((uint64_t)v11, v54, &qword_14EDE70);
    sub_5C238(v47, (uint64_t)v15, &qword_14EDE70);
    swift_storeEnumTagMultiPayload(v15, v58, 1);
    v48 = sub_5C150(&qword_14CFEF8, &qword_14CFF00, (uint64_t)&protocol conformance descriptor for ProgressView<A, B>);
    v49 = sub_9D57A4();
    _ConditionalContent<>.init(storage:)(v15, v59, v40, v48, v49);
    return sub_56024(v47, &qword_14EDE70);
  }
}

uint64_t sub_9C5060()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t v18;
  uint64_t inited;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE v55[24];
  _QWORD v56[3];
  _BYTE v57[48];

  v1 = v0;
  v2 = type metadata accessor for PlaylistSongSuggestionsView.HeaderView(0);
  v51 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v53 = v3;
  v54 = (uint64_t)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD5A0);
  __chkstk_darwin(v4);
  v52 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AED20);
  __chkstk_darwin(v6);
  v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v49 - v10;
  v12 = type metadata accessor for MetricsEvent.Click(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_14AB840 != -1)
    swift_once(&qword_14AB840, sub_72B4E0);
  v15 = qword_1580D88;
  KeyPath = swift_getKeyPath(&unk_108F530);
  v17 = swift_getKeyPath(&unk_108F558);
  static Published.subscript.getter(v56, v15, KeyPath, v17);
  swift_release(KeyPath);
  swift_release(v17);
  if (LOBYTE(v56[0]) == 1)
    sub_72D1F8();
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_14B2FA0);
  inited = swift_initStackObject(v18, v57);
  *(_OWORD *)(inited + 16) = xmmword_105F890;
  *(_QWORD *)(inited + 32) = sub_196558((uint64_t)&off_133F478);
  v50 = inited + 32;
  *(_QWORD *)(inited + 40) = sub_196558((uint64_t)&off_133F4D8);
  v20 = type metadata accessor for URL(0);
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
  v21(v11, 1, 1, v20);
  v22 = sub_30CEA8(inited);
  v23 = Playlist.id.getter(v22);
  v49 = v1;
  v25 = v24;
  v21(v8, 1, 1, v20);
  MetricsEvent.Click.init(targetIdentifier:targetType:actionType:actionURL:locations:actionContext:actionDetails:pageIdentifier:pageType:pageURL:pageDetails:pageDisplayType:snapshotImpressions:searchTerm:)(0xD000000000000014, 0x80000000010C3920, 5, 47, (uint64_t)v11, (uint64_t)v22, 0, 9, (uint64_t)v14, 0, 0, 65280, v23, v25, 0x7473696C79616C50, 0xE800000000000000, (uint64_t)v8, 0, 1,
    0,
    0,
    0);
  v26 = (id)*MetricsReportingController.shared.unsafeMutableAddressor();
  sub_53F8B4();
  v28 = v27;
  v30 = v29;
  if (qword_14AB568 != -1)
    swift_once(&qword_14AB568, sub_5BC10C);
  swift_beginAccess(&static UIApplication.groupActivitiesManager, v56, 0, 0);
  v31 = static UIApplication.groupActivitiesManager;
  swift_retain(static UIApplication.groupActivitiesManager);
  v32 = GroupActivitiesManager.hasJoined.getter();
  v33 = GroupActivitiesManager.participantsCount.getter();
  v34 = (uint64_t *)(v31 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount);
  swift_beginAccess(v31 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount, v55, 0, 0);
  v35 = *v34;
  v36 = swift_release(v31);
  (*(void (**)(char *, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, __n128))&stru_B8.sectname[swift_isaMask & *v26])(v14, v28, v30, v32 & 1, v33, v35, v36);

  swift_bridgeObjectRelease();
  v37 = type metadata accessor for TaskPriority(0);
  v38 = (uint64_t)v52;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v52, 1, 1, v37);
  v39 = v54;
  sub_5BDB8(v49, v54, type metadata accessor for PlaylistSongSuggestionsView.HeaderView);
  type metadata accessor for MainActor(0);
  v41 = static MainActor.shared.getter(v40);
  v42 = *(unsigned __int8 *)(v51 + 80);
  v43 = (v42 + 32) & ~v42;
  v44 = swift_allocObject(&unk_13927D8, v43 + v53, v42 | 7);
  *(_QWORD *)(v44 + 16) = v41;
  *(_QWORD *)(v44 + 24) = &protocol witness table for MainActor;
  sub_5C04C(v39, v44 + v43, type metadata accessor for PlaylistSongSuggestionsView.HeaderView);
  v45 = sub_2223C8(v38, (uint64_t)&unk_14EDEB8, v44);
  sub_5C0DC((uint64_t)v14, type metadata accessor for MetricsEvent.Click);
  swift_release(v45);
  swift_setDeallocating(inited);
  v46 = *(_QWORD *)(inited + 16);
  v47 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14BA550);
  return swift_arrayDestroy(v50, v46, v47);
}

double sub_9C554C()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  double result;

  v0 = Image.init(systemName:)(0x6C632E776F727261, 0xEF657369776B636FLL);
  v2 = static Color.primary.getter(v1);
  KeyPath = swift_getKeyPath(&unk_108F4D0);
  if (qword_14ABE00 != -1)
    swift_once(&qword_14ABE00, sub_9D06F8);
  v4 = qword_1581598;
  v5 = swift_getKeyPath(&unk_108F500);
  v6 = qword_14ABE08;
  swift_retain(v4);
  if (v6 != -1)
    swift_once(&qword_14ABE08, sub_9D0714);
  v7 = qword_15815A0;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14B5648);
  v9 = sub_185000();
  View.fontWeight(_:)(v7, 0, v8, v9);
  swift_release(v4);
  swift_release(v5);
  swift_release(v2);
  swift_release(KeyPath);
  *(_QWORD *)&result = swift_release(v0).n128_u64[0];
  return result;
}

uint64_t sub_9C56AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  v4[4] = a4;
  v5 = type metadata accessor for MainActor(0);
  v4[5] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v4[6] = v7;
  v4[7] = v8;
  return swift_task_switch(sub_9C5718, v7, v8);
}

uint64_t sub_9C5718()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v1 = *(_QWORD *)(v0[4] + 8);
  v0[8] = v1;
  v2 = *((unsigned int *)&async function pointer to dispatch thunk of MusicSuggestedSongsViewModel.refresh() + 1);
  v5 = (uint64_t (*)(void))((char *)&async function pointer to dispatch thunk of MusicSuggestedSongsViewModel.refresh()
                         + async function pointer to dispatch thunk of MusicSuggestedSongsViewModel.refresh());
  swift_retain(v1);
  v3 = (_QWORD *)swift_task_alloc(v2);
  v0[9] = v3;
  *v3 = v0;
  v3[1] = sub_9C578C;
  return v5();
}

uint64_t sub_9C578C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = v2[6];
    v5 = v2[7];
    v6 = sub_9C5828;
  }
  else
  {
    swift_release(v2[8]);
    v4 = v2[6];
    v5 = v2[7];
    v6 = sub_9C57F8;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_9C57F8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_9C5828()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v17;
  uint64_t v18;

  swift_release(*(_QWORD *)(v0 + 64));
  if (qword_14ABB90 != -1)
    swift_once(&qword_14ABB90, sub_950CDC);
  v1 = *(_QWORD *)(v0 + 80);
  v2 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v2, (uint64_t)qword_1581258);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 80);
  v8 = *(_QWORD *)(v0 + 40);
  if (v6)
  {
    v17 = *(_QWORD *)(v0 + 40);
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v18 = v10;
    *(_DWORD *)v9 = 136446210;
    *(_QWORD *)(v0 + 16) = v7;
    swift_errorRetain(v7);
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD690);
    v12 = String.init<A>(describing:)(v0 + 16, v11);
    *(_QWORD *)(v0 + 24) = sub_23EAC8(v12, v13, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32);
    swift_bridgeObjectRelease();
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl(&dword_0, v4, v5, "Failed to refresh suggested songs with error=%{public}s", v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
    swift_errorRelease(v7);

    v14 = v17;
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 80));
    swift_errorRelease(v7);
    swift_errorRelease(v7);

    v14 = v8;
  }
  v15 = swift_release(v14);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v15);
}

uint64_t sub_9C5A38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t);
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  void (*v52)(_QWORD, _QWORD, _QWORD);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t, uint64_t);
  uint64_t (**v63)();
  char *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (**v72)();
  uint64_t v73;
  void (*v74)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  __n128 v77;
  uint64_t v78;
  __n128 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unsigned int (*v85)(uint64_t, uint64_t, uint64_t);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char v92;
  void (*v93)(char *, uint64_t);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _OWORD *v103;
  __int128 v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t *v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  void (*v140)(char *, uint64_t, uint64_t);
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;

  v137 = a3;
  v116 = type metadata accessor for DynamicTypeSize(0);
  v115 = *(_QWORD *)(v116 - 8);
  __chkstk_darwin(v116);
  v114 = (uint64_t)&v112 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EDD68);
  __chkstk_darwin(v6);
  v119 = (uint64_t)&v112 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EDD70);
  v135 = *(_QWORD *)(v8 - 8);
  v136 = v8;
  __chkstk_darwin(v8);
  v118 = (uint64_t)&v112 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v117 = (uint64_t)&v112 - v11;
  v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EDD78);
  __chkstk_darwin(v128);
  v131 = (uint64_t)&v112 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AED40);
  __chkstk_darwin(v13);
  v112 = (uint64_t)&v112 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v129 = (char *)&v112 - v16;
  __chkstk_darwin(v17);
  v19 = (char *)&v112 - v18;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EDD80);
  __chkstk_darwin(v20);
  v134 = (uint64_t)&v112 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v133 = (char *)&v112 - v23;
  v113 = type metadata accessor for PlaylistSongSuggestionsView.ContentView(0);
  v141 = *(_QWORD *)(v113 - 8);
  v24 = *(_QWORD *)(v141 + 64);
  __chkstk_darwin(v113);
  v127 = (uint64_t *)((char *)&v112 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v25 = type metadata accessor for Song(0);
  v26 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v125 = v27;
  v28 = (char *)&v112 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell(0);
  __chkstk_darwin(v29);
  v31 = (char *)&v112 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EDD88);
  __chkstk_darwin(v32);
  v34 = (char *)&v112 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EDD90);
  __chkstk_darwin(v121);
  v124 = (char *)&v112 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EDD98);
  __chkstk_darwin(v123);
  v132 = (uint64_t)&v112 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  v122 = (uint64_t)&v112 - v38;
  v40 = __chkstk_darwin(v39);
  v142 = a1;
  v143 = (uint64_t)&v112 - v41;
  v139 = v26;
  v42 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
  v126 = v25;
  v43 = v25;
  v44 = v42;
  ((void (*)(char *, uint64_t, uint64_t, double))v42)(v28, a1, v43, v40);
  v45 = *(_QWORD *)(a2 + 8);
  v46 = *(_QWORD *)(a2 + 24);
  swift_retain(v45);
  swift_retain(v46);
  v138 = v28;
  sub_9C65B4((uint64_t)v28, v45, v46, (uint64_t)v31);
  v47 = *(_QWORD *)(a2 + 40);
  v48 = *(_BYTE *)(a2 + 48);
  *(_QWORD *)&v145 = *(_QWORD *)(a2 + 32);
  *((_QWORD *)&v145 + 1) = v47;
  LOBYTE(v146) = v48;
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_14DD1B0);
  Binding.wrappedValue.getter(&v144, v49);
  v130 = v19;
  v140 = v44;
  if (v144 == 1)
  {
    if (qword_14ABEB0 != -1)
      swift_once(&qword_14ABEB0, sub_9D0BAC);
    v50 = &qword_1581658;
  }
  else
  {
    if (qword_14ABE98 != -1)
      swift_once(&qword_14ABE98, sub_9D0A2C);
    v50 = &qword_1581650;
  }
  v51 = *v50;
  swift_retain(*v50);
  sub_5BDB8((uint64_t)v31, (uint64_t)v34, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
  *(_QWORD *)&v34[*(int *)(v32 + 36)] = v51;
  sub_5C0DC((uint64_t)v31, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
  v52 = (void (*)(_QWORD, _QWORD, _QWORD))v127;
  sub_5BDB8(a2, (uint64_t)v127, type metadata accessor for PlaylistSongSuggestionsView.ContentView);
  v53 = *(unsigned __int8 *)(v141 + 80);
  v141 = a2;
  v54 = (v53 + 16) & ~v53;
  v55 = v54 + v24;
  v56 = (uint64_t)v34;
  v120 = v53 | 7;
  v57 = swift_allocObject(&unk_1392760, v54 + v24, v53 | 7);
  sub_5C04C((uint64_t)v52, v57 + v54, type metadata accessor for PlaylistSongSuggestionsView.ContentView);
  v58 = (uint64_t)v124;
  v59 = &v124[*(int *)(v121 + 36)];
  v60 = v142;
  v61 = v126;
  v62 = v140;
  v140(v59, v142, v126);
  v63 = (uint64_t (**)())&v59[*(int *)(type metadata accessor for HostedTaggedView(0) + 20)];
  *v63 = sub_9D5128;
  v63[1] = (uint64_t (*)())v57;
  sub_5C090(v56, v58, &qword_14EDD88);
  sub_5BDB8(v141, (uint64_t)v52, type metadata accessor for PlaylistSongSuggestionsView.ContentView);
  v64 = v138;
  v62(v138, v60, v61);
  v65 = (_QWORD *)v139;
  v66 = *(unsigned __int8 *)(v139 + 80);
  v67 = (v55 + v66) & ~v66;
  v68 = swift_allocObject(&unk_1392788, v67 + v125, v120 | v66);
  v69 = v68 + v54;
  v70 = v141;
  sub_5C04C((uint64_t)v52, v69, type metadata accessor for PlaylistSongSuggestionsView.ContentView);
  v127 = (uint64_t *)v65[4];
  ((void (*)(uint64_t, char *, uint64_t))v127)(v68 + v67, v64, v61);
  v71 = v122;
  sub_5C238(v58, v122, &qword_14EDD90);
  v72 = (void (**)())(v71 + *(int *)(v123 + 36));
  *v72 = sub_9D52E4;
  v72[1] = (void (*)())v68;
  v72[2] = 0;
  v72[3] = 0;
  sub_56024(v58, &qword_14EDD90);
  sub_5C090(v71, v143, &qword_14EDD98);
  v73 = (uint64_t)v130;
  v62(v130, v142, v61);
  v74 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v65[7];
  v75 = 1;
  v74(v73, 0, 1, v61);
  v76 = *(_QWORD *)(v70 + 8);
  v77 = swift_retain(v76);
  v78 = dispatch thunk of MusicSuggestedSongsViewModel.suggestedSongs.getter(v77);
  v79 = swift_release(v76);
  v80 = *(_QWORD *)(v78 + 16);
  if (v80)
  {
    v81 = v78 + ((v66 + 32) & ~v66) + v65[9] * (v80 - 1);
    v82 = (uint64_t)v129;
    ((void (*)(char *, uint64_t, uint64_t, __n128))v140)(v129, v81, v61, v79);
    v75 = 0;
  }
  else
  {
    v82 = (uint64_t)v129;
  }
  v74(v82, v75, 1, v61);
  swift_bridgeObjectRelease();
  v83 = v131;
  v84 = v131 + *(int *)(v128 + 48);
  sub_5C238(v73, v131, &qword_14AED40);
  sub_5C238(v82, v84, &qword_14AED40);
  v85 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v65[6];
  if (v85(v83, 1, v61) == 1)
  {
    sub_56024(v82, &qword_14AED40);
    sub_56024(v73, &qword_14AED40);
    if (v85(v84, 1, v61) == 1)
    {
      sub_56024(v83, &qword_14AED40);
      v86 = 1;
      v87 = v136;
      v88 = (uint64_t)v133;
      goto LABEL_23;
    }
  }
  else
  {
    v89 = v112;
    sub_5C238(v83, v112, &qword_14AED40);
    if (v85(v84, 1, v61) != 1)
    {
      v90 = v138;
      ((void (*)(char *, uint64_t, uint64_t))v127)(v138, v84, v61);
      v91 = sub_4DD24(&qword_14AE110, (uint64_t (*)(uint64_t))&type metadata accessor for Song, (uint64_t)&protocol conformance descriptor for Song);
      v92 = dispatch thunk of static Equatable.== infix(_:_:)(v89, v90, v61, v91);
      v93 = *(void (**)(char *, uint64_t))(v139 + 8);
      v93(v90, v61);
      sub_56024(v82, &qword_14AED40);
      sub_56024(v73, &qword_14AED40);
      v93((char *)v89, v61);
      sub_56024(v83, &qword_14AED40);
      v88 = (uint64_t)v133;
      if ((v92 & 1) != 0)
      {
        v86 = 1;
        v87 = v136;
        goto LABEL_23;
      }
      goto LABEL_19;
    }
    sub_56024(v82, &qword_14AED40);
    sub_56024(v73, &qword_14AED40);
    (*(void (**)(uint64_t, uint64_t))(v139 + 8))(v89, v61);
  }
  sub_56024(v83, &qword_14EDD78);
  v88 = (uint64_t)v133;
LABEL_19:
  v94 = v119;
  sub_9C6DCC(v119);
  v95 = v114;
  v96 = sub_724544(v114);
  v97 = DynamicTypeSize.isAccessibilitySize.getter(v96);
  v98 = (*(uint64_t (**)(uint64_t, uint64_t))(v115 + 8))(v95, v116);
  if ((v97 & 1) != 0)
    v99 = 0x4038000000000000;
  else
    v99 = 0x4010000000000000;
  v100 = static Alignment.center.getter(v98);
  _FrameLayout.init(width:height:alignment:)(&v145, 0, 1, v99, 0, v100, v101);
  v102 = v118;
  sub_5C238(v94, v118, &qword_14EDD68);
  v87 = v136;
  v103 = (_OWORD *)(v102 + *(int *)(v136 + 36));
  v104 = v146;
  *v103 = v145;
  v103[1] = v104;
  v103[2] = v147;
  sub_56024(v94, &qword_14EDD68);
  v105 = v117;
  sub_5C090(v102, v117, &qword_14EDD70);
  sub_5C090(v105, v88, &qword_14EDD70);
  v86 = 0;
LABEL_23:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v135 + 56))(v88, v86, 1, v87);
  v106 = v143;
  v107 = v132;
  sub_5C238(v143, v132, &qword_14EDD98);
  v108 = v134;
  sub_5C238(v88, v134, &qword_14EDD80);
  v109 = v137;
  sub_5C238(v107, v137, &qword_14EDD98);
  v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EDDA0);
  sub_5C238(v108, v109 + *(int *)(v110 + 48), &qword_14EDD80);
  sub_56024(v88, &qword_14EDD80);
  sub_56024(v106, &qword_14EDD98);
  sub_56024(v108, &qword_14EDD80);
  return sub_56024(v107, &qword_14EDD98);
}

uint64_t sub_9C65B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  int *v15;
  _QWORD *v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  _QWORD *v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  _BYTE v52[24];
  _BYTE v53[24];

  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE6F0);
  __chkstk_darwin(v8);
  v10 = &v52[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v13 = &v52[-v12];
  v14 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a4, a1, v14);
  v15 = (int *)type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell(0);
  v16 = (_QWORD *)(a4 + v15[5]);
  v18 = type metadata accessor for MusicSuggestedSongsViewModel(0, v17);
  v19 = sub_4DD24((unint64_t *)&unk_14E3FB8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicSuggestedSongsViewModel, (uint64_t)&protocol conformance descriptor for MusicSuggestedSongsViewModel);
  *v16 = ObservedObject.init(wrappedValue:)(a2, v18, v19);
  v16[1] = v20;
  v21 = (_QWORD *)(a4 + v15[6]);
  v22 = type metadata accessor for SuggestedSongsDataSource(0);
  v23 = sub_4DD24((unint64_t *)&unk_14EA220, type metadata accessor for SuggestedSongsDataSource, (uint64_t)&unk_108F254);
  *v21 = ObservedObject.init(wrappedValue:)(a3, v22, v23);
  v21[1] = v24;
  v25 = (_QWORD *)(a4 + v15[7]);
  if (qword_14AB840 != -1)
    swift_once(&qword_14AB840, sub_72B4E0);
  v26 = qword_1580D88;
  v27 = type metadata accessor for PreviewPlaybackController(0);
  v28 = sub_4DD24(&qword_14BFA50, type metadata accessor for PreviewPlaybackController, (uint64_t)&unk_1082BB8);
  swift_retain(v26);
  *v25 = ObservedObject.init(wrappedValue:)(v29, v27, v28);
  v25[1] = v30;
  v31 = (_QWORD *)(a4 + v15[8]);
  *v31 = swift_getKeyPath(&unk_108F398);
  v32 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
  swift_storeEnumTagMultiPayload(v31, v32, 0);
  v33 = (_QWORD *)(a4 + v15[9]);
  *v33 = swift_getKeyPath(&unk_108F368);
  v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14CD210);
  swift_storeEnumTagMultiPayload(v33, v34, 0);
  v35 = v15[10];
  v36 = MetricsEvent.Page.libraryPlaylistDetail.unsafeMutableAddressor();
  sub_5BDB8(v36, (uint64_t)v13, type metadata accessor for MetricsEvent.Page);
  v37 = type metadata accessor for MetricsEvent.Page(0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v13, 0, 1, v37);
  sub_5C238((uint64_t)v13, (uint64_t)v10, (uint64_t *)&unk_14AE6F0);
  v38 = MetricsReportingController.shared.unsafeMutableAddressor();
  sub_53F8B4();
  v40 = v39;
  v42 = v41;
  v43 = qword_14AB568;
  v44 = (id)*v38;
  if (v43 != -1)
    swift_once(&qword_14AB568, sub_5BC10C);
  v45 = (_QWORD *)(a4 + v35);
  swift_beginAccess(&static UIApplication.groupActivitiesManager, v53, 0, 0);
  v46 = static UIApplication.groupActivitiesManager;
  swift_retain(static UIApplication.groupActivitiesManager);
  v47 = GroupActivitiesManager.hasJoined.getter();
  v48 = GroupActivitiesManager.participantsCount.getter();
  v49 = (uint64_t *)(v46 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount);
  swift_beginAccess(v46 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount, v52, 0, 0);
  v50 = *v49;

  swift_release(v46);
  Actions.MetricsReportingContext.init(actionContext:page:pageContext:locations:impressions:sharedListeningContext:)(0, 6, (uint64_t)v10, v40, v42, 0, 0, v47 & 1, v45, v48, v50);
  return sub_56024((uint64_t)v13, (uint64_t *)&unk_14AE6F0);
}

double sub_9C6938()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  id v17;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 24) + OBJC_IVAR____TtC16MusicApplication24SuggestedSongsDataSource_updateReceivers);
  v2 = sub_4E684(0, (unint64_t *)&qword_14ACB70, NSObject_ptr);
  swift_bridgeObjectRetain();
  v3 = static MPMediaLibraryFilteringOptions.none.getter();
  if (v3 != WeakArray.endIndex.getter(v1, v2, v4, v5))
  {
    do
    {
      v10 = (void *)WeakArray.subscript.getter(v3, v1, v2, v6);
      swift_bridgeObjectRetain();
      v3 = WeakArray.index(after:)(v3);
      swift_bridgeObjectRelease();
      if (v10)
      {
        ObjectType = swift_getObjectType();
        v12 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for PlaylistUpdatesReceiver);
        if (v12)
          v13 = v12;
        else
          v13 = 0;
        if (v12)
          v14 = v10;
        else
          v14 = 0;
        if (v14)
        {
          v15 = swift_getObjectType();
          v16 = *(void (**)(uint64_t, uint64_t))(v13 + 24);
          v17 = v10;
          v16(v15, v13);

        }
      }
    }
    while (v3 != WeakArray.endIndex.getter(v1, v2, v8, v9));
  }
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

void sub_9C6A74(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  unsigned __int8 *v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 *v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 *v27;
  unsigned int v28;
  uint64_t v29;
  char v30;
  _QWORD v31[3];
  uint64_t v32;
  _BYTE v33[24];

  v3 = *(_QWORD *)(a1 + 24);
  v4 = (uint64_t *)(v3 + OBJC_IVAR____TtC16MusicApplication24SuggestedSongsDataSource_impressedSongs);
  swift_beginAccess(v3 + OBJC_IVAR____TtC16MusicApplication24SuggestedSongsDataSource_impressedSongs, v33, 0, 0);
  v5 = *v4;
  swift_bridgeObjectRetain();
  v6 = sub_A33A78(a2, v5);
  swift_bridgeObjectRelease();
  if ((v6 & 1) == 0)
  {
    v8 = Song.catalogID.getter(v7);
    if (v9)
    {
      v10 = v9;
      v11 = HIBYTE(v9) & 0xF;
      v12 = v8 & 0xFFFFFFFFFFFFLL;
      if ((v10 & 0x2000000000000000) != 0)
        v13 = v11;
      else
        v13 = v8 & 0xFFFFFFFFFFFFLL;
      if (!v13)
      {
        swift_bridgeObjectRelease();
        return;
      }
      if ((v10 & 0x1000000000000000) != 0)
      {
        v15 = sub_338138(v8, v10, 10);
        v17 = v30;
LABEL_46:
        swift_bridgeObjectRelease();
        if ((v17 & 1) == 0)
        {
          swift_beginAccess(v3 + OBJC_IVAR____TtC16MusicApplication24SuggestedSongsDataSource_pendingImpressionCellTags, v31, 33, 0);
          swift_retain(v3);
          sub_6C738(&v32, v15);
          swift_endAccess(v31);
          swift_release(v3);
        }
        return;
      }
      if ((v10 & 0x2000000000000000) == 0)
      {
        if ((v8 & 0x1000000000000000) != 0)
          v14 = (unsigned __int8 *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 32);
        else
          v14 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v8, v10);
        v15 = (uint64_t)sub_338110(v14, v12, 10);
        v17 = v16 & 1;
        goto LABEL_46;
      }
      v31[0] = v8;
      v31[1] = v10 & 0xFFFFFFFFFFFFFFLL;
      if (v8 == 43)
      {
        if (!v11)
          goto LABEL_59;
        if (v11 == 1 || (BYTE1(v8) - 48) > 9u)
          goto LABEL_33;
        v15 = (BYTE1(v8) - 48);
        if (v11 != 2)
        {
          if ((BYTE2(v8) - 48) > 9u)
            goto LABEL_33;
          v15 = 10 * (BYTE1(v8) - 48) + (BYTE2(v8) - 48);
          v18 = v11 - 3;
          if (v18)
          {
            v19 = (unsigned __int8 *)v31 + 3;
            while (1)
            {
              v20 = *v19 - 48;
              if (v20 > 9)
                goto LABEL_33;
              v21 = 10 * v15;
              if ((unsigned __int128)(v15 * (__int128)10) >> 64 != (10 * v15) >> 63)
                goto LABEL_33;
              v15 = v21 + v20;
              if (__OFADD__(v21, v20))
                goto LABEL_33;
              v17 = 0;
              ++v19;
              if (!--v18)
                goto LABEL_46;
            }
          }
        }
      }
      else
      {
        if (v8 == 45)
        {
          if (v11)
          {
            if (v11 != 1 && (BYTE1(v8) - 48) <= 9u)
            {
              if (v11 == 2)
              {
                v17 = 0;
                v15 = -(uint64_t)(BYTE1(v8) - 48);
                goto LABEL_46;
              }
              if ((BYTE2(v8) - 48) <= 9u)
              {
                v15 = -10 * (BYTE1(v8) - 48) - (BYTE2(v8) - 48);
                v26 = v11 - 3;
                if (!v26)
                  goto LABEL_45;
                v27 = (unsigned __int8 *)v31 + 3;
                while (1)
                {
                  v28 = *v27 - 48;
                  if (v28 > 9)
                    break;
                  v29 = 10 * v15;
                  if ((unsigned __int128)(v15 * (__int128)10) >> 64 != (10 * v15) >> 63)
                    break;
                  v15 = v29 - v28;
                  if (__OFSUB__(v29, v28))
                    break;
                  v17 = 0;
                  ++v27;
                  if (!--v26)
                    goto LABEL_46;
                }
              }
            }
LABEL_33:
            v15 = 0;
            v17 = 1;
            goto LABEL_46;
          }
          __break(1u);
LABEL_59:
          __break(1u);
          return;
        }
        if (!v11 || (v8 - 48) > 9u)
          goto LABEL_33;
        v15 = (v8 - 48);
        if (v11 != 1)
        {
          if ((BYTE1(v8) - 48) > 9u)
            goto LABEL_33;
          v15 = 10 * (v8 - 48) + (BYTE1(v8) - 48);
          v22 = v11 - 2;
          if (v22)
          {
            v23 = (unsigned __int8 *)v31 + 2;
            while (1)
            {
              v24 = *v23 - 48;
              if (v24 > 9)
                goto LABEL_33;
              v25 = 10 * v15;
              if ((unsigned __int128)(v15 * (__int128)10) >> 64 != (10 * v15) >> 63)
                goto LABEL_33;
              v15 = v25 + v24;
              if (__OFADD__(v25, v24))
                goto LABEL_33;
              v17 = 0;
              ++v23;
              if (!--v22)
                goto LABEL_46;
            }
          }
        }
      }
LABEL_45:
      v17 = 0;
      goto LABEL_46;
    }
  }
}

uint64_t sub_9C6DCC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  char v28;
  void (*v29)(char *, uint64_t);
  double v30;
  uint64_t v31;
  double v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  double v45;
  uint64_t v46;
  double v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unsigned int (*v62)(uint64_t, uint64_t, uint64_t);
  double v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char v67;
  void (*v68)(char *, uint64_t);
  char *v69;
  uint64_t v70;
  char *v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;

  v87 = a1;
  v86 = type metadata accessor for UserInterfaceSizeClass(0);
  v84 = *(_QWORD *)(v86 - 8);
  __chkstk_darwin(v86);
  v72 = (char *)&v72 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_14BC660);
  __chkstk_darwin(v79);
  v85 = (uint64_t)&v72 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E0470);
  __chkstk_darwin(v3);
  v73 = (uint64_t)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v82 = (char *)&v72 - v6;
  __chkstk_darwin(v7);
  v83 = (uint64_t)&v72 - v8;
  __chkstk_darwin(v9);
  v78 = (uint64_t)&v72 - v10;
  v11 = type metadata accessor for DynamicTypeSize(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v72 - v16;
  v76 = type metadata accessor for Divider(0);
  v18 = *(_QWORD *)(v76 - 8);
  __chkstk_darwin(v76);
  v20 = (char *)&v72 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EDDA8);
  __chkstk_darwin(v75);
  v22 = (char *)&v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EDDB0);
  __chkstk_darwin(v77);
  v88 = (uint64_t)&v72 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EDDB8);
  __chkstk_darwin(v81);
  v80 = (uint64_t)&v72 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = Divider.init()(v25);
  v74 = static Edge.Set.leading.getter(v26);
  if (qword_14ABDB8 != -1)
    swift_once(&qword_14ABDB8, sub_9D05E4);
  v27 = *(double *)&qword_1581550;
  type metadata accessor for PlaylistSongSuggestionsView.ContentView(0);
  sub_724544((uint64_t)v17);
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for DynamicTypeSize.accessibility3(_:), v11);
  v28 = static DynamicTypeSize.< infix(_:_:)(v17, v14);
  v29 = *(void (**)(char *, uint64_t))(v12 + 8);
  v29(v14, v11);
  if ((v28 & 1) != 0)
    v30 = 48.0;
  else
    v30 = 72.0;
  v31 = ((uint64_t (*)(char *, uint64_t))v29)(v17, v11);
  v32 = v27 + v30;
  if (qword_14ABE30 != -1)
    v31 = swift_once(&qword_14ABE30, sub_9D07C8);
  v33 = EdgeInsets.init(_all:)(v31, v32 + *(double *)&qword_15815F8);
  v35 = v34;
  v37 = v36;
  v39 = v38;
  v40 = v76;
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v22, v20, v76);
  v41 = &v22[*(int *)(v75 + 36)];
  *v41 = v74;
  *((double *)v41 + 1) = v33;
  *((_QWORD *)v41 + 2) = v35;
  *((_QWORD *)v41 + 3) = v37;
  *((_QWORD *)v41 + 4) = v39;
  v41[40] = 0;
  v42 = (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v40);
  v43 = static Edge.Set.trailing.getter(v42);
  v44 = v78;
  sub_7249C4(v78);
  v45 = sub_9D5344(v44);
  v46 = sub_56024(v44, &qword_14E0470);
  v47 = EdgeInsets.init(_all:)(v46, v45);
  v49 = v48;
  v51 = v50;
  v53 = v52;
  v54 = v88;
  sub_5C238((uint64_t)v22, v88, &qword_14EDDA8);
  v55 = v54 + *(int *)(v77 + 36);
  *(_BYTE *)v55 = v43;
  *(double *)(v55 + 8) = v47;
  *(_QWORD *)(v55 + 16) = v49;
  *(_QWORD *)(v55 + 24) = v51;
  *(_QWORD *)(v55 + 32) = v53;
  *(_BYTE *)(v55 + 40) = 0;
  sub_56024((uint64_t)v22, &qword_14EDDA8);
  v56 = v83;
  sub_7249C4(v83);
  v57 = v84;
  v58 = (uint64_t)v82;
  v59 = v86;
  (*(void (**)(char *, _QWORD, uint64_t))(v84 + 104))(v82, enum case for UserInterfaceSizeClass.compact(_:), v86);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v57 + 56))(v58, 0, 1, v59);
  v60 = v85;
  v61 = v85 + *(int *)(v79 + 48);
  sub_5C238(v56, v85, &qword_14E0470);
  sub_5C238(v58, v61, &qword_14E0470);
  v62 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48);
  if (v62(v60, 1, v59) != 1)
  {
    v64 = v73;
    sub_5C238(v60, v73, &qword_14E0470);
    if (v62(v61, 1, v59) != 1)
    {
      v65 = v72;
      (*(void (**)(char *, uint64_t, uint64_t))(v57 + 32))(v72, v61, v59);
      v66 = sub_4DD24(&qword_14CFE60, (uint64_t (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass, (uint64_t)&protocol conformance descriptor for UserInterfaceSizeClass);
      v67 = dispatch thunk of static Equatable.== infix(_:_:)(v64, v65, v59, v66);
      v68 = *(void (**)(char *, uint64_t))(v57 + 8);
      v69 = v65;
      v54 = v88;
      v68(v69, v59);
      sub_56024(v58, &qword_14E0470);
      sub_56024(v56, &qword_14E0470);
      v68((char *)v64, v59);
      sub_56024(v60, &qword_14E0470);
      v63 = 0.0;
      if ((v67 & 1) != 0)
        goto LABEL_16;
LABEL_15:
      v63 = 1.0;
      goto LABEL_16;
    }
    sub_56024(v58, &qword_14E0470);
    sub_56024(v56, &qword_14E0470);
    (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v64, v59);
LABEL_13:
    sub_56024(v60, &qword_14BC660);
    goto LABEL_15;
  }
  sub_56024(v58, &qword_14E0470);
  sub_56024(v56, &qword_14E0470);
  if (v62(v61, 1, v59) != 1)
    goto LABEL_13;
  sub_56024(v60, &qword_14E0470);
  v63 = 0.0;
LABEL_16:
  v70 = v80;
  sub_5C238(v54, v80, &qword_14EDDB0);
  *(double *)(v70 + *(int *)(v81 + 36)) = v63;
  sub_56024(v54, &qword_14EDDB0);
  return sub_5C090(v70, v87, &qword_14EDDB8);
}

uint64_t sub_9C74AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v3 = v2;
  v5 = *(_QWORD *)(a1 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(a1);
  *(_QWORD *)a2 = static HorizontalAlignment.leading.getter(v7);
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_14EDD38);
  v8 = *(_QWORD *)(v2 + 8);
  v9 = swift_retain(v8);
  v10 = dispatch thunk of MusicSuggestedSongsViewModel.suggestedSongs.getter(v9);
  swift_release(v8);
  v21 = v10;
  sub_5BDB8(v3, (uint64_t)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for PlaylistSongSuggestionsView.ContentView);
  v11 = *(unsigned __int8 *)(v5 + 80);
  v12 = (v11 + 16) & ~v11;
  v13 = swift_allocObject(&unk_1392738, v12 + v6, v11 | 7);
  sub_5C04C((uint64_t)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12, type metadata accessor for PlaylistSongSuggestionsView.ContentView);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EDD40);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EDD48);
  v16 = sub_5C150(&qword_14EDD50, &qword_14EDD40, (uint64_t)&protocol conformance descriptor for [A]);
  v17 = sub_5C150(&qword_14EDD58, &qword_14EDD48, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  v18 = sub_4DD24(&qword_14EDD60, (uint64_t (*)(uint64_t))&type metadata accessor for Song, (uint64_t)&protocol conformance descriptor for Song);
  return ForEach<>.init(_:content:)(&v21, sub_9D4F88, v13, v14, &type metadata for MusicItemID, v15, v16, v17, v18);
}

void sub_9C7658(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *Strong;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t OpaqueTypeConformance2;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  double v69;
  uint64_t v70;
  double v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t KeyPath;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  double v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  double v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  uint64_t v114;
  uint64_t v115;
  double v116;
  double v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char v126;
  double v127;
  uint64_t v128;
  double v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  __n128 v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char v158;
  char v159;
  uint64_t v160;
  char *v161;
  const char *v162;
  char *v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  unint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  char v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  char *v199;
  uint64_t v200;
  char *v201;
  unint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t *v205;
  uint64_t v206;
  uint64_t v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  uint64_t v218;
  char *v219;
  uint64_t v220;
  uint64_t v221;
  char *v222;
  uint64_t v223;
  uint64_t v224;
  char *v225;
  char *v226;
  char *v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  char *v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  id v237;
  uint64_t v238;
  char *v239;
  char *v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  _OWORD v247[7];

  v234 = a1;
  v233 = type metadata accessor for AccessibilityActionKind(0);
  v232 = *(_QWORD *)(v233 - 8);
  __chkstk_darwin(v233);
  v231 = (char *)&v193 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v224 = type metadata accessor for AccessibilityTraits(0);
  v223 = *(_QWORD *)(v224 - 8);
  v3 = __chkstk_darwin(v224);
  v222 = (char *)&v193 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v221 = type metadata accessor for AccessibilityChildBehavior(0, v3);
  v220 = *(_QWORD *)(v221 - 8);
  __chkstk_darwin(v221);
  v219 = (char *)&v193 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE050);
  __chkstk_darwin(v6);
  v205 = (uint64_t *)((char *)&v193 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v204 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE058);
  __chkstk_darwin(v204);
  v207 = (uint64_t)&v193 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v206 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE060);
  __chkstk_darwin(v206);
  v208 = (char *)&v193 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v210 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE068);
  __chkstk_darwin(v210);
  v209 = (uint64_t)&v193 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v213 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE070);
  v212 = *(_QWORD *)(v213 - 8);
  __chkstk_darwin(v213);
  v211 = (char *)&v193 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v216 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE078);
  v215 = *(_QWORD *)(v216 - 8);
  __chkstk_darwin(v216);
  v214 = (char *)&v193 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v218 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE080);
  __chkstk_darwin(v218);
  v217 = (char *)&v193 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v194 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE088);
  __chkstk_darwin(v194);
  v225 = (char *)&v193 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v229 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE090);
  __chkstk_darwin(v229);
  v226 = (char *)&v193 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v227 = (char *)&v193 - v17;
  __chkstk_darwin(v18);
  v230 = (char *)&v193 - v19;
  __chkstk_darwin(v20);
  v228 = (uint64_t)&v193 - v21;
  v22 = type metadata accessor for Locale(0);
  __chkstk_darwin(v22);
  v240 = (char *)&v193 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v24);
  v239 = (char *)&v193 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v241 = type metadata accessor for ButtonBorderShape(0);
  v202 = *(_QWORD *)(v241 - 8);
  __chkstk_darwin(v241);
  v201 = (char *)&v193 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E0470);
  __chkstk_darwin(v27);
  v203 = (uint64_t)&v193 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell(0);
  v30 = *(_QWORD *)(v29 - 8);
  v31 = *(_QWORD *)(v30 + 64);
  __chkstk_darwin(v29);
  v244 = (uint64_t)&v193 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v197 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EDE80);
  v32 = *(_QWORD *)(v197 - 8);
  __chkstk_darwin(v197);
  v34 = (char *)&v193 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v195 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE098);
  __chkstk_darwin(v195);
  v36 = (char *)&v193 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v196 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE0A0);
  __chkstk_darwin(v196);
  v38 = (char *)&v193 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v198 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE0A8);
  __chkstk_darwin(v198);
  v40 = (char *)&v193 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v200 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE0B0);
  __chkstk_darwin(v200);
  v199 = (char *)&v193 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE0B8);
  __chkstk_darwin(v42);
  v238 = (uint64_t)&v193 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v235 = v29;
  v44 = *(int *)(v29 + 24);
  v45 = v1;
  sub_6087C(*(_QWORD *)(v1 + v44 + 8) + OBJC_IVAR____TtC16MusicApplication24SuggestedSongsDataSource_presentationSource, (uint64_t)v247);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v247);
  sub_56060((uint64_t)v247);
  if (Strong)
  {
    v237 = sub_AF954();

  }
  else
  {
    v237 = 0;
  }
  v47 = v244;
  sub_5BDB8(v45, v244, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
  v48 = *(unsigned __int8 *)(v30 + 80);
  v49 = (v48 + 16) & ~v48;
  v236 = v49 + v31;
  v242 = v48 | 7;
  v50 = swift_allocObject(&unk_1392800, v49 + v31, v48 | 7);
  v243 = v49;
  sub_5C04C(v47, v50 + v49, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_14B9030);
  v52 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14B5648);
  v53 = sub_185000();
  *(_QWORD *)&v247[0] = v52;
  *((_QWORD *)&v247[0] + 1) = v53;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v247, &opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>, 1);
  v56 = Button.init(action:label:)(sub_9D7B50, v50, sub_9C9170, 0, v51, OpaqueTypeConformance2, v55);
  if (qword_14ABDF0 != -1)
    v56 = swift_once(&qword_14ABDF0, sub_9D06B8);
  v57 = qword_1581588;
  v58 = static Alignment.center.getter(v56);
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v247, v57, 0, 0, 1, 0, 1, v57, 0, 0, 1, 0, 1, v58, v59);
  v60 = v197;
  (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v36, v34, v197);
  v61 = &v36[*(int *)(v195 + 36)];
  v62 = v247[5];
  *((_OWORD *)v61 + 4) = v247[4];
  *((_OWORD *)v61 + 5) = v62;
  *((_OWORD *)v61 + 6) = v247[6];
  v63 = v247[1];
  *(_OWORD *)v61 = v247[0];
  *((_OWORD *)v61 + 1) = v63;
  v64 = v247[3];
  *((_OWORD *)v61 + 2) = v247[2];
  *((_OWORD *)v61 + 3) = v64;
  v65 = (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v34, v60);
  v66 = static Edge.Set.leading.getter(v65);
  v67 = v45;
  v68 = v203;
  v197 = v45 + *(int *)(v235 + 36);
  sub_7249C4(v203);
  v69 = sub_9D7B64(v68);
  v70 = sub_56024(v68, &qword_14E0470);
  v71 = EdgeInsets.init(_all:)(v70, v69);
  v73 = v72;
  v75 = v74;
  v77 = v76;
  sub_5C238((uint64_t)v36, (uint64_t)v38, &qword_14EE098);
  v78 = &v38[*(int *)(v196 + 36)];
  *v78 = v66;
  *((double *)v78 + 1) = v71;
  *((_QWORD *)v78 + 2) = v73;
  *((_QWORD *)v78 + 3) = v75;
  *((_QWORD *)v78 + 4) = v77;
  v78[40] = 0;
  v79 = sub_56024((uint64_t)v36, &qword_14EE098);
  v80 = v201;
  static ButtonBorderShape.circle.getter(v79);
  KeyPath = swift_getKeyPath(&unk_108F4A0);
  v82 = v198;
  v83 = (uint64_t *)&v40[*(int *)(v198 + 36)];
  v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EDE90);
  v85 = v202;
  v86 = v241;
  (*(void (**)(char *, char *, uint64_t))(v202 + 16))((char *)v83 + *(int *)(v84 + 28), v80, v241);
  *v83 = KeyPath;
  sub_5C238((uint64_t)v38, (uint64_t)v40, &qword_14EE0A0);
  (*(void (**)(char *, uint64_t))(v85 + 8))(v80, v86);
  sub_56024((uint64_t)v38, &qword_14EE0A0);
  v202 = (unint64_t)"Preview and add to playlist";
  v87 = v239;
  v88 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000014, 0x80000000010FAEA0);
  v89 = v240;
  static Locale.current.getter(v88);
  v245 = String.init(localized:table:bundle:locale:comment:)(v87, 0, 0, 0, v89, "Accessibility label for add song to playlist button", 51, 2);
  v246 = v90;
  v91 = sub_9D7E18();
  v92 = sub_55EA0();
  v93 = (uint64_t)v199;
  v201 = (char *)v92;
  View.accessibilityLabel<A>(_:)(&v245, v82, &type metadata for String, v91, v92);
  swift_bridgeObjectRelease();
  sub_56024((uint64_t)v40, &qword_14EE0A8);
  AccessibilityIdentifier.playlistSuggestedSongsCellAddButton.unsafeMutableAddressor();
  sub_9D7F40();
  swift_bridgeObjectRetain();
  v94 = v238;
  View.accessibilityIdentifier(_:)();
  sub_56024(v93, &qword_14EE0B0);
  *(_QWORD *)&v95 = swift_bridgeObjectRelease().n128_u64[0];
  v96 = static VerticalAlignment.center.getter(v95);
  v97 = (uint64_t)v205;
  *v205 = v96;
  *(_QWORD *)(v97 + 8) = 0;
  *(_BYTE *)(v97 + 16) = 0;
  v98 = (char *)(v97 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14EE0E0) + 44));
  v241 = v67;
  v99 = sub_9C92FC(v67, v94, (uint64_t)v237, v98);
  v100 = static Edge.Set.vertical.getter(v99);
  v101 = v100;
  if (qword_14ABE78 != -1)
    v100 = swift_once(&qword_14ABE78, sub_9D08D8);
  v102 = EdgeInsets.init(_all:)(v100, *(double *)&qword_1581640);
  v104 = v103;
  v106 = v105;
  v108 = v107;
  v109 = v207;
  sub_5C238(v97, v207, &qword_14EE050);
  v110 = v109 + *(int *)(v204 + 36);
  *(_BYTE *)v110 = v101;
  *(double *)(v110 + 8) = v102;
  *(_QWORD *)(v110 + 16) = v104;
  *(_QWORD *)(v110 + 24) = v106;
  *(_QWORD *)(v110 + 32) = v108;
  *(_BYTE *)(v110 + 40) = 0;
  v111 = sub_56024(v97, &qword_14EE050);
  v112 = static Edge.Set.leading.getter(v111);
  v113 = v112;
  v114 = (uint64_t)v225;
  v115 = (uint64_t)v208;
  if (qword_14ABDB8 != -1)
    v112 = swift_once(&qword_14ABDB8, sub_9D05E4);
  v116 = *(double *)&qword_1581550;
  if (qword_14ABE10 != -1)
    v112 = swift_once(&qword_14ABE10, sub_9D0730);
  v117 = EdgeInsets.init(_all:)(v112, v116 - *(double *)&qword_15815A8);
  v119 = v118;
  v121 = v120;
  v123 = v122;
  sub_5C238(v109, v115, &qword_14EE058);
  v124 = v115 + *(int *)(v206 + 36);
  *(_BYTE *)v124 = v113;
  *(double *)(v124 + 8) = v117;
  *(_QWORD *)(v124 + 16) = v119;
  *(_QWORD *)(v124 + 24) = v121;
  *(_QWORD *)(v124 + 32) = v123;
  *(_BYTE *)(v124 + 40) = 0;
  v125 = sub_56024(v109, &qword_14EE058);
  v126 = static Edge.Set.trailing.getter(v125);
  sub_7249C4(v68);
  v127 = sub_9D5344(v68);
  v128 = sub_56024(v68, &qword_14E0470);
  if (qword_14ABE18 != -1)
    v128 = swift_once(&qword_14ABE18, sub_9D0750);
  v129 = EdgeInsets.init(_all:)(v128, v127 - *(double *)&qword_15815B0);
  v131 = v130;
  v133 = v132;
  v135 = v134;
  v136 = v209;
  sub_5C238(v115, v209, &qword_14EE060);
  v137 = v210;
  v138 = v136 + *(int *)(v210 + 36);
  *(_BYTE *)v138 = v126;
  *(double *)(v138 + 8) = v129;
  *(_QWORD *)(v138 + 16) = v131;
  *(_QWORD *)(v138 + 24) = v133;
  *(_QWORD *)(v138 + 32) = v135;
  *(_BYTE *)(v138 + 40) = 0;
  sub_56024(v115, &qword_14EE060);
  v139 = v244;
  sub_5BDB8(v241, v244, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
  v140 = swift_allocObject(&unk_1392828, v236, v242);
  sub_5C04C(v139, v140 + v243, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
  v141 = sub_184F98(&qword_14EE0E8, &qword_14EE068, (void (*)(void))sub_9D825C);
  v142 = v211;
  View.onTapGesture(count:perform:)(1, sub_9D8248, v140, v137, v141, v143);
  sub_56024(v136, &qword_14EE068);
  swift_release(v140);
  v144 = v219;
  static AccessibilityChildBehavior.combine.getter(v145);
  v245 = v137;
  v246 = v141;
  v146 = swift_getOpaqueTypeConformance2(&v245, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
  v147 = v214;
  v148 = v213;
  View.accessibilityElement(children:)(v144, v213, v146);
  (*(void (**)(char *, uint64_t))(v220 + 8))(v144, v221);
  v149 = (*(uint64_t (**)(char *, uint64_t))(v212 + 8))(v142, v148);
  v150 = v222;
  static AccessibilityTraits.isButton.getter(v149);
  v245 = v148;
  v246 = v146;
  v151 = swift_getOpaqueTypeConformance2(&v245, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v152 = (uint64_t)v217;
  v153 = v216;
  View.accessibility(addTraits:)(v150, v216, v151);
  (*(void (**)(char *, uint64_t))(v223 + 8))(v150, v224);
  (*(void (**)(char *, uint64_t))(v215 + 8))(v147, v153);
  AccessibilityIdentifier.playlistSuggestedSongsCell.unsafeMutableAddressor();
  sub_9D8304();
  swift_bridgeObjectRetain();
  View.accessibilityIdentifier(_:)();
  sub_56024(v152, &qword_14EE080);
  swift_bridgeObjectRelease();
  v155 = Song.id.getter(v154);
  v157 = sub_72B58C(v155, v156);
  v159 = v158;
  LODWORD(v152) = ~v158;
  swift_bridgeObjectRelease();
  if ((_DWORD)v152 && (v159 != 2 || v157))
  {
    v166 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000016, 0x80000000010FAF90);
    v161 = v240;
    static Locale.current.getter(v166);
    v162 = "Accessibility hint to stop preview playback";
    v163 = v87;
    v164 = v161;
    v165 = 43;
  }
  else
  {
    v160 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000017, 0x80000000010FAF00);
    v161 = v240;
    static Locale.current.getter(v160);
    v162 = "Accessibility hint to start preview playback";
    v163 = v87;
    v164 = v161;
    v165 = 44;
  }
  v167 = String.init(localized:table:bundle:locale:comment:)(v163, 0, 0, 0, v164, v162, v165, 2);
  v168 = v194;
  v245 = v167;
  v246 = v169;
  v170 = sub_9D8400();
  v171 = (uint64_t)v226;
  v172 = v201;
  View.accessibilityHint<A>(_:)(&v245, v168, &type metadata for String, v170, v201);
  swift_bridgeObjectRelease();
  sub_56024(v114, &qword_14EE088);
  v173 = v244;
  sub_5BDB8(v241, v244, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
  v174 = v236;
  v175 = swift_allocObject(&unk_1392850, v236, v242);
  v176 = sub_5C04C(v173, v175 + v243, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
  v177 = v231;
  static AccessibilityActionKind.default.getter(v176);
  v178 = (uint64_t)v227;
  v179 = v229;
  ModifiedContent<>.accessibilityAction(_:_:)(v177, sub_9D8248, v175, v229);
  (*(void (**)(char *, uint64_t))(v232 + 8))(v177, v233);
  sub_56024(v171, &qword_14EE090);
  swift_release(v175);
  v180 = v239;
  v181 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000014, v202 | 0x8000000000000000);
  static Locale.current.getter(v181);
  v245 = String.init(localized:table:bundle:locale:comment:)(v180, 0, 0, 0, v161, "Accessibility text for add song to playlist action", 50, 2);
  v246 = v182;
  v183 = Text.init<A>(_:)(&v245, &type metadata for String, v172);
  v185 = v184;
  v187 = v186;
  v189 = v188 & 1;
  sub_5BDB8(v241, v173, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
  v190 = swift_allocObject(&unk_1392878, v174, v242);
  sub_5C04C(v173, v190 + v243, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
  v191 = (uint64_t)v230;
  ModifiedContent<>.accessibilityAction(named:_:)(v183, v185, v189, v187, sub_9D7B50, v190, v179);
  sub_56024(v178, &qword_14EE090);
  swift_release(v190);
  sub_AF8E8(v183, v185, v189);
  swift_bridgeObjectRelease();
  v192 = v228;
  sub_5C090(v191, v228, &qword_14EE090);
  sub_5C090(v192, v234, &qword_14EE090);
  sub_56024(v238, &qword_14EE0B8);
  swift_release(v237);
}

void sub_9C8A84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t inited;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  __n128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __n128 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89[96];
  char v90[56];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD5A0);
  __chkstk_darwin(v2);
  v4 = (char *)&v74 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AED20);
  __chkstk_darwin(v5);
  v83 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v84 = (char *)&v74 - v8;
  v9 = type metadata accessor for MetricsEvent.Click(0);
  __chkstk_darwin(v9);
  v85 = (uint64_t)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin(v11);
  __chkstk_darwin(v14);
  v16 = (char *)&v74 - v15;
  v18 = *(_QWORD *)(v0 + *(int *)(v17 + 20) + 8);
  v19 = swift_retain(v18);
  v20 = dispatch thunk of MusicSuggestedSongsViewModel.isPerformingUserInitiatedRefresh.getter(v19);
  swift_release(v18);
  if ((v20 & 1) == 0)
  {
    v80 = v13;
    v81 = (uint64_t)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    v82 = v4;
    if (qword_14AB840 != -1)
      v21 = swift_once(&qword_14AB840, sub_72B4E0);
    v22 = Song.id.getter(v21);
    v24 = sub_72B58C(v22, v23);
    v26 = v25;
    v27 = ~v25;
    swift_bridgeObjectRelease();
    if (v27 && (v26 != 2 || v24))
      sub_72D1F8();
    v29 = Song.catalogID.getter(v28);
    v31 = v30;
    v32 = sub_5BDB8(v1, (uint64_t)v16, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
    v79 = v12;
    if (!v31)
    {
      v29 = Song.id.getter(v32);
      v31 = v33;
    }
    v75 = v29;
    sub_5C0DC((uint64_t)v16, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_14B2FA0);
    inited = swift_initStackObject(v34, v90);
    v78 = xmmword_105F890;
    *(_OWORD *)(inited + 16) = xmmword_105F890;
    v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD330);
    v37 = swift_initStackObject(v36, v89);
    *(_OWORD *)(v37 + 16) = v78;
    *(_QWORD *)(v37 + 32) = 25705;
    *(_QWORD *)(v37 + 40) = 0xE200000000000000;
    *(_QWORD *)(v37 + 48) = v29;
    *(_QWORD *)(v37 + 56) = v31;
    strcpy((char *)(v37 + 64), "locationType");
    *(_BYTE *)(v37 + 77) = 0;
    *(_WORD *)(v37 + 78) = -5120;
    *(_QWORD *)(v37 + 80) = 0x657449666C656853;
    *(_QWORD *)(v37 + 88) = 0xE90000000000006DLL;
    swift_bridgeObjectRetain();
    *(_QWORD *)(inited + 32) = sub_196558(v37);
    v77 = inited + 32;
    *(_QWORD *)(inited + 40) = sub_196558((uint64_t)&off_133F560);
    v38 = swift_initStackObject(v36, &v88);
    *(_OWORD *)(v38 + 16) = xmmword_1060470;
    *(_QWORD *)(v38 + 32) = 1684957547;
    *(_QWORD *)(v38 + 40) = 0xE400000000000000;
    *(_QWORD *)(v38 + 48) = 1735290739;
    *(_QWORD *)(v38 + 56) = 0xE400000000000000;
    *(_QWORD *)(v38 + 64) = 0x6F54646461;
    *(_QWORD *)(v38 + 72) = 0xE500000000000000;
    *(_QWORD *)(v38 + 80) = 0x7473696C79616C70;
    *(_QWORD *)(v38 + 88) = 0xE800000000000000;
    *(_QWORD *)(v38 + 96) = 0x4E6E6F6974636573;
    *(_QWORD *)(v38 + 104) = 0xEB00000000656D61;
    *(_QWORD *)(v38 + 112) = 0x6574736567677553;
    *(_QWORD *)(v38 + 120) = 0xEF73676E6F532064;
    *(_QWORD *)(v38 + 128) = 0x49746E65746E6F63;
    *(_QWORD *)(v38 + 136) = 0xE900000000000064;
    *(_QWORD *)(v38 + 144) = Playlist.id.getter(v38);
    *(_QWORD *)(v38 + 152) = v39;
    v40 = sub_196558(v38);
    v41 = type metadata accessor for URL(0);
    v42 = *(_QWORD *)(v41 - 8);
    v76 = v1;
    v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v42 + 56);
    v44 = (uint64_t)v84;
    v43(v84, 1, 1, v41);
    *(_QWORD *)&v78 = inited;
    v45 = sub_30CEA8(inited);
    v46 = Playlist.id.getter(v45);
    v48 = v47;
    v49 = (uint64_t)v83;
    v43(v83, 1, 1, v41);
    v50 = v85;
    MetricsEvent.Click.init(targetIdentifier:targetType:actionType:actionURL:locations:actionContext:actionDetails:pageIdentifier:pageType:pageURL:pageDetails:pageDisplayType:snapshotImpressions:searchTerm:)(v75, v31, 22, 2, v44, (uint64_t)v45, 0, 9, v85, v40, 0, 768, v46, v48, 0x7473696C79616C50, 0xE800000000000000, v49, 0, 1,
      0,
      0,
      0);
    v51 = (id)*MetricsReportingController.shared.unsafeMutableAddressor();
    sub_53F8B4();
    v53 = v52;
    v55 = v54;
    if (qword_14AB568 != -1)
      swift_once(&qword_14AB568, sub_5BC10C);
    swift_beginAccess(&static UIApplication.groupActivitiesManager, &v87, 0, 0);
    v56 = static UIApplication.groupActivitiesManager;
    swift_retain(static UIApplication.groupActivitiesManager);
    v57 = GroupActivitiesManager.hasJoined.getter();
    v58 = GroupActivitiesManager.participantsCount.getter();
    v59 = (uint64_t *)(v56 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount);
    swift_beginAccess(v56 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount, &v86, 0, 0);
    v60 = *v59;
    v61 = swift_release(v56);
    (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, __n128))&stru_B8.sectname[swift_isaMask & *v51])(v50, v53, v55, v57 & 1, v58, v60, v61);

    swift_bridgeObjectRelease();
    v62 = type metadata accessor for TaskPriority(0);
    v63 = (uint64_t)v82;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56))(v82, 1, 1, v62);
    v64 = v81;
    sub_5BDB8(v76, v81, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
    type metadata accessor for MainActor(0);
    v66 = static MainActor.shared.getter(v65);
    v67 = *(unsigned __int8 *)(v79 + 80);
    v68 = (v67 + 32) & ~v67;
    v69 = swift_allocObject(&unk_13928A0, v68 + v80, v67 | 7);
    *(_QWORD *)(v69 + 16) = v66;
    *(_QWORD *)(v69 + 24) = &protocol witness table for MainActor;
    sub_5C04C(v64, v69 + v68, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
    v70 = sub_2223C8(v63, (uint64_t)&unk_14EE120, v69);
    sub_5C0DC(v50, type metadata accessor for MetricsEvent.Click);
    swift_release(v70);
    v71 = v78;
    swift_setDeallocating(v78);
    v72 = *(_QWORD *)(v71 + 16);
    v73 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14BA550);
    swift_arrayDestroy(v77, v72, v73);
  }
}

double sub_9C9170()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  double result;

  v0 = Image.init(systemName:)(0x7269632E73756C70, 0xEB00000000656C63);
  if (qword_14ABE58 != -1)
    swift_once(&qword_14ABE58, sub_9D0864);
  v1 = qword_1581620;
  KeyPath = swift_getKeyPath(&unk_108F4D0);
  v3 = qword_14ABE60;
  swift_retain(v1);
  if (v3 != -1)
    swift_once(&qword_14ABE60, sub_9D0880);
  v4 = qword_1581628;
  v5 = swift_getKeyPath(&unk_108F500);
  v6 = qword_14ABE68;
  swift_retain(v4);
  if (v6 != -1)
    swift_once(&qword_14ABE68, sub_9D089C);
  v7 = qword_1581630;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14B5648);
  v9 = sub_185000();
  View.fontWeight(_:)(v7, 0, v8, v9);
  swift_release(v4);
  swift_release(v5);
  swift_release(v1);
  swift_release(KeyPath);
  *(_QWORD *)&result = swift_release(v0).n128_u64[0];
  return result;
}

uint64_t sub_9C92FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double *v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char v33;
  char *v34;
  uint64_t v35;
  char *v36;
  double v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, _QWORD, uint64_t);
  double v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  uint64_t v53;
  double v54;
  double v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  unint64_t v65;
  unint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(char *, char *, uint64_t);
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  void (*v80)(char *, uint64_t);
  _QWORD v82[4];
  uint64_t v83;
  uint64_t v84;
  void (*v85)(char *, _QWORD, uint64_t);
  unsigned int v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  _OWORD v110[2];

  v99 = a3;
  v105 = a4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE128);
  __chkstk_darwin(v6);
  v106 = (uint64_t)&v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v104 = (uint64_t)&v83 - v9;
  v10 = type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell(0);
  v95 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v96 = v11;
  v97 = (uint64_t)&v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v107);
  v13 = (double *)((char *)&v83 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v108 = type metadata accessor for RoundedRectangle._Inset(0);
  v14 = __chkstk_darwin(v108);
  v91 = (uint64_t)&v83 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = type metadata accessor for ContentShapeKinds(0, v14);
  v90 = *(_QWORD *)(v92 - 8);
  __chkstk_darwin(v92);
  v17 = (char *)&v83 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE130);
  __chkstk_darwin(v18);
  v20 = (char *)&v83 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE138);
  __chkstk_darwin(v21);
  v23 = (char *)&v83 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE140);
  __chkstk_darwin(v87);
  v89 = (char *)&v83 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE148);
  __chkstk_darwin(v109);
  v94 = (char *)&v83 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE150);
  v100 = *(_QWORD *)(v102 - 8);
  __chkstk_darwin(v102);
  v101 = (char *)&v83 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v93 = (uint64_t)&v83 - v28;
  __chkstk_darwin(v29);
  v31 = (char *)&v83 - v30;
  v103 = a1;
  v83 = a2;
  sub_9C9C88(a1, a2, (uint64_t)v20);
  if (qword_14ABDA8 != -1)
    swift_once(&qword_14ABDA8, sub_9D04B0);
  v32 = Color.init(_:)((id)qword_1581540);
  v33 = static Edge.Set.all.getter(v32);
  sub_5C238((uint64_t)v20, (uint64_t)v23, &qword_14EE130);
  v34 = &v23[*(int *)(v21 + 36)];
  *(_QWORD *)v34 = v32;
  v34[8] = v33;
  v35 = sub_56024((uint64_t)v20, &qword_14EE130);
  static ContentShapeKinds.contextMenuPreview.getter(v35);
  v36 = v17;
  if (qword_14ABE20 != -1)
    swift_once(&qword_14ABE20, sub_9D0770);
  v88 = v23;
  v98 = v31;
  v37 = Corner.radius(in:)(xmmword_15815C0, 0.0, 0.0, 0.0, 0.0, *((uint64_t *)&xmmword_15815C0 + 1), byte_15815D0);
  v38 = (char *)v13 + *(int *)(v107 + 20);
  v39 = enum case for RoundedCornerStyle.continuous(_:);
  v40 = type metadata accessor for RoundedCornerStyle(0);
  v41 = *(void (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(v40 - 8) + 104);
  v86 = v39;
  v84 = v40;
  v85 = v41;
  ((void (*)(char *, uint64_t))v41)(v38, v39);
  *v13 = v37;
  v13[1] = v37;
  if (qword_14ABE78 != -1)
    swift_once(&qword_14ABE78, sub_9D08D8);
  v42 = -*(double *)&qword_1581640;
  v43 = v91;
  sub_5BDB8((uint64_t)v13, v91, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(double *)(v43 + *(int *)(v108 + 20)) = v42;
  sub_5C0DC((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v44 = (uint64_t)v89;
  v45 = (uint64_t)&v89[*(int *)(v87 + 36)];
  sub_5BDB8(v43, v45, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle._Inset);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE158);
  v47 = v45 + *(int *)(v46 + 40);
  v48 = v90;
  v87 = *(_QWORD *)(v90 + 16);
  v49 = v17;
  v50 = v92;
  ((void (*)(uint64_t, char *, uint64_t))v87)(v47, v49, v92);
  *(_BYTE *)(v45 + *(int *)(v46 + 36)) = 0;
  v51 = (uint64_t)v88;
  sub_5C238((uint64_t)v88, v44, &qword_14EE138);
  sub_5C0DC(v43, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle._Inset);
  v52 = *(void (**)(char *, uint64_t))(v48 + 8);
  v52(v36, v50);
  v53 = sub_56024(v51, &qword_14EE138);
  static ContentShapeKinds.interaction.getter(v53);
  v54 = Corner.radius(in:)(xmmword_15815C0, 0.0, 0.0, 0.0, 0.0, *((uint64_t *)&xmmword_15815C0 + 1), byte_15815D0);
  v85((char *)v13 + *(int *)(v107 + 20), v86, v84);
  *v13 = v54;
  v13[1] = v54;
  v55 = -*(double *)&qword_1581640;
  sub_5BDB8((uint64_t)v13, v43, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(double *)(v43 + *(int *)(v108 + 20)) = v55;
  sub_5C0DC((uint64_t)v13, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v56 = (uint64_t)v94;
  v57 = (uint64_t)&v94[*(int *)(v109 + 36)];
  sub_5BDB8(v43, v57, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle._Inset);
  ((void (*)(uint64_t, char *, uint64_t))v87)(v57 + *(int *)(v46 + 40), v36, v50);
  *(_BYTE *)(v57 + *(int *)(v46 + 36)) = 0;
  sub_5C238(v44, v56, &qword_14EE140);
  sub_5C0DC(v43, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle._Inset);
  v52(v36, v50);
  sub_56024(v44, &qword_14EE140);
  v58 = v103;
  sub_9CB178(v110);
  __chkstk_darwin(v59);
  v82[2] = v58;
  v82[3] = v99;
  v60 = v97;
  sub_5BDB8(v58, v97, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
  v61 = *(unsigned __int8 *)(v95 + 80);
  v62 = (v61 + 16) & ~v61;
  v63 = swift_allocObject(&unk_13928C8, v62 + v96, v61 | 7);
  sub_5C04C(v60, v63 + v62, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
  v64 = (_QWORD *)type metadata accessor for ContextualPreview(0);
  v65 = sub_9D87D0();
  v66 = sub_102034();
  v67 = (_QWORD *)sub_4DD24(&qword_14EE1C8, type metadata accessor for ContextualPreview, (uint64_t)&unk_107BE10);
  v68 = v93;
  View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)(0, 0, (uint64_t)v110, (uint64_t)&off_133F538, (uint64_t)sub_9D8798, (uint64_t)v82, (uint64_t)sub_9D87A4, v63, v93, v109, (uint64_t)&type metadata for ActionType, v64, v65, v66, v67);
  sub_56024(v56, &qword_14EE148);
  swift_release(v63);
  sub_5BD0C((uint64_t)v110);
  v69 = v100;
  v70 = v98;
  v71 = v102;
  (*(void (**)(char *, uint64_t, uint64_t))(v100 + 32))(v98, v68, v102);
  if ((sub_9C9F8C() & 1) != 0)
  {
    v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE0B8);
    v73 = v104;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56))(v104, 1, 1, v72);
  }
  else
  {
    v73 = v104;
    sub_5C238(v83, v104, &qword_14EE0B8);
    v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE0B8);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 56))(v73, 0, 1, v74);
  }
  v75 = *(void (**)(char *, char *, uint64_t))(v69 + 16);
  v76 = v101;
  v75(v101, v70, v71);
  v77 = v106;
  sub_5C238(v73, v106, &qword_14EE128);
  v78 = v105;
  v75(v105, v76, v71);
  v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE1D0);
  sub_5C238(v77, (uint64_t)&v78[*(int *)(v79 + 48)], &qword_14EE128);
  sub_56024(v73, &qword_14EE128);
  v80 = *(void (**)(char *, uint64_t))(v69 + 8);
  v80(v70, v71);
  sub_56024(v77, &qword_14EE128);
  return ((uint64_t (*)(char *, uint64_t))v80)(v76, v71);
}

uint64_t sub_9C9C88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v33[2];

  v33[0] = a2;
  v33[1] = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE1B8);
  __chkstk_darwin(v4);
  v6 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE200);
  __chkstk_darwin(v7);
  v9 = (char *)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE1A8);
  __chkstk_darwin(v10);
  v12 = (char *)v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE198);
  __chkstk_darwin(v13);
  v15 = (char *)v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)v33 - v17;
  v19 = sub_9C9F8C();
  if ((v19 & 1) != 0)
  {
    *(_QWORD *)v12 = static HorizontalAlignment.leading.getter(v19);
    *((_QWORD *)v12 + 1) = 0;
    v12[16] = 0;
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE210);
    sub_9CA424(a1, v33[0], (uint64_t)&v12[*(int *)(v21 + 44)]);
    v23 = static Alignment.leading.getter(v22);
    sub_9C0DA4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v15, 0.0, 1, 0.0, 1, v23, v24, &qword_14EE1A8, &qword_14EE198);
    sub_56024((uint64_t)v12, &qword_14EE1A8);
    sub_5C090((uint64_t)v15, (uint64_t)v18, &qword_14EE198);
    sub_5C238((uint64_t)v18, (uint64_t)v9, &qword_14EE198);
    swift_storeEnumTagMultiPayload(v9, v7, 0);
    v25 = sub_9D8A5C();
    v26 = sub_5C150(&qword_14EE1B0, &qword_14EE1B8, (uint64_t)&protocol conformance descriptor for HStack<A>);
    _ConditionalContent<>.init(storage:)(v9, v13, v4, v25, v26);
    v27 = (uint64_t)v18;
    v28 = &qword_14EE198;
  }
  else
  {
    *(_QWORD *)v6 = static VerticalAlignment.center.getter(v20);
    *((_QWORD *)v6 + 1) = 0;
    v6[16] = 0;
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE208);
    sub_9CAAC4(a1, (uint64_t)&v6[*(int *)(v29 + 44)]);
    sub_5C238((uint64_t)v6, (uint64_t)v9, &qword_14EE1B8);
    swift_storeEnumTagMultiPayload(v9, v7, 1);
    v30 = sub_9D8A5C();
    v31 = sub_5C150(&qword_14EE1B0, &qword_14EE1B8, (uint64_t)&protocol conformance descriptor for HStack<A>);
    _ConditionalContent<>.init(storage:)(v9, v13, v4, v30, v31);
    v27 = (uint64_t)v6;
    v28 = &qword_14EE1B8;
  }
  return sub_56024(v27, v28);
}

uint64_t sub_9C9F8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char v23;
  void (*v24)(char *, uint64_t);
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  char v33;
  uint64_t v34;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v1 = v0;
  v2 = type metadata accessor for UserInterfaceSizeClass(0);
  v45 = *(_QWORD *)(v2 - 8);
  v46 = v2;
  __chkstk_darwin(v2);
  v40 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_14BC660);
  __chkstk_darwin(v43);
  v44 = (uint64_t)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E0470);
  __chkstk_darwin(v5);
  v41 = (uint64_t)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v39 - v8;
  __chkstk_darwin(v10);
  v42 = (uint64_t)&v39 - v11;
  v12 = type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for DynamicTypeSize(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v39 - v20;
  sub_724544((uint64_t)&v39 - v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v18, enum case for DynamicTypeSize.accessibility3(_:), v15);
  v22 = sub_4DD24((unint64_t *)&qword_14BF260, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  v23 = dispatch thunk of static Comparable.< infix(_:_:)(v21, v18, v15, v22);
  v24 = *(void (**)(char *, uint64_t))(v16 + 8);
  v25 = v18;
  v26 = (uint64_t)v14;
  v24(v25, v15);
  v24(v21, v15);
  sub_5BDB8(v1, (uint64_t)v14, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
  if ((v23 & 1) != 0)
  {
    sub_5C0DC((uint64_t)v14, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
LABEL_9:
    v33 = 0;
    return v33 & 1;
  }
  v27 = v42;
  sub_7249C4(v42);
  v29 = v45;
  v28 = v46;
  (*(void (**)(char *, _QWORD, uint64_t))(v45 + 104))(v9, enum case for UserInterfaceSizeClass.compact(_:), v46);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v9, 0, 1, v28);
  v30 = v44;
  v31 = v44 + *(int *)(v43 + 48);
  sub_5C238(v27, v44, &qword_14E0470);
  sub_5C238((uint64_t)v9, v31, &qword_14E0470);
  v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48);
  if (v32(v30, 1, v28) != 1)
  {
    v34 = v41;
    sub_5C238(v30, v41, &qword_14E0470);
    if (v32(v31, 1, v28) != 1)
    {
      v36 = v40;
      (*(void (**)(char *, uint64_t, uint64_t))(v29 + 32))(v40, v31, v28);
      v37 = sub_4DD24(&qword_14CFE60, (uint64_t (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass, (uint64_t)&protocol conformance descriptor for UserInterfaceSizeClass);
      v33 = dispatch thunk of static Equatable.== infix(_:_:)(v34, v36, v28, v37);
      v38 = *(void (**)(char *, uint64_t))(v29 + 8);
      v38(v36, v28);
      sub_56024((uint64_t)v9, &qword_14E0470);
      sub_56024(v27, &qword_14E0470);
      sub_5C0DC(v26, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
      v38((char *)v34, v28);
      sub_56024(v30, &qword_14E0470);
      return v33 & 1;
    }
    sub_56024((uint64_t)v9, &qword_14E0470);
    sub_56024(v27, &qword_14E0470);
    sub_5C0DC(v26, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v34, v28);
    goto LABEL_8;
  }
  sub_56024((uint64_t)v9, &qword_14E0470);
  sub_56024(v27, &qword_14E0470);
  sub_5C0DC(v26, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
  if (v32(v31, 1, v28) != 1)
  {
LABEL_8:
    sub_56024(v30, &qword_14BC660);
    goto LABEL_9;
  }
  sub_56024(v30, &qword_14E0470);
  v33 = 1;
  return v33 & 1;
}

uint64_t sub_9CA424@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _OWORD v64[3];

  v61 = a2;
  v63 = a3;
  v60 = type metadata accessor for PlaylistSongSuggestionsView.VerticalText(0);
  __chkstk_darwin(v60);
  v5 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v62 = (uint64_t)&v56 - v7;
  v8 = type metadata accessor for DynamicTypeSize(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v56 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE218);
  __chkstk_darwin(v15);
  v17 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE220);
  __chkstk_darwin(v18);
  v20 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE228);
  __chkstk_darwin(v57);
  v59 = (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)&v56 - v23;
  v26 = __chkstk_darwin(v25);
  v58 = (uint64_t)&v56 - v27;
  *(_QWORD *)v17 = static VerticalAlignment.center.getter(v26);
  *((_QWORD *)v17 + 1) = 0;
  v17[16] = 0;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE230);
  sub_9CA8C0(a1, v61, (uint64_t)&v17[*(int *)(v28 + 44)]);
  type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell(0);
  v61 = a1;
  sub_724544((uint64_t)v14);
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for DynamicTypeSize.accessibility3(_:), v8);
  LOBYTE(a1) = static DynamicTypeSize.< infix(_:_:)(v14, v11);
  v29 = *(void (**)(char *, uint64_t))(v9 + 8);
  v29(v11, v8);
  v30 = ((uint64_t (*)(char *, uint64_t))v29)(v14, v8);
  if ((a1 & 1) != 0)
    v31 = 0x4048000000000000;
  else
    v31 = 0x4052000000000000;
  v32 = static Alignment.center.getter(v30);
  _FrameLayout.init(width:height:alignment:)(v64, 0, 1, v31, 0, v32, v33);
  sub_5C238((uint64_t)v17, (uint64_t)v20, &qword_14EE218);
  v34 = &v20[*(int *)(v18 + 36)];
  v35 = v64[1];
  *(_OWORD *)v34 = v64[0];
  *((_OWORD *)v34 + 1) = v35;
  *((_OWORD *)v34 + 2) = v64[2];
  v36 = sub_56024((uint64_t)v17, &qword_14EE218);
  v37 = static Edge.Set.bottom.getter(v36);
  v38 = v37;
  if (qword_14AAD98 != -1)
    v37 = swift_once(&qword_14AAD98, sub_2C7470);
  v39 = EdgeInsets.init(_all:)(v37, *(double *)&qword_157FD68);
  v41 = v40;
  v43 = v42;
  v45 = v44;
  sub_5C238((uint64_t)v20, (uint64_t)v24, &qword_14EE220);
  v46 = &v24[*(int *)(v57 + 36)];
  *v46 = v38;
  *((double *)v46 + 1) = v39;
  *((_QWORD *)v46 + 2) = v41;
  *((_QWORD *)v46 + 3) = v43;
  *((_QWORD *)v46 + 4) = v45;
  v46[40] = 0;
  sub_56024((uint64_t)v20, &qword_14EE220);
  v47 = v58;
  sub_5C090((uint64_t)v24, v58, &qword_14EE228);
  v48 = type metadata accessor for Song(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v5, v61, v48);
  v49 = &v5[*(int *)(v60 + 20)];
  *(_QWORD *)v49 = swift_getKeyPath(&unk_108F398);
  v50 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
  swift_storeEnumTagMultiPayload(v49, v50, 0);
  v51 = v62;
  sub_5C04C((uint64_t)v5, v62, type metadata accessor for PlaylistSongSuggestionsView.VerticalText);
  v52 = v59;
  sub_5C238(v47, v59, &qword_14EE228);
  sub_5BDB8(v51, (uint64_t)v5, type metadata accessor for PlaylistSongSuggestionsView.VerticalText);
  v53 = v63;
  sub_5C238(v52, v63, &qword_14EE228);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE238);
  sub_5BDB8((uint64_t)v5, v53 + *(int *)(v54 + 48), type metadata accessor for PlaylistSongSuggestionsView.VerticalText);
  sub_5C0DC(v51, type metadata accessor for PlaylistSongSuggestionsView.VerticalText);
  sub_56024(v47, &qword_14EE228);
  sub_5C0DC((uint64_t)v5, type metadata accessor for PlaylistSongSuggestionsView.VerticalText);
  return sub_56024(v52, &qword_14EE228);
}

uint64_t sub_9CA8C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE0B8);
  __chkstk_darwin(v6);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v24 - v10;
  v12 = type metadata accessor for PlaylistSongSuggestionsView.PreviewArtwork(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v24 - v16;
  v18 = type metadata accessor for Song(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v14, a1, v18);
  v19 = &v14[*(int *)(v12 + 20)];
  *(_QWORD *)v19 = swift_getKeyPath(&unk_108F398);
  v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
  swift_storeEnumTagMultiPayload(v19, v20, 0);
  sub_5C04C((uint64_t)v14, (uint64_t)v17, type metadata accessor for PlaylistSongSuggestionsView.PreviewArtwork);
  sub_5C238(a2, (uint64_t)v11, &qword_14EE0B8);
  sub_5BDB8((uint64_t)v17, (uint64_t)v14, type metadata accessor for PlaylistSongSuggestionsView.PreviewArtwork);
  sub_5C238((uint64_t)v11, (uint64_t)v8, &qword_14EE0B8);
  sub_5BDB8((uint64_t)v14, a3, type metadata accessor for PlaylistSongSuggestionsView.PreviewArtwork);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE240);
  v22 = a3 + *(int *)(v21 + 48);
  *(_QWORD *)v22 = 0;
  *(_BYTE *)(v22 + 8) = 1;
  sub_5C238((uint64_t)v8, a3 + *(int *)(v21 + 64), &qword_14EE0B8);
  sub_56024((uint64_t)v11, &qword_14EE0B8);
  sub_5C0DC((uint64_t)v17, type metadata accessor for PlaylistSongSuggestionsView.PreviewArtwork);
  sub_56024((uint64_t)v8, &qword_14EE0B8);
  return sub_5C0DC((uint64_t)v14, type metadata accessor for PlaylistSongSuggestionsView.PreviewArtwork);
}

uint64_t sub_9CAAC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t KeyPath;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t (*v37)(uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD v83[2];
  __int128 v84;
  uint64_t v85;

  v82 = a2;
  v81 = type metadata accessor for PlaylistSongSuggestionsView.HorizontalText(0);
  __chkstk_darwin(v81);
  v70 = (char *)&v67 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v71 = (uint64_t)&v67 - v5;
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE248);
  __chkstk_darwin(v76);
  v80 = (uint64_t)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = type metadata accessor for PlaylistSongSuggestionsView.VerticalText(0);
  __chkstk_darwin(v78);
  v68 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v69 = (uint64_t)&v67 - v9;
  v74 = type metadata accessor for DynamicTypeSize(0);
  v72 = *(_QWORD *)(v74 - 8);
  __chkstk_darwin(v74);
  v11 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E0470);
  __chkstk_darwin(v12);
  v14 = (char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE250);
  __chkstk_darwin(v15);
  v79 = (uint64_t)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v77 = (char *)&v67 - v18;
  v19 = type metadata accessor for PlaylistSongSuggestionsView.PreviewArtwork(0);
  __chkstk_darwin(v19);
  v21 = (char *)&v67 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)&v67 - v23;
  v25 = type metadata accessor for Song(0);
  v26 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
  v26(v21, a1, v25);
  v27 = &v21[*(int *)(v19 + 20)];
  *(_QWORD *)v27 = swift_getKeyPath(&unk_108F398);
  v73 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
  swift_storeEnumTagMultiPayload(v27, v73, 0);
  v75 = v24;
  sub_5C04C((uint64_t)v21, (uint64_t)v24, type metadata accessor for PlaylistSongSuggestionsView.PreviewArtwork);
  v28 = type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell(0);
  sub_7249C4((uint64_t)v14);
  sub_724544((uint64_t)v11);
  v29 = a1 + *(int *)(v28 + 24);
  v30 = *(_QWORD *)(v29 + 8);
  KeyPath = swift_getKeyPath(&unk_108F2D8);
  v32 = swift_getKeyPath(&unk_108F300);
  swift_retain(v30);
  static Published.subscript.getter(&v84, v33, KeyPath, v32);
  swift_release(v30);
  swift_release(KeyPath);
  swift_release(v32);
  LOBYTE(v30) = sub_9D9050((uint64_t)v14, (uint64_t)v11, *(double *)&v84);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v11, v74);
  sub_56024((uint64_t)v14, &qword_14E0470);
  if ((v30 & 1) != 0)
  {
    v34 = (uint64_t)v68;
    v26(v68, a1, v25);
    v35 = v78;
    v36 = (_QWORD *)(v34 + *(int *)(v78 + 20));
    *v36 = swift_getKeyPath(&unk_108F398);
    swift_storeEnumTagMultiPayload(v36, v73, 0);
    v37 = type metadata accessor for PlaylistSongSuggestionsView.VerticalText;
    v38 = v69;
    sub_5C04C(v34, v69, type metadata accessor for PlaylistSongSuggestionsView.VerticalText);
    v39 = v80;
    sub_5BDB8(v38, v80, type metadata accessor for PlaylistSongSuggestionsView.VerticalText);
    swift_storeEnumTagMultiPayload(v39, v76, 0);
    v40 = sub_4DD24(&qword_14EE258, type metadata accessor for PlaylistSongSuggestionsView.VerticalText, (uint64_t)&unk_108F81C);
    v41 = sub_4DD24(&qword_14EE260, type metadata accessor for PlaylistSongSuggestionsView.HorizontalText, (uint64_t)&unk_108F7CC);
    v42 = (uint64_t)v77;
    _ConditionalContent<>.init(storage:)(v39, v35, v81, v40, v41);
    v43 = v38;
  }
  else
  {
    v44 = (uint64_t)v70;
    v26(v70, a1, v25);
    v45 = *(_QWORD *)(v29 + 8);
    v46 = (int *)v81;
    v47 = (_QWORD *)(v44 + *(int *)(v81 + 20));
    v48 = type metadata accessor for SuggestedSongsDataSource(0);
    v49 = sub_4DD24((unint64_t *)&unk_14EA220, type metadata accessor for SuggestedSongsDataSource, (uint64_t)&unk_108F254);
    swift_retain(v45);
    *v47 = ObservedObject.init(wrappedValue:)(v50, v48, v49);
    v47[1] = v51;
    v52 = v44 + v46[6];
    type metadata accessor for CGSize(0);
    v83[0] = 0;
    v83[1] = 0;
    State.init(wrappedValue:)(&v84, v83, v53);
    v54 = v85;
    *(_OWORD *)v52 = v84;
    *(_QWORD *)(v52 + 16) = v54;
    v55 = (_QWORD *)(v44 + v46[7]);
    *v55 = swift_getKeyPath(&unk_108F398);
    swift_storeEnumTagMultiPayload(v55, v73, 0);
    v56 = (_QWORD *)(v44 + v46[8]);
    *v56 = swift_getKeyPath(&unk_108F368);
    v57 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14CD210);
    swift_storeEnumTagMultiPayload(v56, v57, 0);
    v37 = type metadata accessor for PlaylistSongSuggestionsView.HorizontalText;
    v58 = v71;
    sub_5C04C(v44, v71, type metadata accessor for PlaylistSongSuggestionsView.HorizontalText);
    v59 = v80;
    sub_5BDB8(v58, v80, type metadata accessor for PlaylistSongSuggestionsView.HorizontalText);
    swift_storeEnumTagMultiPayload(v59, v76, 1);
    v60 = sub_4DD24(&qword_14EE258, type metadata accessor for PlaylistSongSuggestionsView.VerticalText, (uint64_t)&unk_108F81C);
    v61 = sub_4DD24(&qword_14EE260, type metadata accessor for PlaylistSongSuggestionsView.HorizontalText, (uint64_t)&unk_108F7CC);
    v42 = (uint64_t)v77;
    _ConditionalContent<>.init(storage:)(v59, v78, v46, v60, v61);
    v43 = v58;
  }
  sub_5C0DC(v43, v37);
  v62 = (uint64_t)v75;
  sub_5BDB8((uint64_t)v75, (uint64_t)v21, type metadata accessor for PlaylistSongSuggestionsView.PreviewArtwork);
  v63 = v79;
  sub_5C238(v42, v79, &qword_14EE250);
  v64 = v82;
  sub_5BDB8((uint64_t)v21, v82, type metadata accessor for PlaylistSongSuggestionsView.PreviewArtwork);
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE268);
  sub_5C238(v63, v64 + *(int *)(v65 + 48), &qword_14EE250);
  sub_56024(v42, &qword_14EE250);
  sub_5C0DC(v62, type metadata accessor for PlaylistSongSuggestionsView.PreviewArtwork);
  sub_56024(v63, &qword_14EE250);
  return sub_5C0DC((uint64_t)v21, type metadata accessor for PlaylistSongSuggestionsView.PreviewArtwork);
}

void sub_9CB178(_OWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t Strong;
  uint64_t v16;
  uint64_t inited;
  char *boxed_opaque_existential_1Tm;
  unint64_t v19;
  unint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  void *v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  void *v44;
  _OWORD *v45;
  uint64_t v46;
  _BYTE v47[48];
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  _BYTE v51[72];
  _OWORD v52[5];
  _BYTE v53[96];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14BB530);
  __chkstk_darwin(v4);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD550);
  __chkstk_darwin(v7);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Song(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell(0);
  sub_6087C(*(_QWORD *)(v2 + *(int *)(v14 + 24) + 8)+ OBJC_IVAR____TtC16MusicApplication24SuggestedSongsDataSource_presentationSource, (uint64_t)v51);
  Strong = swift_unknownObjectWeakLoadStrong(v51);
  sub_56060((uint64_t)v51);
  if (Strong)
  {
    v44 = (void *)Strong;
    v45 = a1;
    v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD560);
    inited = swift_initStackObject(v16, &v50);
    *(_OWORD *)(inited + 16) = xmmword_105B360;
    *(_QWORD *)(inited + 56) = v10;
    *(_QWORD *)(inited + 64) = &protocol witness table for Song;
    v43 = inited + 32;
    boxed_opaque_existential_1Tm = (char *)__swift_allocate_boxed_opaque_existential_1Tm((_QWORD *)(inited + 32));
    v19 = (unint64_t)v6;
    v20 = (unint64_t)v9;
    v21 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    v21(boxed_opaque_existential_1Tm, v2, v10);
    sub_4E684(0, (unint64_t *)&qword_14B0240, MPCPlaybackIntent_ptr);
    v21(v13, v2, v10);
    v22 = (void *)MPCPlaybackIntent.init<A>(_:)(v13, v10, &protocol witness table for Song);
    v23 = type metadata accessor for PlaylistContext(0);
    (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v20, 1, 1, v23);
    type metadata accessor for MusicLibrary(0);
    v25 = static MusicLibrary.shared.getter(v24);
    sub_5BDB8(v2 + *(int *)(v14 + 40), v19, type metadata accessor for Actions.MetricsReportingContext);
    v26 = type metadata accessor for Actions.MetricsReportingContext(0);
    (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v19, 0, 1, v26);
    memset(v53, 0, 80);
    v48 = 0;
    memset(v47, 0, sizeof(v47));
    v49 = xmmword_1060130;
    if (qword_14AB558 != -1)
      swift_once(&qword_14AB558, sub_5BBDBC);
    v27 = qword_14AB570;
    v28 = (id)static UIApplication.playbackController;
    if (v27 != -1)
      swift_once(&qword_14AB570, sub_5BC224);
    swift_beginAccess(&static UIApplication.collaborationManager, &v46, 0, 0);
    v29 = static UIApplication.collaborationManager;
    swift_retain(static UIApplication.collaborationManager);
    v30 = v44;
    sub_8AAF64(inited, v22, v20, v25, v28, v29, v19, (uint64_t)v53, v52, (uint64_t)v47, 1);
    v41 = v52[1];
    v42 = v52[0];
    v39 = v52[3];
    v40 = v52[2];
    v38 = v52[4];
    sub_56024((uint64_t)v47, (uint64_t *)&unk_14AD380);
    sub_56024(v19, &qword_14BB530);
    sub_56024(v20, (uint64_t *)&unk_14AD550);

    swift_release(v25);
    swift_release(v29);
    swift_setDeallocating(inited);
    v31 = *(_QWORD *)(inited + 16);
    v32 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD580);
    swift_arrayDestroy(v43, v31, v32);

    v34 = v38;
    v33 = v39;
    v36 = v40;
    v35 = v41;
    v37 = v42;
    a1 = v45;
  }
  else
  {
    v37 = 0uLL;
    v35 = 0uLL;
    v36 = 0uLL;
    v33 = 0uLL;
    v34 = 0uLL;
  }
  *a1 = v37;
  a1[1] = v35;
  a1[2] = v36;
  a1[3] = v33;
  a1[4] = v34;
}

uint64_t sub_9CB590@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  double v14;
  uint64_t v16;

  v6 = type metadata accessor for ContextualPreview.Data(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Song(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16))(v13, a1, v9, v11);
  sub_5951C4((uint64_t)v8, v14);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  v8[*(int *)(v6 + 36)] = a2 != 0;
  return sub_5C04C((uint64_t)v8, a3, type metadata accessor for ContextualPreview.Data);
}

double sub_9CB6A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  void *Strong;
  double result;
  id v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v21[72];

  v2 = type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  v5 = &v21[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD5A0);
  __chkstk_darwin(v6);
  v8 = &v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_6087C(*(_QWORD *)(a1 + *(int *)(v2 + 24) + 8)+ OBJC_IVAR____TtC16MusicApplication24SuggestedSongsDataSource_presentationSource, (uint64_t)v21);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v21);
  sub_56060((uint64_t)v21);
  if (Strong)
  {
    v11 = sub_AF954();

    if (v11)
    {
      v12 = type metadata accessor for TaskPriority(0);
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 1, 1, v12);
      sub_5BDB8(a1, (uint64_t)&v21[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8], type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
      type metadata accessor for MainActor(0);
      v13 = swift_retain(v11);
      v14 = static MainActor.shared.getter(v13);
      v15 = *(unsigned __int8 *)(v3 + 80);
      v16 = (v15 + 32) & ~v15;
      v17 = (v4 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
      v18 = swift_allocObject(&unk_13928F0, v17 + 8, v15 | 7);
      *(_QWORD *)(v18 + 16) = v14;
      *(_QWORD *)(v18 + 24) = &protocol witness table for MainActor;
      sub_5C04C((uint64_t)v5, v18 + v16, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
      *(_QWORD *)(v18 + v17) = v11;
      v19 = sub_D8264((uint64_t)v8, (uint64_t)&unk_14EE1E0, v18);
      swift_release(v19);
      *(_QWORD *)&result = swift_release(v11).n128_u64[0];
    }
  }
  return result;
}

void sub_9CB85C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  uint64_t v25;
  int v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t inited;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(_BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _BYTE v64[12];
  int v65;
  __int128 v66;
  _BYTE *v67;
  _BYTE *v68;
  _BYTE *v69;
  uint64_t v70;
  _BYTE v71[24];
  _BYTE v72[24];
  _BYTE v73[96];
  _BYTE v74[52];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AED20);
  __chkstk_darwin(v2);
  v4 = &v64[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v7 = &v64[-v6];
  v8 = type metadata accessor for MetricsEvent.Click(0);
  __chkstk_darwin(v8);
  v10 = &v64[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell(0);
  __chkstk_darwin(v11);
  v13 = &v64[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = type metadata accessor for PreviewPlaybackController.Context.Source(0);
  __chkstk_darwin(v14);
  v16 = &v64[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v70 = v11;
  v17 = v1 + *(int *)(v11 + 20);
  v18 = *(_QWORD *)(v17 + 8);
  v19 = swift_retain(v18);
  LOBYTE(v11) = dispatch thunk of MusicSuggestedSongsViewModel.isPerformingUserInitiatedRefresh.getter(v19);
  swift_release(v18);
  if ((v11 & 1) != 0)
    return;
  v67 = v4;
  v68 = v7;
  v69 = v10;
  if (qword_14AB840 != -1)
    v20 = swift_once(&qword_14AB840, sub_72B4E0);
  v21 = Song.id.getter(v20);
  sub_72B58C(v21, v22);
  v24 = v23;
  swift_bridgeObjectRelease();
  if (v24 > 1u)
  {
    if (v24 == 2)
    {
      sub_72D1F8();
      v26 = 46;
      goto LABEL_12;
    }
    v29 = type metadata accessor for Song(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v16, v1, v29);
    swift_storeEnumTagMultiPayload(v16, v14, 0);
    sub_72B874((uint64_t)v16, 0);
    sub_5C0DC((uint64_t)v16, type metadata accessor for PreviewPlaybackController.Context.Source);
    v30 = *(_QWORD *)(v17 + 8);
    v31 = swift_retain(v30);
    dispatch thunk of MusicSuggestedSongsViewModel.didPreview(_:)(v1, v31);
    v28 = v30;
LABEL_11:
    swift_release(v28);
    v26 = 45;
    goto LABEL_12;
  }
  if (v24)
  {
    sub_72CB14();
    v27 = swift_retain(v18);
    dispatch thunk of MusicSuggestedSongsViewModel.didPreview(_:)(v1, v27);
    v28 = v18;
    goto LABEL_11;
  }
  sub_72D0A0();
  v26 = 46;
LABEL_12:
  v65 = v26;
  v32 = Song.catalogID.getter(v25);
  v34 = v33;
  v35 = sub_5BDB8(v1, (uint64_t)v13, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
  if (!v34)
  {
    v32 = Song.id.getter(v35);
    v34 = v36;
  }
  sub_5C0DC((uint64_t)v13, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_14B2FA0);
  inited = swift_initStackObject(v37, v74);
  v66 = xmmword_105F890;
  *(_OWORD *)(inited + 16) = xmmword_105F890;
  v39 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD330);
  v40 = swift_initStackObject(v39, v73);
  *(_OWORD *)(v40 + 16) = v66;
  *(_QWORD *)(v40 + 32) = 25705;
  *(_QWORD *)(v40 + 40) = 0xE200000000000000;
  *(_QWORD *)(v40 + 48) = v32;
  *(_QWORD *)(v40 + 56) = v34;
  strcpy((char *)(v40 + 64), "locationType");
  *(_BYTE *)(v40 + 77) = 0;
  *(_WORD *)(v40 + 78) = -5120;
  *(_QWORD *)(v40 + 80) = 0x657449666C656853;
  *(_QWORD *)(v40 + 88) = 0xE90000000000006DLL;
  swift_bridgeObjectRetain();
  *(_QWORD *)(inited + 32) = sub_196558(v40);
  *(_QWORD *)&v66 = inited + 32;
  *(_QWORD *)(inited + 40) = sub_196558((uint64_t)&off_133F5C0);
  v41 = type metadata accessor for URL(0);
  v42 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56);
  v43 = (uint64_t)v68;
  v42(v68, 1, 1, v41);
  v44 = sub_30CEA8(inited);
  v45 = Playlist.id.getter(v44);
  v47 = v46;
  v48 = (uint64_t)v67;
  v42(v67, 1, 1, v41);
  v63 = v48;
  v49 = (uint64_t)v69;
  MetricsEvent.Click.init(targetIdentifier:targetType:actionType:actionURL:locations:actionContext:actionDetails:pageIdentifier:pageType:pageURL:pageDetails:pageDisplayType:snapshotImpressions:searchTerm:)(v32, v34, 22, v65, v43, (uint64_t)v44, 0, 9, (uint64_t)v69, 0, 0, 65280, v45, v47, 0x7473696C79616C50, 0xE800000000000000, v63, 0, 1,
    0,
    0,
    0);
  v50 = (id)*MetricsReportingController.shared.unsafeMutableAddressor();
  sub_53F8B4();
  v52 = v51;
  v54 = v53;
  if (qword_14AB568 != -1)
    swift_once(&qword_14AB568, sub_5BC10C);
  swift_beginAccess(&static UIApplication.groupActivitiesManager, v72, 0, 0);
  v55 = static UIApplication.groupActivitiesManager;
  swift_retain(static UIApplication.groupActivitiesManager);
  v56 = GroupActivitiesManager.hasJoined.getter();
  v57 = GroupActivitiesManager.participantsCount.getter();
  v58 = (uint64_t *)(v55 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount);
  swift_beginAccess(v55 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount, v71, 0, 0);
  v59 = *v58;
  v60 = swift_release(v55);
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, __n128))&stru_B8.sectname[swift_isaMask & *v50])(v49, v52, v54, v56 & 1, v57, v59, v60);
  swift_bridgeObjectRelease();
  sub_5C0DC(v49, type metadata accessor for MetricsEvent.Click);

  swift_setDeallocating(inited);
  v61 = *(_QWORD *)(inited + 16);
  v62 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14BA550);
  swift_arrayDestroy(v66, v61, v62);
}

uint64_t sub_9CBE4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;

  v5[44] = a4;
  v5[45] = a5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14BB530);
  v5[46] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Song(0);
  v5[47] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v5[48] = v8;
  v5[49] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MainActor(0);
  v5[50] = static MainActor.shared.getter(v10);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  v5[51] = v11;
  v5[52] = v12;
  return swift_task_switch(sub_9CBF04, v11, v12);
}

uint64_t sub_9CBF04()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _QWORD *v13;
  uint64_t v14;

  v1 = *(char **)(v0 + 392);
  v2 = *(_QWORD *)(v0 + 368);
  v4 = *(_QWORD *)(v0 + 352);
  v3 = *(_QWORD *)(v0 + 360);
  (*(void (**)(char *, uint64_t, _QWORD))(*(_QWORD *)(v0 + 384) + 16))(v1, v4, *(_QWORD *)(v0 + 376));
  type metadata accessor for MusicLibrary(0);
  v6 = static MusicLibrary.shared.getter(v5);
  v7 = type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell(0);
  sub_5BDB8(v4 + *(int *)(v7 + 40), v2, type metadata accessor for Actions.MetricsReportingContext);
  v8 = type metadata accessor for Actions.MetricsReportingContext(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v2, 0, 1, v8);
  swift_retain(v3);
  sub_9C28D4(v1, v6, 1, v3, v2, (_OWORD *)(v0 + 272));
  static Actions.GoToAlbum.action(context:)(v0 + 272, v0 + 16);
  sub_5C090(v0 + 272, v0 + 336, &qword_14D1D70);
  sub_8B134(v0 + 336);
  swift_release(*(_QWORD *)(v0 + 296));
  swift_release(*(_QWORD *)(v0 + 312));
  swift_release(*(_QWORD *)(v0 + 328));
  v9 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 208) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 224) = v9;
  v10 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 240) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 256) = v10;
  v11 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 144) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 160) = v11;
  v12 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 176) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 192) = v12;
  v13 = (_QWORD *)swift_task_alloc(dword_14FB794);
  *(_QWORD *)(v0 + 424) = v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE1E8);
  *v13 = v0;
  v13[1] = sub_9CC090;
  return Action.execute(bypassSupportedStatusCheck:)(v14, 0, v14);
}

uint64_t sub_9CC090()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 424);
  *(_QWORD *)(*v1 + 432) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_9CC150;
  else
    v4 = sub_9CC0F4;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 408), *(_QWORD *)(v2 + 416));
}

uint64_t sub_9CC0F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 392);
  v2 = *(_QWORD *)(v0 + 400);
  v3 = *(_QWORD *)(v0 + 368);
  sub_8AD610((_QWORD *)(v0 + 16));
  swift_release(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_9CC150()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 392);
  v2 = *(_QWORD *)(v0 + 400);
  v3 = *(_QWORD *)(v0 + 368);
  sub_8AD610((_QWORD *)(v0 + 16));
  swift_release(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_9CC1AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;

  v4[10] = a4;
  v5 = type metadata accessor for MusicLibrary.AddToPlaylistDuplicatePolicy(0);
  v4[11] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[12] = v6;
  v4[13] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Playlist(0);
  v4[14] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[15] = v8;
  v4[16] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell(0);
  v4[17] = v9;
  v10 = (*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[18] = swift_task_alloc(v10);
  v4[19] = swift_task_alloc(v10);
  v4[20] = swift_task_alloc(v10);
  v4[21] = swift_task_alloc(v10);
  v4[22] = swift_task_alloc(v10);
  v4[23] = swift_task_alloc(v10);
  v11 = type metadata accessor for MusicLibrary.AddStatus(0);
  v4[24] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v4[25] = v12;
  v13 = (*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[26] = swift_task_alloc(v13);
  v4[27] = swift_task_alloc(v13);
  v14 = type metadata accessor for MainActor(0);
  v4[28] = static MainActor.shared.getter(v15);
  v16 = dispatch thunk of Actor.unownedExecutor.getter(v14, &protocol witness table for MainActor);
  v4[29] = v16;
  v4[30] = v17;
  return swift_task_switch(sub_9CC304, v16, v17);
}

uint64_t sub_9CC304()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  __n128 v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  __n128 v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t ObjectType;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(uint64_t, uint64_t, uint64_t);
  id v66;
  uint64_t v67;
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;

  v1 = v0[10];
  v3 = v0[26];
  v2 = v0[27];
  v4 = v0[24];
  v5 = v0[25];
  v0[31] = type metadata accessor for MusicLibrary(0);
  v7 = static MusicLibrary.shared.getter(v6);
  v8 = type metadata accessor for Song(0);
  v0[32] = v8;
  v9 = MusicLibrary.state<A>(for:)(v1, v8, &protocol witness table for Song);
  v10 = swift_release(v7);
  dispatch thunk of MusicLibrary.ItemState.addStatus.getter(v10);
  v11 = swift_release(v9);
  (*(void (**)(uint64_t, _QWORD, uint64_t, __n128))(v5 + 104))(v3, enum case for MusicLibrary.AddStatus.added(_:), v4, v11);
  v12 = sub_4DD24((unint64_t *)&qword_14C6728, (uint64_t (*)(uint64_t))&type metadata accessor for MusicLibrary.AddStatus, (uint64_t)&protocol conformance descriptor for MusicLibrary.AddStatus);
  LOBYTE(v7) = dispatch thunk of static Equatable.== infix(_:_:)(v2, v3, v4, v12);
  v13 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v13(v3, v4);
  v13(v2, v4);
  if ((v7 & 1) != 0)
  {
    if (qword_14ABB90 != -1)
      swift_once(&qword_14ABB90, sub_950CDC);
    v15 = v75[22];
    v14 = v75[23];
    v16 = v75[10];
    v17 = type metadata accessor for Logger(0);
    v75[34] = __swift_project_value_buffer(v17, (uint64_t)qword_1581258);
    sub_5BDB8(v16, v14, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
    v18 = sub_5BDB8(v16, v15, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.error.getter(v19);
    if (os_log_type_enabled(v19, v20))
    {
      v21 = v75[32];
      v22 = v75[23];
      v71 = v75[22];
      v73 = v75[14];
      v23 = swift_slowAlloc(22, -1);
      v24 = swift_slowAlloc(64, -1);
      v76 = v24;
      *(_DWORD *)v23 = 136446466;
      v25 = sub_4DD24(&qword_14B6B78, (uint64_t (*)(uint64_t))&type metadata accessor for Song, (uint64_t)&protocol conformance descriptor for Song);
      v26 = dispatch thunk of CustomStringConvertible.description.getter(v21, v25);
      v75[8] = sub_23EAC8(v26, v27, &v76);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 8, v0 + 9);
      swift_bridgeObjectRelease();
      sub_5C0DC(v22, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
      *(_WORD *)(v23 + 12) = 2082;
      v28 = sub_4DD24((unint64_t *)&unk_14C8200, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&protocol conformance descriptor for Playlist);
      v29 = dispatch thunk of CustomStringConvertible.description.getter(v73, v28);
      v75[9] = sub_23EAC8(v29, v30, &v76);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 9, v0 + 10);
      swift_bridgeObjectRelease();
      sub_5C0DC(v71, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
      _os_log_impl(&dword_0, v19, v20, "Preparing to add song=%{public}s from the suggested songs module to playlist=%{public}s", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy(v24, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v24, -1, -1);
      swift_slowDealloc(v23, -1, -1);
    }
    else
    {
      v34 = v75[22];
      sub_5C0DC(v75[23], type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
      sub_5C0DC(v34, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
    }

    v67 = *(_QWORD *)(v75[10] + *(int *)(v75[17] + 24) + 8);
    v35 = *(_QWORD *)(v67 + OBJC_IVAR____TtC16MusicApplication24SuggestedSongsDataSource_updateReceivers);
    v36 = sub_4E684(0, (unint64_t *)&qword_14ACB70, NSObject_ptr);
    swift_bridgeObjectRetain();
    v37 = static MPMediaLibraryFilteringOptions.none.getter();
    if (v37 != WeakArray.endIndex.getter(v35, v36, v38, v39))
    {
      v69 = v75[32];
      v68 = enum case for Track.song(_:);
      do
      {
        v53 = (void *)WeakArray.subscript.getter(v37, v35, v36, v40);
        swift_bridgeObjectRetain();
        v37 = WeakArray.index(after:)(v37);
        swift_bridgeObjectRelease();
        if (v53)
        {
          ObjectType = swift_getObjectType();
          v55 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for PlaylistUpdatesReceiver);
          if (v55)
            v56 = v55;
          else
            v56 = 0;
          if (v55)
            v57 = v53;
          else
            v57 = 0;
          if (v57)
          {
            v70 = v75[10];
            v72 = v75[32];
            v74 = swift_getObjectType();
            v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_14B30B8);
            v59 = type metadata accessor for Track(0);
            v60 = *(_QWORD *)(v59 - 8);
            v61 = *(unsigned __int8 *)(v60 + 80);
            v62 = (v61 + 32) & ~v61;
            v63 = swift_allocObject(v58, v62 + *(_QWORD *)(v60 + 72), v61 | 7);
            *(_OWORD *)(v63 + 16) = xmmword_105B360;
            v64 = v63 + v62;
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 16))(v64, v70, v72);
            (*(void (**)(uint64_t, _QWORD, uint64_t))(v60 + 104))(v64, v68, v59);
            v65 = *(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 8);
            v66 = v53;
            v65(v63, v74, v56);

            swift_bridgeObjectRelease();
          }

        }
      }
      while (v37 != WeakArray.endIndex.getter(v35, v36, v51, v52));
    }
    v41 = v75[17];
    v43 = v75[12];
    v42 = v75[13];
    v44 = v75[10];
    v45 = v75[11];
    swift_bridgeObjectRelease();
    v46 = *(_QWORD *)(v44 + *(int *)(v41 + 20) + 8);
    v47 = swift_retain(v46);
    dispatch thunk of MusicSuggestedSongsViewModel.didSelect(_:)(v44, v47);
    v48 = swift_release(v46);
    v75[35] = static MusicLibrary.shared.getter(v48);
    v49 = v67 + OBJC_IVAR____TtC16MusicApplication24SuggestedSongsDataSource_playlist;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v43 + 104))(v42, enum case for MusicLibrary.AddToPlaylistDuplicatePolicy.includeDuplicates(_:), v45);
    v50 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.add<A>(_:to:duplicatePolicy:importAllowedHandler:)[1]);
    v75[36] = v50;
    *v50 = v75;
    v50[1] = sub_9CD010;
    return MusicLibrary.add<A>(_:to:duplicatePolicy:importAllowedHandler:)(v75[16], v75[10], v49, v75[13], 0, 0, v75[32], &protocol witness table for Song);
  }
  else
  {
    v31 = *(_QWORD *)(v75[10] + *(int *)(v75[17] + 24) + 8)
        + OBJC_IVAR____TtC16MusicApplication24SuggestedSongsDataSource_presentationSource;
    v32 = (_QWORD *)swift_task_alloc(dword_14FF40C);
    v75[33] = v32;
    *v32 = v75;
    v32[1] = sub_9CC9C8;
    return static CloudLibrary.presentCloudLibraryEnablerIfNeeded(context:presentationSource:style:)(2, v31, 0);
  }
}

uint64_t sub_9CC9C8(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 264);
  *(_BYTE *)(*v1 + 304) = a1;
  swift_task_dealloc(v3);
  return swift_task_switch(sub_9CCA20, *(_QWORD *)(v2 + 232), *(_QWORD *)(v2 + 240));
}

uint64_t sub_9CCA20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  __n128 v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t ObjectType;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t, uint64_t, uint64_t);
  id v61;
  uint64_t v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  if ((*(_BYTE *)(v0 + 304) & 1) != 0)
  {
    if (qword_14ABB90 != -1)
      swift_once(&qword_14ABB90, sub_950CDC);
    v1 = *(_QWORD *)(v0 + 80);
    v3 = *(_QWORD *)(v0 + 176);
    v2 = *(_QWORD *)(v0 + 184);
    v4 = type metadata accessor for Logger(0);
    *(_QWORD *)(v0 + 272) = __swift_project_value_buffer(v4, (uint64_t)qword_1581258);
    sub_5BDB8(v1, v2, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
    v5 = sub_5BDB8(v1, v3, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
    v6 = Logger.logObject.getter(v5);
    v7 = static os_log_type_t.error.getter(v6);
    v65 = v0;
    if (os_log_type_enabled(v6, v7))
    {
      v8 = *(_QWORD *)(v0 + 256);
      v9 = *(_QWORD *)(v0 + 184);
      v67 = *(_QWORD *)(v0 + 176);
      v69 = *(_QWORD *)(v0 + 112);
      v10 = swift_slowAlloc(22, -1);
      v11 = swift_slowAlloc(64, -1);
      v71 = v11;
      *(_DWORD *)v10 = 136446466;
      v12 = sub_4DD24(&qword_14B6B78, (uint64_t (*)(uint64_t))&type metadata accessor for Song, (uint64_t)&protocol conformance descriptor for Song);
      v13 = dispatch thunk of CustomStringConvertible.description.getter(v8, v12);
      *(_QWORD *)(v0 + 64) = sub_23EAC8(v13, v14, &v71);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 64, v0 + 72);
      swift_bridgeObjectRelease();
      sub_5C0DC(v9, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
      *(_WORD *)(v10 + 12) = 2082;
      v15 = sub_4DD24((unint64_t *)&unk_14C8200, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&protocol conformance descriptor for Playlist);
      v16 = dispatch thunk of CustomStringConvertible.description.getter(v69, v15);
      *(_QWORD *)(v0 + 72) = sub_23EAC8(v16, v17, &v71);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 72, v0 + 80);
      swift_bridgeObjectRelease();
      sub_5C0DC(v67, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
      _os_log_impl(&dword_0, v6, v7, "Preparing to add song=%{public}s from the suggested songs module to playlist=%{public}s", (uint8_t *)v10, 0x16u);
      swift_arrayDestroy(v11, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v11, -1, -1);
      swift_slowDealloc(v10, -1, -1);
    }
    else
    {
      v28 = *(_QWORD *)(v0 + 176);
      sub_5C0DC(*(_QWORD *)(v0 + 184), type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
      sub_5C0DC(v28, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
    }

    v62 = *(_QWORD *)(*(_QWORD *)(v0 + 80) + *(int *)(*(_QWORD *)(v0 + 136) + 24) + 8);
    v29 = *(_QWORD *)(v62 + OBJC_IVAR____TtC16MusicApplication24SuggestedSongsDataSource_updateReceivers);
    v30 = sub_4E684(0, (unint64_t *)&qword_14ACB70, NSObject_ptr);
    swift_bridgeObjectRetain();
    v31 = static MPMediaLibraryFilteringOptions.none.getter();
    if (v31 != WeakArray.endIndex.getter(v29, v30, v32, v33))
    {
      v64 = *(_QWORD *)(v0 + 256);
      v63 = enum case for Track.song(_:);
      do
      {
        v48 = (void *)WeakArray.subscript.getter(v31, v29, v30, v34);
        swift_bridgeObjectRetain();
        v31 = WeakArray.index(after:)(v31);
        swift_bridgeObjectRelease();
        if (v48)
        {
          ObjectType = swift_getObjectType();
          v50 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for PlaylistUpdatesReceiver);
          if (v50)
            v51 = v50;
          else
            v51 = 0;
          if (v50)
            v52 = v48;
          else
            v52 = 0;
          if (v52)
          {
            v66 = *(_QWORD *)(v0 + 80);
            v68 = *(_QWORD *)(v0 + 256);
            v70 = swift_getObjectType();
            v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_14B30B8);
            v54 = type metadata accessor for Track(0);
            v55 = *(_QWORD *)(v54 - 8);
            v56 = *(unsigned __int8 *)(v55 + 80);
            v57 = (v56 + 32) & ~v56;
            v58 = swift_allocObject(v53, v57 + *(_QWORD *)(v55 + 72), v56 | 7);
            *(_OWORD *)(v58 + 16) = xmmword_105B360;
            v59 = v58 + v57;
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 16))(v59, v66, v68);
            (*(void (**)(uint64_t, _QWORD, uint64_t))(v55 + 104))(v59, v63, v54);
            v60 = *(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 8);
            v61 = v48;
            v60(v58, v70, v51);

            v0 = v65;
            swift_bridgeObjectRelease();
          }

        }
      }
      while (v31 != WeakArray.endIndex.getter(v29, v30, v46, v47));
    }
    v35 = (_QWORD *)v0;
    v36 = *(_QWORD *)(v0 + 136);
    v38 = v35[12];
    v37 = v35[13];
    v39 = v35[10];
    v40 = v35[11];
    swift_bridgeObjectRelease();
    v41 = *(_QWORD *)(v39 + *(int *)(v36 + 20) + 8);
    v42 = swift_retain(v41);
    dispatch thunk of MusicSuggestedSongsViewModel.didSelect(_:)(v39, v42);
    v43 = swift_release(v41);
    v35[35] = static MusicLibrary.shared.getter(v43);
    v44 = v62 + OBJC_IVAR____TtC16MusicApplication24SuggestedSongsDataSource_playlist;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v38 + 104))(v37, enum case for MusicLibrary.AddToPlaylistDuplicatePolicy.includeDuplicates(_:), v40);
    v45 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.add<A>(_:to:duplicatePolicy:importAllowedHandler:)[1]);
    v35[36] = v45;
    *v45 = v35;
    v45[1] = sub_9CD010;
    return MusicLibrary.add<A>(_:to:duplicatePolicy:importAllowedHandler:)(v35[16], v35[10], v44, v35[13], 0, 0, v35[32], &protocol witness table for Song);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 224));
    v18 = *(_QWORD *)(v0 + 208);
    v20 = *(_QWORD *)(v0 + 176);
    v19 = *(_QWORD *)(v0 + 184);
    v22 = *(_QWORD *)(v0 + 160);
    v21 = *(_QWORD *)(v0 + 168);
    v24 = *(_QWORD *)(v0 + 144);
    v23 = *(_QWORD *)(v0 + 152);
    v25 = *(_QWORD *)(v0 + 128);
    v26 = *(_QWORD *)(v0 + 104);
    swift_task_dealloc(*(_QWORD *)(v0 + 216));
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_9CD010()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)();
  uint64_t v10;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 288);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 96);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 104);
  v6 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  *(_QWORD *)(*(_QWORD *)v1 + 296) = v0;
  swift_task_dealloc(v3);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  if (v0)
  {
    v7 = v2[29];
    v8 = v2[30];
    v9 = sub_9CD38C;
  }
  else
  {
    v10 = v2[35];
    (*(void (**)(_QWORD, _QWORD))(v2[15] + 8))(v2[16], v2[14]);
    swift_release(v10);
    v7 = v2[29];
    v8 = v2[30];
    v9 = sub_9CD0B8;
  }
  return swift_task_switch(v9, v7, v8);
}

uint64_t sub_9CD0B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 80);
  sub_5BDB8(v2, *(_QWORD *)(v0 + 168), type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
  v3 = sub_5BDB8(v2, v1, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(_QWORD *)(v0 + 256);
    v8 = *(_QWORD *)(v0 + 160);
    v7 = *(_QWORD *)(v0 + 168);
    v29 = *(_QWORD *)(v0 + 112);
    v9 = swift_slowAlloc(22, -1);
    v10 = swift_slowAlloc(64, -1);
    v30 = v10;
    *(_DWORD *)v9 = 136446466;
    v11 = sub_4DD24(&qword_14B6B78, (uint64_t (*)(uint64_t))&type metadata accessor for Song, (uint64_t)&protocol conformance descriptor for Song);
    v12 = dispatch thunk of CustomStringConvertible.description.getter(v6, v11);
    *(_QWORD *)(v0 + 48) = sub_23EAC8(v12, v13, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 48, v0 + 56);
    swift_bridgeObjectRelease();
    sub_5C0DC(v7, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
    *(_WORD *)(v9 + 12) = 2082;
    v14 = sub_4DD24((unint64_t *)&unk_14C8200, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&protocol conformance descriptor for Playlist);
    v15 = dispatch thunk of CustomStringConvertible.description.getter(v29, v14);
    *(_QWORD *)(v0 + 56) = sub_23EAC8(v15, v16, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 56, v0 + 64);
    swift_bridgeObjectRelease();
    sub_5C0DC(v8, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
    _os_log_impl(&dword_0, v4, v5, "Successfully added song=%{public}s from the suggested songs module to  playlist=%{public}s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy(v10, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }
  else
  {
    v17 = *(_QWORD *)(v0 + 160);
    sub_5C0DC(*(_QWORD *)(v0 + 168), type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
    sub_5C0DC(v17, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
  }

  v18 = *(_QWORD *)(v0 + 224);
  sub_9CD730(0, *(_QWORD *)(v0 + 80));
  swift_release(v18);
  v19 = *(_QWORD *)(v0 + 208);
  v21 = *(_QWORD *)(v0 + 176);
  v20 = *(_QWORD *)(v0 + 184);
  v23 = *(_QWORD *)(v0 + 160);
  v22 = *(_QWORD *)(v0 + 168);
  v25 = *(_QWORD *)(v0 + 144);
  v24 = *(_QWORD *)(v0 + 152);
  v26 = *(_QWORD *)(v0 + 128);
  v27 = *(_QWORD *)(v0 + 104);
  swift_task_dealloc(*(_QWORD *)(v0 + 216));
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_9CD38C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v1 = *(_QWORD *)(v0 + 296);
  v3 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 80);
  swift_release(*(_QWORD *)(v0 + 280));
  sub_5BDB8(v4, v2, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
  sub_5BDB8(v4, v3, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
  swift_errorRetain(v1);
  v5 = swift_errorRetain(v1);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.error.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = *(_QWORD *)(v0 + 296);
    v9 = *(_QWORD *)(v0 + 256);
    v11 = *(_QWORD *)(v0 + 144);
    v10 = *(_QWORD *)(v0 + 152);
    v37 = *(_QWORD *)(v0 + 112);
    v12 = swift_slowAlloc(32, -1);
    v38 = swift_slowAlloc(96, -1);
    v39 = v38;
    *(_DWORD *)v12 = 136446722;
    v13 = sub_4DD24(&qword_14B6B78, (uint64_t (*)(uint64_t))&type metadata accessor for Song, (uint64_t)&protocol conformance descriptor for Song);
    v14 = dispatch thunk of CustomStringConvertible.description.getter(v9, v13);
    *(_QWORD *)(v0 + 16) = sub_23EAC8(v14, v15, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24);
    swift_bridgeObjectRelease();
    sub_5C0DC(v10, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
    *(_WORD *)(v12 + 12) = 2082;
    v16 = sub_4DD24((unint64_t *)&unk_14C8200, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t)&protocol conformance descriptor for Playlist);
    v17 = dispatch thunk of CustomStringConvertible.description.getter(v37, v16);
    *(_QWORD *)(v0 + 24) = sub_23EAC8(v17, v18, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32);
    swift_bridgeObjectRelease();
    sub_5C0DC(v11, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
    *(_WORD *)(v12 + 22) = 2082;
    *(_QWORD *)(v0 + 32) = v8;
    swift_errorRetain(v8);
    v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD690);
    v20 = String.init<A>(describing:)(v0 + 32, v19);
    *(_QWORD *)(v0 + 40) = sub_23EAC8(v20, v21, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v0 + 48);
    swift_bridgeObjectRelease();
    swift_errorRelease(v8);
    swift_errorRelease(v8);
    _os_log_impl(&dword_0, v6, v7, "Failed to add song=%{public}s from the suggested songs module to playlist=%{public}s with error=%{public}s", (uint8_t *)v12, 0x20u);
    swift_arrayDestroy(v38, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v38, -1, -1);
    swift_slowDealloc(v12, -1, -1);
  }
  else
  {
    v22 = *(_QWORD *)(v0 + 296);
    v23 = *(_QWORD *)(v0 + 144);
    sub_5C0DC(*(_QWORD *)(v0 + 152), type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
    sub_5C0DC(v23, type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell);
    swift_errorRelease(v22);
    swift_errorRelease(v22);
  }

  v24 = *(_QWORD *)(v0 + 296);
  v25 = *(_QWORD *)(v0 + 224);
  v26 = *(_QWORD *)(v0 + 80);
  swift_errorRetain(v24);
  sub_9CD730(v24, v26);
  swift_errorRelease(v24);
  swift_errorRelease(v24);
  swift_release(v25);
  v27 = *(_QWORD *)(v0 + 208);
  v29 = *(_QWORD *)(v0 + 176);
  v28 = *(_QWORD *)(v0 + 184);
  v31 = *(_QWORD *)(v0 + 160);
  v30 = *(_QWORD *)(v0 + 168);
  v33 = *(_QWORD *)(v0 + 144);
  v32 = *(_QWORD *)(v0 + 152);
  v34 = *(_QWORD *)(v0 + 128);
  v35 = *(_QWORD *)(v0 + 104);
  swift_task_dealloc(*(_QWORD *)(v0 + 216));
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_9CD730(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double result;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v25;
  unsigned int v26;
  uint64_t v29;

  v2 = *(_QWORD *)(*(_QWORD *)(a2
                             + *(int *)(type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell(0)
                                      + 24)
                             + 8)
                 + OBJC_IVAR____TtC16MusicApplication24SuggestedSongsDataSource_updateReceivers);
  v3 = sub_4E684(0, (unint64_t *)&qword_14ACB70, NSObject_ptr);
  swift_bridgeObjectRetain();
  v4 = static MPMediaLibraryFilteringOptions.none.getter();
  if (v4 != WeakArray.endIndex.getter(v2, v3, v5, v6))
  {
    v26 = enum case for Track.song(_:);
    do
    {
      v11 = (void *)WeakArray.subscript.getter(v4, v2, v3, v7);
      swift_bridgeObjectRetain();
      v4 = WeakArray.index(after:)(v4);
      swift_bridgeObjectRelease();
      if (v11)
      {
        ObjectType = swift_getObjectType();
        v13 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for PlaylistUpdatesReceiver);
        if (v13)
          v14 = v13;
        else
          v14 = 0;
        if (v13)
          v15 = v11;
        else
          v15 = 0;
        if (v15)
        {
          v29 = swift_getObjectType();
          v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_14B30B8);
          v17 = type metadata accessor for Track(0);
          v18 = *(_QWORD *)(v17 - 8);
          v19 = *(unsigned __int8 *)(v18 + 80);
          v20 = (v19 + 32) & ~v19;
          v21 = swift_allocObject(v16, v20 + *(_QWORD *)(v18 + 72), v19 | 7);
          *(_OWORD *)(v21 + 16) = xmmword_105B360;
          v22 = v21 + v20;
          v23 = type metadata accessor for Song(0);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v22, a2, v23);
          (*(void (**)(uint64_t, _QWORD, uint64_t))(v18 + 104))(v22, v26, v17);
          v24 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 16);
          v25 = v11;
          v24(v21, a1, v29, v14);
          swift_bridgeObjectRelease();

        }
      }
    }
    while (v4 != WeakArray.endIndex.getter(v2, v3, v9, v10));
  }
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_9CD940@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _OWORD *v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _OWORD v41[7];

  v2 = v1;
  v40 = a1;
  v3 = type metadata accessor for DynamicTypeSize(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v37 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE4E8);
  __chkstk_darwin(v10);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE4F0);
  __chkstk_darwin(v38);
  v37 = (uint64_t)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE4F8);
  __chkstk_darwin(v14);
  v39 = (uint64_t)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = static HorizontalAlignment.leading.getter(v16);
  type metadata accessor for PlaylistSongSuggestionsView.VerticalText(0);
  v18 = sub_724544((uint64_t)v9);
  v19 = DynamicTypeSize.isAccessibilitySize.getter(v18);
  v20 = *(void (**)(char *, uint64_t))(v4 + 8);
  v20(v9, v3);
  *(_QWORD *)v12 = v17;
  *((_QWORD *)v12 + 1) = 0;
  v12[16] = (v19 & 1) == 0;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE500);
  sub_9CDC70(v2, (uint64_t)&v12[*(int *)(v21 + 44)]);
  sub_724544((uint64_t)v6);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v9, enum case for DynamicTypeSize.accessibility3(_:), v3);
  v22 = static DynamicTypeSize.< infix(_:_:)(v6, v9);
  v20(v9, v3);
  v23 = ((uint64_t (*)(char *, uint64_t))v20)(v6, v3);
  v24 = static Alignment.center.getter(v23);
  if ((v22 & 1) != 0)
    v26 = 0x4048000000000000;
  else
    v26 = 0x4052000000000000;
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v41, 0, 1, 0, 1, 0, 1, v26, 0, 0, 1, 0, 1, v24, v25);
  v27 = v37;
  sub_5C238((uint64_t)v12, v37, &qword_14EE4E8);
  v28 = (_OWORD *)(v27 + *(int *)(v38 + 36));
  v29 = v41[5];
  v28[4] = v41[4];
  v28[5] = v29;
  v28[6] = v41[6];
  v30 = v41[1];
  *v28 = v41[0];
  v28[1] = v30;
  v31 = v41[3];
  v28[2] = v41[2];
  v28[3] = v31;
  sub_56024((uint64_t)v12, &qword_14EE4E8);
  v33 = static Alignment.leading.getter(v32);
  v34 = v39;
  sub_9C0DA4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v39, 0.0, 1, 0.0, 1, v33, v35, &qword_14EE4F0, &qword_14EE4F8);
  sub_56024(v27, &qword_14EE4F0);
  return sub_5C090(v34, v40, &qword_14EE4F8);
}

double sub_9CDC70@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  char *v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  char v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  char *v72;
  double v73;
  __n128 v74;
  char *v75;
  uint64_t KeyPath;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char v111;
  uint64_t v112;
  __n128 v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char v119;
  char v120;
  uint64_t v121;
  uint64_t v122;
  char v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  double result;
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  void (*v154)(uint64_t, uint64_t);
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  int v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char v172;
  uint64_t v173;
  uint64_t v174;
  _BOOL8 v175;
  char v176;

  v167 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14BFBF8);
  __chkstk_darwin(v3);
  v168 = (uint64_t)&v133 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v165 = (char *)&v133 - v6;
  __chkstk_darwin(v7);
  v166 = (uint64_t)&v133 - v8;
  v158 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE508);
  __chkstk_darwin(v158);
  v150 = (uint64_t)&v133 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for BaselineSpacer(0);
  __chkstk_darwin(v10);
  v148 = (uint64_t)&v133 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v149 = (char *)&v133 - v13;
  v14 = type metadata accessor for LineHeightModifier(0);
  __chkstk_darwin(v14);
  v145 = (uint64_t *)((char *)&v133 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v138 = type metadata accessor for Text.Suffix(0);
  v137 = *(_QWORD *)(v138 - 8);
  __chkstk_darwin(v138);
  v135 = (char *)&v133 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_14BF810);
  v140 = *(_QWORD *)(v141 - 8);
  __chkstk_darwin(v141);
  v139 = (char *)&v133 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_14BF7D8);
  __chkstk_darwin(v136);
  v142 = (char *)&v133 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE510);
  __chkstk_darwin(v144);
  v143 = (char *)&v133 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE518);
  __chkstk_darwin(v20);
  v146 = (char *)&v133 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v147 = (uint64_t)&v133 - v23;
  v151 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE520);
  __chkstk_darwin(v151);
  v153 = (uint64_t)&v133 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v152 = __swift_instantiateConcreteTypeFromMangledName(&qword_14D9B18);
  __chkstk_darwin(v152);
  v134 = (char *)&v133 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for DynamicTypeSize(0);
  v27 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v29 = (char *)&v133 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE528);
  __chkstk_darwin(v30);
  v163 = (uint64_t)&v133 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  v169 = (uint64_t)&v133 - v33;
  v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14CD1E0);
  v35.n128_f64[0] = __chkstk_darwin(v34);
  v37 = (char *)&v133 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  Song.contentRating.getter(v35);
  v38 = TextBadge.init(for:isPlayable:)(v37, 1);
  v39 = TextBadge.view.getter(v38);
  v41 = v40;
  v43 = v42;
  v45 = v44;
  v155 = a1 + *(int *)(type metadata accessor for PlaylistSongSuggestionsView.VerticalText(0) + 20);
  v46 = sub_724544((uint64_t)v29);
  LOBYTE(v37) = DynamicTypeSize.isAccessibilitySize.getter(v46);
  v47 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
  v156 = v29;
  v157 = v26;
  v154 = v47;
  v47((uint64_t)v29, v26);
  v164 = a1;
  v48 = _s8MusicKit4SongV0A11ApplicationE10storyTitleSSSgvg_0();
  v161 = v39;
  v162 = v45;
  v160 = v41;
  v159 = v43;
  v170 = v48;
  v171 = v49;
  v50 = sub_55EA0();
  if ((v37 & 1) != 0)
  {
    v51 = Text.init<A>(_:)(&v170, &type metadata for String, v50);
    v53 = v52;
    v55 = v54 & 1;
    v57 = static Text.+ infix(_:_:)(v51, v52, v54 & 1, v56, v39, v41, v43 & 1, v45);
    v59 = v58;
    v61 = v60;
    v63 = v62 & 1;
    sub_AF8E8(v51, v53, v55);
    swift_bridgeObjectRelease();
    v170 = v57;
    v171 = v59;
    v172 = v63;
    v173 = v61;
    AccessibilityIdentifier.playlistSuggestedSongsCellTitle.unsafeMutableAddressor();
    swift_bridgeObjectRetain();
    v64 = (uint64_t)v134;
    View.accessibilityIdentifier(_:)();
    sub_AF8E8(v57, v59, v63);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v65 = &qword_14D9B18;
    v66 = v153;
    sub_5C238(v64, v153, &qword_14D9B18);
    swift_storeEnumTagMultiPayload(v66, v151, 0);
    v67 = sub_9DAE28();
    v68 = sub_5C150(&qword_14EE548, &qword_14EE508, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    _ConditionalContent<>.init(storage:)(v66, v152, v158, v67, v68);
  }
  else
  {
    v170 = Text.init<A>(_:)(&v170, &type metadata for String, v50);
    v171 = v69;
    v172 = v70 & 1;
    v173 = v71;
    v72 = v135;
    v74.n128_f64[0] = static Text.Suffix.alwaysVisible(_:)(v39, v41, v43 & 1, v45, v73);
    v75 = v139;
    View.textSuffix(_:)(v72, &type metadata for Text, &protocol witness table for Text, v74);
    (*(void (**)(char *, uint64_t))(v137 + 8))(v72, v138);
    sub_AF8E8(v170, v171, v172);
    swift_bridgeObjectRelease();
    KeyPath = swift_getKeyPath(&unk_108F870);
    v77 = v140;
    v78 = (uint64_t)v142;
    v79 = v141;
    (*(void (**)(char *, char *, uint64_t))(v140 + 16))(v142, v75, v141);
    v80 = v78 + *(int *)(v136 + 36);
    *(_QWORD *)v80 = KeyPath;
    *(_QWORD *)(v80 + 8) = 2;
    *(_BYTE *)(v80 + 16) = 0;
    (*(void (**)(char *, uint64_t))(v77 + 8))(v75, v79);
    v81 = swift_getKeyPath(&unk_108F398);
    v82 = (uint64_t)v145;
    *v145 = v81;
    v83 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
    swift_storeEnumTagMultiPayload(v82, v83, 0);
    v84 = (uint64_t)v143;
    sub_5C04C(v82, (uint64_t)&v143[*(int *)(v144 + 36)], type metadata accessor for LineHeightModifier);
    sub_5C090(v78, v84, &qword_14BF7D8);
    AccessibilityIdentifier.playlistSuggestedSongsCellTitle.unsafeMutableAddressor();
    sub_9DADA4();
    swift_bridgeObjectRetain();
    v85 = (uint64_t)v146;
    View.accessibilityIdentifier(_:)();
    sub_56024(v84, &qword_14EE510);
    swift_bridgeObjectRelease();
    v65 = &qword_14EE518;
    v64 = v147;
    sub_5C090(v85, v147, &qword_14EE518);
    v86 = enum case for Font.TextStyle.body(_:);
    v87 = type metadata accessor for Font.TextStyle(0);
    v88 = (uint64_t)v149;
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v87 - 8) + 104))(v149, v86, v87);
    v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_14BDE20);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 56))(v88, 0, 1, v89);
    *(_QWORD *)(v88 + *(int *)(type metadata accessor for BaselineSpacer.Configuration(0) + 20)) = 0x4032000000000000;
    sub_5C238(v64, v85, &qword_14EE518);
    v90 = v148;
    sub_5BDB8(v88, v148, type metadata accessor for BaselineSpacer);
    v91 = v150;
    sub_5C238(v85, v150, &qword_14EE518);
    v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE540);
    sub_5BDB8(v90, v91 + *(int *)(v92 + 48), type metadata accessor for BaselineSpacer);
    sub_5C0DC(v90, type metadata accessor for BaselineSpacer);
    sub_56024(v85, &qword_14EE518);
    v93 = v153;
    sub_5C238(v91, v153, &qword_14EE508);
    swift_storeEnumTagMultiPayload(v93, v151, 1);
    v94 = sub_9DAE28();
    v95 = sub_5C150(&qword_14EE548, &qword_14EE508, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    _ConditionalContent<>.init(storage:)(v93, v152, v158, v94, v95);
    sub_56024(v91, &qword_14EE508);
    sub_5C0DC(v88, type metadata accessor for BaselineSpacer);
  }
  sub_56024(v64, v65);
  v170 = _s8MusicKit4SongV0A11ApplicationE13storySubtitleSSSgvg_0();
  v171 = v96;
  v97 = sub_55EA0();
  v98 = Text.init<A>(_:)(&v170, &type metadata for String, v97);
  v100 = v99;
  v102 = v101;
  v104 = v103;
  if (qword_14ABE48 != -1)
    swift_once(&qword_14ABE48, sub_9D0828);
  v105 = v102 & 1;
  v106 = Text.font(_:)(qword_1581610, v98, v100, v105, v104);
  v108 = v107;
  v110 = v109;
  v112 = v111 & 1;
  sub_AF8E8(v98, v100, v105);
  v113 = swift_bridgeObjectRelease();
  LODWORD(v170) = static HierarchicalShapeStyle.secondary.getter(v113);
  v114 = Text.foregroundStyle<A>(_:)(&v170, v106, v108, v112, v110, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v116 = v115;
  v118 = v117;
  v120 = v119 & 1;
  sub_AF8E8(v106, v108, v112);
  swift_bridgeObjectRelease();
  v121 = (uint64_t)v156;
  v122 = sub_724544((uint64_t)v156);
  v123 = DynamicTypeSize.isAccessibilitySize.getter(v122);
  v154(v121, v157);
  v124 = swift_getKeyPath(&unk_108F870);
  v170 = v114;
  v171 = v116;
  v172 = v120;
  v173 = v118;
  v174 = v124;
  v175 = (v123 & 1) == 0;
  v176 = v123 & 1;
  AccessibilityIdentifier.playlistSuggestedSongsCellArtistName.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_14BF7F8);
  sub_2D4A88();
  v125 = (uint64_t)v165;
  View.accessibilityIdentifier(_:)();
  sub_AF8E8(v114, v116, v120);
  swift_bridgeObjectRelease();
  swift_release(v124);
  swift_bridgeObjectRelease();
  v126 = v166;
  sub_5C090(v125, v166, &qword_14BFBF8);
  v127 = v169;
  v128 = v163;
  sub_5C238(v169, v163, &qword_14EE528);
  v129 = v168;
  sub_5C238(v126, v168, &qword_14BFBF8);
  v130 = v167;
  sub_5C238(v128, v167, &qword_14EE528);
  v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE550);
  sub_5C238(v129, v130 + *(int *)(v131 + 48), &qword_14BFBF8);
  sub_56024(v126, &qword_14BFBF8);
  sub_56024(v127, &qword_14EE528);
  sub_56024(v129, &qword_14BFBF8);
  sub_56024(v128, &qword_14EE528);
  sub_AF8E8(v161, v160, v159 & 1);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_9CE928@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  unint64_t v39;
  __n128 v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;
  uint64_t v47;
  double v48;
  __n128 v49;
  uint64_t KeyPath;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char v60;
  void (*v61)(char *, uint64_t);
  __n128 v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  __int128 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  char v77;
  __n128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __n128 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  __int128 *v91;
  uint64_t v92;
  uint64_t v93;
  __int128 v94;
  __n128 v95;
  uint64_t v96;
  _OWORD *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  int *v104;
  uint64_t v105;
  uint64_t v107;
  uint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  unint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  __int128 v131;
  uint64_t v132;
  __int128 v133;
  __n128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  _OWORD v142[3];
  __int128 v143;
  __n128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __n128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  _OWORD v161[2];
  _OWORD v162[3];

  v128 = a2;
  v107 = type metadata accessor for PlaylistSongSuggestionsView.DurationView(0);
  __chkstk_darwin(v107);
  v109 = (uint64_t *)((char *)&v107 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE570);
  v123 = *(_QWORD *)(v4 - 8);
  v124 = v4;
  __chkstk_darwin(v4);
  v108 = (uint64_t)&v107 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE578);
  __chkstk_darwin(v6);
  v127 = (uint64_t)&v107 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v125 = (char *)&v107 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE580);
  __chkstk_darwin(v10);
  v126 = (uint64_t)&v107 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v130 = (uint64_t)&v107 - v13;
  v120 = type metadata accessor for DynamicTypeSize(0);
  v118 = *(_QWORD *)(v120 - 8);
  __chkstk_darwin(v120);
  v116 = (char *)&v107 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v115 = (uint64_t)&v107 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14CD1E0);
  __chkstk_darwin(v17);
  v19 = (char *)&v107 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for Text.Suffix(0);
  v112 = *(_QWORD *)(v20 - 8);
  v113 = v20;
  __chkstk_darwin(v20);
  v22 = (char *)&v107 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_14BF810);
  v23 = *(_QWORD *)(v114 - 8);
  __chkstk_darwin(v114);
  v25 = (char *)&v107 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_14BF7D8);
  __chkstk_darwin(v111);
  v27 = (char *)&v107 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE588);
  __chkstk_darwin(v121);
  v29 = (char *)&v107 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE590);
  __chkstk_darwin(v30);
  v122 = (uint64_t)&v107 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  v119 = (char *)&v107 - v33;
  __chkstk_darwin(v34);
  v129 = (uint64_t)&v107 - v35;
  v110 = a1;
  *(_QWORD *)&v152 = _s8MusicKit4SongV0A11ApplicationE10storyTitleSSSgvg_0();
  *((_QWORD *)&v152 + 1) = v36;
  v117 = sub_55EA0();
  *(_QWORD *)&v152 = Text.init<A>(_:)(&v152, &type metadata for String, v117);
  *((_QWORD *)&v152 + 1) = v37;
  v153.n128_u8[0] = v38 & 1;
  v153.n128_u64[1] = v39;
  Song.contentRating.getter(v40);
  v41 = TextBadge.init(for:isPlayable:)(v19, 1);
  v42 = TextBadge.view.getter(v41);
  v44 = v43;
  v46 = v45 & 1;
  static Text.Suffix.alwaysVisible(_:)(v42, v43, v45 & 1, v47, v48);
  sub_AF8E8(v42, v44, v46);
  v49 = swift_bridgeObjectRelease();
  View.textSuffix(_:)(v22, &type metadata for Text, &protocol witness table for Text, v49);
  (*(void (**)(char *, uint64_t))(v112 + 8))(v22, v113);
  sub_AF8E8(v152, *((uint64_t *)&v152 + 1), v153.n128_i8[0]);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath(&unk_108F870);
  v51 = v114;
  (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v27, v25, v114);
  v52 = &v27[*(int *)(v111 + 36)];
  *(_QWORD *)v52 = KeyPath;
  *((_QWORD *)v52 + 1) = 2;
  v52[16] = 0;
  v53 = v25;
  v54 = v110;
  (*(void (**)(char *, uint64_t))(v23 + 8))(v53, v51);
  v114 = type metadata accessor for PlaylistSongSuggestionsView.HorizontalText(0);
  v55 = v115;
  sub_724544(v115);
  v56 = v118;
  v57 = v116;
  v58 = v120;
  (*(void (**)(char *, _QWORD, uint64_t))(v118 + 104))(v116, enum case for DynamicTypeSize.accessibility1(_:), v120);
  v59 = v57;
  v60 = static DynamicTypeSize.< infix(_:_:)(v55, v57);
  v61 = *(void (**)(char *, uint64_t))(v56 + 8);
  v61(v59, v58);
  v61((char *)v55, v58);
  v63 = 0;
  if ((v60 & 1) != 0)
  {
    v62.n128_f64[0] = sub_9CF308() * 0.6;
    v63 = v62.n128_u64[0];
  }
  v64 = static Alignment.leading.getter(v62);
  v65 = 1;
  _FrameLayout.init(width:height:alignment:)(v162, v63, (v60 & 1) == 0, 0, 1, v64, v66);
  sub_5C238((uint64_t)v27, (uint64_t)v29, &qword_14BF7D8);
  v67 = &v29[*(int *)(v121 + 36)];
  v68 = v162[1];
  *(_OWORD *)v67 = v162[0];
  *((_OWORD *)v67 + 1) = v68;
  *((_OWORD *)v67 + 2) = v162[2];
  sub_56024((uint64_t)v27, &qword_14BF7D8);
  AccessibilityIdentifier.playlistSuggestedSongsCellTitle.unsafeMutableAddressor();
  sub_184F98(&qword_14EE598, &qword_14EE588, (void (*)(void))sub_2D488C);
  swift_bridgeObjectRetain();
  v69 = (uint64_t)v119;
  View.accessibilityIdentifier(_:)();
  sub_56024((uint64_t)v29, &qword_14EE588);
  swift_bridgeObjectRelease();
  sub_5C090(v69, v129, &qword_14EE590);
  *(_QWORD *)&v152 = _s8MusicKit4SongV0A11ApplicationE13storySubtitleSSSgvg_0();
  *((_QWORD *)&v152 + 1) = v70;
  v71 = Text.init<A>(_:)(&v152, &type metadata for String, v117);
  v73 = v72;
  v75 = v74;
  v77 = v76 & 1;
  v79 = static Alignment.leading.getter(v78);
  sub_9C0B6C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v152, 0.0, 1, 0.0, 1, v79, v80, v71, v73, v77, v75);
  sub_AF8E8(v71, v73, v77);
  swift_bridgeObjectRelease();
  v149 = v158;
  v150 = v159;
  v151 = v160;
  v145 = v154;
  v146 = v155;
  v147 = v156;
  v148 = v157;
  v143 = v152;
  v144 = v153;
  LODWORD(v71) = static HierarchicalShapeStyle.secondary.getter(v153);
  v81 = swift_getKeyPath(&unk_108F870);
  v158 = v149;
  v159 = v150;
  v160 = v151;
  v154 = v145;
  v155 = v146;
  v156 = v147;
  v157 = v148;
  v152 = v143;
  v153 = v144;
  LODWORD(v161[0]) = v71;
  *((_QWORD *)&v161[0] + 1) = v81;
  *(_QWORD *)&v161[1] = 2;
  BYTE8(v161[1]) = 0;
  v141 = v151;
  v142[0] = v161[0];
  *(_OWORD *)((char *)v142 + 9) = *(_OWORD *)((char *)v161 + 9);
  v137 = v147;
  v138 = v148;
  v139 = v149;
  v140 = v150;
  v133 = v143;
  v134 = v144;
  v135 = v145;
  v136 = v146;
  AccessibilityIdentifier.playlistSuggestedSongsCellArtistName.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_14EE5A0);
  sub_9DAEC0();
  v82 = v130;
  View.accessibilityIdentifier(_:)();
  sub_9DAFC8((uint64_t)&v152);
  v83 = swift_bridgeObjectRelease();
  v84 = Song.duration.getter(v83);
  v85 = v124;
  v86 = (uint64_t)v125;
  if ((v87 & 1) == 0)
  {
    v88 = (uint64_t)v109;
    *v109 = v84;
    v89 = (_QWORD *)(v88 + *(int *)(v107 + 20));
    *v89 = swift_getKeyPath(&unk_108F398);
    v90 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
    swift_storeEnumTagMultiPayload(v89, v90, 0);
    v91 = (__int128 *)(v54 + *(int *)(v114 + 24));
    v92 = *((_QWORD *)v91 + 2);
    v131 = *v91;
    v132 = v92;
    v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE5C8);
    State.projectedValue.getter(&v133, v93);
    v94 = v133;
    v95 = v134;
    v96 = v108;
    sub_5BDB8(v88, v108, type metadata accessor for PlaylistSongSuggestionsView.DurationView);
    v97 = (_OWORD *)(v96 + *(int *)(v85 + 36));
    *v97 = v94;
    v97[1] = v95;
    sub_5C0DC(v88, type metadata accessor for PlaylistSongSuggestionsView.DurationView);
    sub_5C090(v96, v86, &qword_14EE570);
    v65 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v123 + 56))(v86, v65, 1, v85);
  v98 = v129;
  v99 = v122;
  sub_5C238(v129, v122, &qword_14EE590);
  v100 = v82;
  v101 = v126;
  sub_5C238(v100, v126, &qword_14EE580);
  v102 = v127;
  sub_5C238(v86, v127, &qword_14EE578);
  v103 = v128;
  sub_5C238(v99, v128, &qword_14EE590);
  v104 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_14EE5C0);
  v105 = v103 + v104[12];
  *(_QWORD *)v105 = 0x4030000000000000;
  *(_BYTE *)(v105 + 8) = 0;
  sub_5C238(v101, v103 + v104[16], &qword_14EE580);
  sub_5C238(v102, v103 + v104[20], &qword_14EE578);
  sub_56024(v86, &qword_14EE578);
  sub_56024(v130, &qword_14EE580);
  sub_56024(v98, &qword_14EE590);
  sub_56024(v102, &qword_14EE578);
  sub_56024(v101, &qword_14EE580);
  return sub_56024(v99, &qword_14EE590);
}

double sub_9CF308()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  double v17;
  double v18;
  char v19;
  void (*v20)(char *, uint64_t);
  double v21;
  double v22;
  __int128 *v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  __int128 v32;
  uint64_t v33;
  double v34[2];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E0470);
  __chkstk_darwin(v2);
  v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DynamicTypeSize(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v32 - v10;
  v12 = type metadata accessor for PlaylistSongSuggestionsView.HorizontalText(0);
  v13 = *(_QWORD *)(v0 + *(int *)(v12 + 20) + 8);
  KeyPath = swift_getKeyPath(&unk_108F2D8);
  v15 = swift_getKeyPath(&unk_108F300);
  swift_retain(v13);
  static Published.subscript.getter(&v32, v16, KeyPath, v15);
  swift_release(v13);
  swift_release(KeyPath);
  swift_release(v15);
  v17 = *(double *)&v32;
  if (qword_14ABDB8 != -1)
    swift_once(&qword_14ABDB8, sub_9D05E4);
  v18 = *(double *)&qword_1581550;
  sub_724544((uint64_t)v11);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for DynamicTypeSize.accessibility3(_:), v5);
  v19 = static DynamicTypeSize.< infix(_:_:)(v11, v8);
  v20 = *(void (**)(char *, uint64_t))(v6 + 8);
  v20(v8, v5);
  v20(v11, v5);
  if (qword_14ABE30 != -1)
    swift_once(&qword_14ABE30, sub_9D07C8);
  v21 = *(double *)&qword_15815F8;
  if (qword_14ABE50 != -1)
    swift_once(&qword_14ABE50, sub_9D0844);
  v22 = *(double *)&qword_1581618;
  v23 = (__int128 *)(v1 + *(int *)(v12 + 24));
  v24 = *((_QWORD *)v23 + 2);
  v32 = *v23;
  v33 = v24;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE5C8);
  State.wrappedValue.getter(v34, v25);
  v26 = v34[0];
  sub_7249C4((uint64_t)v4);
  v27 = sub_9D7B64((uint64_t)v4);
  sub_56024((uint64_t)v4, &qword_14E0470);
  if (qword_14ABDF0 != -1)
    swift_once(&qword_14ABDF0, sub_9D06B8);
  v28 = 72.0;
  if ((v19 & 1) != 0)
    v28 = 48.0;
  v29 = v17 - v18 - v28 - v21 - v22 - v26 - v27 - *(double *)&qword_1581588;
  sub_7249C4((uint64_t)v4);
  v30 = sub_9D5344((uint64_t)v4);
  sub_56024((uint64_t)v4, &qword_14E0470);
  return v29 - v30;
}

uint64_t sub_9CF630@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE558);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v6 = static VerticalAlignment.center.getter(v4);
  *((_QWORD *)v6 + 1) = 0;
  v6[16] = 0;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE560);
  sub_9CE928(v1, (uint64_t)&v6[*(int *)(v7 + 44)]);
  v9 = static Alignment.leading.getter(v8);
  sub_9C0DA4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, a1, 0.0, 1, 0.0, 1, v9, v10, &qword_14EE558, &qword_14EE568);
  return sub_56024((uint64_t)v6, &qword_14EE558);
}

uint64_t sub_9CF724@<X0>(uint64_t a1@<X8>)
{
  double *v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t KeyPath;
  __n128 v42;
  int v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _OWORD *v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  double *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;

  v88 = a1;
  v87 = type metadata accessor for DynamicTypeSize(0);
  v86 = *(_QWORD *)(v87 - 8);
  __chkstk_darwin(v87);
  v85 = (char *)&v75 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __chkstk_darwin(v3);
  v84 = (uint64_t)&v75 - v5;
  v6 = type metadata accessor for Duration.TimeFormatStyle.Pattern(0, v4);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Duration.TimeFormatStyle(0, v8);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE7A0);
  v77 = *(_QWORD *)(v78 - 8);
  __chkstk_darwin(v78);
  v76 = (char *)&v75 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE7A8);
  __chkstk_darwin(v79);
  v17 = (char *)&v75 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE7B0);
  __chkstk_darwin(v18);
  v82 = (char *)&v75 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE7B8);
  __chkstk_darwin(v80);
  v81 = (uint64_t)&v75 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = v1;
  v21 = static Duration.seconds(_:)(*v1);
  v23 = v22;
  static Duration.TimeFormatStyle.Pattern.minuteSecond.getter();
  static FormatStyle<>.time(pattern:)(v10);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  v24 = sub_4DD24(&qword_14EE7C0, (uint64_t (*)(uint64_t))&type metadata accessor for Duration.TimeFormatStyle, (uint64_t)&protocol conformance descriptor for Duration.TimeFormatStyle);
  Duration.formatted<A>(_:)(&v90, v14, v21, v23, v11, v24);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v89 = v90;
  v25 = sub_55EA0();
  v26 = Text.init<A>(_:)(&v89, &type metadata for String, v25);
  v28 = v27;
  v30 = v29;
  v32 = v31 & 1;
  v33 = static Font.body.getter(v26);
  v34 = Text.font(_:)(v33, v26, v28, v32, v30);
  v36 = v35;
  LOBYTE(v11) = v37;
  v39 = v38;
  swift_release(v33);
  sub_AF8E8(v26, v28, v32);
  v40 = v76;
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath(&unk_108F870);
  v43 = static HierarchicalShapeStyle.secondary.getter(v42);
  *(_QWORD *)&v90 = v34;
  *((_QWORD *)&v90 + 1) = v36;
  LOBYTE(v91) = v11 & 1;
  *((_QWORD *)&v91 + 1) = v39;
  *(_QWORD *)&v92 = KeyPath;
  *((_QWORD *)&v92 + 1) = 1;
  LOBYTE(v93) = 0;
  DWORD1(v93) = v43;
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE7C8);
  v45 = sub_9DBBC0();
  View.monospacedDigit()(v44, v45);
  sub_AF8E8(v34, v36, v11 & 1);
  swift_release(KeyPath);
  swift_bridgeObjectRelease();
  v47 = static Edge.Set.leading.getter(v46);
  v48 = v47;
  if (qword_14ABE50 != -1)
    v47 = swift_once(&qword_14ABE50, sub_9D0844);
  v49 = EdgeInsets.init(_all:)(v47, *(double *)&qword_1581618);
  v51 = v50;
  v53 = v52;
  v55 = v54;
  v56 = v77;
  v57 = v78;
  (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v17, v40, v78);
  v58 = &v17[*(int *)(v79 + 36)];
  *v58 = v48;
  *((double *)v58 + 1) = v49;
  *((_QWORD *)v58 + 2) = v51;
  *((_QWORD *)v58 + 3) = v53;
  *((_QWORD *)v58 + 4) = v55;
  v58[40] = 0;
  (*(void (**)(char *, uint64_t))(v56 + 8))(v40, v57);
  AccessibilityIdentifier.playlistSuggestedSongsCellDuration.unsafeMutableAddressor();
  sub_9DBC44();
  swift_bridgeObjectRetain();
  v59 = (uint64_t)v82;
  View.accessibilityIdentifier(_:)();
  sub_56024((uint64_t)v17, &qword_14EE7A8);
  swift_bridgeObjectRelease();
  type metadata accessor for PlaylistSongSuggestionsView.DurationView(0);
  v60 = v84;
  sub_724544(v84);
  v61 = v86;
  v62 = v85;
  v63 = v87;
  (*(void (**)(char *, _QWORD, uint64_t))(v86 + 104))(v85, enum case for DynamicTypeSize.accessibility3(_:), v87);
  LOBYTE(v57) = static DynamicTypeSize.< infix(_:_:)(v60, v62);
  v64 = *(void (**)(char *, uint64_t))(v61 + 8);
  v64(v62, v63);
  v65 = ((uint64_t (*)(uint64_t, uint64_t))v64)(v60, v63);
  v66 = static Alignment.center.getter(v65);
  if ((v57 & 1) != 0)
    v68 = 0x4048000000000000;
  else
    v68 = 0x4052000000000000;
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(&v90, 0, 1, 0, 1, 0, 1, v68, 0, 0, 1, 0, 1, v66, v67);
  v69 = v81;
  sub_5C238(v59, v81, &qword_14EE7B0);
  v70 = (_OWORD *)(v69 + *(int *)(v80 + 36));
  v71 = v95;
  v70[4] = v94;
  v70[5] = v71;
  v70[6] = v96;
  v72 = v91;
  *v70 = v90;
  v70[1] = v72;
  v73 = v93;
  v70[2] = v92;
  v70[3] = v73;
  sub_56024(v59, &qword_14EE7B0);
  return sub_5C090(v69, v88, &qword_14EE7B8);
}

uint64_t sub_9CFD4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char v30;
  void (*v31)(char *, uint64_t);
  char v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  char v47;
  unint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  double v53;
  __int128 v54;
  char v55;
  char v56;
  uint64_t OpaqueTypeConformance2;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  double v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD v97[2];
  _BYTE v98[56];

  v96 = a1;
  v85 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v84 = *(_QWORD *)(v85 - 8);
  __chkstk_darwin(v85);
  v83 = (char *)&v76 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v3);
  v81 = (char *)&v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DynamicTypeSize(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v76 - v10;
  __chkstk_darwin(v12);
  v14 = (char *)&v76 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14B0FA0);
  __chkstk_darwin(v15);
  v17 = (char *)&v76 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14E5000);
  v80 = *(_QWORD *)(v82 - 8);
  __chkstk_darwin(v82);
  v79 = (uint64_t)&v76 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_14BF9A0);
  __chkstk_darwin(v88);
  v78 = (char *)&v76 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE5D8);
  v89 = *(_QWORD *)(v20 - 8);
  v90 = v20;
  __chkstk_darwin(v20);
  v87 = (char *)&v76 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE5E0);
  v92 = *(_QWORD *)(v22 - 8);
  v93 = v22;
  __chkstk_darwin(v22);
  v86 = (char *)&v76 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE5E8);
  __chkstk_darwin(v95);
  v94 = (char *)&v76 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE5F0);
  __chkstk_darwin(v25);
  v91 = (char *)&v76 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for Song(0);
  v77 = v1;
  ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v27, (uint64_t)&protocol witness table for Song, v17);
  type metadata accessor for PlaylistSongSuggestionsView.PreviewArtwork(0);
  sub_724544((uint64_t)v14);
  v28 = enum case for DynamicTypeSize.accessibility3(_:);
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 104);
  v29(v11, enum case for DynamicTypeSize.accessibility3(_:), v5);
  v30 = static DynamicTypeSize.< infix(_:_:)(v14, v11);
  v31 = *(void (**)(char *, uint64_t))(v6 + 8);
  v31(v11, v5);
  v31(v14, v5);
  sub_724544((uint64_t)v8);
  v29(v11, v28, v5);
  v32 = static DynamicTypeSize.< infix(_:_:)(v8, v11);
  v31(v11, v5);
  v33 = (v30 & 1) == 0;
  v34 = (uint64_t)v78;
  if (v33)
    v35 = 0x4052000000000000;
  else
    v35 = 0x4048000000000000;
  v31(v8, v5);
  if ((v32 & 1) != 0)
    v36 = 0x4048000000000000;
  else
    v36 = 0x4052000000000000;
  ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(v35, 0, v36, 0, 0, 1, 2, (uint64_t)v98);
  v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD600);
  v38 = (uint64_t)v81;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v81, 1, 10, v37);
  v39 = v84;
  v40 = (uint64_t)v83;
  v41 = v85;
  (*(void (**)(char *, _QWORD, uint64_t))(v84 + 104))(v83, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v85);
  v42 = v79;
  static ArtworkImage.with(_:placeholder:size:reusePolicy:)((uint64_t)v17, v38, (uint64_t)v98, v40, v79);
  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v40, v41);
  sub_5C0DC(v38, type metadata accessor for ArtworkImage.Placeholder);
  v43 = sub_56024((uint64_t)v17, (uint64_t *)&unk_14B0FA0);
  v44 = Song.id.getter(v43);
  sub_2C0290(v44, v45, 0, 1, v34);
  (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v42, v82);
  swift_bridgeObjectRelease();
  if (qword_14ABE28 != -1)
    swift_once(&qword_14ABE28, sub_9D079C);
  v46 = xmmword_15815E0;
  v47 = byte_15815F0;
  v48 = sub_2D51A4();
  v49 = v87;
  v50 = v88;
  View.corner(_:)(v46, *((uint64_t *)&v46 + 1), v47, v88, v48);
  sub_56024(v34, &qword_14BF9A0);
  v51 = Border.artwork.unsafeMutableAddressor();
  v52 = *v51;
  v53 = *((double *)v51 + 1);
  v54 = xmmword_15815E0;
  v55 = byte_15815F0;
  v56 = *((_BYTE *)v51 + 16);
  swift_retain(*v51);
  v97[0] = v50;
  v97[1] = v48;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v97, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
  v58 = v86;
  v59 = v90;
  View.border(_:corner:)(v52, v56, v54, *((uint64_t *)&v54 + 1), v55, v90, OpaqueTypeConformance2, v53);
  (*(void (**)(char *, uint64_t))(v89 + 8))(v49, v59);
  swift_release(v52);
  v61 = static Edge.Set.trailing.getter(v60);
  v62 = v61;
  if (qword_14ABE30 != -1)
    v61 = swift_once(&qword_14ABE30, sub_9D07C8);
  v63 = EdgeInsets.init(_all:)(v61, *(double *)&qword_15815F8);
  v65 = v64;
  v67 = v66;
  v69 = v68;
  v71 = v92;
  v70 = v93;
  v72 = (uint64_t)v94;
  (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v94, v58, v93);
  v73 = v72 + *(int *)(v95 + 36);
  *(_BYTE *)v73 = v62;
  *(double *)(v73 + 8) = v63;
  *(_QWORD *)(v73 + 16) = v65;
  *(_QWORD *)(v73 + 24) = v67;
  *(_QWORD *)(v73 + 32) = v69;
  *(_BYTE *)(v73 + 40) = 0;
  (*(void (**)(char *, uint64_t))(v71 + 8))(v58, v70);
  AccessibilityIdentifier.playlistSuggestedSongsCellArtwork.unsafeMutableAddressor();
  sub_9DB084();
  swift_bridgeObjectRetain();
  v74 = (uint64_t)v91;
  View.accessibilityIdentifier(_:)();
  sub_56024(v72, &qword_14EE5E8);
  swift_bridgeObjectRelease();
  return sub_5C090(v74, v96, &qword_14EE5F0);
}

void sub_9D0470()
{
  qword_1581530 = Int.seconds.getter(40);
}

void sub_9D0490()
{
  qword_1581538 = Int.seconds.getter(10);
}

void sub_9D04B0()
{
  id v0;
  void *v1;
  id v2;
  _QWORD v3[5];
  uint64_t v4;

  v0 = objc_allocWithZone((Class)UIColor);
  v3[4] = sub_9D0554;
  v4 = 0;
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 1107296256;
  v3[2] = sub_12EEE0;
  v3[3] = &block_descriptor_255;
  v1 = _Block_copy(v3);
  v2 = objc_msgSend(v0, "initWithDynamicProvider:", v1);
  _Block_release(v1);
  swift_release(v4);
  qword_1581540 = (uint64_t)v2;
}

id sub_9D0554(void *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = (char *)objc_msgSend(a1, "userInterfaceStyle");
  sub_4E684(0, (unint64_t *)&qword_14C8070, UIColor_ptr);
  if (v1 == (_BYTE *)&dword_0 + 2)
  {
    v2 = 21;
    v3 = 21;
    v4 = 23;
  }
  else
  {
    v2 = 244;
    v3 = 244;
    v4 = 245;
  }
  return UIColor.init(decimalRed:decimalGreen:decimalBlue:alpha:)(v2, v3, v4, 1.0);
}

void sub_9D05C4()
{
  qword_1581548 = Int.seconds.getter(20);
}

void sub_9D05E4()
{
  qword_1581550 = Int.seconds.getter(20);
}

void sub_9D0604()
{
  qword_1581558 = Int.seconds.getter(18);
}

void sub_9D0624()
{
  qword_1581560 = Int.seconds.getter(18);
}

void sub_9D0644()
{
  qword_1581568 = Int.seconds.getter(2);
}

uint64_t sub_9D0664()
{
  uint64_t result;

  result = static Font.headline.getter();
  qword_1581570 = result;
  return result;
}

void sub_9D0680()
{
  qword_1581578 = static Font.Weight.semibold.getter();
}

uint64_t sub_9D069C()
{
  uint64_t result;

  result = static Font.subheadline.getter();
  qword_1581580 = result;
  return result;
}

void sub_9D06B8()
{
  qword_1581588 = Int.seconds.getter(28);
}

void sub_9D06D8()
{
  qword_1581590 = Int.seconds.getter(0);
}

uint64_t sub_9D06F8()
{
  uint64_t result;

  result = static Font.body.getter();
  qword_1581598 = result;
  return result;
}

void sub_9D0714()
{
  qword_15815A0 = static Font.Weight.semibold.getter();
}

void sub_9D0730()
{
  qword_15815A8 = Int.seconds.getter(0);
}

void sub_9D0750()
{
  qword_15815B0 = Int.seconds.getter(0);
}

__n128 sub_9D0770()
{
  __n128 *v0;
  char v1;
  __n128 result;

  v0 = (__n128 *)Corner.medium.unsafeMutableAddressor();
  v1 = v0[1].n128_i8[0];
  result = *v0;
  xmmword_15815C0 = (__int128)*v0;
  byte_15815D0 = v1;
  return result;
}

__n128 sub_9D079C()
{
  __n128 *v0;
  char v1;
  __n128 result;

  v0 = (__n128 *)Corner.small.unsafeMutableAddressor();
  v1 = v0[1].n128_i8[0];
  result = *v0;
  xmmword_15815E0 = (__int128)*v0;
  byte_15815F0 = v1;
  return result;
}

void sub_9D07C8()
{
  qword_15815F8 = Int.seconds.getter(12);
}

void sub_9D07E8()
{
  qword_1581600 = Int.seconds.getter(2);
}

void sub_9D0808()
{
  qword_1581608 = Int.seconds.getter(16);
}

uint64_t sub_9D0828()
{
  uint64_t result;

  result = static Font.footnote.getter();
  qword_1581610 = result;
  return result;
}

void sub_9D0844()
{
  qword_1581618 = Int.seconds.getter(16);
}

uint64_t sub_9D0864()
{
  uint64_t result;

  result = static Color.accentColor.getter();
  qword_1581620 = result;
  return result;
}

uint64_t sub_9D0880()
{
  uint64_t result;

  result = static Font.body.getter();
  qword_1581628 = result;
  return result;
}

void sub_9D089C()
{
  qword_1581630 = static Font.Weight.semibold.getter();
}

void sub_9D08B8()
{
  qword_1581638 = Int.seconds.getter(465);
}

void sub_9D08D8()
{
  qword_1581640 = Int.seconds.getter(4);
}

uint64_t sub_9D08F8(uint64_t a1)
{
  return sub_9D0B48(0.1, a1, &qword_1581648);
}

uint64_t sub_9D090C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v0 = static AnyTransition.opacity.getter();
  v1 = static Animation.easeIn(duration:)(0.3);
  v2 = Animation.delay(_:)(0.3);
  swift_release(v1);
  v3 = AnyTransition.animation(_:)(v2, v0);
  swift_release(v0);
  v4 = swift_release(v2);
  v5 = static UnitPoint.center.getter(v4);
  v7 = static AnyTransition.scale(scale:anchor:)(0.97, v5, v6);
  v8 = static Animation.easeIn(duration:)(0.3);
  v9 = Animation.delay(_:)(0.3);
  swift_release(v8);
  v10 = AnyTransition.animation(_:)(v9, v7);
  swift_release(v7);
  swift_release(v9);
  v11 = AnyTransition.combined(with:)(v10, v3);
  swift_release(v3);
  result = swift_release(v10);
  qword_14ED800 = v11;
  return result;
}

uint64_t sub_9D0A14(uint64_t a1)
{
  return sub_9D0B48(0.3, a1, &qword_14ED808);
}

uint64_t sub_9D0A2C()
{
  uint64_t v0;
  uint64_t result;

  if (qword_14ABE88 != -1)
    swift_once(&qword_14ABE88, sub_9D090C);
  v0 = qword_14ED800;
  if (qword_14ABE90 != -1)
    swift_once(&qword_14ABE90, sub_9D0A14);
  result = static AnyTransition.asymmetric(insertion:removal:)(v0, qword_14ED808);
  qword_1581650 = result;
  return result;
}

uint64_t sub_9D0AB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v0 = static AnyTransition.opacity.getter();
  v1 = static Animation.easeIn(duration:)(0.3);
  v2 = Animation.delay(_:)(0.2);
  swift_release(v1);
  v3 = AnyTransition.animation(_:)(v2, v0);
  swift_release(v0);
  result = swift_release(v2);
  qword_14ED810 = v3;
  return result;
}

uint64_t sub_9D0B30(uint64_t a1)
{
  return sub_9D0B48(0.3, a1, &qword_14ED818);
}

uint64_t sub_9D0B48(double a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v5 = static AnyTransition.opacity.getter();
  v6 = static Animation.easeIn(duration:)(a1);
  v7 = AnyTransition.animation(_:)(v6, v5);
  swift_release(v5);
  result = swift_release(v6);
  *a3 = v7;
  return result;
}

uint64_t sub_9D0BAC()
{
  uint64_t v0;
  uint64_t result;

  if (qword_14ABEA0 != -1)
    swift_once(&qword_14ABEA0, sub_9D0AB4);
  v0 = qword_14ED810;
  if (qword_14ABEA8 != -1)
    swift_once(&qword_14ABEA8, sub_9D0B30);
  result = static AnyTransition.asymmetric(insertion:removal:)(v0, qword_14ED818);
  qword_1581658 = result;
  return result;
}

uint64_t sub_9D0C38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  char *v26;
  void (*v27)(char *, uint64_t, uint64_t);
  unint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  double v33;
  uint64_t v34;
  uint64_t OpaqueTypeConformance2;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  double v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[2];

  v65 = a1;
  v66 = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE750);
  v58 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v57 = (char *)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE758);
  __chkstk_darwin(v64);
  v5 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE760);
  v55 = *(_QWORD *)(v6 - 8);
  v56 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE768);
  v61 = *(_QWORD *)(v9 - 8);
  v62 = v9;
  __chkstk_darwin(v9);
  v60 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE770);
  __chkstk_darwin(v11);
  v59 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v63 = (uint64_t)&v55 - v14;
  v15 = type metadata accessor for DynamicTypeSize(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v55 - v20;
  sub_724544((uint64_t)&v55 - v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v18, enum case for DynamicTypeSize.large(_:), v15);
  v22 = sub_4DD24((unint64_t *)&qword_14BF260, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  v23 = dispatch thunk of static Comparable.< infix(_:_:)(v18, v21, v15, v22);
  v24 = *(void (**)(char *, uint64_t))(v16 + 8);
  v24(v18, v15);
  v24(v21, v15);
  if ((v23 & 1) != 0)
  {
    v26 = v57;
    v25 = v58;
    v27 = *(void (**)(char *, uint64_t, uint64_t))(v58 + 16);
    v27(v57, v65, v2);
    v27(v5, (uint64_t)v26, v2);
    swift_storeEnumTagMultiPayload(v5, v64, 1);
    v28 = sub_9DB9FC();
    v29 = sub_5C150(&qword_14EE778, &qword_14EE750, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    _ConditionalContent<>.init(storage:)(v5, v11, v2, v28, v29);
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v26, v2);
  }
  else
  {
    v31 = v64;
    v32 = v11;
    if (qword_14ABE40 != -1)
      swift_once(&qword_14ABE40, sub_9D0808);
    v33 = *(double *)&qword_1581608;
    v34 = sub_5C150(&qword_14EE778, &qword_14EE750, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    View.minimumLineHeight(_:)(v2, v34, v33);
    v67[0] = v2;
    v67[1] = v34;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v67, &opaque type descriptor for <<opaque return type of View.minimumLineHeight(_:)>>, 1);
    v36 = v60;
    v37 = v56;
    View.maximumLineHeight(_:)(v56, OpaqueTypeConformance2, v33);
    v38 = (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v8, v37);
    v39 = static Edge.Set.top.getter(v38);
    v40 = v39;
    v41 = v31;
    if (qword_14ABE38 != -1)
      v39 = swift_once(&qword_14ABE38, sub_9D07E8);
    v42 = EdgeInsets.init(_all:)(v39, *(double *)&qword_1581600);
    v44 = v43;
    v46 = v45;
    v48 = v47;
    v50 = v61;
    v49 = v62;
    v51 = (uint64_t)v59;
    (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v59, v36, v62);
    v52 = v51 + *(int *)(v32 + 36);
    *(_BYTE *)v52 = v40;
    *(double *)(v52 + 8) = v42;
    *(_QWORD *)(v52 + 16) = v44;
    *(_QWORD *)(v52 + 24) = v46;
    *(_QWORD *)(v52 + 32) = v48;
    *(_BYTE *)(v52 + 40) = 0;
    (*(void (**)(char *, uint64_t))(v50 + 8))(v36, v49);
    v53 = v63;
    sub_5C090(v51, v63, &qword_14EE770);
    sub_5C238(v53, (uint64_t)v5, &qword_14EE770);
    swift_storeEnumTagMultiPayload(v5, v41, 0);
    v54 = sub_9DB9FC();
    _ConditionalContent<>.init(storage:)(v5, v32, v2, v54, v34);
    return sub_56024(v53, &qword_14EE770);
  }
}

void sub_9D1100(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>, double a5@<D0>, double a6@<D1>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v12 = type metadata accessor for GeometryProxy(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  __chkstk_darwin(v12);
  v16 = static Color.clear.getter(v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v12);
  v17 = *(unsigned __int8 *)(v13 + 80);
  v18 = (v17 + 48) & ~v17;
  v19 = swift_allocObject(&unk_1392A10, v18 + v14, v17 | 7);
  *(_QWORD *)(v19 + 16) = a2;
  *(_QWORD *)(v19 + 24) = a3;
  *(double *)(v19 + 32) = a5;
  *(double *)(v19 + 40) = a6;
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v19 + v18, (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  *a4 = v16;
  a4[1] = (uint64_t)sub_9DBB8C;
  a4[3] = 0;
  a4[4] = 0;
  a4[2] = v19;
  swift_retain(a2);
  swift_retain(a3);
}

uint64_t sub_9D1214(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[6];

  v7[2] = a1;
  v7[3] = a2;
  *(double *)&v7[4] = a3;
  *(double *)&v7[5] = a4;
  v7[0] = GeometryProxy.size.getter(a3);
  v7[1] = v4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE798);
  return Binding.wrappedValue.setter(v7, v5);
}

uint64_t sub_9D1284@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t@<X0>, uint64_t *@<X8>);
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t@<X0>, uint64_t *@<X8>);
  void (*v13)(uint64_t@<X0>, uint64_t *@<X8>);
  uint64_t v14;
  uint64_t result;
  void (**v16)(uint64_t@<X0>, uint64_t *@<X8>);

  v5 = *v2;
  v6 = v2[1];
  v7 = v2[2];
  v8 = v2[3];
  v9 = (void (*)(uint64_t@<X0>, uint64_t *@<X8>))swift_allocObject(&unk_13929E8, 48, 7);
  *((_QWORD *)v9 + 2) = v5;
  *((_QWORD *)v9 + 3) = v6;
  *((_QWORD *)v9 + 4) = v7;
  *((_QWORD *)v9 + 5) = v8;
  swift_retain(v5);
  swift_retain(v6);
  v11 = static Alignment.center.getter(v10);
  v13 = v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE788);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a2, a1, v14);
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE790);
  v16 = (void (**)(uint64_t@<X0>, uint64_t *@<X8>))(a2 + *(int *)(result + 36));
  *v16 = sub_9DBB04;
  v16[1] = v9;
  v16[2] = (void (*)(uint64_t@<X0>, uint64_t *@<X8>))v11;
  v16[3] = v13;
  return result;
}

void sub_9D1348()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000000010C4100, "MusicApplication/PlaylistSongSuggestions.swift", 46, 2, 759, 0);
  __break(1u);
}

id sub_9D13A0(void *a1)
{
  objc_super v2;

  v2.receiver = a1;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, "isEditing");
}

void sub_9D13DC(void *a1, uint64_t a2, uint64_t a3)
{
  id v4;
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)swift_getObjectType();
  v4 = v5.receiver;
  objc_msgSendSuper2(&v5, "setEditing:", a3);
  sub_9D143C();

}

id sub_9D143C()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v4;
  id result;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;
  objc_super v9;
  objc_super v10;
  uint64_t v11;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = *(_QWORD *)&v0[qword_14ED828];
  KeyPath = swift_getKeyPath(&unk_108F290);
  v4 = swift_getKeyPath(&unk_108F2B8);
  static Published.subscript.getter(&v11, v2, KeyPath, v4);
  swift_release(KeyPath);
  swift_release(v4);
  LODWORD(v4) = v11;
  v10.receiver = v0;
  v10.super_class = ObjectType;
  result = objc_msgSendSuper2(&v10, "isEditing");
  if ((_DWORD)v4 != (_DWORD)result)
  {
    v9.receiver = v0;
    v9.super_class = ObjectType;
    v6 = objc_msgSendSuper2(&v9, "isEditing");
    v7 = swift_getKeyPath(&unk_108F290);
    v8 = swift_getKeyPath(&unk_108F2B8);
    LOBYTE(v11) = v6;
    swift_retain(v2);
    return (id)static Published.subscript.setter(&v11, v2, v7, v8);
  }
  return result;
}

id sub_9D153C(uint64_t a1, uint64_t a2, char a3)
{
  char *v3;
  id result;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  uint64_t v23;
  uint64_t KeyPath;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;

  if ((a3 & 1) != 0)
  {
    result = objc_msgSend(v3, "view");
    if (!result)
    {
LABEL_12:
      __break(1u);
      return result;
    }
    v7 = result;
    objc_msgSend(result, "bounds");
    a1 = v8;
    a2 = v9;

  }
  result = objc_msgSend(v3, "view");
  if (!result)
  {
    __break(1u);
    goto LABEL_12;
  }
  v10 = result;
  objc_msgSend(result, "music_inheritedLayoutInsets");
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v18 = v17;

  v19 = CGSize.inset(by:)(v12, v14, v16, v18, *(double *)&a1, *(double *)&a2);
  dispatch thunk of UIHostingController.sizeThatFits(in:)(v19, 1.79769313e308);
  v21 = v20;
  objc_msgSend(v3, "preferredContentSize");
  if (v21 != v22)
  {
    objc_msgSend(v3, "preferredContentSize");
    objc_msgSend(v3, "setPreferredContentSize:");
  }
  v23 = *(_QWORD *)&v3[qword_14ED828];
  KeyPath = swift_getKeyPath(&unk_108F2D8);
  v25 = swift_getKeyPath(&unk_108F300);
  static Published.subscript.getter(&v28, v23, KeyPath, v25);
  swift_release(KeyPath);
  result = (id)swift_release(v25);
  if (v28 != v19)
  {
    v26 = swift_getKeyPath(&unk_108F2D8);
    v27 = swift_getKeyPath(&unk_108F300);
    v28 = v19;
    swift_retain(v23);
    return (id)static Published.subscript.setter(&v28, v23, v26, v27);
  }
  return result;
}

void sub_9D170C(void *a1)
{
  id v1;
  objc_super v2;

  v2.receiver = a1;
  v2.super_class = (Class)swift_getObjectType();
  v1 = v2.receiver;
  objc_msgSendSuper2(&v2, "viewDidLayoutSubviews");
  sub_9D153C(0, 0, 1);

}

void sub_9D176C()
{
  _swift_stdlib_reportUnimplementedInitializer("MusicApplication.PlaylistSongSuggestionsViewController", 54, "init(rootView:)", 15, 0);
  __break(1u);
}

void sub_9D1798()
{
  _swift_stdlib_reportUnimplementedInitializer("MusicApplication.PlaylistSongSuggestionsViewController", 54, "init(coder:rootView:)", 21, 0);
  __break(1u);
}

uint64_t sub_9D17C4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + qword_14ED820));
  return swift_release(*(_QWORD *)(v0 + qword_14ED828));
}

uint64_t sub_9D17F0(uint64_t a1)
{
  swift_release(*(_QWORD *)(a1 + qword_14ED820));
  return swift_release(*(_QWORD *)(a1 + qword_14ED828));
}

uint64_t sub_9D1828()
{
  return type metadata accessor for PlaylistSongSuggestionsViewController(0);
}

double sub_9D1830()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  double v4;

  KeyPath = swift_getKeyPath(&unk_108F2D8);
  v2 = swift_getKeyPath(&unk_108F300);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_9D18A0()
{
  return sub_2ACC28((uint64_t)&unk_108F290, (uint64_t)&unk_108F2B8);
}

uint64_t sub_9D18B4()
{
  return sub_2ACC28((uint64_t)&unk_108F320, (uint64_t)&unk_108F348);
}

double sub_9D18C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  double result;

  v1 = v0 + OBJC_IVAR____TtC16MusicApplication24SuggestedSongsDataSource_playlist;
  v2 = type metadata accessor for Playlist(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_56060(v0 + OBJC_IVAR____TtC16MusicApplication24SuggestedSongsDataSource_presentationSource);
  swift_bridgeObjectRelease();
  v3 = v0 + OBJC_IVAR____TtC16MusicApplication24SuggestedSongsDataSource__availableWidth;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AF200);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtC16MusicApplication24SuggestedSongsDataSource__isEditing;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14B7070);
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v7(v5, v6);
  v7(v0 + OBJC_IVAR____TtC16MusicApplication24SuggestedSongsDataSource__isTracklistEmpty, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&result = swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52)).n128_u64[0];
  return result;
}

uint64_t sub_9D19D0()
{
  return type metadata accessor for SuggestedSongsDataSource(0);
}

uint64_t type metadata accessor for SuggestedSongsDataSource(uint64_t a1)
{
  return sub_6345C(a1, qword_14ED8C0, (uint64_t)&nominal type descriptor for SuggestedSongsDataSource);
}

void sub_9D19EC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[4];
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;

  v2 = type metadata accessor for Playlist(319);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    v8[1] = "H";
    v8[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
    sub_1ECFF0(319, (unint64_t *)&qword_14DCED0, (uint64_t)&type metadata for CGFloat);
    if (v5 <= 0x3F)
    {
      v8[3] = *(_QWORD *)(v4 - 8) + 64;
      sub_1ECFF0(319, (unint64_t *)&qword_14CF5F0, (uint64_t)&type metadata for Bool);
      if (v7 <= 0x3F)
      {
        v9 = *(_QWORD *)(v6 - 8) + 64;
        v10 = v9;
        v11 = (char *)&value witness table for Builtin.BridgeObject + 64;
        v12 = (char *)&value witness table for Builtin.BridgeObject + 64;
        swift_updateClassMetadata2(a1, 256, 8, v8, a1 + 80);
      }
    }
  }
}

uint64_t sub_9D1ACC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for SuggestedSongsDataSource(0);
  result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

double sub_9D1B08@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  double result;

  v5 = v3;
  v8 = static Alignment.center.getter(a1);
  v10 = v9;
  v11 = a3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14EE038) + 36);
  v12 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v11, v5, v12);
  v13 = (uint64_t *)(v5 + *(int *)(a2 + 20));
  v15 = *v13;
  v14 = v13[1];
  v16 = (_QWORD *)(v11 + *(int *)(type metadata accessor for TaggedViewResolver(0) + 20));
  *v16 = v15;
  v16[1] = v14;
  v17 = (uint64_t *)(v11 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14EE040) + 36));
  *v17 = v8;
  v17[1] = v10;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EE048);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(a3, a1, v18);
  *(_QWORD *)&result = swift_retain(v14).n128_u64[0];
  return result;
}

uint64_t sub_9D1BE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t result;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  unsigned __int8 *v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 *v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  __n128 v36;
  unsigned __int8 *v37;
  unsigned int v38;
  uint64_t v39;
  char v40;
  _QWORD v41[3];
  objc_super v42;

  v7 = &v3[OBJC_IVAR____TtCV16MusicApplication18TaggedViewResolver4View_song];
  v8 = type metadata accessor for Song(0);
  v9 = *(_QWORD *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v7, a1, v8);
  v10 = &v3[OBJC_IVAR____TtCV16MusicApplication18TaggedViewResolver4View_windowObserver];
  *(_QWORD *)v10 = a2;
  *((_QWORD *)v10 + 1) = a3;
  v42.receiver = v3;
  v42.super_class = (Class)type metadata accessor for TaggedViewResolver.View(0);
  swift_retain(a3);
  v11 = objc_msgSendSuper2(&v42, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  result = Song.catalogID.getter(v11);
  if (!v13)
    goto LABEL_47;
  v14 = v13;
  v15 = HIBYTE(v13) & 0xF;
  v16 = result & 0xFFFFFFFFFFFFLL;
  if ((v14 & 0x2000000000000000) != 0)
    v17 = v15;
  else
    v17 = result & 0xFFFFFFFFFFFFLL;
  if (!v17)
  {
    swift_bridgeObjectRelease();
LABEL_47:
    v32 = (void *)objc_opt_self(UIColor);
    v33 = v11;
    v34 = objc_msgSend(v32, "clearColor");
    objc_msgSend(v33, "setBackgroundColor:", v34);

    v35 = v33;
    objc_msgSend(v35, "setUserInteractionEnabled:", 0);
    v36 = swift_release(a3);
    (*(void (**)(uint64_t, uint64_t, __n128))(v9 + 8))(a1, v8, v36);

    return (uint64_t)v35;
  }
  if ((v14 & 0x1000000000000000) != 0)
  {
    v19 = sub_338138(result, v14, 10);
    v21 = v40;
LABEL_45:
    *(_QWORD *)&v31 = swift_bridgeObjectRelease().n128_u64[0];
    if ((v21 & 1) == 0)
      objc_msgSend(v11, "setTag:", v19, v31);
    goto LABEL_47;
  }
  if ((v14 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0)
      v18 = (unsigned __int8 *)((v14 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v18 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(result, v14);
    v19 = (uint64_t)sub_338110(v18, v16, 10);
    v21 = v20 & 1;
    goto LABEL_45;
  }
  v41[0] = result;
  v41[1] = v14 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (!v15)
      goto LABEL_58;
    if (v15 == 1 || (BYTE1(result) - 48) > 9u)
      goto LABEL_32;
    v19 = (BYTE1(result) - 48);
    if (v15 != 2)
    {
      if ((BYTE2(result) - 48) > 9u)
        goto LABEL_32;
      v19 = 10 * (BYTE1(result) - 48) + (BYTE2(result) - 48);
      v22 = v15 - 3;
      if (v22)
      {
        v23 = (unsigned __int8 *)v41 + 3;
        while (1)
        {
          v24 = *v23 - 48;
          if (v24 > 9)
            goto LABEL_32;
          v25 = 10 * v19;
          if ((unsigned __int128)(v19 * (__int128)10) >> 64 != (10 * v19) >> 63)
            goto LABEL_32;
          v19 = v25 + v24;
          if (__OFADD__(v25, v24))
            goto LABEL_32;
          v21 = 0;
          ++v23;
          if (!--v22)
            goto LABEL_45;
        }
      }
    }
LABEL_44:
    v21 = 0;
    goto LABEL_45;
  }
  if (result != 45)
  {
    if (!v15 || (result - 48) > 9u)
      goto LABEL_32;
    v19 = (result - 48);
    if (v15 != 1)
    {
      if ((BYTE1(result) - 48) > 9u)
        goto LABEL_32;
      v19 = 10 * (result - 48) + (BYTE1(result) - 48);
      v26 = v15 - 2;
      if (v26)
      {
        v27 = (unsigned __int8 *)v41 + 2;
        while (1)
        {
          v28 = *v27 - 48;
          if (v28 > 9)
            goto LABEL_32;
          v29 = 10 * v19;
          if ((unsigned __int128)(v19 * (__int128)10) >> 64 != (10 * v19) >> 63)
            goto LABEL_32;
          v19 = v29 + v28;
          if (__OFADD__(v29, v28))
            goto LABEL_32;
          v21 = 0;
          ++v27;
          if (!--v26)
            goto LABEL_45;
        }
      }
    }
    goto LABEL_44;
  }
  if (v15)
  {
    if (v15 != 1 && (BYTE1(result) - 48) <= 9u)
    {
      if (v15 == 2)
      {
        v21 = 0;
        v19 = -(uint64_t)(BYTE1(result) - 48);
        goto LABEL_45;
      }
      if ((BYTE2(result) - 48) <= 9u)
      {
        v19 = -10 * (BYTE1(result) - 48) - (BYTE2(result) - 48);
        v30 = v15 - 3;
        if (!v30)
          goto LABEL_44;
        v37 = (unsigned __int8 *)v41 + 3;
        while (1)
        {
          v38 = *v37 - 48;
          if (v38 > 9)
            break;
          v39 = 10 * v19;
          if ((unsigned __int128)(v19 * (__int128)10) >> 64 != (10 * v19) >> 63)
            break;
          v19 = v39 - v38;
          if (__OFSUB__(v39, v38))
            break;
          v21 = 0;
          ++v37;
          if (!--v30)
            goto LABEL_45;
        }
      }
    }
LABEL_32:
    v19 = 0;
    v21 = 1;
    goto LABEL_45;
  }
  __break(1u);
LABEL_58:
  __break(1u);
  return result;
}

uint64_t sub_9D20C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCV16MusicApplication18TaggedViewResolver4View_song;
  v2 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtCV16MusicApplication18TaggedViewResolver4View_windowObserver + 8));
}

id sub_9D2118()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TaggedViewResolver.View(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_9D21A0()
{
  return type metadata accessor for TaggedViewResolver.View(0);
}

uint64_t type metadata accessor for TaggedViewResolver.View(uint64_t a1)
{
  return sub_6345C(a1, (uint64_t *)&unk_14EDA80, (uint64_t)&nominal type descriptor for TaggedViewResolver.View);
}

uint64_t sub_9D21BC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for Song(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for () + 64;
    result = swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_9D2234(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v15 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v15 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain(v15);
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    v6 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v6;
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    v7 = a2[5];
    v8 = *(int *)(a3 + 28);
    v9 = (uint64_t *)(a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    *(_QWORD *)(a1 + 40) = v7;
    swift_retain(v5);
    swift_retain(v6);
    swift_retain(v7);
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14CD210);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for UserInterfaceSizeClass(0);
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E0470);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v13 + 16))(v9, v10, v12);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
      }
      v17 = v9;
      v18 = v11;
      v19 = 1;
    }
    else
    {
      v16 = *v10;
      *v9 = *v10;
      swift_retain(v16);
      v17 = v9;
      v18 = v11;
      v19 = 0;
    }
    swift_storeEnumTagMultiPayload(v17, v18, v19);
  }
  return a1;
}

void sub_9D2398(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_release(a1[1]);
  swift_release(a1[3]);
  swift_release(a1[5]);
  v4 = (_QWORD *)((char *)a1 + *(int *)(a2 + 28));
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14CD210);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for UserInterfaceSizeClass(0);
    v7 = *(_QWORD *)(v6 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6))
      (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v4, v6);
  }
  else
  {
    swift_release(*v4);
  }
}

uint64_t sub_9D2458(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 40);
  v7 = *(int *)(a3 + 28);
  v8 = (uint64_t *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  *(_QWORD *)(a1 + 40) = v6;
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14CD210);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for UserInterfaceSizeClass(0);
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E0470);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      v14 = 1;
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v12 + 16))(v8, v9, v11);
      v14 = 1;
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
    }
  }
  else
  {
    v15 = *v9;
    *v8 = *v9;
    swift_retain(v15);
    v14 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v10, v14);
  return a1;
}

uint64_t sub_9D2590(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  swift_retain(v6);
  swift_release(v7);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v8;
  swift_retain(v8);
  swift_release(v9);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v11;
  swift_retain(v11);
  swift_release(v10);
  if (a1 != a2)
  {
    v12 = *(int *)(a3 + 28);
    v13 = (uint64_t *)(a1 + v12);
    v14 = (uint64_t *)(a2 + v12);
    sub_56024(a1 + v12, (uint64_t *)&unk_14CD210);
    v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14CD210);
    if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
    {
      v16 = type metadata accessor for UserInterfaceSizeClass(0);
      v17 = *(_QWORD *)(v16 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16))
      {
        v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E0470);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
        v19 = 1;
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v17 + 16))(v13, v14, v16);
        v19 = 1;
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
      }
    }
    else
    {
      v20 = *v14;
      *v13 = *v14;
      swift_retain(v20);
      v19 = 0;
    }
    swift_storeEnumTagMultiPayload(v13, v15, v19);
  }
  return a1;
}

_OWORD *sub_9D2714(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v5 = *(int *)(a3 + 28);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14CD210);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for UserInterfaceSizeClass(0);
    v10 = *(_QWORD *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9))
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E0470);
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v6, v7, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v6, 0, 1, v9);
    }
    swift_storeEnumTagMultiPayload(v6, v8, 1);
  }
  else
  {
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t sub_9D2824(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_release(v7);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v8;
  swift_release(v9);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release(v10);
  if (a1 != a2)
  {
    v11 = *(int *)(a3 + 28);
    v12 = (void *)(a1 + v11);
    v13 = (const void *)(a2 + v11);
    sub_56024(a1 + v11, (uint64_t *)&unk_14CD210);
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14CD210);
    if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
    {
      v15 = type metadata accessor for UserInterfaceSizeClass(0);
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15))
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E0470);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v16 + 32))(v12, v13, v15);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v12, 0, 1, v15);
      }
      swift_storeEnumTagMultiPayload(v12, v14, 1);
    }
    else
    {
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_9D297C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_9D2988);
}

uint64_t sub_9D2988(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14CFB20);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t sub_9D2A08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_9D2A14);
}

uint64_t sub_9D2A14(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14CFB20);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for PlaylistSongSuggestionsView(uint64_t a1)
{
  return sub_6345C(a1, qword_14EDAE8, (uint64_t)&nominal type descriptor for PlaylistSongSuggestionsView);
}

void sub_9D2AA0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = &unk_108F1C0;
  v4[1] = &unk_108F1C0;
  v4[2] = &unk_108F1D8;
  sub_2CBE40(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
  }
}

uint64_t sub_9D2B20(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_11FEFE8, 1);
}

uint64_t sub_9D2B30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v4 = type metadata accessor for Song(0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, double))(v8 + 16))(v7, v2, v5);
  v9 = (uint64_t *)(v2 + *(int *)(a2 + 20));
  v10 = *v9;
  v11 = v9[1];
  objc_allocWithZone((Class)type metadata accessor for TaggedViewResolver.View(0));
  swift_retain(v11);
  return sub_9D1BE8((uint64_t)v7, v10, v11);
}

uint64_t sub_9D2BDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_4DD24(&qword_14EE5D0, type metadata accessor for TaggedViewResolver, (uint64_t)&unk_108F73C);
  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_9D2C44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_4DD24(&qword_14EE5D0, type metadata accessor for TaggedViewResolver, (uint64_t)&unk_108F73C);
  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_9D2CAC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_4DD24(&qword_14EE5D0, type metadata accessor for TaggedViewResolver, (uint64_t)&unk_108F73C);
  UIViewRepresentable.body.getter(a1, v2);
  __break(1u);
}

double sub_9D2CE8@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  double v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_108F2D8);
  v5 = swift_getKeyPath(&unk_108F300);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  result = v7;
  *a2 = v7;
  return result;
}

uint64_t sub_9D2D64(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_108F2D8);
  v5 = swift_getKeyPath(&unk_108F300);
  v7 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_9D2DDC@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_2B6508(a1, (uint64_t)&unk_108F290, (uint64_t)&unk_108F2B8, a2);
}

uint64_t sub_9D2E00(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1F64F4(a1, a2, a3, a4, (uint64_t)&unk_108F290, (uint64_t)&unk_108F2B8);
}

uint64_t sub_9D2E2C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_2B6508(a1, (uint64_t)&unk_108F320, (uint64_t)&unk_108F348, a2);
}

uint64_t sub_9D2E40@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_2B6508(a1, (uint64_t)&unk_108F320, (uint64_t)&unk_108F348, a2);
}

uint64_t sub_9D2E64(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1F64F4(a1, a2, a3, a4, (uint64_t)&unk_108F320, (uint64_t)&unk_108F348);
}

uint64_t sub_9D2E78(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1F64F4(a1, a2, a3, a4, (uint64_t)&unk_108F320, (uint64_t)&unk_108F348);
}

uint64_t sub_9D2E9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), uint64_t (*a6)(char *))
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;

  v8 = a5(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v13 - v9;
  (*(void (**)(char *, uint64_t))(v11 + 16))((char *)&v13 - v9, a1);
  return a6(v10);
}

uint64_t sub_9D2F18(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[24];

  v10 = OBJC_IVAR____TtC16MusicApplication24SuggestedSongsDataSource_updateReceivers;
  v11 = sub_4E684(0, (unint64_t *)&qword_14ACB70, NSObject_ptr);
  *(_QWORD *)(v5 + v10) = WeakArray.init(_:)((uint64_t)_swiftEmptyArrayStorage, v11);
  *(_QWORD *)(v5 + OBJC_IVAR____TtC16MusicApplication24SuggestedSongsDataSource_pendingImpressionCellTags) = &_swiftEmptySetSingleton;
  *(_QWORD *)(v5 + OBJC_IVAR____TtC16MusicApplication24SuggestedSongsDataSource_impressedSongs) = &_swiftEmptySetSingleton;
  v12 = v5 + OBJC_IVAR____TtC16MusicApplication24SuggestedSongsDataSource_playlist;
  v13 = type metadata accessor for Playlist(0);
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v12, a1, v13);
  sub_6087C(a2, v5 + OBJC_IVAR____TtC16MusicApplication24SuggestedSongsDataSource_presentationSource);
  v15 = sub_30C298(a3);
  v16 = WeakArray.init(_:)((uint64_t)v15, v11);
  v17 = *(_QWORD *)(v5 + OBJC_IVAR____TtC16MusicApplication24SuggestedSongsDataSource_updateReceivers);
  *(_QWORD *)(v5 + OBJC_IVAR____TtC16MusicApplication24SuggestedSongsDataSource_updateReceivers) = v16;
  swift_bridgeObjectRelease(v17);
  swift_beginAccess(v5 + OBJC_IVAR____TtC16MusicApplication24SuggestedSongsDataSource__availableWidth, v21, 33, 0);
  v20 = 0;
  Published.init(initialValue:)(&v20, &type metadata for CGFloat);
  swift_endAccess(v21);
  swift_beginAccess(v5 + OBJC_IVAR____TtC16MusicApplication24SuggestedSongsDataSource__isEditing, v21, 33, 0);
  LOBYTE(v20) = a4;
  Published.init(initialValue:)(&v20, &type metadata for Bool);
  swift_endAccess(v21);
  swift_beginAccess(v5 + OBJC_IVAR____TtC16MusicApplication24SuggestedSongsDataSource__isTracklistEmpty, v21, 33, 0);
  LOBYTE(v20) = a5;
  Published.init(initialValue:)(&v20, &type metadata for Bool);
  swift_endAccess(v21);
  sub_56060(a2);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a1, v13);
  return v5;
}

uint64_t sub_9D310C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[2];

  v5 = type metadata accessor for PlaylistSongSuggestionsView(0);
  v6.n128_f64[0] = __chkstk_darwin(v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v2 + qword_14ED828) = a2;
  *(_QWORD *)(v2 + qword_14ED820) = a1;
  v9 = type metadata accessor for MusicSuggestedSongsViewModel(0, v6);
  v10 = sub_4DD24((unint64_t *)&unk_14E3FB8, (uint64_t (*)(uint64_t))&type metadata accessor for MusicSuggestedSongsViewModel, (uint64_t)&protocol conformance descriptor for MusicSuggestedSongsViewModel);
  swift_retain_n(a2, 2);
  v11 = swift_retain_n(a1, 2);
  *(_QWORD *)v8 = ObservedObject.init(wrappedValue:)(v11, v9, v10);
  *((_QWORD *)v8 + 1) = v12;
  v13 = type metadata accessor for SuggestedSongsDataSource(0);
  v14 = sub_4DD24((unint64_t *)&unk_14EA220, type metadata accessor for SuggestedSongsDataSource, (uint64_t)&unk_108F254);
  *((_QWORD *)v8 + 2) = ObservedObject.init(wrappedValue:)(a2, v13, v14);
  *((_QWORD *)v8 + 3) = v15;
  v21 = 0;
  State.init(wrappedValue:)(v22, &v21, &type metadata for Bool);
  v16 = v22[1];
  v8[32] = v22[0];
  *((_QWORD *)v8 + 5) = v16;
  v17 = &v8[*(int *)(v5 + 28)];
  *(_QWORD *)v17 = swift_getKeyPath(&unk_108F368);
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14CD210);
  swift_storeEnumTagMultiPayload(v17, v18, 0);
  return UIHostingController.init(rootView:)(v8);
}

double sub_9D3290(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unsigned int (*v19)(uint64_t, uint64_t, uint64_t);
  double result;
  uint64_t v21;
  char v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;

  v4 = type metadata accessor for UserInterfaceSizeClass(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14BC660);
  __chkstk_darwin(v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E0470);
  __chkstk_darwin(v11);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v24 - v16;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v5 + 104))((char *)&v24 - v16, enum case for UserInterfaceSizeClass.compact(_:), v4, v15);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v17, 0, 1, v4);
  v18 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_5C238(a1, (uint64_t)v10, &qword_14E0470);
  sub_5C238((uint64_t)v17, v18, &qword_14E0470);
  v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v19((uint64_t)v10, 1, v4) != 1)
  {
    sub_5C238((uint64_t)v10, (uint64_t)v13, &qword_14E0470);
    if (v19(v18, 1, v4) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v18, v4);
      v21 = sub_4DD24(&qword_14CFE60, (uint64_t (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass, (uint64_t)&protocol conformance descriptor for UserInterfaceSizeClass);
      v22 = dispatch thunk of static Equatable.== infix(_:_:)(v13, v7, v4, v21);
      v23 = *(void (**)(char *, uint64_t))(v5 + 8);
      v23(v7, v4);
      sub_56024((uint64_t)v17, &qword_14E0470);
      v23(v13, v4);
      sub_56024((uint64_t)v10, &qword_14E0470);
      result = 24.0;
      if ((v22 & 1) == 0)
        return result;
      goto LABEL_8;
    }
    sub_56024((uint64_t)v17, &qword_14E0470);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
LABEL_6:
    sub_56024((uint64_t)v10, &qword_14BC660);
    return 24.0;
  }
  sub_56024((uint64_t)v17, &qword_14E0470);
  if (v19(v18, 1, v4) != 1)
    goto LABEL_6;
  sub_56024((uint64_t)v10, &qword_14E0470);
LABEL_8:
  result = 8.0;
  if ((a2 & 1) != 0)
    return 20.0;
  return result;
}

uint64_t sub_9D3554()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for PlaylistSongSuggestionsView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + v4 + 8));
  swift_release(*(_QWORD *)(v0 + v4 + 24));
  swift_release(*(_QWORD *)(v0 + v4 + 40));
  v6 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 28));
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14CD210);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for UserInterfaceSizeClass(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8))
      (*(void (**)(_QWORD *, uint64_t))(v9 + 8))(v6, v8);
  }
  else
  {
    swift_release(*v6);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_9D3638(uint64_t a1, char *a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PlaylistSongSuggestionsView(0) - 8) + 80);
  return sub_9C3B48(a1, a2, v2 + ((v5 + 16) & ~v5));
}

uint64_t sub_9D3684()
{
  return sub_184F98(&qword_14EDB70, &qword_14EDB48, (void (*)(void))sub_9D36A8);
}

unint64_t sub_9D36A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14EDB78;
  if (!qword_14EDB78)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EDB40);
    sub_9D372C();
    sub_5C150(qword_14F17F0, &qword_14DD170, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14EDB78);
  }
  return result;
}

unint64_t sub_9D372C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14EDB80;
  if (!qword_14EDB80)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EDB38);
    sub_9D37B0();
    sub_5C150(&qword_14AF248, &qword_14AF250, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14EDB80);
  }
  return result;
}

unint64_t sub_9D37B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14EDB88;
  if (!qword_14EDB88)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EDB30);
    sub_5C150(&qword_14EDB90, &qword_14EDB28, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14EDB88);
  }
  return result;
}

uint64_t block_copy_helper_251(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_251(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t type metadata accessor for PlaylistSongSuggestionsView.ContentView(uint64_t a1)
{
  return sub_6345C(a1, qword_14EDC18, (uint64_t)&nominal type descriptor for PlaylistSongSuggestionsView.ContentView);
}

uint64_t type metadata accessor for PlaylistSongSuggestionsView.HeaderView(uint64_t a1)
{
  return sub_6345C(a1, qword_14EDCB8, (uint64_t)&nominal type descriptor for PlaylistSongSuggestionsView.HeaderView);
}

uint64_t sub_9D3874()
{
  return EnvironmentValues.horizontalSizeClass.getter();
}

uint64_t sub_9D3898()
{
  return EnvironmentValues.dynamicTypeSize.getter();
}

uint64_t sub_9D38B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_9D2E9C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(char *))&EnvironmentValues.dynamicTypeSize.setter);
}

uint64_t sub_9D38DC(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(&type metadata for Text.Storage - 1) + 32))(a2, a1);
  return a2;
}

uint64_t sub_9D3918(uint64_t a1)
{
  sub_AF8D8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  return a1;
}

uint64_t sub_9D3948(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v17 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain(v17);
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v8;
    v9 = a2[4];
    v10 = a2[5];
    *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
    v11 = *(int *)(a3 + 28);
    v12 = (uint64_t *)(a1 + v11);
    v13 = (uint64_t *)((char *)a2 + v11);
    *(_QWORD *)(a1 + 32) = v9;
    *(_QWORD *)(a1 + 40) = v10;
    swift_retain(v7);
    swift_retain(v8);
    swift_retain(v9);
    swift_retain(v10);
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
    if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
    {
      v15 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v12, v13, v15);
      v16 = 1;
    }
    else
    {
      v18 = *v13;
      *v12 = *v13;
      swift_retain(v18);
      v16 = 0;
    }
    swift_storeEnumTagMultiPayload(v12, v14, v16);
    v19 = *(int *)(a3 + 32);
    v20 = (uint64_t *)(a1 + v19);
    v21 = (uint64_t *)((char *)a2 + v19);
    v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14CD210);
    if (swift_getEnumCaseMultiPayload(v21, v22) == 1)
    {
      v23 = type metadata accessor for UserInterfaceSizeClass(0);
      v24 = *(_QWORD *)(v23 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v24 + 48))(v21, 1, v23))
      {
        v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E0470);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v24 + 16))(v20, v21, v23);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v20, 0, 1, v23);
      }
      v27 = v20;
      v28 = v22;
      v29 = 1;
    }
    else
    {
      v26 = *v21;
      *v20 = *v21;
      swift_retain(v26);
      v27 = v20;
      v28 = v22;
      v29 = 0;
    }
    swift_storeEnumTagMultiPayload(v27, v28, v29);
  }
  return a1;
}

void sub_9D3B38(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_release(a1[1]);
  swift_release(a1[3]);
  swift_release(a1[4]);
  swift_release(a1[5]);
  v4 = (_QWORD *)((char *)a1 + *(int *)(a2 + 28));
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    swift_release(*v4);
  }
  v7 = (_QWORD *)((char *)a1 + *(int *)(a2 + 32));
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14CD210);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for UserInterfaceSizeClass(0);
    v10 = *(_QWORD *)(v9 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9))
      (*(void (**)(_QWORD *, uint64_t))(v10 + 8))(v7, v9);
  }
  else
  {
    swift_release(*v7);
  }
}

uint64_t sub_9D3C50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v10 = *(int *)(a3 + 28);
  v11 = (uint64_t *)(a1 + v10);
  v12 = (uint64_t *)(a2 + v10);
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  swift_retain(v6);
  swift_retain(v7);
  swift_retain(v8);
  swift_retain(v9);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
  if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
  {
    v14 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v11, v12, v14);
    v15 = 1;
  }
  else
  {
    v16 = *v12;
    *v11 = *v12;
    swift_retain(v16);
    v15 = 0;
  }
  swift_storeEnumTagMultiPayload(v11, v13, v15);
  v17 = *(int *)(a3 + 32);
  v18 = (uint64_t *)(a1 + v17);
  v19 = (uint64_t *)(a2 + v17);
  v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14CD210);
  if (swift_getEnumCaseMultiPayload(v19, v20) == 1)
  {
    v21 = type metadata accessor for UserInterfaceSizeClass(0);
    v22 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v22 + 48))(v19, 1, v21))
    {
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E0470);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      v24 = 1;
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v22 + 16))(v18, v19, v21);
      v24 = 1;
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v18, 0, 1, v21);
    }
  }
  else
  {
    v25 = *v19;
    *v18 = *v19;
    swift_retain(v25);
    v24 = 0;
  }
  swift_storeEnumTagMultiPayload(v18, v20, v24);
  return a1;
}

uint64_t sub_9D3E14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  swift_retain(v6);
  swift_release(v7);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v8;
  swift_retain(v8);
  swift_release(v9);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v11;
  swift_retain(v11);
  swift_release(v10);
  v12 = *(_QWORD *)(a2 + 40);
  v13 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v12;
  swift_retain(v12);
  swift_release(v13);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  if (a1 != a2)
  {
    v14 = *(int *)(a3 + 28);
    v15 = (uint64_t *)(a1 + v14);
    v16 = (uint64_t *)(a2 + v14);
    sub_56024(a1 + v14, (uint64_t *)&unk_14C8730);
    v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
    if (swift_getEnumCaseMultiPayload(v16, v17) == 1)
    {
      v18 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v15, v16, v18);
      v19 = 1;
    }
    else
    {
      v20 = *v16;
      *v15 = *v16;
      swift_retain(v20);
      v19 = 0;
    }
    swift_storeEnumTagMultiPayload(v15, v17, v19);
    v21 = *(int *)(a3 + 32);
    v22 = (uint64_t *)(a1 + v21);
    v23 = (uint64_t *)(a2 + v21);
    sub_56024(a1 + v21, (uint64_t *)&unk_14CD210);
    v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14CD210);
    if (swift_getEnumCaseMultiPayload(v23, v24) == 1)
    {
      v25 = type metadata accessor for UserInterfaceSizeClass(0);
      v26 = *(_QWORD *)(v25 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v26 + 48))(v23, 1, v25))
      {
        v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E0470);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
        v28 = 1;
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v26 + 16))(v22, v23, v25);
        v28 = 1;
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v22, 0, 1, v25);
      }
    }
    else
    {
      v29 = *v23;
      *v22 = *v23;
      swift_retain(v29);
      v28 = 0;
    }
    swift_storeEnumTagMultiPayload(v22, v24, v28);
  }
  return a1;
}

uint64_t sub_9D4034(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v7 = *(int *)(a3 + 28);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload(v8, v10, 1);
  }
  else
  {
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  v12 = *(int *)(a3 + 32);
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14CD210);
  if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
  {
    v16 = type metadata accessor for UserInterfaceSizeClass(0);
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E0470);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v17 + 32))(v13, v14, v16);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
    }
    swift_storeEnumTagMultiPayload(v13, v15, 1);
  }
  else
  {
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  return a1;
}

uint64_t sub_9D41CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_release(v7);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v8;
  swift_release(v9);
  v10 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release(v10);
  v11 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release(v11);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  if (a1 != a2)
  {
    v12 = *(int *)(a3 + 28);
    v13 = (void *)(a1 + v12);
    v14 = (const void *)(a2 + v12);
    sub_56024(a1 + v12, (uint64_t *)&unk_14C8730);
    v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
    if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
    {
      v16 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v13, v14, v16);
      swift_storeEnumTagMultiPayload(v13, v15, 1);
    }
    else
    {
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    v17 = *(int *)(a3 + 32);
    v18 = (void *)(a1 + v17);
    v19 = (const void *)(a2 + v17);
    sub_56024(a1 + v17, (uint64_t *)&unk_14CD210);
    v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14CD210);
    if (swift_getEnumCaseMultiPayload(v19, v20) == 1)
    {
      v21 = type metadata accessor for UserInterfaceSizeClass(0);
      v22 = *(_QWORD *)(v21 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48))(v19, 1, v21))
      {
        v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E0470);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v22 + 32))(v18, v19, v21);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v18, 0, 1, v21);
      }
      swift_storeEnumTagMultiPayload(v18, v20, 1);
    }
    else
    {
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_9D43BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_9D43C8);
}

uint64_t sub_9D43C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E4F30);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 28);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14CFB20);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 32);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_9D4470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_9D447C);
}

uint64_t sub_9D447C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E4F30);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 28);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14CFB20);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 32);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_9D4520(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[5];

  v6[0] = &unk_108F1C0;
  v6[1] = &unk_108F1C0;
  v6[2] = &unk_108F3D8;
  sub_184AE8(319);
  if (v3 <= 0x3F)
  {
    v6[3] = *(_QWORD *)(v2 - 8) + 64;
    sub_2CBE40(319);
    if (v5 <= 0x3F)
    {
      v6[4] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 5, v6, a1 + 16);
    }
  }
}

uint64_t *sub_9D45BC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v14);
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = *(int *)(a3 + 24);
    v8 = (uint64_t *)((char *)a1 + v7);
    v9 = (uint64_t *)((char *)a2 + v7);
    swift_retain(v5);
    swift_retain(v6);
    v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14CD210);
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v11 = type metadata accessor for UserInterfaceSizeClass(0);
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E0470);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v12 + 16))(v8, v9, v11);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
      }
      v16 = v8;
      v17 = v10;
      v18 = 1;
    }
    else
    {
      v15 = *v9;
      *v8 = *v9;
      swift_retain(v15);
      v16 = v8;
      v17 = v10;
      v18 = 0;
    }
    swift_storeEnumTagMultiPayload(v16, v17, v18);
  }
  return a1;
}

void sub_9D4708(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_release(*(_QWORD *)(a1 + 8));
  swift_release(*(_QWORD *)(a1 + 24));
  v4 = (_QWORD *)(a1 + *(int *)(a2 + 24));
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14CD210);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for UserInterfaceSizeClass(0);
    v7 = *(_QWORD *)(v6 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6))
      (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v4, v6);
  }
  else
  {
    swift_release(*v4);
  }
}

_QWORD *sub_9D47C0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = *(int *)(a3 + 24);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  swift_retain(v4);
  swift_retain(v5);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14CD210);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for UserInterfaceSizeClass(0);
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E0470);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      v13 = 1;
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v11 + 16))(v7, v8, v10);
      v13 = 1;
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
    }
  }
  else
  {
    v14 = *v8;
    *v7 = *v8;
    swift_retain(v14);
    v13 = 0;
  }
  swift_storeEnumTagMultiPayload(v7, v9, v13);
  return a1;
}

_QWORD *sub_9D48E0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *a1 = *a2;
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  a1[2] = a2[2];
  v8 = a2[3];
  v9 = a1[3];
  a1[3] = v8;
  swift_retain(v8);
  swift_release(v9);
  if (a1 != a2)
  {
    v10 = *(int *)(a3 + 24);
    v11 = (_QWORD *)((char *)a1 + v10);
    v12 = (_QWORD *)((char *)a2 + v10);
    sub_56024((uint64_t)a1 + v10, (uint64_t *)&unk_14CD210);
    v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14CD210);
    if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
    {
      v14 = type metadata accessor for UserInterfaceSizeClass(0);
      v15 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14))
      {
        v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E0470);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
        v17 = 1;
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v15 + 16))(v11, v12, v14);
        v17 = 1;
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
      }
    }
    else
    {
      v18 = *v12;
      *v11 = *v12;
      swift_retain(v18);
      v17 = 0;
    }
    swift_storeEnumTagMultiPayload(v11, v13, v17);
  }
  return a1;
}

_OWORD *sub_9D4A44(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14CD210);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for UserInterfaceSizeClass(0);
    v10 = *(_QWORD *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9))
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E0470);
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v6, v7, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v6, 0, 1, v9);
    }
    swift_storeEnumTagMultiPayload(v6, v8, 1);
  }
  else
  {
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_9D4B4C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release(v7);
  v8 = a2[3];
  v9 = a1[3];
  a1[2] = a2[2];
  a1[3] = v8;
  swift_release(v9);
  if (a1 != a2)
  {
    v10 = *(int *)(a3 + 24);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    sub_56024((uint64_t)a1 + v10, (uint64_t *)&unk_14CD210);
    v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14CD210);
    if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
    {
      v14 = type metadata accessor for UserInterfaceSizeClass(0);
      v15 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14))
      {
        v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E0470);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v11, v12, v14);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
      }
      swift_storeEnumTagMultiPayload(v11, v13, 1);
    }
    else
    {
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_9D4C8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_9D4C98);
}

uint64_t sub_9D4C98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14CFB20);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_9D4D18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_9D4D24);
}

uint64_t sub_9D4D24(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14CFB20);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

void sub_9D4D9C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = &unk_108F1C0;
  v4[1] = &unk_108F1C0;
  sub_2CBE40(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
  }
}

unint64_t sub_9D4E14()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_14EDCF8;
  if (!qword_14EDCF8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EDD00);
    v2[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EDB50);
    v2[1] = &type metadata for Bool;
    v2[2] = sub_184F98(&qword_14EDB68, &qword_14EDB50, (void (*)(void))sub_9D3684);
    v2[3] = &protocol witness table for Bool;
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_14EDCF8);
  }
  return result;
}

uint64_t sub_9D4EDC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_11FF090, 1);
}

uint64_t sub_9D4EEC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_11FF068, 1);
}

uint64_t sub_9D4EFC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(a1 + 120);
  v4 = *(_QWORD *)(a1 + 128);
  v5 = *(_BYTE *)(a1 + 136);
  v6 = *(_QWORD *)(a1 + 152);
  sub_AF8D8(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRetain();
  swift_retain(v2);
  sub_AF8D8(v3, v4, v5);
  swift_bridgeObjectRetain();
  swift_retain(v6);
  return a1;
}

uint64_t sub_9D4F88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PlaylistSongSuggestionsView.ContentView(0) - 8)
                          + 80);
  return sub_9C5A38(a1, v2 + ((v5 + 16) & ~v5), a2);
}

uint64_t type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell(uint64_t a1)
{
  return sub_6345C(a1, qword_14EDFB0, (uint64_t)&nominal type descriptor for PlaylistSongSuggestionsView.SuggestedSongCell);
}

uint64_t objectdestroy_29Tm_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = type metadata accessor for PlaylistSongSuggestionsView.ContentView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + v4 + 8));
  swift_release(*(_QWORD *)(v0 + v4 + 24));
  swift_release(*(_QWORD *)(v0 + v4 + 32));
  swift_release(*(_QWORD *)(v0 + v4 + 40));
  v6 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 28));
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {
    swift_release(*v6);
  }
  v9 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 32));
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14CD210);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for UserInterfaceSizeClass(0);
    v12 = *(_QWORD *)(v11 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
      (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v9, v11);
  }
  else
  {
    swift_release(*v9);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_9D5128()
{
  return sub_9D59B4((void (*)(_QWORD))type metadata accessor for PlaylistSongSuggestionsView.ContentView, (uint64_t (*)(void))sub_9C6938);
}

uint64_t type metadata accessor for HostedTaggedView(uint64_t a1)
{
  return sub_6345C(a1, qword_14EDF18, (uint64_t)&nominal type descriptor for HostedTaggedView);
}

uint64_t sub_9D5150()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v1 = type metadata accessor for PlaylistSongSuggestionsView.ContentView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v20 = *(_QWORD *)(v2 + 64);
  v5 = type metadata accessor for Song(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  swift_release(*(_QWORD *)(v0 + v4 + 8));
  swift_release(*(_QWORD *)(v0 + v4 + 24));
  swift_release(*(_QWORD *)(v0 + v4 + 32));
  swift_release(*(_QWORD *)(v0 + v4 + 40));
  v9 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 28));
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v9, v11);
  }
  else
  {
    swift_release(*v9);
  }
  v12 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 32));
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14CD210);
  if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
  {
    v14 = type metadata accessor for UserInterfaceSizeClass(0);
    v15 = *(_QWORD *)(v14 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14))
      (*(void (**)(_QWORD *, uint64_t))(v15 + 8))(v12, v14);
  }
  else
  {
    v16 = swift_release(*v12);
  }
  v17 = (v4 + v20 + v7) & ~v7;
  v18 = v17 + v8;
  (*(void (**)(uint64_t, uint64_t, __n128))(v6 + 8))(v0 + v17, v5, v16);
  return swift_deallocObject(v0, v18, v3 | v7 | 7);
}

void sub_9D52E4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(type metadata accessor for PlaylistSongSuggestionsView.ContentView(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Song(0) - 8) + 80);
  sub_9C6A74(v0 + v2, v0 + ((v2 + v3 + v4) & ~v4));
}

double sub_9D5344(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unsigned int (*v17)(uint64_t, uint64_t, uint64_t);
  double result;
  uint64_t v19;
  char v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;

  v2 = type metadata accessor for UserInterfaceSizeClass(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14BC660);
  __chkstk_darwin(v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E0470);
  __chkstk_darwin(v9);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v22 - v14;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v3 + 104))((char *)&v22 - v14, enum case for UserInterfaceSizeClass.compact(_:), v2, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v15, 0, 1, v2);
  v16 = (uint64_t)&v8[*(int *)(v6 + 48)];
  sub_5C238(a1, (uint64_t)v8, &qword_14E0470);
  sub_5C238((uint64_t)v15, v16, &qword_14E0470);
  v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (v17((uint64_t)v8, 1, v2) == 1)
  {
    sub_56024((uint64_t)v15, &qword_14E0470);
    if (v17(v16, 1, v2) == 1)
    {
      sub_56024((uint64_t)v8, &qword_14E0470);
      return 16.0;
    }
  }
  else
  {
    sub_5C238((uint64_t)v8, (uint64_t)v11, &qword_14E0470);
    if (v17(v16, 1, v2) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v5, v16, v2);
      v19 = sub_4DD24(&qword_14CFE60, (uint64_t (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass, (uint64_t)&protocol conformance descriptor for UserInterfaceSizeClass);
      v20 = dispatch thunk of static Equatable.== infix(_:_:)(v11, v5, v2, v19);
      v21 = *(void (**)(char *, uint64_t))(v3 + 8);
      v21(v5, v2);
      sub_56024((uint64_t)v15, &qword_14E0470);
      v21(v11, v2);
      sub_56024((uint64_t)v8, &qword_14E0470);
      result = 16.0;
      if ((v20 & 1) != 0)
        return result;
      return 20.0;
    }
    sub_56024((uint64_t)v15, &qword_14E0470);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v11, v2);
  }
  sub_56024((uint64_t)v8, &qword_14BC660);
  return 20.0;
}

unint64_t sub_9D55F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14EDE38;
  if (!qword_14EDE38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EDDF8);
    sub_184F98(&qword_14EDE40, &qword_14EDDF0, (void (*)(void))sub_9D569C);
    sub_5C150(&qword_14EA7B8, &qword_14EA7C0, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14EDE38);
  }
  return result;
}

unint64_t sub_9D569C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14EDE48;
  if (!qword_14EDE48)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EDDE8);
    sub_9D8974(&qword_14EDE50, &qword_14EDDE0, (void (*)(void))sub_9D5720);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14EDE48);
  }
  return result;
}

unint64_t sub_9D5720()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14EDE58;
  if (!qword_14EDE58)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EDE60);
    sub_5C150(&qword_14CFEF8, &qword_14CFF00, (uint64_t)&protocol conformance descriptor for ProgressView<A, B>);
    sub_9D57A4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14EDE58);
  }
  return result;
}

unint64_t sub_9D57A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14EDE68;
  if (!qword_14EDE68)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EDE70);
    sub_5C150(&qword_14EDE78, &qword_14EDE80, (uint64_t)&protocol conformance descriptor for Button<A>);
    sub_5C150(&qword_14EDE88, &qword_14EDE90, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14EDE68);
  }
  return result;
}

unint64_t sub_9D5840()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14EDE98;
  if (!qword_14EDE98)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EDE00);
    sub_9D55F8();
    sub_4DD24((unint64_t *)&qword_14C07D0, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14EDE98);
  }
  return result;
}

uint64_t sub_9D58C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for PlaylistSongSuggestionsView.HeaderView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + v4 + 8));
  swift_release(*(_QWORD *)(v0 + v4 + 24));
  v6 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 24));
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14CD210);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for UserInterfaceSizeClass(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8))
      (*(void (**)(_QWORD *, uint64_t))(v9 + 8))(v6, v8);
  }
  else
  {
    swift_release(*v6);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_9D59A0()
{
  return sub_9D59B4((void (*)(_QWORD))type metadata accessor for PlaylistSongSuggestionsView.HeaderView, sub_9C5060);
}

uint64_t sub_9D59B4(void (*a1)(_QWORD), uint64_t (*a2)(void))
{
  a1(0);
  return a2();
}

uint64_t sub_9D59F4()
{
  return EnvironmentValues._buttonBorderShape.getter();
}

uint64_t sub_9D5A14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_9D2E9C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for ButtonBorderShape, (uint64_t (*)(char *))&EnvironmentValues._buttonBorderShape.setter);
}

uint64_t sub_9D5A50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for PlaylistSongSuggestionsView.HeaderView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + v4 + 8));
  swift_release(*(_QWORD *)(v0 + v4 + 24));
  v6 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 24));
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14CD210);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for UserInterfaceSizeClass(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8))
      (*(void (**)(_QWORD *, uint64_t))(v9 + 8))(v6, v8);
  }
  else
  {
    swift_release(*v6);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_9D5B34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PlaylistSongSuggestionsView.HeaderView(0) - 8)
                          + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v1 + ((v4 + 32) & ~v4);
  v8 = (_QWORD *)swift_task_alloc(dword_14EDEB4);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_50F8C;
  return sub_9C56AC(a1, v5, v6, v7);
}

uint64_t sub_9D5BD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, j____swift_get_extra_inhabitant_index_63Tm);
}

uint64_t sub_9D5BE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_64Tm);
}

uint64_t *sub_9D5BF4(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  unint64_t v42;
  int *v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  int *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  void (*v63)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v72;
  unsigned int (*v73)(char *, uint64_t, uint64_t);
  char *v74;
  uint64_t v75;
  char *__dst;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v26 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v26);
  }
  else
  {
    v7 = type metadata accessor for Song(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (uint64_t *)((char *)a1 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = a3[7];
    v17 = a3[8];
    v18 = (uint64_t *)((char *)a1 + v16);
    v19 = (uint64_t *)((char *)a2 + v16);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = (uint64_t *)((char *)a1 + v17);
    v22 = (uint64_t *)((char *)a2 + v17);
    swift_retain(v12);
    swift_retain(v15);
    swift_retain(v20);
    v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
    if (swift_getEnumCaseMultiPayload(v22, v23) == 1)
    {
      v24 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v21, v22, v24);
      v25 = 1;
    }
    else
    {
      v27 = *v22;
      *v21 = *v22;
      swift_retain(v27);
      v25 = 0;
    }
    swift_storeEnumTagMultiPayload(v21, v23, v25);
    v28 = a3[9];
    v29 = (uint64_t *)((char *)a1 + v28);
    v30 = (uint64_t *)((char *)a2 + v28);
    v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14CD210);
    if (swift_getEnumCaseMultiPayload(v30, v31) == 1)
    {
      v32 = type metadata accessor for UserInterfaceSizeClass(0);
      v33 = *(_QWORD *)(v32 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v33 + 48))(v30, 1, v32))
      {
        v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E0470);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v33 + 16))(v29, v30, v32);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v29, 0, 1, v32);
      }
      v36 = v29;
      v37 = v31;
      v38 = 1;
    }
    else
    {
      v35 = *v30;
      *v29 = *v30;
      swift_retain(v35);
      v36 = v29;
      v37 = v31;
      v38 = 0;
    }
    swift_storeEnumTagMultiPayload(v36, v37, v38);
    v39 = a3[10];
    v40 = (uint64_t *)((char *)a1 + v39);
    v41 = (uint64_t *)((char *)a2 + v39);
    v42 = *(uint64_t *)((char *)a2 + v39 + 8);
    if (v42 > 9)
    {
      *v40 = *v41;
      v40[1] = v42;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)v40 = *(_OWORD *)v41;
    }
    v43 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
    v44 = v43[5];
    v45 = (_QWORD *)((char *)v40 + v44);
    v46 = (_QWORD *)((char *)v41 + v44);
    v47 = (int *)type metadata accessor for MetricsEvent.Page(0);
    v48 = *((_QWORD *)v47 - 1);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v48 + 48))(v46, 1, v47))
    {
      v49 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE6F0);
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    }
    else
    {
      v50 = v46[1];
      *v45 = *v46;
      v45[1] = v50;
      v51 = v46[3];
      v45[2] = v46[2];
      v45[3] = v51;
      v52 = v47[6];
      v75 = v48;
      __dst = (char *)v45 + v52;
      v74 = (char *)v46 + v52;
      v53 = type metadata accessor for URL(0);
      v72 = *(_QWORD *)(v53 - 8);
      v73 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v73(v74, 1, v53))
      {
        v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AED20);
        memcpy(__dst, v74, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v72 + 16))(__dst, v74, v53);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v72 + 56))(__dst, 0, 1, v53);
      }
      *(_QWORD *)((char *)v45 + v47[7]) = *(_QWORD *)((char *)v46 + v47[7]);
      v55 = v47[8];
      v56 = (_QWORD *)((char *)v45 + v55);
      v57 = (_QWORD *)((char *)v46 + v55);
      v58 = v57[1];
      *v56 = *v57;
      v56[1] = v58;
      *((_BYTE *)v45 + v47[9]) = *((_BYTE *)v46 + v47[9]);
      v59 = v47[10];
      v60 = (_QWORD *)((char *)v45 + v59);
      v61 = (_QWORD *)((char *)v46 + v59);
      v62 = v61[1];
      *v60 = *v61;
      v60[1] = v62;
      v63 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v75 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v63(v45, 0, 1, v47);
    }
    v64 = v43[6];
    v65 = (_QWORD *)((char *)v40 + v64);
    v66 = (_QWORD *)((char *)v41 + v64);
    v67 = v66[1];
    *v65 = *v66;
    v65[1] = v67;
    *(_QWORD *)((char *)v40 + v43[7]) = *(_QWORD *)((char *)v41 + v43[7]);
    *(_QWORD *)((char *)v40 + v43[8]) = *(_QWORD *)((char *)v41 + v43[8]);
    v68 = v43[9];
    v69 = (char *)v40 + v68;
    v70 = (char *)v41 + v68;
    *((_QWORD *)v69 + 2) = *((_QWORD *)v70 + 2);
    *(_OWORD *)v69 = *(_OWORD *)v70;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

double sub_9D6044(uint64_t a1, int *a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double result;

  v4 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_release(*(_QWORD *)(a1 + a2[5] + 8));
  swift_release(*(_QWORD *)(a1 + a2[6] + 8));
  swift_release(*(_QWORD *)(a1 + a2[7] + 8));
  v5 = (_QWORD *)(a1 + a2[8]);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
  if (swift_getEnumCaseMultiPayload(v5, v6) == 1)
  {
    v7 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
  }
  else
  {
    swift_release(*v5);
  }
  v8 = (_QWORD *)(a1 + a2[9]);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14CD210);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for UserInterfaceSizeClass(0);
    v11 = *(_QWORD *)(v10 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
      (*(void (**)(_QWORD *, uint64_t))(v11 + 8))(v8, v10);
  }
  else
  {
    swift_release(*v8);
  }
  v12 = a1 + a2[10];
  if (*(_QWORD *)(v12 + 8) >= 0xAuLL)
    swift_bridgeObjectRelease();
  v13 = v12 + *(int *)(type metadata accessor for Actions.MetricsReportingContext(0) + 20);
  v14 = type metadata accessor for MetricsEvent.Page(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 1, v14))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v15 = v13 + *(int *)(v14 + 24);
    v16 = type metadata accessor for URL(0);
    v17 = *(_QWORD *)(v16 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_9D6278(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  unint64_t v40;
  int *v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  int *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  void (*v62)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v71;
  unsigned int (*v72)(char *, uint64_t, uint64_t);
  char *__dst;
  uint64_t v74;
  uint64_t v75;

  v6 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[7];
  v16 = a3[8];
  v17 = (_QWORD *)(a1 + v15);
  v18 = (_QWORD *)(a2 + v15);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = (uint64_t *)(a1 + v16);
  v21 = (uint64_t *)(a2 + v16);
  swift_retain(v11);
  swift_retain(v14);
  swift_retain(v19);
  v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
  if (swift_getEnumCaseMultiPayload(v21, v22) == 1)
  {
    v23 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v20, v21, v23);
    v24 = 1;
  }
  else
  {
    v25 = *v21;
    *v20 = *v21;
    swift_retain(v25);
    v24 = 0;
  }
  swift_storeEnumTagMultiPayload(v20, v22, v24);
  v26 = a3[9];
  v27 = (uint64_t *)(a1 + v26);
  v28 = (uint64_t *)(a2 + v26);
  v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14CD210);
  if (swift_getEnumCaseMultiPayload(v28, v29) == 1)
  {
    v30 = type metadata accessor for UserInterfaceSizeClass(0);
    v31 = *(_QWORD *)(v30 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v31 + 48))(v28, 1, v30))
    {
      v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E0470);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v31 + 16))(v27, v28, v30);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v27, 0, 1, v30);
    }
    v34 = v27;
    v35 = v29;
    v36 = 1;
  }
  else
  {
    v33 = *v28;
    *v27 = *v28;
    swift_retain(v33);
    v34 = v27;
    v35 = v29;
    v36 = 0;
  }
  swift_storeEnumTagMultiPayload(v34, v35, v36);
  v37 = a3[10];
  v38 = (_QWORD *)(a1 + v37);
  v39 = (_QWORD *)(a2 + v37);
  v40 = *(_QWORD *)(a2 + v37 + 8);
  if (v40 > 9)
  {
    *v38 = *v39;
    v38[1] = v40;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v38 = *(_OWORD *)v39;
  }
  v41 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  v42 = v41[5];
  v43 = (_QWORD *)((char *)v38 + v42);
  v44 = (_QWORD *)((char *)v39 + v42);
  v45 = (int *)type metadata accessor for MetricsEvent.Page(0);
  v46 = *((_QWORD *)v45 - 1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v46 + 48))(v44, 1, v45))
  {
    v47 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE6F0);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
  }
  else
  {
    v74 = v46;
    v75 = a1;
    v48 = v44[1];
    *v43 = *v44;
    v43[1] = v48;
    v49 = v44[3];
    v43[2] = v44[2];
    v43[3] = v49;
    v50 = v45[6];
    __dst = (char *)v43 + v50;
    v51 = (char *)v44 + v50;
    v52 = type metadata accessor for URL(0);
    v71 = *(_QWORD *)(v52 - 8);
    v72 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v72(v51, 1, v52))
    {
      v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AED20);
      memcpy(__dst, v51, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v71 + 16))(__dst, v51, v52);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v71 + 56))(__dst, 0, 1, v52);
    }
    *(_QWORD *)((char *)v43 + v45[7]) = *(_QWORD *)((char *)v44 + v45[7]);
    v54 = v45[8];
    v55 = (_QWORD *)((char *)v43 + v54);
    v56 = (_QWORD *)((char *)v44 + v54);
    v57 = v56[1];
    *v55 = *v56;
    v55[1] = v57;
    *((_BYTE *)v43 + v45[9]) = *((_BYTE *)v44 + v45[9]);
    v58 = v45[10];
    v59 = (_QWORD *)((char *)v43 + v58);
    v60 = (_QWORD *)((char *)v44 + v58);
    v61 = v60[1];
    *v59 = *v60;
    v59[1] = v61;
    v62 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v74 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v62(v43, 0, 1, v45);
    a1 = v75;
  }
  v63 = v41[6];
  v64 = (_QWORD *)((char *)v38 + v63);
  v65 = (_QWORD *)((char *)v39 + v63);
  v66 = v65[1];
  *v64 = *v65;
  v64[1] = v66;
  *(_QWORD *)((char *)v38 + v41[7]) = *(_QWORD *)((char *)v39 + v41[7]);
  *(_QWORD *)((char *)v38 + v41[8]) = *(_QWORD *)((char *)v39 + v41[8]);
  v67 = v41[9];
  v68 = (char *)v38 + v67;
  v69 = (char *)v39 + v67;
  *((_QWORD *)v68 + 2) = *((_QWORD *)v69 + 2);
  *(_OWORD *)v68 = *(_OWORD *)v69;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_9D66A4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  unint64_t v43;
  unint64_t v44;
  int *v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  int *v49;
  uint64_t v50;
  uint64_t (*v51)(_QWORD *, uint64_t, int *);
  int v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t (*v62)(char *, uint64_t, uint64_t);
  int v63;
  size_t v64;
  void *v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  void (*v72)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v73;
  _QWORD *v74;
  _QWORD *v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  _QWORD *v80;
  _QWORD *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  unsigned int (*__src)(char *, uint64_t, uint64_t);
  char *__dst;
  void *__dsta;
  uint64_t v92;

  v6 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v10 = v9[1];
  v11 = v8[1];
  v8[1] = v10;
  swift_retain(v10);
  swift_release(v11);
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  *v13 = *v14;
  v15 = v14[1];
  v16 = v13[1];
  v13[1] = v15;
  swift_retain(v15);
  swift_release(v16);
  v17 = a3[7];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  *v18 = *v19;
  v20 = v19[1];
  v21 = v18[1];
  v18[1] = v20;
  swift_retain(v20);
  swift_release(v21);
  if (a1 != a2)
  {
    v22 = a3[8];
    v23 = (uint64_t *)(a1 + v22);
    v24 = (uint64_t *)(a2 + v22);
    sub_56024(a1 + v22, (uint64_t *)&unk_14C8730);
    v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
    if (swift_getEnumCaseMultiPayload(v24, v25) == 1)
    {
      v26 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v23, v24, v26);
      v27 = 1;
    }
    else
    {
      v28 = *v24;
      *v23 = *v24;
      swift_retain(v28);
      v27 = 0;
    }
    swift_storeEnumTagMultiPayload(v23, v25, v27);
    v29 = a3[9];
    v30 = (uint64_t *)(a1 + v29);
    v31 = (uint64_t *)(a2 + v29);
    sub_56024(a1 + v29, (uint64_t *)&unk_14CD210);
    v32 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14CD210);
    if (swift_getEnumCaseMultiPayload(v31, v32) == 1)
    {
      v33 = type metadata accessor for UserInterfaceSizeClass(0);
      v34 = *(_QWORD *)(v33 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v34 + 48))(v31, 1, v33))
      {
        v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E0470);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v34 + 16))(v30, v31, v33);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v30, 0, 1, v33);
      }
      v37 = v30;
      v38 = v32;
      v39 = 1;
    }
    else
    {
      v36 = *v31;
      *v30 = *v31;
      swift_retain(v36);
      v37 = v30;
      v38 = v32;
      v39 = 0;
    }
    swift_storeEnumTagMultiPayload(v37, v38, v39);
  }
  v40 = a3[10];
  v41 = (_QWORD *)(a1 + v40);
  v42 = (_QWORD *)(a2 + v40);
  v43 = *(_QWORD *)(a1 + v40 + 8);
  v44 = v42[1];
  if (v43 == 9)
  {
    if (v44 >= 0xA)
      goto LABEL_27;
    goto LABEL_17;
  }
  if (v44 == 9)
  {
    sub_9D6DE4((uint64_t)v41);
    goto LABEL_17;
  }
  if (v43 < 9)
  {
    if (v44 >= 9)
    {
LABEL_27:
      *v41 = *v42;
      v41[1] = v42[1];
      swift_bridgeObjectRetain();
      goto LABEL_18;
    }
LABEL_17:
    *(_OWORD *)v41 = *(_OWORD *)v42;
    goto LABEL_18;
  }
  if (v44 < 9)
  {
    sub_56024((uint64_t)v41, &qword_14EDF50);
    goto LABEL_17;
  }
  *v41 = *v42;
  v41[1] = v42[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_18:
  v45 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  v46 = v45[5];
  v47 = (_QWORD *)((char *)v41 + v46);
  v48 = (_QWORD *)((char *)v42 + v46);
  v49 = (int *)type metadata accessor for MetricsEvent.Page(0);
  v50 = *((_QWORD *)v49 - 1);
  v51 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v50 + 48);
  v52 = v51(v47, 1, v49);
  v53 = v51(v48, 1, v49);
  if (!v52)
  {
    if (v53)
    {
      sub_5C0DC((uint64_t)v47, type metadata accessor for MetricsEvent.Page);
      goto LABEL_24;
    }
    v92 = a1;
    *v47 = *v48;
    v47[1] = v48[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v47[2] = v48[2];
    v47[3] = v48[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v58 = v49[6];
    v59 = (char *)v47 + v58;
    v60 = (char *)v48 + v58;
    v61 = type metadata accessor for URL(0);
    v88 = *(_QWORD *)(v61 - 8);
    v62 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v88 + 48);
    __dsta = v59;
    LODWORD(v59) = v62(v59, 1, v61);
    v63 = v62(v60, 1, v61);
    if ((_DWORD)v59)
    {
      if (!v63)
      {
        (*(void (**)(void *, char *, uint64_t))(v88 + 16))(__dsta, v60, v61);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v88 + 56))(__dsta, 0, 1, v61);
        goto LABEL_41;
      }
      v64 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14AED20) - 8) + 64);
      v65 = __dsta;
    }
    else
    {
      if (!v63)
      {
        (*(void (**)(void *, char *, uint64_t))(v88 + 24))(__dsta, v60, v61);
        goto LABEL_41;
      }
      (*(void (**)(void *, uint64_t))(v88 + 8))(__dsta, v61);
      v64 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14AED20) - 8) + 64);
      v65 = __dsta;
    }
    memcpy(v65, v60, v64);
LABEL_41:
    a1 = v92;
    *(_QWORD *)((char *)v47 + v49[7]) = *(_QWORD *)((char *)v48 + v49[7]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v73 = v49[8];
    v74 = (_QWORD *)((char *)v47 + v73);
    v75 = (_QWORD *)((char *)v48 + v73);
    *v74 = *v75;
    v74[1] = v75[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((_BYTE *)v47 + v49[9]) = *((_BYTE *)v48 + v49[9]);
    v76 = v49[10];
    v77 = (_QWORD *)((char *)v47 + v76);
    v78 = (_QWORD *)((char *)v48 + v76);
    *v77 = *v78;
    v77[1] = v78[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    goto LABEL_42;
  }
  if (v53)
  {
LABEL_24:
    v57 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE6F0);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    goto LABEL_42;
  }
  *v47 = *v48;
  v47[1] = v48[1];
  v47[2] = v48[2];
  v47[3] = v48[3];
  v54 = v49[6];
  __dst = (char *)v47 + v54;
  v87 = (char *)v48 + v54;
  v55 = type metadata accessor for URL(0);
  v86 = *(_QWORD *)(v55 - 8);
  __src = *(unsigned int (**)(char *, uint64_t, uint64_t))(v86 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__src(v87, 1, v55))
  {
    v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AED20);
    memcpy(__dst, v87, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v86 + 16))(__dst, v87, v55);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v86 + 56))(__dst, 0, 1, v55);
  }
  *(_QWORD *)((char *)v47 + v49[7]) = *(_QWORD *)((char *)v48 + v49[7]);
  v66 = v49[8];
  v67 = (_QWORD *)((char *)v47 + v66);
  v68 = (_QWORD *)((char *)v48 + v66);
  *v67 = *v68;
  v67[1] = v68[1];
  *((_BYTE *)v47 + v49[9]) = *((_BYTE *)v48 + v49[9]);
  v69 = v49[10];
  v70 = (_QWORD *)((char *)v47 + v69);
  v71 = (_QWORD *)((char *)v48 + v69);
  *v70 = *v71;
  v70[1] = v71[1];
  v72 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v50 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v72(v47, 0, 1, v49);
LABEL_42:
  v79 = v45[6];
  v80 = (_QWORD *)((char *)v41 + v79);
  v81 = (_QWORD *)((char *)v42 + v79);
  *v80 = *v81;
  v80[1] = v81[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v41 + v45[7]) = *(_QWORD *)((char *)v42 + v45[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v41 + v45[8]) = *(_QWORD *)((char *)v42 + v45[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v82 = v45[9];
  v83 = (char *)v41 + v82;
  v84 = (char *)v42 + v82;
  *v83 = *v84;
  *((_QWORD *)v83 + 1) = *((_QWORD *)v84 + 1);
  *((_QWORD *)v83 + 2) = *((_QWORD *)v84 + 2);
  return a1;
}

uint64_t sub_9D6DE4(uint64_t a1)
{
  destroy for MetricsEvent.Click.ActionContext(a1);
  return a1;
}

uint64_t sub_9D6E18(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  _OWORD *v25;
  _OWORD *v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  char *v41;

  v6 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v12 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload(v9, v11, 1);
  }
  else
  {
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  v13 = a3[9];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14CD210);
  if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
  {
    v17 = type metadata accessor for UserInterfaceSizeClass(0);
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v15, 1, v17))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E0470);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v18 + 32))(v14, v15, v17);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v14, 0, 1, v17);
    }
    swift_storeEnumTagMultiPayload(v14, v16, 1);
  }
  else
  {
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  v20 = a3[10];
  v21 = a1 + v20;
  v22 = a2 + v20;
  *(_OWORD *)(a1 + v20) = *(_OWORD *)(a2 + v20);
  v23 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  v24 = v23[5];
  v25 = (_OWORD *)(v21 + v24);
  v26 = (_OWORD *)(v22 + v24);
  v27 = (int *)type metadata accessor for MetricsEvent.Page(0);
  v28 = *((_QWORD *)v27 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v28 + 48))(v26, 1, v27))
  {
    v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE6F0);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    v40 = v28;
    v30 = v26[1];
    *v25 = *v26;
    v25[1] = v30;
    v31 = v27[6];
    v41 = (char *)v25 + v31;
    v32 = (char *)v26 + v31;
    v33 = type metadata accessor for URL(0);
    v34 = *(_QWORD *)(v33 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
    {
      v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AED20);
      memcpy(v41, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v41, v32, v33);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v41, 0, 1, v33);
    }
    *(_QWORD *)((char *)v25 + v27[7]) = *(_QWORD *)((char *)v26 + v27[7]);
    *(_OWORD *)((char *)v25 + v27[8]) = *(_OWORD *)((char *)v26 + v27[8]);
    *((_BYTE *)v25 + v27[9]) = *((_BYTE *)v26 + v27[9]);
    *(_OWORD *)((char *)v25 + v27[10]) = *(_OWORD *)((char *)v26 + v27[10]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v40 + 56))(v25, 0, 1, v27);
  }
  *(_OWORD *)(v21 + v23[6]) = *(_OWORD *)(v22 + v23[6]);
  *(_QWORD *)(v21 + v23[7]) = *(_QWORD *)(v22 + v23[7]);
  *(_QWORD *)(v21 + v23[8]) = *(_QWORD *)(v22 + v23[8]);
  v36 = v23[9];
  v37 = v21 + v36;
  v38 = v22 + v36;
  *(_OWORD *)v37 = *(_OWORD *)v38;
  *(_QWORD *)(v37 + 16) = *(_QWORD *)(v38 + 16);
  return a1;
}

uint64_t sub_9D7184(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  const void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  const void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _OWORD *v39;
  unint64_t v40;
  unint64_t v41;
  int *v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  int *v46;
  uint64_t v47;
  uint64_t (*v48)(_QWORD *, uint64_t, int *);
  int v49;
  int v50;
  __int128 v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t (*v62)(char *, uint64_t, uint64_t);
  int v63;
  size_t v64;
  void *v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  char *__src;
  char *__srca;

  v6 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  v12 = v8[1];
  *v8 = v11;
  v8[1] = v10;
  swift_release(v12);
  v13 = a3[6];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  v18 = v14[1];
  *v14 = v17;
  v14[1] = v16;
  swift_release(v18);
  v19 = a3[7];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (uint64_t *)(a2 + v19);
  v23 = *v21;
  v22 = v21[1];
  v24 = v20[1];
  *v20 = v23;
  v20[1] = v22;
  swift_release(v24);
  if (a1 != a2)
  {
    v25 = a3[8];
    v26 = (void *)(a1 + v25);
    v27 = (const void *)(a2 + v25);
    sub_56024(a1 + v25, (uint64_t *)&unk_14C8730);
    v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
    if (swift_getEnumCaseMultiPayload(v27, v28) == 1)
    {
      v29 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v26, v27, v29);
      swift_storeEnumTagMultiPayload(v26, v28, 1);
    }
    else
    {
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    v30 = a3[9];
    v31 = (void *)(a1 + v30);
    v32 = (const void *)(a2 + v30);
    sub_56024(a1 + v30, (uint64_t *)&unk_14CD210);
    v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14CD210);
    if (swift_getEnumCaseMultiPayload(v32, v33) == 1)
    {
      v34 = type metadata accessor for UserInterfaceSizeClass(0);
      v35 = *(_QWORD *)(v34 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v35 + 48))(v32, 1, v34))
      {
        v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E0470);
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v35 + 32))(v31, v32, v34);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v31, 0, 1, v34);
      }
      swift_storeEnumTagMultiPayload(v31, v33, 1);
    }
    else
    {
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
  }
  v37 = a3[10];
  v38 = a1 + v37;
  v39 = (_OWORD *)(a2 + v37);
  v40 = *(_QWORD *)(a1 + v37 + 8);
  v41 = *(_QWORD *)(a2 + v37 + 8);
  if (v40 == 9)
    goto LABEL_17;
  if (v41 == 9)
  {
    sub_9D6DE4(v38);
LABEL_17:
    *(_OWORD *)v38 = *v39;
    goto LABEL_18;
  }
  if (v40 < 9)
    goto LABEL_17;
  if (v41 < 9)
  {
    sub_56024(v38, &qword_14EDF50);
    goto LABEL_17;
  }
  *(_QWORD *)v38 = *(_QWORD *)v39;
  *(_QWORD *)(v38 + 8) = v41;
  swift_bridgeObjectRelease();
LABEL_18:
  v42 = (int *)type metadata accessor for Actions.MetricsReportingContext(0);
  v43 = v42[5];
  v44 = (_QWORD *)(v38 + v43);
  v45 = (_QWORD *)((char *)v39 + v43);
  v46 = (int *)type metadata accessor for MetricsEvent.Page(0);
  v47 = *((_QWORD *)v46 - 1);
  v48 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v47 + 48);
  v49 = v48(v44, 1, v46);
  v50 = v48(v45, 1, v46);
  if (!v49)
  {
    if (v50)
    {
      sub_5C0DC((uint64_t)v44, type metadata accessor for MetricsEvent.Page);
      goto LABEL_24;
    }
    v57 = v45[1];
    *v44 = *v45;
    v44[1] = v57;
    swift_bridgeObjectRelease();
    v58 = v45[3];
    v44[2] = v45[2];
    v44[3] = v58;
    swift_bridgeObjectRelease();
    v59 = v46[6];
    v60 = (char *)v44 + v59;
    __srca = (char *)v45 + v59;
    v61 = type metadata accessor for URL(0);
    v86 = *(_QWORD *)(v61 - 8);
    v87 = v60;
    v62 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v86 + 48);
    LODWORD(v60) = v62(v60, 1, v61);
    v63 = v62(__srca, 1, v61);
    if ((_DWORD)v60)
    {
      if (!v63)
      {
        (*(void (**)(void *, char *, uint64_t))(v86 + 32))(v87, __srca, v61);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v87, 0, 1, v61);
        goto LABEL_36;
      }
      v64 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14AED20) - 8) + 64);
      v65 = v87;
    }
    else
    {
      if (!v63)
      {
        (*(void (**)(void *, char *, uint64_t))(v86 + 40))(v87, __srca, v61);
        goto LABEL_36;
      }
      (*(void (**)(void *, uint64_t))(v86 + 8))(v87, v61);
      v64 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14AED20) - 8) + 64);
      v65 = v87;
    }
    memcpy(v65, __srca, v64);
LABEL_36:
    *(_QWORD *)((char *)v44 + v46[7]) = *(_QWORD *)((char *)v45 + v46[7]);
    swift_bridgeObjectRelease();
    v66 = v46[8];
    v67 = (_QWORD *)((char *)v44 + v66);
    v68 = (_QWORD *)((char *)v45 + v66);
    v70 = *v68;
    v69 = v68[1];
    *v67 = v70;
    v67[1] = v69;
    swift_bridgeObjectRelease();
    *((_BYTE *)v44 + v46[9]) = *((_BYTE *)v45 + v46[9]);
    v71 = v46[10];
    v72 = (_QWORD *)((char *)v44 + v71);
    v73 = (_QWORD *)((char *)v45 + v71);
    v75 = *v73;
    v74 = v73[1];
    *v72 = v75;
    v72[1] = v74;
    swift_bridgeObjectRelease();
    goto LABEL_37;
  }
  if (v50)
  {
LABEL_24:
    v56 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE6F0);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    goto LABEL_37;
  }
  v51 = *((_OWORD *)v45 + 1);
  *(_OWORD *)v44 = *(_OWORD *)v45;
  *((_OWORD *)v44 + 1) = v51;
  v52 = v46[6];
  __src = (char *)v44 + v52;
  v53 = (char *)v45 + v52;
  v54 = type metadata accessor for URL(0);
  v85 = *(_QWORD *)(v54 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v85 + 48))(v53, 1, v54))
  {
    v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AED20);
    memcpy(__src, v53, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v85 + 32))(__src, v53, v54);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(__src, 0, 1, v54);
  }
  *(_QWORD *)((char *)v44 + v46[7]) = *(_QWORD *)((char *)v45 + v46[7]);
  *(_OWORD *)((char *)v44 + v46[8]) = *(_OWORD *)((char *)v45 + v46[8]);
  *((_BYTE *)v44 + v46[9]) = *((_BYTE *)v45 + v46[9]);
  *(_OWORD *)((char *)v44 + v46[10]) = *(_OWORD *)((char *)v45 + v46[10]);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v47 + 56))(v44, 0, 1, v46);
LABEL_37:
  v76 = v42[6];
  v77 = (_QWORD *)(v38 + v76);
  v78 = (uint64_t *)((char *)v39 + v76);
  v80 = *v78;
  v79 = v78[1];
  *v77 = v80;
  v77[1] = v79;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v38 + v42[7]) = *(_QWORD *)((char *)v39 + v42[7]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v38 + v42[8]) = *(_QWORD *)((char *)v39 + v42[8]);
  swift_bridgeObjectRelease();
  v81 = v42[9];
  v82 = v38 + v81;
  v83 = (char *)v39 + v81;
  *(_BYTE *)v82 = *v83;
  *(_OWORD *)(v82 + 8) = *(_OWORD *)(v83 + 8);
  return a1;
}

uint64_t sub_9D7760(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_9D776C);
}

uint64_t sub_9D776C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = type metadata accessor for Song(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E4F30);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
    {
      v8 = v13;
      v15 = a3[8];
    }
    else
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_14CFB20);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
      {
        v8 = v16;
        v15 = a3[9];
      }
      else
      {
        v8 = type metadata accessor for Actions.MetricsReportingContext(0);
        v14 = *(_QWORD *)(v8 - 8);
        v15 = a3[10];
      }
    }
    v10 = a1 + v15;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + a3[5] + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_9D7868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_9D7874);
}

uint64_t sub_9D7874(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  result = type metadata accessor for Song(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[5] + 8) = (a2 - 1);
      return result;
    }
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E4F30);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[8];
    }
    else
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_14CFB20);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[9];
      }
      else
      {
        v10 = type metadata accessor for Actions.MetricsReportingContext(0);
        v14 = *(_QWORD *)(v10 - 8);
        v15 = a4[10];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_9D796C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[7];

  v2 = type metadata accessor for Song(319);
  if (v3 <= 0x3F)
  {
    v10[0] = *(_QWORD *)(v2 - 8) + 64;
    v10[1] = &unk_108F1C0;
    v10[2] = &unk_108F1C0;
    v10[3] = &unk_108F1C0;
    sub_184AE8(319);
    if (v5 <= 0x3F)
    {
      v10[4] = *(_QWORD *)(v4 - 8) + 64;
      sub_2CBE40(319);
      if (v7 <= 0x3F)
      {
        v10[5] = *(_QWORD *)(v6 - 8) + 64;
        v8 = type metadata accessor for Actions.MetricsReportingContext(319);
        if (v9 <= 0x3F)
        {
          v10[6] = *(_QWORD *)(v8 - 8) + 64;
          swift_initStructMetadata(a1, 256, 7, v10, a1 + 16);
        }
      }
    }
  }
}

uint64_t sub_9D7A34()
{
  return sub_5C150(&qword_14EE000, &qword_14EE008, (uint64_t)&protocol conformance descriptor for VStack<A>);
}

uint64_t sub_9D7A60()
{
  return sub_184F98(&qword_14EE010, &qword_14EDDD8, (void (*)(void))sub_9D7A94);
}

unint64_t sub_9D7A94()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14EE018;
  if (!qword_14EE018)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EDDC8);
    sub_5C150(&qword_14EE020, &qword_14EDDC0, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14EE018);
  }
  return result;
}

uint64_t sub_9D7B18(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_11FF198, 1);
}

uint64_t sub_9D7B28(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_11FF170, 1);
}

uint64_t type metadata accessor for TaggedViewResolver(uint64_t a1)
{
  return sub_6345C(a1, qword_14EE2C8, (uint64_t)&nominal type descriptor for TaggedViewResolver);
}

uint64_t sub_9D7B50()
{
  return sub_9D59B4((void (*)(_QWORD))type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell, (uint64_t (*)(void))sub_9C8A84);
}

double sub_9D7B64(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unsigned int (*v17)(uint64_t, uint64_t, uint64_t);
  double result;
  uint64_t v19;
  char v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;

  v2 = type metadata accessor for UserInterfaceSizeClass(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14BC660);
  __chkstk_darwin(v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E0470);
  __chkstk_darwin(v9);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v22 - v14;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v3 + 104))((char *)&v22 - v14, enum case for UserInterfaceSizeClass.compact(_:), v2, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v15, 0, 1, v2);
  v16 = (uint64_t)&v8[*(int *)(v6 + 48)];
  sub_5C238(a1, (uint64_t)v8, &qword_14E0470);
  sub_5C238((uint64_t)v15, v16, &qword_14E0470);
  v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (v17((uint64_t)v8, 1, v2) == 1)
  {
    sub_56024((uint64_t)v15, &qword_14E0470);
    if (v17(v16, 1, v2) == 1)
    {
      sub_56024((uint64_t)v8, &qword_14E0470);
      return 10.0;
    }
  }
  else
  {
    sub_5C238((uint64_t)v8, (uint64_t)v11, &qword_14E0470);
    if (v17(v16, 1, v2) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v5, v16, v2);
      v19 = sub_4DD24(&qword_14CFE60, (uint64_t (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass, (uint64_t)&protocol conformance descriptor for UserInterfaceSizeClass);
      v20 = dispatch thunk of static Equatable.== infix(_:_:)(v11, v5, v2, v19);
      v21 = *(void (**)(char *, uint64_t))(v3 + 8);
      v21(v5, v2);
      sub_56024((uint64_t)v15, &qword_14E0470);
      v21(v11, v2);
      sub_56024((uint64_t)v8, &qword_14E0470);
      result = 10.0;
      if ((v20 & 1) != 0)
        return result;
      return 16.0;
    }
    sub_56024((uint64_t)v15, &qword_14E0470);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v11, v2);
  }
  sub_56024((uint64_t)v8, &qword_14BC660);
  return 16.0;
}

unint64_t sub_9D7E18()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14EE0C0;
  if (!qword_14EE0C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EE0A8);
    sub_184F98(&qword_14EE0C8, &qword_14EE0A0, (void (*)(void))sub_9D7EBC);
    sub_5C150(&qword_14EDE88, &qword_14EDE90, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14EE0C0);
  }
  return result;
}

unint64_t sub_9D7EBC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14EE0D0;
  if (!qword_14EE0D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EE098);
    sub_5C150(&qword_14EDE78, &qword_14EDE80, (uint64_t)&protocol conformance descriptor for Button<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14EE0D0);
  }
  return result;
}

unint64_t sub_9D7F40()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14EE0D8;
  if (!qword_14EE0D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EE0B0);
    sub_9D7E18();
    sub_4DD24((unint64_t *)&qword_14C07D0, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14EE0D8);
  }
  return result;
}

uint64_t objectdestroy_70Tm()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v1 = (int *)type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  v7 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v0 + v4, v7);
  swift_release(*(_QWORD *)(v0 + v4 + v1[5] + 8));
  swift_release(*(_QWORD *)(v0 + v4 + v1[6] + 8));
  swift_release(*(_QWORD *)(v0 + v4 + v1[7] + 8));
  v8 = (_QWORD *)(v0 + v4 + v1[8]);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8, v10);
  }
  else
  {
    swift_release(*v8);
  }
  v11 = (_QWORD *)(v6 + v1[9]);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14CD210);
  if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
  {
    v13 = type metadata accessor for UserInterfaceSizeClass(0);
    v14 = *(_QWORD *)(v13 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13))
      (*(void (**)(_QWORD *, uint64_t))(v14 + 8))(v11, v13);
  }
  else
  {
    swift_release(*v11);
  }
  v15 = v6 + v1[10];
  if (*(_QWORD *)(v15 + 8) >= 0xAuLL)
    swift_bridgeObjectRelease();
  v16 = v15 + *(int *)(type metadata accessor for Actions.MetricsReportingContext(0) + 20);
  v17 = type metadata accessor for MetricsEvent.Page(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v16, 1, v17))
  {
    v22 = v5;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v18 = v16 + *(int *)(v17 + 24);
    v19 = type metadata accessor for URL(0);
    v20 = *(_QWORD *)(v19 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 = v22;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_9D8248()
{
  return sub_9D59B4((void (*)(_QWORD))type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell, (uint64_t (*)(void))sub_9CB85C);
}

uint64_t sub_9D825C()
{
  return sub_184F98(&qword_14EE0F0, &qword_14EE060, (void (*)(void))sub_9D8280);
}

unint64_t sub_9D8280()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14EE0F8;
  if (!qword_14EE0F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EE058);
    sub_5C150(&qword_14EE100, &qword_14EE050, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14EE0F8);
  }
  return result;
}

unint64_t sub_9D8304()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  uint64_t v5;

  result = qword_14EE108;
  if (!qword_14EE108)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EE080);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EE070);
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EE068);
    v5 = sub_184F98(&qword_14EE0E8, &qword_14EE068, (void (*)(void))sub_9D825C);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>, 1);
    v4 = v2;
    v5 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    sub_4DD24((unint64_t *)&qword_14C07D0, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14EE108);
  }
  return result;
}

unint64_t sub_9D8400()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14EE110;
  if (!qword_14EE110)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EE088);
    sub_9D8304();
    sub_4DD24((unint64_t *)&qword_14C07D0, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, &qword_14EE110);
  }
  return result;
}

uint64_t sub_9D848C()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v1 = (int *)type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v6 = v0 + v4;
  v7 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v0 + v4, v7);
  swift_release(*(_QWORD *)(v0 + v4 + v1[5] + 8));
  swift_release(*(_QWORD *)(v0 + v4 + v1[6] + 8));
  swift_release(*(_QWORD *)(v0 + v4 + v1[7] + 8));
  v8 = (_QWORD *)(v0 + v4 + v1[8]);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8, v10);
  }
  else
  {
    swift_release(*v8);
  }
  v11 = (_QWORD *)(v6 + v1[9]);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14CD210);
  if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
  {
    v13 = type metadata accessor for UserInterfaceSizeClass(0);
    v14 = *(_QWORD *)(v13 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13))
      (*(void (**)(_QWORD *, uint64_t))(v14 + 8))(v11, v13);
  }
  else
  {
    swift_release(*v11);
  }
  v15 = v6 + v1[10];
  if (*(_QWORD *)(v15 + 8) >= 0xAuLL)
    swift_bridgeObjectRelease();
  v16 = v15 + *(int *)(type metadata accessor for Actions.MetricsReportingContext(0) + 20);
  v17 = type metadata accessor for MetricsEvent.Page(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v16, 1, v17))
  {
    v22 = v5;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v18 = v16 + *(int *)(v17 + 24);
    v19 = type metadata accessor for URL(0);
    v20 = *(_QWORD *)(v19 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 = v22;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_9D8714(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell(0) - 8)
                          + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v1 + ((v4 + 32) & ~v4);
  v8 = (_QWORD *)swift_task_alloc(dword_14EE11C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_C3150;
  return sub_9CC1AC(a1, v5, v6, v7);
}

uint64_t sub_9D8798@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_9CB590(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

double sub_9D87A4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell(0) - 8)
                          + 80);
  return sub_9CB6A0(v0 + ((v1 + 16) & ~v1));
}

unint64_t sub_9D87D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14EE160;
  if (!qword_14EE160)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EE148);
    sub_9D8854();
    sub_5C150(&qword_14EE1C0, &qword_14EE158, (uint64_t)&protocol conformance descriptor for _ContentShapeKindModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14EE160);
  }
  return result;
}

unint64_t sub_9D8854()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14EE168;
  if (!qword_14EE168)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EE140);
    sub_9D88D8();
    sub_5C150(&qword_14EE1C0, &qword_14EE158, (uint64_t)&protocol conformance descriptor for _ContentShapeKindModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14EE168);
  }
  return result;
}

unint64_t sub_9D88D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14EE170;
  if (!qword_14EE170)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EE138);
    sub_9D8974(&qword_14EE178, &qword_14EE130, (void (*)(void))sub_9D89D8);
    sub_5C150(&qword_14AF248, &qword_14AF250, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14EE170);
  }
  return result;
}

uint64_t sub_9D8974(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_9D89D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14EE180;
  if (!qword_14EE180)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EE188);
    sub_9D8A5C();
    sub_5C150(&qword_14EE1B0, &qword_14EE1B8, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14EE180);
  }
  return result;
}

unint64_t sub_9D8A5C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14EE190;
  if (!qword_14EE190)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EE198);
    sub_5C150(&qword_14EE1A0, &qword_14EE1A8, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14EE190);
  }
  return result;
}

uint64_t sub_9D8AE0()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v23;

  v1 = (int *)type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v6 = v0 + v4;
  v7 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v0 + v4, v7);
  swift_release(*(_QWORD *)(v0 + v4 + v1[5] + 8));
  swift_release(*(_QWORD *)(v0 + v4 + v1[6] + 8));
  swift_release(*(_QWORD *)(v0 + v4 + v1[7] + 8));
  v8 = (_QWORD *)(v0 + v4 + v1[8]);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8, v10);
  }
  else
  {
    swift_release(*v8);
  }
  v11 = (_QWORD *)(v6 + v1[9]);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14CD210);
  if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
  {
    v13 = type metadata accessor for UserInterfaceSizeClass(0);
    v14 = *(_QWORD *)(v13 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13))
      (*(void (**)(_QWORD *, uint64_t))(v14 + 8))(v11, v13);
  }
  else
  {
    swift_release(*v11);
  }
  v15 = v6 + v1[10];
  if (*(_QWORD *)(v15 + 8) >= 0xAuLL)
    swift_bridgeObjectRelease();
  v16 = v15 + *(int *)(type metadata accessor for Actions.MetricsReportingContext(0) + 20);
  v17 = type metadata accessor for MetricsEvent.Page(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v16, 1, v17))
  {
    v23 = v5;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v18 = v16 + *(int *)(v17 + 24);
    v19 = type metadata accessor for URL(0);
    v20 = *(_QWORD *)(v19 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 = v23;
  }
  v21 = (v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release(*(_QWORD *)(v0 + v21));
  return swift_deallocObject(v0, v21 + 8, v3 | 7);
}

uint64_t sub_9D8D7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(type metadata accessor for PlaylistSongSuggestionsView.SuggestedSongCell(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc(dword_14EE1DC);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_50F8C;
  return sub_9CBE4C(a1, v6, v7, v8, v9);
}

uint64_t sub_9D8E20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for Song(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

unint64_t sub_9D8EB0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for Song(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_9C2B84(*(_QWORD *)(v0 + 16), v0 + v2, *(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_9D8EF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = type metadata accessor for Song(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  swift_release(*(_QWORD *)(v0 + v7));
  return swift_deallocObject(v0, v7 + 8, v5);
}

uint64_t sub_9D8F80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v2 = *(_QWORD *)(type metadata accessor for Song(0) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = v0 + v3;
  v6 = *(_QWORD *)(v0 + v4);
  v7 = *(_QWORD *)(v0 + ((v4 + 15) & 0xFFFFFFFFFFFFF8));
  v8 = (_QWORD *)swift_task_alloc(dword_14EE1F4);
  *(_QWORD *)(v1 + 16) = v8;
  *v8 = v1;
  v8[1] = sub_C3150;
  return sub_9C2CB4(v5, v6, v7);
}

uint64_t type metadata accessor for PlaylistSongSuggestionsView.VerticalText(uint64_t a1)
{
  return sub_6345C(a1, qword_14EE3F8, (uint64_t)&nominal type descriptor for PlaylistSongSuggestionsView.VerticalText);
}

uint64_t type metadata accessor for PlaylistSongSuggestionsView.PreviewArtwork(uint64_t a1)
{
  return sub_6345C(a1, qword_14EE488, (uint64_t)&nominal type descriptor for PlaylistSongSuggestionsView.PreviewArtwork);
}

uint64_t type metadata accessor for PlaylistSongSuggestionsView.HorizontalText(uint64_t a1)
{
  return sub_6345C(a1, qword_14EE358, (uint64_t)&nominal type descriptor for PlaylistSongSuggestionsView.HorizontalText);
}

uint64_t sub_9D9050(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  void (*v31)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v5 = type metadata accessor for DynamicTypeSize(0);
  v35 = *(_QWORD *)(v5 - 8);
  v36 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UserInterfaceSizeClass(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_14BC660);
  __chkstk_darwin(v12);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E0470);
  __chkstk_darwin(v15);
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v18);
  v21 = (char *)&v33 - v20;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v9 + 104))((char *)&v33 - v20, enum case for UserInterfaceSizeClass.compact(_:), v8, v19);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v21, 0, 1, v8);
  v22 = (uint64_t)&v14[*(int *)(v12 + 48)];
  sub_5C238(a1, (uint64_t)v14, &qword_14E0470);
  sub_5C238((uint64_t)v21, v22, &qword_14E0470);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v23((uint64_t)v14, 1, v8) == 1)
  {
    sub_56024((uint64_t)v21, &qword_14E0470);
    if (v23(v22, 1, v8) == 1)
    {
      sub_56024((uint64_t)v14, &qword_14E0470);
      v24 = v36;
LABEL_12:
      v26 = v35;
      (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v7, v34, v24);
LABEL_13:
      v28 = 1;
      goto LABEL_14;
    }
    goto LABEL_6;
  }
  sub_5C238((uint64_t)v14, (uint64_t)v17, &qword_14E0470);
  if (v23(v22, 1, v8) == 1)
  {
    sub_56024((uint64_t)v21, &qword_14E0470);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v17, v8);
LABEL_6:
    sub_56024((uint64_t)v14, &qword_14BC660);
    v24 = v36;
    goto LABEL_7;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 32))(v11, v22, v8);
  v29 = sub_4DD24(&qword_14CFE60, (uint64_t (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass, (uint64_t)&protocol conformance descriptor for UserInterfaceSizeClass);
  v30 = dispatch thunk of static Equatable.== infix(_:_:)(v17, v11, v8, v29);
  v31 = *(void (**)(char *, uint64_t))(v9 + 8);
  v31(v11, v8);
  sub_56024((uint64_t)v21, &qword_14E0470);
  v31(v17, v8);
  sub_56024((uint64_t)v14, &qword_14E0470);
  v24 = v36;
  if ((v30 & 1) != 0)
    goto LABEL_12;
LABEL_7:
  if (qword_14ABE70 != -1)
    swift_once(&qword_14ABE70, sub_9D08B8);
  v25 = *(double *)&qword_1581638;
  v26 = v35;
  v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 16))(v7, v34, v24);
  if (v25 > a3)
    goto LABEL_13;
  v28 = DynamicTypeSize.isAccessibilitySize.getter(v27);
LABEL_14:
  (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v24);
  return v28 & 1;
}

uint64_t *sub_9D93D4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = type metadata accessor for Song(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
  }
  swift_retain(v11);
  return a1;
}

uint64_t sub_9D9464(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return swift_release(*(_QWORD *)(a1 + *(int *)(a2 + 20) + 8));
}

uint64_t sub_9D94AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_retain(v10);
  return a1;
}

uint64_t sub_9D9514(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  v11 = v8[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_retain(v10);
  swift_release(v11);
  return a1;
}

uint64_t sub_9D9588(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_9D95E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(_QWORD *)(a1 + v7 + 8);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  swift_release(v8);
  return a1;
}

uint64_t sub_9D964C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_9D9658);
}

uint64_t __swift_get_extra_inhabitant_index_63Tm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for Song(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_9D96D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_9D96E4);
}

uint64_t __swift_store_extra_inhabitant_index_64Tm(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Song(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_9D9760(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for Song(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for () + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t *sub_9D97D4(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v22);
  }
  else
  {
    v7 = type metadata accessor for Song(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (char *)a1 + v9;
    v14 = (char *)a2 + v9;
    *(_OWORD *)v13 = *(_OWORD *)v14;
    v15 = *((_QWORD *)v14 + 2);
    *((_QWORD *)v13 + 2) = v15;
    v16 = a3[7];
    v17 = (uint64_t *)((char *)a1 + v16);
    v18 = (uint64_t *)((char *)a2 + v16);
    swift_retain(v12);
    swift_retain(v15);
    v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
    if (swift_getEnumCaseMultiPayload(v18, v19) == 1)
    {
      v20 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v17, v18, v20);
      v21 = 1;
    }
    else
    {
      v23 = *v18;
      *v17 = *v18;
      swift_retain(v23);
      v21 = 0;
    }
    swift_storeEnumTagMultiPayload(v17, v19, v21);
    v24 = a3[8];
    v25 = (uint64_t *)((char *)a1 + v24);
    v26 = (uint64_t *)((char *)a2 + v24);
    v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14CD210);
    if (swift_getEnumCaseMultiPayload(v26, v27) == 1)
    {
      v28 = type metadata accessor for UserInterfaceSizeClass(0);
      v29 = *(_QWORD *)(v28 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v29 + 48))(v26, 1, v28))
      {
        v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E0470);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v29 + 16))(v25, v26, v28);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v25, 0, 1, v28);
      }
      v32 = v25;
      v33 = v27;
      v34 = 1;
    }
    else
    {
      v31 = *v26;
      *v25 = *v26;
      swift_retain(v31);
      v32 = v25;
      v33 = v27;
      v34 = 0;
    }
    swift_storeEnumTagMultiPayload(v32, v33, v34);
  }
  return a1;
}

void sub_9D99D8(uint64_t a1, int *a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_release(*(_QWORD *)(a1 + a2[5] + 8));
  swift_release(*(_QWORD *)(a1 + a2[6] + 16));
  v5 = (_QWORD *)(a1 + a2[7]);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
  if (swift_getEnumCaseMultiPayload(v5, v6) == 1)
  {
    v7 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
  }
  else
  {
    swift_release(*v5);
  }
  v8 = (_QWORD *)(a1 + a2[8]);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14CD210);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for UserInterfaceSizeClass(0);
    v11 = *(_QWORD *)(v10 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
      (*(void (**)(_QWORD *, uint64_t))(v11 + 8))(v8, v10);
  }
  else
  {
    swift_release(*v8);
  }
}

uint64_t sub_9D9B0C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;

  v6 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = a1 + v8;
  v13 = a2 + v8;
  *(_OWORD *)v12 = *(_OWORD *)v13;
  v14 = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v12 + 16) = v14;
  v15 = a3[7];
  v16 = (uint64_t *)(a1 + v15);
  v17 = (uint64_t *)(a2 + v15);
  swift_retain(v11);
  swift_retain(v14);
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
  if (swift_getEnumCaseMultiPayload(v17, v18) == 1)
  {
    v19 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v16, v17, v19);
    v20 = 1;
  }
  else
  {
    v21 = *v17;
    *v16 = *v17;
    swift_retain(v21);
    v20 = 0;
  }
  swift_storeEnumTagMultiPayload(v16, v18, v20);
  v22 = a3[8];
  v23 = (uint64_t *)(a1 + v22);
  v24 = (uint64_t *)(a2 + v22);
  v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14CD210);
  if (swift_getEnumCaseMultiPayload(v24, v25) == 1)
  {
    v26 = type metadata accessor for UserInterfaceSizeClass(0);
    v27 = *(_QWORD *)(v26 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v27 + 48))(v24, 1, v26))
    {
      v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E0470);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v27 + 16))(v23, v24, v26);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v23, 0, 1, v26);
    }
    v30 = v23;
    v31 = v25;
    v32 = 1;
  }
  else
  {
    v29 = *v24;
    *v23 = *v24;
    swift_retain(v29);
    v30 = v23;
    v31 = v25;
    v32 = 0;
  }
  swift_storeEnumTagMultiPayload(v30, v31, v32);
  return a1;
}

uint64_t sub_9D9CE4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;

  v6 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v10 = v9[1];
  v11 = v8[1];
  v8[1] = v10;
  swift_retain(v10);
  swift_release(v11);
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  *v13 = *v14;
  v13[1] = v14[1];
  v15 = v13[2];
  v16 = v14[2];
  v13[2] = v16;
  swift_retain(v16);
  swift_release(v15);
  if (a1 != a2)
  {
    v17 = a3[7];
    v18 = (uint64_t *)(a1 + v17);
    v19 = (uint64_t *)(a2 + v17);
    sub_56024(a1 + v17, (uint64_t *)&unk_14C8730);
    v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
    if (swift_getEnumCaseMultiPayload(v19, v20) == 1)
    {
      v21 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v18, v19, v21);
      v22 = 1;
    }
    else
    {
      v23 = *v19;
      *v18 = *v19;
      swift_retain(v23);
      v22 = 0;
    }
    swift_storeEnumTagMultiPayload(v18, v20, v22);
    v24 = a3[8];
    v25 = (uint64_t *)(a1 + v24);
    v26 = (uint64_t *)(a2 + v24);
    sub_56024(a1 + v24, (uint64_t *)&unk_14CD210);
    v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14CD210);
    if (swift_getEnumCaseMultiPayload(v26, v27) == 1)
    {
      v28 = type metadata accessor for UserInterfaceSizeClass(0);
      v29 = *(_QWORD *)(v28 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v29 + 48))(v26, 1, v28))
      {
        v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E0470);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v29 + 16))(v25, v26, v28);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v25, 0, 1, v28);
      }
      v32 = v25;
      v33 = v27;
      v34 = 1;
    }
    else
    {
      v31 = *v26;
      *v25 = *v26;
      swift_retain(v31);
      v32 = v25;
      v33 = v27;
      v34 = 0;
    }
    swift_storeEnumTagMultiPayload(v32, v33, v34);
  }
  return a1;
}

uint64_t sub_9D9F0C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  v10 = a3[7];
  v11 = (void *)(a1 + v10);
  v12 = (const void *)(a2 + v10);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
  if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
  {
    v14 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v11, v12, v14);
    swift_storeEnumTagMultiPayload(v11, v13, 1);
  }
  else
  {
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  v15 = a3[8];
  v16 = (void *)(a1 + v15);
  v17 = (const void *)(a2 + v15);
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14CD210);
  if (swift_getEnumCaseMultiPayload(v17, v18) == 1)
  {
    v19 = type metadata accessor for UserInterfaceSizeClass(0);
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v17, 1, v19))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E0470);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v20 + 32))(v16, v17, v19);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v16, 0, 1, v19);
    }
    swift_storeEnumTagMultiPayload(v16, v18, 1);
  }
  else
  {
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  return a1;
}

uint64_t sub_9DA0D0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  v12 = v8[1];
  *v8 = v11;
  v8[1] = v10;
  swift_release(v12);
  v13 = a3[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_OWORD *)v14 = *(_OWORD *)v15;
  v16 = *(_QWORD *)(v14 + 16);
  *(_QWORD *)(v14 + 16) = *(_QWORD *)(v15 + 16);
  swift_release(v16);
  if (a1 != a2)
  {
    v17 = a3[7];
    v18 = (void *)(a1 + v17);
    v19 = (const void *)(a2 + v17);
    sub_56024(a1 + v17, (uint64_t *)&unk_14C8730);
    v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
    if (swift_getEnumCaseMultiPayload(v19, v20) == 1)
    {
      v21 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v18, v19, v21);
      swift_storeEnumTagMultiPayload(v18, v20, 1);
    }
    else
    {
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    v22 = a3[8];
    v23 = (void *)(a1 + v22);
    v24 = (const void *)(a2 + v22);
    sub_56024(a1 + v22, (uint64_t *)&unk_14CD210);
    v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14CD210);
    if (swift_getEnumCaseMultiPayload(v24, v25) == 1)
    {
      v26 = type metadata accessor for UserInterfaceSizeClass(0);
      v27 = *(_QWORD *)(v26 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v27 + 48))(v24, 1, v26))
      {
        v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E0470);
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v27 + 32))(v23, v24, v26);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v23, 0, 1, v26);
      }
      swift_storeEnumTagMultiPayload(v23, v25, 1);
    }
    else
    {
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_9DA2D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_9DA2E4);
}

uint64_t sub_9DA2E4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = type metadata accessor for Song(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E4F30);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
    {
      v8 = v13;
      v15 = a3[7];
    }
    else
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14CFB20);
      v14 = *(_QWORD *)(v8 - 8);
      v15 = a3[8];
    }
    v10 = a1 + v15;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + a3[5] + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_9DA3BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_9DA3C8);
}

uint64_t sub_9DA3C8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  result = type metadata accessor for Song(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[5] + 8) = (a2 - 1);
      return result;
    }
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E4F30);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[7];
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14CFB20);
      v14 = *(_QWORD *)(v10 - 8);
      v15 = a4[8];
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_9DA49C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[5];

  v2 = type metadata accessor for Song(319);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    v8[1] = &unk_108F1C0;
    v8[2] = &unk_108F668;
    sub_184AE8(319);
    if (v5 <= 0x3F)
    {
      v8[3] = *(_QWORD *)(v4 - 8) + 64;
      sub_2CBE40(319);
      if (v7 <= 0x3F)
      {
        v8[4] = *(_QWORD *)(v6 - 8) + 64;
        swift_initStructMetadata(a1, 256, 5, v8, a1 + 16);
      }
    }
  }
}

uint64_t sub_9DA568(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, j____swift_get_extra_inhabitant_index_108Tm);
}

uint64_t sub_9DA578(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_109Tm);
}

uint64_t *sub_9DA58C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v16);
  }
  else
  {
    v7 = type metadata accessor for Song(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
      v13 = v9;
      v14 = v11;
      v15 = 1;
    }
    else
    {
      v17 = *v10;
      *v9 = *v10;
      swift_retain(v17);
      v13 = v9;
      v14 = v11;
      v15 = 0;
    }
    swift_storeEnumTagMultiPayload(v13, v14, v15);
  }
  return a1;
}

double sub_9DA684(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  double result;

  v4 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = (_QWORD *)(a1 + *(int *)(a2 + 20));
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
  if (swift_getEnumCaseMultiPayload(v5, v6) == 1)
  {
    v7 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*v5).n128_u64[0];
  }
  return result;
}

uint64_t sub_9DA710(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (uint64_t *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, v9, v11);
    v12 = v8;
    v13 = v10;
    v14 = 1;
  }
  else
  {
    v15 = *v9;
    *v8 = *v9;
    swift_retain(v15);
    v12 = v8;
    v13 = v10;
    v14 = 0;
  }
  swift_storeEnumTagMultiPayload(v12, v13, v14);
  return a1;
}

uint64_t sub_9DA7DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 20);
    v8 = (uint64_t *)(a1 + v7);
    v9 = (uint64_t *)(a2 + v7);
    sub_56024(a1 + v7, (uint64_t *)&unk_14C8730);
    v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v11 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, v9, v11);
      v12 = v8;
      v13 = v10;
      v14 = 1;
    }
    else
    {
      v15 = *v9;
      *v8 = *v9;
      swift_retain(v15);
      v12 = v8;
      v13 = v10;
      v14 = 0;
    }
    swift_storeEnumTagMultiPayload(v12, v13, v14);
  }
  return a1;
}

uint64_t sub_9DA8C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload(v8, v10, 1);
  }
  else
  {
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  return a1;
}

uint64_t sub_9DA988(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for Song(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 20);
    v8 = (void *)(a1 + v7);
    v9 = (const void *)(a2 + v7);
    sub_56024(a1 + v7, (uint64_t *)&unk_14C8730);
    v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v11 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload(v8, v10, 1);
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_9DAA68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_9DAA74);
}

uint64_t __swift_get_extra_inhabitant_index_108Tm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for Song(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E4F30);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_9DAAF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_9DAAFC);
}

uint64_t __swift_store_extra_inhabitant_index_109Tm(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for Song(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E4F30);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_9DAB80(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[2];

  v2 = type metadata accessor for Song(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_184AE8(319);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 2, v6, a1 + 16);
    }
  }
}

unint64_t sub_9DAC08()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14EE4C0;
  if (!qword_14EE4C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EE038);
    sub_5C150(&qword_14EE4C8, &qword_14EE048, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    sub_5C150(&qword_14EE4D0, &qword_14EE040, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14EE4C0);
  }
  return result;
}

unint64_t sub_9DACA8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14EE4D8;
  if (!qword_14EE4D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EE090);
    sub_9D8400();
    sub_4DD24((unint64_t *)&qword_14C07D0, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14EE4D8);
  }
  return result;
}

uint64_t sub_9DAD2C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_11FF294, 1);
}

uint64_t sub_9DAD3C()
{
  return sub_4DD24(&qword_14EE4E0, type metadata accessor for TaggedViewResolver, (uint64_t)&unk_108F6EC);
}

uint64_t sub_9DAD68(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_11FF26C, 1);
}

uint64_t sub_9DAD78(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_11FF244, 1);
}

uint64_t type metadata accessor for LineHeightModifier(uint64_t a1)
{
  return sub_6345C(a1, qword_14EE658, (uint64_t)&nominal type descriptor for LineHeightModifier);
}

unint64_t sub_9DADA4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14EE530;
  if (!qword_14EE530)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EE510);
    sub_2D488C();
    sub_4DD24(&qword_14EE538, type metadata accessor for LineHeightModifier, (uint64_t)&unk_108F96C);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14EE530);
  }
  return result;
}

unint64_t sub_9DAE28()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14E0728;
  if (!qword_14E0728)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14D9B18);
    sub_4DD24((unint64_t *)&qword_14C07D0, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14E0728);
  }
  return result;
}

uint64_t type metadata accessor for PlaylistSongSuggestionsView.DurationView(uint64_t a1)
{
  return sub_6345C(a1, qword_14EE6E8, (uint64_t)&nominal type descriptor for PlaylistSongSuggestionsView.DurationView);
}

unint64_t sub_9DAEC0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14EE5A8;
  if (!qword_14EE5A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EE5A0);
    sub_9DAF44();
    sub_5C150((unint64_t *)&unk_14DCFD0, &qword_14BF7E0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14EE5A8);
  }
  return result;
}

unint64_t sub_9DAF44()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14EE5B0;
  if (!qword_14EE5B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EE5B8);
    sub_30827C();
    sub_5C150(&qword_14B5590, &qword_14B5598, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14EE5B0);
  }
  return result;
}

uint64_t sub_9DAFC8(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 152);
  sub_AF8E8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_release(v2);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_9DB018(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(_QWORD *)(a1 + 64);
  sub_AF8D8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRetain();
  swift_retain(v2);
  swift_retain(v3);
  swift_retain(v4);
  return a1;
}

unint64_t sub_9DB084()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  unint64_t v5;

  result = qword_14EE5F8;
  if (!qword_14EE5F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EE5E8);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EE5D8);
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14BF9A0);
    v5 = sub_2D51A4();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
    v4 = v2;
    v5 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.border(_:corner:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14EE5F8);
  }
  return result;
}

uint64_t sub_9DB148(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_9DB154);
}

uint64_t sub_9DB154(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E4F30);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_9DB194(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_9DB1A0);
}

uint64_t sub_9DB1A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E4F30);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t initializeWithCopy for SwiftUISize(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
  swift_retain(v3);
  swift_retain(v4);
  return a1;
}

uint64_t *assignWithCopy for SwiftUISize(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  v5 = *a2;
  *a1 = *a2;
  swift_retain(v5);
  swift_release(v4);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for SwiftUISize(uint64_t a1, _OWORD *a2)
{
  uint64_t v4;

  swift_release(*(_QWORD *)a1);
  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  swift_release(v4);
  *(_OWORD *)(a1 + 16) = a2[1];
  return a1;
}

ValueMetadata *type metadata accessor for SwiftUISize()
{
  return &type metadata for SwiftUISize;
}

uint64_t *sub_9DB2E0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v13 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v13);
  }
  else
  {
    *a1 = *a2;
    v5 = *(int *)(a3 + 20);
    v6 = (uint64_t *)((char *)a1 + v5);
    v7 = (uint64_t *)((char *)a2 + v5);
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
    if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
    {
      v9 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v6, v7, v9);
      v10 = v6;
      v11 = v8;
      v12 = 1;
    }
    else
    {
      v14 = *v7;
      *v6 = *v7;
      swift_retain(v14);
      v10 = v6;
      v11 = v8;
      v12 = 0;
    }
    swift_storeEnumTagMultiPayload(v10, v11, v12);
  }
  return v3;
}

double sub_9DB3B8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  double result;

  v2 = (_QWORD *)(a1 + *(int *)(a2 + 20));
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
  if (swift_getEnumCaseMultiPayload(v2, v3) == 1)
  {
    v4 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v2, v4);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*v2).n128_u64[0];
  }
  return result;
}

_QWORD *sub_9DB420(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (_QWORD *)((char *)a1 + v4);
  v6 = (_QWORD *)((char *)a2 + v4);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v5, v6, v8);
    v9 = 1;
  }
  else
  {
    v10 = *v6;
    *v5 = *v6;
    swift_retain(v10);
    v9 = 0;
  }
  swift_storeEnumTagMultiPayload(v5, v7, v9);
  return a1;
}

_QWORD *sub_9DB4C4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  if (a1 != a2)
  {
    v4 = *(int *)(a3 + 20);
    v5 = (_QWORD *)((char *)a1 + v4);
    v6 = (_QWORD *)((char *)a2 + v4);
    sub_56024((uint64_t)a1 + v4, (uint64_t *)&unk_14C8730);
    v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
    if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
    {
      v8 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v5, v6, v8);
      v9 = 1;
    }
    else
    {
      v10 = *v6;
      *v5 = *v6;
      swift_retain(v10);
      v9 = 0;
    }
    swift_storeEnumTagMultiPayload(v5, v7, v9);
  }
  return a1;
}

_QWORD *sub_9DB580(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload(v5, v7, 1);
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_9DB628(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  *a1 = *a2;
  if (a1 != a2)
  {
    v4 = *(int *)(a3 + 20);
    v5 = (char *)a1 + v4;
    v6 = (char *)a2 + v4;
    sub_56024((uint64_t)a1 + v4, (uint64_t *)&unk_14C8730);
    v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
    if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
    {
      v8 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v5, v6, v8);
      swift_storeEnumTagMultiPayload(v5, v7, 1);
    }
    else
    {
      memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_9DB6E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_9DB6F4);
}

uint64_t sub_9DB6F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 20);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E4F30);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t sub_9DB738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_9DB744);
}

uint64_t sub_9DB744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 20);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E4F30);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

void sub_9DB78C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.Int64 + 64;
  sub_184AE8(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
  }
}

uint64_t sub_9DB804()
{
  return sub_184F98(&qword_14EE720, &qword_14EE4F8, (void (*)(void))sub_9DB838);
}

unint64_t sub_9DB838()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14EE728;
  if (!qword_14EE728)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EE4F0);
    sub_5C150(&qword_14EE730, &qword_14EE4E8, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14EE728);
  }
  return result;
}

unint64_t sub_9DB8C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14EE738;
  if (!qword_14EE738)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EE568);
    sub_5C150(&qword_14EE740, &qword_14EE558, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14EE738);
  }
  return result;
}

unint64_t sub_9DB948()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14EE748;
  if (!qword_14EE748)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EE5F0);
    sub_9DB084();
    sub_4DD24((unint64_t *)&qword_14C07D0, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14EE748);
  }
  return result;
}

uint64_t sub_9DB9CC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_11FF30C, 1);
}

uint64_t sub_9DB9DC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_11FF2E4, 1);
}

uint64_t sub_9DB9EC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_11FF2BC, 1);
}

unint64_t sub_9DB9FC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  uint64_t v5;

  result = qword_14EE780;
  if (!qword_14EE780)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EE770);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EE760);
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EE750);
    v5 = sub_5C150(&qword_14EE778, &qword_14EE750, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.minimumLineHeight(_:)>>, 1);
    v4 = v2;
    v5 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.maximumLineHeight(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14EE780);
  }
  return result;
}

uint64_t sub_9DBAD8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 48, 7);
}

void sub_9DBB04(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  sub_9D1100(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2, *(double *)(v2 + 32), *(double *)(v2 + 40));
}

uint64_t sub_9DBB10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for GeometryProxy(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_9DBB8C()
{
  uint64_t v0;

  type metadata accessor for GeometryProxy(0);
  return sub_9D1214(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(double *)(v0 + 32), *(double *)(v0 + 40));
}

unint64_t sub_9DBBC0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14EE7D0;
  if (!qword_14EE7D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EE7C8);
    sub_2D4A88();
    sub_5C150(&qword_14B5590, &qword_14B5598, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14EE7D0);
  }
  return result;
}

unint64_t sub_9DBC44()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_14EE7D8;
  if (!qword_14EE7D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EE7A8);
    v2[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EE7C8);
    v2[1] = sub_9DBBC0();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.monospacedDigit()>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14EE7D8);
  }
  return result;
}

unint64_t sub_9DBCDC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14EE7E0;
  if (!qword_14EE7E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EE7E8);
    sub_9DB9FC();
    sub_5C150(&qword_14EE778, &qword_14EE750, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14EE7E0);
  }
  return result;
}

unint64_t sub_9DBD64()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14EE7F0;
  if (!qword_14EE7F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EE790);
    sub_5C150(&qword_14EE7F8, &qword_14EE788, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    sub_5C150(&qword_14EE800, &qword_14EE808, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14EE7F0);
  }
  return result;
}

uint64_t sub_9DBE00()
{
  return sub_184F98(&qword_14EE810, &qword_14EE7B8, (void (*)(void))sub_9DBE34);
}

unint64_t sub_9DBE34()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14EE818;
  if (!qword_14EE818)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EE7B0);
    sub_9DBC44();
    sub_4DD24((unint64_t *)&qword_14C07D0, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14EE818);
  }
  return result;
}

id sub_9DBEB8()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0+ OBJC_IVAR____TtC16MusicApplication32VerticalLockupCollectionViewCell_artworkComponent)+ 144), "image");
}

double sub_9DBEEC()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC16MusicApplication32VerticalLockupCollectionViewCell_artworkAspectRatio;
  swift_beginAccess(v0 + OBJC_IVAR____TtC16MusicApplication32VerticalLockupCollectionViewCell_artworkAspectRatio, v3, 0, 0);
  return *(double *)v1;
}

uint64_t sub_9DBF34(double a1)
{
  char *v1;
  double *v3;
  double v4;
  uint64_t result;
  void (*v6)(__n128);
  uint64_t v7;
  __n128 v8;
  double v9;
  double v10;
  _BYTE v11[24];

  v3 = (double *)&v1[OBJC_IVAR____TtC16MusicApplication32VerticalLockupCollectionViewCell_artworkAspectRatio];
  swift_beginAccess(&v1[OBJC_IVAR____TtC16MusicApplication32VerticalLockupCollectionViewCell_artworkAspectRatio], v11, 1, 0);
  v4 = *v3;
  *v3 = a1;
  v9 = a1;
  v10 = v4;
  result = static ApproximatelyEquatable.!=~ infix(_:_:)(&v10, &v9);
  if ((result & 1) != 0)
    result = sub_7A3D60();
  if (v4 != *v3)
  {
    result = (uint64_t)objc_msgSend(v1, "setNeedsLayout");
    v6 = *(void (**)(__n128))&v1[OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_artworkAspectRatioDidChangeHandler];
    if (v6)
    {
      v7 = *(_QWORD *)&v1[OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_artworkAspectRatioDidChangeHandler
                        + 8];
      v8 = swift_retain(v7);
      v6(v8);
      return sub_5C198((uint64_t)v6, v7);
    }
  }
  return result;
}

void (*sub_9DC014(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = (_QWORD *)(v1 + OBJC_IVAR____TtC16MusicApplication32VerticalLockupCollectionViewCell_artworkAspectRatio);
  swift_beginAccess(v1 + OBJC_IVAR____TtC16MusicApplication32VerticalLockupCollectionViewCell_artworkAspectRatio, v3, 0, 0);
  v3[3] = *v4;
  return sub_9DC084;
}

void sub_9DC084(uint64_t a1)
{
  void *v1;

  v1 = *(void **)a1;
  sub_9DBF34(*(double *)(*(_QWORD *)a1 + 24));
  free(v1);
}

id sub_9DC0B0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;

  v1 = OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell____lazy_storage___playButton;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell____lazy_storage___playButton);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell____lazy_storage___playButton);
  }
  else
  {
    v4 = v0;
    v5 = objc_msgSend(objc_allocWithZone((Class)UIButton), "init");
    sub_4E684(0, (unint64_t *)&qword_14DB260, UIImage_ptr);
    v6 = UIImage.init(systemName:pointSize:weight:)(34.0, 0xD000000000000010, 0x80000000010C6930, 4);
    if (v6)
    {
      v7 = v6;
      v8 = objc_msgSend(v6, "imageWithRenderingMode:", 2);

    }
    else
    {
      v8 = 0;
    }
    objc_msgSend(v5, "setImage:forState:", v8, 0);

    v9 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
    v10 = objc_msgSend(v9, "colorWithAlphaComponent:", 0.8);

    objc_msgSend(v5, "setTintColor:", v10);
    v11 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v12 = v2;
  return v3;
}

id sub_9DC220()
{
  _QWORD *v0;
  double x;
  double width;
  CGFloat height;
  double MaxY;
  double v5;
  double v6;
  double v7;
  double v8;
  void *v9;
  double *v10;
  CGRect v12;
  CGRect v13;
  CGRect v14;

  objc_msgSend(*(id *)(*(_QWORD *)((char *)v0+ OBJC_IVAR____TtC16MusicApplication32VerticalLockupCollectionViewCell_artworkComponent)+ 144), "frame");
  x = v12.origin.x;
  width = v12.size.width;
  height = v12.size.height;
  MaxY = CGRectGetMaxY(v12);
  v5 = (*(double (**)(void))&stru_3D8.sectname[swift_isaMask & *v0])();
  v13.origin.x = x;
  v13.origin.y = MaxY;
  v13.size.width = width;
  v13.size.height = v5;
  v6 = CGRectGetHeight(v13);
  v14.origin.x = x;
  v14.origin.y = MaxY;
  v14.size.width = width;
  v14.size.height = height;
  v7 = CGRectGetHeight(v14);
  if (v6 > v7)
    v8 = v6;
  else
    v8 = v7;
  v9 = *(void **)((char *)v0 + OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_materialView);
  if (v9)
    objc_msgSend(v9, "setFrame:", x, MaxY, width, v8);
  objc_msgSend(*(id *)((char *)v0 + OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_materialLoadingView), "setFrame:", x, MaxY, width, v8);
  v10 = (double *)((char *)v0 + OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_clippedMaterialFrame);
  *v10 = x;
  v10[1] = MaxY;
  v10[2] = width;
  v10[3] = v5;
  return objc_msgSend(*(id *)((char *)v0 + OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_materialHighlightOverlayView), "setFrame:", x, MaxY, width, v5);
}

void sub_9DC35C()
{
  char *v0;
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  char *v14;
  void **v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id (*v19)();
  uint64_t v20;

  v1 = OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_materialLoadingView;
  if ((objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_materialLoadingView], "isHidden") & 1) == 0)
  {
    v2 = objc_msgSend(*(id *)&v0[v1], "layer");
    v3 = objc_msgSend(v2, "animationKeys");

    if (!v3
      || (v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, &type metadata for String),
          v3,
          v5 = *(_QWORD *)(v4 + 16),
          swift_bridgeObjectRelease(v4),
          !v5))
    {
      if ((*(_BYTE *)(*(_QWORD *)&v0[OBJC_IVAR____TtC16MusicApplication32VerticalLockupCollectionViewCell_artworkComponent]
                     + OBJC_IVAR____TtCE16MusicApplicationV11MusicCoreUI7Artwork9Component_appliedContent
                     + 48) & 1) == 0)
      {
        v6 = (void *)objc_opt_self(UIView);
        v7 = swift_allocObject(&unk_1392C50, 24, 7);
        *(_QWORD *)(v7 + 16) = v0;
        v19 = sub_9DE010;
        v20 = v7;
        v15 = _NSConcreteStackBlock;
        v16 = 1107296256;
        v17 = sub_42D124;
        v18 = &block_descriptor_14_10;
        v8 = _Block_copy(&v15);
        v9 = v20;
        v10 = v0;
        swift_release(v9);
        v11 = swift_allocObject(&unk_1392CA0, 24, 7);
        *(_QWORD *)(v11 + 16) = v10;
        v19 = sub_9DE030;
        v20 = v11;
        v15 = _NSConcreteStackBlock;
        v16 = 1107296256;
        v17 = sub_59BEF0;
        v18 = &block_descriptor_20_6;
        v12 = _Block_copy(&v15);
        v13 = v20;
        v14 = v10;
        swift_release(v13);
        objc_msgSend(v6, "animateWithDuration:animations:completion:", v8, v12, 0.2);
        _Block_release(v12);
        _Block_release(v8);
      }
    }
  }
}

void sub_9DC544()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  _BYTE *v8;
  void *v9;
  id v10;
  id v11;

  v1 = v0;
  swift_getObjectType();
  v2 = sub_2A6990();
  if (v2)
  {
    v4 = v2;
    v5 = v3;
    v6 = *(void **)(*(_QWORD *)(v1
                              + OBJC_IVAR____TtC16MusicApplication32VerticalLockupCollectionViewCell_artworkComponent)
                  + 144);
    v7 = v2;
    v8 = v5;
    v8[OBJC_IVAR____TtC16MusicApplication16MaterialRenderer_cropStyle] = sub_8006E4((uint64_t)objc_msgSend(v6, "contentMode")) & 1;

    objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_roundedArtworkView), "insertSubview:atIndex:", v7, 0);
    v9 = *(void **)(v1 + OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_materialView);
    *(_QWORD *)(v1 + OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_materialView) = v4;
    v10 = v7;

    v11 = *(id *)(v1 + OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_renderer);
    *(_QWORD *)(v1 + OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_renderer) = v5;

  }
}

void sub_9DC660()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicApplication32VerticalLockupCollectionViewCell_artworkComponent);
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtCE16MusicApplicationV11MusicCoreUI7Artwork9Component_isVideoArtworkAllowed) != 1
    || (*(_BYTE *)(v1 + OBJC_IVAR____TtCE16MusicApplicationV11MusicCoreUI7Artwork9Component_prefersImageArtwork) & 1) != 0
    || (v2 = *(void **)(v1 + 104)) == 0)
  {
    v2 = *(void **)(v1 + 96);
    if (!v2)
    {
      v6 = 0;
LABEL_8:
      v5 = objc_msgSend((id)objc_opt_self(UIColor), "systemGrayColor");
      goto LABEL_9;
    }
  }
  v6 = v2;
  v3 = v2;
  v4 = objc_msgSend(v3, "existingColorAnalysisWithAlgorithm:", 1);

  v5 = objc_msgSend(v4, "backgroundColor");
  if (!v5)
    goto LABEL_8;
LABEL_9:
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_materialLoadingView), "setBackgroundColor:", v5);
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_roundedArtworkView), "setBackgroundColor:", v5);

}

double sub_9DC78C()
{
  uint64_t v0;
  double v1;
  CGFloat v2;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double MaxY;
  CGRect v19;
  CGRect v20;

  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_roundedArtworkView), "bounds");
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  objc_msgSend(*(id *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicApplication32VerticalLockupCollectionViewCell_artworkComponent)+ 144), "frame");
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v19.origin.x = v2;
  v19.origin.y = v4;
  v19.size.width = v6;
  v19.size.height = v8;
  MaxY = CGRectGetMaxY(v19);
  v20.origin.x = v10;
  v20.origin.y = v12;
  v20.size.width = v14;
  v20.size.height = v16;
  return MaxY - CGRectGetMaxY(v20);
}

char *sub_9DC844(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  id v21;
  id v22;
  char *v23;
  char *v24;
  uint64_t v25;
  id v26;
  objc_class *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  void (*v32)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v33;
  void *v34;
  id v35;
  void *v36;
  uint64_t v37;
  id v38;
  void *v39;
  id v40;
  void *v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (**v47)();
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (**v52)();
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (**v57)();
  uint64_t v58;
  uint64_t v59;
  void *v60;
  id v61;
  __n128 v62;
  double v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  double *v71;
  void *v72;
  void *v73;
  id v74;
  void *v75;
  uint64_t v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  id v87;
  uint64_t v88;
  objc_super v89;

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_14C0170);
  __chkstk_darwin(v9);
  v11 = (char *)&v87 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for UIView.Corner(0);
  v88 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v87 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v4[OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_presentationBeginObserver] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_presentationEndedObserver] = 0;
  v15 = OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_roundedArtworkView;
  v16 = objc_allocWithZone((Class)UIView);
  v17 = v4;
  *(_QWORD *)&v4[v15] = objc_msgSend(v16, "init");
  v18 = &v17[OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_clippedMaterialFrame];
  *(_OWORD *)v18 = 0u;
  *((_OWORD *)v18 + 1) = 0u;
  v19 = &v17[OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_artworkAspectRatioDidChangeHandler];
  *(_QWORD *)v19 = 0;
  *((_QWORD *)v19 + 1) = 0;
  *(_QWORD *)&v17[OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_lockupVideoArtworkCatalog] = 0;
  v20 = OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_materialLoadingView;
  v21 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v87 = (id)objc_opt_self(UIColor);
  v22 = objc_msgSend(v87, "clearColor");
  objc_msgSend(v21, "setBackgroundColor:", v22);

  *(_QWORD *)&v17[v20] = v21;
  v23 = &v17[OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_playButtonHandler];
  *(_QWORD *)v23 = 0;
  *((_QWORD *)v23 + 1) = 0;
  v24 = &v17[OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_playButtonHorizontalInsets];
  *(_OWORD *)v24 = xmmword_10820B0;
  *((_OWORD *)v24 + 1) = xmmword_1085B70;
  *(_QWORD *)&v17[OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell____lazy_storage___playButton] = 0;
  *(_QWORD *)&v17[OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_materialView] = 0;
  *(_QWORD *)&v17[OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_renderer] = 0;
  v17[OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_hasAppliedMaterialTexture] = 0;
  *(_QWORD *)&v17[OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_materialViewSnapshot] = 0;
  v25 = OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_materialHighlightOverlayView;
  v26 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  if (qword_14ABD00 != -1)
    swift_once(&qword_14ABD00, sub_9B6A20);
  objc_msgSend(v26, "setBackgroundColor:", qword_1581490);
  objc_msgSend(v26, "setHidden:", 1);
  *(_QWORD *)&v17[v25] = v26;
  v17[OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_alwaysUseCompactLayout] = 0;

  v27 = (objc_class *)type metadata accessor for FeaturedMaterialCell(0);
  v89.receiver = v17;
  v89.super_class = v27;
  v28 = (char *)objc_msgSendSuper2(&v89, "initWithFrame:", a1, a2, a3, a4);
  v29 = UIView.Corner.extraLarge.unsafeMutableAddressor();
  v30 = v88;
  v31 = *(void (**)(char *, uint64_t, uint64_t))(v88 + 16);
  v31(v14, v29, v12);
  UIView.Corner.with(corners:)(3);
  v32 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56);
  v32(v11, 0, 1, v12);
  VerticalLockupCollectionViewCell.artworkCornerTreatment.setter((uint64_t)v11);
  v33 = OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_roundedArtworkView;
  v34 = *(void **)&v28[OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_roundedArtworkView];
  objc_msgSend(v34, "setClipsToBounds:", 1);
  v31(v11, (uint64_t)v14, v12);
  v32(v11, 0, 1, v12);
  UIView.corner.setter(v11);
  v35 = objc_msgSend(v28, "contentView");
  objc_msgSend(v35, "addSubview:", v34);

  sub_9DC544();
  v36 = *(void **)&v28[v33];
  v37 = OBJC_IVAR____TtC16MusicApplication32VerticalLockupCollectionViewCell_artworkComponent;
  v38 = objc_retain(*(id *)(*(_QWORD *)&v28[OBJC_IVAR____TtC16MusicApplication32VerticalLockupCollectionViewCell_artworkComponent]
                          + 144));

  objc_msgSend(v36, "addSubview:", v38);
  v39 = *(void **)&v28[v33];
  objc_msgSend(v39, "addSubview:", *(_QWORD *)&v28[OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_materialLoadingView]);
  v40 = *(id *)&v28[OBJC_IVAR____TtC16MusicApplication32VerticalLockupCollectionViewCell_textStackView];

  objc_msgSend(v39, "addSubview:", v40);
  v41 = *(void **)&v28[v33];
  v42 = sub_9DC0B0();
  objc_msgSend(v41, "addSubview:", v42);

  objc_msgSend(*(id *)&v28[v33], "addSubview:", *(_QWORD *)&v28[OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_materialHighlightOverlayView]);
  v43 = sub_9DC0B0();
  v44 = swift_allocObject(&unk_1392BD8, 24, 7);
  swift_unknownObjectWeakInit(v44 + 16);

  v45 = sub_4E684(0, (unint64_t *)&qword_14AE630, UIButton_ptr);
  ControlEventHandling<>.on(_:handler:)(64, (uint64_t)sub_9DDF9C, v44, v45);

  swift_release(v44);
  v46 = swift_allocObject(&unk_1392BD8, 24, 7);
  swift_unknownObjectWeakInit(v46 + 16);

  v47 = (void (**)())&v28[OBJC_IVAR____TtC16MusicApplication32VerticalLockupCollectionViewCell_imageDidChangeHandler];
  v48 = *(_QWORD *)&v28[OBJC_IVAR____TtC16MusicApplication32VerticalLockupCollectionViewCell_imageDidChangeHandler];
  v49 = *(_QWORD *)&v28[OBJC_IVAR____TtC16MusicApplication32VerticalLockupCollectionViewCell_imageDidChangeHandler + 8];
  *v47 = sub_9DDFA4;
  v47[1] = (void (*)())v46;
  sub_5C198(v48, v49);

  v50 = *(_QWORD *)&v28[v37];
  swift_retain(v50);

  v51 = swift_allocObject(&unk_1392BD8, 24, 7);
  swift_unknownObjectWeakInit(v51 + 16);

  v52 = (void (**)())(v50 + OBJC_IVAR____TtCE16MusicApplicationV11MusicCoreUI7Artwork9Component_imageViewDidResetHandler);
  v53 = *(_QWORD *)(v50 + OBJC_IVAR____TtCE16MusicApplicationV11MusicCoreUI7Artwork9Component_imageViewDidResetHandler);
  v54 = *(_QWORD *)(v50
                  + OBJC_IVAR____TtCE16MusicApplicationV11MusicCoreUI7Artwork9Component_imageViewDidResetHandler
                  + 8);
  *v52 = sub_9DDFAC;
  v52[1] = (void (*)())v51;
  sub_5C198(v53, v54);
  swift_release(v50);
  v55 = *(_QWORD *)&v28[v37];
  swift_retain(v55);

  v56 = swift_allocObject(&unk_1392BD8, 24, 7);
  swift_unknownObjectWeakInit(v56 + 16);

  v57 = (void (**)())(v55
                    + OBJC_IVAR____TtCE16MusicApplicationV11MusicCoreUI7Artwork9Component_contentModeDidChangeHandler);
  v58 = *(_QWORD *)(v55 + OBJC_IVAR____TtCE16MusicApplicationV11MusicCoreUI7Artwork9Component_contentModeDidChangeHandler);
  v59 = *(_QWORD *)(v55
                  + OBJC_IVAR____TtCE16MusicApplicationV11MusicCoreUI7Artwork9Component_contentModeDidChangeHandler
                  + 8);
  *v57 = sub_9DDFB4;
  v57[1] = (void (*)())v56;
  sub_5C198(v58, v59);
  swift_release(v55);
  v60 = *(void **)&v28[v33];
  v61 = v60;
  v62.n128_u64[0] = -6.0;
  v63 = UIEdgeInsets.init(edges:inset:)(15, v62);
  v65 = v64;
  v67 = v66;
  v69 = v68;
  v70 = objc_msgSend(v87, "systemLightGrayColor");
  v71 = (double *)&v28[OBJC_IVAR____TtC16MusicApplication32VerticalLockupCollectionViewCell_selectedBackgroundViewConfiguration];
  v72 = *(void **)&v28[OBJC_IVAR____TtC16MusicApplication32VerticalLockupCollectionViewCell_selectedBackgroundViewConfiguration];
  v73 = *(void **)&v28[OBJC_IVAR____TtC16MusicApplication32VerticalLockupCollectionViewCell_selectedBackgroundViewConfiguration
                     + 8];
  *(_QWORD *)v71 = v60;
  *((_QWORD *)v71 + 1) = v70;
  v71[2] = v63;
  *((_QWORD *)v71 + 3) = v65;
  *((_QWORD *)v71 + 4) = v67;
  *((_QWORD *)v71 + 5) = v69;
  v74 = v61;

  if (qword_14AA980 != -1)
    swift_once(&qword_14AA980, sub_EB1C8);
  v75 = (void *)qword_157F6E8;
  v76 = swift_allocObject(&unk_1392BD8, 24, 7);
  swift_unknownObjectWeakInit(v76 + 16);
  v77 = v75;

  v78 = type metadata accessor for NotificationObserver();
  swift_allocObject(v78, 64, 7);
  v79 = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(v77, 0, 1, 1, (uint64_t)sub_9DDFBC, v76);
  v80 = *(_QWORD *)&v28[OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_presentationBeginObserver];
  *(_QWORD *)&v28[OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_presentationBeginObserver] = v79;
  swift_release(v80);
  if (qword_14AA988 != -1)
    swift_once(&qword_14AA988, sub_EB1FC);
  v81 = (void *)qword_157F6F0;
  v82 = swift_allocObject(&unk_1392BD8, 24, 7);
  swift_unknownObjectWeakInit(v82 + 16);
  v83 = v81;

  swift_allocObject(v78, 64, 7);
  swift_retain(v82);
  v84 = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(v83, 0, 1, 1, (uint64_t)sub_9DDFC4, v82);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v14, v12);
  swift_release(v82);

  v85 = *(_QWORD *)&v28[OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_presentationEndedObserver];
  *(_QWORD *)&v28[OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_presentationEndedObserver] = v84;
  swift_release(v85);
  return v28;
}

void sub_9DD064(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  void (*v5)(void *, id);
  uint64_t v6;
  id v7;
  _BYTE v8[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = *(void (**)(void *, id))(Strong
                                           + OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_playButtonHandler);
    if (v5)
    {
      v6 = *(_QWORD *)(Strong + OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_playButtonHandler + 8);
      swift_retain(v6);
      v7 = sub_9DC0B0();
      v5(v4, v7);

      sub_5C198((uint64_t)v5, v6);
    }

  }
}

void sub_9DD10C(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    sub_C6C94();

  }
}

void sub_9DD15C(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  _BYTE v9[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = *(id *)(Strong + OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_materialLoadingView);

    v5 = objc_msgSend(v4, "layer");
    objc_msgSend(v5, "removeAllAnimations");

  }
  swift_beginAccess(v1, &v8, 0, 0);
  v6 = swift_unknownObjectWeakLoadStrong(v1);
  if (v6)
  {
    v7 = (void *)v6;
    sub_C6C94();

  }
}

void sub_9DD224(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE v12[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = *(_QWORD *)(Strong + OBJC_IVAR____TtC16MusicApplication32VerticalLockupCollectionViewCell_artworkComponent);
    swift_retain(v4);

    v5 = *(id *)(v4 + 144);
    v6 = objc_msgSend(v5, "contentMode", swift_release(v4).n128_f64[0]);

    swift_beginAccess(v1, &v11, 0, 0);
    v7 = swift_unknownObjectWeakLoadStrong(v1);
    if (v7)
    {
      v8 = (void *)v7;
      v9 = *(void **)(v7 + OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_renderer);
      if (v9)
      {
        v10 = v9;

        v10[OBJC_IVAR____TtC16MusicApplication16MaterialRenderer_cropStyle] = sub_8006E4((uint64_t)v6) & 1;
        v8 = v10;
      }

    }
  }
}

void sub_9DD320(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  char *v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  _BYTE v16[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (char *)Strong;
    v5 = OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_materialView;
    v6 = *(void **)(Strong + OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_materialView);
    if (v6)
    {
      v7 = objc_msgSend(v6, "snapshotViewAfterScreenUpdates:", 0);
      v8 = v7;
      if (v7)
      {
        v9 = *(void **)&v4[v5];
        if (v9)
        {
          v10 = v7;
          v11 = v9;
          objc_msgSend(v11, "frame");
          objc_msgSend(v10, "setFrame:");
          objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_roundedArtworkView], "insertSubview:atIndex:", v10, 0);
          v12 = *(void **)&v4[OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_materialViewSnapshot];
          *(_QWORD *)&v4[OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_materialViewSnapshot] = v8;

          v8 = v10;
        }
      }
    }
    else
    {
      v8 = 0;
    }
    v13 = *(void **)&v4[OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_renderer];
    *(_QWORD *)&v4[OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_renderer] = 0;

    v14 = *(void **)&v4[v5];
    if (v14)
    {
      objc_msgSend(v14, "removeFromSuperview");
      v15 = *(void **)&v4[v5];
    }
    else
    {
      v15 = 0;
    }
    *(_QWORD *)&v4[v5] = 0;

    objc_msgSend(v4, "layoutIfNeeded");
  }
}

void sub_9DD474(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t Strong;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  id v26;
  __n128 v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _QWORD aBlock[5];
  uint64_t v33;
  char v34[24];

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&aBlock[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&aBlock[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v34, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v12 = (void *)Strong;
    v13 = sub_4E684(0, (unint64_t *)&qword_14AD360, OS_dispatch_queue_ptr);
    v21 = static OS_dispatch_queue.main.getter(v13, v14, v15, v16, v17, v18, v19, v20);
    v31 = v4;
    v22 = (void *)v21;
    v23 = swift_allocObject(&unk_1392C00, 24, 7);
    *(_QWORD *)(v23 + 16) = v12;
    aBlock[4] = sub_9DDFCC;
    v33 = v23;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_42D124;
    aBlock[3] = &block_descriptor_256;
    v24 = _Block_copy(aBlock);
    v25 = v33;
    v26 = v12;
    v27 = swift_release(v25);
    static DispatchQoS.unspecified.getter(v27);
    aBlock[0] = _swiftEmptyArrayStorage;
    v28 = sub_55F18();
    v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD370);
    v30 = sub_55F60();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v29, v30, v3, v28);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v6, v24);

    (*(void (**)(char *, uint64_t))(v31 + 8))(v6, v3);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    _Block_release(v24);

  }
}

void sub_9DD684(uint64_t a1)
{
  uint64_t v2;
  void *v3;

  sub_9DC544();
  sub_C6C94();
  v2 = OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_materialViewSnapshot;
  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_materialViewSnapshot), "removeFromSuperview");
  v3 = *(void **)(a1 + v2);
  *(_QWORD *)(a1 + v2) = 0;

}

id sub_9DD774(void *a1, uint64_t a2, SEL *a3)
{
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for FeaturedMaterialCell(0);
  return objc_msgSendSuper2(&v5, *a3);
}

id sub_9DD804(char a1, SEL *a2, SEL *a3)
{
  char *v3;
  objc_class *v7;
  unsigned int v8;
  id result;
  uint64_t v10;
  objc_super v11;
  objc_super v12;

  v7 = (objc_class *)type metadata accessor for FeaturedMaterialCell(0);
  v12.receiver = v3;
  v12.super_class = v7;
  v8 = objc_msgSendSuper2(&v12, *a2);
  v11.receiver = v3;
  v11.super_class = v7;
  objc_msgSendSuper2(&v11, *a3, a1 & 1);
  result = objc_msgSend(v3, *a2);
  if (v8 != (_DWORD)result)
  {
    if (objc_msgSend(v3, "isHighlighted"))
      v10 = 0;
    else
      v10 = objc_msgSend(v3, "isSelected") ^ 1;
    return objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_materialHighlightOverlayView], "setHidden:", v10);
  }
  return result;
}

void sub_9DD9D4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_presentationBeginObserver));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_presentationEndedObserver));

  sub_5C198(*(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_artworkAspectRatioDidChangeHandler), *(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_artworkAspectRatioDidChangeHandler + 8));
  sub_5C198(*(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_playButtonHandler), *(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_playButtonHandler + 8));

}

id sub_9DDAA8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FeaturedMaterialCell(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_9DDBBC()
{
  return type metadata accessor for FeaturedMaterialCell(0);
}

uint64_t type metadata accessor for FeaturedMaterialCell(uint64_t a1)
{
  uint64_t result;

  result = qword_14EE870;
  if (!qword_14EE870)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FeaturedMaterialCell);
  return result;
}

uint64_t sub_9DDC00(uint64_t a1)
{
  _QWORD v2[16];

  v2[0] = "\b";
  v2[1] = "\b";
  v2[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[3] = &unk_108F9F0;
  v2[4] = &unk_108FA08;
  v2[5] = "\b";
  v2[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[7] = &unk_108FA08;
  v2[8] = &unk_108F9F0;
  v2[9] = "\b";
  v2[10] = "\b";
  v2[11] = "\b";
  v2[12] = &unk_108FA20;
  v2[13] = "\b";
  v2[14] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[15] = &unk_108FA20;
  return swift_updateClassMetadata2(a1, 256, 16, v2, a1 + 664);
}

void *sub_9DDC80()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_materialView);
  v2 = v1;
  return v1;
}

void *sub_9DDCAC()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_renderer);
  v2 = v1;
  return v1;
}

uint64_t sub_9DDCD8()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_3D8.flags + (swift_isaMask & *v0)))();
}

uint64_t sub_9DDCF4()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_hasAppliedMaterialTexture);
}

uint64_t sub_9DDD04(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_hasAppliedMaterialTexture) = result;
  return result;
}

id sub_9DDD14()
{
  uint64_t v0;
  uint64_t v1;

  sub_9DC660();
  v1 = OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_materialLoadingView;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_materialLoadingView), "setAlpha:", 1.0);
  return objc_msgSend(*(id *)(v0 + v1), "setHidden:", 0);
}

void sub_9DDD60()
{
  _BYTE *v0;
  uint64_t v1;
  _OWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  id v5;
  id v6;
  _QWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  id v10;

  *(_QWORD *)&v0[OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_presentationBeginObserver] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_presentationEndedObserver] = 0;
  v1 = OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_roundedArtworkView;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v2 = &v0[OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_clippedMaterialFrame];
  *v2 = 0u;
  v2[1] = 0u;
  v3 = &v0[OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_artworkAspectRatioDidChangeHandler];
  *v3 = 0;
  v3[1] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_lockupVideoArtworkCatalog] = 0;
  v4 = OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_materialLoadingView;
  v5 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v6 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  objc_msgSend(v5, "setBackgroundColor:", v6);

  *(_QWORD *)&v0[v4] = v5;
  v7 = &v0[OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_playButtonHandler];
  *v7 = 0;
  v7[1] = 0;
  v8 = &v0[OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_playButtonHorizontalInsets];
  *v8 = xmmword_10820B0;
  v8[1] = xmmword_1085B70;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell____lazy_storage___playButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_materialView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_renderer] = 0;
  v0[OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_hasAppliedMaterialTexture] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_materialViewSnapshot] = 0;
  v9 = OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_materialHighlightOverlayView;
  v10 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  if (qword_14ABD00 != -1)
    swift_once(&qword_14ABD00, sub_9B6A20);
  objc_msgSend(v10, "setBackgroundColor:", qword_1581490);
  objc_msgSend(v10, "setHidden:", 1);
  *(_QWORD *)&v0[v9] = v10;
  v0[OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_alwaysUseCompactLayout] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000000010C4100, "MusicApplication/FeaturedMaterialCell.swift", 43, 2, 87, 0);
  __break(1u);
}

uint64_t sub_9DDF78()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_9DDF9C(uint64_t a1)
{
  uint64_t v1;

  sub_9DD064(a1, v1);
}

void sub_9DDFA4()
{
  uint64_t v0;

  sub_9DD10C(v0);
}

void sub_9DDFAC()
{
  uint64_t v0;

  sub_9DD15C(v0);
}

void sub_9DDFB4()
{
  uint64_t v0;

  sub_9DD224(v0);
}

void sub_9DDFBC(uint64_t a1)
{
  uint64_t v1;

  sub_9DD320(a1, v1);
}

void sub_9DDFC4(uint64_t a1)
{
  uint64_t v1;

  sub_9DD474(a1, v1);
}

void sub_9DDFCC()
{
  uint64_t v0;

  sub_9DD684(*(_QWORD *)(v0 + 16));
}

uint64_t block_copy_helper_252(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_252(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_9DDFEC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_9DE010()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_materialLoadingView), "setAlpha:", 0.0);
}

id sub_9DE030()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_materialLoadingView;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_materialLoadingView), "setBackgroundColor:", 0);
  return objc_msgSend(*(id *)(v1 + v2), "setHidden:", 1);
}

uint64_t sub_9DE090(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  v7[14] = a6;
  v7[15] = a7;
  v7[12] = a4;
  v7[13] = a5;
  v8 = type metadata accessor for Logger(0);
  v7[16] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[17] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[18] = swift_task_alloc(v10);
  v7[19] = swift_task_alloc(v10);
  v7[20] = swift_task_alloc(v10);
  v7[21] = swift_task_alloc(v10);
  v11 = (*(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14AED20) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[22] = swift_task_alloc(v11);
  v7[23] = swift_task_alloc(v11);
  v12 = type metadata accessor for URL(0);
  v7[24] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v7[25] = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[26] = swift_task_alloc(v14);
  v7[27] = swift_task_alloc(v14);
  v7[28] = swift_task_alloc(v14);
  return swift_task_switch(sub_9DE194, 0, 0);
}

uint64_t sub_9DE194()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  BOOL v20;
  unint64_t v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  BOOL v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  __n128 v54;
  void (*v55)(uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  NSObject *v84;
  os_log_type_t v85;
  BOOL v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  __n128 v98;
  void (*v99)(uint64_t, uint64_t);
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  os_log_type_t type;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  os_log_t loga;
  os_log_t log;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void (*v119)(uint64_t, uint64_t);
  void (*v120)(uint64_t, uint64_t);
  uint64_t v121;
  unint64_t v122;
  uint64_t v123[2];

  v2 = *(_QWORD *)(v0 + 192);
  v1 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 176);
  sub_5C238(*(_QWORD *)(v0 + 96), v3, &qword_14AED20);
  v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
  v5 = v4(v3, 1, v2);
  v6 = *(_QWORD *)(v0 + 192);
  v7 = *(_QWORD *)(v0 + 200);
  v8 = *(_QWORD *)(v0 + 176);
  v9 = *(_QWORD *)(v0 + 184);
  if (v5 == 1)
  {
    sub_56024(*(_QWORD *)(v0 + 176), &qword_14AED20);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v9, 1, 1, v6);
    goto LABEL_4;
  }
  URL.appending(_:)(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), 1);
  v10 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v10(v8, v6);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
  if (v4(v9, 1, v6) == 1)
  {
LABEL_4:
    v11 = *(_QWORD *)(v0 + 136);
    v12 = *(_QWORD *)(v0 + 144);
    v13 = *(_QWORD *)(v0 + 128);
    v14 = *(_QWORD *)(v0 + 112);
    v15 = *(_QWORD *)(v0 + 96);
    sub_56024(*(_QWORD *)(v0 + 184), &qword_14AED20);
    v16 = type metadata accessor for WidgetDiskCache(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v12, v15 + *(int *)(v16 + 24), v13);
    v17 = swift_bridgeObjectRetain_n(v14, 2);
    v18 = Logger.logObject.getter(v17);
    v19 = static os_log_type_t.default.getter(v18);
    v20 = os_log_type_enabled(v18, v19);
    v21 = *(_QWORD *)(v0 + 112);
    if (v20)
    {
      v22 = *(_QWORD *)(v0 + 104);
      v121 = *(_QWORD *)(v0 + 128);
      v117 = *(_QWORD *)(v0 + 136);
      v118 = *(_QWORD *)(v0 + 144);
      v23 = (uint8_t *)swift_slowAlloc(12, -1);
      v24 = swift_slowAlloc(32, -1);
      v123[0] = v24;
      *(_DWORD *)v23 = 136446210;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 16) = sub_23EAC8(v22, v21, v123);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24);
      swift_bridgeObjectRelease_n(v21, 3);
      _os_log_impl(&dword_0, v18, v19, "Unable to get widget cache url for saving item named \"%{public}s\"", v23, 0xCu);
      swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v24, -1, -1);
      swift_slowDealloc(v23, -1, -1);
      (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v118, v121);

    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 136) + 8))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 128));
      swift_bridgeObjectRelease_n(v21, 2);

    }
    goto LABEL_13;
  }
  v25 = *(_QWORD *)(v0 + 120);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 200) + 32))(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192));
  if (v25)
  {
    *(_QWORD *)(v0 + 24) = *(_QWORD *)(v0 + 120);
    v26 = type metadata accessor for JSONEncoder(0);
    swift_allocObject(v26, *(unsigned int *)(v26 + 48), *(unsigned __int16 *)(v26 + 52));
    v27 = swift_bridgeObjectRetain();
    v28 = JSONEncoder.init()(v27);
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_14C3BD0);
    v30 = sub_35F26C(&qword_14C3BE8, (unint64_t *)&unk_14C3BF0, (uint64_t)&unk_106AF88, (uint64_t)&protocol conformance descriptor for <A> [A]);
    v31 = dispatch thunk of JSONEncoder.encode<A>(_:)(v0 + 24, v29, v30);
    log = (os_log_t)v29;
    v56 = *(_QWORD *)(v0 + 224);
    v57 = v31;
    v59 = v58;
    swift_release(v28);
    v115 = type metadata accessor for WidgetDiskCache(0);
    v60 = (_QWORD *)swift_task_alloc(48);
    v60[2] = v57;
    v60[3] = v59;
    v60[4] = v56;
    OS_dispatch_queue.sync<A>(execute:)(sub_9E5B78, v60, (char *)&type metadata for () + 8);
    v110 = v57;
    v122 = v59;
    v120 = v10;
    v74 = *(_QWORD *)(v0 + 224);
    v75 = *(_QWORD *)(v0 + 200);
    v107 = *(_QWORD *)(v0 + 208);
    v76 = *(_QWORD *)(v0 + 192);
    v77 = *(_QWORD *)(v0 + 160);
    v79 = *(_QWORD *)(v0 + 128);
    v78 = *(_QWORD *)(v0 + 136);
    v80 = *(_QWORD *)(v0 + 112);
    v81 = *(_QWORD *)(v0 + 96);
    swift_task_dealloc(v60);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v78 + 16))(v77, v81 + *(int *)(v115 + 24), v79);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v75 + 16))(v107, v74, v76);
    v82 = *(_QWORD *)(v0 + 24);
    swift_bridgeObjectRetain_n(v80, 2);
    v83 = swift_bridgeObjectRetain_n(v82, 2);
    v84 = Logger.logObject.getter(v83);
    v85 = static os_log_type_t.default.getter(v84);
    v86 = os_log_type_enabled(v84, v85);
    v87 = *(_QWORD *)(v0 + 208);
    v88 = *(_QWORD *)(v0 + 192);
    v89 = *(_QWORD *)(v0 + 160);
    v90 = *(_QWORD *)(v0 + 128);
    v91 = *(_QWORD *)(v0 + 136);
    v92 = *(_QWORD *)(v0 + 112);
    if (v86)
    {
      v103 = *(_QWORD *)(v0 + 104);
      v116 = *(_QWORD *)(v0 + 160);
      v93 = swift_slowAlloc(32, -1);
      v104 = swift_slowAlloc(96, -1);
      v123[0] = v104;
      *(_DWORD *)v93 = 136446722;
      type = v85;
      v94 = sub_4DD24((unint64_t *)&qword_14D3CE0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v95 = dispatch thunk of CustomStringConvertible.description.getter(v88, v94);
      v108 = v90;
      v97 = v96;
      *(_QWORD *)(v0 + 72) = sub_23EAC8(v95, v96, v123);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 72, v0 + 80);
      v98 = swift_bridgeObjectRelease(v97);
      v99 = v120;
      ((void (*)(uint64_t, uint64_t, __n128))v120)(v87, v88, v98);
      *(_WORD *)(v93 + 12) = 2082;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 80) = sub_23EAC8(v103, v92, v123);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 80, v0 + 88);
      swift_bridgeObjectRelease_n(v92, 3);
      *(_WORD *)(v93 + 22) = 2082;
      *(_QWORD *)(v0 + 88) = v82;
      swift_bridgeObjectRetain();
      v100 = String.init<A>(describing:)(v0 + 88, log);
      v102 = v101;
      *(_QWORD *)(v0 + 32) = sub_23EAC8(v100, v101, v123);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40);
      swift_bridgeObjectRelease(v102);
      swift_bridgeObjectRelease_n(v82, 2);
      _os_log_impl(&dword_0, v84, type, "Saved cache file \"%{public}s\" for item named \"%{public}s\", value %{public}s", (uint8_t *)v93, 0x20u);
      swift_arrayDestroy(v104, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v104, -1, -1);
      swift_slowDealloc(v93, -1, -1);
      (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v116, v108);
    }
    else
    {
      swift_bridgeObjectRelease_n(v82, 2);
      swift_bridgeObjectRelease_n(v92, 2);
      v99 = v120;
      v120(v87, v88);
      (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v89, v90);
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

    v99(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 192));
    sub_50C60(v110, v122);
  }
  else
  {
    v119 = v10;
    v32 = *(_QWORD *)(v0 + 216);
    v33 = *(_QWORD *)(v0 + 224);
    v35 = *(_QWORD *)(v0 + 192);
    v34 = *(_QWORD *)(v0 + 200);
    v36 = *(_QWORD *)(v0 + 168);
    v37 = *(_QWORD *)(v0 + 128);
    v38 = *(_QWORD *)(v0 + 136);
    v39 = *(_QWORD *)(v0 + 112);
    v40 = *(_QWORD *)(v0 + 96);
    v114 = type metadata accessor for WidgetDiskCache(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 16))(v36, v40 + *(int *)(v114 + 24), v37);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16))(v32, v33, v35);
    v41 = swift_bridgeObjectRetain_n(v39, 2);
    v42 = Logger.logObject.getter(v41);
    v43 = static os_log_type_t.default.getter(v42);
    v44 = os_log_type_enabled(v42, v43);
    v45 = *(_QWORD *)(v0 + 216);
    v46 = *(_QWORD *)(v0 + 192);
    v47 = *(_QWORD *)(v0 + 112);
    if (v44)
    {
      v48 = *(_QWORD *)(v0 + 104);
      v113 = *(_QWORD *)(v0 + 128);
      v109 = *(_QWORD *)(v0 + 136);
      loga = *(os_log_t *)(v0 + 168);
      v49 = swift_slowAlloc(22, -1);
      v106 = swift_slowAlloc(64, -1);
      v123[0] = v106;
      *(_DWORD *)v49 = 136446466;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 40) = sub_23EAC8(v48, v47, v123);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v0 + 48);
      swift_bridgeObjectRelease_n(v47, 3);
      *(_WORD *)(v49 + 12) = 2082;
      v50 = sub_4DD24((unint64_t *)&qword_14D3CE0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v51 = dispatch thunk of CustomStringConvertible.description.getter(v46, v50);
      v53 = v52;
      *(_QWORD *)(v0 + 48) = sub_23EAC8(v51, v52, v123);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 48, v0 + 56);
      v54 = swift_bridgeObjectRelease(v53);
      v55 = v119;
      ((void (*)(uint64_t, uint64_t, __n128))v119)(v45, v46, v54);
      _os_log_impl(&dword_0, v42, v43, "Nil value set for item named \"%{public}s\", removing file %{public}s", (uint8_t *)v49, 0x16u);
      swift_arrayDestroy(v106, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v106, -1, -1);
      swift_slowDealloc(v49, -1, -1);
      (*(void (**)(os_log_t, uint64_t))(v109 + 8))(loga, v113);
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 136) + 8))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 128));
      swift_bridgeObjectRelease_n(v47, 2);
      v55 = v119;
      v119(v45, v46);
    }

    v61 = *(_QWORD *)(v0 + 224);
    v62 = *(_QWORD *)(v0 + 192);
    v63 = swift_task_alloc(32);
    *(_QWORD *)(v63 + 16) = v61;
    v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_14BA6D0);
    OS_dispatch_queue.sync<A>(execute:)(sub_9E5B64, v63, v64);
    v55(v61, v62);
    swift_task_dealloc(v63);
  }
LABEL_13:
  v65 = *(_QWORD *)(v0 + 216);
  v66 = *(_QWORD *)(v0 + 208);
  v68 = *(_QWORD *)(v0 + 176);
  v67 = *(_QWORD *)(v0 + 184);
  v70 = *(_QWORD *)(v0 + 160);
  v69 = *(_QWORD *)(v0 + 168);
  v72 = *(_QWORD *)(v0 + 144);
  v71 = *(_QWORD *)(v0 + 152);
  swift_task_dealloc(*(_QWORD *)(v0 + 224));
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_9DEDD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;

  v7[12] = a6;
  v7[13] = a7;
  v7[10] = a4;
  v7[11] = a5;
  v8 = type metadata accessor for Logger(0);
  v7[14] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[15] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[16] = swift_task_alloc(v10);
  v7[17] = swift_task_alloc(v10);
  v7[18] = swift_task_alloc(v10);
  v7[19] = swift_task_alloc(v10);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_14B3348);
  v7[20] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for WidgetMusicItem(0);
  v7[21] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v7[22] = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[23] = swift_task_alloc(v14);
  v7[24] = swift_task_alloc(v14);
  v7[25] = swift_task_alloc(v14);
  v15 = (*(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14AED20) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[26] = swift_task_alloc(v15);
  v7[27] = swift_task_alloc(v15);
  v16 = type metadata accessor for URL(0);
  v7[28] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v7[29] = v17;
  v18 = (*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[30] = swift_task_alloc(v18);
  v7[31] = swift_task_alloc(v18);
  v7[32] = swift_task_alloc(v18);
  return swift_task_switch(sub_9DEF3C, 0, 0);
}

uint64_t sub_9DEF3C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  BOOL v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  BOOL v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t *v60;
  __n128 v61;
  uint64_t v62;
  void (*v63)(uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  NSObject *v77;
  NSObject *v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  NSObject *v102;
  os_log_type_t v103;
  BOOL v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  unint64_t v113;
  __n128 v114;
  void (*v115)(uint64_t, uint64_t);
  uint64_t v116;
  unint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  os_log_t loga;
  os_log_t log;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t *v139;
  os_log_t v140;
  os_log_t v141;
  NSObject *v142;
  uint64_t v143;
  void (*v144)(uint64_t, uint64_t);
  uint64_t v145;
  void (*v146)(uint64_t, uint64_t);
  uint64_t v147;
  _QWORD *v148;
  uint64_t v149;
  uint64_t v150;
  _QWORD *v151;
  _QWORD *v152;
  uint64_t *v153;
  uint64_t v154;
  _QWORD *v155;
  uint64_t v156[2];

  v1 = v0;
  v3 = v0 + 10;
  v2 = v0[10];
  v4 = v0 + 3;
  v5 = v0[28];
  v6 = v0[29];
  v7 = v3[16];
  sub_5C238(v2, v7, &qword_14AED20);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  v9 = v8(v7, 1, v5);
  v10 = v3[18];
  v11 = v3[19];
  v12 = v3[16];
  v13 = v3[17];
  if (v9 == 1)
  {
    sub_56024(v3[16], &qword_14AED20);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v13, 1, 1, v10);
    goto LABEL_4;
  }
  URL.appending(_:)(v1[11], v1[12], 1);
  v14 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v14(v12, v10);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(v13, 0, 1, v10);
  if (v8(v13, 1, v10) == 1)
  {
LABEL_4:
    v152 = v4;
    v16 = v1[15];
    v15 = v1[16];
    v17 = v1[14];
    v18 = v1[12];
    v19 = v1[10];
    sub_56024(v1[27], &qword_14AED20);
    v20 = type metadata accessor for WidgetDiskCache(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v15, v19 + *(int *)(v20 + 24), v17);
    v21 = swift_bridgeObjectRetain_n(v18, 2);
    v22 = Logger.logObject.getter(v21);
    v23 = static os_log_type_t.default.getter(v22);
    v24 = os_log_type_enabled(v22, v23);
    v25 = v1[15];
    v26 = v1[12];
    if (v24)
    {
      v27 = v1[11];
      v147 = v1[14];
      v143 = v1[16];
      v28 = (uint8_t *)swift_slowAlloc(12, -1);
      v29 = swift_slowAlloc(32, -1);
      v156[0] = v29;
      *(_DWORD *)v28 = 136446210;
      swift_bridgeObjectRetain();
      v1[2] = sub_23EAC8(v27, v26, v156);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v3 - 8, v152);
      swift_bridgeObjectRelease_n(v26, 3);
      _os_log_impl(&dword_0, v22, v23, "Unable to get widget cache url for saving item named \"%{public}s\"", v28, 0xCu);
      swift_arrayDestroy(v29, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v29, -1, -1);
      swift_slowDealloc(v28, -1, -1);
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v143, v147);

    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(v25 + 8))(v1[16], v1[14]);
      swift_bridgeObjectRelease_n(v26, 2);

    }
    goto LABEL_13;
  }
  v30 = v1[21];
  v31 = v1[22];
  v32 = v1[20];
  v33 = v1[13];
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v1[29] + 32))(v1[32], v1[27], v1[28]);
  sub_5C238(v33, v32, &qword_14B3348);
  v153 = v3 - 4;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v32, 1, v30) == 1)
  {
    v139 = v3 - 6;
    v144 = v14;
    v35 = v1[31];
    v34 = v1[32];
    v37 = v1[28];
    v36 = v1[29];
    v39 = v1[19];
    v38 = v1[20];
    v41 = v1[14];
    v40 = v1[15];
    v148 = v1;
    v42 = v1[12];
    v43 = v148[10];
    sub_56024(v38, &qword_14B3348);
    v140 = (os_log_t)type metadata accessor for WidgetDiskCache(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 16))(v39, v43 + SLODWORD(v140[3].isa), v41);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v35, v34, v37);
    v44 = v42;
    v1 = v148;
    v45 = swift_bridgeObjectRetain_n(v44, 2);
    v46 = Logger.logObject.getter(v45);
    v47 = static os_log_type_t.default.getter(v46);
    v48 = os_log_type_enabled(v46, v47);
    v49 = v148[31];
    v50 = v148[28];
    v51 = v148[12];
    if (v48)
    {
      v52 = v3 - 5;
      v136 = v148[15];
      v53 = v148[11];
      v132 = v148[19];
      loga = (os_log_t)v148[14];
      v54 = swift_slowAlloc(22, -1);
      v55 = swift_slowAlloc(64, -1);
      v156[0] = v55;
      *(_DWORD *)v54 = 136446466;
      swift_bridgeObjectRetain();
      v148[4] = sub_23EAC8(v53, v51, v156);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v139, v52);
      swift_bridgeObjectRelease_n(v51, 3);
      *(_WORD *)(v54 + 12) = 2082;
      v56 = sub_4DD24((unint64_t *)&qword_14D3CE0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v57 = dispatch thunk of CustomStringConvertible.description.getter(v50, v56);
      v59 = v58;
      v148[5] = sub_23EAC8(v57, v58, v156);
      v60 = v52;
      v1 = v148;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v60, v153);
      v61 = swift_bridgeObjectRelease(v59);
      v62 = v50;
      v63 = v144;
      ((void (*)(uint64_t, uint64_t, __n128))v144)(v49, v62, v61);
      _os_log_impl(&dword_0, v46, v47, "Nil value set for item named \"%{public}s\", removing file %{public}s", (uint8_t *)v54, 0x16u);
      swift_arrayDestroy(v55, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v55, -1, -1);
      swift_slowDealloc(v54, -1, -1);
      (*(void (**)(uint64_t, os_log_t))(v136 + 8))(v132, loga);
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(v148[15] + 8))(v148[19], v148[14]);
      swift_bridgeObjectRelease_n(v51, 2);
      v71 = v50;
      v63 = v144;
      v144(v49, v71);
    }

    v72 = v1[32];
    v73 = v1[28];
    v74 = swift_task_alloc(32);
    *(_QWORD *)(v74 + 16) = v72;
    v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_14BA6D0);
    OS_dispatch_queue.sync<A>(execute:)(sub_9E5B64, v74, v75);
    v63(v72, v73);
    swift_task_dealloc(v74);
  }
  else
  {
    v64 = v1[25];
    v65 = v1[21];
    sub_5C04C(v1[20], v64, type metadata accessor for WidgetMusicItem);
    v66 = type metadata accessor for JSONEncoder(0);
    v67 = swift_allocObject(v66, *(unsigned int *)(v66 + 48), *(unsigned __int16 *)(v66 + 52));
    v68 = JSONEncoder.init()(v67);
    v69 = sub_4DD24((unint64_t *)&unk_14C3BF0, type metadata accessor for WidgetMusicItem, (uint64_t)&unk_106AF88);
    v70 = dispatch thunk of JSONEncoder.encode<A>(_:)(v64, v65, v69);
    v149 = v1[32];
    v76 = v70;
    v78 = v77;
    swift_release(v68);
    v141 = (os_log_t)type metadata accessor for WidgetDiskCache(0);
    v79 = (_QWORD *)swift_task_alloc(48);
    v79[2] = v76;
    v79[3] = v78;
    v79[4] = v149;
    OS_dispatch_queue.sync<A>(execute:)(sub_9E5B78, v79, (char *)&type metadata for () + 8);
    v133 = v76;
    log = v78;
    v155 = v4;
    v146 = v14;
    v93 = v1[29];
    v92 = v1[30];
    v94 = v1[28];
    v137 = v1[25];
    v128 = v1[32];
    v130 = v1[24];
    v95 = v1[18];
    v97 = v1[14];
    v96 = v1[15];
    v98 = v1[12];
    v151 = v1;
    v99 = v1[10];
    swift_task_dealloc(v79);
    v100 = v99 + SLODWORD(v141[3].isa);
    v1 = v151;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v96 + 16))(v95, v100, v97);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v93 + 16))(v92, v128, v94);
    sub_5BDB8(v137, v130, type metadata accessor for WidgetMusicItem);
    v101 = swift_bridgeObjectRetain_n(v98, 2);
    v102 = Logger.logObject.getter(v101);
    v103 = static os_log_type_t.default.getter(v102);
    v142 = v102;
    v104 = os_log_type_enabled(v102, v103);
    v105 = v151[30];
    v106 = v151[28];
    v107 = v151[24];
    v138 = v151[25];
    if (v104)
    {
      v125 = v151[23];
      v126 = v151[21];
      v127 = v151[15];
      v129 = v151[14];
      v131 = v151[18];
      v108 = v151[12];
      v123 = v151[11];
      v109 = swift_slowAlloc(32, -1);
      v124 = swift_slowAlloc(96, -1);
      v156[0] = v124;
      *(_DWORD *)v109 = 136446722;
      v110 = sub_4DD24((unint64_t *)&qword_14D3CE0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v111 = dispatch thunk of CustomStringConvertible.description.getter(v106, v110);
      v113 = v112;
      v151[8] = sub_23EAC8(v111, v112, v156);
      v1 = v151;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v3 - 2, v3 - 1);
      v114 = swift_bridgeObjectRelease(v113);
      v115 = v146;
      ((void (*)(uint64_t, uint64_t, __n128))v146)(v105, v106, v114);
      *(_WORD *)(v109 + 12) = 2082;
      swift_bridgeObjectRetain();
      v151[9] = sub_23EAC8(v123, v108, v156);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v3 - 1, v3);
      swift_bridgeObjectRelease_n(v108, 3);
      *(_WORD *)(v109 + 22) = 2082;
      sub_5BDB8(v107, v125, type metadata accessor for WidgetMusicItem);
      v116 = String.init<A>(describing:)(v125, v126);
      v118 = v117;
      v151[3] = sub_23EAC8(v116, v117, v156);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v155, v3 - 6);
      swift_bridgeObjectRelease(v118);
      sub_5C0DC(v107, type metadata accessor for WidgetMusicItem);
      _os_log_impl(&dword_0, v142, v103, "Saved cache file \"%{public}s\" for item named \"%{public}s\", value %{public}s", (uint8_t *)v109, 0x20u);
      swift_arrayDestroy(v124, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v124, -1, -1);
      swift_slowDealloc(v109, -1, -1);
      (*(void (**)(uint64_t, uint64_t))(v127 + 8))(v131, v129);
      sub_5C0DC(v138, type metadata accessor for WidgetMusicItem);

    }
    else
    {
      v119 = v151[18];
      v120 = v151[14];
      v121 = v151[15];
      v122 = v151[12];
      sub_5C0DC(v107, type metadata accessor for WidgetMusicItem);
      swift_bridgeObjectRelease_n(v122, 2);
      v115 = v146;
      v146(v105, v106);
      (*(void (**)(uint64_t, uint64_t))(v121 + 8))(v119, v120);
      sub_5C0DC(v138, type metadata accessor for WidgetMusicItem);

    }
    v115(v1[32], v1[28]);
    sub_50C60(v133, (unint64_t)log);
  }
LABEL_13:
  v81 = v1[31];
  v80 = v1[32];
  v82 = v1[30];
  v84 = v1[26];
  v83 = v1[27];
  v86 = v1[24];
  v85 = v1[25];
  v87 = v1[23];
  v88 = v1;
  v89 = v1[20];
  v90 = v88[19];
  v145 = v88[18];
  v150 = v88[17];
  v154 = v88[16];
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  swift_task_dealloc(v145);
  swift_task_dealloc(v150);
  swift_task_dealloc(v154);
  return ((uint64_t (*)(void))v88[1])();
}

uint64_t sub_9DFC70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;

  v7[12] = a6;
  v7[13] = a7;
  v7[10] = a4;
  v7[11] = a5;
  v8 = type metadata accessor for Logger(0);
  v7[14] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[15] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[16] = swift_task_alloc(v10);
  v7[17] = swift_task_alloc(v10);
  v7[18] = swift_task_alloc(v10);
  v7[19] = swift_task_alloc(v10);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_14C45D0);
  v7[20] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for NowPlayingDataProvider.ItemProgress(0);
  v7[21] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v7[22] = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[23] = swift_task_alloc(v14);
  v7[24] = swift_task_alloc(v14);
  v7[25] = swift_task_alloc(v14);
  v15 = (*(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14AED20) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[26] = swift_task_alloc(v15);
  v7[27] = swift_task_alloc(v15);
  v16 = type metadata accessor for URL(0);
  v7[28] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v7[29] = v17;
  v18 = (*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[30] = swift_task_alloc(v18);
  v7[31] = swift_task_alloc(v18);
  v7[32] = swift_task_alloc(v18);
  return swift_task_switch(sub_9DFDDC, 0, 0);
}

uint64_t sub_9DFDDC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  BOOL v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  BOOL v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t *v60;
  __n128 v61;
  uint64_t v62;
  void (*v63)(uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  NSObject *v77;
  NSObject *v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  NSObject *v102;
  os_log_type_t v103;
  BOOL v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  unint64_t v113;
  __n128 v114;
  void (*v115)(uint64_t, uint64_t);
  uint64_t v116;
  unint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  os_log_t loga;
  os_log_t log;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t *v139;
  os_log_t v140;
  os_log_t v141;
  NSObject *v142;
  uint64_t v143;
  void (*v144)(uint64_t, uint64_t);
  uint64_t v145;
  void (*v146)(uint64_t, uint64_t);
  uint64_t v147;
  _QWORD *v148;
  uint64_t v149;
  uint64_t v150;
  _QWORD *v151;
  _QWORD *v152;
  uint64_t *v153;
  uint64_t v154;
  _QWORD *v155;
  uint64_t v156[2];

  v1 = v0;
  v3 = v0 + 10;
  v2 = v0[10];
  v4 = v0 + 3;
  v5 = v0[28];
  v6 = v0[29];
  v7 = v3[16];
  sub_5C238(v2, v7, &qword_14AED20);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  v9 = v8(v7, 1, v5);
  v10 = v3[18];
  v11 = v3[19];
  v12 = v3[16];
  v13 = v3[17];
  if (v9 == 1)
  {
    sub_56024(v3[16], &qword_14AED20);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v13, 1, 1, v10);
    goto LABEL_4;
  }
  URL.appending(_:)(v1[11], v1[12], 1);
  v14 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v14(v12, v10);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(v13, 0, 1, v10);
  if (v8(v13, 1, v10) == 1)
  {
LABEL_4:
    v152 = v4;
    v16 = v1[15];
    v15 = v1[16];
    v17 = v1[14];
    v18 = v1[12];
    v19 = v1[10];
    sub_56024(v1[27], &qword_14AED20);
    v20 = type metadata accessor for WidgetDiskCache(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v15, v19 + *(int *)(v20 + 24), v17);
    v21 = swift_bridgeObjectRetain_n(v18, 2);
    v22 = Logger.logObject.getter(v21);
    v23 = static os_log_type_t.default.getter(v22);
    v24 = os_log_type_enabled(v22, v23);
    v25 = v1[15];
    v26 = v1[12];
    if (v24)
    {
      v27 = v1[11];
      v147 = v1[14];
      v143 = v1[16];
      v28 = (uint8_t *)swift_slowAlloc(12, -1);
      v29 = swift_slowAlloc(32, -1);
      v156[0] = v29;
      *(_DWORD *)v28 = 136446210;
      swift_bridgeObjectRetain();
      v1[2] = sub_23EAC8(v27, v26, v156);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v3 - 8, v152);
      swift_bridgeObjectRelease_n(v26, 3);
      _os_log_impl(&dword_0, v22, v23, "Unable to get widget cache url for saving item named \"%{public}s\"", v28, 0xCu);
      swift_arrayDestroy(v29, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v29, -1, -1);
      swift_slowDealloc(v28, -1, -1);
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v143, v147);

    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(v25 + 8))(v1[16], v1[14]);
      swift_bridgeObjectRelease_n(v26, 2);

    }
    goto LABEL_13;
  }
  v30 = v1[21];
  v31 = v1[22];
  v32 = v1[20];
  v33 = v1[13];
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v1[29] + 32))(v1[32], v1[27], v1[28]);
  sub_5C238(v33, v32, &qword_14C45D0);
  v153 = v3 - 4;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v32, 1, v30) == 1)
  {
    v139 = v3 - 6;
    v144 = v14;
    v35 = v1[31];
    v34 = v1[32];
    v37 = v1[28];
    v36 = v1[29];
    v39 = v1[19];
    v38 = v1[20];
    v41 = v1[14];
    v40 = v1[15];
    v148 = v1;
    v42 = v1[12];
    v43 = v148[10];
    sub_56024(v38, &qword_14C45D0);
    v140 = (os_log_t)type metadata accessor for WidgetDiskCache(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 16))(v39, v43 + SLODWORD(v140[3].isa), v41);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v35, v34, v37);
    v44 = v42;
    v1 = v148;
    v45 = swift_bridgeObjectRetain_n(v44, 2);
    v46 = Logger.logObject.getter(v45);
    v47 = static os_log_type_t.default.getter(v46);
    v48 = os_log_type_enabled(v46, v47);
    v49 = v148[31];
    v50 = v148[28];
    v51 = v148[12];
    if (v48)
    {
      v52 = v3 - 5;
      v136 = v148[15];
      v53 = v148[11];
      v132 = v148[19];
      loga = (os_log_t)v148[14];
      v54 = swift_slowAlloc(22, -1);
      v55 = swift_slowAlloc(64, -1);
      v156[0] = v55;
      *(_DWORD *)v54 = 136446466;
      swift_bridgeObjectRetain();
      v148[4] = sub_23EAC8(v53, v51, v156);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v139, v52);
      swift_bridgeObjectRelease_n(v51, 3);
      *(_WORD *)(v54 + 12) = 2082;
      v56 = sub_4DD24((unint64_t *)&qword_14D3CE0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v57 = dispatch thunk of CustomStringConvertible.description.getter(v50, v56);
      v59 = v58;
      v148[5] = sub_23EAC8(v57, v58, v156);
      v60 = v52;
      v1 = v148;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v60, v153);
      v61 = swift_bridgeObjectRelease(v59);
      v62 = v50;
      v63 = v144;
      ((void (*)(uint64_t, uint64_t, __n128))v144)(v49, v62, v61);
      _os_log_impl(&dword_0, v46, v47, "Nil value set for item named \"%{public}s\", removing file %{public}s", (uint8_t *)v54, 0x16u);
      swift_arrayDestroy(v55, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v55, -1, -1);
      swift_slowDealloc(v54, -1, -1);
      (*(void (**)(uint64_t, os_log_t))(v136 + 8))(v132, loga);
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(v148[15] + 8))(v148[19], v148[14]);
      swift_bridgeObjectRelease_n(v51, 2);
      v71 = v50;
      v63 = v144;
      v144(v49, v71);
    }

    v72 = v1[32];
    v73 = v1[28];
    v74 = swift_task_alloc(32);
    *(_QWORD *)(v74 + 16) = v72;
    v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_14BA6D0);
    OS_dispatch_queue.sync<A>(execute:)(sub_9E5B64, v74, v75);
    v63(v72, v73);
    swift_task_dealloc(v74);
  }
  else
  {
    v64 = v1[25];
    v65 = v1[21];
    sub_5C04C(v1[20], v64, type metadata accessor for NowPlayingDataProvider.ItemProgress);
    v66 = type metadata accessor for JSONEncoder(0);
    v67 = swift_allocObject(v66, *(unsigned int *)(v66 + 48), *(unsigned __int16 *)(v66 + 52));
    v68 = JSONEncoder.init()(v67);
    v69 = sub_4DD24(&qword_14C43B8, type metadata accessor for NowPlayingDataProvider.ItemProgress, (uint64_t)&unk_107074C);
    v70 = dispatch thunk of JSONEncoder.encode<A>(_:)(v64, v65, v69);
    v149 = v1[32];
    v76 = v70;
    v78 = v77;
    swift_release(v68);
    v141 = (os_log_t)type metadata accessor for WidgetDiskCache(0);
    v79 = (_QWORD *)swift_task_alloc(48);
    v79[2] = v76;
    v79[3] = v78;
    v79[4] = v149;
    OS_dispatch_queue.sync<A>(execute:)(sub_9E5B78, v79, (char *)&type metadata for () + 8);
    v133 = v76;
    log = v78;
    v155 = v4;
    v146 = v14;
    v93 = v1[29];
    v92 = v1[30];
    v94 = v1[28];
    v137 = v1[25];
    v128 = v1[32];
    v130 = v1[24];
    v95 = v1[18];
    v97 = v1[14];
    v96 = v1[15];
    v98 = v1[12];
    v151 = v1;
    v99 = v1[10];
    swift_task_dealloc(v79);
    v100 = v99 + SLODWORD(v141[3].isa);
    v1 = v151;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v96 + 16))(v95, v100, v97);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v93 + 16))(v92, v128, v94);
    sub_5BDB8(v137, v130, type metadata accessor for NowPlayingDataProvider.ItemProgress);
    v101 = swift_bridgeObjectRetain_n(v98, 2);
    v102 = Logger.logObject.getter(v101);
    v103 = static os_log_type_t.default.getter(v102);
    v142 = v102;
    v104 = os_log_type_enabled(v102, v103);
    v105 = v151[30];
    v106 = v151[28];
    v107 = v151[24];
    v138 = v151[25];
    if (v104)
    {
      v125 = v151[23];
      v126 = v151[21];
      v127 = v151[15];
      v129 = v151[14];
      v131 = v151[18];
      v108 = v151[12];
      v123 = v151[11];
      v109 = swift_slowAlloc(32, -1);
      v124 = swift_slowAlloc(96, -1);
      v156[0] = v124;
      *(_DWORD *)v109 = 136446722;
      v110 = sub_4DD24((unint64_t *)&qword_14D3CE0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v111 = dispatch thunk of CustomStringConvertible.description.getter(v106, v110);
      v113 = v112;
      v151[8] = sub_23EAC8(v111, v112, v156);
      v1 = v151;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v3 - 2, v3 - 1);
      v114 = swift_bridgeObjectRelease(v113);
      v115 = v146;
      ((void (*)(uint64_t, uint64_t, __n128))v146)(v105, v106, v114);
      *(_WORD *)(v109 + 12) = 2082;
      swift_bridgeObjectRetain();
      v151[9] = sub_23EAC8(v123, v108, v156);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v3 - 1, v3);
      swift_bridgeObjectRelease_n(v108, 3);
      *(_WORD *)(v109 + 22) = 2082;
      sub_5BDB8(v107, v125, type metadata accessor for NowPlayingDataProvider.ItemProgress);
      v116 = String.init<A>(describing:)(v125, v126);
      v118 = v117;
      v151[3] = sub_23EAC8(v116, v117, v156);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v155, v3 - 6);
      swift_bridgeObjectRelease(v118);
      sub_5C0DC(v107, type metadata accessor for NowPlayingDataProvider.ItemProgress);
      _os_log_impl(&dword_0, v142, v103, "Saved cache file \"%{public}s\" for item named \"%{public}s\", value %{public}s", (uint8_t *)v109, 0x20u);
      swift_arrayDestroy(v124, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v124, -1, -1);
      swift_slowDealloc(v109, -1, -1);
      (*(void (**)(uint64_t, uint64_t))(v127 + 8))(v131, v129);
      sub_5C0DC(v138, type metadata accessor for NowPlayingDataProvider.ItemProgress);

    }
    else
    {
      v119 = v151[18];
      v120 = v151[14];
      v121 = v151[15];
      v122 = v151[12];
      sub_5C0DC(v107, type metadata accessor for NowPlayingDataProvider.ItemProgress);
      swift_bridgeObjectRelease_n(v122, 2);
      v115 = v146;
      v146(v105, v106);
      (*(void (**)(uint64_t, uint64_t))(v121 + 8))(v119, v120);
      sub_5C0DC(v138, type metadata accessor for NowPlayingDataProvider.ItemProgress);

    }
    v115(v1[32], v1[28]);
    sub_50C60(v133, (unint64_t)log);
  }
LABEL_13:
  v81 = v1[31];
  v80 = v1[32];
  v82 = v1[30];
  v84 = v1[26];
  v83 = v1[27];
  v86 = v1[24];
  v85 = v1[25];
  v87 = v1[23];
  v88 = v1;
  v89 = v1[20];
  v90 = v88[19];
  v145 = v88[18];
  v150 = v88[17];
  v154 = v88[16];
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  swift_task_dealloc(v145);
  swift_task_dealloc(v150);
  swift_task_dealloc(v154);
  return ((uint64_t (*)(void))v88[1])();
}

uint64_t sub_9E0B10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  v7[14] = a6;
  v7[15] = a7;
  v7[12] = a4;
  v7[13] = a5;
  v8 = type metadata accessor for Logger(0);
  v7[16] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[17] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[18] = swift_task_alloc(v10);
  v7[19] = swift_task_alloc(v10);
  v7[20] = swift_task_alloc(v10);
  v7[21] = swift_task_alloc(v10);
  v11 = (*(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14AED20) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[22] = swift_task_alloc(v11);
  v7[23] = swift_task_alloc(v11);
  v12 = type metadata accessor for URL(0);
  v7[24] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v7[25] = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[26] = swift_task_alloc(v14);
  v7[27] = swift_task_alloc(v14);
  v7[28] = swift_task_alloc(v14);
  return swift_task_switch(sub_9E0C14, 0, 0);
}

uint64_t sub_9E0C14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  BOOL v20;
  unint64_t v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  __n128 v48;
  void (*v49)(uint64_t, uint64_t);
  void *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  unint64_t v61;
  unint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  id v82;
  NSObject *v83;
  os_log_type_t v84;
  BOOL v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  __n128 v98;
  void (*v99)(uint64_t, uint64_t);
  id v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  void *v104;
  uint64_t v105;
  os_log_type_t type;
  uint64_t v107;
  os_log_t v108;
  NSObject *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  os_log_t loga;
  os_log_t log;
  uint64_t v117;
  uint64_t v118;
  void *v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  void (*v124)(uint64_t, uint64_t);
  void (*v125)(uint64_t, uint64_t);
  uint64_t v126[2];

  v2 = *(_QWORD *)(v0 + 192);
  v1 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 176);
  sub_5C238(*(_QWORD *)(v0 + 96), v3, &qword_14AED20);
  v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
  v5 = v4(v3, 1, v2);
  v6 = *(_QWORD *)(v0 + 192);
  v7 = *(_QWORD *)(v0 + 200);
  v8 = *(_QWORD *)(v0 + 176);
  v9 = *(_QWORD *)(v0 + 184);
  if (v5 == 1)
  {
    sub_56024(*(_QWORD *)(v0 + 176), &qword_14AED20);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v9, 1, 1, v6);
    goto LABEL_4;
  }
  URL.appending(_:)(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), 1);
  v10 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v10(v8, v6);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
  if (v4(v9, 1, v6) == 1)
  {
LABEL_4:
    v11 = *(_QWORD *)(v0 + 136);
    v12 = *(_QWORD *)(v0 + 144);
    v13 = *(_QWORD *)(v0 + 128);
    v14 = *(_QWORD *)(v0 + 112);
    v15 = *(_QWORD *)(v0 + 96);
    sub_56024(*(_QWORD *)(v0 + 184), &qword_14AED20);
    v16 = type metadata accessor for WidgetDiskCache(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v12, v15 + *(int *)(v16 + 24), v13);
    v17 = swift_bridgeObjectRetain_n(v14, 2);
    v18 = Logger.logObject.getter(v17);
    v19 = static os_log_type_t.default.getter(v18);
    v20 = os_log_type_enabled(v18, v19);
    v21 = *(_QWORD *)(v0 + 112);
    if (v20)
    {
      v22 = *(_QWORD *)(v0 + 104);
      v123 = *(_QWORD *)(v0 + 128);
      v120 = *(_QWORD *)(v0 + 136);
      v121 = *(_QWORD *)(v0 + 144);
      v23 = (uint8_t *)swift_slowAlloc(12, -1);
      v24 = swift_slowAlloc(32, -1);
      v126[0] = v24;
      *(_DWORD *)v23 = 136446210;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 16) = sub_23EAC8(v22, v21, v126);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24);
      swift_bridgeObjectRelease_n(v21, 3);
      _os_log_impl(&dword_0, v18, v19, "Unable to get widget cache url for saving item named \"%{public}s\"", v23, 0xCu);
      swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v24, -1, -1);
      swift_slowDealloc(v23, -1, -1);
      (*(void (**)(uint64_t, uint64_t))(v120 + 8))(v121, v123);

    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 136) + 8))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 128));
      swift_bridgeObjectRelease_n(v21, 2);

    }
    goto LABEL_13;
  }
  v25 = *(_QWORD *)(v0 + 120);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 200) + 32))(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192));
  if (v25 == 1)
  {
    v124 = v10;
    v26 = *(_QWORD *)(v0 + 216);
    v27 = *(_QWORD *)(v0 + 224);
    v29 = *(_QWORD *)(v0 + 192);
    v28 = *(_QWORD *)(v0 + 200);
    v30 = *(_QWORD *)(v0 + 168);
    v31 = *(_QWORD *)(v0 + 128);
    v32 = *(_QWORD *)(v0 + 136);
    v33 = *(_QWORD *)(v0 + 112);
    v34 = *(_QWORD *)(v0 + 96);
    v117 = type metadata accessor for WidgetDiskCache(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16))(v30, v34 + *(int *)(v117 + 24), v31);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v26, v27, v29);
    v35 = swift_bridgeObjectRetain_n(v33, 2);
    v36 = Logger.logObject.getter(v35);
    v37 = static os_log_type_t.default.getter(v36);
    v38 = os_log_type_enabled(v36, v37);
    v39 = *(_QWORD *)(v0 + 216);
    v40 = *(_QWORD *)(v0 + 192);
    v41 = *(_QWORD *)(v0 + 112);
    if (v38)
    {
      v42 = *(_QWORD *)(v0 + 104);
      v112 = *(_QWORD *)(v0 + 168);
      loga = *(os_log_t *)(v0 + 128);
      v110 = *(_QWORD *)(v0 + 136);
      v43 = swift_slowAlloc(22, -1);
      v108 = (os_log_t)swift_slowAlloc(64, -1);
      v126[0] = (uint64_t)v108;
      *(_DWORD *)v43 = 136446466;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 40) = sub_23EAC8(v42, v41, v126);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v0 + 48);
      swift_bridgeObjectRelease_n(v41, 3);
      *(_WORD *)(v43 + 12) = 2082;
      v44 = sub_4DD24((unint64_t *)&qword_14D3CE0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v45 = dispatch thunk of CustomStringConvertible.description.getter(v40, v44);
      v47 = v46;
      *(_QWORD *)(v0 + 48) = sub_23EAC8(v45, v46, v126);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 48, v0 + 56);
      v48 = swift_bridgeObjectRelease(v47);
      v49 = v124;
      ((void (*)(uint64_t, uint64_t, __n128))v124)(v39, v40, v48);
      _os_log_impl(&dword_0, v36, v37, "Nil value set for item named \"%{public}s\", removing file %{public}s", (uint8_t *)v43, 0x16u);
      swift_arrayDestroy(v108, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v108, -1, -1);
      swift_slowDealloc(v43, -1, -1);
      (*(void (**)(uint64_t, os_log_t))(v110 + 8))(v112, loga);
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 136) + 8))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 128));
      swift_bridgeObjectRelease_n(v41, 2);
      v49 = v124;
      v124(v39, v40);
    }

    v55 = *(_QWORD *)(v0 + 224);
    v56 = *(_QWORD *)(v0 + 192);
    v57 = swift_task_alloc(32);
    *(_QWORD *)(v57 + 16) = v55;
    v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_14BA6D0);
    OS_dispatch_queue.sync<A>(execute:)(sub_9E5B64, v57, v58);
    v49(v55, v56);
    swift_task_dealloc(v57);
  }
  else
  {
    v50 = *(void **)(v0 + 120);
    *(_QWORD *)(v0 + 24) = v50;
    v51 = type metadata accessor for JSONEncoder(0);
    swift_allocObject(v51, *(unsigned int *)(v51 + 48), *(unsigned __int16 *)(v51 + 52));
    v52 = JSONEncoder.init()(v50);
    v53 = sub_285BC8();
    v54 = dispatch thunk of JSONEncoder.encode<A>(_:)(v0 + 24, &type metadata for CodableImage, v53);
    v59 = *(_QWORD *)(v0 + 224);
    v60 = v54;
    v62 = v61;
    swift_release(v52);
    v118 = type metadata accessor for WidgetDiskCache(0);
    v63 = (_QWORD *)swift_task_alloc(48);
    v63[2] = v60;
    v63[3] = v62;
    v63[4] = v59;
    OS_dispatch_queue.sync<A>(execute:)(sub_9E5B78, v63, (char *)&type metadata for () + 8);
    log = v60;
    v122 = v62;
    v125 = v10;
    v113 = *(_QWORD *)(v0 + 224);
    v73 = *(_QWORD *)(v0 + 200);
    v74 = *(_QWORD *)(v0 + 208);
    v75 = *(_QWORD *)(v0 + 192);
    v76 = *(_QWORD *)(v0 + 160);
    v77 = *(_QWORD *)(v0 + 128);
    v78 = *(_QWORD *)(v0 + 136);
    v79 = *(_QWORD *)(v0 + 112);
    v80 = *(_QWORD *)(v0 + 96);
    swift_task_dealloc(v63);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v78 + 16))(v76, v80 + *(int *)(v118 + 24), v77);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v73 + 16))(v74, v113, v75);
    v119 = *(void **)(v0 + 24);
    v81 = v119;
    swift_bridgeObjectRetain_n(v79, 2);
    v82 = v81;
    v83 = Logger.logObject.getter(v82);
    v84 = static os_log_type_t.default.getter(v83);
    v85 = os_log_type_enabled(v83, v84);
    v86 = *(_QWORD *)(v0 + 208);
    v87 = *(_QWORD *)(v0 + 192);
    v88 = *(_QWORD *)(v0 + 160);
    v89 = *(_QWORD *)(v0 + 128);
    v90 = *(_QWORD *)(v0 + 136);
    v91 = *(_QWORD *)(v0 + 112);
    if (v85)
    {
      v114 = *(_QWORD *)(v0 + 160);
      v105 = *(_QWORD *)(v0 + 104);
      v109 = v83;
      v92 = swift_slowAlloc(32, -1);
      v126[0] = swift_slowAlloc(96, -1);
      v111 = v90;
      v93 = v126[0];
      *(_DWORD *)v92 = 136446722;
      type = v84;
      v94 = sub_4DD24((unint64_t *)&qword_14D3CE0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v95 = dispatch thunk of CustomStringConvertible.description.getter(v87, v94);
      v107 = v89;
      v97 = v96;
      *(_QWORD *)(v0 + 72) = sub_23EAC8(v95, v96, v126);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 72, v0 + 80);
      v98 = swift_bridgeObjectRelease(v97);
      v99 = v125;
      ((void (*)(uint64_t, uint64_t, __n128))v125)(v86, v87, v98);
      *(_WORD *)(v92 + 12) = 2082;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 80) = sub_23EAC8(v105, v91, v126);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 80, v0 + 88);
      swift_bridgeObjectRelease_n(v91, 3);
      *(_WORD *)(v92 + 22) = 2082;
      *(_QWORD *)(v0 + 88) = v119;
      v100 = v82;
      v101 = String.init<A>(describing:)(v0 + 88, &type metadata for CodableImage);
      v103 = v102;
      *(_QWORD *)(v0 + 32) = sub_23EAC8(v101, v102, v126);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40);
      swift_bridgeObjectRelease(v103);

      _os_log_impl(&dword_0, v109, type, "Saved cache file \"%{public}s\" for item named \"%{public}s\", value %{public}s", (uint8_t *)v92, 0x20u);
      swift_arrayDestroy(v93, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v93, -1, -1);
      swift_slowDealloc(v92, -1, -1);
      (*(void (**)(uint64_t, uint64_t))(v111 + 8))(v114, v107);
      v104 = *(void **)(v0 + 24);

    }
    else
    {

      swift_bridgeObjectRelease_n(v91, 2);
      v99 = v125;
      v125(v86, v87);
      (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v88, v89);
      v104 = *(void **)(v0 + 24);

    }
    v99(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 192));
    sub_50C60((uint64_t)log, v122);
  }
LABEL_13:
  v64 = *(_QWORD *)(v0 + 216);
  v65 = *(_QWORD *)(v0 + 208);
  v67 = *(_QWORD *)(v0 + 176);
  v66 = *(_QWORD *)(v0 + 184);
  v69 = *(_QWORD *)(v0 + 160);
  v68 = *(_QWORD *)(v0 + 168);
  v71 = *(_QWORD *)(v0 + 144);
  v70 = *(_QWORD *)(v0 + 152);
  swift_task_dealloc(*(_QWORD *)(v0 + 224));
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_9E1838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;

  v7[12] = a6;
  v7[13] = a7;
  v7[10] = a4;
  v7[11] = a5;
  v8 = type metadata accessor for Logger(0);
  v7[14] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[15] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[16] = swift_task_alloc(v10);
  v7[17] = swift_task_alloc(v10);
  v7[18] = swift_task_alloc(v10);
  v7[19] = swift_task_alloc(v10);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EEA10);
  v7[20] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for WidgetMusicRecommendation(0);
  v7[21] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v7[22] = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[23] = swift_task_alloc(v14);
  v7[24] = swift_task_alloc(v14);
  v7[25] = swift_task_alloc(v14);
  v15 = (*(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14AED20) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[26] = swift_task_alloc(v15);
  v7[27] = swift_task_alloc(v15);
  v16 = type metadata accessor for URL(0);
  v7[28] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v7[29] = v17;
  v18 = (*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[30] = swift_task_alloc(v18);
  v7[31] = swift_task_alloc(v18);
  v7[32] = swift_task_alloc(v18);
  return swift_task_switch(sub_9E19A4, 0, 0);
}

uint64_t sub_9E19A4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  BOOL v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  BOOL v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t *v59;
  __n128 v60;
  uint64_t v61;
  void (*v62)(uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __n128 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  NSObject *v77;
  NSObject *v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  NSObject *v102;
  os_log_type_t v103;
  BOOL v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  __n128 v113;
  void (*v114)(uint64_t, uint64_t);
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  __n128 v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  os_log_t loga;
  os_log_t log;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t *v138;
  os_log_t v139;
  os_log_t v140;
  NSObject *v141;
  uint64_t v142;
  void (*v143)(uint64_t, uint64_t);
  uint64_t v144;
  void (*v145)(uint64_t, uint64_t);
  uint64_t v146;
  _QWORD *v147;
  uint64_t v148;
  uint64_t v149;
  _QWORD *v150;
  _QWORD *v151;
  uint64_t *v152;
  uint64_t v153;
  _QWORD *v154;
  uint64_t v155[2];

  v1 = v0;
  v3 = v0 + 10;
  v2 = v0[10];
  v4 = v0 + 3;
  v5 = v0[28];
  v6 = v0[29];
  v7 = v3[16];
  sub_5C238(v2, v7, &qword_14AED20);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  v9 = v8(v7, 1, v5);
  v10 = v3[18];
  v11 = v3[19];
  v12 = v3[16];
  v13 = v3[17];
  if (v9 == 1)
  {
    sub_56024(v3[16], &qword_14AED20);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v13, 1, 1, v10);
    goto LABEL_4;
  }
  URL.appending(_:)(v1[11], v1[12], 1);
  v14 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v14(v12, v10);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(v13, 0, 1, v10);
  if (v8(v13, 1, v10) == 1)
  {
LABEL_4:
    v151 = v4;
    v16 = v1[15];
    v15 = v1[16];
    v17 = v1[14];
    v18 = v1[12];
    v19 = v1[10];
    sub_56024(v1[27], &qword_14AED20);
    v20 = type metadata accessor for WidgetDiskCache(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v15, v19 + *(int *)(v20 + 24), v17);
    v21 = swift_bridgeObjectRetain_n(v18, 2);
    v22 = Logger.logObject.getter(v21);
    v23 = static os_log_type_t.default.getter();
    v24 = os_log_type_enabled(v22, v23);
    v25 = v1[15];
    v26 = v1[12];
    if (v24)
    {
      v27 = v1[11];
      v146 = v1[14];
      v142 = v1[16];
      v28 = (uint8_t *)swift_slowAlloc(12, -1);
      v29 = swift_slowAlloc(32, -1);
      v155[0] = v29;
      *(_DWORD *)v28 = 136446210;
      swift_bridgeObjectRetain();
      v1[2] = sub_23EAC8(v27, v26, v155);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v3 - 8, v151);
      swift_bridgeObjectRelease_n(v26, 3);
      _os_log_impl(&dword_0, v22, v23, "Unable to get widget cache url for saving item named \"%{public}s\"", v28, 0xCu);
      swift_arrayDestroy(v29, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v29, -1, -1);
      swift_slowDealloc(v28, -1, -1);
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v142, v146);

    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(v25 + 8))(v1[16], v1[14]);
      swift_bridgeObjectRelease_n(v26, 2);

    }
    goto LABEL_13;
  }
  v30 = v1[21];
  v31 = v1[22];
  v32 = v1[20];
  v33 = v1[13];
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v1[29] + 32))(v1[32], v1[27], v1[28]);
  sub_5C238(v33, v32, &qword_14EEA10);
  v152 = v3 - 4;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v32, 1, v30) == 1)
  {
    v138 = v3 - 6;
    v143 = v14;
    v35 = v1[31];
    v34 = v1[32];
    v37 = v1[28];
    v36 = v1[29];
    v39 = v1[19];
    v38 = v1[20];
    v41 = v1[14];
    v40 = v1[15];
    v147 = v1;
    v42 = v1[12];
    v43 = v147[10];
    sub_56024(v38, &qword_14EEA10);
    v139 = (os_log_t)type metadata accessor for WidgetDiskCache(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 16))(v39, v43 + SLODWORD(v139[3].isa), v41);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v35, v34, v37);
    v44 = v42;
    v1 = v147;
    v45 = swift_bridgeObjectRetain_n(v44, 2);
    v46 = Logger.logObject.getter(v45);
    v47 = static os_log_type_t.default.getter();
    v48 = os_log_type_enabled(v46, v47);
    v49 = v147[31];
    v50 = v147[28];
    v51 = v147[12];
    if (v48)
    {
      v52 = v3 - 5;
      v135 = v147[15];
      v53 = v147[11];
      v131 = v147[19];
      loga = (os_log_t)v147[14];
      v54 = swift_slowAlloc(22, -1);
      v55 = swift_slowAlloc(64, -1);
      v155[0] = v55;
      *(_DWORD *)v54 = 136446466;
      swift_bridgeObjectRetain();
      v147[4] = sub_23EAC8(v53, v51, v155);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v138, v52);
      swift_bridgeObjectRelease_n(v51, 3);
      *(_WORD *)(v54 + 12) = 2082;
      v56 = sub_4DD24((unint64_t *)&qword_14D3CE0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v57 = dispatch thunk of CustomStringConvertible.description.getter(v50, v56);
      v147[5] = sub_23EAC8(v57, v58, v155);
      v59 = v52;
      v1 = v147;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v59, v152);
      v60 = swift_bridgeObjectRelease();
      v61 = v50;
      v62 = v143;
      ((void (*)(uint64_t, uint64_t, __n128))v143)(v49, v61, v60);
      _os_log_impl(&dword_0, v46, v47, "Nil value set for item named \"%{public}s\", removing file %{public}s", (uint8_t *)v54, 0x16u);
      swift_arrayDestroy(v55, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v55, -1, -1);
      swift_slowDealloc(v54, -1, -1);
      (*(void (**)(uint64_t, os_log_t))(v135 + 8))(v131, loga);
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(v147[15] + 8))(v147[19], v147[14]);
      v70 = swift_bridgeObjectRelease_n(v51, 2);
      v71 = v50;
      v62 = v143;
      ((void (*)(uint64_t, uint64_t, __n128))v143)(v49, v71, v70);
    }

    v72 = v1[32];
    v73 = v1[28];
    v74 = swift_task_alloc(32);
    *(_QWORD *)(v74 + 16) = v72;
    v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_14BA6D0);
    OS_dispatch_queue.sync<A>(execute:)(sub_9E4B74, v74, v75);
    v62(v72, v73);
    swift_task_dealloc(v74);
  }
  else
  {
    v63 = v1[25];
    v64 = v1[21];
    sub_5C04C(v1[20], v63, type metadata accessor for WidgetMusicRecommendation);
    v65 = type metadata accessor for JSONEncoder(0);
    v66 = swift_allocObject(v65, *(unsigned int *)(v65 + 48), *(unsigned __int16 *)(v65 + 52));
    v67 = JSONEncoder.init()(v66);
    v68 = sub_4DD24(&qword_14EEA28, type metadata accessor for WidgetMusicRecommendation, (uint64_t)&unk_108FCF0);
    v69 = dispatch thunk of JSONEncoder.encode<A>(_:)(v63, v64, v68);
    v148 = v1[32];
    v76 = v69;
    v78 = v77;
    swift_release(v67);
    v140 = (os_log_t)type metadata accessor for WidgetDiskCache(0);
    v79 = (_QWORD *)swift_task_alloc(48);
    v79[2] = v76;
    v79[3] = v78;
    v79[4] = v148;
    OS_dispatch_queue.sync<A>(execute:)(sub_9E4B8C, v79, (char *)&type metadata for () + 8);
    v132 = v76;
    log = v78;
    v154 = v4;
    v145 = v14;
    v93 = v1[29];
    v92 = v1[30];
    v94 = v1[28];
    v136 = v1[25];
    v127 = v1[32];
    v129 = v1[24];
    v95 = v1[18];
    v97 = v1[14];
    v96 = v1[15];
    v98 = v1[12];
    v150 = v1;
    v99 = v1[10];
    swift_task_dealloc(v79);
    v100 = v99 + SLODWORD(v140[3].isa);
    v1 = v150;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v96 + 16))(v95, v100, v97);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v93 + 16))(v92, v127, v94);
    sub_5BDB8(v136, v129, type metadata accessor for WidgetMusicRecommendation);
    v101 = swift_bridgeObjectRetain_n(v98, 2);
    v102 = Logger.logObject.getter(v101);
    v103 = static os_log_type_t.default.getter();
    v141 = v102;
    v104 = os_log_type_enabled(v102, v103);
    v105 = v150[30];
    v106 = v150[28];
    v107 = v150[24];
    v137 = v150[25];
    if (v104)
    {
      v124 = v150[23];
      v125 = v150[21];
      v126 = v150[15];
      v128 = v150[14];
      v130 = v150[18];
      v108 = v150[12];
      v122 = v150[11];
      v109 = swift_slowAlloc(32, -1);
      v123 = swift_slowAlloc(96, -1);
      v155[0] = v123;
      *(_DWORD *)v109 = 136446722;
      v110 = sub_4DD24((unint64_t *)&qword_14D3CE0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v111 = dispatch thunk of CustomStringConvertible.description.getter(v106, v110);
      v150[8] = sub_23EAC8(v111, v112, v155);
      v1 = v150;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v3 - 2, v3 - 1);
      v113 = swift_bridgeObjectRelease();
      v114 = v145;
      ((void (*)(uint64_t, uint64_t, __n128))v145)(v105, v106, v113);
      *(_WORD *)(v109 + 12) = 2082;
      swift_bridgeObjectRetain();
      v150[9] = sub_23EAC8(v122, v108, v155);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v3 - 1, v3);
      swift_bridgeObjectRelease_n(v108, 3);
      *(_WORD *)(v109 + 22) = 2082;
      sub_5BDB8(v107, v124, type metadata accessor for WidgetMusicRecommendation);
      v115 = String.init<A>(describing:)(v124, v125);
      v150[3] = sub_23EAC8(v115, v116, v155);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v154, v3 - 6);
      swift_bridgeObjectRelease();
      sub_5C0DC(v107, type metadata accessor for WidgetMusicRecommendation);
      _os_log_impl(&dword_0, v141, v103, "Saved cache file \"%{public}s\" for item named \"%{public}s\", value %{public}s", (uint8_t *)v109, 0x20u);
      swift_arrayDestroy(v123, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v123, -1, -1);
      swift_slowDealloc(v109, -1, -1);
      (*(void (**)(uint64_t, uint64_t))(v126 + 8))(v130, v128);
      sub_5C0DC(v137, type metadata accessor for WidgetMusicRecommendation);

    }
    else
    {
      v117 = v150[18];
      v118 = v150[14];
      v119 = v150[15];
      v120 = v150[12];
      sub_5C0DC(v107, type metadata accessor for WidgetMusicRecommendation);
      v121 = swift_bridgeObjectRelease_n(v120, 2);
      v114 = v145;
      ((void (*)(uint64_t, uint64_t, __n128))v145)(v105, v106, v121);
      (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v117, v118);
      sub_5C0DC(v137, type metadata accessor for WidgetMusicRecommendation);

    }
    v114(v1[32], v1[28]);
    sub_50C60(v132, (unint64_t)log);
  }
LABEL_13:
  v81 = v1[31];
  v80 = v1[32];
  v82 = v1[30];
  v84 = v1[26];
  v83 = v1[27];
  v86 = v1[24];
  v85 = v1[25];
  v87 = v1[23];
  v88 = v1;
  v89 = v1[20];
  v90 = v88[19];
  v144 = v88[18];
  v149 = v88[17];
  v153 = v88[16];
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  swift_task_dealloc(v144);
  swift_task_dealloc(v149);
  swift_task_dealloc(v153);
  return ((uint64_t (*)(void))v88[1])();
}

void sub_9E26D8(char *a1)
{
  sub_A316EC(*a1);
}

void sub_9E26E4()
{
  char *v0;

  sub_4D84D8(*v0);
}

void sub_9E26EC()
{
  __asm { BR              X10 }
}

uint64_t sub_9E2728(uint64_t a1)
{
  String.hash(into:)(a1, 0x61656C655277656ELL, 0xEB00000000736573);
  return swift_bridgeObjectRelease(0xEB00000000736573);
}

void sub_9E27BC(uint64_t a1)
{
  char *v1;

  sub_4D8CF8(a1, *v1);
}

unint64_t sub_9E27C4@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_9E5728(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_9E27F0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_9E2820 + 4 * byte_108FA75[*v0]))();
}

void sub_9E2820(_QWORD *a1@<X8>)
{
  *a1 = 0x61656C655277656ELL;
  a1[1] = 0xEB00000000736573;
}

void sub_9E2844(char *a1@<X8>)
{
  strcpy(a1, "stationsForYou");
  a1[15] = -18;
}

void sub_9E286C(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000015;
  a1[1] = 0x80000000010C3960;
}

void sub_9E288C(_QWORD *a1@<X8>)
{
  *a1 = 0x536B73417473756ALL;
  a1[1] = 0xEB00000000697269;
}

void sub_9E28B0(_QWORD *a1@<X8>)
{
  *a1 = &off_133F6B8;
}

uint64_t sub_9E28C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_9E5770();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_9E291C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_9E5770();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

unint64_t sub_9E2968()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  Swift::String v6;
  Swift::String v7;
  int *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  Swift::String v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  char v21;
  uint64_t v22;
  void *v23;
  void *v24;
  Swift::String v25;
  Swift::String v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  Swift::String v33;
  Swift::String v34;
  uint64_t v35;
  Swift::String v36;
  Swift::String v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  void *v42;
  Swift::String v43;
  Swift::String v44;
  Swift::String v45;
  uint64_t v47;
  char v48;
  Swift::String v49;
  unint64_t v50;
  unint64_t v51;

  v1 = v0;
  v2 = type metadata accessor for Date(0);
  v47 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = 0xD00000000000001ALL;
  v51 = 0x80000000010FB220;
  v49._countAndFlagsBits = 0;
  v49._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(17);
  swift_bridgeObjectRelease();
  strcpy((char *)&v49, "fetchDate: \"");
  BYTE5(v49._object) = 0;
  HIWORD(v49._object) = -5120;
  v5 = sub_4DD24(&qword_14C45C8, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  v6._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v2, v5);
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  v7._countAndFlagsBits = 2108450;
  v7._object = (void *)0xE300000000000000;
  String.append(_:)(v7);
  String.append(_:)(v49);
  swift_bridgeObjectRelease();
  v49._countAndFlagsBits = 0;
  v49._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  v49._countAndFlagsBits = 0x617A696C61636F6CLL;
  v49._object = (void *)0xEF22203A6E6F6974;
  v8 = (int *)type metadata accessor for WidgetMusicRecommendation(0);
  v9 = (uint64_t *)(v0 + v8[5]);
  v10 = *v9;
  v11 = v9[1];
  swift_bridgeObjectRetain();
  v12 = Optional<A>.description.getter(v10, v11);
  v14 = v13;
  swift_bridgeObjectRelease();
  v15._countAndFlagsBits = v12;
  v15._object = v14;
  String.append(_:)(v15);
  swift_bridgeObjectRelease();
  v16._countAndFlagsBits = 2108450;
  v16._object = (void *)0xE300000000000000;
  String.append(_:)(v16);
  String.append(_:)(v49);
  swift_bridgeObjectRelease();
  v49._countAndFlagsBits = 0;
  v49._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(23);
  swift_bridgeObjectRelease();
  v49._countAndFlagsBits = 0xD000000000000012;
  v49._object = (void *)0x80000000010FB240;
  if (qword_14ABEB8 != -1)
    swift_once(&qword_14ABEB8, sub_9E2E64);
  v17 = __swift_project_value_buffer((uint64_t)v8, (uint64_t)qword_1581700);
  v18 = sub_9E5228(v1, v17);
  if ((v18 & 1) != 0)
  {
    v19 = 0x4072C00000000000;
LABEL_12:
    v20 = *(double *)&v19;
    goto LABEL_13;
  }
  if (qword_14AB658 != -1)
    v18 = swift_once(&qword_14AB658, sub_667014);
  if (!qword_1580B90)
  {
    v19 = 0x40DC200000000000;
    goto LABEL_12;
  }
  v18 = sub_666EE8();
  v20 = *(double *)&v18;
  if ((v21 & 1) != 0)
    v20 = 28800.0;
LABEL_13:
  Date.addingTimeInterval(_:)(v18, v20);
  v22 = dispatch thunk of CustomStringConvertible.description.getter(v2, v5);
  v24 = v23;
  (*(void (**)(char *, uint64_t))(v47 + 8))(v4, v2);
  v25._countAndFlagsBits = v22;
  v25._object = v24;
  String.append(_:)(v25);
  swift_bridgeObjectRelease();
  v26._countAndFlagsBits = 2108450;
  v26._object = (void *)0xE300000000000000;
  String.append(_:)(v26);
  String.append(_:)(v49);
  swift_bridgeObjectRelease();
  strcpy((char *)&v49, "title: \"");
  BYTE1(v49._object) = 0;
  WORD1(v49._object) = 0;
  HIDWORD(v49._object) = -402653184;
  v27 = (uint64_t *)(v1 + v8[6]);
  v28 = *v27;
  v29 = v27[1];
  swift_bridgeObjectRetain();
  v30 = Optional<A>.description.getter(v28, v29);
  v32 = v31;
  swift_bridgeObjectRelease();
  v33._countAndFlagsBits = v30;
  v33._object = v32;
  String.append(_:)(v33);
  swift_bridgeObjectRelease();
  v34._countAndFlagsBits = 2108450;
  v34._object = (void *)0xE300000000000000;
  String.append(_:)(v34);
  String.append(_:)(v49);
  swift_bridgeObjectRelease();
  strcpy((char *)&v49, "kind: \"");
  v49._object = (void *)0xE700000000000000;
  v48 = *(_BYTE *)(v1 + v8[7]);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EEB38);
  v36._countAndFlagsBits = String.init<A>(describing:)(&v48, v35);
  String.append(_:)(v36);
  swift_bridgeObjectRelease();
  v37._countAndFlagsBits = 2108450;
  v37._object = (void *)0xE300000000000000;
  String.append(_:)(v37);
  String.append(_:)(v49);
  swift_bridgeObjectRelease();
  strcpy((char *)&v49, "items: \"");
  BYTE1(v49._object) = 0;
  WORD1(v49._object) = 0;
  HIDWORD(v49._object) = -402653184;
  v38 = type metadata accessor for WidgetMusicItem(0);
  v39 = swift_bridgeObjectRetain();
  v40 = Array.description.getter(v39, v38);
  v42 = v41;
  swift_bridgeObjectRelease();
  v43._countAndFlagsBits = v40;
  v43._object = v42;
  String.append(_:)(v43);
  swift_bridgeObjectRelease();
  v44._countAndFlagsBits = 2108450;
  v44._object = (void *)0xE300000000000000;
  String.append(_:)(v44);
  String.append(_:)(v49);
  swift_bridgeObjectRelease();
  v45._countAndFlagsBits = 41;
  v45._object = (void *)0xE100000000000000;
  String.append(_:)(v45);
  return v50;
}

uint64_t sub_9E2E64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int *v7;
  uint64_t v8;
  id v9;
  id v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  _QWORD *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v0 = type metadata accessor for WidgetMusicItem(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Date(0);
  v27 = *(_QWORD *)(v4 - 8);
  v28 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (int *)type metadata accessor for WidgetMusicRecommendation(0);
  __swift_allocate_value_buffer((uint64_t)v7, qword_1581700);
  v8 = __swift_project_value_buffer((uint64_t)v7, (uint64_t)qword_1581700);
  static Date.now.getter(v8);
  v9 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v10 = objc_msgSend(v9, "preferredLocalizations");
  v11 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v10, &type metadata for String);

  if (v11[2])
  {
    v12 = v11[4];
    v25 = v11[5];
    v26 = v12;
    swift_bridgeObjectRetain();
  }
  else
  {
    v25 = 0;
    v26 = 0;
  }

  swift_bridgeObjectRelease();
  if (qword_14AB610 != -1)
    swift_once(&qword_14AB610, sub_626AEC);
  v13 = *(_QWORD *)algn_1580B28;
  v24 = qword_1580B20;
  v14 = qword_14AAC60;
  swift_bridgeObjectRetain();
  if (v14 != -1)
    swift_once(&qword_14AAC60, sub_284680);
  v15 = __swift_project_value_buffer(v0, (uint64_t)qword_157FC38);
  sub_5BDB8(v15, (uint64_t)v3, type metadata accessor for WidgetMusicItem);
  v16 = static Array._allocateBufferUninitialized(minimumCapacity:)(8, v0);
  *(_QWORD *)(v16 + 16) = 8;
  v17 = v16 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  sub_5BDB8((uint64_t)v3, v17, type metadata accessor for WidgetMusicItem);
  v18 = *(_QWORD *)(v1 + 72);
  sub_5BDB8((uint64_t)v3, v17 + v18, type metadata accessor for WidgetMusicItem);
  sub_5BDB8((uint64_t)v3, v17 + 2 * v18, type metadata accessor for WidgetMusicItem);
  sub_5BDB8((uint64_t)v3, v17 + 3 * v18, type metadata accessor for WidgetMusicItem);
  sub_5BDB8((uint64_t)v3, v17 + 4 * v18, type metadata accessor for WidgetMusicItem);
  sub_5BDB8((uint64_t)v3, v17 + 5 * v18, type metadata accessor for WidgetMusicItem);
  sub_5BDB8((uint64_t)v3, v17 + 6 * v18, type metadata accessor for WidgetMusicItem);
  sub_5C04C((uint64_t)v3, v17 - v18 + 8 * v18, type metadata accessor for WidgetMusicItem);
  result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v27 + 32))(v8, v6, v28);
  v20 = (_QWORD *)(v8 + v7[5]);
  v21 = v25;
  *v20 = v26;
  v20[1] = v21;
  v22 = (uint64_t *)(v8 + v7[6]);
  *v22 = v24;
  v22[1] = v13;
  *(_BYTE *)(v8 + v7[7]) = 5;
  *(_QWORD *)(v8 + v7[8]) = v16;
  return result;
}

uint64_t sub_9E315C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EEB08);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  v11 = sub_9E51A0();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for WidgetMusicRecommendation.CodingKeys, &type metadata for WidgetMusicRecommendation.CodingKeys, v11, v9, v10);
  v32 = 0;
  v12 = type metadata accessor for Date(0);
  v13 = sub_4DD24(&qword_14C45C0, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v3, &v32, v5, v12, v13);
  if (!v2)
  {
    v14 = (int *)type metadata accessor for WidgetMusicRecommendation(0);
    v15 = (uint64_t *)(v3 + v14[5]);
    v16 = *v15;
    v17 = v15[1];
    v31 = 1;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v16, v17, &v31, v5);
    v18 = (uint64_t *)(v3 + v14[6]);
    v19 = *v18;
    v20 = v18[1];
    v30 = 2;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v19, v20, &v30, v5);
    v29 = *(_BYTE *)(v3 + v14[7]);
    v28 = 3;
    v21 = sub_9E51E4();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(&v29, &v28, v5, &type metadata for WidgetMusicRecommendationKind, v21);
    v27 = *(_QWORD *)(v3 + v14[8]);
    v26 = 4;
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_14C3BD0);
    v23 = sub_35F26C(&qword_14C3BE8, (unint64_t *)&unk_14C3BF0, (uint64_t)&unk_106AF88, (uint64_t)&protocol conformance descriptor for <A> [A]);
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v27, &v26, v5, v22, v23);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_9E3398(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  _QWORD *v34;
  uint64_t v35;
  char v36;
  char v37;
  uint64_t v38;

  v29 = a2;
  v30 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v31 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EEB28);
  __chkstk_darwin(v32);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (int *)type metadata accessor for WidgetMusicRecommendation(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1[3];
  v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v11);
  v12 = sub_9E51A0();
  v33 = v6;
  v13 = v34;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for WidgetMusicRecommendation.CodingKeys, &type metadata for WidgetMusicRecommendation.CodingKeys, v12, v11, v10);
  if (v13)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  else
  {
    v34 = a1;
    v14 = (uint64_t)v9;
    BYTE3(v38) = 0;
    v15 = sub_4DD24(&qword_14C45B0, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
    v16 = v30;
    v17 = v31;
    v18 = v32;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v30, (char *)&v38 + 3, v32, v30, v15);
    (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v14, v17, v16);
    BYTE2(v38) = 1;
    v19 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)((char *)&v38 + 2, v18);
    v20 = (uint64_t *)(v14 + v7[5]);
    *v20 = v19;
    v20[1] = v21;
    BYTE1(v38) = 2;
    v22 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)((char *)&v38 + 1, v18);
    v23 = (uint64_t *)(v14 + v7[6]);
    *v23 = v22;
    v23[1] = v24;
    v37 = 3;
    v25 = sub_9E57B4();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&v38, &type metadata for WidgetMusicRecommendationKind, &v37, v18, &type metadata for WidgetMusicRecommendationKind, v25);
    *(_BYTE *)(v14 + v7[7]) = v38;
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_14C3BD0);
    v36 = 4;
    v27 = sub_35F26C(&qword_14C3BD8, &qword_14C3BE0, (uint64_t)&unk_106AFB0, (uint64_t)&protocol conformance descriptor for <A> [A]);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v26, &v36, v18, v26, v27);
    MEMORY[0x600000000](v33, v18);
    *(_QWORD *)(v14 + v7[8]) = v35;
    sub_5BDB8(v14, v29, type metadata accessor for WidgetMusicRecommendation);
    __swift_destroy_boxed_opaque_existential_1(v34);
    sub_5C0DC(v14, type metadata accessor for WidgetMusicRecommendation);
  }
}

uint64_t sub_9E3758()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_9E378C + 4 * byte_108FA7A[*v0]))(0x7461446863746566, 0xE900000000000065);
}

uint64_t sub_9E378C()
{
  return 0x617A696C61636F6CLL;
}

uint64_t sub_9E37AC()
{
  return 0x656C746974;
}

uint64_t sub_9E37C0()
{
  return 1684957547;
}

uint64_t sub_9E37D0()
{
  return 0x736D657469;
}

void sub_9E37E4(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  v4 = sub_9E599C(a1, a2);
  swift_bridgeObjectRelease();
  *a3 = v4;
}

void sub_9E3820(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_9E382C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_9E51A0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_9E3854(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_9E51A0();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_9E387C(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_9E3398(a1, a2);
}

uint64_t sub_9E3890(_QWORD *a1)
{
  return sub_9E315C(a1);
}

uint64_t sub_9E38AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t result;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t ObjectType;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unsigned __int8 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD v72[4];
  char v73[9];

  v1 = type metadata accessor for WidgetDiskCache(0);
  v67 = *(_QWORD *)(v1 - 8);
  v2 = *(_QWORD *)(v67 + 64);
  __chkstk_darwin(v1);
  v66 = (uint64_t)&v56 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = (uint64_t *)&unk_14AD5A0;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD5A0);
  __chkstk_darwin(v4);
  v6 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v56 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EEA10);
  v65 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v63 = (uint64_t)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = v11;
  __chkstk_darwin(v12);
  v14 = (char *)&v56 - v13;
  v15 = type metadata accessor for WidgetRecommendationDiskCache(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = v0 + OBJC_IVAR____TtC16MusicApplication33RecommendationsWidgetDataProvider_cache;
  v18 = 0;
  v61 = v2 + 7;
  v59 = v9;
  v60 = (char *)&type metadata for () + 8;
  v57 = v17;
  v58 = v14;
  do
  {
    v68 = v18;
    v22 = *((_BYTE *)&off_133DA08 + v18 + 32);
    sub_5BDB8(v62, (uint64_t)v17, type metadata accessor for WidgetRecommendationDiskCache);
    v23 = type metadata accessor for WidgetMusicRecommendation(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v14, 1, 1, v23);
    v73[0] = v22;
    v24 = String.init<A>(describing:)(v73, &type metadata for WidgetMusicRecommendationKind);
    v70 = v25;
    v71 = v24;
    static TaskPriority.userInitiated.getter(v26);
    v27 = type metadata accessor for TaskPriority(0);
    v69 = *(_QWORD *)(v27 - 8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v69 + 56))(v9, 0, 1, v27);
    v28 = v66;
    sub_5BDB8((uint64_t)v17, v66, type metadata accessor for WidgetDiskCache);
    v29 = v63;
    sub_5C238((uint64_t)v14, v63, &qword_14EEA10);
    v30 = *(unsigned __int8 *)(v67 + 80);
    v31 = (v30 + 32) & ~v30;
    v32 = v6;
    v33 = (v61 + v31) & 0xFFFFFFFFFFFFFFF8;
    v34 = *(unsigned __int8 *)(v65 + 80);
    v35 = v3;
    v36 = (v34 + v33 + 16) & ~v34;
    v37 = swift_allocObject(&unk_1392D28, v36 + v64, v30 | v34 | 7);
    *(_QWORD *)(v37 + 16) = 0;
    v38 = (uint64_t *)(v37 + 16);
    *(_QWORD *)(v37 + 24) = 0;
    v39 = v28;
    v40 = v70;
    sub_5C04C(v39, v37 + v31, type metadata accessor for WidgetDiskCache);
    v41 = (uint64_t *)(v37 + v33);
    v6 = v32;
    v9 = v59;
    *v41 = v71;
    v41[1] = v40;
    v42 = v37 + v36;
    v3 = v35;
    v43 = v29;
    v44 = v69;
    sub_9E4A2C(v43, v42);
    sub_5C238((uint64_t)v9, (uint64_t)v6, v35);
    LODWORD(v31) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v44 + 48))(v6, 1, v27);
    v45 = swift_bridgeObjectRetain();
    if ((_DWORD)v31 == 1)
    {
      sub_56024((uint64_t)v6, v35);
      v46 = 0;
      v47 = *v38;
      if (*v38)
        goto LABEL_6;
    }
    else
    {
      v53 = TaskPriority.rawValue.getter(v45);
      (*(void (**)(char *, uint64_t))(v44 + 8))(v6, v27);
      v46 = v53;
      v47 = *v38;
      if (*v38)
      {
LABEL_6:
        v48 = *(_QWORD *)(v37 + 24);
        ObjectType = swift_getObjectType();
        swift_unknownObjectRetain(v47);
        v50 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v48);
        v52 = v51;
        swift_unknownObjectRelease(v47);
        goto LABEL_9;
      }
    }
    v50 = 0;
    v52 = 0;
LABEL_9:
    v54 = v68;
    v55 = swift_allocObject(&unk_1392D50, 32, 7);
    *(_QWORD *)(v55 + 16) = &unk_14EEA20;
    *(_QWORD *)(v55 + 24) = v37;
    if (v52 | v50)
    {
      v72[0] = 0;
      v72[1] = 0;
      v19 = v72;
      v72[2] = v50;
      v72[3] = v52;
    }
    else
    {
      v19 = 0;
    }
    v17 = v57;
    v14 = v58;
    v18 = v54 + 1;
    v20 = swift_task_create(v46 | 0x1000, v19, v60, &unk_15109B0, v55);
    sub_56024((uint64_t)v9, v3);
    swift_release(v20);
    sub_56024((uint64_t)v14, &qword_14EEA10);
    swift_bridgeObjectRelease(v40);
    result = sub_5C0DC((uint64_t)v17, type metadata accessor for WidgetRecommendationDiskCache);
  }
  while (v18 != 5);
  return result;
}

id sub_9E3D20()
{
  uint64_t v0;
  id result;

  v0 = type metadata accessor for RecommendationsWidgetDataProvider(0);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  result = sub_9E3D5C();
  qword_1581718 = (uint64_t)result;
  return result;
}

id sub_9E3D5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  id result;
  void *v23;
  uint64_t v24;

  v1 = v0;
  v2 = type metadata accessor for MusicDataRequest.ExecutionMethod(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_305834(0x6E656D6D6F636552, 0xEF736E6F69746164, (char *)(v1 + OBJC_IVAR____TtC16MusicApplication33RecommendationsWidgetDataProvider_cache));
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for MusicDataRequest.ExecutionMethod.firstParty(_:), v2);
  static MusicDataRequest.preferredExecutionMethod.setter(v5);
  v6 = objc_msgSend((id)objc_opt_self(NSProcessInfo), "processInfo");
  v7 = objc_msgSend(v6, "processName");
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v10 = v9;

  if (v8 == 0x646957636973754DLL && v10 == 0xEC00000073746567)
  {

    swift_bridgeObjectRelease(0xEC00000073746567);
  }
  else
  {
    v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v10, 0x646957636973754DLL, 0xEC00000073746567, 0);

    swift_bridgeObjectRelease(v10);
    if ((v12 & 1) == 0)
      return (id)v1;
  }
  if (qword_14ABEC8 != -1)
    swift_once(&qword_14ABEC8, sub_9E482C);
  v13 = type metadata accessor for Logger(0);
  v14 = __swift_project_value_buffer(v13, (uint64_t)qword_14EE880);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter(v15);
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v17 = 0;
    _os_log_impl(&dword_0, v15, v16, "running in widget process, disabling fallback cache", v17, 2u);
    swift_slowDealloc(v17, -1, -1);
  }

  v18 = objc_msgSend((id)objc_opt_self(MPMediaLibrary), "defaultMediaLibrary");
  v19 = objc_msgSend(v18, "artworkDataSource");
  if (v19)
  {
    v20 = v19;
    objc_opt_self(MPMediaLibraryArtworkDataSource);
    v21 = (void *)swift_dynamicCastObjCClass(v20);
    if (v21)
      objc_msgSend(v21, "setUsesFallbackCache:", 0);
    swift_unknownObjectRelease(v20);
  }
  result = objc_msgSend((id)objc_opt_self(MPStoreArtworkDataSource), "sharedStoreArtworkDataSource");
  if (result)
  {
    v23 = result;
    objc_msgSend(result, "setUsesFallbackCache:", 0);

    return (id)v1;
  }
  __break(1u);
  return result;
}

double sub_9E4050()
{
  uint64_t v0;
  double result;

  sub_5C0DC(v0 + OBJC_IVAR____TtC16MusicApplication33RecommendationsWidgetDataProvider_cache, type metadata accessor for WidgetRecommendationDiskCache);
  *(_QWORD *)&result = swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52)).n128_u64[0];
  return result;
}

uint64_t sub_9E4088()
{
  return type metadata accessor for RecommendationsWidgetDataProvider(0);
}

uint64_t type metadata accessor for RecommendationsWidgetDataProvider(uint64_t a1)
{
  return sub_6345C(a1, qword_14EE8C8, (uint64_t)&nominal type descriptor for RecommendationsWidgetDataProvider);
}

uint64_t sub_9E40A4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for WidgetDiskCache(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 1, &v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t *sub_9E4110(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  id v18;

  v4 = type metadata accessor for WidgetDiskCache(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v10);
  }
  else
  {
    v6 = v4;
    v7 = type metadata accessor for URL(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AED20);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = *(int *)(v6 + 20);
    v12 = *(void **)((char *)a2 + v11);
    *(uint64_t *)((char *)a1 + v11) = (uint64_t)v12;
    v13 = *(int *)(v6 + 24);
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = type metadata accessor for Logger(0);
    v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
    v18 = v12;
    v17(v14, v15, v16);
  }
  return a1;
}

uint64_t sub_9E4234(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = type metadata accessor for URL(0);
  v3 = *(_QWORD *)(v2 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2))
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  v4 = type metadata accessor for WidgetDiskCache(0);

  v5 = a1 + *(int *)(v4 + 24);
  v6 = type metadata accessor for Logger(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

char *sub_9E42C8(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  id v15;

  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AED20);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(a1, a2, v4);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  v7 = type metadata accessor for WidgetDiskCache(0);
  v8 = *(int *)(v7 + 20);
  v9 = *(void **)&a2[v8];
  *(_QWORD *)&a1[v8] = v9;
  v10 = *(int *)(v7 + 24);
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = type metadata accessor for Logger(0);
  v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  v15 = v9;
  v14(v11, v12, v13);
  return a1;
}

char *sub_9E43BC(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(char *, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 24))(a1, a2, v4);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AED20);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(a1, a2, v4);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
LABEL_7:
  v10 = type metadata accessor for WidgetDiskCache(0);
  v11 = *(int *)(v10 + 20);
  v12 = *(void **)&a2[v11];
  v13 = *(void **)&a1[v11];
  *(_QWORD *)&a1[v11] = v12;
  v14 = v12;

  v15 = *(int *)(v10 + 24);
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = type metadata accessor for Logger(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

char *sub_9E44FC(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AED20);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(a1, a2, v4);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  v7 = type metadata accessor for WidgetDiskCache(0);
  *(_QWORD *)&a1[*(int *)(v7 + 20)] = *(_QWORD *)&a2[*(int *)(v7 + 20)];
  v8 = *(int *)(v7 + 24);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = type metadata accessor for Logger(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  return a1;
}

char *sub_9E45E0(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(char *, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 40))(a1, a2, v4);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AED20);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(a1, a2, v4);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
LABEL_7:
  v10 = type metadata accessor for WidgetDiskCache(0);
  v11 = *(int *)(v10 + 20);
  v12 = *(void **)&a1[v11];
  *(_QWORD *)&a1[v11] = *(_QWORD *)&a2[v11];

  v13 = *(int *)(v10 + 24);
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = type metadata accessor for Logger(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  return a1;
}

uint64_t sub_9E471C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_9E4728);
}

uint64_t sub_9E4728(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WidgetDiskCache(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_9E4764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_9E4770);
}

uint64_t sub_9E4770(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WidgetDiskCache(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for WidgetRecommendationDiskCache(uint64_t a1)
{
  return sub_6345C(a1, qword_14EE9D8, (uint64_t)&nominal type descriptor for WidgetRecommendationDiskCache);
}

uint64_t sub_9E47C4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for WidgetDiskCache(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 1, &v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_9E482C()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  __swift_allocate_value_buffer(v0, qword_14EE880);
  __swift_project_value_buffer(v0, (uint64_t)qword_14EE880);
  return static Logger.music(_:)(0xD000000000000021, 0x800000000108FA70);
}

uint64_t type metadata accessor for WidgetMusicRecommendation(uint64_t a1)
{
  return sub_6345C(a1, qword_14EEAA8, (uint64_t)&nominal type descriptor for WidgetMusicRecommendation);
}

uint64_t sub_9E48A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = type metadata accessor for WidgetDiskCache(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14EEA10) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v5 + v7 + 16) & ~v7;
  v9 = *(_QWORD *)(v6 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v10 = v0 + v4;
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);

  v13 = v10 + *(int *)(v1 + 24);
  v14 = type metadata accessor for Logger(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  swift_bridgeObjectRelease();
  v15 = type metadata accessor for WidgetMusicRecommendation(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v0 + v8, 1, v15))
  {
    v16 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v0 + v8, v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject(v0, v8 + v9, v3 | v7 | 7);
}

uint64_t sub_9E4A2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EEA10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_9E4A74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v4 = *(_QWORD *)(type metadata accessor for WidgetDiskCache(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14EEA10) - 8) + 80);
  v8 = (v6 + v7 + 16) & ~v7;
  v9 = *(_QWORD *)(v1 + 16);
  v10 = *(_QWORD *)(v1 + 24);
  v11 = v1 + v5;
  v12 = v1 + v6;
  v13 = *(_QWORD *)(v1 + v6);
  v14 = *(_QWORD *)(v12 + 8);
  v15 = v1 + v8;
  v16 = (_QWORD *)swift_task_alloc(dword_14EEA1C);
  *(_QWORD *)(v2 + 16) = v16;
  *v16 = v2;
  v16[1] = sub_50F8C;
  return sub_9E1838(a1, v9, v10, v11, v13, v14, v15);
}

uint64_t sub_9E4B50()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_9E4B74(_BYTE *a1@<X8>)
{
  sub_305CB4(a1);
}

uint64_t sub_9E4B8C()
{
  uint64_t *v0;

  return sub_305DB0(v0[2], v0[3], v0[4]);
}

ValueMetadata *type metadata accessor for WidgetMusicRecommendationKind()
{
  return &type metadata for WidgetMusicRecommendationKind;
}

_QWORD *sub_9E4BBC(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v18);
  }
  else
  {
    v7 = type metadata accessor for Date(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (_QWORD *)((char *)a1 + v8);
    v11 = (_QWORD *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (_QWORD *)((char *)a1 + v9);
    v14 = (_QWORD *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    v17 = *(_QWORD *)((char *)a2 + v16);
    *(_QWORD *)((char *)a1 + v16) = v17;
    swift_bridgeObjectRetain(v12);
    swift_bridgeObjectRetain(v15);
    swift_bridgeObjectRetain(v17);
  }
  return a1;
}

uint64_t sub_9E4C84(uint64_t a1, int *a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[5] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[6] + 8));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[8]));
}

uint64_t sub_9E4CE8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v16 = *(_QWORD *)(a2 + v15);
  *(_QWORD *)(a1 + v15) = v16;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRetain(v16);
  return a1;
}

uint64_t sub_9E4D84(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v10 = v9[1];
  v11 = v8[1];
  v8[1] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  *v13 = *v14;
  v15 = v14[1];
  v16 = v13[1];
  v13[1] = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease(v16);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v17 = a3[8];
  v18 = *(_QWORD *)(a2 + v17);
  v19 = *(_QWORD *)(a1 + v17);
  *(_QWORD *)(a1 + v17) = v18;
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRelease(v19);
  return a1;
}

uint64_t sub_9E4E54(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  return a1;
}

uint64_t sub_9E4ECC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  v12 = v8[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease(v12);
  v13 = a3[6];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  v18 = v14[1];
  *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease(v18);
  v19 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v20 = *(_QWORD *)(a1 + v19);
  *(_QWORD *)(a1 + v19) = *(_QWORD *)(a2 + v19);
  swift_bridgeObjectRelease(v20);
  return a1;
}

uint64_t sub_9E4F70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_9E4F7C);
}

uint64_t sub_9E4F7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 32));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_9E4FF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_9E5004);
}

uint64_t sub_9E5004(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 32)) = (a2 - 1);
  return result;
}

uint64_t sub_9E507C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  result = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_108FB20;
    v4[2] = &unk_108FB20;
    v4[3] = &unk_108FB38;
    v4[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
    return 0;
  }
  return result;
}

unint64_t sub_9E510C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14EEAF0;
  if (!qword_14EEAF0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EEAF8);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_14EEAF0);
  }
  return result;
}

unint64_t sub_9E515C()
{
  unint64_t result;

  result = qword_14EEB00;
  if (!qword_14EEB00)
  {
    result = swift_getWitnessTable(&unk_108FCC8, &type metadata for WidgetMusicRecommendationKind);
    atomic_store(result, (unint64_t *)&qword_14EEB00);
  }
  return result;
}

unint64_t sub_9E51A0()
{
  unint64_t result;

  result = qword_14EEB10;
  if (!qword_14EEB10)
  {
    result = swift_getWitnessTable(&unk_108FDDC, &type metadata for WidgetMusicRecommendation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_14EEB10);
  }
  return result;
}

unint64_t sub_9E51E4()
{
  unint64_t result;

  result = qword_14EEB18;
  if (!qword_14EEB18)
  {
    result = swift_getWitnessTable(&unk_108FBC8, &type metadata for WidgetMusicRecommendationKind);
    atomic_store(result, (unint64_t *)&qword_14EEB18);
  }
  return result;
}

uint64_t sub_9E5228(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  char *v25;
  char v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char v44;
  uint64_t v45;
  int v46;
  int v47;
  char v48;
  char v49;
  uint64_t v50;
  int *v51;
  char *v52;
  char *v53;

  v51 = (int *)type metadata accessor for WidgetMusicRecommendation(0);
  __chkstk_darwin(v51);
  v53 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v52 = (char *)&v50 - v6;
  __chkstk_darwin(v7);
  v9 = (char *)&v50 - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v50 - v11;
  __chkstk_darwin(v13);
  v15 = (char *)&v50 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v50 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v50 - v20;
  v23 = __chkstk_darwin(v22);
  v25 = (char *)&v50 - v24;
  v26 = static Date.== infix(_:_:)(a1, a2, v23);
  sub_5BDB8(a1, (uint64_t)v25, type metadata accessor for WidgetMusicRecommendation);
  sub_5BDB8(a2, (uint64_t)v21, type metadata accessor for WidgetMusicRecommendation);
  if ((v26 & 1) == 0)
    goto LABEL_11;
  v27 = v51[5];
  v28 = &v25[v27];
  v29 = *(_QWORD *)&v25[v27 + 8];
  v30 = &v21[v27];
  v31 = *((_QWORD *)v30 + 1);
  if (!v29)
  {
    if (!v31)
    {
LABEL_17:
      sub_5C0DC((uint64_t)v25, type metadata accessor for WidgetMusicRecommendation);
      sub_5C0DC((uint64_t)v21, type metadata accessor for WidgetMusicRecommendation);
      sub_5BDB8(a1, (uint64_t)v18, type metadata accessor for WidgetMusicRecommendation);
      sub_5BDB8(a2, (uint64_t)v15, type metadata accessor for WidgetMusicRecommendation);
      v34 = (uint64_t)v53;
      goto LABEL_18;
    }
LABEL_11:
    sub_5C0DC((uint64_t)v25, type metadata accessor for WidgetMusicRecommendation);
    sub_5C0DC((uint64_t)v21, type metadata accessor for WidgetMusicRecommendation);
    sub_5BDB8(a1, (uint64_t)v18, type metadata accessor for WidgetMusicRecommendation);
    sub_5BDB8(a2, (uint64_t)v15, type metadata accessor for WidgetMusicRecommendation);
    v34 = (uint64_t)v53;
    goto LABEL_12;
  }
  if (!v31)
    goto LABEL_11;
  if (*(_QWORD *)v28 == *(_QWORD *)v30 && v29 == v31)
    goto LABEL_17;
  v33 = _stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)v28, v29, *(_QWORD *)v30, v31, 0);
  sub_5C0DC((uint64_t)v25, type metadata accessor for WidgetMusicRecommendation);
  sub_5C0DC((uint64_t)v21, type metadata accessor for WidgetMusicRecommendation);
  sub_5BDB8(a1, (uint64_t)v18, type metadata accessor for WidgetMusicRecommendation);
  sub_5BDB8(a2, (uint64_t)v15, type metadata accessor for WidgetMusicRecommendation);
  v34 = (uint64_t)v53;
  if ((v33 & 1) == 0)
    goto LABEL_12;
LABEL_18:
  v38 = v51[6];
  v39 = &v18[v38];
  v40 = *(_QWORD *)&v18[v38 + 8];
  v41 = &v15[v38];
  v42 = *((_QWORD *)v41 + 1);
  if (!v40)
  {
    if (!v42)
    {
LABEL_27:
      sub_5C0DC((uint64_t)v18, type metadata accessor for WidgetMusicRecommendation);
      sub_5C0DC((uint64_t)v15, type metadata accessor for WidgetMusicRecommendation);
      sub_5BDB8(a1, (uint64_t)v12, type metadata accessor for WidgetMusicRecommendation);
      sub_5BDB8(a2, (uint64_t)v9, type metadata accessor for WidgetMusicRecommendation);
      v35 = (uint64_t)v52;
      goto LABEL_28;
    }
LABEL_12:
    sub_5C0DC((uint64_t)v18, type metadata accessor for WidgetMusicRecommendation);
    sub_5C0DC((uint64_t)v15, type metadata accessor for WidgetMusicRecommendation);
    sub_5BDB8(a1, (uint64_t)v12, type metadata accessor for WidgetMusicRecommendation);
    sub_5BDB8(a2, (uint64_t)v9, type metadata accessor for WidgetMusicRecommendation);
    v35 = (uint64_t)v52;
    goto LABEL_13;
  }
  if (!v42)
    goto LABEL_12;
  if (*(_QWORD *)v39 == *(_QWORD *)v41 && v40 == v42)
    goto LABEL_27;
  v44 = _stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)v39, v40, *(_QWORD *)v41, v42, 0);
  sub_5C0DC((uint64_t)v18, type metadata accessor for WidgetMusicRecommendation);
  sub_5C0DC((uint64_t)v15, type metadata accessor for WidgetMusicRecommendation);
  sub_5BDB8(a1, (uint64_t)v12, type metadata accessor for WidgetMusicRecommendation);
  sub_5BDB8(a2, (uint64_t)v9, type metadata accessor for WidgetMusicRecommendation);
  v35 = (uint64_t)v52;
  if ((v44 & 1) == 0)
    goto LABEL_13;
LABEL_28:
  v45 = v51[7];
  v46 = v12[v45];
  v47 = v9[v45];
  if (v46 == 5)
  {
    sub_5C0DC((uint64_t)v9, type metadata accessor for WidgetMusicRecommendation);
    sub_5C0DC((uint64_t)v12, type metadata accessor for WidgetMusicRecommendation);
    if (v47 == 5)
    {
      sub_5BDB8(a1, v35, type metadata accessor for WidgetMusicRecommendation);
      sub_5BDB8(a2, v34, type metadata accessor for WidgetMusicRecommendation);
LABEL_33:
      v36 = sub_30DA18(*(_QWORD *)(v35 + v51[8]), *(_QWORD *)(v34 + v51[8]));
      goto LABEL_16;
    }
    goto LABEL_14;
  }
  if (v47 == 5)
  {
LABEL_13:
    sub_5C0DC((uint64_t)v9, type metadata accessor for WidgetMusicRecommendation);
    sub_5C0DC((uint64_t)v12, type metadata accessor for WidgetMusicRecommendation);
LABEL_14:
    sub_5BDB8(a1, v35, type metadata accessor for WidgetMusicRecommendation);
    sub_5BDB8(a2, v34, type metadata accessor for WidgetMusicRecommendation);
    goto LABEL_15;
  }
  sub_A316EC(v46);
  v49 = v48;
  sub_5C0DC((uint64_t)v9, type metadata accessor for WidgetMusicRecommendation);
  sub_5C0DC((uint64_t)v12, type metadata accessor for WidgetMusicRecommendation);
  sub_5BDB8(a1, v35, type metadata accessor for WidgetMusicRecommendation);
  sub_5BDB8(a2, v34, type metadata accessor for WidgetMusicRecommendation);
  if ((v49 & 1) != 0)
    goto LABEL_33;
LABEL_15:
  v36 = 0;
LABEL_16:
  sub_5C0DC(v35, type metadata accessor for WidgetMusicRecommendation);
  sub_5C0DC(v34, type metadata accessor for WidgetMusicRecommendation);
  return v36 & 1;
}

unint64_t sub_9E5728(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_133F620, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 5)
    return 5;
  else
    return v3;
}

unint64_t sub_9E5770()
{
  unint64_t result;

  result = qword_14EEB20;
  if (!qword_14EEB20)
  {
    result = swift_getWitnessTable(&unk_108FC50, &type metadata for WidgetMusicRecommendationKind);
    atomic_store(result, (unint64_t *)&qword_14EEB20);
  }
  return result;
}

unint64_t sub_9E57B4()
{
  unint64_t result;

  result = qword_14EEB30;
  if (!qword_14EEB30)
  {
    result = swift_getWitnessTable(&unk_108FBF0, &type metadata for WidgetMusicRecommendationKind);
    atomic_store(result, (unint64_t *)&qword_14EEB30);
  }
  return result;
}

uint64_t _s16MusicApplication29WidgetMusicRecommendationKindOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_9E5844 + 4 * byte_108FA84[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_9E5878 + 4 * byte_108FA7F[v4]))();
}

uint64_t sub_9E5878(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_9E5880(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x9E5888);
  return result;
}

uint64_t sub_9E5894(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x9E589CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_9E58A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_9E58A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WidgetMusicRecommendation.CodingKeys()
{
  return &type metadata for WidgetMusicRecommendation.CodingKeys;
}

unint64_t sub_9E58C8()
{
  unint64_t result;

  result = qword_14EEB40;
  if (!qword_14EEB40)
  {
    result = swift_getWitnessTable(&unk_108FDB4, &type metadata for WidgetMusicRecommendation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_14EEB40);
  }
  return result;
}

unint64_t sub_9E5910()
{
  unint64_t result;

  result = qword_14EEB48;
  if (!qword_14EEB48)
  {
    result = swift_getWitnessTable(&unk_108FD24, &type metadata for WidgetMusicRecommendation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_14EEB48);
  }
  return result;
}

unint64_t sub_9E5958()
{
  unint64_t result;

  result = qword_14EEB50[0];
  if (!qword_14EEB50[0])
  {
    result = swift_getWitnessTable(&unk_108FD4C, &type metadata for WidgetMusicRecommendation.CodingKeys);
    atomic_store(result, qword_14EEB50);
  }
  return result;
}

uint64_t sub_9E599C(uint64_t a1, uint64_t a2)
{
  uint64_t v5;

  if (a1 == 0x7461446863746566 && a2 == 0xE900000000000065)
    return 0;
  v5 = 0;
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7461446863746566, 0xE900000000000065, a1, a2, 0) & 1) == 0)
  {
    if (a1 == 0x617A696C61636F6CLL && a2 == 0xEC0000006E6F6974
      || (_stringCompareWithSmolCheck(_:_:expecting:)(0x617A696C61636F6CLL, 0xEC0000006E6F6974, a1, a2, 0) & 1) != 0)
    {
      return 1;
    }
    else if (a1 == 0x656C746974 && a2 == 0xE500000000000000
           || (_stringCompareWithSmolCheck(_:_:expecting:)(0x656C746974, 0xE500000000000000, a1, a2, 0) & 1) != 0)
    {
      return 2;
    }
    else if (a1 == 1684957547 && a2 == 0xE400000000000000
           || (_stringCompareWithSmolCheck(_:_:expecting:)(1684957547, 0xE400000000000000, a1, a2, 0) & 1) != 0)
    {
      return 3;
    }
    else
    {
      v5 = 4;
      if (a1 != 0x736D657469 || a2 != 0xE500000000000000)
      {
        if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x736D657469, 0xE500000000000000, a1, a2, 0) & 1) != 0)
          return 4;
        else
          return 5;
      }
    }
  }
  return v5;
}

void sub_9E5B64(_BYTE *a1@<X8>)
{
  sub_9E4B74(a1);
}

uint64_t sub_9E5B78()
{
  return sub_9E4B8C();
}

uint64_t sub_9E5B8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, __n128);
  __n128 v26;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[4];

  v3 = v2;
  v36 = a2;
  v5 = type metadata accessor for DynamicTypeSize(0);
  v34 = *(_QWORD *)(v5 - 8);
  v35 = v5;
  __chkstk_darwin(v5);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 16);
  v31 = (uint64_t)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = v8;
  v9 = v7;
  v30 = v7;
  v11 = type metadata accessor for AdaptativeContainerStack._LayoutProvider(0, v8, v7, v10);
  __chkstk_darwin(v11);
  v13 = (char *)&v29 - v12;
  v37[0] = v14;
  v37[1] = v8;
  v37[2] = &off_1393030;
  v37[3] = v9;
  v15 = type metadata accessor for LayoutProviderStack(0, (uint64_t)v37);
  v33 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v29 - v19;
  v21 = *(_QWORD *)(v3 + 48);
  v22 = *(_BYTE *)(v3 + 56);
  sub_270050(v21, v22);
  LOBYTE(v8) = sub_724BF4(v21, v22);
  sub_270154(v21, v22);
  v23 = v31;
  sub_724544(v31);
  *v13 = v8;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v34 + 32))(&v13[*(int *)(v11 + 36)], v23, v35);
  v24 = *(_QWORD *)(v3 + 40);
  *((_QWORD *)&v28 + 1) = &off_1393030;
  *(_QWORD *)&v28 = v32;
  LayoutProviderStack.init(layoutProvider:alignment:spacing:content:)((uint64_t)v13, *(_QWORD *)v3, *(_QWORD *)(v3 + 8), *(_QWORD *)(v3 + 16), *(_BYTE *)(v3 + 24), *(_QWORD *)(v3 + 32), v24, v11, (uint64_t)v17, v28, v30);
  swift_getWitnessTable(&protocol conformance descriptor for LayoutProviderStack<A, B>, v15);
  sub_505E64((uint64_t)v17, v15, (uint64_t)v20);
  v25 = *(void (**)(char *, uint64_t, __n128))(v33 + 8);
  v26 = swift_retain(v24);
  v25(v17, v15, v26);
  sub_4FF1F4((uint64_t)v20, v15, v36);
  return ((uint64_t (*)(char *, uint64_t))v25)(v20, v15);
}

unint64_t sub_9E5DCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  char *v5;
  char v11;
  uint64_t v12;
  unint64_t result;
  uint64_t v14;

  v11 = *v5;
  v12 = DynamicTypeSize.isAccessibilitySize.getter(a1);
  if ((v11 & 1) != 0)
  {
    if ((v12 & 1) != 0)
    {
      v14 = static VerticalAlignment.top.getter(v12);
      *(_QWORD *)(a5 + 24) = &type metadata for HStackLayout;
      result = sub_9E6B80();
      *(_QWORD *)(a5 + 32) = result;
      *(_QWORD *)a5 = v14;
    }
    else
    {
      *(_QWORD *)(a5 + 24) = &type metadata for HeightConstrainedHStackLayout;
      result = sub_9E6B3C();
      *(_QWORD *)(a5 + 32) = result;
      *(_QWORD *)a5 = a2;
    }
  }
  else
  {
    *(_QWORD *)(a5 + 24) = &type metadata for VStackLayout;
    result = sub_9E6AF8();
    *(_QWORD *)(a5 + 32) = result;
    *(_QWORD *)a5 = a1;
  }
  *(_QWORD *)(a5 + 8) = a3;
  *(_BYTE *)(a5 + 16) = a4 & 1;
  return result;
}

uint64_t sub_9E5E8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;

  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_BYTE *)(a9 + 24) = a4 & 1;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = swift_getKeyPath(&unk_108FE30);
  *(_BYTE *)(a9 + 56) = 0;
  v13 = (_QWORD *)(a9 + *(int *)(type metadata accessor for AdaptativeContainerStack(0, a7, a8, v12) + 48));
  *v13 = swift_getKeyPath(&unk_108FE58);
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
  return swift_storeEnumTagMultiPayload(v13, v14, 0);
}

uint64_t type metadata accessor for AdaptativeContainerStack(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AdaptativeContainerStack);
}

uint64_t sub_9E5F3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 40);
}

void sub_9E5F44(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = &unk_108FEB0;
  v4[1] = &unk_108FEC8;
  v4[2] = (char *)&value witness table for () + 64;
  v4[3] = &unk_108FEE0;
  sub_184AE8(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 0, 5, v4, a1 + 32);
  }
}

uint64_t sub_9E5FD8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = v18 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain(v18);
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    v7 = a2[5];
    *(_QWORD *)(v4 + 32) = a2[4];
    *(_QWORD *)(v4 + 40) = v7;
    v8 = a2[6];
    v9 = *((_BYTE *)a2 + 56);
    swift_retain(v7);
    sub_270050(v8, v9);
    *(_QWORD *)(v4 + 48) = v8;
    *(_BYTE *)(v4 + 56) = v9;
    v10 = *(int *)(a3 + 48);
    v11 = (uint64_t *)(v4 + v10);
    v12 = (uint64_t *)((char *)a2 + v10);
    v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
    if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
    {
      v14 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v11, v12, v14);
      v15 = v11;
      v16 = v13;
      v17 = 1;
    }
    else
    {
      v19 = *v12;
      *v11 = *v12;
      swift_retain(v19);
      v15 = v11;
      v16 = v13;
      v17 = 0;
    }
    swift_storeEnumTagMultiPayload(v15, v16, v17);
  }
  return v4;
}

double sub_9E60F8(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  swift_release(*(_QWORD *)(a1 + 40));
  sub_270154(*(_QWORD *)(a1 + 48), *(_BYTE *)(a1 + 56));
  v4 = (_QWORD *)(a1 + *(int *)(a2 + 48));
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*v4).n128_u64[0];
  }
  return result;
}

uint64_t sub_9E617C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(_QWORD *)(a2 + 48);
  v8 = *(_BYTE *)(a2 + 56);
  swift_retain(v6);
  sub_270050(v7, v8);
  *(_QWORD *)(a1 + 48) = v7;
  *(_BYTE *)(a1 + 56) = v8;
  v9 = *(int *)(a3 + 48);
  v10 = (uint64_t *)(a1 + v9);
  v11 = (uint64_t *)(a2 + v9);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
  if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
  {
    v13 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v10, v11, v13);
    v14 = 1;
  }
  else
  {
    v15 = *v11;
    *v10 = *v11;
    swift_retain(v15);
    v14 = 0;
  }
  swift_storeEnumTagMultiPayload(v10, v12, v14);
  return a1;
}

uint64_t sub_9E6268(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  swift_retain(v7);
  swift_release(v8);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_BYTE *)(a2 + 56);
  sub_270050(v9, v10);
  v11 = *(_QWORD *)(a1 + 48);
  v12 = *(_BYTE *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = v9;
  *(_BYTE *)(a1 + 56) = v10;
  sub_270154(v11, v12);
  if (a1 != a2)
  {
    v13 = *(int *)(a3 + 48);
    v14 = (uint64_t *)(a1 + v13);
    v15 = (uint64_t *)(a2 + v13);
    sub_9E6384(a1 + v13);
    v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
    if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
    {
      v17 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v14, v15, v17);
      v18 = 1;
    }
    else
    {
      v19 = *v15;
      *v14 = *v15;
      swift_retain(v19);
      v18 = 0;
    }
    swift_storeEnumTagMultiPayload(v14, v16, v18);
  }
  return a1;
}

uint64_t sub_9E6384(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_9E63C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  const void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v4 = *(int *)(a3 + 48);
  v5 = (const void *)(a2 + v4);
  v6 = (void *)(a1 + v4);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
  if (swift_getEnumCaseMultiPayload(v5, v7) == 1)
  {
    v8 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v5, v8);
    swift_storeEnumTagMultiPayload(v6, v7, 1);
  }
  else
  {
    memcpy(v6, v5, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

uint64_t sub_9E6494(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = *(_QWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release(v6);
  v7 = *(_BYTE *)(a2 + 56);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(_BYTE *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = v7;
  sub_270154(v8, v9);
  if (a1 != a2)
  {
    v10 = *(int *)(a3 + 48);
    v11 = (void *)(a1 + v10);
    v12 = (const void *)(a2 + v10);
    sub_9E6384(a1 + v10);
    v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
    if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
    {
      v14 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v11, v12, v14);
      swift_storeEnumTagMultiPayload(v11, v13, 1);
    }
    else
    {
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_9E6590(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_9E659C);
}

uint64_t sub_9E659C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E4F30);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 48), a2, v8);
  }
}

uint64_t sub_9E661C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_9E6628);
}

uint64_t sub_9E6628(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 32) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E4F30);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 48), a2, a2, v7);
  }
  return result;
}

uint64_t sub_9E66A0(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_11FF72C, 1);
}

unint64_t sub_9E66D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  return sub_9E5DCC(a1, a2, a3, a4 & 1, a5);
}

uint64_t type metadata accessor for AdaptativeContainerStack._LayoutProvider(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AdaptativeContainerStack._LayoutProvider);
}

uint64_t sub_9E66EC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = &unk_108FF68;
  result = type metadata accessor for DynamicTypeSize(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 0, 2, v4, a1 + 32);
    return 0;
  }
  return result;
}

uint64_t *sub_9E6760(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  _BYTE *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v9);
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v5 = *(int *)(a3 + 36);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_9E67E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 36);
  v3 = type metadata accessor for DynamicTypeSize(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_BYTE *sub_9E6820(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 36);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = type metadata accessor for DynamicTypeSize(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_BYTE *sub_9E687C(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 36);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = type metadata accessor for DynamicTypeSize(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_BYTE *sub_9E68D8(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 36);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = type metadata accessor for DynamicTypeSize(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_BYTE *sub_9E6934(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 36);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = type metadata accessor for DynamicTypeSize(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_9E6990(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_9E699C);
}

uint64_t sub_9E699C(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  int v4;
  unsigned int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 253)
  {
    if (*a1 <= 2u)
      v4 = 2;
    else
      v4 = *a1;
    v5 = v4 - 2;
    if (*a1 >= 2u)
      return v5;
    else
      return 0;
  }
  else
  {
    v9 = type metadata accessor for DynamicTypeSize(0);
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(&a1[*(int *)(a3 + 36)], a2, v9);
  }
}

uint64_t sub_9E6A1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_9E6A28);
}

_BYTE *sub_9E6A28(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 253)
  {
    *result = a2 + 2;
  }
  else
  {
    v7 = type metadata accessor for DynamicTypeSize(0);
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 36)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_9E6A98(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[4];

  v4 = *a1;
  v5 = a1[1];
  v8[0] = type metadata accessor for AdaptativeContainerStack._LayoutProvider(255, *a1, v5, a4);
  v8[1] = v4;
  v8[2] = &off_1393030;
  v8[3] = v5;
  v6 = type metadata accessor for LayoutProviderStack(255, (uint64_t)v8);
  return swift_getWitnessTable(&protocol conformance descriptor for LayoutProviderStack<A, B>, v6);
}

unint64_t sub_9E6AF8()
{
  unint64_t result;

  result = qword_14EEC58;
  if (!qword_14EEC58)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for VStackLayout, &type metadata for VStackLayout);
    atomic_store(result, (unint64_t *)&qword_14EEC58);
  }
  return result;
}

unint64_t sub_9E6B3C()
{
  unint64_t result;

  result = qword_14EEC60;
  if (!qword_14EEC60)
  {
    result = swift_getWitnessTable(&unk_107E060, &type metadata for HeightConstrainedHStackLayout);
    atomic_store(result, (unint64_t *)&qword_14EEC60);
  }
  return result;
}

unint64_t sub_9E6B80()
{
  unint64_t result;

  result = qword_14EEC68;
  if (!qword_14EEC68)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for HStackLayout, &type metadata for HStackLayout);
    atomic_store(result, (unint64_t *)&qword_14EEC68);
  }
  return result;
}

uint64_t *sub_9E6BC4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v5);
  }
  else
  {
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    swift_retain(v5);
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14CD210);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for UserInterfaceSizeClass(0);
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E0470);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
        v15 = 1;
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v13 + 16))(v9, v10, v12);
        v15 = 1;
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
      }
    }
    else
    {
      v16 = *v10;
      *v9 = *v10;
      swift_retain(v16);
      v15 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v11, v15);
    v17 = *(int *)(a3 + 24);
    v18 = (uint64_t *)((char *)a1 + v17);
    v19 = (uint64_t *)((char *)a2 + v17);
    v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14F96E0);
    if (swift_getEnumCaseMultiPayload(v19, v20) == 1)
    {
      v21 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v18, v19, v21);
      v22 = v18;
      v23 = v20;
      v24 = 1;
    }
    else
    {
      v25 = *v19;
      *v18 = *v19;
      swift_retain(v25);
      v22 = v18;
      v23 = v20;
      v24 = 0;
    }
    swift_storeEnumTagMultiPayload(v22, v23, v24);
  }
  return a1;
}

double sub_9E6D84(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  double result;

  swift_release(*a1);
  v4 = (_QWORD *)((char *)a1 + *(int *)(a2 + 20));
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14CD210);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for UserInterfaceSizeClass(0);
    v7 = *(_QWORD *)(v6 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6))
      (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v4, v6);
  }
  else
  {
    swift_release(*v4);
  }
  v8 = (_QWORD *)((char *)a1 + *(int *)(a2 + 24));
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14F96E0);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8, v10);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*v8).n128_u64[0];
  }
  return result;
}

uint64_t *sub_9E6E80(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = *a2;
  *a1 = *a2;
  v7 = *(int *)(a3 + 20);
  v8 = (uint64_t *)((char *)a1 + v7);
  v9 = (uint64_t *)((char *)a2 + v7);
  swift_retain(v6);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14CD210);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for UserInterfaceSizeClass(0);
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E0470);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      v14 = 1;
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v12 + 16))(v8, v9, v11);
      v14 = 1;
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
    }
  }
  else
  {
    v15 = *v9;
    *v8 = *v9;
    swift_retain(v15);
    v14 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v10, v14);
  v16 = *(int *)(a3 + 24);
  v17 = (uint64_t *)((char *)a1 + v16);
  v18 = (uint64_t *)((char *)a2 + v16);
  v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14F96E0);
  if (swift_getEnumCaseMultiPayload(v18, v19) == 1)
  {
    v20 = type metadata accessor for ColorScheme(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v17, v18, v20);
    v21 = 1;
  }
  else
  {
    v22 = *v18;
    *v17 = *v18;
    swift_retain(v22);
    v21 = 0;
  }
  swift_storeEnumTagMultiPayload(v17, v19, v21);
  return a1;
}

uint64_t *sub_9E7014(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  swift_retain(v6);
  swift_release(v7);
  if (a1 != a2)
  {
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    sub_56024((uint64_t)a1 + v8, (uint64_t *)&unk_14CD210);
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14CD210);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for UserInterfaceSizeClass(0);
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E0470);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
        v15 = 1;
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v13 + 16))(v9, v10, v12);
        v15 = 1;
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
      }
    }
    else
    {
      v16 = *v10;
      *v9 = *v10;
      swift_retain(v16);
      v15 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v11, v15);
    v17 = *(int *)(a3 + 24);
    v18 = (uint64_t *)((char *)a1 + v17);
    v19 = (uint64_t *)((char *)a2 + v17);
    sub_56024((uint64_t)a1 + v17, (uint64_t *)&unk_14F96E0);
    v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14F96E0);
    if (swift_getEnumCaseMultiPayload(v19, v20) == 1)
    {
      v21 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v18, v19, v21);
      v22 = 1;
    }
    else
    {
      v23 = *v19;
      *v18 = *v19;
      swift_retain(v23);
      v22 = 0;
    }
    swift_storeEnumTagMultiPayload(v18, v20, v22);
  }
  return a1;
}

_QWORD *sub_9E71DC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14CD210);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for UserInterfaceSizeClass(0);
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E0470);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v7, v8, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
    }
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v13 = *(int *)(a3 + 24);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14F96E0);
  if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
  {
    v17 = type metadata accessor for ColorScheme(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v14, v15, v17);
    swift_storeEnumTagMultiPayload(v14, v16, 1);
  }
  else
  {
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  return a1;
}

uint64_t *sub_9E736C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  v6 = *a1;
  *a1 = *a2;
  swift_release(v6);
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    sub_56024((uint64_t)a1 + v7, (uint64_t *)&unk_14CD210);
    v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14CD210);
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v11 = type metadata accessor for UserInterfaceSizeClass(0);
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E0470);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v8, v9, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
      }
      swift_storeEnumTagMultiPayload(v8, v10, 1);
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    v14 = *(int *)(a3 + 24);
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    sub_56024((uint64_t)a1 + v14, (uint64_t *)&unk_14F96E0);
    v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14F96E0);
    if (swift_getEnumCaseMultiPayload(v16, v17) == 1)
    {
      v18 = type metadata accessor for ColorScheme(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v15, v16, v18);
      swift_storeEnumTagMultiPayload(v15, v17, 1);
    }
    else
    {
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_9E752C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_9E7538);
}

uint64_t sub_9E7538(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14CFB20);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14BC698);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t sub_9E75E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_9E75EC);
}

char *sub_9E75EC(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14CFB20);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14BC698);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for Header(uint64_t a1)
{
  return sub_6345C(a1, qword_14EECC8, (uint64_t)&nominal type descriptor for Header);
}

void sub_9E76A4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  v6[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  sub_2CBE40(319);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    sub_1D1B7C(319, (unint64_t *)&qword_14BC708, (uint64_t (*)(uint64_t))&type metadata accessor for ColorScheme, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v5 <= 0x3F)
    {
      v6[2] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 3, v6, a1 + 16);
    }
  }
}

uint64_t sub_9E7750(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_11FF89C, 1);
}

uint64_t sub_9E7760(uint64_t a1)
{
  return EnvironmentValues.colorScheme.getter(a1);
}

uint64_t sub_9E7780(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for ColorScheme(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return EnvironmentValues.colorScheme.setter(v4);
}

void sub_9E77FC(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10900D8);
  v6 = v3;
  v5 = sub_4DD24(&qword_14F9210, _s13ConfigurationCMa_0, (uint64_t)&unk_108D7B0);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v6, KeyPath, v5);
  swift_release(KeyPath);
  *a2 = *(_BYTE *)(v3 + 16);
}

double sub_9E7888(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  double v4;
  double result;
  uint64_t v6;

  v2 = *a2;
  KeyPath = swift_getKeyPath(&unk_10900D8);
  v6 = v2;
  sub_4DD24(&qword_14F9210, _s13ConfigurationCMa_0, (uint64_t)&unk_108D7B0);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v6, KeyPath, sub_955884, v4);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

uint64_t sub_9E7930@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_9E80E0(a1, (uint64_t)&unk_1090318, &OBJC_IVAR____TtCV16MusicApplication6Header13Configuration__artworkInfo, (uint64_t *)&unk_14E4E30, a2);
}

double sub_9E794C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t KeyPath;
  double v9;
  double result;
  _BYTE v11[16];
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14E4E30);
  __chkstk_darwin(v4);
  v6 = &v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5C238(a1, (uint64_t)v6, (uint64_t *)&unk_14E4E30);
  v7 = *a2;
  KeyPath = swift_getKeyPath(&unk_1090318);
  v12 = v7;
  v13 = v6;
  v14 = v7;
  sub_4DD24(&qword_14F9210, _s13ConfigurationCMa_0, (uint64_t)&unk_108D7B0);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v14, KeyPath, sub_9F159C, v9);
  sub_56024((uint64_t)v6, (uint64_t *)&unk_14E4E30);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

uint64_t sub_9E7A54@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_9E8444(a1, (uint64_t)&unk_1090340, &OBJC_IVAR____TtCV16MusicApplication6Header13Configuration__videoArtworks, a2);
}

double sub_9E7A68(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  double v4;
  double result;
  uint64_t v6;

  v2 = *a2;
  KeyPath = swift_getKeyPath(&unk_1090340);
  v6 = v2;
  sub_4DD24(&qword_14F9210, _s13ConfigurationCMa_0, (uint64_t)&unk_108D7B0);
  swift_bridgeObjectRetain();
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v6, KeyPath, sub_95586C, v4);
  swift_bridgeObjectRelease();
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

uint64_t sub_9E7B20@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_1090298);
  v8 = v3;
  v5 = sub_4DD24(&qword_14F9210, _s13ConfigurationCMa_0, (uint64_t)&unk_108D7B0);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v8, KeyPath, v5);
  swift_release(KeyPath);
  v6 = *(_QWORD *)(v3 + OBJC_IVAR____TtCV16MusicApplication6Header13Configuration__title + 8);
  *a2 = *(_QWORD *)(v3 + OBJC_IVAR____TtCV16MusicApplication6Header13Configuration__title);
  a2[1] = v6;
  return swift_bridgeObjectRetain();
}

double sub_9E7BBC(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  double v4;
  double result;
  uint64_t v6;

  v2 = *a2;
  KeyPath = swift_getKeyPath(&unk_1090298);
  v6 = v2;
  sub_4DD24(&qword_14F9210, _s13ConfigurationCMa_0, (uint64_t)&unk_108D7B0);
  swift_bridgeObjectRetain();
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v6, KeyPath, sub_9F1514, v4);
  swift_bridgeObjectRelease();
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

uint64_t sub_9E7C78@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_9E80E0(a1, (uint64_t)&unk_10902C0, &OBJC_IVAR____TtCV16MusicApplication6Header13Configuration__favoriteStatus, &qword_14E9E10, a2);
}

double sub_9E7C94(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t KeyPath;
  double v9;
  double result;
  _BYTE v11[16];
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E9E10);
  __chkstk_darwin(v4);
  v6 = &v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5C238(a1, (uint64_t)v6, &qword_14E9E10);
  v7 = *a2;
  KeyPath = swift_getKeyPath(&unk_10902C0);
  v12 = v7;
  v13 = v6;
  v14 = v7;
  sub_4DD24(&qword_14F9210, _s13ConfigurationCMa_0, (uint64_t)&unk_108D7B0);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v14, KeyPath, sub_9F14FC, v9);
  sub_56024((uint64_t)v6, &qword_14E9E10);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

uint64_t sub_9E7D9C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v11;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_1090248);
  v11 = v3;
  v5 = sub_4DD24(&qword_14F9210, _s13ConfigurationCMa_0, (uint64_t)&unk_108D7B0);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v11, KeyPath, v5);
  swift_release(KeyPath);
  v6 = v3 + OBJC_IVAR____TtCV16MusicApplication6Header13Configuration__attribution;
  v7 = *(_QWORD *)(v3 + OBJC_IVAR____TtCV16MusicApplication6Header13Configuration__attribution);
  v8 = *(_QWORD *)(v3 + OBJC_IVAR____TtCV16MusicApplication6Header13Configuration__attribution + 8);
  *(_QWORD *)a2 = v7;
  *(_QWORD *)(a2 + 8) = v8;
  v9 = *(_BYTE *)(v6 + 16);
  *(_BYTE *)(a2 + 16) = v9;
  return sub_97F73C(v7, v8, v9);
}

uint64_t sub_9E7E40(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t KeyPath;
  double v7;
  uint64_t v9;

  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *a2;
  v5 = *(_BYTE *)(a1 + 16);
  KeyPath = swift_getKeyPath(&unk_1090248);
  v9 = v4;
  sub_97F73C(v2, v3, v5);
  sub_4DD24(&qword_14F9210, _s13ConfigurationCMa_0, (uint64_t)&unk_108D7B0);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, KeyPath, sub_9F149C, v7);
  swift_release(KeyPath);
  return sub_97F760(v2, v3, v5);
}

double sub_9E7F18@<D0>(uint64_t *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double result;
  uint64_t v10;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_1090270);
  v10 = v3;
  v5 = sub_4DD24(&qword_14F9210, _s13ConfigurationCMa_0, (uint64_t)&unk_108D7B0);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v10, KeyPath, v5);
  swift_release(KeyPath);
  v7 = *(_QWORD *)(v3 + OBJC_IVAR____TtCV16MusicApplication6Header13Configuration__attributionAction);
  v6 = *(_QWORD *)(v3 + OBJC_IVAR____TtCV16MusicApplication6Header13Configuration__attributionAction + 8);
  v8 = swift_allocObject(&unk_1393110, 32, 7);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  *a2 = sub_62604;
  a2[1] = (uint64_t (*)())v8;
  *(_QWORD *)&result = swift_retain(v6).n128_u64[0];
  return result;
}

double sub_9E7FD8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;
  double v8;
  double result;
  uint64_t v10;

  v3 = *a1;
  v4 = a1[1];
  v5 = swift_allocObject(&unk_13930E8, 32, 7);
  *(_QWORD *)(v5 + 16) = v3;
  *(_QWORD *)(v5 + 24) = v4;
  v6 = *a2;
  KeyPath = swift_getKeyPath(&unk_1090270);
  v10 = v6;
  sub_4DD24(&qword_14F9210, _s13ConfigurationCMa_0, (uint64_t)&unk_108D7B0);
  *(_QWORD *)&v8 = swift_retain(v4).n128_u64[0];
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v10, KeyPath, sub_9F1480, v8);
  swift_release(v5);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

uint64_t sub_9E80C4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_9E80E0(a1, (uint64_t)&unk_1090220, &OBJC_IVAR____TtCV16MusicApplication6Header13Configuration__metadata, &qword_14EBA98, a2);
}

uint64_t sub_9E80E0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X3>, _QWORD *a3@<X4>, uint64_t *a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[3];

  v8 = *a1;
  KeyPath = swift_getKeyPath(a2);
  v13[0] = v8;
  v10 = sub_4DD24(&qword_14F9210, _s13ConfigurationCMa_0, (uint64_t)&unk_108D7B0);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v13, KeyPath, v10);
  swift_release(KeyPath);
  v11 = v8 + *a3;
  swift_beginAccess(v11, v13, 0, 0);
  return sub_5C238(v11, a5, a4);
}

double sub_9E819C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t KeyPath;
  double v9;
  double result;
  _BYTE v11[16];
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EBA98);
  __chkstk_darwin(v4);
  v6 = &v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5C238(a1, (uint64_t)v6, &qword_14EBA98);
  v7 = *a2;
  KeyPath = swift_getKeyPath(&unk_1090220);
  v12 = v7;
  v13 = v6;
  v14 = v7;
  sub_4DD24(&qword_14F9210, _s13ConfigurationCMa_0, (uint64_t)&unk_108D7B0);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v14, KeyPath, sub_9F1434, v9);
  sub_56024((uint64_t)v6, &qword_14EBA98);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

uint64_t sub_9E82A4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10901F8);
  v11 = v3;
  v5 = sub_4DD24(&qword_14F9210, _s13ConfigurationCMa_0, (uint64_t)&unk_108D7B0);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v11, KeyPath, v5);
  swift_release(KeyPath);
  v6 = *(_QWORD *)(v3 + OBJC_IVAR____TtCV16MusicApplication6Header13Configuration__description);
  v7 = *(_QWORD *)(v3 + OBJC_IVAR____TtCV16MusicApplication6Header13Configuration__description + 8);
  v8 = *(_QWORD *)(v3 + OBJC_IVAR____TtCV16MusicApplication6Header13Configuration__description + 16);
  v9 = *(_QWORD *)(v3 + OBJC_IVAR____TtCV16MusicApplication6Header13Configuration__description + 24);
  *a2 = v6;
  a2[1] = v7;
  a2[2] = v8;
  a2[3] = v9;
  return sub_9548FC(v6, v7, v8, v9);
}

uint64_t sub_9E8348(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;
  double v8;
  uint64_t v10;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = *a2;
  KeyPath = swift_getKeyPath(&unk_10901F8);
  v10 = v6;
  sub_9548FC(v2, v3, v4, v5);
  sub_4DD24(&qword_14F9210, _s13ConfigurationCMa_0, (uint64_t)&unk_108D7B0);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v10, KeyPath, sub_985BD0, v8);
  swift_release(KeyPath);
  return sub_954934(v2, v3, v4, v5);
}

uint64_t sub_9E8430@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_9E8444(a1, (uint64_t)&unk_10901A0, &OBJC_IVAR____TtCV16MusicApplication6Header13Configuration__playIntentButtonIntents, a2);
}

uint64_t sub_9E8444@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X3>, _QWORD *a3@<X4>, _QWORD *a4@<X8>)
{
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v10;

  v6 = *a1;
  KeyPath = swift_getKeyPath(a2);
  v10 = v6;
  v8 = sub_4DD24(&qword_14F9210, _s13ConfigurationCMa_0, (uint64_t)&unk_108D7B0);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v10, KeyPath, v8);
  swift_release(KeyPath);
  *a4 = *(_QWORD *)(v6 + *a3);
  return swift_bridgeObjectRetain();
}

double sub_9E84E0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  double v4;
  double result;
  uint64_t v6;

  v2 = *a2;
  KeyPath = swift_getKeyPath(&unk_10901A0);
  v6 = v2;
  sub_4DD24(&qword_14F9210, _s13ConfigurationCMa_0, (uint64_t)&unk_108D7B0);
  swift_bridgeObjectRetain();
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v6, KeyPath, sub_9F13C8, v4);
  swift_bridgeObjectRelease();
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

uint64_t sub_9E8598@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_1090178);
  v10 = v3;
  v5 = sub_4DD24(&qword_14F9210, _s13ConfigurationCMa_0, (uint64_t)&unk_108D7B0);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v10, KeyPath, v5);
  swift_release(KeyPath);
  v6 = *(_QWORD *)(v3 + OBJC_IVAR____TtCV16MusicApplication6Header13Configuration__playbackIntentProvider);
  v7 = *(_QWORD *)(v3 + OBJC_IVAR____TtCV16MusicApplication6Header13Configuration__playbackIntentProvider + 8);
  if (v6)
    v8 = *(_QWORD *)(v3 + OBJC_IVAR____TtCV16MusicApplication6Header13Configuration__playbackIntentProvider + 8);
  else
    v8 = 0;
  *a2 = v6;
  a2[1] = v8;
  return sub_A9DEC(v6, v7);
}

uint64_t sub_9E863C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  double v6;
  uint64_t v8;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  KeyPath = swift_getKeyPath(&unk_1090178);
  v8 = v4;
  sub_A9DEC(v2, v3);
  sub_4DD24(&qword_14F9210, _s13ConfigurationCMa_0, (uint64_t)&unk_108D7B0);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v8, KeyPath, sub_9F13E0, v6);
  swift_release(KeyPath);
  return sub_5C198(v2, v3);
}

void sub_9E870C(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_1090150);
  v6 = v3;
  v5 = sub_4DD24(&qword_14F9210, _s13ConfigurationCMa_0, (uint64_t)&unk_108D7B0);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v6, KeyPath, v5);
  swift_release(KeyPath);
  *a2 = *(_BYTE *)(v3 + OBJC_IVAR____TtCV16MusicApplication6Header13Configuration__hidePlaybackControls);
}

double sub_9E87A0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  double v4;
  double result;
  uint64_t v6;

  v2 = *a2;
  KeyPath = swift_getKeyPath(&unk_1090150);
  v6 = v2;
  sub_4DD24(&qword_14F9210, _s13ConfigurationCMa_0, (uint64_t)&unk_108D7B0);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v6, KeyPath, sub_9548A8, v4);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

uint64_t sub_9E8848@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t KeyPath;
  uint64_t v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __n128 v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unsigned int *v69;
  char *v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  _QWORD v92[2];

  v91 = a1;
  v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EED08);
  __chkstk_darwin(v86);
  v90 = (uint64_t *)((char *)&v74 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = type metadata accessor for ColorScheme(0);
  v88 = *(_QWORD *)(v3 - 8);
  v89 = v3;
  __chkstk_darwin(v3);
  v85 = (uint64_t)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v87 = (char *)&v74 - v6;
  v74 = type metadata accessor for Header(0);
  v7 = *(_QWORD *)(v74 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v74);
  v9 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EED10);
  __chkstk_darwin(v75);
  v11 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v77 = (uint64_t)&v74 - v13;
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EDBA0);
  __chkstk_darwin(v76);
  v79 = (uint64_t)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EDBA8);
  __chkstk_darwin(v15);
  v81 = (uint64_t)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EED18);
  __chkstk_darwin(v80);
  v84 = (uint64_t)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EED20);
  __chkstk_darwin(v82);
  v83 = (uint64_t)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = v1;
  v20 = *v1;
  KeyPath = swift_getKeyPath(&unk_1090058);
  v92[0] = v20;
  v78 = sub_4DD24(&qword_14F9210, _s13ConfigurationCMa_0, (uint64_t)&unk_108D7B0);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v92, KeyPath, v78);
  swift_release(KeyPath);
  v22 = 0;
  v23 = (unint64_t)*(unsigned __int8 *)(v20
                                             + OBJC_IVAR____TtCV16MusicApplication6Header13Configuration__metrics
                                             + 26) << 16;
  if (v23 != 0x20000)
    v22 = *(_QWORD *)(v20 + OBJC_IVAR____TtCV16MusicApplication6Header13Configuration__metrics + 16);
  v24 = v23 == 0x20000;
  sub_5BDB8((uint64_t)v1, (uint64_t)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for Header);
  v25 = *(unsigned __int8 *)(v7 + 80);
  v26 = (v25 + 16) & ~v25;
  v27 = v26 + v8;
  v28 = v25 | 7;
  v29 = swift_allocObject(&unk_1393098, v27, v25 | 7);
  sub_5C04C((uint64_t)v9, v29 + v26, type metadata accessor for Header);
  sub_5BDB8((uint64_t)v19, (uint64_t)v9, type metadata accessor for Header);
  v30 = swift_allocObject(&unk_13930C0, v27, v28);
  sub_5C04C((uint64_t)v9, v30 + v26, type metadata accessor for Header);
  v31 = v75;
  v32 = &v11[*(int *)(v75 + 60)];
  *(_QWORD *)v32 = swift_getKeyPath(&unk_1090080);
  v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14F96E0);
  swift_storeEnumTagMultiPayload(v32, v33, 0);
  v34 = &v11[*(int *)(v31 + 64)];
  *(_QWORD *)v34 = swift_getKeyPath(&unk_10900B0);
  v34[8] = 0;
  *(_QWORD *)v11 = v22;
  v11[8] = v24;
  *((_QWORD *)v11 + 2) = sub_9F11A0;
  *((_QWORD *)v11 + 3) = v29;
  *((_QWORD *)v11 + 4) = sub_9F12DC;
  *((_QWORD *)v11 + 5) = v30;
  v35 = v77;
  v36 = sub_5C090((uint64_t)v11, v77, &qword_14EED10);
  v37 = static Edge.Set.horizontal.getter(v36);
  v38 = *v19;
  v39 = swift_getKeyPath(&unk_1090058);
  v92[0] = v38;
  v40 = v78;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v92, v39, v78);
  swift_release(v39);
  v42 = (unint64_t)*(unsigned __int8 *)(v38
                                             + OBJC_IVAR____TtCV16MusicApplication6Header13Configuration__metrics
                                             + 26) << 16;
  v43 = 0.0;
  v44 = 0;
  v45 = 0;
  v46 = 0;
  if (v42 != 0x20000)
  {
    v43 = EdgeInsets.init(_all:)(v41, *(double *)(v38 + OBJC_IVAR____TtCV16MusicApplication6Header13Configuration__metrics + 16));
    v44 = v47;
    v45 = v48;
    v46 = v49;
  }
  v50 = v79;
  sub_5C238(v35, v79, &qword_14EED10);
  v51 = v50 + *(int *)(v76 + 36);
  *(_BYTE *)v51 = v37;
  *(double *)(v51 + 8) = v43;
  *(_QWORD *)(v51 + 16) = v44;
  *(_QWORD *)(v51 + 24) = v45;
  *(_QWORD *)(v51 + 32) = v46;
  *(_BYTE *)(v51 + 40) = v42 == 0x20000;
  sub_56024(v35, &qword_14EED10);
  v53 = static Alignment.bottom.getter(v52);
  v54 = v81;
  sub_9C1EA0(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, v81, 0.0, 1, INFINITY, 0, v53, v55);
  sub_56024(v50, &qword_14EDBA0);
  v56 = swift_getKeyPath(&unk_10900B0);
  v57 = *v19;
  v58 = swift_getKeyPath(&unk_10900D8);
  v92[0] = v57;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v92, v58, v40);
  swift_release(v58);
  LOBYTE(v58) = *(_BYTE *)(v57 + 16);
  v59 = v84;
  sub_5C238(v54, v84, &qword_14EDBA8);
  v60 = v59 + *(int *)(v80 + 36);
  *(_QWORD *)v60 = v56;
  *(_BYTE *)(v60 + 8) = v58;
  sub_56024(v54, &qword_14EDBA8);
  v61 = swift_getKeyPath(&unk_1090080);
  v62 = *v19;
  v63 = swift_getKeyPath(&unk_10900D8);
  v92[0] = v62;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v92, v63, v40);
  v64 = swift_release(v63);
  v65 = *(unsigned __int8 *)(v62 + 16);
  v66 = v88;
  if (v65 == 2)
  {
    v67 = v85;
    sub_724994(v85);
    v68 = v89;
  }
  else
  {
    v68 = v89;
    v67 = v85;
    if ((v65 & 1) != 0)
      v69 = (unsigned int *)&enum case for ColorScheme.light(_:);
    else
      v69 = (unsigned int *)&enum case for ColorScheme.dark(_:);
    (*(void (**)(uint64_t, _QWORD, uint64_t, __n128))(v88 + 104))(v85, *v69, v89, v64);
  }
  v70 = v87;
  (*(void (**)(char *, uint64_t, uint64_t))(v66 + 32))(v87, v67, v68);
  v71 = v90;
  (*(void (**)(char *, char *, uint64_t))(v66 + 16))((char *)v90 + *(int *)(v86 + 28), v70, v68);
  *v71 = v61;
  v72 = v83;
  sub_5C238(v59, v83, &qword_14EED18);
  sub_5C238((uint64_t)v71, v72 + *(int *)(v82 + 36), &qword_14EED08);
  swift_retain(v61);
  sub_56024((uint64_t)v71, &qword_14EED08);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v70, v68);
  sub_56024(v59, &qword_14EED18);
  swift_release(v61);
  return sub_5C090(v72, v91, &qword_14EED20);
}

uint64_t sub_9E8FB4@<X0>(char a1@<W0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v6 = *a2;
  KeyPath = swift_getKeyPath(&unk_1090100);
  v12 = v6;
  v8 = sub_4DD24(&qword_14F9210, _s13ConfigurationCMa_0, (uint64_t)&unk_108D7B0);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v12, KeyPath, v8);
  swift_release(KeyPath);
  if ((*(_BYTE *)(v6 + OBJC_IVAR____TtCV16MusicApplication6Header13Configuration__shouldIncludeFloatingArtwork) & 1) != 0)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EED28);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a3, 1, 1, v9);
  }
  else
  {
    sub_9E90B4(a2, a1 & 1, a3);
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EED28);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a3, 0, 1, v11);
  }
}

uint64_t sub_9E90B4@<X0>(uint64_t *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t KeyPath;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  unint64_t v30;
  uint64_t v31;
  unsigned __int8 *v32;
  uint64_t *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  char v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t result;
  double v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int *v77;
  uint64_t v78;
  __int128 v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  __int128 v91;
  __int128 v92;
  uint64_t v93;
  __int128 v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100[24];
  _BYTE v101[16];
  uint64_t v102;
  uint64_t v103;
  char v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  char v110;
  __int128 v111;
  char v112;
  char v113;
  char v114;
  char v115[8];
  double v116;
  char v117;

  v99 = a3;
  v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EED30);
  __chkstk_darwin(v97);
  v6 = (char *)&v87 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14CCE60);
  __chkstk_darwin(v7);
  *(_QWORD *)&v91 = (char *)&v87 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = type metadata accessor for EditorialVideoArtworkFlavor(0);
  v89 = *(_QWORD *)(v90 - 8);
  __chkstk_darwin(v90);
  *(_QWORD *)&v94 = (char *)&v87 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = type metadata accessor for Header.AdaptativeArtwork(0);
  __chkstk_darwin(v98);
  v88 = (char *)&v87 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v93 = (uint64_t)&v87 - v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14E4E30);
  __chkstk_darwin(v13);
  v15 = (char *)&v87 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for ArtworkImage.Info(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v95 = (uint64_t)&v87 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v96 = (uint64_t)&v87 - v20;
  *(_QWORD *)&v92 = a1;
  v21 = *a1;
  KeyPath = swift_getKeyPath(&unk_10900D8);
  v107 = v21;
  v23 = sub_4DD24(&qword_14F9210, _s13ConfigurationCMa_0, (uint64_t)&unk_108D7B0);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v107, KeyPath, v23);
  swift_release(KeyPath);
  if (*(_BYTE *)(v21 + 16) == 2)
  {
    v25 = swift_getKeyPath(&unk_1090318);
    v107 = v21;
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v107, v25, v23);
    swift_release(v25);
    v26 = v21 + OBJC_IVAR____TtCV16MusicApplication6Header13Configuration__artworkInfo;
    swift_beginAccess(v21 + OBJC_IVAR____TtCV16MusicApplication6Header13Configuration__artworkInfo, v100, 0, 0);
    sub_5C238(v26, (uint64_t)v15, (uint64_t *)&unk_14E4E30);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) != 1)
    {
      v37 = v96;
      sub_5C04C((uint64_t)v15, v96, type metadata accessor for ArtworkImage.Info);
      v38 = sub_5BDB8(v37, v95, type metadata accessor for ArtworkImage.Info);
      v39 = v94;
      static EditorialVideoArtworkFlavor.motionDetailSquare.getter(v38);
      v40 = swift_getKeyPath(&unk_1090340);
      v107 = v21;
      ObservationRegistrar.access<A, B>(_:keyPath:)(&v107, v40, v23);
      swift_release(v40);
      v41 = *(_QWORD *)(v21 + OBJC_IVAR____TtCV16MusicApplication6Header13Configuration__videoArtworks);
      if (*(_QWORD *)(v41 + 16))
      {
        swift_bridgeObjectRetain();
        v42 = sub_21C19C(v39);
        v43 = (uint64_t)v88;
        if ((v44 & 1) != 0)
        {
          v45 = v42;
          v46 = *(_QWORD *)(v41 + 56);
          v47 = type metadata accessor for VideoArtwork(0);
          v48 = *(_QWORD *)(v47 - 8);
          v49 = v46 + *(_QWORD *)(v48 + 72) * v45;
          v39 = v94;
          v50 = v91;
          (*(void (**)(_QWORD, uint64_t, uint64_t))(v48 + 16))(v91, v49, v47);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v48 + 56))(v50, 0, 1, v47);
        }
        else
        {
          v68 = type metadata accessor for VideoArtwork(0);
          v50 = v91;
          (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 56))(v91, 1, 1, v68);
        }
        v65 = (uint64_t *)v92;
        v66 = v90;
        v67 = v89;
      }
      else
      {
        v64 = type metadata accessor for VideoArtwork(0);
        v50 = v91;
        (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v91, 1, 1, v64);
        swift_bridgeObjectRetain();
        v65 = (uint64_t *)v92;
        v66 = v90;
        v67 = v89;
        v43 = (uint64_t)v88;
      }
      (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v39, v66);
      v69 = *v65;
      v70 = swift_getKeyPath(&unk_1090058);
      v107 = v69;
      ObservationRegistrar.access<A, B>(_:keyPath:)(&v107, v70, v23);
      swift_release(v70);
      v71 = v69 + OBJC_IVAR____TtCV16MusicApplication6Header13Configuration__metrics;
      v94 = *(_OWORD *)(v69 + OBJC_IVAR____TtCV16MusicApplication6Header13Configuration__metrics);
      v92 = *(_OWORD *)(v69 + OBJC_IVAR____TtCV16MusicApplication6Header13Configuration__metrics + 16);
      v91 = *(_OWORD *)(v69 + OBJC_IVAR____TtCV16MusicApplication6Header13Configuration__metrics + 32);
      v72 = *(_QWORD *)(v69 + OBJC_IVAR____TtCV16MusicApplication6Header13Configuration__metrics + 48);
      v73 = *(_BYTE *)(v71 + 56);
      v74 = sub_9E99A0();
      v76 = v75;
      sub_5C04C(v95, v43, type metadata accessor for ArtworkImage.Info);
      v77 = (int *)v98;
      sub_5C090(v50, v43 + *(int *)(v98 + 20), &qword_14CCE60);
      v78 = v43 + v77[6];
      v79 = v92;
      *(_OWORD *)v78 = v94;
      *(_OWORD *)(v78 + 16) = v79;
      *(_OWORD *)(v78 + 32) = v91;
      *(_QWORD *)(v78 + 48) = v72;
      *(_BYTE *)(v78 + 56) = v73;
      v80 = (uint64_t *)(v43 + v77[7]);
      *v80 = v74;
      v80[1] = v76;
      v81 = v43 + v77[8];
      v82 = swift_getKeyPath(&unk_1090128);
      swift_bridgeObjectRelease();
      *(_QWORD *)v81 = v82;
      *(_BYTE *)(v81 + 8) = 0;
      v83 = v93;
      sub_5C04C(v43, v93, type metadata accessor for Header.AdaptativeArtwork);
      sub_5BDB8(v83, (uint64_t)v6, type metadata accessor for Header.AdaptativeArtwork);
      swift_storeEnumTagMultiPayload(v6, v97, 0);
      v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E16E8);
      v85 = sub_4DD24(qword_14EED38, type metadata accessor for Header.AdaptativeArtwork, (uint64_t)&unk_10904D8);
      v86 = sub_2D4CB4((unint64_t *)&qword_14E16F0, &qword_14E16E8);
      _ConditionalContent<>.init(storage:)(v6, v77, v84, v85, v86);
      sub_5C0DC(v83, type metadata accessor for Header.AdaptativeArtwork);
      return sub_5C0DC(v96, type metadata accessor for ArtworkImage.Info);
    }
    v24 = sub_56024((uint64_t)v15, (uint64_t *)&unk_14E4E30);
  }
  v27 = static Color.clear.getter(v24);
  v28 = swift_getKeyPath(&unk_1090058);
  v107 = v21;
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v107, v28, v23);
  swift_release(v28);
  if ((a2 & 1) != 0)
  {
    v34 = &v112;
    v32 = (unsigned __int8 *)&v114;
    v33 = (uint64_t *)&v113;
    v35 = 0x4072C00000000000;
    v36 = 0x4072C00000000000;
LABEL_15:
    v31 = ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(v35, 0, v36, 0, 0, 1, 2, (uint64_t)v34);
    goto LABEL_16;
  }
  v29 = *(double *)(v21 + OBJC_IVAR____TtCV16MusicApplication6Header13Configuration__metrics);
  v30 = (unint64_t)*(unsigned __int8 *)(v21
                                             + OBJC_IVAR____TtCV16MusicApplication6Header13Configuration__metrics
                                             + 26) << 16;
  v31 = ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(0x4073100000000000, 0, 0x4073100000000000, 0, 0, 1, 2, (uint64_t)v101);
  if (v30 == 0x20000)
  {
    v32 = (unsigned __int8 *)&v103;
    v33 = &v102;
LABEL_16:
    v53 = *v33;
    v54 = *v32;
    v55 = static Alignment.center.getter(v31);
    _FrameLayout.init(width:height:alignment:)(&v107, 0, 1, v53, v54, v55, v56);
    v57 = v107;
    v58 = v108;
    v59 = v109;
    v60 = v110;
    *(_QWORD *)v6 = v27;
    *((_QWORD *)v6 + 1) = v57;
    v6[16] = v58;
    *((_QWORD *)v6 + 3) = v59;
    v6[32] = v60;
    *(_OWORD *)(v6 + 40) = v111;
    swift_storeEnumTagMultiPayload(v6, v97, 1);
    v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E16E8);
    v62 = sub_4DD24(qword_14EED38, type metadata accessor for Header.AdaptativeArtwork, (uint64_t)&unk_10904D8);
    v63 = sub_2D4CB4((unint64_t *)&qword_14E16F0, &qword_14E16E8);
    return _ConditionalContent<>.init(storage:)(v6, v98, v61, v62, v63);
  }
  sub_5C090((uint64_t)v101, (uint64_t)v115, &qword_14B57D0);
  result = sub_5C090((uint64_t)v115, (uint64_t)&v116, &qword_14B57D0);
  if ((v117 & 1) == 0)
  {
    v32 = (unsigned __int8 *)&v106;
    v33 = &v105;
    v52 = v116;
    if (v116 >= v29 + -144.0)
      v52 = v29 + -144.0;
    v35 = *(_QWORD *)&v52;
    v34 = &v104;
    v36 = *(_QWORD *)&v52;
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

uint64_t sub_9E99A0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  _QWORD v16[3];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EBA98);
  __chkstk_darwin(v1);
  v3 = (_QWORD *)((char *)&v16[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v4);
  v6 = (char *)&v16[-1] - v5;
  v7 = *v0;
  KeyPath = swift_getKeyPath(&unk_1090220);
  v16[0] = v7;
  v9 = sub_4DD24(&qword_14F9210, _s13ConfigurationCMa_0, (uint64_t)&unk_108D7B0);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v16, KeyPath, v9);
  swift_release(KeyPath);
  v10 = v7 + OBJC_IVAR____TtCV16MusicApplication6Header13Configuration__metadata;
  swift_beginAccess(v7 + OBJC_IVAR____TtCV16MusicApplication6Header13Configuration__metadata, v16, 0, 0);
  sub_5C238(v10, (uint64_t)v6, &qword_14EBA98);
  v11 = _s8MetadataV13ConfigurationOMa(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v6, 1, v11) != 1)
  {
    sub_5C238((uint64_t)v6, (uint64_t)v3, &qword_14EBA98);
    if (swift_getEnumCaseMultiPayload(v3, v11) != 1)
    {
      sub_5B8898(*v3, v3[1], v3[2], v3[3]);
      swift_bridgeObjectRelease();
      v12 = AccessibilityString.albumArtworkLabel.unsafeMutableAddressor();
      goto LABEL_6;
    }
    sub_5C0DC((uint64_t)v3, _s8MetadataV13ConfigurationOMa);
  }
  v12 = AccessibilityString.playlistArtworkLabel.unsafeMutableAddressor();
LABEL_6:
  v13 = *v12;
  swift_bridgeObjectRetain();
  sub_56024((uint64_t)v6, &qword_14EBA98);
  return v13;
}

uint64_t sub_9E9B5C@<X0>(char a1@<W0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  int *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t KeyPath;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;

  v27 = a3;
  v5 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_14EDBB0);
  __chkstk_darwin(v5);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v27 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EDBB8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
    v16 = static HorizontalAlignment.leading.getter(v12);
  else
    v16 = static HorizontalAlignment.center.getter(v13);
  v17 = v16;
  v18 = *a2;
  KeyPath = swift_getKeyPath(&unk_1090100);
  v28 = v18;
  v20 = sub_4DD24(&qword_14F9210, _s13ConfigurationCMa_0, (uint64_t)&unk_108D7B0);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v28, KeyPath, v20);
  swift_release(KeyPath);
  LOBYTE(v18) = *(_BYTE *)(v18 + OBJC_IVAR____TtCV16MusicApplication6Header13Configuration__shouldIncludeFloatingArtwork);
  v21 = &v7[v5[31]];
  *(_QWORD *)v21 = swift_getKeyPath(&unk_1090128);
  v21[8] = 0;
  *(_QWORD *)v7 = v17;
  v7[8] = v18;
  sub_9E9DB8(a2, (uint64_t)&v7[v5[26]]);
  sub_9EA050(a2, (uint64_t *)&v7[v5[27]]);
  sub_9EA1AC(a2, (uint64_t)&v7[v5[28]]);
  sub_9EA448(a2, (uint64_t)&v7[v5[29]]);
  sub_9EA5A0(a2, (uint64_t)&v7[v5[30]]);
  v22 = sub_5C090((uint64_t)v7, (uint64_t)v10, &qword_14EDBB0);
  if ((a1 & 1) != 0)
    v24 = static Alignment.leading.getter(v23);
  else
    v24 = static Alignment.center.getter(v22);
  sub_9C1EF8(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v15, 0.0, 1, 0.0, 1, v24, v25);
  sub_56024((uint64_t)v10, &qword_14EDBB0);
  return sub_5C090((uint64_t)v15, v27, &qword_14EDBB8);
}

uint64_t sub_9E9DB8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  int *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[3];

  v28 = a2;
  v3 = (int *)_s5TitleVMa(0);
  v4 = *((_QWORD *)v3 - 1);
  __chkstk_darwin(v3);
  v6 = (uint64_t *)((char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E9E10);
  __chkstk_darwin(v7);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  KeyPath = swift_getKeyPath(&unk_1090298);
  v29[0] = v10;
  v12 = sub_4DD24(&qword_14F9210, _s13ConfigurationCMa_0, (uint64_t)&unk_108D7B0);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v29, KeyPath, v12);
  swift_release(KeyPath);
  v13 = *(_QWORD *)(v10 + OBJC_IVAR____TtCV16MusicApplication6Header13Configuration__title + 8);
  if ((v13 & 0x2000000000000000) != 0)
    v14 = HIBYTE(v13) & 0xF;
  else
    v14 = *(_QWORD *)(v10 + OBJC_IVAR____TtCV16MusicApplication6Header13Configuration__title) & 0xFFFFFFFFFFFFLL;
  if (v14)
  {
    v15 = swift_getKeyPath(&unk_1090298);
    v29[0] = v10;
    ObservationRegistrar.access<A, B>(_:keyPath:)(v29, v15, v12);
    swift_release(v15);
    v16 = *(_QWORD *)(v10 + OBJC_IVAR____TtCV16MusicApplication6Header13Configuration__title + 8);
    v27 = *(_QWORD *)(v10 + OBJC_IVAR____TtCV16MusicApplication6Header13Configuration__title);
    v17 = swift_getKeyPath(&unk_10902C0);
    v29[0] = v10;
    swift_bridgeObjectRetain();
    ObservationRegistrar.access<A, B>(_:keyPath:)(v29, v17, v12);
    swift_release(v17);
    v18 = v10 + OBJC_IVAR____TtCV16MusicApplication6Header13Configuration__favoriteStatus;
    swift_beginAccess(v10 + OBJC_IVAR____TtCV16MusicApplication6Header13Configuration__favoriteStatus, v29, 0, 0);
    sub_5C238(v18, (uint64_t)v9, &qword_14E9E10);
    v19 = (char *)v6 + v3[6];
    *(_QWORD *)v19 = swift_getKeyPath(&unk_1090128);
    v19[8] = 0;
    v20 = (_QWORD *)((char *)v6 + v3[7]);
    *v20 = swift_getKeyPath(&unk_10902E8);
    v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
    swift_storeEnumTagMultiPayload(v20, v21, 0);
    *v6 = v27;
    v6[1] = v16;
    sub_5C090((uint64_t)v9, (uint64_t)v6 + v3[5], &qword_14E9E10);
    v22 = v28;
    sub_5C04C((uint64_t)v6, v28, _s5TitleVMa);
    v23 = 0;
    v24 = v22;
  }
  else
  {
    v23 = 1;
    v24 = v28;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v4 + 56))(v24, v23, 1, v3);
}

void sub_9EA050(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t *v6;
  int v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_1090248);
  v15 = v3;
  v5 = sub_4DD24(&qword_14F9210, _s13ConfigurationCMa_0, (uint64_t)&unk_108D7B0);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v15, KeyPath, v5);
  swift_release(KeyPath);
  v6 = (uint64_t *)(v3 + OBJC_IVAR____TtCV16MusicApplication6Header13Configuration__attribution);
  v7 = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtCV16MusicApplication6Header13Configuration__attribution + 16);
  if (v7 == 255)
    goto LABEL_8;
  v8 = *v6;
  v9 = v6[1];
  v10 = v7 & 1;
  if ((v7 & 1) != 0)
  {
    v11 = HIBYTE(v9) & 0xF;
    if ((v9 & 0x2000000000000000) == 0)
      v11 = v8 & 0xFFFFFFFFFFFFLL;
    if (v11)
      goto LABEL_6;
LABEL_8:
    v8 = 0;
    v9 = 0;
    v10 = 0;
    v13 = 0;
    v14 = 0;
    goto LABEL_9;
  }
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_8;
LABEL_6:
  v12 = swift_getKeyPath(&unk_1090270);
  v15 = v3;
  sub_97F754(v8, v9, v10);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v15, v12, v5);
  swift_release(v12);
  v13 = *(_QWORD *)(v3 + OBJC_IVAR____TtCV16MusicApplication6Header13Configuration__attributionAction);
  swift_retain(*(_QWORD *)(v3 + OBJC_IVAR____TtCV16MusicApplication6Header13Configuration__attributionAction + 8));
LABEL_9:
  *a2 = v8;
  a2[1] = v9;
  a2[2] = v10;
  a2[3] = v13;
  a2[4] = v14;
}

uint64_t sub_9EA1AC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[3];

  v27 = a2;
  v3 = _s8MetadataVMa(0);
  v26 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EBA98);
  __chkstk_darwin(v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = _s8MetadataV13ConfigurationOMa(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v25 - v14;
  v16 = *a1;
  KeyPath = swift_getKeyPath(&unk_1090220);
  v28[0] = v16;
  v18 = sub_4DD24(&qword_14F9210, _s13ConfigurationCMa_0, (uint64_t)&unk_108D7B0);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v28, KeyPath, v18);
  swift_release(KeyPath);
  v19 = v16 + OBJC_IVAR____TtCV16MusicApplication6Header13Configuration__metadata;
  swift_beginAccess(v16 + OBJC_IVAR____TtCV16MusicApplication6Header13Configuration__metadata, v28, 0, 0);
  sub_5C238(v19, (uint64_t)v8, &qword_14EBA98);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_56024((uint64_t)v8, &qword_14EBA98);
LABEL_6:
    v23 = 1;
    v22 = v27;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56))(v22, v23, 1, v3);
  }
  sub_5C04C((uint64_t)v8, (uint64_t)v15, _s8MetadataV13ConfigurationOMa);
  if ((sub_5B81F4() & 1) == 0)
  {
    sub_5C0DC((uint64_t)v15, _s8MetadataV13ConfigurationOMa);
    goto LABEL_6;
  }
  sub_5C04C((uint64_t)v15, (uint64_t)v12, _s8MetadataV13ConfigurationOMa);
  v20 = &v5[*(int *)(v3 + 20)];
  *(_QWORD *)v20 = swift_getKeyPath(&unk_1090128);
  v20[8] = 0;
  v21 = &v5[*(int *)(v3 + 24)];
  *(_QWORD *)v21 = swift_getKeyPath(&unk_10900B0);
  v21[8] = 0;
  sub_5C04C((uint64_t)v12, (uint64_t)v5, _s8MetadataV13ConfigurationOMa);
  v22 = v27;
  sub_5C04C((uint64_t)v5, v27, _s8MetadataVMa);
  v23 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56))(v22, v23, 1, v3);
}

void sub_9EA448(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10901F8);
  v14 = v3;
  v5 = sub_4DD24(&qword_14F9210, _s13ConfigurationCMa_0, (uint64_t)&unk_108D7B0);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v14, KeyPath, v5);
  swift_release(KeyPath);
  v6 = (uint64_t *)(v3 + OBJC_IVAR____TtCV16MusicApplication6Header13Configuration__description);
  v7 = *(_QWORD *)(v3 + OBJC_IVAR____TtCV16MusicApplication6Header13Configuration__description + 8);
  if (!v7)
  {
    v8 = 0;
LABEL_8:
    v9 = 0;
    v10 = 0;
    v12 = 0;
    v13 = 0;
    goto LABEL_9;
  }
  v8 = *v6;
  v9 = v6[2];
  v10 = v6[3];
  v11 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0)
    v11 = v8 & 0xFFFFFFFFFFFFLL;
  if (!v11)
  {
    swift_bridgeObjectRetain();
    sub_A9DEC(v9, v10);
    swift_bridgeObjectRelease();
    sub_5C198(v9, v10);
    v8 = 0;
    v7 = 0;
    goto LABEL_8;
  }
  v12 = swift_getKeyPath(&unk_1090128);
  v13 = swift_getKeyPath(&unk_10900B0);
  swift_bridgeObjectRetain();
  sub_A9DEC(v9, v10);
LABEL_9:
  *(_QWORD *)a2 = v8;
  *(_QWORD *)(a2 + 8) = v7;
  *(_QWORD *)(a2 + 16) = v9;
  *(_QWORD *)(a2 + 24) = v10;
  *(_QWORD *)(a2 + 32) = v12;
  *(_QWORD *)(a2 + 40) = 0;
  *(_QWORD *)(a2 + 48) = v13;
  *(_BYTE *)(a2 + 56) = 0;
}

uint64_t sub_9EA5A0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  __n128 v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v4 = _s16PlaybackControlsVMa(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a1;
  KeyPath = swift_getKeyPath(&unk_1090150);
  v22 = v8;
  v10 = sub_4DD24(&qword_14F9210, _s13ConfigurationCMa_0, (uint64_t)&unk_108D7B0);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v22, KeyPath, v10);
  v11 = swift_release(KeyPath);
  if ((*(_BYTE *)(v8 + OBJC_IVAR____TtCV16MusicApplication6Header13Configuration__hidePlaybackControls) & 1) != 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v5 + 56))(a2, 1, 1, v4, v11);
  v13 = swift_getKeyPath(&unk_1090178);
  v22 = v8;
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v22, v13, v10);
  swift_release(v13);
  v21 = a2;
  v14 = *(_QWORD *)(v8 + OBJC_IVAR____TtCV16MusicApplication6Header13Configuration__playbackIntentProvider);
  v15 = *(_QWORD *)(v8 + OBJC_IVAR____TtCV16MusicApplication6Header13Configuration__playbackIntentProvider + 8);
  v16 = swift_getKeyPath(&unk_10901A0);
  v22 = v8;
  sub_A9DEC(v14, v15);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v22, v16, v10);
  swift_release(v16);
  v17 = *(_QWORD *)(v8 + OBJC_IVAR____TtCV16MusicApplication6Header13Configuration__playIntentButtonIntents);
  *((_QWORD *)v7 + 3) = swift_getKeyPath(&unk_10900B0);
  v7[32] = 0;
  *((_QWORD *)v7 + 5) = swift_getKeyPath(&unk_1090128);
  v7[48] = 0;
  v18 = &v7[*(int *)(v4 + 32)];
  *(_QWORD *)v18 = swift_getKeyPath(&unk_10901C8);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_14D9670);
  swift_storeEnumTagMultiPayload(v18, v19, 0);
  *(_QWORD *)v7 = v14;
  *((_QWORD *)v7 + 1) = v15;
  *((_QWORD *)v7 + 2) = v17;
  v20 = v21;
  sub_5C04C((uint64_t)v7, v21, _s16PlaybackControlsVMa);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v20, 0, 1, v4);
  return swift_bridgeObjectRetain();
}

uint64_t sub_9EA7D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t TupleTypeMetadata2;
  uint64_t v12;
  uint64_t WitnessTable;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  void *v42;

  v38 = a2;
  v3 = *(_QWORD *)(a1 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(a1);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = *(_QWORD *)(v6 + 16);
  v7 = v36;
  v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EEF48);
  v9 = type metadata accessor for ModifiedContent(255, v7, v8);
  v35 = *(_QWORD *)(a1 + 24);
  v10 = type metadata accessor for ModifiedContent(255, v35, &type metadata for _FlexFrameLayout);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v9, v10, 0, 0);
  v12 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v12);
  v15 = type metadata accessor for AdaptativeContainerStack(255, v12, WitnessTable, v14);
  v16 = type metadata accessor for ModifiedContent(255, v15, &type metadata for _PaddingLayout);
  v17 = type metadata accessor for ModifiedContent(255, v16, &type metadata for _PaddingLayout);
  v41 = swift_getWitnessTable(&unk_108FF08, v15);
  v42 = &protocol witness table for _PaddingLayout;
  v39 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v16);
  v40 = &protocol witness table for _PaddingLayout;
  v18 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v17);
  v20 = type metadata accessor for AdaptativeContainer(0, v17, v18, v19);
  v34 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v22 = (char *)&v33 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v23);
  v26 = (char *)&v33 - v25;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16))(v5, v37, a1, v24);
  v27 = *(unsigned __int8 *)(v3 + 80);
  v28 = (v27 + 48) & ~v27;
  v29 = swift_allocObject(&unk_13931E8, v28 + v4, v27 | 7);
  v30 = v35;
  *(_QWORD *)(v29 + 16) = v36;
  *(_QWORD *)(v29 + 24) = v30;
  *(_OWORD *)(v29 + 32) = *(_OWORD *)(a1 + 32);
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v29 + v28, v5, a1);
  sub_59F728((uint64_t)sub_9F5724, v29, v17, v18, v22);
  swift_getWitnessTable(&unk_107C448, v20);
  sub_505E64((uint64_t)v22, v20, (uint64_t)v26);
  v31 = *(uint64_t (**)(char *, uint64_t))(v34 + 8);
  v31(v22, v20);
  sub_4FF1F4((uint64_t)v26, v20, v38);
  return v31(v26, v20);
}

uint64_t sub_9EAA8C@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t TupleTypeMetadata2;
  uint64_t v20;
  uint64_t WitnessTable;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _BYTE *v57;
  void (*v58)(uint64_t, uint64_t);
  _BYTE v60[4];
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _BYTE *v65;
  uint64_t v66;
  _BYTE *v67;
  uint64_t v68;
  _BYTE *v69;
  _BYTE *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  void *v83;
  _QWORD v84[5];

  v78 = a6;
  v79 = a7;
  v84[0] = a3;
  v84[1] = a4;
  v11 = a1 & 1;
  v76 = a5;
  v84[2] = a5;
  v84[3] = a6;
  v12 = type metadata accessor for Header.Content(0, (uint64_t)v84);
  v13 = *(_QWORD *)(v12 - 8);
  v68 = *(_QWORD *)(v13 + 64);
  __chkstk_darwin(v12);
  v15 = &v60[-v14];
  v16 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EEF48);
  v74 = a3;
  v17 = type metadata accessor for ModifiedContent(255, a3, v16);
  v75 = a4;
  v18 = type metadata accessor for ModifiedContent(255, a4, &type metadata for _FlexFrameLayout);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v17, v18, 0, 0);
  v20 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v20);
  v64 = v20;
  v63 = WitnessTable;
  v23 = type metadata accessor for AdaptativeContainerStack(0, v20, WitnessTable, v22);
  v66 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v65 = &v60[-v24];
  v25 = type metadata accessor for ModifiedContent(0, v23, &type metadata for _PaddingLayout);
  v71 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v67 = &v60[-v26];
  v73 = v27;
  v28 = type metadata accessor for ModifiedContent(0, v27, &type metadata for _PaddingLayout);
  v72 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v69 = &v60[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v30);
  v70 = &v60[-v31];
  v77 = v11;
  v32 = sub_9EAF10(v11, v12);
  v33 = v32;
  v35 = v34;
  if ((a1 & 1) != 0)
  {
    v62 = *(_QWORD *)a2;
    v61 = *(unsigned __int8 *)(a2 + 8);
  }
  else
  {
    v62 = 0;
    v61 = 0;
  }
  v36 = static Alignment.bottom.getter(v32);
  v38 = v37;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v13 + 16))(v15, a2, v12);
  v39 = *(unsigned __int8 *)(v13 + 80);
  v40 = v13;
  v41 = (v39 + 48) & ~v39;
  v42 = v12;
  v43 = v41 + v68;
  v44 = (char *)swift_allocObject(&unk_1393210, v41 + v68 + 1, v39 | 7);
  v45 = v75;
  *((_QWORD *)v44 + 2) = v74;
  *((_QWORD *)v44 + 3) = v45;
  v46 = v78;
  *((_QWORD *)v44 + 4) = v76;
  *((_QWORD *)v44 + 5) = v46;
  (*(void (**)(char *, _BYTE *, uint64_t))(v40 + 32))(&v44[v41], v15, v42);
  v44[v43] = v77;
  v47 = v65;
  v48 = sub_9E5E8C(v36, v38, v62, v61, (uint64_t)sub_9F58A4, (uint64_t)v44, v64, v63, (uint64_t)v65);
  v49 = static Edge.Set.top.getter(v48);
  v50 = swift_getWitnessTable(&unk_108FF08, v23);
  v51 = v67;
  View.padding(_:_:)(v49, *(_QWORD *)&v33, 0, v23, v50);
  v52 = (*(uint64_t (**)(_BYTE *, uint64_t))(v66 + 8))(v47, v23);
  v53 = static Edge.Set.bottom.getter(v52);
  v82 = v50;
  v83 = &protocol witness table for _PaddingLayout;
  v54 = v73;
  v55 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v73);
  v56 = (uint64_t)v69;
  View.padding(_:_:)(v53, v35, 0, v54, v55);
  (*(void (**)(_BYTE *, uint64_t))(v71 + 8))(v51, v54);
  v80 = v55;
  v81 = &protocol witness table for _PaddingLayout;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v28);
  v57 = v70;
  sub_505E64(v56, v28, (uint64_t)v70);
  v58 = *(void (**)(uint64_t, uint64_t))(v72 + 8);
  v58(v56, v28);
  sub_4FF1F4((uint64_t)v57, v28, v79);
  return ((uint64_t (*)(_BYTE *, uint64_t))v58)(v57, v28);
}

double sub_9EAF10(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;

  if ((a1 & 1) == 0)
  {
    v3 = v2 + *(int *)(a2 + 64);
    v4 = *(_QWORD *)v3;
    v5 = *(_BYTE *)(v3 + 8);
    sub_270050(*(_QWORD *)v3, v5);
    v6 = sub_724C4C(v4, v5);
    sub_270154(v4, v5);
    if ((v6 & 0xFE) != 2 && qword_14AC078 != -1)
      swift_once(&qword_14AC078, sub_ABE950);
  }
  return 7.0;
}

uint64_t sub_9EAFCC@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t);
  char *v43;
  char *v44;
  uint64_t (*v45)(char *, uint64_t);
  uint64_t v47;
  char *v48;
  uint64_t WitnessTable;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD v62[2];
  uint64_t v63[7];

  v59 = a7;
  v10 = a2 & 1;
  v11 = *(_QWORD *)(a4 - 8);
  v56 = a6;
  v57 = v11;
  v54 = a4;
  __chkstk_darwin(a1);
  v53 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = type metadata accessor for ModifiedContent(0, v13, &type metadata for _FlexFrameLayout);
  v58 = *(_QWORD *)(v51 - 8);
  __chkstk_darwin(v51);
  v52 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v55 = (uint64_t)&v47 - v16;
  v17 = *(_QWORD *)(a3 - 8);
  __chkstk_darwin(v18);
  v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EEF48);
  v22 = type metadata accessor for ModifiedContent(0, a3, v21);
  v47 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v24 = (char *)&v47 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __chkstk_darwin(v25);
  v28 = (char *)&v47 - v27;
  v48 = (char *)&v47 - v27;
  (*(void (**)(uint64_t, double))(a1 + 16))(v10, v26);
  sub_5F90E0(a3, a5);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v20, a3);
  v29 = sub_5C150(qword_14EEF50, &qword_14EEF48, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
  v63[4] = a5;
  v63[5] = v29;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v22);
  sub_505E64((uint64_t)v24, v22, (uint64_t)v28);
  v30 = v47;
  v50 = *(void (**)(char *, uint64_t))(v47 + 8);
  v50(v24, v22);
  v31 = v53;
  v32 = (*(uint64_t (**)(uint64_t))(a1 + 32))(v10);
  v33 = static Alignment.bottomLeading.getter(v32);
  v34 = v56;
  v35 = v54;
  v36 = (uint64_t)v52;
  View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0, 1, 0, 1, 0x7FF0000000000000, 0, 0, 1, 0, 1, 0x7FF0000000000000, 0, v33, v37, v54, v56);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v31, v35);
  v63[2] = v34;
  v63[3] = (uint64_t)&protocol witness table for _FlexFrameLayout;
  v38 = v51;
  v39 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v51);
  v40 = v55;
  sub_505E64(v36, v38, v55);
  v41 = v58;
  v42 = *(void (**)(uint64_t, uint64_t))(v58 + 8);
  v42(v36, v38);
  v43 = v48;
  (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v24, v48, v22);
  v63[0] = (uint64_t)v24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 16))(v36, v40, v38);
  v63[1] = v36;
  v62[0] = v22;
  v62[1] = v38;
  v60 = WitnessTable;
  v61 = v39;
  sub_2B7F28(v63, 2uLL, (uint64_t)v62);
  v42(v40, v38);
  v44 = v43;
  v45 = (uint64_t (*)(char *, uint64_t))v50;
  v50(v44, v22);
  v42(v36, v38);
  return v45(v24, v22);
}

uint64_t sub_9EB37C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t TupleTypeMetadata;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  double v58;
  uint64_t v59;
  char *v60;
  uint64_t *v61;
  _QWORD *v62;
  char *v63;
  char *v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  double v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(uint64_t, uint64_t);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  __int128 v101;
  __int128 v102;
  uint64_t v103;
  _QWORD v104[2];
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t WitnessTable;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD *v128;
  uint64_t *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;

  v128 = a1;
  v2 = a1[2];
  v3 = a1[3];
  v4 = a1[4];
  v5 = a1[5];
  v125 = a2;
  v126 = v4;
  v6 = a1[6];
  v7 = a1[7];
  v8 = a1[8];
  v9 = a1[9];
  v10 = a1[11];
  v135 = a1[10];
  v158 = v2;
  v159 = v3;
  v137 = v2;
  v160 = v4;
  v161 = v5;
  v131 = v5;
  v162 = v6;
  v163 = v7;
  v11 = v6;
  v12 = v7;
  v164 = v8;
  v165 = v9;
  v13 = v8;
  v14 = v9;
  v166 = v135;
  v167 = v10;
  v153 = type metadata accessor for Header.TextVStack.TitleAttributionStack(255, (uint64_t)&v158);
  v158 = v2;
  v159 = v3;
  v132 = v3;
  v15 = v126;
  v160 = v126;
  v161 = v5;
  v162 = v11;
  v163 = v12;
  v164 = v13;
  v165 = v14;
  v166 = v135;
  v167 = v10;
  v154 = type metadata accessor for Header.TextVStack.MetadataContainer(255, (uint64_t)&v158);
  v158 = v137;
  v159 = v3;
  v16 = v5;
  v160 = v126;
  v161 = v5;
  v162 = v11;
  v163 = v12;
  v133 = v12;
  v134 = v10;
  v136 = v13;
  v164 = v13;
  v165 = v14;
  v138 = v14;
  v166 = v135;
  v167 = v10;
  v155 = type metadata accessor for Header.TextVStack.PlaybackControlContainer(255, (uint64_t)&v158);
  v158 = v137;
  v17 = v132;
  v159 = v132;
  v160 = v126;
  v161 = v5;
  v162 = v11;
  v163 = v12;
  v164 = v13;
  v165 = v14;
  v166 = v135;
  v167 = v10;
  v156 = type metadata accessor for Header.TextVStack.DescriptionContainer(255, (uint64_t)&v158);
  TupleTypeMetadata = swift_getTupleTypeMetadata(255, 4);
  v19 = type metadata accessor for TupleView(255, TupleTypeMetadata);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v19);
  v109 = v19;
  v130 = type metadata accessor for VStack(0, v19);
  v110 = *(_QWORD *)(v130 - 8);
  __chkstk_darwin(v130);
  v112 = (char *)v104 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v111 = (uint64_t)v104 - v22;
  v24 = v136;
  v23 = v137;
  v158 = v137;
  v159 = v17;
  v160 = v15;
  v161 = v16;
  v25 = v11;
  v26 = v133;
  v162 = v11;
  v163 = v133;
  v27 = v138;
  v164 = v136;
  v165 = v138;
  v28 = v135;
  v166 = v135;
  v167 = v134;
  v153 = type metadata accessor for Header.TextVStack.TitleAttributionStack(255, (uint64_t)&v158);
  v158 = v23;
  v159 = v17;
  v160 = v15;
  v161 = v16;
  v162 = v25;
  v163 = v26;
  v164 = v24;
  v165 = v27;
  v29 = v134;
  v166 = v28;
  v167 = v134;
  v154 = type metadata accessor for Header.TextVStack.MetadataContainer(255, (uint64_t)&v158);
  v155 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EEF38);
  v30 = v137;
  v158 = v137;
  v159 = v17;
  v160 = v15;
  v161 = v16;
  v127 = v25;
  v162 = v25;
  v163 = v26;
  v164 = v24;
  v31 = v138;
  v165 = v138;
  v166 = v28;
  v167 = v29;
  v156 = type metadata accessor for Header.TextVStack.DescriptionContainer(255, (uint64_t)&v158);
  v158 = v30;
  v159 = v17;
  v160 = v15;
  v161 = v16;
  v32 = v15;
  v162 = v25;
  v163 = v26;
  v164 = v136;
  v165 = v31;
  v166 = v28;
  v167 = v29;
  v33 = v29;
  v157 = type metadata accessor for Header.TextVStack.PlaybackControlContainer(255, (uint64_t)&v158);
  v34 = swift_getTupleTypeMetadata(255, 5);
  v35 = type metadata accessor for TupleView(255, v34);
  v104[0] = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v35);
  v104[1] = v35;
  v36 = type metadata accessor for VStack(0, v35);
  v105 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36);
  v107 = (char *)v104 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __chkstk_darwin(v38);
  v106 = (uint64_t)v104 - v40;
  v124 = v41;
  v42 = type metadata accessor for _ConditionalContent(0, v130, v41, v39);
  v122 = *(_QWORD *)(v42 - 8);
  v123 = v42;
  __chkstk_darwin(v42);
  v121 = (char *)v104 - v43;
  v44 = v16;
  v45 = type metadata accessor for Optional(0, v16);
  v117 = *(_QWORD *)(v45 - 8);
  v118 = v45;
  __chkstk_darwin(v45);
  v47 = (char *)v104 - v46;
  v48 = v132;
  v49 = type metadata accessor for Optional(0, v132);
  v115 = *(_QWORD *)(v49 - 8);
  v116 = v49;
  __chkstk_darwin(v49);
  v114 = (char *)v104 - v50;
  v51 = v137;
  v52 = *(_QWORD *)(v137 - 8);
  __chkstk_darwin(v53);
  v55 = (uint64_t)v104 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = v55;
  v158 = v51;
  v159 = v48;
  v160 = v32;
  v161 = v44;
  v162 = v127;
  v163 = v133;
  v56 = v135;
  v164 = v136;
  v165 = v138;
  v166 = v135;
  v167 = v33;
  v57 = type metadata accessor for Header.TextVStack.TitleAttributionStack(0, (uint64_t)&v158);
  v119 = *(_QWORD *)(v57 - 8);
  v120 = v57;
  v58 = __chkstk_darwin(v57);
  v60 = (char *)v104 - v59;
  v62 = v128;
  v61 = v129;
  (*(void (**)(uint64_t, char *, uint64_t, double))(v52 + 16))(v55, (char *)v129 + *((int *)v128 + 26), v51, v58);
  v63 = v114;
  (*(void (**)(char *, char *, uint64_t))(v115 + 16))(v114, (char *)v61 + *((int *)v62 + 27), v116);
  v64 = (char *)v61 + *((int *)v62 + 29);
  v65 = v61;
  v67 = v117;
  v66 = v118;
  (*(void (**)(char *, char *, uint64_t))(v117 + 16))(v47, v64, v118);
  v68 = v131;
  LOBYTE(v55) = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v131 - 8) + 48))(v47, 1, v131) != 1;
  (*(void (**)(char *, uint64_t))(v67 + 8))(v47, v66);
  v69 = *v65;
  v70 = v65;
  v103 = v56;
  *((_QWORD *)&v102 + 1) = v138;
  *(_QWORD *)&v102 = v136;
  v71 = v133;
  *((_QWORD *)&v101 + 1) = v133;
  v72 = v127;
  *(_QWORD *)&v101 = v127;
  v73 = (uint64_t)v60;
  v74 = (uint64_t)v63;
  v75 = v60;
  v118 = v69;
  v76 = v137;
  v77 = v132;
  v78 = v126;
  sub_9EBB9C(v113, v74, v55, v69, v137, v132, v126, v68, v73, v101, v102, v103, v134);
  v79 = (char *)v70 + *((int *)v128 + 31);
  v80 = *(_QWORD *)v79;
  LOBYTE(v68) = v79[8];
  sub_270050(*(_QWORD *)v79, v68);
  LOBYTE(v55) = sub_724BF4(v80, v68);
  sub_270154(v80, v68);
  v139 = v76;
  v140 = v77;
  v141 = v78;
  v142 = v131;
  v143 = v72;
  v144 = v71;
  v145 = v136;
  v146 = v138;
  v147 = v135;
  v148 = v134;
  v82 = v75;
  v149 = v75;
  v150 = v129;
  if ((v55 & 1) != 0)
  {
    v93 = (uint64_t)v107;
    VStack.init(alignment:spacing:content:)(v81);
    v88 = v124;
    v94 = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v124);
    v95 = v106;
    sub_505E64(v93, v88, v106);
    v87 = *(void (**)(uint64_t, uint64_t))(v105 + 8);
    v87(v93, v88);
    sub_4FF1F4(v95, v88, v93);
    v84 = v130;
    v96 = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v130);
    v90 = (uint64_t)v121;
    sub_A146E4(v93, v84, v88, v96, v94);
    v87(v93, v88);
    v91 = v95;
    v92 = v88;
  }
  else
  {
    v83 = (uint64_t)v112;
    VStack.init(alignment:spacing:content:)(v81);
    v84 = v130;
    v85 = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v130);
    v86 = v111;
    sub_505E64(v83, v84, v111);
    v87 = *(void (**)(uint64_t, uint64_t))(v110 + 8);
    v87(v83, v84);
    sub_4FF1F4(v86, v84, v83);
    v88 = v124;
    v89 = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v124);
    v90 = (uint64_t)v121;
    sub_A14620(v83, v84, v88, v85, v89);
    v87(v83, v84);
    v91 = v86;
    v92 = v84;
  }
  v87(v91, v92);
  v97 = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v84);
  v98 = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v88);
  v151 = v97;
  v152 = v98;
  v99 = v123;
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v123);
  sub_4FF1F4(v90, v99, v125);
  (*(void (**)(uint64_t, uint64_t))(v122 + 8))(v90, v99);
  return (*(uint64_t (**)(char *, uint64_t))(v119 + 8))(v82, v120);
}

uint64_t sub_9EBB9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 a10, __int128 a11, uint64_t a12, uint64_t a13)
{
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  _QWORD v26[4];
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 32))(a9, a1, a5);
  v26[0] = a5;
  v26[1] = a6;
  v26[2] = a7;
  v26[3] = a8;
  v27 = a10;
  v28 = a11;
  v29 = a12;
  v30 = a13;
  v21 = (int *)type metadata accessor for Header.TextVStack.TitleAttributionStack(0, (uint64_t)v26);
  v22 = a9 + v21[25];
  v23 = type metadata accessor for Optional(0, a6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v22, a2, v23);
  *(_BYTE *)(a9 + v21[26]) = a3;
  *(_QWORD *)(a9 + v21[27]) = a4;
  v24 = a9 + v21[28];
  result = swift_getKeyPath(&unk_1090128);
  *(_QWORD *)v24 = result;
  *(_BYTE *)(v24 + 8) = 0;
  return result;
}

uint64_t sub_9EBCA8@<X0>(void (*a1)(uint64_t, uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void (*v102)(uint64_t, uint64_t);
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void (*v110)(char *, uint64_t, uint64_t);
  char *v111;
  uint64_t v112;
  void (*v113)(uint64_t, uint64_t);
  void (*v114)(uint64_t, uint64_t);
  void (*v115)(char *, uint64_t);
  __int128 v117;
  __int128 v118;
  __int128 v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  void (*v126)(char *);
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unsigned int v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  void (*v136)(uint64_t, uint64_t);
  uint64_t v137;
  uint64_t WitnessTable;
  char *v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  unint64_t v168;
  uint64_t v169;
  uint64_t v170;
  _QWORD v171[5];
  uint64_t v172;
  char v173;
  char v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;

  v154 = a2;
  v136 = a1;
  v147 = a7;
  v165 = a11;
  v161 = a9;
  v142 = *(_QWORD *)(a6 - 8);
  __chkstk_darwin(a1);
  v141 = (char *)&v121 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v175 = v15;
  v176 = v16;
  v17 = v15;
  v149 = v15;
  v177 = v18;
  v178 = v19;
  v179 = v20;
  v180 = v21;
  v22 = v20;
  v23 = v21;
  v128 = v21;
  v181 = v25;
  v182 = v24;
  v26 = v25;
  v183 = v28;
  v184 = v27;
  v29 = v28;
  v144 = type metadata accessor for Header.TextVStack.PlaybackControlContainer(0, (uint64_t)&v175);
  v145 = *(_QWORD *)(v144 - 8);
  __chkstk_darwin(v144);
  v146 = (char *)&v121 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v140 = (uint64_t)&v121 - v32;
  __chkstk_darwin(v33);
  v143 = (uint64_t)&v121 - v34;
  v137 = type metadata accessor for Optional(0, a5);
  v157 = *(_QWORD *)(v137 - 8);
  __chkstk_darwin(v137);
  v139 = (char *)&v121 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36);
  v135 = (char *)&v121 - v37;
  v175 = v17;
  v176 = a3;
  v177 = (uint64_t *)a4;
  v178 = a5;
  v38 = a5;
  v39 = v22;
  v148 = v22;
  v179 = v22;
  v180 = v23;
  v40 = v26;
  v41 = v161;
  v181 = v26;
  v182 = v161;
  v42 = v165;
  v183 = v29;
  v184 = v165;
  v153 = type metadata accessor for Header.TextVStack.DescriptionContainer(0, (uint64_t)&v175);
  v160 = *(_QWORD *)(v153 - 8);
  __chkstk_darwin(v153);
  v163 = (uint64_t)&v121 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v44);
  v159 = (uint64_t)&v121 - v45;
  v133 = type metadata accessor for Optional(0, a4);
  v132 = *(_QWORD *)(v133 - 8);
  __chkstk_darwin(v133);
  v131 = (char *)&v121 - v46;
  v47 = v149;
  v175 = v149;
  v176 = a3;
  v48 = a3;
  v177 = (uint64_t *)a4;
  v178 = v38;
  v49 = v128;
  v179 = v39;
  v180 = v128;
  v181 = v40;
  v182 = v41;
  v50 = v40;
  v183 = v29;
  v184 = v42;
  v51 = v42;
  v151 = type metadata accessor for Header.TextVStack.MetadataContainer(0, (uint64_t)&v175);
  v155 = *(_QWORD *)(v151 - 8);
  __chkstk_darwin(v151);
  v162 = (uint64_t)&v121 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v53);
  v164 = (uint64_t)&v121 - v54;
  v175 = v47;
  v176 = v48;
  v55 = v48;
  v177 = (uint64_t *)a4;
  v178 = v38;
  v123 = v38;
  v56 = v148;
  v179 = v148;
  v180 = v49;
  v122 = v50;
  v181 = v50;
  v182 = v41;
  v57 = v29;
  v183 = v29;
  v184 = v51;
  v58 = type metadata accessor for Header.TextVStack.TitleAttributionStack(0, (uint64_t)&v175);
  v158 = *(_QWORD *)(v58 - 8);
  v134 = v58;
  __chkstk_darwin(v58);
  v152 = (char *)&v121 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v60);
  v62 = (char *)&v121 - v61;
  v156 = (char *)&v121 - v61;
  WitnessTable = swift_getWitnessTable(&unk_10906D8, v58);
  sub_505E64((uint64_t)v136, v58, (uint64_t)v62);
  v175 = v47;
  v176 = v55;
  v124 = a4;
  v177 = (uint64_t *)a4;
  v178 = v38;
  v63 = v56;
  v179 = v56;
  v180 = v49;
  v64 = v49;
  v65 = v161;
  v181 = v50;
  v182 = v161;
  v183 = v57;
  v66 = v57;
  v150 = v57;
  v67 = v165;
  v184 = v165;
  v125 = type metadata accessor for Header.TextVStack(0, (uint64_t)&v175);
  v68 = v154;
  v69 = v131;
  (*(void (**)(char *, uint64_t, uint64_t))(v132 + 16))(v131, v154 + *(int *)(v125 + 112), v133);
  *((_QWORD *)&v117 + 1) = v66;
  v120 = v67;
  *(_QWORD *)&v117 = v65;
  v70 = v162;
  v71 = (uint64_t)v69;
  v72 = v47;
  v73 = v47;
  v74 = v55;
  v129 = v55;
  v75 = a4;
  v76 = v123;
  v77 = v63;
  v78 = v64;
  v79 = v122;
  sub_9EC6A4(v71, v72, v55, v75, v123, v77, v64, v122, v162, v117, v120);
  v80 = v151;
  v133 = swift_getWitnessTable(&unk_1090688, v151);
  sub_505E64(v70, v80, v164);
  v136 = *(void (**)(uint64_t, uint64_t))(v155 + 8);
  v136(v70, v80);
  LODWORD(v131) = *(unsigned __int8 *)(v68 + 8);
  v130 = v131 ^ 1;
  v81 = v125;
  v127 = v68 + *(int *)(v125 + 116);
  v126 = *(void (**)(char *))(v157 + 16);
  v82 = v135;
  v83 = v137;
  v126(v135);
  *(_QWORD *)&v118 = v65;
  *((_QWORD *)&v118 + 1) = v150;
  v84 = v163;
  v85 = (uint64_t)v82;
  v86 = v73;
  v87 = v74;
  v88 = v124;
  v89 = v76;
  v90 = v148;
  v91 = v79;
  sub_9EC744(v85, v86, v87, v124, v76, v148, v78, v79, v163, v118, v165);
  v92 = v153;
  v132 = swift_getWitnessTable(&unk_1090638, v153);
  sub_505E64(v84, v92, v159);
  v135 = *(char **)(v160 + 8);
  ((void (*)(uint64_t, uint64_t))v135)(v84, v92);
  v93 = (uint64_t)v141;
  v94 = v90;
  (*(void (**)(char *, uint64_t, uint64_t))(v142 + 16))(v141, v154 + *(int *)(v81 + 120), v90);
  v95 = v139;
  ((void (*)(char *, uint64_t, uint64_t))v126)(v139, v127, v83);
  LOBYTE(v90) = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 48))(v95, 1, v89) != 1;
  (*(void (**)(char *, uint64_t))(v157 + 8))(v95, v83);
  *(_QWORD *)&v119 = v91;
  *((_QWORD *)&v119 + 1) = v161;
  v96 = v140;
  sub_9EC7E4(v93, v90, v149, v129, v88, v89, v94, v78, v140, v119, v150, v165);
  v97 = v144;
  v98 = swift_getWitnessTable(&unk_10905E8, v144);
  v99 = v143;
  v100 = v96;
  sub_505E64(v96, v97, v143);
  v101 = v145;
  v102 = *(void (**)(uint64_t, uint64_t))(v145 + 8);
  v102(v100, v97);
  v103 = (uint64_t)v152;
  v104 = v134;
  (*(void (**)(char *, char *, uint64_t))(v158 + 16))(v152, v156, v134);
  v175 = v103;
  v105 = v162;
  v106 = v151;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v155 + 16))(v162, v164, v151);
  v172 = 0;
  v173 = v130;
  v174 = (char)v131;
  v176 = v105;
  v177 = &v172;
  v107 = v163;
  v108 = v159;
  v109 = v153;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v160 + 16))(v163, v159, v153);
  v178 = v107;
  v110 = *(void (**)(char *, uint64_t, uint64_t))(v101 + 16);
  v111 = v146;
  v110(v146, v99, v97);
  v179 = (uint64_t)v111;
  v171[0] = v104;
  v171[1] = v106;
  v171[2] = __swift_instantiateConcreteTypeFromMangledName(&qword_14EEF38);
  v171[3] = v109;
  v171[4] = v97;
  v166 = WitnessTable;
  v167 = v133;
  v168 = sub_9F55D4();
  v169 = v132;
  v170 = v98;
  sub_2B7F28(&v175, 5uLL, (uint64_t)v171);
  v102(v99, v97);
  v112 = v108;
  v113 = (void (*)(uint64_t, uint64_t))v135;
  ((void (*)(uint64_t, uint64_t))v135)(v112, v109);
  v114 = v136;
  v136(v164, v106);
  v115 = *(void (**)(char *, uint64_t))(v158 + 8);
  v115(v156, v104);
  v102((uint64_t)v111, v97);
  v113(v163, v109);
  v114(v162, v106);
  return ((uint64_t (*)(char *, uint64_t))v115)(v152, v104);
}

uint64_t sub_9EC6A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 a10, uint64_t a11)
{
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[7];
  __int128 v18;
  uint64_t v19;

  v17[0] = a2;
  v17[1] = a3;
  v17[2] = a4;
  v17[3] = a5;
  v17[4] = a6;
  v17[5] = a7;
  v17[6] = a8;
  v18 = a10;
  v19 = a11;
  v14 = a9 + *(int *)(type metadata accessor for Header.TextVStack.MetadataContainer(0, (uint64_t)v17) + 100);
  *(_QWORD *)v14 = swift_getKeyPath(&unk_1090128);
  *(_BYTE *)(v14 + 8) = 0;
  v15 = type metadata accessor for Optional(0, a4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a9, a1, v15);
}

uint64_t sub_9EC744@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 a10, uint64_t a11)
{
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[7];
  __int128 v18;
  uint64_t v19;

  v17[0] = a2;
  v17[1] = a3;
  v17[2] = a4;
  v17[3] = a5;
  v17[4] = a6;
  v17[5] = a7;
  v17[6] = a8;
  v18 = a10;
  v19 = a11;
  v14 = a9 + *(int *)(type metadata accessor for Header.TextVStack.DescriptionContainer(0, (uint64_t)v17) + 100);
  *(_QWORD *)v14 = swift_getKeyPath(&unk_1090128);
  *(_BYTE *)(v14 + 8) = 0;
  v15 = type metadata accessor for Optional(0, a5);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a9, a1, v15);
}

uint64_t sub_9EC7E4@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 a10, uint64_t a11, uint64_t a12)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  _QWORD v19[6];
  __int128 v20;
  uint64_t v21;
  uint64_t v22;

  v19[0] = a3;
  v19[1] = a4;
  v19[2] = a5;
  v19[3] = a6;
  v19[4] = a7;
  v19[5] = a8;
  v20 = a10;
  v21 = a11;
  v22 = a12;
  v16 = type metadata accessor for Header.TextVStack.PlaybackControlContainer(0, (uint64_t)v19);
  v17 = a9 + *(int *)(v16 + 104);
  *(_QWORD *)v17 = swift_getKeyPath(&unk_1090128);
  *(_BYTE *)(v17 + 8) = 0;
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a7 - 8) + 32))(a9, a1, a7);
  *(_BYTE *)(a9 + *(int *)(v16 + 100)) = a2;
  return result;
}

uint64_t sub_9EC88C@<X0>(void (*a1)(uint64_t, uint64_t)@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, void (*a12)(_QWORD, _QWORD), uint64_t a13)
{
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(_QWORD, _QWORD);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(_QWORD, _QWORD);
  uint64_t v52;
  int *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(uint64_t, uint64_t);
  void (*v91)(char *, uint64_t);
  void (*v92)(uint64_t, uint64_t);
  void (*v93)(char *, uint64_t);
  __int128 v95;
  __int128 v96;
  __int128 v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  void (*v108)(uint64_t, uint64_t);
  uint64_t WitnessTable;
  char *v110;
  char *v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  void (*v138)(_QWORD, _QWORD);
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  _QWORD v143[4];
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  void (*v152)(_QWORD, _QWORD);
  uint64_t v153;

  v127 = a2;
  v108 = a1;
  v118 = a9;
  v135 = a13;
  v138 = a12;
  v144 = a3;
  v145 = a4;
  v146 = a5;
  v147 = a6;
  v148 = a7;
  v149 = a8;
  v122 = a8;
  v150 = a10;
  v151 = a11;
  v152 = a12;
  v153 = a13;
  v116 = type metadata accessor for Header.TextVStack.DescriptionContainer(0, (uint64_t)&v144);
  v117 = *(_QWORD *)(v116 - 8);
  __chkstk_darwin(v116);
  v114 = (uint64_t)&v98 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v115 = (uint64_t)&v98 - v21;
  v129 = type metadata accessor for Optional(0, a6);
  v112 = *(_QWORD *)(v129 - 8);
  __chkstk_darwin(v129);
  v113 = (char *)&v98 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v111 = (char *)&v98 - v24;
  v110 = *(char **)(a7 - 8);
  __chkstk_darwin(v25);
  v106 = (char *)&v98 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v144 = a3;
  v145 = a4;
  v146 = a5;
  v147 = a6;
  v148 = a7;
  v149 = a8;
  v150 = a10;
  v151 = a11;
  v120 = a11;
  v27 = v138;
  v28 = v135;
  v152 = v138;
  v153 = v135;
  v128 = type metadata accessor for Header.TextVStack.PlaybackControlContainer(0, (uint64_t)&v144);
  v132 = *(_QWORD *)(v128 - 8);
  __chkstk_darwin(v128);
  v134 = (char *)&v98 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v107 = (uint64_t)&v98 - v31;
  __chkstk_darwin(v32);
  v137 = (uint64_t)&v98 - v33;
  v104 = type metadata accessor for Optional(0, a5);
  v103 = *(_QWORD *)(v104 - 8);
  __chkstk_darwin(v104);
  v102 = (char *)&v98 - v34;
  v144 = a3;
  v145 = a4;
  v121 = a3;
  v146 = a5;
  v147 = a6;
  v35 = a5;
  v123 = a6;
  v36 = a7;
  v148 = a7;
  v37 = v122;
  v149 = v122;
  v150 = a10;
  v151 = a11;
  v152 = v27;
  v153 = v28;
  v124 = type metadata accessor for Header.TextVStack.MetadataContainer(0, (uint64_t)&v144);
  v130 = *(_QWORD *)(v124 - 8);
  __chkstk_darwin(v124);
  v136 = (uint64_t)&v98 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  v125 = (uint64_t)&v98 - v40;
  v144 = a3;
  v145 = a4;
  v146 = v35;
  v147 = a6;
  v148 = v36;
  v149 = v37;
  v119 = v36;
  v41 = v37;
  v150 = a10;
  v42 = v120;
  v151 = v120;
  v152 = v27;
  v153 = v28;
  v43 = type metadata accessor for Header.TextVStack.TitleAttributionStack(0, (uint64_t)&v144);
  v133 = *(_QWORD *)(v43 - 8);
  v105 = v43;
  __chkstk_darwin(v43);
  v126 = (char *)&v98 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v45);
  v47 = (char *)&v98 - v46;
  v131 = (char *)&v98 - v46;
  WitnessTable = swift_getWitnessTable(&unk_10906D8, v43);
  sub_505E64((uint64_t)v108, v43, (uint64_t)v47);
  v48 = v121;
  v144 = v121;
  v145 = a4;
  v100 = a4;
  v101 = v35;
  v146 = v35;
  v147 = v123;
  v148 = v36;
  v149 = v41;
  v49 = v41;
  v150 = a10;
  v151 = v42;
  v50 = v42;
  v51 = v138;
  v52 = v135;
  v152 = v138;
  v153 = v135;
  v53 = (int *)type metadata accessor for Header.TextVStack(0, (uint64_t)&v144);
  v54 = (uint64_t)v102;
  (*(void (**)(char *, char *, uint64_t))(v103 + 16))(v102, &v127[v53[28]], v104);
  *((_QWORD *)&v95 + 1) = v51;
  *(_QWORD *)&v95 = v50;
  v55 = v136;
  v56 = v48;
  v57 = v123;
  v58 = v119;
  v99 = a10;
  sub_9EC6A4(v54, v56, a4, v35, v123, v119, v49, a10, v136, v95, v52);
  v59 = v124;
  v104 = swift_getWitnessTable(&unk_1090688, v124);
  sub_505E64(v55, v59, v125);
  v108 = *(void (**)(uint64_t, uint64_t))(v130 + 8);
  v108(v55, v59);
  v60 = v127;
  v61 = (uint64_t)v106;
  v62 = v58;
  (*((void (**)(char *, char *, uint64_t))v110 + 2))(v106, &v127[v53[30]], v58);
  v110 = &v60[v53[29]];
  v63 = v112;
  v103 = *(_QWORD *)(v112 + 16);
  v64 = v111;
  v65 = v129;
  ((void (*)(char *))v103)(v111);
  v66 = v57;
  LOBYTE(v58) = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 48))(v64, 1, v57) != 1;
  (*(void (**)(char *, uint64_t))(v63 + 8))(v64, v65);
  v67 = v135;
  v68 = v120;
  *(_QWORD *)&v96 = a10;
  *((_QWORD *)&v96 + 1) = v120;
  v69 = v107;
  v70 = v58;
  v71 = v121;
  v72 = v100;
  v73 = v101;
  v74 = v122;
  sub_9EC7E4(v61, v70, v121, v100, v101, v66, v62, v122, v107, v96, (uint64_t)v138, v135);
  v75 = v128;
  v112 = swift_getWitnessTable(&unk_10905E8, v128);
  sub_505E64(v69, v75, v137);
  v127 = *(char **)(v132 + 8);
  ((void (*)(uint64_t, uint64_t))v127)(v69, v75);
  v76 = (uint64_t)v113;
  ((void (*)(char *, char *, uint64_t))v103)(v113, v110, v129);
  *(_QWORD *)&v97 = v68;
  *((_QWORD *)&v97 + 1) = v138;
  v77 = v114;
  sub_9EC744(v76, v71, v72, v73, v66, v119, v74, v99, v114, v97, v67);
  v78 = v116;
  v79 = swift_getWitnessTable(&unk_1090638, v116);
  v80 = v115;
  sub_505E64(v77, v78, v115);
  v81 = v117;
  v138 = *(void (**)(_QWORD, _QWORD))(v117 + 8);
  v138(v77, v78);
  v82 = (uint64_t)v126;
  v83 = v105;
  (*(void (**)(char *, char *, uint64_t))(v133 + 16))(v126, v131, v105);
  v144 = v82;
  v84 = v136;
  v85 = v125;
  v86 = v124;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v130 + 16))(v136, v125, v124);
  v145 = v84;
  v87 = v134;
  v88 = v128;
  (*(void (**)(char *, uint64_t, uint64_t))(v132 + 16))(v134, v137, v128);
  v146 = (uint64_t)v87;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v81 + 16))(v77, v80, v78);
  v147 = v77;
  v143[0] = v83;
  v143[1] = v86;
  v143[2] = v88;
  v143[3] = v78;
  v89 = v88;
  v139 = WitnessTable;
  v140 = v104;
  v141 = v112;
  v142 = v79;
  sub_2B7F28(&v144, 4uLL, (uint64_t)v143);
  v90 = v138;
  v138(v80, v78);
  v91 = (void (*)(char *, uint64_t))v127;
  ((void (*)(uint64_t, uint64_t))v127)(v137, v88);
  v92 = v108;
  v108(v85, v86);
  v93 = *(void (**)(char *, uint64_t))(v133 + 8);
  v93(v131, v83);
  v90(v77, v78);
  v91(v134, v89);
  v92(v136, v86);
  return ((uint64_t (*)(char *, uint64_t))v93)(v126, v83);
}

uint64_t sub_9ED1EC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t TupleTypeMetadata2;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t TupleTypeMetadata3;
  uint64_t v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  double v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t, double);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE *v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  double v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t KeyPath;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(char *, uint64_t, uint64_t);
  char *v78;
  void (*v79)(char *, uint64_t);
  uint64_t (*v80)(uint64_t, uint64_t);
  __int128 v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  double (*v98)(uint64_t, uint64_t);
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char v130;
  uint64_t v131;
  char v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t WitnessTable;
  uint64_t v146;

  v100 = a2;
  v4 = a1[2];
  v5 = type metadata accessor for BaselineSpacer(255);
  v6 = a1[3];
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v5, v6, 0, 0);
  v8 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  v9 = type metadata accessor for Optional(255, v8);
  v10 = swift_getTupleTypeMetadata2(255, v4, v9, 0, 0);
  v11 = type metadata accessor for TupleView(255, v10);
  v12 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14E1080);
  v13 = type metadata accessor for ModifiedContent(255, v4, v12);
  v14 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14BF188);
  v15 = v6;
  v106 = v6;
  v16 = type metadata accessor for Optional(255, v6);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3(255, v13, v14, v16, 0, 0);
  v18 = type metadata accessor for TupleView(255, TupleTypeMetadata3);
  v20 = type metadata accessor for _ConditionalContent(255, v11, v18, v19);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v11);
  v146 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v18);
  v94 = v20;
  v93 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v20);
  v21 = type metadata accessor for VStack(0, v20);
  v22 = *(_QWORD *)(v21 - 8);
  v91 = v21;
  v96 = v22;
  __chkstk_darwin(v21);
  v90 = (char *)&v84 - v23;
  v97 = type metadata accessor for ModifiedContent(0, v24, v12);
  v99 = *(_QWORD *)(v97 - 8);
  __chkstk_darwin(v97);
  v110 = (char *)&v84 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v95 = (uint64_t)&v84 - v27;
  v28 = type metadata accessor for Font.TextStyle(0);
  __chkstk_darwin(v28);
  v30 = (char *)&v84 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = a1[4];
  v104 = a1[5];
  v105 = (uint64_t *)v31;
  v32 = a1[6];
  v33 = a1[7];
  v34 = a1[9];
  v102 = a1[8];
  v103 = v32;
  v35 = a1[11];
  v101 = a1[10];
  v36 = a1;
  v86 = v35;
  v87 = a1;
  v135 = v4;
  v136 = v15;
  v137 = (uint64_t *)v31;
  v138 = v104;
  v139 = v32;
  v140 = v33;
  v141 = v102;
  v142 = v34;
  v37 = v34;
  v84 = v34;
  v143 = v101;
  v144 = v35;
  v38 = v35;
  v108 = type metadata accessor for Header.TextVStack.TitleAttributionStack.Spacing.Before(0, (uint64_t)&v135);
  v111 = *(_QWORD *)(v108 - 8);
  __chkstk_darwin(v108);
  v40 = (char *)&v84 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __chkstk_darwin(v41);
  v109 = (uint64_t)&v84 - v43;
  v44 = *((int *)v36 + 26);
  v85 = v2;
  LOBYTE(v36) = *(_BYTE *)(v2 + v44);
  v45 = v33;
  v46 = *(void (**)(uint64_t, uint64_t, double))(v33 + 16);
  v47 = v4;
  v107 = v45;
  v46(v4, v45, v42);
  v83 = v38;
  v48 = v101;
  *((_QWORD *)&v82 + 1) = v37;
  v49 = v102;
  *(_QWORD *)&v82 = v102;
  v50 = (uint64_t)v40;
  v88 = v47;
  v89 = v40;
  v51 = v40;
  v52 = (char)v36;
  v53 = (uint64_t)v30;
  v54 = (uint64_t)v105;
  v55 = v106;
  v56 = v103;
  v57 = v104;
  sub_9ED824(v52, v53, v47, v106, (uint64_t)v105, v104, v103, v45, v51, v82, v101, v83);
  v58 = v108;
  v92 = swift_getWitnessTable(&unk_1090990, v108);
  sub_505E64(v50, v58, v109);
  v98 = *(double (**)(uint64_t, uint64_t))(v111 + 8);
  v59 = v98(v50, v58);
  v60 = v86;
  v61 = v84;
  v112 = v47;
  v113 = v55;
  v114 = v54;
  v115 = v57;
  v116 = v56;
  v117 = v107;
  v118 = v49;
  v119 = v84;
  v120 = v48;
  v121 = v86;
  v122 = v85;
  v62 = v90;
  VStack.init(alignment:spacing:content:)(v59);
  v63 = v91;
  v64 = swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v91);
  v65 = (uint64_t)v110;
  View.layoutPriority(_:)(v63, v64, 3.0);
  (*(void (**)(char *, uint64_t))(v96 + 8))(v62, v63);
  v66 = sub_5C150(&qword_14E1078, &qword_14E1080, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
  v133 = v64;
  v134 = v66;
  v67 = v97;
  v94 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v97);
  v68 = v95;
  v69 = v65;
  sub_505E64(v65, v67, v95);
  v70 = v99;
  v96 = *(_QWORD *)(v99 + 8);
  ((void (*)(uint64_t, uint64_t))v96)(v69, v67);
  KeyPath = swift_getKeyPath(&unk_1090128);
  v126 = KeyPath;
  LOBYTE(v127) = 0;
  v135 = v88;
  v136 = v106;
  v137 = v105;
  v138 = v104;
  v139 = v103;
  v140 = v107;
  v141 = v102;
  v142 = v61;
  v143 = v101;
  v144 = v60;
  v72 = type metadata accessor for Header.TextVStack.TitleAttributionStack.Spacing.After(0, (uint64_t)&v135);
  v73 = swift_getWitnessTable(&unk_1090940, v72);
  sub_505E64((uint64_t)&v126, v72, (uint64_t)&v131);
  sub_270154(KeyPath, 0);
  v74 = (uint64_t)v89;
  v76 = v108;
  v75 = v109;
  (*(void (**)(char *, uint64_t, uint64_t))(v111 + 16))(v89, v109, v108);
  v135 = v74;
  v77 = *(void (**)(char *, uint64_t, uint64_t))(v70 + 16);
  v78 = v110;
  v77(v110, v68, v67);
  v129 = v131;
  v130 = v132;
  v136 = (uint64_t)v78;
  v137 = &v129;
  sub_270050(v131, v132);
  v126 = v76;
  v127 = v67;
  v128 = v72;
  v123 = v92;
  v124 = v94;
  v125 = v73;
  sub_2B7F28(&v135, 3uLL, (uint64_t)&v126);
  sub_270154(v131, v132);
  v79 = (void (*)(char *, uint64_t))v96;
  ((void (*)(uint64_t, uint64_t))v96)(v68, v67);
  v80 = (uint64_t (*)(uint64_t, uint64_t))v98;
  v98(v75, v76);
  sub_270154(v129, v130);
  v79(v78, v67);
  return v80(v74, v76);
}

uint64_t sub_9ED824@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _BYTE *a9@<X8>, __int128 a10, uint64_t a11, uint64_t a12)
{
  int *v14;
  _BYTE *v15;
  uint64_t v16;
  _BYTE *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD v21[6];
  __int128 v22;
  uint64_t v23;
  uint64_t v24;

  *a9 = a1;
  v21[0] = a3;
  v21[1] = a4;
  v21[2] = a5;
  v21[3] = a6;
  v21[4] = a7;
  v21[5] = a8;
  v22 = a10;
  v23 = a11;
  v24 = a12;
  v14 = (int *)type metadata accessor for Header.TextVStack.TitleAttributionStack.Spacing.Before(0, (uint64_t)v21);
  v15 = &a9[v14[25]];
  v16 = type metadata accessor for Font.TextStyle(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v15, a2, v16);
  v17 = &a9[v14[26]];
  *(_QWORD *)v17 = swift_getKeyPath(&unk_1090128);
  v17[8] = 0;
  v18 = &a9[v14[27]];
  *v18 = swift_getKeyPath(&unk_10902E8);
  v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
  return swift_storeEnumTagMultiPayload(v18, v19, 0);
}

uint64_t sub_9ED8FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(_QWORD, _QWORD)@<X3>, uint64_t a5@<X4>, char *a6@<X5>, _QWORD *a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>, __int128 a10, uint64_t a11)
{
  uint64_t v15;
  uint64_t TupleTypeMetadata2;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t TupleTypeMetadata3;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  double v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  unsigned int (**v77)(char *, uint64_t, uint64_t);
  uint64_t v78;
  unsigned int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unsigned int (**v84)(char *, uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t WitnessTable;
  void (*v89)(_QWORD, _QWORD);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void (*v94)(char *, uint64_t, uint64_t);
  char *v95;
  uint64_t v96;
  unsigned int (**v97)(char *, uint64_t, uint64_t);
  uint64_t v98;
  void (*v99)(char *, uint64_t);
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  unsigned int (*v112)(char *, uint64_t, uint64_t);
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unsigned int (**v120)(char *, uint64_t, uint64_t);
  void (*v121)(uint64_t, uint64_t);
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unsigned int (*v130)(char *, uint64_t, uint64_t);
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  void (*v137)(uint64_t, uint64_t);
  void (*v138)(char *, uint64_t);
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v145;
  char *v146;
  char *v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  _QWORD *v168;
  __int128 v169;
  void (*v170)(_QWORD, _QWORD);
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  unsigned int (**v178)(char *, uint64_t, uint64_t);
  char *v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  _QWORD v190[3];
  uint64_t v191;
  uint64_t *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  void (*v201)(_QWORD, _QWORD);
  uint64_t v202;
  uint64_t v203;
  void (*v204)(_QWORD, _QWORD);
  char *v205;
  __int128 v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  unsigned __int8 v211;
  char *v212;
  uint64_t v213;

  v168 = a7;
  v173 = a6;
  v172 = a5;
  v170 = a4;
  v185 = a9;
  v171 = a11;
  v169 = a10;
  v15 = type metadata accessor for BaselineSpacer(255);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v15, a3, 0, 0);
  v163 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  v17 = type metadata accessor for Optional(255, v163);
  v18 = swift_getTupleTypeMetadata2(255, a2, v17, 0, 0);
  v19 = type metadata accessor for TupleView(0, v18);
  v165 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v164 = (char *)&v145 - v20;
  v150 = v15;
  __chkstk_darwin(v21);
  v149 = (uint64_t)&v145 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v148 = (char *)&v145 - v24;
  v166 = v17;
  v159 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v25);
  v162 = (char *)&v145 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v179 = (char *)&v145 - v28;
  v161 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin(v29);
  v160 = (char *)&v145 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v167 = (uint64_t)&v145 - v32;
  v33 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14E1080);
  v34 = type metadata accessor for ModifiedContent(255, a2, v33);
  v35 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14BF188);
  v36 = type metadata accessor for Optional(255, a3);
  v156 = v35;
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3(255, v34, v35, v36, 0, 0);
  v38 = type metadata accessor for TupleView(0, TupleTypeMetadata3);
  v158 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v157 = (char *)&v145 - v39;
  v178 = *(unsigned int (***)(char *, uint64_t, uint64_t))(a3 - 8);
  __chkstk_darwin(v40);
  v147 = (char *)&v145 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v42);
  v146 = (char *)&v145 - v43;
  __chkstk_darwin(v44);
  v155 = (uint64_t)&v145 - v45;
  __chkstk_darwin(v46);
  v145 = (char *)&v145 - v47;
  v175 = v36;
  v174 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v48);
  v151 = (char *)&v145 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v50);
  v154 = (uint64_t)&v145 - v51;
  __chkstk_darwin(v52);
  v152 = (char *)&v145 - v53;
  __chkstk_darwin(v54);
  v176 = (uint64_t)&v145 - v55;
  v153 = v34;
  v56 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v57);
  v59 = (char *)&v145 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = __chkstk_darwin(v60);
  v63 = (char *)&v145 - v62;
  v184 = v19;
  v183 = v64;
  v182 = type metadata accessor for _ConditionalContent(0, v19, v64, v61);
  v181 = *(_QWORD *)(v182 - 8);
  __chkstk_darwin(v182);
  v180 = (char *)&v145 - v65;
  v66 = a2;
  v199 = a2;
  v200 = a3;
  v177 = a3;
  v201 = v170;
  v202 = v172;
  v67 = v168;
  v203 = (uint64_t)v173;
  v204 = (void (*)(_QWORD, _QWORD))v168;
  v173 = a8;
  v205 = a8;
  v206 = v169;
  v207 = v171;
  v68 = type metadata accessor for Header.TextVStack.TitleAttributionStack(0, (uint64_t)&v199);
  v69 = a1;
  v70 = a1 + *(int *)(v68 + 112);
  v71 = *(_QWORD *)v70;
  LOBYTE(a8) = *(_BYTE *)(v70 + 8);
  sub_270050(*(_QWORD *)v70, (char)a8);
  LOBYTE(v19) = sub_724BF4(v71, (char)a8);
  sub_270154(v71, (char)a8);
  v72 = v67[1];
  if ((v19 & 1) != 0)
  {
    View.layoutPriority(_:)(v66, v67[1], 1.0);
    v86 = sub_5C150(&qword_14E1078, &qword_14E1080, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    v194 = v72;
    v195 = v86;
    v87 = v153;
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v153);
    v179 = v63;
    *(_QWORD *)&v169 = WitnessTable;
    sub_505E64((uint64_t)v59, v87, (uint64_t)v63);
    v171 = v56;
    v89 = *(void (**)(_QWORD, _QWORD))(v56 + 8);
    v172 = (uint64_t)v59;
    v170 = v89;
    v90 = ((uint64_t (*)(char *, uint64_t))v89)(v59, v87);
    v91 = static Alignment.center.getter(v90);
    _FrameLayout.init(width:height:alignment:)(&v208, 0, 1, 0, 0, v91, v92);
    v168 = (_QWORD *)v208;
    LODWORD(v167) = v209;
    v166 = v210;
    LODWORD(v165) = v211;
    v164 = v212;
    v163 = v213;
    v93 = v174;
    v94 = *(void (**)(char *, uint64_t, uint64_t))(v174 + 16);
    v95 = v152;
    v96 = v175;
    v94(v152, v69 + *(int *)(v68 + 100), v175);
    v97 = v178;
    v98 = v177;
    if (v178[6](v95, 1, v177) == 1)
    {
      v99 = *(void (**)(char *, uint64_t))(v93 + 8);
      v99(v95, v96);
      v100 = v154;
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v97[7])(v154, 1, 1, v98);
      v101 = *((_QWORD *)v173 + 1);
      v102 = v176;
      sub_A145E4(v100, v98, v176);
    }
    else
    {
      v128 = (uint64_t)v145;
      v97[4](v145, (uint64_t)v95, v98);
      v101 = *((_QWORD *)v173 + 1);
      v129 = v155;
      sub_505E64(v128, v98, v155);
      v130 = v97[1];
      ((void (*)(uint64_t, uint64_t))v130)(v128, v98);
      v131 = v154;
      sub_4FF1F4(v129, v98, v154);
      v132 = v129;
      v100 = v131;
      ((void (*)(uint64_t, uint64_t))v130)(v132, v98);
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v97[7])(v131, 0, 1, v98);
      v102 = v176;
      sub_A145E4(v131, v98, v176);
      v99 = *(void (**)(char *, uint64_t))(v93 + 8);
    }
    v127 = (uint64_t)v180;
    v99((char *)v100, v96);
    v133 = v172;
    v134 = v87;
    (*(void (**)(uint64_t, char *, uint64_t))(v171 + 16))(v172, v179, v87);
    v199 = 0;
    LOBYTE(v200) = 1;
    v201 = (void (*)(_QWORD, _QWORD))v168;
    LOBYTE(v202) = v167;
    v203 = v166;
    LOBYTE(v204) = v165;
    v205 = v164;
    *(_QWORD *)&v206 = v163;
    v191 = v133;
    v192 = &v199;
    v94((char *)v100, v102, v96);
    v193 = v100;
    v190[0] = v87;
    v190[1] = v156;
    v190[2] = v96;
    v187 = v169;
    v188 = sub_2D4CB4(&qword_14BF228, &qword_14BF188);
    v186 = v101;
    v189 = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v96);
    v135 = (uint64_t)v157;
    sub_2B7F28(&v191, 3uLL, (uint64_t)v190);
    v99((char *)v100, v96);
    v136 = v87;
    v137 = (void (*)(uint64_t, uint64_t))v99;
    v138 = (void (*)(char *, uint64_t))v170;
    v170(v133, v136);
    v114 = v184;
    v139 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v184);
    v123 = v183;
    v140 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v183);
    sub_A146E4(v135, v114, v123, v139, v140);
    (*(void (**)(uint64_t, uint64_t))(v158 + 8))(v135, v123);
    v137(v176, v96);
    v138(v179, v134);
  }
  else
  {
    v172 = v67[1];
    sub_505E64(v69, v66, v167);
    v73 = v69 + *(int *)(v68 + 100);
    v74 = v174;
    v75 = v151;
    v76 = v175;
    (*(void (**)(char *, uint64_t, uint64_t))(v174 + 16))(v151, v73, v175);
    v77 = v178;
    v78 = v177;
    v79 = v178[6](v75, 1, v177);
    v176 = v66;
    if (v79 == 1)
    {
      (*(void (**)(char *, uint64_t))(v74 + 8))(v75, v76);
      v80 = v163;
      v81 = (uint64_t)v162;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v163 - 8) + 56))(v162, 1, 1, v163);
      swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v80);
      v82 = (uint64_t)v179;
      sub_A145E4(v81, v80, (uint64_t)v179);
      v83 = v159;
      v84 = *(unsigned int (***)(char *, uint64_t, uint64_t))(v159 + 8);
      v85 = v81;
    }
    else
    {
      v103 = (uint64_t)v146;
      v77[4](v146, (uint64_t)v75, v78);
      v104 = v173;
      v105 = (uint64_t)v148;
      (*((void (**)(uint64_t, char *))v173 + 2))(v78, v173);
      v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_14BDE20);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v106 - 8) + 56))(v105, 0, 1, v106);
      *(_QWORD *)(v105 + *(int *)(type metadata accessor for BaselineSpacer.Configuration(0) + 20)) = 0x403A000000000000;
      v107 = (uint64_t *)*((_QWORD *)v104 + 1);
      v108 = v155;
      sub_505E64(v103, v78, v155);
      v109 = v149;
      sub_5BDB8(v105, v149, type metadata accessor for BaselineSpacer);
      v199 = v109;
      v110 = v147;
      v77[2](v147, v108, v78);
      v200 = (uint64_t)v110;
      v208 = v150;
      v209 = v78;
      v191 = sub_4DD24(qword_14EF168, type metadata accessor for BaselineSpacer, (uint64_t)&unk_106BB70);
      v192 = v107;
      v111 = (uint64_t)v162;
      sub_2B7F28(&v199, 2uLL, (uint64_t)&v208);
      v112 = v77[1];
      ((void (*)(uint64_t, uint64_t))v112)(v108, v78);
      sub_5C0DC(v105, type metadata accessor for BaselineSpacer);
      ((void (*)(uint64_t, uint64_t))v112)(v103, v78);
      v81 = v111;
      ((void (*)(char *, uint64_t))v112)(v110, v78);
      sub_5C0DC(v109, type metadata accessor for BaselineSpacer);
      v80 = v163;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v163 - 8) + 56))(v111, 0, 1, v163);
      swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v80);
      v82 = (uint64_t)v179;
      sub_A145E4(v111, v80, (uint64_t)v179);
      v83 = v159;
      v84 = *(unsigned int (***)(char *, uint64_t, uint64_t))(v159 + 8);
      v85 = v111;
    }
    v113 = v166;
    v178 = v84;
    ((void (*)(uint64_t, uint64_t))v84)(v85, v166);
    v114 = v184;
    v115 = v161;
    v116 = (uint64_t)v160;
    v117 = v167;
    v118 = v176;
    (*(void (**)(char *, uint64_t, uint64_t))(v161 + 16))(v160, v167, v176);
    v199 = v116;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v83 + 16))(v81, v82, v113);
    v200 = v81;
    v208 = v118;
    v209 = v113;
    v191 = v172;
    v198 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v80);
    v192 = (uint64_t *)swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v113);
    v119 = (uint64_t)v164;
    sub_2B7F28(&v199, 2uLL, (uint64_t)&v208);
    v120 = v178;
    ((void (*)(uint64_t, uint64_t))v178)(v81, v113);
    v121 = *(void (**)(uint64_t, uint64_t))(v115 + 8);
    v121(v116, v118);
    v122 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v114);
    v123 = v183;
    v124 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v183);
    v125 = v180;
    sub_A14620(v119, v114, v123, v122, v124);
    (*(void (**)(uint64_t, uint64_t))(v165 + 8))(v119, v114);
    ((void (*)(char *, uint64_t))v120)(v179, v113);
    v126 = v118;
    v127 = (uint64_t)v125;
    v121(v117, v126);
  }
  v141 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v114);
  v142 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v123);
  v196 = v141;
  v197 = v142;
  v143 = v182;
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v182);
  sub_4FF1F4(v127, v143, v185);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v181 + 8))(v127, v143);
}

uint64_t sub_9EE814@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _BYTE *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _BYTE *v11;
  uint64_t v12;
  char v13;
  char v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[18];
  _BYTE v43[152];

  v40 = a2;
  v39 = type metadata accessor for BaselineSpacer(0);
  __chkstk_darwin(v39);
  v38 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EF5F0);
  __chkstk_darwin(v41);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DynamicTypeSize(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = &v2[*(int *)(a1 + 104)];
  v12 = *(_QWORD *)v11;
  v13 = v11[8];
  sub_270050(*(_QWORD *)v11, v13);
  v14 = sub_724BF4(v12, v13);
  sub_270154(v12, v13);
  if ((v14 & 1) != 0)
  {
    v23 = (uint64_t)v6;
    v24 = v39;
    v25 = v2;
    v26 = sub_724544((uint64_t)v10);
    v27 = DynamicTypeSize.isAccessibilitySize.getter(v26);
    v28 = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    if ((v27 & 1) != 0)
    {
      sub_9F98B0((uint64_t)v42);
    }
    else
    {
      if (*v25)
        v29 = 40.0;
      else
        v29 = 78.0;
      v30 = static Alignment.center.getter(v28);
      sub_9C1F50(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)v42, v29, 0, v29, 0, v30, v31, 0, 1);
      v42[16] = 0;
      sub_9F98A8((uint64_t)v42);
    }
    sub_5C090((uint64_t)v42, (uint64_t)v43, &qword_14EF5F8);
    v32 = v24;
    v33 = v41;
    sub_5C090((uint64_t)v43, v23, &qword_14EF5F8);
    swift_storeEnumTagMultiPayload(v23, v33, 1);
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EF5F8);
    v35 = sub_4DD24(qword_14EF168, type metadata accessor for BaselineSpacer, (uint64_t)&unk_106BB70);
    v36 = sub_9F97A0();
    return _ConditionalContent<>.init(storage:)(v23, v32, v34, v35, v36);
  }
  else
  {
    v15 = &v2[*(int *)(a1 + 100)];
    v16 = type metadata accessor for Font.TextStyle(0);
    v17 = (uint64_t)v38;
    (*(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v38, v15, v16);
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_14BDE20);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 0, 1, v18);
    *(_QWORD *)(v17 + *(int *)(type metadata accessor for BaselineSpacer.Configuration(0) + 20)) = 0x4042800000000000;
    sub_5BDB8(v17, (uint64_t)v6, type metadata accessor for BaselineSpacer);
    swift_storeEnumTagMultiPayload(v6, v41, 0);
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EF5F8);
    v20 = sub_4DD24(qword_14EF168, type metadata accessor for BaselineSpacer, (uint64_t)&unk_106BB70);
    v21 = sub_9F97A0();
    _ConditionalContent<>.init(storage:)(v6, v39, v19, v20, v21);
    return sub_5C0DC(v17, type metadata accessor for BaselineSpacer);
  }
}

double sub_9EEB90@<D0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  char v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  char v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  char v26;
  uint64_t v27;
  unsigned __int8 v28;
  uint64_t v29;
  unsigned __int8 v30;
  __int128 v31;

  v5 = a2 & 1;
  sub_270050(a1, a2 & 1);
  v6 = sub_724BF4(a1, v5);
  v7 = sub_270154(a1, v5);
  if ((v6 & 1) != 0)
  {
    v8 = static Alignment.center.getter(v7);
    _FrameLayout.init(width:height:alignment:)(&v27, 0, 1, 0x4008000000000000, 0, v8, v9);
    v17 = xmmword_1060DF0;
    *(_QWORD *)&v18 = v27;
    *((_QWORD *)&v18 + 1) = v28;
    *(_QWORD *)&v19 = v29;
    *((_QWORD *)&v19 + 1) = v30;
    v20 = v31;
    v21 = 1;
  }
  else
  {
    v21 = 0;
    v19 = 0u;
    v20 = 0u;
    v17 = 0u;
    v18 = 0u;
  }
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14BF188);
  v11 = sub_2D4CB4(&qword_14BF228, &qword_14BF188);
  _ConditionalContent<>.init(storage:)(&v17, &type metadata for EmptyView, v10, &protocol witness table for EmptyView, v11);
  result = *(double *)&v22;
  v13 = v23;
  v14 = v24;
  v15 = v25;
  v16 = v26;
  *(_OWORD *)a3 = v22;
  *(_OWORD *)(a3 + 16) = v13;
  *(_OWORD *)(a3 + 32) = v14;
  *(_OWORD *)(a3 + 48) = v15;
  *(_BYTE *)(a3 + 64) = v16;
  return result;
}

uint64_t sub_9EECD0(_QWORD *a1, uint64_t a2)
{
  return sub_9F0BE8(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_9EEB90);
}

uint64_t sub_9EECE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t TupleTypeMetadata2;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t WitnessTable;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD v113[2];
  uint64_t v114[13];

  v103 = a2;
  v3 = type metadata accessor for BaselineSpacer(255);
  v98 = a1;
  v4 = *(_QWORD *)(a1 + 32);
  v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14E1080);
  v6 = type metadata accessor for ModifiedContent(255, v4, v5);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v3, v6, 0, 0);
  v8 = type metadata accessor for TupleView(0, TupleTypeMetadata2);
  v91 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v90 = (char *)&v83 - v9;
  v88 = v3;
  __chkstk_darwin(v10);
  v87 = (uint64_t)&v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v89 = (char *)&v83 - v13;
  v92 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v14);
  v93 = (char *)&v83 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v16);
  v94 = (uint64_t)&v83 - v18;
  v97 = v19;
  v20 = type metadata accessor for _ConditionalContent(0, v19, v6, v17);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v95 = (char *)&v83 - v22;
  v23 = type metadata accessor for Optional(0, v4);
  v24 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v26 = (char *)&v83 - v25;
  v27 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v28);
  v104 = (char *)&v83 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = type metadata accessor for Optional(0, v20);
  v100 = *(_QWORD *)(v102 - 8);
  __chkstk_darwin(v102);
  v31 = (char *)&v83 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __chkstk_darwin(v32);
  v101 = (uint64_t)&v83 - v34;
  v35 = v96;
  (*(void (**)(char *, double))(v24 + 16))(v26, v33);
  v99 = v27;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v26, 1, v4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v31, 1, 1, v20);
    v36 = v97;
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v97);
    v38 = *(_QWORD *)(*(_QWORD *)(v98 + 72) + 8);
    v39 = sub_5C150(&qword_14E1078, &qword_14E1080, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    v114[11] = v38;
    v114[12] = v39;
    v40 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
    v114[9] = WitnessTable;
    v114[10] = v40;
    swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v20);
    v41 = (uint64_t)v31;
    v42 = v6;
  }
  else
  {
    v84 = v20;
    v86 = v21;
    v85 = v31;
    v36 = v97;
    (*(void (**)(char *, char *, uint64_t))(v99 + 32))(v104, v26, v4);
    v43 = v98;
    v44 = v35 + *(int *)(v98 + 100);
    v45 = *(_QWORD *)v44;
    v46 = *(_BYTE *)(v44 + 8);
    sub_270050(*(_QWORD *)v44, v46);
    v47 = sub_724BF4(v45, v46);
    sub_270154(v45, v46);
    v48 = *(_QWORD *)(v43 + 72);
    if ((v47 & 1) != 0)
    {
      v62 = *(_QWORD *)(v48 + 8);
      v63 = (uint64_t)v93;
      v64 = v104;
      View.layoutPriority(_:)(v4, v62, 2.0);
      v65 = sub_5C150(&qword_14E1078, &qword_14E1080, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
      v98 = v62;
      v105 = v62;
      v106 = v65;
      v66 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
      v67 = v94;
      sub_505E64(v63, v6, v94);
      v68 = *(void (**)(uint64_t, uint64_t))(v92 + 8);
      v68(v63, v6);
      sub_4FF1F4(v67, v6, v63);
      v69 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v36);
      v61 = (uint64_t)v95;
      sub_A146E4(v63, v36, v6, v69, v66);
      v68(v63, v6);
      v68(v67, v6);
      v70 = v4;
      v42 = v6;
      (*(void (**)(char *, uint64_t))(v99 + 8))(v64, v70);
    }
    else
    {
      v49 = (uint64_t)v89;
      (*(void (**)(uint64_t, _QWORD))(v48 + 16))(v4, *(_QWORD *)(v43 + 72));
      v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_14BDE20);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v49, 0, 1, v50);
      *(_QWORD *)(v49 + *(int *)(type metadata accessor for BaselineSpacer.Configuration(0) + 20)) = 0x4034000000000000;
      v51 = *(_QWORD *)(v48 + 8);
      v83 = v4;
      v52 = (uint64_t)v93;
      View.layoutPriority(_:)(v4, v51, 2.0);
      v53 = sub_5C150(&qword_14E1078, &qword_14E1080, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
      v98 = v51;
      v114[2] = v51;
      v114[3] = v53;
      v42 = v6;
      v54 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
      v55 = v94;
      sub_505E64(v52, v6, v94);
      v56 = v92;
      v57 = *(void (**)(uint64_t, uint64_t))(v92 + 8);
      v57(v52, v42);
      v58 = v87;
      sub_5BDB8(v49, v87, type metadata accessor for BaselineSpacer);
      v114[0] = v58;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 16))(v52, v55, v42);
      v114[1] = v52;
      v113[0] = v88;
      v113[1] = v42;
      v111 = sub_4DD24(qword_14EF168, type metadata accessor for BaselineSpacer, (uint64_t)&unk_106BB70);
      v112 = v54;
      v59 = (uint64_t)v90;
      sub_2B7F28(v114, 2uLL, (uint64_t)v113);
      v57(v52, v42);
      sub_5C0DC(v58, type metadata accessor for BaselineSpacer);
      v60 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v36);
      v61 = (uint64_t)v95;
      sub_A14620(v59, v36, v42, v60, v54);
      (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v59, v36);
      v57(v55, v42);
      sub_5C0DC(v49, type metadata accessor for BaselineSpacer);
      (*(void (**)(char *, uint64_t))(v99 + 8))(v104, v83);
    }
    v20 = v84;
    v71 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v36);
    v72 = sub_5C150(&qword_14E1078, &qword_14E1080, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    v38 = v98;
    v109 = v98;
    v110 = v72;
    v73 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v42);
    v107 = v71;
    v108 = v73;
    swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v20);
    v41 = (uint64_t)v85;
    sub_4FF1F4(v61, v20, (uint64_t)v85);
    v74 = v86;
    (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v61, v20);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v74 + 56))(v41, 0, 1, v20);
  }
  v75 = v101;
  sub_A145E4(v41, v20, v101);
  v76 = *(void (**)(uint64_t, uint64_t))(v100 + 8);
  v77 = v41;
  v78 = v102;
  v76(v77, v102);
  v79 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v36);
  v80 = sub_5C150(&qword_14E1078, &qword_14E1080, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
  v114[7] = v38;
  v114[8] = v80;
  v81 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v42);
  v114[5] = v79;
  v114[6] = v81;
  v114[4] = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v20);
  swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v78);
  sub_4FF1F4(v75, v78, v103);
  return ((uint64_t (*)(uint64_t, uint64_t))v76)(v75, v78);
}

uint64_t sub_9EF60C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t TupleTypeMetadata3;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  double v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t);
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  double v61;
  void (*v62)(_QWORD, _QWORD);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(uint64_t, uint64_t);
  uint64_t v76;
  uint64_t v77;
  void (*v78)(char *, uint64_t, uint64_t);
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t);
  void (*v84)(uint64_t, uint64_t);
  __int128 v86;
  __int128 v87;
  uint64_t v88;
  char *v89;
  void (*v90)(uint64_t, uint64_t);
  uint64_t WitnessTable;
  double (*v92)(uint64_t, uint64_t);
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  void (*v98)(_QWORD, _QWORD);
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD v129[8];
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;

  v119 = a2;
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v7 = *(_QWORD *)(a1 + 48);
  v8 = *(_QWORD *)(a1 + 56);
  v9 = *(_QWORD *)(a1 + 64);
  v124 = *(_QWORD *)(a1 + 72);
  v10 = *(_QWORD *)(a1 + 80);
  v125 = *(_QWORD *)(a1 + 88);
  v130 = v3;
  v131 = v4;
  v132 = v6;
  v133 = v5;
  v134 = v7;
  v135 = v8;
  v136 = v9;
  v137 = v124;
  v138 = v10;
  v139 = v125;
  v123 = type metadata accessor for Header.TextVStack.DescriptionContainer.Spacing.After(0, (uint64_t)&v130);
  v103 = *(_QWORD *)(v123 - 8);
  __chkstk_darwin(v123);
  v104 = (uint64_t)&v88 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v105 = (uint64_t)&v88 - v13;
  v14 = type metadata accessor for ModifiedContent(0, v5, &type metadata for _FlexFrameLayout);
  v97 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v95 = (char *)&v88 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14E1080);
  v98 = (void (*)(_QWORD, _QWORD))v14;
  v17 = type metadata accessor for ModifiedContent(0, v14, v16);
  v100 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v102 = (char *)&v88 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v96 = (char *)&v88 - v20;
  __chkstk_darwin(v21);
  v111 = (uint64_t)&v88 - v22;
  v23 = type metadata accessor for Font.TextStyle(0);
  __chkstk_darwin(v23);
  v106 = (char *)&v88 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = v3;
  v130 = v3;
  v131 = v4;
  v116 = v4;
  v118 = v6;
  v132 = v6;
  v133 = v5;
  v117 = v7;
  v134 = v7;
  v135 = v8;
  v113 = v8;
  v114 = v9;
  v136 = v9;
  v137 = v124;
  v99 = v10;
  v138 = v10;
  v139 = v125;
  v25 = type metadata accessor for Header.TextVStack.DescriptionContainer.Spacing.Before(0, (uint64_t)&v130);
  v107 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v122 = (uint64_t)&v88 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v121 = (uint64_t)&v88 - v28;
  v29 = type metadata accessor for Optional(0, v5);
  v30 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin(v29);
  v32 = (char *)&v88 - v31;
  v33 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v34);
  v36 = (char *)&v88 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = v25;
  v101 = v17;
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3(255, v25, v17, v123, 0, 0);
  v38 = type metadata accessor for TupleView(255, TupleTypeMetadata3);
  v39 = type metadata accessor for Optional(0, v38);
  v110 = *(_QWORD *)(v39 - 8);
  __chkstk_darwin(v39);
  v109 = (char *)&v88 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __chkstk_darwin(v41);
  v112 = (uint64_t)&v88 - v43;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v30 + 16))(v32, v120, v29, v42);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v32, 1, v5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v29);
    v44 = (uint64_t)v109;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v109, 1, 1, v38);
    swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v38);
    v45 = v112;
    sub_A145E4(v44, v38, v112);
    v46 = *(void (**)(uint64_t, uint64_t))(v110 + 8);
    v46(v44, v39);
  }
  else
  {
    v93 = v33;
    v47 = v36;
    v48 = v5;
    (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v36, v32, v5);
    v49 = v99;
    v90 = *(void (**)(uint64_t, uint64_t))(v99 + 16);
    v50 = (uint64_t)v106;
    v90(v5, v99);
    *((_QWORD *)&v86 + 1) = v49;
    *(_QWORD *)&v86 = v124;
    v51 = v122;
    v94 = v48;
    sub_9F00A4(v50, v115, v116, v118, v48, v117, v113, v114, v122, v86, v125, (uint64_t (*)(_QWORD, _QWORD *))type metadata accessor for Header.TextVStack.DescriptionContainer.Spacing.Before);
    v52 = v108;
    WitnessTable = swift_getWitnessTable(&unk_10908F0, v108);
    sub_505E64(v51, v52, v121);
    v92 = *(double (**)(uint64_t, uint64_t))(v107 + 8);
    v53.n128_f64[0] = v92(v51, v52);
    v54 = static Alignment.leading.getter(v53);
    v55 = *(_QWORD *)(v49 + 8);
    v56 = v95;
    v89 = v47;
    View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0, 1, 0, 1, 0x7FF0000000000000, 0, 0, 1, 0, 1, 0, 1, v54, v57, v48, v55);
    v58 = v120 + *(int *)(a1 + 100);
    v59 = *(_QWORD *)v58;
    LOBYTE(v48) = *(_BYTE *)(v58 + 8);
    sub_270050(*(_QWORD *)v58, v48);
    v60 = sub_724BF4(v59, v48);
    sub_270154(v59, v48);
    if ((v60 & 1) != 0)
      v61 = 1.0;
    else
      v61 = 0.0;
    v129[5] = v55;
    v129[6] = &protocol witness table for _FlexFrameLayout;
    v62 = v98;
    v63 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v98);
    v64 = (uint64_t)v96;
    View.layoutPriority(_:)(v62, v63, v61);
    (*(void (**)(char *, _QWORD))(v97 + 8))(v56, v62);
    v65 = sub_5C150(&qword_14E1078, &qword_14E1080, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    v129[3] = v63;
    v129[4] = v65;
    v66 = v101;
    v97 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v101);
    v120 = v38;
    sub_505E64(v64, v66, v111);
    v67 = v100;
    v98 = *(void (**)(_QWORD, _QWORD))(v100 + 8);
    v98(v64, v66);
    v68 = (uint64_t)v106;
    v69 = v94;
    v90(v94, v49);
    *((_QWORD *)&v87 + 1) = v49;
    *(_QWORD *)&v87 = v124;
    v70 = v104;
    sub_9F00A4(v68, v115, v116, v118, v69, v117, v113, v114, v104, v87, v125, (uint64_t (*)(_QWORD, _QWORD *))type metadata accessor for Header.TextVStack.DescriptionContainer.Spacing.After);
    v71 = v123;
    v72 = swift_getWitnessTable(&unk_10908A0, v123);
    v125 = v39;
    v73 = v105;
    sub_505E64(v70, v71, v105);
    v74 = v103;
    v75 = *(void (**)(uint64_t, uint64_t))(v103 + 8);
    v75(v70, v71);
    v76 = v122;
    v77 = v108;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v107 + 16))(v122, v121, v108);
    v130 = v76;
    v78 = *(void (**)(char *, uint64_t, uint64_t))(v67 + 16);
    v79 = v102;
    v80 = v111;
    v78(v102, v111, v66);
    v131 = (uint64_t)v79;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v74 + 16))(v70, v73, v71);
    v132 = v70;
    v129[0] = v77;
    v129[1] = v66;
    v129[2] = v71;
    v126 = WitnessTable;
    v127 = v97;
    v128 = v72;
    v81 = (uint64_t)v109;
    sub_2B7F28(&v130, 3uLL, (uint64_t)v129);
    v75(v73, v71);
    v82 = v80;
    v38 = v120;
    v83 = (void (*)(char *, uint64_t))v98;
    v98(v82, v66);
    v84 = (void (*)(uint64_t, uint64_t))v92;
    v92(v121, v77);
    (*(void (**)(char *, uint64_t))(v93 + 8))(v89, v94);
    v75(v70, v71);
    v83(v79, v66);
    v84(v122, v77);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v81, 0, 1, v38);
    swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v38);
    v45 = v112;
    sub_A145E4(v81, v38, v112);
    v46 = *(void (**)(uint64_t, uint64_t))(v110 + 8);
    v39 = v125;
    v46(v81, v125);
  }
  v129[7] = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v38);
  swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v39);
  sub_4FF1F4(v45, v39, v119);
  return ((uint64_t (*)(uint64_t, uint64_t))v46)(v45, v39);
}

uint64_t sub_9F00A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 a10, uint64_t a11, uint64_t (*a12)(_QWORD, _QWORD *))
{
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  _QWORD v24[7];
  __int128 v25;
  uint64_t v26;

  v20 = type metadata accessor for Font.TextStyle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(a9, a1, v20);
  v24[0] = a2;
  v24[1] = a3;
  v24[2] = a4;
  v24[3] = a5;
  v24[4] = a6;
  v24[5] = a7;
  v24[6] = a8;
  v25 = a10;
  v26 = a11;
  v21 = a9 + *(int *)(a12(0, v24) + 100);
  result = swift_getKeyPath(&unk_1090128);
  *(_QWORD *)v21 = result;
  *(_BYTE *)(v21 + 8) = 0;
  return result;
}

uint64_t sub_9F017C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v3 = type metadata accessor for BaselineSpacer(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EF628);
  __chkstk_darwin(v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v1 + *(int *)(a1 + 100);
  v10 = *(_QWORD *)v9;
  v11 = *(_BYTE *)(v9 + 8);
  sub_270050(*(_QWORD *)v9, v11);
  v12 = sub_724BF4(v10, v11);
  sub_270154(v10, v11);
  if ((v12 & 1) != 0)
  {
    swift_storeEnumTagMultiPayload(v8, v6, 1);
    v17 = sub_4DD24(qword_14EF168, type metadata accessor for BaselineSpacer, (uint64_t)&unk_106BB70);
    return _ConditionalContent<>.init(storage:)(v8, v3, &type metadata for EmptyView, v17, &protocol witness table for EmptyView);
  }
  else
  {
    v13 = type metadata accessor for Font.TextStyle(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v5, v1, v13);
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_14BDE20);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v5, 0, 1, v14);
    *(_QWORD *)&v5[*(int *)(type metadata accessor for BaselineSpacer.Configuration(0) + 20)] = 0x403E000000000000;
    sub_5BDB8((uint64_t)v5, (uint64_t)v8, type metadata accessor for BaselineSpacer);
    swift_storeEnumTagMultiPayload(v8, v6, 0);
    v15 = sub_4DD24(qword_14EF168, type metadata accessor for BaselineSpacer, (uint64_t)&unk_106BB70);
    _ConditionalContent<>.init(storage:)(v8, v3, &type metadata for EmptyView, v15, &protocol witness table for EmptyView);
    return sub_5C0DC((uint64_t)v5, type metadata accessor for BaselineSpacer);
  }
}

uint64_t sub_9F0394(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  __int128 v33;

  v3 = type metadata accessor for BaselineSpacer(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EF630);
  __chkstk_darwin(v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v1 + *(int *)(a1 + 100);
  v10 = *(_QWORD *)v9;
  v11 = *(_BYTE *)(v9 + 8);
  sub_270050(*(_QWORD *)v9, v11);
  v12 = sub_724BF4(v10, v11);
  v13 = sub_270154(v10, v11);
  if ((v12 & 1) != 0)
  {
    v20 = static Alignment.center.getter(v13);
    _FrameLayout.init(width:height:alignment:)(&v29, 0, 1, 0x403C000000000000, 0, v20, v21);
    v22 = v29;
    v23 = v30;
    v24 = v31;
    v25 = v32;
    *(_QWORD *)v8 = 0;
    v8[8] = 1;
    *((_QWORD *)v8 + 2) = v22;
    v8[24] = v23;
    *((_QWORD *)v8 + 4) = v24;
    v8[40] = v25;
    *((_OWORD *)v8 + 3) = v33;
    swift_storeEnumTagMultiPayload(v8, v6, 1);
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_14BF188);
    v27 = sub_4DD24(qword_14EF168, type metadata accessor for BaselineSpacer, (uint64_t)&unk_106BB70);
    v28 = sub_2D4CB4(&qword_14BF228, &qword_14BF188);
    return _ConditionalContent<>.init(storage:)(v8, v3, v26, v27, v28);
  }
  else
  {
    v14 = type metadata accessor for Font.TextStyle(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v5, v1, v14);
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_14BDE20);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v5, 0, 1, v15);
    *(_QWORD *)&v5[*(int *)(type metadata accessor for BaselineSpacer.Configuration(0) + 20)] = 0x4036000000000000;
    sub_5BDB8((uint64_t)v5, (uint64_t)v8, type metadata accessor for BaselineSpacer);
    swift_storeEnumTagMultiPayload(v8, v6, 0);
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_14BF188);
    v17 = sub_4DD24(qword_14EF168, type metadata accessor for BaselineSpacer, (uint64_t)&unk_106BB70);
    v18 = sub_2D4CB4(&qword_14BF228, &qword_14BF188);
    _ConditionalContent<>.init(storage:)(v8, v3, v16, v17, v18);
    return sub_5C0DC((uint64_t)v5, type metadata accessor for BaselineSpacer);
  }
}

uint64_t sub_9F066C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v30;
  uint64_t KeyPath;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t WitnessTable;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  char v53;
  char v54[8];
  uint64_t v55;
  char v56;
  uint64_t *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;

  v2 = a1;
  v41 = a2;
  v32 = *(_QWORD *)(a1 + 48);
  v40 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin(a1);
  v39 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v42 = (uint64_t)&v30 - v5;
  v8 = v6[2];
  v7 = (char *)v6[3];
  v10 = v6[5];
  v33 = (char *)v6[4];
  v9 = v33;
  v35 = v10;
  v12 = v6[8];
  v34 = v6[7];
  v11 = v34;
  v13 = v6[9];
  v14 = v6[10];
  v15 = v6[11];
  KeyPath = swift_getKeyPath(&unk_1090128);
  v46 = KeyPath;
  LOBYTE(v47) = 0;
  v57 = (uint64_t *)v8;
  v58 = v7;
  v59 = v9;
  v60 = v10;
  v16 = v32;
  v61 = v32;
  v62 = v11;
  v63 = v12;
  v64 = v13;
  v65 = v14;
  v66 = v15;
  v17 = type metadata accessor for Header.TextVStack.PlaybackControlContainer.Spacing.Before(0, (uint64_t)&v57);
  v37 = v17;
  WitnessTable = swift_getWitnessTable(&unk_1090850, v17);
  sub_505E64((uint64_t)&v46, v17, (uint64_t)&v67);
  sub_270154(KeyPath, 0);
  v18 = v42;
  v19 = v36;
  sub_505E64(v36, v16, v42);
  LOBYTE(v2) = *(_BYTE *)(v19 + *(int *)(v2 + 100));
  v20 = swift_getKeyPath(&unk_1090128);
  LOBYTE(v46) = v2;
  v47 = v20;
  LOBYTE(v48) = 0;
  v57 = (uint64_t *)v8;
  v58 = v7;
  v59 = v33;
  v60 = v35;
  v61 = v16;
  v62 = v34;
  v63 = v12;
  v64 = v13;
  v65 = v14;
  v66 = v15;
  v21 = v15;
  v22 = type metadata accessor for Header.TextVStack.PlaybackControlContainer.Spacing.After(0, (uint64_t)&v57);
  v23 = swift_getWitnessTable(&unk_1090800, v22);
  sub_505E64((uint64_t)&v46, v22, (uint64_t)v54);
  sub_270154(v20, 0);
  v24 = v67;
  LOBYTE(v8) = v68;
  v52 = v67;
  v53 = v68;
  v57 = &v52;
  v25 = v40;
  v26 = v39;
  (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v39, v18, v16);
  v27 = v55;
  LOBYTE(v13) = v56;
  v49 = v54[0];
  v50 = v55;
  v51 = v56;
  v58 = v26;
  v59 = &v49;
  sub_270050(v24, v8);
  sub_270050(v27, v13);
  v46 = v37;
  v47 = v16;
  v48 = v22;
  v43 = WitnessTable;
  v44 = v21;
  v45 = v23;
  sub_2B7F28((uint64_t *)&v57, 3uLL, (uint64_t)&v46);
  sub_270154(v55, v56);
  v28 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
  v28(v42, v16);
  sub_270154(v67, v68);
  sub_270154(v50, v51);
  v28((uint64_t)v26, v16);
  return sub_270154(v52, v53);
}

uint64_t sub_9F09CC(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v4 = type metadata accessor for BaselineSpacer(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EF628);
  __chkstk_darwin(v7);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 &= 1u;
  sub_270050(a1, a2);
  v10 = sub_724BF4(a1, a2);
  sub_270154(a1, a2);
  if ((v10 & 1) != 0)
  {
    swift_storeEnumTagMultiPayload(v9, v7, 1);
    v16 = sub_4DD24(qword_14EF168, type metadata accessor for BaselineSpacer, (uint64_t)&unk_106BB70);
    return _ConditionalContent<>.init(storage:)(v9, v4, &type metadata for EmptyView, v16, &protocol witness table for EmptyView);
  }
  else
  {
    v11 = enum case for Font.TextStyle.body(_:);
    v12 = type metadata accessor for Font.TextStyle(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v6, v11, v12);
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_14BDE20);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v6, 0, 1, v13);
    *(_QWORD *)&v6[*(int *)(type metadata accessor for BaselineSpacer.Configuration(0) + 20)] = 0x4033000000000000;
    sub_5BDB8((uint64_t)v6, (uint64_t)v9, type metadata accessor for BaselineSpacer);
    swift_storeEnumTagMultiPayload(v9, v7, 0);
    v14 = sub_4DD24(qword_14EF168, type metadata accessor for BaselineSpacer, (uint64_t)&unk_106BB70);
    _ConditionalContent<>.init(storage:)(v9, v4, &type metadata for EmptyView, v14, &protocol witness table for EmptyView);
    return sub_5C0DC((uint64_t)v6, type metadata accessor for BaselineSpacer);
  }
}

uint64_t sub_9F0BDC(_QWORD *a1, uint64_t a2)
{
  return sub_9F0BE8(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_9F09CC);
}

uint64_t sub_9F0BE8(_QWORD *a1, uint64_t a2, uint64_t (*a3)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v3;

  return a3(*(_QWORD *)v3, *(unsigned __int8 *)(v3 + 8), a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11]);
}

double sub_9F0C30@<D0>(char a1@<W0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  double result;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  char v24;
  char v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int16 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  char v35;
  char v36;
  uint64_t v37;
  unsigned __int8 v38;
  uint64_t v39;
  unsigned __int8 v40;
  __int128 v41;

  v7 = a3 & 1;
  sub_270050(a2, a3 & 1);
  v8 = sub_724BF4(a2, v7);
  v9 = sub_270154(a2, v7);
  if ((v8 & 1) != 0)
  {
    v28 = 0u;
    v29 = 0u;
    v26 = 0u;
    v27 = 0u;
    v30 = 256;
  }
  else
  {
    if ((a1 & 1) != 0)
    {
      v10 = 0;
      v11 = 0;
      v12 = 0;
      v13 = 0;
      v14 = 0;
      v15 = 0uLL;
    }
    else
    {
      v16 = static Alignment.center.getter(v9);
      v10 = 1;
      _FrameLayout.init(width:height:alignment:)(&v37, 0, 1, 0x403A000000000000, 0, v16, v17);
      v11 = v37;
      v12 = v38;
      v13 = v39;
      v14 = v40;
      v15 = v41;
    }
    *(_QWORD *)&v26 = 0;
    *((_QWORD *)&v26 + 1) = v10;
    *(_QWORD *)&v27 = v11;
    *((_QWORD *)&v27 + 1) = v12;
    *(_QWORD *)&v28 = v13;
    *((_QWORD *)&v28 + 1) = v14;
    v29 = v15;
    v30 = a1 & 1;
  }
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_14BF178);
  v19 = sub_2CD004();
  _ConditionalContent<>.init(storage:)(&v26, v18, &type metadata for EmptyView, v19, &protocol witness table for EmptyView);
  result = *(double *)&v31;
  v21 = v32;
  v22 = v33;
  v23 = v34;
  v24 = v35;
  v25 = v36;
  *(_OWORD *)a4 = v31;
  *(_OWORD *)(a4 + 16) = v21;
  *(_OWORD *)(a4 + 32) = v22;
  *(_OWORD *)(a4 + 48) = v23;
  *(_BYTE *)(a4 + 64) = v24;
  *(_BYTE *)(a4 + 65) = v25;
  return result;
}

double sub_9F0D84@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_9F0C30(*(_BYTE *)v1, *(_QWORD *)(v1 + 8), *(_BYTE *)(v1 + 16), a1);
}

uint64_t sub_9F0DD8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _OWORD *v33;
  __int128 v34;
  __int128 *v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE v50[48];
  uint64_t v51;
  unsigned __int8 v52;
  _QWORD v53[3];
  unsigned __int8 v54;
  _OWORD v55[3];
  __int128 v56[8];
  _OWORD v57[8];
  _BYTE v58[72];

  v2 = v1;
  v49 = a1;
  v3 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = v5;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14B0FA0);
  __chkstk_darwin(v6);
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = _s7ArtworkVMa(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EEF20);
  __chkstk_darwin(v48);
  v47 = (uint64_t)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5C238(v2, (uint64_t)v8, (uint64_t *)&unk_14B0FA0);
  v13 = type metadata accessor for ArtworkImage.Info(0);
  sub_5BDB8(v2 + *(int *)(v13 + 20), (uint64_t)v5, type metadata accessor for ArtworkImage.Placeholder);
  v14 = (int *)type metadata accessor for Header.AdaptativeArtwork(0);
  v15 = v2 + v14[8];
  v16 = *(_QWORD *)v15;
  v17 = *(_BYTE *)(v15 + 8);
  sub_270050(*(_QWORD *)v15, v17);
  v18 = sub_724BF4(v16, v17);
  sub_270154(v16, v17);
  sub_5C090(v2 + v14[6], (uint64_t)v58, &qword_14C9BD0);
  sub_9F5300(v18, (uint64_t)v58, (uint64_t)v50);
  v19 = v2 + *(int *)(v13 + 32);
  ArtworkImage.Info.init(viewModel:placeholder:aspectRatio:size:corner:)((uint64_t)v8, (uint64_t)v46, 0, 1, (uint64_t)v50, *(_QWORD *)v19, *(_QWORD *)(v19 + 8), *(_BYTE *)(v19 + 16), (uint64_t)v11);
  sub_5C238(v2 + v14[5], (uint64_t)&v11[*(int *)(v9 + 20)], &qword_14CCE60);
  v20 = (uint64_t *)(v2 + v14[7]);
  v21 = *v20;
  v22 = v20[1];
  v23 = &v11[*(int *)(v9 + 24)];
  *(_QWORD *)v23 = v21;
  *((_QWORD *)v23 + 1) = v22;
  sub_270050(v16, v17);
  swift_bridgeObjectRetain();
  LOBYTE(v22) = sub_724BF4(v16, v17);
  sub_270154(v16, v17);
  sub_9F5300(v22, (uint64_t)v58, (uint64_t)&v51);
  v24 = v51;
  v25 = v52;
  sub_270050(v16, v17);
  LOBYTE(v13) = sub_724BF4(v16, v17);
  sub_270154(v16, v17);
  v26 = sub_9F5300(v13, (uint64_t)v58, (uint64_t)v53);
  v27 = v53[2];
  v28 = v54;
  v29 = static Alignment.center.getter(v26);
  _FrameLayout.init(width:height:alignment:)(v55, v24, v25, v27, v28, v29, v30);
  v31 = v47;
  sub_5BDB8((uint64_t)v11, v47, _s7ArtworkVMa);
  v32 = v48;
  v33 = (_OWORD *)(v31 + *(int *)(v48 + 36));
  v34 = v55[1];
  *v33 = v55[0];
  v33[1] = v34;
  v33[2] = v55[2];
  sub_5C0DC((uint64_t)v11, _s7ArtworkVMa);
  v35 = Radiosity.Specs.containerDetailHeaderArtwork.unsafeMutableAddressor();
  v36 = v35[3];
  v38 = *v35;
  v37 = v35[1];
  v57[2] = v35[2];
  v57[3] = v36;
  v57[0] = v38;
  v57[1] = v37;
  v39 = v35[7];
  v41 = v35[4];
  v40 = v35[5];
  v57[6] = v35[6];
  v57[7] = v39;
  v57[4] = v41;
  v57[5] = v40;
  v42 = *(_QWORD *)v19;
  v43 = *(_QWORD *)(v19 + 8);
  LOBYTE(v25) = *(_BYTE *)(v19 + 16);
  sub_726C68((uint64_t)v57);
  Radiosity.Specs.pathShadow(for:)(v42, v43, v25, (uint64_t)v56);
  sub_726CC8((uint64_t)v57);
  v44 = sub_9F54C8();
  View.radiosity(specs:)(v56, v32, v44);
  sub_56024(v31, &qword_14EEF20);
  return sub_726CC8((uint64_t)v56);
}

uint64_t sub_9F11A0(char a1)
{
  return sub_9F12E8(a1, (uint64_t (*)(uint64_t, uint64_t))sub_9E8FB4);
}

uint64_t objectdestroyTm_18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v1 = type metadata accessor for Header(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + v4));
  v6 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 20));
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14CD210);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for UserInterfaceSizeClass(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8))
      (*(void (**)(_QWORD *, uint64_t))(v9 + 8))(v6, v8);
  }
  else
  {
    swift_release(*v6);
  }
  v10 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 24));
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14F96E0);
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v12 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v10, v12);
  }
  else
  {
    swift_release(*v10);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_9F12DC(char a1)
{
  return sub_9F12E8(a1, (uint64_t (*)(uint64_t, uint64_t))sub_9E9B5C);
}

uint64_t sub_9F12E8(char a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = a1 & 1;
  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Header(0) - 8) + 80);
  return a2(v3, v2 + ((v4 + 16) & ~v4));
}

uint64_t sub_9F1344(uint64_t a1)
{
  return EnvironmentValues.colorScheme.getter(a1);
}

uint64_t sub_9F1398@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_9E8444(a1, (uint64_t)&unk_10901A0, &OBJC_IVAR____TtCV16MusicApplication6Header13Configuration__playIntentButtonIntents, a2);
}

uint64_t sub_9F13C8()
{
  uint64_t v0;

  return sub_97EF9C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_9F13E0()
{
  uint64_t *v0;

  return sub_97F098(v0[2], v0[3], v0[4]);
}

uint64_t sub_9F1404@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_9E80E0(a1, (uint64_t)&unk_1090220, &OBJC_IVAR____TtCV16MusicApplication6Header13Configuration__metadata, &qword_14EBA98, a2);
}

uint64_t sub_9F1434()
{
  uint64_t v0;

  return sub_97EDB0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_9F145C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_9F1480()
{
  uint64_t *v0;

  return sub_97ED50(v0[2], v0[3], v0[4]);
}

uint64_t sub_9F149C()
{
  uint64_t v0;

  return sub_97EC4C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
}

uint64_t sub_9F14C4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_9E80E0(a1, (uint64_t)&unk_10902C0, &OBJC_IVAR____TtCV16MusicApplication6Header13Configuration__favoriteStatus, &qword_14E9E10, a2);
}

uint64_t sub_9F14FC()
{
  uint64_t v0;

  return sub_97EB78(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_9F1514()
{
  uint64_t *v0;

  return sub_97EB18(v0[2], v0[3], v0[4]);
}

uint64_t type metadata accessor for Header.AdaptativeArtwork(uint64_t a1)
{
  return sub_6345C(a1, qword_14EEE18, (uint64_t)&nominal type descriptor for Header.AdaptativeArtwork);
}

uint64_t sub_9F1544@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_9E80E0(a1, (uint64_t)&unk_1090318, &OBJC_IVAR____TtCV16MusicApplication6Header13Configuration__artworkInfo, (uint64_t *)&unk_14E4E30, a2);
}

uint64_t sub_9F1574@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_9E8444(a1, (uint64_t)&unk_1090340, &OBJC_IVAR____TtCV16MusicApplication6Header13Configuration__videoArtworks, a2);
}

uint64_t sub_9F159C()
{
  uint64_t v0;

  return sub_97E724(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_9F15B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 112);
}

uint64_t sub_9F15BC(_QWORD *a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD v8[8];

  v8[0] = (char *)&value witness table for Builtin.Int64 + 64;
  v8[1] = &unk_1090378;
  result = swift_checkMetadataState(319, a1[2]);
  if (v3 <= 0x3F)
  {
    v8[2] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for Optional(319, a1[3]);
    if (v4 <= 0x3F)
    {
      v8[3] = *(_QWORD *)(result - 8) + 64;
      result = type metadata accessor for Optional(319, a1[4]);
      if (v5 <= 0x3F)
      {
        v8[4] = *(_QWORD *)(result - 8) + 64;
        result = type metadata accessor for Optional(319, a1[5]);
        if (v6 <= 0x3F)
        {
          v8[5] = *(_QWORD *)(result - 8) + 64;
          result = swift_checkMetadataState(319, a1[6]);
          if (v7 <= 0x3F)
          {
            v8[6] = *(_QWORD *)(result - 8) + 64;
            v8[7] = &unk_1090390;
            swift_initStructMetadata(a1, 0, 8, v8, a1 + 12);
            return 0;
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_9F16C8(uint64_t a1, uint64_t *a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  char *v29;
  size_t v30;
  uint64_t v31;
  char *v32;
  void *v33;
  char *v34;
  size_t v35;
  uint64_t v36;
  char *v37;
  void *v38;
  const void *v39;
  size_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v47;
  size_t v48;
  uint64_t v49;
  uint64_t v50;
  size_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  size_t __n;

  v4 = *(_QWORD *)(a3[2] - 8);
  v5 = *(_DWORD *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v56 = a3[3];
  v7 = *(_QWORD *)(v56 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = v6 + v8;
  if (*(_DWORD *)(v7 + 84))
    v10 = *(_QWORD *)(v7 + 64);
  else
    v10 = *(_QWORD *)(v7 + 64) + 1;
  v11 = *(_QWORD *)(a3[4] - 8);
  v12 = *(_DWORD *)(v11 + 80);
  __n = v10;
  if (*(_DWORD *)(v11 + 84))
    v13 = *(_QWORD *)(v11 + 64);
  else
    v13 = *(_QWORD *)(v11 + 64) + 1;
  v14 = *(_QWORD *)(a3[5] - 8);
  v15 = *(_DWORD *)(v14 + 80);
  if (*(_DWORD *)(v14 + 84))
    v16 = *(_QWORD *)(v14 + 64);
  else
    v16 = *(_QWORD *)(v14 + 64) + 1;
  v17 = a3[6];
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_DWORD *)(v18 + 80);
  v20 = v8 | v5 | v12 | v15 | v19;
  if (v20 > 7
    || ((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v4 + 80) | *(_DWORD *)(v11 + 80) | *(_DWORD *)(v14 + 80) | *(_DWORD *)(v18 + 80)) & 0x100000) != 0
    || ((*(_QWORD *)(v18 + 64)
       + 7
       + ((v16 + v19 + ((v13 + v15 + ((v10 + v12 + ((v6 + v8 + ((v5 + 9) & ~v5)) & ~v8)) & ~v12)) & ~v15)) & ~v19)) & 0xFFFFFFFFFFFFFFF8)
     + 9 > 0x18)
  {
    v23 = *a2;
    *(_QWORD *)a1 = *a2;
    v24 = v23 + ((v20 & 0xF8 ^ 0x1F8) & (v20 + 16));
    swift_retain(v23);
  }
  else
  {
    v48 = v13;
    v49 = a3[4];
    v50 = a3[5];
    v51 = v16;
    v52 = *(_QWORD *)(v18 + 64) + 7;
    v53 = *(_QWORD *)(v17 - 8);
    v54 = a3[6];
    v25 = ~v8;
    v47 = ~v12;
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v26 = (a1 + v5 + 9) & ~v5;
    v27 = ((unint64_t)a2 + v5 + 9) & ~v5;
    (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v26, v27);
    v28 = (void *)((v26 + v9) & v25);
    v29 = (char *)((v27 + v9) & v25);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v29, 1, v56))
    {
      v30 = __n;
      memcpy(v28, v29, __n);
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v7 + 16))(v28, v29, v56);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v28, 0, 1, v56);
      v30 = __n;
    }
    v31 = ~v15;
    v32 = &v29[v30];
    v33 = (void *)(((unint64_t)v28 + v30 + v12) & v47);
    v34 = (char *)((unint64_t)&v32[v12] & v47);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v34, 1, v49))
    {
      v35 = v48;
      memcpy(v33, v34, v48);
      v24 = a1;
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v33, v34, v49);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v33, 0, 1, v49);
      v24 = a1;
      v35 = v48;
    }
    v36 = ~v19;
    v37 = &v34[v35];
    v38 = (void *)(((unint64_t)v33 + v35 + v15) & v31);
    v39 = (const void *)((unint64_t)&v37[v15] & v31);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v39, 1, v50))
    {
      v40 = v51;
      memcpy(v38, v39, v51);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v38, v39, v50);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v38, 0, 1, v50);
      v40 = v51;
    }
    v41 = ((unint64_t)v38 + v40 + v19) & v36;
    v42 = ((unint64_t)v39 + v40 + v19) & v36;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v53 + 16))(v41, v42, v54);
    v43 = (v52 + v41) & 0xFFFFFFFFFFFFFFF8;
    v44 = (v52 + v42) & 0xFFFFFFFFFFFFFFF8;
    v45 = *(_QWORD *)v44;
    LOBYTE(v41) = *(_BYTE *)(v44 + 8);
    sub_270050(*(_QWORD *)v44, v41);
    *(_QWORD *)v43 = v45;
    *(_BYTE *)(v43 + 8) = v41;
  }
  return v24;
}

uint64_t sub_9F1A68(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;

  v3 = *(_QWORD *)(a2[2] - 8);
  v4 = (a1 + *(unsigned __int8 *)(v3 + 80) + 9) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  (*(void (**)(unint64_t))(v3 + 8))(v4);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = a2[3];
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (v4 + v5 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v8, 1, v6))
    (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v8, v6);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = *(_DWORD *)(v7 + 84) == 0;
  v11 = a2[4];
  v12 = *(_QWORD *)(v11 - 8);
  v13 = v9 + v8;
  if (v10)
    ++v13;
  v14 = (v13 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, _QWORD))(v12 + 48))(v14, 1, a2[4]))
    (*(void (**)(unint64_t, uint64_t))(v12 + 8))(v14, v11);
  v15 = *(_QWORD *)(v12 + 64);
  v10 = *(_DWORD *)(v12 + 84) == 0;
  v16 = a2[5];
  v17 = *(_QWORD *)(v16 - 8);
  v18 = v15 + v14;
  if (v10)
    ++v18;
  v19 = (v18 + *(unsigned __int8 *)(v17 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, _QWORD))(v17 + 48))(v19, 1, a2[5]))
    (*(void (**)(unint64_t, uint64_t))(v17 + 8))(v19, v16);
  v20 = *(_QWORD *)(a2[6] - 8);
  v21 = *(_QWORD *)(v17 + 64) + v19;
  if (!*(_DWORD *)(v17 + 84))
    ++v21;
  v22 = (v21 + *(unsigned __int8 *)(v20 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  (*(void (**)(unint64_t))(v20 + 8))(v22);
  v23 = (*(_QWORD *)(v20 + 64) + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_270154(*(_QWORD *)v23, *(_BYTE *)(v23 + 8));
}

uint64_t sub_9F1BE0(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  int v16;
  size_t v17;
  size_t v18;
  size_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  const void *v25;
  int v26;
  size_t v27;
  size_t v28;
  size_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  const void *v35;
  int v36;
  size_t v37;
  size_t v38;
  size_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v5 = *(_QWORD *)(a3[2] - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v6 + 9 + a1) & ~v6;
  v8 = (v6 + 9 + a2) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(v7, v8);
  v9 = *(_QWORD *)(v5 + 64);
  v10 = a3[3];
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = v9 + v12;
  v14 = (void *)((v13 + v7) & ~v12);
  v15 = (const void *)((v13 + v8) & ~v12);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v15, 1, v10))
  {
    v16 = *(_DWORD *)(v11 + 84);
    v17 = *(_QWORD *)(v11 + 64);
    if (v16)
      v18 = v17;
    else
      v18 = v17 + 1;
    memcpy(v14, v15, v18);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v14, v15, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
    v16 = *(_DWORD *)(v11 + 84);
    v17 = *(_QWORD *)(v11 + 64);
  }
  if (v16)
    v19 = v17;
  else
    v19 = v17 + 1;
  v20 = a3[4];
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(unsigned __int8 *)(v21 + 80);
  v23 = v19 + v22;
  v24 = (void *)(((unint64_t)v14 + v23) & ~v22);
  v25 = (const void *)(((unint64_t)v15 + v23) & ~v22);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48))(v25, 1, v20))
  {
    v26 = *(_DWORD *)(v21 + 84);
    v27 = *(_QWORD *)(v21 + 64);
    if (v26)
      v28 = v27;
    else
      v28 = v27 + 1;
    memcpy(v24, v25, v28);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v21 + 16))(v24, v25, v20);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v24, 0, 1, v20);
    v26 = *(_DWORD *)(v21 + 84);
    v27 = *(_QWORD *)(v21 + 64);
  }
  if (v26)
    v29 = v27;
  else
    v29 = v27 + 1;
  v30 = a3[5];
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(unsigned __int8 *)(v31 + 80);
  v33 = v29 + v32;
  v34 = (void *)(((unint64_t)v24 + v33) & ~v32);
  v35 = (const void *)(((unint64_t)v25 + v33) & ~v32);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v31 + 48))(v35, 1, v30))
  {
    v36 = *(_DWORD *)(v31 + 84);
    v37 = *(_QWORD *)(v31 + 64);
    if (v36)
      v38 = v37;
    else
      v38 = v37 + 1;
    memcpy(v34, v35, v38);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v31 + 16))(v34, v35, v30);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v34, 0, 1, v30);
    v36 = *(_DWORD *)(v31 + 84);
    v37 = *(_QWORD *)(v31 + 64);
  }
  if (v36)
    v39 = v37;
  else
    v39 = v37 + 1;
  v40 = *(_QWORD *)(a3[6] - 8);
  v41 = *(unsigned __int8 *)(v40 + 80);
  v42 = v39 + v41;
  v43 = ((unint64_t)v34 + v42) & ~v41;
  v44 = ((unint64_t)v35 + v42) & ~v41;
  (*(void (**)(unint64_t, unint64_t))(v40 + 16))(v43, v44);
  v45 = *(_QWORD *)(v40 + 64) + 7;
  v46 = (v45 + v43) & 0xFFFFFFFFFFFFFFF8;
  v47 = (v45 + v44) & 0xFFFFFFFFFFFFFFF8;
  v48 = *(_QWORD *)v47;
  LOBYTE(v44) = *(_BYTE *)(v47 + 8);
  sub_270050(*(_QWORD *)v47, v44);
  *(_QWORD *)v46 = v48;
  *(_BYTE *)(v46 + 8) = v44;
  return a1;
}

uint64_t sub_9F1E78(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;
  size_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t (*v27)(void *, uint64_t, uint64_t);
  int v28;
  int v29;
  size_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  uint64_t (*v38)(void *, uint64_t, uint64_t);
  int v39;
  int v40;
  size_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v5 = *(_QWORD *)(a3[2] - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v6 + 9 + a1) & ~v6;
  v8 = (v6 + 9 + a2) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v5 + 24))(v7, v8);
  v9 = *(_QWORD *)(v5 + 64);
  v10 = a3[3];
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = v9 + v12;
  v14 = (void *)((v13 + v7) & ~v12);
  v15 = (void *)((v13 + v8) & ~v12);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v17 = v16(v14, 1, v10);
  v18 = v16(v15, 1, v10);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v14, v15, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v14, v15, v10);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v14, v10);
  }
  if (*(_DWORD *)(v11 + 84))
    v19 = *(_QWORD *)(v11 + 64);
  else
    v19 = *(_QWORD *)(v11 + 64) + 1;
  memcpy(v14, v15, v19);
LABEL_10:
  if (*(_DWORD *)(v11 + 84))
    v20 = *(_QWORD *)(v11 + 64);
  else
    v20 = *(_QWORD *)(v11 + 64) + 1;
  v21 = a3[4];
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(unsigned __int8 *)(v22 + 80);
  v24 = v20 + v23;
  v25 = (void *)(((unint64_t)v14 + v24) & ~v23);
  v26 = (void *)(((unint64_t)v15 + v24) & ~v23);
  v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v22 + 48);
  v28 = v27(v25, 1, v21);
  v29 = v27(v26, 1, v21);
  if (v28)
  {
    if (!v29)
    {
      (*(void (**)(void *, void *, uint64_t))(v22 + 16))(v25, v26, v21);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v25, 0, 1, v21);
      goto LABEL_22;
    }
  }
  else
  {
    if (!v29)
    {
      (*(void (**)(void *, void *, uint64_t))(v22 + 24))(v25, v26, v21);
      goto LABEL_22;
    }
    (*(void (**)(void *, uint64_t))(v22 + 8))(v25, v21);
  }
  if (*(_DWORD *)(v22 + 84))
    v30 = *(_QWORD *)(v22 + 64);
  else
    v30 = *(_QWORD *)(v22 + 64) + 1;
  memcpy(v25, v26, v30);
LABEL_22:
  if (*(_DWORD *)(v22 + 84))
    v31 = *(_QWORD *)(v22 + 64);
  else
    v31 = *(_QWORD *)(v22 + 64) + 1;
  v32 = a3[5];
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(unsigned __int8 *)(v33 + 80);
  v35 = v31 + v34;
  v36 = (void *)(((unint64_t)v25 + v35) & ~v34);
  v37 = (void *)(((unint64_t)v26 + v35) & ~v34);
  v38 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v33 + 48);
  v39 = v38(v36, 1, v32);
  v40 = v38(v37, 1, v32);
  if (v39)
  {
    if (!v40)
    {
      (*(void (**)(void *, void *, uint64_t))(v33 + 16))(v36, v37, v32);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v36, 0, 1, v32);
      goto LABEL_34;
    }
  }
  else
  {
    if (!v40)
    {
      (*(void (**)(void *, void *, uint64_t))(v33 + 24))(v36, v37, v32);
      goto LABEL_34;
    }
    (*(void (**)(void *, uint64_t))(v33 + 8))(v36, v32);
  }
  if (*(_DWORD *)(v33 + 84))
    v41 = *(_QWORD *)(v33 + 64);
  else
    v41 = *(_QWORD *)(v33 + 64) + 1;
  memcpy(v36, v37, v41);
LABEL_34:
  if (*(_DWORD *)(v33 + 84))
    v42 = *(_QWORD *)(v33 + 64);
  else
    v42 = *(_QWORD *)(v33 + 64) + 1;
  v43 = *(_QWORD *)(a3[6] - 8);
  v44 = *(unsigned __int8 *)(v43 + 80);
  v45 = v42 + v44;
  v46 = ((unint64_t)v36 + v45) & ~v44;
  v47 = ((unint64_t)v37 + v45) & ~v44;
  (*(void (**)(unint64_t, unint64_t))(v43 + 24))(v46, v47);
  v48 = *(_QWORD *)(v43 + 64) + 7;
  v49 = (v48 + v46) & 0xFFFFFFFFFFFFFFF8;
  v50 = (v48 + v47) & 0xFFFFFFFFFFFFFFF8;
  v51 = *(_QWORD *)v50;
  LOBYTE(v47) = *(_BYTE *)(v50 + 8);
  sub_270050(*(_QWORD *)v50, v47);
  v52 = *(_QWORD *)v49;
  v53 = *(_BYTE *)(v49 + 8);
  *(_QWORD *)v49 = v51;
  *(_BYTE *)(v49 + 8) = v47;
  sub_270154(v52, v53);
  return a1;
}

uint64_t sub_9F21F0(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  int v16;
  size_t v17;
  size_t v18;
  size_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  const void *v25;
  int v26;
  size_t v27;
  size_t v28;
  size_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  const void *v35;
  int v36;
  size_t v37;
  size_t v38;
  size_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  char v48;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v5 = *(_QWORD *)(a3[2] - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v6 + 9 + a1) & ~v6;
  v8 = (v6 + 9 + a2) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(v7, v8);
  v9 = *(_QWORD *)(v5 + 64);
  v10 = a3[3];
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = v9 + v12;
  v14 = (void *)((v13 + v7) & ~v12);
  v15 = (const void *)((v13 + v8) & ~v12);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v15, 1, v10))
  {
    v16 = *(_DWORD *)(v11 + 84);
    v17 = *(_QWORD *)(v11 + 64);
    if (v16)
      v18 = v17;
    else
      v18 = v17 + 1;
    memcpy(v14, v15, v18);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v14, v15, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
    v16 = *(_DWORD *)(v11 + 84);
    v17 = *(_QWORD *)(v11 + 64);
  }
  if (v16)
    v19 = v17;
  else
    v19 = v17 + 1;
  v20 = a3[4];
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(unsigned __int8 *)(v21 + 80);
  v23 = v19 + v22;
  v24 = (void *)(((unint64_t)v14 + v23) & ~v22);
  v25 = (const void *)(((unint64_t)v15 + v23) & ~v22);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48))(v25, 1, v20))
  {
    v26 = *(_DWORD *)(v21 + 84);
    v27 = *(_QWORD *)(v21 + 64);
    if (v26)
      v28 = v27;
    else
      v28 = v27 + 1;
    memcpy(v24, v25, v28);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v21 + 32))(v24, v25, v20);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v24, 0, 1, v20);
    v26 = *(_DWORD *)(v21 + 84);
    v27 = *(_QWORD *)(v21 + 64);
  }
  if (v26)
    v29 = v27;
  else
    v29 = v27 + 1;
  v30 = a3[5];
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(unsigned __int8 *)(v31 + 80);
  v33 = v29 + v32;
  v34 = (void *)(((unint64_t)v24 + v33) & ~v32);
  v35 = (const void *)(((unint64_t)v25 + v33) & ~v32);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v31 + 48))(v35, 1, v30))
  {
    v36 = *(_DWORD *)(v31 + 84);
    v37 = *(_QWORD *)(v31 + 64);
    if (v36)
      v38 = v37;
    else
      v38 = v37 + 1;
    memcpy(v34, v35, v38);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v31 + 32))(v34, v35, v30);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v34, 0, 1, v30);
    v36 = *(_DWORD *)(v31 + 84);
    v37 = *(_QWORD *)(v31 + 64);
  }
  if (v36)
    v39 = v37;
  else
    v39 = v37 + 1;
  v40 = *(_QWORD *)(a3[6] - 8);
  v41 = *(unsigned __int8 *)(v40 + 80);
  v42 = v39 + v41;
  v43 = ((unint64_t)v34 + v42) & ~v41;
  v44 = ((unint64_t)v35 + v42) & ~v41;
  (*(void (**)(unint64_t, unint64_t))(v40 + 32))(v43, v44);
  v45 = *(_QWORD *)(v40 + 64) + 7;
  v46 = (v45 + v43) & 0xFFFFFFFFFFFFFFF8;
  v47 = (v45 + v44) & 0xFFFFFFFFFFFFFFF8;
  v48 = *(_BYTE *)(v47 + 8);
  *(_QWORD *)v46 = *(_QWORD *)v47;
  *(_BYTE *)(v46 + 8) = v48;
  return a1;
}

uint64_t sub_9F247C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;
  size_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t (*v27)(void *, uint64_t, uint64_t);
  int v28;
  int v29;
  size_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  uint64_t (*v38)(void *, uint64_t, uint64_t);
  int v39;
  int v40;
  size_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v5 = *(_QWORD *)(a3[2] - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v6 + 9 + a1) & ~v6;
  v8 = (v6 + 9 + a2) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v5 + 40))(v7, v8);
  v9 = *(_QWORD *)(v5 + 64);
  v10 = a3[3];
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = v9 + v12;
  v14 = (void *)((v13 + v7) & ~v12);
  v15 = (void *)((v13 + v8) & ~v12);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v17 = v16(v14, 1, v10);
  v18 = v16(v15, 1, v10);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v14, v15, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v14, v15, v10);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v14, v10);
  }
  if (*(_DWORD *)(v11 + 84))
    v19 = *(_QWORD *)(v11 + 64);
  else
    v19 = *(_QWORD *)(v11 + 64) + 1;
  memcpy(v14, v15, v19);
LABEL_10:
  if (*(_DWORD *)(v11 + 84))
    v20 = *(_QWORD *)(v11 + 64);
  else
    v20 = *(_QWORD *)(v11 + 64) + 1;
  v21 = a3[4];
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(unsigned __int8 *)(v22 + 80);
  v24 = v20 + v23;
  v25 = (void *)(((unint64_t)v14 + v24) & ~v23);
  v26 = (void *)(((unint64_t)v15 + v24) & ~v23);
  v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v22 + 48);
  v28 = v27(v25, 1, v21);
  v29 = v27(v26, 1, v21);
  if (v28)
  {
    if (!v29)
    {
      (*(void (**)(void *, void *, uint64_t))(v22 + 32))(v25, v26, v21);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v25, 0, 1, v21);
      goto LABEL_22;
    }
  }
  else
  {
    if (!v29)
    {
      (*(void (**)(void *, void *, uint64_t))(v22 + 40))(v25, v26, v21);
      goto LABEL_22;
    }
    (*(void (**)(void *, uint64_t))(v22 + 8))(v25, v21);
  }
  if (*(_DWORD *)(v22 + 84))
    v30 = *(_QWORD *)(v22 + 64);
  else
    v30 = *(_QWORD *)(v22 + 64) + 1;
  memcpy(v25, v26, v30);
LABEL_22:
  if (*(_DWORD *)(v22 + 84))
    v31 = *(_QWORD *)(v22 + 64);
  else
    v31 = *(_QWORD *)(v22 + 64) + 1;
  v32 = a3[5];
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(unsigned __int8 *)(v33 + 80);
  v35 = v31 + v34;
  v36 = (void *)(((unint64_t)v25 + v35) & ~v34);
  v37 = (void *)(((unint64_t)v26 + v35) & ~v34);
  v38 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v33 + 48);
  v39 = v38(v36, 1, v32);
  v40 = v38(v37, 1, v32);
  if (v39)
  {
    if (!v40)
    {
      (*(void (**)(void *, void *, uint64_t))(v33 + 32))(v36, v37, v32);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v36, 0, 1, v32);
      goto LABEL_34;
    }
  }
  else
  {
    if (!v40)
    {
      (*(void (**)(void *, void *, uint64_t))(v33 + 40))(v36, v37, v32);
      goto LABEL_34;
    }
    (*(void (**)(void *, uint64_t))(v33 + 8))(v36, v32);
  }
  if (*(_DWORD *)(v33 + 84))
    v41 = *(_QWORD *)(v33 + 64);
  else
    v41 = *(_QWORD *)(v33 + 64) + 1;
  memcpy(v36, v37, v41);
LABEL_34:
  if (*(_DWORD *)(v33 + 84))
    v42 = *(_QWORD *)(v33 + 64);
  else
    v42 = *(_QWORD *)(v33 + 64) + 1;
  v43 = *(_QWORD *)(a3[6] - 8);
  v44 = *(unsigned __int8 *)(v43 + 80);
  v45 = v42 + v44;
  v46 = ((unint64_t)v36 + v45) & ~v44;
  v47 = ((unint64_t)v37 + v45) & ~v44;
  (*(void (**)(unint64_t, unint64_t))(v43 + 40))(v46, v47);
  v48 = *(_QWORD *)(v43 + 64) + 7;
  v49 = (v48 + v46) & 0xFFFFFFFFFFFFFFF8;
  v50 = (v48 + v47) & 0xFFFFFFFFFFFFFFF8;
  v51 = *(_QWORD *)v50;
  LOBYTE(v50) = *(_BYTE *)(v50 + 8);
  v52 = *(_QWORD *)v49;
  v53 = *(_BYTE *)(v49 + 8);
  *(_QWORD *)v49 = v51;
  *(_BYTE *)(v49 + 8) = v50;
  sub_270154(v52, v53);
  return a1;
}

uint64_t sub_9F27E8(uint64_t a1, unsigned int a2, _QWORD *a3)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  uint64_t v34;
  unsigned int v35;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v4 = *(_QWORD *)(a3[2] - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(a3[3] - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7)
    v8 = v7 - 1;
  else
    v8 = 0;
  if (v5 <= v8)
    v9 = v8;
  else
    v9 = *(_DWORD *)(v4 + 84);
  v10 = a3[4];
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int *)(v11 + 84);
  if ((_DWORD)v12)
    v13 = v12 - 1;
  else
    v13 = 0;
  if (v9 <= v13)
    v14 = v13;
  else
    v14 = v9;
  v15 = *(_QWORD *)(a3[5] - 8);
  v16 = *(_DWORD *)(v15 + 84);
  if (v16)
    v17 = v16 - 1;
  else
    v17 = 0;
  if (v14 <= v17)
    v18 = v17;
  else
    v18 = v14;
  v19 = *(_QWORD *)(a3[6] - 8);
  if (v18 <= *(_DWORD *)(v19 + 84))
    v20 = *(_DWORD *)(v19 + 84);
  else
    v20 = v18;
  if (v20 <= 0xFE)
    v21 = 254;
  else
    v21 = v20;
  v22 = *(_QWORD *)(v6 + 64);
  if (!v7)
    ++v22;
  v23 = *(_QWORD *)(v11 + 64);
  if (!(_DWORD)v12)
    ++v23;
  if (v16)
    v24 = *(_QWORD *)(v15 + 64);
  else
    v24 = *(_QWORD *)(v15 + 64) + 1;
  if (!a2)
    return 0;
  v25 = *(unsigned __int8 *)(v4 + 80);
  v47 = *(_QWORD *)(v4 + 64);
  v26 = *(unsigned __int8 *)(v6 + 80);
  v27 = *(unsigned __int8 *)(v11 + 80);
  v46 = v22 + v27;
  v28 = *(unsigned __int8 *)(v15 + 80);
  v45 = v23 + v28;
  v29 = *(unsigned __int8 *)(v19 + 80);
  if (v21 < a2)
  {
    v30 = ((*(_QWORD *)(v19 + 64)
          + ((v24 + v29 + ((v45 + ((v46 + ((v47 + v26 + ((v25 + 9) & ~v25)) & ~v26)) & ~v27)) & ~v28)) & ~v29)
          + 7) & 0xFFFFFFFFFFFFFFF8)
        + 9;
    v31 = (a2 - v21 + 255) >> (8 * v30);
    if (v30 < 4)
      v32 = v31 + 1;
    else
      v32 = 2;
    if (v32 >= 0x10000)
      v33 = 4;
    else
      v33 = 2;
    if (v32 < 0x100)
      v33 = 1;
    if (v32 >= 2)
      v34 = v33;
    else
      v34 = 0;
    __asm { BR              X23 }
  }
  if (v20 > 0xFE)
  {
    v37 = (a1 + v25 + 9) & ~v25;
    if (v5 == v21)
    {
      v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
      v39 = *(unsigned int *)(v4 + 84);
      v40 = a3[2];
      return v38(v37, v39, v40);
    }
    v41 = (v37 + v47 + v26) & ~v26;
    if (v8 == v21)
    {
      if (v7 < 2)
        return 0;
      v42 = (*(uint64_t (**)(uint64_t))(v6 + 48))(v41);
    }
    else
    {
      v43 = (v46 + v41) & ~v27;
      if (v13 == v21)
      {
        if (v12 < 2)
          return 0;
        v42 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v43, v12, v10);
      }
      else
      {
        v44 = (v45 + v43) & ~v28;
        if (v17 != v21)
        {
          v37 = (v24 + v29 + v44) & ~v29;
          v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
          v39 = *(unsigned int *)(v19 + 84);
          v40 = a3[6];
          return v38(v37, v39, v40);
        }
        if (v16 < 2)
          return 0;
        v42 = (*(uint64_t (**)(uint64_t))(v15 + 48))(v44);
      }
    }
    if (v42 >= 2)
      return v42 - 1;
    else
      return 0;
  }
  v35 = *(unsigned __int8 *)(a1 + 8);
  if (v35 < 2)
    return 0;
  return ((v35 + 2147483646) & 0x7FFFFFFF) + 1;
}

void sub_9F2B40(_BYTE *a1, unsigned int a2, unsigned int a3, _QWORD *a4)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  int v12;
  unsigned int v13;
  uint64_t v14;
  int v15;
  unsigned int v16;
  uint64_t v17;
  unsigned int v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  size_t v24;
  unsigned int v25;
  unsigned int v26;
  int v27;
  int v28;

  v5 = 0;
  v6 = *(_QWORD *)(a4[2] - 8);
  v7 = *(_QWORD *)(a4[3] - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  if (*(_DWORD *)(v6 + 84) <= v9)
    v10 = v9;
  else
    v10 = *(_DWORD *)(v6 + 84);
  v11 = *(_QWORD *)(a4[4] - 8);
  v12 = *(_DWORD *)(v11 + 84);
  if (v12)
    v13 = v12 - 1;
  else
    v13 = 0;
  if (v10 <= v13)
    v10 = v13;
  v14 = *(_QWORD *)(a4[5] - 8);
  v15 = *(_DWORD *)(v14 + 84);
  if (v15)
    v16 = v15 - 1;
  else
    v16 = 0;
  if (v10 <= v16)
    v10 = v16;
  v17 = *(_QWORD *)(a4[6] - 8);
  if (v10 <= *(_DWORD *)(v17 + 84))
    v18 = *(_DWORD *)(v17 + 84);
  else
    v18 = v10;
  if (v18 <= 0xFE)
    v19 = 254;
  else
    v19 = v18;
  v20 = *(_QWORD *)(v7 + 64);
  if (!v8)
    ++v20;
  if (v12)
    v21 = *(_QWORD *)(v11 + 64);
  else
    v21 = *(_QWORD *)(v11 + 64) + 1;
  v22 = (v21
       + *(unsigned __int8 *)(v14 + 80)
       + ((v20
         + *(unsigned __int8 *)(v11 + 80)
         + ((*(_QWORD *)(v6 + 64)
           + *(unsigned __int8 *)(v7 + 80)
           + ((*(unsigned __int8 *)(v6 + 80) + 9) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v23 = *(_QWORD *)(v14 + 64);
  if (!v15)
    ++v23;
  v24 = ((*(_QWORD *)(v17 + 64)
        + ((v23 + *(unsigned __int8 *)(v17 + 80) + v22) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))
        + 7) & 0xFFFFFFFFFFFFFFF8)
      + 9;
  if (v19 < a3)
  {
    v25 = (a3 - v19 + 255) >> (8 * v24);
    if (v24 <= 3)
      v26 = v25 + 1;
    else
      v26 = 2;
    if (v26 >= 0x10000)
      v27 = 4;
    else
      v27 = 2;
    if (v26 < 0x100)
      v27 = 1;
    if (v26 >= 2)
      v5 = v27;
    else
      v5 = 0;
  }
  if (v19 < a2)
  {
    if (v24 >= 4)
      v28 = ~v19 + a2;
    else
      v28 = (~(_BYTE)v19 + a2);
    bzero(a1, v24);
    if ((_DWORD)v24 == 1)
      *a1 = v28;
    else
      *(_DWORD *)a1 = v28;
    __asm { BR              X10 }
  }
  __asm { BR              X28 }
}

void sub_9F2D78()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 + v1) = v0;
  JUMPOUT(0x9F2E84);
}

void sub_9F2D80(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;

  *(_DWORD *)(a18 + v18) = 0;
  if (a2)
    JUMPOUT(0x9F2D90);
  JUMPOUT(0x9F2E84);
}

void sub_9F2DE8()
{
  __int16 v0;
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v2 + v1) = v0;
  JUMPOUT(0x9F2E84);
}

void sub_9F2DF0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v2 + v1) = v0;
  JUMPOUT(0x9F2E84);
}

uint64_t sub_9F2DF8(unsigned int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  int v23;

  *(_WORD *)(a18 + v22) = 0;
  if (!a2)
LABEL_6:
    JUMPOUT(0x9F2E84);
  if (a1 <= 0xFE)
  {
    *(_BYTE *)(a18 + 8) = a2 + 1;
    goto LABEL_6;
  }
  if (v20 != v23)
    JUMPOUT(0x9F2E0CLL);
  return (*(uint64_t (**)(uint64_t))(a7 + 56))((a18 + v19 + 9) & v21);
}

uint64_t type metadata accessor for Header.TextVStack(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for Header.TextVStack);
}

uint64_t *sub_9F2EE4(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  _OWORD *v32;
  _OWORD *v33;
  __int128 v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _OWORD *v46;
  _OWORD *v47;
  __int128 v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char v56;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v10);
  }
  else
  {
    v7 = type metadata accessor for ArtworkImage.ViewModel(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14B0FA0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      v12 = *(int *)(v7 + 20);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = type metadata accessor for Artwork.CropStyle(0);
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AD680);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v18 = (int *)type metadata accessor for ArtworkImage.Info(0);
    v19 = v18[5];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD600);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 10, v22))
    {
      v24 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      v25 = type metadata accessor for Playlist.Variant(0);
      v26 = *(_QWORD *)(v25 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v21, 1, v25))
      {
        v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C1250);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v20, v21, v25);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v20, 0, 1, v25);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 10, v22);
    }
    v28 = v18[6];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    *(_QWORD *)v29 = *(_QWORD *)v30;
    v29[8] = v30[8];
    v31 = v18[7];
    v32 = (_OWORD *)((char *)a1 + v31);
    v33 = (_OWORD *)((char *)a2 + v31);
    *(_OWORD *)((char *)v32 + 26) = *(_OWORD *)((char *)v33 + 26);
    v34 = v33[1];
    *v32 = *v33;
    v32[1] = v34;
    v35 = v18[8];
    v36 = (char *)a1 + v35;
    v37 = (char *)a2 + v35;
    *(_OWORD *)v36 = *(_OWORD *)v37;
    v36[16] = v37[16];
    v38 = a3[5];
    v39 = (char *)a1 + v38;
    v40 = (char *)a2 + v38;
    v41 = type metadata accessor for VideoArtwork(0);
    v42 = *(_QWORD *)(v41 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
    {
      v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_14CCE60);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v39, v40, v41);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
    }
    v44 = a3[6];
    v45 = a3[7];
    v46 = (_OWORD *)((char *)a1 + v44);
    v47 = (_OWORD *)((char *)a2 + v44);
    v48 = v47[1];
    *v46 = *v47;
    v46[1] = v48;
    v46[2] = v47[2];
    *(_OWORD *)((char *)v46 + 41) = *(_OWORD *)((char *)v47 + 41);
    v49 = (uint64_t *)((char *)a1 + v45);
    v50 = (uint64_t *)((char *)a2 + v45);
    v51 = v50[1];
    *v49 = *v50;
    v49[1] = v51;
    v52 = a3[8];
    v53 = (char *)a1 + v52;
    v54 = (char *)a2 + v52;
    v55 = *(_QWORD *)v54;
    v56 = v54[8];
    swift_bridgeObjectRetain();
    sub_270050(v55, v56);
    *(_QWORD *)v53 = v55;
    v53[8] = v56;
  }
  return a1;
}

uint64_t sub_9F328C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = type metadata accessor for ArtworkImage.ViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4))
  {
    v5 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
    v6 = a1 + *(int *)(v4 + 20);
    v7 = type metadata accessor for Artwork.CropStyle(0);
    v8 = *(_QWORD *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  v9 = a1 + *(int *)(type metadata accessor for ArtworkImage.Info(0) + 20);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD600);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 10, v10))
  {
    v11 = type metadata accessor for Playlist.Variant(0);
    v12 = *(_QWORD *)(v11 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v9, v11);
  }
  v13 = a1 + *(int *)(a2 + 20);
  v14 = type metadata accessor for VideoArtwork(0);
  v15 = *(_QWORD *)(v14 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  swift_bridgeObjectRelease();
  return sub_270154(*(_QWORD *)(a1 + *(int *)(a2 + 32)), *(_BYTE *)(a1 + *(int *)(a2 + 32) + 8));
}

char *sub_9F3410(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  __int128 v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char v54;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14B0FA0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
    v10 = *(int *)(v6 + 20);
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = type metadata accessor for Artwork.CropStyle(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AD680);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v16 = (int *)type metadata accessor for ArtworkImage.Info(0);
  v17 = v16[5];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD600);
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 10, v20))
  {
    v22 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v23 = type metadata accessor for Playlist.Variant(0);
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v19, 1, v23))
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C1250);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v18, v19, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v18, 0, 1, v23);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 10, v20);
  }
  v26 = v16[6];
  v27 = &a1[v26];
  v28 = &a2[v26];
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v27[8] = v28[8];
  v29 = v16[7];
  v30 = &a1[v29];
  v31 = &a2[v29];
  *(_OWORD *)(v30 + 26) = *(_OWORD *)(v31 + 26);
  v32 = *((_OWORD *)v31 + 1);
  *(_OWORD *)v30 = *(_OWORD *)v31;
  *((_OWORD *)v30 + 1) = v32;
  v33 = v16[8];
  v34 = &a1[v33];
  v35 = &a2[v33];
  *(_OWORD *)v34 = *(_OWORD *)v35;
  v34[16] = v35[16];
  v36 = a3[5];
  v37 = &a1[v36];
  v38 = &a2[v36];
  v39 = type metadata accessor for VideoArtwork(0);
  v40 = *(_QWORD *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
  {
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_14CCE60);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v37, v38, v39);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
  }
  v42 = a3[6];
  v43 = a3[7];
  v44 = &a1[v42];
  v45 = &a2[v42];
  v46 = *((_OWORD *)v45 + 1);
  *(_OWORD *)v44 = *(_OWORD *)v45;
  *((_OWORD *)v44 + 1) = v46;
  *((_OWORD *)v44 + 2) = *((_OWORD *)v45 + 2);
  *(_OWORD *)(v44 + 41) = *(_OWORD *)(v45 + 41);
  v47 = &a1[v43];
  v48 = &a2[v43];
  v49 = *((_QWORD *)v48 + 1);
  *(_QWORD *)v47 = *(_QWORD *)v48;
  *((_QWORD *)v47 + 1) = v49;
  v50 = a3[8];
  v51 = &a1[v50];
  v52 = &a2[v50];
  v53 = *(_QWORD *)v52;
  v54 = v52[8];
  swift_bridgeObjectRetain();
  sub_270050(v53, v54);
  *(_QWORD *)v51 = v53;
  v51[8] = v54;
  return a1;
}

uint64_t sub_9F378C(uint64_t a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(void *, uint64_t, uint64_t);
  int v28;
  int v29;
  int *v30;
  uint64_t v31;
  void *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(void *, uint64_t, uint64_t);
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(void *, uint64_t, uint64_t);
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  __int128 v61;
  uint64_t v62;
  void *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t (*v67)(void *, uint64_t, uint64_t);
  int v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  _OWORD *v72;
  char *v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  uint64_t v77;
  _QWORD *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  char v86;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8((uint64_t)a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v21 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(a1, a2, v21);
      v22 = *(int *)(v6 + 20);
      v23 = (void *)(a1 + v22);
      v24 = &a2[v22];
      v25 = type metadata accessor for Artwork.CropStyle(0);
      v26 = *(_QWORD *)(v25 - 8);
      v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
      v28 = v27(v23, 1, v25);
      v29 = v27(v24, 1, v25);
      if (v28)
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 24))(v23, v24, v25);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14AD680) - 8) + 64);
      v19 = v23;
      v20 = v24;
LABEL_8:
      memcpy(v19, v20, v18);
      goto LABEL_14;
    }
    sub_5C0DC(a1, type metadata accessor for ArtworkImage.ViewModel);
LABEL_7:
    v18 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14B0FA0) - 8) + 64);
    v19 = (void *)a1;
    v20 = a2;
    goto LABEL_8;
  }
  if (v10)
    goto LABEL_7;
  v11 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
  v12 = *(int *)(v6 + 20);
  v13 = (void *)(a1 + v12);
  v14 = &a2[v12];
  v15 = type metadata accessor for Artwork.CropStyle(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AD680);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  v30 = (int *)type metadata accessor for ArtworkImage.Info(0);
  v31 = v30[5];
  v32 = (void *)(a1 + v31);
  v33 = &a2[v31];
  v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD600);
  v35 = *(_QWORD *)(v34 - 8);
  v36 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v35 + 48);
  v37 = v36(v32, 10, v34);
  v38 = v36(v33, 10, v34);
  if (!v37)
  {
    if (!v38)
    {
      v43 = type metadata accessor for Playlist.Variant(0);
      v44 = *(_QWORD *)(v43 - 8);
      v45 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v44 + 48);
      v46 = v45(v32, 1, v43);
      v47 = v45(v33, 1, v43);
      if (v46)
      {
        if (!v47)
        {
          (*(void (**)(void *, char *, uint64_t))(v44 + 16))(v32, v33, v43);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v32, 0, 1, v43);
          goto LABEL_27;
        }
      }
      else
      {
        if (!v47)
        {
          (*(void (**)(void *, char *, uint64_t))(v44 + 24))(v32, v33, v43);
          goto LABEL_27;
        }
        (*(void (**)(void *, uint64_t))(v44 + 8))(v32, v43);
      }
      v42 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C1250);
LABEL_21:
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      goto LABEL_27;
    }
    sub_56024((uint64_t)v32, (uint64_t *)&unk_14AD600);
LABEL_20:
    v42 = type metadata accessor for ArtworkImage.Placeholder(0);
    goto LABEL_21;
  }
  if (v38)
    goto LABEL_20;
  v39 = type metadata accessor for Playlist.Variant(0);
  v40 = *(_QWORD *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v33, 1, v39))
  {
    v41 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C1250);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v40 + 16))(v32, v33, v39);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v32, 0, 1, v39);
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 10, v34);
LABEL_27:
  v48 = v30[6];
  v49 = a1 + v48;
  v50 = &a2[v48];
  v51 = *(_QWORD *)v50;
  *(_BYTE *)(v49 + 8) = v50[8];
  *(_QWORD *)v49 = v51;
  v52 = v30[7];
  v53 = a1 + v52;
  v54 = &a2[v52];
  v55 = *(_QWORD *)v54;
  *(_BYTE *)(v53 + 8) = v54[8];
  *(_QWORD *)v53 = v55;
  v56 = *((_QWORD *)v54 + 2);
  *(_BYTE *)(v53 + 24) = v54[24];
  *(_QWORD *)(v53 + 16) = v56;
  v57 = *((_QWORD *)v54 + 4);
  *(_BYTE *)(v53 + 40) = v54[40];
  *(_QWORD *)(v53 + 32) = v57;
  *(_BYTE *)(v53 + 41) = v54[41];
  v58 = v30[8];
  v59 = a1 + v58;
  v60 = &a2[v58];
  v61 = *(_OWORD *)v60;
  *(_BYTE *)(v59 + 16) = v60[16];
  *(_OWORD *)v59 = v61;
  v62 = a3[5];
  v63 = (void *)(a1 + v62);
  v64 = &a2[v62];
  v65 = type metadata accessor for VideoArtwork(0);
  v66 = *(_QWORD *)(v65 - 8);
  v67 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v66 + 48);
  v68 = v67(v63, 1, v65);
  v69 = v67(v64, 1, v65);
  if (!v68)
  {
    if (!v69)
    {
      (*(void (**)(void *, char *, uint64_t))(v66 + 24))(v63, v64, v65);
      goto LABEL_33;
    }
    (*(void (**)(void *, uint64_t))(v66 + 8))(v63, v65);
    goto LABEL_32;
  }
  if (v69)
  {
LABEL_32:
    v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_14CCE60);
    memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    goto LABEL_33;
  }
  (*(void (**)(void *, char *, uint64_t))(v66 + 16))(v63, v64, v65);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
LABEL_33:
  v71 = a3[6];
  v72 = (_OWORD *)(a1 + v71);
  v73 = &a2[v71];
  v74 = *(_OWORD *)v73;
  v75 = *((_OWORD *)v73 + 1);
  v76 = *((_OWORD *)v73 + 2);
  *(_OWORD *)((char *)v72 + 41) = *(_OWORD *)(v73 + 41);
  v72[1] = v75;
  v72[2] = v76;
  *v72 = v74;
  v77 = a3[7];
  v78 = (_QWORD *)(a1 + v77);
  v79 = &a2[v77];
  *v78 = *(_QWORD *)v79;
  v78[1] = *((_QWORD *)v79 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v80 = a3[8];
  v81 = a1 + v80;
  v82 = &a2[v80];
  v83 = *(_QWORD *)v82;
  v84 = v82[8];
  sub_270050(*(_QWORD *)v82, v84);
  v85 = *(_QWORD *)v81;
  v86 = *(_BYTE *)(v81 + 8);
  *(_QWORD *)v81 = v83;
  *(_BYTE *)(v81 + 8) = v84;
  sub_270154(v85, v86);
  return a1;
}

char *sub_9F3D78(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  __int128 v46;
  uint64_t v47;
  char *v48;
  char *v49;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14B0FA0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
    v10 = *(int *)(v6 + 20);
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = type metadata accessor for Artwork.CropStyle(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AD680);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v16 = (int *)type metadata accessor for ArtworkImage.Info(0);
  v17 = v16[5];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD600);
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 10, v20))
  {
    v22 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v23 = type metadata accessor for Playlist.Variant(0);
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v19, 1, v23))
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C1250);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v18, v19, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v18, 0, 1, v23);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 10, v20);
  }
  v26 = v16[6];
  v27 = &a1[v26];
  v28 = &a2[v26];
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v27[8] = v28[8];
  v29 = v16[7];
  v30 = &a1[v29];
  v31 = &a2[v29];
  *(_OWORD *)(v30 + 26) = *(_OWORD *)(v31 + 26);
  v32 = *((_OWORD *)v31 + 1);
  *(_OWORD *)v30 = *(_OWORD *)v31;
  *((_OWORD *)v30 + 1) = v32;
  v33 = v16[8];
  v34 = &a1[v33];
  v35 = &a2[v33];
  *(_OWORD *)v34 = *(_OWORD *)v35;
  v34[16] = v35[16];
  v36 = a3[5];
  v37 = &a1[v36];
  v38 = &a2[v36];
  v39 = type metadata accessor for VideoArtwork(0);
  v40 = *(_QWORD *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
  {
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_14CCE60);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v37, v38, v39);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
  }
  v42 = a3[6];
  v43 = a3[7];
  v44 = &a1[v42];
  v45 = &a2[v42];
  v46 = *((_OWORD *)v45 + 1);
  *(_OWORD *)v44 = *(_OWORD *)v45;
  *((_OWORD *)v44 + 1) = v46;
  *((_OWORD *)v44 + 2) = *((_OWORD *)v45 + 2);
  *(_OWORD *)(v44 + 41) = *(_OWORD *)(v45 + 41);
  *(_OWORD *)&a1[v43] = *(_OWORD *)&a2[v43];
  v47 = a3[8];
  v48 = &a1[v47];
  v49 = &a2[v47];
  *(_QWORD *)v48 = *(_QWORD *)v49;
  v48[8] = v49[8];
  return a1;
}

uint64_t sub_9F40DC(uint64_t a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(void *, uint64_t, uint64_t);
  int v28;
  int v29;
  int *v30;
  uint64_t v31;
  void *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(void *, uint64_t, uint64_t);
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(void *, uint64_t, uint64_t);
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  void *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t (*v62)(void *, uint64_t, uint64_t);
  int v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _OWORD *v68;
  char *v69;
  __int128 v70;
  _QWORD *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char v80;

  v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8((uint64_t)a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v21 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(a1, a2, v21);
      v22 = *(int *)(v6 + 20);
      v23 = (void *)(a1 + v22);
      v24 = &a2[v22];
      v25 = type metadata accessor for Artwork.CropStyle(0);
      v26 = *(_QWORD *)(v25 - 8);
      v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
      v28 = v27(v23, 1, v25);
      v29 = v27(v24, 1, v25);
      if (v28)
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 40))(v23, v24, v25);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14AD680) - 8) + 64);
      v19 = v23;
      v20 = v24;
LABEL_8:
      memcpy(v19, v20, v18);
      goto LABEL_14;
    }
    sub_5C0DC(a1, type metadata accessor for ArtworkImage.ViewModel);
LABEL_7:
    v18 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14B0FA0) - 8) + 64);
    v19 = (void *)a1;
    v20 = a2;
    goto LABEL_8;
  }
  if (v10)
    goto LABEL_7;
  v11 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
  v12 = *(int *)(v6 + 20);
  v13 = (void *)(a1 + v12);
  v14 = &a2[v12];
  v15 = type metadata accessor for Artwork.CropStyle(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AD680);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  v30 = (int *)type metadata accessor for ArtworkImage.Info(0);
  v31 = v30[5];
  v32 = (void *)(a1 + v31);
  v33 = &a2[v31];
  v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD600);
  v35 = *(_QWORD *)(v34 - 8);
  v36 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v35 + 48);
  v37 = v36(v32, 10, v34);
  v38 = v36(v33, 10, v34);
  if (!v37)
  {
    if (!v38)
    {
      v43 = type metadata accessor for Playlist.Variant(0);
      v44 = *(_QWORD *)(v43 - 8);
      v45 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v44 + 48);
      v46 = v45(v32, 1, v43);
      v47 = v45(v33, 1, v43);
      if (v46)
      {
        if (!v47)
        {
          (*(void (**)(void *, char *, uint64_t))(v44 + 32))(v32, v33, v43);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v32, 0, 1, v43);
          goto LABEL_27;
        }
      }
      else
      {
        if (!v47)
        {
          (*(void (**)(void *, char *, uint64_t))(v44 + 40))(v32, v33, v43);
          goto LABEL_27;
        }
        (*(void (**)(void *, uint64_t))(v44 + 8))(v32, v43);
      }
      v42 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C1250);
LABEL_21:
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      goto LABEL_27;
    }
    sub_56024((uint64_t)v32, (uint64_t *)&unk_14AD600);
LABEL_20:
    v42 = type metadata accessor for ArtworkImage.Placeholder(0);
    goto LABEL_21;
  }
  if (v38)
    goto LABEL_20;
  v39 = type metadata accessor for Playlist.Variant(0);
  v40 = *(_QWORD *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v33, 1, v39))
  {
    v41 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C1250);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v40 + 32))(v32, v33, v39);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v32, 0, 1, v39);
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 10, v34);
LABEL_27:
  v48 = v30[6];
  v49 = a1 + v48;
  v50 = &a2[v48];
  *(_QWORD *)v49 = *(_QWORD *)v50;
  *(_BYTE *)(v49 + 8) = v50[8];
  v51 = v30[7];
  v52 = a1 + v51;
  v53 = &a2[v51];
  *(_QWORD *)v52 = *(_QWORD *)v53;
  *(_BYTE *)(v52 + 8) = v53[8];
  *(_QWORD *)(v52 + 16) = *((_QWORD *)v53 + 2);
  *(_BYTE *)(v52 + 24) = v53[24];
  *(_QWORD *)(v52 + 32) = *((_QWORD *)v53 + 4);
  *(_BYTE *)(v52 + 40) = v53[40];
  *(_BYTE *)(v52 + 41) = v53[41];
  v54 = v30[8];
  v55 = a1 + v54;
  v56 = &a2[v54];
  *(_BYTE *)(v55 + 16) = v56[16];
  *(_OWORD *)v55 = *(_OWORD *)v56;
  v57 = a3[5];
  v58 = (void *)(a1 + v57);
  v59 = &a2[v57];
  v60 = type metadata accessor for VideoArtwork(0);
  v61 = *(_QWORD *)(v60 - 8);
  v62 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v61 + 48);
  v63 = v62(v58, 1, v60);
  v64 = v62(v59, 1, v60);
  if (!v63)
  {
    if (!v64)
    {
      (*(void (**)(void *, char *, uint64_t))(v61 + 40))(v58, v59, v60);
      goto LABEL_33;
    }
    (*(void (**)(void *, uint64_t))(v61 + 8))(v58, v60);
    goto LABEL_32;
  }
  if (v64)
  {
LABEL_32:
    v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_14CCE60);
    memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    goto LABEL_33;
  }
  (*(void (**)(void *, char *, uint64_t))(v61 + 32))(v58, v59, v60);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
LABEL_33:
  v66 = a3[6];
  v67 = a3[7];
  v68 = (_OWORD *)(a1 + v66);
  v69 = &a2[v66];
  v70 = *((_OWORD *)v69 + 1);
  *v68 = *(_OWORD *)v69;
  v68[1] = v70;
  v68[2] = *((_OWORD *)v69 + 2);
  *(_OWORD *)((char *)v68 + 41) = *(_OWORD *)(v69 + 41);
  v71 = (_QWORD *)(a1 + v67);
  v72 = &a2[v67];
  v74 = *(_QWORD *)v72;
  v73 = *((_QWORD *)v72 + 1);
  *v71 = v74;
  v71[1] = v73;
  swift_bridgeObjectRelease();
  v75 = a3[8];
  v76 = a1 + v75;
  v77 = &a2[v75];
  v78 = *(_QWORD *)v77;
  LOBYTE(v77) = v77[8];
  v79 = *(_QWORD *)v76;
  v80 = *(_BYTE *)(v76 + 8);
  *(_QWORD *)v76 = v78;
  *(_BYTE *)(v76 + 8) = (_BYTE)v77;
  sub_270154(v79, v80);
  return a1;
}

uint64_t sub_9F46A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_9F46B4);
}

uint64_t sub_9F46B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = type metadata accessor for ArtworkImage.Info(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_14CCE60);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 28) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_9F4764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_9F4770);
}

uint64_t sub_9F4770(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = type metadata accessor for ArtworkImage.Info(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_14CCE60);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 28) + 8) = (a2 - 1);
  return result;
}

void sub_9F481C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[5];

  v2 = type metadata accessor for ArtworkImage.Info(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1D1B7C(319, (unint64_t *)&qword_14CCE00, (uint64_t (*)(uint64_t))&type metadata accessor for VideoArtwork, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      v6[2] = "9";
      v6[3] = &unk_10903F0;
      v6[4] = &unk_1090390;
      swift_initStructMetadata(a1, 256, 5, v6, a1 + 16);
    }
  }
}

uint64_t sub_9F48D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 56);
}

void sub_9F48DC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = "\t";
  v4[1] = (char *)&value witness table for () + 64;
  v4[2] = (char *)&value witness table for () + 64;
  sub_1D1B7C(319, (unint64_t *)&qword_14BC708, (uint64_t (*)(uint64_t))&type metadata accessor for ColorScheme, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(v2 - 8) + 64;
    v4[4] = &unk_1090390;
    swift_initStructMetadata(a1, 0, 5, v4, a1 + 48);
  }
}

_QWORD *sub_9F4980(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v15);
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    *(_QWORD *)(a1 + 16) = a2[2];
    v7 = a2[5];
    v8 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v8;
    v9 = *(int *)(a3 + 60);
    v10 = (uint64_t *)(a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    *(_QWORD *)(a1 + 40) = v7;
    swift_retain(v8);
    swift_retain(v7);
    v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14F96E0);
    if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
    {
      v13 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v10, v11, v13);
      v14 = 1;
    }
    else
    {
      v16 = *v11;
      *v10 = *v11;
      swift_retain(v16);
      v14 = 0;
    }
    swift_storeEnumTagMultiPayload(v10, v12, v14);
    v17 = *(int *)(a3 + 64);
    v18 = (char *)v4 + v17;
    v19 = (uint64_t)a2 + v17;
    v20 = *(_QWORD *)v19;
    v21 = *(_BYTE *)(v19 + 8);
    sub_270050(*(_QWORD *)v19, v21);
    *(_QWORD *)v18 = v20;
    v18[8] = v21;
  }
  return v4;
}

uint64_t sub_9F4AB8(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  swift_release(*(_QWORD *)(a1 + 24));
  swift_release(*(_QWORD *)(a1 + 40));
  v4 = (_QWORD *)(a1 + *(int *)(a2 + 60));
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14F96E0);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    swift_release(*v4);
  }
  return sub_270154(*(_QWORD *)(a1 + *(int *)(a2 + 64)), *(_BYTE *)(a1 + *(int *)(a2 + 64) + 8));
}

uint64_t sub_9F4B50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 40);
  v7 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 40) = v6;
  v8 = *(int *)(a3 + 60);
  v9 = (uint64_t *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  swift_retain(v7);
  swift_retain(v6);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14F96E0);
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v12 = type metadata accessor for ColorScheme(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
    v13 = 1;
  }
  else
  {
    v14 = *v10;
    *v9 = *v10;
    swift_retain(v14);
    v13 = 0;
  }
  swift_storeEnumTagMultiPayload(v9, v11, v13);
  v15 = *(int *)(a3 + 64);
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = *(_QWORD *)v17;
  v19 = *(_BYTE *)(v17 + 8);
  sub_270050(*(_QWORD *)v17, v19);
  *(_QWORD *)v16 = v18;
  *(_BYTE *)(v16 + 8) = v19;
  return a1;
}

uint64_t sub_9F4C5C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;

  v6 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v6;
  v7 = a2[3];
  v8 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = v7;
  swift_retain(v7);
  swift_release(v8);
  v9 = a2[5];
  v10 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = a2[4];
  *(_QWORD *)(a1 + 40) = v9;
  swift_retain(v9);
  swift_release(v10);
  if ((uint64_t *)a1 != a2)
  {
    v11 = *(int *)(a3 + 60);
    v12 = (uint64_t *)(a1 + v11);
    v13 = (uint64_t *)((char *)a2 + v11);
    sub_56024(a1 + v11, (uint64_t *)&unk_14F96E0);
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14F96E0);
    if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
    {
      v15 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v12, v13, v15);
      v16 = 1;
    }
    else
    {
      v17 = *v13;
      *v12 = *v13;
      swift_retain(v17);
      v16 = 0;
    }
    swift_storeEnumTagMultiPayload(v12, v14, v16);
  }
  v18 = *(int *)(a3 + 64);
  v19 = a1 + v18;
  v20 = (uint64_t)a2 + v18;
  v21 = *(_QWORD *)v20;
  v22 = *(_BYTE *)(v20 + 8);
  sub_270050(*(_QWORD *)v20, v22);
  v23 = *(_QWORD *)v19;
  v24 = *(_BYTE *)(v19 + 8);
  *(_QWORD *)v19 = v21;
  *(_BYTE *)(v19 + 8) = v22;
  sub_270154(v23, v24);
  return a1;
}

uint64_t sub_9F4D94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  v7 = *(int *)(a3 + 60);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14F96E0);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for ColorScheme(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload(v8, v10, 1);
  }
  else
  {
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  v12 = *(int *)(a3 + 64);
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  return a1;
}

uint64_t sub_9F4E78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release(v6);
  v7 = *(_QWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release(v7);
  if (a1 != a2)
  {
    v8 = *(int *)(a3 + 60);
    v9 = (void *)(a1 + v8);
    v10 = (const void *)(a2 + v8);
    sub_56024(a1 + v8, (uint64_t *)&unk_14F96E0);
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14F96E0);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for ColorScheme(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload(v9, v11, 1);
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
  }
  v13 = *(int *)(a3 + 64);
  v14 = a1 + v13;
  v15 = (uint64_t *)(a2 + v13);
  v16 = *v15;
  LOBYTE(v15) = *((_BYTE *)v15 + 8);
  v17 = *(_QWORD *)v14;
  v18 = *(_BYTE *)(v14 + 8);
  *(_QWORD *)v14 = v16;
  *(_BYTE *)(v14 + 8) = (_BYTE)v15;
  sub_270154(v17, v18);
  return a1;
}

uint64_t sub_9F4F98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_9F4FA4);
}

uint64_t sub_9F4FA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14BC698);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 60), a2, v8);
  }
}

uint64_t sub_9F5024(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_9F5030);
}

uint64_t sub_9F5030(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 16) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14BC698);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 60), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for Header.Content(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for Header.Content);
}

unint64_t sub_9F50B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14EEEE0;
  if (!qword_14EEEE0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EED20);
    sub_9F513C();
    sub_5C150(&qword_14EEF18, &qword_14EED08, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14EEEE0);
  }
  return result;
}

unint64_t sub_9F513C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14EEEE8;
  if (!qword_14EEEE8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EED18);
    sub_9F51C0();
    sub_5C150(&qword_14EEF08, &qword_14EEF10, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14EEEE8);
  }
  return result;
}

unint64_t sub_9F51C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14EEEF0;
  if (!qword_14EEEF0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EDBA8);
    sub_9F522C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14EEEF0);
  }
  return result;
}

unint64_t sub_9F522C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14EEEF8;
  if (!qword_14EEEF8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EDBA0);
    sub_5C150(&qword_14EEF00, &qword_14EED10, (uint64_t)&unk_1090438);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14EEEF8);
  }
  return result;
}

uint64_t sub_9F52B0(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  _OWORD v4[2];

  v2 = *(_OWORD *)(a2 + 32);
  v4[0] = *(_OWORD *)(a2 + 16);
  v4[1] = v2;
  return swift_getOpaqueTypeConformance2(v4, &unk_11FFC10, 1);
}

uint64_t sub_9F52E4(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  return sub_9F9760(a1, a2, a3, (uint64_t)&unk_11FFBA8);
}

uint64_t sub_9F52F0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_11FFB80, 1);
}

uint64_t sub_9F5300@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result;
  double v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  char v12;
  double v14;
  double v15;
  double v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  char v22;
  double v23;
  char v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  char v29;
  double v30;
  char v31;
  uint64_t v32;
  char v33;
  unsigned __int8 v34;
  uint64_t v35;
  char v36;
  char v37;
  _BYTE v38[16];
  double v39;
  char v40;

  if (a1 == 2 || (a1 & 1) != 0)
  {
    result = ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(0x4072C00000000000, 0, 0x4072C00000000000, 0, 0, 1, 2, (uint64_t)&v30);
    v6 = v30;
    v7 = v31;
    v8 = v32;
    v9 = v33;
    v10 = v35;
    v11 = v36;
    v12 = v37;
LABEL_11:
    *(double *)a3 = v6;
    *(_BYTE *)(a3 + 8) = v7;
    *(_QWORD *)(a3 + 16) = v8;
    *(_BYTE *)(a3 + 24) = v9;
    *(_QWORD *)(a3 + 32) = v10;
    *(_BYTE *)(a3 + 40) = v11;
    *(_BYTE *)(a3 + 41) = v12;
    return result;
  }
  ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(0x4073100000000000, 0, 0x4073100000000000, 0, 0, 1, 2, (uint64_t)&v16);
  v6 = v16;
  v7 = v17;
  v8 = v18;
  v9 = v19;
  v10 = v20;
  v11 = v21;
  v12 = v22;
  result = sub_5C090(a2, (uint64_t)&v30, &qword_14C9BD0);
  if ((unint64_t)v34 << 16 == 0x20000)
    goto LABEL_11;
  v14 = v30;
  sub_5C090((uint64_t)&v16, (uint64_t)v38, &qword_14B57D0);
  result = sub_5C090((uint64_t)v38, (uint64_t)&v39, &qword_14B57D0);
  if ((v40 & 1) == 0)
  {
    v15 = v39;
    if (v39 >= v14 + -144.0)
      v15 = v14 + -144.0;
    result = ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(*(uint64_t *)&v15, 0, *(uint64_t *)&v15, 0, 0, 1, 2, (uint64_t)&v23);
    v6 = v23;
    v7 = v24;
    v8 = v25;
    v9 = v26;
    v10 = v27;
    v11 = v28;
    v12 = v29;
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

unint64_t sub_9F54C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14EEF28;
  if (!qword_14EEF28)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EEF20);
    sub_4DD24(&qword_14EEF30, _s7ArtworkVMa, (uint64_t)&unk_105FAE0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14EEF28);
  }
  return result;
}

uint64_t type metadata accessor for Header.TextVStack.TitleAttributionStack(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for Header.TextVStack.TitleAttributionStack);
}

uint64_t type metadata accessor for Header.TextVStack.MetadataContainer(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for Header.TextVStack.MetadataContainer);
}

uint64_t type metadata accessor for Header.TextVStack.PlaybackControlContainer(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for Header.TextVStack.PlaybackControlContainer);
}

uint64_t type metadata accessor for Header.TextVStack.DescriptionContainer(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for Header.TextVStack.DescriptionContainer);
}

uint64_t sub_9F557C()
{
  return sub_9F5594((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_9EC88C);
}

uint64_t sub_9F5588()
{
  return sub_9F5594((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_9EBCA8);
}

uint64_t sub_9F5594(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[12], v1[13], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], v1[9], v1[10], v1[11]);
}

unint64_t sub_9F55D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14EEF40;
  if (!qword_14EEF40)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EEF38);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_14EEF40);
  }
  return result;
}

uint64_t sub_9F5630()
{
  uint64_t v0;
  __int128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD v11[2];

  v1 = *(_OWORD *)(v0 + 32);
  v11[0] = *(_OWORD *)(v0 + 16);
  v11[1] = v1;
  v2 = type metadata accessor for Header.Content(0, (uint64_t)v11);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 48) & ~v4;
  v6 = *(_QWORD *)(v3 + 64);
  swift_release(*(_QWORD *)(v0 + v5 + 24));
  swift_release(*(_QWORD *)(v0 + v5 + 40));
  v7 = (_QWORD *)(v0 + v5 + *(int *)(v2 + 60));
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14F96E0);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
  }
  else
  {
    swift_release(*v7);
  }
  sub_270154(*(_QWORD *)(v0 + v5 + *(int *)(v2 + 64)), *(_BYTE *)(v0 + v5 + *(int *)(v2 + 64) + 8));
  return swift_deallocObject(v0, v5 + v6, v4 | 7);
}

uint64_t sub_9F5724@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[4];

  v4 = a1 & 1;
  v6 = v2[3];
  v7 = v2[4];
  v8 = v2[5];
  v11[0] = v2[2];
  v5 = v11[0];
  v11[1] = v6;
  v11[2] = v7;
  v11[3] = v8;
  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Header.Content(0, (uint64_t)v11) - 8) + 80);
  return sub_9EAA8C(v4, (uint64_t)v2 + ((v9 + 48) & ~v9), v5, v6, v7, v8, a2);
}

uint64_t sub_9F57AC()
{
  uint64_t v0;
  __int128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD v11[2];

  v1 = *(_OWORD *)(v0 + 32);
  v11[0] = *(_OWORD *)(v0 + 16);
  v11[1] = v1;
  v2 = type metadata accessor for Header.Content(0, (uint64_t)v11);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 48) & ~v4;
  v6 = *(_QWORD *)(v3 + 64);
  swift_release(*(_QWORD *)(v0 + v5 + 24));
  swift_release(*(_QWORD *)(v0 + v5 + 40));
  v7 = (_QWORD *)(v0 + v5 + *(int *)(v2 + 60));
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14F96E0);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
  }
  else
  {
    swift_release(*v7);
  }
  sub_270154(*(_QWORD *)(v0 + v5 + *(int *)(v2 + 64)), *(_BYTE *)(v0 + v5 + *(int *)(v2 + 64) + 8));
  return swift_deallocObject(v0, v6 + v5 + 1, v4 | 7);
}

uint64_t sub_9F58A4@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD v10[4];

  v4 = v1[3];
  v5 = v1[4];
  v6 = v1[5];
  v10[0] = v1[2];
  v3 = v10[0];
  v10[1] = v4;
  v10[2] = v5;
  v10[3] = v6;
  v7 = *(_QWORD *)(type metadata accessor for Header.Content(0, (uint64_t)v10) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  return sub_9EAFCC((uint64_t)v1 + v8, *((_BYTE *)v1 + v8 + *(_QWORD *)(v7 + 64)), v3, v4, v5, v6, a1);
}

uint64_t sub_9F5928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 88);
}

uint64_t sub_9F5930(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for Optional(319, *(_QWORD *)(a1 + 40));
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_1090390;
    swift_initStructMetadata(a1, 0, 2, v4, a1 + 96);
    return 0;
  }
  return result;
}

uint64_t *sub_9F59A4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char v14;

  v5 = *(_QWORD *)(a3 + 40);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  if (*(_DWORD *)(v6 + 84))
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = *(_QWORD *)(v6 + 64) + 1;
  if ((v7 & 0x1000F8) != 0 || ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain(v10);
  }
  else
  {
    if ((*(unsigned int (**)(uint64_t *, uint64_t, _QWORD))(v6 + 48))(a2, 1, *(_QWORD *)(a3 + 40)))
    {
      memcpy(a1, a2, v8);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    }
    v11 = ((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
    v12 = ((unint64_t)a2 + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
    v13 = *(_QWORD *)v12;
    v14 = *(_BYTE *)(v12 + 8);
    sub_270050(*(_QWORD *)v12, v14);
    *(_QWORD *)v11 = v13;
    *(_BYTE *)(v11 + 8) = v14;
  }
  return a1;
}

uint64_t sub_9F5AC0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 40);
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  v5 = a1 + *(_QWORD *)(v4 + 64);
  if (!*(_DWORD *)(v4 + 84))
    ++v5;
  return sub_270154(*(_QWORD *)((v5 + 7) & 0xFFFFFFFFFFFFFFF8), *(_BYTE *)(((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8));
}

void *sub_9F5B34(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  size_t v9;
  size_t v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char v15;

  v5 = *(_QWORD *)(a3 + 40);
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    v7 = *(_DWORD *)(v6 + 84);
    v8 = *(_QWORD *)(v6 + 64);
    if (v7)
      v9 = v8;
    else
      v9 = v8 + 1;
    memcpy(a1, a2, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    v7 = *(_DWORD *)(v6 + 84);
    v8 = *(_QWORD *)(v6 + 64);
  }
  if (v7)
    v10 = v8;
  else
    v10 = v8 + 1;
  v11 = v10 + 7;
  v12 = ((unint64_t)a1 + v11) & 0xFFFFFFFFFFFFFFF8;
  v13 = ((unint64_t)a2 + v11) & 0xFFFFFFFFFFFFFFF8;
  v14 = *(_QWORD *)v13;
  v15 = *(_BYTE *)(v13 + 8);
  sub_270050(*(_QWORD *)v13, v15);
  *(_QWORD *)v12 = v14;
  *(_BYTE *)(v12 + 8) = v15;
  return a1;
}

void *sub_9F5C0C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void *, uint64_t, uint64_t);
  int v8;
  int v9;
  size_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;

  v5 = *(_QWORD *)(a3 + 40);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(a1, 1, v5);
  v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 24))(a1, a2, v5);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v6 + 84))
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = *(_QWORD *)(v6 + 64) + 1;
  memcpy(a1, a2, v10);
LABEL_10:
  if (*(_DWORD *)(v6 + 84))
    v11 = *(_QWORD *)(v6 + 64);
  else
    v11 = *(_QWORD *)(v6 + 64) + 1;
  v12 = v11 + 7;
  v13 = ((unint64_t)a1 + v12) & 0xFFFFFFFFFFFFFFF8;
  v14 = ((unint64_t)a2 + v12) & 0xFFFFFFFFFFFFFFF8;
  v15 = *(_QWORD *)v14;
  v16 = *(_BYTE *)(v14 + 8);
  sub_270050(*(_QWORD *)v14, v16);
  v17 = *(_QWORD *)v13;
  v18 = *(_BYTE *)(v13 + 8);
  *(_QWORD *)v13 = v15;
  *(_BYTE *)(v13 + 8) = v16;
  sub_270154(v17, v18);
  return a1;
}

char *sub_9F5D38(char *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  size_t v9;
  size_t v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v5 = *(_QWORD *)(a3 + 40);
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    v7 = *(_DWORD *)(v6 + 84);
    v8 = *(_QWORD *)(v6 + 64);
    if (v7)
      v9 = v8;
    else
      v9 = v8 + 1;
    memcpy(a1, a2, v9);
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    v7 = *(_DWORD *)(v6 + 84);
    v8 = *(_QWORD *)(v6 + 64);
  }
  if (v7)
    v10 = v8;
  else
    v10 = v8 + 1;
  v11 = v10 + 7;
  v12 = (unint64_t)&a1[v11];
  v13 = ((unint64_t)a2 + v11) & 0xFFFFFFFFFFFFFFF8;
  v14 = *(_QWORD *)v13;
  v12 &= 0xFFFFFFFFFFFFFFF8;
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(v13 + 8);
  *(_QWORD *)v12 = v14;
  return a1;
}

void *sub_9F5E04(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void *, uint64_t, uint64_t);
  int v8;
  int v9;
  size_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  v5 = *(_QWORD *)(a3 + 40);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(a1, 1, v5);
  v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 40))(a1, a2, v5);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v6 + 84))
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = *(_QWORD *)(v6 + 64) + 1;
  memcpy(a1, a2, v10);
LABEL_10:
  if (*(_DWORD *)(v6 + 84))
    v11 = *(_QWORD *)(v6 + 64);
  else
    v11 = *(_QWORD *)(v6 + 64) + 1;
  v12 = v11 + 7;
  v13 = ((unint64_t)a1 + v12) & 0xFFFFFFFFFFFFFFF8;
  v14 = ((unint64_t)a2 + v12) & 0xFFFFFFFFFFFFFFF8;
  v15 = *(_QWORD *)v14;
  LOBYTE(v14) = *(_BYTE *)(v14 + 8);
  v16 = *(_QWORD *)v13;
  v17 = *(_BYTE *)(v13 + 8);
  *(_QWORD *)v13 = v15;
  *(_BYTE *)(v13 + 8) = v14;
  sub_270154(v16, v17);
  return a1;
}

uint64_t sub_9F5F24(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  unsigned int v15;
  unsigned int v16;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 40) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5)
    v6 = v5 - 1;
  else
    v6 = 0;
  if (v6 <= 0xFE)
    v7 = 254;
  else
    v7 = v6;
  v8 = *(_QWORD *)(v4 + 64);
  if (!v5)
    ++v8;
  if (!a2)
    return 0;
  if (v7 < a2)
  {
    v9 = ((v8 + 7) & 0xFFFFFFF8) + 9;
    v10 = (a2 - v7 + 255) >> (8 * v9);
    if (v9 < 4)
      v11 = v10 + 1;
    else
      v11 = 2;
    if (v11 >= 0x10000)
      v12 = 4;
    else
      v12 = 2;
    if (v11 < 0x100)
      v12 = 1;
    if (v11 >= 2)
      v13 = v12;
    else
      v13 = 0;
    __asm { BR              X16 }
  }
  if (v6 < 0xFE)
  {
    v16 = *((unsigned __int8 *)&dword_8 + ((a1 + v8 + 7) & 0xFFFFFFFFFFFFF8));
    if (v16 > 1)
      return (v16 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v15 = (*(uint64_t (**)(void))(v4 + 48))();
    if (v15 >= 2)
      return v15 - 1;
    else
      return 0;
  }
}

void sub_9F6070(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  size_t v12;
  unsigned int v13;
  unsigned int v14;
  int v15;
  int v16;

  v6 = 0;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 40) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  if (v9 <= 0xFE)
    v10 = 254;
  else
    v10 = v9;
  v11 = *(_QWORD *)(v7 + 64);
  if (!v8)
    ++v11;
  v12 = ((v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  if (v10 < a3)
  {
    v13 = (a3 - v10 + 255) >> (8 * v12);
    if (v12 <= 3)
      v14 = v13 + 1;
    else
      v14 = 2;
    if (v14 >= 0x10000)
      v15 = 4;
    else
      v15 = 2;
    if (v14 < 0x100)
      v15 = 1;
    if (v14 >= 2)
      v6 = v15;
    else
      v6 = 0;
  }
  if (v10 < a2)
  {
    if (v12 >= 4)
      v16 = ~v10 + a2;
    else
      v16 = (~(_BYTE)v10 + a2);
    bzero(a1, v12);
    if ((_DWORD)v12 == 1)
      *a1 = v16;
    else
      *(_DWORD *)a1 = v16;
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

void sub_9F6194()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x9F627CLL);
}

void sub_9F619C(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x9F61A4);
  JUMPOUT(0x9F627CLL);
}

void sub_9F620C()
{
  _BYTE *v0;
  char v1;

  *v0 = v1;
  JUMPOUT(0x9F627CLL);
}

void sub_9F6234()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x9F627CLL);
}

void sub_9F623C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x9F627CLL);
}

void sub_9F6244(unsigned int a1@<W1>, size_t a2@<X8>)
{
  int v2;
  unsigned int v3;
  char *v4;
  uint64_t v5;

  *(_WORD *)&v4[v5] = 0;
  if (a1)
  {
    if (v3 < 0xFE)
      JUMPOUT(0x9F6214);
    if (v3 >= a1)
      JUMPOUT(0x9F6250);
    if ((_DWORD)a2)
    {
      if (a2 <= 3)
        v2 = a2;
      else
        v2 = 4;
      bzero(v4, a2);
      __asm { BR              X10 }
    }
  }
  JUMPOUT(0x9F627CLL);
}

void sub_9F6290()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
  JUMPOUT(0x9F627CLL);
}

void sub_9F62A0()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
  JUMPOUT(0x9F627CLL);
}

void sub_9F62A8()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
  JUMPOUT(0x9F627CLL);
}

uint64_t sub_9F62B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 96);
}

uint64_t sub_9F62BC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 48));
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_1090378;
    v4[2] = &unk_1090390;
    swift_initStructMetadata(a1, 0, 3, v4, a1 + 96);
    return 0;
  }
  return result;
}

_QWORD *sub_9F633C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char v13;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 48) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || (v6 & 0xFFFFFFFFFFFFFFF8) + 17 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain(v9);
  }
  else
  {
    (*(void (**)(_QWORD *, _QWORD *))(v5 + 16))(a1, a2);
    *((_BYTE *)v4 + v6) = *((_BYTE *)a2 + v6);
    v10 = ((unint64_t)v4 + v6) & 0xFFFFFFFFFFFFFFF8;
    v11 = ((unint64_t)a2 + v6) & 0xFFFFFFFFFFFFFFF8;
    v12 = *(_QWORD *)(v11 + 8);
    v13 = *(_BYTE *)(v11 + 16);
    sub_270050(v12, v13);
    *(_QWORD *)(v10 + 8) = v12;
    *(_BYTE *)(v10 + 16) = v13;
  }
  return v4;
}

uint64_t sub_9F63FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 48) - 8);
  (*(void (**)(void))(v3 + 8))();
  return sub_270154(*(_QWORD *)(((*(_QWORD *)(v3 + 64) + a1) & 0xFFFFFFFFFFFFFFF8) + 8), *(_BYTE *)(((*(_QWORD *)(v3 + 64) + a1) & 0xFFFFFFFFFFFFFFF8) + 16));
}

uint64_t sub_9F643C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 48) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  *(_BYTE *)v7 = *(_BYTE *)v8;
  v9 = v7 & 0xFFFFFFFFFFFFFFF8;
  v8 &= 0xFFFFFFFFFFFFFFF8;
  v10 = *(_QWORD *)(v8 + 8);
  LOBYTE(v5) = *(_BYTE *)(v8 + 16);
  sub_270050(v10, v5);
  *(_QWORD *)(v9 + 8) = v10;
  *(_BYTE *)(v9 + 16) = v5;
  return a1;
}

uint64_t sub_9F64B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 48) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  *(_BYTE *)v7 = *(_BYTE *)v8;
  v9 = v7 & 0xFFFFFFFFFFFFFFF8;
  v8 &= 0xFFFFFFFFFFFFFFF8;
  v10 = *(_QWORD *)(v8 + 8);
  LOBYTE(v5) = *(_BYTE *)(v8 + 16);
  sub_270050(v10, v5);
  v11 = *(_QWORD *)(v9 + 8);
  v12 = *(_BYTE *)(v9 + 16);
  *(_QWORD *)(v9 + 8) = v10;
  *(_BYTE *)(v9 + 16) = v5;
  sub_270154(v11, v12);
  return a1;
}

uint64_t sub_9F6530(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 48) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  *(_BYTE *)v7 = *(_BYTE *)v8;
  v7 &= 0xFFFFFFFFFFFFFFF8;
  v8 &= 0xFFFFFFFFFFFFFFF8;
  v9 = *(_BYTE *)(v8 + 16);
  *(_QWORD *)(v7 + 8) = *(_QWORD *)(v8 + 8);
  *(_BYTE *)(v7 + 16) = v9;
  return a1;
}

uint64_t sub_9F6598(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 48) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  *(_BYTE *)v7 = *(_BYTE *)v8;
  v7 &= 0xFFFFFFFFFFFFFFF8;
  v8 &= 0xFFFFFFFFFFFFFFF8;
  v9 = *(_QWORD *)(v8 + 8);
  LOBYTE(v8) = *(_BYTE *)(v8 + 16);
  v10 = *(_QWORD *)(v7 + 8);
  v11 = *(_BYTE *)(v7 + 16);
  *(_QWORD *)(v7 + 8) = v9;
  *(_BYTE *)(v7 + 16) = v8;
  sub_270154(v10, v11);
  return a1;
}

uint64_t sub_9F660C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int v14;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 48) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0xFE)
    v6 = 254;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 >= 0xFE)
      return (*(uint64_t (**)(void))(v4 + 48))();
    v14 = *(unsigned __int8 *)(v7 + a1);
    if (v14 >= 2)
      return ((v14 + 2147483646) & 0x7FFFFFFF) + 1;
    return 0;
  }
  v8 = (v7 & 0xFFFFFFF8) + 17;
  v9 = (a2 - v6 + 255) >> (8 * v8);
  if (v8 < 4)
    v10 = v9 + 1;
  else
    v10 = 2;
  if (v10 >= 0x10000)
    v11 = 4;
  else
    v11 = 2;
  if (v10 < 0x100)
    v11 = 1;
  if (v10 >= 2)
    v12 = v11;
  else
    v12 = 0;
  return ((uint64_t (*)(void))((char *)&loc_9F6690 + 4 * byte_108FFC2[v12]))();
}

void sub_9F671C(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 48) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0xFEu)
    v6 = 254;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = (*(_QWORD *)(v5 + 64) & 0xFFFFFFFFFFFFFFF8) + 17;
  if (v6 >= a3)
  {
    v10 = 0;
    if (v6 >= a2)
      goto LABEL_17;
  }
  else
  {
    if (v7 <= 3)
      v8 = ((a3 - v6 + 255) >> (8 * v7)) + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    if (v6 >= a2)
LABEL_17:
      __asm { BR              X12 }
  }
  if (v7 >= 4)
    v11 = ~v6 + a2;
  else
    v11 = (~(_BYTE)v6 + a2);
  bzero(a1, v7);
  if ((_DWORD)v7 == 1)
    *a1 = v11;
  else
    *(_DWORD *)a1 = v11;
  __asm { BR              X10 }
}

void sub_9F6834()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_9F683C(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x9F6844);
}

void sub_9F6878()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void sub_9F6880()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
}

uint64_t sub_9F6888(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)(v6 + v7) = 0;
  if (!a2)
LABEL_2:
    JUMPOUT(0x9F6890);
  if (a3 < 0xFE)
  {
    *(_BYTE *)(v6 + v4) = a2 + 1;
    goto LABEL_2;
  }
  return (*(uint64_t (**)(uint64_t))(v5 + 56))(v6);
}

uint64_t sub_9F68A8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for Optional(319, *(_QWORD *)(a1 + 32));
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_1090390;
    swift_initStructMetadata(a1, 0, 2, v4, a1 + 96);
    return 0;
  }
  return result;
}

uint64_t *sub_9F691C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char v14;

  v5 = *(_QWORD *)(a3 + 32);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  if (*(_DWORD *)(v6 + 84))
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = *(_QWORD *)(v6 + 64) + 1;
  if ((v7 & 0x1000F8) != 0 || ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain(v10);
  }
  else
  {
    if ((*(unsigned int (**)(uint64_t *, uint64_t, _QWORD))(v6 + 48))(a2, 1, *(_QWORD *)(a3 + 32)))
    {
      memcpy(a1, a2, v8);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    }
    v11 = ((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
    v12 = ((unint64_t)a2 + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
    v13 = *(_QWORD *)v12;
    v14 = *(_BYTE *)(v12 + 8);
    sub_270050(*(_QWORD *)v12, v14);
    *(_QWORD *)v11 = v13;
    *(_BYTE *)(v11 + 8) = v14;
  }
  return a1;
}

uint64_t sub_9F6A38(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 32);
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  v5 = a1 + *(_QWORD *)(v4 + 64);
  if (!*(_DWORD *)(v4 + 84))
    ++v5;
  return sub_270154(*(_QWORD *)((v5 + 7) & 0xFFFFFFFFFFFFFFF8), *(_BYTE *)(((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8));
}

void *sub_9F6AAC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  size_t v9;
  size_t v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char v15;

  v5 = *(_QWORD *)(a3 + 32);
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    v7 = *(_DWORD *)(v6 + 84);
    v8 = *(_QWORD *)(v6 + 64);
    if (v7)
      v9 = v8;
    else
      v9 = v8 + 1;
    memcpy(a1, a2, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    v7 = *(_DWORD *)(v6 + 84);
    v8 = *(_QWORD *)(v6 + 64);
  }
  if (v7)
    v10 = v8;
  else
    v10 = v8 + 1;
  v11 = v10 + 7;
  v12 = ((unint64_t)a1 + v11) & 0xFFFFFFFFFFFFFFF8;
  v13 = ((unint64_t)a2 + v11) & 0xFFFFFFFFFFFFFFF8;
  v14 = *(_QWORD *)v13;
  v15 = *(_BYTE *)(v13 + 8);
  sub_270050(*(_QWORD *)v13, v15);
  *(_QWORD *)v12 = v14;
  *(_BYTE *)(v12 + 8) = v15;
  return a1;
}

void *sub_9F6B84(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void *, uint64_t, uint64_t);
  int v8;
  int v9;
  size_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;

  v5 = *(_QWORD *)(a3 + 32);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(a1, 1, v5);
  v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 24))(a1, a2, v5);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v6 + 84))
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = *(_QWORD *)(v6 + 64) + 1;
  memcpy(a1, a2, v10);
LABEL_10:
  if (*(_DWORD *)(v6 + 84))
    v11 = *(_QWORD *)(v6 + 64);
  else
    v11 = *(_QWORD *)(v6 + 64) + 1;
  v12 = v11 + 7;
  v13 = ((unint64_t)a1 + v12) & 0xFFFFFFFFFFFFFFF8;
  v14 = ((unint64_t)a2 + v12) & 0xFFFFFFFFFFFFFFF8;
  v15 = *(_QWORD *)v14;
  v16 = *(_BYTE *)(v14 + 8);
  sub_270050(*(_QWORD *)v14, v16);
  v17 = *(_QWORD *)v13;
  v18 = *(_BYTE *)(v13 + 8);
  *(_QWORD *)v13 = v15;
  *(_BYTE *)(v13 + 8) = v16;
  sub_270154(v17, v18);
  return a1;
}

char *sub_9F6CB0(char *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  size_t v9;
  size_t v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v5 = *(_QWORD *)(a3 + 32);
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    v7 = *(_DWORD *)(v6 + 84);
    v8 = *(_QWORD *)(v6 + 64);
    if (v7)
      v9 = v8;
    else
      v9 = v8 + 1;
    memcpy(a1, a2, v9);
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    v7 = *(_DWORD *)(v6 + 84);
    v8 = *(_QWORD *)(v6 + 64);
  }
  if (v7)
    v10 = v8;
  else
    v10 = v8 + 1;
  v11 = v10 + 7;
  v12 = (unint64_t)&a1[v11];
  v13 = ((unint64_t)a2 + v11) & 0xFFFFFFFFFFFFFFF8;
  v14 = *(_QWORD *)v13;
  v12 &= 0xFFFFFFFFFFFFFFF8;
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(v13 + 8);
  *(_QWORD *)v12 = v14;
  return a1;
}

void *sub_9F6D7C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void *, uint64_t, uint64_t);
  int v8;
  int v9;
  size_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  v5 = *(_QWORD *)(a3 + 32);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(a1, 1, v5);
  v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 40))(a1, a2, v5);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v6 + 84))
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = *(_QWORD *)(v6 + 64) + 1;
  memcpy(a1, a2, v10);
LABEL_10:
  if (*(_DWORD *)(v6 + 84))
    v11 = *(_QWORD *)(v6 + 64);
  else
    v11 = *(_QWORD *)(v6 + 64) + 1;
  v12 = v11 + 7;
  v13 = ((unint64_t)a1 + v12) & 0xFFFFFFFFFFFFFFF8;
  v14 = ((unint64_t)a2 + v12) & 0xFFFFFFFFFFFFFFF8;
  v15 = *(_QWORD *)v14;
  LOBYTE(v14) = *(_BYTE *)(v14 + 8);
  v16 = *(_QWORD *)v13;
  v17 = *(_BYTE *)(v13 + 8);
  *(_QWORD *)v13 = v15;
  *(_BYTE *)(v13 + 8) = v14;
  sub_270154(v16, v17);
  return a1;
}

uint64_t sub_9F6E9C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  unsigned int v15;
  unsigned int v16;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 32) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5)
    v6 = v5 - 1;
  else
    v6 = 0;
  if (v6 <= 0xFE)
    v7 = 254;
  else
    v7 = v6;
  v8 = *(_QWORD *)(v4 + 64);
  if (!v5)
    ++v8;
  if (!a2)
    return 0;
  if (v7 < a2)
  {
    v9 = ((v8 + 7) & 0xFFFFFFF8) + 9;
    v10 = (a2 - v7 + 255) >> (8 * v9);
    if (v9 < 4)
      v11 = v10 + 1;
    else
      v11 = 2;
    if (v11 >= 0x10000)
      v12 = 4;
    else
      v12 = 2;
    if (v11 < 0x100)
      v12 = 1;
    if (v11 >= 2)
      v13 = v12;
    else
      v13 = 0;
    __asm { BR              X16 }
  }
  if (v6 < 0xFE)
  {
    v16 = *((unsigned __int8 *)&dword_8 + ((a1 + v8 + 7) & 0xFFFFFFFFFFFFF8));
    if (v16 > 1)
      return (v16 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v15 = (*(uint64_t (**)(void))(v4 + 48))();
    if (v15 >= 2)
      return v15 - 1;
    else
      return 0;
  }
}

void sub_9F6FE8(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  size_t v12;
  unsigned int v13;
  unsigned int v14;
  int v15;
  int v16;

  v6 = 0;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 32) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  if (v9 <= 0xFE)
    v10 = 254;
  else
    v10 = v9;
  v11 = *(_QWORD *)(v7 + 64);
  if (!v8)
    ++v11;
  v12 = ((v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  if (v10 < a3)
  {
    v13 = (a3 - v10 + 255) >> (8 * v12);
    if (v12 <= 3)
      v14 = v13 + 1;
    else
      v14 = 2;
    if (v14 >= 0x10000)
      v15 = 4;
    else
      v15 = 2;
    if (v14 < 0x100)
      v15 = 1;
    if (v14 >= 2)
      v6 = v15;
    else
      v6 = 0;
  }
  if (v10 < a2)
  {
    if (v12 >= 4)
      v16 = ~v10 + a2;
    else
      v16 = (~(_BYTE)v10 + a2);
    bzero(a1, v12);
    if ((_DWORD)v12 == 1)
      *a1 = v16;
    else
      *(_DWORD *)a1 = v16;
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

void sub_9F710C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x9F71F4);
}

void sub_9F7114(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x9F711CLL);
  JUMPOUT(0x9F71F4);
}

void sub_9F7184()
{
  _BYTE *v0;
  char v1;

  *v0 = v1;
  JUMPOUT(0x9F71F4);
}

void sub_9F71AC()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x9F71F4);
}

void sub_9F71B4()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x9F71F4);
}

void sub_9F71BC(unsigned int a1@<W1>, size_t a2@<X8>)
{
  int v2;
  unsigned int v3;
  char *v4;
  uint64_t v5;

  *(_WORD *)&v4[v5] = 0;
  if (a1)
  {
    if (v3 < 0xFE)
      JUMPOUT(0x9F718CLL);
    if (v3 >= a1)
      JUMPOUT(0x9F71C8);
    if ((_DWORD)a2)
    {
      if (a2 <= 3)
        v2 = a2;
      else
        v2 = 4;
      bzero(v4, a2);
      __asm { BR              X10 }
    }
  }
  JUMPOUT(0x9F71F4);
}

void sub_9F7208()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
  JUMPOUT(0x9F71F4);
}

void sub_9F7218()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
  JUMPOUT(0x9F71F4);
}

void sub_9F7220()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
  JUMPOUT(0x9F71F4);
}

uint64_t sub_9F722C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 104);
}

uint64_t sub_9F7234(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[5];

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for Optional(319, *(_QWORD *)(a1 + 24));
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      v5[2] = &unk_1090378;
      v5[3] = (char *)&value witness table for Builtin.Int64 + 64;
      v5[4] = &unk_1090390;
      swift_initStructMetadata(a1, 0, 5, v5, a1 + 96);
      return 0;
    }
  }
  return result;
}

uint64_t *sub_9F72E0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  size_t v10;
  unsigned int v11;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  const void *v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char v23;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  if (*(_DWORD *)(v7 + 84))
    v10 = *(_QWORD *)(v7 + 64);
  else
    v10 = *(_QWORD *)(v7 + 64) + 1;
  v11 = v8 | *(_DWORD *)(v6 + 80) & 0xF8;
  if (v11 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) != 0
    || (((((v9 & ~v8) + v10) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v14 + (((v11 | 7) + 16) & ~(unint64_t)(v11 | 7)));
    swift_retain(v14);
  }
  else
  {
    v15 = ~v8;
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    v16 = ((unint64_t)v4 + v9) & v15;
    v17 = (const void *)(((unint64_t)a2 + v9) & v15);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(v17, 1, v5))
    {
      memcpy((void *)(((unint64_t)v4 + v9) & v15), v17, v10);
    }
    else
    {
      (*(void (**)(unint64_t, const void *, uint64_t))(v7 + 16))(((unint64_t)v4 + v9) & v15, v17, v5);
      (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(((unint64_t)v4 + v9) & v15, 0, 1, v5);
    }
    *(_BYTE *)(v10 + v16) = *((_BYTE *)v17 + v10);
    v18 = (v10 + v16) & 0xFFFFFFFFFFFFFFF8;
    v19 = ((unint64_t)v17 + v10) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)(v18 + 8) = *(_QWORD *)(v19 + 8);
    v20 = (v18 + 23) & 0xFFFFFFFFFFFFFFF8;
    v21 = (v19 + 23) & 0xFFFFFFFFFFFFFFF8;
    v22 = *(_QWORD *)v21;
    v23 = *(_BYTE *)(v21 + 8);
    sub_270050(*(_QWORD *)v21, v23);
    *(_QWORD *)v20 = v22;
    *(_BYTE *)(v20 + 8) = v23;
  }
  return v4;
}

uint64_t sub_9F7470(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  v5 = *(_QWORD *)(v4 + 64) + a1;
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (v5 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v8, 1, v6))
    (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v8, v6);
  v9 = *(_QWORD *)(v7 + 64) + v8;
  if (!*(_DWORD *)(v7 + 84))
    ++v9;
  return sub_270154(*(_QWORD *)(((v9 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8), *(_BYTE *)((((v9 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_9F7514(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  int v14;
  size_t v15;
  size_t v16;
  size_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char v23;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(a3 + 24);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v7 + v10;
  v12 = (char *)((v11 + a1) & ~v10);
  v13 = (char *)((v11 + a2) & ~v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v13, 1, v8))
  {
    v14 = *(_DWORD *)(v9 + 84);
    v15 = *(_QWORD *)(v9 + 64);
    if (v14)
      v16 = v15;
    else
      v16 = v15 + 1;
    memcpy(v12, v13, v16);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v13, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v12, 0, 1, v8);
    v14 = *(_DWORD *)(v9 + 84);
    v15 = *(_QWORD *)(v9 + 64);
  }
  if (v14)
    v17 = v15;
  else
    v17 = v15 + 1;
  v18 = (unint64_t)&v12[v17];
  v19 = (unint64_t)&v13[v17];
  *(_BYTE *)v18 = *(_BYTE *)v19;
  v18 &= 0xFFFFFFFFFFFFFFF8;
  v19 &= 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v18 + 8) = *(_QWORD *)(v19 + 8);
  v20 = (v18 + 23) & 0xFFFFFFFFFFFFFFF8;
  v21 = (v19 + 23) & 0xFFFFFFFFFFFFFFF8;
  v22 = *(_QWORD *)v21;
  v23 = *(_BYTE *)(v21 + 8);
  sub_270050(*(_QWORD *)v21, v23);
  *(_QWORD *)v20 = v22;
  *(_BYTE *)(v20 + 8) = v23;
  return a1;
}

uint64_t sub_9F7640(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  size_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(a3 + 24);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v7 + v10;
  v12 = (char *)((v11 + a1) & ~v10);
  v13 = (char *)((v11 + a2) & ~v10);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
  v15 = v14(v12, 1, v8);
  v16 = v14(v13, 1, v8);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v13, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v12, 0, 1, v8);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 24))(v12, v13, v8);
      goto LABEL_10;
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
  if (*(_DWORD *)(v9 + 84))
    v17 = *(_QWORD *)(v9 + 64);
  else
    v17 = *(_QWORD *)(v9 + 64) + 1;
  memcpy(v12, v13, v17);
LABEL_10:
  if (*(_DWORD *)(v9 + 84))
    v18 = *(_QWORD *)(v9 + 64);
  else
    v18 = *(_QWORD *)(v9 + 64) + 1;
  v19 = (unint64_t)&v12[v18];
  v20 = (unint64_t)&v13[v18];
  *(_BYTE *)v19 = *(_BYTE *)v20;
  v19 &= 0xFFFFFFFFFFFFFFF8;
  v20 &= 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v19 + 8) = *(_QWORD *)(v20 + 8);
  v21 = (v19 + 23) & 0xFFFFFFFFFFFFFFF8;
  v22 = (v20 + 23) & 0xFFFFFFFFFFFFFFF8;
  v23 = *(_QWORD *)v22;
  v24 = *(_BYTE *)(v22 + 8);
  sub_270050(*(_QWORD *)v22, v24);
  v25 = *(_QWORD *)v21;
  v26 = *(_BYTE *)(v21 + 8);
  *(_QWORD *)v21 = v23;
  *(_BYTE *)(v21 + 8) = v24;
  sub_270154(v25, v26);
  return a1;
}

uint64_t sub_9F77C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  int v14;
  size_t v15;
  size_t v16;
  size_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(a3 + 24);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v7 + v10;
  v12 = (char *)((v11 + a1) & ~v10);
  v13 = (char *)((v11 + a2) & ~v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v13, 1, v8))
  {
    v14 = *(_DWORD *)(v9 + 84);
    v15 = *(_QWORD *)(v9 + 64);
    if (v14)
      v16 = v15;
    else
      v16 = v15 + 1;
    memcpy(v12, v13, v16);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v13, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v12, 0, 1, v8);
    v14 = *(_DWORD *)(v9 + 84);
    v15 = *(_QWORD *)(v9 + 64);
  }
  if (v14)
    v17 = v15;
  else
    v17 = v15 + 1;
  v18 = (unint64_t)&v12[v17];
  v19 = (unint64_t)&v13[v17];
  *(_BYTE *)v18 = *(_BYTE *)v19;
  v18 &= 0xFFFFFFFFFFFFFFF8;
  v19 &= 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v18 + 8) = *(_QWORD *)(v19 + 8);
  v20 = (v18 + 23) & 0xFFFFFFFFFFFFFFF8;
  v21 = (v19 + 23) & 0xFFFFFFFFFFFFFFF8;
  v22 = *(_QWORD *)v21;
  *(_BYTE *)(v20 + 8) = *(_BYTE *)(v21 + 8);
  *(_QWORD *)v20 = v22;
  return a1;
}

uint64_t sub_9F78E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  size_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(a3 + 24);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v7 + v10;
  v12 = (char *)((v11 + a1) & ~v10);
  v13 = (char *)((v11 + a2) & ~v10);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
  v15 = v14(v12, 1, v8);
  v16 = v14(v13, 1, v8);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v13, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v12, 0, 1, v8);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 40))(v12, v13, v8);
      goto LABEL_10;
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
  if (*(_DWORD *)(v9 + 84))
    v17 = *(_QWORD *)(v9 + 64);
  else
    v17 = *(_QWORD *)(v9 + 64) + 1;
  memcpy(v12, v13, v17);
LABEL_10:
  if (*(_DWORD *)(v9 + 84))
    v18 = *(_QWORD *)(v9 + 64);
  else
    v18 = *(_QWORD *)(v9 + 64) + 1;
  v19 = (unint64_t)&v12[v18];
  v20 = (unint64_t)&v13[v18];
  *(_BYTE *)v19 = *(_BYTE *)v20;
  v19 &= 0xFFFFFFFFFFFFFFF8;
  v20 &= 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v19 + 8) = *(_QWORD *)(v20 + 8);
  v21 = (v19 + 23) & 0xFFFFFFFFFFFFFFF8;
  v22 = (v20 + 23) & 0xFFFFFFFFFFFFFFF8;
  v23 = *(_QWORD *)v22;
  LOBYTE(v22) = *(_BYTE *)(v22 + 8);
  v24 = *(_QWORD *)v21;
  v25 = *(_BYTE *)(v21 + 8);
  *(_QWORD *)v21 = v23;
  *(_BYTE *)(v21 + 8) = v22;
  sub_270154(v24, v25);
  return a1;
}

uint64_t sub_9F7A5C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 84);
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  if (v9 <= v6)
    v10 = *(_DWORD *)(v5 + 84);
  else
    v10 = v9;
  if (v10 <= 0xFE)
    v10 = 254;
  v11 = *(_QWORD *)(v7 + 64);
  if (!v8)
    ++v11;
  if (!a2)
    return 0;
  v12 = *(unsigned __int8 *)(v7 + 80);
  v13 = *(_QWORD *)(v5 + 64) + v12;
  if (v10 < a2)
  {
    v14 = (((((v13 & ~(_DWORD)v12) + v11) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 9;
    v15 = (a2 - v10 + 255) >> (8 * v14);
    if (v14 < 4)
      v16 = v15 + 1;
    else
      v16 = 2;
    if (v16 >= 0x10000)
      v17 = 4;
    else
      v17 = 2;
    if (v16 < 0x100)
      v17 = 1;
    if (v16 >= 2)
      v18 = v17;
    else
      v18 = 0;
    __asm { BR              X6 }
  }
  if (v6 == v10)
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v5 + 48))(a1, *(unsigned int *)(v5 + 84), v4);
  v20 = (v13 + a1) & ~v12;
  if (v9 != v10)
  {
    v22 = *(unsigned __int8 *)(v20 + v11);
    if (v22 >= 2)
      return ((v22 + 2147483646) & 0x7FFFFFFF) + 1;
    return 0;
  }
  if (v8 < 2)
    return 0;
  v21 = (*(uint64_t (**)(uint64_t))(v7 + 48))(v20);
  if (v21 >= 2)
    return v21 - 1;
  else
    return 0;
}

void sub_9F7BF8(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  int v19;
  int v20;

  v6 = 0;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  v9 = *(_DWORD *)(v8 + 84);
  v10 = v9 - 1;
  if (!v9)
    v10 = 0;
  if (v10 <= *(_DWORD *)(v7 + 84))
    v11 = *(_DWORD *)(v7 + 84);
  else
    v11 = v10;
  if (v11 <= 0xFE)
    v12 = 254;
  else
    v12 = v11;
  v13 = *(unsigned __int8 *)(v8 + 80);
  v15 = *(_QWORD *)(v8 + 64);
  if (!v9)
    ++v15;
  v14 = *(_QWORD *)(v7 + 64) + v13;
  v16 = (((((v14 & ~(_DWORD)v13) + v15) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 9;
  if (v12 < a3)
  {
    v17 = (a3 - v12 + 255) >> (8 * v16);
    if (v16 <= 3)
      v18 = v17 + 1;
    else
      v18 = 2;
    if (v18 >= 0x10000)
      v19 = 4;
    else
      v19 = 2;
    if (v18 < 0x100)
      v19 = 1;
    if (v18 >= 2)
      v6 = v19;
    else
      v6 = 0;
  }
  if (v12 < a2)
  {
    if (v16 >= 4)
      v20 = ~v12 + a2;
    else
      v20 = (~(_BYTE)v12 + a2);
    bzero(a1, (((((v14 & ~v13) + v15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 9);
    if (v16 == 1)
      *a1 = v20;
    else
      *(_DWORD *)a1 = v20;
    __asm { BR              X10 }
  }
  __asm { BR              X4 }
}

void sub_9F7D48()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x9F7DC8);
}

void sub_9F7D50(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x9F7D58);
  JUMPOUT(0x9F7DC8);
}

void sub_9F7DA0()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x9F7DC8);
}

void sub_9F7DA8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x9F7DC8);
}

uint64_t sub_9F7DB0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_WORD *)(v14 + v15) = 0;
  if (!(_DWORD)a1)
    JUMPOUT(0x9F7DC8);
  if ((_DWORD)v7 == v12)
  {
    v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    v5 = v14;
    a2 = v7;
    a3 = a4;
  }
  else
  {
    v5 = (v13 + v14) & v8;
    if (v11 != v12)
      JUMPOUT(0x9F7DBCLL);
    a1 = (a1 + 1);
    v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
  }
  return v4(v5, a1, a2, a3);
}

unint64_t sub_9F7DE4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14EF158;
  if (!qword_14EF158)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EF160);
    sub_9F54C8();
    sub_726E1C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14EF158);
  }
  return result;
}

uint64_t sub_9F7E50(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t TupleTypeMetadata;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  v5 = a1[4];
  v6 = a1[5];
  v7 = a1[6];
  v8 = a1[7];
  v10 = a1[8];
  v9 = a1[9];
  v22 = *a1;
  v1 = v22;
  v23 = v2;
  v24 = v3;
  v25 = v4;
  v26 = v5;
  v27 = v6;
  v28 = v7;
  v29 = v8;
  v30 = v10;
  v31 = v9;
  v11 = v9;
  type metadata accessor for Header.TextVStack.TitleAttributionStack(255, (uint64_t)&v22);
  v22 = v1;
  v23 = v2;
  v24 = v3;
  v25 = v4;
  v26 = v5;
  v27 = v6;
  v28 = v7;
  v29 = v8;
  v30 = v10;
  v31 = v11;
  type metadata accessor for Header.TextVStack.MetadataContainer(255, (uint64_t)&v22);
  v22 = v1;
  v23 = v2;
  v24 = v3;
  v25 = v4;
  v26 = v5;
  v27 = v6;
  v28 = v7;
  v29 = v8;
  v30 = v10;
  v31 = v11;
  v20 = v11;
  type metadata accessor for Header.TextVStack.PlaybackControlContainer(255, (uint64_t)&v22);
  v22 = v1;
  v23 = v2;
  v24 = v3;
  v25 = v4;
  v26 = v5;
  v27 = v6;
  v28 = v7;
  v29 = v8;
  v30 = v10;
  v31 = v11;
  type metadata accessor for Header.TextVStack.DescriptionContainer(255, (uint64_t)&v22);
  TupleTypeMetadata = swift_getTupleTypeMetadata(255, 4);
  v13 = type metadata accessor for TupleView(255, TupleTypeMetadata);
  swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v13);
  v21 = type metadata accessor for VStack(255, v13);
  v22 = v1;
  v23 = v2;
  v24 = v3;
  v25 = v4;
  v26 = v5;
  v27 = v6;
  v28 = v7;
  v29 = v8;
  v30 = v10;
  v31 = v20;
  type metadata accessor for Header.TextVStack.TitleAttributionStack(255, (uint64_t)&v22);
  v22 = v1;
  v23 = v2;
  v24 = v3;
  v25 = v4;
  v26 = v5;
  v27 = v6;
  v28 = v7;
  v29 = v8;
  v30 = v10;
  v31 = v20;
  type metadata accessor for Header.TextVStack.MetadataContainer(255, (uint64_t)&v22);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EEF38);
  v22 = v1;
  v23 = v2;
  v24 = v3;
  v25 = v4;
  v26 = v5;
  v27 = v6;
  v28 = v7;
  v29 = v8;
  v30 = v10;
  v31 = v20;
  type metadata accessor for Header.TextVStack.DescriptionContainer(255, (uint64_t)&v22);
  v22 = v1;
  v23 = v2;
  v24 = v3;
  v25 = v4;
  v26 = v5;
  v27 = v6;
  v28 = v7;
  v29 = v8;
  v30 = v10;
  v31 = v20;
  type metadata accessor for Header.TextVStack.PlaybackControlContainer(255, (uint64_t)&v22);
  v14 = swift_getTupleTypeMetadata(255, 5);
  v15 = type metadata accessor for TupleView(255, v14);
  swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v15);
  v16 = type metadata accessor for VStack(255, v15);
  v18 = type metadata accessor for _ConditionalContent(255, v21, v16, v17);
  swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v21);
  swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v16);
  return swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v18);
}

uint64_t sub_9F80CC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t TupleTypeMetadata2;
  uint64_t v7;
  uint64_t WitnessTable;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *a1;
  v2 = a1[1];
  v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EEF48);
  v4 = type metadata accessor for ModifiedContent(255, v1, v3);
  v5 = type metadata accessor for ModifiedContent(255, v2, &type metadata for _FlexFrameLayout);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v4, v5, 0, 0);
  v7 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v7);
  v10 = type metadata accessor for AdaptativeContainerStack(255, v7, WitnessTable, v9);
  v11 = type metadata accessor for ModifiedContent(255, v10, &type metadata for _PaddingLayout);
  v12 = type metadata accessor for ModifiedContent(255, v11, &type metadata for _PaddingLayout);
  swift_getWitnessTable(&unk_108FF08, v10);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v11);
  v13 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v12);
  v15 = type metadata accessor for AdaptativeContainer(255, v12, v13, v14);
  return swift_getWitnessTable(&unk_107C448, v15);
}

uint64_t sub_9F8210(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  return sub_9F9760(a1, a2, a3, (uint64_t)&unk_12001CC);
}

uint64_t sub_9F821C(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  return sub_9F9760(a1, a2, a3, (uint64_t)&unk_1200164);
}

uint64_t sub_9F8228(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  return sub_9F9760(a1, a2, a3, (uint64_t)&unk_12000FC);
}

uint64_t sub_9F8234(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  return sub_9F9760(a1, a2, a3, (uint64_t)&unk_1200094);
}

uint64_t type metadata accessor for Header.TextVStack.TitleAttributionStack.Spacing.Before(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for Header.TextVStack.TitleAttributionStack.Spacing.Before);
}

uint64_t sub_9F824C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_9ED8FC(*(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(_QWORD, _QWORD))(v1 + 32), *(_QWORD *)(v1 + 40), *(char **)(v1 + 48), *(_QWORD **)(v1 + 56), *(char **)(v1 + 64), a1, *(_OWORD *)(v1 + 72), *(_QWORD *)(v1 + 88));
}

uint64_t type metadata accessor for Header.TextVStack.TitleAttributionStack.Spacing.After(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for Header.TextVStack.TitleAttributionStack.Spacing.After);
}

uint64_t type metadata accessor for Header.TextVStack.DescriptionContainer.Spacing.After(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for Header.TextVStack.DescriptionContainer.Spacing.After);
}

uint64_t type metadata accessor for Header.TextVStack.DescriptionContainer.Spacing.Before(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for Header.TextVStack.DescriptionContainer.Spacing.Before);
}

uint64_t type metadata accessor for Header.TextVStack.PlaybackControlContainer.Spacing.Before(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for Header.TextVStack.PlaybackControlContainer.Spacing.Before);
}

uint64_t type metadata accessor for Header.TextVStack.PlaybackControlContainer.Spacing.After(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for Header.TextVStack.PlaybackControlContainer.Spacing.After);
}

uint64_t sub_9F82C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_270050(*(_QWORD *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

uint64_t sub_9F8308(uint64_t a1)
{
  return sub_270154(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t sub_9F831C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  v5 = *(_QWORD *)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_270154(v5, v6);
  return a1;
}

uint64_t type metadata accessor for Header.TextVStack.TitleAttributionStack.Spacing(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for Header.TextVStack.TitleAttributionStack.Spacing);
}

void sub_9F8364(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[4];

  v6[0] = &unk_1090378;
  v2 = type metadata accessor for Font.TextStyle(319);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    v6[2] = &unk_1090390;
    sub_1D1B7C(319, (unint64_t *)&qword_14E4FA0, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v5 <= 0x3F)
    {
      v6[3] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 0, 4, v6, a1 + 96);
    }
  }
}

uint64_t *sub_9F8414(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  _BYTE *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v23);
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = a3[25];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for Font.TextStyle(0);
    (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = a3[26];
    v12 = (char *)v4 + v11;
    v13 = (char *)a2 + v11;
    v14 = *(_QWORD *)v13;
    LOBYTE(v9) = v13[8];
    sub_270050(*(_QWORD *)v13, (char)v9);
    *(_QWORD *)v12 = v14;
    v12[8] = (char)v9;
    v15 = a3[27];
    v16 = (uint64_t *)((char *)v4 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
    if (swift_getEnumCaseMultiPayload(v17, v18) == 1)
    {
      v19 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v16, v17, v19);
      v20 = v16;
      v21 = v18;
      v22 = 1;
    }
    else
    {
      v24 = *v17;
      *v16 = *v17;
      swift_retain(v24);
      v20 = v16;
      v21 = v18;
      v22 = 0;
    }
    swift_storeEnumTagMultiPayload(v20, v21, v22);
  }
  return v4;
}

double sub_9F8550(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  double result;

  v4 = a1 + a2[25];
  v5 = type metadata accessor for Font.TextStyle(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  sub_270154(*(_QWORD *)(a1 + a2[26]), *(_BYTE *)(a1 + a2[26] + 8));
  v6 = (_QWORD *)(a1 + a2[27]);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*v6).n128_u64[0];
  }
  return result;
}

_BYTE *sub_9F8604(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  *a1 = *a2;
  v6 = a3[25];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for Font.TextStyle(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = a3[26];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = *(_QWORD *)v12;
  LOBYTE(v8) = v12[8];
  sub_270050(*(_QWORD *)v12, (char)v8);
  *(_QWORD *)v11 = v13;
  v11[8] = (_BYTE)v8;
  v14 = a3[27];
  v15 = (uint64_t *)&a1[v14];
  v16 = (uint64_t *)&a2[v14];
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
  if (swift_getEnumCaseMultiPayload(v16, v17) == 1)
  {
    v18 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v15, v16, v18);
    v19 = 1;
  }
  else
  {
    v20 = *v16;
    *v15 = *v16;
    swift_retain(v20);
    v19 = 0;
  }
  swift_storeEnumTagMultiPayload(v15, v17, v19);
  return a1;
}

_BYTE *sub_9F870C(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  *a1 = *a2;
  v6 = a3[25];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for Font.TextStyle(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[26];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = *(_QWORD *)v12;
  LOBYTE(v8) = v12[8];
  sub_270050(*(_QWORD *)v12, (char)v8);
  v14 = *(_QWORD *)v11;
  v15 = v11[8];
  *(_QWORD *)v11 = v13;
  v11[8] = (_BYTE)v8;
  sub_270154(v14, v15);
  if (a1 != a2)
  {
    v16 = a3[27];
    v17 = (uint64_t *)&a1[v16];
    v18 = (uint64_t *)&a2[v16];
    sub_56024((uint64_t)&a1[v16], (uint64_t *)&unk_14C8730);
    v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
    if (swift_getEnumCaseMultiPayload(v18, v19) == 1)
    {
      v20 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v17, v18, v20);
      v21 = 1;
    }
    else
    {
      v22 = *v18;
      *v17 = *v18;
      swift_retain(v22);
      v21 = 0;
    }
    swift_storeEnumTagMultiPayload(v17, v19, v21);
  }
  return a1;
}

_BYTE *sub_9F8838(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;

  *a1 = *a2;
  v6 = a3[25];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for Font.TextStyle(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[26];
  v11 = a3[27];
  v12 = &a1[v10];
  v13 = &a2[v10];
  *(_QWORD *)v12 = *(_QWORD *)v13;
  v12[8] = v13[8];
  v14 = &a1[v11];
  v15 = &a2[v11];
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
  if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
  {
    v17 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v14, v15, v17);
    swift_storeEnumTagMultiPayload(v14, v16, 1);
  }
  else
  {
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  return a1;
}

_BYTE *sub_9F8934(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;

  *a1 = *a2;
  v6 = a3[25];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for Font.TextStyle(0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[26];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = *(_QWORD *)v12;
  LOBYTE(v12) = v12[8];
  v14 = *(_QWORD *)v11;
  v15 = v11[8];
  *(_QWORD *)v11 = v13;
  v11[8] = (_BYTE)v12;
  sub_270154(v14, v15);
  if (a1 != a2)
  {
    v16 = a3[27];
    v17 = &a1[v16];
    v18 = &a2[v16];
    sub_56024((uint64_t)&a1[v16], (uint64_t *)&unk_14C8730);
    v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
    if (swift_getEnumCaseMultiPayload(v18, v19) == 1)
    {
      v20 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v17, v18, v20);
      swift_storeEnumTagMultiPayload(v17, v19, 1);
    }
    else
    {
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_9F8A58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_9F8A64);
}

uint64_t sub_9F8A64(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  BOOL v5;
  int v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((_DWORD)a2 == 254)
  {
    v4 = *a1;
    v5 = v4 >= 2;
    v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5)
      return (v6 + 1);
    else
      return 0;
  }
  else
  {
    v10 = type metadata accessor for Font.TextStyle(0);
    v11 = *(_QWORD *)(v10 - 8);
    if (*(_DWORD *)(v11 + 84) == (_DWORD)a2)
    {
      v12 = v10;
      v13 = *(int *)(a3 + 100);
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E4F30);
      v11 = *(_QWORD *)(v12 - 8);
      v13 = *(int *)(a3 + 108);
    }
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v11 + 48))(&a1[v13], a2, v12);
  }
}

uint64_t sub_9F8B08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_9F8B14);
}

_BYTE *sub_9F8B14(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 254)
  {
    *result = a2 + 1;
  }
  else
  {
    v8 = type metadata accessor for Font.TextStyle(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 100);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E4F30);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 108);
    }
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

uint64_t sub_9F8BCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, j____swift_get_extra_inhabitant_index_98Tm);
}

uint64_t sub_9F8BDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_99Tm);
}

uint64_t type metadata accessor for Header.TextVStack.DescriptionContainer.Spacing(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for Header.TextVStack.DescriptionContainer.Spacing);
}

uint64_t sub_9F8BFC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for Font.TextStyle(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_1090390;
    swift_initStructMetadata(a1, 0, 2, v4, a1 + 96);
    return 0;
  }
  return result;
}

uint64_t *sub_9F8C6C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v6 = a3;
    v7 = type metadata accessor for Font.TextStyle(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(v6 + 100);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *(_QWORD *)v10;
    LOBYTE(v6) = v10[8];
    sub_270050(*(_QWORD *)v10, v6);
    *(_QWORD *)v9 = v11;
    v9[8] = v6;
  }
  return a1;
}

uint64_t sub_9F8D10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Font.TextStyle(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return sub_270154(*(_QWORD *)(a1 + *(int *)(a2 + 100)), *(_BYTE *)(a1 + *(int *)(a2 + 100) + 8));
}

uint64_t sub_9F8D5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for Font.TextStyle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 100);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)v9;
  LOBYTE(a2) = *(_BYTE *)(v9 + 8);
  sub_270050(*(_QWORD *)v9, a2);
  *(_QWORD *)v8 = v10;
  *(_BYTE *)(v8 + 8) = a2;
  return a1;
}

uint64_t sub_9F8DD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v6 = type metadata accessor for Font.TextStyle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 100);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)v9;
  LOBYTE(a2) = *(_BYTE *)(v9 + 8);
  sub_270050(*(_QWORD *)v9, a2);
  v11 = *(_QWORD *)v8;
  v12 = *(_BYTE *)(v8 + 8);
  *(_QWORD *)v8 = v10;
  *(_BYTE *)(v8 + 8) = a2;
  sub_270154(v11, v12);
  return a1;
}

uint64_t sub_9F8E58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = type metadata accessor for Font.TextStyle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 100);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
  return a1;
}

uint64_t sub_9F8EC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v6 = type metadata accessor for Font.TextStyle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 100);
  v8 = a1 + v7;
  v9 = (uint64_t *)(a2 + v7);
  v10 = *v9;
  LOBYTE(v9) = *((_BYTE *)v9 + 8);
  v11 = *(_QWORD *)v8;
  v12 = *(_BYTE *)(v8 + 8);
  *(_QWORD *)v8 = v10;
  *(_BYTE *)(v8 + 8) = (_BYTE)v9;
  sub_270154(v11, v12);
  return a1;
}

uint64_t sub_9F8F3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_9F8F48);
}

uint64_t __swift_get_extra_inhabitant_index_98Tm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = type metadata accessor for Font.TextStyle(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 100) + 8);
  if (v9 > 1)
    return (v9 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t sub_9F8FC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_9F8FD4);
}

uint64_t __swift_store_extra_inhabitant_index_99Tm(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Font.TextStyle(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 100) + 8) = -(char)a2;
  return result;
}

uint64_t sub_9F9058(uint64_t a1)
{
  return sub_270154(*(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_9F9068(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_BYTE *)(a2 + 16);
  sub_270050(v3, v4);
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4;
  return a1;
}

uint64_t sub_9F90B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_BYTE *)(a2 + 16);
  sub_270050(v3, v4);
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4;
  sub_270154(v5, v6);
  return a1;
}

uint64_t sub_9F910C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4;
  sub_270154(v5, v6);
  return a1;
}

uint64_t type metadata accessor for Header.TextVStack.PlaybackControlContainer.Spacing(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for Header.TextVStack.PlaybackControlContainer.Spacing);
}

uint64_t sub_9F915C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_270050(*(_QWORD *)a2, v4);
  v5 = *(_QWORD *)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_270154(v5, v6);
  return a1;
}

uint64_t sub_9F91AC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t TupleTypeMetadata2;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t TupleTypeMetadata3;
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  v5 = a1[4];
  v29 = a1[6];
  v30 = a1[5];
  v27 = a1[8];
  v28 = a1[7];
  v26 = a1[9];
  v32 = *a1;
  v1 = v32;
  v33 = v2;
  v34 = v3;
  v35 = v4;
  v36 = v5;
  v37 = v30;
  v38 = v29;
  v39 = v28;
  v40 = v27;
  v41 = v26;
  v31 = type metadata accessor for Header.TextVStack.TitleAttributionStack.Spacing.Before(255, (uint64_t)&v32);
  v6 = type metadata accessor for BaselineSpacer(255);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v6, v2, 0, 0);
  v8 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  v9 = type metadata accessor for Optional(255, v8);
  v10 = swift_getTupleTypeMetadata2(255, v1, v9, 0, 0);
  v11 = type metadata accessor for TupleView(255, v10);
  v12 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14E1080);
  v13 = type metadata accessor for ModifiedContent(255, v1, v12);
  v14 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14BF188);
  v15 = type metadata accessor for Optional(255, v2);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3(255, v13, v14, v15, 0, 0);
  v17 = type metadata accessor for TupleView(255, TupleTypeMetadata3);
  v19 = type metadata accessor for _ConditionalContent(255, v11, v17, v18);
  swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v11);
  swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v17);
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v19);
  v20 = type metadata accessor for VStack(255, v19);
  v21 = type metadata accessor for ModifiedContent(255, v20, v12);
  v32 = v1;
  v33 = v2;
  v34 = v3;
  v35 = v4;
  v36 = v5;
  v37 = v30;
  v38 = v29;
  v39 = v28;
  v40 = v27;
  v41 = v26;
  v22 = type metadata accessor for Header.TextVStack.TitleAttributionStack.Spacing.After(255, (uint64_t)&v32);
  v23 = swift_getTupleTypeMetadata3(255, v31, v21, v22, 0, 0);
  v24 = type metadata accessor for TupleView(255, v23);
  return swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v24);
}

uint64_t sub_9F93E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t TupleTypeMetadata2;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = type metadata accessor for BaselineSpacer(255);
  v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14E1080);
  v4 = type metadata accessor for ModifiedContent(255, v1, v3);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v2, v4, 0, 0);
  v6 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  v8 = type metadata accessor for _ConditionalContent(255, v6, v4, v7);
  v9 = type metadata accessor for Optional(255, v8);
  swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v6);
  sub_5C150(&qword_14E1078, &qword_14E1080, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v4);
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v8);
  return swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v9);
}

uint64_t sub_9F950C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t TupleTypeMetadata3;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v2 = a1[1];
  v4 = a1[2];
  v3 = a1[3];
  v5 = a1[4];
  v6 = a1[5];
  v7 = a1[6];
  v8 = a1[7];
  v9 = a1[8];
  v18 = a1[9];
  v20 = *a1;
  v1 = v20;
  v21 = v2;
  v22 = v4;
  v23 = v3;
  v24 = v5;
  v25 = v6;
  v26 = v7;
  v27 = v8;
  v28 = v9;
  v29 = v18;
  v19 = type metadata accessor for Header.TextVStack.DescriptionContainer.Spacing.Before(255, (uint64_t)&v20);
  v10 = type metadata accessor for ModifiedContent(255, v3, &type metadata for _FlexFrameLayout);
  v11 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14E1080);
  v12 = type metadata accessor for ModifiedContent(255, v10, v11);
  v20 = v1;
  v21 = v2;
  v22 = v4;
  v23 = v3;
  v24 = v5;
  v25 = v6;
  v26 = v7;
  v27 = v8;
  v28 = v9;
  v29 = v18;
  v13 = type metadata accessor for Header.TextVStack.DescriptionContainer.Spacing.After(255, (uint64_t)&v20);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3(255, v19, v12, v13, 0, 0);
  v15 = type metadata accessor for TupleView(255, TupleTypeMetadata3);
  v16 = type metadata accessor for Optional(255, v15);
  swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v15);
  return swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v16);
}

uint64_t sub_9F9648(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t TupleTypeMetadata3;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  v5 = a1[4];
  v6 = a1[5];
  v7 = a1[6];
  v8 = a1[7];
  v10 = a1[8];
  v9 = a1[9];
  v16 = *a1;
  v1 = v16;
  v17 = v2;
  v18 = v3;
  v19 = v4;
  v20 = v5;
  v21 = v6;
  v22 = v7;
  v23 = v8;
  v24 = v10;
  v25 = v9;
  v15 = type metadata accessor for Header.TextVStack.PlaybackControlContainer.Spacing.Before(255, (uint64_t)&v16);
  v16 = v1;
  v17 = v2;
  v18 = v3;
  v19 = v4;
  v20 = v5;
  v21 = v6;
  v22 = v7;
  v23 = v8;
  v24 = v10;
  v25 = v9;
  v11 = type metadata accessor for Header.TextVStack.PlaybackControlContainer.Spacing.After(255, (uint64_t)&v16);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3(255, v15, v5, v11, 0, 0);
  v13 = type metadata accessor for TupleView(255, TupleTypeMetadata3);
  return swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v13);
}

uint64_t sub_9F9718(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  return sub_9F9760(a1, a2, a3, (uint64_t)&unk_120043C);
}

uint64_t sub_9F9724(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  return sub_9F9760(a1, a2, a3, (uint64_t)&unk_12003D4);
}

uint64_t sub_9F9730(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  return sub_9F9760(a1, a2, a3, (uint64_t)&unk_120036C);
}

uint64_t sub_9F973C(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  return sub_9F9760(a1, a2, a3, (uint64_t)&unk_1200304);
}

uint64_t sub_9F9748(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  return sub_9F9760(a1, a2, a3, (uint64_t)&unk_120029C);
}

uint64_t sub_9F9754(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  return sub_9F9760(a1, a2, a3, (uint64_t)&unk_1200234);
}

uint64_t sub_9F9760(uint64_t a1, _OWORD *a2, uint64_t a3, uint64_t a4)
{
  __int128 v4;
  __int128 v5;
  _OWORD v7[5];

  v4 = a2[2];
  v7[0] = a2[1];
  v7[1] = v4;
  v5 = a2[4];
  v7[2] = a2[3];
  v7[3] = v5;
  v7[4] = a2[5];
  return swift_getOpaqueTypeConformance2(v7, a4, 1);
}

unint64_t sub_9F97A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14EF600;
  if (!qword_14EF600)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EF5F8);
    sub_9F9804();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_14EF600);
  }
  return result;
}

unint64_t sub_9F9804()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14EF608;
  if (!qword_14EF608)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EF610);
    sub_2D4CB4(&qword_14EF618, &qword_14EF620);
    sub_5C150(&qword_14E1078, &qword_14E1080, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14EF608);
  }
  return result;
}

uint64_t sub_9F98A8(uint64_t result)
{
  *(_BYTE *)(result + 136) = 0;
  return result;
}

double sub_9F98B0(uint64_t a1)
{
  double result;

  *(_QWORD *)(a1 + 128) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_BYTE *)(a1 + 136) = 1;
  return result;
}

unint64_t sub_9F98D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14EF638;
  if (!qword_14EF638)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EF640);
    sub_4DD24(qword_14EF168, type metadata accessor for BaselineSpacer, (uint64_t)&unk_106BB70);
    sub_9F97A0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14EF638);
  }
  return result;
}

unint64_t sub_9F9960()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14EF648;
  if (!qword_14EF648)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EF650);
    sub_2D4CB4(&qword_14BF228, &qword_14BF188);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14EF648);
  }
  return result;
}

unint64_t sub_9F99F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14EF658;
  if (!qword_14EF658)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EF660);
    sub_4DD24(qword_14EF168, type metadata accessor for BaselineSpacer, (uint64_t)&unk_106BB70);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14EF658);
  }
  return result;
}

unint64_t sub_9F9A78()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14EF668;
  if (!qword_14EF668)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EF670);
    sub_4DD24(qword_14EF168, type metadata accessor for BaselineSpacer, (uint64_t)&unk_106BB70);
    sub_2D4CB4(&qword_14BF228, &qword_14BF188);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14EF668);
  }
  return result;
}

unint64_t sub_9F9B20()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14EF678;
  if (!qword_14EF678)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14EF680);
    sub_2CD004();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14EF678);
  }
  return result;
}

Class sub_9F9B9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  UIMenuElementSize v15;
  UIMenuElementSize preferredElementSize;
  Swift::String v17;
  UIMenu v18;
  uint64_t v20;
  Swift::OpaquePointer v21;
  _BYTE v22[40];
  uint64_t v23;
  UIImage_optional v24;

  v1 = v0;
  KeyPath = swift_getKeyPath(&unk_1090A48);
  v3 = swift_getKeyPath(&unk_1090A70);
  static Published.subscript.getter(&v23, v1, KeyPath, v3);
  swift_release(KeyPath);
  swift_release(v3);
  v4 = v23;
  if ((unint64_t)v23 >> 62)
  {
    if (v23 < 0)
      v20 = v23;
    else
      v20 = v23 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v5 = _CocoaArrayWrapper.endIndex.getter(v20);
    swift_bridgeObjectRelease(v4);
  }
  else
  {
    v5 = *(_QWORD *)((char *)&dword_10 + (v23 & 0xFFFFFFFFFFFFF8));
  }
  swift_bridgeObjectRelease(v4);
  if (!v5)
    return 0;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14ADF50);
  inited = swift_initStackObject(v6, v22);
  v8 = inited;
  *(_OWORD *)(inited + 16) = xmmword_1060220;
  if (qword_14ABED0 != -1)
    inited = swift_once(&qword_14ABED0, sub_9FB3BC);
  v9 = qword_14EF688;
  *(_QWORD *)(v8 + 32) = qword_14EF688;
  v23 = v8;
  specialized Array._endMutation()(inited);
  v10 = v23;
  v11 = swift_getKeyPath(&unk_1090A48);
  v12 = swift_getKeyPath(&unk_1090A70);
  swift_retain(v9);
  static Published.subscript.getter(&v23, v1, v11, v12);
  swift_release(v11);
  swift_release(v12);
  v13 = v23;
  v23 = v10;
  sub_68088(v13);
  v14 = v23;
  sub_4E684(0, &qword_14BFF50, UIMenu_ptr);
  swift_retain(v1);
  sub_9FB3EC(v14, v1);
  preferredElementSize = v15;
  swift_release(v1);
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  v24.value.super.isa = 0;
  v24.is_nil = 0;
  v18.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v17, (Swift::String_optional)0, v24, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v21).super.super.isa;
  swift_bridgeObjectRelease(v14);
  return v18.super.super.isa;
}

uint64_t sub_9F9DAC()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_1090A48);
  v2 = swift_getKeyPath(&unk_1090A70);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_9F9E1C()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_1090A90);
  v2 = swift_getKeyPath(&unk_1090AB8);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

void sub_9F9E8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD v49[3];
  id v50[3];
  uint64_t v51;
  void *v52;
  char v53[24];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14BAF30);
  __chkstk_darwin(v2);
  v4 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE690);
  v48 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C0800);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for MusicSharedLibrariesRequest(0, v10);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC16MusicApplication25SharedLibrariesController_isReloadingEnabled) == 1)
  {
    v46 = v9;
    v47 = v8;
    v18 = OBJC_IVAR____TtC16MusicApplication25SharedLibrariesController_autoupdatingResponse;
    v19 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16MusicApplication25SharedLibrariesController_autoupdatingResponse);
    if (v19)
    {
      v20 = *(_QWORD *)(v1 + OBJC_IVAR____TtC16MusicApplication25SharedLibrariesController_autoupdatingResponse);
    }
    else
    {
      v21 = MusicSharedLibrariesRequest.init()(v15);
      v22 = MusicSharedLibrariesRequest.autoupdatingResponse.getter(v21);
      v45 = v12;
      v23 = v5;
      v24 = v22;
      (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
      v25 = *(_QWORD *)(v1 + v18);
      *(_QWORD *)(v1 + v18) = v24;
      v20 = v24;
      v5 = v23;
      v12 = v45;
      swift_retain(v20);
      swift_release(v25);
    }
    v26 = v1 + OBJC_IVAR____TtC16MusicApplication25SharedLibrariesController_autoupdatingResponseSubscription;
    swift_beginAccess(v1 + OBJC_IVAR____TtC16MusicApplication25SharedLibrariesController_autoupdatingResponseSubscription, v53, 0, 0);
    sub_9FB65C(v26, (uint64_t)v50);
    v27 = v51;
    swift_retain(v19);
    v28 = sub_56024((uint64_t)v50, (uint64_t *)&unk_14C06B0);
    if (v27)
    {
      swift_release(v20);
    }
    else
    {
      dispatch thunk of MusicAutoupdatingSharedLibrariesResponse.$libraries.getter(v28);
      v29 = sub_4E684(0, (unint64_t *)&qword_14AD360, OS_dispatch_queue_ptr);
      v50[0] = (id)static OS_dispatch_queue.main.getter(v29, v30, v31, v32, v33, v34, v35, v36, v44, v45, v46, v47, v48, v49[0], v49[1]);
      v37 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v4, 1, 1, v37);
      v38 = sub_5C150((unint64_t *)&unk_14C0820, (uint64_t *)&unk_14AE690, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
      v39 = sub_DB674();
      Publisher.receive<A>(on:options:)(v50, v4, v5, v29, v38, v39);
      sub_56024((uint64_t)v4, (uint64_t *)&unk_14BAF30);

      (*(void (**)(char *, uint64_t))(v48 + 8))(v7, v5);
      v40 = swift_allocObject(&unk_1393608, 24, 7);
      swift_weakInit(v40 + 16);
      v41 = sub_5C150((unint64_t *)&unk_14C0830, (uint64_t *)&unk_14C0800, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
      v42 = v47;
      v43 = (void *)Publisher<>.sink(receiveValue:)(sub_9FB6A4, v40, v47, v41);
      (*(void (**)(char *, uint64_t))(v46 + 8))(v12, v42);
      swift_release(v40);
      v51 = type metadata accessor for AnyCancellable(0);
      v52 = &protocol witness table for AnyCancellable;
      swift_release(v20);
      v50[0] = v43;
      swift_beginAccess(v26, v49, 33, 0);
      sub_1BEA30((uint64_t)v50, v26);
      swift_endAccess(v49);
    }
  }
}

void sub_9FA220(uint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSString v17;
  char **v18;
  id v19;
  uint64_t v20;
  uint64_t KeyPath;
  uint64_t v22;
  uint64_t countAndFlagsBits;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  __n128 v28;
  Swift::String v29;
  void *object;
  void *v31;
  NSString v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  Swift::String v36;

  v35 = a3;
  v5 = type metadata accessor for Locale(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a1;
  type metadata accessor for MusicLibrary(0);
  if (qword_14ABED0 != -1)
    swift_once(&qword_14ABED0, sub_9FB3BC);
  v12 = qword_14EF688;
  if ((static MusicLibrary.== infix(_:_:)(v11, qword_14EF688) & 1) != 0)
  {
    v13 = String.LocalizationValue.init(stringLiteral:)(0x617262694C20794DLL, 0xEA00000000007972);
    static Locale.current.getter(v13);
    v14 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, 0, v7, "Music Library on the current device", 35, 2);
  }
  else
  {
    v14 = ((uint64_t (*)(void))MusicLibrary.name.getter)();
  }
  v34 = v14;
  v16 = v15;
  if ((static MusicLibrary.== infix(_:_:)(v11, v12) & 1) != 0)
  {
    v17 = String._bridgeToObjectiveC()();
    v18 = &selRef__systemImageNamed_;
  }
  else
  {
    v17 = String._bridgeToObjectiveC()();
    v18 = &selRef_systemImageNamed_;
  }
  v19 = objc_msgSend((id)objc_opt_self(UIImage), *v18, v17);

  v20 = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC16MusicApplication25SharedLibrariesController_isCurrentlyConnecting);
  KeyPath = swift_getKeyPath(&unk_1090A90);
  v22 = swift_getKeyPath(&unk_1090AB8);
  static Published.subscript.getter(&v36, a2, KeyPath, v22);
  swift_release(KeyPath);
  swift_release(v22);
  countAndFlagsBits = v36._countAndFlagsBits;
  LOBYTE(KeyPath) = static MusicLibrary.== infix(_:_:)(v11, v36._countAndFlagsBits);
  swift_release(countAndFlagsBits);
  sub_4E684(0, (unint64_t *)&qword_14B7130, UIAction_ptr);
  v24 = swift_allocObject(&unk_1393608, 24, 7);
  swift_weakInit(v24 + 16);
  v25 = swift_allocObject(&unk_1393630, 32, 7);
  *(_QWORD *)(v25 + 16) = v24;
  *(_QWORD *)(v25 + 24) = v11;
  swift_retain(v11);
  v26 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v34, v16, 0, 0, v19, 0, 0, 0, 0, v20, KeyPath & 1, sub_9FB5A8, v25);
  v36._countAndFlagsBits = 0;
  v36._object = (void *)0xE000000000000000;
  v27 = v26;
  _StringGuts.grow(_:)(28);
  v28 = swift_bridgeObjectRelease(v36._object);
  v36._countAndFlagsBits = 0xD00000000000001ALL;
  v36._object = (void *)0x80000000010FB300;
  v29._countAndFlagsBits = MusicLibrary.name.getter(v28);
  object = v29._object;
  String.append(_:)(v29);
  swift_bridgeObjectRelease(object);
  v31 = AccessibilityIdentifier.init(name:)(v36).rawValue._object;
  v32 = String._bridgeToObjectiveC()();
  objc_msgSend(v27, "setAccessibilityIdentifier:", v32, swift_bridgeObjectRelease(v31).n128_f64[0]);

  *v35 = v27;
}

double sub_9FA5E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  double result;
  uint64_t v7;
  _BYTE v8[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_weakLoadStrong(v4);
  if (Strong)
  {
    v7 = Strong;
    sub_9FA63C(a3);
    *(_QWORD *)&result = swift_release(v7).n128_u64[0];
  }
  return result;
}

double sub_9FA63C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  double result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD5A0);
  __chkstk_darwin(v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = a1;
  KeyPath = swift_getKeyPath(&unk_1090A90);
  v8 = swift_getKeyPath(&unk_1090AB8);
  static Published.subscript.getter(&v21, v2, KeyPath, v8);
  swift_release(KeyPath);
  swift_release(v8);
  v9 = v21;
  v10 = type metadata accessor for MusicLibrary(0);
  v11 = sub_68E260();
  LOBYTE(v10) = dispatch thunk of static Equatable.== infix(_:_:)(&v22, &v21, v10, v11);
  *(_QWORD *)&result = swift_release(v9).n128_u64[0];
  if ((v10 & 1) == 0
    && (*(_BYTE *)(v2 + OBJC_IVAR____TtC16MusicApplication25SharedLibrariesController_isCurrentlyConnecting) & 1) == 0)
  {
    v13 = swift_getKeyPath(&unk_1090A90);
    v14 = swift_getKeyPath(&unk_1090AB8);
    static Published.subscript.getter(&v22, v2, v13, v14);
    swift_release(v13);
    swift_release(v14);
    v15 = v22;
    MusicLibrary.disconnect()();
    swift_release(v15);
    v16 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v6, 1, 1, v16);
    type metadata accessor for MainActor(0);
    swift_retain(v2);
    v17 = swift_retain(a1);
    v18 = static MainActor.shared.getter(v17);
    v19 = (_QWORD *)swift_allocObject(&unk_1393658, 48, 7);
    v19[2] = v18;
    v19[3] = &protocol witness table for MainActor;
    v19[4] = v2;
    v19[5] = a1;
    v20 = sub_2223C8((uint64_t)v6, (uint64_t)&unk_14EF7A8, (uint64_t)v19);
    *(_QWORD *)&result = swift_release(v20).n128_u64[0];
  }
  return result;
}

double sub_9FA818(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t Strong;
  double result;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  _BYTE v35[24];

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a1;
  a2 += 16;
  swift_beginAccess(a2, v35, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v11 = Strong;
    KeyPath = swift_getKeyPath(&unk_1090A48);
    v13 = swift_getKeyPath(&unk_1090A70);
    static Published.subscript.getter(&v34, v11, KeyPath, v13);
    swift_release(KeyPath);
    swift_release(v13);
    v14 = v34;
    sub_30F944(v8, v34);
    LOBYTE(v13) = v15;
    swift_bridgeObjectRelease(v14);
    if ((v13 & 1) == 0)
    {
      v16 = swift_getKeyPath(&unk_1090A48);
      v17 = swift_getKeyPath(&unk_1090A70);
      v34 = v8;
      swift_bridgeObjectRetain();
      swift_retain(v11);
      static Published.subscript.setter(&v34, v11, v16, v17);
      v18 = swift_getKeyPath(&unk_1090A90);
      v19 = swift_getKeyPath(&unk_1090AB8);
      static Published.subscript.getter(&v34, v11, v18, v19);
      swift_release(v18);
      swift_release(v19);
      v20 = v34;
      if (qword_14ABED0 != -1)
        swift_once(&qword_14ABED0, sub_9FB3BC);
      v33 = qword_14EF688;
      v21 = type metadata accessor for MusicLibrary(0);
      v22 = sub_68E260();
      LOBYTE(v21) = dispatch thunk of static Equatable.== infix(_:_:)(&v34, &v33, v21, v22);
      swift_release(v20);
      if ((v21 & 1) == 0)
      {
        v23 = swift_getKeyPath(&unk_1090A90);
        v24 = swift_getKeyPath(&unk_1090AB8);
        static Published.subscript.getter(&v34, v11, v23, v24);
        swift_release(v23);
        swift_release(v24);
        v25 = v34;
        v26 = sub_68C16C(v34, v8);
        swift_release(v25);
        if ((v26 & 1) == 0)
        {
          v27 = Logger.libraryMenu.unsafeMutableAddressor();
          v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v27, v4);
          v29 = Logger.logObject.getter(v28);
          v30 = static os_log_type_t.default.getter(v29);
          if (os_log_type_enabled(v29, v30))
          {
            v31 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v31 = 0;
            _os_log_impl(&dword_0, v29, v30, "Currently selected Library become unavailable, resetting to device library", v31, 2u);
            swift_slowDealloc(v31, -1, -1);
          }
          (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);

          sub_9FA63C(qword_14EF688);
        }
      }
    }
    *(_QWORD *)&result = swift_release(v11).n128_u64[0];
  }
  return result;
}

uint64_t sub_9FAB2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;

  v5[6] = a4;
  v5[7] = a5;
  v6 = type metadata accessor for Logger(0);
  v5[8] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[9] = v7;
  v5[10] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MainActor(0);
  v5[11] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  v5[12] = v10;
  v5[13] = v11;
  return swift_task_switch(sub_9FABC0, v10, v11);
}

uint64_t sub_9FABC0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[6];
  v2 = OBJC_IVAR____TtC16MusicApplication25SharedLibrariesController_isCurrentlyConnecting;
  v0[14] = OBJC_IVAR____TtC16MusicApplication25SharedLibrariesController_isCurrentlyConnecting;
  *(_BYTE *)(v1 + v2) = 1;
  v3 = (_QWORD *)swift_task_alloc(async function pointer to MusicLibrary.connect()[1]);
  v0[15] = v3;
  *v3 = v0;
  v3[1] = sub_9FAC24;
  return MusicLibrary.connect()();
}

uint64_t sub_9FAC24()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 120);
  *(_QWORD *)(*v1 + 128) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_9FAD28;
  else
    v4 = sub_9FAC84;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 96), *(_QWORD *)(v2 + 104));
}

uint64_t sub_9FAC84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  *(_BYTE *)(v3 + *(_QWORD *)(v0 + 112)) = 0;
  KeyPath = swift_getKeyPath(&unk_1090A90);
  v5 = swift_getKeyPath(&unk_1090AB8);
  *(_QWORD *)(v0 + 40) = v2;
  swift_retain(v2);
  swift_retain(v3);
  static Published.subscript.setter(v0 + 40, v3, KeyPath, v5);
  swift_release(v1);
  swift_task_dealloc(*(_QWORD *)(v0 + 80));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_9FAD28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t KeyPath;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 64);
  v5 = Logger.libraryMenu.unsafeMutableAddressor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  swift_errorRetain(v1);
  v6 = swift_errorRetain(v1);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.error.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v9 = *(_QWORD *)(v0 + 128);
    v10 = *(_QWORD *)(v0 + 72);
    v24 = *(_QWORD *)(v0 + 64);
    v25 = *(_QWORD *)(v0 + 80);
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    *(_DWORD *)v11 = 136315138;
    v26 = v12;
    *(_QWORD *)(v0 + 24) = v9;
    swift_errorRetain(v9);
    v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD690);
    v14 = String.init<A>(describing:)(v0 + 24, v13);
    *(_QWORD *)(v0 + 32) = sub_23EAC8(v14, v15, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40);
    swift_bridgeObjectRelease();
    swift_errorRelease(v9);
    swift_errorRelease(v9);
    _os_log_impl(&dword_0, v7, v8, "Failed to connect to shared library with error=%s", v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v25, v24);
  }
  else
  {
    v16 = *(_QWORD *)(v0 + 128);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 8))(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 64));
    swift_errorRelease(v16);
    swift_errorRelease(v16);
  }

  *(_BYTE *)(*(_QWORD *)(v0 + 48) + *(_QWORD *)(v0 + 112)) = 0;
  if (qword_14ABED0 != -1)
    swift_once(&qword_14ABED0, sub_9FB3BC);
  v17 = *(_QWORD *)(v0 + 128);
  v18 = *(_QWORD *)(v0 + 88);
  v19 = *(_QWORD *)(v0 + 48);
  v20 = qword_14EF688;
  KeyPath = swift_getKeyPath(&unk_1090A90);
  v22 = swift_getKeyPath(&unk_1090AB8);
  *(_QWORD *)(v0 + 16) = v20;
  swift_retain(v19);
  swift_retain(v20);
  static Published.subscript.setter(v0 + 16, v19, KeyPath, v22);
  swift_errorRelease(v17);
  swift_release(v18);
  swift_task_dealloc(*(_QWORD *)(v0 + 80));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_9FAFBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double result;

  v1 = v0 + OBJC_IVAR____TtC16MusicApplication25SharedLibrariesController__availableSharedLibraries;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C0810);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC16MusicApplication25SharedLibrariesController__selectedLibrary;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE6B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicApplication25SharedLibrariesController_autoupdatingResponse));
  sub_56024(v0 + OBJC_IVAR____TtC16MusicApplication25SharedLibrariesController_autoupdatingResponseSubscription, (uint64_t *)&unk_14C06B0);
  *(_QWORD *)&result = swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52)).n128_u64[0];
  return result;
}

uint64_t sub_9FB064()
{
  return type metadata accessor for SharedLibrariesController(0);
}

uint64_t type metadata accessor for SharedLibrariesController(uint64_t a1)
{
  uint64_t result;

  result = qword_14EF6E0;
  if (!qword_14EF6E0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SharedLibrariesController);
  return result;
}

void sub_9FB0A8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[6];

  sub_9FB150(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_9FB1A8(319);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      v6[2] = &unk_1090A00;
      v6[3] = &unk_1090A18;
      v6[4] = &unk_1090A30;
      v6[5] = &unk_1090A00;
      swift_updateClassMetadata2(a1, 256, 6, v6, a1 + 80);
    }
  }
}

void sub_9FB150(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_14EF6F0)
  {
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14AE1E8);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_14EF6F0);
  }
}

void sub_9FB1A8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_14EF6F8)
  {
    v2 = type metadata accessor for MusicLibrary(255);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_14EF6F8);
  }
}

uint64_t sub_9FB20C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  _QWORD *v17;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE6B0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C0810);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v0 + OBJC_IVAR____TtC16MusicApplication25SharedLibrariesController__availableSharedLibraries;
  v17 = _swiftEmptyArrayStorage;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AE1E8);
  Published.init(initialValue:)(&v17, v10);
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v9, v8, v5);
  v11 = OBJC_IVAR____TtC16MusicApplication25SharedLibrariesController__selectedLibrary;
  if (qword_14ABED0 != -1)
    swift_once(&qword_14ABED0, sub_9FB3BC);
  v12 = qword_14EF688;
  v17 = (_QWORD *)qword_14EF688;
  v13 = type metadata accessor for MusicLibrary(0);
  swift_retain(v12);
  Published.init(initialValue:)(&v17, v13);
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v0 + v11, v4, v1);
  *(_BYTE *)(v0 + OBJC_IVAR____TtC16MusicApplication25SharedLibrariesController_isReloadingEnabled) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC16MusicApplication25SharedLibrariesController_autoupdatingResponse) = 0;
  v14 = v0 + OBJC_IVAR____TtC16MusicApplication25SharedLibrariesController_autoupdatingResponseSubscription;
  *(_OWORD *)v14 = 0u;
  *(_OWORD *)(v14 + 16) = 0u;
  *(_QWORD *)(v14 + 32) = 0;
  *(_BYTE *)(v0 + OBJC_IVAR____TtC16MusicApplication25SharedLibrariesController_isCurrentlyConnecting) = 0;
  return v0;
}

uint64_t sub_9FB3BC()
{
  uint64_t result;

  type metadata accessor for MusicLibrary(0);
  result = static MusicLibrary.shared.getter();
  qword_14EF688 = result;
  return result;
}

void sub_9FB3EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v3 = v2;
  if ((unint64_t)a1 >> 62)
    goto LABEL_16;
  v6 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  while (v6)
  {
    v16 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v6);
    if (v6 < 0)
    {
      __break(1u);
      return;
    }
    v7 = 0;
    while (v6 != v7)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(v7, a1);
      }
      else
      {
        v8 = *(_QWORD *)(a1 + 8 * v7 + 32);
        swift_retain(v8);
      }
      v14 = v8;
      sub_9FA220(&v14, a2, &v15);
      swift_release(v8);
      if (v3)
      {
        swift_release(v16);
        return;
      }
      ++v7;
      v10 = v15;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v9);
      v11 = v16[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v11);
      v12 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v11, v10);
      specialized ContiguousArray._endMutation()(v12);
      if (v6 == v7)
        return;
    }
    __break(1u);
LABEL_16:
    if (a1 < 0)
      v13 = a1;
    else
      v13 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v6 = _CocoaArrayWrapper.endIndex.getter(v13);
    swift_bridgeObjectRelease(a1);
  }
}

uint64_t sub_9FB558()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_9FB57C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_9FB5A8(uint64_t a1)
{
  uint64_t v1;

  return sub_9FA5E0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_9FB5B0()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_9FB5E4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_14EF7A4);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_50F8C;
  return sub_9FAB2C(a1, v4, v5, v7, v6);
}

uint64_t sub_9FB65C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C06B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

double sub_9FB6A4(uint64_t *a1)
{
  uint64_t v1;

  return sub_9FA818(a1, v1);
}

void sub_9FB6AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t KeyPath;
  uint64_t v23;
  _QWORD v24[3];

  v2 = v1;
  v3 = *(_QWORD *)(v1 + 32);
  if (!v3)
    return;
  v5 = *(_QWORD *)(v2 + 24);
  v6 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v6)
  {
    swift_bridgeObjectRetain();
    v7 = sub_21BB38(v5, v3);
    if ((v8 & 1) != 0)
    {
      v9 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v7);
      swift_bridgeObjectRetain();
    }
    else
    {
      v9 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = 0;
  }
  v10 = (uint64_t *)(v2 + 16);
  swift_beginAccess(v2 + 16, v24, 32, 0);
  v11 = *(_QWORD *)(v2 + 16);
  if (*(_QWORD *)(v11 + 16))
  {
    swift_bridgeObjectRetain();
    v12 = sub_21BB38(v5, v3);
    if ((v13 & 1) != 0)
    {
      v14 = *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v12);
      swift_bridgeObjectRetain();
    }
    else
    {
      v14 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = 0;
  }
  swift_endAccess(v24);
  if (v9)
  {
    if (v14)
    {
      v15 = swift_bridgeObjectRetain();
      sub_770D58(v15, v14);
      v17 = v16;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n(v9, 2);
      if ((v17 & 1) == 0)
        goto LABEL_21;
LABEL_19:
      swift_bridgeObjectRelease();
      return;
    }
  }
  else if (!v14)
  {
    goto LABEL_19;
  }
  swift_bridgeObjectRelease();
LABEL_21:
  swift_beginAccess(v2 + 16, v24, 32, 0);
  v18 = *v10;
  if (*(_QWORD *)(*v10 + 16))
  {
    swift_bridgeObjectRetain();
    v19 = sub_21BB38(v5, v3);
    if ((v20 & 1) != 0)
    {
      v21 = *(_QWORD *)(*(_QWORD *)(v18 + 56) + 8 * v19);
      swift_bridgeObjectRetain();
    }
    else
    {
      v21 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v21 = 0;
  }
  swift_endAccess(v24);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath(&unk_1090B40);
  v23 = swift_getKeyPath(&off_1090B68);
  v24[0] = v21;
  swift_retain(v2);
  static Published.subscript.setter(v24, v2, KeyPath, v23);
}

double sub_9FB8B8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double result;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];

  v1 = v0;
  v2 = v0[4];
  if (v2)
  {
    v3 = v0[3];
    swift_beginAccess(v0 + 2, v15, 0, 0);
    v4 = v0[2];
    v5 = *(_QWORD *)(v4 + 16);
    swift_bridgeObjectRetain();
    if (v5)
    {
      swift_bridgeObjectRetain();
      v6 = sub_21BB38(v3, v2);
      if ((v7 & 1) != 0)
      {
        v8 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v6);
        swift_bridgeObjectRetain();
      }
      else
      {
        v8 = 0;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      v8 = 0;
    }
    KeyPath = swift_getKeyPath(&unk_1090B40);
    v13 = swift_getKeyPath(&off_1090B68);
    v14 = v8;
    swift_retain(v1);
    static Published.subscript.setter(&v14, v1, KeyPath, v13);
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  else
  {
    v9 = swift_getKeyPath(&unk_1090B40);
    v10 = swift_getKeyPath(&off_1090B68);
    v15[0] = 0;
    swift_retain(v1);
    static Published.subscript.setter(v15, v1, v9, v10);
  }
  return result;
}

uint64_t sub_9FB9EC()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_1090B40);
  v2 = swift_getKeyPath(&off_1090B68);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

void sub_9FBA5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  _BOOL4 v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v35;
  char v36;
  unint64_t v37;
  uint64_t v38;
  _BOOL8 v39;
  uint64_t v40;
  char v41;
  unint64_t v42;
  char v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  BOOL v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  __n128 v66;
  void (*v67)(char *, uint64_t, __n128);
  uint64_t v68;
  __n128 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  __n128 v78;
  char *v79;
  uint64_t v80;
  NSObject *v81;
  os_log_type_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  __n128 v91;
  uint64_t v92;
  __n128 v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  NSObject *v97;
  os_log_type_t v98;
  uint8_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  unint64_t v104;
  uint64_t v105;
  NSObject *v106;
  os_log_type_t v107;
  uint8_t *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t KeyPath;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  __n128 v119;
  uint64_t v120;
  _QWORD *v121;
  unint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  char *v125;
  uint64_t v126;
  os_log_t v127;
  char *v128;
  char *v129;
  __int128 v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t (*v139)(char *, char *, uint64_t);
  uint64_t v140;
  uint64_t *v141;
  uint64_t v142;
  uint64_t v143[5];

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD5A0);
  __chkstk_darwin(v1);
  v125 = (char *)&v124 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Album(0);
  v138 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v124 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v124 - v7;
  __chkstk_darwin(v9);
  v134 = (char *)&v124 - v10;
  swift_retain(v0);
  v11 = swift_bridgeObjectRetain();
  v12 = sub_9FE0C8(v11, v0);
  v126 = v0;
  swift_release(v0);
  swift_bridgeObjectRelease();
  v135 = sub_19A5BC((uint64_t)_swiftEmptyArrayStorage);
  if (qword_14AC048 != -1)
LABEL_44:
    swift_once(&qword_14AC048, sub_AA6728);
  v13 = type metadata accessor for Logger(0);
  v14 = __swift_project_value_buffer(v13, (uint64_t)static Logger.motionInNowPlaying);
  v15 = swift_bridgeObjectRetain_n(v12, 2);
  v136 = v14;
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.default.getter();
  v18 = os_log_type_enabled(v16, v17);
  v128 = v5;
  v133 = v8;
  if (v18)
  {
    v19 = (uint8_t *)swift_slowAlloc(12, -1);
    v20 = swift_slowAlloc(32, -1);
    v143[0] = v20;
    *(_DWORD *)v19 = 136446210;
    v21 = swift_bridgeObjectRetain();
    v22 = v12;
    v23 = Array.description.getter(v21, v3);
    v25 = v24;
    swift_bridgeObjectRelease();
    v26 = v23;
    v12 = v22;
    v8 = v133;
    v142 = sub_23EAC8(v26, v25, v143);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v142, v143);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n(v12, 2);
    _os_log_impl(&dword_0, v16, v17, "Checking catalogIDs for albums=%{public}s", v19, 0xCu);
    swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v19, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(v12, 2);
  }

  v5 = v134;
  v27 = v12[2];
  v132 = v3;
  if (v27)
  {
    v141 = (uint64_t *)(v126 + OBJC_IVAR____TtC16MusicApplication31NowPlayingVideoArtworksMetadata_startedRequests);
    v28 = (char *)v12 + ((*(unsigned __int8 *)(v138 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v138 + 80));
    v137 = *(_QWORD *)(v138 + 72);
    v139 = *(uint64_t (**)(char *, char *, uint64_t))(v138 + 16);
    v124 = v12;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v29 = 136446466;
    v130 = v29;
    v129 = (char *)&type metadata for Any + 8;
    while (1)
    {
      v140 = v27;
      v30 = v139(v5, v28, v3);
      v12 = (_QWORD *)Album.id.getter(v30);
      v32 = v31;
      v33 = v141;
      swift_beginAccess(v141, v143, 33, 0);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v33);
      v142 = *v33;
      v35 = v142;
      *v33 = 0x8000000000000000;
      v37 = sub_21BB38((uint64_t)v12, v32);
      v38 = *(_QWORD *)(v35 + 16);
      v39 = (v36 & 1) == 0;
      v40 = v38 + v39;
      if (__OFADD__(v38, v39))
      {
        __break(1u);
LABEL_43:
        __break(1u);
        goto LABEL_44;
      }
      v41 = v36;
      if (*(_QWORD *)(v35 + 24) >= v40)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v44 = (_QWORD *)v142;
          if ((v36 & 1) != 0)
            goto LABEL_16;
        }
        else
        {
          sub_76C040();
          v44 = (_QWORD *)v142;
          if ((v41 & 1) != 0)
            goto LABEL_16;
        }
      }
      else
      {
        sub_763250(v40, isUniquelyReferenced_nonNull_native);
        v42 = sub_21BB38((uint64_t)v12, v32);
        if ((v41 & 1) != (v43 & 1))
        {
          KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for MusicItemID);
          __break(1u);
          return;
        }
        v37 = v42;
        v44 = (_QWORD *)v142;
        if ((v41 & 1) != 0)
        {
LABEL_16:
          *(_BYTE *)(v44[7] + v37) = 1;
          goto LABEL_20;
        }
      }
      v44[(v37 >> 6) + 8] |= 1 << v37;
      v45 = (_QWORD *)(v44[6] + 16 * v37);
      *v45 = v12;
      v45[1] = v32;
      *(_BYTE *)(v44[7] + v37) = 1;
      v46 = v44[2];
      v47 = __OFADD__(v46, 1);
      v48 = v46 + 1;
      if (v47)
        goto LABEL_43;
      v44[2] = v48;
      swift_bridgeObjectRetain();
LABEL_20:
      *v141 = (uint64_t)v44;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess(v143);
      v50 = Album.catalogID.getter(v49);
      if (v51)
      {
        v52 = v51;
        v53 = v50;
        v139(v8, v5, v3);
        v54 = swift_bridgeObjectRetain_n(v52, 2);
        v55 = v3;
        v56 = Logger.logObject.getter(v54);
        v57 = static os_log_type_t.default.getter();
        v58 = v8;
        if (os_log_type_enabled(v56, v57))
        {
          v59 = swift_slowAlloc(22, -1);
          v131 = swift_slowAlloc(64, -1);
          v143[0] = v131;
          *(_DWORD *)v59 = v130;
          swift_bridgeObjectRetain();
          v60 = MusicItemID.description.getter(v53, v52);
          v62 = v61;
          swift_bridgeObjectRelease();
          *(_QWORD *)(v59 + 4) = sub_23EAC8(v60, v62, v143);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n(v52, 2);
          *(_WORD *)(v59 + 12) = 2082;
          v63 = sub_9FF608((unint64_t *)&unk_14D2100, (uint64_t)&protocol conformance descriptor for Album);
          v64 = dispatch thunk of CustomStringConvertible.description.getter(v55, v63);
          *(_QWORD *)(v59 + 14) = sub_23EAC8(v64, v65, v143);
          v66 = swift_bridgeObjectRelease();
          v67 = *(void (**)(char *, uint64_t, __n128))(v138 + 8);
          v67(v58, v55, v66);
          _os_log_impl(&dword_0, v56, v57, "Found catalogID \"%{public}s)\" for album=%{public}s", (uint8_t *)v59, 0x16u);
          v68 = v131;
          swift_arrayDestroy(v131, 2, v129);
          swift_slowDealloc(v68, -1, -1);
          swift_slowDealloc(v59, -1, -1);
        }
        else
        {
          v69 = swift_bridgeObjectRelease_n(v52, 2);
          v67 = *(void (**)(char *, uint64_t, __n128))(v138 + 8);
          v67(v58, v55, v69);
        }

        v71 = HIBYTE(v52) & 0xF;
        if ((v52 & 0x2000000000000000) == 0)
          v71 = v53 & 0xFFFFFFFFFFFFLL;
        v5 = v134;
        v72 = v53;
        if (v71)
        {
          v73 = Album.id.getter(v70);
          v75 = v74;
          v76 = v135;
          v77 = swift_isUniquelyReferenced_nonNull_native(v135);
          v143[0] = v76;
          sub_1A0BE4(v73, v75, v72, v52, v77);
          v135 = v143[0];
          swift_bridgeObjectRelease();
          v78 = swift_bridgeObjectRelease();
          v3 = v132;
          v67(v5, v132, v78);
        }
        else
        {
          v79 = v128;
          v3 = v132;
          v139(v128, v134, v132);
          v80 = swift_bridgeObjectRetain();
          v81 = Logger.logObject.getter(v80);
          v82 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v81, v82))
          {
            v83 = swift_slowAlloc(22, -1);
            v131 = swift_slowAlloc(64, -1);
            v143[0] = v131;
            *(_DWORD *)v83 = v130;
            swift_bridgeObjectRetain();
            v84 = MusicItemID.description.getter(v72, v52);
            v127 = v81;
            v85 = v84;
            v87 = v86;
            swift_bridgeObjectRelease();
            *(_QWORD *)(v83 + 4) = sub_23EAC8(v85, v87, v143);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n(v52, 2);
            *(_WORD *)(v83 + 12) = 2082;
            v88 = sub_9FF608((unint64_t *)&unk_14D2100, (uint64_t)&protocol conformance descriptor for Album);
            v89 = dispatch thunk of CustomStringConvertible.description.getter(v3, v88);
            *(_QWORD *)(v83 + 14) = sub_23EAC8(v89, v90, v143);
            v91 = swift_bridgeObjectRelease();
            v67(v79, v3, v91);
            v81 = v127;
            _os_log_impl(&dword_0, v127, v82, "Empty catalogID \"%{public}s)\" for album=%{public}s… skipping", (uint8_t *)v83, 0x16u);
            v92 = v131;
            swift_arrayDestroy(v131, 2, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v92, -1, -1);
            swift_slowDealloc(v83, -1, -1);
          }
          else
          {
            ((void (*)(char *, uint64_t))v67)(v79, v3);
            v93 = swift_bridgeObjectRelease_n(v52, 2);
          }
          v67(v5, v3, v93);

        }
        v8 = v133;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v138 + 8))(v5, v3);
      }
      v28 += v137;
      v27 = v140 - 1;
      if (v140 == 1)
      {
        v12 = v124;
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  v94 = swift_bridgeObjectRetain();
  v95 = sub_3162CC(v94);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v95 + 16))
  {
    v96 = swift_retain_n(v95, 2);
    v97 = Logger.logObject.getter(v96);
    v98 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v97, v98))
    {
      v99 = (uint8_t *)swift_slowAlloc(12, -1);
      v100 = swift_slowAlloc(32, -1);
      v143[0] = v100;
      *(_DWORD *)v99 = 136446210;
      swift_retain(v95);
      v102 = Array.description.getter(v101, &type metadata for MusicItemID);
      v104 = v103;
      swift_release(v95);
      v142 = sub_23EAC8(v102, v104, v143);
      v3 = v132;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v142, v143);
      swift_bridgeObjectRelease();
      swift_release_n(v95, 2);
      _os_log_impl(&dword_0, v97, v98, "Requesting editorial video artworks for catalogIDs=%{public}s", v99, 0xCu);
      swift_arrayDestroy(v100, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v100, -1, -1);
      swift_slowDealloc(v99, -1, -1);
    }
    else
    {
      swift_release_n(v95, 2);
    }

    v109 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14F9450);
    v110 = swift_allocBox(v109);
    KeyPath = swift_getKeyPath(&unk_1090B88);
    v112 = sub_9FF608(&qword_14D61A8, (uint64_t)&protocol conformance descriptor for Album);
    MusicCatalogResourceRequest.init<A>(matching:memberOf:)(KeyPath, v95, v3, &protocol witness table for Album, v112);
    v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_14ADF50);
    v114 = swift_allocObject(v113, 40, 7);
    *(_OWORD *)(v114 + 16) = xmmword_1060220;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14F9330);
    v115 = static PartialMusicProperty<A>.editorialVideoArtworks.getter(&protocol witness table for Album);
    *(_QWORD *)(v114 + 32) = v115;
    v143[0] = v114;
    specialized Array._endMutation()(v115);
    MusicCatalogResourceRequest.properties.setter(v143[0], v109);
    v116 = type metadata accessor for TaskPriority(0);
    v117 = (uint64_t)v125;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v116 - 8) + 56))(v125, 1, 1, v116);
    type metadata accessor for MainActor(0);
    v118 = v126;
    swift_retain(v126);
    v119 = swift_retain(v110);
    v120 = static MainActor.shared.getter(v119);
    v121 = (_QWORD *)swift_allocObject(&unk_1393680, 64, 7);
    v121[2] = v120;
    v121[3] = &protocol witness table for MainActor;
    v121[4] = v110;
    v121[5] = v12;
    v122 = v135;
    v121[6] = v118;
    v121[7] = v122;
    v123 = sub_2223C8(v117, (uint64_t)&unk_14EF990, (uint64_t)v121);
    swift_release(v123);
    swift_release(v110);
  }
  else
  {
    swift_release(v95);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v106 = Logger.logObject.getter(v105);
    v107 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v106, v107))
    {
      v108 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v108 = 0;
      _os_log_impl(&dword_0, v106, v107, "No catalogIDs found, bailing out!", v108, 2u);
      swift_slowDealloc(v108, -1, -1);
    }

  }
}

uint64_t sub_9FC6B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;

  v7[13] = a6;
  v7[14] = a7;
  v7[12] = a5;
  v9 = type metadata accessor for Album(0);
  v7[15] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v7[16] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[17] = swift_task_alloc(v11);
  v7[18] = swift_task_alloc(v11);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AE160);
  v7[19] = v12;
  v13 = (*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[20] = swift_task_alloc(v13);
  v7[21] = swift_task_alloc(v13);
  v14 = type metadata accessor for Logger(0);
  v7[22] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v7[23] = v15;
  v7[24] = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14F9450);
  v7[25] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v7[26] = v17;
  v7[27] = swift_task_alloc((*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_14D60F8);
  v7[28] = v18;
  v19 = *(_QWORD *)(v18 - 8);
  v7[29] = v19;
  v7[30] = swift_task_alloc((*(_QWORD *)(v19 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_14D7E40);
  v7[31] = v20;
  v21 = *(_QWORD *)(v20 - 8);
  v7[32] = v21;
  v22 = (*(_QWORD *)(v21 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[33] = swift_task_alloc(v22);
  v7[34] = swift_task_alloc(v22);
  v7[35] = swift_projectBox(a4);
  v23 = type metadata accessor for MainActor(0);
  v7[36] = static MainActor.shared.getter(v24);
  v25 = dispatch thunk of Actor.unownedExecutor.getter(v23, &protocol witness table for MainActor);
  v7[37] = v25;
  v7[38] = v26;
  return swift_task_switch(sub_9FC85C, v25, v26);
}

uint64_t sub_9FC85C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  _QWORD *v6;

  v1 = v0[35];
  v3 = v0[26];
  v2 = v0[27];
  v4 = v0[25];
  v5 = swift_beginAccess(v1, v0 + 6, 0, 0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v3 + 16))(v2, v1, v4, v5);
  v6 = (_QWORD *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
  v0[39] = v6;
  *v6 = v0;
  v6[1] = sub_9FC8F0;
  return MusicCatalogResourceRequest.response()(v0[30], v0[25]);
}

uint64_t sub_9FC8F0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 312);
  v5 = *(_QWORD *)(*v1 + 208);
  v4 = *(_QWORD *)(*v1 + 216);
  v6 = *(_QWORD *)(*v1 + 200);
  *(_QWORD *)(*v1 + 320) = v0;
  swift_task_dealloc(v3);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  if (v0)
    v7 = sub_9FCE7C;
  else
    v7 = sub_9FC978;
  return swift_task_switch(v7, *(_QWORD *)(v2 + 296), *(_QWORD *)(v2 + 304));
}

uint64_t sub_9FC978()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  void *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, _QWORD);
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t, uint64_t, uint64_t);
  unint64_t v61;
  uint64_t v62;

  v2 = *(_QWORD *)(v0 + 232);
  v1 = *(_QWORD *)(v0 + 240);
  v3 = *(_QWORD *)(v0 + 224);
  MusicCatalogResourceResponse.items.getter(v3);
  v4 = (*(double (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  type metadata accessor for NowPlayingArtworkRestrictionsMonitor(0, v4);
  v5 = (void *)static NowPlayingArtworkRestrictionsMonitor.shared.getter();
  LOBYTE(v3) = dispatch thunk of NowPlayingArtworkRestrictionsMonitor.isMotionDisabled.getter();

  if ((v3 & 1) == 0)
  {
    v11 = *(_QWORD *)(v0 + 248);
    v13 = *(_QWORD *)(v0 + 160);
    v12 = *(_QWORD *)(v0 + 168);
    v14 = *(_QWORD *)(v0 + 152);
    v60 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 256) + 16);
    v60(v13, *(_QWORD *)(v0 + 272), v11);
    v15 = sub_9FF648();
    dispatch thunk of Collection.startIndex.getter(v11);
    *(_QWORD *)(v13 + *(int *)(v14 + 36)) = *(_QWORD *)(v0 + 80);
    sub_9FF694(v13, v12);
    v16 = (_QWORD *)(v12 + *(int *)(v14 + 36));
    v17 = *v16;
    v18 = v11;
    v19 = v15;
    dispatch thunk of Collection.endIndex.getter(v18, v15);
    if (v17 == *(_QWORD *)(v0 + 88))
    {
LABEL_8:
      v10 = *(_QWORD *)(v0 + 288);
      v20 = *(_QWORD *)(v0 + 272);
      v21 = *(_QWORD *)(v0 + 248);
      v22 = *(_QWORD *)(v0 + 256);
      sub_56024(*(_QWORD *)(v0 + 168), &qword_14AE160);
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
      goto LABEL_9;
    }
    v58 = *(_QWORD *)(v0 + 256);
    v59 = v0 + 16;
    v57 = v16;
    v56 = *(_QWORD *)(v0 + 112);
    v61 = v15;
    v32 = *(_QWORD *)(v0 + 128);
    while (1)
    {
      v34 = *(_QWORD *)(v0 + 264);
      v35 = *(_QWORD *)(v0 + 248);
      v36 = *(_QWORD *)(v0 + 168);
      v37 = *(_QWORD *)(v0 + 144);
      v62 = *(_QWORD *)(v0 + 136);
      v38 = *(_QWORD *)(v0 + 120);
      v39 = (void (*)(uint64_t, _QWORD))dispatch thunk of Collection.subscript.read(v59, v16, v35, v19);
      (*(void (**)(uint64_t))(v32 + 16))(v37);
      v39(v59, 0);
      v19 = v61;
      v60(v34, v36, v35);
      dispatch thunk of Collection.formIndex(after:)(v16, v35, v61);
      (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v34, v35);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32))(v62, v37, v38);
      v40 = EditorialVideoArtworkVending.editorialVideoArtworks.getter(v38, &protocol witness table for Album);
      if (v40)
      {
        v41 = v40;
        v42 = Album.catalogID.getter(v40);
        if (!v43)
          goto LABEL_21;
        if (!*(_QWORD *)(v56 + 16) || (v44 = sub_21BB38(v42, v43), (v45 & 1) == 0))
        {
          swift_bridgeObjectRelease();
LABEL_21:
          if (qword_14AC048 != -1)
            swift_once(&qword_14AC048, sub_AA6728);
          v52 = __swift_project_value_buffer(*(_QWORD *)(v0 + 176), (uint64_t)static Logger.motionInNowPlaying);
          v53 = Logger.logObject.getter(v52);
          v54 = static os_log_type_t.error.getter(v53);
          v16 = v57;
          if (os_log_type_enabled(v53, v54))
          {
            v55 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v55 = 0;
            _os_log_impl(&dword_0, v53, v54, "Editorial video artwork could not be stored. Could not find album ID for given catalogID.", v55, 2u);
            swift_slowDealloc(v55, -1, -1);
          }
          (*(void (**)(_QWORD, _QWORD))(v32 + 8))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 120));
          swift_bridgeObjectRelease();

          goto LABEL_12;
        }
        v46 = *(_QWORD *)(v0 + 136);
        v47 = *(_QWORD *)(v0 + 120);
        v48 = (uint64_t *)(*(_QWORD *)(v56 + 56) + 16 * v44);
        v49 = *v48;
        v50 = v48[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_9FD25C(v41, v49, v50);
        v51 = v47;
        v19 = v61;
        (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v46, v51);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        (*(void (**)(_QWORD, _QWORD))(v32 + 8))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 120));
      }
      v16 = v57;
LABEL_12:
      v33 = *v16;
      dispatch thunk of Collection.endIndex.getter(*(_QWORD *)(v0 + 248), v19);
      if (v33 == *(_QWORD *)(v0 + 88))
        goto LABEL_8;
    }
  }
  sub_9FD100(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
  if (qword_14AC048 != -1)
    swift_once(&qword_14AC048, sub_AA6728);
  v6 = __swift_project_value_buffer(*(_QWORD *)(v0 + 176), (uint64_t)static Logger.motionInNowPlaying);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    swift_slowDealloc(v9, -1, -1);
  }
  v10 = *(_QWORD *)(v0 + 288);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 256) + 8))(*(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 248));

LABEL_9:
  swift_release(v10);
  v23 = *(_QWORD *)(v0 + 264);
  v24 = *(_QWORD *)(v0 + 240);
  v25 = *(_QWORD *)(v0 + 216);
  v26 = *(_QWORD *)(v0 + 192);
  v28 = *(_QWORD *)(v0 + 160);
  v27 = *(_QWORD *)(v0 + 168);
  v30 = *(_QWORD *)(v0 + 136);
  v29 = *(_QWORD *)(v0 + 144);
  swift_task_dealloc(*(_QWORD *)(v0 + 272));
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_9FCE7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  uint64_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;

  if (qword_14AC048 != -1)
    swift_once(&qword_14AC048, sub_AA6728);
  v1 = *(_QWORD *)(v0 + 320);
  v3 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 192);
  v4 = *(_QWORD *)(v0 + 176);
  v5 = __swift_project_value_buffer(v4, (uint64_t)static Logger.motionInNowPlaying);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  swift_errorRetain(v1);
  swift_errorRetain(v1);
  sub_D88B0();
  swift_bridgeObjectRelease();
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.error.getter(v7);
  v9 = os_log_type_enabled(v7, v8);
  v10 = *(_QWORD *)(v0 + 320);
  v11 = *(_QWORD *)(v0 + 184);
  if (v9)
  {
    v29 = *(_QWORD *)(v0 + 192);
    v30 = *(_QWORD *)(v0 + 176);
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v12 = 138412290;
    swift_errorRetain(v10);
    v14 = _swift_stdlib_bridgeErrorToNSError(v10);
    *(_QWORD *)(v0 + 72) = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 72, v0 + 80);
    *v13 = v14;
    swift_errorRelease(v10);
    swift_errorRelease(v10);
    _os_log_impl(&dword_0, v7, v8, "Editorial video artworks request failed: %@", v12, 0xCu);
    v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14B1FB0);
    swift_arrayDestroy(v13, 1, v15);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v29, v30);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v11 + 8))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 176));
    swift_errorRelease(v10);
    swift_errorRelease(v10);
  }
  v16 = *(_QWORD *)(v0 + 320);
  v17 = *(_QWORD *)(v0 + 288);
  v19 = *(_QWORD *)(v0 + 96);
  v18 = *(_QWORD *)(v0 + 104);

  sub_9FD100(v19, v18);
  swift_errorRelease(v16);
  swift_release(v17);
  v20 = *(_QWORD *)(v0 + 264);
  v21 = *(_QWORD *)(v0 + 240);
  v22 = *(_QWORD *)(v0 + 216);
  v23 = *(_QWORD *)(v0 + 192);
  v25 = *(_QWORD *)(v0 + 160);
  v24 = *(_QWORD *)(v0 + 168);
  v27 = *(_QWORD *)(v0 + 136);
  v26 = *(_QWORD *)(v0 + 144);
  swift_task_dealloc(*(_QWORD *)(v0 + 272));
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_9FD100(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  double result;
  uint64_t v17;
  _BYTE v18[24];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v4 = (uint64_t *)(a2 + OBJC_IVAR____TtC16MusicApplication31NowPlayingVideoArtworksMetadata_startedRequests);
    v5 = *(_QWORD *)(type metadata accessor for Album(0) - 8);
    v6 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v7 = *(_QWORD *)(v5 + 72);
    v8 = swift_bridgeObjectRetain();
    do
    {
      v9 = Album.id.getter(v8);
      v11 = v10;
      swift_beginAccess(v4, v18, 33, 0);
      swift_bridgeObjectRetain();
      v12 = sub_21BB38(v9, v11);
      LOBYTE(v9) = v13;
      swift_bridgeObjectRelease();
      if ((v9 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v4);
        v15 = *v4;
        v17 = *v4;
        *v4 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_76C040();
          v15 = v17;
        }
        swift_bridgeObjectRelease();
        sub_709118(v12, v15);
        *v4 = v15;
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_endAccess(v18);
      v6 += v7;
      --v2;
    }
    while (v2);
    *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  }
  return result;
}

void sub_9FD25C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t KeyPath;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  _QWORD v53[3];
  char v54[24];

  v4 = v3;
  v51 = a2;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14CCE60);
  __chkstk_darwin(v7);
  v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = type metadata accessor for EditorialVideoArtworkFlavor(0);
  v10 = *(_QWORD *)(v50 - 8);
  __chkstk_darwin(v50);
  v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for VideoArtwork(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v49 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_196D10((uint64_t)_swiftEmptyArrayStorage);
  v16 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v17 = (char *)objc_msgSend(v16, "userInterfaceIdiom");

  if (v17 != (_BYTE *)&dword_0 + 1
    && *((_BYTE *)v4 + OBJC_IVAR____TtC16MusicApplication31NowPlayingVideoArtworksMetadata_isAccessibilityContrastEnabled) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    goto LABEL_11;
  }
  static EditorialVideoArtworkFlavor.motionDetailSquare.getter(v18);
  if (*(_QWORD *)(a1 + 16) && (v19 = sub_21C19C((uint64_t)v12), (v20 & 1) != 0))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v9, *(_QWORD *)(a1 + 56) + *(_QWORD *)(v14 + 72) * v19, v13);
    v21 = 0;
  }
  else
  {
    v21 = 1;
  }
  v22 = v50;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v9, v21, 1, v13);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v22);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v13) != 1)
  {
    v24 = v49;
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v49, v9, v13);
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EF980);
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_14B5BD8);
    v27 = *(_QWORD *)(v26 - 8);
    v28 = *(_QWORD *)(v27 + 72);
    v29 = *(unsigned __int8 *)(v27 + 80);
    v30 = (v29 + 32) & ~v29;
    v31 = swift_allocObject(v25, v30 + v28, v29 | 7);
    *(_OWORD *)(v31 + 16) = xmmword_105B360;
    v32 = v31 + v30 + *(int *)(v26 + 48);
    static EditorialVideoArtworkFlavor.motionDetailSquare.getter(v31);
    (*(void (**)(uint64_t, char *, uint64_t))(v14 + 16))(v32, v24, v13);
    a1 = sub_196D10(v31);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v24, v13);
    swift_bridgeObjectRelease();
LABEL_11:
    v23 = a1;
    goto LABEL_12;
  }
  sub_56024((uint64_t)v9, &qword_14CCE60);
  v23 = v52;
LABEL_12:
  v33 = v51;
  swift_beginAccess(v4 + 2, v54, 1, 0);
  v34 = v4[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v35 = swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v35);
  v53[0] = v34;
  sub_1A0D58(v23, v33, a3, isUniquelyReferenced_nonNull_native);
  v37 = v53[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v38 = v4[2];
  v4[2] = v37;
  sub_9FB6AC(v38);
  swift_bridgeObjectRelease();
  swift_beginAccess((char *)v4 + OBJC_IVAR____TtC16MusicApplication31NowPlayingVideoArtworksMetadata_unusedItemsCounter, v53, 33, 0);
  swift_bridgeObjectRetain();
  sub_707C24(v33, a3);
  swift_endAccess(v53);
  swift_bridgeObjectRelease();
  v39 = v4[4];
  if (!v39)
    goto LABEL_18;
  v40 = v4[3];
  if ((v40 != v33 || v39 != a3) && (_stringCompareWithSmolCheck(_:_:expecting:)(v33, a3, v40, v39, 0) & 1) == 0)
    goto LABEL_18;
  KeyPath = swift_getKeyPath(&unk_1090B40);
  v42 = swift_getKeyPath(&off_1090B68);
  swift_bridgeObjectRetain();
  static Published.subscript.getter(v53, v4, KeyPath, v42);
  swift_release(v42);
  swift_release(KeyPath);
  v43 = v53[0];
  if (v53[0])
  {
    v44 = swift_bridgeObjectRetain();
    sub_770D58(v44, v43);
    v46 = v45;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n(v23, 2);
    if ((v46 & 1) != 0)
    {
LABEL_18:
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v47 = swift_getKeyPath(&unk_1090B40);
  v48 = swift_getKeyPath(&off_1090B68);
  v53[0] = v23;
  swift_retain(v4);
  static Published.subscript.setter(v53, v4, v47, v48);
}

void sub_9FD6F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;
  int64_t v6;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  BOOL v19;
  uint64_t v20;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v22;
  char v23;
  unint64_t v24;
  uint64_t v25;
  _BOOL8 v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  char v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  char v51;
  char v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  char v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int64_t v61;
  uint64_t v62;
  uint64_t v64;
  uint64_t v65;
  _QWORD v66[3];
  uint64_t v67[4];
  _BYTE v68[24];
  char v69[24];

  v2 = 1 << *(_BYTE *)(a1 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a1 + 56);
  v5 = (uint64_t *)(v1 + OBJC_IVAR____TtC16MusicApplication31NowPlayingVideoArtworksMetadata_unusedItemsCounter);
  swift_bridgeObjectRetain();
  swift_beginAccess(v5, v69, 0, 0);
  v6 = 0;
  v61 = (unint64_t)(v2 + 63) >> 6;
  while (1)
  {
    if (v4)
    {
      v7 = __clz(__rbit64(v4));
      v4 &= v4 - 1;
      v8 = v7 | (v6 << 6);
      goto LABEL_22;
    }
    v9 = v6 + 1;
    if (__OFADD__(v6, 1))
      goto LABEL_60;
    if (v9 >= v61)
      break;
    v10 = *(_QWORD *)(v60 + 8 * v9);
    ++v6;
    if (!v10)
    {
      v6 = v9 + 1;
      if (v9 + 1 >= v61)
        break;
      v10 = *(_QWORD *)(v60 + 8 * v6);
      if (!v10)
      {
        v6 = v9 + 2;
        if (v9 + 2 >= v61)
          break;
        v10 = *(_QWORD *)(v60 + 8 * v6);
        if (!v10)
        {
          v11 = v9 + 3;
          if (v11 >= v61)
            break;
          v10 = *(_QWORD *)(v60 + 8 * v11);
          if (!v10)
          {
            while (1)
            {
              v6 = v11 + 1;
              if (__OFADD__(v11, 1))
                goto LABEL_61;
              if (v6 >= v61)
                goto LABEL_39;
              v10 = *(_QWORD *)(v60 + 8 * v6);
              ++v11;
              if (v10)
                goto LABEL_21;
            }
          }
          v6 = v11;
        }
      }
    }
LABEL_21:
    v4 = (v10 - 1) & v10;
    v8 = __clz(__rbit64(v10)) + (v6 << 6);
LABEL_22:
    v12 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v8);
    v14 = *v12;
    v13 = v12[1];
    v15 = *v5;
    v16 = *(_QWORD *)(*v5 + 16);
    swift_bridgeObjectRetain();
    if (v16)
    {
      swift_bridgeObjectRetain();
      v17 = sub_21BB38(v14, v13);
      if ((v18 & 1) != 0)
        v16 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 8 * v17);
      else
        v16 = 0;
      swift_bridgeObjectRelease();
    }
    v19 = __OFADD__(v16, 1);
    v20 = v16 + 1;
    if (v19)
    {
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
LABEL_63:
      KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for MusicItemID);
      __break(1u);
      swift_release();
      __break(1u);
      return;
    }
    swift_beginAccess(v5, v68, 33, 0);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v5);
    v67[0] = *v5;
    v22 = (_QWORD *)v67[0];
    *v5 = 0x8000000000000000;
    v24 = sub_21BB38(v14, v13);
    v25 = v22[2];
    v26 = (v23 & 1) == 0;
    v27 = v25 + v26;
    if (__OFADD__(v25, v26))
      goto LABEL_58;
    v28 = v23;
    if (v22[3] >= v27)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v23 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_76B660();
        v22 = (_QWORD *)v67[0];
        if ((v28 & 1) != 0)
          goto LABEL_4;
      }
    }
    else
    {
      sub_76250C(v27, isUniquelyReferenced_nonNull_native);
      v22 = (_QWORD *)v67[0];
      v29 = sub_21BB38(v14, v13);
      if ((v28 & 1) != (v30 & 1))
        goto LABEL_63;
      v24 = v29;
      if ((v28 & 1) != 0)
      {
LABEL_4:
        *(_QWORD *)(v22[7] + 8 * v24) = v20;
        goto LABEL_5;
      }
    }
    v22[(v24 >> 6) + 8] |= 1 << v24;
    v31 = (uint64_t *)(v22[6] + 16 * v24);
    *v31 = v14;
    v31[1] = v13;
    *(_QWORD *)(v22[7] + 8 * v24) = v20;
    v32 = v22[2];
    v19 = __OFADD__(v32, 1);
    v33 = v32 + 1;
    if (v19)
      goto LABEL_59;
    v22[2] = v33;
    swift_bridgeObjectRetain();
LABEL_5:
    *v5 = (uint64_t)v22;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess(v68);
  }
LABEL_39:
  swift_release();
  swift_beginAccess(v5, v68, 0, 0);
  v34 = *v5;
  v35 = *(_QWORD *)(*v5 + 16);
  if (v35 < 0xB)
    return;
  swift_bridgeObjectRetain_n(*v5, 2);
  swift_retain();
  v36 = sub_3162CC(v34);
  swift_bridgeObjectRelease();
  v67[0] = v36;
  sub_9FF494(v67, v59);
  swift_release();
  swift_bridgeObjectRelease();
  v37 = v67[0];
  v38 = v35 - 10;
  if (*(_QWORD *)(v67[0] + 16) < v35 - 10)
    goto LABEL_62;
  v39 = (uint64_t *)(v59 + OBJC_IVAR____TtC16MusicApplication31NowPlayingVideoArtworksMetadata_startedRequests);
  swift_retain();
  swift_beginAccess(v59 + 16, v67, 1, 0);
  v62 = v37;
  v40 = (uint64_t *)(v37 + 40);
  do
  {
    v42 = *(v40 - 1);
    v41 = *v40;
    v43 = *(_QWORD *)(v59 + 16);
    swift_bridgeObjectRetain_n(*v40, 2);
    swift_bridgeObjectRetain_n(v43, 2);
    v44 = sub_21BB38(v42, v41);
    v46 = v45;
    swift_bridgeObjectRelease();
    if ((v46 & 1) != 0)
    {
      v47 = swift_isUniquelyReferenced_nonNull_native(v43);
      v66[0] = v43;
      if ((v47 & 1) == 0)
      {
        sub_76C1E8();
        v43 = v66[0];
      }
      swift_bridgeObjectRelease();
      sub_708C84(v44, v43);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v48 = *(_QWORD *)(v59 + 16);
    *(_QWORD *)(v59 + 16) = v43;
    sub_9FB6AC(v48);
    swift_bridgeObjectRelease();
    swift_beginAccess(v5, v66, 33, 0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v49 = sub_21BB38(v42, v41);
    v51 = v50;
    swift_bridgeObjectRelease();
    if ((v51 & 1) != 0)
    {
      v52 = swift_isUniquelyReferenced_nonNull_native(*v5);
      v53 = *v5;
      v64 = *v5;
      *v5 = 0x8000000000000000;
      if ((v52 & 1) == 0)
      {
        sub_76B660();
        v53 = v64;
      }
      swift_bridgeObjectRelease();
      sub_708C84(v49, v53);
      *v5 = v53;
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_endAccess(v66);
    swift_beginAccess(v39, v66, 33, 0);
    swift_bridgeObjectRetain();
    v54 = sub_21BB38(v42, v41);
    v56 = v55;
    swift_bridgeObjectRelease();
    if ((v56 & 1) != 0)
    {
      v57 = swift_isUniquelyReferenced_nonNull_native(*v39);
      v58 = *v39;
      v65 = *v39;
      *v39 = 0x8000000000000000;
      if ((v57 & 1) == 0)
      {
        sub_76C040();
        v58 = v65;
      }
      swift_bridgeObjectRelease();
      sub_709118(v54, v58);
      *v39 = v58;
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v40 += 2;
    swift_endAccess(v66);
    --v38;
  }
  while (v38);
  swift_release_n(v62, 2);
}

double sub_9FDD2C()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  unint64_t *v6;
  _BYTE v8[24];
  _BYTE v9[24];
  _BYTE v10[24];

  v1 = sub_19A38C((uint64_t)_swiftEmptyArrayStorage);
  swift_beginAccess(v0 + 2, v10, 1, 0);
  v2 = v0[2];
  v0[2] = v1;
  sub_9FB6AC(v2);
  swift_bridgeObjectRelease();
  v3 = sub_199E60((uint64_t)_swiftEmptyArrayStorage);
  v4 = (_QWORD *)((char *)v0 + OBJC_IVAR____TtC16MusicApplication31NowPlayingVideoArtworksMetadata_unusedItemsCounter);
  swift_beginAccess((char *)v0 + OBJC_IVAR____TtC16MusicApplication31NowPlayingVideoArtworksMetadata_unusedItemsCounter, v9, 1, 0);
  *v4 = v3;
  swift_bridgeObjectRelease();
  v5 = sub_19A4AC((uint64_t)_swiftEmptyArrayStorage);
  v6 = (_QWORD *)((char *)v0 + OBJC_IVAR____TtC16MusicApplication31NowPlayingVideoArtworksMetadata_startedRequests);
  swift_beginAccess((char *)v0 + OBJC_IVAR____TtC16MusicApplication31NowPlayingVideoArtworksMetadata_startedRequests, v8, 1, 0);
  *v6 = v5;
  swift_bridgeObjectRelease();
  v0[3] = 0;
  v0[4] = 0;
  swift_bridgeObjectRelease();
  return sub_9FB8B8();
}

double sub_9FDE14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC16MusicApplication31NowPlayingVideoArtworksMetadata__currentItem;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14CCF80);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&result = swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52)).n128_u64[0];
  return result;
}

uint64_t sub_9FDE98()
{
  return type metadata accessor for NowPlayingVideoArtworksMetadata(0);
}

uint64_t type metadata accessor for NowPlayingVideoArtworksMetadata(uint64_t a1)
{
  uint64_t result;

  result = qword_14EF7F0;
  if (!qword_14EF7F0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for NowPlayingVideoArtworksMetadata);
  return result;
}

void sub_9FDEDC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[1] = &unk_1090B10;
  sub_9FDF6C(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    v4[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[5] = &unk_1090B28;
    swift_updateClassMetadata2(a1, 256, 6, v4, a1 + 80);
  }
}

void sub_9FDF6C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_14EF800)
  {
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_14EF808);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_14EF800);
  }
}

_QWORD *sub_9FDFC4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  unint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14CCF80);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_19A38C((uint64_t)_swiftEmptyArrayStorage);
  v0[3] = 0;
  v0[4] = 0;
  v0[2] = v5;
  v6 = (char *)v0 + OBJC_IVAR____TtC16MusicApplication31NowPlayingVideoArtworksMetadata__currentItem;
  v12 = 0;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14EF808);
  Published.init(initialValue:)(&v12, v7);
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v6, v4, v1);
  v8 = OBJC_IVAR____TtC16MusicApplication31NowPlayingVideoArtworksMetadata_startedRequests;
  *(_QWORD *)((char *)v0 + v8) = sub_19A4AC((uint64_t)_swiftEmptyArrayStorage);
  v9 = OBJC_IVAR____TtC16MusicApplication31NowPlayingVideoArtworksMetadata_unusedItemsCounter;
  *(_QWORD *)((char *)v0 + v9) = sub_199E60((uint64_t)_swiftEmptyArrayStorage);
  *((_BYTE *)v0 + OBJC_IVAR____TtC16MusicApplication31NowPlayingVideoArtworksMetadata_isAccessibilityContrastEnabled) = 0;
  return v0;
}

_QWORD *sub_9FE0C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  uint64_t v12;
  __n128 v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t i;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  char v28;
  __n128 v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t, __n128);
  _QWORD *v32;
  unint64_t v33;
  unint64_t v34;
  char *v35;
  _QWORD v37[2];
  unint64_t v38;
  uint64_t (*v39)(char *, unint64_t, uint64_t, __n128);
  uint64_t v40;
  uint64_t *v41;
  char *v42;
  char v43[24];
  _QWORD *v44;

  v5 = type metadata accessor for Album(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v42 = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)v37 - v9;
  v11 = _swiftEmptyArrayStorage;
  v44 = _swiftEmptyArrayStorage;
  v12 = *(_QWORD *)(a1 + 16);
  v41 = (uint64_t *)(a2 + OBJC_IVAR____TtC16MusicApplication31NowPlayingVideoArtworksMetadata_startedRequests);
  v13 = swift_beginAccess(a2 + OBJC_IVAR____TtC16MusicApplication31NowPlayingVideoArtworksMetadata_startedRequests, v43, 0, 0);
  if (v12)
  {
    v14 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v15 = *(_QWORD *)(v6 + 72);
    v37[1] = v2;
    v38 = v14;
    v16 = a1 + v14;
    v39 = *(uint64_t (**)(char *, unint64_t, uint64_t, __n128))(v6 + 16);
    v40 = v15;
    v17 = v6;
    for (i = v39(v10, a1 + v14, v5, v13); ; i = v39(v10, v16, v5, v19))
    {
      v21 = Album.id.getter(i);
      v23 = v22;
      v24 = *v41;
      if (!*(_QWORD *)(*v41 + 16))
        goto LABEL_11;
      v25 = v21;
      swift_bridgeObjectRetain();
      v26 = sub_21BB38(v25, v23);
      if ((v27 & 1) == 0)
        break;
      v28 = *(_BYTE *)(*(_QWORD *)(v24 + 56) + v26);
      swift_bridgeObjectRelease();
      v29 = swift_bridgeObjectRelease();
      if ((v28 & 1) != 0)
      {
        (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v5);
        v20 = v40;
        goto LABEL_4;
      }
LABEL_12:
      v30 = v17;
      v31 = *(void (**)(char *, char *, uint64_t, __n128))(v17 + 32);
      v31(v42, v10, v5, v29);
      v32 = v44;
      if ((swift_isUniquelyReferenced_nonNull_native(v44) & 1) == 0)
      {
        sub_123F38(0, v32[2] + 1, 1);
        v32 = v44;
      }
      v34 = v32[2];
      v33 = v32[3];
      if (v34 >= v33 >> 1)
      {
        sub_123F38(v33 > 1, v34 + 1, 1);
        v32 = v44;
      }
      v32[2] = v34 + 1;
      v35 = (char *)v32 + v38 + v34 * v40;
      v20 = v40;
      ((void (*)(char *, char *, uint64_t))v31)(v35, v42, v5);
      v44 = v32;
      v17 = v30;
LABEL_4:
      v16 += v20;
      if (!--v12)
        return v44;
    }
    swift_bridgeObjectRelease();
LABEL_11:
    v29 = swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  return v11;
}

uint64_t sub_9FE318(uint64_t *__src, uint64_t *a2, unint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t *v6;
  uint64_t *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t *v29;
  uint64_t *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  uint64_t result;
  uint64_t v46;
  uint64_t *v47;
  uint64_t *v50;
  uint64_t *v51;
  _BYTE v52[24];
  char *v53;
  uint64_t *v54;
  uint64_t *v55;

  v6 = a2;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = (char *)a2 - (char *)__src + 15;
  if ((char *)a2 - (char *)__src >= 0)
    v9 = (char *)a2 - (char *)__src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v55 = __src;
  v54 = a4;
  if (v10 >= v12 >> 4)
  {
    if (v11 < -15)
      goto LABEL_68;
    if (a4 != a2 || &a2[2 * v13] <= a4)
      memmove(a4, a2, 16 * v13);
    v29 = &a4[2 * v13];
    v53 = (char *)v29;
    v55 = v6;
    if (v7 >= v6 || v11 < 16)
    {
LABEL_67:
      sub_68DB04((void **)&v55, (const void **)&v54, &v53);
      return 1;
    }
    v51 = (uint64_t *)(a5 + OBJC_IVAR____TtC16MusicApplication31NowPlayingVideoArtworksMetadata_unusedItemsCounter);
    swift_beginAccess(a5 + OBJC_IVAR____TtC16MusicApplication31NowPlayingVideoArtworksMetadata_unusedItemsCounter, v52, 0, 0);
    v30 = (uint64_t *)(a3 - 16);
    v31 = v6;
    v47 = v7;
    while (1)
    {
      v32 = *(v29 - 1);
      v33 = *(v31 - 2);
      v34 = *(v31 - 1);
      v31 -= 2;
      v35 = *v51;
      if (*(_QWORD *)(*v51 + 16))
      {
        v36 = v33;
        v37 = *(v29 - 2);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v38 = sub_21BB38(v37, v32);
        if ((v39 & 1) != 0)
        {
          v40 = *(_QWORD *)(*(_QWORD *)(v35 + 56) + 8 * v38);
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          v40 = 0;
        }
        v33 = v36;
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v40 = 0;
      }
      v41 = v30 + 2;
      v42 = *v51;
      if (*(_QWORD *)(*v51 + 16))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v43 = sub_21BB38(v33, v34);
        if ((v44 & 1) != 0)
        {
          v46 = *(_QWORD *)(*(_QWORD *)(v42 + 56) + 8 * v43);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n(v34, 2);
          if (v46 >= v40)
            goto LABEL_54;
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n(v34, 2);
          if (v40 <= 0)
          {
LABEL_54:
            v53 = (char *)(v29 - 2);
            if (v41 < v29 || v30 >= v29 || v41 != v29)
              *(_OWORD *)v30 = *((_OWORD *)v29 - 1);
            v31 = v6;
            v29 -= 2;
            if (v6 <= v47)
              goto LABEL_67;
            goto LABEL_44;
          }
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v40 <= 0)
          goto LABEL_54;
      }
      if (v41 != v6 || v30 >= v6)
        *(_OWORD *)v30 = *(_OWORD *)v31;
      v55 = v31;
      if (v31 <= v47)
        goto LABEL_67;
LABEL_44:
      v30 -= 2;
      v6 = v31;
      if (v29 <= a4)
        goto LABEL_67;
    }
  }
  if (v8 >= -15)
  {
    if (a4 != __src || &__src[2 * v10] <= a4)
      memmove(a4, __src, 16 * v10);
    v50 = &a4[2 * v10];
    v53 = (char *)v50;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      v14 = (uint64_t *)(a5 + OBJC_IVAR____TtC16MusicApplication31NowPlayingVideoArtworksMetadata_unusedItemsCounter);
      swift_beginAccess(a5 + OBJC_IVAR____TtC16MusicApplication31NowPlayingVideoArtworksMetadata_unusedItemsCounter, v52, 0, 0);
      v15 = a4;
      while (1)
      {
        v16 = v6[1];
        v17 = *v15;
        v18 = v15[1];
        v19 = *v14;
        if (*(_QWORD *)(*v14 + 16))
        {
          v20 = *v6;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v21 = sub_21BB38(v20, v16);
          if ((v22 & 1) != 0)
          {
            v23 = *(_QWORD *)(*(_QWORD *)(v19 + 56) + 8 * v21);
            swift_bridgeObjectRelease();
            goto LABEL_19;
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        v23 = 0;
LABEL_19:
        v24 = *v14;
        if (*(_QWORD *)(*v14 + 16))
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v25 = sub_21BB38(v17, v18);
          if ((v26 & 1) != 0)
          {
            v27 = *(_QWORD *)(*(_QWORD *)(v24 + 56) + 8 * v25);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n(v18, 2);
            if (v27 < v23)
              goto LABEL_26;
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n(v18, 2);
            if (v23 > 0)
            {
LABEL_26:
              v28 = v6 + 2;
              if (v7 < v6 || v7 >= v28 || v7 != v6)
                *(_OWORD *)v7 = *(_OWORD *)v6;
              goto LABEL_30;
            }
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v23 > 0)
            goto LABEL_26;
        }
        if (v7 != v15)
          *(_OWORD *)v7 = *(_OWORD *)v15;
        v15 += 2;
        v54 = v15;
        v28 = v6;
LABEL_30:
        v7 += 2;
        if (v15 < v50)
        {
          v6 = v28;
          if ((unint64_t)v28 < a3)
            continue;
        }
        v55 = v7;
        goto LABEL_67;
      }
    }
    goto LABEL_67;
  }
LABEL_68:
  swift_release(a5);
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

void sub_9FE82C(uint64_t *a1, uint64_t a2)
{
  Swift::Int v3;
  Swift::Int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  Swift::Int v13;
  unint64_t v14;
  Swift::Int v15;
  char *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t *v29;
  uint64_t *v30;
  Swift::Int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  Swift::Int v47;
  Swift::Int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  Swift::Int v52;
  uint64_t v53;
  uint64_t *v54;
  Swift::Int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  char *v71;
  char *v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  BOOL v84;
  unint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  BOOL v95;
  uint64_t v96;
  char v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  BOOL v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  char *v114;
  uint64_t v115;
  unint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t *v119;
  uint64_t *v120;
  unint64_t v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  char v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  char v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v142;
  unint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t *v146;
  char *v147;
  unint64_t v148;
  uint64_t *v149;
  uint64_t v150;
  _QWORD *v151;
  Swift::Int v152;
  Swift::Int v153;
  Swift::Int v154;
  uint64_t *v155;
  char *v156;
  uint64_t *v157;
  Swift::Int v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  Swift::Int v168;
  Swift::Int v169;
  uint64_t *v170;
  _BYTE v171[32];
  uint64_t v172;

  v3 = a1[1];
  swift_retain_n(a2, 3);
  v4 = _minimumMergeRunLength(_:)(v3);
  v158 = v3;
  if (v4 >= v3)
  {
    if (v3 < 0)
      goto LABEL_194;
    if (!v3)
    {
      v10 = a2;
      v8 = a2;
      v9 = 2;
      goto LABEL_156;
    }
    v8 = a2;
    if (v3 == 1)
    {
      v9 = 2;
      v10 = a2;
      goto LABEL_156;
    }
    v123 = *a1;
    v124 = a2 + OBJC_IVAR____TtC16MusicApplication31NowPlayingVideoArtworksMetadata_unusedItemsCounter;
    swift_retain(a2);
    v172 = v123;
    v125 = (uint64_t *)(v123 + 16);
    v126 = -1;
    v127 = 1;
LABEL_137:
    swift_beginAccess(v124, v171, 0, 0);
    v162 = v127;
    v128 = *(_QWORD *)(v172 + 16 * v127 + 8);
    v166 = v126;
    v170 = v125;
    while (1)
    {
      v130 = *(v125 - 2);
      v129 = *(v125 - 1);
      v131 = *(_QWORD *)v124;
      if (!*(_QWORD *)(*(_QWORD *)v124 + 16))
        break;
      v132 = *v125;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v133 = sub_21BB38(v132, v128);
      if ((v134 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_143;
      }
      v135 = *(_QWORD *)(*(_QWORD *)(v131 + 56) + 8 * v133);
      swift_bridgeObjectRelease();
LABEL_144:
      v136 = *(_QWORD *)v124;
      if (*(_QWORD *)(*(_QWORD *)v124 + 16))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v137 = sub_21BB38(v130, v129);
        if ((v138 & 1) != 0)
        {
          v139 = *(_QWORD *)(*(_QWORD *)(v136 + 56) + 8 * v137);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n(v129, 2);
          if (v139 >= v135)
            goto LABEL_136;
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n(v129, 2);
          if (v135 <= 0)
            goto LABEL_136;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v135 <= 0)
          goto LABEL_136;
      }
      if (!v172)
        goto LABEL_198;
      v140 = *v125;
      v128 = v125[1];
      *(_OWORD *)v125 = *((_OWORD *)v125 - 1);
      *(v125 - 1) = v128;
      *(v125 - 2) = v140;
      v125 -= 2;
      if (__CFADD__(v126++, 1))
      {
LABEL_136:
        v127 = v162 + 1;
        v125 = v170 + 2;
        v126 = v166 - 1;
        if (v162 + 1 != v158)
          goto LABEL_137;
        v10 = a2;
        v8 = a2;
        v9 = 3;
LABEL_156:
        swift_release_n(v8, v9);
LABEL_157:
        swift_release(v10);
        return;
      }
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_143:
    v135 = 0;
    goto LABEL_144;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_203;
  v152 = v4;
  v149 = a1;
  if (v3 < 2)
  {
    v11 = (char *)_swiftEmptyArrayStorage;
    v157 = &_swiftEmptyArrayStorage[4];
    v151 = _swiftEmptyArrayStorage;
    if (v3 != 1)
    {
      v14 = _swiftEmptyArrayStorage[2];
LABEL_159:
      if (v14 >= 2)
      {
        v142 = *v149;
        do
        {
          v143 = v14 - 2;
          if (v14 < 2)
            goto LABEL_189;
          if (!v142)
            goto LABEL_202;
          v144 = *(_QWORD *)&v11[16 * v143 + 32];
          v145 = *(_QWORD *)&v11[16 * v14 + 24];
          v146 = (uint64_t *)(v142 + 16 * *(_QWORD *)&v11[16 * v14 + 16]);
          swift_retain(a2);
          sub_9FE318((uint64_t *)(v142 + 16 * v144), v146, v142 + 16 * v145, v157, a2);
          if (v164)
            goto LABEL_171;
          swift_release(a2);
          if (v145 < v144)
            goto LABEL_190;
          if ((swift_isUniquelyReferenced_nonNull_native(v11) & 1) == 0)
            v11 = sub_68DF10((uint64_t)v11);
          if (v143 >= *((_QWORD *)v11 + 2))
            goto LABEL_191;
          v147 = &v11[16 * v143 + 32];
          *(_QWORD *)v147 = v144;
          *((_QWORD *)v147 + 1) = v145;
          v148 = *((_QWORD *)v11 + 2);
          if (v14 > v148)
            goto LABEL_192;
          memmove(&v11[16 * v14 + 16], &v11[16 * v14 + 32], 16 * (v148 - v14));
          *((_QWORD *)v11 + 2) = v148 - 1;
          v14 = v148 - 1;
        }
        while (v148 > 2);
      }
      swift_bridgeObjectRelease();
      v151[2] = 0;
      v10 = a2;
      swift_release_n(a2, 2);
      swift_bridgeObjectRelease();
      goto LABEL_157;
    }
  }
  else
  {
    v6 = v5 >> 1;
    v7 = static Array._allocateBufferUninitialized(minimumCapacity:)(v5 >> 1, &type metadata for MusicItemID);
    *(_QWORD *)(v7 + 16) = v6;
    v151 = (_QWORD *)v7;
    v157 = (uint64_t *)(v7 + 32);
  }
  v12 = *a1;
  v172 = a2 + OBJC_IVAR____TtC16MusicApplication31NowPlayingVideoArtworksMetadata_unusedItemsCounter;
  swift_beginAccess(a2 + OBJC_IVAR____TtC16MusicApplication31NowPlayingVideoArtworksMetadata_unusedItemsCounter, v171, 0, 0);
  v13 = 0;
  v165 = v12;
  v150 = v12 + 24;
  v11 = (char *)_swiftEmptyArrayStorage;
  while (2)
  {
    v15 = v13 + 1;
    v154 = v13;
    if (v13 + 1 >= v3)
      goto LABEL_56;
    v16 = v11;
    v17 = (uint64_t *)(v165 + 16 * v15);
    v18 = v17[1];
    v19 = (uint64_t *)(v165 + 16 * v13);
    v20 = *v19;
    v21 = v19[1];
    v22 = *(_QWORD *)v172;
    if (!*(_QWORD *)(*(_QWORD *)v172 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_22:
      v167 = 0;
      goto LABEL_23;
    }
    v23 = *v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v24 = sub_21BB38(v23, v18);
    if ((v25 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
    v167 = *(_QWORD *)(*(_QWORD *)(v22 + 56) + 8 * v24);
    swift_bridgeObjectRelease();
LABEL_23:
    v26 = *(_QWORD *)v172;
    if (*(_QWORD *)(*(_QWORD *)v172 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v27 = sub_21BB38(v20, v21);
      if ((v28 & 1) != 0)
        v159 = *(_QWORD *)(*(_QWORD *)(v26 + 56) + 8 * v27);
      else
        v159 = 0;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v159 = 0;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v15 = v13 + 2;
    if (v13 + 2 >= v3)
      goto LABEL_48;
    v29 = (uint64_t *)(v150 + 16 * v13);
    v30 = v29;
    while (1)
    {
      v31 = v15;
      v33 = v30[2];
      v30 += 2;
      v32 = v33;
      v34 = *(v29 - 1);
      v35 = *v29;
      v36 = *(_QWORD *)v172;
      if (*(_QWORD *)(*(_QWORD *)v172 + 16))
      {
        v37 = v29[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v38 = sub_21BB38(v37, v32);
        if ((v39 & 1) != 0)
        {
          v40 = *(_QWORD *)(*(_QWORD *)(v36 + 56) + 8 * v38);
          swift_bridgeObjectRelease();
          goto LABEL_37;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      v40 = 0;
LABEL_37:
      v41 = *(_QWORD *)v172;
      if (*(_QWORD *)(*(_QWORD *)v172 + 16))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v42 = sub_21BB38(v34, v35);
        v44 = (v43 & 1) != 0 ? *(_QWORD *)(*(_QWORD *)(v41 + 56) + 8 * v42) : 0;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        v44 = 0;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v159 < v167 == v44 >= v40)
        break;
      v15 = v31 + 1;
      v29 = v30;
      if (v158 == v31 + 1)
      {
        v3 = v158;
        v15 = v158;
        goto LABEL_47;
      }
    }
    v3 = v158;
    v15 = v31;
LABEL_47:
    v13 = v154;
LABEL_48:
    v11 = v16;
    if (v159 < v167)
    {
      if (v15 < v13)
        goto LABEL_195;
      if (v13 < v15)
      {
        v45 = 16 * v15;
        v46 = 16 * v13;
        v47 = v15;
        v48 = v13;
        do
        {
          if (v48 != --v47)
          {
            if (!v165)
              goto LABEL_201;
            v49 = v165 + v45;
            v50 = *(_QWORD *)(v165 + v46);
            v51 = *(_QWORD *)(v165 + v46 + 8);
            *(_OWORD *)(v165 + v46) = *(_OWORD *)(v165 + v45 - 16);
            *(_QWORD *)(v49 - 16) = v50;
            *(_QWORD *)(v49 - 8) = v51;
          }
          ++v48;
          v45 -= 16;
          v46 += 16;
        }
        while (v48 < v47);
      }
    }
LABEL_56:
    if (v15 >= v3)
      goto LABEL_85;
    if (__OFSUB__(v15, v13))
      goto LABEL_193;
    if (v15 - v13 >= v152)
      goto LABEL_85;
    v52 = v13 + v152;
    if (__OFADD__(v13, v152))
      goto LABEL_196;
    if (v52 >= v3)
      v52 = v3;
    if (v52 >= v13)
    {
      if (v15 == v52)
        goto LABEL_85;
      v160 = v11;
      v53 = v165;
      v54 = (uint64_t *)(v165 + 16 * v15);
      v153 = v52;
      while (2)
      {
        v56 = *(_QWORD *)(v53 + 16 * v15 + 8);
        v155 = v54;
        v168 = v15;
        while (2)
        {
          v57 = *(v54 - 2);
          v58 = *(v54 - 1);
          v59 = *(_QWORD *)v172;
          if (*(_QWORD *)(*(_QWORD *)v172 + 16))
          {
            v60 = *v54;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v61 = sub_21BB38(v60, v56);
            if ((v62 & 1) != 0)
            {
              v63 = *(_QWORD *)(*(_QWORD *)(v59 + 56) + 8 * v61);
              swift_bridgeObjectRelease();
              goto LABEL_74;
            }
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          v63 = 0;
LABEL_74:
          v64 = *(_QWORD *)v172;
          if (!*(_QWORD *)(*(_QWORD *)v172 + 16))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v63 <= 0)
              goto LABEL_65;
LABEL_81:
            v55 = v168;
            if (!v53)
              goto LABEL_199;
            v68 = *v54;
            v56 = v54[1];
            *(_OWORD *)v54 = *((_OWORD *)v54 - 1);
            *(v54 - 1) = v56;
            *(v54 - 2) = v68;
            v54 -= 2;
            if (v168 == ++v13)
              goto LABEL_66;
            continue;
          }
          break;
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v65 = sub_21BB38(v57, v58);
        if ((v66 & 1) != 0)
        {
          v67 = *(_QWORD *)(*(_QWORD *)(v64 + 56) + 8 * v65);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n(v58, 2);
          v102 = v67 < v63;
          v53 = v165;
          if (!v102)
            goto LABEL_65;
          goto LABEL_81;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n(v58, 2);
        if (v63 > 0)
          goto LABEL_81;
LABEL_65:
        v55 = v168;
LABEL_66:
        v15 = v55 + 1;
        v13 = v154;
        v54 = v155 + 2;
        if (v15 != v153)
          continue;
        break;
      }
      v15 = v153;
      v11 = v160;
LABEL_85:
      if (v15 < v13)
        goto LABEL_188;
      v169 = v15;
      if ((swift_isUniquelyReferenced_nonNull_native(v11) & 1) == 0)
        v11 = sub_68D8D0(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
      v70 = *((_QWORD *)v11 + 2);
      v69 = *((_QWORD *)v11 + 3);
      v14 = v70 + 1;
      if (v70 >= v69 >> 1)
        v11 = sub_68D8D0((char *)(v69 > 1), v70 + 1, 1, v11);
      *((_QWORD *)v11 + 2) = v14;
      v71 = v11 + 32;
      v72 = &v11[16 * v70 + 32];
      *(_QWORD *)v72 = v13;
      *((_QWORD *)v72 + 1) = v169;
      if (!v70)
      {
        v14 = 1;
LABEL_15:
        v3 = v158;
        v13 = v169;
        if (v169 >= v158)
          goto LABEL_159;
        continue;
      }
      v161 = v11;
      v156 = v11 + 32;
LABEL_92:
      v73 = v14 - 1;
      if (v14 >= 4)
      {
        v78 = &v71[16 * v14];
        v79 = *((_QWORD *)v78 - 8);
        v80 = *((_QWORD *)v78 - 7);
        v84 = __OFSUB__(v80, v79);
        v81 = v80 - v79;
        if (v84)
          goto LABEL_177;
        v83 = *((_QWORD *)v78 - 6);
        v82 = *((_QWORD *)v78 - 5);
        v84 = __OFSUB__(v82, v83);
        v76 = v82 - v83;
        v77 = v84;
        if (v84)
          goto LABEL_178;
        v85 = v14 - 2;
        v86 = &v71[16 * v14 - 32];
        v88 = *(_QWORD *)v86;
        v87 = *((_QWORD *)v86 + 1);
        v84 = __OFSUB__(v87, v88);
        v89 = v87 - v88;
        if (v84)
          goto LABEL_180;
        v84 = __OFADD__(v76, v89);
        v90 = v76 + v89;
        if (v84)
          goto LABEL_183;
        if (v90 >= v81)
        {
          v109 = &v71[16 * v73];
          v111 = *(_QWORD *)v109;
          v110 = *((_QWORD *)v109 + 1);
          v84 = __OFSUB__(v110, v111);
          v112 = v110 - v111;
          v91 = v165;
          if (v84)
            goto LABEL_187;
          v102 = v76 < v112;
        }
        else
        {
LABEL_105:
          v91 = v165;
          if ((v77 & 1) != 0)
            goto LABEL_179;
          v85 = v14 - 2;
          v92 = &v71[16 * v14 - 32];
          v94 = *(_QWORD *)v92;
          v93 = *((_QWORD *)v92 + 1);
          v95 = __OFSUB__(v93, v94);
          v96 = v93 - v94;
          v97 = v95;
          if (v95)
            goto LABEL_182;
          v98 = &v71[16 * v73];
          v100 = *(_QWORD *)v98;
          v99 = *((_QWORD *)v98 + 1);
          v84 = __OFSUB__(v99, v100);
          v101 = v99 - v100;
          if (v84)
            goto LABEL_185;
          if (__OFADD__(v96, v101))
            goto LABEL_186;
          if (v96 + v101 < v76)
            goto LABEL_118;
          v102 = v76 < v101;
        }
        if (v102)
          v73 = v85;
      }
      else
      {
        if (v14 == 3)
        {
          v75 = *((_QWORD *)v11 + 4);
          v74 = *((_QWORD *)v11 + 5);
          v84 = __OFSUB__(v74, v75);
          v76 = v74 - v75;
          v77 = v84;
          goto LABEL_105;
        }
        v103 = *((_QWORD *)v11 + 4);
        v104 = *((_QWORD *)v11 + 5);
        v84 = __OFSUB__(v104, v103);
        v96 = v104 - v103;
        v97 = v84;
        v91 = v165;
LABEL_118:
        if ((v97 & 1) != 0)
          goto LABEL_181;
        v105 = &v71[16 * v73];
        v107 = *(_QWORD *)v105;
        v106 = *((_QWORD *)v105 + 1);
        v84 = __OFSUB__(v106, v107);
        v108 = v106 - v107;
        if (v84)
          goto LABEL_184;
        if (v108 < v96)
          goto LABEL_15;
      }
      v113 = v73 - 1;
      if (v73 - 1 >= v14)
      {
        __break(1u);
LABEL_174:
        __break(1u);
LABEL_175:
        __break(1u);
LABEL_176:
        __break(1u);
LABEL_177:
        __break(1u);
LABEL_178:
        __break(1u);
LABEL_179:
        __break(1u);
LABEL_180:
        __break(1u);
LABEL_181:
        __break(1u);
LABEL_182:
        __break(1u);
LABEL_183:
        __break(1u);
LABEL_184:
        __break(1u);
LABEL_185:
        __break(1u);
LABEL_186:
        __break(1u);
LABEL_187:
        __break(1u);
LABEL_188:
        __break(1u);
LABEL_189:
        __break(1u);
LABEL_190:
        __break(1u);
LABEL_191:
        __break(1u);
LABEL_192:
        __break(1u);
LABEL_193:
        __break(1u);
LABEL_194:
        __break(1u);
LABEL_195:
        __break(1u);
LABEL_196:
        __break(1u);
        break;
      }
      if (!v91)
        goto LABEL_200;
      v114 = &v71[16 * v113];
      v115 = *(_QWORD *)v114;
      v116 = v73;
      v117 = &v71[16 * v73];
      v118 = *((_QWORD *)v117 + 1);
      v119 = (uint64_t *)(v91 + 16 * *(_QWORD *)v114);
      v120 = (uint64_t *)(v91 + 16 * *(_QWORD *)v117);
      v121 = v91 + 16 * v118;
      swift_retain(a2);
      sub_9FE318(v119, v120, v121, v157, a2);
      if (v164)
      {
LABEL_171:
        swift_bridgeObjectRelease();
        swift_release(a2);
        v151[2] = 0;
        swift_release_n(a2, 3);
        swift_bridgeObjectRelease();
        return;
      }
      swift_release(a2);
      if (v118 < v115)
        goto LABEL_174;
      v11 = v161;
      if (v116 > *((_QWORD *)v161 + 2))
        goto LABEL_175;
      *(_QWORD *)v114 = v115;
      v71 = v156;
      *(_QWORD *)&v156[16 * v113 + 8] = v118;
      v122 = *((_QWORD *)v161 + 2);
      if (v116 >= v122)
        goto LABEL_176;
      v14 = v122 - 1;
      memmove(v117, v117 + 16, 16 * (v122 - 1 - v116));
      *((_QWORD *)v161 + 2) = v122 - 1;
      if (v122 <= 2)
        goto LABEL_15;
      goto LABEL_92;
    }
    break;
  }
  __break(1u);
LABEL_198:
  __break(1u);
LABEL_199:
  swift_release_n(a2, 3);
  __break(1u);
LABEL_200:
  swift_release_n(a2, 3);
  __break(1u);
LABEL_201:
  swift_release_n(a2, 3);
  __break(1u);
LABEL_202:
  swift_release_n(a2, 3);
  __break(1u);
LABEL_203:
  swift_release_n(a2, 4);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

uint64_t sub_9FF494(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7[2];

  v4 = *a1;
  swift_retain_n(a2, 2);
  if ((swift_isUniquelyReferenced_nonNull_native(v4) & 1) == 0)
    v4 = sub_68DFC4(v4);
  v5 = *(_QWORD *)(v4 + 16);
  v7[0] = v4 + 32;
  v7[1] = v5;
  swift_retain(a2);
  sub_9FE82C(v7, a2);
  swift_release(a2);
  *a1 = v4;
  return swift_release_n(a2, 2);
}

uint64_t sub_9FF538()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_bridgeObjectRelease(v0[5]);
  swift_release(v0[6]);
  swift_bridgeObjectRelease(v0[7]);
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_9FF57C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v9 = v1[6];
  v8 = v1[7];
  v10 = (_QWORD *)swift_task_alloc(dword_14EF98C);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_50F8C;
  return sub_9FC6B0(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_9FF608(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for Album(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_9FF648()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14BAFE0;
  if (!qword_14BAFE0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14D7E40);
    result = swift_getWitnessTable(&protocol conformance descriptor for MusicItemCollection<A>, v1);
    atomic_store(result, (unint64_t *)&qword_14BAFE0);
  }
  return result;
}

uint64_t sub_9FF694(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AE160);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_9FF6DC(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_A05B6C();
}

void sub_9FF700()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  double v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  double *v8;
  double v9;
  void *v10;
  id v11;
  char *v12;
  id v13;
  uint64_t ObjCClassMetadata;
  uint64_t v15;
  id v16;
  uint64_t v17;
  _QWORD v18[2];
  __int128 v19;
  objc_super v20;

  v1 = v0;
  v20.receiver = v0;
  v20.super_class = (Class)type metadata accessor for JSLiveRadioCaseViewController(0);
  objc_msgSendSuper2(&v20, "viewDidLayoutSubviews");
  v2 = objc_msgSend(v0, "view");
  if (!v2)
  {
    __break(1u);
    goto LABEL_11;
  }
  v3 = v2;
  objc_msgSend(v2, "bounds");
  v5 = v4;
  v7 = v6;

  type metadata accessor for CGSize(0);
  v8 = (double *)&v1[qword_14EF9C8];
  v19 = *(_OWORD *)&v1[qword_14EF9C8];
  *(double *)v18 = v5;
  v18[1] = v7;
  if ((static ApproximatelyEquatable.!=~ infix(_:_:)(&v19, v18) & 1) == 0)
    goto LABEL_7;
  v9 = *v8;
  if (*v8 != v5)
    sub_A05038();
  *v8 = v5;
  *((_QWORD *)v8 + 1) = v7;
  objc_msgSend(v1, "loadViewIfNeeded", v9);
  v10 = *(void **)&v1[qword_14DB768];
  if (!v10)
  {
LABEL_11:
    __break(1u);
    return;
  }
  v11 = objc_msgSend(v10, "collectionViewLayout");
  v12 = &v1[qword_14EF9C0];
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = 0;
  v12[16] = 1;
  v13 = objc_msgSend((id)swift_getObjCClassFromObject(v11), "invalidationContextClass");
  ObjCClassMetadata = swift_getObjCClassMetadata(v13);
  v15 = sub_4E684(0, (unint64_t *)&unk_14DD3E0, UICollectionViewLayoutInvalidationContext_ptr);
  swift_dynamicCastMetatypeUnconditional(ObjCClassMetadata, v15, 0, 0, 0);
  v16 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  objc_msgSend(v11, "invalidateLayoutWithContext:", v16);

LABEL_7:
  v17 = *(_QWORD *)&v1[qword_1581738];
  if (v17)
  {
    swift_retain(*(_QWORD *)&v1[qword_1581738]);
    sub_8187C0();
    swift_release(v17);
  }
}

void sub_9FF8D8(void *a1)
{
  id v1;

  v1 = a1;
  sub_9FF700();

}

void sub_9FF90C()
{
  char *v0;
  char *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  _QWORD *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  objc_super v32;

  v1 = v0;
  v32.receiver = v0;
  v32.super_class = (Class)type metadata accessor for JSLiveRadioCaseViewController(0);
  objc_msgSendSuper2(&v32, "viewDidLoad");
  objc_msgSend(v0, "loadViewIfNeeded");
  v2 = *(void **)&v0[qword_14DB768];
  if (v2)
  {
    v3 = *(void **)&v0[qword_14DB760];
    v4 = type metadata accessor for CollectionViewArtworkVideoPlaybackController(0);
    swift_allocObject(v4, 256, 7);
    v5 = v3;
    v6 = sub_817970(v2, v3);
    *(_BYTE *)(v6 + 224) = sub_A04C48();
    v7 = sub_A04818();
    v8 = *(unsigned __int8 *)(v6 + 56);
    *((_BYTE *)v7 + 80) = v8;
    if (v8 == 1)
      *((_BYTE *)v7 + 144) = 1;
    swift_release(v7);
    v9 = swift_allocObject(&unk_13938C0, 24, 7);
    swift_unknownObjectWeakInit(v9 + 16);
    v10 = *(_QWORD *)(v6 + 40);
    v11 = *(_QWORD *)(v6 + 48);
    *(_QWORD *)(v6 + 40) = sub_A06388;
    *(_QWORD *)(v6 + 48) = v9;
    sub_5C198(v10, v11);
    v12 = swift_allocObject(&unk_13938C0, 24, 7);
    swift_unknownObjectWeakInit(v12 + 16);
    v13 = *(_QWORD *)(v6 + 80);
    v14 = *(_QWORD *)(v6 + 88);
    *(_QWORD *)(v6 + 80) = sub_A06390;
    *(_QWORD *)(v6 + 88) = v12;
    sub_5C198(v13, v14);
    v15 = swift_allocObject(&unk_13938C0, 24, 7);
    swift_unknownObjectWeakInit(v15 + 16);
    v16 = *(_QWORD *)(v6 + 96);
    v17 = *(_QWORD *)(v6 + 104);
    *(_QWORD *)(v6 + 96) = sub_A06398;
    *(_QWORD *)(v6 + 104) = v15;
    sub_5C198(v16, v17);
    v18 = swift_allocObject(&unk_13938C0, 24, 7);
    swift_unknownObjectWeakInit(v18 + 16);
    v19 = *(_QWORD *)(v6 + 112);
    v20 = *(_QWORD *)(v6 + 120);
    *(_QWORD *)(v6 + 112) = sub_A063A0;
    *(_QWORD *)(v6 + 120) = v18;
    sub_5C198(v19, v20);
    v21 = swift_allocObject(&unk_13938C0, 24, 7);
    swift_unknownObjectWeakInit(v21 + 16);
    v22 = *(_QWORD *)(v6 + 64);
    v23 = *(_QWORD *)(v6 + 72);
    *(_QWORD *)(v6 + 64) = sub_A063A8;
    *(_QWORD *)(v6 + 72) = v21;
    sub_5C198(v22, v23);
    v24 = swift_allocObject(&unk_13938C0, 24, 7);
    swift_unknownObjectWeakInit(v24 + 16);
    v25 = *(_QWORD *)(v6 + 128);
    v26 = *(_QWORD *)(v6 + 136);
    *(_QWORD *)(v6 + 128) = sub_A063B0;
    *(_QWORD *)(v6 + 136) = v24;
    sub_5C198(v25, v26);
    v27 = *(_QWORD *)&v1[qword_1581738];
    *(_QWORD *)&v1[qword_1581738] = v6;
    swift_retain(v6);
    swift_release(v27);
    v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14F01F0);
    swift_allocObject(v28, 48, 7);
    v29 = ArtworkVideoReportingController.init()();
    (*(void (**)(_QWORD))(*v29 + 136))(*(unsigned __int8 *)(v6 + 56));
    v30 = swift_allocObject(&unk_13938C0, 24, 7);
    swift_unknownObjectWeakInit(v30 + 16);
    (*(void (**)(void (*)(uint64_t), uint64_t))(*v29 + 160))(sub_A063B8, v30);
    v31 = *(_QWORD *)&v1[qword_14EF9B8];
    *(_QWORD *)&v1[qword_14EF9B8] = v29;
    swift_release(v6);
    swift_release(v31);
  }
  else
  {
    __break(1u);
  }
}

double sub_9FFBC8(char a1, uint64_t a2)
{
  uint64_t v3;
  char *Strong;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  double result;
  void *v9;
  _QWORD *v10;
  uint64_t v11;
  _BYTE v12[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v12, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    v6 = *(_QWORD *)&Strong[qword_14EF9B8];
    if (v6)
    {
      swift_retain(*(_QWORD *)&Strong[qword_14EF9B8]);

      (*(void (**)(_QWORD))(*(_QWORD *)v6 + 136))(a1 & 1);
      swift_release(v6);
    }
    else
    {

    }
  }
  swift_beginAccess(v3, &v11, 0, 0);
  v7 = swift_unknownObjectWeakLoadStrong(v3);
  if (v7)
  {
    v9 = (void *)v7;
    v10 = sub_A04818();

    *((_BYTE *)v10 + 80) = a1 & 1;
    if ((a1 & 1) != 0)
      *((_BYTE *)v10 + 144) = 1;
    *(_QWORD *)&result = swift_release(v10).n128_u64[0];
  }
  return result;
}

void sub_9FFCA8(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v5;
  char *Strong;
  void *v7;
  uint64_t v8;
  _BYTE v9[24];

  v5 = a3 + 16;
  swift_beginAccess(a3 + 16, v9, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = Strong;
    v8 = *(_QWORD *)&Strong[qword_14EF9B8];
    if (v8)
    {
      swift_retain(*(_QWORD *)&Strong[qword_14EF9B8]);

      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v8 + 192))(a1, a2 & 1);
      swift_release(v8);
    }
    else
    {

    }
  }
}

double sub_9FFD44(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char *Strong;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  double result;
  void *v9;
  _QWORD *v10;
  uint64_t v11;
  _BYTE v12[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v12, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    v6 = *(_QWORD *)&Strong[qword_14EF9B8];
    if (v6)
    {
      swift_retain(*(_QWORD *)&Strong[qword_14EF9B8]);

      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 216))(a1);
      swift_release(v6);
    }
    else
    {

    }
  }
  swift_beginAccess(v3, &v11, 0, 0);
  v7 = swift_unknownObjectWeakLoadStrong(v3);
  if (v7)
  {
    v9 = (void *)v7;
    v10 = sub_A04818();

    sub_A82F28(a1);
    *(_QWORD *)&result = swift_release(v10).n128_u64[0];
  }
  return result;
}

void sub_9FFE1C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char *Strong;
  void *v5;
  uint64_t v6;
  _BYTE v7[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    v6 = *(_QWORD *)&Strong[qword_14EF9B8];
    if (v6)
    {
      swift_retain(*(_QWORD *)&Strong[qword_14EF9B8]);

      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 224))(a1);
      swift_release(v6);
    }
    else
    {

    }
  }
}

void sub_9FFEB0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char *Strong;
  void *v5;
  uint64_t v6;
  _BYTE v7[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    v6 = *(_QWORD *)&Strong[qword_14EF9B8];
    if (v6)
    {
      swift_retain(*(_QWORD *)&Strong[qword_14EF9B8]);

      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 200))(a1);
      swift_release(v6);
    }
    else
    {

    }
  }
}

void sub_9FFF44(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char *Strong;
  void *v5;
  uint64_t v6;
  _BYTE v7[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    v6 = *(_QWORD *)&Strong[qword_14EF9B8];
    if (v6)
    {
      swift_retain(*(_QWORD *)&Strong[qword_14EF9B8]);

      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 208))(a1);
      swift_release(v6);
    }
    else
    {

    }
  }
}

void sub_9FFFD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char *Strong;
  void *v4;
  void *v5;
  id v6;
  id v7;
  Class isa;
  id v9;
  void *v10;
  id v11;
  uint64_t *v12;
  _BYTE v13[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v13, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = Strong;
    v5 = *(void **)&Strong[qword_14DB760];
    if (v5)
    {
      v6 = v5;

      v7 = objc_msgSend(v6, "results");
      if (v7)
      {
        isa = IndexPath._bridgeToObjectiveC()().super.isa;
        v9 = objc_msgSend(v7, "itemAtIndexPath:", isa);

        if (v9)
        {
          objc_opt_self(MusicModelLiveRadioCaseItem);
          v10 = (void *)swift_dynamicCastObjCClass(v9);
          if (v10)
          {
            swift_unknownObjectRetain(v9);
            v11 = objc_msgSend(v10, "contentItem");
            swift_unknownObjectRelease(v9);
            if (v11)
            {
              v12 = (uint64_t *)MPIdentifierSet.Purpose.Options.catalog.unsafeMutableAddressor();
              MPModelObject.bestIdentifier(for:)(*v12, 1u);

            }
          }
          swift_unknownObjectRelease(v9);
        }
      }
      else
      {
        __break(1u);
      }
    }
    else
    {

    }
  }
}

void sub_A00150(void *a1)
{
  id v1;

  v1 = a1;
  sub_9FF90C();

}

id sub_A00184(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  NSString v3;
  _BYTE v5[24];

  v1 = *(_QWORD *)(a1 + qword_14EF9B0) + OBJC_IVAR____TtC11MusicJSCore11JSViewModel_playActivityFeatureName;
  swift_beginAccess(v1, v5, 0, 0);
  v2 = *(_QWORD *)(v1 + 8);
  swift_bridgeObjectRetain(v2);
  v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v2);
  return v3;
}

Class sub_A00200()
{
  uint64_t v0;
  unint64_t v1;
  Class isa;
  uint64_t v3;
  unint64_t v4;

  v0 = JSViewModel.playActivityRecommendationData.getter();
  if (v1 >> 60 == 15)
  {
    isa = 0;
  }
  else
  {
    v3 = v0;
    v4 = v1;
    isa = Data._bridgeToObjectiveC()().super.isa;
    sub_50C4C(v3, v4);
  }
  return isa;
}

double sub_A00264(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_A05C58(a2, a3);
}

void sub_A00270(void *a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;

  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a5);
  v13 = a3;
  v14 = a4;
  v15 = a5;
  v16 = a1;
  sub_A05C58(v14, (uint64_t)v12);

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

void sub_A00344(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  objc_class *v10;
  unsigned int v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  id v23;
  BOOL v24;
  char *v25;
  void *v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  void (*v32)(char *, unint64_t, uint64_t);
  char *v33;
  void (*v34)(char *, uint64_t, uint64_t, uint64_t);
  void *v35;
  id v36;
  Class isa;
  id v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  char *v42;
  void *v43;
  id v44;
  void *v45;
  Class v46;
  id v47;
  void *v48;
  uint64_t v49;
  char *v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, unint64_t, uint64_t);
  uint64_t v58;
  char *v59;
  objc_super v60;

  v2 = v1;
  v4 = type metadata accessor for IndexPath(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v59 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD540);
  __chkstk_darwin(v7);
  v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (objc_class *)type metadata accessor for JSLiveRadioCaseViewController(0);
  v60.receiver = v1;
  v60.super_class = v10;
  objc_msgSendSuper2(&v60, "traitCollectionDidChange:", a1);
  v11 = objc_msgSend(v1, "isViewLoaded");
  v54 = v1;
  v55 = v5;
  if (v11)
  {
    v12 = objc_msgSend(v1, "traitCollection");
    v13 = objc_msgSend(v12, "horizontalSizeClass");

    if (a1 && v13 == objc_msgSend(a1, "horizontalSizeClass"))
    {
      v14 = objc_msgSend(v2, "traitCollection");
      v15 = objc_msgSend(v14, "preferredContentSizeCategory");

      v16 = objc_msgSend(a1, "preferredContentSizeCategory");
      v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
      v19 = v18;
      v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
      if (v17 == v21 && v19 == v20)
      {

        swift_bridgeObjectRelease_n(v19, 2);
        v2 = v54;
        v5 = v55;
        goto LABEL_9;
      }
      v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v17, v19, v21, v20, 0);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v2 = v54;
      v5 = v55;
      if ((v22 & 1) != 0)
        goto LABEL_9;
    }
    sub_A05038();
  }
LABEL_9:
  v23 = objc_msgSend(v2, "traitCollection");
  v24 = UITraitCollection.isMediaPicker.getter();

  v25 = v2;
  if (!a1 || UITraitCollection.isMediaPicker.getter() != v24)
  {
    objc_msgSend(v2, "loadViewIfNeeded");
    v58 = qword_14DB768;
    v26 = *(void **)&v2[qword_14DB768];
    if (v26)
    {
      v27 = v26;
      v28 = objc_msgSend(v27, "indexPathsForVisibleItems");
      v29 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v28, v4);

      v30 = *(_QWORD *)(v29 + 16);
      v52 = v29;
      if (v30)
      {
        v53 = qword_14DB760;
        v31 = v29 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
        v32 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
        v56 = *(_QWORD *)(v5 + 72);
        v57 = v32;
        v33 = v59;
        v32(v9, v31, v4);
        while (1)
        {
          v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
          v34(v9, 0, 1, v4);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v9, 1, v4) == 1)
            goto LABEL_31;
          (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v33, v9, v4);
          objc_msgSend(v25, "loadViewIfNeeded", v52);
          v35 = *(void **)&v25[v58];
          if (!v35)
          {
            __break(1u);
LABEL_34:
            __break(1u);
            goto LABEL_35;
          }
          v36 = v35;
          isa = IndexPath._bridgeToObjectiveC()().super.isa;
          v38 = objc_msgSend(v36, "cellForItemAtIndexPath:", isa);

          if (!v38)
            goto LABEL_15;
          v39 = type metadata accessor for LiveRadioCell(0);
          v40 = swift_dynamicCastClass(v38, v39);
          if (!v40)
          {

            v5 = v55;
LABEL_15:
            v33 = v59;
            (*(void (**)(char *, uint64_t))(v5 + 8))(v59, v4);
            goto LABEL_16;
          }
          v42 = (char *)v40;
          v43 = *(void **)&v25[v53];
          v33 = v59;
          if (v43)
          {
            v44 = objc_msgSend(v43, "results");
            if (!v44)
              goto LABEL_34;
            v45 = v44;
            v46 = IndexPath._bridgeToObjectiveC()().super.isa;
            v47 = objc_msgSend(v45, "itemAtIndexPath:", v46);

            v33 = v59;
            if (v47)
            {
              objc_opt_self(MusicModelLiveRadioCaseItem);
              v48 = (void *)swift_dynamicCastObjCClass(v47);
              if (v48)
              {
                v49 = (uint64_t)v33;
                v50 = v54;
                sub_A009A4(v42, v48, v49);
                v5 = v55;
                (*(void (**)(char *, uint64_t))(v55 + 8))(v59, v4);

                v51 = v47;
                v25 = v50;
                v33 = v59;
                swift_unknownObjectRelease(v51);
                goto LABEL_16;
              }
              v41 = swift_unknownObjectRelease(v47);
            }
          }
          v5 = v55;
          (*(void (**)(char *, uint64_t, __n128))(v55 + 8))(v33, v4, v41);

          v25 = v54;
LABEL_16:
          v31 += v56;
          if (!--v30)
            goto LABEL_30;
          v57(v9, v31, v4);
        }
      }
      v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
LABEL_30:
      v34(v9, 1, 1, v4);
LABEL_31:
      swift_bridgeObjectRelease();
    }
    else
    {
LABEL_35:
      __break(1u);
    }
  }
}

void sub_A00844(void *a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;

  v5 = a3;
  v6 = a1;
  sub_A00344(a3);

}

void sub_A0089C(void *a1)
{
  uint64_t ObjCClassFromMetadata;
  NSString v3;
  uint64_t v4;
  id v5;

  sub_876E60(a1);
  objc_msgSend(a1, "setShowsHorizontalScrollIndicator:", 0);
  objc_msgSend(a1, "setShowsVerticalScrollIndicator:", 0);
  type metadata accessor for LiveRadioCell(0);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  type metadata accessor for FeaturedMaterialCell(0);
  static UICollectionReusableView.reuseIdentifier.getter();
  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(a1, "registerClass:forCellWithReuseIdentifier:", ObjCClassFromMetadata, v3, swift_bridgeObjectRelease().n128_f64[0]);

  sub_4E684(0, (unint64_t *)&qword_14B5260, UICollectionViewCell_ptr);
  v4 = swift_getObjCClassFromMetadata();
  v5 = String._bridgeToObjectiveC()();
  objc_msgSend(a1, "registerClass:forCellWithReuseIdentifier:", v4, v5);

}

void sub_A009A4(char *a1, void *a2, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  id v17;
  id v18;
  unsigned __int8 v19;
  void *v20;
  char *v21;
  id v22;
  uint64_t v23;
  BOOL v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  void *v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  NSString v57;
  void *v58;
  NSString v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t, uint64_t);
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(uint64_t, char *, uint64_t);
  char *v72;
  void (**v73)(void *, uint64_t);
  uint64_t v74;
  uint64_t v75;
  id v76;
  void (*v77)(char *, uint64_t, uint64_t);
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  void (*v83)(char *, uint64_t, uint64_t);
  uint64_t v84;
  uint64_t v85;
  char *v86;
  unint64_t v87;
  char *v88;
  unint64_t v89;
  uint64_t v90;
  void *v91;
  double (**v92)(uint64_t, void *);
  uint64_t v93;
  uint64_t v94;
  id v95;
  double (*v96)(uint64_t, void *);
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void (*v105)(char *, uint64_t, uint64_t);
  uint64_t v106;
  void (**v107)();
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *boxed_opaque_existential_1Tm;
  uint64_t v113;
  _BYTE *v114;
  id v115;
  id v116;
  void *v117;
  uint64_t v118;
  uint64_t v119;
  id v120;
  id v121;
  void *v122;
  void (*v123)(char *, uint64_t, uint64_t);
  void *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  void (*v128)(uint64_t, char *, uint64_t);
  char *v129;
  uint64_t v130;
  char *v131;
  void *v132;
  id v133;
  uint64_t v134;
  void *v135;
  uint64_t v136;
  uint64_t v137;
  id v138;
  char *v139;
  _BYTE v140[24];
  _BYTE v141[40];
  _QWORD v142[5];
  char v143[16];

  v4 = v3;
  v8 = type metadata accessor for CollectionViewCellArtworkComponentLoggingContext(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v123 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for IndexPath(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin(v11);
  v15 = __chkstk_darwin(v14);
  v139 = (char *)&v123 - v16;
  v17 = objc_msgSend(a2, "contentItem", v15);
  if (!v17)
    return;
  v136 = v12;
  v137 = v11;
  v138 = v17;
  v18 = MPModelStoreBrowseContentItem.kind.getter();
  v20 = v18;
  if (v19 != 5)
  {
    if (v19 != 255)
      sub_CBD68(v18, v19);

    return;
  }
  v131 = v10;
  v21 = (char *)(*(_QWORD *)&v4[qword_14EF9B0] + OBJC_IVAR____TtC11MusicJSCore15JSLiveRadioCase_usesFlowLayout);
  swift_beginAccess(v21, v143, 0, 0);
  a1[OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_alwaysUseCompactLayout] = *v21;
  v133 = v20;
  v22 = sub_33D154();
  v23 = IndexPath.item.getter(v22);
  v135 = v4;
  v24 = v23 < (uint64_t)sub_A04A40();
  a1[OBJC_IVAR____TtC16MusicApplication13LiveRadioCell_isHeaderRowCell] = v24;
  v25 = objc_msgSend(a2, "headerTitleText");
  if (v25)
  {
    v26 = v25;
    v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
    v29 = v28;

  }
  else
  {
    v27 = 0;
    v29 = 0xE000000000000000;
  }
  v30 = objc_msgSend(a2, "headerSubtitleText", sub_33BEB4(v27, v29));
  if (v30)
  {
    v31 = v30;
    v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
    v34 = v33;

  }
  else
  {
    v32 = 0;
    v34 = 0xE000000000000000;
  }
  v35 = objc_msgSend(a2, "headlineText", sub_33BF84(v32, v34));
  if (v35)
  {
    v36 = v35;
    v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
    v39 = v38;

  }
  else
  {
    v37 = 0;
    v39 = 0xE000000000000000;
  }
  v40 = objc_msgSend(a2, "titleText", sub_33C058(v37, v39));
  if (v40 || (v40 = objc_msgSend(v133, "name")) != 0)
  {
    v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
    v43 = v42;

  }
  else
  {
    v41 = 0;
    v43 = 0xE000000000000000;
  }
  v44 = objc_msgSend(a2, "subtitleText", sub_33C168(v41, v43));
  if (v44 || (v44 = objc_msgSend(v133, "shortEditorNotes")) != 0)
  {
    v45 = static String._unconditionallyBridgeFromObjectiveC(_:)(v44);
    v47 = v46;

  }
  else
  {
    v45 = 0;
    v47 = 0xE000000000000000;
  }
  v48 = objc_msgSend(a2, "accessoryButtonTitleText", sub_33C278(v45, v47));
  v134 = a3;
  if (v48)
  {
    v49 = v48;
    v50 = static String._unconditionallyBridgeFromObjectiveC(_:)(v48);
    v52 = v51;

  }
  else
  {
    v50 = 0;
    v52 = 0xE000000000000000;
  }
  v53 = (uint64_t *)&a1[OBJC_IVAR____TtC16MusicApplication13LiveRadioCell_accessoryButtonTitle];
  v54 = *(_QWORD *)&a1[OBJC_IVAR____TtC16MusicApplication13LiveRadioCell_accessoryButtonTitle];
  v55 = *(_QWORD *)&a1[OBJC_IVAR____TtC16MusicApplication13LiveRadioCell_accessoryButtonTitle + 8];
  *v53 = v50;
  v53[1] = v52;
  v132 = v20;
  v130 = v8;
  v125 = (char *)&v123 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = a1;
  v124 = a2;
  if (v54 == v50 && v55 == v52 || (_stringCompareWithSmolCheck(_:_:expecting:)(v54, v55, v50, v52, 0) & 1) != 0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v56 = *(void **)&a1[OBJC_IVAR____TtC16MusicApplication13LiveRadioCell_accessoryButton];
    swift_bridgeObjectRetain();
    v57 = String._bridgeToObjectiveC()();
    objc_msgSend(v56, "setTitle:forState:", v57, 0, swift_bridgeObjectRelease().n128_f64[0]);

    v58 = *(void **)&a1[OBJC_IVAR____TtC16MusicApplication13LiveRadioCell_accessoryCalendarButton];
    swift_bridgeObjectRetain();
    v59 = String._bridgeToObjectiveC()();
    objc_msgSend(v58, "setAccessibilityLabel:", v59, swift_bridgeObjectRelease().n128_f64[0]);

    v60 = objc_msgSend(a1, "traitCollection");
    sub_33C388(v60);
    swift_bridgeObjectRelease();

  }
  v61 = v134;
  v63 = v135;
  v62 = v136;
  v64 = swift_allocObject(&unk_13938C0, 24, 7);
  swift_unknownObjectWeakInit(v64 + 16);
  v65 = *(void (**)(char *, uint64_t, uint64_t))(v62 + 16);
  v66 = v139;
  v67 = v137;
  v65(v139, v61, v137);
  v68 = *(unsigned __int8 *)(v62 + 80);
  v127 = ~v68;
  v69 = (v68 + 24) & ~v68;
  v126 = v68;
  v136 = v68 | 7;
  v70 = swift_allocObject(&unk_1393960, v69 + v13, v68 | 7);
  *(_QWORD *)(v70 + 16) = v64;
  v71 = *(void (**)(uint64_t, char *, uint64_t))(v62 + 32);
  v71(v70 + v69, v66, v67);
  v72 = v129;
  v73 = (void (**)(void *, uint64_t))&v129[OBJC_IVAR____TtC16MusicApplication13LiveRadioCell_accessoryButtonHandler];
  v74 = *(_QWORD *)&v129[OBJC_IVAR____TtC16MusicApplication13LiveRadioCell_accessoryButtonHandler];
  v75 = *(_QWORD *)&v129[OBJC_IVAR____TtC16MusicApplication13LiveRadioCell_accessoryButtonHandler + 8];
  *v73 = sub_A05EB8;
  v73[1] = (void (*)(void *, uint64_t))v70;
  sub_5C198(v74, v75);
  v76 = objc_msgSend(v63, "traitCollection");
  LOBYTE(v64) = UITraitCollection.isMediaPicker.getter();

  v128 = v71;
  if ((v64 & 1) == 0)
  {
    v85 = swift_allocObject(&unk_13938C0, 24, 7);
    swift_unknownObjectWeakInit(v85 + 16);
    v86 = v125;
    v123 = (void (*)(_QWORD, _QWORD, _QWORD))v65;
    v65(v125, v134, v67);
    v87 = (v69 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
    v88 = v72;
    v89 = (v87 + 15) & 0xFFFFFFFFFFFFFFF8;
    v90 = swift_allocObject(&unk_1393988, v89 + 8, v136);
    *(_QWORD *)(v90 + 16) = v85;
    v71(v90 + v69, v86, v67);
    *(_QWORD *)(v90 + v87) = v133;
    v91 = v124;
    *(_QWORD *)(v90 + v89) = v124;
    v92 = (double (**)(uint64_t, void *))&v88[OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_playButtonHandler];
    v93 = *(_QWORD *)&v88[OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_playButtonHandler];
    v94 = *(_QWORD *)&v88[OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_playButtonHandler + 8];
    *v92 = sub_A05FA8;
    v92[1] = (double (*)(uint64_t, void *))v90;
    sub_103D50(v132, 5);
    swift_retain(v85);
    v95 = v91;
    swift_retain(v90);
    sub_A9DEC(v93, v94);
    sub_5C198(v93, v94);
    v96 = *v92;
    v82 = v88;
    if (v93)
    {
      v84 = v126;
      if (v96)
      {
LABEL_41:
        sub_5C198(v93, v94);
        goto LABEL_42;
      }
    }
    else
    {
      v84 = v126;
      if (!v96)
      {
LABEL_42:
        swift_release(v85);
        swift_release(v90);
        v83 = (void (*)(char *, uint64_t, uint64_t))v123;
        goto LABEL_43;
      }
    }
    objc_msgSend(v88, "setNeedsLayout");
    goto LABEL_41;
  }
  v77 = (void (*)(_QWORD, _QWORD, _QWORD))v65;
  v78 = &v72[OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_playButtonHandler];
  v79 = *(_QWORD *)&v72[OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_playButtonHandler];
  v80 = *(_QWORD *)&v72[OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_playButtonHandler + 8];
  *(_QWORD *)v78 = 0;
  *((_QWORD *)v78 + 1) = 0;
  sub_A9DEC(v79, v80);
  sub_5C198(v79, v80);
  v81 = *(_QWORD *)v78;
  v82 = v72;
  if (v79)
  {
    v83 = (void (*)(char *, uint64_t, uint64_t))v77;
    v84 = v126;
    if (v81)
    {
LABEL_38:
      sub_5C198(v79, v80);
      goto LABEL_43;
    }
LABEL_37:
    objc_msgSend(v82, "setNeedsLayout");
    goto LABEL_38;
  }
  v83 = (void (*)(char *, uint64_t, uint64_t))v77;
  v84 = v126;
  if (v81)
    goto LABEL_37;
LABEL_43:
  v97 = *(_QWORD *)&v82[OBJC_IVAR____TtC16MusicApplication32VerticalLockupCollectionViewCell_artworkComponent];
  v98 = swift_allocObject(&unk_13938C0, 24, 7);
  swift_unknownObjectWeakInit(v98 + 16);
  v99 = swift_allocObject(&unk_13939B0, 24, 7);
  swift_unknownObjectWeakInit(v99 + 16);
  v100 = v139;
  v101 = v134;
  v102 = v137;
  v83(v139, v134, v137);
  v103 = (v84 + 32) & v127;
  v104 = swift_allocObject(&unk_13939D8, v103 + v13, v136);
  v105 = v83;
  v106 = v104;
  *(_QWORD *)(v104 + 16) = v98;
  *(_QWORD *)(v104 + 24) = v99;
  v128(v104 + v103, v100, v102);
  v107 = (void (**)())(v97 + OBJC_IVAR____TtCE16MusicApplicationV11MusicCoreUI7Artwork9Component_imageDidChangeHandler);
  v108 = *(_QWORD *)(v97 + OBJC_IVAR____TtCE16MusicApplicationV11MusicCoreUI7Artwork9Component_imageDidChangeHandler);
  v109 = *(_QWORD *)(v97 + OBJC_IVAR____TtCE16MusicApplicationV11MusicCoreUI7Artwork9Component_imageDidChangeHandler + 8);
  *v107 = sub_A06094;
  v107[1] = (void (*)())v106;
  sub_5C198(v108, v109);
  v110 = (uint64_t)v131;
  v105(v131, v101, v102);
  v111 = v130;
  swift_unknownObjectWeakInit(v110 + *(int *)(v130 + 20));
  v142[3] = v111;
  v142[4] = sub_4DD24(&qword_14E5E58, type metadata accessor for CollectionViewCellArtworkComponentLoggingContext, (uint64_t)&unk_1063770);
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v142);
  sub_5BDB8(v110, (uint64_t)boxed_opaque_existential_1Tm, type metadata accessor for CollectionViewCellArtworkComponentLoggingContext);
  sub_5C090((uint64_t)v142, (uint64_t)v141, (uint64_t *)&unk_14E5E60);
  v113 = v97 + OBJC_IVAR____TtCE16MusicApplicationV11MusicCoreUI7Artwork9Component_loggingContext;
  swift_beginAccess(v97 + OBJC_IVAR____TtCE16MusicApplicationV11MusicCoreUI7Artwork9Component_loggingContext, v140, 33, 0);
  sub_5C1F4((uint64_t)v141, v113, (uint64_t *)&unk_14E5E60);
  swift_endAccess(v140);
  v114 = v135;
  v115 = sub_A83260();
  v116 = v133;
  v117 = v132;
  v118 = sub_27BE18(v132);
  sub_CBD68(v117, 5);

  sub_33C87C(objc_msgSend(v116, "shouldVisuallyDisableFor:", v118));
  sub_33C790(v114[qword_14EF9A0]);
  v119 = *(_QWORD *)&v114[qword_1581738];
  if (v119)
  {
    swift_retain(*(_QWORD *)&v114[qword_1581738]);
    sub_817B44(v101, v82);
    swift_release(v119);
  }
  v120 = v138;
  v121 = objc_msgSend(v120, "innermostModelObject");
  sub_39BC7C((uint64_t)v142);

  v122 = sub_39B9D8((uint64_t)v142);
  sub_56024((uint64_t)v142, (uint64_t *)&unk_14B0AD0);

  sub_CBD68(v117, 5);
  sub_CBD68(v117, 5);
  sub_5C0DC(v110, type metadata accessor for CollectionViewCellArtworkComponentLoggingContext);

}

void sub_A01478(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t Strong;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  Class isa;
  id v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  double v26;
  double v27;
  double v28;
  double v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  id v34;
  void *v35;
  NSString *v36;
  SEL v37;
  id v38;
  void *v39;
  id v40;
  double v41;
  CGFloat v42;
  double v43;
  CGFloat v44;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  id v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  _BYTE v53[32];
  uint64_t v54;
  _BYTE v55[72];
  _BYTE v56[24];
  _QWORD v57[5];
  char v58;
  CGRect v59;
  CGRect v60;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14B0AC0);
  __chkstk_darwin(v5);
  v7 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3 += 16;
  swift_beginAccess(a3, v56, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a3);
  if (Strong)
  {
    v9 = (void *)Strong;
    v10 = *(void **)(Strong + qword_14DB760);
    if (!v10
      || (v11 = type metadata accessor for JSLiveRadioCaseModelResponse(), (v12 = swift_dynamicCastClass(v10, v11)) == 0))
    {

      return;
    }
    v13 = *(void **)(v12 + OBJC_IVAR____TtC16MusicApplication28JSLiveRadioCaseModelResponse_jsResults);
    v14 = v10;
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v16 = objc_msgSend(v13, "itemAtIndexPath:", isa);

    v17 = type metadata accessor for JSLiveRadioCaseItem(0);
    v18 = swift_dynamicCastClass(v16, v17);
    if (!v18)
    {

      swift_unknownObjectRelease(v16);
      return;
    }
    v19 = (void *)v18;
    v20 = (void *)*JSSegueCoordinator.shared.unsafeMutableAddressor();
    v21 = type metadata accessor for VerticalLockupCollectionViewCell(0);
    v22 = swift_dynamicCastClass(a1, v21);
    if (v22)
    {
      v23 = *(void **)(*(_QWORD *)(v22
                                 + OBJC_IVAR____TtC16MusicApplication32VerticalLockupCollectionViewCell_artworkComponent)
                     + 144);
      v24 = v20;
      v25 = v9;
      objc_msgSend(v23, "frame");
    }
    else
    {
      objc_opt_self(UICollectionReusableView);
      v30 = (void *)swift_dynamicCastObjCClass(a1);
      v31 = v20;
      v32 = v9;
      if (v30)
      {
        v33 = a1;
        v34 = objc_msgSend(v30, "_collectionView");
        if (v34)
        {
          v35 = v34;
          v52 = v33;
          v36 = (NSString *)String._bridgeToObjectiveC()();
          v37 = NSSelectorFromString(v36);

          if (objc_msgSend(v35, "respondsToSelector:", v37))
          {
            v38 = objc_msgSend(v35, "_currentTouch");
            if (v38)
            {
              v39 = v38;
              v40 = v52;
              objc_msgSend(v38, "locationInView:", v52);
              v42 = v41;
              v44 = v43;

              v59.size.width = 0.0;
              v59.size.height = 0.0;
              v59.origin.x = v42;
              v59.origin.y = v44;
              v60 = CGRectInset(v59, -20.0, -20.0);
              x = v60.origin.x;
              y = v60.origin.y;
              width = v60.size.width;
              height = v60.size.height;

LABEL_19:
              v57[0] = a1;
              *(CGFloat *)&v57[1] = x;
              *(CGFloat *)&v57[2] = y;
              *(CGFloat *)&v57[3] = width;
              *(CGFloat *)&v57[4] = height;
              v58 = 0;
              v49 = a1;
              PresentationSource.init(viewController:position:)(v9, (uint64_t)v57, (uint64_t)v55);
              v50 = type metadata accessor for PlaybackIntentDescriptor(0);
              memset(v53, 0, sizeof(v53));
              v54 = 0;
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v7, 1, 1, v50);
              sub_907A7C(v19, 1, (uint64_t)v55, 0, 0, (uint64_t)v53, (uint64_t)v7, 0);

              sub_56024((uint64_t)v7, (uint64_t *)&unk_14B0AC0);
              sub_56024((uint64_t)v53, (uint64_t *)&unk_14B2930);
              sub_56060((uint64_t)v55);

              swift_unknownObjectRelease(v16);
              return;
            }
          }

        }
        else
        {
          v35 = v33;
        }

      }
      objc_msgSend(a1, "bounds");
    }
    x = v26;
    y = v27;
    width = v28;
    height = v29;
    goto LABEL_19;
  }
}

double sub_A01840(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t Strong;
  double result;
  void *v16;
  void *v17;
  uint64_t v18;
  char *v19;
  void *v20;
  Class isa;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  id v54;
  id v55;
  uint64_t v56;
  id v57;
  id v58;
  id v59;
  id v60;
  uint64_t v61;
  id v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  void *v68;
  id v69;
  _BYTE v70[72];
  char v71[24];
  _QWORD v72[5];
  char v73;

  v10 = type metadata accessor for IndexPath(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  v13 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3 += 16;
  swift_beginAccess(a3, v71, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a3);
  if (Strong)
  {
    v16 = (void *)Strong;
    v17 = *(void **)(Strong + qword_14DB760);
    if (v17
      && (v18 = type metadata accessor for JSLiveRadioCaseModelResponse(),
          (v19 = (char *)swift_dynamicCastClass(v17, v18)) != 0))
    {
      v66 = a2;
      v68 = v19;
      v20 = *(void **)&v19[OBJC_IVAR____TtC16MusicApplication28JSLiveRadioCaseModelResponse_jsResults];
      v69 = v17;
      v67 = a4;
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      v22 = objc_msgSend(v20, "itemAtIndexPath:", isa);

      v23 = type metadata accessor for JSLiveRadioCaseItem(0);
      v24 = swift_dynamicCastClass(v22, v23);
      if (v24
        && (v25 = v24,
            v26 = (uint64_t *)MPIdentifierSet.Purpose.Options.catalog.unsafeMutableAddressor(),
            v27 = MPModelObject.bestIdentifier(for:)(*v26, 1u),
            v28))
      {
        v65 = v28;
        v64 = v27;
        v29 = objc_msgSend(a6, "innermostModelObject");
        v63 = v29;
        v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14B0AC0);
        v61 = swift_allocBox(v30);
        v32 = v31;
        v33 = v29;
        v60 = v33;
        v34 = v16;
        v62 = v22;
        v35 = v34;
        sub_5AE34C(v29, (objc_class *)v16, (uint64_t)static MPMediaLibraryFilteringOptions.none.getter, 0, v32);

        v36 = v35;
        v37 = v66;
        objc_msgSend(v66, "bounds");
        v72[0] = v37;
        v72[1] = v38;
        v72[2] = v39;
        v72[3] = v40;
        v72[4] = v41;
        v73 = 0;
        v42 = v37;
        PresentationSource.init(viewController:position:)(v36, (uint64_t)v72, (uint64_t)v70);
        v43 = v36;
        v66 = sub_A83260();

        v59 = v43;
        v44 = swift_allocObject(&unk_13938C0, 24, 7);
        swift_unknownObjectWeakInit(v44 + 16);
        (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v67, v10);
        v45 = *(unsigned __int8 *)(v11 + 80);
        v46 = (v45 + 32) & ~v45;
        v47 = (v12 + v46 + 7) & 0xFFFFFFFFFFFFFFF8;
        v48 = (v47 + 23) & 0xFFFFFFFFFFFFFFF8;
        v49 = v25;
        v50 = swift_allocObject(&unk_1393A00, v48 + 8, v45 | 7);
        v51 = v61;
        *(_QWORD *)(v50 + 16) = v61;
        *(_QWORD *)(v50 + 24) = v44;
        (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v50 + v46, v13, v10);
        v52 = (uint64_t *)(v50 + v47);
        v53 = v65;
        *v52 = v64;
        v52[1] = v53;
        *(_QWORD *)(v50 + v48) = v49;
        v54 = v69;
        v55 = v60;
        v56 = v51;
        swift_retain(v51);
        swift_retain(v44);
        v57 = v62;
        swift_unknownObjectRetain(v62);
        v58 = v66;
        sub_280D90(v63, v68, 0, 1, (uint64_t)v70, (void (*)(uint64_t, double))sub_A06170, v50);

        swift_unknownObjectRelease(v57);
        sub_56060((uint64_t)v70);
        swift_release(v56);

        swift_release(v44);
        *(_QWORD *)&result = swift_release(v50).n128_u64[0];
      }
      else
      {

        *(_QWORD *)&result = swift_unknownObjectRelease(v22).n128_u64[0];
      }
    }
    else
    {

    }
  }
  return result;
}

void sub_A01C2C(unsigned __int8 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  void *Strong;
  char *v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t ObjectType;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  id *v65;
  id v66;
  id v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t i;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t v101;
  __n128 v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t *v118;
  _BYTE v119[40];
  char v120[24];
  _QWORD *v121;
  char v122[24];
  char v123[24];
  char v124[8];

  v112 = a7;
  v110 = a6;
  v109 = a5;
  v108 = a4;
  v9 = a1;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14B1FF0);
  __chkstk_darwin(v10);
  v116 = (char *)&v104 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = type metadata accessor for MetricsPageProperties(0);
  v114 = *(_QWORD *)(v115 - 8);
  __chkstk_darwin(v115);
  v118 = (uint64_t *)((char *)&v104 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AED20);
  __chkstk_darwin(v13);
  v104 = (char *)&v104 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v113 = (char *)&v104 - v16;
  __chkstk_darwin(v17);
  v117 = (char *)&v104 - v18;
  v19 = type metadata accessor for MetricsEvent.Click(0);
  __chkstk_darwin(v19);
  v111 = (uint64_t)&v104 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = type metadata accessor for IndexPath(0);
  v105 = *(_QWORD *)(v107 - 8);
  __chkstk_darwin(v107);
  v106 = (char *)&v104 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD5A0);
  __chkstk_darwin(v22);
  v24 = (char *)&v104 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for PlaybackIntentDescriptor(0);
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(_QWORD *)(v26 + 64);
  __chkstk_darwin(v25);
  v28 = (char *)&v104 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v31 = (char *)&v104 - v30;
  v32 = swift_projectBox(a2);
  if (v9 == 1)
  {
    v33 = v32;
    v34 = a3 + 16;
    v35 = swift_beginAccess(v32, v124, 0, 0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v26 + 48))(v33, 1, v25, v35))
    {
      sub_5BDB8(v33, (uint64_t)v31, type metadata accessor for PlaybackIntentDescriptor);
      v36 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v24, 1, 1, v36);
      sub_5BDB8((uint64_t)v31, (uint64_t)v28, type metadata accessor for PlaybackIntentDescriptor);
      type metadata accessor for MainActor(0);
      v38 = static MainActor.shared.getter(v37);
      v39 = *(unsigned __int8 *)(v26 + 80);
      v40 = (v39 + 32) & ~v39;
      v41 = (v27 + v40 + 7) & 0xFFFFFFFFFFFFFFF8;
      v42 = (v41 + 15) & 0xFFFFFFFFFFFFFFF8;
      v43 = swift_allocObject(&unk_1393A28, v42 + 16, v39 | 7);
      *(_QWORD *)(v43 + 16) = v38;
      *(_QWORD *)(v43 + 24) = &protocol witness table for MainActor;
      sub_5C04C((uint64_t)v28, v43 + v40, type metadata accessor for PlaybackIntentDescriptor);
      *(_QWORD *)(v43 + v41) = 0;
      v44 = (_QWORD *)(v43 + v42);
      *v44 = 0;
      v44[1] = 0;
      v45 = sub_2223C8((uint64_t)v24, (uint64_t)&unk_14AD200, v43);
      swift_release(v45);
      sub_5C0DC((uint64_t)v31, type metadata accessor for PlaybackIntentDescriptor);
    }
    swift_beginAccess(v34, v123, 0, 0);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v34);
    if (Strong)
    {
      v47 = Strong;
      v48 = sub_30D3EC();
      v50 = v49;

      if (v48)
      {
        ObjectType = swift_getObjectType();
        v52 = (*(uint64_t (**)(uint64_t, uint64_t))(v50 + 8))(ObjectType, v50);
        v54 = v53;
        swift_unknownObjectRelease(v48);
        v55 = swift_getObjectType();
        v56 = v106;
        v57 = v107;
        (*(void (**)(char *, uint64_t, uint64_t))(v105 + 16))(v106, v108, v107);
        v58 = sub_4DD24((unint64_t *)&qword_14B2010, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
        AnyHashable.init<A>(_:)(v56, v57, v58);
        v59 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v54 + 128))(v119, v55, v54);
        v61 = v60;
        sub_55E40((uint64_t)v119);
        swift_unknownObjectRelease(v52);
      }
      else
      {
        v61 = 0;
        v59 = 1;
      }
      v62 = v118;
      v63 = (uint64_t)v117;
      v64 = (uint64_t)v113;
      v65 = (id *)(v112 + OBJC_IVAR____TtC11MusicJSCore11JSMediaItem_storeItemMetadata);
      swift_beginAccess(v112 + OBJC_IVAR____TtC11MusicJSCore11JSMediaItem_storeItemMetadata, v119, 0, 0);
      if (*v65)
      {
        v66 = *v65;
        v67 = objc_msgSend(v66, "URL");
        if (v67)
        {
          v68 = v67;
          static URL._unconditionallyBridgeFromObjectiveC(_:)(v67);

          v69 = type metadata accessor for URL(0);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 56))(v64, 0, 1, v69);
        }
        else
        {
          v72 = type metadata accessor for URL(0);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56))(v64, 1, 1, v72);
        }
        sub_5C090(v64, v63, &qword_14AED20);

        if (v59 == 1)
          goto LABEL_15;
      }
      else
      {
        v70 = type metadata accessor for URL(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 56))(v63, 1, 1, v70);
        if (v59 == 1)
        {
LABEL_15:
          v71 = 0;
LABEL_16:
          v73 = &v47[qword_1581730];
          swift_beginAccess(&v47[qword_1581730], v122, 0, 0);
          v74 = (uint64_t)v73;
          v75 = (uint64_t)v116;
          sub_5C238(v74, (uint64_t)v116, &qword_14B1FF0);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v114 + 48))(v75, 1, v115) == 1)
          {
            v76 = type metadata accessor for URL(0);
            v77 = (uint64_t)v104;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 56))(v104, 1, 1, v76);
            MetricsPageProperties.init(pageIdentifier:pageType:pageURL:pageDetails:extRefUrl:)(0, 0xE000000000000000, 0, 0xE000000000000000, v77, 0, 0, 0, v62);
            sub_56024(v75, &qword_14B1FF0);
            if (v59 == 1)
              goto LABEL_30;
          }
          else
          {
            sub_5C04C(v75, (uint64_t)v62, type metadata accessor for MetricsPageProperties);
            if (v59 == 1)
              goto LABEL_30;
          }
          swift_bridgeObjectRelease();
          if (v61)
          {
            if ((unint64_t)v61 >> 62)
            {
              if (v61 >= 0)
                v89 = v61 & 0xFFFFFFFFFFFFFF8;
              else
                v89 = v61;
              swift_bridgeObjectRetain();
              v78 = _CocoaArrayWrapper.endIndex.getter(v89);
              swift_bridgeObjectRelease();
              if (v78)
                goto LABEL_23;
            }
            else
            {
              v78 = *(_QWORD *)((char *)&dword_10 + (v61 & 0xFFFFFFFFFFFFFF8));
              if (v78)
              {
LABEL_23:
                v121 = _swiftEmptyArrayStorage;
                sub_1239EC(0, v78 & ~(v78 >> 63), 0);
                if (v78 < 0)
                {
                  __break(1u);
                  return;
                }
                v116 = v47;
                v79 = v121;
                if ((v61 & 0xC000000000000001) != 0)
                {
                  for (i = 0; i != v78; ++i)
                  {
                    v81 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v61);
                    v82 = *(_QWORD *)(v81 + OBJC_IVAR____TtC11MusicJSCore12JSImpression_fields);
                    swift_bridgeObjectRetain();
                    swift_unknownObjectRelease(v81);
                    v121 = v79;
                    v84 = v79[2];
                    v83 = v79[3];
                    if (v84 >= v83 >> 1)
                    {
                      sub_1239EC(v83 > 1, v84 + 1, 1);
                      v79 = v121;
                    }
                    v79[2] = v84 + 1;
                    v79[v84 + 4] = v82;
                  }
                }
                else
                {
                  v85 = (_QWORD *)(v61 + 32);
                  do
                  {
                    v86 = *(_QWORD *)(*v85 + OBJC_IVAR____TtC11MusicJSCore12JSImpression_fields);
                    v121 = v79;
                    v88 = v79[2];
                    v87 = v79[3];
                    swift_bridgeObjectRetain();
                    if (v88 >= v87 >> 1)
                    {
                      sub_1239EC(v87 > 1, v88 + 1, 1);
                      v79 = v121;
                    }
                    v79[2] = v88 + 1;
                    v79[v88 + 4] = v86;
                    ++v85;
                    --v78;
                  }
                  while (v78);
                }
                swift_bridgeObjectRelease();
                v62 = v118;
                v63 = (uint64_t)v117;
                v47 = v116;
                goto LABEL_41;
              }
            }
            swift_bridgeObjectRelease();
            v79 = _swiftEmptyArrayStorage;
LABEL_41:
            v90 = v110;
            swift_bridgeObjectRetain();
            v103 = (uint64_t)v79;
            v91 = v111;
            MetricsEvent.Click.init(targetIdentifier:targetType:actionType:actionURL:locations:actionContext:actionDetails:metricsPageProperties:snapshotImpressions:)(v109, v90, 5, 24, v63, v71, 0, 9, v111, 0, 0, 0xFF00u, v62, v103);
            v92 = (id)*MetricsReportingController.shared.unsafeMutableAddressor();
            sub_53F8B4();
            v94 = v93;
            v96 = v95;
            if (qword_14AB568 != -1)
              swift_once(&qword_14AB568, sub_5BC10C);
            swift_beginAccess(&static UIApplication.groupActivitiesManager, &v121, 0, 0);
            v97 = static UIApplication.groupActivitiesManager;
            swift_retain(static UIApplication.groupActivitiesManager);
            v98 = GroupActivitiesManager.hasJoined.getter();
            v99 = GroupActivitiesManager.participantsCount.getter();
            v100 = (uint64_t *)(v97 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount);
            swift_beginAccess(v97 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount, v120, 0, 0);
            v101 = *v100;
            v102 = swift_release(v97);
            (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, __n128))&stru_B8.sectname[swift_isaMask & *v92])(v91, v94, v96, v98 & 1, v99, v101, v102);

            swift_bridgeObjectRelease();
            sub_5C0DC(v91, type metadata accessor for MetricsEvent.Click);

            return;
          }
LABEL_30:
          v79 = 0;
          goto LABEL_41;
        }
      }
      swift_bridgeObjectRetain();
      v71 = v59;
      goto LABEL_16;
    }
  }
}

void sub_A0260C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t Strong;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(__n128);
  uint64_t v12;
  __n128 v13;
  int v14;
  uint64_t v15;
  void (*v16)(uint64_t, __n128);
  __n128 v17;
  uint64_t v18;
  _BYTE v19[24];

  v5 = a1 + 16;
  swift_beginAccess(a1 + 16, v19, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (char *)Strong;
    v8 = a2 + 16;
    swift_beginAccess(v8, &v18, 0, 0);
    v9 = swift_unknownObjectWeakLoadStrong(v8);
    if (v9)
    {
      v10 = (char *)v9;
      v11 = *(void (**)(__n128))(v9
                                          + OBJC_IVAR____TtC16MusicApplication32VerticalLockupCollectionViewCell_imageDidChangeHandler);
      if (v11)
      {
        v12 = *(_QWORD *)(v9
                        + OBJC_IVAR____TtC16MusicApplication32VerticalLockupCollectionViewCell_imageDidChangeHandler
                        + 8);
        v13 = swift_retain(v12);
        v11(v13);
        sub_5C198((uint64_t)v11, v12);
      }
      v14 = *(unsigned __int8 *)(*(_QWORD *)&v10[OBJC_IVAR____TtC16MusicApplication32VerticalLockupCollectionViewCell_artworkComponent]
                               + OBJC_IVAR____TtCE16MusicApplicationV11MusicCoreUI7Artwork9Component_appliedContent
                               + 48);
      if (v14 == 255 || (v14 & 1) != 0 || (v15 = *(_QWORD *)&v7[qword_14EF9B8]) == 0)
      {

      }
      else
      {
        v16 = *(void (**)(uint64_t, __n128))(*(_QWORD *)v15 + 184);
        v17 = swift_retain(*(_QWORD *)&v7[qword_14EF9B8]);
        v16(a3, v17);

        swift_release(v15);
      }
    }
    else
    {
      v10 = v7;
    }

  }
}

void sub_A0273C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  id v6;
  id v7;
  unsigned __int8 v8;
  void *v9;
  uint64_t v10;
  void (*v11)(uint64_t, __n128);
  __n128 v12;
  id v13;

  sub_A05238(a1);
  v6 = objc_msgSend(a2, "contentItem");
  if (v6)
  {
    v13 = v6;
    v7 = MPModelStoreBrowseContentItem.kind.getter();
    v9 = v7;
    if (v8 == 5)
    {
      v10 = *(_QWORD *)(v3 + qword_14EF9B8);
      if (v10)
      {
        v11 = *(void (**)(uint64_t, __n128))(*(_QWORD *)v10 + 176);
        v12 = swift_retain(v10);
        v11(a3, v12);
        sub_CBD68(v9, 5);

        swift_release(v10);
        return;
      }
      v8 = 5;
    }
    else if (v8 == 255)
    {
LABEL_10:

      return;
    }
    sub_CBD68(v7, v8);
    goto LABEL_10;
  }
}

double sub_A02838()
{
  char *v0;
  id v1;
  double *v2;
  double v3;
  double v4;
  id v5;
  char *v6;
  double v7;
  double left;
  double right;
  uint64_t v10;
  char v12[24];

  v1 = objc_msgSend(v0, "traitCollection");
  v2 = (double *)&v0[qword_14EF9C0];
  if ((v0[qword_14EF9C0 + 16] & 1) != 0)
  {
    sub_A04D14();
    v4 = v3;
    v5 = objc_msgSend(v0, "traitCollection");
    v6 = (char *)(*(_QWORD *)&v0[qword_14EF9B0] + OBJC_IVAR____TtC11MusicJSCore15JSLiveRadioCase_usesFlowLayout);
    swift_beginAccess(v6, v12, 0, 0);
    v7 = sub_33F404(v5, *v6);

    *v2 = v4;
    v2[1] = v7;
    *((_BYTE *)v2 + 16) = 0;
  }
  else
  {
    v4 = *v2;
  }
  left = UIEdgeInsetsZero.left;
  right = UIEdgeInsetsZero.right;
  v10 = *(_QWORD *)&v0[qword_1581738];
  if (v10 && *(_BYTE *)(v10 + 56) == 1)
  {
    if (qword_14AAF18 != -1)
      swift_once(&qword_14AAF18, sub_33E4F8);
  }
  else if (objc_msgSend(v1, "horizontalSizeClass") == (char *)&dword_0 + 1)
  {
    if (qword_14AAF28 != -1)
      swift_once(&qword_14AAF28, sub_33EB64);
  }
  else if (qword_14AAF30 != -1)
  {
    swift_once(&qword_14AAF30, sub_33EB80);
  }
  CGFloat.roundValue(scale:)(objc_msgSend(v1, "displayScale"));

  return v4 - right - left;
}

void sub_A02A34(void *a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  objc_class *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  Class isa;
  id v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  id v40;
  id v41;
  id v42;
  void *v43;
  _QWORD *v44;
  id v45;
  id v46;
  void *v47;
  id v48;
  void *v49;
  uint64_t v50;
  id v51;
  void *v52;
  _QWORD *v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  void *v59;
  id v60;
  Class v61;
  id v62;
  uint64_t v63;
  char v64;
  __int128 v65;
  __int128 v66;
  id v67;
  objc_class *v68;
  void (*v69)(char *, uint64_t, uint64_t);
  char *v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *boxed_opaque_existential_1Tm;
  uint64_t v74;
  void (*v75)(uint64_t, char *, uint64_t);
  uint64_t v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94;
  id *v95;
  id v96;
  id v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  id v102;
  Class v103;
  id v104;
  id v105;
  uint64_t ObjectType;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  void *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  uint64_t i;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char v130;
  uint64_t v131;
  uint64_t *v132;
  uint64_t v133;
  __n128 v134;
  _QWORD *v135;
  _QWORD *v136;
  uint64_t v137;
  unint64_t v138;
  unint64_t v139;
  uint64_t v140;
  __int128 v141;
  __int128 v142;
  uint64_t v143;
  uint64_t v144;
  _QWORD *v145;
  char *v146;
  char *v147;
  id v148;
  id v149;
  char *v150;
  char *v151;
  char *v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t *v159;
  uint64_t v160;
  uint64_t v161;
  void *v162;
  uint64_t v163;
  _QWORD *v164;
  _QWORD v165[5];
  _BYTE v166[72];
  _OWORD v167[2];
  uint64_t v168;
  char v169;
  _OWORD v170[2];
  uint64_t v171;
  char v172;

  v4 = v3;
  v160 = a3;
  v161 = a2;
  v162 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14B1FF0);
  __chkstk_darwin(v5);
  v157 = (char *)&v141 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MetricsPageProperties(0);
  v155 = *(_QWORD *)(v7 - 8);
  v156 = v7;
  __chkstk_darwin(v7);
  v159 = (uint64_t *)((char *)&v141 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AED20);
  __chkstk_darwin(v9);
  v151 = (char *)&v141 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v154 = (char *)&v141 - v12;
  __chkstk_darwin(v13);
  v158 = (char *)&v141 - v14;
  v15 = type metadata accessor for MetricsEvent.Click(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v141 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153 = type metadata accessor for IndexPath(0);
  v18 = *(_QWORD *)(v153 - 8);
  __chkstk_darwin(v153);
  v152 = (char *)&v141 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for PlaybackIntentDescriptor(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)&v141 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14B0AC0);
  __chkstk_darwin(v24);
  v26 = (char *)&v141 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v29 = (char *)&v141 - v28;
  v30 = *(void **)((char *)v3 + qword_14DB760);
  if (v30)
  {
    v31 = type metadata accessor for JSLiveRadioCaseModelResponse();
    v32 = swift_dynamicCastClass(v30, v31);
    if (v32)
    {
      v147 = v17;
      v150 = v29;
      v33 = *(void **)(v32 + OBJC_IVAR____TtC16MusicApplication28JSLiveRadioCaseModelResponse_jsResults);
      v34 = v30;
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      v36 = objc_msgSend(v33, "itemAtIndexPath:", isa);

      v37 = type metadata accessor for JSLiveRadioCaseItem(0);
      v38 = swift_dynamicCastClass(v36, v37);
      if (!v38)
      {

        swift_unknownObjectRelease(v36);
        return;
      }
      v148 = v36;
      v149 = v34;
      v39 = (char *)v38;
      v40 = objc_msgSend(v162, "contentItem");
      v41 = objc_msgSend(v40, "innerObject");

      v146 = v39;
      sub_5AE34C(v41, v4, (uint64_t)static MPMediaLibraryFilteringOptions.none.getter, 0, (uint64_t)v150);

      v42 = -[objc_class traitCollection](v4, "traitCollection");
      v43 = (void *)UITraitCollection.mediaPickerConfiguration.getter();

      if (v43)
      {
        v44 = *(_QWORD **)((char *)v4 + qword_14DB700);
        if (v44)
        {
          v45 = objc_msgSend(v43, "selectionMode", swift_retain(*(_QWORD *)((char *)v4 + qword_14DB700)).n128_f64[0]);
          v46 = objc_msgSend(v162, "pickableObjectFor:", v45);
          if (v46)
          {
            v47 = v46;
            v145 = v44;
            v48 = objc_msgSend(v46, "musicTypeIdentifier");
            if (v48)
            {
              v49 = v48;

              v50 = (uint64_t)v150;
              sub_5C238((uint64_t)v150, (uint64_t)v26, (uint64_t *)&unk_14B0AC0);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v26, 1, v20) == 1)
              {
                swift_unknownObjectRelease(v148);
                sub_56024(v50, (uint64_t *)&unk_14B0AC0);
                sub_56024((uint64_t)v26, (uint64_t *)&unk_14B0AC0);

                swift_release(v145);
                return;
              }
              sub_5C04C((uint64_t)v26, (uint64_t)v23, type metadata accessor for PlaybackIntentDescriptor);
              -[objc_class loadViewIfNeeded](v4, "loadViewIfNeeded");
              v101 = *(void **)((char *)v4 + qword_14DB768);
              if (v101)
              {
                v102 = v101;
                v103 = IndexPath._bridgeToObjectiveC()().super.isa;
                v104 = objc_msgSend(v102, "cellForItemAtIndexPath:", v103);

                v105 = v149;
                if (v104)
                {
                  ObjectType = swift_getObjectType();
                  v107 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for MediaPickerAddButtonControllable);
                  if (v107)
                    v108 = v107;
                  else
                    v108 = 0;
                  if (v107)
                    v109 = (uint64_t)v104;
                  else
                    v109 = 0;
                  if (v109)
                    goto LABEL_69;

                }
                else
                {
                  v109 = 0;
                }
                v108 = 0;
LABEL_69:
                v135 = v145;
                sub_8789B8((uint64_t)v23, v162, v109, v108);
                swift_unknownObjectRelease(v148);
                sub_5C0DC((uint64_t)v23, type metadata accessor for PlaybackIntentDescriptor);
                sub_56024(v50, (uint64_t *)&unk_14B0AC0);

                swift_release(v135);
                swift_unknownObjectRelease(v109);
                return;
              }
              goto LABEL_83;
            }

            swift_release(v145);
          }
          else
          {

            swift_release(v44);
          }
        }
        else
        {

        }
      }
      v51 = objc_msgSend(v162, "contentItem");
      if (!v51
        || (v52 = v51,
            v53 = objc_msgSend(v51, "innerObject"),
            v52,
            !v53))
      {
        swift_unknownObjectRelease(v148);
        sub_56024((uint64_t)v150, (uint64_t *)&unk_14B0AC0);

        return;
      }
      v54 = (uint64_t *)MPIdentifierSet.Purpose.Options.catalog.unsafeMutableAddressor();
      v55 = MPModelObject.bestIdentifier(for:)(*v54, 1u);
      if (!v56)
      {
        swift_unknownObjectRelease(v148);
        sub_56024((uint64_t)v150, (uint64_t *)&unk_14B0AC0);
        v67 = v149;
LABEL_65:

        return;
      }
      v143 = v56;
      v144 = v55;
      v145 = v53;
      v57 = (id)*JSSegueCoordinator.shared.unsafeMutableAddressor();
      -[objc_class loadViewIfNeeded](v4, "loadViewIfNeeded");
      v58 = qword_14DB768;
      v59 = *(void **)((char *)v4 + qword_14DB768);
      if (!v59)
      {
LABEL_81:
        __break(1u);
LABEL_82:
        __break(1u);
LABEL_83:
        __break(1u);
        return;
      }
      v60 = v59;
      v61 = IndexPath._bridgeToObjectiveC()().super.isa;
      v62 = objc_msgSend(v60, "cellForItemAtIndexPath:", v61);

      if (v62)
      {
        sub_2170FC((uint64_t)v167);
        v141 = v167[1];
        v142 = v167[0];
        v63 = v168;
        v64 = v169;
        sub_E1098((uint64_t)v167);

        v66 = v141;
        v65 = v142;
      }
      else
      {
        v63 = 0;
        v65 = 0uLL;
        v64 = -1;
        v66 = 0uLL;
      }
      v170[0] = v65;
      v170[1] = v66;
      v171 = v63;
      v172 = v64;
      v68 = v4;
      PresentationSource.init(viewController:position:)(v68, (uint64_t)v170, (uint64_t)v166);
      -[objc_class loadViewIfNeeded](v68, "loadViewIfNeeded");
      if (!*(_QWORD *)((char *)v4 + v58))
        goto LABEL_82;
      v69 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
      v70 = v152;
      v71 = v153;
      v69(v152, v160, v153);
      v72 = _s30CollectionViewSelectionHandlerVMa(0);
      v165[3] = v72;
      v165[4] = &off_1351078;
      boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v165);
      v74 = swift_unknownObjectWeakInit(boxed_opaque_existential_1Tm);
      v75 = *(void (**)(uint64_t, char *, uint64_t))(v18 + 32);
      v76 = v71;
      v75(v74 + *(int *)(v72 + 20), v70, v71);
      sub_907A7C(v146, 0, (uint64_t)v166, 0, v162, (uint64_t)v165, (uint64_t)v150, 0);
      sub_56060((uint64_t)v166);
      sub_56024((uint64_t)v165, (uint64_t *)&unk_14B2930);

      v77 = sub_30D3EC();
      v79 = (uint64_t)v154;
      if (v77)
      {
        v80 = v77;
        v81 = v78;
        v82 = swift_getObjectType();
        v83 = (*(uint64_t (**)(uint64_t, uint64_t))(v81 + 8))(v82, v81);
        v85 = v84;
        swift_unknownObjectRelease(v80);
        v86 = swift_getObjectType();
        v69(v70, v161, v76);
        v87 = sub_4DD24((unint64_t *)&qword_14B2010, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
        AnyHashable.init<A>(_:)(v70, v76, v87);
        v88 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v85 + 128))(v166, v86, v85);
        v90 = v89;
        sub_55E40((uint64_t)v166);
        swift_unknownObjectRelease(v83);
      }
      else
      {
        v90 = 0;
        v88 = 1;
      }
      v91 = (uint64_t)v147;
      v93 = (uint64_t)v158;
      v92 = v159;
      v94 = (uint64_t)v157;
      v95 = (id *)&v146[OBJC_IVAR____TtC11MusicJSCore11JSMediaItem_storeItemMetadata];
      swift_beginAccess(&v146[OBJC_IVAR____TtC11MusicJSCore11JSMediaItem_storeItemMetadata], v166, 0, 0);
      if (*v95)
      {
        v96 = *v95;
        v97 = objc_msgSend(v96, "URL");
        if (v97)
        {
          v98 = v97;
          static URL._unconditionallyBridgeFromObjectiveC(_:)(v97);

          v99 = type metadata accessor for URL(0);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v99 - 8) + 56))(v79, 0, 1, v99);
        }
        else
        {
          v110 = type metadata accessor for URL(0);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v110 - 8) + 56))(v79, 1, 1, v110);
        }
        v91 = (uint64_t)v147;
        sub_5C090(v79, v93, &qword_14AED20);

      }
      else
      {
        v100 = type metadata accessor for URL(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v100 - 8) + 56))(v93, 1, 1, v100);
      }
      if (v88 == 1)
      {
        v111 = 0;
      }
      else
      {
        swift_bridgeObjectRetain();
        v111 = (void *)v88;
      }
      v112 = (uint64_t)v68 + qword_1581730;
      swift_beginAccess((char *)v68 + qword_1581730, v165, 0, 0);
      sub_5C238(v112, v94, &qword_14B1FF0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v155 + 48))(v94, 1, v156) == 1)
      {
        v113 = type metadata accessor for URL(0);
        v114 = (uint64_t)v151;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v113 - 8) + 56))(v151, 1, 1, v113);
        MetricsPageProperties.init(pageIdentifier:pageType:pageURL:pageDetails:extRefUrl:)(0, 0xE000000000000000, 0, 0xE000000000000000, v114, 0, 0, 0, v92);
        sub_56024(v94, &qword_14B1FF0);
        if (v88 == 1)
          goto LABEL_60;
      }
      else
      {
        sub_5C04C(v94, (uint64_t)v92, type metadata accessor for MetricsPageProperties);
        if (v88 == 1)
          goto LABEL_60;
      }
      swift_bridgeObjectRelease();
      if (v90)
      {
        if ((unint64_t)v90 >> 62)
        {
          if (v90 >= 0)
            v140 = v90 & 0xFFFFFFFFFFFFFF8;
          else
            v140 = v90;
          swift_bridgeObjectRetain();
          v115 = _CocoaArrayWrapper.endIndex.getter(v140);
          swift_bridgeObjectRelease();
          if (v115)
            goto LABEL_53;
        }
        else
        {
          v115 = *(_QWORD *)((char *)&dword_10 + (v90 & 0xFFFFFFFFFFFFFF8));
          if (v115)
          {
LABEL_53:
            v164 = _swiftEmptyArrayStorage;
            sub_1239EC(0, v115 & ~(v115 >> 63), 0);
            if ((v115 & 0x8000000000000000) == 0)
            {
              v162 = v111;
              v116 = v164;
              if ((v90 & 0xC000000000000001) != 0)
              {
                for (i = 0; i != v115; ++i)
                {
                  v118 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v90);
                  v119 = *(_QWORD *)(v118 + OBJC_IVAR____TtC11MusicJSCore12JSImpression_fields);
                  swift_bridgeObjectRetain();
                  swift_unknownObjectRelease(v118);
                  v164 = v116;
                  v121 = v116[2];
                  v120 = v116[3];
                  if (v121 >= v120 >> 1)
                  {
                    sub_1239EC(v120 > 1, v121 + 1, 1);
                    v116 = v164;
                  }
                  v116[2] = v121 + 1;
                  v116[v121 + 4] = v119;
                }
              }
              else
              {
                v136 = (_QWORD *)(v90 + 32);
                do
                {
                  v137 = *(_QWORD *)(*v136 + OBJC_IVAR____TtC11MusicJSCore12JSImpression_fields);
                  v164 = v116;
                  v139 = v116[2];
                  v138 = v116[3];
                  swift_bridgeObjectRetain();
                  if (v139 >= v138 >> 1)
                  {
                    sub_1239EC(v138 > 1, v139 + 1, 1);
                    v116 = v164;
                  }
                  v116[2] = v139 + 1;
                  v116[v139 + 4] = v137;
                  ++v136;
                  --v115;
                }
                while (v115);
              }
              swift_bridgeObjectRelease();
              v91 = (uint64_t)v147;
              v93 = (uint64_t)v158;
              v92 = v159;
              v123 = v143;
              v122 = v144;
              v111 = v162;
              goto LABEL_62;
            }
            __break(1u);
            goto LABEL_81;
          }
        }
        swift_bridgeObjectRelease();
        v116 = _swiftEmptyArrayStorage;
        goto LABEL_61;
      }
LABEL_60:
      v116 = 0;
LABEL_61:
      v123 = v143;
      v122 = v144;
LABEL_62:
      MetricsEvent.Click.init(targetIdentifier:targetType:actionType:actionURL:locations:actionContext:actionDetails:metricsPageProperties:snapshotImpressions:)(v122, v123, 7, 24, v93, (uint64_t)v111, 0, 9, v91, 0x17uLL, 0, 0, v92, (uint64_t)v116);
      v53 = (id)*MetricsReportingController.shared.unsafeMutableAddressor();
      sub_53F8B4();
      v125 = v124;
      v127 = v126;
      v128 = v91;
      if (qword_14AB568 != -1)
        swift_once(&qword_14AB568, sub_5BC10C);
      swift_beginAccess(&static UIApplication.groupActivitiesManager, &v164, 0, 0);
      v129 = static UIApplication.groupActivitiesManager;
      swift_retain(static UIApplication.groupActivitiesManager);
      v130 = GroupActivitiesManager.hasJoined.getter();
      v131 = GroupActivitiesManager.participantsCount.getter();
      v132 = (uint64_t *)(v129 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount);
      swift_beginAccess(v129 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount, &v163, 0, 0);
      v133 = *v132;
      v134 = swift_release(v129);
      (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, __n128))&stru_B8.sectname[swift_isaMask & *v53])(v128, v125, v127, v130 & 1, v131, v133, v134);
      swift_unknownObjectRelease(v148);
      swift_bridgeObjectRelease();
      sub_5C0DC(v128, type metadata accessor for MetricsEvent.Click);
      sub_56024((uint64_t)v150, (uint64_t *)&unk_14B0AC0);

      v67 = v145;
      goto LABEL_65;
    }
  }
}

void sub_A037BC()
{
  uint64_t v0;
  void *v1;
  objc_class *v2;
  char *v3;
  id v4;
  id v5;
  uint64_t ObjCClassFromMetadata;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t inited;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  Class isa;
  id v31;
  uint64_t v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  Class v45;
  Class v46;
  id v47;
  id v48;
  Class v49;
  Class v50;
  id v51;
  uint64_t v52;
  void *v53;
  id v54;
  _QWORD aBlock[5];
  uint64_t v56;
  _BYTE v57[56];
  _BYTE v58[56];
  objc_super v59;

  v1 = *(void **)(v0 + qword_14EF9B0);
  v2 = (objc_class *)type metadata accessor for JSLiveRadioCaseModelRequest();
  v3 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v3[OBJC_IVAR____TtC16MusicApplication27JSLiveRadioCaseModelRequest_liveRadioCaseViewModel] = v1;
  v59.receiver = v3;
  v59.super_class = v2;
  v4 = v1;
  v5 = objc_msgSendSuper2(&v59, "init");

  sub_4E684(0, &qword_14D1200, off_1337580);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v7 = (void *)objc_opt_self(MPModelKind);
  v8 = v5;
  v9 = objc_msgSend(v7, "kindWithModelClass:", ObjCClassFromMetadata);
  objc_msgSend(v8, "setItemKind:", v9);

  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD1E0);
  v11 = swift_allocObject(v10, 160, 7);
  *(_OWORD *)(v11 + 16) = xmmword_10618F0;
  *(_QWORD *)(v11 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("MusicModelPropertyLiveRadioCaseItemHeaderTitleText"));
  *(_QWORD *)(v11 + 40) = v12;
  *(_QWORD *)(v11 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("MusicModelPropertyLiveRadioCaseItemHeaderSubtitleText"));
  *(_QWORD *)(v11 + 56) = v13;
  *(_QWORD *)(v11 + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("MusicModelPropertyLiveRadioCaseItemAccessoryButtonTitleText"));
  *(_QWORD *)(v11 + 72) = v14;
  *(_QWORD *)(v11 + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("MusicModelPropertyLiveRadioCaseItemHeadlineText"));
  *(_QWORD *)(v11 + 88) = v15;
  *(_QWORD *)(v11 + 96) = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("MusicModelPropertyLiveRadioCaseItemTitleText"));
  *(_QWORD *)(v11 + 104) = v16;
  *(_QWORD *)(v11 + 112) = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("MusicModelPropertyLiveRadioCaseItemSubtitleText"));
  *(_QWORD *)(v11 + 120) = v17;
  *(_QWORD *)(v11 + 128) = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("MusicModelPropertyLiveRadioCaseBackgroundArtwork"));
  *(_QWORD *)(v11 + 136) = v18;
  *(_QWORD *)(v11 + 144) = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("MusicModelPropertyLiveRadioCaseVideoBackgroundArtwork"));
  *(_QWORD *)(v11 + 152) = v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AEE00);
  inited = swift_initStackObject(v20, v58);
  *(_OWORD *)(inited + 16) = xmmword_105B360;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("MusicModelRelationshipLiveRadioCaseItemContentItem"));
  *(_QWORD *)(inited + 40) = v22;
  v23 = swift_allocObject(v10, 48, 7);
  *(_OWORD *)(v23 + 16) = xmmword_105B360;
  *(_QWORD *)(v23 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelStoreBrowseContentItemPropertyItemType);
  *(_QWORD *)(v23 + 40) = v24;
  v25 = swift_initStackObject(v20, v57);
  *(_OWORD *)(v25 + 16) = xmmword_105B360;
  *(_QWORD *)(v25 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelStoreBrowseContentItemRelationshipRadioStation);
  *(_QWORD *)(v25 + 40) = v26;
  v27 = swift_allocObject(v10, 64, 7);
  *(_OWORD *)(v27 + 16) = xmmword_105F890;
  *(_QWORD *)(v27 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyRadioStationName);
  *(_QWORD *)(v27 + 40) = v28;
  *(_QWORD *)(v27 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyRadioStationEditorNotes);
  *(_QWORD *)(v27 + 56) = v29;
  v54 = v8;
  isa = Array._bridgeToObjectiveC()().super.isa;
  v31 = objc_msgSend((id)objc_opt_self(MPPropertySet), "propertySetWithProperties:", isa);
  swift_bridgeObjectRelease();

  v32 = sub_4E684(0, (unint64_t *)&unk_14AEDC0, MPModelRadioStation_ptr);
  v33 = sub_27F814(v32);
  v34 = objc_msgSend(v31, "propertySetByCombiningWithPropertySet:", v33);

  v35 = (void *)swift_getObjCClassFromMetadata();
  v36 = objc_msgSend(v35, "requiredLibraryNavigationHandlerProperties");
  v37 = objc_msgSend(v35, "requiredStoreNavigationHandlerProperties");
  v38 = objc_msgSend(v36, "propertySetByCombiningWithPropertySet:", v37);

  v39 = objc_msgSend(v34, "propertySetByCombiningWithPropertySet:", v38);
  type metadata accessor for ContextualPreviewViewController(0);
  v40 = sub_29BD28(v32);
  v41 = objc_msgSend(v39, "propertySetByCombiningWithPropertySet:", v40);

  v42 = sub_1CC470(v32);
  v43 = objc_msgSend(v41, "propertySetByCombiningWithPropertySet:", v42);

  *(_QWORD *)(v25 + 48) = v43;
  sub_196678(v25);
  v44 = objc_allocWithZone((Class)MPPropertySet);
  v45 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  sub_4E684(0, (unint64_t *)&qword_14B0AF0, MPPropertySet_ptr);
  v46 = Dictionary._bridgeToObjectiveC()().super.isa;
  v47 = objc_msgSend(v44, "initWithProperties:relationships:", v45, v46, swift_bridgeObjectRelease().n128_f64[0]);

  *(_QWORD *)(inited + 48) = v47;
  sub_196678(inited);
  v48 = objc_allocWithZone((Class)MPPropertySet);
  v49 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v50 = Dictionary._bridgeToObjectiveC()().super.isa;
  v51 = objc_msgSend(v48, "initWithProperties:relationships:", v49, v50, swift_bridgeObjectRelease().n128_f64[0]);

  objc_msgSend(v54, "setItemProperties:", v51);
  v52 = swift_allocObject(&unk_13938C0, 24, 7);
  swift_unknownObjectWeakInit(v52 + 16);
  aBlock[4] = sub_A05DF0;
  v56 = v52;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_21B54C;
  aBlock[3] = &block_descriptor_257;
  v53 = _Block_copy(aBlock);
  objc_msgSend(v54, "performWithResponseHandler:", v53, swift_release(v56).n128_f64[0]);
  _Block_release(v53);

}

void sub_A03DE4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t Strong;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  const void *v25;
  uint64_t v26;
  id v27;
  id v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD aBlock[5];
  uint64_t v38;
  char v39[24];

  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3 += 16;
  swift_beginAccess(a3, v39, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a3);
  if (Strong)
  {
    v14 = (void *)Strong;
    v15 = sub_4E684(0, (unint64_t *)&qword_14AD360, OS_dispatch_queue_ptr);
    v36 = static OS_dispatch_queue.main.getter(v15, v16, v17, v18, v19, v20, v21, v22);
    v23 = swift_allocObject(&unk_1393910, 32, 7);
    *(_QWORD *)(v23 + 16) = v14;
    *(_QWORD *)(v23 + 24) = a1;
    aBlock[4] = sub_A05E3C;
    v38 = v23;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_42D124;
    aBlock[3] = &block_descriptor_7_13;
    v24 = _Block_copy(aBlock);
    v35 = v6;
    v25 = v24;
    v26 = v38;
    v27 = a1;
    v28 = v14;
    v29 = swift_release(v26);
    static DispatchQoS.unspecified.getter(v29);
    aBlock[0] = _swiftEmptyArrayStorage;
    v30 = sub_4DD24((unint64_t *)&qword_14B1FC0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD370);
    v32 = sub_5C150((unint64_t *)&qword_14B1FD0, (uint64_t *)&unk_14AD370, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v31, v32, v5, v30);
    v33 = (void *)v36;
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v12, v8, v25);

    (*(void (**)(char *, uint64_t))(v35 + 8))(v8, v5);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    _Block_release(v25);

  }
}

double sub_A0402C(uint64_t a1, void *a2)
{
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t (*v11)(_QWORD);
  _QWORD *v12;
  double result;
  _BYTE v14[32];

  v4 = a2;
  sub_877030(a2);
  v5 = *(_QWORD *)(a1 + qword_1581738);
  if (v5)
  {
    v6 = *(void **)(v5 + 216);
    *(_QWORD *)(v5 + 216) = a2;
    v7 = v4;

  }
  v8 = sub_A04818();
  v9 = v8;
  if (*((_BYTE *)v8 + 81) == 1)
  {
    v11 = sub_A83224((uint64_t)v14);
    if (*v10)
    {
      v12 = v10;
      swift_bridgeObjectRelease();
      *v12 = &_swiftEmptySetSingleton;
    }
    ((void (*)(_BYTE *, _QWORD))v11)(v14, 0);
    *(_QWORD *)&result = swift_release(v9).n128_u64[0];
  }
  else
  {
    *(_QWORD *)&result = swift_release(v8).n128_u64[0];
  }
  return result;
}

void sub_A040F4(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  _QWORD *v6;
  id v7;
  void *v8;
  Class isa;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;

  v3 = type metadata accessor for FeaturedMaterialCell(0);
  v4 = swift_dynamicCastClass(a1, v3);
  if (v4)
  {
    v5 = *(void **)(v1 + qword_14DB760);
    if (v5)
    {
      v6 = (_QWORD *)v4;
      v22 = a1;
      v7 = objc_msgSend(v5, "results");
      if (v7)
      {
        v8 = v7;
        isa = IndexPath._bridgeToObjectiveC()().super.isa;
        v10 = objc_msgSend(v8, "itemAtIndexPath:", isa);

        if (!v10)
        {
LABEL_10:

          return;
        }
        objc_opt_self(MusicModelLiveRadioCaseItem);
        v11 = (void *)swift_dynamicCastObjCClass(v10);
        if (!v11 || (v12 = objc_msgSend(v11, "contentItem")) == 0)
        {
LABEL_9:
          swift_unknownObjectRelease(v10);
          goto LABEL_10;
        }
        v13 = v12;
        v14 = MPModelStoreBrowseContentItem.kind.getter();
        v16 = v15;

        if (v16 == 5)
        {
          v17 = sub_A83260();
          v18 = v14;
          v19 = sub_27BE18(v14);
          sub_CBD68(v14, 5);

          v20 = v22;
          v21 = objc_msgSend(v18, "shouldVisuallyDisableFor:", v19);
          (*(void (**)(id))((char *)&stru_158.offset + (swift_isaMask & *v6)))(v21);

          sub_CBD68(v14, 5);
        }
        else
        {
          if (v16 == 255)
            goto LABEL_9;
          sub_CBD68(v14, v16);

        }
        swift_unknownObjectRelease(v10);
      }
      else
      {
        __break(1u);
      }
    }
  }
}

double sub_A04308(void *a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  double v17;
  double v18;
  uint64_t v20;

  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a5);
  v13 = a3;
  v14 = a4;
  v15 = a5;
  v16 = a1;
  sub_A062BC();
  v18 = v17;

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v18;
}

void sub_A043F0(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6;
  id v7;
  id v8;
  id v9;
  void *v10;

  v6 = a3;
  v7 = a4;
  v8 = a1;
  v9 = objc_msgSend(v8, "view");
  if (v9)
  {
    v10 = v9;
    objc_msgSend(v9, "music_inheritedLayoutInsets");

  }
  else
  {
    __break(1u);
  }
}

double sub_A0448C()
{
  return 20.0;
}

void sub_A04494()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  void (*v16)(char *, unint64_t, uint64_t);
  char *v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  void *v19;
  id v20;
  Class isa;
  id v22;
  uint64_t v23;
  _BYTE *v24;
  _BYTE *v25;
  int v26;
  uint64_t v27;
  int v28;
  id v29;
  char *v30;
  char v31;
  id v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, unint64_t, uint64_t);
  uint64_t v39;
  char *v40;

  v1 = v0;
  v2 = type metadata accessor for IndexPath(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD540);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(v1, "isViewLoaded", v7))
  {
    v40 = v5;
    objc_msgSend(v1, "loadViewIfNeeded");
    v39 = qword_14DB768;
    v10 = *(void **)&v1[qword_14DB768];
    if (v10)
    {
      v11 = v10;
      v12 = objc_msgSend(v11, "indexPathsForVisibleItems");
      v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v12, v2);

      v14 = *(_QWORD *)(v13 + 16);
      v33 = v13;
      if (v14)
      {
        v34 = v1;
        v35 = qword_14EF9A0;
        v15 = v13 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
        v16 = *(void (**)(char *, unint64_t, uint64_t))(v3 + 16);
        v37 = *(_QWORD *)(v3 + 72);
        v38 = v16;
        v17 = v40;
        v36 = v3;
        v16(v9, v15, v2);
        while (1)
        {
          v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
          v18(v9, 0, 1, v2);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v9, 1, v2) == 1)
            goto LABEL_22;
          (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v17, v9, v2);
          objc_msgSend(v1, "loadViewIfNeeded", v33);
          v19 = *(void **)&v1[v39];
          if (!v19)
          {
            __break(1u);
            goto LABEL_25;
          }
          v20 = v19;
          isa = IndexPath._bridgeToObjectiveC()().super.isa;
          v22 = objc_msgSend(v20, "cellForItemAtIndexPath:", isa);

          if (!v22)
            goto LABEL_6;
          v23 = type metadata accessor for LiveRadioCell(0);
          v24 = (_BYTE *)swift_dynamicCastClass(v22, v23);
          if (!v24)
            break;
          v25 = v24;
          v26 = v1[v35];
          v27 = OBJC_IVAR____TtC16MusicApplication13LiveRadioCell_isTopHairlineVisible;
          v28 = v24[OBJC_IVAR____TtC16MusicApplication13LiveRadioCell_isTopHairlineVisible];
          v24[OBJC_IVAR____TtC16MusicApplication13LiveRadioCell_isTopHairlineVisible] = v26;
          if (v26 == v28)
          {
            v3 = v36;
            v17 = v40;
            (*(void (**)(char *, uint64_t))(v36 + 8))(v40, v2);

          }
          else
          {
            v29 = objc_msgSend(v24, "traitCollection");
            v30 = (char *)objc_msgSend(v29, "horizontalSizeClass");

            if (v30 == (_BYTE *)&dword_0 + 2
              && v25[OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_alwaysUseCompactLayout] == 1)
            {
              v31 = v25[OBJC_IVAR____TtC16MusicApplication13LiveRadioCell_isHeaderRowCell] ^ 1;
            }
            else
            {
              v31 = 0;
            }
            v32 = sub_33B78C();
            objc_msgSend(v32, "setHidden:", v31 & 1 | ((v25[v27] & 1) == 0));

            v3 = v36;
            v17 = v40;
            (*(void (**)(char *, uint64_t))(v36 + 8))(v40, v2);

            v1 = v34;
          }
LABEL_7:
          v15 += v37;
          if (!--v14)
            goto LABEL_21;
          v38(v9, v15, v2);
        }

LABEL_6:
        v17 = v40;
        (*(void (**)(char *, uint64_t))(v3 + 8))(v40, v2);
        goto LABEL_7;
      }
      v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
LABEL_21:
      v18(v9, 1, 1, v2);
LABEL_22:
      swift_bridgeObjectRelease();
    }
    else
    {
LABEL_25:
      __break(1u);
    }
  }
}

_QWORD *sub_A04818()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  char *v4;
  char *v5;
  _QWORD *result;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v1 = qword_14EF9A8;
  v2 = *(_QWORD *)&v0[qword_14EF9A8];
  if (v2)
  {
    v3 = *(_QWORD **)&v0[qword_14EF9A8];
LABEL_5:
    swift_retain(v2);
    return v3;
  }
  v4 = v0;
  v5 = v0;
  result = objc_msgSend(v5, "loadViewIfNeeded");
  v7 = *(void **)&v5[qword_14DB768];
  if (v7)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F0110);
    swift_allocObject(v8, 208, 7);
    v3 = sub_6ACA74(v5, v7, 0, 1);
    v9 = *(_QWORD *)&v4[v1];
    *(_QWORD *)&v4[v1] = v3;
    swift_retain(v3);
    swift_release(v9);
    v2 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_A048E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  Class isa;
  id v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  double v13;
  _OWORD v15[10];
  _BYTE v16[160];

  v3 = *(_QWORD *)(v1 + qword_14DB760);
  if (!v3)
    goto LABEL_7;
  v4 = type metadata accessor for JSLiveRadioCaseModelResponse();
  v5 = swift_dynamicCastClass(v3, v4);
  if (!v5)
    goto LABEL_7;
  v6 = *(id *)(v5 + OBJC_IVAR____TtC16MusicApplication28JSLiveRadioCaseModelResponse_jsResults);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v8 = objc_msgSend(v6, "itemAtIndexPath:", isa);

  if (!v8)
    goto LABEL_7;
  v9 = type metadata accessor for JSLiveRadioCaseItem(0);
  v10 = swift_dynamicCastClass(v8, v9);
  if (!v10)
  {
    swift_unknownObjectRelease(v8);
LABEL_7:
    sub_E1224(v15);
    goto LABEL_8;
  }
  v11 = (_QWORD *)v10;
  swift_unknownObjectRetain(v8);
  v12 = IndexPath.safeItem.getter();
  sub_619670(v11, 0, 0, v12, 2, 20, 0, v15, 0, 0, 0, 0, 0, 0, 0);
  *(_QWORD *)&v13 = swift_unknownObjectRelease(v8).n128_u64[0];
  UIScreen.Dimensions.size.getter(v13);
LABEL_8:
  sub_5C090((uint64_t)v15, (uint64_t)v16, &qword_14B0A90);
  return sub_5C090((uint64_t)v16, a1, &qword_14B0A90);
}

id sub_A04A40()
{
  char *v0;
  char *v1;
  id result;
  void *v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  void *v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  id v21;
  id v22;
  _BYTE *v23;
  _QWORD v24[3];
  uint64_t v25;
  CGRect v26;
  CGRect v27;

  v1 = v0;
  result = objc_msgSend(v0, "view");
  if (!result)
  {
    __break(1u);
    goto LABEL_11;
  }
  v3 = result;
  objc_msgSend(result, "bounds");
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;

  v26.origin.x = v5;
  v26.origin.y = v7;
  v26.size.width = v9;
  v26.size.height = v11;
  v24[0] = CGRectGetWidth(v26);
  v25 = 0x407C200000000000;
  sub_E1C20();
  if ((static ApproximatelyComparable<>.>=~ infix(_:_:)(v24, &v25) & 1) != 0)
  {
    result = objc_msgSend(v1, "view", v24[0]);
    if (result)
    {
      v12 = result;
      objc_msgSend(result, "bounds");
      v14 = v13;
      v16 = v15;
      v18 = v17;
      v20 = v19;

      v27.origin.x = v14;
      v27.origin.y = v16;
      v27.size.width = v18;
      v27.size.height = v20;
      v24[0] = CGRectGetWidth(v27);
      v25 = 0x4084500000000000;
      if ((static ApproximatelyComparable<>.<=~ infix(_:_:)(v24, &v25) & 1) != 0)
        return &dword_0 + 2;
      goto LABEL_5;
    }
LABEL_11:
    __break(1u);
    return result;
  }
LABEL_5:
  v21 = objc_msgSend(v1, "traitCollection", v24[0]);
  v22 = objc_msgSend(v21, "preferredContentSizeCategory");

  LOBYTE(v21) = UIContentSizeCategory.isAccessibilityCategory.getter(v22);
  if ((v21 & 1) != 0)
    return &dword_0 + 2;
  v23 = (_BYTE *)(*(_QWORD *)&v1[qword_14EF9B0] + OBJC_IVAR____TtC11MusicJSCore15JSLiveRadioCase_usesFlowLayout);
  swift_beginAccess(v23, v24, 0, 0);
  if (*v23)
    return &dword_0 + 2;
  else
    return &dword_0 + 3;
}

id sub_A04C48()
{
  void *v0;
  id result;
  void *v2;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  uint64_t v11;
  CGFloat Width;
  CGRect v13;

  result = objc_msgSend(v0, "view");
  if (result)
  {
    v2 = result;
    objc_msgSend(result, "bounds");
    v4 = v3;
    v6 = v5;
    v8 = v7;
    v10 = v9;

    v13.origin.x = v4;
    v13.origin.y = v6;
    v13.size.width = v8;
    v13.size.height = v10;
    Width = CGRectGetWidth(v13);
    v11 = 0x407C200000000000;
    sub_E1C20();
    return (id)(static ApproximatelyComparable<>.>=~ infix(_:_:)(&Width, &v11) & 1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_A04D14()
{
  char *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  double v4;
  CGFloat v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  void *v12;
  id v13;
  void *v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  id v23;
  uint64_t v24;
  CGFloat v25;
  CGFloat v26;
  uint64_t v27;
  CGFloat Width;
  CGRect v29;
  CGRect v30;

  v1 = v0;
  objc_msgSend(v0, "loadViewIfNeeded");
  v2 = qword_14DB768;
  v3 = *(void **)&v0[qword_14DB768];
  if (!v3)
  {
    __break(1u);
    goto LABEL_8;
  }
  objc_msgSend(v3, "bounds");
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  objc_msgSend(v0, "loadViewIfNeeded");
  v12 = *(void **)&v0[v2];
  if (!v12)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v25 = v11;
  v26 = v7;
  objc_msgSend(v12, "music_inheritedLayoutInsets");
  v13 = objc_msgSend(v0, "view");
  if (!v13)
  {
LABEL_9:
    __break(1u);
    return;
  }
  v14 = v13;
  objc_msgSend(v13, "bounds");
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v22 = v21;

  v29.origin.x = v16;
  v29.origin.y = v18;
  v29.size.width = v20;
  v29.size.height = v22;
  Width = CGRectGetWidth(v29);
  v27 = 0x407C200000000000;
  sub_E1C20();
  if ((static ApproximatelyComparable<>.>=~ infix(_:_:)(&Width, &v27) & 1) != 0)
  {
    v23 = objc_msgSend(v1, "traitCollection");
    sub_A04A40();
    HI.Grid.Metrics.init(width:variant:swiping:isAccessibilitySize:)(1, 1, 0, (uint64_t)&Width, v9);
    objc_msgSend(v23, "displayScale");
    v30.origin.x = v5;
    v30.size.height = v25;
    v30.origin.y = v26;
    v30.size.width = v9;
    CGRectGetWidth(v30);
    CGFloat.roundValue(scale:)(v24);

  }
}

id sub_A04F0C()
{
  char *v0;
  char *v1;
  id result;
  void *v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  _BYTE *v12;
  objc_class *v13;
  id v14;
  _QWORD v15[3];
  uint64_t v16;
  CGRect v17;

  v1 = v0;
  result = objc_msgSend(v0, "view");
  if (result)
  {
    v3 = result;
    objc_msgSend(result, "bounds");
    v5 = v4;
    v7 = v6;
    v9 = v8;
    v11 = v10;

    v17.origin.x = v5;
    v17.origin.y = v7;
    v17.size.width = v9;
    v17.size.height = v11;
    v15[0] = CGRectGetWidth(v17);
    v16 = 0x407C200000000000;
    sub_E1C20();
    if ((static ApproximatelyComparable<>.>=~ infix(_:_:)(v15, &v16) & 1) != 0
      && (v12 = (_BYTE *)(*(_QWORD *)&v1[qword_14EF9B0] + OBJC_IVAR____TtC11MusicJSCore15JSLiveRadioCase_usesFlowLayout),
          swift_beginAccess(v12, v15, 0, 0),
          (*v12 & 1) == 0))
    {
      v13 = (objc_class *)type metadata accessor for ShelfCollectionViewLayout(0);
    }
    else
    {
      v13 = (objc_class *)UICollectionViewFlowLayout;
    }
    v14 = objc_allocWithZone(v13);
    return objc_msgSend(v14, "init", v15[0]);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_A05038()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  char *v9;
  id v10;
  uint64_t ObjCClassMetadata;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;

  v17 = sub_A04F0C();
  objc_msgSend(v0, "loadViewIfNeeded");
  v1 = qword_14DB768;
  v2 = *(void **)&v0[qword_14DB768];
  if (!v2)
  {
    __break(1u);
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v3 = objc_msgSend(v2, "collectionViewLayout");

  if (v3 == v17)
  {
LABEL_11:

    return;
  }
  objc_msgSend(v0, "loadViewIfNeeded");
  v4 = *(void **)&v0[v1];
  if (!v4)
    goto LABEL_13;
  objc_msgSend(v4, "setCollectionViewLayout:animated:", v17, 0);
  v5 = type metadata accessor for ShelfCollectionViewLayout(0);
  if (!swift_dynamicCastClass(v17, v5))
    goto LABEL_7;
  objc_msgSend(v0, "loadViewIfNeeded");
  v6 = *(void **)&v0[v1];
  if (v6)
  {
    objc_msgSend(v6, "setContentOffset:animated:", 0, 0.0, 0.0);
LABEL_7:
    objc_msgSend(v0, "loadViewIfNeeded");
    v7 = *(void **)&v0[v1];
    if (v7)
    {
      v8 = objc_msgSend(v7, "collectionViewLayout");
      v9 = &v0[qword_14EF9C0];
      *(_QWORD *)v9 = 0;
      *((_QWORD *)v9 + 1) = 0;
      v9[16] = 1;
      v10 = objc_msgSend((id)swift_getObjCClassFromObject(v8), "invalidationContextClass");
      ObjCClassMetadata = swift_getObjCClassMetadata(v10);
      v12 = sub_4E684(0, (unint64_t *)&unk_14DD3E0, UICollectionViewLayoutInvalidationContext_ptr);
      swift_dynamicCastMetatypeUnconditional(ObjCClassMetadata, v12, 0, 0, 0);
      v13 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
      objc_msgSend(v8, "invalidateLayoutWithContext:", v13);

      v14 = qword_1581738;
      v15 = *(_QWORD *)&v0[qword_1581738];
      if (v15)
      {
        swift_retain(*(_QWORD *)&v0[qword_1581738]);
        *(_BYTE *)(v15 + 224) = sub_A04C48();
        swift_release(v15);
        v16 = *(_QWORD *)&v0[v14];
        if (v16)
        {
          swift_retain(v16);
          sub_8187C0();
          swift_release(v16);
        }
      }
      goto LABEL_11;
    }
    goto LABEL_14;
  }
LABEL_15:
  __break(1u);
}

void sub_A05238(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  void *v5;
  Class isa;
  id v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  unsigned __int8 v13;
  unsigned __int8 v14;
  id v15;
  id v16;
  uint64_t v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  id *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  _BYTE v28[24];

  v3 = *(void **)(v1 + qword_14DB760);
  if (v3)
  {
    v4 = objc_msgSend(v3, "results");
    if (v4)
    {
      v5 = v4;
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      v7 = objc_msgSend(v5, "itemAtIndexPath:", isa);

      if (v7)
      {
        objc_opt_self(MusicModelLiveRadioCaseItem);
        v8 = (void *)swift_dynamicCastObjCClass(v7);
        if (!v8)
          goto LABEL_9;
        v9 = v8;
        v10 = objc_msgSend(v8, "contentItem");
        if (!v10)
          goto LABEL_9;
        v11 = v10;
        v12 = MPModelStoreBrowseContentItem.kind.getter();
        v14 = v13;

        if (v14 != 5)
        {
          if (v14 != 255)
            sub_CBD68(v12, v14);
LABEL_9:
          swift_unknownObjectRelease(v7);
          return;
        }
        v15 = v12;
        v16 = objc_msgSend(v9, "videoBackgroundArtworkCatalog");
        v17 = OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_lockupVideoArtworkCatalog;
        v18 = *(void **)(a1 + OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_lockupVideoArtworkCatalog);
        *(_QWORD *)(a1 + OBJC_IVAR____TtC16MusicApplication20FeaturedMaterialCell_lockupVideoArtworkCatalog) = v16;
        v19 = v16;

        v20 = *(void **)(a1 + v17);
        v21 = v20;
        sub_151168(v20);
        sub_9DC660();

        v22 = objc_msgSend(v9, "backgroundArtworkCatalog");
        if (!v22)
          v22 = objc_msgSend(v15, "artworkCatalog");
        v23 = (id *)(a1 + OBJC_IVAR____TtC16MusicApplication32VerticalLockupCollectionViewCell_lockupImageArtworkCatalog);
        swift_beginAccess(v23, v28, 1, 0);
        v24 = *v23;
        *v23 = v22;
        v25 = v22;

        v26 = *v23;
        v27 = *v23;
        sub_150E90(v26);

        sub_CBD68(v12, 5);
        sub_CBD68(v12, 5);
        swift_unknownObjectRelease(v7);
      }
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_A0548C()
{
  _swift_stdlib_reportUnimplementedInitializer("MusicApplication.JSLiveRadioCaseViewController", 46, "init()", 6, 0);
  __break(1u);
}

double sub_A054B8()
{
  uint64_t v0;
  double result;

  swift_release(*(_QWORD *)(v0 + qword_14EF9A8));
  sub_56024(v0 + qword_1581730, &qword_14B1FF0);
  swift_release(*(_QWORD *)(v0 + qword_1581738));

  *(_QWORD *)&result = swift_release(*(_QWORD *)(v0 + qword_14EF9B8)).n128_u64[0];
  return result;
}

id sub_A0551C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JSLiveRadioCaseViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

double sub_A05550(uint64_t a1)
{
  double result;

  swift_release(*(_QWORD *)(a1 + qword_14EF9A8));
  sub_56024(a1 + qword_1581730, &qword_14B1FF0);
  swift_release(*(_QWORD *)(a1 + qword_1581738));

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + qword_14EF9B8)).n128_u64[0];
  return result;
}

uint64_t type metadata accessor for JSLiveRadioCaseViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_14EF9F8;
  if (!qword_14EF9F8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for JSLiveRadioCaseViewController);
  return result;
}

void sub_A055FC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[8];

  v4[0] = &unk_1090BD0;
  v4[1] = &unk_1090BE8;
  sub_12A264(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    v4[3] = &unk_1090BE8;
    v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[5] = &unk_1090BE8;
    v4[6] = &unk_1090C00;
    v4[7] = &unk_1090C18;
    swift_initClassMetadata2(a1, 256, 8, v4, a1 + 1256);
  }
}

uint64_t sub_A056A0()
{
  return type metadata accessor for JSLiveRadioCaseViewController(0);
}

void sub_A056A8(char *a1, void **a2, uint64_t a3)
{
  sub_A009A4(a1, *a2, a3);
}

void sub_A056CC(uint64_t a1, void **a2, uint64_t a3)
{
  sub_A0273C(a1, *a2, a3);
}

double sub_A056F0()
{
  return sub_A02838();
}

void sub_A05710(void **a1, uint64_t a2, uint64_t a3)
{
  sub_A02A34(*a1, a2, a3);
}

id sub_A05738()
{
  return sub_A04F0C();
}

void sub_A05758(void *a1)
{
  _QWORD *v1;
  uint64_t v3;
  id v4;
  uint64_t ObjCClassMetadata;
  uint64_t v6;
  id v7;

  v3 = *v1 + qword_14EF9C0;
  *(_QWORD *)v3 = 0;
  *(_QWORD *)(v3 + 8) = 0;
  *(_BYTE *)(v3 + 16) = 1;
  v4 = objc_msgSend((id)swift_getObjCClassFromObject(a1), "invalidationContextClass");
  ObjCClassMetadata = swift_getObjCClassMetadata(v4);
  v6 = sub_4E684(0, (unint64_t *)&unk_14DD3E0, UICollectionViewLayoutInvalidationContext_ptr);
  swift_dynamicCastMetatypeUnconditional(ObjCClassMetadata, v6, 0, 0, 0);
  v7 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  objc_msgSend(a1, "invalidateLayoutWithContext:", v7);

}

void sub_A05810(void *a1)
{
  sub_A040F4(a1);
}

double sub_A05830()
{
  return sub_A05AA4();
}

double sub_A05838(void *a1)
{
  double v1;
  double v2;
  _QWORD v4[8];

  objc_msgSend(a1, "bounds");
  HI.Grid.Metrics.init(width:variant:swiping:isAccessibilitySize:)(0, 1, 0, (uint64_t)v4, v1);
  v2 = *(double *)&v4[1];
  sub_A04A40();
  return v2;
}

double sub_A05894()
{
  return 0.0;
}

void sub_A058AC(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + qword_14EF9A0) = a1;
  sub_A04494();
}

uint64_t sub_A058BC@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = *v1 + qword_1581730;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_5C238(v3, a1, &qword_14B1FF0);
}

double sub_A05918(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  double result;
  _BYTE v5[24];

  v3 = *v1 + qword_1581730;
  swift_beginAccess(v3, v5, 33, 0);
  sub_5C1F4(a1, v3, &qword_14B1FF0);
  *(_QWORD *)&result = swift_endAccess(v5).n128_u64[0];
  return result;
}

uint64_t (*sub_A0597C(uint64_t a1))(_QWORD)
{
  _QWORD *v1;

  swift_beginAccess(*v1 + qword_1581730, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t sub_A059C4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + qword_1581738);
  *a1 = v2;
  return swift_retain(v2);
}

uint64_t sub_A059DC@<X0>(uint64_t a1@<X8>)
{
  _BYTE v3[160];

  sub_A048E4((uint64_t)v3);
  return sub_5C090((uint64_t)v3, a1, &qword_14B0A90);
}

uint64_t sub_A05A1C()
{
  return sub_5C150(&qword_14F0108, &qword_14F0110, (uint64_t)&unk_106E1F8);
}

uint64_t sub_A05A48(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_4DD24(&qword_14F0140, type metadata accessor for JSLiveRadioCaseViewController, (uint64_t)&unk_1090C70);
  result = sub_4DD24(&qword_14F0148, type metadata accessor for JSLiveRadioCaseViewController, (uint64_t)&unk_1090C8C);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

double sub_A05AA4()
{
  _BYTE *v0;
  double *v1;
  double v2;
  double v3;
  id v4;
  char *v5;
  double v6;
  char v8[24];

  v1 = (double *)&v0[qword_14EF9C0];
  if ((v0[qword_14EF9C0 + 16] & 1) == 0)
    return *v1;
  sub_A04D14();
  v3 = v2;
  v4 = objc_msgSend(v0, "traitCollection");
  v5 = (char *)(*(_QWORD *)&v0[qword_14EF9B0] + OBJC_IVAR____TtC11MusicJSCore15JSLiveRadioCase_usesFlowLayout);
  swift_beginAccess(v5, v8, 0, 0);
  v6 = sub_33F404(v4, *v5);

  *v1 = v3;
  v1[1] = v6;
  *((_BYTE *)v1 + 16) = 0;
  return v3;
}

void sub_A05B6C()
{
  _BYTE *v0;
  char *v1;
  uint64_t v2;
  char *v3;
  _QWORD *v4;

  v0[qword_14EF9A0] = 0;
  *(_QWORD *)&v0[qword_14EF9A8] = 0;
  v1 = &v0[qword_1581730];
  v2 = type metadata accessor for MetricsPageProperties(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  *(_QWORD *)&v0[qword_1581738] = 0;
  *(_QWORD *)&v0[qword_14EF9B8] = 0;
  v3 = &v0[qword_14EF9C0];
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  v3[16] = 1;
  v4 = &v0[qword_14EF9C8];
  *v4 = 0;
  v4[1] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000000010C4100, "MusicApplication/JSLiveRadioCaseViewController.swift", 52, 2, 28, 0);
  __break(1u);
}

double sub_A05C58(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t ObjectType;
  uint64_t v12;
  double result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v23[40];

  v3 = v2;
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = &v23[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  objc_msgSend(a1, "clearArtworkCatalogs", v8);
  ObjectType = swift_getObjectType();
  v12 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for ImpressionsBuilderBase);
  if (v12)
    v14 = v12;
  else
    v14 = 0;
  if (!v12)
    v2 = 0;
  if (v2)
  {
    v15 = swift_getObjectType();
    v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v15, v14);
    v18 = v17;
    v19 = swift_getObjectType();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v10, a2, v6);
    v20 = sub_4DD24((unint64_t *)&qword_14B2010, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
    AnyHashable.init<A>(_:)(v10, v6, v20);
    (*(void (**)(void *, _BYTE *, uint64_t, uint64_t))(v18 + 120))(a1, v23, v19, v18);
    sub_55E40((uint64_t)v23);
    *(_QWORD *)&result = swift_unknownObjectRelease(v16).n128_u64[0];
  }
  v21 = *(_QWORD *)(v3 + qword_1581738);
  if (v21)
  {
    swift_retain(*(_QWORD *)(v3 + qword_1581738));
    sub_81B9D8(a2, a1);
    *(_QWORD *)&result = swift_release(v21).n128_u64[0];
  }
  return result;
}

uint64_t sub_A05DCC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_A05DF0(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_A03DE4(a1, a2, v2);
}

uint64_t block_copy_helper_253(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_253(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_A05E10()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

double sub_A05E3C()
{
  uint64_t v0;

  return sub_A0402C(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_A05E44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_A05EB8(void *a1, uint64_t a2)
{
  uint64_t v2;

  type metadata accessor for IndexPath(0);
  sub_A01478(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_A05F08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return swift_deallocObject(v0, v7 + 8, v5);
}

double sub_A05FA8(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(type metadata accessor for IndexPath(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_A01840(a1, a2, *(_QWORD *)(v2 + 16), v2 + v6, *(_QWORD *)(v2 + v7), *(void **)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_A06018()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_A06094()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IndexPath(0) - 8) + 80);
  sub_A0260C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), v0 + ((v1 + 32) & ~v1));
}

uint64_t sub_A060C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v6 + 8));

  return swift_deallocObject(v0, v7 + 8, v5);
}

void sub_A06170(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(type metadata accessor for IndexPath(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_A01C2C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + v4, *(_QWORD *)(v1 + v5), *(_QWORD *)(v1 + v5 + 8), *(_QWORD *)(v1 + ((v5 + 23) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_A061D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  id *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;

  v1 = type metadata accessor for PlaybackIntentDescriptor(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v6 = (id *)(v0 + v4);
  v7 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for MusicPlaybackIntentDescriptor(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {

  }
  v9 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v10 = (id *)((char *)v6 + *(int *)(v1 + 28));
  if (v10[3])
    __swift_destroy_boxed_opaque_existential_1(v10);

  if (*(_QWORD *)(v0 + v9))
    swift_release(*(_QWORD *)(v0 + v9 + 8));
  return swift_deallocObject(v0, v9 + 16, v3 | 7);
}

void sub_A062BC()
{
  char *v0;
  double *v1;
  double v2;
  double v3;
  id v4;
  char *v5;
  double v6;
  char v7[24];

  v1 = (double *)&v0[qword_14EF9C0];
  if ((v0[qword_14EF9C0 + 16] & 1) != 0)
  {
    sub_A04D14();
    v3 = v2;
    v4 = objc_msgSend(v0, "traitCollection");
    v5 = (char *)(*(_QWORD *)&v0[qword_14EF9B0] + OBJC_IVAR____TtC11MusicJSCore15JSLiveRadioCase_usesFlowLayout);
    swift_beginAccess(v5, v7, 0, 0);
    v6 = sub_33F404(v4, *v5);

    *v1 = v3;
    v1[1] = v6;
    *((_BYTE *)v1 + 16) = 0;
  }
  else
  {
    v3 = *v1;
  }
  CGSize.nonNegative()(v3);
}

double sub_A06388(char a1)
{
  uint64_t v1;

  return sub_9FFBC8(a1, v1);
}

void sub_A06390(uint64_t a1, char a2)
{
  uint64_t v2;

  sub_9FFCA8(a1, a2, v2);
}

double sub_A06398(uint64_t a1)
{
  uint64_t v1;

  return sub_9FFD44(a1, v1);
}

void sub_A063A0(uint64_t a1)
{
  uint64_t v1;

  sub_9FFE1C(a1, v1);
}

void sub_A063A8(uint64_t a1)
{
  uint64_t v1;

  sub_9FFEB0(a1, v1);
}

void sub_A063B0(uint64_t a1)
{
  uint64_t v1;

  sub_9FFF44(a1, v1);
}

void sub_A063B8(uint64_t a1)
{
  uint64_t v1;

  sub_9FFFD8(a1, v1);
}

double sub_A063CC(void *a1, uint64_t a2, uint64_t a3, int a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t Strong;
  void *v18;
  double result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  void *v31;
  id v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  _BYTE v39[160];
  _OWORD v40[8];
  _OWORD v41[2];
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  _OWORD v50[3];

  v6 = v5;
  v37 = a4;
  v36 = a3;
  v38 = a2;
  v9 = type metadata accessor for Date(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14.n128_f64[0] = __chkstk_darwin(v13);
  v16 = (char *)&v33 - v15;
  Date.init()(v14);
  Strong = swift_unknownObjectWeakLoadStrong(v5 + 96);
  if (Strong
    && (v18 = (void *)Strong,
        sub_1B4F70(v38, (uint64_t)v39),
        v18,
        sub_5C090((uint64_t)v39, (uint64_t)v40, &qword_14B0A90),
        sub_210EE0((uint64_t)v40) != 1))
  {
    v48 = v40[6];
    v49 = v40[7];
    v50[0] = v41[0];
    *(_OWORD *)((char *)v50 + 9) = *(_OWORD *)((char *)v41 + 9);
    v44 = v40[2];
    v45 = v40[3];
    v46 = v40[4];
    v47 = v40[5];
    v42 = v40[0];
    v43 = v40[1];
    v35 = *(_QWORD *)(v6 + 88);
    v20 = swift_allocObject(&unk_1393DC0, 24, 7);
    v34 = a1;
    v21 = v20;
    swift_weakInit(v20 + 16);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v16, v9);
    v22 = *(unsigned __int8 *)(v10 + 80);
    v23 = a5;
    v24 = (v22 + 210) & ~v22;
    v25 = swift_allocObject(&unk_1393DE8, v24 + v11, v22 | 7);
    v26 = v49;
    *(_OWORD *)(v25 + 136) = v48;
    *(_OWORD *)(v25 + 152) = v26;
    *(_OWORD *)(v25 + 168) = v50[0];
    *(_OWORD *)(v25 + 177) = *(_OWORD *)((char *)v50 + 9);
    v27 = v45;
    *(_OWORD *)(v25 + 72) = v44;
    *(_OWORD *)(v25 + 88) = v27;
    v28 = v47;
    *(_OWORD *)(v25 + 104) = v46;
    *(_OWORD *)(v25 + 120) = v28;
    v29 = v43;
    *(_OWORD *)(v25 + 40) = v42;
    v30 = v38;
    *(_QWORD *)(v25 + 16) = v21;
    *(_QWORD *)(v25 + 24) = v30;
    v31 = v34;
    *(_QWORD *)(v25 + 32) = v34;
    *(_OWORD *)(v25 + 56) = v29;
    *(_QWORD *)(v25 + 200) = v36;
    *(_BYTE *)(v25 + 208) = v37 & 1;
    *(_BYTE *)(v25 + 209) = v23;
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v25 + v24, v12, v9);
    swift_retain(v21);
    v32 = v31;
    sub_318844((uint64_t)v39, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_3188B0);
    sub_A4DDAC((void (*)(uint64_t, double))sub_A13B54, v25);
    sub_318844((uint64_t)v39, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_3183E8);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
    swift_release(v21);
    *(_QWORD *)&result = swift_release(v25).n128_u64[0];
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
  }
  return result;
}

double sub_A06660(void *a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  return sub_A066A0(a1, a2, a3, a4, a5, (void (*)(_QWORD *__return_ptr, uint64_t))sub_62DCE4, (uint64_t)&unk_1393C80, (uint64_t)&unk_1393CA8, (void (*)(uint64_t, double))sub_A134FC);
}

double sub_A066A0(void *a1, uint64_t a2, uint64_t a3, int a4, int a5, void (*a6)(_QWORD *__return_ptr, uint64_t), uint64_t a7, uint64_t a8, void (*a9)(uint64_t, double))
{
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t Strong;
  void *v22;
  double result;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  _OWORD *v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  unint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, double);
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  int v52;
  void *v53;
  char *v54;
  uint64_t v55;
  _QWORD v56[20];
  _OWORD v57[8];
  _OWORD v58[2];
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  _OWORD v67[3];

  v49 = a8;
  v50 = a3;
  v46 = a7;
  v11 = v9;
  v51 = a4;
  v52 = a5;
  v55 = a2;
  v53 = a1;
  v48 = type metadata accessor for IndexPath(0);
  v12 = *(_QWORD *)(v48 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin(v48);
  v47 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Date(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  __chkstk_darwin(v14);
  v54 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18.n128_f64[0] = __chkstk_darwin(v17);
  v20 = (char *)&v41 - v19;
  Date.init()(v18);
  Strong = swift_unknownObjectWeakLoadStrong(v9 + 96);
  if (Strong
    && (v22 = (void *)Strong,
        a6(v56, v55),
        v22,
        sub_5C090((uint64_t)v56, (uint64_t)v57, &qword_14B0A90),
        sub_210EE0((uint64_t)v57) != 1))
  {
    v45 = a9;
    v65 = v57[6];
    v66 = v57[7];
    v67[0] = v58[0];
    *(_OWORD *)((char *)v67 + 9) = *(_OWORD *)((char *)v58 + 9);
    v61 = v57[2];
    v62 = v57[3];
    v63 = v57[4];
    v64 = v57[5];
    v59 = v57[0];
    v60 = v57[1];
    v44 = *(_QWORD *)(v11 + 88);
    v46 = swift_allocObject(v46, 24, 7);
    swift_weakInit(v46 + 16);
    v25 = v47;
    v24 = v48;
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v47, v55, v48);
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v54, v20, v14);
    v26 = *(unsigned __int8 *)(v12 + 80);
    v27 = (v26 + 24) & ~v26;
    v28 = (v13 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
    v42 = (v28 + 15) & 0xFFFFFFFFFFFFFFF8;
    v43 = (v28 + 175) & 0xFFFFFFFFFFFFFFF8;
    v29 = *(unsigned __int8 *)(v15 + 80);
    v55 = (v29 + v43 + 10) & ~v29;
    v30 = swift_allocObject(v49, v55 + v16, v26 | v29 | 7);
    *(_QWORD *)(v30 + 16) = v46;
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v30 + v27, v25, v24);
    v31 = v53;
    *(_QWORD *)(v30 + v28) = v53;
    v32 = (_OWORD *)(v30 + v42);
    v33 = v60;
    *v32 = v59;
    v32[1] = v33;
    v34 = v64;
    v32[4] = v63;
    v32[5] = v34;
    v35 = v62;
    v32[2] = v61;
    v32[3] = v35;
    *(_OWORD *)((char *)v32 + 137) = *(_OWORD *)((char *)v67 + 9);
    v36 = v67[0];
    v37 = v65;
    v32[7] = v66;
    v32[8] = v36;
    v32[6] = v37;
    v38 = v30 + v43;
    *(_QWORD *)v38 = v50;
    *(_BYTE *)(v38 + 8) = v51 & 1;
    *(_BYTE *)(v38 + 9) = v52;
    (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v30 + v55, v54, v14);
    v39 = v46;
    swift_retain(v46);
    v40 = v31;
    sub_318844((uint64_t)v56, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_3188B0);
    sub_A4DDAC(v45, v30);
    sub_318844((uint64_t)v56, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_3183E8);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
    swift_release(v39);
    *(_QWORD *)&result = swift_release(v30).n128_u64[0];
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
  }
  return result;
}

double sub_A069D4(void *a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  return sub_A066A0(a1, a2, a3, a4, a5, (void (*)(_QWORD *__return_ptr, uint64_t))sub_78F0D4, (uint64_t)&unk_1393C08, (uint64_t)&unk_1393C58, (void (*)(uint64_t, double))sub_A132F0);
}

uint64_t sub_A06A18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t result;
  id v16;
  id v17;
  uint64_t Strong;
  void *v19;
  unsigned __int8 v20;
  void *v21;
  _QWORD var30[7];

  v1 = v0;
  v2 = type metadata accessor for DispatchPredicate(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (_QWORD *)((char *)var30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_4E684(0, (unint64_t *)&qword_14AD360, OS_dispatch_queue_ptr);
  *v5 = static OS_dispatch_queue.main.getter(v6, v7, v8, v9, v10, v11, v12, v13, var30[0], var30[1], var30[2], var30[3], var30[4], var30[5], var30[6]);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  v14 = _dispatchPreconditionTest(_:)(v5);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  if ((v14 & 1) != 0)
  {
    v16 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    v17 = objc_msgSend(v16, "applicationState");

    if (!v17)
    {
      Strong = swift_unknownObjectWeakLoadStrong(v1 + 72);
      if (Strong)
      {
        v19 = (void *)Strong;
        v20 = UIScrollView.isScrolling.getter();

        if ((v20 & 1) == 0)
        {
          v21 = (void *)swift_unknownObjectWeakLoadStrong(v1 + 96);
          if (v21)

        }
      }
    }
    return v17 == 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_A06B5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t result;
  id v16;
  id v17;
  char v18;
  uint64_t Strong;
  void *v20;
  unsigned __int8 v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  char *v25;
  id v26;
  unsigned __int8 v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[6];

  v1 = v0;
  v2 = type metadata accessor for DispatchPredicate(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (_QWORD *)((char *)&v31[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_4E684(0, (unint64_t *)&qword_14AD360, OS_dispatch_queue_ptr);
  *v5 = static OS_dispatch_queue.main.getter(v6, v7, v8, v9, v10, v11, v12, v13, v30, v31[0], v31[1], v31[2], v31[3], v31[4], v31[5]);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  v14 = _dispatchPreconditionTest(_:)(v5);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  if ((v14 & 1) != 0)
  {
    v16 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    v17 = objc_msgSend(v16, "applicationState");

    if (v17)
    {
      v18 = 0;
    }
    else
    {
      Strong = swift_unknownObjectWeakLoadStrong(v1 + 72);
      if (Strong)
      {
        v20 = (void *)Strong;
        v21 = UIScrollView.isScrolling.getter();

        if ((v21 & 1) == 0)
        {
          v22 = swift_unknownObjectWeakLoadStrong(v1 + 96);
          if (v22)
          {
            v23 = (void *)v22;
            v24 = sub_AEF8A8();
            if (v24)
            {
              v25 = (char *)v24;
              v26 = sub_AEFB4C();
              v27 = UIScrollView.isScrolling.getter();

              if ((v27 & 1) == 0)
              {
                v28 = (uint64_t *)&v25[OBJC_IVAR____TtC16MusicApplication27VerticalStackViewController_visibleViewControllers];
                swift_beginAccess(&v25[OBJC_IVAR____TtC16MusicApplication27VerticalStackViewController_visibleViewControllers], v31, 0, 0);
                v29 = *v28;
                swift_bridgeObjectRetain();
                v18 = sub_A325D4(v23, v29);

                swift_bridgeObjectRelease(v29);
                return v18 & 1;
              }

            }
            else
            {

            }
          }
        }
      }
      v18 = 1;
    }
    return v18 & 1;
  }
  __break(1u);
  return result;
}

void sub_A06D38(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t Strong;
  void *v27;
  void *v28;
  id v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  BOOL v48;
  uint64_t v49;
  uint64_t v50;
  double v51;
  _QWORD *v52;
  _QWORD *v53;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v55;
  unint64_t v56;
  double *v57;
  uint64_t v58;
  double v59;
  _QWORD *v60;
  _QWORD *v61;
  char v62;
  unint64_t v63;
  unint64_t v64;
  double *v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  char v72[24];
  _BYTE v73[24];
  uint64_t v74[3];

  v5 = v4;
  v71 = a2;
  v9 = type metadata accessor for Date(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchPredicate(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (uint64_t *)((char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = sub_4E684(0, (unint64_t *)&qword_14AD360, OS_dispatch_queue_ptr);
  *v16 = static OS_dispatch_queue.main.getter(v17, v18, v19, v20, v21, v22, v23, v24);
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v14 + 104))(v16, enum case for DispatchPredicate.onQueue(_:), v13);
  v25 = _dispatchPreconditionTest(_:)(v16);
  (*(void (**)(uint64_t *, uint64_t))(v14 + 8))(v16, v13);
  if ((v25 & 1) == 0)
  {
    __break(1u);
    goto LABEL_60;
  }
  if (qword_14AC028 != -1)
LABEL_60:
    swift_once(&qword_14AC028, sub_A811C8);
  if ((byte_1581960 & 1) != 0 || *(_BYTE *)(v5 + 145) != 1 || (sub_A06B5C() & 1) == 0)
    return;
  Strong = swift_unknownObjectWeakLoadStrong(v5 + 72);
  if (!Strong)
  {
    if (qword_14AAEA8 != -1)
      swift_once(&qword_14AAEA8, sub_31253C);
    v35 = type metadata accessor for Logger(0);
    v36 = __swift_project_value_buffer(v35, (uint64_t)qword_157FE40);
    v37 = Logger.logObject.getter(v36);
    v38 = static os_log_type_t.info.getter(v37);
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v39 = 0;
      _os_log_impl(&dword_0, v37, v38, "Paused tracking.  Container view was deallocated", v39, 2u);
      swift_slowDealloc(v39, -1, -1);
    }

    return;
  }
  v27 = (void *)Strong;
  v28 = (void *)swift_unknownObjectWeakLoadStrong(a1 + 192);

  if (!v28)
  {

    return;
  }
  sub_A08528();
  v29 = v27;
  v30 = sub_A08708(a1, v27, (uint64_t (*)(id, uint64_t, _QWORD))sub_A08F3C, a4);
  v70 = v29;

  v31 = *(_QWORD *)(a1 + 88);
  if (*(_BYTE *)(a1 + 144))
    v32 = *(_QWORD *)(a1 + 16);
  else
    v32 = 0;
  if (*(_BYTE *)(a1 + 144))
    v33 = *(_QWORD *)(a1 + 24);
  else
    v33 = 0;
  if (v31)
  {
    v34 = (uint64_t *)(v31 + OBJC_IVAR____TtC11MusicJSCore8JSObject_nativeBridgeIdentifier);
    v32 = *v34;
    v33 = v34[1];
LABEL_23:
    swift_bridgeObjectRetain();
    goto LABEL_24;
  }
  if (v33)
    goto LABEL_23;
  v74[0] = *(_QWORD *)(a1 + 56);
  v32 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v33 = v68;
LABEL_24:
  swift_beginAccess(v5 + 104, v74, 0, 0);
  v40 = *(_QWORD *)(v5 + 104);
  if (!*(_QWORD *)(v40 + 16))
  {
LABEL_29:
    swift_bridgeObjectRelease();
    v43 = 0;
    goto LABEL_30;
  }
  swift_bridgeObjectRetain();
  v41 = sub_21BAD0(v32, v33);
  if ((v42 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_29;
  }
  v43 = *(_QWORD *)(*(_QWORD *)(v40 + 56) + 8 * v41);
  swift_retain(v43);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_beginAccess(v43 + 200, v72, 0, 0);
  v44 = *(_QWORD *)(v43 + 200);
  v45 = *(_QWORD *)(v44 + 16);
  if (v45)
  {
    v46 = *(unsigned __int8 *)(v44 + 16 * v45 + 24);
    goto LABEL_31;
  }
LABEL_30:
  v46 = 2;
LABEL_31:
  v48 = (v46 & 1) == 0 && v46 != 2;
  if ((v30 & 1) != 0)
  {
    if (!v48)
    {
      v49 = sub_6AE3B0(a1);
      v50 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a3, v9);
      v51 = Date.timeIntervalSince1970.getter(v50);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      v52 = (_QWORD *)(v49 + 200);
      swift_beginAccess(v49 + 200, v73, 33, 0);
      v53 = *(_QWORD **)(v49 + 200);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v53);
      *(_QWORD *)(v49 + 200) = v53;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v53 = sub_120158(0, v53[2] + 1, 1, v53);
        *v52 = v53;
      }
      v56 = v53[2];
      v55 = v53[3];
      if (v56 >= v55 >> 1)
      {
        v53 = sub_120158((_QWORD *)(v55 > 1), v56 + 1, 1, v53);
        *v52 = v53;
      }
      v53[2] = v56 + 1;
      v57 = (double *)&v53[2 * v56];
      v57[4] = v51;
      *((_BYTE *)v57 + 40) = 0;
LABEL_50:
      swift_endAccess(v73);
      swift_release(v49);
    }
  }
  else if (v48)
  {
    v49 = sub_6AE3B0(a1);
    v58 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a3, v9);
    v59 = Date.timeIntervalSince1970.getter(v58);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    v60 = (_QWORD *)(v49 + 200);
    swift_beginAccess(v49 + 200, v73, 33, 0);
    v61 = *(_QWORD **)(v49 + 200);
    v62 = swift_isUniquelyReferenced_nonNull_native(v61);
    *(_QWORD *)(v49 + 200) = v61;
    if ((v62 & 1) == 0)
    {
      v61 = sub_120158(0, v61[2] + 1, 1, v61);
      *v60 = v61;
    }
    v64 = v61[2];
    v63 = v61[3];
    if (v64 >= v63 >> 1)
    {
      v61 = sub_120158((_QWORD *)(v63 > 1), v64 + 1, 1, v61);
      *v60 = v61;
    }
    v61[2] = v64 + 1;
    v65 = (double *)&v61[2 * v64];
    v65[4] = v59;
    *((_BYTE *)v65 + 40) = 1;
    goto LABEL_50;
  }
  swift_beginAccess(v5 + 152, v73, 0, 0);
  v66 = *(_QWORD *)(v5 + 152);
  if (!v66)
  {

    goto LABEL_55;
  }
  if (v43)
  {
    swift_bridgeObjectRetain();
    swift_retain(v43);
    v67 = sub_A325E8(v71, v66);

    swift_release(v43);
    *(_BYTE *)(v43 + 193) = v67 & 1;
    swift_bridgeObjectRelease();
LABEL_55:
    swift_release(v43);
    return;
  }

}

void sub_A07324(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t Strong;
  void *v27;
  void *v28;
  uint64_t v29;
  id v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  BOOL v49;
  uint64_t v50;
  uint64_t v51;
  double v52;
  _QWORD *v53;
  _QWORD *v54;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v56;
  unint64_t v57;
  double *v58;
  uint64_t v59;
  double v60;
  _QWORD *v61;
  _QWORD *v62;
  char v63;
  unint64_t v64;
  unint64_t v65;
  double *v66;
  BOOL v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  char v72[24];
  _BYTE v73[24];
  uint64_t v74[3];

  v5 = v4;
  v71 = a2;
  v9 = type metadata accessor for Date(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchPredicate(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (uint64_t *)((char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = sub_4E684(0, (unint64_t *)&qword_14AD360, OS_dispatch_queue_ptr);
  *v16 = static OS_dispatch_queue.main.getter(v17, v18, v19, v20, v21, v22, v23, v24);
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v14 + 104))(v16, enum case for DispatchPredicate.onQueue(_:), v13);
  v25 = _dispatchPreconditionTest(_:)(v16);
  (*(void (**)(uint64_t *, uint64_t))(v14 + 8))(v16, v13);
  if ((v25 & 1) == 0)
  {
    __break(1u);
    goto LABEL_62;
  }
  if (qword_14AC028 != -1)
LABEL_62:
    swift_once(&qword_14AC028, sub_A811C8);
  if ((byte_1581960 & 1) != 0 || *(_BYTE *)(v5 + 145) != 1 || (sub_A06A18() & 1) == 0)
    return;
  Strong = swift_unknownObjectWeakLoadStrong(v5 + 72);
  if (!Strong)
  {
    if (qword_14AAEA8 != -1)
      swift_once(&qword_14AAEA8, sub_31253C);
    v36 = type metadata accessor for Logger(0);
    v37 = __swift_project_value_buffer(v36, (uint64_t)qword_157FE40);
    v38 = Logger.logObject.getter(v37);
    v39 = static os_log_type_t.info.getter(v38);
    if (os_log_type_enabled(v38, v39))
    {
      v40 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v40 = 0;
      _os_log_impl(&dword_0, v38, v39, "Paused tracking.  Container view was deallocated", v40, 2u);
      swift_slowDealloc(v40, -1, -1);
    }

    return;
  }
  v27 = (void *)Strong;
  v28 = (void *)swift_unknownObjectWeakLoadStrong(a1 + 192);

  if (!v28)
  {

    return;
  }
  v29 = swift_unknownObjectWeakLoadStrong(v5 + 16);
  swift_unknownObjectRelease(v29);
  if (!v29)

  v30 = v27;
  v31 = sub_A08708(a1, v27, (uint64_t (*)(id, uint64_t, _QWORD))sub_A08F3C, a4);
  v70 = v30;

  v32 = *(_QWORD *)(a1 + 88);
  if (*(_BYTE *)(a1 + 144))
    v33 = *(_QWORD *)(a1 + 16);
  else
    v33 = 0;
  if (*(_BYTE *)(a1 + 144))
    v34 = *(_QWORD *)(a1 + 24);
  else
    v34 = 0;
  if (v32)
  {
    v35 = (uint64_t *)(v32 + OBJC_IVAR____TtC11MusicJSCore8JSObject_nativeBridgeIdentifier);
    v33 = *v35;
    v34 = v35[1];
LABEL_25:
    swift_bridgeObjectRetain();
    goto LABEL_26;
  }
  if (v34)
    goto LABEL_25;
  v74[0] = *(_QWORD *)(a1 + 56);
  v33 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v34 = v68;
LABEL_26:
  swift_beginAccess(v5 + 104, v74, 0, 0);
  v41 = *(_QWORD *)(v5 + 104);
  if (!*(_QWORD *)(v41 + 16))
  {
LABEL_31:
    swift_bridgeObjectRelease();
    v44 = 0;
    goto LABEL_32;
  }
  swift_bridgeObjectRetain();
  v42 = sub_21BAD0(v33, v34);
  if ((v43 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_31;
  }
  v44 = *(_QWORD *)(*(_QWORD *)(v41 + 56) + 8 * v42);
  swift_retain(v44);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_beginAccess(v44 + 200, v72, 0, 0);
  v45 = *(_QWORD *)(v44 + 200);
  v46 = *(_QWORD *)(v45 + 16);
  if (v46)
  {
    v47 = *(unsigned __int8 *)(v45 + 16 * v46 + 24);
    goto LABEL_33;
  }
LABEL_32:
  v47 = 2;
LABEL_33:
  v49 = (v47 & 1) == 0 && v47 != 2;
  if ((v31 & 1) != 0)
  {
    if (!v49)
    {
      v50 = sub_6AE420(a1);
      v51 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a3, v9);
      v52 = Date.timeIntervalSince1970.getter(v51);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      v53 = (_QWORD *)(v50 + 200);
      swift_beginAccess(v50 + 200, v73, 33, 0);
      v54 = *(_QWORD **)(v50 + 200);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v54);
      *(_QWORD *)(v50 + 200) = v54;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v54 = sub_1201A0(0, v54[2] + 1, 1, v54);
        *v53 = v54;
      }
      v57 = v54[2];
      v56 = v54[3];
      if (v57 >= v56 >> 1)
      {
        v54 = sub_1201A0((_QWORD *)(v56 > 1), v57 + 1, 1, v54);
        *v53 = v54;
      }
      v54[2] = v57 + 1;
      v58 = (double *)&v54[2 * v57];
      v58[4] = v52;
      *((_BYTE *)v58 + 40) = 0;
LABEL_52:
      swift_endAccess(v73);
      swift_release(v50);
    }
  }
  else if (v49)
  {
    v50 = sub_6AE420(a1);
    v59 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a3, v9);
    v60 = Date.timeIntervalSince1970.getter(v59);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    v61 = (_QWORD *)(v50 + 200);
    swift_beginAccess(v50 + 200, v73, 33, 0);
    v62 = *(_QWORD **)(v50 + 200);
    v63 = swift_isUniquelyReferenced_nonNull_native(v62);
    *(_QWORD *)(v50 + 200) = v62;
    if ((v63 & 1) == 0)
    {
      v62 = sub_1201A0(0, v62[2] + 1, 1, v62);
      *v61 = v62;
    }
    v65 = v62[2];
    v64 = v62[3];
    if (v65 >= v64 >> 1)
    {
      v62 = sub_1201A0((_QWORD *)(v64 > 1), v65 + 1, 1, v62);
      *v61 = v62;
    }
    v62[2] = v65 + 1;
    v66 = (double *)&v62[2 * v65];
    v66[4] = v60;
    *((_BYTE *)v66 + 40) = 1;
    goto LABEL_52;
  }
  swift_beginAccess(v5 + 152, v73, 0, 0);
  if (!*(_QWORD *)(v5 + 152))
  {

    goto LABEL_57;
  }
  if (v44)
  {
    v67 = sub_A3276C(v71, *(_QWORD *)(v5 + 152));
    swift_bridgeObjectRetain();

    *(_BYTE *)(v44 + 193) = v67;
    swift_bridgeObjectRelease();
LABEL_57:
    swift_release(v44);
    return;
  }

}

void sub_A0791C(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t Strong;
  void *v27;
  void *v28;
  id v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  BOOL v48;
  uint64_t v49;
  uint64_t v50;
  double v51;
  _QWORD *v52;
  _QWORD *v53;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v55;
  unint64_t v56;
  double *v57;
  uint64_t v58;
  double v59;
  _QWORD *v60;
  _QWORD *v61;
  char v62;
  unint64_t v63;
  unint64_t v64;
  double *v65;
  uint64_t v66;
  BOOL v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  _QWORD v72[3];
  _QWORD v73[3];
  uint64_t v74[3];

  v5 = v4;
  v71 = a2;
  v9 = type metadata accessor for Date(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchPredicate(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (uint64_t *)((char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = sub_4E684(0, (unint64_t *)&qword_14AD360, OS_dispatch_queue_ptr);
  *v16 = static OS_dispatch_queue.main.getter(v17, v18, v19, v20, v21, v22, v23, v24, v69, v70, v71, v72[0], v72[1], v72[2], v73[0]);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v14 + 104))(v16, enum case for DispatchPredicate.onQueue(_:), v13);
  v25 = _dispatchPreconditionTest(_:)(v16);
  (*(void (**)(_QWORD *, uint64_t))(v14 + 8))(v16, v13);
  if ((v25 & 1) == 0)
  {
    __break(1u);
    goto LABEL_61;
  }
  if (qword_14AC028 != -1)
LABEL_61:
    swift_once(&qword_14AC028, sub_A811C8);
  if ((byte_1581960 & 1) != 0 || *(_BYTE *)(v5 + 145) != 1 || (sub_A06B5C() & 1) == 0)
    return;
  Strong = swift_unknownObjectWeakLoadStrong(v5 + 72);
  if (!Strong)
  {
    if (qword_14AAEA8 != -1)
      swift_once(&qword_14AAEA8, sub_31253C);
    v35 = type metadata accessor for Logger(0);
    v36 = __swift_project_value_buffer(v35, (uint64_t)qword_157FE40);
    v37 = Logger.logObject.getter(v36);
    v38 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v39 = 0;
      _os_log_impl(&dword_0, v37, v38, "Paused tracking.  Container view was deallocated", v39, 2u);
      swift_slowDealloc(v39, -1, -1);
    }

    return;
  }
  v27 = (void *)Strong;
  v28 = (void *)swift_unknownObjectWeakLoadStrong(a1 + 192);

  if (!v28)
  {

    return;
  }
  sub_A08528();
  v29 = v27;
  v30 = sub_A08B28(a1, v27, (uint64_t (*)(id, uint64_t, _QWORD))sub_A08F3C, a4);
  v70 = v29;

  v31 = *(_QWORD *)(a1 + 88);
  if (*(_BYTE *)(a1 + 144))
    v32 = *(_QWORD *)(a1 + 16);
  else
    v32 = 0;
  if (*(_BYTE *)(a1 + 144))
    v33 = *(_QWORD *)(a1 + 24);
  else
    v33 = 0;
  if (v31)
  {
    v34 = (uint64_t *)(v31 + OBJC_IVAR____TtC11MusicJSCore8JSObject_nativeBridgeIdentifier);
    v32 = *v34;
    v33 = v34[1];
LABEL_24:
    swift_bridgeObjectRetain();
    goto LABEL_25;
  }
  if (v33)
    goto LABEL_24;
  v74[0] = *(_QWORD *)(a1 + 56);
  v32 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v33 = v68;
LABEL_25:
  swift_beginAccess(v5 + 104, v74, 0, 0);
  v40 = *(_QWORD *)(v5 + 104);
  if (!*(_QWORD *)(v40 + 16))
  {
LABEL_30:
    swift_bridgeObjectRelease(v33);
    v43 = 0;
    goto LABEL_31;
  }
  swift_bridgeObjectRetain();
  v41 = sub_21BAD0(v32, v33);
  if ((v42 & 1) == 0)
  {
    swift_bridgeObjectRelease(v40);
    goto LABEL_30;
  }
  v43 = *(_QWORD *)(*(_QWORD *)(v40 + 56) + 8 * v41);
  swift_retain(v43);
  swift_bridgeObjectRelease(v40);
  swift_bridgeObjectRelease(v33);
  swift_beginAccess(v43 + 200, v72, 0, 0);
  v44 = *(_QWORD *)(v43 + 200);
  v45 = *(_QWORD *)(v44 + 16);
  if (v45)
  {
    v46 = *(unsigned __int8 *)(v44 + 16 * v45 + 24);
    goto LABEL_32;
  }
LABEL_31:
  v46 = 2;
LABEL_32:
  v48 = (v46 & 1) == 0 && v46 != 2;
  if ((v30 & 1) != 0)
  {
    if (!v48)
    {
      v49 = sub_6AE3E8(a1);
      v50 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a3, v9);
      v51 = Date.timeIntervalSince1970.getter(v50);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      v52 = (_QWORD *)(v49 + 200);
      swift_beginAccess(v49 + 200, v73, 33, 0);
      v53 = *(_QWORD **)(v49 + 200);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v53);
      *(_QWORD *)(v49 + 200) = v53;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v53 = sub_12017C(0, v53[2] + 1, 1, v53);
        *v52 = v53;
      }
      v56 = v53[2];
      v55 = v53[3];
      if (v56 >= v55 >> 1)
      {
        v53 = sub_12017C((_QWORD *)(v55 > 1), v56 + 1, 1, v53);
        *v52 = v53;
      }
      v53[2] = v56 + 1;
      v57 = (double *)&v53[2 * v56];
      v57[4] = v51;
      *((_BYTE *)v57 + 40) = 0;
LABEL_51:
      swift_endAccess(v73);
      swift_release(v49);
    }
  }
  else if (v48)
  {
    v49 = sub_6AE3E8(a1);
    v58 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a3, v9);
    v59 = Date.timeIntervalSince1970.getter(v58);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    v60 = (_QWORD *)(v49 + 200);
    swift_beginAccess(v49 + 200, v73, 33, 0);
    v61 = *(_QWORD **)(v49 + 200);
    v62 = swift_isUniquelyReferenced_nonNull_native(v61);
    *(_QWORD *)(v49 + 200) = v61;
    if ((v62 & 1) == 0)
    {
      v61 = sub_12017C(0, v61[2] + 1, 1, v61);
      *v60 = v61;
    }
    v64 = v61[2];
    v63 = v61[3];
    if (v64 >= v63 >> 1)
    {
      v61 = sub_12017C((_QWORD *)(v63 > 1), v64 + 1, 1, v61);
      *v60 = v61;
    }
    v61[2] = v64 + 1;
    v65 = (double *)&v61[2 * v64];
    v65[4] = v59;
    *((_BYTE *)v65 + 40) = 1;
    goto LABEL_51;
  }
  swift_beginAccess(v5 + 152, v73, 0, 0);
  v66 = *(_QWORD *)(v5 + 152);
  if (!v66)
  {

    goto LABEL_56;
  }
  if (v43)
  {
    v67 = sub_A3276C(v71, *(_QWORD *)(v5 + 152));
    swift_bridgeObjectRetain();

    *(_BYTE *)(v43 + 193) = v67;
    swift_bridgeObjectRelease(v66);
LABEL_56:
    swift_release(v43);
    return;
  }

}

void sub_A07F00(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  sub_A07F1C(a1, a2, a3, (uint64_t (*)(uint64_t, NSObject *, double))sub_A08B1C, (uint64_t (*)(uint64_t, __n128))sub_6AE3CC, (uint64_t (*)(BOOL, uint64_t, uint64_t, uint64_t))sub_120170, a4);
}

void sub_A07F1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, NSObject *, double), uint64_t (*a5)(uint64_t, __n128), uint64_t (*a6)(BOOL, uint64_t, uint64_t, uint64_t), double a7)
{
  uint64_t v7;
  uint64_t v9;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t Strong;
  NSObject *v30;
  void *v31;
  NSObject *v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  BOOL v53;
  uint64_t v54;
  uint64_t v55;
  double v56;
  uint64_t *v57;
  uint64_t v58;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  double v64;
  uint64_t *v65;
  uint64_t v66;
  char v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t (*v75)(BOOL, uint64_t, uint64_t, uint64_t);
  uint64_t v76;
  uint64_t (*v77)(uint64_t, __n128);
  uint64_t v78;
  _BYTE v79[24];
  _BYTE v80[24];
  _QWORD v81[3];

  v75 = a6;
  v76 = a2;
  v77 = a5;
  v78 = a3;
  v9 = v7;
  v12 = type metadata accessor for Date(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for DispatchPredicate(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (uint64_t *)((char *)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = sub_4E684(0, (unint64_t *)&qword_14AD360, OS_dispatch_queue_ptr);
  *v19 = static OS_dispatch_queue.main.getter(v20, v21, v22, v23, v24, v25, v26, v27);
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v17 + 104))(v19, enum case for DispatchPredicate.onQueue(_:), v16);
  v28 = _dispatchPreconditionTest(_:)(v19);
  (*(void (**)(uint64_t *, uint64_t))(v17 + 8))(v19, v16);
  if ((v28 & 1) == 0)
  {
    __break(1u);
    goto LABEL_59;
  }
  if (qword_14AC028 != -1)
LABEL_59:
    swift_once(&qword_14AC028, sub_A811C8);
  if ((byte_1581960 & 1) != 0 || *(_BYTE *)(v9 + 145) != 1 || (sub_A06B5C() & 1) == 0)
    return;
  Strong = swift_unknownObjectWeakLoadStrong(v9 + 72);
  if (!Strong)
  {
    if (qword_14AAEA8 != -1)
      swift_once(&qword_14AAEA8, sub_31253C);
    v38 = type metadata accessor for Logger(0);
    v39 = __swift_project_value_buffer(v38, (uint64_t)qword_157FE40);
    v30 = Logger.logObject.getter(v39);
    v40 = static os_log_type_t.info.getter(v30);
    if (os_log_type_enabled(v30, v40))
    {
      v41 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v41 = 0;
      _os_log_impl(&dword_0, v30, v40, "Paused tracking.  Container view was deallocated", v41, 2u);
      swift_slowDealloc(v41, -1, -1);
    }
    goto LABEL_20;
  }
  v30 = Strong;
  v31 = (void *)swift_unknownObjectWeakLoadStrong(a1 + 192);

  if (!v31)
  {
LABEL_20:

    return;
  }
  sub_A08528();
  v32 = v30;
  v33 = a4(a1, v30, a7);

  v34 = *(_QWORD *)(a1 + 88);
  if (*(_BYTE *)(a1 + 144))
    v35 = *(_QWORD *)(a1 + 16);
  else
    v35 = 0;
  if (*(_BYTE *)(a1 + 144))
    v36 = *(_QWORD *)(a1 + 24);
  else
    v36 = 0;
  if (v34)
  {
    v37 = (uint64_t *)(v34 + OBJC_IVAR____TtC11MusicJSCore8JSObject_nativeBridgeIdentifier);
    v35 = *v37;
    v36 = v37[1];
LABEL_22:
    swift_bridgeObjectRetain();
    goto LABEL_23;
  }
  if (v36)
    goto LABEL_22;
  v81[0] = *(_QWORD *)(a1 + 56);
  v35 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v36 = v73;
LABEL_23:
  swift_beginAccess(v9 + 104, v81, 0, 0);
  v42 = *(_QWORD *)(v9 + 104);
  if (!*(_QWORD *)(v42 + 16))
  {
LABEL_28:
    v48 = swift_bridgeObjectRelease(v36);
    v47 = 0;
    goto LABEL_29;
  }
  swift_bridgeObjectRetain();
  v43 = sub_21BAD0(v35, v36);
  if ((v44 & 1) == 0)
  {
    swift_bridgeObjectRelease(v42);
    goto LABEL_28;
  }
  v45 = *(_QWORD *)(*(_QWORD *)(v42 + 56) + 8 * v43);
  swift_retain(v45);
  swift_bridgeObjectRelease(v42);
  v46 = v36;
  v47 = v45;
  swift_bridgeObjectRelease(v46);
  v48 = swift_beginAccess(v45 + 200, v79, 0, 0);
  v49 = *(_QWORD *)(v45 + 200);
  v50 = *(_QWORD *)(v49 + 16);
  if (v50)
  {
    v51 = *(unsigned __int8 *)(v49 + 16 * v50 + 24);
    goto LABEL_30;
  }
LABEL_29:
  v51 = 2;
LABEL_30:
  v53 = (v51 & 1) == 0 && v51 != 2;
  if ((v33 & 1) != 0)
  {
    if (!v53)
    {
      v54 = v77(a1, v48);
      v55 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v78, v12);
      v56 = Date.timeIntervalSince1970.getter(v55);
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      v57 = (uint64_t *)(v54 + 200);
      swift_beginAccess(v54 + 200, v80, 33, 0);
      v58 = *(_QWORD *)(v54 + 200);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v58);
      *(_QWORD *)(v54 + 200) = v58;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v58 = v75(0, *(_QWORD *)(v58 + 16) + 1, 1, v58);
        *v57 = v58;
      }
      v61 = *(_QWORD *)(v58 + 16);
      v60 = *(_QWORD *)(v58 + 24);
      if (v61 >= v60 >> 1)
      {
        v58 = v75(v60 > 1, v61 + 1, 1, v58);
        *v57 = v58;
      }
      *(_QWORD *)(v58 + 16) = v61 + 1;
      v62 = v58 + 16 * v61;
      *(double *)(v62 + 32) = v56;
      *(_BYTE *)(v62 + 40) = 0;
LABEL_49:
      swift_endAccess(v80);
      swift_release(v54);
    }
  }
  else if (v53)
  {
    v54 = v77(a1, v48);
    v63 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v78, v12);
    v64 = Date.timeIntervalSince1970.getter(v63);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    v65 = (uint64_t *)(v54 + 200);
    swift_beginAccess(v54 + 200, v80, 33, 0);
    v66 = *(_QWORD *)(v54 + 200);
    v67 = swift_isUniquelyReferenced_nonNull_native(v66);
    *(_QWORD *)(v54 + 200) = v66;
    if ((v67 & 1) == 0)
    {
      v66 = v75(0, *(_QWORD *)(v66 + 16) + 1, 1, v66);
      *v65 = v66;
    }
    v69 = *(_QWORD *)(v66 + 16);
    v68 = *(_QWORD *)(v66 + 24);
    if (v69 >= v68 >> 1)
    {
      v66 = v75(v68 > 1, v69 + 1, 1, v66);
      *v65 = v66;
    }
    *(_QWORD *)(v66 + 16) = v69 + 1;
    v70 = v66 + 16 * v69;
    *(double *)(v70 + 32) = v64;
    *(_BYTE *)(v70 + 40) = 1;
    goto LABEL_49;
  }
  swift_beginAccess(v9 + 152, v80, 0, 0);
  v71 = *(_QWORD *)(v9 + 152);
  if (!v71)
  {

    goto LABEL_54;
  }
  if (v47)
  {
    swift_retain(v47);
    swift_bridgeObjectRetain();
    v72 = sub_A325E8(v76, v71);

    swift_release(v47);
    *(_BYTE *)(v47 + 193) = v72 & 1;
    swift_bridgeObjectRelease(v71);
LABEL_54:
    swift_release(v47);
    return;
  }

}

void sub_A0850C(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  sub_A07F1C(a1, a2, a3, (uint64_t (*)(uint64_t, NSObject *, double))sub_A08B1C, (uint64_t (*)(uint64_t, __n128))sub_6AE394, (uint64_t (*)(BOOL, uint64_t, uint64_t, uint64_t))sub_11FFFC, a4);
}

void sub_A08528()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  id v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;

  v1 = v0;
  v2 = v0 + 16;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + 16);
  swift_unknownObjectRelease(Strong);
  if (Strong)
    return;
  v4 = (void *)swift_unknownObjectWeakLoadStrong(v1 + 96);
  if (!v4)
    return;
  v21 = v4;
  v5 = objc_msgSend(v4, "parentViewController");
  if (!v5)
  {
    v11 = v21;
LABEL_25:

    return;
  }
  v22 = v5;
  ObjectType = swift_getObjectType();
  v7 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for ImpressionsBuilderBase);
  if (v7)
    v8 = v7;
  else
    v8 = 0;
  if (v7)
    v9 = v22;
  else
    v9 = 0;
  if (!v9)
  {
    v10 = v22;
    while (1)
    {
      v12 = v10;

      v10 = objc_msgSend(v10, "parentViewController");
      if (!v10)
        break;
      v13 = swift_getObjectType();
      v14 = swift_conformsToProtocol2(v13, &protocol descriptor for ImpressionsBuilderBase);
      if (v14)
        v8 = v14;
      else
        v8 = 0;
      if (v14)
        v15 = v10;
      else
        v15 = 0;
      if (v15)
        goto LABEL_23;
    }

    v11 = v22;
    goto LABEL_25;
  }
  v10 = v22;
LABEL_23:

  v16 = swift_getObjectType();
  v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v16, v8);
  v19 = v18;
  v20 = swift_unknownObjectWeakLoadStrong(v2);
  *(_QWORD *)(v1 + 24) = v19;
  swift_unknownObjectWeakAssign(v2, v17);
  sub_31070C(v20);

  swift_unknownObjectRelease(v17);
  swift_unknownObjectRelease(v20);
}

uint64_t sub_A08708(uint64_t a1, void *a2, uint64_t (*a3)(id, uint64_t, _QWORD), double a4)
{
  uint64_t v4;
  uint64_t Strong;
  void *v10;
  id v11;
  uint64_t v12;
  char v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  id v32;
  double v33;
  double v34;
  double v35;

  if (a2)
  {
    Strong = swift_unknownObjectWeakLoadStrong(a1 + 192);
    if (Strong)
    {
      v10 = (void *)Strong;
      v11 = a2;
      if ((objc_msgSend(v10, "isHidden") & 1) == 0)
      {
        if (objc_msgSend(v10, "_isInAWindow"))
        {
          v12 = swift_unknownObjectWeakLoadStrong(v4 + 16);
          v13 = a3(v11, v12, *(_QWORD *)(v4 + 24));
          *(_QWORD *)&v14 = swift_unknownObjectRelease(v12).n128_u64[0];
          if ((v13 & 1) != 0)
          {
            objc_msgSend(v11, "visibleBounds", v14);
            v16 = v15;
            v18 = v17;
            v20 = v19;
            v22 = v21;
            objc_msgSend(v11, "adjustedContentInset");
            v25 = UIEdgeInsetsInsetRect(v16, v18, v20, v22, v23, v24);
            v27 = v26;
            v29 = v28;
            v31 = v30;
            v32 = objc_msgSend(v10, "frame");
            CGRect.isContained(in:percentage:)(v32, v25, v27, v29, v31, a4, v33, v34, v35);
            __asm { BR              X10 }
          }
        }
      }

    }
  }
  return 0;
}

void sub_A089F0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  void *v9;
  void *v10;
  uint64_t v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  id v17;
  void *v18;
  id v19;
  double v20;
  double v21;
  double v22;

  v17 = objc_msgSend(v9, "superview");
  if (v17)
  {
    v18 = v17;
    objc_msgSend(v9, *(SEL *)(v11 + 1952));
    v19 = objc_msgSend(v18, "convertRect:toCoordinateSpace:", v10);
    CGRect.isContained(in:percentage:)(v19, v13, v14, v15, v16, v12, v20, v21, v22);

    JUMPOUT(0xA089B8);
  }
  JUMPOUT(0xA089B4);
}

void sub_A08A6C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  id v20;
  double v21;
  double v22;
  double v23;
  double v24;

  objc_msgSend(v9, *(SEL *)(v12 + 1952));
  objc_msgSend(v9, "convertRect:toCoordinateSpace:", v10);
  v15 = v14;
  v17 = v16;
  v19 = v18;
  v20 = objc_msgSend(v10, *(SEL *)(v11 + 3752));
  CGRect.isContained(in:percentage:)(v20, v21, v22, v23, v24, v13, v15, v17, v19);
  JUMPOUT(0xA089B4);
}

uint64_t sub_A08B1C(uint64_t a1, void *a2, double a3)
{
  return sub_A08B28(a1, a2, (uint64_t (*)(id, uint64_t, _QWORD))sub_A08F3C, a3);
}

uint64_t sub_A08B28(uint64_t a1, void *a2, uint64_t (*a3)(id, uint64_t, _QWORD), double a4)
{
  uint64_t v4;
  uint64_t Strong;
  void *v10;
  id v11;
  uint64_t v12;
  char v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  id v32;
  double v33;
  double v34;
  double v35;

  if (a2)
  {
    Strong = swift_unknownObjectWeakLoadStrong(a1 + 192);
    if (Strong)
    {
      v10 = (void *)Strong;
      v11 = a2;
      if ((objc_msgSend(v10, "isHidden") & 1) == 0
        && (objc_msgSend(v10, "_isInAWindow") & 1) != 0)
      {
        v12 = swift_unknownObjectWeakLoadStrong(v4 + 16);
        v13 = a3(v11, v12, *(_QWORD *)(v4 + 24));
        *(_QWORD *)&v14 = swift_unknownObjectRelease(v12).n128_u64[0];
        if ((v13 & 1) != 0)
        {
          objc_msgSend(v11, "visibleBounds", v14);
          v16 = v15;
          v18 = v17;
          v20 = v19;
          v22 = v21;
          objc_msgSend(v11, "adjustedContentInset");
          v25 = UIEdgeInsetsInsetRect(v16, v18, v20, v22, v23, v24);
          v27 = v26;
          v29 = v28;
          v31 = v30;
          v32 = objc_msgSend(v10, "frame");
          CGRect.isContained(in:percentage:)(v32, v25, v27, v29, v31, a4, v33, v34, v35);
          __asm { BR              X10 }
        }
      }

    }
  }
  return 0;
}

void sub_A08E14(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  void *v9;
  void *v10;
  uint64_t v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  id v17;
  void *v18;
  id v19;
  double v20;
  double v21;
  double v22;

  v17 = objc_msgSend(v9, "superview");
  if (v17)
  {
    v18 = v17;
    objc_msgSend(v9, *(SEL *)(v11 + 1952));
    v19 = objc_msgSend(v18, "convertRect:toCoordinateSpace:", v10);
    CGRect.isContained(in:percentage:)(v19, v13, v14, v15, v16, v12, v20, v21, v22);

    JUMPOUT(0xA08DDCLL);
  }
  JUMPOUT(0xA08DD8);
}

void sub_A08E90(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  id v20;
  double v21;
  double v22;
  double v23;
  double v24;

  objc_msgSend(v9, *(SEL *)(v12 + 1952));
  objc_msgSend(v9, "convertRect:toCoordinateSpace:", v10);
  v15 = v14;
  v17 = v16;
  v19 = v18;
  v20 = objc_msgSend(v10, *(SEL *)(v11 + 3752));
  CGRect.isContained(in:percentage:)(v20, v21, v22, v23, v24, v13, v15, v17, v19);
  JUMPOUT(0xA08DD8);
}

id sub_A08F3C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_A08F48(a1, a2, a3, (uint64_t (*)(id, uint64_t, uint64_t))sub_A08F3C);
}

id sub_A08F48(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(id, uint64_t, uint64_t))
{
  uint64_t ObjectType;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  id result;
  double v25;
  double v26;
  double v27;
  double v28;
  CGFloat v29;
  double v30;
  CGFloat v31;
  double v32;
  CGFloat v33;
  CGFloat v34;
  CGFloat v35;
  CGFloat v36;
  CGFloat v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  CGRect v42;
  CGRect v43;

  if (!a2)
    return &dword_0 + 1;
  ObjectType = swift_getObjectType();
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 88))(ObjectType, a3);
  if (!v8)
    return &dword_0 + 1;
  v9 = (id)v8;
  v10 = a1;
  v11 = objc_msgSend(v10, "superview");

  if (v11)
  {
    while (1)
    {
      if (v10)
      {
        v14 = objc_msgSend(v10, "superview");
        if (v14)
        {
          v15 = v14;

          if (v15 == v9)
            break;
        }
      }
      v12 = objc_msgSend(v10, "superview");

      v13 = objc_msgSend(v12, "superview");
      v10 = v12;
      if (!v13)
        goto LABEL_10;
    }
  }
  v12 = v10;
LABEL_10:
  objc_msgSend(v9, "visibleBounds");
  v17 = v16;
  v19 = v18;
  v21 = v20;
  v23 = v22;
  result = objc_msgSend(v9, "adjustedContentInset");
  if (v12)
  {
    v27 = UIEdgeInsetsInsetRect(v17, v19, v21, v23, v25, v26);
    v29 = v28;
    v31 = v30;
    v33 = v32;
    objc_msgSend(v12, "frame");
    v43.origin.x = v34;
    v43.origin.y = v35;
    v43.size.width = v36;
    v43.size.height = v37;
    v42.origin.x = v27;
    v42.origin.y = v29;
    v42.size.width = v31;
    v42.size.height = v33;
    if (CGRectIntersectsRect(v42, v43))
    {
      v38 = swift_getObjectType();
      v39 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 32))(v38, a3);
      v41 = a4(v9, v39, v40);

      swift_unknownObjectRelease(v39);
      return (id)(v41 & 1);
    }
    else
    {

      return 0;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_A09160(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  char v18;
  char v19;

  v2 = v1;
  sub_4E684(0, (unint64_t *)&qword_14AE2E0, MPIdentifierSet_ptr);
  v4 = sub_4E684(0, (unint64_t *)&qword_14AEDD0, MPModelSong_ptr);
  v5 = (uint64_t *)MPIdentifierSet.Purpose.Options.all.unsafeMutableAddressor();
  v6 = static MPIdentifierSet.bestIdentifier<A>(for:purpose:identifiers:)(v4, *v5, 0, v1);
  if (v7)
  {
    v8 = v6;
    v9 = v7;
    v10 = static MPIdentifierSet.bestIdentifier<A>(for:purpose:identifiers:)(v4, *v5, 0, a1);
    if (v11)
    {
      v12 = v11;
      if (v8 == v10 && v9 == v11)
      {
        swift_bridgeObjectRelease(v9);
        swift_bridgeObjectRelease(v12);
LABEL_15:
        v19 = 1;
        return v19 & 1;
      }
      v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v9, v10, v11, 0);
      swift_bridgeObjectRelease(v9);
      swift_bridgeObjectRelease(v12);
      if ((v14 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      swift_bridgeObjectRelease(v9);
    }
  }
  v15 = sub_A11038(v2);
  v16 = sub_A11038(a1);
  v17 = v16;
  if (v15[2] && v16[2])
  {
    v18 = sub_A11118((uint64_t)v16, (uint64_t)v15);
    swift_bridgeObjectRelease(v15);
    swift_bridgeObjectRelease(v17);
    v19 = v18 ^ 1;
  }
  else
  {
    swift_bridgeObjectRelease(v15);
    swift_bridgeObjectRelease(v17);
    v19 = 0;
  }
  return v19 & 1;
}

double sub_A092E4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  void *v4;
  void *v5;
  uint64_t v10;
  uint64_t v11;
  id v12;
  double v13;
  uint64_t v14;
  char *v15;
  id v16;
  BOOL v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v26;
  uint64_t v27;
  _QWORD v28[5];

  v5 = v4;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14CE2A0);
  v11 = *(_QWORD *)(v10 - 8);
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v28[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*((_BYTE *)v4 + qword_1581780) == 1)
  {
    v16 = objc_msgSend(v4, "traitCollection", v13);
    v17 = UITraitCollection.isMediaPicker.getter();

    if (!v17)
    {
      v12 = objc_msgSend(v5, "isEditing");
      v26 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC16MusicApplication10DetailCell_showsAppleDigitalMasterText);
      *(_BYTE *)(a1 + OBJC_IVAR____TtC16MusicApplication10DetailCell_showsAppleDigitalMasterText) = v12 ^ 1;
      if (v26 == (v12 ^ 1))
        goto LABEL_5;
      goto LABEL_4;
    }
  }
  v18 = *(_BYTE *)(a1 + OBJC_IVAR____TtC16MusicApplication10DetailCell_showsAppleDigitalMasterText);
  *(_BYTE *)(a1 + OBJC_IVAR____TtC16MusicApplication10DetailCell_showsAppleDigitalMasterText) = 0;
  if ((v18 & 1) != 0)
  {
LABEL_4:
    __chkstk_darwin(v12);
    *(&v27 - 2) = a1;
    v19 = type metadata accessor for DetailCellTextStack(0);
    v20 = sub_4DD24(&qword_14B7230, type metadata accessor for DetailCellTextStack, (uint64_t)&unk_1065750);
    v21 = UIHostingConfiguration<>.init(content:)(sub_1D0744, &v27 - 4, v19, v20);
    v22 = static Edge.Set.all.getter(v21);
    v28[3] = v10;
    v28[4] = sub_5C150(&qword_14CE2B0, (uint64_t *)&unk_14CE2A0, (uint64_t)&protocol conformance descriptor for UIHostingConfiguration<A, B>);
    __swift_allocate_boxed_opaque_existential_1Tm(v28);
    UIHostingConfiguration.margins(_:_:)(v22, v10, 0.0);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v10);
    UICollectionViewCell.contentConfiguration.setter(v28);
  }
LABEL_5:
  v23 = static String.stringForTrackCountAndDuration(trackCount:duration:)(a2, 0, a3, a4 & 1);
  return sub_1CCC58(v23, v24);
}

double sub_A094F0(void *a1)
{
  double result;

  sub_876E60(a1);
  type metadata accessor for DetailCell(0);
  static UICollectionReusableView.reuseIdentifier.getter();
  UICollectionView.register<A>(_:reuseIdentifier:)();
  swift_bridgeObjectRelease();
  type metadata accessor for ContainerDetailHeaderReusableView();
  UICollectionView.elementKindGlobalHeader.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  static UICollectionReusableView.reuseIdentifier.getter();
  UICollectionView.register<A>(_:ofKind:reuseIdentifier:)();
  swift_bridgeObjectRelease();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

void sub_A095A8()
{
  _QWORD *v0;

  (*(void (**)(void))((char *)&stru_6F8.size + (swift_isaMask & *v0)))();
  sub_A0C224();
}

uint64_t sub_A095D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  char v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t, double);
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  _BYTE v32[24];

  v31 = a2;
  v4 = type metadata accessor for IndexPath(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14CD4E0);
  __chkstk_darwin(v8);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD540);
  __chkstk_darwin(v11);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v27 - v16;
  v28 = *(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16);
  v29 = a1;
  v28((char *)&v27 - v16, a1, v4, v15);
  v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v30((uint64_t)v17, 0, 1, v4);
  v18 = v2 + qword_1581788;
  swift_beginAccess(v2 + qword_1581788, v32, 0, 0);
  v19 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_5C238((uint64_t)v17, (uint64_t)v10, (uint64_t *)&unk_14AD540);
  sub_5C238(v18, v19, (uint64_t *)&unk_14AD540);
  v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v20((uint64_t)v10, 1, v4) != 1)
  {
    sub_5C238((uint64_t)v10, (uint64_t)v13, (uint64_t *)&unk_14AD540);
    if (v20(v19, 1, v4) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v19, v4);
      v21 = sub_4DD24((unint64_t *)&qword_14B2940, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
      v22 = dispatch thunk of static Equatable.== infix(_:_:)(v13, v7, v4, v21);
      v23 = *(void (**)(char *, uint64_t))(v5 + 8);
      v23(v7, v4);
      sub_56024((uint64_t)v17, (uint64_t *)&unk_14AD540);
      v23(v13, v4);
      sub_56024((uint64_t)v10, (uint64_t *)&unk_14AD540);
      if ((v22 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v25 = v31;
      ((void (*)(uint64_t, uint64_t, uint64_t))v28)(v31, v29, v4);
      v24 = 0;
      return v30(v25, v24, 1, v4);
    }
    sub_56024((uint64_t)v17, (uint64_t *)&unk_14AD540);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
LABEL_6:
    sub_56024((uint64_t)v10, &qword_14CD4E0);
    goto LABEL_9;
  }
  sub_56024((uint64_t)v17, (uint64_t *)&unk_14AD540);
  if (v20(v19, 1, v4) != 1)
    goto LABEL_6;
  sub_56024((uint64_t)v10, (uint64_t *)&unk_14AD540);
LABEL_8:
  v24 = 1;
  v25 = v31;
  return v30(v25, v24, 1, v4);
}

uint64_t sub_A098E0(uint64_t a1, uint64_t a2)
{
  return sub_A116F4(a2);
}

void sub_A098E8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, uint64_t, uint64_t, double);
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  unsigned int (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  char v28;
  void (*v29)(char *, uint64_t);
  void *v30;
  _QWORD *v31;
  void *v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _BYTE v40[24];

  v37 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14CD4E0);
  __chkstk_darwin(v4);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD540);
  __chkstk_darwin(v7);
  v36 = (uint64_t)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v35 - v10;
  v12 = type metadata accessor for IndexPath(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v35 - v18;
  v20 = *(void (**)(char *, uint64_t, uint64_t, double))(v13 + 16);
  v38 = a2;
  v20((char *)&v35 - v18, a2, v12, v17);
  v39 = v2;
  v21 = (uint64_t)v2 + qword_1581788;
  v22 = swift_beginAccess((char *)v2 + qword_1581788, v40, 0, 0);
  ((void (*)(char *, char *, uint64_t, __n128))v20)(v11, v19, v12, v22);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  v23 = (uint64_t)&v6[*(int *)(v4 + 48)];
  sub_5C238(v21, (uint64_t)v6, (uint64_t *)&unk_14AD540);
  sub_5C238((uint64_t)v11, v23, (uint64_t *)&unk_14AD540);
  v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  if (v24((uint64_t)v6, 1, v12) != 1)
  {
    v25 = v36;
    sub_5C238((uint64_t)v6, v36, (uint64_t *)&unk_14AD540);
    if (v24(v23, 1, v12) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v13 + 32))(v15, v23, v12);
      v27 = sub_4DD24((unint64_t *)&qword_14B2940, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
      v28 = dispatch thunk of static Equatable.== infix(_:_:)(v25, v15, v12, v27);
      v29 = *(void (**)(char *, uint64_t))(v13 + 8);
      v29(v15, v12);
      sub_56024((uint64_t)v11, (uint64_t *)&unk_14AD540);
      v29(v19, v12);
      v29((char *)v25, v12);
      sub_56024((uint64_t)v6, (uint64_t *)&unk_14AD540);
      if ((v28 & 1) != 0)
        goto LABEL_8;
LABEL_12:
      sub_8B2044(v37, v38);
      return;
    }
    sub_56024((uint64_t)v11, (uint64_t *)&unk_14AD540);
    v26 = *(void (**)(char *, uint64_t))(v13 + 8);
    v26(v19, v12);
    v26((char *)v25, v12);
LABEL_6:
    sub_56024((uint64_t)v6, &qword_14CD4E0);
    goto LABEL_12;
  }
  sub_56024((uint64_t)v11, (uint64_t *)&unk_14AD540);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v19, v12);
  if (v24(v23, 1, v12) != 1)
    goto LABEL_6;
  sub_56024((uint64_t)v6, (uint64_t *)&unk_14AD540);
LABEL_8:
  v30 = sub_8763C4(v38);
  v31 = v39;
  v32 = (void *)(*(uint64_t (**)(void))&stru_158.segname[swift_isaMask & *v39])();
  v33 = v32;
  if (!v32)
  {
LABEL_11:
    (*(void (**)(void *, id, _QWORD, _QWORD))((char *)&stru_7E8.reserved2 + (swift_isaMask & *v31)))(v30, v33, *(_QWORD *)((char *)v31 + qword_1581790), *((unsigned __int8 *)v31 + qword_1581790 + 8));
    return;
  }
  v34 = objc_msgSend(v32, "results");

  if (v34)
  {
    v33 = objc_msgSend(v34, "totalItemCount");

    goto LABEL_11;
  }
  __break(1u);
}

id sub_A09CD8(void *a1, uint64_t a2)
{
  Class isa;

  sub_8785C8(a1, a2);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  objc_msgSend(a1, "deselectItemAtIndexPath:animated:", isa, 1);

  return sub_A0C420();
}

uint64_t sub_A09D34(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  void *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  id v21;
  uint64_t (*v22)(void);
  void *v23;
  id v24;
  uint64_t v25;
  void *v26;
  id v27;
  void *v28;
  char v29;
  double v31;
  double v32;
  char *v33;

  v5 = v4;
  v10 = UICollectionView.elementKindGlobalHeader.unsafeMutableAddressor();
  v11 = v10[1];
  v12 = *v10 == a2 && v11 == a3;
  if (!v12 && (_stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, *v10, v11, 0) & 1) == 0)
    return sub_89DB74((uint64_t)a1, a4);
  v13 = *(void **)((char *)v4 + qword_14F0220);
  if (!v13)
    return sub_89DB74((uint64_t)a1, a4);
  v14 = type metadata accessor for ContainerDetailHeaderReusableView();
  v15 = v13;
  v16 = static UICollectionReusableView.reuseIdentifier.getter();
  v18 = v17;
  v19 = (char *)UICollectionView.dequeue<A>(_:ofKind:for:reuseIdentifier:)(v14, a2, a3, a4, v16, v17, v14);
  swift_bridgeObjectRelease(v18);
  v20 = *(void **)&v19[OBJC_IVAR____TtC16MusicApplication33ContainerDetailHeaderReusableView_headerView];
  *(_QWORD *)&v19[OBJC_IVAR____TtC16MusicApplication33ContainerDetailHeaderReusableView_headerView] = v13;
  v21 = v15;
  sub_318C60(v20);

  v22 = *(uint64_t (**)(void))((char *)&stru_608.reloff + (swift_isaMask & *v5));
  v23 = 0;
  if ((v22() & 1) == 0)
  {
    v23 = *(void **)((char *)v5 + qword_14F0240);
    v24 = v23;
  }
  v25 = OBJC_IVAR____TtC16MusicApplication33ContainerDetailHeaderReusableView_highlightView;
  v26 = *(void **)&v19[OBJC_IVAR____TtC16MusicApplication33ContainerDetailHeaderReusableView_highlightView];
  *(_QWORD *)&v19[OBJC_IVAR____TtC16MusicApplication33ContainerDetailHeaderReusableView_highlightView] = v23;
  v27 = v23;
  objc_msgSend(v26, "removeFromSuperview");
  if (*(_QWORD *)&v19[v25])
    objc_msgSend(v19, "addSubview:");
  objc_msgSend(v19, "setNeedsLayout");

  v28 = *(void **)&v19[OBJC_IVAR____TtC16MusicApplication33ContainerDetailHeaderReusableView_separator];
  if (*((_BYTE *)v5 + qword_14F0238) == 1 && !*(_QWORD *)((char *)v5 + qword_14F0240))
    v29 = 1;
  else
    v29 = v22();
  objc_msgSend(v28, "setHidden:", v29 & 1);
  v19[OBJC_IVAR____TtC16MusicApplication33ContainerDetailHeaderReusableView_highlightViewDisplayStyle] = *((_BYTE *)v5 + qword_14F0230);
  objc_msgSend(v19, "frame");
  objc_msgSend(a1, "bounds");
  objc_msgSend(v19, "sizeThatFits:", v31, v32);
  v33 = v19;
  objc_msgSend(v33, "frame");
  objc_msgSend(v33, "setFrame:");

  return (uint64_t)v33;
}

BOOL sub_A09FE4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _BOOL8 v9;
  uint64_t v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD540);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, double))((char *)&stru_1F8.reserved2 + (swift_isaMask & *v2)))(a2, v5);
  v8 = type metadata accessor for IndexPath(0);
  v9 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8) != 1;
  sub_56024((uint64_t)v7, (uint64_t *)&unk_14AD540);
  return v9;
}

void sub_A0A0A4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;

  sub_876648(a1, a2, a3);
  objc_opt_self(UICollectionViewTableCell);
  v4 = swift_dynamicCastObjCClass(a2);
  if (v4)
  {
    v5 = (void *)v4;
    v6 = a2;
    v7 = objc_msgSend(v5, "tableViewCell");
    if (v7)
    {
      v8 = v7;
      objc_msgSend(v7, "_setDrawsSeparatorAtTopOfSection:", 0);

      v9 = objc_msgSend(v5, "tableViewCell");
      if (v9)
      {
        v10 = v9;
        objc_msgSend(v9, "_setDrawsSeparatorAtBottomOfSection:", 0);

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

void sub_A0A180(void *a1, void *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, uint64_t, uint64_t, double);
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  unsigned int (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  char *v27;
  uint64_t v28;
  char v29;
  void (*v30)(char *, uint64_t);
  _QWORD *v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  double v37;
  double v38;
  id v39;
  id v40;
  char *v41;
  _QWORD *v42;
  uint64_t v43;
  id v44;
  char v45[24];

  v44 = a2;
  v40 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14CD4E0);
  __chkstk_darwin(v5);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD540);
  __chkstk_darwin(v8);
  v43 = (uint64_t)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v40 - v11;
  v13 = type metadata accessor for IndexPath(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v41 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v40 - v18;
  v20 = *(void (**)(char *, uint64_t, uint64_t, double))(v14 + 16);
  v20((char *)&v40 - v18, a3, v13, v17);
  v42 = v3;
  v21 = (uint64_t)v3 + qword_1581788;
  v22 = swift_beginAccess((char *)v3 + qword_1581788, v45, 0, 0);
  ((void (*)(char *, char *, uint64_t, __n128))v20)(v12, v19, v13, v22);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
  v23 = (uint64_t)&v7[*(int *)(v5 + 48)];
  sub_5C238(v21, (uint64_t)v7, (uint64_t *)&unk_14AD540);
  sub_5C238((uint64_t)v12, v23, (uint64_t *)&unk_14AD540);
  v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  if (v24((uint64_t)v7, 1, v13) == 1)
  {
    sub_56024((uint64_t)v12, (uint64_t *)&unk_14AD540);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
    if (v24(v23, 1, v13) == 1)
    {
      sub_56024((uint64_t)v7, (uint64_t *)&unk_14AD540);
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  v25 = v43;
  sub_5C238((uint64_t)v7, v43, (uint64_t *)&unk_14AD540);
  if (v24(v23, 1, v13) == 1)
  {
    sub_56024((uint64_t)v12, (uint64_t *)&unk_14AD540);
    v26 = *(void (**)(char *, uint64_t))(v14 + 8);
    v26(v19, v13);
    v26((char *)v25, v13);
LABEL_6:
    sub_56024((uint64_t)v7, &qword_14CD4E0);
LABEL_13:
    objc_msgSend(v44, "rowHeight", v40);
    return;
  }
  v27 = v41;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 32))(v41, v23, v13);
  v28 = sub_4DD24((unint64_t *)&qword_14B2940, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
  v29 = dispatch thunk of static Equatable.== infix(_:_:)(v25, v27, v13, v28);
  v30 = *(void (**)(char *, uint64_t))(v14 + 8);
  v30(v27, v13);
  sub_56024((uint64_t)v12, (uint64_t *)&unk_14AD540);
  v30(v19, v13);
  v30((char *)v25, v13);
  sub_56024((uint64_t)v7, (uint64_t *)&unk_14AD540);
  if ((v29 & 1) == 0)
    goto LABEL_13;
LABEL_8:
  v31 = v42;
  v32 = sub_A0C168();
  v33 = (void *)(*(uint64_t (**)(void))&stru_158.segname[swift_isaMask & *v31])();
  v34 = v33;
  if (v33)
  {
    v35 = objc_msgSend(v33, "results");

    if (!v35)
    {
      __break(1u);
      return;
    }
    v34 = objc_msgSend(v35, "totalItemCount");

  }
  v36 = (*(uint64_t (**)(id, id, _QWORD, _QWORD))((char *)&stru_7E8.reserved2 + (swift_isaMask & *v31)))(v32, v34, *(_QWORD *)((char *)v31 + qword_1581790), *((unsigned __int8 *)v31 + qword_1581790 + 8));
  if (((*(uint64_t (**)(uint64_t))((char *)&stru_608.reloff + (swift_isaMask & *v31)))(v36) & 1) != 0)
  {

  }
  else
  {
    objc_msgSend(v44, "rowHeight");
    objc_msgSend(v40, "bounds");
    v38 = v37;
    v39 = objc_msgSend(v32, "contentView");
    objc_msgSend(v39, "sizeThatFits:", v38, 1.79769313e308);

  }
}

void sub_A0A60C(uint64_t a1)
{
  char *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  void *v14;
  id v15;
  Class isa;
  id v17;
  uint64_t ObjectType;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  void (*v23)(_QWORD *__return_ptr, uint64_t, uint64_t);
  id v24;
  _QWORD *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void *v29;
  void *v30;
  id v31;
  Class v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  BOOL v37;
  id v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v46;
  __int128 v47;
  __int128 v48;
  id v49;
  _QWORD *v50;
  uint64_t v51;
  _QWORD *v52;
  char *v53;
  _BYTE v54[72];
  _QWORD v55[6];
  _OWORD v56[2];
  uint64_t v57;
  char v58;
  _OWORD v59[2];
  __int128 v60;
  _OWORD v61[3];
  _OWORD v62[2];
  uint64_t v63;
  char v64;

  v2 = v1;
  v4 = type metadata accessor for SwipeActions(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD540);
  __chkstk_darwin(v7);
  v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for IndexPath(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v53 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(v1, "loadViewIfNeeded", v12);
  v14 = *(void **)&v1[qword_14DB768];
  if (!v14)
  {
    __break(1u);
    goto LABEL_28;
  }
  v15 = v14;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v17 = objc_msgSend(v15, "cellForItemAtIndexPath:", isa);

  if (!v17)
    return;
  ObjectType = swift_getObjectType();
  v19 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for LibraryAddKeepLocalStatusControllable);
  if (v19)
    v20 = v19;
  else
    v20 = 0;
  if (v19)
    v21 = v17;
  else
    v21 = 0;
  if (!v21)
  {

    return;
  }
  v51 = v10;
  v52 = v2;
  v50 = v6;
  v22 = swift_getObjectType();
  v23 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v20 + 40);
  v24 = v17;
  v23(v55, v22, v20);
  sub_5C090((uint64_t)v55, (uint64_t)v59, (uint64_t *)&unk_14B1F80);
  if ((v60 & 0xFE) == 0xF8)
  {

LABEL_24:
    return;
  }
  v61[0] = v59[0];
  v61[1] = v59[1];
  v61[2] = v60;
  v25 = v52;
  (*(void (**)(uint64_t))((char *)&stru_1F8.reserved2 + (swift_isaMask & *v52)))(a1);
  v26 = v51;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v51) == 1)
  {

    sub_56024((uint64_t)v9, (uint64_t *)&unk_14AD540);
    goto LABEL_24;
  }
  v27 = v53;
  v28 = (*(uint64_t (**)(char *, char *, uint64_t))(v11 + 32))(v53, v9, v26);
  v29 = (void *)(*(uint64_t (**)(uint64_t))&stru_158.segname[swift_isaMask & *v25])(v28);
  if (!v29)
  {
LABEL_23:

    (*(void (**)(char *, uint64_t))(v11 + 8))(v27, v26);
    goto LABEL_24;
  }
  v30 = v29;
  v31 = objc_msgSend(v29, "results");

  if (!v31)
  {
LABEL_28:
    __break(1u);
    return;
  }
  v32 = IndexPath._bridgeToObjectiveC()().super.isa;
  v33 = objc_msgSend(v31, "itemAtIndexPath:", v32);

  if (!v33)
    goto LABEL_23;
  objc_opt_self(MPModelObject);
  v34 = (void *)swift_dynamicCastObjCClass(v33);
  if (!v34)
  {
    swift_unknownObjectRelease(v33);
    goto LABEL_23;
  }
  v49 = v34;
  v35 = v52;
  v36 = objc_msgSend(v52, "traitCollection");
  v37 = UITraitCollection.isMediaPicker.getter();

  if (v37 || (objc_msgSend(v35, "isEditing") & 1) != 0)
  {

    (*(void (**)(char *, uint64_t))(v11 + 8))(v27, v26);
    swift_unknownObjectRelease(v33);
  }
  else
  {
    v38 = v24;
    sub_2170FC((uint64_t)v56);
    v47 = v56[1];
    v48 = v56[0];
    v39 = v57;
    v40 = v58;
    sub_E1098((uint64_t)v56);

    v62[0] = v48;
    v62[1] = v47;
    v63 = v39;
    v64 = v40;
    PresentationSource.init(viewController:position:)(v35, (uint64_t)v62, (uint64_t)v54);
    v41 = (uint64_t)v50;
    *v50 = 0;
    *(_QWORD *)(v41 + 8) = 0;
    *(_QWORD *)(v41 + 16) = 0;
    *(_WORD *)(v41 + 24) = -256;
    v42 = v41 + *(int *)(type metadata accessor for SwipeActions.Analytics(0) + 20);
    v43 = type metadata accessor for MetricsPageProperties(0);
    v44 = v26;
    v45 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56);
    v45(v42, 1, 1, v43);
    sub_56024(v42, &qword_14B1FF0);
    v45(v42, 1, 1, v43);
    v46 = objc_msgSend(v49, "innermostModelObject");
    sub_9B8D4C(v61, v46, (uint64_t)v54);

    sub_56060((uint64_t)v54);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v53, v44);

    sub_5C0DC(v41, type metadata accessor for SwipeActions);
    swift_unknownObjectRelease(v33);
  }
}

void sub_A0AAE4(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v3;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  void *v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  __n128 v22;
  void *v23;
  Class isa;
  id v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  void *v31;
  id v32;
  uint64_t v33;
  id v34;
  __n128 v35;
  __n128 v36;
  id v37;
  void *v38;
  void *v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _OWORD v49[2];
  uint64_t v50;

  v47 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  __chkstk_darwin(v47);
  v8 = (id *)((char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD540);
  __chkstk_darwin(v9);
  v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for IndexPath(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a1;
  if (!a1)
  {
    v17 = (void *)(*(uint64_t (**)(double))&stru_158.segname[swift_isaMask & *v3])(v14);
    if (!v17)
      goto LABEL_5;
  }
  v48 = v3;
  v18 = a1;
  if ((objc_msgSend(v17, "isEmpty") & 1) != 0)
  {

LABEL_5:
    v19 = type metadata accessor for PlaybackIntentDescriptor(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(a3, 1, 1, v19);
    return;
  }
  v46 = a3;
  sub_5C238(a2, (uint64_t)v11, (uint64_t *)&unk_14AD540);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_56024((uint64_t)v11, (uint64_t *)&unk_14AD540);
    v20 = 0;
    goto LABEL_21;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v16, v11, v12);
  v21 = objc_msgSend(v17, "results");
  if (!v21)
    goto LABEL_17;
  v23 = v21;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v25 = objc_msgSend(v23, "itemAtIndexPath:", isa);

  if (!v25)
    goto LABEL_17;
  objc_opt_self(MPModelObject);
  v26 = swift_dynamicCastObjCClass(v25);
  if (!v26)
  {
    v22 = swift_unknownObjectRelease(v25);
LABEL_17:
    (*(void (**)(char *, uint64_t, __n128))(v13 + 8))(v16, v12, v22);
    v20 = 0;
    goto LABEL_21;
  }
  v27 = (void *)v26;
  objc_opt_self(MPModelPlaylistEntry);
  v28 = swift_dynamicCastObjCClass(v27);
  if (v28)
  {
    v29 = (void *)v28;
    v30 = (*(uint64_t (**)(void))&stru_158.segname[swift_isaMask & *v48])();
    if (v30)
    {
      v31 = (void *)v30;
      v45 = v29;
      swift_unknownObjectRetain(v25);
      v32 = objc_msgSend(v31, "request");

      if (v32)
      {
        v33 = type metadata accessor for JSContainerDetailModelRequest();
        if (swift_dynamicCastClass(v32, v33))
        {

          v34 = objc_msgSend(v45, "innermostModelObject");
          v20 = objc_msgSend(v34, "identifiers");
          v35 = swift_unknownObjectRelease(v25);
          (*(void (**)(char *, uint64_t, __n128))(v13 + 8))(v16, v12, v35);
          swift_unknownObjectRelease(v25);

          goto LABEL_21;
        }
        swift_unknownObjectRelease(v25);

      }
      else
      {
        swift_unknownObjectRelease(v25);
      }
    }
  }
  v20 = objc_msgSend(v27, "identifiers");
  v36 = swift_unknownObjectRelease(v25);
  (*(void (**)(char *, uint64_t, __n128))(v13 + 8))(v16, v12, v36);
LABEL_21:
  v37 = objc_msgSend(v17, "request");
  v38 = v48;
  if (v37)
  {
    v39 = v37;
    v40 = objc_msgSend(v37, "playbackIntentWithStartItemIdentifiers:", v20);

    if (v40)
    {
      *v8 = v40;
      swift_storeEnumTagMultiPayload(v8, v47, 0);
      v50 = 0;
      memset(v49, 0, sizeof(v49));
      v41 = v38;
      v42 = v46;
      PlaybackIntentDescriptor.init(intentType:representedObject:intentOptions:replaceIntent:shuffleMode:repeatMode:sourceViewController:)((uint64_t)v8, (uint64_t)v49, 3, 0, 0, 1, 0, 1, v46, (objc_class *)v38);

      v43 = type metadata accessor for PlaybackIntentDescriptor(0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v42, 0, 1, v43);
    }
    else
    {

      v44 = type metadata accessor for PlaybackIntentDescriptor(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v46, 1, 1, v44);
    }

  }
  else
  {

    __break(1u);
  }
}

double sub_A0AF8C(int a1, id a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  double result;

  objc_msgSend(a2, "clearArtworkCatalogs");
  v2 = sub_A0B52C();
  if (qword_14ABED8 != -1)
    swift_once(&qword_14ABED8, sub_A0E4F8);
  v3 = type metadata accessor for IndexPath(0);
  v4 = __swift_project_value_buffer(v3, (uint64_t)qword_1581740);
  sub_A1151C(v4, (uint64_t)&unk_1393B68, (uint64_t)&unk_1393B90, (void (*)(uint64_t, double))sub_A11CF8);
  *(_QWORD *)&result = swift_release(v2).n128_u64[0];
  return result;
}

uint64_t sub_A0B018(uint64_t a1, uint64_t a2)
{
  return sub_A123E4(a2);
}

double sub_A0B020(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double result;
  uint64_t v6;

  v3 = qword_14DB780;
  v4 = *(_QWORD *)(v1 + qword_14DB780);
  *(_QWORD *)(v1 + qword_14DB780) = a1;
  swift_retain(a1);
  swift_release(v4);
  sub_A83504();
  *(_QWORD *)&result = swift_release(a1).n128_u64[0];
  v6 = *(_QWORD *)(v1 + v3);
  if (v6)
  {
    *(_QWORD *)(v6 + 24) = &off_1393B48;
    *(_QWORD *)&result = swift_unknownObjectWeakAssign(v6 + 16, v1).n128_u64[0];
  }
  return result;
}

void *sub_A0B09C()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + qword_14F0218);
  v2 = v1;
  return v1;
}

void *sub_A0B0C8()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + qword_14F0220);
  v2 = v1;
  return v1;
}

void sub_A0B0F4(void *a1)
{
  uint64_t v1;
  id v2;
  id v3;

  v3 = *(id *)(v1 + qword_14F0220);
  *(_QWORD *)(v1 + qword_14F0220) = a1;
  v2 = a1;
  sub_A0E18C(v3);

}

uint64_t sub_A0B140(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + qword_14F0230) = result;
  return result;
}

uint64_t sub_A0B150(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + qword_14F0238) = result;
  return result;
}

void *sub_A0B160()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + qword_14F0240);
  v2 = v1;
  return v1;
}

void sub_A0B18C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + qword_14F0240);
  *(_QWORD *)(v1 + qword_14F0240) = a1;

}

void sub_A0B1A0(void *a1)
{
  _QWORD *v1;
  void *v2;
  id v3;

  v2 = *(void **)((char *)v1 + qword_14F0248);
  *(_QWORD *)((char *)v1 + qword_14F0248) = a1;
  v3 = a1;

  *((_BYTE *)v1 + qword_14F0260) = 0;
  (*(void (**)(void))((char *)&stru_6F8.size + (swift_isaMask & *v1)))();

}

uint64_t sub_A0B208(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;

  v5 = v4 + qword_14F0250;
  *(_QWORD *)v5 = result;
  *(_QWORD *)(v5 + 8) = a2;
  *(_QWORD *)(v5 + 16) = a3;
  *(_BYTE *)(v5 + 24) = a4 & 1;
  return result;
}

void sub_A0B228(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  double v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v8)(double);
  void *v9;
  void *v10;
  id v11;
  Class isa;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  uint64_t v23;
  void *v24;
  id v25;
  id v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _OWORD v30[2];
  uint64_t v31;
  __objc2_prot *v32;

  v2 = v1;
  v4 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  v5 = __chkstk_darwin(v4);
  v7 = (_QWORD *)((char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(uint64_t (**)(double))&stru_158.segname[swift_isaMask & *v1];
  v9 = (void *)v8(v5);
  if (v9)
  {
    v10 = v9;
    v11 = objc_msgSend(v9, "results");

    if (v11)
    {
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      v13 = objc_msgSend(v11, "itemAtIndexPath:", isa);

      if (v13)
      {
        objc_opt_self(MPModelObject);
        v14 = swift_dynamicCastObjCClass(v13);
        if (v14
          && (v15 = v14, (v16 = (*(uint64_t (**)(void))((char *)&stru_748.offset + (swift_isaMask & *v2)))()) != 0))
        {
          v17 = (void *)v16;
          v18 = (*(uint64_t (**)(uint64_t))((char *)&stru_748.size + (swift_isaMask & *v2)))(v15);
          if (v18)
          {
            v19 = (void *)v18;
            v20 = (void *)((uint64_t (*)(void))v8)();
            if (v20
              && (v21 = v20,
                  v22 = objc_msgSend(v20, "request"),
                  v21,
                  v22))
            {
              v32 = &OBJC_PROTOCOL____TtP16MusicApplication43ContainerDetailIndividualPlaybackIntentable_;
              v23 = swift_dynamicCastObjCProtocolConditional(v22, 1, &v32);
              if (v23)
              {
                v24 = (void *)v23;
                v25 = objc_msgSend((id)objc_opt_self(MPPropertySet), "emptyPropertySet");
                v26 = objc_msgSend(v24, "playbackIntentFor:itemKind:itemProperties:", v17, v19, v25);

                if (v26)
                {
                  *v7 = v26;
                  swift_storeEnumTagMultiPayload(v7, v4, 0);
                  v31 = 0;
                  memset(v30, 0, sizeof(v30));
                  v27 = v2;
                  PlaybackIntentDescriptor.init(intentType:representedObject:intentOptions:replaceIntent:shuffleMode:repeatMode:sourceViewController:)((uint64_t)v7, (uint64_t)v30, 3, 0, 0, 1, 0, 1, a1, (objc_class *)v2);
                  v28 = type metadata accessor for PlaybackIntentDescriptor(0);
                  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(a1, 0, 1, v28);
                  swift_unknownObjectRelease(v13);

                  return;
                }
              }
              swift_unknownObjectRelease(v13);

            }
            else
            {
              swift_unknownObjectRelease(v13);

            }
          }
          else
          {
            swift_unknownObjectRelease(v13);

          }
        }
        else
        {
          swift_unknownObjectRelease(v13);
        }
      }
    }
  }
  v29 = type metadata accessor for PlaybackIntentDescriptor(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(a1, 1, 1, v29);
}

_QWORD *sub_A0B52C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  char *v4;
  char *v5;
  _QWORD *result;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v1 = qword_14F0270;
  v2 = *(_QWORD *)&v0[qword_14F0270];
  if (v2)
  {
    v3 = *(_QWORD **)&v0[qword_14F0270];
LABEL_5:
    swift_retain(v2);
    return v3;
  }
  v4 = v0;
  v5 = v0;
  result = objc_msgSend(v5, "loadViewIfNeeded");
  v7 = *(void **)&v5[qword_14DB768];
  if (v7)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F0CA8);
    swift_allocObject(v8, 208, 7);
    v3 = sub_6AD398(v5, v7, 0, 1);
    v9 = *(_QWORD *)&v4[v1];
    *(_QWORD *)&v4[v1] = v3;
    swift_retain(v3);
    swift_release(v9);
    v2 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

void sub_A0B5F8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  char *v17;
  uint64_t Strong;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  _OWORD *v22;
  uint64_t v23;
  void *v24;
  __n128 v25;
  void *v26;
  id v27;
  Class isa;
  id v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  _OWORD v35[8];
  _OWORD v36[2];
  _BYTE v37[160];
  _OWORD v38[8];
  _OWORD v39[3];

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD540);
  __chkstk_darwin(v5);
  v7 = (char *)v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for IndexPath(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(void **)((char *)v2 + qword_14F0220);
  if (v12)
  {
    v13 = type metadata accessor for DetailHeader();
    v14 = (void *)swift_dynamicCastClass(v12, v13);
    if (v14)
      v15 = v12;
  }
  else
  {
    v14 = 0;
  }
  if (qword_14ABED8 != -1)
    swift_once(&qword_14ABED8, sub_A0E4F8);
  v16 = __swift_project_value_buffer(v8, (uint64_t)qword_1581740);
  if ((static IndexPath.== infix(_:_:)(a1, v16) & 1) != 0)
  {
    v17 = (char *)v2 + qword_14F0208;
    Strong = swift_unknownObjectWeakLoadStrong((char *)v2 + qword_14F0208);
    if (Strong)
    {
      v19 = Strong;
      v20 = *((_QWORD *)v17 + 1);
      ObjectType = swift_getObjectType();
      (*(void (**)(_OWORD *__return_ptr, _QWORD *, uint64_t, uint64_t))(v20 + 40))(v38, v2, ObjectType, v20);
      sub_5C090((uint64_t)v38, (uint64_t)v35, &qword_14B0A90);
      swift_unknownObjectRelease(v19);

      v22 = v35;
LABEL_23:
      sub_5C090((uint64_t)v22, (uint64_t)v37, &qword_14B0A90);
      sub_5C090((uint64_t)v37, a2, &qword_14B0A90);
      return;
    }
    goto LABEL_21;
  }
  (*(void (**)(uint64_t))((char *)&stru_1F8.reserved2 + (swift_isaMask & *v2)))(a1);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_56024((uint64_t)v7, (uint64_t *)&unk_14AD540);
LABEL_21:

    sub_E1224(v38);
    goto LABEL_22;
  }
  v23 = (*(uint64_t (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
  v24 = (void *)(*(uint64_t (**)(uint64_t))&stru_158.segname[swift_isaMask & *v2])(v23);
  if (!v24)
    goto LABEL_20;
  v26 = v24;
  v27 = objc_msgSend(v24, "results");

  if (!v27)
    goto LABEL_25;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v29 = objc_msgSend(v27, "itemAtIndexPath:", isa);

  if (!v29)
  {
LABEL_20:
    (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v11, v8, v25);
    goto LABEL_21;
  }
  objc_opt_self(MPModelObject);
  v30 = swift_dynamicCastObjCClass(v29);
  if (!v30)
  {
    v25 = swift_unknownObjectRelease(v29);
    goto LABEL_20;
  }
  v31 = (void *)v30;
  v32 = IndexPath.safeItem.getter();
  v33 = v32;
  if (!v14 || (v33 = v32 + 1, !__OFADD__(v32, 1)))
  {
    v34 = sub_617858(v31, &dword_8, v33, 2, 0, 0, 0, 0, v35, 0, 0);
    (*(void (**)(char *, uint64_t, double))(v9 + 8))(v11, v8, v34);

    v38[6] = v35[6];
    v38[7] = v35[7];
    v39[0] = v36[0];
    *(_OWORD *)((char *)v39 + 9) = *(_OWORD *)((char *)v36 + 9);
    v38[2] = v35[2];
    v38[3] = v35[3];
    v38[4] = v35[4];
    v38[5] = v35[5];
    v38[0] = v35[0];
    v38[1] = v35[1];
    UIScreen.Dimensions.size.getter(*(double *)v35);
LABEL_22:
    v22 = v38;
    goto LABEL_23;
  }
  __break(1u);
LABEL_25:
  __break(1u);
}

double sub_A0B990(void *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  SEL *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  id v16;
  BOOL v17;
  uint64_t v18;
  double result;
  void *v20;
  void *v21;
  id v22;
  SEL *v23;
  id v24;
  void *v25;
  id v26;
  Class isa;
  id v28;
  uint64_t v29;
  void *v30;
  uint64_t (*v31)(void);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  void *v36;
  id v37;
  Class v38;
  id v39;
  uint64_t v40;
  char v41;
  __int128 v42;
  __int128 v43;
  _QWORD *v44;
  id v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t, char *, uint64_t);
  SEL *v56;
  SEL *v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t Strong;
  uint64_t v63;
  uint64_t v64;
  uint64_t ObjectType;
  void (*v66)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t);
  id v67;
  uint64_t v68;
  _UNKNOWN **v69;
  void *v70;
  id v71;
  Swift::String v72;
  Swift::String v73;
  Swift::String v74;
  uint64_t v75;
  __int128 v76;
  void *v77;
  SEL *v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  __int128 v82;
  uint64_t v83;
  _QWORD v84[9];
  uint64_t v85;
  unint64_t v86;
  _OWORD v87[2];
  uint64_t v88;
  char v89;
  _OWORD v90[2];
  uint64_t v91;
  char v92;

  v4 = v3;
  *(_QWORD *)&v82 = a3;
  v83 = a2;
  v81 = type metadata accessor for IndexPath(0);
  v80 = *(_QWORD *)(v81 - 8);
  v6 = *(_QWORD *)(v80 + 64);
  __chkstk_darwin(v81);
  v7 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14B0AC0);
  __chkstk_darwin(v8);
  v10 = (char *)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (SEL *)type metadata accessor for PlaybackIntentDescriptor(0);
  v12 = (uint64_t)*(v11 - 1);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = objc_msgSend(v3, "traitCollection", v13);
  v17 = UITraitCollection.isMediaPicker.getter();

  if (v17)
  {
    objc_opt_self(MPModelSong);
    v18 = swift_dynamicCastObjCClass(a1);
    if (!v18)
      return result;
    v20 = (void *)v18;
    v21 = a1;
    v22 = a1;
    sub_A0B228((uint64_t)v10);
    if ((*(unsigned int (**)(char *, uint64_t, SEL *))(v12 + 48))(v10, 1, v11) == 1)
    {
      sub_56024((uint64_t)v10, (uint64_t *)&unk_14B0AC0);

      return result;
    }
    sub_5C04C((uint64_t)v10, (uint64_t)v15, type metadata accessor for PlaybackIntentDescriptor);
    objc_msgSend(v4, "loadViewIfNeeded");
    v25 = *(void **)((char *)v4 + qword_14DB768);
    if (v25)
    {
      v26 = v25;
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      v28 = objc_msgSend(v26, "cellForItemAtIndexPath:", isa);

      if (v28)
      {
        v29 = type metadata accessor for SongCell(0);
        v30 = (void *)swift_dynamicCastClass(v28, v29);
        if (!v30)

      }
      else
      {
        v30 = 0;
      }
      v68 = *(_QWORD *)((char *)v4 + qword_14DB700);
      if (v68)
      {
        if (v30)
          v69 = &off_1369BF8;
        else
          v69 = 0;
        swift_retain(*(_QWORD *)((char *)v4 + qword_14DB700));
        v70 = v21;
        v71 = v30;
        sub_8789B8((uint64_t)v15, v20, (uint64_t)v30, (uint64_t)v69);

        sub_5C0DC((uint64_t)v15, type metadata accessor for PlaybackIntentDescriptor);
        swift_release(v68);

        v21 = v70;
      }
      else
      {

        sub_5C0DC((uint64_t)v15, type metadata accessor for PlaybackIntentDescriptor);
      }
      goto LABEL_26;
    }
LABEL_38:
    __break(1u);
LABEL_39:
    v85 = 0;
    v86 = 0xE000000000000000;
    _StringGuts.grow(_:)(24);
    v72._object = (void *)0x80000000010C7B40;
    v72._countAndFlagsBits = 0xD000000000000013;
    String.append(_:)(v72);
    objc_msgSend(v10, v11[142]);
    v73._countAndFlagsBits = 0xD000000000000018;
    v73._object = (void *)0x80000000010C7B60;
    String.append(_:)(v73);
    v74._countAndFlagsBits = 32;
    v74._object = (void *)0xE100000000000000;
    String.append(_:)(v74);
    v84[0] = objc_msgSend(v10, v11[142]);
    type metadata accessor for MPModelPlaylistEntryType(0);
    _print_unlocked<A, B>(_:_:)(v84, &v85, v75, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v85, v86, "MusicApplication/ContainerDetailSongsViewController.swift", 57, 2, 557, 0);
    __break(1u);
    JUMPOUT(0xA0C158);
  }
  objc_opt_self(MPModelPlaylistEntry);
  v10 = (char *)swift_dynamicCastObjCClass(a1);
  v23 = a1;
  if (v10)
  {
    v11 = (SEL *)&selRef_sharedPreferences;
    switch((unint64_t)objc_msgSend(v10, "type"))
    {
      case 0uLL:
        break;
      case 1uLL:
        v24 = objc_msgSend(v10, "song");
        goto LABEL_14;
      case 2uLL:
        v24 = objc_msgSend(v10, "tvEpisode");
        goto LABEL_14;
      case 3uLL:
        v24 = objc_msgSend(v10, "movie");
LABEL_14:
        v11 = (SEL *)v24;
        if (v11)
        {

          v23 = v11;
        }
        break;
      default:
        goto LABEL_39;
    }
  }
  v31 = *(uint64_t (**)(void))&stru_158.segname[swift_isaMask & *v4];
  v32 = v31();
  if (v32)
  {
    v11 = (SEL *)v32;
    v33 = type metadata accessor for ClassicalAlbumModelResponse();
    v34 = swift_dynamicCastClass(v11, v33);
    if (v34)
    {
      v35 = objc_retain(*(id *)(v34
                              + OBJC_IVAR____TtC16MusicApplication27ClassicalAlbumModelResponse_initialModelResponse));

      goto LABEL_21;
    }

  }
  v35 = (id)v31();
LABEL_21:
  v79 = a1;
  objc_msgSend(v4, "loadViewIfNeeded");
  v36 = *(void **)((char *)v4 + qword_14DB768);
  if (!v36)
  {
    __break(1u);
    goto LABEL_38;
  }
  v77 = v35;
  v37 = v36;
  v38 = IndexPath._bridgeToObjectiveC()().super.isa;
  v39 = objc_msgSend(v37, "cellForItemAtIndexPath:", v38);

  v78 = v23;
  if (v39)
  {
    sub_2170FC((uint64_t)v87);
    v82 = v87[0];
    v76 = v87[1];
    v40 = v88;
    v41 = v89;
    sub_E1098((uint64_t)v87);

    v42 = v76;
    v43 = v82;
  }
  else
  {
    v40 = 0;
    v43 = 0uLL;
    v41 = -1;
    v42 = 0uLL;
  }
  v90[0] = v43;
  v90[1] = v42;
  v91 = v40;
  v92 = v41;
  v44 = v4;
  PresentationSource.init(viewController:position:)(v44, (uint64_t)v90, (uint64_t)&v85);
  v45 = sub_A83260();
  v46 = swift_allocObject(&unk_1393BE0, 24, 7);
  swift_unknownObjectWeakInit(v46 + 16, v44);
  v47 = v4;
  v48 = v80;
  v49 = v81;
  (*(void (**)(char *, uint64_t, uint64_t))(v80 + 16))((char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v83, v81);
  sub_6087C((uint64_t)&v85, (uint64_t)v84);
  v50 = *(unsigned __int8 *)(v48 + 80);
  v51 = (v50 + 24) & ~v50;
  v52 = (v6 + v51 + 7) & 0xFFFFFFFFFFFFFFF8;
  v53 = (v52 + 15) & 0xFFFFFFFFFFFFFFF8;
  v54 = swift_allocObject(&unk_1393CF8, v53 + 72, v50 | 7);
  *(_QWORD *)(v54 + 16) = v46;
  v55 = *(void (**)(uint64_t, char *, uint64_t))(v48 + 32);
  v4 = v47;
  v55(v54 + v51, v7, v49);
  v56 = v78;
  *(_QWORD *)(v54 + v52) = v78;
  sub_648A4((uint64_t)v84, v54 + v53);
  v57 = v56;
  swift_retain(v46);
  v58 = v77;
  sub_280D90(v56, v77, 0, 1, (uint64_t)&v85, (void (*)(uint64_t, double))sub_A136EC, v54);
  sub_56060((uint64_t)&v85);

  swift_release(v46);
  swift_release(v54);

  v21 = v79;
LABEL_26:
  objc_opt_self(MPModelSong);
  v59 = swift_dynamicCastObjCClass(v21);
  if (v59)
  {
    v60 = v59;
    v61 = (char *)v4 + qword_14F0208;
    Strong = swift_unknownObjectWeakLoadStrong((char *)v4 + qword_14F0208);
    if (Strong)
    {
      v63 = Strong;
      v64 = *((_QWORD *)v61 + 1);
      ObjectType = swift_getObjectType();
      v66 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 16);
      v67 = v21;
      v66(v4, v60, v83, ObjectType, v64);

      *(_QWORD *)&result = swift_unknownObjectRelease(v63).n128_u64[0];
    }
  }
  return result;
}

id sub_A0C168()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id result;
  void *v6;
  id v7;

  v1 = qword_14F0288;
  v2 = *(void **)&v0[qword_14F0288];
  if (v2)
  {
    v3 = *(id *)&v0[qword_14F0288];
LABEL_5:
    v7 = v2;
    return v3;
  }
  type metadata accessor for DetailCell(0);
  v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  objc_msgSend(v4, "setHidden:", 1);
  objc_msgSend(v0, "loadViewIfNeeded");
  result = *(id *)&v0[qword_14DB768];
  if (result)
  {
    objc_msgSend(result, "addSubview:", v4);
    v6 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v4;
    v3 = v4;

    v2 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

void sub_A0C224()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  Class isa;
  void (*v18)(char *, uint64_t);
  char v20[24];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD540);
  __chkstk_darwin(v2);
  v4 = &v20[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = __chkstk_darwin(v9);
  v12 = &v20[-v11 - 8];
  v13 = qword_14F0260;
  if ((v1[qword_14F0260] & 1) == 0 && objc_msgSend(v1, "isViewLoaded", v10))
  {
    v14 = (uint64_t)&v1[qword_1581758];
    swift_beginAccess(&v1[qword_1581758], v20, 0, 0);
    sub_5C238(v14, (uint64_t)v4, (uint64_t *)&unk_14AD540);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {
      sub_56024((uint64_t)v4, (uint64_t *)&unk_14AD540);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v12, v4, v5);
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v12, v5);
      objc_msgSend(v1, "loadViewIfNeeded");
      v15 = *(void **)&v1[qword_14DB768];
      if (v15)
      {
        v16 = v15;
        isa = IndexPath._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v16, "scrollToItemAtIndexPath:atScrollPosition:animated:", isa, 2, v1[qword_14F0278]);
        v18 = *(void (**)(char *, uint64_t))(v6 + 8);
        v18(v8, v5);
        v18(v12, v5);

        v1[v13] = 1;
      }
      else
      {
        __break(1u);
      }
    }
  }
}

id sub_A0C420()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  id result;
  void *v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  char v15;
  char v16;
  __n128 v17;
  int v18;
  uint64_t *v19;
  uint64_t v20;
  char v21;
  char v22;
  void (*v23)(char *, uint64_t);
  __n128 v24;
  int v25;
  char *v26;
  uint64_t Strong;
  uint64_t v28;
  uint64_t v29;
  uint64_t ObjectType;
  char v32[24];

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v32[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = __chkstk_darwin(v5);
  v8 = &v32[-v7 - 8];
  result = objc_msgSend(v0, "loadViewIfNeeded", v6);
  v10 = *(void **)&v0[qword_14DB768];
  if (!v10)
  {
    __break(1u);
    return result;
  }
  v11 = v10;
  v12 = objc_msgSend(v11, "indexPathsForSelectedItems");
  if (!v12)
  {

    IndexPath.init(item:section:)(0, 0);
    goto LABEL_7;
  }
  v13 = v12;
  v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v12, v1);

  IndexPath.init(item:section:)(0, 0);
  if (!v14)
  {
LABEL_7:
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v8, v1);
    goto LABEL_8;
  }
  sub_6FF578((uint64_t)v8, v14);
  v16 = v15;
  v17 = swift_bridgeObjectRelease(v14);
  (*(void (**)(char *, char *, uint64_t, __n128))(v2 + 16))(v4, v8, v1, v17);
  if ((v16 & 1) != 0)
  {
LABEL_8:
    v19 = (uint64_t *)&v0[qword_14F0280];
    swift_beginAccess(&v0[qword_14F0280], v32, 0, 0);
    v20 = *v19;
    swift_bridgeObjectRetain();
    sub_6FF578((uint64_t)v4, v20);
    v22 = v21;
    swift_bridgeObjectRelease(v20);
    v18 = (v22 & 1) == 0;
    goto LABEL_9;
  }
  v18 = 1;
LABEL_9:
  v23 = *(void (**)(char *, uint64_t))(v2 + 8);
  v23(v4, v1);
  v25 = v0[qword_1581798];
  v0[qword_1581798] = v18;
  if (v18 != v25)
  {
    v26 = &v0[qword_14F0208];
    Strong = swift_unknownObjectWeakLoadStrong(&v0[qword_14F0208]);
    if (Strong)
    {
      v28 = Strong;
      v29 = *((_QWORD *)v26 + 1);
      ObjectType = swift_getObjectType();
      (*(void (**)(char *, uint64_t, uint64_t))(v29 + 8))(v0, ObjectType, v29);
      v24 = swift_unknownObjectRelease(v28);
    }
  }
  return (id)((uint64_t (*)(char *, uint64_t, __n128))v23)(v8, v1, v24);
}

uint64_t sub_A0C640(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, uint64_t a5, int a6, int a7, uint64_t a8, double a9)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t result;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, __n128);
  __n128 v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  char v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __n128 v42;
  char isUniquelyReferenced_nonNull_native;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  int v52;
  uint64_t v53;
  _BYTE v54[24];
  char v55[24];
  char v56[24];

  v51 = a6;
  v52 = a7;
  v50 = a5;
  v15 = type metadata accessor for IndexPath(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v46 - v20;
  a1 += 16;
  swift_beginAccess(a1, v56, 0, 0);
  result = swift_weakLoadStrong(a1);
  if (result)
  {
    v23 = result;
    v47 = a3;
    v48 = a2;
    v49 = a8;
    v24 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
    v24(v21, a2, v15);
    v25 = (_QWORD *)(v23 + 112);
    swift_beginAccess(v23 + 112, v55, 0, 0);
    v26 = *(_QWORD *)(v23 + 112);
    v27 = *(_QWORD *)(v26 + 16);
    swift_bridgeObjectRetain();
    if (v27 && (v28 = sub_21BFD0((uint64_t)v21), (v29 & 1) != 0))
    {
      v30 = *(_QWORD *)(*(_QWORD *)(v26 + 56) + 8 * v28);
      v31 = *(void (**)(char *, uint64_t, __n128))(v16 + 8);
      v32 = swift_retain(v30);
      v31(v21, v15, v32);
      swift_bridgeObjectRelease();
      swift_unknownObjectWeakAssign(v30 + 192, v47);
      v33 = v48;
    }
    else
    {
      v34 = *(void (**)(char *, uint64_t))(v16 + 8);
      v34(v21, v15);
      swift_bridgeObjectRelease();
      v35 = v52;
      if (v52 == 4)
        v35 = *(_BYTE *)(v23 + 40);
      v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F0D18);
      v30 = swift_allocObject(v36, 201, 7);
      v37 = swift_unknownObjectWeakInit(v30 + 192);
      v38 = a4[7];
      *(_OWORD *)(v30 + 112) = a4[6];
      *(_OWORD *)(v30 + 128) = v38;
      *(_OWORD *)(v30 + 144) = a4[8];
      *(_OWORD *)(v30 + 153) = *(_OWORD *)((char *)a4 + 137);
      v39 = a4[3];
      *(_OWORD *)(v30 + 48) = a4[2];
      *(_OWORD *)(v30 + 64) = v39;
      v40 = a4[5];
      *(_OWORD *)(v30 + 80) = a4[4];
      *(_OWORD *)(v30 + 96) = v40;
      v41 = a4[1];
      *(_OWORD *)(v30 + 16) = *a4;
      *(_OWORD *)(v30 + 32) = v41;
      v42 = swift_unknownObjectWeakAssign(v37, v47);
      *(_QWORD *)(v30 + 176) = v50;
      *(_BYTE *)(v30 + 184) = v51 & 1;
      *(_BYTE *)(v30 + 200) = v35;
      v33 = v48;
      ((void (*)(char *, uint64_t, uint64_t, __n128))v24)(v18, v48, v15, v42);
      swift_beginAccess(v23 + 112, v54, 33, 0);
      sub_318480((uint64_t)a4);
      swift_retain(v30);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v25);
      v53 = *v25;
      *v25 = 0x8000000000000000;
      sub_19DF88(v30, (uint64_t)v18, isUniquelyReferenced_nonNull_native);
      *v25 = v53;
      v44 = swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t, __n128))v34)(v18, v15, v44);
      swift_endAccess(v54);
    }
    swift_retain(v30);
    sub_A07F1C(v45, v33, v49, (uint64_t (*)(uint64_t, NSObject *, double))sub_A08B1C, (uint64_t (*)(uint64_t, __n128))sub_6AE404, (uint64_t (*)(BOOL, uint64_t, uint64_t, uint64_t))sub_120188, a9);
    swift_release(v23);
    return swift_release_n(v30, 2);
  }
  return result;
}

uint64_t sub_A0C928(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, uint64_t a5, int a6, char a7, uint64_t a8, double a9)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t result;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __n128 v33;
  char isUniquelyReferenced_nonNull_native;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  _BYTE v42[24];
  _BYTE v43[24];
  _BYTE v44[24];

  v40 = a6;
  v39 = a5;
  v16 = type metadata accessor for IndexPath(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v44, 0, 0);
  result = swift_weakLoadStrong(a1);
  if (result)
  {
    v21 = result;
    v37 = a3;
    v38 = a8;
    v22 = (_QWORD *)(result + 112);
    swift_beginAccess(result + 112, v43, 0, 0);
    v23 = *(_QWORD *)(v21 + 112);
    if (*(_QWORD *)(v23 + 16))
    {
      swift_bridgeObjectRetain();
      v24 = sub_21BFD0(a2);
      if ((v25 & 1) != 0)
      {
        v26 = *(_QWORD *)(*(_QWORD *)(v23 + 56) + 8 * v24);
        swift_retain(v26);
        swift_bridgeObjectRelease();
        swift_unknownObjectWeakAssign(v26 + 192, v37);
LABEL_9:
        swift_retain(v26);
        sub_A07F1C(v36, a2, v38, (uint64_t (*)(uint64_t, NSObject *, double))sub_A08B1C, (uint64_t (*)(uint64_t, __n128))sub_6AE394, (uint64_t (*)(BOOL, uint64_t, uint64_t, uint64_t))sub_11FFFC, a9);
        swift_release(v21);
        return swift_release_n(v26, 2);
      }
      swift_bridgeObjectRelease();
    }
    if (a7 == 4)
      a7 = *(_BYTE *)(v21 + 40);
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F0D30);
    v26 = swift_allocObject(v27, 201, 7);
    v28 = swift_unknownObjectWeakInit(v26 + 192);
    v29 = a4[7];
    *(_OWORD *)(v26 + 112) = a4[6];
    *(_OWORD *)(v26 + 128) = v29;
    *(_OWORD *)(v26 + 144) = a4[8];
    *(_OWORD *)(v26 + 153) = *(_OWORD *)((char *)a4 + 137);
    v30 = a4[3];
    *(_OWORD *)(v26 + 48) = a4[2];
    *(_OWORD *)(v26 + 64) = v30;
    v31 = a4[5];
    *(_OWORD *)(v26 + 80) = a4[4];
    *(_OWORD *)(v26 + 96) = v31;
    v32 = a4[1];
    *(_OWORD *)(v26 + 16) = *a4;
    *(_OWORD *)(v26 + 32) = v32;
    v33 = swift_unknownObjectWeakAssign(v28, v37);
    *(_QWORD *)(v26 + 176) = v39;
    *(_BYTE *)(v26 + 184) = v40 & 1;
    *(_BYTE *)(v26 + 200) = a7;
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v17 + 16))(v19, a2, v16, v33);
    swift_beginAccess(v22, v42, 33, 0);
    sub_318480((uint64_t)a4);
    swift_retain(v26);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v22);
    v41 = *v22;
    *v22 = 0x8000000000000000;
    sub_1A0230(v26, (uint64_t)v19, isUniquelyReferenced_nonNull_native);
    *v22 = v41;
    v35 = swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, __n128))(v17 + 8))(v19, v16, v35);
    swift_endAccess(v42);
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_A0CBBC(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, uint64_t a5, char a6, char a7, uint64_t a8, double a9)
{
  return sub_A0CBF8(a1, a2, a3, a4, a5, a6, a7, a9, a8, (void (*)(double))sub_A07324, &qword_14F0D28, (void (*)(uint64_t, uint64_t, uint64_t))sub_1A0244);
}

uint64_t sub_A0CBF8(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, uint64_t a5, char a6, char a7, double a8, uint64_t a9, void (*a10)(double), uint64_t *a11, void (*a12)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v34;
  uint64_t v35;
  _BYTE v36[24];
  _BYTE v37[24];
  _BYTE v38[24];

  v19 = a1 + 16;
  swift_beginAccess(a1 + 16, v38, 0, 0);
  result = swift_weakLoadStrong(v19);
  if (result)
  {
    v21 = result;
    v22 = (_QWORD *)(result + 112);
    swift_beginAccess(result + 112, v37, 0, 0);
    v23 = *(_QWORD *)(v21 + 112);
    if (*(_QWORD *)(v23 + 16) && (v24 = sub_21C068(a2), (v25 & 1) != 0))
    {
      v26 = *(_QWORD *)(*(_QWORD *)(v23 + 56) + 8 * v24);
      swift_unknownObjectWeakAssign(v26 + 192, a3);
      swift_retain(v26);
    }
    else
    {
      if (a7 == 4)
        a7 = *(_BYTE *)(v21 + 40);
      v27 = __swift_instantiateConcreteTypeFromMangledName(a11);
      v26 = swift_allocObject(v27, 201, 7);
      v28 = swift_unknownObjectWeakInit(v26 + 192);
      v29 = a4[7];
      *(_OWORD *)(v26 + 112) = a4[6];
      *(_OWORD *)(v26 + 128) = v29;
      *(_OWORD *)(v26 + 144) = a4[8];
      *(_OWORD *)(v26 + 153) = *(_OWORD *)((char *)a4 + 137);
      v30 = a4[3];
      *(_OWORD *)(v26 + 48) = a4[2];
      *(_OWORD *)(v26 + 64) = v30;
      v31 = a4[5];
      *(_OWORD *)(v26 + 80) = a4[4];
      *(_OWORD *)(v26 + 96) = v31;
      v32 = a4[1];
      *(_OWORD *)(v26 + 16) = *a4;
      *(_OWORD *)(v26 + 32) = v32;
      swift_unknownObjectWeakAssign(v28, a3);
      *(_QWORD *)(v26 + 176) = a5;
      *(_BYTE *)(v26 + 184) = a6 & 1;
      *(_BYTE *)(v26 + 200) = a7;
      swift_beginAccess(v22, v36, 33, 0);
      sub_318480((uint64_t)a4);
      swift_retain(v26);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v22);
      v35 = *v22;
      *v22 = 0x8000000000000000;
      a12(v26, a2, isUniquelyReferenced_nonNull_native);
      v34 = *v22;
      *v22 = v35;
      swift_bridgeObjectRelease(v34);
      swift_endAccess(v36);
    }
    swift_retain(v26);
    a10(a8);
    swift_release(v21);
    return swift_release_n(v26, 2);
  }
  return result;
}

uint64_t sub_A0CE04(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, uint64_t a5, int a6, char a7, uint64_t a8, double a9)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t result;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __n128 v33;
  char isUniquelyReferenced_nonNull_native;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  _BYTE v42[24];
  _BYTE v43[24];
  _BYTE v44[24];

  v40 = a6;
  v39 = a5;
  v16 = type metadata accessor for IndexPath(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v44, 0, 0);
  result = swift_weakLoadStrong(a1);
  if (result)
  {
    v21 = result;
    v37 = a3;
    v38 = a8;
    v22 = (_QWORD *)(result + 112);
    swift_beginAccess(result + 112, v43, 0, 0);
    v23 = *(_QWORD *)(v21 + 112);
    if (*(_QWORD *)(v23 + 16))
    {
      swift_bridgeObjectRetain();
      v24 = sub_21BFD0(a2);
      if ((v25 & 1) != 0)
      {
        v26 = *(_QWORD *)(*(_QWORD *)(v23 + 56) + 8 * v24);
        swift_retain(v26);
        swift_bridgeObjectRelease();
        swift_unknownObjectWeakAssign(v26 + 192, v37);
LABEL_9:
        swift_retain(v26);
        sub_A06D38(v36, a2, v38, a9);
        swift_release(v21);
        return swift_release_n(v26, 2);
      }
      swift_bridgeObjectRelease();
    }
    if (a7 == 4)
      a7 = *(_BYTE *)(v21 + 40);
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F0D20);
    v26 = swift_allocObject(v27, 201, 7);
    v28 = swift_unknownObjectWeakInit(v26 + 192);
    v29 = a4[7];
    *(_OWORD *)(v26 + 112) = a4[6];
    *(_OWORD *)(v26 + 128) = v29;
    *(_OWORD *)(v26 + 144) = a4[8];
    *(_OWORD *)(v26 + 153) = *(_OWORD *)((char *)a4 + 137);
    v30 = a4[3];
    *(_OWORD *)(v26 + 48) = a4[2];
    *(_OWORD *)(v26 + 64) = v30;
    v31 = a4[5];
    *(_OWORD *)(v26 + 80) = a4[4];
    *(_OWORD *)(v26 + 96) = v31;
    v32 = a4[1];
    *(_OWORD *)(v26 + 16) = *a4;
    *(_OWORD *)(v26 + 32) = v32;
    v33 = swift_unknownObjectWeakAssign(v28, v37);
    *(_QWORD *)(v26 + 176) = v39;
    *(_BYTE *)(v26 + 184) = v40 & 1;
    *(_BYTE *)(v26 + 200) = a7;
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v17 + 16))(v19, a2, v16, v33);
    swift_beginAccess(v22, v42, 33, 0);
    sub_318480((uint64_t)a4);
    swift_retain(v26);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v22);
    v41 = *v22;
    *v22 = 0x8000000000000000;
    sub_1A07A0(v26, (uint64_t)v19, isUniquelyReferenced_nonNull_native);
    *v22 = v41;
    v35 = swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, __n128))(v17 + 8))(v19, v16, v35);
    swift_endAccess(v42);
    goto LABEL_9;
  }
  return result;
}

void sub_A0D080(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t Strong;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  _QWORD *v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  _QWORD *v31;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v33;
  unint64_t v34;
  double *v35;
  uint64_t v36;
  _BYTE v38[24];
  char v39[24];
  uint64_t v40[3];
  _BYTE v41[24];
  char v42[24];

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v38[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = a1 + 16;
  swift_beginAccess(a1 + 16, v42, 0, 0);
  Strong = swift_weakLoadStrong(a1 + 16);
  if (!Strong)
    return;
  v12 = Strong;
  swift_beginAccess(Strong + 112, v41, 33, 0);
  v13 = sub_7070C8(a2);
  swift_endAccess(v41);
  swift_release(v12);
  if (!v13)
    return;
  swift_beginAccess(v10, v41, 0, 0);
  v14 = swift_weakLoadStrong(v10);
  if (!v14)
  {
    v20 = v13;
LABEL_25:
    swift_release(v20);
    return;
  }
  v15 = v14;
  v16 = *(_QWORD *)(v13 + 88);
  if (*(_BYTE *)(v13 + 144))
    v17 = *(_QWORD *)(v13 + 16);
  else
    v17 = 0;
  if (*(_BYTE *)(v13 + 144))
    v18 = *(_QWORD *)(v13 + 24);
  else
    v18 = 0;
  if (v16)
  {
    v19 = (uint64_t *)(v16 + OBJC_IVAR____TtC11MusicJSCore8JSObject_nativeBridgeIdentifier);
    v17 = *v19;
    v18 = v19[1];
  }
  else if (!v18)
  {
    v40[0] = *(_QWORD *)(v13 + 56);
    v17 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    v18 = v36;
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
LABEL_15:
  swift_beginAccess(v15 + 104, v40, 0, 0);
  v21 = *(_QWORD *)(v15 + 104);
  if (*(_QWORD *)(v21 + 16))
  {
    swift_bridgeObjectRetain();
    v22 = sub_21BAD0(v17, v18);
    if ((v23 & 1) != 0)
    {
      v24 = *(_QWORD *)(*(_QWORD *)(v21 + 56) + 8 * v22);
      swift_retain(v24);
      swift_bridgeObjectRelease();
      swift_release(v15);
      swift_bridgeObjectRelease();
      v25 = (_QWORD *)(v24 + 200);
      v26 = swift_beginAccess(v24 + 200, v39, 0, 0);
      v27 = *(_QWORD *)(v24 + 200);
      v28 = *(_QWORD *)(v27 + 16);
      if (v28 && (*(_BYTE *)(v27 + 16 * v28 + 24) & 1) == 0)
      {
        v29 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, __n128))(v7 + 16))(v9, a3, v6, v26);
        v30 = Date.timeIntervalSince1970.getter(v29);
        (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
        swift_beginAccess(v24 + 200, v38, 33, 0);
        v31 = (_QWORD *)*v25;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v25);
        *v25 = v31;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v31 = sub_120188(0, v31[2] + 1, 1, v31);
          *v25 = v31;
        }
        v34 = v31[2];
        v33 = v31[3];
        if (v34 >= v33 >> 1)
        {
          v31 = sub_120188((_QWORD *)(v33 > 1), v34 + 1, 1, v31);
          *v25 = v31;
        }
        v31[2] = v34 + 1;
        v35 = (double *)&v31[2 * v34];
        v35[4] = v30;
        *((_BYTE *)v35 + 40) = 1;
        swift_endAccess(v38);
      }
      swift_release(v13);
      v20 = v24;
      goto LABEL_25;
    }
    swift_release(v13);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release(v13);
  }
  swift_release(v15);
  swift_bridgeObjectRelease();
}

void sub_A0D3A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, __n128), uint64_t (*a5)(BOOL, uint64_t, uint64_t, uint64_t))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t Strong;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t *v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  uint64_t v35;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(BOOL, uint64_t, uint64_t, uint64_t);
  _BYTE v42[24];
  _BYTE v43[24];
  _QWORD v44[3];
  _BYTE v45[24];
  _BYTE v46[24];

  v10 = type metadata accessor for Date(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = &v42[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v14 = a1 + 16;
  swift_beginAccess(v14, v46, 0, 0);
  Strong = swift_weakLoadStrong(v14);
  if (!Strong)
    return;
  v16 = Strong;
  v17 = swift_beginAccess(Strong + 112, v45, 33, 0);
  v18 = a4(a2, v17);
  swift_endAccess(v45);
  swift_release(v16);
  if (!v18)
    return;
  swift_beginAccess(v14, v45, 0, 0);
  v19 = swift_weakLoadStrong(v14);
  if (!v19)
  {
    swift_release(v18);
    return;
  }
  v20 = v19;
  v21 = *(_QWORD *)(v18 + 88);
  if (*(_BYTE *)(v18 + 144))
    v22 = *(_QWORD *)(v18 + 16);
  else
    v22 = 0;
  if (*(_BYTE *)(v18 + 144))
    v23 = *(_QWORD *)(v18 + 24);
  else
    v23 = 0;
  v41 = a5;
  if (v21)
  {
    v24 = (uint64_t *)(v21 + OBJC_IVAR____TtC11MusicJSCore8JSObject_nativeBridgeIdentifier);
    v22 = *v24;
    v23 = v24[1];
LABEL_14:
    swift_bridgeObjectRetain();
    goto LABEL_15;
  }
  if (v23)
    goto LABEL_14;
  v44[0] = *(_QWORD *)(v18 + 56);
  v22 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v23 = v40;
LABEL_15:
  swift_beginAccess(v20 + 104, v44, 0, 0);
  v25 = *(_QWORD *)(v20 + 104);
  if (!*(_QWORD *)(v25 + 16))
  {
    swift_release(v18);
LABEL_27:
    swift_release(v20);
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  v26 = sub_21BAD0(v22, v23);
  if ((v27 & 1) == 0)
  {
    swift_release(v18);
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  v28 = *(_QWORD *)(*(_QWORD *)(v25 + 56) + 8 * v26);
  swift_retain(v28);
  swift_bridgeObjectRelease();
  swift_release(v20);
  swift_bridgeObjectRelease();
  v29 = (uint64_t *)(v28 + 200);
  v30 = swift_beginAccess(v28 + 200, v43, 0, 0);
  v31 = *(_QWORD *)(v28 + 200);
  v32 = *(_QWORD *)(v31 + 16);
  if (v32 && (*(_BYTE *)(v31 + 16 * v32 + 24) & 1) == 0)
  {
    v33 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, __n128))(v11 + 16))(v13, a3, v10, v30);
    v34 = Date.timeIntervalSince1970.getter(v33);
    (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v13, v10);
    swift_beginAccess(v28 + 200, v42, 33, 0);
    v35 = *v29;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v29);
    *v29 = v35;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v35 = v41(0, *(_QWORD *)(v35 + 16) + 1, 1, v35);
      *v29 = v35;
    }
    v38 = *(_QWORD *)(v35 + 16);
    v37 = *(_QWORD *)(v35 + 24);
    if (v38 >= v37 >> 1)
    {
      v35 = v41(v37 > 1, v38 + 1, 1, v35);
      *v29 = v35;
    }
    *(_QWORD *)(v35 + 16) = v38 + 1;
    v39 = v35 + 16 * v38;
    *(double *)(v39 + 32) = v34;
    *(_BYTE *)(v39 + 40) = 1;
    swift_endAccess(v42);
  }
  swift_release(v18);
  swift_release(v28);
}

uint64_t sub_A0D6E4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE v12[24];
  _BYTE v13[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD540);
  __chkstk_darwin(v3);
  v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __chkstk_darwin(v6);
  v9 = &v12[-v8];
  (*(void (**)(uint64_t, double))((char *)&stru_8D8.cmd + (swift_isaMask & *v1)))(a1, v7);
  v10 = (uint64_t)v1 + qword_1581788;
  swift_beginAccess((char *)v1 + qword_1581788, v13, 0, 0);
  sub_5C238(v10, (uint64_t)v5, (uint64_t *)&unk_14AD540);
  swift_beginAccess(v10, v12, 33, 0);
  sub_A135DC((uint64_t)v9, v10);
  swift_endAccess(v12);
  sub_A0E968((uint64_t)v5);
  sub_56024((uint64_t)v9, (uint64_t *)&unk_14AD540);
  return sub_56024((uint64_t)v5, (uint64_t *)&unk_14AD540);
}

uint64_t sub_A0D80C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + qword_14F0228);
}

id sub_A0D81C()
{
  sub_4E684(0, (unint64_t *)&unk_14AED90, MPModelAlbum_ptr);
  return static MPModelAlbum.defaultMusicKind.getter();
}

id sub_A0D854()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  id v3;

  v1 = (void *)(*(uint64_t (**)(void))((char *)&stru_658.reserved2 + (swift_isaMask & *v0)))();
  objc_opt_self(MPModelAlbumKind);
  v2 = (void *)swift_dynamicCastObjCClass(v1);
  if (v2)
  {
    v3 = objc_msgSend(v2, "songKind");

  }
  else
  {

    return 0;
  }
  return v3;
}

void *LibraryContentConfiguration.kind.getter(void *a1)
{
  id v2;

  v2 = a1;
  return a1;
}

void sub_A0D8F8(void *a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  char *v9;
  char *v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  id v20;

  if (!a1)
    goto LABEL_11;
  v20 = a1;
  v4 = objc_msgSend(v20, "results");
  if (!v4)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v5 = v4;
  v6 = objc_msgSend(v4, "numberOfSections");

  if ((uint64_t)v6 < 1)
  {

LABEL_11:
    v15 = type metadata accessor for IndexPath(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a2, 1, 1, v15);
    return;
  }
  v7 = objc_msgSend(v20, "results");
  if (!v7)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v8 = v7;
  v9 = (char *)objc_msgSend(v7, "numberOfSections");

  v10 = v9 - 1;
  if (__OFSUB__(v9, 1))
  {
    __break(1u);
    goto LABEL_16;
  }
  v11 = objc_msgSend(v20, "results");
  if (!v11)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v12 = v11;
  v13 = objc_msgSend(v11, "numberOfItemsInSection:", v10);

  if ((uint64_t)v13 < 1 || ((*(uint64_t (**)(void))((char *)&stru_608.reloff + (swift_isaMask & *v2)))() & 1) != 0)
  {
    v14 = type metadata accessor for IndexPath(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a2, 1, 1, v14);
LABEL_14:

    return;
  }
  v16 = objc_msgSend(v20, "results");
  if (v16)
  {
    v17 = v16;
    v18 = objc_msgSend(v16, "numberOfItemsInSection:", v10);

    IndexPath.init(row:section:)(v18, v10);
    v19 = type metadata accessor for IndexPath(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(a2, 0, 1, v19);
    goto LABEL_14;
  }
LABEL_19:
  __break(1u);
}

uint64_t sub_A0DAE8(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  __n128 v14;
  void *v15;
  id v16;
  Class isa;
  id v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  char v22;
  uint64_t v24;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD540);
  __chkstk_darwin(v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, double))((char *)&stru_1F8.reserved2 + (swift_isaMask & *v2)))(a1, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_56024((uint64_t)v6, (uint64_t *)&unk_14AD540);
LABEL_11:
    v22 = 0;
    return v22 & 1;
  }
  v12 = (*(uint64_t (**)(char *, char *, uint64_t))(v8 + 32))(v11, v6, v7);
  v13 = (void *)(*(uint64_t (**)(uint64_t))&stru_158.segname[swift_isaMask & *v2])(v12);
  if (!v13
    || (v15 = v13, v16 = objc_msgSend(v13, "results"), v15, !v16)
    || (isa = IndexPath._bridgeToObjectiveC()().super.isa,
        v18 = objc_msgSend(v16, "itemAtIndexPath:", isa),
        v16,
        isa,
        !v18))
  {
LABEL_10:
    (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v11, v7, v14);
    goto LABEL_11;
  }
  objc_opt_self(MPModelObject);
  v19 = swift_dynamicCastObjCClass(v18);
  if (!v19)
  {
    v14 = swift_unknownObjectRelease(v18);
    goto LABEL_10;
  }
  v20 = *(_QWORD *)((char *)v2 + qword_14DB700);
  if (!v20)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    swift_unknownObjectRelease(v18);
    goto LABEL_11;
  }
  v21 = (void *)v19;
  swift_retain(*(_QWORD *)((char *)v2 + qword_14DB700));
  v22 = sub_718C78(v21);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  swift_unknownObjectRelease(v18);
  swift_release(v20);
  return v22 & 1;
}

char *sub_A0DD20()
{
  char *v0;
  char *v1;
  char *v2;
  char *v3;
  char *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t inited;
  double v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _BYTE v32[24];
  char v33[72];
  objc_super v34;

  v1 = v0;
  *(_QWORD *)&v0[qword_14F0200] = 0;
  v2 = &v0[qword_14F0208];
  *((_QWORD *)v2 + 1) = 0;
  swift_unknownObjectWeakInit(v2);
  v3 = &v0[qword_14F0210];
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0;
  *(_QWORD *)&v0[qword_14F0218] = 0;
  *(_QWORD *)&v0[qword_14F0220] = 0;
  v0[qword_14F0228] = 0;
  v0[qword_14F0230] = 0;
  v0[qword_14F0238] = 0;
  *(_QWORD *)&v0[qword_14F0240] = 0;
  *(_QWORD *)&v0[qword_14F0248] = 0;
  v4 = &v0[qword_14F0250];
  *((_QWORD *)v4 + 1) = 0;
  *((_QWORD *)v4 + 2) = 0;
  *(_QWORD *)v4 = 0;
  v4[24] = 1;
  v5 = &v0[qword_14F0258];
  *(_OWORD *)v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  *((_OWORD *)v5 + 2) = xmmword_10767F0;
  v0[qword_14F0260] = 0;
  v0[qword_14F0268] = 0;
  v6 = &v0[qword_1581758];
  v7 = type metadata accessor for IndexPath(0);
  v8 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
  v8(v6, 1, 1, v7);
  v9 = qword_1581760;
  v10 = type metadata accessor for PlaybackIndicator(0);
  swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
  v11 = v1;
  *(_QWORD *)&v1[v9] = sub_7CCA00();
  v11[qword_1581768] = 0;
  v12 = &v11[qword_1581770];
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = 0;
  *(_QWORD *)&v11[qword_14F0270] = 0;
  v11[qword_14F0278] = 0;
  *(_QWORD *)&v11[qword_1581778] = _swiftEmptyArrayStorage;
  v11[qword_1581780] = 0;
  v8(&v11[qword_1581788], 1, 1, v7);
  v13 = &v11[qword_1581790];
  *(_QWORD *)v13 = 0;
  v13[8] = 1;
  *(_QWORD *)&v11[qword_14F0280] = _swiftEmptyArrayStorage;
  v11[qword_1581798] = 0;
  *(_QWORD *)&v11[qword_14F0288] = 0;
  *(_QWORD *)&v11[qword_14F0290] = _swiftEmptyArrayStorage;

  v34.receiver = v11;
  v34.super_class = (Class)type metadata accessor for ContainerDetailSongsViewController(0);
  v14 = (char *)objc_msgSendSuper2(&v34, "init");
  sub_877498(1);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_14B5A60);
  inited = swift_initStackObject(v15, v33);
  *(_QWORD *)&v17 = 1;
  *(_OWORD *)(inited + 16) = xmmword_105B360;
  v18 = *(_QWORD *)&v14[qword_1581760];
  if (qword_14AB918 != -1)
    swift_once(&qword_14AB918, sub_7CDE1C);
  v19 = (void *)qword_1580F58;
  UIScreen.Dimensions.size.getter(v17);
  *(_QWORD *)(inited + 56) = &type metadata for NotificationTrigger;
  *(_QWORD *)(inited + 64) = &protocol witness table for NotificationTrigger;
  *(_QWORD *)(inited + 32) = v20;
  *(_QWORD *)(inited + 40) = v21;
  v22 = swift_allocObject(&unk_1393BE0, 24, 7);
  swift_unknownObjectWeakInit(v22 + 16);
  v23 = v19;
  swift_retain(v18);

  v24 = type metadata accessor for Whitetail.Binding();
  swift_allocObject(v24, 48, 7);
  v25 = Whitetail.Binding.init(_:needsInitialConfiguration:configurationBlock:)(inited, 1, (uint64_t)sub_A1323C, v22);
  v26 = &v14[qword_14F0290];
  swift_beginAccess(&v14[qword_14F0290], v32, 33, 0);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v27);
  v29 = *(_QWORD *)((char *)&dword_10 + (*(_QWORD *)v26 & 0xFFFFFFFFFFFFFF8));
  v28 = *(_QWORD *)((char *)&dword_18 + (*(_QWORD *)v26 & 0xFFFFFFFFFFFFFF8));
  if (v29 >= v28 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v28 > 1, v29 + 1, 1);
  v30 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v29, v25);
  specialized Array._endMutation()(v30);
  swift_endAccess(v32);

  return v14;
}

void sub_A0E0E0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *Strong;
  void *v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    (*(void (**)(void))((char *)&stru_8D8.vmsize + (swift_isaMask & *Strong)))();

  }
}

char *sub_A0E148()
{
  return sub_A0DD20();
}

void sub_A0E168(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_A12FC0();
}

id sub_A0E18C(id result)
{
  char *v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v2 = result;
  v3 = qword_14F0220;
  v4 = *(id *)&v1[qword_14F0220];
  if (v4)
  {
    if (!result || v4 != result)
    {
      result = objc_msgSend(v1, "isViewLoaded");
      if ((result & 1) != 0)
      {
        if (!v2)
          goto LABEL_13;
        goto LABEL_9;
      }
    }
  }
  else if (result)
  {
    result = objc_msgSend(v1, "isViewLoaded");
    if ((result & 1) != 0)
    {
LABEL_9:
      v5 = v2;
      result = objc_msgSend(v1, "loadViewIfNeeded");
      if (!*(_QWORD *)&v1[qword_14DB768])
        goto LABEL_20;
      if (objc_msgSend(v5, "isDescendantOfView:"))
        objc_msgSend(v5, "removeFromSuperview");

LABEL_13:
      v6 = *(void **)&v1[v3];
      if (v6)
      {
        v7 = v6;
        objc_msgSend(v1, "loadViewIfNeeded");
        result = *(id *)&v1[qword_14DB768];
        if (!result)
        {
LABEL_21:
          __break(1u);
          return result;
        }
        objc_msgSend(result, "addSubview:", v7);

      }
      objc_msgSend(v1, "loadViewIfNeeded");
      result = *(id *)&v1[qword_14DB768];
      if (result)
        return objc_msgSend(result, "reloadData");
      __break(1u);
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
  }
  return result;
}

void sub_A0E2D0(char a1)
{
  _QWORD *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;

  if (*((_BYTE *)v1 + qword_1581768) == 1 && (a1 & 1) == 0)
  {
    v2 = (void *)(*(uint64_t (**)(void))&stru_158.segname[swift_isaMask & *v1])();
    if (v2)
    {
      v3 = v2;
      v16 = objc_msgSend(v2, "request");

      if (v16)
      {
        v4 = type metadata accessor for JSContainerDetailModelRequest();
        v5 = swift_dynamicCastClass(v16, v4);
        if (v5)
        {
          v6 = *(void **)(v5 + OBJC_IVAR____TtC16MusicApplication29JSContainerDetailModelRequest_containerDetailViewModel);
          v15 = v6;

          if (v6)
          {
            v7 = JSContainerDetail.containerDetailedResponseChildrenStoreIDs.getter();
            if (v7)
            {
              v8 = v7;
              if (qword_14AB1D8 != -1)
                swift_once(&qword_14AB1D8, sub_41A4B8);
              v9 = type metadata accessor for Logger(0);
              __swift_project_value_buffer(v9, (uint64_t)qword_15803C8);
              v10 = swift_bridgeObjectRetain();
              v11 = Logger.logObject.getter(v10);
              v12 = static os_log_type_t.default.getter(v11);
              if (os_log_type_enabled(v11, v12))
              {
                v13 = (uint8_t *)swift_slowAlloc(12, -1);
                *(_DWORD *)v13 = 134349056;
                v14 = v8[2];
                swift_bridgeObjectRelease(v8);
                v17 = v14;
                UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, &v18);
                swift_bridgeObjectRelease(v8);
                _os_log_impl(&dword_0, v11, v12, "[ContainerDetailSongsViewController] detailed model response set for displaying full track listing, item count=%{public}ld", v13, 0xCu);
                swift_slowDealloc(v13, -1, -1);

              }
              else
              {

                swift_bridgeObjectRelease_n(v8, 2);
              }
            }
            else
            {

            }
          }
        }
        else
        {

        }
      }
    }
  }
}

uint64_t sub_A0E4F8()
{
  uint64_t v0;

  v0 = type metadata accessor for IndexPath(0);
  __swift_allocate_value_buffer(v0, qword_1581740);
  __swift_project_value_buffer(v0, (uint64_t)qword_1581740);
  return IndexPath.init(item:section:)(-1, -1);
}

void sub_A0E548(void *a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v4;
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for ContainerDetailSongsViewController(0);
  v4 = v5.receiver;
  objc_msgSendSuper2(&v5, "viewWillAppear:", a3);
  v4[qword_14F0278] = 1;

}

void sub_A0E5B8(void *a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v4;
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for ContainerDetailSongsViewController(0);
  v4 = v5.receiver;
  objc_msgSendSuper2(&v5, "viewDidDisappear:", a3);
  v4[qword_14F0278] = 0;

}

void sub_A0E624(void *a1, uint64_t a2, uint64_t a3)
{
  id v4;
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for ContainerDetailSongsViewController(0);
  v4 = v5.receiver;
  objc_msgSendSuper2(&v5, "viewDidAppear:", a3);
  sub_A0C224();

}

void sub_A0E688()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  objc_super v4;

  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for ContainerDetailSongsViewController(0);
  objc_msgSendSuper2(&v4, "viewDidLoad");
  v1 = *(void **)&v0[qword_14F0220];
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v0, "loadViewIfNeeded");
    v3 = *(void **)&v0[qword_14DB768];
    if (v3)
    {
      objc_msgSend(v3, "addSubview:", v2);

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_A0E714(void *a1)
{
  id v1;

  v1 = a1;
  sub_A0E688();

}

id sub_A0E748(void *a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  uint64_t v22;

  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(a4);
  v15 = v14;
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a5);
  v16 = a3;
  v17 = a4;
  v18 = a5;
  v19 = a1;
  v20 = (void *)sub_A09D34(v16, v13, v15, (uint64_t)v12);

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  swift_bridgeObjectRelease();

  return v20;
}

uint64_t sub_A0E84C(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v6;
  id v7;
  uint64_t v8;

  v6 = a3;
  v7 = a1;
  v8 = sub_A116F4(a4);

  return v8;
}

id sub_A0E89C(void *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  uint64_t v17;

  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a4);
  v11 = a3;
  v12 = a4;
  v13 = a1;
  sub_A098E8((uint64_t)v11, (uint64_t)v10);
  v15 = v14;

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v15;
}

void sub_A0E968(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char *v34;
  uint64_t v35;
  char v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  char *v42;
  uint64_t v43;
  char *v44;
  _BYTE v45[24];

  v3 = type metadata accessor for IndexPath(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD540);
  __chkstk_darwin(v39);
  v38 = (uint64_t)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v42 = (char *)&v38 - v9;
  __chkstk_darwin(v10);
  v12 = (char *)&v38 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_14CD4E0);
  __chkstk_darwin(v13);
  v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = v1;
  v16 = (uint64_t)&v1[qword_1581788];
  swift_beginAccess(&v1[qword_1581788], v45, 0, 0);
  v17 = (uint64_t)&v15[*(int *)(v13 + 48)];
  v40 = a1;
  sub_5C238(a1, (uint64_t)v15, (uint64_t *)&unk_14AD540);
  sub_5C238(v16, v17, (uint64_t *)&unk_14AD540);
  v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v18((uint64_t)v15, 1, v3) == 1)
  {
    if (v18(v17, 1, v3) == 1)
    {
      sub_56024((uint64_t)v15, (uint64_t *)&unk_14AD540);
      return;
    }
  }
  else
  {
    sub_5C238((uint64_t)v15, (uint64_t)v12, (uint64_t *)&unk_14AD540);
    if (v18(v17, 1, v3) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v6, v17, v3);
      v35 = sub_4DD24((unint64_t *)&qword_14B2940, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
      v36 = dispatch thunk of static Equatable.== infix(_:_:)(v12, v6, v3, v35);
      v37 = *(void (**)(char *, uint64_t))(v4 + 8);
      v37(v6, v3);
      v37(v12, v3);
      sub_56024((uint64_t)v15, (uint64_t *)&unk_14AD540);
      v19 = (uint64_t)v42;
      if ((v36 & 1) != 0)
        return;
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v4 + 8))(v12, v3);
  }
  sub_56024((uint64_t)v15, &qword_14CD4E0);
  v19 = (uint64_t)v42;
LABEL_7:
  if (qword_14ABB90 != -1)
    swift_once(&qword_14ABB90, sub_950CDC);
  v20 = type metadata accessor for Logger(0);
  __swift_project_value_buffer(v20, (uint64_t)qword_1581258);
  sub_5C238(v40, v19, (uint64_t *)&unk_14AD540);
  v21 = v41;
  v22 = Logger.logObject.getter(v21);
  v23 = static os_log_type_t.default.getter(v22);
  v24 = v23;
  if (os_log_type_enabled(v22, v23))
  {
    v25 = swift_slowAlloc(22, -1);
    v42 = (char *)swift_slowAlloc(64, -1);
    v44 = v42;
    *(_DWORD *)v25 = 136446466;
    LODWORD(v41) = v24;
    v26 = v38;
    sub_5C238(v19, v38, (uint64_t *)&unk_14AD540);
    v27 = v39;
    v28 = String.init<A>(describing:)(v26, v39);
    v30 = v29;
    v43 = sub_23EAC8(v28, v29, (uint64_t *)&v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44);
    swift_bridgeObjectRelease(v30);
    sub_56024(v19, (uint64_t *)&unk_14AD540);
    *(_WORD *)(v25 + 12) = 2082;
    sub_5C238(v16, v26, (uint64_t *)&unk_14AD540);
    v31 = String.init<A>(describing:)(v26, v27);
    v33 = v32;
    v43 = sub_23EAC8(v31, v32, (uint64_t *)&v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44);

    swift_bridgeObjectRelease(v33);
    _os_log_impl(&dword_0, v22, (os_log_type_t)v41, "Updating the detail cell's index from %{public}s to %{public}s.", (uint8_t *)v25, 0x16u);
    v34 = v42;
    swift_arrayDestroy(v42, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v34, -1, -1);
    swift_slowDealloc(v25, -1, -1);

  }
  else
  {
    sub_56024(v19, (uint64_t *)&unk_14AD540);

  }
}

void sub_A0EE18(uint64_t a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  void *v20;
  id v21;
  Class isa;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  _BYTE v31[24];

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD540);
  __chkstk_darwin(v6);
  v8 = &v31[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = &v31[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v14 = (_QWORD *)((char *)v3 + qword_1581790);
  if ((*((_BYTE *)v3 + qword_1581790 + 8) & 1) != 0)
  {
    if ((a2 & 1) != 0)
      return;
  }
  else if ((a2 & 1) == 0)
  {
    v11 = *(double *)v14;
    if (*(double *)v14 == *(double *)&a1)
      return;
  }
  if (objc_msgSend(v3, "isViewLoaded", v11))
  {
    v15 = (void *)(*(uint64_t (**)(void))&stru_158.segname[swift_isaMask & *v3])();
    if (v15)
    {
      v30 = v15;
      v16 = objc_msgSend(v15, "results");
      if (v16)
      {
        v17 = v16;
        v18 = objc_msgSend(v16, "totalItemCount");

        if ((uint64_t)v18 < 1)
        {

          return;
        }
        v19 = (uint64_t)v3 + qword_1581788;
        swift_beginAccess((char *)v3 + qword_1581788, v31, 0, 0);
        sub_5C238(v19, (uint64_t)v8, (uint64_t *)&unk_14AD540);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
        {
          sub_56024((uint64_t)v8, (uint64_t *)&unk_14AD540);
LABEL_20:

          return;
        }
        (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v8, v9);
        objc_msgSend(v3, "loadViewIfNeeded");
        v20 = *(void **)((char *)v3 + qword_14DB768);
        if (v20)
        {
          v21 = v20;
          isa = IndexPath._bridgeToObjectiveC()().super.isa;
          v23 = objc_msgSend(v21, "cellForItemAtIndexPath:", isa);

          if (v23)
          {
            v24 = type metadata accessor for DetailCell(0);
            v25 = swift_dynamicCastClass(v23, v24);
            if (v25)
            {
              v26 = v25;
              v27 = objc_msgSend(v30, "results");
              if (v27)
              {
                v28 = v27;
                v29 = objc_msgSend(v27, "totalItemCount");

                (*(void (**)(uint64_t, id, _QWORD, _QWORD))((char *)&stru_7E8.reserved2 + (swift_isaMask & *v3)))(v26, v29, *v14, *((unsigned __int8 *)v14 + 8));
                (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);

                return;
              }
              goto LABEL_24;
            }

          }
          (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
          goto LABEL_20;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
LABEL_24:
      __break(1u);
    }
  }
}

BOOL sub_A0F130(_QWORD *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *);
  id v15;
  id v16;
  _QWORD *v17;
  _BOOL8 v18;
  uint64_t v20;

  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD540);
  __chkstk_darwin(v7);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for IndexPath(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a4);
  v14 = *(void (**)(char *))((char *)&stru_1F8.reserved2 + (swift_isaMask & *a1));
  v15 = a3;
  v16 = a4;
  v17 = a1;
  v14(v13);
  v18 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1;
  sub_56024((uint64_t)v9, (uint64_t *)&unk_14AD540);

  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return v18;
}

id sub_A0F27C(void *a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  void *v18;
  uint64_t v20;

  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a5);
  v13 = a3;
  v14 = a4;
  v15 = a5;
  v16 = a1;
  sub_A11D7C(v13, (uint64_t)v12);
  v18 = v17;

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v18;
}

id sub_A0F358(_QWORD *a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t (*v13)(char *);
  id v14;
  id v15;
  id v16;
  _QWORD *v17;
  id v18;
  void *v19;
  uint64_t v21;

  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a5);
  v13 = *(uint64_t (**)(char *))&stru_838.segname[swift_isaMask & *a1];
  v14 = a3;
  v15 = a4;
  v16 = a5;
  v17 = a1;
  v18 = (id)v13(v12);
  if (!v18)
    v18 = objc_msgSend(objc_allocWithZone((Class)UISwipeActionsConfiguration), "init");
  v19 = v18;

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v19;
}

double sub_A0F470(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6;
  id v7;
  id v8;
  double v9;

  v6 = a3;
  v7 = a4;
  v8 = a1;
  v9 = sub_A122C4(v6);

  return v9;
}

double sub_A0F4D4()
{
  return 0.0;
}

double sub_A0F4DC(void *a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  double v17;
  double v18;
  uint64_t v20;

  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a5);
  v13 = a3;
  v14 = a4;
  v15 = a5;
  v16 = a1;
  sub_A0A180(v13, v14, (uint64_t)v12);
  v18 = v17;

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v18;
}

uint64_t sub_A0F5C4(void *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  id v13;
  uint64_t v15;

  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a4);
  v11 = a3;
  v12 = a4;
  v13 = a1;
  LOBYTE(a1) = sub_A123E4((uint64_t)v10);

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return a1 & 1;
}

void sub_A0F68C(char *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  unint64_t *v14;
  unint64_t v15;
  id v16;
  char *v17;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v19;
  unint64_t v20;
  id v21;
  _BYTE v22[24];

  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v22[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v11);
  v13 = &v22[-v12 - 8];
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a4);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v10, v13, v7);
  v14 = (unint64_t *)&a1[qword_14F0280];
  swift_beginAccess(&a1[qword_14F0280], v22, 33, 0);
  v15 = *v14;
  v16 = a3;
  v21 = a4;
  v17 = a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v15);
  *v14 = v15;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v15 = sub_120C80(0, *(_QWORD *)(v15 + 16) + 1, 1, v15);
    *v14 = v15;
  }
  v20 = *(_QWORD *)(v15 + 16);
  v19 = *(_QWORD *)(v15 + 24);
  if (v20 >= v19 >> 1)
  {
    v15 = sub_120C80(v19 > 1, v20 + 1, 1, v15);
    *v14 = v15;
  }
  *(_QWORD *)(v15 + 16) = v20 + 1;
  (*(void (**)(unint64_t, _BYTE *, uint64_t))(v8 + 32))(v15+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v20, v10, v7);
  swift_endAccess(v22);
  sub_A0C420();

  (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v13, v7);
}

void sub_A0F84C(void *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;

  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a4);
  v11 = a3;
  v12 = a4;
  v13 = a1;
  sub_A127BC((uint64_t)v10);

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_A0F90C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a4);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return 0;
}

void sub_A0F98C(void *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  id v13;
  Class isa;
  uint64_t v15;

  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a4);
  v11 = a3;
  v12 = a4;
  v13 = a1;
  sub_8785C8(v11, (uint64_t)v10);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v11, "deselectItemAtIndexPath:animated:", isa, 1);

  sub_A0C420();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);

}

void sub_A0FA84(void *a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;

  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a5);
  v13 = a3;
  v14 = a4;
  v15 = a5;
  v16 = a1;
  sub_A0A0A4(v13, v14, (uint64_t)v12);

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

void sub_A0FB5C(void *a1, uint64_t a2, void *a3, void *a4, void *a5, void *a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  _QWORD *v23;
  uint64_t v24;
  double v25;
  void (*v26)(char *, uint64_t, double);
  __n128 v27;
  uint64_t v28;

  v11 = type metadata accessor for IndexPath(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v28 - v16;
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a6);
  v18 = a3;
  v19 = a4;
  v20 = a5;
  v21 = a6;
  v22 = a1;
  v23 = sub_A0B52C();
  if (qword_14ABED8 != -1)
    swift_once(&qword_14ABED8, sub_A0E4F8);
  v24 = __swift_project_value_buffer(v11, (uint64_t)qword_1581740);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v24, v11);
  v25 = sub_A066A0(v19, (uint64_t)v14, 0, 1, 4, (void (*)(_QWORD *__return_ptr, uint64_t))sub_A0B5F8, (uint64_t)&unk_1393B68, (uint64_t)&unk_1393BB8, (void (*)(uint64_t, double))sub_A11D70);
  v26 = *(void (**)(char *, uint64_t, double))(v12 + 8);
  v26(v14, v11, v25);

  v27 = swift_release(v23);
  ((void (*)(char *, uint64_t, __n128))v26)(v17, v11, v27);

}

void sub_A0FD04(void *a1, uint64_t a2, void *a3, void *a4, void *a5, void *a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  _QWORD *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;

  v11 = type metadata accessor for IndexPath(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a6);
  v15 = a3;
  v16 = a4;
  v17 = a5;
  v18 = a6;
  v19 = a1;
  objc_msgSend(v16, "clearArtworkCatalogs");
  v20 = sub_A0B52C();
  if (qword_14ABED8 != -1)
    swift_once(&qword_14ABED8, sub_A0E4F8);
  v21 = __swift_project_value_buffer(v11, (uint64_t)qword_1581740);
  sub_A1151C(v21, (uint64_t)&unk_1393B68, (uint64_t)&unk_1393B90, (void (*)(uint64_t, double))sub_A11CF8);

  v22 = swift_release(v20);
  (*(void (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v22);

}

id sub_A0FE5C(void *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v16;

  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a4);
  v11 = a3;
  v12 = a4;
  v13 = a1;
  v14 = sub_A1180C(v11, (uint64_t)v10);

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v14;
}

void sub_A0FF28(char a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *Strong;
  _QWORD *v29;
  uint64_t (*v30)(void);
  void *v31;
  void *v32;
  id v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  id v47;
  char *v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  BOOL v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t inited;
  unint64_t v59;
  Class isa;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __n128 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  _QWORD *v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  _QWORD *v84;
  uint64_t v85;
  void (*v86)(void (*)(void **), uint64_t, __n128);
  _QWORD *v87;
  __n128 v88;
  void *v89;
  uint64_t v90;
  uint64_t v91;
  _BYTE *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  id v103;
  char v104[48];
  _BYTE v105[72];
  char v106[32];

  v99 = a5;
  v103 = a4;
  v100 = a3;
  v7 = type metadata accessor for PreviewPlaybackController.Context.Source(0);
  __chkstk_darwin(v7);
  v9 = (uint64_t *)((char *)&v91 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v93 = type metadata accessor for AppInterfaceContext.Activity(0);
  v94 = *(_QWORD *)(v93 - 8);
  v10 = *(_QWORD *)(v94 + 64);
  __chkstk_darwin(v93);
  v95 = (uint64_t)&v91 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v91 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD5A0);
  __chkstk_darwin(v14);
  v97 = (char *)&v91 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for PlaybackIntentDescriptor(0);
  v101 = *(_QWORD *)(v16 - 8);
  v17 = *(_QWORD *)(v101 + 64);
  __chkstk_darwin(v16);
  v96 = (uint64_t)&v91 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v98 = (uint64_t)&v91 - v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD540);
  __chkstk_darwin(v20);
  v22 = (char *)&v91 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14B0AC0);
  __chkstk_darwin(v23);
  v25 = (char *)&v91 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v102 = (uint64_t)&v91 - v27;
  a2 += 16;
  swift_beginAccess(a2, v106, 0, 0);
  Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(a2);
  if (!Strong)
    return;
  v29 = Strong;
  if (!a1)
    goto LABEL_15;
  if (a1 == 1)
  {
    v92 = v13;
    v30 = *(uint64_t (**)(void))&stru_158.segname[swift_isaMask & *Strong];
    v31 = (void *)v30();
    if (v31)
    {
      v32 = v31;
      v33 = objc_msgSend(v31, "request");

      if (v33)
      {
        objc_opt_self(MPModelLibraryRequest);
        v34 = (void *)swift_dynamicCastObjCClass(v33);
        if (v34)
          objc_msgSend(v34, "setFilterText:", 0);

      }
    }
    v35 = (void *)v30();
    v36 = type metadata accessor for IndexPath(0);
    v37 = *(_QWORD *)(v36 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v22, v100, v36);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v22, 0, 1, v36);
    v38 = v102;
    (*(void (**)(void *, char *))&stru_748.sectname[swift_isaMask & *v29])(v35, v22);
    sub_56024((uint64_t)v22, (uint64_t *)&unk_14AD540);

    v39 = swift_allocBox(v16);
    v41 = v40;
    sub_5C238(v38, (uint64_t)v25, (uint64_t *)&unk_14B0AC0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v101 + 48))(v25, 1, v16) == 1)
    {

      sub_56024(v38, (uint64_t *)&unk_14B0AC0);
      sub_56024((uint64_t)v25, (uint64_t *)&unk_14B0AC0);
      swift_deallocBox(v39);
    }
    else
    {
      v100 = v39;
      sub_5C04C((uint64_t)v25, v41, type metadata accessor for PlaybackIntentDescriptor);
      v48 = (char *)v29 + qword_14F0250;
      v49 = v103;
      if ((*((_BYTE *)v29 + qword_14F0250 + 24) & 1) != 0)
        goto LABEL_22;
      v50 = *(id *)v48;
      v51 = objc_msgSend(v103, "identifiers");
      v52 = objc_msgSend(v51, "universalStore");

      v38 = v102;
      if (!v52)
        goto LABEL_22;
      v53 = objc_msgSend(v52, "adamID");
      swift_unknownObjectRelease(v52);
      v54 = v50 == v53;
      v38 = v102;
      if (v54)
      {
        v55 = v98;
        sub_5BDB8(v41, v98, type metadata accessor for PlaybackIntentDescriptor);
        v56 = (void *)PlaybackIntentDescriptor.intent.getter();
        sub_5C0DC(v55, type metadata accessor for PlaybackIntentDescriptor);
        v57 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14D3D10);
        inited = swift_initStackObject(v57, v104);
        *(_OWORD *)(inited + 16) = xmmword_105B360;
        *(_QWORD *)(inited + 32) = objc_msgSend(v49, "identifiers");
        *(NSNumber *)(inited + 40) = Double._bridgeToObjectiveC()();
        v59 = sub_1991EC(inited);
        sub_4E684(0, (unint64_t *)&qword_14AE2E0, MPIdentifierSet_ptr);
        sub_4E684(0, (unint64_t *)&qword_14AEE10, NSNumber_ptr);
        sub_D7030();
        isa = Dictionary._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v56, "setStartTimeModifications:", isa, swift_bridgeObjectRelease(v59).n128_f64[0]);

        sub_5BDB8(v41, v55, type metadata accessor for PlaybackIntentDescriptor);
        v61 = type metadata accessor for TaskPriority(0);
        v62 = (uint64_t)v97;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v97, 1, 1, v61);
        v63 = v55;
        v64 = v96;
        sub_5BDB8(v63, v96, type metadata accessor for PlaybackIntentDescriptor);
        type metadata accessor for MainActor(0);
        v66 = static MainActor.shared.getter(v65);
        v67 = *(unsigned __int8 *)(v101 + 80);
        v68 = (v67 + 32) & ~v67;
        v69 = (v17 + v68 + 7) & 0xFFFFFFFFFFFFFFF8;
        v70 = (v69 + 15) & 0xFFFFFFFFFFFFFFF8;
        v71 = swift_allocObject(&unk_1393D20, v70 + 16, v67 | 7);
        *(_QWORD *)(v71 + 16) = v66;
        *(_QWORD *)(v71 + 24) = &protocol witness table for MainActor;
        sub_5C04C(v64, v71 + v68, type metadata accessor for PlaybackIntentDescriptor);
        *(_QWORD *)(v71 + v69) = 0;
        v72 = (_QWORD *)(v71 + v70);
        *v72 = 0;
        v72[1] = 0;
        v73 = sub_2223C8(v62, (uint64_t)&unk_14AD200, v71);
        swift_release(v73);
        sub_5C0DC(v98, type metadata accessor for PlaybackIntentDescriptor);
        v74 = v29;
        v75 = sub_AF954();

        if (v75)
        {
          v76 = (uint64_t)v92;
          *v92 = 1;
          v77 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
          swift_storeEnumTagMultiPayload(v76, v77, 2);
          swift_storeEnumTagMultiPayload(v76, v93, 0);
          v78 = v95;
          sub_5BDB8(v76, v95, type metadata accessor for AppInterfaceContext.Activity);
          v79 = *(unsigned __int8 *)(v94 + 80);
          v80 = (v79 + 24) & ~v79;
          v81 = (v10 + v80 + 7) & 0xFFFFFFFFFFFFFFF8;
          v82 = swift_allocObject(&unk_1393D48, v81 + 16, v79 | 7);
          *(_QWORD *)(v82 + 16) = v75;
          sub_5C04C(v78, v82 + v80, type metadata accessor for AppInterfaceContext.Activity);
          v83 = (_QWORD *)(v82 + v81);
          *v83 = 0;
          v83[1] = 0;
          swift_retain(v75);
          v84 = (_QWORD *)*JSBridge.shared.unsafeMutableAddressor();
          v85 = swift_allocObject(&unk_1393D70, 32, 7);
          *(_QWORD *)(v85 + 16) = sub_55C6C;
          *(_QWORD *)(v85 + 24) = v82;
          v86 = *(void (**)(void (*)(void **), uint64_t, __n128))&stru_B8.segname[(swift_isaMask & *v84) + 16];
          v87 = v84;
          v88 = swift_retain(v82);
          v86(sub_55CD8, v85, v88);
          swift_release(v82);

          swift_release(v85);
          sub_5C0DC(v76, type metadata accessor for AppInterfaceContext.Activity);
          sub_56024(v102, (uint64_t *)&unk_14B0AC0);
          swift_release(v75);
        }
        else
        {
          sub_56024(v102, (uint64_t *)&unk_14B0AC0);
        }
        *(_QWORD *)v48 = 0;
        *((_QWORD *)v48 + 1) = 0;
        *((_QWORD *)v48 + 2) = 0;
        v48[24] = 1;
        swift_release(v100);

      }
      else
      {
LABEL_22:
        if (qword_14AAC38 != -1)
          swift_once(&qword_14AAC38, sub_27AC88);
        objc_opt_self(MPModelSong);
        v89 = (void *)swift_dynamicCastObjCClass(v49);
        sub_6087C(v99, (uint64_t)v105);
        v90 = v100;
        swift_retain(v100);
        sub_281B4C(v89, (uint64_t)v105, v90);

        sub_56024((uint64_t)v105, (uint64_t *)&unk_14AD380);
        sub_56024(v38, (uint64_t *)&unk_14B0AC0);
        swift_release_n(v90, 2);
      }
    }
    return;
  }
  objc_opt_self(MPModelSong);
  v42 = v103;
  v43 = swift_dynamicCastObjCClass(v103);
  if (!v43)
  {
LABEL_15:

    return;
  }
  v44 = v43;
  v45 = qword_14AB840;
  v46 = v42;
  if (v45 != -1)
    swift_once(&qword_14AB840, sub_72B4E0);
  *v9 = v44;
  swift_storeEnumTagMultiPayload(v9, v7, 1);
  v47 = v46;
  sub_72B874((uint64_t)v9, 2);

  sub_5C0DC((uint64_t)v9, type metadata accessor for PreviewPlaybackController.Context.Source);
}

uint64_t sub_A108DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _BYTE v25[24];

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD5A0);
  __chkstk_darwin(v2);
  v4 = &v25[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for PlaybackIntentDescriptor(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = &v25[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v9);
  v11 = &v25[-v10 - 8];
  v12 = swift_projectBox(a1);
  swift_beginAccess(v12, v25, 0, 0);
  sub_5BDB8(v12, (uint64_t)v11, type metadata accessor for PlaybackIntentDescriptor);
  v13 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v4, 1, 1, v13);
  sub_5BDB8((uint64_t)v11, (uint64_t)v8, type metadata accessor for PlaybackIntentDescriptor);
  type metadata accessor for MainActor(0);
  v15 = static MainActor.shared.getter(v14);
  v16 = *(unsigned __int8 *)(v6 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = (v7 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF8;
  v20 = swift_allocObject(&unk_1393D98, v19 + 16, v16 | 7);
  *(_QWORD *)(v20 + 16) = v15;
  *(_QWORD *)(v20 + 24) = &protocol witness table for MainActor;
  sub_5C04C((uint64_t)v8, v20 + v17, type metadata accessor for PlaybackIntentDescriptor);
  *(_QWORD *)(v20 + v18) = 0;
  v21 = (_QWORD *)(v20 + v19);
  *v21 = 0;
  v21[1] = 0;
  v22 = sub_2223C8((uint64_t)v4, (uint64_t)&unk_14F0D38, v20);
  swift_release(v22);
  return sub_5C0DC((uint64_t)v11, type metadata accessor for PlaybackIntentDescriptor);
}

double sub_A10AA8()
{
  uint64_t v0;
  double result;

  sub_64880(v0 + qword_14F0208);
  sub_5C198(*(_QWORD *)(v0 + qword_14F0210), *(_QWORD *)(v0 + qword_14F0210 + 8));

  sub_56024(v0 + qword_1581758, (uint64_t *)&unk_14AD540);
  swift_release(*(_QWORD *)(v0 + qword_1581760));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + qword_1581770));
  swift_release(*(_QWORD *)(v0 + qword_14F0270));
  swift_bridgeObjectRelease();
  sub_56024(v0 + qword_1581788, (uint64_t *)&unk_14AD540);
  swift_bridgeObjectRelease();

  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

id sub_A10BD0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ContainerDetailSongsViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

double sub_A10C04(uint64_t a1)
{
  double result;

  sub_64880(a1 + qword_14F0208);
  sub_5C198(*(_QWORD *)(a1 + qword_14F0210), *(_QWORD *)(a1 + qword_14F0210 + 8));

  sub_56024(a1 + qword_1581758, (uint64_t *)&unk_14AD540);
  swift_release(*(_QWORD *)(a1 + qword_1581760));
  swift_unknownObjectRelease(*(_QWORD *)(a1 + qword_1581770));
  swift_release(*(_QWORD *)(a1 + qword_14F0270));
  swift_bridgeObjectRelease();
  sub_56024(a1 + qword_1581788, (uint64_t *)&unk_14AD540);
  swift_bridgeObjectRelease();

  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t type metadata accessor for ContainerDetailSongsViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_14F0320;
  if (!qword_14F0320)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ContainerDetailSongsViewController);
  return result;
}

void sub_A10D6C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[14];
  uint64_t v5;
  char *v6;
  void *v7;
  void *v8;
  const char *v9;
  void *v10;
  char *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  char *v15;
  void *v16;
  const char *v17;
  char *v18;

  v4[0] = "\b";
  v4[1] = &unk_1090E10;
  v4[2] = &unk_1090E28;
  v4[3] = "\b";
  v4[4] = "\b";
  v4[5] = &unk_1090E40;
  v4[6] = &unk_1090E58;
  v4[7] = &unk_1090E40;
  v4[8] = "\b";
  v4[9] = "\b";
  v4[10] = &unk_1090E70;
  v4[11] = &unk_1090E88;
  v4[12] = &unk_1090E40;
  v4[13] = &unk_1090E40;
  sub_FF890(319);
  if (v3 <= 0x3F)
  {
    v5 = *(_QWORD *)(v2 - 8) + 64;
    v6 = (char *)&value witness table for Builtin.NativeObject + 64;
    v7 = &unk_1090E40;
    v8 = &unk_1090E28;
    v9 = "\b";
    v10 = &unk_1090E40;
    v11 = (char *)&value witness table for Builtin.BridgeObject + 64;
    v12 = &unk_1090E40;
    v13 = v5;
    v14 = &unk_1090EA0;
    v15 = (char *)&value witness table for Builtin.BridgeObject + 64;
    v16 = &unk_1090E40;
    v17 = "\b";
    v18 = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_initClassMetadata2(a1, 256, 28, v4, a1 + 1256);
  }
}

uint64_t sub_A10E70()
{
  return type metadata accessor for ContainerDetailSongsViewController(0);
}

id sub_A10E78()
{
  _QWORD **v0;
  _QWORD *v1;
  id v2;
  id v3;
  Class isa;

  v1 = *v0;
  v2 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ContainerDetailCollectionTableLayout()), "init");
  objc_msgSend(v2, "_setShowsAdditionalSeparators:", 0);
  v3 = v2;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v3, "_setFloatingElementKinds:", isa);

  (*(void (**)(id))((char *)&stru_798.reserved2 + (swift_isaMask & *v1)))(v3);
  return v3;
}

uint64_t sub_A10F28()
{
  _QWORD **v0;

  return (*(uint64_t (**)(void))((char *)&stru_798.reserved2 + (swift_isaMask & **v0)))();
}

void sub_A10F60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_A1133C(a4, a5);
}

uint64_t sub_A10F70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _BYTE v4[160];

  sub_A0B5F8(a1, (uint64_t)v4);
  return sub_5C090((uint64_t)v4, a2, &qword_14B0A90);
}

uint64_t sub_A10FB0()
{
  return sub_5C150(&qword_14F0CA0, &qword_14F0CA8, (uint64_t)&unk_106E1F8);
}

uint64_t sub_A10FDC(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_4DD24(&qword_14F0CD8, type metadata accessor for ContainerDetailSongsViewController, (uint64_t)&unk_1090EC8);
  result = sub_4DD24(&qword_14F0CE0, type metadata accessor for ContainerDetailSongsViewController, (uint64_t)&unk_1090EE4);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

void *sub_A11038(void *a1)
{
  id v1;
  void *v2;
  uint64_t v4;
  void *v5;

  v5 = &_swiftEmptySetSingleton;
  v1 = objc_msgSend(a1, "universalStore");
  if (v1)
  {
    v2 = v1;
    if (objc_msgSend(v1, "adamID"))
      sub_6DD28(&v4, (uint64_t)objc_msgSend(v2, "adamID"));
    if (objc_msgSend(v2, "purchasedAdamID"))
      sub_6DD28(&v4, (uint64_t)objc_msgSend(v2, "purchasedAdamID"));
    if (objc_msgSend(v2, "subscriptionAdamID"))
      sub_6DD28(&v4, (uint64_t)objc_msgSend(v2, "subscriptionAdamID"));
    swift_unknownObjectRelease(v2);
  }
  return v5;
}

uint64_t sub_A11118(uint64_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 1;
  v3 = *(_QWORD *)(result + 16);
  if (!v3)
    return 1;
  v4 = 0;
  if (v2 >= v3)
    v5 = result;
  else
    v5 = a2;
  if (v2 >= v3)
    v6 = a2;
  else
    v6 = result;
  v7 = v5 + 56;
  v8 = -1 << *(_BYTE *)(v5 + 32);
  if (-v8 < 64)
    v9 = ~(-1 << -(char)v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 56);
  v11 = (unint64_t)(63 - v8) >> 6;
  v12 = v6 + 56;
  while (1)
  {
    while (1)
    {
      v13 = v4;
      if (!v10)
        break;
      v14 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v15 = v14 | (v4 << 6);
      if (*(_QWORD *)(v6 + 16))
      {
LABEL_29:
        v19 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v15);
        result = static Hasher._hash(seed:_:)(*(_QWORD *)(v6 + 40), v19);
        v20 = -1 << *(_BYTE *)(v6 + 32);
        v21 = result & ~v20;
        if (((*(_QWORD *)(v12 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) != 0)
        {
          v22 = *(_QWORD *)(v6 + 48);
          if (*(_QWORD *)(v22 + 8 * v21) == v19)
          {
LABEL_34:
            swift_bridgeObjectRetain();
            v24 = 0;
LABEL_35:
            sub_55D68(v5);
            return v24;
          }
          v23 = ~v20;
          while (1)
          {
            v21 = (v21 + 1) & v23;
            if (((*(_QWORD *)(v12 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
              break;
            if (*(_QWORD *)(v22 + 8 * v21) == v19)
              goto LABEL_34;
          }
        }
      }
    }
    v16 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v16 >= v11)
      goto LABEL_38;
    v17 = *(_QWORD *)(v7 + 8 * v16);
    ++v4;
    if (!v17)
    {
      v4 = v13 + 2;
      if (v13 + 2 >= v11)
        goto LABEL_38;
      v17 = *(_QWORD *)(v7 + 8 * v4);
      if (!v17)
      {
        v4 = v13 + 3;
        if (v13 + 3 >= v11)
          goto LABEL_38;
        v17 = *(_QWORD *)(v7 + 8 * v4);
        if (!v17)
        {
          v18 = v13 + 4;
          if (v13 + 4 >= v11)
          {
LABEL_38:
            swift_bridgeObjectRetain();
            v24 = 1;
            goto LABEL_35;
          }
          v17 = *(_QWORD *)(v7 + 8 * v18);
          v4 = v13 + 4;
          if (!v17)
            break;
        }
      }
    }
LABEL_28:
    v10 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v4 << 6);
    if (*(_QWORD *)(v6 + 16))
      goto LABEL_29;
  }
  while (1)
  {
    v4 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v4 >= v11)
      goto LABEL_38;
    v17 = *(_QWORD *)(v7 + 8 * v4);
    ++v18;
    if (v17)
      goto LABEL_28;
  }
LABEL_40:
  __break(1u);
  return result;
}

void sub_A1133C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  void *v6;
  void *v7;
  id v8;
  Class isa;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t Strong;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t v19;
  id v20;

  v3 = v2;
  v6 = (void *)(*(uint64_t (**)(void))&stru_158.segname[swift_isaMask & *v2])();
  if (v6)
  {
    v7 = v6;
    v8 = objc_msgSend(v6, "results");

    if (v8)
    {
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      v10 = objc_msgSend(v8, "itemAtIndexPath:", isa);

      if (v10)
      {
        v11 = objc_msgSend(v10, "relativeModelObjectForStoreLibraryPersonalization");
        if (v11)
        {
          v20 = v11;
          objc_opt_self(MPModelSong);
          v12 = swift_dynamicCastObjCClass(v20);
          if (!v12
            || (v13 = v12,
                v14 = (char *)v3 + qword_14F0208,
                (Strong = swift_unknownObjectWeakLoadStrong((char *)v3 + qword_14F0208)) == 0))
          {
            swift_unknownObjectRelease(v10);

            return;
          }
          v16 = Strong;
          v17 = *((_QWORD *)v14 + 1);
          ObjectType = swift_getObjectType();
          (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 24))(v3, v13, a1, a2, ObjectType, v17);
          swift_unknownObjectRelease(v10);

          v19 = v16;
        }
        else
        {
          v19 = (uint64_t)v10;
        }
        swift_unknownObjectRelease(v19);
      }
    }
    else
    {
      __break(1u);
    }
  }
}

double sub_A114E4(uint64_t a1)
{
  return sub_A1151C(a1, (uint64_t)&unk_1393C80, (uint64_t)&unk_1393CD0, (void (*)(uint64_t, double))sub_A135C8);
}

double sub_A11500(uint64_t a1)
{
  return sub_A1151C(a1, (uint64_t)&unk_1393C08, (uint64_t)&unk_1393C30, (void (*)(uint64_t, double))sub_A13248);
}

double sub_A1151C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, double))
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double result;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, double);

  v31 = a3;
  v32 = a4;
  v6 = v4;
  v29 = a1;
  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  v26 = v7;
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for Date(0);
  v11 = *(_QWORD *)(v28 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v28);
  v27 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14.n128_f64[0] = __chkstk_darwin(v13);
  v16 = (char *)&v25 - v15;
  Date.init()(v14);
  v30 = *(_QWORD *)(v6 + 88);
  v17 = swift_allocObject(a2, 24, 7);
  swift_weakInit(v17 + 16);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v29, v7);
  v18 = v28;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))((char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v16, v28);
  v19 = *(unsigned __int8 *)(v8 + 80);
  v20 = (v19 + 24) & ~v19;
  v21 = *(unsigned __int8 *)(v11 + 80);
  v22 = (v9 + v21 + v20) & ~v21;
  v23 = swift_allocObject(v31, v22 + v12, v19 | v21 | 7);
  *(_QWORD *)(v23 + 16) = v17;
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v23 + v20, v10, v26);
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v23 + v22, v27, v18);
  swift_retain(v17);
  sub_A4DDAC(v32, v23);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v18);
  swift_release(v17);
  *(_QWORD *)&result = swift_release(v23).n128_u64[0];
  return result;
}

uint64_t sub_A116F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  _BYTE v14[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD540);
  __chkstk_darwin(v3);
  v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = (char *)sub_71EBE4(a1);
  v7 = v1 + qword_1581788;
  swift_beginAccess(v7, v14, 0, 0);
  sub_5C238(v7, (uint64_t)v5, (uint64_t *)&unk_14AD540);
  v8 = type metadata accessor for IndexPath(0);
  v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v5, 1, v8);
  if ((_DWORD)v9)
  {
    sub_56024((uint64_t)v5, (uint64_t *)&unk_14AD540);
    return (uint64_t)v6;
  }
  v10 = IndexPath.section.getter(v9);
  result = sub_56024((uint64_t)v5, (uint64_t *)&unk_14AD540);
  if (v10 != a1)
    return (uint64_t)v6;
  if (!__OFADD__(v6++, 1))
    return (uint64_t)v6;
  __break(1u);
  return result;
}

id sub_A1180C(void *a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, uint64_t, uint64_t, double);
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  unsigned int (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  char v29;
  void (*v30)(char *, uint64_t);
  void *v31;
  uint64_t ObjectType;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t, uint64_t);
  id v38;
  uint64_t v39;
  Class isa;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  id v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  _BYTE v60[72];
  char v61[24];
  _QWORD v62[5];
  char v63;

  v3 = v2;
  v56 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14CD4E0);
  __chkstk_darwin(v5);
  v7 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD540);
  __chkstk_darwin(v8);
  v58 = (uint64_t)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v55 - v11;
  v13 = type metadata accessor for IndexPath(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v55 - v19;
  v21 = *(void (**)(char *, uint64_t, uint64_t, double))(v14 + 16);
  v57 = a2;
  v21((char *)&v55 - v19, a2, v13, v18);
  v59 = v3;
  v22 = (uint64_t)&v3[qword_1581788];
  v23 = swift_beginAccess(&v3[qword_1581788], v61, 0, 0);
  ((void (*)(char *, char *, uint64_t, __n128))v21)(v12, v20, v13, v23);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
  v24 = (uint64_t)&v7[*(int *)(v5 + 48)];
  sub_5C238(v22, (uint64_t)v7, (uint64_t *)&unk_14AD540);
  sub_5C238((uint64_t)v12, v24, (uint64_t *)&unk_14AD540);
  v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  if (v25((uint64_t)v7, 1, v13) == 1)
  {
    sub_56024((uint64_t)v12, (uint64_t *)&unk_14AD540);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v20, v13);
    if (v25(v24, 1, v13) == 1)
    {
      sub_56024((uint64_t)v7, (uint64_t *)&unk_14AD540);
      return 0;
    }
    goto LABEL_6;
  }
  v26 = v58;
  sub_5C238((uint64_t)v7, v58, (uint64_t *)&unk_14AD540);
  if (v25(v24, 1, v13) == 1)
  {
    sub_56024((uint64_t)v12, (uint64_t *)&unk_14AD540);
    v27 = *(void (**)(char *, uint64_t))(v14 + 8);
    v27(v20, v13);
    v27((char *)v26, v13);
LABEL_6:
    sub_56024((uint64_t)v7, &qword_14CD4E0);
    goto LABEL_8;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 32))(v16, v24, v13);
  v28 = sub_4DD24((unint64_t *)&qword_14B2940, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
  v29 = dispatch thunk of static Equatable.== infix(_:_:)(v26, v16, v13, v28);
  v30 = *(void (**)(char *, uint64_t))(v14 + 8);
  v30(v16, v13);
  sub_56024((uint64_t)v12, (uint64_t *)&unk_14AD540);
  v30(v20, v13);
  v30((char *)v26, v13);
  sub_56024((uint64_t)v7, (uint64_t *)&unk_14AD540);
  if ((v29 & 1) != 0)
    return 0;
LABEL_8:
  v31 = v59;
  ObjectType = swift_getObjectType();
  v33 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for ModelCollectionMenuBuilderContext);
  if (v33)
    v34 = v33;
  else
    v34 = 0;
  if (v33)
    v35 = v31;
  else
    v35 = 0;
  if (!v35)
    return 0;
  v36 = swift_getObjectType();
  v37 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 64);
  v38 = v31;
  v39 = v57;
  if ((v37(v57, v36, v34) & 1) == 0
    || (isa = IndexPath._bridgeToObjectiveC()().super.isa,
        v41 = v56,
        v42 = objc_msgSend(v56, "cellForItemAtIndexPath:", isa),
        isa,
        !v42))
  {

    return 0;
  }
  *((_BYTE *)v38 + qword_14DB6D8) = 1;
  objc_msgSend(v42, "bounds");
  objc_msgSend(v41, "convertRect:fromCoordinateSpace:", v42);
  v62[0] = v41;
  v62[1] = v43;
  v62[2] = v44;
  v62[3] = v45;
  v62[4] = v46;
  v63 = 0;
  v47 = v38;
  v48 = v41;
  PresentationSource.init(viewController:position:)(v47, (uint64_t)v62, (uint64_t)v60);
  v49 = objc_msgSend(v48, "contextMenuInteraction");
  v50 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 72))(v39, v36, v34);
  v52 = v51;
  v53 = sub_90A890(v39, (uint64_t)v60, (uint64_t)&off_133BD60, v50, v51, v36, v34);

  sub_56060((uint64_t)v60);
  swift_release(v52);
  return v53;
}

uint64_t sub_A11CD0()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_A11CF8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(type metadata accessor for IndexPath(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Date(0) - 8) + 80);
  sub_A0D080(*(_QWORD *)(v0 + 16), v0 + v2, v0 + ((v2 + v3 + v4) & ~v4));
}

uint64_t sub_A11D70(double a1)
{
  return sub_A132FC((uint64_t (*)(_QWORD, unint64_t, _QWORD, unint64_t, _QWORD, _QWORD, _QWORD, unint64_t, double))sub_A0C640, a1);
}

void sub_A11D7C(void *a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  Class isa;
  id v20;
  uint64_t v21;
  uint64_t (*v22)(char *, char *);
  char *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  id v28;
  Class v29;
  id v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  BOOL v36;
  id v37;
  char *v38;
  id v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  _BYTE v52[72];
  _OWORD v53[2];
  uint64_t v54;
  char v55;
  _OWORD v56[2];
  uint64_t v57;
  char v58;

  v3 = v2;
  v6 = type metadata accessor for SwipeActions(0);
  __chkstk_darwin(v6);
  v48 = (uint64_t *)((char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14B0AC0);
  __chkstk_darwin(v8);
  *(_QWORD *)&v51 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v50 = type metadata accessor for PlaybackIntentDescriptor(0);
  v10 = *(_QWORD *)(v50 - 8);
  __chkstk_darwin(v50);
  v49 = (uint64_t)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD540);
  __chkstk_darwin(v12);
  v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for IndexPath(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v20 = objc_msgSend(a1, "cellForItemAtIndexPath:", isa);

  if (!v20)
    return;
  (*(void (**)(uint64_t))((char *)&stru_1F8.reserved2 + (swift_isaMask & *v3)))(a2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {

    sub_56024((uint64_t)v14, (uint64_t *)&unk_14AD540);
    return;
  }
  v21 = v15;
  v46 = v16;
  v22 = *(uint64_t (**)(char *, char *))(v16 + 32);
  v23 = v18;
  v47 = v21;
  v24 = v22(v18, v14);
  v25 = v3;
  v26 = (void *)(*(uint64_t (**)(uint64_t))&stru_158.segname[swift_isaMask & *v3])(v24);
  if (!v26)
    goto LABEL_11;
  v27 = v26;
  v28 = objc_msgSend(v26, "results");

  if (!v28)
  {
    __break(1u);
    return;
  }
  v29 = IndexPath._bridgeToObjectiveC()().super.isa;
  v30 = objc_msgSend(v28, "itemAtIndexPath:", v29);

  if (!v30)
  {
LABEL_11:

    (*(void (**)(char *, uint64_t))(v46 + 8))(v18, v47);
    return;
  }
  objc_opt_self(MPModelObject);
  v31 = swift_dynamicCastObjCClass(v30);
  if (!v31)
  {
    swift_unknownObjectRelease(v30);
    goto LABEL_11;
  }
  v32 = (void *)v31;
  v33 = v51;
  sub_A0B228(v51);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(v10 + 48))(v33, 1, v50) == 1)
  {

    (*(void (**)(char *, uint64_t))(v46 + 8))(v23, v47);
    sub_56024(v33, (uint64_t *)&unk_14B0AC0);
LABEL_15:
    swift_unknownObjectRelease(v30);
    return;
  }
  v34 = v49;
  sub_5C04C(v33, v49, type metadata accessor for PlaybackIntentDescriptor);
  v35 = objc_msgSend(v25, "traitCollection");
  v36 = UITraitCollection.isMediaPicker.getter();

  if (v36)
  {

    sub_5C0DC(v34, type metadata accessor for PlaybackIntentDescriptor);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v23, v47);
    goto LABEL_15;
  }
  v37 = v20;
  v38 = v23;
  v39 = v37;
  sub_2170FC((uint64_t)v53);
  v51 = v53[0];
  v50 = v53[1];
  v40 = v54;
  v41 = v55;
  sub_E1098((uint64_t)v53);

  v56[0] = v51;
  v56[1] = v50;
  v57 = v40;
  v58 = v41;
  PresentationSource.init(viewController:position:)(v25, (uint64_t)v56, (uint64_t)v52);
  v42 = (uint64_t)v48;
  *v48 = 0;
  *(_QWORD *)(v42 + 8) = 0;
  *(_QWORD *)(v42 + 16) = 0;
  *(_WORD *)(v42 + 24) = -256;
  v43 = v42 + *(int *)(type metadata accessor for SwipeActions.Analytics(0) + 20);
  v44 = type metadata accessor for MetricsPageProperties(0);
  v45 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56);
  v45(v43, 1, 1, v44);
  sub_56024(v43, &qword_14B1FF0);
  v45(v43, 1, 1, v44);
  sub_9B8558(v34, v32, (uint64_t)v52);

  sub_56060((uint64_t)v52);
  sub_5C0DC(v34, type metadata accessor for PlaybackIntentDescriptor);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v38, v47);
  sub_5C0DC(v42, type metadata accessor for SwipeActions);
  swift_unknownObjectRelease(v30);
}

double sub_A122C4(void *a1)
{
  _QWORD *v1;
  void *v2;
  id v4;
  double v5;
  double v6;
  id v7;
  double v8;
  double v9;
  void *v10;
  id v11;
  double v12;
  double v13;
  double v14;
  double v15;

  v2 = *(void **)((char *)v1 + qword_14F0220);
  if (!v2)
    return 0.0;
  v4 = v2;
  objc_msgSend(a1, "bounds");
  v7 = objc_msgSend(v4, "sizeThatFits:", v5, v6);
  v9 = v8;
  if (((*(uint64_t (**)(id))((char *)&stru_608.reloff + (swift_isaMask & *v1)))(v7) & 1) != 0
    || (v10 = *(void **)((char *)v1 + qword_14F0240)) == 0)
  {

  }
  else
  {
    v11 = v10;
    objc_msgSend(v11, "intrinsicContentSize");
    v13 = v12;
    v14 = dbl_1090F50[*((char *)v1 + qword_14F0230)] + dbl_1090F68[*((char *)v1 + qword_14F0230)];
    v15 = Int.seconds.getter(1);

    return v9 + v13 - v15 * v14;
  }
  return v9;
}

uint64_t sub_A123E4(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  id v20;
  BOOL v21;
  void (*v22)(char *, uint64_t, uint64_t);
  char v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  char v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  char *v33;
  uint64_t v34;
  char v35;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char v42[24];

  v2 = v1;
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_14CD4E0);
  __chkstk_darwin(v40);
  v41 = (uint64_t)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD540);
  __chkstk_darwin(v5);
  v38 = (uint64_t)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v39 = (char *)&v37 - v8;
  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v37 - v14;
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v37 - v18;
  v20 = objc_msgSend(v1, "traitCollection", v17);
  v21 = UITraitCollection.isMediaPicker.getter();

  v22 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v22(v19, a1, v9);
  v37 = v12;
  if (v21)
    v23 = sub_A0DAE8((uint64_t)v19);
  else
    v23 = 1;
  v24 = *(void (**)(char *, uint64_t))(v10 + 8);
  v24(v19, v9);
  v22(v15, a1, v9);
  if ((v23 & 1) == 0)
  {
    v24(v15, v9);
    goto LABEL_9;
  }
  v25 = (uint64_t)v39;
  v22(v39, (uint64_t)v15, v9);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(v25, 0, 1, v9);
  v26 = (uint64_t)&v2[qword_1581788];
  swift_beginAccess(&v2[qword_1581788], v42, 0, 0);
  v27 = v41;
  v28 = v41 + *(int *)(v40 + 48);
  sub_5C238(v25, v41, (uint64_t *)&unk_14AD540);
  sub_5C238(v26, v28, (uint64_t *)&unk_14AD540);
  v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (v29(v27, 1, v9) != 1)
  {
    v31 = v38;
    sub_5C238(v27, v38, (uint64_t *)&unk_14AD540);
    if (v29(v28, 1, v9) != 1)
    {
      v32 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 32);
      v33 = v37;
      v32(v37, v28, v9);
      v34 = sub_4DD24((unint64_t *)&qword_14B2940, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
      v35 = dispatch thunk of static Equatable.== infix(_:_:)(v31, v33, v9, v34);
      v24(v33, v9);
      sub_56024(v25, (uint64_t *)&unk_14AD540);
      v24(v15, v9);
      v24((char *)v31, v9);
      sub_56024(v27, (uint64_t *)&unk_14AD540);
      v30 = v35 ^ 1;
      return v30 & 1;
    }
    sub_56024(v25, (uint64_t *)&unk_14AD540);
    v24(v15, v9);
    v24((char *)v31, v9);
    goto LABEL_12;
  }
  sub_56024(v25, (uint64_t *)&unk_14AD540);
  v24(v15, v9);
  if (v29(v28, 1, v9) != 1)
  {
LABEL_12:
    sub_56024(v27, &qword_14CD4E0);
    v30 = 1;
    return v30 & 1;
  }
  sub_56024(v27, (uint64_t *)&unk_14AD540);
LABEL_9:
  v30 = 0;
  return v30 & 1;
}

void sub_A127BC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  _QWORD *v20;
  _BYTE v21[24];
  char v22[24];

  v3 = type metadata accessor for IndexPath(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (_QWORD *)((char *)v1 + qword_14F0280);
  swift_beginAccess((char *)v1 + qword_14F0280, v22, 0, 0);
  v8 = *v7;
  v9 = *(_QWORD *)(*v7 + 16);
  if (v9)
  {
    v18 = v6;
    v19 = v4;
    v20 = v1;
    v10 = v8 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v11 = *(_QWORD *)(v4 + 72);
    v12 = sub_4DD24((unint64_t *)&qword_14B2940, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
    swift_bridgeObjectRetain();
    v13 = 0;
    while ((dispatch thunk of static Equatable.== infix(_:_:)(v10, a1, v3, v12) & 1) == 0)
    {
      ++v13;
      v10 += v11;
      if (v9 == v13)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
    swift_bridgeObjectRelease();
    swift_beginAccess(v7, v21, 33, 0);
    v14 = (uint64_t)v18;
    sub_7006C8(v13, (uint64_t)v18);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v14, v3);
    swift_endAccess(v21);
    v15 = v20;
    sub_A0C420();
    v16 = *(void **)((char *)v15 + qword_14F0248);
    *(_QWORD *)((char *)v15 + qword_14F0248) = 0;

    *((_BYTE *)v15 + qword_14F0260) = 0;
    (*(void (**)(void))((char *)&stru_6F8.size + (swift_isaMask & *v15)))();
  }
}

void sub_A12974(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t Strong;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  _QWORD *v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  _QWORD *v31;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v33;
  unint64_t v34;
  double *v35;
  uint64_t v36;
  _BYTE v38[24];
  char v39[24];
  uint64_t v40[3];
  _BYTE v41[24];
  char v42[24];

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v38[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = a1 + 16;
  swift_beginAccess(a1 + 16, v42, 0, 0);
  Strong = swift_weakLoadStrong(a1 + 16);
  if (!Strong)
    return;
  v12 = Strong;
  swift_beginAccess(Strong + 112, v41, 33, 0);
  v13 = sub_706D40(a2);
  swift_endAccess(v41);
  swift_release(v12);
  if (!v13)
    return;
  swift_beginAccess(v10, v41, 0, 0);
  v14 = swift_weakLoadStrong(v10);
  if (!v14)
  {
    v20 = v13;
LABEL_25:
    swift_release(v20);
    return;
  }
  v15 = v14;
  v16 = *(_QWORD *)(v13 + 88);
  if (*(_BYTE *)(v13 + 144))
    v17 = *(_QWORD *)(v13 + 16);
  else
    v17 = 0;
  if (*(_BYTE *)(v13 + 144))
    v18 = *(_QWORD *)(v13 + 24);
  else
    v18 = 0;
  if (v16)
  {
    v19 = (uint64_t *)(v16 + OBJC_IVAR____TtC11MusicJSCore8JSObject_nativeBridgeIdentifier);
    v17 = *v19;
    v18 = v19[1];
  }
  else if (!v18)
  {
    v40[0] = *(_QWORD *)(v13 + 56);
    v17 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    v18 = v36;
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
LABEL_15:
  swift_beginAccess(v15 + 104, v40, 0, 0);
  v21 = *(_QWORD *)(v15 + 104);
  if (*(_QWORD *)(v21 + 16))
  {
    swift_bridgeObjectRetain();
    v22 = sub_21BAD0(v17, v18);
    if ((v23 & 1) != 0)
    {
      v24 = *(_QWORD *)(*(_QWORD *)(v21 + 56) + 8 * v22);
      swift_retain(v24);
      swift_bridgeObjectRelease(v21);
      swift_release(v15);
      swift_bridgeObjectRelease(v18);
      v25 = (_QWORD *)(v24 + 200);
      v26 = swift_beginAccess(v24 + 200, v39, 0, 0);
      v27 = *(_QWORD *)(v24 + 200);
      v28 = *(_QWORD *)(v27 + 16);
      if (v28 && (*(_BYTE *)(v27 + 16 * v28 + 24) & 1) == 0)
      {
        v29 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, __n128))(v7 + 16))(v9, a3, v6, v26);
        v30 = Date.timeIntervalSince1970.getter(v29);
        (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
        swift_beginAccess(v24 + 200, v38, 33, 0);
        v31 = (_QWORD *)*v25;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v25);
        *v25 = v31;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v31 = sub_12017C(0, v31[2] + 1, 1, v31);
          *v25 = v31;
        }
        v34 = v31[2];
        v33 = v31[3];
        if (v34 >= v33 >> 1)
        {
          v31 = sub_12017C((_QWORD *)(v33 > 1), v34 + 1, 1, v31);
          *v25 = v31;
        }
        v31[2] = v34 + 1;
        v35 = (double *)&v31[2 * v34];
        v35[4] = v30;
        *((_BYTE *)v35 + 40) = 1;
        swift_endAccess(v38);
      }
      swift_release(v13);
      v20 = v24;
      goto LABEL_25;
    }
    swift_release(v13);
    swift_bridgeObjectRelease(v21);
  }
  else
  {
    swift_release(v13);
  }
  swift_release(v15);
  swift_bridgeObjectRelease(v18);
}

void sub_A12C98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t Strong;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  _QWORD *v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  _QWORD *v30;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v32;
  unint64_t v33;
  double *v34;
  uint64_t v35;
  _BYTE v37[24];
  char v38[24];
  uint64_t v39[3];
  _BYTE v40[24];
  char v41[24];

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v37[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = a1 + 16;
  swift_beginAccess(a1 + 16, v41, 0, 0);
  Strong = swift_weakLoadStrong(a1 + 16);
  if (!Strong)
    return;
  v12 = Strong;
  swift_beginAccess(Strong + 112, v40, 33, 0);
  v13 = sub_707960(a2);
  swift_endAccess(v40);
  swift_release(v12);
  if (!v13)
    return;
  swift_beginAccess(v10, v40, 0, 0);
  v14 = swift_weakLoadStrong(v10);
  if (!v14)
  {
    swift_release(v13);
    return;
  }
  v15 = v14;
  v16 = *(_QWORD *)(v13 + 88);
  if (*(_BYTE *)(v13 + 144))
    v17 = *(_QWORD *)(v13 + 16);
  else
    v17 = 0;
  if (*(_BYTE *)(v13 + 144))
    v18 = *(_QWORD *)(v13 + 24);
  else
    v18 = 0;
  if (v16)
  {
    v19 = (uint64_t *)(v16 + OBJC_IVAR____TtC11MusicJSCore8JSObject_nativeBridgeIdentifier);
    v17 = *v19;
    v18 = v19[1];
LABEL_14:
    swift_bridgeObjectRetain();
    goto LABEL_15;
  }
  if (v18)
    goto LABEL_14;
  v39[0] = *(_QWORD *)(v13 + 56);
  v17 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v18 = v35;
LABEL_15:
  swift_beginAccess(v15 + 104, v39, 0, 0);
  v20 = *(_QWORD *)(v15 + 104);
  if (!*(_QWORD *)(v20 + 16))
  {
    swift_release(v13);
LABEL_27:
    swift_release(v15);
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  v21 = sub_21BAD0(v17, v18);
  if ((v22 & 1) == 0)
  {
    swift_release(v13);
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  v23 = *(_QWORD *)(*(_QWORD *)(v20 + 56) + 8 * v21);
  swift_retain(v23);
  swift_bridgeObjectRelease();
  swift_release(v15);
  swift_bridgeObjectRelease();
  v24 = (_QWORD *)(v23 + 200);
  v25 = swift_beginAccess(v23 + 200, v38, 0, 0);
  v26 = *(_QWORD *)(v23 + 200);
  v27 = *(_QWORD *)(v26 + 16);
  if (v27 && (*(_BYTE *)(v26 + 16 * v27 + 24) & 1) == 0)
  {
    v28 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, __n128))(v7 + 16))(v9, a3, v6, v25);
    v29 = Date.timeIntervalSince1970.getter(v28);
    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
    swift_beginAccess(v23 + 200, v37, 33, 0);
    v30 = (_QWORD *)*v24;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v24);
    *v24 = v30;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v30 = sub_1201A0(0, v30[2] + 1, 1, v30);
      *v24 = v30;
    }
    v33 = v30[2];
    v32 = v30[3];
    if (v33 >= v32 >> 1)
    {
      v30 = sub_1201A0((_QWORD *)(v32 > 1), v33 + 1, 1, v30);
      *v24 = v30;
    }
    v30[2] = v33 + 1;
    v34 = (double *)&v30[2 * v33];
    v34[4] = v29;
    *((_BYTE *)v34 + 40) = 1;
    swift_endAccess(v37);
  }
  swift_release(v13);
  swift_release(v23);
}

void sub_A12FC0()
{
  _BYTE *v0;
  _BYTE *v1;
  char *v2;
  _QWORD *v3;
  char *v4;
  _OWORD *v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  char *v12;

  v1 = v0;
  *(_QWORD *)&v0[qword_14F0200] = 0;
  v2 = &v0[qword_14F0208];
  *((_QWORD *)v2 + 1) = 0;
  swift_unknownObjectWeakInit(v2);
  v3 = &v0[qword_14F0210];
  *v3 = 0;
  v3[1] = 0;
  *(_QWORD *)&v0[qword_14F0218] = 0;
  *(_QWORD *)&v0[qword_14F0220] = 0;
  v0[qword_14F0228] = 0;
  v0[qword_14F0230] = 0;
  v0[qword_14F0238] = 0;
  *(_QWORD *)&v0[qword_14F0240] = 0;
  *(_QWORD *)&v0[qword_14F0248] = 0;
  v4 = &v0[qword_14F0250];
  *((_QWORD *)v4 + 1) = 0;
  *((_QWORD *)v4 + 2) = 0;
  *(_QWORD *)v4 = 0;
  v4[24] = 1;
  v5 = &v0[qword_14F0258];
  *v5 = 0u;
  v5[1] = 0u;
  v5[2] = xmmword_10767F0;
  v0[qword_14F0260] = 0;
  v0[qword_14F0268] = 0;
  v6 = &v0[qword_1581758];
  v7 = type metadata accessor for IndexPath(0);
  v8 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
  v8(v6, 1, 1, v7);
  v9 = qword_1581760;
  v10 = type metadata accessor for PlaybackIndicator(0);
  swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
  *(_QWORD *)&v1[v9] = sub_7CCA00();
  v1[qword_1581768] = 0;
  v11 = &v1[qword_1581770];
  *v11 = 0;
  v11[1] = 0;
  *(_QWORD *)&v1[qword_14F0270] = 0;
  v1[qword_14F0278] = 0;
  *(_QWORD *)&v1[qword_1581778] = _swiftEmptyArrayStorage;
  v1[qword_1581780] = 0;
  v8(&v1[qword_1581788], 1, 1, v7);
  v12 = &v1[qword_1581790];
  *(_QWORD *)v12 = 0;
  v12[8] = 1;
  *(_QWORD *)&v1[qword_14F0280] = _swiftEmptyArrayStorage;
  v1[qword_1581798] = 0;
  *(_QWORD *)&v1[qword_14F0288] = 0;
  *(_QWORD *)&v1[qword_14F0290] = _swiftEmptyArrayStorage;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000000010C4100, "MusicApplication/ContainerDetailSongsViewController.swift", 57, 2, 39, 0);
  __break(1u);
}

uint64_t sub_A13218()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_A1323C()
{
  uint64_t v0;

  sub_A0E0E0(v0);
}

void sub_A13248()
{
  sub_A1325C((uint64_t (*)(uint64_t, __n128))sub_707A68, (uint64_t (*)(BOOL, uint64_t, uint64_t, uint64_t))sub_120158);
}

void sub_A1325C(uint64_t (*a1)(uint64_t, __n128), uint64_t (*a2)(BOOL, uint64_t, uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(type metadata accessor for IndexPath(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Date(0) - 8) + 80);
  sub_A0D3A4(*(_QWORD *)(v2 + 16), v2 + v6, v2 + ((v6 + v7 + v8) & ~v8), a1, a2);
}

uint64_t sub_A132F0(double a1)
{
  return sub_A132FC((uint64_t (*)(_QWORD, unint64_t, _QWORD, unint64_t, _QWORD, _QWORD, _QWORD, unint64_t, double))sub_A0CE04, a1);
}

uint64_t sub_A132FC(uint64_t (*a1)(_QWORD, unint64_t, _QWORD, unint64_t, _QWORD, _QWORD, _QWORD, unint64_t, double), double a2)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(type metadata accessor for IndexPath(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 175) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Date(0) - 8) + 80);
  return a1(*(_QWORD *)(v2 + 16), v2 + v5, *(_QWORD *)(v2 + v6), v2 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8), *(_QWORD *)(v2 + v7), *(unsigned __int8 *)(v2 + v7 + 8), *(unsigned __int8 *)(v2 + v7 + 9), v2 + ((v8 + v7 + 10) & ~v8), a2);
}

uint64_t objectdestroy_7Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  unint64_t v11;
  uint64_t v13;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v13 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v13 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  v9 = v0 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease(*(_QWORD *)(v9 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v9 + 24));
  v10 = *(void **)(v9 + 32);
  if ((unint64_t)v10 >= 9)

  v11 = (v7 + ((v5 + 175) & 0xFFFFFFFFFFFFFFF8) + 10) & ~v7;
  swift_bridgeObjectRelease(*(_QWORD *)(v9 + 64));

  swift_bridgeObjectRelease(*(_QWORD *)(v9 + 88));
  swift_bridgeObjectRelease(*(_QWORD *)(v9 + 104));
  swift_bridgeObjectRelease(*(_QWORD *)(v9 + 120));
  swift_bridgeObjectRelease(*(_QWORD *)(v9 + 144));
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v11, v13);
  return swift_deallocObject(v0, v11 + v8, v3 | v7 | 7);
}

uint64_t sub_A134FC(double a1)
{
  return sub_A132FC((uint64_t (*)(_QWORD, unint64_t, _QWORD, unint64_t, _QWORD, _QWORD, _QWORD, unint64_t, double))sub_A0C928, a1);
}

uint64_t objectdestroy_3Tm_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v3 | v8 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v10, v11);
}

void sub_A135C8()
{
  sub_A1325C((uint64_t (*)(uint64_t, __n128))sub_707954, (uint64_t (*)(BOOL, uint64_t, uint64_t, uint64_t))sub_11FFFC);
}

uint64_t sub_A135DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD540);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_A13624()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __n128 v7;
  uint64_t v8;
  int v9;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);

  v8 = v0 + v6;
  swift_unknownObjectWeakDestroy(v0 + v6);
  v9 = *(unsigned __int8 *)(v0 + v6 + 48);
  if (v9 != 255)
    sub_626A8(*(id *)(v8 + 8), *(_QWORD *)(v8 + 16), *(_QWORD *)(v8 + 24), *(_QWORD *)(v8 + 32), *(_QWORD *)(v8 + 40), v9);
  if (*(_QWORD *)(v8 + 56))
    swift_release(*(_QWORD *)(v8 + 64));
  return swift_deallocObject(v0, v6 + 72, v3 | 7);
}

void sub_A136EC(char a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(type metadata accessor for IndexPath(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_A0FF28(a1, *(_QWORD *)(v1 + 16), v1 + v4, *(void **)(v1 + v5), v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t sub_A13750()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  id *v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;

  v1 = type metadata accessor for AppInterfaceContext.Activity(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16));
  v6 = (id *)(v0 + v4);
  switch(swift_getEnumCaseMultiPayload(v6, v1))
  {
    case 0u:
      v7 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v6, v7);
      if (EnumCaseMultiPayload == 4)
      {

      }
      else if (EnumCaseMultiPayload == 3)
      {
        v9 = type metadata accessor for Artist(0);
        (*(void (**)(id *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v6, v9);
      }
      break;
    case 1u:
      swift_bridgeObjectRelease();
      v10 = (char *)v6 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD2E0) + 48);
      v11 = type metadata accessor for SearchScope(0);
      v12 = *(_QWORD *)(v11 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
        (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
      break;
    case 2u:

      goto LABEL_17;
    case 3u:
      v13 = type metadata accessor for Playlist.Folder(0);
      v14 = *(_QWORD *)(v13 - 8);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v14 + 48))(v6, 1, v13))
        (*(void (**)(id *, uint64_t))(v14 + 8))(v6, v13);
      v15 = type metadata accessor for PlaylistCreation.Context(0);
      swift_bridgeObjectRelease();
      v16 = (char *)v6 + *(int *)(v15 + 24);
      v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE7A0);
      v18 = *(_QWORD *)(v17 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
        (*(void (**)(char *, uint64_t))(v18 + 8))(v16, v17);
      v19 = *(int *)(v15 + 28);
      goto LABEL_21;
    case 4u:

      v20 = type metadata accessor for PlaylistCreation.LegacyContext(0);
      v21 = (id *)((char *)v6 + *(int *)(v20 + 28));
      v22 = type metadata accessor for SourcedSongs(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v21, 1, v22))
      {
        if (swift_getEnumCaseMultiPayload(v21, v22) == 1)
        {
          v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE7A0);
          (*(void (**)(id *, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v21, v23);
        }
        else
        {

        }
      }
      v19 = *(int *)(v20 + 32);
LABEL_21:
      v25 = (id *)((char *)v6 + v19);
      if (*v25)
        swift_release(v25[1]);
      break;
    case 5u:
      v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE7A0);
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v6, v24);
      if (*(id *)((char *)v6 + *(int *)(type metadata accessor for PlaylistPicker.Context(0) + 20) + 16) != (char *)&dword_0 + 1)
LABEL_17:
        swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  if (*(_QWORD *)(v0 + v5))
    swift_release(*(_QWORD *)(v0 + v5 + 8));
  return swift_deallocObject(v0, v5 + 16, v3 | 7);
}

uint64_t sub_A13A58()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_A13A80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;

  v1 = type metadata accessor for Date(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  v5 = *(void **)(v0 + 72);
  if ((unint64_t)v5 >= 9)

  v6 = (v3 + 210) & ~v3;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 104));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 128));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 144));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 160));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 184));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v6, v1);
  return swift_deallocObject(v0, v6 + v4, v3 | 7);
}

uint64_t sub_A13B54(double a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Date(0) - 8) + 80);
  return sub_A0CBF8(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), (_OWORD *)(v1 + 40), *(_QWORD *)(v1 + 200), *(_BYTE *)(v1 + 208), *(_BYTE *)(v1 + 209), a1, v1 + ((v3 + 210) & ~v3), (void (*)(double))sub_A0791C, (uint64_t *)&unk_14F0D40, (void (*)(uint64_t, uint64_t, uint64_t))sub_19D148);
}

void *MCDSharePlayTogetherViewModel.notificationName.unsafeMutableAddressor()
{
  return &static MCDSharePlayTogetherViewModel.notificationName;
}

unint64_t static MCDSharePlayTogetherViewModel.notificationName.getter()
{
  return 0xD00000000000002DLL;
}

void sub_A13D6C(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  NSObject *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  id v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;

  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = Logger.sharePlayTogether.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v7, v3);
  v8 = a2;
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v11 = 134349056;
    v14 = v11 + 4;
    v12 = *(_QWORD *)((*(uint64_t (**)(uint8_t *))((char *)&stru_158.size + (swift_isaMask & (uint64_t)v8->isa)))(v11)
                    + 16);

    swift_bridgeObjectRelease();
    v15 = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16);

    _os_log_impl(&dword_0, v9, v10, "[MCDSharePlayTogetherViewModel] session.objectWillChange participant count: %{public}ld", v11, 0xCu);
    swift_slowDealloc(v11, -1, -1);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v9 = v8;
  }

  v13 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_14ABEE0 != -1)
    swift_once(&qword_14ABEE0, sub_A14064);
  objc_msgSend(v13, "postNotificationName:object:", qword_15817A0, 0);

}

void MCDSharePlayTogetherViewModel.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("MusicApplication.MCDSharePlayTogetherViewModel", 46, "init()", 6, 0);
  __break(1u);
}

id MCDSharePlayTogetherViewModel.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MCDSharePlayTogetherViewModel();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for MCDSharePlayTogetherViewModel()
{
  return objc_opt_self(_TtC16MusicApplication29MCDSharePlayTogetherViewModel);
}

NSString sub_A14064()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_15817A0 = (uint64_t)result;
  return result;
}

id sub_A14098(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  objc_class *v30;
  char *v32;
  uint64_t v33;
  objc_super v34;
  id v35;
  uint64_t v36;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14BAF30);
  __chkstk_darwin(v4);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14DB2B0);
  v33 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = OBJC_IVAR____TtC16MusicApplication29MCDSharePlayTogetherViewModel_participantsSubscription;
  *(_QWORD *)&v2[OBJC_IVAR____TtC16MusicApplication29MCDSharePlayTogetherViewModel_participantsSubscription] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC16MusicApplication29MCDSharePlayTogetherViewModel_session] = a1;
  v11 = type metadata accessor for SharePlayTogetherSession(0);
  sub_4DD24(&qword_14F1140, type metadata accessor for SharePlayTogetherSession, (uint64_t)&protocol conformance descriptor for SharePlayTogetherSession);
  v32 = v2;
  v12 = a1;
  v36 = ObservableObject<>.objectWillChange.getter(v11);
  v13 = sub_10F850();
  v35 = (id)static OS_dispatch_queue.main.getter(v13, v14, v15, v16, v17, v18, v19, v20);
  v21 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v6, 1, 1, v21);
  v22 = type metadata accessor for ObservableObjectPublisher(0);
  v23 = sub_4DD24((unint64_t *)&qword_14AE6A0, (uint64_t (*)(uint64_t))sub_10F850, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
  Publisher.receive<A>(on:options:)(&v35, v6, v22, v13, &protocol witness table for ObservableObjectPublisher, v23);
  sub_10F88C((uint64_t)v6);

  swift_release(v36);
  v24 = swift_allocObject(&unk_1393EE8, 24, 7);
  *(_QWORD *)(v24 + 16) = v12;
  v25 = sub_A14328();
  v26 = v12;
  v27 = Publisher<>.sink(receiveValue:)(sub_A14320, v24, v7, v25);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v9, v7);
  swift_release(v24);
  v28 = *(_QWORD *)&v2[v10];
  *(_QWORD *)&v2[v10] = v27;
  v29 = v32;

  swift_release(v28);
  v30 = (objc_class *)type metadata accessor for MCDSharePlayTogetherViewModel();
  v34.receiver = v29;
  v34.super_class = v30;
  return objc_msgSendSuper2(&v34, "init");
}

uint64_t sub_A142FC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_A14320(uint64_t a1)
{
  uint64_t v1;

  sub_A13D6C(a1, *(void **)(v1 + 16));
}

unint64_t sub_A14328()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14DB2C0;
  if (!qword_14DB2C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_14DB2B0);
    result = swift_getWitnessTable(&protocol conformance descriptor for Publishers.ReceiveOn<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14DB2C0);
  }
  return result;
}

double _s11AttributionVwxx(uint64_t a1)
{
  double result;

  sub_97F778(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 32)).n128_u64[0];
  return result;
}

uint64_t _s11AttributionVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  sub_97F754(*(_QWORD *)a2, v5, v6);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  swift_retain(v7);
  return a1;
}

uint64_t _s11AttributionVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  sub_97F754(*(_QWORD *)a2, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  sub_97F778(v7, v8, v9);
  v11 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(a2 + 32);
  v12 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = v11;
  *(_QWORD *)(a1 + 32) = v10;
  swift_retain(v10);
  swift_release(v12);
  return a1;
}

uint64_t _s11AttributionVwta(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v4 = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v4;
  sub_97F778(v5, v6, v7);
  v8 = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release(v8);
  return a1;
}

ValueMetadata *_s11AttributionVMa()
{
  return &_s11AttributionVN;
}

uint64_t _s11AttributionV4DataOwxx(uint64_t a1)
{
  return sub_97F778(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s11AttributionV4DataOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_97F754(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s11AttributionV4DataOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_97F754(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_97F778(v6, v7, v8);
  return a1;
}

uint64_t _s11AttributionV4DataOwta(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_97F778(v4, v5, v6);
  return a1;
}

ValueMetadata *_s11AttributionV4DataOMa()
{
  return &_s11AttributionV4DataON;
}

uint64_t sub_A145E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;

  v5 = type metadata accessor for Optional(0, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, a1, v5);
}

uint64_t sub_A14620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;

  v10 = type metadata accessor for _ConditionalContent.Storage(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v14 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))((char *)&v14 - v11, a1, a2);
  swift_storeEnumTagMultiPayload(v12, v10, 0);
  return _ConditionalContent<>.init(storage:)(v12, a2, a3, a4, a5);
}

uint64_t sub_A146E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;

  v10 = type metadata accessor for _ConditionalContent.Storage(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v14 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))((char *)&v14 - v11, a1, a3);
  swift_storeEnumTagMultiPayload(v12, v10, 1);
  return _ConditionalContent<>.init(storage:)(v12, a2, a3, a4, a5);
}

_QWORD *sub_A147A8@<X0>(_BYTE *a1@<X8>)
{
  unint64_t v2;
  _QWORD *result;
  uint64_t v4;

  v2 = sub_4CC0B8();
  result = EnvironmentValues.subscript.getter(&v4, &type metadata for HeaderModeKey, &type metadata for HeaderModeKey, v2);
  *a1 = v4;
  return result;
}

uint64_t sub_A147F4(char *a1)
{
  unint64_t v1;
  char v3;

  v3 = *a1;
  v1 = sub_4CC0B8();
  return EnvironmentValues.subscript.setter(&v3, &type metadata for HeaderModeKey, &type metadata for HeaderModeKey, v1);
}

uint64_t sub_A1483C()
{
  return EnvironmentValues.redactionReasons.getter();
}

uint64_t sub_A1485C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for RedactionReasons(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return EnvironmentValues.redactionReasons.setter(v4);
}

uint64_t sub_A148D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)a1;
  v4 = *(_QWORD *)a2;
  if ((*(_BYTE *)(a1 + 16) & 1) == 0)
  {
    if ((*(_BYTE *)(a2 + 16) & 1) == 0)
      return sub_30D9D4(v3, *(_QWORD *)a2);
    return 0;
  }
  if ((*(_BYTE *)(a2 + 16) & 1) == 0)
    return 0;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a2 + 8);
  if (v3 == v4 && v5 == v6)
    return 1;
  else
    return _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v4, v6, 0);
}

uint64_t sub_A14930@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  _QWORD v44[2];
  char v45;

  v2 = v1;
  v42 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F0DC0);
  __chkstk_darwin(v3);
  v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v39 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F0DC8);
  __chkstk_darwin(v9);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F0DD0);
  __chkstk_darwin(v41);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v39 - v15;
  sub_4495C4((__int128 *)v1, (uint64_t)&v43);
  sub_4495C4(&v43, (uint64_t)v44);
  if ((v45 & 1) != 0)
  {
    v17 = v44[0];
    v18 = v44[1];
    v19 = *(_QWORD *)(v2 + 32);
    v40 = *(_QWORD *)(v2 + 24);
    v20 = swift_allocObject(&unk_1394038, 72, 7);
    v21 = *(_OWORD *)(v2 + 16);
    *(_OWORD *)(v20 + 16) = *(_OWORD *)v2;
    *(_OWORD *)(v20 + 32) = v21;
    *(_QWORD *)(v20 + 48) = *(_QWORD *)(v2 + 32);
    *(_QWORD *)(v20 + 56) = v17;
    *(_QWORD *)(v20 + 64) = v18;
    *((_QWORD *)v5 + 4) = swift_getKeyPath(&unk_1091048);
    v5[40] = 0;
    *((_QWORD *)v5 + 6) = swift_getKeyPath(&unk_1091070);
    v5[56] = 0;
    v22 = &v5[*(int *)(v3 + 48)];
    *(_QWORD *)v22 = swift_getKeyPath(&unk_1091098);
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_14D9670);
    swift_storeEnumTagMultiPayload(v22, v23, 0);
    *(_QWORD *)v5 = sub_A15F34;
    *((_QWORD *)v5 + 1) = v20;
    *((_QWORD *)v5 + 2) = v40;
    *((_QWORD *)v5 + 3) = v19;
    sub_5C090((uint64_t)v5, (uint64_t)v8, &qword_14F0DC0);
    sub_5C238((uint64_t)v8, (uint64_t)v11, &qword_14F0DC0);
    swift_storeEnumTagMultiPayload(v11, v9, 1);
    sub_A16038((uint64_t)&v43);
    swift_retain(v19);
    sub_A16038((uint64_t)&v43);
    v24 = sub_5C150(&qword_14F0DD8, &qword_14F0DD0, (uint64_t)&unk_10911B0);
    v25 = sub_5C150(&qword_14F0DE0, &qword_14F0DC0, (uint64_t)&unk_10911B0);
    swift_retain(v19);
    _ConditionalContent<>.init(storage:)(v11, v41, v3, v24, v25);
    v26 = (uint64_t)v8;
    v27 = &qword_14F0DC0;
  }
  else
  {
    v28 = v44[0];
    v29 = *(_QWORD *)(v1 + 24);
    v30 = *(_QWORD *)(v2 + 32);
    v31 = swift_allocObject(&unk_1394060, 64, 7);
    v32 = *(_OWORD *)(v2 + 16);
    *(_OWORD *)(v31 + 16) = *(_OWORD *)v2;
    *(_OWORD *)(v31 + 32) = v32;
    *(_QWORD *)(v31 + 48) = *(_QWORD *)(v2 + 32);
    *(_QWORD *)(v31 + 56) = v28;
    *((_QWORD *)v13 + 4) = swift_getKeyPath(&unk_1091048);
    v13[40] = 0;
    *((_QWORD *)v13 + 6) = swift_getKeyPath(&unk_1091070);
    v13[56] = 0;
    v33 = v41;
    v34 = &v13[*(int *)(v41 + 48)];
    *(_QWORD *)v34 = swift_getKeyPath(&unk_1091098);
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_14D9670);
    swift_storeEnumTagMultiPayload(v34, v35, 0);
    *(_QWORD *)v13 = sub_A160A0;
    *((_QWORD *)v13 + 1) = v31;
    *((_QWORD *)v13 + 2) = v29;
    *((_QWORD *)v13 + 3) = v30;
    sub_5C090((uint64_t)v13, (uint64_t)v16, &qword_14F0DD0);
    sub_5C238((uint64_t)v16, (uint64_t)v11, &qword_14F0DD0);
    swift_storeEnumTagMultiPayload(v11, v9, 0);
    sub_A16038((uint64_t)&v43);
    swift_retain(v30);
    sub_A16038((uint64_t)&v43);
    v36 = sub_5C150(&qword_14F0DD8, &qword_14F0DD0, (uint64_t)&unk_10911B0);
    v37 = sub_5C150(&qword_14F0DE0, &qword_14F0DC0, (uint64_t)&unk_10911B0);
    swift_retain(v30);
    _ConditionalContent<>.init(storage:)(v11, v33, v3, v36, v37);
    v26 = (uint64_t)v16;
    v27 = &qword_14F0DD0;
  }
  return sub_56024(v26, v27);
}

double sub_A14D40@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  char v16;
  uint64_t *v17;
  double result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v3 = _s11AttributionV4TextV5SpecsVMa(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v21 - v7;
  v9 = type metadata accessor for PlaylistCurators.View(0);
  __chkstk_darwin(v9);
  v11 = (uint64_t *)((char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *(_QWORD *)v1;
  if ((*(_BYTE *)(v1 + 16) & 1) != 0)
  {
    v13 = *(_QWORD *)(v1 + 8);
    KeyPath = swift_getKeyPath(&unk_1091048);
    sub_97F754(v12, v13, 1);
    swift_retain(KeyPath);
    v16 = sub_724BF4(v15, 0);
    swift_release(KeyPath);
    if ((v16 & 1) != 0)
    {
      if (qword_14ABEE8 != -1)
        swift_once(&qword_14ABEE8, sub_A164D0);
      v17 = qword_14F0D88;
    }
    else
    {
      if (qword_14ABEF0 != -1)
        swift_once(&qword_14ABEF0, sub_A1655C);
      v17 = qword_14F0DA0;
    }
    v19 = __swift_project_value_buffer(v3, (uint64_t)v17);
    sub_A16640(v19, (uint64_t)v5);
    sub_A16684((uint64_t)v5, (uint64_t)v8);
    v20 = type metadata accessor for Font.TextStyle(0);
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(a1, v8, v20);
    sub_97F778(v12, v13, 1);
    *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  }
  else
  {
    PlaylistCurators.View.init(configuration:)(*(_QWORD *)v1, v11);
    swift_bridgeObjectRetain();
    PlaylistCurators.View.fontTextStyle.getter(a1);
    sub_5C0DC((uint64_t)v11, type metadata accessor for PlaylistCurators.View);
  }
  return result;
}

uint64_t sub_A14F3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t OpaqueTypeMetadata2;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD v64[2];
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t WitnessTable;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t OpaqueTypeConformance2;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;

  v75 = a2;
  v4 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v73 = a1;
  v81 = v3;
  v80 = type metadata accessor for Button(255, v4, v3);
  v104 = v80;
  v105 = type metadata accessor for BorderlessButtonStyle(255);
  v79 = v105;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for Button<A>, v80);
  v106 = WitnessTable;
  v107 = sub_4DD24(&qword_14E0228, (uint64_t (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle, (uint64_t)&protocol conformance descriptor for BorderlessButtonStyle);
  v77 = v107;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v104, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 0);
  v7 = type metadata accessor for _ConditionalContent(255, OpaqueTypeMetadata2, v4, v6);
  v8 = type metadata accessor for Group(0);
  v69 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)v64 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14C6288);
  v76 = v8;
  v12 = type metadata accessor for ModifiedContent(0, v8, v11);
  v70 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)v64 - v13;
  v15 = type metadata accessor for AccessibilityAttachmentModifier(255);
  v16 = type metadata accessor for ModifiedContent(0, v12, v15);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v71 = (char *)v64 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v72 = (uint64_t)v64 - v20;
  v74 = v21;
  v22 = type metadata accessor for Optional(0, v21);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v26 = __chkstk_darwin(v24);
  v28 = (char *)v64 - v27;
  if (*v2)
  {
    v64[1] = v64;
    __chkstk_darwin(v2[1]);
    v66 = v17;
    v64[-6] = v4;
    v29 = v81;
    v64[-5] = v81;
    v64[-4] = v2;
    v64[-3] = v31;
    v64[-2] = v30;
    v68 = v30;
    v65 = v32;
    v67 = v31;
    swift_retain(v30);
    v104 = v80;
    v105 = v79;
    v106 = WitnessTable;
    v107 = v77;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v104, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    v88 = v29;
    v33 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v7);
    Group<A>.init(content:)(sub_A1758C, &v64[-8], v7, v33);
    v34 = sub_A15CC4();
    v104 = v34;
    v86 = v33;
    v73 = v23;
    v35 = v28;
    v36 = v22;
    v37 = v12;
    v38 = v7;
    v39 = v76;
    v40 = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v76);
    View.foregroundStyle<A>(_:)(&v104, v39, &type metadata for Color, v40, &protocol witness table for Color);
    v41 = swift_release(v34);
    v42 = v39;
    v7 = v38;
    v12 = v37;
    v22 = v36;
    v28 = v35;
    (*(void (**)(char *, uint64_t, __n128))(v69 + 8))(v10, v42, v41);
    AccessibilityIdentifier.containerDetailHeaderAttribution.unsafeMutableAddressor();
    v43 = sub_5C150(&qword_14C6280, &qword_14C6288, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    v84 = v40;
    v85 = v43;
    swift_bridgeObjectRetain();
    v44 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v12);
    v45 = (uint64_t)v71;
    View.accessibilityIdentifier(_:)();
    (*(void (**)(char *, uint64_t))(v70 + 8))(v14, v12);
    swift_bridgeObjectRelease();
    v46 = sub_4DD24((unint64_t *)&qword_14C07D0, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    v82 = v44;
    v83 = v46;
    v47 = v74;
    swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v74);
    v48 = v72;
    sub_505E64(v45, v47, v72);
    v49 = v66;
    v50 = *(void (**)(uint64_t, uint64_t))(v66 + 8);
    v50(v45, v47);
    v51 = v65;
    sub_4FF1F4(v48, v47, v65);
    v50(v48, v47);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v49 + 56))(v51, 0, 1, v47);
    v52 = v73;
    (*(void (**)(char *, uint64_t, uint64_t))(v73 + 16))(v28, v51, v22);
    v53 = *(void (**)(uint64_t, uint64_t))(v52 + 8);
    v53(v51, v22);
    sub_5C198(v67, v68);
  }
  else
  {
    v54 = v25;
    v47 = v74;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, double))(v17 + 56))(v25, 1, 1, v74, v26);
    v104 = v80;
    v105 = v79;
    v106 = WitnessTable;
    v107 = v77;
    v102 = swift_getOpaqueTypeConformance2(&v104, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    v103 = v81;
    v101 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v7);
    v55 = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v76);
    v56 = sub_5C150(&qword_14C6280, &qword_14C6288, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    v99 = v55;
    v100 = v56;
    v57 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v12);
    v58 = sub_4DD24((unint64_t *)&qword_14C07D0, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    v97 = v57;
    v98 = v58;
    swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v47);
    (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v28, v54, v22);
    v53 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
    v53(v54, v22);
  }
  v104 = v80;
  v105 = v79;
  v106 = WitnessTable;
  v107 = v77;
  v95 = swift_getOpaqueTypeConformance2(&v104, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
  v96 = v81;
  v94 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v7);
  v59 = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v76);
  v60 = sub_5C150(&qword_14C6280, &qword_14C6288, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
  v92 = v59;
  v93 = v60;
  v61 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v12);
  v62 = sub_4DD24((unint64_t *)&qword_14C07D0, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
  v90 = v61;
  v91 = v62;
  v89 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v47);
  swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v22);
  sub_4FF1F4((uint64_t)v28, v22, v75);
  return ((uint64_t (*)(char *, uint64_t))v53)(v28, v22);
}

uint64_t sub_A15730@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t WitnessTable;
  uint64_t v14;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t OpaqueTypeConformance2;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  _QWORD v57[2];
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;

  v62 = a2;
  v63 = a3;
  v61 = a1;
  v68 = a6;
  v8 = type metadata accessor for BorderlessButtonStyle(0);
  v60 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v59 = (char *)v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = a5;
  v10 = type metadata accessor for Button(0, a4, a5);
  v58 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)v57 - v11;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for Button<A>, v10);
  v14 = sub_4DD24(&qword_14E0228, (uint64_t (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle, (uint64_t)&protocol conformance descriptor for BorderlessButtonStyle);
  v69 = v10;
  v70 = v14;
  v75 = v10;
  v76 = v8;
  v67 = v8;
  v71 = WitnessTable;
  v77 = WitnessTable;
  v78 = v14;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v75, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 0);
  v16 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2);
  v18 = (char *)v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)v57 - v20;
  v22 = *(_QWORD *)(a4 - 8);
  __chkstk_darwin(v23);
  v25 = (char *)v57 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __chkstk_darwin(v26);
  v29 = (char *)v57 - v28;
  v30 = type metadata accessor for _ConditionalContent(0, OpaqueTypeMetadata2, a4, v27);
  v65 = *(_QWORD *)(v30 - 8);
  v66 = v30;
  v33 = __chkstk_darwin(v30);
  v64 = (char *)v57 - v34;
  v35 = *(_QWORD *)(v32 + 16);
  if (v35)
  {
    v57[1] = v57;
    v61 = *(_QWORD *)(v32 + 24);
    v36 = v61;
    __chkstk_darwin(v31);
    v37 = v72;
    v57[-4] = a4;
    v57[-3] = v37;
    v38 = v63;
    v57[-2] = v62;
    v57[-1] = v38;
    swift_retain_n(v36, 2);
    v40 = Button.init(action:label:)(v35, v36, sub_A1759C, &v57[-6], a4, v37, v39);
    v41 = v59;
    BorderlessButtonStyle.init()(v40);
    v62 = v16;
    v63 = v35;
    v43 = v69;
    v42 = v70;
    v44 = v67;
    v45 = v71;
    View.buttonStyle<A>(_:)(v41, v69, v67, v71, v70);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v41, v44);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v12, v43);
    v75 = v43;
    v76 = v44;
    v77 = v45;
    v78 = v42;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v75, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    sub_505E64((uint64_t)v18, OpaqueTypeMetadata2, (uint64_t)v21);
    v47 = *(void (**)(char *, uint64_t))(v62 + 8);
    v47(v18, OpaqueTypeMetadata2);
    sub_4FF1F4((uint64_t)v21, OpaqueTypeMetadata2, (uint64_t)v18);
    v48 = (uint64_t)v64;
    sub_A14620((uint64_t)v18, OpaqueTypeMetadata2, a4, OpaqueTypeConformance2, v72);
    sub_5C198(v63, v61);
    v47(v18, OpaqueTypeMetadata2);
    v47(v21, OpaqueTypeMetadata2);
  }
  else
  {
    ((void (*)(double))v62)(v33);
    v49 = v72;
    sub_505E64((uint64_t)v25, a4, (uint64_t)v29);
    v50 = *(void (**)(char *, uint64_t))(v22 + 8);
    v50(v25, a4);
    sub_4FF1F4((uint64_t)v29, a4, (uint64_t)v25);
    v51 = v67;
    v75 = v69;
    v76 = v67;
    v77 = v71;
    v78 = v70;
    v52 = swift_getOpaqueTypeConformance2(&v75, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    v53 = v49;
    v48 = (uint64_t)v64;
    sub_A146E4((uint64_t)v25, OpaqueTypeMetadata2, a4, v52, v53);
    v50(v25, a4);
    v54 = v29;
    v44 = v51;
    v50(v54, a4);
  }
  v75 = v69;
  v76 = v44;
  v77 = v71;
  v78 = v70;
  v73 = swift_getOpaqueTypeConformance2(&v75, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
  v74 = v72;
  v55 = v66;
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v66);
  sub_4FF1F4(v48, v55, v68);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v65 + 8))(v48, v55);
}

uint64_t sub_A15BEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  void (*v12)(double);
  void (*v13)(char *, uint64_t);
  uint64_t v15;

  v5 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin(a1);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v15 - v10;
  v12(v9);
  sub_505E64((uint64_t)v7, a2, (uint64_t)v11);
  v13 = *(void (**)(char *, uint64_t))(v5 + 8);
  v13(v7, a2);
  sub_4FF1F4((uint64_t)v11, a2, a3);
  return ((uint64_t (*)(char *, uint64_t))v13)(v11, a2);
}

uint64_t sub_A15CC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  void (*v12)(char *, uint64_t);
  __n128 v13;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;

  v1 = v0;
  v2 = type metadata accessor for RedactionReasons(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v22 - v7;
  v9 = sub_724E44((uint64_t)&v22 - v7);
  static RedactionReasons.placeholder.getter(v9);
  v10 = sub_4DD24(&qword_14F0F18, (uint64_t (*)(uint64_t))&type metadata accessor for RedactionReasons, (uint64_t)&protocol conformance descriptor for RedactionReasons);
  v11 = dispatch thunk of static Equatable.== infix(_:_:)(v8, v5, v2, v10);
  v12 = *(void (**)(char *, uint64_t))(v3 + 8);
  v12(v5, v2);
  v12(v8, v2);
  if ((v11 & 1) != 0)
    return static Color.primary.getter(v13);
  v15 = *(_QWORD *)(v1 + 32);
  v16 = *(_BYTE *)(v1 + 40);
  sub_270050(v15, v16);
  v17 = sub_724BF4(v15, v16);
  v18 = sub_270154(v15, v16);
  if ((v17 & 1) != 0)
    return static Color.accentColor.getter(v18);
  v19 = *(_QWORD *)(v1 + 48);
  v20 = *(_BYTE *)(v1 + 56);
  sub_270050(v19, v20);
  v21 = sub_724C4C(v19, v20);
  v18 = sub_270154(v19, v20);
  if ((v21 & 0xFE) == 2)
    return static Color.accentColor.getter(v18);
  else
    return static Color.primary.getter(v13);
}

uint64_t sub_A15E48@<X0>(uint64_t a1@<X8>)
{
  return sub_A14930(a1);
}

unint64_t sub_A15E84(uint64_t a1)
{
  unint64_t result;

  result = sub_A15EA8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_A15EA8()
{
  unint64_t result;

  result = qword_14F0DB8;
  if (!qword_14F0DB8)
  {
    result = swift_getWitnessTable(&unk_1090FF8, &_s11AttributionVN);
    atomic_store(result, (unint64_t *)&qword_14F0DB8);
  }
  return result;
}

uint64_t sub_A15EEC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1200DCC, 1);
}

uint64_t sub_A15EFC()
{
  uint64_t v0;

  sub_97F778(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_A15F34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;

  v4 = *(_QWORD *)(v1 + 56);
  v3 = *(_QWORD *)(v1 + 64);
  KeyPath = swift_getKeyPath(&unk_1091048);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = KeyPath;
  *(_BYTE *)(a1 + 24) = 0;
  return swift_bridgeObjectRetain(v3);
}

_QWORD *sub_A15F80@<X0>(_BYTE *a1@<X8>)
{
  unint64_t v2;
  _QWORD *result;
  uint64_t v4;

  v2 = sub_4CC0B8();
  result = EnvironmentValues.subscript.getter(&v4, &type metadata for HeaderModeKey, &type metadata for HeaderModeKey, v2);
  *a1 = v4;
  return result;
}

uint64_t sub_A15FCC(char *a1)
{
  unint64_t v1;
  char v3;

  v3 = *a1;
  v1 = sub_4CC0B8();
  return EnvironmentValues.subscript.setter(&v3, &type metadata for HeaderModeKey, &type metadata for HeaderModeKey, v1);
}

uint64_t sub_A16014()
{
  return EnvironmentValues.redactionReasons.getter();
}

uint64_t sub_A16038(uint64_t a1)
{
  sub_97F754(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  return a1;
}

uint64_t sub_A16068()
{
  uint64_t v0;

  sub_97F778(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_A160A0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  PlaylistCurators.View.init(configuration:)(*(_QWORD *)(v1 + 56), a1);
  return swift_bridgeObjectRetain();
}

uint64_t _s11AttributionV4TextV5SpecsVMa(uint64_t a1)
{
  uint64_t result;

  result = qword_14F0E40;
  if (!qword_14F0E40)
    return swift_getSingletonMetadata(a1, &_s11AttributionV4TextV5SpecsVMn);
  return result;
}

uint64_t sub_A16104@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  char v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t KeyPath;
  char v39;
  uint64_t *v40;
  uint64_t v41;
  _BYTE *v42;
  uint64_t v43;
  _BYTE *v44;
  char v45;
  uint64_t result;
  uint64_t v47;
  _BYTE v48[12];
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  _BYTE *v54;
  _QWORD v55[2];

  v9 = a4 & 1;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EC0D0);
  __chkstk_darwin(v10);
  v12 = &v48[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = _s11AttributionV4TextV5SpecsVMa(0);
  __chkstk_darwin(v13);
  v53 = &v48[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  v54 = &v48[-v16];
  __chkstk_darwin(v17);
  v19 = &v48[-v18];
  __chkstk_darwin(v20);
  v22 = &v48[-v21];
  v55[0] = a1;
  v55[1] = a2;
  v23 = sub_55EA0();
  swift_bridgeObjectRetain();
  v24 = Text.init<A>(_:)(v55, &type metadata for String, v23);
  v26 = v25;
  LODWORD(v51) = v27;
  v52 = v28;
  sub_270050(a3, v9);
  LOBYTE(a2) = sub_724BF4(a3, v9);
  sub_270154(a3, v9);
  if ((a2 & 1) != 0)
  {
    if (qword_14ABEE8 != -1)
      swift_once(&qword_14ABEE8, sub_A164D0);
    v29 = qword_14F0D88;
  }
  else
  {
    if (qword_14ABEF0 != -1)
      swift_once(&qword_14ABEF0, sub_A1655C);
    v29 = qword_14F0DA0;
  }
  v30 = __swift_project_value_buffer(v13, (uint64_t)v29);
  sub_A16640(v30, (uint64_t)v19);
  sub_A16684((uint64_t)v19, (uint64_t)v22);
  v31 = type metadata accessor for Font.Design(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v12, 1, 1, v31);
  v32 = static Font.system(_:design:weight:)(v22, v12, *(_QWORD *)&v22[*(int *)(v13 + 20)], 0);
  sub_56024((uint64_t)v12, &qword_14EC0D0);
  sub_5C0DC((uint64_t)v22, _s11AttributionV4TextV5SpecsVMa);
  v33 = v51 & 1;
  v34 = Text.font(_:)(v32, v24, v26, v51 & 1, v52);
  v50 = v35;
  v51 = v36;
  v49 = v37;
  swift_release(v32);
  sub_AF8E8(v24, v26, v33);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath(&unk_1091200);
  sub_270050(a3, v9);
  v39 = sub_724BF4(a3, v9);
  sub_270154(a3, v9);
  if ((v39 & 1) != 0)
  {
    if (qword_14ABEE8 != -1)
      swift_once(&qword_14ABEE8, sub_A164D0);
    v40 = qword_14F0D88;
  }
  else
  {
    if (qword_14ABEF0 != -1)
      swift_once(&qword_14ABEF0, sub_A1655C);
    v40 = qword_14F0DA0;
  }
  v41 = __swift_project_value_buffer(v13, (uint64_t)v40);
  v42 = v53;
  sub_A16640(v41, (uint64_t)v53);
  v43 = (uint64_t)v42;
  v44 = v54;
  sub_A16684(v43, (uint64_t)v54);
  v45 = v44[*(int *)(v13 + 24)];
  sub_5C0DC((uint64_t)v44, _s11AttributionV4TextV5SpecsVMa);
  result = swift_getKeyPath(&unk_1091230);
  v47 = v50;
  *(_QWORD *)a5 = v34;
  *(_QWORD *)(a5 + 8) = v47;
  *(_BYTE *)(a5 + 16) = v49 & 1;
  *(_QWORD *)(a5 + 24) = v51;
  *(_QWORD *)(a5 + 32) = KeyPath;
  *(_QWORD *)(a5 + 40) = 3;
  *(_BYTE *)(a5 + 48) = 0;
  *(_QWORD *)(a5 + 56) = result;
  *(_BYTE *)(a5 + 64) = v45;
  return result;
}

void sub_A164D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = _s11AttributionV4TextV5SpecsVMa(0);
  __swift_allocate_value_buffer(v0, qword_14F0D88);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_14F0D88);
  v2 = enum case for Font.TextStyle.title(_:);
  v3 = type metadata accessor for Font.TextStyle(0);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(v1, v2, v3);
  *(double *)(v1 + *(int *)(v0 + 20)) = static Font.Weight.regular.getter(v4);
  *(_BYTE *)(v1 + *(int *)(v0 + 24)) = 0;
}

uint64_t sub_A1655C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t result;
  uint64_t v9;

  v0 = type metadata accessor for Font.TextStyle(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = _s11AttributionV4TextV5SpecsVMa(0);
  __swift_allocate_value_buffer(v4, qword_14F0DA0);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_14F0DA0);
  v6 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for Font.TextStyle.title3(_:), v0);
  v7 = static Font.Weight.regular.getter(v6);
  result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
  *(double *)(v5 + *(int *)(v4 + 20)) = v7;
  *(_BYTE *)(v5 + *(int *)(v4 + 24)) = 1;
  return result;
}

uint64_t sub_A16640(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s11AttributionV4TextV5SpecsVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_A16684(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s11AttributionV4TextV5SpecsVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_A166C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_A166D4);
}

uint64_t sub_A166D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = type metadata accessor for Font.TextStyle(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 3)
    return v9 - 2;
  else
    return 0;
}

uint64_t sub_A1674C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_A16758);
}

uint64_t sub_A16758(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Font.TextStyle(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 24)) = a2 + 2;
  return result;
}

uint64_t sub_A167D0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = type metadata accessor for Font.TextStyle(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[2] = &unk_10910D0;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t _s11AttributionV4TextVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return sub_270154(*(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t _s11AttributionV4TextVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 24);
  swift_bridgeObjectRetain();
  sub_270050(v4, v5);
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = v5;
  return a1;
}

uint64_t _s11AttributionV4TextVwca(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v2 = a2;
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = v2[2];
  LOBYTE(v2) = *((_BYTE *)v2 + 24);
  sub_270050(v4, (char)v2);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = (_BYTE)v2;
  sub_270154(v5, v6);
  return a1;
}

uint64_t _s11AttributionV4TextVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_BYTE *)(a2 + 24);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = v5;
  sub_270154(v6, v7);
  return a1;
}

ValueMetadata *_s11AttributionV4TextVMa()
{
  return &_s11AttributionV4TextVN;
}

void sub_A169A0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = &unk_10910F8;
  v4[1] = &unk_10910F8;
  v4[2] = &unk_1091110;
  v4[3] = &unk_1091110;
  sub_6A62A0(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 0, 5, v4, a1 + 32);
  }
}

_OWORD *sub_A16A20(_OWORD *a1, uint64_t *a2, uint64_t a3)
{
  _OWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = (_OWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v8);
  }
  else
  {
    if (*a2)
    {
      v7 = a2[1];
      *(_QWORD *)v4 = *a2;
      *((_QWORD *)v4 + 1) = v7;
      swift_retain(v7);
    }
    else
    {
      *a1 = *(_OWORD *)a2;
    }
    v9 = a2[2];
    if (v9)
    {
      v10 = a2[3];
      *((_QWORD *)v4 + 2) = v9;
      *((_QWORD *)v4 + 3) = v10;
      swift_retain(v10);
    }
    else
    {
      v4[1] = *((_OWORD *)a2 + 1);
    }
    v11 = a2[4];
    v12 = *((_BYTE *)a2 + 40);
    sub_270050(v11, v12);
    *((_QWORD *)v4 + 4) = v11;
    *((_BYTE *)v4 + 40) = v12;
    v13 = a2[6];
    v14 = *((_BYTE *)a2 + 56);
    sub_270050(v13, v14);
    *((_QWORD *)v4 + 6) = v13;
    *((_BYTE *)v4 + 56) = v14;
    v15 = *(int *)(a3 + 48);
    v16 = (uint64_t *)((char *)v4 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_14D9670);
    if (swift_getEnumCaseMultiPayload(v17, v18) == 1)
    {
      v19 = type metadata accessor for RedactionReasons(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v16, v17, v19);
      v20 = v16;
      v21 = v18;
      v22 = 1;
    }
    else
    {
      v23 = *v17;
      *v16 = *v17;
      swift_retain(v23);
      v20 = v16;
      v21 = v18;
      v22 = 0;
    }
    swift_storeEnumTagMultiPayload(v20, v21, v22);
  }
  return v4;
}

double sub_A16B80(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  if (*(_QWORD *)a1)
    swift_release(*(_QWORD *)(a1 + 8));
  if (*(_QWORD *)(a1 + 16))
    swift_release(*(_QWORD *)(a1 + 24));
  sub_270154(*(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  sub_270154(*(_QWORD *)(a1 + 48), *(_BYTE *)(a1 + 56));
  v4 = (_QWORD *)(a1 + *(int *)(a2 + 48));
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14D9670);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for RedactionReasons(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*v4).n128_u64[0];
  }
  return result;
}

uint64_t sub_A16C28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  if (*(_QWORD *)a2)
  {
    v6 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v6;
    swift_retain(v6);
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  v7 = *(_QWORD *)(a2 + 16);
  if (v7)
  {
    v8 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = v7;
    *(_QWORD *)(a1 + 24) = v8;
    swift_retain(v8);
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  }
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(_BYTE *)(a2 + 40);
  sub_270050(v9, v10);
  *(_QWORD *)(a1 + 32) = v9;
  *(_BYTE *)(a1 + 40) = v10;
  v11 = *(_QWORD *)(a2 + 48);
  v12 = *(_BYTE *)(a2 + 56);
  sub_270050(v11, v12);
  *(_QWORD *)(a1 + 48) = v11;
  *(_BYTE *)(a1 + 56) = v12;
  v13 = *(int *)(a3 + 48);
  v14 = (uint64_t *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_14D9670);
  if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
  {
    v17 = type metadata accessor for RedactionReasons(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v14, v15, v17);
    v18 = 1;
  }
  else
  {
    v19 = *v15;
    *v14 = *v15;
    swift_retain(v19);
    v18 = 0;
  }
  swift_storeEnumTagMultiPayload(v14, v16, v18);
  return a1;
}

uint64_t sub_A16D54(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = *a2;
  if (*(_QWORD *)a1)
  {
    if (v6)
    {
      v7 = a2[1];
      v8 = *(_QWORD *)(a1 + 8);
      *(_QWORD *)a1 = v6;
      *(_QWORD *)(a1 + 8) = v7;
      swift_retain(v7);
      swift_release(v8);
      goto LABEL_8;
    }
    swift_release(*(_QWORD *)(a1 + 8));
  }
  else if (v6)
  {
    v9 = a2[1];
    *(_QWORD *)a1 = v6;
    *(_QWORD *)(a1 + 8) = v9;
    swift_retain(v9);
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  v10 = a2[2];
  if (*(_QWORD *)(a1 + 16))
  {
    if (v10)
    {
      v11 = a2[3];
      v12 = *(_QWORD *)(a1 + 24);
      *(_QWORD *)(a1 + 16) = v10;
      *(_QWORD *)(a1 + 24) = v11;
      swift_retain(v11);
      swift_release(v12);
      goto LABEL_15;
    }
    swift_release(*(_QWORD *)(a1 + 24));
  }
  else if (v10)
  {
    v13 = a2[3];
    *(_QWORD *)(a1 + 16) = v10;
    *(_QWORD *)(a1 + 24) = v13;
    swift_retain(v13);
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
LABEL_15:
  v14 = a2[4];
  v15 = *((_BYTE *)a2 + 40);
  sub_270050(v14, v15);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v14;
  *(_BYTE *)(a1 + 40) = v15;
  sub_270154(v16, v17);
  v18 = a2[6];
  v19 = *((_BYTE *)a2 + 56);
  sub_270050(v18, v19);
  v20 = *(_QWORD *)(a1 + 48);
  v21 = *(_BYTE *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = v18;
  *(_BYTE *)(a1 + 56) = v19;
  sub_270154(v20, v21);
  if ((uint64_t *)a1 != a2)
  {
    v22 = *(int *)(a3 + 48);
    v23 = (uint64_t *)(a1 + v22);
    v24 = (uint64_t *)((char *)a2 + v22);
    sub_56024(a1 + v22, &qword_14D9670);
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_14D9670);
    if (swift_getEnumCaseMultiPayload(v24, v25) == 1)
    {
      v26 = type metadata accessor for RedactionReasons(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v23, v24, v26);
      v27 = 1;
    }
    else
    {
      v28 = *v24;
      *v23 = *v24;
      swift_retain(v28);
      v27 = 0;
    }
    swift_storeEnumTagMultiPayload(v23, v25, v27);
  }
  return a1;
}

uint64_t sub_A16F10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;

  if (*(_QWORD *)a2)
  {
    v4 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v4;
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  v5 = *(_QWORD *)(a2 + 16);
  if (v5)
  {
    v6 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 24) = v6;
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  }
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v7 = *(int *)(a3 + 48);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14D9670);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for RedactionReasons(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload(v8, v10, 1);
  }
  else
  {
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  return a1;
}

uint64_t sub_A17010(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  void *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;

  v6 = *a2;
  if (*(_QWORD *)a1)
  {
    if (v6)
    {
      v7 = a2[1];
      v8 = *(_QWORD *)(a1 + 8);
      *(_QWORD *)a1 = v6;
      *(_QWORD *)(a1 + 8) = v7;
      swift_release(v8);
      goto LABEL_8;
    }
    swift_release(*(_QWORD *)(a1 + 8));
  }
  else if (v6)
  {
    v9 = a2[1];
    *(_QWORD *)a1 = v6;
    *(_QWORD *)(a1 + 8) = v9;
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  v10 = a2[2];
  if (*(_QWORD *)(a1 + 16))
  {
    if (v10)
    {
      v11 = a2[3];
      v12 = *(_QWORD *)(a1 + 24);
      *(_QWORD *)(a1 + 16) = v10;
      *(_QWORD *)(a1 + 24) = v11;
      swift_release(v12);
      goto LABEL_15;
    }
    swift_release(*(_QWORD *)(a1 + 24));
  }
  else if (v10)
  {
    v13 = a2[3];
    *(_QWORD *)(a1 + 16) = v10;
    *(_QWORD *)(a1 + 24) = v13;
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
LABEL_15:
  v14 = *((_BYTE *)a2 + 40);
  v15 = *(_QWORD *)(a1 + 32);
  v16 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = a2[4];
  *(_BYTE *)(a1 + 40) = v14;
  sub_270154(v15, v16);
  v17 = *((_BYTE *)a2 + 56);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_BYTE *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = a2[6];
  *(_BYTE *)(a1 + 56) = v17;
  sub_270154(v18, v19);
  if ((uint64_t *)a1 != a2)
  {
    v20 = *(int *)(a3 + 48);
    v21 = (void *)(a1 + v20);
    v22 = (char *)a2 + v20;
    sub_56024(a1 + v20, &qword_14D9670);
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_14D9670);
    if (swift_getEnumCaseMultiPayload(v22, v23) == 1)
    {
      v24 = type metadata accessor for RedactionReasons(0);
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v21, v22, v24);
      swift_storeEnumTagMultiPayload(v21, v23, 1);
    }
    else
    {
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_A171A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_A171AC);
}

uint64_t sub_A171AC(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_14D9678);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(&a1[*(int *)(a3 + 48)], a2, v9);
  }
}

uint64_t sub_A17238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_A17244);
}

char *sub_A17244(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)result = a2;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14D9678);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 48)], a2, a2, v7);
  }
  return result;
}

uint64_t _s11AttributionV7ContentVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s11AttributionV7ContentVMn);
}

unint64_t sub_A172CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14F0F00;
  if (!qword_14F0F00)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14F0F08);
    sub_5C150(&qword_14F0DD8, &qword_14F0DD0, (uint64_t)&unk_10911B0);
    sub_5C150(&qword_14F0DE0, &qword_14F0DC0, (uint64_t)&unk_10911B0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14F0F00);
  }
  return result;
}

uint64_t sub_A17370@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_A16104(*(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), a1);
}

uint64_t sub_A17380@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = _s11AttributionV4TextV5SpecsVMa(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - v7;
  v9 = *(_QWORD *)(v1 + 16);
  v10 = *(_BYTE *)(v1 + 24);
  sub_270050(v9, v10);
  v11 = sub_724BF4(v9, v10);
  sub_270154(v9, v10);
  if ((v11 & 1) != 0)
  {
    if (qword_14ABEE8 != -1)
      swift_once(&qword_14ABEE8, sub_A164D0);
    v12 = qword_14F0D88;
  }
  else
  {
    if (qword_14ABEF0 != -1)
      swift_once(&qword_14ABEF0, sub_A1655C);
    v12 = qword_14F0DA0;
  }
  v13 = __swift_project_value_buffer(v3, (uint64_t)v12);
  sub_A16640(v13, (uint64_t)v5);
  sub_A16684((uint64_t)v5, (uint64_t)v8);
  v14 = type metadata accessor for Font.TextStyle(0);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, v8, v14);
}

unint64_t sub_A174E0(uint64_t a1)
{
  unint64_t result;

  result = sub_A17504();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_A17504()
{
  unint64_t result;

  result = qword_14F0F10;
  if (!qword_14F0F10)
  {
    result = swift_getWitnessTable(&unk_1091160, &_s11AttributionV4TextVN);
    atomic_store(result, (unint64_t *)&qword_14F0F10);
  }
  return result;
}

uint64_t sub_A17548(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1200E28, 1);
}

uint64_t sub_A17558(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_1200DF4, 1);
}

uint64_t sub_A1758C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_A15730(v1[4], v1[5], v1[6], v1[2], v1[3], a1);
}

uint64_t sub_A1759C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_A15BEC(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_A175B8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t WitnessTable;
  uint64_t v5;
  uint64_t OpaqueTypeMetadata2;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *a1;
  v2 = type metadata accessor for Button(255, *a1, a1[1]);
  v3 = type metadata accessor for BorderlessButtonStyle(255);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for Button<A>, v2);
  v5 = sub_4DD24(&qword_14E0228, (uint64_t (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle, (uint64_t)&protocol conformance descriptor for BorderlessButtonStyle);
  v16 = v2;
  v17 = v3;
  v18 = WitnessTable;
  v19 = v5;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v16, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 0);
  v8 = type metadata accessor for _ConditionalContent(255, OpaqueTypeMetadata2, v1, v7);
  v9 = type metadata accessor for Group(255);
  v10 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14C6288);
  v11 = type metadata accessor for ModifiedContent(255, v9, v10);
  v12 = type metadata accessor for AccessibilityAttachmentModifier(255);
  v13 = type metadata accessor for ModifiedContent(255, v11, v12);
  v14 = type metadata accessor for Optional(255, v13);
  v16 = v2;
  v17 = v3;
  v18 = WitnessTable;
  v19 = v5;
  swift_getOpaqueTypeConformance2(&v16, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v8);
  swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v9);
  sub_5C150(&qword_14C6280, &qword_14C6288, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v11);
  sub_4DD24((unint64_t *)&qword_14C07D0, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v13);
  return swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v14);
}

unint64_t sub_A177BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14F0F20;
  if (!qword_14F0F20)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14F0F28);
    sub_2D4A88();
    sub_5C150((unint64_t *)&unk_14DCFE0, &qword_14D01A0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14F0F20);
  }
  return result;
}

id sub_A17840@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;
  uint64_t v5;

  result = objc_msgSend(*a1, "contentSize");
  *a2 = v4;
  a2[1] = v5;
  return result;
}

id sub_A17870(double *a1, id *a2)
{
  return objc_msgSend(*a2, "setContentSize:", *a1, a1[1]);
}

double sub_A17884()
{
  double result;

  result = 0.0;
  xmmword_14F0F30 = xmmword_10814D0;
  unk_14F0F40 = xmmword_10814D0;
  return result;
}

void sub_A1789C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  char *v8;
  uint64_t v9;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_14BDA30);
  __chkstk_darwin(v1);
  v2 = type metadata accessor for SocialProfile(0);
  __chkstk_darwin(v2);
  v3 = type metadata accessor for SharePlayTogetherSession.Participant(0);
  __chkstk_darwin(v3);
  v4 = type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5BDB8(v0, (uint64_t)v6, v7);
  v8 = (char *)sub_A179D8 + 4 * byte_1091260[swift_getEnumCaseMultiPayload(v6, v4)];
  __asm { BR              X10 }
}

void sub_A179D8()
{
  Swift::UInt *v0;
  Swift::UInt v1;

  v1 = *v0;
  Hasher._combine(_:)(2uLL);
  Hasher._combine(_:)(v1);
}

Swift::Int sub_A17B4C()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  sub_A1789C();
  return Hasher._finalize()();
}

Swift::Int sub_A17B8C()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  sub_A1789C();
  return Hasher._finalize()();
}

id sub_A17BC8(uint64_t a1)
{
  _BYTE *v1;
  char *v3;
  _QWORD *v4;
  _OWORD *v5;
  char *v6;
  uint64_t v7;
  objc_super v9;

  v3 = &v1[OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_preferredWidth];
  *(_QWORD *)v3 = 0;
  v3[8] = 1;
  v4 = &v1[OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_onDismiss];
  *v4 = 0;
  v4[1] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController____lazy_storage___collectionView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_dataSource] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_observables] = &_swiftEmptySetSingleton;
  v5 = &v1[OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_lastSeenSafeAreaLayoutFrame];
  *v5 = 0u;
  v5[1] = 0u;
  v6 = &v1[OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_lastPendingParticipantScrolledTo];
  v7 = type metadata accessor for SharePlayTogetherSession.Participant(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  *(_QWORD *)&v1[OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_contentSizeObserver] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_discoveryPreferenceObserver] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_sessionAssertion] = 0;
  v1[OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_viewDidAppearOnce] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_session] = a1;
  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for SharePlayTogetherSessionManagementViewController(0);
  return objc_msgSendSuper2(&v9, "initWithNibName:bundle:", 0, 0);
}

id sub_A17D10()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t ObjectType;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController____lazy_storage___collectionView;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController____lazy_storage___collectionView);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController____lazy_storage___collectionView);
  }
  else
  {
    ObjectType = swift_getObjectType();
    v5 = sub_A17D7C(v0, ObjectType);
    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

id sub_A17D7C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  id v9;
  _QWORD v11[5];
  uint64_t v12;

  v3 = swift_allocObject(&unk_1394480, 24, 7);
  swift_unknownObjectWeakInit(v3 + 16);
  v4 = swift_allocObject(&unk_1394598, 32, 7);
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = a2;
  v5 = objc_allocWithZone((Class)UICollectionViewCompositionalLayout);
  v11[4] = sub_A2A7D8;
  v12 = v4;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_AD5E70;
  v11[3] = &block_descriptor_85_4;
  v6 = _Block_copy(v11);
  v7 = objc_msgSend(v5, "initWithSectionProvider:", v6, swift_retain(v3).n128_f64[0]);
  _Block_release(v6);
  v8 = v12;
  swift_release(v3);
  swift_release(v8);
  v9 = objc_msgSend(objc_allocWithZone((Class)UICollectionView), "initWithFrame:collectionViewLayout:", v7, 0.0, 0.0, 0.0, 0.0);

  return v9;
}

uint64_t sub_A17EB4(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *Strong;
  void *v17;
  id v18;
  char *v19;
  unsigned int *v20;
  id v21;
  double v22;
  double v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  char *v30;
  double v31;
  double v32;
  double v33;
  uint64_t result;
  uint64_t v35;
  _BYTE v36[24];

  v35 = a3;
  v7 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance(0, a1);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = &v36[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = type metadata accessor for UICollectionLayoutListConfiguration(0, v9);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = &v36[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a4 += 16;
  swift_beginAccess(a4, v36, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a4);
  if (Strong)
  {
    v17 = Strong;
    v18 = objc_msgSend(Strong, "traitCollection");
    v19 = (char *)objc_msgSend(v18, "userInterfaceIdiom");

    v20 = (unsigned int *)&enum case for UICollectionLayoutListConfiguration.Appearance.insetGrouped(_:);
    if (v19 != (_BYTE *)&dword_0 + 3)
      v20 = (unsigned int *)&enum case for UICollectionLayoutListConfiguration.Appearance.plain(_:);
    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v11, *v20, v7);
    UICollectionLayoutListConfiguration.init(appearance:)(v11);
    v21 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
    UICollectionLayoutListConfiguration.backgroundColor.setter(v21);
    if (qword_14ABEF8 != -1)
      swift_once(&qword_14ABEF8, sub_A17884);
    v22 = *((double *)&xmmword_14F0F30 + 1);
    if (qword_14ABF00 != -1)
      swift_once(&qword_14ABF00, sub_A22FAC);
    v23 = v22 + *(double *)&qword_15817A8;
    if (qword_14ABF08 != -1)
      swift_once(&qword_14ABF08, sub_A22FCC);
    v24 = v23 + *(double *)&qword_15817B0;
    v25 = swift_allocObject(&unk_1394480, 24, 7);
    swift_unknownObjectWeakInit(v25 + 16);
    v26 = swift_allocObject(&unk_13945E8, 64, 7);
    *(_QWORD *)(v26 + 16) = v25;
    *(_QWORD *)(v26 + 24) = 0;
    *(double *)(v26 + 32) = v24;
    *(_QWORD *)(v26 + 40) = 0;
    *(_QWORD *)(v26 + 48) = 0;
    *(_QWORD *)(v26 + 56) = a5;
    UICollectionLayoutListConfiguration.itemSeparatorHandler.setter(sub_A2A804, v26);
    v27 = swift_allocObject(&unk_1394480, 24, 7);
    swift_unknownObjectWeakInit(v27 + 16);
    UICollectionLayoutListConfiguration.trailingSwipeActionsConfigurationProvider.setter(sub_A2A818, v27);
    sub_4E684(0, &qword_14C0350, NSCollectionLayoutSection_ptr);
    v28 = (void *)static NSCollectionLayoutSection.list(using:layoutEnvironment:)(v15, v35);
    v29 = objc_msgSend(v17, "traitCollection");
    v30 = (char *)objc_msgSend(v29, "userInterfaceIdiom");

    if (v30 == (_BYTE *)&dword_0 + 3)
    {
      objc_msgSend(v28, "contentInsets");
      sub_A1DED4();
      objc_msgSend(v28, "setContentInsets:", 0.0, v31, v32, v33, v35);
    }
    else
    {
      objc_msgSend(v28, "setContentInsets:", NSDirectionalEdgeInsetsZero.top, NSDirectionalEdgeInsetsZero.leading, NSDirectionalEdgeInsetsZero.bottom, NSDirectionalEdgeInsetsZero.trailing, v35);
    }

    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    return (uint64_t)v28;
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x20736920666C6573, 0xEB000000006C696ELL, "MusicApplication/SharePlayTogetherSessionManagementViewController.swift", 71, 2, 100, 0);
    __break(1u);
  }
  return result;
}

void sub_A18274(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t Strong;
  void (*v32)(char *, uint64_t, uint64_t);
  char *v33;
  void *v34;
  id v35;
  uint64_t v36;
  char *v37;
  _QWORD v38[3];
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char v50[32];

  v8 = type metadata accessor for UIListSeparatorConfiguration.Visibility(0);
  v41 = *(_QWORD *)(v8 - 8);
  v42 = v8;
  __chkstk_darwin(v8);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F1120);
  __chkstk_darwin(v39);
  v40 = (char *)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14F1128);
  __chkstk_darwin(v10);
  v38[2] = (char *)v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v43 = (char *)v38 - v13;
  __chkstk_darwin(v14);
  v47 = (char *)v38 - v15;
  v16 = type metadata accessor for SharePlayTogetherSession.Participant(0);
  v45 = *(_QWORD *)(v16 - 8);
  v46 = v16;
  __chkstk_darwin(v16);
  v38[1] = (char *)v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v44 = (char *)v38 - v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14F10F8);
  __chkstk_darwin(v20);
  v22 = (char *)v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v23);
  v26 = (_QWORD *)((char *)v38 - v25);
  v27 = type metadata accessor for UIListSeparatorConfiguration(0, v24);
  v28 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v30 = (char *)v38 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3 += 16;
  swift_beginAccess(a3, v50, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a3);
  v49 = v28;
  v32 = *(void (**)(char *, uint64_t, uint64_t))(v28 + 16);
  if (Strong)
  {
    v33 = (char *)Strong;
    v48 = v27;
    v32(v30, a2, v27);
    v34 = *(void **)&v33[OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_dataSource];
    if (!v34)
    {
      __break(1u);
      JUMPOUT(0xA18944);
    }
    v35 = v34;
    dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(v26, a1);

    v36 = type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier(0);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 48))(v26, 1, v36) != 1)
    {
      sub_5C238((uint64_t)v26, (uint64_t)v22, (uint64_t *)&unk_14F10F8);
      v37 = (char *)&loc_A18568 + dword_A18944[swift_getEnumCaseMultiPayload(v22, v36)];
      __asm { BR              X10 }
    }
    sub_56024((uint64_t)v26, (uint64_t *)&unk_14F10F8);
    (*(void (**)(char *, char *, uint64_t))(v49 + 32))(a4, v30, v48);

  }
  else
  {
    v32(a4, a2, v27);
  }
}

uint64_t sub_A18958(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t result;
  char *v21;
  void *v22;
  id v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t (*v26)(void);
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSString v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  Class isa;
  id v41;
  uint64_t (*v42)(uint64_t);
  uint64_t v43;
  Class v44;
  _QWORD aBlock[5];
  uint64_t v46;
  char v47[24];

  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14F10F8);
  __chkstk_darwin(v10);
  v12 = (_QWORD *)((char *)aBlock - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = type metadata accessor for SharePlayTogetherSession.Participant(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  __chkstk_darwin(v13);
  v16 = (char *)aBlock - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)aBlock - v18;
  a2 += 16;
  swift_beginAccess(a2, v47, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a2);
  if (!result)
    goto LABEL_13;
  v21 = (char *)result;
  v22 = *(void **)(result
                 + OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_dataSource);
  if (v22)
  {
    v23 = v22;
    dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(v12, a1);

    v24 = type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier(0);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v12, 1, v24) == 1)
    {

      sub_56024((uint64_t)v12, (uint64_t *)&unk_14F10F8);
    }
    else
    {
      if (swift_getEnumCaseMultiPayload(v12, v24) == 1)
      {
        sub_5C04C((uint64_t)v12, (uint64_t)v19, type metadata accessor for SharePlayTogetherSession.Participant);
        v25 = *(_QWORD **)&v21[OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_session];
        v26 = *(uint64_t (**)(void))&stru_108.segname[swift_isaMask & *v25];
        v27 = v25;
        LOBYTE(v26) = v26();

        if ((v26 & 1) != 0 && (v19[32] & 1) == 0 && v19[33] == 1)
        {
          v28 = String.LocalizationValue.init(stringLiteral:)(0x65766F6D6552, 0xE600000000000000);
          static Locale.current.getter(v28);
          String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, 0, v6, 0, 0, 256);
          v29 = swift_allocObject(&unk_1394480, 24, 7);
          swift_unknownObjectWeakInit(v29 + 16);
          sub_5BDB8((uint64_t)v19, (uint64_t)v16, type metadata accessor for SharePlayTogetherSession.Participant);
          v30 = *(unsigned __int8 *)(v14 + 80);
          v31 = (v30 + 24) & ~v30;
          v32 = swift_allocObject(&unk_1394610, v31 + v15, v30 | 7);
          *(_QWORD *)(v32 + 16) = v29;
          sub_5C04C((uint64_t)v16, v32 + v31, type metadata accessor for SharePlayTogetherSession.Participant);
          swift_retain(v29);
          v33 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          aBlock[4] = sub_A2A8D8;
          v46 = v32;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_B50890;
          aBlock[3] = &block_descriptor_97_0;
          v34 = _Block_copy(aBlock);
          v35 = objc_msgSend((id)objc_opt_self(UIContextualAction), "contextualActionWithStyle:title:handler:", 1, v33, v34);
          _Block_release(v34);
          v36 = v46;
          swift_release(v29);

          swift_release(v36);
          v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_14ADF50);
          v38 = swift_allocObject(v37, 40, 7);
          *(_OWORD *)(v38 + 16) = xmmword_1060220;
          *(_QWORD *)(v38 + 32) = v35;
          aBlock[0] = v38;
          specialized Array._endMutation()(v38);
          sub_4E684(0, (unint64_t *)&qword_14B51C0, UIContextualAction_ptr);
          v39 = v35;
          isa = Array._bridgeToObjectiveC()().super.isa;
          v41 = objc_msgSend((id)objc_opt_self(UISwipeActionsConfiguration), "configurationWithActions:", isa);

          swift_bridgeObjectRelease();
          sub_5C0DC((uint64_t)v19, type metadata accessor for SharePlayTogetherSession.Participant);
          return (uint64_t)v41;
        }

        v42 = type metadata accessor for SharePlayTogetherSession.Participant;
        v43 = (uint64_t)v19;
      }
      else
      {

        v42 = type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier;
        v43 = (uint64_t)v12;
      }
      sub_5C0DC(v43, v42);
    }
LABEL_13:
    sub_4E684(0, (unint64_t *)&qword_14B51C0, UIContextualAction_ptr);
    v44 = Array._bridgeToObjectiveC()().super.isa;
    v41 = objc_msgSend((id)objc_opt_self(UISwipeActionsConfiguration), "configurationWithActions:", v44);

    return (uint64_t)v41;
  }
  __break(1u);
  return result;
}

uint64_t sub_A18E54(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t Strong;
  void *v10;
  _QWORD *v11;
  _BYTE v13[24];

  v8 = a5 + 16;
  swift_beginAccess(a5 + 16, v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v8);
  if (Strong)
  {
    v10 = (void *)Strong;
    v11 = objc_retain(*(id *)(Strong
                            + OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_session));

    (*(void (**)(uint64_t))&stru_338.sectname[swift_isaMask & *v11])(a6);
  }
  return a3(1);
}

id sub_A18F04()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  objc_class *v25;
  _QWORD *v26;
  uint64_t (*v27)(void);
  _QWORD *v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  _QWORD *v42;
  void (*v43)(char *, char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t, char *, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  void *v68;
  id result;
  void *v70;
  id v71;
  id v72;
  uint64_t KeyPath;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  __n128 v82;
  void (*v83)(char *, uint64_t, __n128);
  uint64_t v84;
  char *v85;
  char *v86;
  char *v87;
  char *v88;
  uint64_t v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  char *v101;
  char *v102;
  char *v103;
  _QWORD *v104;
  uint64_t v105;
  _QWORD v106[5];
  objc_super v107;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F1158);
  v100 = *(_QWORD *)(v2 - 8);
  v3 = *(_QWORD *)(v100 + 64);
  v93 = v2;
  v94 = v3;
  __chkstk_darwin(v2);
  v103 = (char *)&v84 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v96 = (char *)&v84 - v6;
  v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F1160);
  v105 = *(_QWORD *)(v95 - 8);
  v92 = *(_QWORD *)(v105 + 64);
  __chkstk_darwin(v95);
  v99 = (char *)&v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v84 - v9;
  v97 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14F1168);
  v104 = *(_QWORD **)(v97 - 8);
  v91 = v104[8];
  __chkstk_darwin(v97);
  v102 = (char *)&v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v101 = (char *)&v84 - v13;
  __chkstk_darwin(v14);
  v98 = (char *)&v84 - v15;
  __chkstk_darwin(v16);
  v18 = (char *)&v84 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v84 - v20;
  __chkstk_darwin(v22);
  v24 = (char *)&v84 - v23;
  v25 = (objc_class *)type metadata accessor for SharePlayTogetherSessionManagementViewController(0);
  v107.receiver = v0;
  v107.super_class = v25;
  objc_msgSendSuper2(&v107, "viewDidLoad");
  sub_A1BAF0();
  v26 = *(_QWORD **)&v0[OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_session];
  v27 = *(uint64_t (**)(void))((char *)&stru_338.offset + (swift_isaMask & *v26));
  v28 = v26;
  v29 = v27();

  v30 = *(void **)&v1[OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_sessionAssertion];
  *(_QWORD *)&v1[OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_sessionAssertion] = v29;

  v31 = sub_A17D10();
  objc_msgSend(v31, "setDelegate:", v1);

  v32 = swift_allocObject(&unk_1394480, 24, 7);
  swift_unknownObjectWeakInit(v32 + 16);
  v33 = sub_4E684(0, (unint64_t *)&qword_14B5260, UICollectionViewCell_ptr);
  v34 = type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier(0);
  UICollectionView.CellRegistration.init(handler:)(sub_A2A940, v32, v33, v34);
  v35 = swift_allocObject(&unk_1394480, 24, 7);
  swift_unknownObjectWeakInit(v35 + 16);
  UICollectionView.CellRegistration.init(handler:)(sub_A2A948, v35, v33, &type metadata for Int);
  v36 = swift_allocObject(&unk_1394480, 24, 7);
  swift_unknownObjectWeakInit(v36 + 16);
  v37 = type metadata accessor for SharePlayTogetherSession.Participant(0);
  UICollectionView.CellRegistration.init(handler:)(sub_A2A950, v36, v33, v37);
  v38 = swift_allocObject(&unk_1394480, 24, 7);
  swift_unknownObjectWeakInit(v38 + 16);
  v39 = v21;
  UICollectionView.CellRegistration.init(handler:)(sub_A2A958, v38, v33, v34);
  v40 = swift_allocObject(&unk_1394480, 24, 7);
  swift_unknownObjectWeakInit(v40 + 16);
  v41 = v18;
  UICollectionView.CellRegistration.init(handler:)(sub_A2A960, v40, v33, v34);
  v90 = sub_A17D10();
  v89 = swift_allocObject(&unk_1394480, 24, 7);
  swift_unknownObjectWeakInit(v89 + 16);
  v42 = v104;
  v43 = (void (*)(char *, char *, uint64_t))v104[2];
  v87 = v24;
  v44 = v97;
  v43(v98, v24, v97);
  v45 = v105;
  v46 = *(void (**)(char *, char *, uint64_t))(v105 + 16);
  v88 = v10;
  v47 = v95;
  v46(v99, v10, v95);
  v48 = v100;
  v49 = v93;
  (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v103, v96, v93);
  v85 = v39;
  v43(v101, v39, v44);
  v86 = v41;
  v43(v102, v41, v44);
  v50 = *((unsigned __int8 *)v42 + 80);
  v51 = (v50 + 24) & ~v50;
  v52 = *(unsigned __int8 *)(v45 + 80);
  v53 = (v91 + v52 + v51) & ~v52;
  v54 = *(unsigned __int8 *)(v48 + 80);
  v55 = (v92 + v54 + v53) & ~v54;
  v56 = (v94 + v50 + v55) & ~v50;
  v57 = (v91 + v50 + v56) & ~v50;
  v58 = v47;
  v59 = swift_allocObject(&unk_1394660, v57 + v91, v50 | v52 | v54 | 7);
  *(_QWORD *)(v59 + 16) = v89;
  v60 = v59 + v51;
  v61 = v49;
  v62 = (void (*)(uint64_t, char *, uint64_t))v104[4];
  v63 = v97;
  v62(v60, v98, v97);
  v64 = v59 + v53;
  v65 = v100;
  (*(void (**)(uint64_t, char *, uint64_t))(v105 + 32))(v64, v99, v58);
  (*(void (**)(uint64_t, char *, uint64_t))(v65 + 32))(v59 + v55, v103, v61);
  v62(v59 + v56, v101, v63);
  v62(v59 + v57, v102, v63);
  v66 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_14F1178));
  v67 = UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)(v90, sub_A2AAAC, v59);
  v68 = *(void **)&v1[OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_dataSource];
  *(_QWORD *)&v1[OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_dataSource] = v67;

  result = objc_msgSend(v1, "view");
  if (result)
  {
    v70 = result;
    v71 = sub_A17D10();
    objc_msgSend(v70, "addSubview:", v71);

    type metadata accessor for Whitetail.Binding();
    v72 = sub_A17D10();
    KeyPath = swift_getKeyPath(&unk_1091418);
    v106[3] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14F1180);
    v106[4] = &protocol witness table for KeyValueObservationTrigger<A, B>;
    v106[0] = v72;
    v106[1] = KeyPath;
    v74 = swift_allocObject(&unk_1394480, 24, 7);
    swift_unknownObjectWeakInit(v74 + 16);
    v75 = Whitetail.Binding.__allocating_init(_:needsInitialConfiguration:configurationBlock:)(v106, 1, (uint64_t)sub_A2ABE8, v74);
    v76 = *(_QWORD *)&v1[OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_contentSizeObserver];
    *(_QWORD *)&v1[OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_contentSizeObserver] = v75;
    swift_release(v76);
    v77 = (void *)MRGroupSessionNearbyContactDiscoveryPreferenceDidChangeNotification;
    v78 = swift_allocObject(&unk_1394480, 24, 7);
    swift_unknownObjectWeakInit(v78 + 16);
    v79 = type metadata accessor for NotificationObserver();
    swift_allocObject(v79, 64, 7);
    v80 = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(v77, 0, 1, 1, (uint64_t)sub_A2A754, v78);
    v81 = *(_QWORD *)&v1[OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_discoveryPreferenceObserver];
    *(_QWORD *)&v1[OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_discoveryPreferenceObserver] = v80;
    v82 = swift_release(v81);
    v83 = (void (*)(char *, uint64_t, __n128))v104[1];
    v83(v86, v63, v82);
    ((void (*)(char *, uint64_t))v83)(v85, v63);
    (*(void (**)(char *, uint64_t))(v65 + 8))(v96, v61);
    (*(void (**)(char *, uint64_t))(v105 + 8))(v88, v95);
    return (id)((uint64_t (*)(char *, uint64_t))v83)(v87, v63);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_A196AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *Strong;
  void *v14;
  id v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[3];
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[24];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F1248);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F1250);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  a4 += 16;
  swift_beginAccess(a4, v29, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a4);
  if (Strong)
  {
    v14 = Strong;
    v15 = objc_msgSend(Strong, "traitCollection");
    v16 = (char *)objc_msgSend(v15, "userInterfaceIdiom");

    if (v16 == (_BYTE *)&dword_0 + 3)
    {
      v17 = swift_allocObject(&unk_1394480, 24, 7);
      v18 = swift_unknownObjectWeakInit(v17 + 16);
      __chkstk_darwin(v18);
      v26[-4] = v14;
      v26[-3] = sub_A2AF24;
      v26[-2] = v17;
      v19 = sub_A2AF58();
      swift_retain(v17);
      v20 = UIHostingConfiguration<>.init(content:)(sub_A2AF4C, &v26[-6], &type metadata for SharePlayTogetherSessionManagementViewController.CarPlayHeaderView, v19);
      v21 = static Edge.Set.horizontal.getter(v20);
      v27 = v9;
      v28 = sub_5C150(&qword_14F1278, &qword_14F1250, (uint64_t)&protocol conformance descriptor for UIHostingConfiguration<A, B>);
      __swift_allocate_boxed_opaque_existential_1Tm(v26);
      UIHostingConfiguration.margins(_:_:)(v21, v9, 0.0);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      swift_release_n(v17, 2);
    }
    else
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F1258);
      v23 = sub_5C150(&qword_14F1260, &qword_14F1258, (uint64_t)&protocol conformance descriptor for VStack<A>);
      v24 = UIHostingConfiguration<>.init(content:)(sub_A1F0B4, 0, v22, v23);
      v25 = static Edge.Set.all.getter(v24);
      v27 = v5;
      v28 = sub_5C150(&qword_14F1268, &qword_14F1248, (uint64_t)&protocol conformance descriptor for UIHostingConfiguration<A, B>);
      __swift_allocate_boxed_opaque_existential_1Tm(v26);
      UIHostingConfiguration.margins(_:_:)(v25, v5, 0.0);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    UICollectionViewCell.contentConfiguration.setter(v26);

  }
}

uint64_t sub_A1996C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;

  v4[17] = a4;
  v5 = type metadata accessor for Locale(0);
  v4[18] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for String.LocalizationValue(0);
  v4[19] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MainActor(0);
  v4[20] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  return swift_task_switch(sub_A19A18, v9, v10);
}

uint64_t sub_A19A18()
{
  uint64_t v0;
  _QWORD *v1;
  void (*v2)(void);
  _QWORD *v3;
  unint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  char *v15;
  id v16;
  uint64_t v17;
  id v19;
  uint64_t v20;

  v1 = *(_QWORD **)(*(_QWORD *)(v0 + 136)
                  + OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_session);
  v2 = *(void (**)(void))&stru_248.segname[swift_isaMask & *v1];
  v3 = v1;
  v2();
  v5 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 112);
  v6 = *(void **)(v0 + 120);
  sub_5C090(v0 + 96, v0 + 56, &qword_14F1210);
  v7 = *(_QWORD *)(v0 + 160);
  if (*(_QWORD *)(v0 + 80))
  {
    v20 = *(_QWORD *)(v0 + 160);
    v8 = *(_QWORD *)(v0 + 144);
    v9 = *(_QWORD *)(v0 + 152);
    v19 = *(id *)(v0 + 136);
    v10 = *(_OWORD *)(v0 + 72);
    *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 56);
    *(_OWORD *)(v0 + 32) = v10;
    *(_QWORD *)(v0 + 48) = *(_QWORD *)(v0 + 88);

    sub_50CB4(v5, v4);
    v11 = v6;
    v12 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000014, 0x80000000010FBCF0);
    static Locale.current.getter(v12);
    String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, 0, v8, 0, 0, 256);
    v13 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000047, 0x80000000010FBD10);
    static Locale.current.getter(v13);
    String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, 0, v8, 0, 0, 256);
    v14 = objc_allocWithZone((Class)type metadata accessor for QRCodeOverlayViewController());
    v15 = QRCodeOverlayViewController.init(qrCode:title:subtitle:)((_QWORD *)(v0 + 16));
    v16 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", v15);

    v7 = v20;
    objc_msgSend(v16, "setModalPresentationStyle:", 5);
    objc_msgSend(v19, "presentViewController:animated:completion:", v16, 0, 0);

    sub_A2ADF4(v0 + 96);
  }
  else
  {

  }
  swift_release(v7);
  v17 = *(_QWORD *)(v0 + 144);
  swift_task_dealloc(*(_QWORD *)(v0 + 152));
  swift_task_dealloc(v17);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_A19C64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *Strong;
  void *v10;
  id v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[5];
  _BYTE v20[24];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F1230);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  a4 += 16;
  swift_beginAccess(a4, v20, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a4);
  if (Strong)
  {
    v10 = Strong;
    v11 = objc_msgSend(Strong, "traitCollection");
    v12 = (char *)objc_msgSend(v11, "userInterfaceIdiom");

    v13 = swift_allocObject(&unk_1394480, 24, 7);
    v14 = swift_unknownObjectWeakInit(v13 + 16);
    __chkstk_darwin(v14);
    v19[-4] = v10;
    LOBYTE(v19[-3]) = v12 == (_BYTE *)&dword_0 + 3;
    v19[-2] = sub_A2AE78;
    v19[-1] = v13;
    v15 = type metadata accessor for SharePlayTogetherSessionManagementViewController.StatusHeaderView(0);
    v16 = sub_4DD24(&qword_14F1238, type metadata accessor for SharePlayTogetherSessionManagementViewController.StatusHeaderView, (uint64_t)&unk_10915BC);
    swift_retain(v13);
    v17 = UIHostingConfiguration<>.init(content:)(sub_A2AE80, &v19[-6], v15, v16);
    v18 = static Edge.Set.all.getter(v17);
    v19[3] = v5;
    v19[4] = sub_5C150(&qword_14F1240, &qword_14F1230, (uint64_t)&protocol conformance descriptor for UIHostingConfiguration<A, B>);
    __swift_allocate_boxed_opaque_existential_1Tm(v19);
    UIHostingConfiguration.margins(_:_:)(v18, v5, 0.0);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_release_n(v13, 2);
    UICollectionViewCell.contentConfiguration.setter(v19);

  }
}

void sub_A19E64(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t Strong;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  NSString v14;
  NSString v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  NSString v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v24;
  NSString v25;
  id v26;
  _BYTE v27[16];
  _QWORD aBlock[5];
  uint64_t v29;
  char v30[24];

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = &v27[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v5);
  v7 = &v27[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a1 += 16;
  swift_beginAccess(a1, v30, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v9 = (char *)Strong;
    v10 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000029, 0x80000000010FBD60);
    static Locale.current.getter(v10);
    String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, 0, 0, 256);
    if (*(_BYTE *)(*(_QWORD *)&v9[OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_session]
                  + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_isHost) == 1)
    {
      v11 = 0x80000000010FBDE0;
      v12 = 0xD00000000000001CLL;
    }
    else
    {
      v12 = 0xD000000000000043;
      v11 = 0x80000000010FBD90;
    }
    v13 = String.LocalizationValue.init(stringLiteral:)(v12, v11);
    static Locale.current.getter(v13);
    String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, 0, 0, 256);
    v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v16 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v14, v15, 1);

    v17 = String.LocalizationValue.init(stringLiteral:)(6581829, 0xE300000000000000);
    static Locale.current.getter(v17);
    String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, 0, 0, 256);
    v18 = swift_allocObject(&unk_1394728, 24, 7);
    *(_QWORD *)(v18 + 16) = v9;
    v19 = v9;
    v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    aBlock[4] = sub_A2AEC8;
    v29 = v18;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_5FEBC;
    aBlock[3] = &block_descriptor_148_2;
    v21 = _Block_copy(aBlock);
    swift_release(v29);
    v22 = (void *)objc_opt_self(UIAlertAction);
    v23 = objc_msgSend(v22, "actionWithTitle:style:handler:", v20, 0, v21);
    _Block_release(v21);

    objc_msgSend(v16, "addAction:", v23);
    v24 = String.LocalizationValue.init(stringLiteral:)(0x6C65636E6143, 0xE600000000000000);
    static Locale.current.getter(v24);
    String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, 0, 0, 256);
    v25 = String._bridgeToObjectiveC()();
    v26 = objc_msgSend(v22, "actionWithTitle:style:handler:", v25, 1, 0, swift_bridgeObjectRelease().n128_f64[0]);

    objc_msgSend(v16, "addAction:", v26);
    objc_msgSend(v19, "presentViewController:animated:completion:", v16, 1, 0);

  }
}

void sub_A1A270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *Strong;
  void *v11;
  id v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[5];
  _BYTE v20[24];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F1218);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a4 += 16;
  swift_beginAccess(a4, v20, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a4);
  if (Strong)
  {
    v11 = Strong;
    v12 = objc_msgSend(Strong, "traitCollection");
    objc_msgSend(v12, "userInterfaceIdiom");

    __chkstk_darwin(v13);
    v19[-4] = v11;
    v19[-3] = a3;
    LOBYTE(v19[-2]) = v14;
    v15 = type metadata accessor for SharePlayTogetherSessionManagementViewController.ParticipantView(0);
    v16 = sub_4DD24(&qword_14F1220, type metadata accessor for SharePlayTogetherSessionManagementViewController.ParticipantView, (uint64_t)&unk_109160C);
    v17 = UIHostingConfiguration<>.init(content:)(sub_A2AE58, &v19[-6], v15, v16);
    v18 = static Edge.Set.all.getter(v17);
    v19[3] = v6;
    v19[4] = sub_5C150(&qword_14F1228, &qword_14F1218, (uint64_t)&protocol conformance descriptor for UIHostingConfiguration<A, B>);
    __swift_allocate_boxed_opaque_existential_1Tm(v19);
    UIHostingConfiguration.margins(_:_:)(v18, v6, 0.0);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    UICollectionViewCell.contentConfiguration.setter(v19);

  }
}

void sub_A1A42C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[6];
  _QWORD v12[5];
  _BYTE v13[24];

  v4 = a4 + 16;
  swift_beginAccess(a4 + 16, v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = swift_allocObject(&unk_1394480, 24, 7);
    v8 = swift_unknownObjectWeakInit(v7 + 16);
    __chkstk_darwin(v8);
    v11[2] = v6;
    v11[3] = sub_A2AD34;
    v11[4] = v7;
    v12[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_14F11E0);
    v12[4] = sub_5C150(&qword_14F11E8, &qword_14F11E0, (uint64_t)&protocol conformance descriptor for UIHostingConfiguration<A, B>);
    __swift_allocate_boxed_opaque_existential_1Tm(v12);
    v9 = type metadata accessor for SharePlayTogetherSessionManagementViewController.QRCodeCell(0);
    v10 = sub_4DD24((unint64_t *)&unk_14F11F0, type metadata accessor for SharePlayTogetherSessionManagementViewController.QRCodeCell, (uint64_t)&unk_109165C);
    swift_retain(v7);
    UIHostingConfiguration<>.init(content:)(sub_A2AD5C, v11, v9, v10);
    swift_release_n(v7, 2);
    UICollectionViewCell.contentConfiguration.setter(v12);

  }
}

void sub_A1A58C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t Strong;
  void *v10;
  uint64_t v11;
  id v12;
  __n128 v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _BYTE v18[24];

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD5A0);
  __chkstk_darwin(v6);
  v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a1 += 16;
  swift_beginAccess(a1, v18, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v10 = (void *)Strong;
    v11 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v8, 1, 1, v11);
    type metadata accessor for MainActor(0);
    v12 = v10;
    v14 = static MainActor.shared.getter(v13);
    v15 = (_QWORD *)swift_allocObject(a2, 40, 7);
    v15[2] = v14;
    v15[3] = &protocol witness table for MainActor;
    v15[4] = v12;
    v16 = sub_2223C8((uint64_t)v8, a3, (uint64_t)v15);
    swift_release(v16);

  }
}

uint64_t sub_A1A6A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;

  v4[17] = a4;
  v5 = type metadata accessor for Locale(0);
  v4[18] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for String.LocalizationValue(0);
  v4[19] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MainActor(0);
  v4[20] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  return swift_task_switch(sub_A1A750, v9, v10);
}

uint64_t sub_A1A750()
{
  uint64_t v0;
  _QWORD *v1;
  void (*v2)(void);
  _QWORD *v3;
  unint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  char *v15;
  uint64_t v16;
  id v18;
  uint64_t v19;

  v1 = *(_QWORD **)(*(_QWORD *)(v0 + 136)
                  + OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_session);
  v2 = *(void (**)(void))&stru_248.segname[swift_isaMask & *v1];
  v3 = v1;
  v2();
  v5 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 112);
  v6 = *(void **)(v0 + 120);
  sub_5C090(v0 + 96, v0 + 56, &qword_14F1210);
  v7 = *(_QWORD *)(v0 + 160);
  if (*(_QWORD *)(v0 + 80))
  {
    v19 = *(_QWORD *)(v0 + 160);
    v8 = *(_QWORD *)(v0 + 144);
    v9 = *(_QWORD *)(v0 + 152);
    v18 = *(id *)(v0 + 136);
    v10 = *(_OWORD *)(v0 + 72);
    *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 56);
    *(_OWORD *)(v0 + 32) = v10;
    *(_QWORD *)(v0 + 48) = *(_QWORD *)(v0 + 88);

    sub_50CB4(v5, v4);
    v11 = v6;
    v12 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000014, 0x80000000010FBCF0);
    static Locale.current.getter(v12);
    String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, 0, v8, 0, 0, 256);
    v13 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000047, 0x80000000010FBD10);
    static Locale.current.getter(v13);
    String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, 0, v8, 0, 0, 256);
    v14 = objc_allocWithZone((Class)type metadata accessor for QRCodeOverlayViewController());
    v15 = QRCodeOverlayViewController.init(qrCode:title:subtitle:)((_QWORD *)(v0 + 16));
    objc_msgSend(v15, "setModalPresentationStyle:", 5);
    objc_msgSend(v18, "presentViewController:animated:completion:", v15, 0, 0);

    v7 = v19;
    sub_A2ADF4(v0 + 96);
  }
  else
  {

  }
  swift_release(v7);
  v16 = *(_QWORD *)(v0 + 144);
  swift_task_dealloc(*(_QWORD *)(v0 + 152));
  swift_task_dealloc(v16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_A1A974(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t Strong;
  void *v11;
  id v12;
  double v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[5];
  _BYTE v20[24];

  v6 = type metadata accessor for UICellConfigurationState(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a4 += 16;
  swift_beginAccess(a4, v20, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a4);
  if (Strong)
  {
    v11 = (void *)Strong;
    v12 = objc_msgSend(a1, "_bridgedConfigurationState");
    v14 = static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)(v12, v13);
    v15 = UICellConfigurationState.isFocused.getter(v14);
    v16 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    __chkstk_darwin(v16);
    LOBYTE(v19[-2]) = v15 & 1;
    v19[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_14F1190);
    v19[4] = sub_5C150(&qword_14F1198, &qword_14F1190, (uint64_t)&protocol conformance descriptor for UIHostingConfiguration<A, B>);
    __swift_allocate_boxed_opaque_existential_1Tm(v19);
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F11A0);
    v18 = sub_A2D35C(&qword_14F11A8, &qword_14F11A0, (void (*)(void))sub_A2AC38);
    UIHostingConfiguration<>.init(content:)(sub_A2E9E4, &v19[-4], v17, v18);

    UICollectionViewCell.contentConfiguration.setter(v19);
  }
}

id sub_A1AB14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t Strong;
  double v26;
  id v27;
  id v28;
  id v29;
  char *v30;
  _QWORD v32[2];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51[32];

  v37 = a8;
  v38 = a7;
  v34 = a6;
  v35 = a5;
  v50 = a3;
  v45 = a2;
  v46 = a1;
  v10 = type metadata accessor for UICellConfigurationState(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v43 = (char *)v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14F1128);
  __chkstk_darwin(v13);
  v33 = type metadata accessor for SharePlayTogetherSession.Participant(0);
  __chkstk_darwin(v33);
  v36 = (char *)v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8060);
  __chkstk_darwin(v15);
  v47 = (char *)v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14F10F8);
  __chkstk_darwin(v17);
  v18 = type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier(0);
  v19 = __chkstk_darwin(v18);
  v21 = (char *)v32 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for UIBackgroundConfiguration(0, v19);
  v48 = *(_QWORD *)(v22 - 8);
  v49 = v22;
  __chkstk_darwin(v22);
  v24 = (char *)v32 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  a4 += 16;
  swift_beginAccess(a4, v51, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a4);
  if (Strong)
  {
    v40 = Strong;
    v41 = v11;
    v42 = v10;
    v32[1] = a9;
    static UIBackgroundConfiguration.clear()(v26);
    v27 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
    v28 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
    v29 = objc_msgSend(v28, "colorWithAlphaComponent:", 0.1);

    objc_msgSend(v27, "setBackgroundColor:", v29);
    objc_msgSend(v27, "_setDrawsAsBackdropOverlayWithBlendMode:", 1);
    v39 = v27;
    v44 = v24;
    UIBackgroundConfiguration.customView.setter(v27);
    sub_5BDB8(v50, (uint64_t)v21, type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier);
    v30 = (char *)&loc_A1AE00 + dword_A1B294[swift_getEnumCaseMultiPayload(v21, v18)];
    __asm { BR              X10 }
  }
  return objc_msgSend(objc_allocWithZone((Class)UICollectionViewCell), "init");
}

void sub_A1B2A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t Strong;
  void *v22;
  char v23;
  char v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  uint64_t EnumCaseMultiPayload;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  char *v37;
  id v38;
  _QWORD v39[2];
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[5];
  char v43[24];

  v41 = a3;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8060);
  __chkstk_darwin(v6);
  v8 = (char *)v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)v39 - v10;
  __chkstk_darwin(v12);
  v14 = (char *)v39 - v13;
  v15 = type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier(0);
  __chkstk_darwin(v15);
  v17 = (char *)v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)v39 - v19;
  a4 += 16;
  swift_beginAccess(a4, v43, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a4);
  if (Strong)
  {
    v22 = (void *)Strong;
    swift_storeEnumTagMultiPayload(v20, v15, 3);
    sub_A293EC(a2, (uint64_t)v20);
    v24 = v23;
    v25 = sub_5C0DC((uint64_t)v20, type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier);
    if ((v24 & 1) != 0)
    {
LABEL_15:

      return;
    }
    v26 = static UIBackgroundConfiguration.listGroupedCell()(v25);
    v27 = type metadata accessor for UIBackgroundConfiguration(0, v26);
    v40 = *(_QWORD *)(v27 - 8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v14, 0, 1, v27);
    UICollectionViewCell.backgroundConfiguration.setter(v14);
    sub_5BDB8(a2, (uint64_t)v17, type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v17, v15);
    if ((_DWORD)EnumCaseMultiPayload == 2)
    {
      v29 = UICellConfigurationState.isFocused.getter(EnumCaseMultiPayload);
      v39[1] = v39;
      __chkstk_darwin(v29);
      LOBYTE(v39[-2]) = v30 & 1;
      v42[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_14F1190);
      v42[4] = sub_5C150(&qword_14F1198, &qword_14F1190, (uint64_t)&protocol conformance descriptor for UIHostingConfiguration<A, B>);
      __swift_allocate_boxed_opaque_existential_1Tm(v42);
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F11A0);
      v32 = sub_A2D35C(&qword_14F11A8, &qword_14F11A0, (void (*)(void))sub_A2AC38);
      UIHostingConfiguration<>.init(content:)(sub_A2AC30, &v39[-4], v31, v32);
      v33 = UICollectionViewCell.contentConfiguration.setter(v42);
    }
    else
    {
      v33 = sub_5C0DC((uint64_t)v17, type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier);
    }
    v34 = UICellConfigurationState.isFocused.getter(v33);
    if ((v34 & 1) != 0)
    {
      UICollectionViewCell.backgroundConfiguration.getter(v34);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v11, 1, v27))
      {
        sub_5C238((uint64_t)v11, (uint64_t)v14, (uint64_t *)&unk_14C8060);
        UICollectionViewCell.backgroundConfiguration.setter(v14);
        v35 = (uint64_t)v11;
LABEL_11:
        sub_56024(v35, (uint64_t *)&unk_14C8060);
        goto LABEL_15;
      }
      v36 = objc_msgSend((id)objc_opt_self(UIColor), "_carSystemFocusColor");
      UIBackgroundConfiguration.backgroundColor.setter(v36);
      v37 = v11;
    }
    else
    {
      UICollectionViewCell.backgroundConfiguration.getter(v34);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v8, 1, v27))
      {
        sub_5C238((uint64_t)v8, (uint64_t)v14, (uint64_t *)&unk_14C8060);
        UICollectionViewCell.backgroundConfiguration.setter(v14);
        v35 = (uint64_t)v8;
        goto LABEL_11;
      }
      v38 = objc_msgSend((id)objc_opt_self(UIColor), "tableCellPlainBackgroundColor");
      UIBackgroundConfiguration.backgroundColor.setter(v38);
      v37 = v8;
    }
    UICollectionViewCell.backgroundConfiguration.setter(v37);
    goto LABEL_15;
  }
}

void sub_A1B684(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t), uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t Strong;
  char *v24;
  id v25;
  id v26;
  void (*v27)(char *, char *, uint64_t);
  void *v28;
  id v29;
  int v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43[24];

  v39 = a2;
  v40 = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14F10F8);
  __chkstk_darwin(v8);
  v10 = (uint64_t *)((char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier(0);
  v41 = *(_QWORD *)(v11 - 8);
  v42 = v11;
  __chkstk_darwin(v11);
  v38 = (uint64_t)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD540);
  __chkstk_darwin(v13);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for IndexPath(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v36 - v21;
  a3 += 16;
  swift_beginAccess(a3, v43, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a3);
  if (Strong)
  {
    v24 = (char *)Strong;
    v37 = a4;
    v25 = sub_A17D10();
    v36 = a1;
    v26 = objc_msgSend(v25, "indexPathForCell:", a1);

    if (v26)
    {
      static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v26);

      v27 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
      v27(v15, v19, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v16);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) != 1)
      {
        v27(v22, v15, v16);
        v28 = *(void **)&v24[OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_dataSource];
        if (!v28)
        {
          __break(1u);
          return;
        }
        v29 = v28;
        dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(v10, v22);

        v30 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v41 + 48))(v10, 1, v42);
        v31 = v36;
        v32 = v37;
        if (v30 != 1)
        {
          v35 = v38;
          sub_5C04C((uint64_t)v10, v38, type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier);
          v32(v31, v35, v39);
          sub_5C0DC(v35, type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier);
          (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v16);
          goto LABEL_10;
        }
        (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v16);
        v33 = (uint64_t *)&unk_14F10F8;
        v34 = (uint64_t)v10;
LABEL_9:
        sub_56024(v34, v33);
LABEL_10:

        return;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, 1, 1, v16);
    }
    v33 = (uint64_t *)&unk_14AD540;
    v34 = (uint64_t)v15;
    goto LABEL_9;
  }
}

void sub_A1B980(uint64_t a1)
{
  uint64_t v1;
  char *Strong;
  void *v3;
  char *v4;
  id v5;
  double v6;
  char *v7;
  id v8;
  double v9;
  double v10;
  char v11[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v11, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    if ((Strong[OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_preferredWidth + 8] & 1) != 0)
    {
      v4 = Strong;
      v5 = sub_A17D10();
      objc_msgSend(v5, "contentSize");
      objc_msgSend(v4, "setPreferredContentSize:");

    }
    else
    {
      v6 = *(double *)&Strong[OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_preferredWidth];
      v7 = Strong;
      v8 = sub_A17D10();
      objc_msgSend(v8, "contentSize");
      v10 = v9;

      objc_msgSend(v7, "setPreferredContentSize:", v6, v10);
    }

  }
}

void sub_A1BA68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_A1D2B4(0);

  }
}

double sub_A1BAF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  void *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(void (*)(uint64_t), uint64_t, __n128);
  _QWORD *v45;
  __n128 v46;
  _QWORD *v47;
  uint64_t (*v48)(void);
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  __n128 v74;
  uint64_t v75;
  double result;
  void *v77;
  void (*v78)(char *, uint64_t, uint64_t);
  uint64_t v79;
  unint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  char *v91;
  id v92[3];
  id v93;
  char v94[32];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_14DB180);
  v82 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v81 = (char *)&v78 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14D5700);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v83 = (char *)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F1138);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v78 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14BAF30);
  __chkstk_darwin(v11);
  v91 = (char *)&v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14DB2B0);
  v14 = *(_QWORD **)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v78 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = v8;
  v89 = v7;
  v86 = v4;
  v87 = v10;
  v84 = v2;
  v85 = v5;
  v90 = v14;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
    && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    sub_4B168((uint64_t)_swiftEmptyArrayStorage);
    v17 = v77;
  }
  else
  {
    v17 = &_swiftEmptySetSingleton;
  }
  v18 = (_QWORD *)(v1 + OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_observables);
  swift_beginAccess(v1 + OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_observables, v94, 1, 0);
  *v18 = v17;
  swift_bridgeObjectRelease();
  v19 = swift_allocObject(&unk_13944A8, 17, 7);
  *(_BYTE *)(v19 + 16) = 0;
  v20 = OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_session;
  v21 = *(void **)(v1 + OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_session);
  v22 = type metadata accessor for SharePlayTogetherSession(0);
  sub_4DD24(&qword_14F1140, type metadata accessor for SharePlayTogetherSession, (uint64_t)&protocol conformance descriptor for SharePlayTogetherSession);
  v23 = v21;
  v24 = (void *)ObservableObject<>.objectWillChange.getter(v22);

  v92[0] = v24;
  v25 = sub_4E684(0, (unint64_t *)&qword_14AD360, OS_dispatch_queue_ptr);
  v93 = (id)static OS_dispatch_queue.main.getter(v25, v26, v27, v28, v29, v30, v31, v32);
  v33 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v34 = (uint64_t)v91;
  v78 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56);
  v79 = v33;
  v78(v91, 1, 1);
  v35 = type metadata accessor for ObservableObjectPublisher(0);
  v80 = sub_DB674();
  Publisher.receive<A>(on:options:)(&v93, v34, v35, v25, &protocol witness table for ObservableObjectPublisher, v80);
  sub_56024(v34, (uint64_t *)&unk_14BAF30);

  swift_release(v92[0]);
  v36 = v1;
  v37 = swift_allocObject(&unk_1394480, 24, 7);
  swift_unknownObjectWeakInit(v37 + 16);
  v38 = sub_5C150((unint64_t *)&qword_14DB2C0, (uint64_t *)&unk_14DB2B0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v39 = Publisher<>.sink(receiveValue:)(sub_A2A754, v37, v13, v38);
  ((void (*)(char *, uint64_t))v90[1])(v16, v13);
  swift_release(v37);
  v40 = swift_beginAccess(v18, v92, 33, 0);
  v90 = v18;
  AnyCancellable.store(in:)(v18, v40);
  swift_endAccess(v92);
  swift_release(v39);
  v41 = *(_QWORD **)(v36 + v20);
  v42 = swift_allocObject(&unk_1394480, 24, 7);
  swift_unknownObjectWeakInit(v42 + 16);
  v43 = swift_allocObject(&unk_13944D0, 32, 7);
  *(_QWORD *)(v43 + 16) = v19;
  *(_QWORD *)(v43 + 24) = v42;
  v44 = *(void (**)(void (*)(uint64_t), uint64_t, __n128))((char *)&stru_338.size
                                                                             + (swift_isaMask & *v41));
  v45 = v41;
  swift_retain(v19);
  v46 = swift_retain(v42);
  v44(sub_A2A760, v43, v46);

  swift_release(v42);
  swift_release(v43);
  v47 = *(_QWORD **)(v36 + v20);
  v48 = *(uint64_t (**)(void))&stru_108.segname[(swift_isaMask & *v47) - 8];
  v49 = v47;
  LOBYTE(v42) = v48();

  if ((v42 & 1) != 0)
  {
    if (qword_14AB560 != -1)
      swift_once(&qword_14AB560, sub_5BBE68);
    v50 = static UIApplication.player;
    v51 = (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)static UIApplication.player + 720))(0, 0);
    v52 = v81;
    v53 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v50 + 552))(v51);
    v92[0] = (id)static OS_dispatch_queue.main.getter(v53, v54, v55, v56, v57, v58, v59, v60);
    v61 = (uint64_t)v91;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v78)(v91, 1, 1, v79);
    v62 = sub_5C150((unint64_t *)&unk_14D5710, &qword_14DB180, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    v64 = v83;
    v63 = v84;
    Publisher.receive<A>(on:options:)(v92, v61, v84, v25, v62, v80);
    sub_56024(v61, (uint64_t *)&unk_14BAF30);

    (*(void (**)(char *, uint64_t))(v82 + 8))(v52, v63);
    v65 = sub_5C150(&qword_14D5720, (uint64_t *)&unk_14D5700, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    v66 = v86;
    v67 = v87;
    Publisher.dropFirst(_:)(1, v86, v65);
    (*(void (**)(char *, uint64_t))(v85 + 8))(v64, v66);
    v68 = swift_allocObject(&unk_1394480, 24, 7);
    swift_unknownObjectWeakInit(v68 + 16);
    v69 = swift_allocObject(&unk_13944F8, 32, 7);
    *(_QWORD *)(v69 + 16) = v68;
    *(_QWORD *)(v69 + 24) = v19;
    v70 = sub_5C150((unint64_t *)&unk_14F1148, &qword_14F1138, (uint64_t)&protocol conformance descriptor for Publishers.Drop<A>);
    swift_retain(v19);
    v71 = v89;
    v72 = Publisher<>.sink(receiveValue:)(sub_A2A76C, v69, v89, v70);
    (*(void (**)(char *, uint64_t))(v88 + 8))(v67, v71);
    swift_release(v69);
    v73 = v90;
    v74 = swift_beginAccess(v90, v92, 33, 0);
    AnyCancellable.store(in:)(v73, v74);
    swift_endAccess(v92);
    swift_release(v19);
    v75 = v72;
  }
  else
  {
    v75 = v19;
  }
  *(_QWORD *)&result = swift_release(v75).n128_u64[0];
  return result;
}

void sub_A1C1A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD aBlock[5];
  uint64_t v30;

  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v28 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_4E684(0, (unint64_t *)&qword_14AD360, OS_dispatch_queue_ptr);
  v19 = (void *)static OS_dispatch_queue.main.getter(v11, v12, v13, v14, v15, v16, v17, v18);
  v20 = swift_allocObject(&unk_1394548, 32, 7);
  *(_QWORD *)(v20 + 16) = a2;
  *(_QWORD *)(v20 + 24) = a3;
  aBlock[4] = sub_A2A7AC;
  v30 = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_42D124;
  aBlock[3] = &block_descriptor_78_1;
  v21 = _Block_copy(aBlock);
  v22 = v30;
  swift_retain(a2);
  swift_retain(a3);
  v23 = swift_release(v22);
  static DispatchQoS.unspecified.getter(v23);
  aBlock[0] = _swiftEmptyArrayStorage;
  v24 = sub_4DD24((unint64_t *)&qword_14B1FC0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD370);
  v26 = sub_5C150((unint64_t *)&qword_14B1FD0, (uint64_t *)&unk_14AD370, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v25, v26, v5, v24);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v7, v21);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v27);
  _Block_release(v21);

}

void sub_A1C3CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t (*v12)(_BYTE *, uint64_t, uint64_t);
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  NSObject *Strong;
  _BYTE v23[24];
  _BYTE v24[24];

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  v10 = &v23[-v9];
  swift_beginAccess(a1 + 16, v24, 0, 0);
  LOBYTE(a1) = *(_BYTE *)(a1 + 16);
  v11 = Logger.sharePlayTogether.unsafeMutableAddressor();
  v12 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16);
  if ((a1 & 1) != 0)
  {
    v13 = v12(v7, v11, v4);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_0, v14, v15, "[SharePlayTogetherSessionManagementViewcontroller] Session ended observer called, but we have a pending session. Not dismissing.", v16, 2u);
      swift_slowDealloc(v16, -1, -1);
    }
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
    goto LABEL_9;
  }
  v17 = a2 + 16;
  v18 = v12(v10, v11, v4);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v21 = 0;
    _os_log_impl(&dword_0, v19, v20, "[SharePlayTogetherSessionManagementViewcontroller] Session ended observer called, dismissing.", v21, 2u);
    swift_slowDealloc(v21, -1, -1);
  }
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v10, v4);

  swift_beginAccess(v17, v23, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v17);
  if (Strong)
  {
    v14 = Strong;
    -[NSObject dismissViewControllerAnimated:completion:](Strong, "dismissViewControllerAnimated:completion:", 1, 0);
LABEL_9:

  }
}

void sub_A1C5DC(_QWORD **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _QWORD *v10;
  char *Strong;
  void *v12;
  void *v13;
  uint64_t (*v14)(void);
  _QWORD *v15;
  id v16;
  char v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(void (*)(), uint64_t, __n128);
  _QWORD *v27;
  __n128 v28;
  _BYTE v29[24];
  _BYTE v30[24];

  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v29[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = *a1;
  a2 += 16;
  swift_beginAccess(a2, v30, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v12 = Strong;
    if (v10)
    {
      v13 = *(void **)&Strong[OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_session];
      v14 = *(uint64_t (**)(void))((char *)&stru_338.flags + (swift_isaMask & *v10));
      v15 = v10;
      v16 = v13;
      v17 = v14();

      if ((v17 & 1) != 0)
      {
        v18 = (_BYTE *)(a3 + 16);
        v19 = Logger.sharePlayTogether.unsafeMutableAddressor();
        v20 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v9, v19, v6);
        v21 = Logger.logObject.getter(v20);
        v22 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v21, v22))
        {
          v23 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v23 = 0;
          _os_log_impl(&dword_0, v21, v22, "[SharePlayTogetherSessionManagementViewcontroller] Got new equivalent session, waiting for connection.", v23, 2u);
          swift_slowDealloc(v23, -1, -1);
        }
        (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);

        swift_beginAccess(v18, v29, 1, 0);
        *v18 = 1;
        v24 = swift_allocObject(&unk_1394480, 24, 7);
        swift_unknownObjectWeakInit(v24 + 16);
        v25 = swift_allocObject(&unk_1394520, 32, 7);
        *(_QWORD *)(v25 + 16) = v24;
        *(_QWORD *)(v25 + 24) = v15;
        v26 = *(void (**)(void (*)(), uint64_t, __n128))&stru_338.segname[(swift_isaMask & *v15) + 16];
        v27 = v15;
        v28 = swift_retain(v24);
        v26(sub_A2A7A0, v25, v28);

        swift_release(v24);
        swift_release(v25);
      }
      else
      {

      }
    }
    else
    {

    }
  }
}

void sub_A1C82C(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t Strong;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  void *v19;
  _BYTE v20[24];
  _BYTE v21[24];

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = a1 + 16;
  v9 = Logger.sharePlayTogether.unsafeMutableAddressor();
  v10 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v7, v9, v4);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v13 = 0;
    _os_log_impl(&dword_0, v11, v12, "[SharePlayTogetherSessionManagementViewcontroller] New session connected, updating.", v13, 2u);
    swift_slowDealloc(v13, -1, -1);
  }
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);

  swift_beginAccess(v8, v21, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v8);
  if (Strong)
  {
    v15 = (void *)Strong;
    v16 = *(void **)(Strong
                   + OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_session);
    *(_QWORD *)(Strong + OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_session) = a2;
    v17 = a2;

    sub_A1D2B4(1);
  }
  swift_beginAccess(v8, v20, 0, 0);
  v18 = swift_unknownObjectWeakLoadStrong(v8);
  if (v18)
  {
    v19 = (void *)v18;
    sub_A1BAF0();

  }
}

void sub_A1C9BC(char a1)
{
  void *v1;
  id v3;
  char *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  objc_super v13;

  v13.receiver = v1;
  v13.super_class = (Class)type metadata accessor for SharePlayTogetherSessionManagementViewController(0);
  objc_msgSendSuper2(&v13, "viewIsAppearing:", a1 & 1);
  v3 = objc_msgSend(v1, "traitCollection");
  v4 = (char *)objc_msgSend(v3, "userInterfaceIdiom");

  v5 = sub_A17D10();
  v6 = (void *)objc_opt_self(UIColor);
  v7 = v6;
  if (v4 == (_BYTE *)&dword_0 + 3)
  {
    v8 = objc_msgSend(v6, "tableBackgroundColor");
    objc_msgSend(v5, "setBackgroundColor:", v8);

LABEL_5:
    sub_A1D2B4(0);
    return;
  }
  v9 = objc_msgSend(v6, "clearColor");
  objc_msgSend(v5, "setBackgroundColor:", v9);

  v10 = objc_msgSend(v1, "view");
  if (v10)
  {
    v11 = v10;
    v12 = objc_msgSend(v7, "clearColor");
    objc_msgSend(v11, "setBackgroundColor:", v12);

    objc_msgSend(v1, "setOverrideUserInterfaceStyle:", 2);
    goto LABEL_5;
  }
  __break(1u);
}

void sub_A1CBF8()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double *v12;
  id v13;
  id v14;
  char *v15;
  id v16;
  id v17;
  objc_super v18;
  CGRect v19;

  v18.receiver = v0;
  v18.super_class = (Class)type metadata accessor for SharePlayTogetherSessionManagementViewController(0);
  objc_msgSendSuper2(&v18, "viewDidLayoutSubviews");
  v1 = objc_msgSend(v0, "view");
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, "safeAreaLayoutGuide");

    objc_msgSend(v3, "layoutFrame");
    v5 = v4;
    v7 = v6;
    v9 = v8;
    v11 = v10;

    v12 = (double *)&v0[OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_lastSeenSafeAreaLayoutFrame];
    v19.origin.x = v5;
    v19.origin.y = v7;
    v19.size.width = v9;
    v19.size.height = v11;
    if (!CGRectEqualToRect(v19, *(CGRect *)&v0[OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_lastSeenSafeAreaLayoutFrame]))
    {
      *v12 = v5;
      v12[1] = v7;
      v12[2] = v9;
      v12[3] = v11;
      v13 = sub_A17D10();
      objc_msgSend(v13, "setFrame:", v5, v7, v9, v11);

      v14 = objc_msgSend(v0, "traitCollection");
      v15 = (char *)objc_msgSend(v14, "userInterfaceIdiom");

      if (v15 == (_BYTE *)&dword_0 + 3)
      {
        v16 = sub_A17D10();
        v17 = objc_msgSend(v16, "collectionViewLayout");

        objc_msgSend(v17, "invalidateLayout");
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_A1CE40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t (*v20)(void);
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  __n128 v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  Class isa;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE v47[24];

  v1 = v0;
  v43 = type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier(0);
  __chkstk_darwin(v43);
  v3 = (char *)&v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD540);
  __chkstk_darwin(v4);
  v44 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for IndexPath(0);
  v45 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v40 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14F1128);
  __chkstk_darwin(v8);
  v39 = (uint64_t)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v38 - v11;
  v13 = type metadata accessor for SharePlayTogetherSession.Participant(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v46 = (uint64_t)&v38 - v18;
  v19 = *(_QWORD **)(v0 + OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_session);
  v20 = *(uint64_t (**)(void))((char *)&stru_158.size + (swift_isaMask & *v19));
  v21 = v19;
  v22 = v20();

  v23 = *(_QWORD *)(v22 + 16);
  if (v23)
  {
    v41 = v6;
    v42 = v1;
    v24 = v22 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    v25 = *(_QWORD *)(v14 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_5BDB8(v24, (uint64_t)v16, type metadata accessor for SharePlayTogetherSession.Participant);
      if (v16[32] == 1)
        break;
      sub_5C0DC((uint64_t)v16, type metadata accessor for SharePlayTogetherSession.Participant);
      v24 += v25;
      if (!--v23)
      {
        swift_bridgeObjectRelease();
        v6 = v41;
        v1 = v42;
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    sub_5C04C((uint64_t)v16, (uint64_t)v12, type metadata accessor for SharePlayTogetherSession.Participant);
    v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
    v26(v12, 0, 1, v13);
    v6 = v41;
    v1 = v42;
  }
  else
  {
LABEL_6:
    v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
    v26(v12, 1, 1, v13);
  }
  v27 = swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v14 + 48))(v12, 1, v13, v27) == 1)
  {
    sub_56024((uint64_t)v12, (uint64_t *)&unk_14F1128);
  }
  else
  {
    v28 = v46;
    sub_5C04C((uint64_t)v12, v46, type metadata accessor for SharePlayTogetherSession.Participant);
    v29 = *(void **)(v1 + OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_dataSource);
    if (v29)
    {
      sub_5BDB8(v28, (uint64_t)v3, type metadata accessor for SharePlayTogetherSession.Participant);
      swift_storeEnumTagMultiPayload(v3, v43, 1);
      v30 = v29;
      v31 = (uint64_t)v44;
      dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)(v3);
      sub_5C0DC((uint64_t)v3, type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier);

      v32 = v45;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v31, 1, v6) == 1)
      {
        sub_5C0DC(v28, type metadata accessor for SharePlayTogetherSession.Participant);
        sub_56024(v31, (uint64_t *)&unk_14AD540);
      }
      else
      {
        v33 = v40;
        (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))(v40, v31, v6);
        v34 = v39;
        sub_5BDB8(v28, v39, type metadata accessor for SharePlayTogetherSession.Participant);
        v26((char *)v34, 0, 1, v13);
        v35 = v1
            + OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_lastPendingParticipantScrolledTo;
        swift_beginAccess(v1+ OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_lastPendingParticipantScrolledTo, v47, 33, 0);
        sub_A2A6FC(v34, v35);
        swift_endAccess(v47);
        v36 = sub_A17D10();
        isa = IndexPath._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v36, "scrollToItemAtIndexPath:atScrollPosition:animated:", isa, 1, 1);
        (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v6);
        sub_5C0DC(v28, type metadata accessor for SharePlayTogetherSession.Participant);

      }
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_A1D2B4(int a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t (*v26)(void);
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t (*v30)(void);
  _QWORD *v31;
  uint64_t v32;
  char *v33;
  int64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  id v43;
  char *v44;
  __n128 v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t (*v48)(void);
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  void *v53;
  id v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  id v58;
  void (*v59)(char *, uint64_t);
  _QWORD v60[2];
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  char *v71;
  char *v72;
  __int128 v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;

  v70 = a1;
  v1 = type metadata accessor for SharePlayTogetherSession.Participant(0);
  v63 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v3 = (char *)v60 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v74 = (char *)v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F1108);
  v68 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v62 = (char *)v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)v60 - v10;
  v12 = sub_4DD24((unint64_t *)&unk_14F1110, type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier, (uint64_t)&unk_109137C);
  NSDiffableDataSourceSnapshot.init()(&type metadata for String, v4, &protocol witness table for String, v12);
  NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_133F6E0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_14B3138);
  v14 = *(_QWORD *)(v5 + 72);
  v15 = *(unsigned __int8 *)(v5 + 80);
  v16 = (v15 + 32) & ~v15;
  v75 = v14;
  v17 = v16 + v14;
  v18 = v15 | 7;
  v19 = swift_allocObject(v13, v16 + v14, v15 | 7);
  v73 = xmmword_105B360;
  *(_OWORD *)(v19 + 16) = xmmword_105B360;
  swift_storeEnumTagMultiPayload(v19 + v16, v4, 3);
  v78 = 0;
  v79 = 0;
  NSDiffableDataSourceSnapshot.appendItems(_:toSection:)(v19, &v78, v7);
  swift_bridgeObjectRelease();
  v65 = v17;
  v66 = v13;
  v64 = v18;
  v20 = v18;
  v21 = v72;
  v22 = swift_allocObject(v13, v17, v20);
  *(_OWORD *)(v22 + 16) = v73;
  v76 = v16;
  v23 = (uint64_t *)(v22 + v16);
  v24 = OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_session;
  v25 = *(_QWORD **)&v21[OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_session];
  v26 = *(uint64_t (**)(void))&stru_1A8.segname[(swift_isaMask & *v25) - 8];
  v27 = v25;
  v28 = v26();

  *v23 = v28;
  v67 = v4;
  swift_storeEnumTagMultiPayload(v23, v4, 0);
  v78 = 0;
  v79 = 0;
  v71 = v11;
  NSDiffableDataSourceSnapshot.appendItems(_:toSection:)(v22, &v78, v7);
  swift_bridgeObjectRelease();
  v69 = v24;
  v29 = *(_QWORD **)&v21[v24];
  v30 = *(uint64_t (**)(void))((char *)&stru_158.size + (swift_isaMask & *v29));
  v31 = v29;
  v32 = v30();

  v33 = v21;
  swift_unknownObjectWeakInit(&v78);
  v34 = *(_QWORD *)(v32 + 16);
  if (v34)
  {
    v61 = v7;
    v77 = _swiftEmptyArrayStorage;
    sub_124340(0, v34, 0);
    v35 = (*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
    v60[1] = v32;
    v36 = v32 + v35;
    v37 = *(_QWORD *)(v63 + 72);
    v38 = (uint64_t)v74;
    do
    {
      sub_5BDB8(v36, (uint64_t)v3, type metadata accessor for SharePlayTogetherSession.Participant);
      sub_A1D930((uint64_t)v3, (uint64_t)&v78, v38);
      sub_5C0DC((uint64_t)v3, type metadata accessor for SharePlayTogetherSession.Participant);
      v39 = v77;
      if ((swift_isUniquelyReferenced_nonNull_native(v77) & 1) == 0)
      {
        sub_124340(0, v39[2] + 1, 1);
        v38 = (uint64_t)v74;
        v39 = v77;
      }
      v41 = v39[2];
      v40 = v39[3];
      if (v41 >= v40 >> 1)
      {
        sub_124340(v40 > 1, v41 + 1, 1);
        v38 = (uint64_t)v74;
        v39 = v77;
      }
      v39[2] = v41 + 1;
      sub_5C04C(v38, (uint64_t)v39 + v76 + v41 * v75, type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier);
      v36 += v37;
      --v34;
    }
    while (v34);
    swift_bridgeObjectRelease();
    v7 = v61;
    v33 = v72;
  }
  else
  {
    swift_bridgeObjectRelease();
    v39 = _swiftEmptyArrayStorage;
  }
  swift_unknownObjectWeakDestroy(&v78);
  v78 = 0;
  v79 = 0;
  v42 = v71;
  NSDiffableDataSourceSnapshot.appendItems(_:toSection:)(v39, &v78, v7);
  swift_bridgeObjectRelease();
  NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_133F710);
  v43 = objc_msgSend(v33, "traitCollection");
  v44 = (char *)objc_msgSend(v43, "userInterfaceIdiom");

  v46 = v69;
  if (v44 != (_BYTE *)&dword_0 + 3)
  {
    v47 = *(_QWORD **)&v33[v69];
    v48 = *(uint64_t (**)(void))&stru_108.segname[(swift_isaMask & *v47) - 8];
    v49 = v47;
    LOBYTE(v48) = v48();

    if ((v48 & 1) == 0)
    {
      v50 = swift_allocObject(v66, v65, v64);
      *(_OWORD *)(v50 + 16) = v73;
      swift_storeEnumTagMultiPayload(v50 + v76, v67, 4);
      v78 = 0;
      v79 = 0;
      NSDiffableDataSourceSnapshot.appendItems(_:toSection:)(v50, &v78, v7);
      v45 = swift_bridgeObjectRelease();
    }
  }
  if (*(_BYTE *)(*(_QWORD *)&v33[v46] + OBJC_IVAR____TtC9MusicCore24SharePlayTogetherSession_isHost) == 1)
  {
    v51 = swift_allocObject(v66, v65, v64);
    *(_OWORD *)(v51 + 16) = v73;
    v52 = (_BYTE *)(v51 + v76);
    *v52 = MRGroupSessionNearbyContactDiscoveryEnabled();
    swift_storeEnumTagMultiPayload(v52, v67, 2);
    v78 = 0;
    v79 = 0;
    NSDiffableDataSourceSnapshot.appendItems(_:toSection:)(v51, &v78, v7);
    v45 = swift_bridgeObjectRelease();
  }
  v53 = *(void **)&v33[OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_dataSource];
  if ((v70 & 1) != 0)
  {
    if (v53)
    {
      v54 = v53;
      dispatch thunk of UICollectionViewDiffableDataSource.applySnapshotUsingReloadData(_:completion:)(v42, 0, 0);
      (*(void (**)(char *, uint64_t))(v68 + 8))(v42, v7);

      return;
    }
    __break(1u);
  }
  else if (v53)
  {
    v55 = v68;
    v56 = v62;
    (*(void (**)(char *, char *, uint64_t, __n128))(v68 + 16))(v62, v42, v7, v45);
    v57 = swift_allocObject(&unk_1394480, 24, 7);
    swift_unknownObjectWeakInit(v57 + 16);
    v58 = v53;
    swift_retain(v57);
    dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)(v56, 1, sub_A2A6F4, v57);
    v59 = *(void (**)(char *, uint64_t))(v55 + 8);
    v59(v56, v7);
    v59(v42, v7);

    swift_release_n(v57, 2);
    return;
  }
  __break(1u);
  swift_release(v39);
  __break(1u);
}

uint64_t sub_A1D930@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void (*v23)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t Strong;
  void *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _BYTE v60[24];
  _BYTE v61[24];
  _BYTE v62[24];
  _BYTE v63[24];
  _BYTE v64[32];

  v59 = a3;
  v5 = type metadata accessor for SharePlayTogetherSession.Participant(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v53 = (uint64_t)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F1120);
  __chkstk_darwin(v8);
  v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14F1128);
  __chkstk_darwin(v11);
  v56 = (uint64_t)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v55 = (char *)&v52 - v14;
  __chkstk_darwin(v15);
  v54 = (uint64_t)&v52 - v16;
  __chkstk_darwin(v17);
  v19 = (char *)&v52 - v18;
  __chkstk_darwin(v20);
  v22 = (char *)&v52 - v21;
  v58 = a1;
  sub_5BDB8(a1, (uint64_t)&v52 - v21, type metadata accessor for SharePlayTogetherSession.Participant);
  v23 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56);
  v23(v22, 0, 1, v5);
  swift_beginAccess(a2, v64, 0, 0);
  v57 = a2;
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v25 = (void *)Strong;
    v26 = Strong
        + OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_lastPendingParticipantScrolledTo;
    swift_beginAccess(Strong+ OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_lastPendingParticipantScrolledTo, v63, 0, 0);
    sub_5C238(v26, (uint64_t)v19, (uint64_t *)&unk_14F1128);

  }
  else
  {
    ((void (*)(_UNKNOWN **__return_ptr, char *, uint64_t, uint64_t, uint64_t))v23)(&off_14F0000, v19, 1, 1, v5);
  }
  v27 = v23;
  v28 = v5;
  v29 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_5C238((uint64_t)v22, (uint64_t)v10, (uint64_t *)&unk_14F1128);
  sub_5C238((uint64_t)v19, v29, (uint64_t *)&unk_14F1128);
  v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v30((uint64_t)v10, 1, v5) != 1)
  {
    v33 = v54;
    sub_5C238((uint64_t)v10, v54, (uint64_t *)&unk_14F1128);
    if (v30(v29, 1, v28) != 1)
    {
      v34 = v33;
      v35 = v53;
      sub_5C04C(v29, v53, type metadata accessor for SharePlayTogetherSession.Participant);
      v36 = static SharePlayTogetherSession.Participant.__derived_struct_equals(_:_:)(v34, v35);
      sub_5C0DC(v35, type metadata accessor for SharePlayTogetherSession.Participant);
      sub_56024((uint64_t)v19, (uint64_t *)&unk_14F1128);
      sub_56024((uint64_t)v22, (uint64_t *)&unk_14F1128);
      sub_5C0DC(v34, type metadata accessor for SharePlayTogetherSession.Participant);
      sub_56024((uint64_t)v10, (uint64_t *)&unk_14F1128);
      v32 = v58;
      if ((v36 & 1) == 0)
        goto LABEL_14;
      goto LABEL_11;
    }
    sub_56024((uint64_t)v19, (uint64_t *)&unk_14F1128);
    sub_56024((uint64_t)v22, (uint64_t *)&unk_14F1128);
    sub_5C0DC(v33, type metadata accessor for SharePlayTogetherSession.Participant);
    v32 = v58;
LABEL_9:
    sub_56024((uint64_t)v10, &qword_14F1120);
    goto LABEL_14;
  }
  sub_56024((uint64_t)v19, (uint64_t *)&unk_14F1128);
  sub_56024((uint64_t)v22, (uint64_t *)&unk_14F1128);
  v31 = v30(v29, 1, v5);
  v32 = v58;
  if (v31 != 1)
    goto LABEL_9;
  sub_56024((uint64_t)v10, (uint64_t *)&unk_14F1128);
LABEL_11:
  if ((*(_BYTE *)(v32 + 32) & 1) != 0)
    goto LABEL_16;
  v37 = v57;
  swift_beginAccess(v57, v60, 0, 0);
  v38 = swift_unknownObjectWeakLoadStrong(v37);
  if (v38)
  {
    v39 = (char *)v38;
    v40 = (uint64_t)v55;
    v27(v55, 1, 1, v28);
    v41 = v56;
    sub_5C090(v40, v56, (uint64_t *)&unk_14F1128);
    v42 = (uint64_t)&v39[OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_lastPendingParticipantScrolledTo];
    swift_beginAccess(&v39[OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_lastPendingParticipantScrolledTo], v62, 33, 0);
    sub_A2A6FC(v41, v42);
    swift_endAccess(v62);

  }
LABEL_14:
  v43 = v57;
  swift_beginAccess(v57, v62, 0, 0);
  v44 = swift_unknownObjectWeakLoadStrong(v43);
  if (v44)
  {
    v45 = (char *)v44;
    v46 = (uint64_t)v55;
    v27(v55, 1, 1, v28);
    v47 = v56;
    sub_5C090(v46, v56, (uint64_t *)&unk_14F1128);
    v48 = (uint64_t)&v45[OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_lastPendingParticipantScrolledTo];
    swift_beginAccess(&v45[OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_lastPendingParticipantScrolledTo], v61, 33, 0);
    sub_A2A6FC(v47, v48);
    swift_endAccess(v61);

  }
LABEL_16:
  v49 = v59;
  sub_5BDB8(v32, v59, type metadata accessor for SharePlayTogetherSession.Participant);
  v50 = type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier(0);
  return swift_storeEnumTagMultiPayload(v49, v50, 1);
}

void sub_A1DE70(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    if (*(_BYTE *)(Strong
                  + OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_viewDidAppearOnce) == 1)
      sub_A1CE40();

  }
}

void sub_A1DED4()
{
  void *v0;
  id v1;
  char *v2;
  id v3;
  void *v4;
  unsigned int v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  CGRect v21;

  v1 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v2 = (char *)objc_msgSend(v1, "userInterfaceLayoutDirection");

  v3 = objc_msgSend((id)objc_opt_self(AVExternalDevice), "currentCarPlayExternalDevice");
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, "rightHandDrive");

    Int.seconds.getter(44);
    if (v5)
      goto LABEL_11;
  }
  else
  {
    Int.seconds.getter(44);
  }
  if (v2 == (_BYTE *)&dword_0 + 1)
  {
    v6 = (void *)sub_A17D10();
    v7 = objc_msgSend(v6, "accessoryViewAtEdge:", 1);

    if (v7)
    {
      objc_opt_self(_UIStaticScrollBar);
      v8 = (void *)swift_dynamicCastObjCClass(v7);
      if (v8)
      {
        objc_msgSend(v8, "desiredAccessoryEdge");

      }
      else
      {

      }
    }
  }
LABEL_11:
  v9 = objc_msgSend(v0, "view");
  if (v9)
  {
    v10 = v9;
    objc_msgSend(v9, "safeAreaInsets");

    v11 = objc_msgSend(v0, "view");
    if (v11)
    {
      v12 = v11;
      objc_msgSend(v11, "bounds");
      v14 = v13;
      v16 = v15;
      v18 = v17;
      v20 = v19;

      v21.origin.x = v14;
      v21.origin.y = v16;
      v21.size.width = v18;
      v21.size.height = v20;
      CGRectGetWidth(v21);
      Int.seconds.getter(480);
      Int.seconds.getter(12);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_A1E134()
{
  void *v0;
  id v1;
  double v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;

  v1 = objc_msgSend(v0, "presentedViewController");
  if (!v1)
    goto LABEL_16;
  v3 = v1;
  objc_opt_self(UINavigationController);
  v4 = (void *)swift_dynamicCastObjCClass(v3);
  if (!v4)
  {

    goto LABEL_16;
  }
  v5 = objc_msgSend(v4, "viewControllers");
  v6 = sub_4E684(0, (unint64_t *)&qword_14C9D90, UIViewController_ptr);
  v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);
  v8 = v7;
  if ((unint64_t)v7 >> 62)
  {
    if (v7 >= 0)
      v7 &= 0xFFFFFFFFFFFFFF8uLL;
    if (_CocoaArrayWrapper.endIndex.getter(v7))
      goto LABEL_5;
LABEL_15:

    *(_QWORD *)&v2 = swift_bridgeObjectRelease(v8).n128_u64[0];
    goto LABEL_16;
  }
  if (!*(_QWORD *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFF8)))
    goto LABEL_15;
LABEL_5:
  if ((v8 & 0xC000000000000001) != 0)
  {
    v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v8);
  }
  else
  {
    if (!*(_QWORD *)((char *)&dword_10 + (v8 & 0xFFFFFFFFFFFFF8)))
    {
      __break(1u);
      return;
    }
    v9 = *(id *)(v8 + 32);
  }
  v16 = v9;
  swift_bridgeObjectRelease(v8);
  v10 = type metadata accessor for QRCodeOverlayViewController();
  v11 = swift_dynamicCastClass(v16, v10);
  if (v11)
  {
    v12 = (_QWORD *)v11;

    (*(void (**)(void))((char *)&stru_1A8.offset + (swift_isaMask & *v12)))();
LABEL_19:

    return;
  }

LABEL_16:
  v13 = objc_msgSend(v0, "presentedViewController", v2);
  if (v13)
  {
    v16 = v13;
    v14 = type metadata accessor for QRCodeOverlayViewController();
    v15 = (_QWORD *)swift_dynamicCastClass(v16, v14);
    if (v15)
      (*(void (**)(void))((char *)&stru_1A8.offset + (swift_isaMask & *v15)))();
    goto LABEL_19;
  }
}

id sub_A1E358()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SharePlayTogetherSessionManagementViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_A1E440()
{
  return type metadata accessor for SharePlayTogetherSessionManagementViewController(0);
}

uint64_t type metadata accessor for SharePlayTogetherSessionManagementViewController(uint64_t a1)
{
  return sub_6345C(a1, (uint64_t *)&unk_14F0FE8, (uint64_t)&nominal type descriptor for SharePlayTogetherSessionManagementViewController);
}

void sub_A1E45C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[12];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = "\t";
  v4[2] = &unk_10912E0;
  v4[3] = &unk_10912F8;
  v4[4] = &unk_10912F8;
  v4[5] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[6] = &unk_1091310;
  sub_1D1B7C(319, (unint64_t *)&unk_14F0FF8, type metadata accessor for SharePlayTogetherSession.Participant, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v3 <= 0x3F)
  {
    v4[7] = *(_QWORD *)(v2 - 8) + 64;
    v4[8] = &unk_10912F8;
    v4[9] = &unk_10912F8;
    v4[10] = &unk_10912F8;
    v4[11] = &unk_1091328;
    swift_updateClassMetadata2(a1, 256, 12, v4, a1 + 80);
  }
}

void sub_A1E628(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  id v12;
  uint64_t v13;
  Class isa;
  uint64_t v15;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14F10F8);
  __chkstk_darwin(v5);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (uint64_t *)((char *)&v15 - v9);
  v11 = *(void **)(v2 + OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_dataSource);
  if (v11)
  {
    v12 = v11;
    dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(v10, a2);

    v13 = type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier(0);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v10, 1, v13) != 1)
    {
      sub_5C238((uint64_t)v10, (uint64_t)v7, (uint64_t *)&unk_14F10F8);
      if (swift_getEnumCaseMultiPayload(v7, v13) == 2)
      {
        MRSetGroupSessionNearbyContactDiscoveryEnabled((*v7 & 1) == 0);
        sub_A1D2B4(0);
      }
      else
      {
        sub_5C0DC((uint64_t)v7, type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier);
      }
    }
    sub_56024((uint64_t)v10, (uint64_t *)&unk_14F10F8);
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    objc_msgSend(a1, "deselectItemAtIndexPath:animated:", isa, 0);

  }
  else
  {
    __break(1u);
  }
}

_QWORD *sub_A1E92C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v17 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain(v17);
  }
  else if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    v9 = a2[3];
    a1[2] = a2[2];
    a1[3] = v9;
    *((_WORD *)a1 + 16) = *((_WORD *)a2 + 16);
    v10 = *(int *)(type metadata accessor for SharePlayTogetherSession.Participant(0) + 32);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = type metadata accessor for SocialProfile(0);
    v14 = *(_QWORD *)(v13 - 8);
    v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v15(v12, 1, v13))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_14BDA30);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t sub_A1EA8C(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  result = swift_getEnumCaseMultiPayload(a1, a2);
  if ((_DWORD)result == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v4 = a1 + *(int *)(type metadata accessor for SharePlayTogetherSession.Participant(0) + 32);
    v5 = type metadata accessor for SocialProfile(0);
    v6 = *(_QWORD *)(v5 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  return result;
}

_QWORD *sub_A1EB20(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    *((_WORD *)a1 + 16) = *((_WORD *)a2 + 16);
    v8 = *(int *)(type metadata accessor for SharePlayTogetherSession.Participant(0) + 32);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for SocialProfile(0);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_14BDA30);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_A1EC58(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;

  if (a1 != a2)
  {
    sub_5C0DC((uint64_t)a1, type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
      *((_BYTE *)a1 + 33) = *((_BYTE *)a2 + 33);
      v6 = *(int *)(type metadata accessor for SharePlayTogetherSession.Participant(0) + 32);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = type metadata accessor for SocialProfile(0);
      v10 = *(_QWORD *)(v9 - 8);
      v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v11(v8, 1, v9))
      {
        v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_14BDA30);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier(uint64_t a1)
{
  return sub_6345C(a1, qword_14F1078, (uint64_t)&nominal type descriptor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier);
}

_OWORD *sub_A1EDD4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    *((_WORD *)a1 + 16) = *((_WORD *)a2 + 16);
    v7 = *(int *)(type metadata accessor for SharePlayTogetherSession.Participant(0) + 32);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for SocialProfile(0);
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_14BDA30);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_A1EEE4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (a1 != a2)
  {
    sub_5C0DC((uint64_t)a1, type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      *((_WORD *)a1 + 16) = *((_WORD *)a2 + 16);
      v7 = *(int *)(type metadata accessor for SharePlayTogetherSession.Participant(0) + 32);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = type metadata accessor for SocialProfile(0);
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_14BDA30);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_A1F00C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = (char *)&value witness table for Builtin.Int64 + 64;
  result = type metadata accessor for SharePlayTogetherSession.Participant(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = &unk_1091328;
    swift_initEnumMetadataMultiPayload(a1, 256, 3, v4);
    return 0;
  }
  return result;
}

uint64_t sub_A1F088()
{
  return sub_4DD24(&qword_14F10B0, type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier, (uint64_t)&unk_1091354);
}

uint64_t sub_A1F0B4@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v3;

  *(_QWORD *)a1 = static HorizontalAlignment.center.getter(a2);
  *(_QWORD *)(a1 + 8) = 0x4000000000000000;
  *(_BYTE *)(a1 + 16) = 0;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14F1290);
  return sub_A1F0F8(a1 + *(int *)(v3 + 44));
}

uint64_t sub_A1F0F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t KeyPath;
  __n128 v19;
  double v20;
  uint64_t v21;
  unint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  double v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  double v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;

  v88 = a1;
  v1 = type metadata accessor for Locale(0);
  __chkstk_darwin(v1);
  v87 = (char *)&v81 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v3);
  v86 = (char *)&v81 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E0DF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F12A0);
  v83 = *(_QWORD *)(v85 - 8);
  __chkstk_darwin(v85);
  v9 = (char *)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F12A8);
  __chkstk_darwin(v82);
  v11 = (char *)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F12B0);
  __chkstk_darwin(v84);
  v13 = (char *)&v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v89 = (uint64_t)&v81 - v15;
  v16 = Image.init(systemName:)(0x616C706572616873, 0xE900000000000079);
  v17 = static Font.body.getter(v16);
  KeyPath = swift_getKeyPath(&unk_1091440);
  v90 = v16;
  v91 = KeyPath;
  v92 = v17;
  v20 = static Font.Weight.semibold.getter(v19);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_14B5688);
  v22 = sub_8220D0();
  View.fontWeight(_:)(*(_QWORD *)&v20, 0, v21, v22);
  swift_release(v17);
  swift_release(KeyPath);
  v23 = swift_release(v16);
  static SymbolRenderingMode.hierarchical.getter(v23);
  v24 = type metadata accessor for SymbolRenderingMode(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v7, 0, 1, v24);
  v25 = swift_getKeyPath(&unk_10914D0);
  v26 = (uint64_t *)&v11[*(int *)(v82 + 36)];
  v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14F12B8);
  sub_5C238((uint64_t)v7, (uint64_t)v26 + *(int *)(v27 + 28), &qword_14E0DF0);
  *v26 = v25;
  v28 = v83;
  v29 = v85;
  (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v11, v9, v85);
  sub_56024((uint64_t)v7, &qword_14E0DF0);
  v30 = (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v9, v29);
  v31 = static Edge.Set.top.getter(v30);
  LOBYTE(v7) = v31;
  v32 = EdgeInsets.init(_all:)(v31, 17.0);
  v34 = v33;
  v36 = v35;
  v38 = v37;
  sub_5C238((uint64_t)v11, (uint64_t)v13, &qword_14F12A8);
  v39 = &v13[*(int *)(v84 + 36)];
  *v39 = (char)v7;
  *((double *)v39 + 1) = v32;
  *((_QWORD *)v39 + 2) = v34;
  *((_QWORD *)v39 + 3) = v36;
  *((_QWORD *)v39 + 4) = v38;
  v39[40] = 0;
  sub_56024((uint64_t)v11, &qword_14F12A8);
  sub_5C090((uint64_t)v13, v89, &qword_14F12B0);
  v40 = v86;
  v41 = String.LocalizationValue.init(stringLiteral:)(0x616C506572616853, 0xE900000000000079);
  v42 = v87;
  static Locale.current.getter(v41);
  v90 = String.init(localized:table:bundle:locale:comment:)(v40, 0, 0, 0, v42, 0, 0, 256);
  v91 = v43;
  v44 = sub_55EA0();
  v45 = Text.init<A>(_:)(&v90, &type metadata for String, v44);
  v47 = v46;
  v49 = v48;
  v51 = v50 & 1;
  v52 = static Font.body.getter(v45);
  v53 = Text.font(_:)(v52, v45, v47, v51, v49);
  v55 = v54;
  LOBYTE(KeyPath) = v56;
  v58 = v57;
  swift_release(v52);
  v59 = KeyPath & 1;
  sub_AF8E8(v45, v47, v51);
  swift_bridgeObjectRelease();
  v61 = static Font.Weight.bold.getter(v60);
  v62 = Text.fontWeight(_:)(*(_QWORD *)&v61, 0, v53, v55, v59, v58);
  v64 = v63;
  v66 = v65;
  LOBYTE(v52) = v67 & 1;
  sub_AF8E8(v53, v55, v59);
  swift_bridgeObjectRelease();
  v69 = static Edge.Set.bottom.getter(v68);
  LOBYTE(v51) = v69;
  v70 = EdgeInsets.init(_all:)(v69, 20.0);
  v72 = v71;
  v74 = v73;
  v76 = v75;
  v77 = v89;
  sub_5C238(v89, (uint64_t)v13, &qword_14F12B0);
  v78 = v88;
  sub_5C238((uint64_t)v13, v88, &qword_14F12B0);
  v79 = v78 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14F12C8) + 48);
  *(_QWORD *)v79 = v62;
  *(_QWORD *)(v79 + 8) = v64;
  *(_BYTE *)(v79 + 16) = v52;
  *(_QWORD *)(v79 + 24) = v66;
  *(_BYTE *)(v79 + 32) = v51;
  *(double *)(v79 + 40) = v70;
  *(_QWORD *)(v79 + 48) = v72;
  *(_QWORD *)(v79 + 56) = v74;
  *(_QWORD *)(v79 + 64) = v76;
  *(_BYTE *)(v79 + 72) = 0;
  sub_AF8D8(v62, v64, v52);
  swift_bridgeObjectRetain();
  sub_56024(v77, &qword_14F12B0);
  sub_AF8E8(v62, v64, v52);
  swift_bridgeObjectRelease();
  return sub_56024((uint64_t)v13, &qword_14F12B0);
}

uint64_t sub_A1F65C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  void *v7;
  id v8;
  char v9;
  uint64_t v10;
  char v12;
  _QWORD v13[2];

  v7 = *(void **)(a1 + OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_session);
  v12 = 0;
  v8 = v7;
  State.init(wrappedValue:)(v13, &v12, &type metadata for Bool);
  v9 = v13[0];
  v10 = v13[1];
  *(_QWORD *)a4 = v8;
  *(_BYTE *)(a4 + 8) = v9;
  *(_QWORD *)(a4 + 16) = v10;
  *(_QWORD *)(a4 + 24) = a2;
  *(_QWORD *)(a4 + 32) = a3;
  return swift_retain(a3);
}

uint64_t sub_A1F6DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  id v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  char v20;
  _QWORD v21[2];

  v8 = type metadata accessor for SharePlayTogetherSessionManagementViewController.QRCodeCell(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(void **)(a1 + OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_session);
  *(_QWORD *)v10 = v11;
  v20 = 0;
  v12 = v11;
  State.init(wrappedValue:)(v21, &v20, &type metadata for Bool);
  v13 = v21[1];
  v10[8] = v21[0];
  *((_QWORD *)v10 + 3) = 0;
  *((_QWORD *)v10 + 4) = 0;
  *((_QWORD *)v10 + 2) = v13;
  v14 = &v10[*(int *)(v8 + 28)];
  *(_QWORD *)v14 = swift_getKeyPath(&off_10914A0);
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
  swift_storeEnumTagMultiPayload(v14, v15, 0);
  sub_5BDB8((uint64_t)v10, a4, type metadata accessor for SharePlayTogetherSessionManagementViewController.QRCodeCell);
  v16 = *(_QWORD *)(a4 + 24);
  v17 = *(_QWORD *)(a4 + 32);
  swift_retain(a3);
  sub_5C198(v16, v17);
  *(_QWORD *)(a4 + 24) = a2;
  *(_QWORD *)(a4 + 32) = a3;
  return sub_5C0DC((uint64_t)v10, type metadata accessor for SharePlayTogetherSessionManagementViewController.QRCodeCell);
}

uint64_t sub_A1F810@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v10 = type metadata accessor for SharePlayTogetherSessionManagementViewController.StatusHeaderView(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(void **)(a1 + OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_session);
  v14 = type metadata accessor for SharePlayTogetherSession(0);
  v15 = sub_4DD24(&qword_14F1140, type metadata accessor for SharePlayTogetherSession, (uint64_t)&protocol conformance descriptor for SharePlayTogetherSession);
  *(_QWORD *)v12 = ObservedObject.init(wrappedValue:)(v13, v14, v15);
  *((_QWORD *)v12 + 1) = v16;
  v12[16] = a2;
  *((_QWORD *)v12 + 3) = 0;
  *((_QWORD *)v12 + 4) = 0;
  v17 = &v12[*(int *)(v10 + 28)];
  *(_QWORD *)v17 = swift_getKeyPath(&off_10914A0);
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
  swift_storeEnumTagMultiPayload(v17, v18, 0);
  sub_5BDB8((uint64_t)v12, a5, type metadata accessor for SharePlayTogetherSessionManagementViewController.StatusHeaderView);
  v19 = *(_QWORD *)(a5 + 24);
  v20 = *(_QWORD *)(a5 + 32);
  swift_retain(a4);
  sub_5C198(v19, v20);
  *(_QWORD *)(a5 + 24) = a3;
  *(_QWORD *)(a5 + 32) = a4;
  return sub_5C0DC((uint64_t)v12, type metadata accessor for SharePlayTogetherSessionManagementViewController.StatusHeaderView);
}

id sub_A1F960@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v17;
  id v18;

  v8 = (int *)type metadata accessor for SharePlayTogetherSessionManagementViewController.ParticipantView(0);
  __chkstk_darwin(v8);
  v10 = (uint64_t *)((char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = type metadata accessor for SharePlayTogetherSession.Participant(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(id *)(a1 + OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_session);
  sub_5BDB8(a2, (uint64_t)v13, type metadata accessor for SharePlayTogetherSession.Participant);
  v14 = (_QWORD *)((char *)v10 + v8[7]);
  *v14 = swift_getKeyPath(&off_10914A0);
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
  swift_storeEnumTagMultiPayload(v14, v15, 0);
  *v10 = v18;
  sub_5C04C((uint64_t)v13, (uint64_t)v10 + v8[5], type metadata accessor for SharePlayTogetherSession.Participant);
  *((_BYTE *)v10 + v8[6]) = a3;
  sub_5C04C((uint64_t)v10, a4, type metadata accessor for SharePlayTogetherSessionManagementViewController.ParticipantView);
  return v18;
}

uint64_t sub_A1FAB8@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t KeyPath;
  uint64_t v23;
  uint64_t *v24;
  __n128 v25;
  id v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[2];
  unsigned __int8 v41;

  v37 = a1;
  v39 = a2;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_14B8EC8);
  v2 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F11B8);
  __chkstk_darwin(v35);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F11A0);
  __chkstk_darwin(v38);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = LocalizedStringKey.init(stringLiteral:)(0xD00000000000001FLL, 0x80000000010FBCD0);
  v33 = v11;
  v34 = v10;
  v13 = v12;
  type metadata accessor for MainActor(0);
  v15 = static MainActor.shared.getter(v14);
  v16 = swift_allocObject(&unk_13946B0, 32, 7);
  *(_QWORD *)(v16 + 16) = v15;
  *(_QWORD *)(v16 + 24) = &protocol witness table for MainActor;
  v18 = static MainActor.shared.getter(v17);
  v19 = swift_allocObject(&unk_13946D8, 32, 7);
  *(_QWORD *)(v19 + 16) = v18;
  *(_QWORD *)(v19 + 24) = &protocol witness table for MainActor;
  Binding.init(get:set:)(v40, sub_A2ACF8, v16, sub_A2AD1C, v19, &type metadata for Bool);
  v20 = Toggle<>.init(_:isOn:)(v9, v34, v13 & 1, v33, v40[0], v40[1], v41);
  v21 = static Font.subheadline.getter(v20);
  KeyPath = swift_getKeyPath(&unk_1091440);
  v23 = v36;
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v6, v4, v36);
  v24 = (uint64_t *)&v6[*(int *)(v35 + 36)];
  *v24 = KeyPath;
  v24[1] = v21;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v23);
  if ((v37 & 1) != 0)
  {
    v26 = objc_msgSend((id)objc_opt_self(UIColor), "_carSystemFocusPrimaryColor");
    v28 = Color.init(uiColor:)(v26, v27);
  }
  else
  {
    v28 = static Color.primary.getter(v25);
  }
  v29 = v28;
  v30 = swift_getKeyPath(&unk_1091470);
  sub_5C238((uint64_t)v6, (uint64_t)v8, &qword_14F11B8);
  v31 = (uint64_t *)&v8[*(int *)(v38 + 36)];
  *v31 = v30;
  v31[1] = v29;
  sub_56024((uint64_t)v6, &qword_14F11B8);
  return sub_5C090((uint64_t)v8, v39, &qword_14F11A0);
}

uint64_t sub_A1FD58@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  _QWORD *v34;
  uint64_t v35;
  unint64_t v36;
  char *v37;
  __n128 v38;
  uint64_t KeyPath;
  __n128 v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  _OWORD *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD v76[3];
  uint64_t v77;
  char *v78;
  void *v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  _BYTE v94[280];
  _QWORD v95[35];
  _QWORD v96[5];
  __int128 v97;
  __int128 v98;
  uint64_t v99;
  _OWORD v100[2];
  uint64_t v101;
  __int128 v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  _OWORD v115[7];
  _OWORD v116[2];
  _OWORD v117[9];
  char v118;
  _BYTE v119[296];

  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v91 = (char *)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v6);
  v90 = (char *)&v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v83);
  v84 = (char *)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F1790);
  v81 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v80 = (char *)&v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F1798);
  v85 = *(_QWORD *)(v11 - 8);
  v86 = v11;
  __chkstk_darwin(v11);
  v82 = (char *)&v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F17A0);
  __chkstk_darwin(v89);
  v88 = (char *)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F17A8);
  v92 = *(_QWORD *)(v14 - 8);
  v93 = v14;
  __chkstk_darwin(v14);
  v87 = (char *)&v77 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F17B0);
  __chkstk_darwin(v16);
  v18 = (char *)&v77 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v19);
  v22 = (char *)&v77 - v21;
  v23 = static HorizontalAlignment.center.getter(v20);
  sub_A20510((uint64_t)v115);
  *(_OWORD *)((char *)&v117[6] + 7) = v115[6];
  *(_OWORD *)((char *)&v117[5] + 7) = v115[5];
  *(_OWORD *)((char *)&v117[2] + 7) = v115[2];
  *(_OWORD *)((char *)&v117[1] + 7) = v115[1];
  *(_OWORD *)((char *)&v117[7] + 7) = v116[0];
  v117[8] = *(_OWORD *)((char *)v116 + 9);
  *(_OWORD *)((char *)&v117[3] + 7) = v115[3];
  *(_OWORD *)((char *)&v117[4] + 7) = v115[4];
  *(_OWORD *)((char *)v117 + 7) = v115[0];
  v111 = v117[5];
  v112 = v117[6];
  v113 = v117[7];
  v114 = *(_OWORD *)((char *)v116 + 9);
  v107 = v117[1];
  v108 = v117[2];
  v109 = v117[3];
  v110 = v117[4];
  v118 = 0;
  v103 = v23;
  v104 = 0x4014000000000000;
  v105 = 0;
  v106 = v117[0];
  v25 = static Alignment.center.getter(v24);
  sub_9C20F8(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v119, 0.0, 1, 0.0, 1, v25, v26);
  v27 = sub_A2DADC((uint64_t)v115);
  v28 = *(_QWORD **)a1;
  (*(void (**)(_QWORD *__return_ptr, uint64_t))&stru_248.segname[swift_isaMask & **(_QWORD **)a1])(v96, v27);
  sub_5C090((uint64_t)v96, (uint64_t)&v97, &qword_14F1210);
  if (*((_QWORD *)&v98 + 1))
  {
    v77 = v9;
    v100[0] = v97;
    v100[1] = v98;
    v101 = v99;
    v102 = *(_OWORD *)(a1 + 8);
    v29 = *(_QWORD *)(a1 + 24);
    v30 = *(_QWORD *)(a1 + 32);
    v31 = swift_allocObject(&unk_1394A08, 56, 7);
    v78 = v18;
    v79 = a2;
    v32 = v31;
    v33 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v31 + 16) = *(_OWORD *)a1;
    *(_OWORD *)(v31 + 32) = v33;
    *(_QWORD *)(v31 + 48) = *(_QWORD *)(a1 + 32);
    __chkstk_darwin(v31);
    v76[2] = v100;
    v34 = v28;
    sub_2051C8((uint64_t)&v102);
    sub_A9DEC(v29, v30);
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F17C0);
    v36 = sub_A2DC58();
    v37 = v80;
    Button.init(action:label:)(sub_A2DC28, v32, sub_A2DC50, v76, v35, v36, v38);
    KeyPath = swift_getKeyPath(&unk_10916B0);
    v41 = static Color.primary.getter(v40);
    v42 = (void *)objc_opt_self(UIColor);
    v43 = Color.init(_:)(objc_msgSend(v42, "systemBackgroundColor"));
    v44 = Color.init(_:)(objc_msgSend(v42, "_carSystemFocusColor"));
    v95[0] = KeyPath;
    LOBYTE(v95[1]) = 0;
    v95[2] = v41;
    v95[3] = v43;
    v95[4] = 0;
    v95[5] = v44;
    v45 = sub_5C150(&qword_14F17E0, &qword_14F1790, (uint64_t)&protocol conformance descriptor for Button<A>);
    v46 = sub_A2D700();
    v47 = v82;
    v48 = v77;
    View.buttonStyle<A>(_:)(v95, v77, &type metadata for SharePlayTogetherSessionManagementViewController.FocusableButtonStyle, v45, v46);
    v49 = v44;
    v18 = v78;
    swift_release(v49);
    swift_release(v43);
    swift_release(v41);
    v50 = swift_release(KeyPath);
    (*(void (**)(char *, uint64_t, __n128))(v81 + 8))(v37, v48, v50);
    v51 = v84;
    v52 = &v84[*(int *)(v83 + 20)];
    v53 = enum case for RoundedCornerStyle.continuous(_:);
    v54 = type metadata accessor for RoundedCornerStyle(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 104))(v52, v53, v54);
    __asm { FMOV            V0.2D, #8.0 }
    *v51 = _Q0;
    v61 = (uint64_t)v88;
    v60 = v89;
    v62 = (uint64_t)&v88[*(int *)(v89 + 36)];
    sub_5BDB8((uint64_t)v51, v62, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
    *(_WORD *)(v62 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14DD170) + 36)) = 256;
    v64 = v85;
    v63 = v86;
    (*(void (**)(uint64_t, char *, uint64_t))(v85 + 16))(v61, v47, v86);
    sub_5C0DC((uint64_t)v51, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
    (*(void (**)(char *, uint64_t))(v64 + 8))(v47, v63);
    v65 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD1E0);
    v66 = swift_allocObject(v65, 48, 7);
    *(_OWORD *)(v66 + 16) = xmmword_105B360;
    v67 = v90;
    v68 = String.LocalizationValue.init(stringLiteral:)(0x65646F43205251, 0xE700000000000000);
    v69 = v91;
    static Locale.current.getter(v68);
    *(_QWORD *)(v66 + 32) = String.init(localized:table:bundle:locale:comment:)(v67, 0, 0, 0, v69, 0, 0, 256);
    *(_QWORD *)(v66 + 40) = v70;
    v71 = sub_A2DCDC();
    v72 = sub_55EA0();
    v73 = (uint64_t)v87;
    View.accessibilityInputLabels<A>(_:)(v66, v60, &type metadata for String, v71, v72);
    sub_56024(v61, &qword_14F17A0);
    a2 = v79;
    swift_bridgeObjectRelease();
    sub_5C090(v73, (uint64_t)v22, &qword_14F17A8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v92 + 56))(v22, 0, 1, v93);
    sub_A2ADF4((uint64_t)v96);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v92 + 56))(v22, 1, 1, v93);
  }
  sub_5C238((uint64_t)v22, (uint64_t)v18, &qword_14F17B0);
  memcpy(v94, v119, sizeof(v94));
  memcpy(a2, v119, 0x118uLL);
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F17B8);
  sub_5C238((uint64_t)v18, (uint64_t)a2 + *(int *)(v74 + 48), &qword_14F17B0);
  sub_9D4EFC((uint64_t)v94);
  sub_56024((uint64_t)v22, &qword_14F17B0);
  sub_56024((uint64_t)v18, &qword_14F17B0);
  memcpy(v95, v119, sizeof(v95));
  return sub_A2DB64((uint64_t)v95);
}

void sub_A20510(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  double v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  uint64_t v50;
  _BYTE *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  __n128 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  int v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _BYTE v84[12];
  int v85;
  _BYTE *v86;
  _BYTE *v87;
  int v88;
  uint64_t KeyPath;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  _BYTE v97[7];
  char v98;
  _BYTE v99[7];
  char v100;
  _BYTE v101[7];
  _BYTE v102[7];
  char v103;

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = &v84[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v87 = v4;
  v5 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v5);
  v7 = &v84[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v86 = v7;
  v8 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000003CLL, 0x80000000010FC100);
  static Locale.current.getter(v8);
  v95 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, 0, 0, 256);
  v96 = v9;
  v90 = sub_55EA0();
  v10 = Text.init<A>(_:)(&v95, &type metadata for String, v90);
  v12 = v11;
  v14 = v13;
  v16 = v15 & 1;
  v17 = static Font.footnote.getter(v10);
  v18 = Text.font(_:)(v17, v10, v12, v16, v14);
  v20 = v19;
  v22 = v21;
  v24 = v23;
  swift_release(v17);
  v25 = v22 & 1;
  sub_AF8E8(v10, v12, v16);
  v26 = swift_bridgeObjectRelease();
  v27 = static Font.Weight.semibold.getter(v26);
  v28 = Text.fontWeight(_:)(*(_QWORD *)&v27, 0, v18, v20, v25, v24);
  v30 = v29;
  v32 = v31;
  v34 = v33 & 1;
  sub_AF8E8(v18, v20, v25);
  v35 = swift_bridgeObjectRelease();
  v36 = static Color.primary.getter(v35);
  v37 = Text.foregroundColor(_:)(v36, v28, v30, v34, v32);
  v91 = v38;
  v92 = v37;
  LOBYTE(v17) = v39;
  v93 = v40;
  swift_release(v36);
  v85 = v17 & 1;
  sub_AF8E8(v28, v30, v34);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath(&unk_1091740);
  v41 = static Edge.Set.horizontal.getter(KeyPath);
  v88 = v41;
  v42 = EdgeInsets.init(_all:)(v41, 12.0);
  v44 = v43;
  v46 = v45;
  v48 = v47;
  v49 = v86;
  v50 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000018, 0x80000000010FC140);
  v51 = v87;
  static Locale.current.getter(v50);
  v95 = String.init(localized:table:bundle:locale:comment:)(v49, 0, 0, 0, v51, 0, 0, 256);
  v96 = v52;
  v53 = Text.init<A>(_:)(&v95, &type metadata for String, v90);
  v55 = v54;
  v57 = v56;
  v59 = v58 & 1;
  v61 = static Font.caption.getter(v60);
  v62 = Text.font(_:)(v61, v53, v55, v59, v57);
  v64 = v63;
  LOBYTE(v20) = v65;
  v67 = v66;
  swift_release(v61);
  LOBYTE(v61) = v20 & 1;
  sub_AF8E8(v53, v55, v59);
  v68 = swift_bridgeObjectRelease();
  v69 = static Color.primary.getter(v68);
  v70 = Text.foregroundColor(_:)(v69, v62, v64, v20 & 1, v67);
  v72 = v71;
  LOBYTE(v55) = v73;
  v75 = v74;
  swift_release(v69);
  LOBYTE(v55) = v55 & 1;
  sub_AF8E8(v62, v64, v61);
  swift_bridgeObjectRelease();
  v76 = swift_getKeyPath(&unk_1091740);
  v77 = v85;
  v94 = v85;
  v103 = v85;
  v100 = 0;
  v98 = v55;
  *(_DWORD *)(a1 + 17) = v95;
  *(_DWORD *)(a1 + 20) = *(_DWORD *)((char *)&v95 + 3);
  *(_DWORD *)(a1 + 41) = *(_DWORD *)v102;
  *(_DWORD *)(a1 + 44) = *(_DWORD *)&v102[3];
  *(_DWORD *)(a1 + 49) = *(_DWORD *)v101;
  *(_DWORD *)(a1 + 52) = *(_DWORD *)&v101[3];
  v78 = *(_DWORD *)v99;
  *(_DWORD *)(a1 + 92) = *(_DWORD *)&v99[3];
  *(_DWORD *)(a1 + 89) = v78;
  v79 = *(_DWORD *)v97;
  *(_DWORD *)(a1 + 116) = *(_DWORD *)&v97[3];
  *(_DWORD *)(a1 + 113) = v79;
  v81 = v91;
  v80 = v92;
  *(_QWORD *)a1 = v92;
  *(_QWORD *)(a1 + 8) = v81;
  *(_BYTE *)(a1 + 16) = v77;
  v82 = KeyPath;
  *(_QWORD *)(a1 + 24) = v93;
  *(_QWORD *)(a1 + 32) = v82;
  *(_BYTE *)(a1 + 40) = 1;
  *(_BYTE *)(a1 + 48) = v88;
  *(double *)(a1 + 56) = v42;
  *(_QWORD *)(a1 + 64) = v44;
  *(_QWORD *)(a1 + 72) = v46;
  *(_QWORD *)(a1 + 80) = v48;
  *(_BYTE *)(a1 + 88) = 0;
  *(_QWORD *)(a1 + 96) = v70;
  *(_QWORD *)(a1 + 104) = v72;
  *(_BYTE *)(a1 + 112) = v55;
  *(_QWORD *)(a1 + 120) = v75;
  *(_QWORD *)(a1 + 128) = v76;
  *(_BYTE *)(a1 + 136) = 1;
  v83 = v80;
  sub_AF8D8(v80, v81, v77);
  swift_bridgeObjectRetain();
  swift_retain(v82);
  sub_AF8D8(v70, v72, v55);
  swift_bridgeObjectRetain();
  swift_retain(v76);
  sub_AF8E8(v70, v72, v55);
  swift_release(v76);
  swift_bridgeObjectRelease();
  sub_AF8E8(v83, v81, v94);
  swift_release(v82);
  swift_bridgeObjectRelease();
}

double sub_A209EC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  double result;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  __int128 v32;

  v5 = static VerticalAlignment.center.getter(a3);
  v6 = *(void **)(a1 + 24);
  v7 = QRCodeOverlayViewController.ImageViewRepresentable.init(image:)();
  v9 = v8;
  v11 = v10;
  v12 = static Edge.Set.all.getter(v6);
  LOBYTE(v6) = v12;
  v13 = EdgeInsets.init(_all:)(v12, 5.0);
  v15 = v14;
  v17 = v16;
  v19 = v18;
  v21 = static Alignment.center.getter(v20);
  _FrameLayout.init(width:height:alignment:)(&v28, 0x4054000000000000, 0, 0x4054000000000000, 0, v21, v22);
  v23 = v28;
  v24 = v29;
  v25 = v30;
  v26 = v31;
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  *(_QWORD *)(a2 + 24) = v7;
  *(_BYTE *)(a2 + 32) = v9 & 1;
  *(_QWORD *)(a2 + 40) = v11;
  *(_BYTE *)(a2 + 48) = (_BYTE)v6;
  *(double *)(a2 + 56) = v13;
  *(_QWORD *)(a2 + 64) = v15;
  *(_QWORD *)(a2 + 72) = v17;
  *(_QWORD *)(a2 + 80) = v19;
  *(_BYTE *)(a2 + 88) = 0;
  *(_QWORD *)(a2 + 96) = v23;
  *(_BYTE *)(a2 + 104) = v24;
  *(_QWORD *)(a2 + 112) = v25;
  *(_BYTE *)(a2 + 120) = v26;
  result = *(double *)&v32;
  *(_OWORD *)(a2 + 128) = v32;
  return result;
}

uint64_t sub_A20B08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v3;
  uint64_t v4;
  _OWORD v6[2];
  uint64_t v7;

  v3 = *(_OWORD *)(v1 + 16);
  v6[0] = *(_OWORD *)v1;
  v6[1] = v3;
  v7 = *(_QWORD *)(v1 + 32);
  *(_QWORD *)a1 = static VerticalAlignment.center.getter(*(double *)v6);
  *(_QWORD *)(a1 + 8) = 0x4024000000000000;
  *(_BYTE *)(a1 + 16) = 0;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F1788);
  return sub_A1FD58((uint64_t)v6, (void *)(a1 + *(int *)(v4 + 44)));
}

uint64_t sub_A20B68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  double v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  double v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  double v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;

  v47 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F1668);
  __chkstk_darwin(v2);
  v4 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14F1670);
  __chkstk_darwin(v5);
  v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EDD30);
  __chkstk_darwin(v8);
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F1680);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_14ABF00 != -1)
    swift_once(&qword_14ABF00, sub_A22FAC);
  v15 = qword_15817A8;
  *(_QWORD *)v4 = static VerticalAlignment.center.getter(v12);
  *((_QWORD *)v4 + 1) = v15;
  v4[16] = 0;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F1688);
  v17 = sub_A20EA8(v1, (uint64_t)&v4[*(int *)(v16 + 44)]);
  v18 = static Edge.Set.leading.getter(v17);
  v19 = v18;
  v20 = 8.0;
  if ((*(_BYTE *)(v1 + 16) & 1) == 0)
  {
    if (qword_14ABEF8 != -1)
      v18 = swift_once(&qword_14ABEF8, sub_A17884);
    v20 = *((double *)&xmmword_14F0F30 + 1);
  }
  v21 = EdgeInsets.init(_all:)(v18, v20);
  v23 = v22;
  v25 = v24;
  v27 = v26;
  sub_5C238((uint64_t)v4, (uint64_t)v7, &qword_14F1668);
  v28 = &v7[*(int *)(v5 + 36)];
  *v28 = v19;
  *((double *)v28 + 1) = v21;
  *((_QWORD *)v28 + 2) = v23;
  *((_QWORD *)v28 + 3) = v25;
  *((_QWORD *)v28 + 4) = v27;
  v28[40] = 0;
  v29 = sub_56024((uint64_t)v4, &qword_14F1668);
  v30 = static Edge.Set.trailing.getter(v29);
  v31 = v30;
  v32 = 4.0;
  if ((*(_BYTE *)(v1 + 16) & 1) == 0)
  {
    if (qword_14ABEF8 != -1)
      v30 = swift_once(&qword_14ABEF8, sub_A17884);
    v32 = *((double *)&xmmword_14F0F30 + 1);
  }
  v33 = EdgeInsets.init(_all:)(v30, v32);
  v35 = v34;
  v37 = v36;
  v39 = v38;
  sub_5C238((uint64_t)v7, (uint64_t)v10, (uint64_t *)&unk_14F1670);
  v40 = &v10[*(int *)(v8 + 36)];
  *v40 = v31;
  *((double *)v40 + 1) = v33;
  *((_QWORD *)v40 + 2) = v35;
  *((_QWORD *)v40 + 3) = v37;
  *((_QWORD *)v40 + 4) = v39;
  v40[40] = 0;
  v41 = sub_56024((uint64_t)v7, (uint64_t *)&unk_14F1670);
  if (*(_BYTE *)(v1 + 16))
    v42 = 44.0;
  else
    v42 = 60.0;
  v43 = static Alignment.center.getter(v41);
  sub_9C22CC(0.0, 1, 0.0, 1, 0.0, 1, v42, 0, (uint64_t)v14, 0.0, 1, 0.0, 1, v43, v44);
  sub_56024((uint64_t)v10, &qword_14EDD30);
  return sub_5C090((uint64_t)v14, v47, &qword_14F1680);
}

uint64_t sub_A20EA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  __int128 v28;
  uint64_t v29;
  char v30;
  double (*v31)(char *, uint64_t);
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  double v49;
  double v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  int v59;
  unsigned __int8 v60;
  BOOL v61;
  BOOL v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v71;
  uint64_t v72;
  int v73;
  char *v74;
  __int128 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _OWORD v79[3];
  char v80[8];
  __int128 v81;
  uint64_t v82;
  unsigned __int8 v83;
  uint64_t v84;
  uint64_t v85;

  v78 = a2;
  v74 = (char *)type metadata accessor for SharePlayTogetherSessionManagementViewController.StatusHeaderView(0);
  *(_QWORD *)&v75 = *((_QWORD *)v74 - 1);
  __chkstk_darwin(v74);
  v76 = v3;
  v4 = (char *)&v71 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DynamicTypeSize(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F1690);
  __chkstk_darwin(v9);
  v11 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F1698);
  __chkstk_darwin(v12);
  v77 = (uint64_t)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v71 - v15;
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v71 - v19;
  *(_QWORD *)v11 = static VerticalAlignment.center.getter(v18);
  *((_QWORD *)v11 + 1) = 0;
  v11[16] = 1;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F16A0);
  v22 = sub_A213E8(a1, &v11[*(int *)(v21 + 44)]);
  if (*(_BYTE *)(a1 + 16) == 1)
  {
    if (qword_14ABF10 != -1)
      v22 = swift_once(&qword_14ABF10, sub_A22FEC);
    v23 = &qword_15817B8;
  }
  else
  {
    if (qword_14ABF08 != -1)
      v22 = swift_once(&qword_14ABF08, sub_A22FCC);
    v23 = &qword_15817B0;
  }
  v24 = *v23;
  v25 = static Alignment.center.getter(v22);
  _FrameLayout.init(width:height:alignment:)(v79, v24, 0, 0, 1, v25, v26);
  sub_5C238((uint64_t)v11, (uint64_t)v16, &qword_14F1690);
  v27 = &v16[*(int *)(v12 + 36)];
  v28 = v79[1];
  *(_OWORD *)v27 = v79[0];
  *((_OWORD *)v27 + 1) = v28;
  *((_OWORD *)v27 + 2) = v79[2];
  sub_56024((uint64_t)v11, &qword_14F1690);
  sub_5C090((uint64_t)v16, (uint64_t)v20, &qword_14F1698);
  v29 = sub_724544((uint64_t)v8);
  v30 = DynamicTypeSize.isAccessibilitySize.getter(v29);
  v74 = v20;
  v31 = *(double (**)(char *, uint64_t))(v6 + 8);
  v32.n128_f64[0] = v31(v8, v5);
  v33 = static Alignment.leading.getter(v32);
  v35 = v34;
  sub_5BDB8(a1, (uint64_t)v4, type metadata accessor for SharePlayTogetherSessionManagementViewController.StatusHeaderView);
  v36 = *(unsigned __int8 *)(v75 + 80);
  v72 = v5;
  v37 = (v36 + 16) & ~v36;
  v38 = swift_allocObject(&unk_1394990, v37 + v76, v36 | 7);
  sub_5C04C((uint64_t)v4, v38 + v37, type metadata accessor for SharePlayTogetherSessionManagementViewController.StatusHeaderView);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14F16A8);
  sub_5C150(&qword_14F16B0, &qword_14F16A8, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  v39 = AxisStack.init(axis:alignment:spacing:content:)(v30 & 1, v33, v35, 0, 1, (uint64_t)sub_A2D808, v38, (uint64_t)v80);
  LODWORD(v76) = v80[0];
  v75 = v81;
  v40 = v82;
  v73 = v83;
  v42 = v84;
  v41 = v85;
  v43 = static Edge.Set.bottom.getter(v39);
  v44 = sub_724544((uint64_t)v8);
  v45 = DynamicTypeSize.isAccessibilitySize.getter(v44);
  v46 = v72;
  v31(v8, v72);
  v47 = Axis.rawValue.getter(v45 & 1);
  v48 = Axis.rawValue.getter(1);
  v49 = 0.0;
  if (v47 == v48)
    v49 = 8.0;
  v50 = EdgeInsets.init(_all:)(v48, v49);
  v52 = v51;
  v54 = v53;
  v56 = v55;
  v57 = sub_724544((uint64_t)v8);
  v58 = DynamicTypeSize.isAccessibilitySize.getter(v57);
  v31(v8, v46);
  v59 = Axis.rawValue.getter(v58 & 1);
  v60 = Axis.rawValue.getter(1);
  v61 = v59 == v60;
  v62 = v59 != v60;
  v63 = v61;
  v64 = (uint64_t)v74;
  v65 = v77;
  sub_5C238((uint64_t)v74, v77, &qword_14F1698);
  v66 = v78;
  sub_5C238(v65, v78, &qword_14F1698);
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F16B8);
  v68 = v66 + *(int *)(v67 + 48);
  *(_BYTE *)v68 = v76;
  *(_OWORD *)(v68 + 8) = v75;
  *(_QWORD *)(v68 + 24) = v40;
  *(_BYTE *)(v68 + 32) = v73;
  *(_QWORD *)(v68 + 40) = v42;
  *(_QWORD *)(v68 + 48) = v41;
  *(_BYTE *)(v68 + 56) = v43;
  *(double *)(v68 + 64) = v50;
  *(_QWORD *)(v68 + 72) = v52;
  *(_QWORD *)(v68 + 80) = v54;
  *(_QWORD *)(v68 + 88) = v56;
  *(_BYTE *)(v68 + 96) = 0;
  v69 = v66 + *(int *)(v67 + 64);
  *(_QWORD *)v69 = 0;
  *(_BYTE *)(v69 + 8) = v63;
  *(_BYTE *)(v69 + 9) = v62;
  swift_retain(v41);
  sub_56024(v64, &qword_14F1698);
  swift_release(v41);
  return sub_56024(v65, &qword_14F1698);
}

uint64_t sub_A213E8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t (*v21)(void);
  _QWORD *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t KeyPath;
  unsigned int *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  unint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  void (*v39)(char *, char *, uint64_t);
  char *v40;
  _QWORD *v41;
  uint64_t v42;
  char *v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;

  v51 = a2;
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_14B5668);
  __chkstk_darwin(v50);
  v53 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14CFF10);
  __chkstk_darwin(v52);
  v5 = (uint64_t *)((char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = type metadata accessor for Image.Scale(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F1760);
  __chkstk_darwin(v54);
  v11 = (uint64_t *)((char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F1768);
  v49 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v48 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v46 = (char *)&v45 - v15;
  __chkstk_darwin(v16);
  v47 = (char *)&v45 - v17;
  if ((*(_BYTE *)(a1 + 16) & 1) != 0)
  {
    v18 = 0xED00006C6C69662ELL;
    v19 = 0x322E6E6F73726570;
  }
  else
  {
    v20 = *(_QWORD **)(a1 + 8);
    v21 = *(uint64_t (**)(void))((char *)&stru_108.reserved2 + (swift_isaMask & *v20));
    v22 = v20;
    v19 = v21();
    v18 = v23;

  }
  v24 = Image.init(_internalSystemName:)(v19, v18);
  v25 = static Font.title3.getter(v24);
  KeyPath = swift_getKeyPath(&unk_1091440);
  if (*(_BYTE *)(a1 + 16))
    v27 = (unsigned int *)&enum case for Image.Scale.medium(_:);
  else
    v27 = (unsigned int *)&enum case for Image.Scale.large(_:);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *v27, v6);
  v28 = swift_getKeyPath(&unk_1091710);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))((char *)v5 + *(int *)(v52 + 28), v9, v6);
  *v5 = v28;
  sub_5C238((uint64_t)v5, (uint64_t)v11 + *(int *)(v54 + 36), (uint64_t *)&unk_14CFF10);
  *v11 = v24;
  v11[1] = KeyPath;
  v11[2] = v25;
  swift_retain(v24);
  swift_retain(KeyPath);
  swift_retain(v25);
  sub_56024((uint64_t)v5, (uint64_t *)&unk_14CFF10);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_release(v25);
  swift_release(KeyPath);
  swift_release(v24);
  v29 = enum case for DynamicTypeSize.large(_:);
  v30 = type metadata accessor for DynamicTypeSize(0);
  v31 = (uint64_t)v53;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v53, v29, v30);
  v32 = sub_4DD24(&qword_14F15A0, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  result = dispatch thunk of static Equatable.== infix(_:_:)(v31, v31, v30, v32);
  if ((result & 1) != 0)
  {
    v34 = sub_7FA37C();
    v35 = sub_5C150(&qword_14F15B0, &qword_14B5668, (uint64_t)&protocol conformance descriptor for PartialRangeThrough<A>);
    v36 = v46;
    View.dynamicTypeSize<A>(_:)(v31, v54, v50, v34, v35);
    sub_56024(v31, &qword_14B5668);
    sub_56024((uint64_t)v11, &qword_14F1760);
    v37 = v49;
    v38 = v47;
    (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v47, v36, v12);
    v39 = *(void (**)(char *, char *, uint64_t))(v37 + 16);
    v40 = v48;
    v39(v48, v38, v12);
    v41 = v51;
    *v51 = 0;
    *((_BYTE *)v41 + 8) = 1;
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F1780);
    v39((char *)v41 + *(int *)(v42 + 48), v40, v12);
    v43 = (char *)v41 + *(int *)(v42 + 64);
    *(_QWORD *)v43 = 0;
    v43[8] = 1;
    v44 = *(void (**)(char *, uint64_t))(v37 + 8);
    v44(v38, v12);
    return ((uint64_t (*)(char *, uint64_t))v44)(v40, v12);
  }
  else
  {
    __break(1u);
  }
  return result;
}

double sub_A21870@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  double v34;
  uint64_t v35;
  char v36;
  void *v37;
  _QWORD *v38;
  uint64_t (*v39)(void);
  _QWORD *v40;
  uint64_t v41;
  uint64_t (*v42)(void);
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  __n128 v52;
  uint64_t KeyPath;
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char *v61;
  uint64_t v62;
  __n128 v63;
  uint64_t OpaqueTypeConformance2;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  __n128 v84;
  uint64_t v85;
  __n128 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  char *v93;
  uint64_t v94;
  __n128 v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char v139;
  uint64_t v140;
  uint64_t v141;
  char v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  char *v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  int v171;
  int v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  ValueMetadata *v179;
  uint64_t *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  ValueMetadata *v189;
  uint64_t v190;
  unint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;

  v180 = a2;
  v168 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F16C0);
  __chkstk_darwin(v168);
  v169 = (uint64_t)&v146 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Capsule(0);
  __chkstk_darwin(v4);
  v156 = (char *)&v146 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v157 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v157);
  v155 = (char *)&v146 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SharePlayTogetherSessionManagementViewController.StatusHeaderView(0);
  v158 = *(_QWORD *)(v7 - 8);
  v8 = *(_QWORD *)(v158 + 64);
  __chkstk_darwin(v7);
  v161 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F16C8);
  v160 = *(_QWORD *)(v161 - 8);
  __chkstk_darwin(v161);
  v159 = (char *)&v146 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v164 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F16D0);
  v163 = *(_QWORD *)(v164 - 8);
  __chkstk_darwin(v164);
  v162 = (char *)&v146 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v166 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F16D8);
  v165 = *(_QWORD *)(v166 - 8);
  __chkstk_darwin(v166);
  v153 = (char *)&v146 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v151 = (char *)&v146 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F16E0);
  __chkstk_darwin(v14);
  v150 = (char *)&v146 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v154 = (uint64_t)&v146 - v17;
  __chkstk_darwin(v18);
  v149 = (char *)&v146 - v19;
  __chkstk_darwin(v20);
  v152 = (uint64_t)&v146 - v21;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F16E8);
  v175 = *(_QWORD *)(v22 - 8);
  v176 = v22;
  __chkstk_darwin(v22);
  v167 = (char *)&v146 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F16F0);
  __chkstk_darwin(v24);
  v185 = (uint64_t)&v146 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v28 = (char *)&v146 - v27;
  v29 = type metadata accessor for DynamicTypeSize(0);
  v30 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin(v29);
  v32 = (char *)&v146 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v174 = static HorizontalAlignment.leading.getter(v33);
  sub_A226CC(a1, &v188, v34);
  v173 = v188;
  v178 = v190;
  v179 = v189;
  v177 = v191;
  v183 = v193;
  v184 = v192;
  v181 = v195;
  v182 = v194;
  v35 = sub_724544((uint64_t)v32);
  v36 = DynamicTypeSize.isAccessibilitySize.getter(v35);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v29);
  v172 = Axis.rawValue.getter(v36 & 1);
  v171 = Axis.rawValue.getter(0);
  v37 = (void *)objc_opt_self(UIColor);
  v187 = Color.init(_:)(objc_msgSend(v37, "_carSystemFocusColor"));
  v170 = a1;
  v38 = *(_QWORD **)(a1 + 8);
  v39 = *(uint64_t (**)(void))&stru_248.segname[(swift_isaMask & *v38) + 16];
  v40 = v38;
  LOBYTE(v39) = v39();

  v41 = 1;
  v186 = v28;
  if ((v39 & 1) != 0)
  {
    v147 = v4;
    v148 = v14;
    v42 = *(uint64_t (**)(void))&stru_108.segname[swift_isaMask & *v40];
    v43 = v40;
    LOBYTE(v42) = v42();

    sub_5BDB8(v170, (uint64_t)&v146 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SharePlayTogetherSessionManagementViewController.StatusHeaderView);
    v44 = *(unsigned __int8 *)(v158 + 80);
    v45 = (v44 + 16) & ~v44;
    v46 = v45 + v8;
    v47 = v44 | 7;
    if ((v42 & 1) != 0)
    {
      v48 = swift_allocObject(&unk_13949E0, v46, v47);
      sub_5C04C((uint64_t)&v146 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v48 + v45, type metadata accessor for SharePlayTogetherSessionManagementViewController.StatusHeaderView);
      v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F1700);
      v50 = sub_184F98(&qword_14F1708, &qword_14F1700, (void (*)(void))sub_7FC108);
      v51 = v159;
      Button.init(action:label:)(sub_A2DAA8, v48, sub_A22C7C, 0, v49, v50, v52);
      KeyPath = swift_getKeyPath(&unk_10916B0);
      v158 = KeyPath;
      v55 = static Color.white.getter(v54);
      v56 = Color.init(_:)(objc_msgSend(v37, "_carSystemFocusPrimaryColor"));
      v57 = static Color.red.getter();
      v188 = KeyPath;
      LOBYTE(v189) = 0;
      v190 = v55;
      v191 = v56;
      v58 = v187;
      v192 = v57;
      v193 = v187;
      v59 = sub_5C150(&qword_14F1730, &qword_14F16C8, (uint64_t)&protocol conformance descriptor for Button<A>);
      v60 = sub_A2D700();
      swift_retain(v58);
      v61 = v162;
      v62 = v161;
      View.buttonStyle<A>(_:)(&v188, v161, &type metadata for SharePlayTogetherSessionManagementViewController.FocusableButtonStyle, v59, v60);
      swift_release(v58);
      swift_release(v57);
      swift_release(v56);
      swift_release(v55);
      v63 = swift_release(v158);
      (*(void (**)(char *, uint64_t, __n128))(v160 + 8))(v51, v62, v63);
      v188 = v62;
      v189 = &type metadata for SharePlayTogetherSessionManagementViewController.FocusableButtonStyle;
      v190 = v59;
      v191 = v60;
      OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v188, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
      v65 = v151;
      v66 = v164;
      View.bold(_:)(1, v164, OpaqueTypeConformance2);
      (*(void (**)(char *, uint64_t))(v163 + 8))(v61, v66);
      if (*(_BYTE *)(v170 + 16) == 1)
      {
        v67 = v157;
        v68 = v155;
        v69 = &v155[*(int *)(v157 + 20)];
        v70 = enum case for RoundedCornerStyle.continuous(_:);
        v71 = type metadata accessor for RoundedCornerStyle(0);
        (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 104))(v69, v70, v71);
        __asm { FMOV            V0.2D, #6.0 }
        *(_OWORD *)v68 = _Q0;
        v77 = sub_4DD24(&qword_14F1628, (uint64_t (*)(uint64_t))&type metadata accessor for RoundedRectangle, (uint64_t)&protocol conformance descriptor for RoundedRectangle);
        v78 = v68;
        v79 = v67;
      }
      else
      {
        v108 = enum case for RoundedCornerStyle.continuous(_:);
        v109 = type metadata accessor for RoundedCornerStyle(0);
        v110 = v156;
        (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v109 - 8) + 104))(v156, v108, v109);
        v77 = sub_4DD24(&qword_14F1738, (uint64_t (*)(uint64_t))&type metadata accessor for Capsule, (uint64_t)&protocol conformance descriptor for Capsule);
        v78 = v110;
        v79 = v147;
      }
      v111 = AnyShape.init<A>(_:)(v78, v79, v77);
      v28 = v186;
      v112 = v165;
      v113 = v149;
      v114 = v166;
      (*(void (**)(char *, char *, uint64_t))(v165 + 16))(v149, v65, v166);
      v115 = v148;
      v116 = &v113[*(int *)(v148 + 36)];
      *(_QWORD *)v116 = v111;
      *((_WORD *)v116 + 4) = 256;
      (*(void (**)(char *, uint64_t))(v112 + 8))(v65, v114);
      v117 = (uint64_t)v113;
      v118 = v152;
      sub_5C090(v117, v152, &qword_14F16E0);
      v119 = v169;
      sub_5C238(v118, v169, &qword_14F16E0);
      v120 = v119;
      v121 = v168;
      v122 = 0;
    }
    else
    {
      v80 = swift_allocObject(&unk_13949B8, v46, v47);
      sub_5C04C((uint64_t)&v146 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v80 + v45, type metadata accessor for SharePlayTogetherSessionManagementViewController.StatusHeaderView);
      v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F1700);
      v82 = sub_184F98(&qword_14F1708, &qword_14F1700, (void (*)(void))sub_7FC108);
      v83 = v159;
      Button.init(action:label:)(sub_A2D930, v80, sub_A22C8C, 0, v81, v82, v84);
      v85 = swift_getKeyPath(&unk_10916B0);
      v158 = v85;
      v87 = static Color.white.getter(v86);
      v88 = Color.init(_:)(objc_msgSend(v37, "_carSystemFocusPrimaryColor"));
      v89 = static Color.red.getter();
      v188 = v85;
      LOBYTE(v189) = 0;
      v190 = v87;
      v191 = v88;
      v90 = v187;
      v192 = v89;
      v193 = v187;
      v91 = sub_5C150(&qword_14F1730, &qword_14F16C8, (uint64_t)&protocol conformance descriptor for Button<A>);
      v92 = sub_A2D700();
      swift_retain(v90);
      v93 = v162;
      v94 = v161;
      View.buttonStyle<A>(_:)(&v188, v161, &type metadata for SharePlayTogetherSessionManagementViewController.FocusableButtonStyle, v91, v92);
      swift_release(v90);
      swift_release(v89);
      swift_release(v88);
      swift_release(v87);
      v95 = swift_release(v158);
      (*(void (**)(char *, uint64_t, __n128))(v160 + 8))(v83, v94, v95);
      v188 = v94;
      v189 = &type metadata for SharePlayTogetherSessionManagementViewController.FocusableButtonStyle;
      v190 = v91;
      v191 = v92;
      v96 = swift_getOpaqueTypeConformance2(&v188, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
      v97 = v153;
      v98 = v164;
      View.bold(_:)(1, v164, v96);
      (*(void (**)(char *, uint64_t))(v163 + 8))(v93, v98);
      if (*(_BYTE *)(v170 + 16) == 1)
      {
        v99 = v157;
        v100 = v155;
        v101 = &v155[*(int *)(v157 + 20)];
        v102 = enum case for RoundedCornerStyle.continuous(_:);
        v103 = type metadata accessor for RoundedCornerStyle(0);
        (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 104))(v101, v102, v103);
        __asm { FMOV            V0.2D, #6.0 }
        *(_OWORD *)v100 = _Q0;
        v105 = sub_4DD24(&qword_14F1628, (uint64_t (*)(uint64_t))&type metadata accessor for RoundedRectangle, (uint64_t)&protocol conformance descriptor for RoundedRectangle);
        v106 = v100;
        v107 = v99;
      }
      else
      {
        v123 = enum case for RoundedCornerStyle.continuous(_:);
        v124 = type metadata accessor for RoundedCornerStyle(0);
        v125 = v156;
        (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v124 - 8) + 104))(v156, v123, v124);
        v105 = sub_4DD24(&qword_14F1738, (uint64_t (*)(uint64_t))&type metadata accessor for Capsule, (uint64_t)&protocol conformance descriptor for Capsule);
        v106 = v125;
        v107 = v147;
      }
      v126 = AnyShape.init<A>(_:)(v106, v107, v105);
      v28 = v186;
      v127 = v165;
      v128 = v150;
      v129 = v166;
      (*(void (**)(char *, char *, uint64_t))(v165 + 16))(v150, v97, v166);
      v115 = v148;
      v130 = &v128[*(int *)(v148 + 36)];
      *(_QWORD *)v130 = v126;
      *((_WORD *)v130 + 4) = 256;
      (*(void (**)(char *, uint64_t))(v127 + 8))(v97, v129);
      v131 = (uint64_t)v128;
      v118 = v154;
      sub_5C090(v131, v154, &qword_14F16E0);
      v119 = v169;
      sub_5C238(v118, v169, &qword_14F16E0);
      v120 = v119;
      v121 = v168;
      v122 = 1;
    }
    swift_storeEnumTagMultiPayload(v120, v121, v122);
    v132 = sub_A2D99C();
    v133 = (uint64_t)v167;
    _ConditionalContent<>.init(storage:)(v119, v115, v115, v132, v132);
    sub_56024(v118, &qword_14F16E0);
    sub_5C090(v133, (uint64_t)v28, &qword_14F16E8);
    v41 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v175 + 56))(v28, v41, 1, v176);
  LODWORD(v176) = v172 != v171;
  LODWORD(v175) = v172 == v171;
  v134 = v185;
  sub_5C238((uint64_t)v28, v185, &qword_14F16F0);
  v136 = (uint64_t)v179;
  v135 = v180;
  *v180 = v174;
  v135[1] = 0;
  *((_BYTE *)v135 + 16) = 1;
  v137 = v173;
  v135[3] = v173;
  v135[4] = v136;
  v138 = v177;
  v139 = v178;
  v135[5] = v178;
  v135[6] = v138;
  v141 = v183;
  v140 = v184;
  v135[7] = v184;
  v135[8] = v141;
  v143 = v181;
  v142 = v182;
  v135[9] = v182;
  v135[10] = v143;
  v135[11] = 0;
  *((_BYTE *)v135 + 96) = v175;
  *((_BYTE *)v135 + 97) = v176;
  v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F16F8);
  sub_5C238(v134, (uint64_t)v135 + *(int *)(v144 + 64), &qword_14F16F0);
  sub_184E34(v137, v136, v139, v138);
  sub_184E34(v140, v141, v142, v143);
  sub_184E34(v137, v136, v139, v138);
  sub_184E34(v140, v141, v142, v143);
  swift_release(v187);
  sub_56024((uint64_t)v186, &qword_14F16F0);
  sub_184E64(v137, v136, v139, v138);
  sub_184E64(v140, v141, v142, v143);
  sub_56024(v134, &qword_14F16F0);
  sub_184E64(v137, v136, v139, v138);
  return sub_184E64(v140, v141, v142, v143);
}

double sub_A226CC@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X8>, double a3@<D0>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t (*v23)(void);
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  _QWORD *v35;
  uint64_t (*v36)(void);
  _QWORD *v37;
  _QWORD *v38;
  uint64_t (*v39)(void);
  _QWORD *v40;
  uint64_t v41;
  double v42;
  Swift::String v43;
  _QWORD *v44;
  uint64_t v45;
  Swift::String v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  __n128 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  char v76;
  _QWORD *v78;
  uint64_t (*v79)(void);
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  _QWORD v87[3];

  v5 = type metadata accessor for LocalizedStringKey.StringInterpolation(0, a3);
  __chkstk_darwin(v5);
  v7 = (char *)&v82 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SharePlayTogetherSessionManagementViewController.StatusHeaderView(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v82 - v12;
  v14 = type metadata accessor for Locale(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v82 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v18) = *(_BYTE *)(a1 + 16);
  v86 = a2;
  if ((v18 & 1) != 0)
  {
    sub_5BDB8(a1, (uint64_t)v13, type metadata accessor for SharePlayTogetherSessionManagementViewController.StatusHeaderView);
    sub_5C0DC((uint64_t)v13, type metadata accessor for SharePlayTogetherSessionManagementViewController.StatusHeaderView);
    sub_5BDB8(a1, (uint64_t)v10, type metadata accessor for SharePlayTogetherSessionManagementViewController.StatusHeaderView);
    v20 = 0;
    v84 = 0;
    v85 = 0;
    v21 = 0;
LABEL_6:
    sub_5C0DC((uint64_t)v10, type metadata accessor for SharePlayTogetherSessionManagementViewController.StatusHeaderView);
    goto LABEL_7;
  }
  v22 = *(_QWORD **)(a1 + 8);
  v23 = *(uint64_t (**)(void))&stru_108.segname[(swift_isaMask & *v22) + 16];
  v24 = v22;
  v25 = v23();
  v27 = v26;

  if (!v27)
  {
    v28 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000011, 0x80000000010FC0C0);
    static Locale.current.getter(v28);
    v25 = String.init(localized:table:bundle:locale:comment:)(v19, v25, 0, 0, v16, 0, 0, 256);
    v27 = v29;
  }
  v87[0] = v25;
  v87[1] = v27;
  v30 = sub_55EA0();
  v31 = Text.init<A>(_:)(v87, &type metadata for String, v30);
  v21 = v32;
  v20 = v33;
  v84 = v34 & 1;
  v85 = v31;
  sub_5BDB8(a1, (uint64_t)v13, type metadata accessor for SharePlayTogetherSessionManagementViewController.StatusHeaderView);
  v35 = (_QWORD *)*((_QWORD *)v13 + 1);
  v36 = *(uint64_t (**)(void))&stru_248.segname[(swift_isaMask & *v35) + 16];
  v37 = v35;
  LOBYTE(v36) = v36();
  sub_5C0DC((uint64_t)v13, type metadata accessor for SharePlayTogetherSessionManagementViewController.StatusHeaderView);

  sub_5BDB8(a1, (uint64_t)v10, type metadata accessor for SharePlayTogetherSessionManagementViewController.StatusHeaderView);
  if ((v36 & 1) != 0)
    goto LABEL_6;
  v78 = (_QWORD *)*((_QWORD *)v10 + 1);
  v79 = *(uint64_t (**)(void))((char *)&stru_1A8.reloff + (swift_isaMask & *v78));
  v80 = v78;
  v81 = v79();
  sub_5C0DC((uint64_t)v10, type metadata accessor for SharePlayTogetherSessionManagementViewController.StatusHeaderView);

  if (v81 < 1)
  {
    v67 = 0;
    v69 = 0;
    v73 = 0;
    v72 = 0;
    goto LABEL_11;
  }
LABEL_7:
  v38 = *(_QWORD **)(a1 + 8);
  v39 = *(uint64_t (**)(void))&stru_1A8.segname[(swift_isaMask & *v38) - 8];
  v40 = v38;
  v41 = v39();

  v82 = v21;
  v83 = v20;
  if (v41 < 1)
  {
    v47 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000012, 0x80000000010FC0E0);
  }
  else
  {
    LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)(15, 1, v42);
    v43._countAndFlagsBits = 0;
    v43._object = (void *)0xE000000000000000;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v43);
    v44 = v40;
    v45 = v39();

    v87[0] = v45;
    LocalizedStringKey.StringInterpolation.appendInterpolation<A>(_:specifier:)(v87, 1684827173, 0xE400000000000000, &type metadata for Int, &protocol witness table for Int);
    v46._countAndFlagsBits = 0x6963697472615020;
    v46._object = (void *)0xEF297328746E6170;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v46);
    v47 = LocalizedStringKey.init(stringInterpolation:)(v7);
  }
  v48 = Text.init(_:tableName:bundle:comment:)(v47);
  v50 = v49;
  v52 = v51;
  v54 = v53 & 1;
  v56 = static Color.secondary.getter(v55);
  v57 = Text.foregroundColor(_:)(v56, v48, v50, v54, v52);
  v59 = v58;
  v61 = v60;
  v63 = v62;
  swift_release(v56);
  v64 = v61 & 1;
  sub_AF8E8(v48, v50, v54);
  v65 = swift_bridgeObjectRelease();
  v66 = static Font.caption.getter(v65);
  v67 = Text.font(_:)(v66, v57, v59, v61 & 1, v63);
  v69 = v68;
  LOBYTE(v52) = v70;
  v72 = v71;
  swift_release(v66);
  v73 = v52 & 1;
  sub_AF8E8(v57, v59, v64);
  swift_bridgeObjectRelease();
  v21 = v82;
  v20 = v83;
LABEL_11:
  v75 = v85;
  v74 = v86;
  *v86 = v85;
  v74[1] = v21;
  v76 = v84;
  v74[2] = v84;
  v74[3] = v20;
  v74[4] = v67;
  v74[5] = v69;
  v74[6] = v73;
  v74[7] = v72;
  sub_184E34(v75, v21, v76, v20);
  sub_184E34(v67, v69, v73, v72);
  sub_184E64(v67, v69, v73, v72);
  return sub_184E64(v75, v21, v76, v20);
}

void sub_A22C00(uint64_t a1)
{
  _QWORD *v1;
  void (*v2)(void);
  void (*v3)(void);
  _QWORD *v4;

  if (*(_BYTE *)(a1 + 16) == 1)
  {
    v1 = *(_QWORD **)(a1 + 8);
    v2 = *(void (**)(void))&stru_338.segname[(swift_isaMask & *v1) - 8];
    v4 = v1;
    v2();

  }
  else
  {
    v3 = *(void (**)(void))(a1 + 24);
    if (v3)
      v3();
  }
}

double sub_A22C7C@<D0>(uint64_t a1@<X8>)
{
  return sub_A22CA0(a1);
}

double sub_A22C8C@<D0>(uint64_t a1@<X8>)
{
  return sub_A22CA0(a1);
}

double sub_A22CA0@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  id v7;
  double v8;
  double v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  char v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  double result;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;
  char v47;
  char v48;
  char v49;
  char v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  char v76;
  double v77[3];

  v2 = LocalizedStringKey.init(stringLiteral:)();
  v3 = Text.init(_:tableName:bundle:comment:)(v2);
  v43 = v4;
  v44 = v3;
  v40 = v5;
  v42 = v6;
  v41 = static Edge.Set.horizontal.getter();
  v7 = objc_msgSend((id)objc_opt_self(UIFontMetrics), "defaultMetrics");
  objc_msgSend(v7, "scaledValueForValue:", 12.0);
  v9 = v8;

  v11 = EdgeInsets.init(_all:)(v10, v9);
  v13 = v12;
  v15 = v14;
  v17 = v16;
  v19 = static Alignment.center.getter(v18);
  v21 = _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(&v51, 0, 1, 0, 1, 0, 1, 0x4042000000000000, 0, 0, 257, 0, 1, v19, v20);
  v22 = v52;
  v38 = v53;
  v39 = v51;
  v23 = v54;
  v24 = v55;
  v25 = v56;
  v26 = v57;
  v27 = v58;
  LOBYTE(v7) = v60;
  v36 = v61;
  v37 = v59;
  v28 = v62;
  v34 = v64;
  v35 = v63;
  v29 = static Alignment.center.getter(v21);
  LOBYTE(v33) = 1;
  LOBYTE(v32) = 1;
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(&v65, 0x4051800000000000, 0, 0, 1, 0, 1, 0, 1, 0, v32, 0, v33, v29, v30);
  v50 = v66;
  v49 = v68;
  v48 = v70;
  v47 = v72;
  v46 = v74;
  v45 = v76;
  *(_QWORD *)a1 = v44;
  *(_QWORD *)(a1 + 8) = v43;
  *(_BYTE *)(a1 + 16) = v40 & 1;
  *(_QWORD *)(a1 + 24) = v42;
  *(_BYTE *)(a1 + 32) = v41;
  *(_BYTE *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 80) = v39;
  *(_BYTE *)(a1 + 88) = v22;
  *(_QWORD *)(a1 + 96) = v38;
  *(_BYTE *)(a1 + 104) = v23;
  *(_QWORD *)(a1 + 112) = v24;
  *(_BYTE *)(a1 + 120) = v25;
  *(_QWORD *)(a1 + 128) = v26;
  *(_BYTE *)(a1 + 136) = v27;
  *(_QWORD *)(a1 + 144) = v37;
  *(_BYTE *)(a1 + 152) = (_BYTE)v7;
  *(_QWORD *)(a1 + 160) = v36;
  *(_BYTE *)(a1 + 168) = v28;
  *(_QWORD *)(a1 + 176) = v35;
  *(_QWORD *)(a1 + 184) = v34;
  *(_QWORD *)(a1 + 192) = v65;
  *(_BYTE *)(a1 + 200) = v50;
  *(_QWORD *)(a1 + 208) = v67;
  *(_BYTE *)(a1 + 216) = v49;
  *(_QWORD *)(a1 + 224) = v69;
  *(_BYTE *)(a1 + 232) = v48;
  *(_QWORD *)(a1 + 240) = v71;
  *(_BYTE *)(a1 + 248) = v47;
  *(_QWORD *)(a1 + 256) = v73;
  *(_BYTE *)(a1 + 264) = v46;
  *(_QWORD *)(a1 + 272) = v75;
  *(_BYTE *)(a1 + 280) = v45;
  *(double *)(a1 + 40) = v11;
  *(_QWORD *)(a1 + 48) = v13;
  *(_QWORD *)(a1 + 56) = v15;
  *(_QWORD *)(a1 + 64) = v17;
  result = v77[0];
  *(_OWORD *)(a1 + 288) = *(_OWORD *)v77;
  return result;
}

void sub_A22FAC()
{
  qword_15817A8 = Int.seconds.getter(12);
}

void sub_A22FCC()
{
  qword_15817B0 = Int.seconds.getter(38);
}

void sub_A22FEC()
{
  qword_15817B8 = Int.seconds.getter(30);
}

void sub_A2300C()
{
  uint64_t v0;
  double v1;
  uint64_t v2;
  char v3;

  v0 = static Color.white.getter();
  Color.opacity(_:)(0.1);
  swift_release(v0);
  v1 = UIScreen.Dimensions.size.getter(0.5);
  qword_14F0F50 = v2;
  qword_14F0F58 = *(_QWORD *)&v1;
  byte_14F0F60 = v3;
}

uint64_t sub_A23068@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  double v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  double v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  double v45;
  double v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v55;
  uint64_t v56;
  _OWORD v57[3];

  v2 = v1;
  v56 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F1508);
  __chkstk_darwin(v3);
  v5 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14F1510);
  __chkstk_darwin(v6);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_14EDD28);
  __chkstk_darwin(v9);
  v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F1520);
  __chkstk_darwin(v12);
  v14 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F1528);
  v15 = __chkstk_darwin(v55);
  v17 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_14ABF00 != -1)
    swift_once(&qword_14ABF00, sub_A22FAC);
  v18 = qword_15817A8;
  *(_QWORD *)v5 = static VerticalAlignment.center.getter(v15);
  *((_QWORD *)v5 + 1) = v18;
  v5[16] = 0;
  v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14F1530);
  v20 = sub_A23450(v2, &v5[*(int *)(v19 + 44)]);
  v21 = static Alignment.trailing.getter(v20);
  _FrameLayout.init(width:height:alignment:)(v57, 0, 1, 0, 1, v21, v22);
  sub_5C238((uint64_t)v5, (uint64_t)v8, &qword_14F1508);
  v23 = &v8[*(int *)(v6 + 36)];
  v24 = v57[1];
  *(_OWORD *)v23 = v57[0];
  *((_OWORD *)v23 + 1) = v24;
  *((_OWORD *)v23 + 2) = v57[2];
  sub_56024((uint64_t)v5, &qword_14F1508);
  v25 = type metadata accessor for SharePlayTogetherSessionManagementViewController.ParticipantView(0);
  v26 = *(int *)(v25 + 24);
  if (*(_BYTE *)(v2 + v26))
    v27 = 44.0;
  else
    v27 = 60.0;
  v28 = static Alignment.center.getter(v25);
  sub_9C2324(0.0, 1, 0.0, 1, 0.0, 1, v27, 0, (uint64_t)v11, 0.0, 1, 0.0, 1, v28, v29);
  v30 = sub_56024((uint64_t)v8, (uint64_t *)&unk_14F1510);
  v31 = static Edge.Set.leading.getter(v30);
  v32 = v31;
  v33 = 8.0;
  if ((*(_BYTE *)(v2 + v26) & 1) == 0)
  {
    if (qword_14ABEF8 != -1)
      v31 = swift_once(&qword_14ABEF8, sub_A17884);
    v33 = *((double *)&xmmword_14F0F30 + 1);
  }
  v34 = EdgeInsets.init(_all:)(v31, v33);
  v36 = v35;
  v38 = v37;
  v40 = v39;
  sub_5C238((uint64_t)v11, (uint64_t)v14, &qword_14EDD28);
  v41 = &v14[*(int *)(v12 + 36)];
  *v41 = v32;
  *((double *)v41 + 1) = v34;
  *((_QWORD *)v41 + 2) = v36;
  *((_QWORD *)v41 + 3) = v38;
  *((_QWORD *)v41 + 4) = v40;
  v41[40] = 0;
  v42 = sub_56024((uint64_t)v11, &qword_14EDD28);
  v43 = static Edge.Set.trailing.getter(v42);
  v44 = v43;
  v45 = 4.0;
  if ((*(_BYTE *)(v2 + v26) & 1) == 0)
  {
    if (qword_14ABEF8 != -1)
      v43 = swift_once(&qword_14ABEF8, sub_A17884);
    v45 = *((double *)&xmmword_14F0F30 + 1);
  }
  v46 = EdgeInsets.init(_all:)(v43, v45);
  v48 = v47;
  v50 = v49;
  v52 = v51;
  sub_5C238((uint64_t)v14, (uint64_t)v17, &qword_14F1520);
  v53 = &v17[*(int *)(v55 + 36)];
  *v53 = v44;
  *((double *)v53 + 1) = v46;
  *((_QWORD *)v53 + 2) = v48;
  *((_QWORD *)v53 + 3) = v50;
  *((_QWORD *)v53 + 4) = v52;
  v53[40] = 0;
  sub_56024((uint64_t)v14, &qword_14F1520);
  return sub_5C090((uint64_t)v17, v56, &qword_14F1528);
}

uint64_t sub_A23450@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t OpaqueTypeConformance2;
  uint64_t v33;
  double v34;
  char v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  char v58;
  void (*v59)(uint64_t, uint64_t);
  int v60;
  uint64_t v61;
  double v62;
  double v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  int v72;
  unsigned __int8 v73;
  BOOL v74;
  BOOL v75;
  char v76;
  char *v77;
  uint64_t v78;
  void (*v79)(char *, char *, uint64_t);
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  void (*v86)(char *, uint64_t, __n128);
  __n128 v87;
  __n128 v88;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  __int128 v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  _BYTE v109[48];
  uint64_t v110;
  __int128 v111;
  uint64_t v112;
  unsigned __int8 v113;
  uint64_t v114;
  uint64_t v115;

  v105 = a2;
  v3 = type metadata accessor for SharePlayTogetherSessionManagementViewController.ParticipantView(0);
  v98 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v99 = v4;
  v102 = (uint64_t)&v90 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = type metadata accessor for DynamicTypeSize(0);
  v96 = *(_QWORD *)(v104 - 8);
  __chkstk_darwin(v104);
  v101 = (uint64_t)&v90 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v6 = *(_QWORD *)(v93 - 8);
  __chkstk_darwin(v93);
  v8 = (char *)&v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v90 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14B0FA0);
  __chkstk_darwin(v12);
  v14 = (char *)&v90 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14E5000);
  v91 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v17 = (char *)&v90 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_14B55F0);
  v94 = *(_QWORD *)(v95 - 8);
  __chkstk_darwin(v95);
  v19 = (char *)&v90 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14E5010);
  v107 = *(_QWORD *)(v20 - 8);
  v108 = v20;
  __chkstk_darwin(v20);
  v103 = (char *)&v90 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v92 = (char *)&v90 - v23;
  __chkstk_darwin(v24);
  v106 = (char *)&v90 - v25;
  sub_A23C64((uint64_t)v14);
  v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD600);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v11, 7, 10, v26);
  v97 = v3;
  v27 = *(int *)(v3 + 24);
  *(_QWORD *)&v100 = a1;
  if (*(_BYTE *)(a1 + v27) == 1)
  {
    if (qword_14ABF10 != -1)
      swift_once(&qword_14ABF10, sub_A22FEC);
    v28 = &qword_15817B8;
  }
  else
  {
    if (qword_14ABF08 != -1)
      swift_once(&qword_14ABF08, sub_A22FCC);
    v28 = &qword_15817B0;
  }
  ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(*v28, 0, *v28, 0, 0, 1, 2, (uint64_t)v109);
  v29 = v93;
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v93);
  static ArtworkImage.with(_:placeholder:size:reusePolicy:)((uint64_t)v14, (uint64_t)v11, (uint64_t)v109, (uint64_t)v8, (uint64_t)v17);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v29);
  sub_5C0DC((uint64_t)v11, type metadata accessor for ArtworkImage.Placeholder);
  sub_56024((uint64_t)v14, (uint64_t *)&unk_14B0FA0);
  v30 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_14E5030);
  v31 = sub_184E94();
  v110 = v30;
  *(_QWORD *)&v111 = v31;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v110, &opaque type descriptor for <<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>, 1);
  View.corner(_:)(0, 0, 1, v15, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v91 + 8))(v17, v15);
  if (qword_14ABF18 != -1)
    swift_once(&qword_14ABF18, sub_A2300C);
  v33 = qword_14F0F50;
  v34 = *(double *)&qword_14F0F58;
  v35 = byte_14F0F60;
  v110 = v15;
  *(_QWORD *)&v111 = OpaqueTypeConformance2;
  v36 = swift_getOpaqueTypeConformance2(&v110, &opaque type descriptor for <<opaque return type of View.corner(_:)>>, 1);
  v37 = v92;
  v38 = v33;
  v39 = v95;
  View.border(_:corner:)(v38, v35, 0, 0, 1, v95, v36, v34);
  (*(void (**)(char *, uint64_t))(v94 + 8))(v19, v39);
  (*(void (**)(char *, char *, uint64_t))(v107 + 32))(v106, v37, v108);
  v40 = v100;
  v41 = v101;
  v42 = sub_724544(v101);
  v43 = DynamicTypeSize.isAccessibilitySize.getter(v42);
  v96 = *(_QWORD *)(v96 + 8);
  v44 = v104;
  v45.n128_f64[0] = ((double (*)(uint64_t, uint64_t))v96)(v41, v104);
  v46 = static Alignment.leading.getter(v45);
  v48 = v47;
  v49 = v40;
  v50 = v102;
  sub_5BDB8(v49, v102, type metadata accessor for SharePlayTogetherSessionManagementViewController.ParticipantView);
  v51 = *(unsigned __int8 *)(v98 + 80);
  v52 = (v51 + 16) & ~v51;
  v53 = swift_allocObject(&unk_1394918, v52 + v99, v51 | 7);
  sub_5C04C(v50, v53 + v52, type metadata accessor for SharePlayTogetherSessionManagementViewController.ParticipantView);
  __swift_instantiateConcreteTypeFromMangledName(&qword_14F1540);
  sub_5C150(&qword_14F1548, &qword_14F1540, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  v54 = AxisStack.init(axis:alignment:spacing:content:)(v43 & 1, v46, v48, 0, 1, (uint64_t)sub_A2D428, v53, (uint64_t)&v110);
  LODWORD(v102) = v110;
  v100 = v111;
  v99 = v112;
  LODWORD(v98) = v113;
  v55 = v115;
  v97 = v114;
  v56 = static Edge.Set.bottom.getter(v54);
  v57 = sub_724544(v41);
  v58 = DynamicTypeSize.isAccessibilitySize.getter(v57);
  v59 = (void (*)(uint64_t, uint64_t))v96;
  ((void (*)(uint64_t, uint64_t))v96)(v41, v44);
  v60 = Axis.rawValue.getter(v58 & 1);
  v61 = Axis.rawValue.getter(1);
  v62 = 0.0;
  if (v60 == v61)
    v62 = 8.0;
  v63 = EdgeInsets.init(_all:)(v61, v62);
  v65 = v64;
  v67 = v66;
  v69 = v68;
  v70 = sub_724544(v41);
  v71 = DynamicTypeSize.isAccessibilitySize.getter(v70);
  v59(v41, v44);
  v72 = Axis.rawValue.getter(v71 & 1);
  v73 = Axis.rawValue.getter(1);
  v74 = v72 == v73;
  v75 = v72 != v73;
  v76 = v74;
  v77 = v106;
  v78 = v107;
  v79 = *(void (**)(char *, char *, uint64_t))(v107 + 16);
  v80 = v103;
  v81 = v108;
  v79(v103, v106, v108);
  v82 = v105;
  v79(v105, v80, v81);
  v83 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14F1550);
  v84 = &v82[*(int *)(v83 + 48)];
  *v84 = v102;
  *(_OWORD *)(v84 + 8) = v100;
  *((_QWORD *)v84 + 3) = v99;
  v84[32] = v98;
  *((_QWORD *)v84 + 5) = v97;
  *((_QWORD *)v84 + 6) = v55;
  v84[56] = v56;
  *((double *)v84 + 8) = v63;
  *((_QWORD *)v84 + 9) = v65;
  *((_QWORD *)v84 + 10) = v67;
  *((_QWORD *)v84 + 11) = v69;
  v84[96] = 0;
  v85 = &v82[*(int *)(v83 + 64)];
  *(_QWORD *)v85 = 0;
  v85[8] = v76;
  v85[9] = v75;
  v86 = *(void (**)(char *, uint64_t, __n128))(v78 + 8);
  v87 = swift_retain(v55);
  v86(v77, v81, v87);
  v88 = swift_release(v55);
  return ((uint64_t (*)(char *, uint64_t, __n128))v86)(v80, v81, v88);
}

uint64_t sub_A23C64@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v18;
  uint64_t v19;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14BDA30);
  __chkstk_darwin(v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14B0FA0);
  __chkstk_darwin(v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for SharePlayTogetherSession.Participant(0);
  sub_5C238(v2 + *(int *)(v10 + 32), (uint64_t)v6, &qword_14BDA30);
  v11 = type metadata accessor for SocialProfile(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v6, 1, v11) == 1)
  {
    sub_56024((uint64_t)v6, &qword_14BDA30);
    v13 = type metadata accessor for ArtworkImage.ViewModel(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v9, 1, 1, v13);
  }
  else
  {
    ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v11, (uint64_t)&protocol witness table for SocialProfile, v9);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v6, v11);
    v14 = type metadata accessor for ArtworkImage.ViewModel(0);
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v9, 1, v14) != 1)
    {
      sub_5C04C((uint64_t)v9, a1, type metadata accessor for ArtworkImage.ViewModel);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 56))(a1, 0, 1, v14);
    }
  }
  sub_56024((uint64_t)v9, (uint64_t *)&unk_14B0FA0);
  sub_4E684(0, (unint64_t *)&qword_14C12F0, MPArtworkCatalog_ptr);
  v16 = static MPArtworkCatalog.monogram(for:layoutDirection:)(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), 0, 1);
  if (v16)
    return ArtworkImage.ViewModel.init(_:)(v16, a1);
  v18 = type metadata accessor for ArtworkImage.ViewModel(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a1, 1, 1, v18);
}

void sub_A23E74(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  char v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD **v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unsigned __int8 v50;
  id v51;
  uint64_t v52;
  double v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, char *, uint64_t);
  char *v64;
  uint64_t v65;
  void (*v66)(char *, char *, uint64_t);
  char *v67;
  char *v68;
  uint64_t v69;
  char *v70;
  void (*v71)(char *, uint64_t);
  void (*v72)(char *, uint64_t);
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  uint64_t v86;
  char *v87;
  _QWORD **v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  __int128 v99;
  _BYTE v100[32];
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  _OWORD v107[2];
  char v108;
  char v109;
  char v110;
  char v111;
  __int128 v112;
  _OWORD v113[2];
  _OWORD v114[3];
  __int128 v115;
  __int128 v116;
  __int128 v117;
  _OWORD v118[3];

  v88 = (_QWORD **)a1;
  v82 = a2;
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_14B5668);
  __chkstk_darwin(v77);
  v91 = (char *)&v73 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F1560);
  __chkstk_darwin(v76);
  v92 = (char *)&v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F1568);
  v79 = *(_QWORD *)(v81 - 8);
  __chkstk_darwin(v81);
  v80 = (char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v74 = (char *)&v73 - v7;
  __chkstk_darwin(v8);
  v78 = (char *)&v73 - v9;
  v10 = type metadata accessor for DynamicTypeSize(0);
  v94 = *(_QWORD *)(v10 - 8);
  v95 = v10;
  v11 = __chkstk_darwin(v10);
  v93 = (uint64_t)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for AccessibilityChildBehavior(0, v11);
  v89 = *(_QWORD *)(v13 - 8);
  v90 = v13;
  __chkstk_darwin(v13);
  v15 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F1570);
  v17 = *(_QWORD *)(v16 - 8);
  v96 = v16;
  v97 = v17;
  __chkstk_darwin(v16);
  v75 = (char *)&v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v87 = (char *)&v73 - v20;
  __chkstk_darwin(v21);
  v98 = (char *)&v73 - v22;
  v86 = static HorizontalAlignment.leading.getter(v23);
  sub_A244B4(a1, (uint64_t)&v112);
  v24 = v112;
  v25 = v113[0];
  v26 = *((_QWORD *)&v113[1] + 1);
  v27 = v114[0];
  v84 = *(_OWORD *)((char *)&v114[1] + 8);
  v85 = *(_OWORD *)((char *)v114 + 8);
  v28 = *((_QWORD *)&v114[2] + 1);
  v29 = v115;
  v83 = *(_OWORD *)((char *)v113 + 8);
  v110 = 1;
  v109 = v113[0];
  v108 = v114[0];
  v31 = static Edge.Set.vertical.getter(v30);
  v32 = v31;
  v33 = EdgeInsets.init(_all:)(v31, 7.0);
  v111 = 0;
  v99 = (unint64_t)v86;
  v100[0] = 1;
  *(_OWORD *)&v100[8] = v24;
  v100[24] = v25;
  v101 = v83;
  *(_QWORD *)&v102 = v26;
  BYTE8(v102) = v27;
  v34 = (uint64_t)v91;
  v103 = v85;
  v104 = v84;
  *(_QWORD *)&v105 = v28;
  *((_QWORD *)&v105 + 1) = v29;
  LOBYTE(v106) = v32;
  *((double *)&v106 + 1) = v33;
  *(_QWORD *)&v107[0] = v35;
  *((_QWORD *)&v107[0] + 1) = v36;
  *(_QWORD *)&v107[1] = v37;
  BYTE8(v107[1]) = 0;
  static AccessibilityChildBehavior.combine.getter(v38);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F1578);
  v40 = sub_A2D43C();
  v41 = v87;
  v42 = v39;
  v43 = (uint64_t)v92;
  View.accessibilityElement(children:)(v15, v42, v40);
  (*(void (**)(char *, uint64_t))(v89 + 8))(v15, v90);
  v117 = v106;
  v118[0] = v107[0];
  *(_OWORD *)((char *)v118 + 9) = *(_OWORD *)((char *)v107 + 9);
  v114[1] = v102;
  v114[2] = v103;
  v115 = v104;
  v116 = v105;
  v112 = v99;
  v113[0] = *(_OWORD *)v100;
  v113[1] = *(_OWORD *)&v100[16];
  v114[0] = v101;
  sub_A2D4C0((uint64_t)&v112);
  (*(void (**)(char *, char *, uint64_t))(v97 + 32))(v98, v41, v96);
  v44 = type metadata accessor for SharePlayTogetherSessionManagementViewController.ParticipantView(0);
  v45 = v88;
  v46 = v93;
  v47 = sub_724544(v93);
  LOBYTE(v29) = DynamicTypeSize.isAccessibilitySize.getter(v47);
  v49 = v94;
  v48 = v95;
  (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v46, v95);
  LODWORD(v90) = Axis.rawValue.getter(v29 & 1);
  v50 = Axis.rawValue.getter(0);
  v51 = objc_msgSend((id)objc_opt_self(UIColor), "_carSystemFocusColor");
  v52 = Color.init(_:)(v51);
  if (*((_BYTE *)v45 + *(int *)(v44 + 24)))
    v54 = 0x4014000000000000;
  else
    v54 = 0x4030000000000000;
  *(_QWORD *)v43 = static VerticalAlignment.center.getter(v53);
  *(_QWORD *)(v43 + 8) = v54;
  *(_BYTE *)(v43 + 16) = 0;
  v55 = v43 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14F1598) + 44);
  v93 = v52;
  sub_A24914(v45, v52, v55);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v49 + 104))(v34, enum case for DynamicTypeSize.accessibility2(_:), v48);
  v56 = sub_4DD24(&qword_14F15A0, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  if ((dispatch thunk of static Equatable.== infix(_:_:)(v34, v34, v48, v56) & 1) != 0)
  {
    LODWORD(v95) = v90 != v50;
    LODWORD(v94) = v90 == v50;
    v57 = sub_5C150(&qword_14F15A8, &qword_14F1560, (uint64_t)&protocol conformance descriptor for HStack<A>);
    v58 = sub_5C150(&qword_14F15B0, &qword_14B5668, (uint64_t)&protocol conformance descriptor for PartialRangeThrough<A>);
    v59 = v74;
    View.dynamicTypeSize<A>(_:)(v34, v76, v77, v57, v58);
    sub_56024(v34, &qword_14B5668);
    sub_56024(v43, &qword_14F1560);
    v60 = v78;
    v61 = v79;
    v62 = v81;
    (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v78, v59, v81);
    v63 = *(void (**)(char *, char *, uint64_t))(v97 + 16);
    v64 = v75;
    v65 = v96;
    v63(v75, v98, v96);
    v66 = *(void (**)(char *, char *, uint64_t))(v61 + 16);
    v67 = v80;
    v66(v80, v60, v62);
    v68 = v82;
    v63(v82, v64, v65);
    v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F15B8);
    v70 = &v68[*(int *)(v69 + 48)];
    *(_QWORD *)v70 = 0;
    v70[8] = v94;
    v70[9] = v95;
    v66(&v68[*(int *)(v69 + 64)], v67, v62);
    v71 = *(void (**)(char *, uint64_t))(v61 + 8);
    v71(v60, v62);
    v72 = *(void (**)(char *, uint64_t))(v97 + 8);
    v72(v98, v65);
    v71(v67, v62);
    v72(v64, v65);
    swift_release(v93);
  }
  else
  {
    __break(1u);
  }
}

double sub_A244B4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(_QWORD);
  uint64_t v18;
  uint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t KeyPath;
  __n128 v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  const char *v31;
  _BYTE *v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  double result;
  _BYTE v75[12];
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;

  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v75[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v75[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for SharePlayTogetherSessionManagementViewController.ParticipantView(0);
  __chkstk_darwin(v10);
  v12 = (uint64_t)&v75[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = a1 + *(int *)(v13 + 20);
  v16 = *(_QWORD *)(v14 + 16);
  v15 = *(_QWORD *)(v14 + 24);
  sub_5BDB8(a1, v12, v17);
  if (v15)
  {
    v18 = v15;
  }
  else
  {
    v19 = (uint64_t *)(v12 + *(int *)(v10 + 20));
    v16 = *v19;
    v18 = v19[1];
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_5C0DC(v12, type metadata accessor for SharePlayTogetherSessionManagementViewController.ParticipantView);
  v86 = v16;
  v87 = v18;
  v20 = sub_55EA0();
  v21 = Text.init<A>(_:)(&v86, &type metadata for String, v20);
  v82 = v22;
  v83 = v21;
  LODWORD(v12) = v23;
  v25 = v24;
  KeyPath = swift_getKeyPath(&unk_10916E0);
  v81 = static Color.primary.getter(v27);
  v80 = swift_getKeyPath(&unk_1091470);
  v28 = *(_BYTE *)(a1 + *(int *)(v10 + 24));
  v84 = KeyPath;
  v85 = v25;
  if ((v28 & 1) != 0)
  {
    v78 = 0;
    v79 = 0;
    v29 = 0;
    v77 = 0;
  }
  else
  {
    if (*(_BYTE *)(v14 + 33) == 1)
    {
      v30 = String.LocalizationValue.init(stringLiteral:)(0x7473657547, 0xE500000000000000);
      static Locale.current.getter(v30);
      v31 = "Subtitle for SharePlay participant";
      v32 = v9;
      v33 = v6;
      v34 = 34;
      v35 = 2;
    }
    else
    {
      v36 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000015, 0x80000000010FC040);
      static Locale.current.getter(v36);
      v32 = v9;
      v33 = v6;
      v31 = 0;
      v34 = 0;
      v35 = 256;
    }
    v37 = String.init(localized:table:bundle:locale:comment:)(v32, 0, 0, 0, v33, v31, v34, v35);
    v39 = *(unsigned __int8 *)(v14 + 32);
    v76 = v12;
    if (v39 == 1)
    {
      swift_bridgeObjectRelease();
      v40 = String.LocalizationValue.init(stringLiteral:)(0x6F742073746E6157, 0xED00006E696F4A20);
      static Locale.current.getter(v40);
      v37 = String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, 0, v6, "Subtitle for pending SharePlay participant", 42, 2);
    }
    v86 = v37;
    v87 = v38;
    v41 = Text.init<A>(_:)(&v86, &type metadata for String, v20);
    v43 = v42;
    v45 = v44;
    v47 = v46 & 1;
    v49 = static Color.secondary.getter(v48);
    v12 = Text.foregroundColor(_:)(v49, v41, v43, v47, v45);
    v51 = v50;
    v53 = v52;
    v55 = v54;
    swift_release(v49);
    v56 = v53 & 1;
    sub_AF8E8(v41, v43, v47);
    v57 = swift_bridgeObjectRelease();
    v58 = static Font.caption.getter(v57);
    v59 = Text.font(_:)(v58, v12, v51, v56, v55);
    v78 = v60;
    v79 = v59;
    LOBYTE(v49) = v61;
    v77 = v62;
    swift_release(v58);
    v29 = v49 & 1;
    sub_AF8E8(v12, v51, v56);
    swift_bridgeObjectRelease();
    KeyPath = v84;
    v25 = v85;
    LOBYTE(v12) = v76;
  }
  v63 = v12 & 1;
  v65 = v82;
  v64 = v83;
  *(_QWORD *)a2 = v83;
  *(_QWORD *)(a2 + 8) = v65;
  *(_BYTE *)(a2 + 16) = v63;
  *(_QWORD *)(a2 + 24) = v25;
  *(_QWORD *)(a2 + 32) = KeyPath;
  v66 = a2;
  *(_QWORD *)(a2 + 40) = 2;
  *(_BYTE *)(a2 + 48) = 0;
  v67 = v80;
  v68 = v81;
  *(_QWORD *)(a2 + 56) = v80;
  *(_QWORD *)(a2 + 64) = v68;
  v70 = v78;
  v69 = v79;
  *(_QWORD *)(a2 + 72) = v79;
  *(_QWORD *)(a2 + 80) = v70;
  *(_QWORD *)(a2 + 88) = v29;
  v71 = v29;
  v72 = v77;
  *(_QWORD *)(v66 + 96) = v77;
  sub_AF8D8(v64, v65, v63);
  swift_bridgeObjectRetain();
  v73 = v84;
  swift_retain(v84);
  swift_retain(v67);
  swift_retain(v68);
  sub_184E34(v69, v70, v71, v72);
  sub_184E64(v69, v70, v71, v72);
  sub_AF8E8(v64, v65, v63);
  swift_release(v68);
  swift_release(v67);
  swift_release(v73);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_A24914@<X0>(_QWORD **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  id *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  uint64_t v37;
  char v38;
  int v39;
  uint64_t (*v40)(void);
  id v41;
  char v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t KeyPath;
  __n128 v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  __n128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  void *v62;
  _OWORD *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  __n128 v96;
  uint64_t v97;
  id v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD **v103;
  unint64_t v104;
  char *v105;
  uint64_t v106;
  void *v107;
  _OWORD *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v113;
  unint64_t v114;
  void *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD **v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  double v159;
  char v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;

  v148 = a2;
  v155 = a3;
  v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F15C0);
  __chkstk_darwin(v145);
  v131 = (char *)&v128 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F15C8);
  v135 = *(_QWORD *)(v136 - 8);
  __chkstk_darwin(v136);
  v134 = (char *)&v128 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v158 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F15D0);
  v153 = *(_QWORD *)(v158 - 8);
  __chkstk_darwin(v158);
  v133 = (char *)&v128 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v132 = (uint64_t)&v128 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F15D8);
  __chkstk_darwin(v9);
  v11 = (char *)&v128 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v157 = (uint64_t)&v128 - v13;
  v139 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v139);
  v138 = (char *)&v128 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F15E0);
  __chkstk_darwin(v142);
  v16 = (char *)&v128 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F15E8);
  v140 = *(_QWORD *)(v141 - 8);
  __chkstk_darwin(v141);
  v149 = (char *)&v128 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F15F0);
  v150 = *(_QWORD *)(v18 - 8);
  v151 = v18;
  __chkstk_darwin(v18);
  v144 = (char *)&v128 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v143 = (uint64_t)&v128 - v21;
  v22 = type metadata accessor for SharePlayTogetherSessionManagementViewController.ParticipantView(0);
  v146 = *(_QWORD *)(v22 - 8);
  v23 = *(_QWORD *)(v146 + 64);
  __chkstk_darwin(v22);
  v147 = (uint64_t)&v128 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v26 = (char *)&v128 - v25;
  __chkstk_darwin(v27);
  v29 = (id *)((char *)&v128 - v28);
  __chkstk_darwin(v30);
  v32 = (char *)&v128 - v31;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F15F8);
  __chkstk_darwin(v33);
  v152 = (uint64_t)&v128 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __chkstk_darwin(v35);
  v156 = (char *)&v128 - v37;
  v38 = (*(uint64_t (**)(double))&stru_108.segname[(swift_isaMask & **a1) + 8])(v36);
  sub_5BDB8((uint64_t)a1, (uint64_t)v32, type metadata accessor for SharePlayTogetherSessionManagementViewController.ParticipantView);
  v154 = v11;
  if ((v38 & 1) == 0)
  {
    sub_5C0DC((uint64_t)v32, type metadata accessor for SharePlayTogetherSessionManagementViewController.ParticipantView);
    sub_5BDB8((uint64_t)a1, (uint64_t)v29, type metadata accessor for SharePlayTogetherSessionManagementViewController.ParticipantView);
LABEL_5:
    v40 = *(uint64_t (**)(void))&stru_108.segname[swift_isaMask & *(_QWORD *)*v29];
    v41 = *v29;
    v42 = v40();

    sub_5C04C((uint64_t)v29, (uint64_t)v26, type metadata accessor for SharePlayTogetherSessionManagementViewController.ParticipantView);
    if ((v42 & 1) != 0)
    {
      v43 = v26[*(int *)(v22 + 20) + 33];
      sub_5C0DC((uint64_t)v26, type metadata accessor for SharePlayTogetherSessionManagementViewController.ParticipantView);
      if ((v43 & 1) != 0)
        goto LABEL_7;
    }
    else
    {
      sub_5C0DC((uint64_t)v26, type metadata accessor for SharePlayTogetherSessionManagementViewController.ParticipantView);
    }
    v75 = 1;
    v76 = (uint64_t)v156;
    v78 = v150;
    v77 = v151;
    goto LABEL_13;
  }
  v39 = v32[*(int *)(v22 + 20) + 32];
  sub_5C0DC((uint64_t)v32, type metadata accessor for SharePlayTogetherSessionManagementViewController.ParticipantView);
  sub_5BDB8((uint64_t)a1, (uint64_t)v29, type metadata accessor for SharePlayTogetherSessionManagementViewController.ParticipantView);
  if (v39 != 1)
    goto LABEL_5;
  sub_5C0DC((uint64_t)v29, type metadata accessor for SharePlayTogetherSessionManagementViewController.ParticipantView);
LABEL_7:
  v137 = a1;
  v129 = v22;
  v130 = *(int *)(v22 + 24);
  v44 = *((_BYTE *)a1 + v130);
  v45 = v147;
  sub_5BDB8((uint64_t)a1, v147, type metadata accessor for SharePlayTogetherSessionManagementViewController.ParticipantView);
  v46 = *(unsigned __int8 *)(v146 + 80);
  v47 = (v46 + 16) & ~v46;
  v48 = swift_allocObject(&unk_1394968, v47 + v23, v46 | 7);
  sub_5C04C(v45, v48 + v47, type metadata accessor for SharePlayTogetherSessionManagementViewController.ParticipantView);
  v49 = v142;
  v159 = Int.seconds.getter(32);
  v50 = sub_D7174();
  ScaledMetric.init(wrappedValue:)(&v159, &type metadata for CGFloat, v50);
  *v16 = v44;
  *((_QWORD *)v16 + 1) = sub_A2D78C;
  *((_QWORD *)v16 + 2) = v48;
  *((_QWORD *)v16 + 3) = sub_A25504;
  *((_QWORD *)v16 + 4) = 0;
  KeyPath = swift_getKeyPath(&unk_10916B0);
  v53 = static Color.white.getter(v52);
  v54 = objc_msgSend((id)objc_opt_self(UIColor), "_carSystemFocusPrimaryColor");
  v55 = Color.init(_:)(v54);
  v57 = static Color.primary.getter(v56);
  v58 = Color.opacity(_:)(0.1);
  swift_release(v57);
  v159 = *(double *)&KeyPath;
  v160 = 0;
  v161 = v53;
  v162 = v55;
  v59 = v148;
  v163 = v58;
  v164 = v148;
  v60 = sub_5C150(&qword_14F1630, &qword_14F15E0, (uint64_t)&unk_10917E0);
  v61 = sub_A2D700();
  swift_retain(v59);
  View.buttonStyle<A>(_:)(&v159, v49, &type metadata for SharePlayTogetherSessionManagementViewController.FocusableButtonStyle, v60, v61);
  swift_release(v59);
  swift_release(v58);
  swift_release(v55);
  swift_release(v53);
  swift_release(KeyPath);
  sub_56024((uint64_t)v16, &qword_14F15E0);
  if (*((_BYTE *)v137 + v130) == 1)
  {
    v62 = (void *)v139;
    v63 = v138;
    v64 = &v138[*(int *)(v139 + 20)];
    v65 = enum case for RoundedCornerStyle.continuous(_:);
    v66 = type metadata accessor for RoundedCornerStyle(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 104))(v64, v65, v66);
    __asm { FMOV            V0.2D, #6.0 }
    *v63 = _Q0;
    v72 = sub_4DD24(&qword_14F1628, (uint64_t (*)(uint64_t))&type metadata accessor for RoundedRectangle, (uint64_t)&protocol conformance descriptor for RoundedRectangle);
    v73 = (unint64_t)v63;
    v74 = v62;
  }
  else
  {
    v73 = sub_A2D744();
    v74 = &type metadata for Circle;
    v72 = v73;
  }
  v79 = AnyShape.init<A>(_:)(v73, v74, v72);
  v76 = (uint64_t)v156;
  v22 = v129;
  v78 = v150;
  v77 = v151;
  v80 = v141;
  v81 = v140;
  v82 = (uint64_t)v144;
  v83 = v149;
  (*(void (**)(char *, char *, uint64_t))(v140 + 16))(v144, v149, v141);
  v84 = v82 + *(int *)(v77 + 36);
  *(_QWORD *)v84 = v79;
  *(_WORD *)(v84 + 8) = 256;
  (*(void (**)(char *, uint64_t))(v81 + 8))(v83, v80);
  v85 = v143;
  sub_5C090(v82, v143, &qword_14F15F0);
  sub_5C090(v85, v76, &qword_14F15F0);
  v75 = 0;
  a1 = v137;
LABEL_13:
  v86 = 1;
  v87 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v78 + 56))(v76, v75, 1, v77);
  if (((*(uint64_t (**)(uint64_t))&stru_108.segname[(swift_isaMask & **a1) + 8])(v87) & 1) != 0
    && *((_BYTE *)a1 + *(int *)(v22 + 20) + 32) == 1)
  {
    v151 = *(int *)(v22 + 24);
    v88 = *((_BYTE *)a1 + v151);
    v89 = v147;
    sub_5BDB8((uint64_t)a1, v147, type metadata accessor for SharePlayTogetherSessionManagementViewController.ParticipantView);
    v90 = *(unsigned __int8 *)(v146 + 80);
    v91 = (v90 + 16) & ~v90;
    v92 = swift_allocObject(&unk_1394940, v91 + v23, v90 | 7);
    sub_5C04C(v89, v92 + v91, type metadata accessor for SharePlayTogetherSessionManagementViewController.ParticipantView);
    v93 = (uint64_t)v131;
    v159 = Int.seconds.getter(32);
    v94 = sub_D7174();
    ScaledMetric.init(wrappedValue:)(&v159, &type metadata for CGFloat, v94);
    *(_BYTE *)v93 = v88;
    *(_QWORD *)(v93 + 8) = sub_A2D678;
    *(_QWORD *)(v93 + 16) = v92;
    *(_QWORD *)(v93 + 24) = sub_A256B0;
    *(_QWORD *)(v93 + 32) = 0;
    v95 = swift_getKeyPath(&unk_10916B0);
    v97 = static Color.white.getter(v96);
    v98 = objc_msgSend((id)objc_opt_self(UIColor), "_carSystemFocusPrimaryColor");
    v99 = Color.init(_:)(v98);
    v100 = static Color.green.getter();
    v159 = *(double *)&v95;
    v160 = 0;
    v161 = v97;
    v162 = v99;
    v101 = v148;
    v163 = v100;
    v164 = v148;
    v102 = sub_5C150(&qword_14F1610, &qword_14F15C0, (uint64_t)&unk_10917E0);
    v103 = a1;
    v104 = sub_A2D700();
    swift_retain(v101);
    v105 = v134;
    View.buttonStyle<A>(_:)(&v159, v145, &type metadata for SharePlayTogetherSessionManagementViewController.FocusableButtonStyle, v102, v104);
    v106 = v101;
    v76 = (uint64_t)v156;
    swift_release(v106);
    swift_release(v100);
    swift_release(v99);
    swift_release(v97);
    swift_release(v95);
    sub_56024(v93, &qword_14F15C0);
    if (*((_BYTE *)v103 + v151) == 1)
    {
      v107 = (void *)v139;
      v108 = v138;
      v109 = &v138[*(int *)(v139 + 20)];
      v110 = enum case for RoundedCornerStyle.continuous(_:);
      v111 = type metadata accessor for RoundedCornerStyle(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v111 - 8) + 104))(v109, v110, v111);
      __asm { FMOV            V0.2D, #6.0 }
      *v108 = _Q0;
      v113 = sub_4DD24(&qword_14F1628, (uint64_t (*)(uint64_t))&type metadata accessor for RoundedRectangle, (uint64_t)&protocol conformance descriptor for RoundedRectangle);
      v114 = (unint64_t)v108;
      v115 = v107;
    }
    else
    {
      v114 = sub_A2D744();
      v115 = &type metadata for Circle;
      v113 = v114;
    }
    v116 = AnyShape.init<A>(_:)(v114, v115, v113);
    v117 = v135;
    v118 = (uint64_t)v133;
    v119 = v136;
    (*(void (**)(char *, char *, uint64_t))(v135 + 16))(v133, v105, v136);
    v120 = v118 + *(int *)(v158 + 36);
    *(_QWORD *)v120 = v116;
    *(_WORD *)(v120 + 8) = 256;
    (*(void (**)(char *, uint64_t))(v117 + 8))(v105, v119);
    v121 = v132;
    sub_5C090(v118, v132, &qword_14F15D0);
    sub_5C090(v121, v157, &qword_14F15D0);
    v86 = 0;
  }
  v122 = v157;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v153 + 56))(v157, v86, 1, v158);
  v123 = v152;
  sub_5C238(v76, v152, &qword_14F15F8);
  v124 = (uint64_t)v154;
  sub_5C238(v122, (uint64_t)v154, &qword_14F15D8);
  v125 = v155;
  sub_5C238(v123, v155, &qword_14F15F8);
  v126 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14F1600);
  sub_5C238(v124, v125 + *(int *)(v126 + 48), &qword_14F15D8);
  sub_56024(v122, &qword_14F15D8);
  sub_56024(v76, &qword_14F15F8);
  sub_56024(v124, &qword_14F15D8);
  return sub_56024(v123, &qword_14F15F8);
}

double sub_A25504()
{
  uint64_t v0;
  double v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t KeyPath;
  double v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double result;
  _QWORD v19[4];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F1638);
  v1 = __chkstk_darwin(v0);
  v3 = (char *)v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v3 = static VerticalAlignment.center.getter(v1);
  *((_QWORD *)v3 + 1) = 0;
  v3[16] = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_14F1640);
  v4 = Image.init(systemName:)(0x6B72616D78, 0xE500000000000000);
  v5 = static Font.subheadline.getter(v4);
  KeyPath = swift_getKeyPath(&unk_1091440);
  v19[1] = v4;
  v19[2] = KeyPath;
  v19[3] = v5;
  v7 = static Font.Weight.bold.getter(KeyPath);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14B5688);
  v9 = sub_8220D0();
  View.fontWeight(_:)(*(_QWORD *)&v7, 0, v8, v9);
  swift_release(v5);
  swift_release(KeyPath);
  swift_release(v4);
  v10 = LocalizedStringKey.init(stringLiteral:)(2037278020, 0xE400000000000000);
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v17 = sub_5C150(&qword_14F1648, &qword_14F1638, (uint64_t)&protocol conformance descriptor for HStack<A>);
  View.accessibilityLabel(_:)(v10, v12, v14 & 1, v16, v0, v17);
  sub_56024((uint64_t)v3, &qword_14F1638);
  swift_bridgeObjectRelease();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

double sub_A256B0@<D0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v3;

  *(_QWORD *)a1 = static VerticalAlignment.center.getter(a2);
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F1650);
  return sub_A256F4(a1 + *(int *)(v3 + 44));
}

double sub_A256F4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t KeyPath;
  double v13;
  uint64_t v14;
  unint64_t v15;
  __n128 v16;
  uint64_t OpaqueTypeConformance2;
  uint64_t v18;
  uint64_t v19;
  double result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;

  v27 = a1;
  v1 = type metadata accessor for AccessibilityTraits(0);
  v25 = *(_QWORD *)(v1 - 8);
  v26 = v1;
  __chkstk_darwin(v1);
  v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F12A0);
  v5 = *(_QWORD *)(v4 - 8);
  v22 = v4;
  v23 = v5;
  __chkstk_darwin(v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14F1658);
  __chkstk_darwin(v24);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = Image.init(systemName:)(0x72616D6B63656863, 0xE90000000000006BLL);
  v11 = static Font.subheadline.getter(v10);
  KeyPath = swift_getKeyPath(&unk_1091440);
  v28 = v10;
  v29 = KeyPath;
  v30 = v11;
  v13 = static Font.Weight.bold.getter(KeyPath);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_14B5688);
  v15 = sub_8220D0();
  View.fontWeight(_:)(*(_QWORD *)&v13, 0, v14, v15);
  swift_release(v11);
  swift_release(KeyPath);
  v16 = swift_release(v10);
  static AccessibilityTraits.isSelected.getter(v16);
  v28 = v14;
  v29 = v15;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v28, &opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>, 1);
  v18 = v22;
  View.accessibilityRemoveTraits(_:)(v3, v22, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v3, v26);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v18);
  v19 = LocalizedStringKey.init(stringLiteral:)(0x747065636341, 0xE600000000000000);
  ModifiedContent<>.accessibilityLabel(_:)(v19);
  sub_56024((uint64_t)v9, (uint64_t *)&unk_14F1658);
  swift_bridgeObjectRelease();
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

uint64_t sub_A25930@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t WitnessTable;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  void (*v17)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;

  v20 = a2;
  v4 = *(_QWORD *)(a1 + 16);
  v5 = type metadata accessor for ModifiedContent(255, v4, &type metadata for _FrameLayout);
  v25 = *(_QWORD *)(a1 + 24);
  v6 = v25;
  v26 = &protocol witness table for _FrameLayout;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v5);
  v8 = type metadata accessor for Button(0, v5, WitnessTable);
  v19 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v19 - v12;
  v14 = *(_QWORD *)(v2 + 8);
  v15 = *(_QWORD *)(v2 + 16);
  v22 = v4;
  v23 = v6;
  v24 = v2;
  v16 = swift_retain(v15);
  Button.init(action:label:)(v14, v15, sub_A2E864, v21, v5, WitnessTable, v16);
  swift_getWitnessTable(&protocol conformance descriptor for Button<A>, v8);
  sub_505E64((uint64_t)v10, v8, (uint64_t)v13);
  v17 = *(void (**)(char *, uint64_t))(v19 + 8);
  v17(v10, v8);
  sub_4FF1F4((uint64_t)v13, v8, v20);
  return ((uint64_t (*)(char *, uint64_t))v17)(v13, v8);
}

uint64_t sub_A25AB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;

  v28 = a4;
  v7 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin(a1);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ModifiedContent(0, v10, &type metadata for _FrameLayout);
  v27 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v26 - v16;
  v18 = (_QWORD *)(*(uint64_t (**)(double))(a1 + 24))(v15);
  if ((*(_BYTE *)a1 & 1) != 0)
  {
    v20 = 0x4051800000000000;
    v21 = 0x4041000000000000;
  }
  else
  {
    type metadata accessor for SharePlayTogetherSessionManagementViewController.ScaledButton(0, a2, a3, v19);
    v26 = a3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_14B5420);
    ScaledMetric.wrappedValue.getter(&v31);
    v20 = v31;
    a3 = v26;
    __swift_instantiateConcreteTypeFromMangledName(&qword_14B5420);
    v18 = ScaledMetric.wrappedValue.getter(&v31);
    v21 = v31;
  }
  v22 = static Alignment.center.getter(v18);
  View.frame(width:height:alignment:)(v20, 0, v21, 0, v22, v23, a2, a3);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, a2);
  v29 = a3;
  v30 = &protocol witness table for _FrameLayout;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v11);
  sub_505E64((uint64_t)v13, v11, (uint64_t)v17);
  v24 = *(void (**)(char *, uint64_t))(v27 + 8);
  v24(v13, v11);
  sub_4FF1F4((uint64_t)v17, v11, v28);
  return ((uint64_t (*)(char *, uint64_t))v24)(v17, v11);
}

uint64_t sub_A25CC4@<X0>(uint64_t a1@<X8>)
{
  _QWORD **v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  char v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  char v49;
  char v50;
  char v51;
  char v52;
  char v53;
  _BYTE v54[8];
  __int128 v55;
  uint64_t v56;
  char v57;
  __int128 v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  char v70;
  id v71;
  uint64_t v72;
  _QWORD v73[5];
  _BYTE v74[8];
  __int128 v75;
  uint64_t v76;
  char v77;
  __int128 v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  char v90;
  void *v91;
  uint64_t v92;
  __int128 v93;
  __int128 v94;
  uint64_t v95;
  __int128 v96;
  __int128 v97;
  uint64_t v98;
  _BYTE v99[184];

  v2 = (uint64_t)v1;
  v46 = a1;
  v3 = type metadata accessor for SharePlayTogetherSessionManagementViewController.QRCodeCell(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DynamicTypeSize(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(_QWORD *__return_ptr, double))&stru_248.segname[swift_isaMask & **v1])(v73, v9);
  v45 = v73[1];
  v12 = (void *)v73[3];
  *(_QWORD *)&v44 = v73[2];
  sub_5C090((uint64_t)v73, (uint64_t)&v93, &qword_14F1210);
  if (*((_QWORD *)&v94 + 1))
  {
    v98 = v95;
    v96 = v93;
    v97 = v94;
    v42 = v12;
    v13 = sub_724544((uint64_t)v11);
    LODWORD(v43) = DynamicTypeSize.isAccessibilitySize.getter(v13);
    v14 = *(void (**)(char *, uint64_t))(v8 + 8);
    v14(v11, v7);
    v15 = sub_724544((uint64_t)v11);
    v16 = DynamicTypeSize.isAccessibilitySize.getter(v15);
    v14(v11, v7);
    if ((v16 & 1) != 0)
      v17 = 0;
    else
      v17 = 0x4034000000000000;
    sub_5BDB8(v2, (uint64_t)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SharePlayTogetherSessionManagementViewController.QRCodeCell);
    v18 = *(unsigned __int8 *)(v4 + 80);
    v19 = (v18 + 16) & ~v18;
    v20 = (v5 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
    v21 = swift_allocObject(&unk_13948C8, v20 + 40, v18 | 7);
    sub_5C04C((uint64_t)v6, v21 + v19, type metadata accessor for SharePlayTogetherSessionManagementViewController.QRCodeCell);
    v22 = v21 + v20;
    v23 = v97;
    *(_OWORD *)v22 = v96;
    *(_OWORD *)(v22 + 16) = v23;
    *(_QWORD *)(v22 + 32) = v98;
    sub_50CB4(v45, v44);
    v24 = static Alignment.center.getter(v42);
    v26 = v25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_14F14B0);
    sub_5C150(&qword_14F14B8, &qword_14F14B0, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    v27 = AxisStack.init(axis:alignment:spacing:content:)(v43 & 1, v24, v26, v17, 0, (uint64_t)sub_A2D174, v21, (uint64_t)v74);
    LODWORD(v45) = v74[0];
    v44 = v75;
    v43 = v76;
    LOBYTE(v24) = v77;
    v28 = static Alignment.center.getter(v27);
    _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(&v79, 0, 1, 0, 1, 0, 1, 0x405C800000000000, 0, 0, 1, 0, 1, v28, v29);
    LOBYTE(v19) = v80;
    v30 = v81;
    v31 = v82;
    v32 = v83;
    v33 = v84;
    v37 = v85;
    v38 = v79;
    LOBYTE(v21) = v86;
    v34 = v88;
    v39 = v87;
    v40 = v89;
    LOBYTE(v26) = v90;
    v41 = v92;
    v42 = v91;
    sub_A2ADF4((uint64_t)v73);
    v53 = v24;
    v52 = v19;
    v51 = v31;
    v50 = v33;
    v49 = v21;
    v48 = v34;
    v47 = v26;
    v54[0] = v45;
    v55 = v44;
    v56 = v43;
    v57 = v24;
    v58 = v78;
    v59 = v38;
    v60 = v19;
    v61 = v30;
    v62 = v31;
    v63 = v32;
    v64 = v33;
    v65 = v37;
    v66 = v21;
    v67 = v39;
    v68 = v34;
    v69 = v40;
    v70 = v26;
    v71 = v42;
    v72 = v41;
    UIScreen.Dimensions.size.getter(*(double *)&v78);
  }
  else
  {
    sub_A2D064((uint64_t)v54);
  }
  sub_5C090((uint64_t)v54, (uint64_t)v99, &qword_14F14A8);
  return sub_5C090((uint64_t)v99, v46, &qword_14F14A8);
}

double sub_A260DC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  _BYTE *v33;
  __n128 v34;
  uint64_t *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  double result;
  _BYTE v46[12];
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  uint64_t v54;
  _BYTE *v55;
  uint64_t v56;
  uint64_t v57;
  char v58[16];
  uint64_t v59;

  v54 = a2;
  v52 = a1;
  v4 = type metadata accessor for SharePlayTogetherSessionManagementViewController.QRCodeCell(0);
  v51 = *(_QWORD *)(v4 - 8);
  v5 = *(_QWORD *)(v51 + 64);
  __chkstk_darwin(v4);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F14C0);
  v7 = *(_QWORD *)(v6 - 8);
  v56 = v6;
  v57 = v7;
  __chkstk_darwin(v6);
  v53 = &v46[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F14C8);
  __chkstk_darwin(v9);
  v11 = &v46[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  v55 = &v46[-v13];
  v14 = LocalizedStringKey.init(stringLiteral:)(0xD00000000000004DLL, 0x80000000010FBFF0);
  v15 = Text.init(_:tableName:bundle:comment:)(v14);
  v17 = v16;
  v19 = v18;
  v21 = v20 & 1;
  v22 = static Font.subheadline.getter(v15);
  v23 = Text.font(_:)(v22, v15, v17, v21, v19);
  v48 = v24;
  v49 = v23;
  v26 = v25;
  v50 = v27;
  swift_release(v22);
  v47 = v26 & 1;
  sub_AF8E8(v15, v17, v21);
  swift_bridgeObjectRelease();
  sub_5BDB8(v52, (uint64_t)&v46[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], type metadata accessor for SharePlayTogetherSessionManagementViewController.QRCodeCell);
  v28 = *(unsigned __int8 *)(v51 + 80);
  v29 = (v28 + 16) & ~v28;
  v30 = swift_allocObject(&unk_13948F0, v29 + v5, v28 | 7);
  sub_5C04C((uint64_t)&v46[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], v30 + v29, type metadata accessor for SharePlayTogetherSessionManagementViewController.QRCodeCell);
  v59 = v54;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F14D0);
  v32 = sub_A2D2D8();
  v33 = v53;
  Button.init(action:label:)(sub_A2D28C, v30, sub_A2D2D0, v58, v31, v32, v34);
  v35 = AccessibilityString.qrCodeButtonLabel.unsafeMutableAddressor();
  v36 = *v35;
  v37 = v35[1];
  v38 = sub_5C150(&qword_14F14F8, &qword_14F14C0, (uint64_t)&protocol conformance descriptor for Button<A>);
  swift_bridgeObjectRetain();
  v39 = v56;
  v40 = View.accessibilityLabel(_:)(v36, v37, v56, v38);
  (*(void (**)(_BYTE *, uint64_t, double))(v57 + 8))(v33, v39, v40);
  swift_bridgeObjectRelease();
  v41 = v55;
  sub_5C090((uint64_t)v11, (uint64_t)v55, &qword_14F14C8);
  sub_5C238((uint64_t)v41, (uint64_t)v11, &qword_14F14C8);
  v43 = v48;
  v42 = v49;
  *(_QWORD *)a3 = v49;
  *(_QWORD *)(a3 + 8) = v43;
  LOBYTE(v15) = v47;
  *(_BYTE *)(a3 + 16) = v47;
  *(_QWORD *)(a3 + 24) = v50;
  *(_QWORD *)(a3 + 32) = 0;
  *(_BYTE *)(a3 + 40) = 1;
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F1500);
  sub_5C238((uint64_t)v11, a3 + *(int *)(v44 + 64), &qword_14F14C8);
  sub_AF8D8(v42, v43, v15);
  swift_bridgeObjectRetain();
  sub_56024((uint64_t)v41, &qword_14F14C8);
  sub_56024((uint64_t)v11, &qword_14F14C8);
  sub_AF8E8(v42, v43, v15);
  *(_QWORD *)&result = swift_bridgeObjectRelease().n128_u64[0];
  return result;
}

double sub_A26458@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  __n128 v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  double result;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  __int128 v24;

  v3 = *(void **)(a1 + 24);
  v4 = QRCodeOverlayViewController.ImageViewRepresentable.init(image:)();
  v6 = v5;
  v8 = v7;
  v9 = v3;
  v11 = static Color.white.getter(v10);
  KeyPath = swift_getKeyPath(&unk_1091470);
  v13 = static Alignment.center.getter(KeyPath);
  _FrameLayout.init(width:height:alignment:)(&v20, 0x4059000000000000, 0, 0x4059000000000000, 0, v13, v14);
  v15 = v20;
  v16 = v21;
  v17 = v22;
  v18 = v23;
  *(_QWORD *)a2 = v4;
  *(_BYTE *)(a2 + 8) = v6 & 1;
  *(_QWORD *)(a2 + 16) = v8;
  *(_QWORD *)(a2 + 24) = KeyPath;
  *(_QWORD *)(a2 + 32) = v11;
  *(_QWORD *)(a2 + 40) = v15;
  *(_BYTE *)(a2 + 48) = v16;
  *(_QWORD *)(a2 + 56) = v17;
  *(_BYTE *)(a2 + 64) = v18;
  result = *(double *)&v24;
  *(_OWORD *)(a2 + 72) = v24;
  return result;
}

uint64_t sub_A26520@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t KeyPath;
  uint64_t *v20;
  void (*v21)(char *, uint64_t, __n128);
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char *v28;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v3 = v2;
  v34 = a1;
  v4 = type metadata accessor for ButtonStyleConfiguration.Label(0, a2);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F1908);
  __chkstk_darwin(v8);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F1910);
  v32 = *(_QWORD *)(v11 - 8);
  v33 = v11;
  v12 = __chkstk_darwin(v11);
  v31 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  ButtonStyleConfiguration.label.getter(v12);
  v14 = *v2;
  v15 = *((_BYTE *)v3 + 8);
  sub_270050(*v3, v15);
  v16 = sub_7247DC(v14, v15);
  sub_270154(v14, v15);
  v17 = 2;
  if ((v16 & 1) != 0)
    v17 = 3;
  v18 = v3[v17];
  KeyPath = swift_getKeyPath(&unk_1091470);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v10, v7, v4);
  v20 = (uint64_t *)&v10[*(int *)(v8 + 36)];
  *v20 = KeyPath;
  v20[1] = v18;
  v21 = *(void (**)(char *, uint64_t, __n128))(v5 + 8);
  v22 = swift_retain(v18);
  v21(v7, v4, v22);
  sub_270050(v14, v15);
  LOBYTE(v18) = sub_7247DC(v14, v15);
  sub_270154(v14, v15);
  v23 = 4;
  if ((v18 & 1) != 0)
    v23 = 5;
  v24 = v3[v23];
  v35 = v24;
  swift_retain(v24);
  v26 = static Edge.Set.all.getter(v25);
  v27 = sub_A2E870();
  v28 = v31;
  View.background<A>(_:ignoresSafeAreaEdges:)(&v35, v26, v8, &type metadata for Color, v27, &protocol witness table for Color);
  swift_release(v24);
  sub_56024((uint64_t)v10, &qword_14F1908);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v32 + 32))(v34, v28, v33);
}

uint64_t sub_A26768(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v6 + 152) = a5;
  *(_QWORD *)(v6 + 160) = v5;
  *(_QWORD *)(v6 + 136) = a2;
  *(_QWORD *)(v6 + 144) = a4;
  *(_BYTE *)(v6 + 296) = a3;
  *(_QWORD *)(v6 + 128) = a1;
  v7 = type metadata accessor for Logger(0);
  *(_QWORD *)(v6 + 168) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v6 + 176) = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v6 + 184) = swift_task_alloc(v9);
  *(_QWORD *)(v6 + 192) = swift_task_alloc(v9);
  *(_QWORD *)(v6 + 200) = swift_task_alloc(v9);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD5A0);
  *(_QWORD *)(v6 + 208) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v6 + 216) = v11;
  *(_QWORD *)(v6 + 224) = static MainActor.shared.getter(v12);
  v13 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor);
  *(_QWORD *)(v6 + 232) = v13;
  *(_QWORD *)(v6 + 240) = v14;
  return swift_task_switch(sub_A2684C, v13, v14);
}

uint64_t sub_A2684C()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  unsigned __int8 v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  void *v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t);
  id v38;
  uint64_t v39;
  _QWORD *v40;
  char v41;

  v1 = (void *)objc_opt_self(ICMediaUserStateCenter);
  v2 = objc_msgSend(v1, "shared");
  v3 = objc_msgSend(v2, "activeUserState");

  if (v3)
  {
    v4 = objc_msgSend(v3, "music");
    if (v4 && (v5 = v4, v6 = objc_msgSend(v4, "userProfile"), v5, v6))
    {
      v7 = objc_msgSend(v6, "collaborationAllowed");

      v8 = v7 ^ 1;
    }
    else
    {
      v8 = 1;
    }
    v41 = v8;
    v9 = *(_QWORD *)(v0 + 208);
    v11 = *(_QWORD *)(v0 + 144);
    v10 = *(_QWORD *)(v0 + 152);
    v12 = *(_BYTE *)(v0 + 296);
    v13 = *(void **)(v0 + 128);
    v14 = *(void **)(v0 + 136);
    v15 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v9, 1, 1, v15);
    v16 = v13;
    sub_A9DEC(v11, v10);
    v17 = v14;
    v19 = static MainActor.shared.getter(v18);
    v20 = swift_allocObject(&unk_1394228, 66, 7);
    *(_QWORD *)(v20 + 16) = v19;
    *(_QWORD *)(v20 + 24) = &protocol witness table for MainActor;
    *(_QWORD *)(v20 + 32) = v16;
    *(_QWORD *)(v20 + 40) = v11;
    *(_QWORD *)(v20 + 48) = v10;
    *(_QWORD *)(v20 + 56) = v17;
    *(_BYTE *)(v20 + 64) = v41;
    *(_BYTE *)(v20 + 65) = v12;
    sub_2223C8(v9, (uint64_t)&unk_14F10E8, v20);
    swift_release();

    swift_release();
    v21 = *(_QWORD *)(v0 + 200);
    v23 = *(_QWORD *)(v0 + 184);
    v22 = *(_QWORD *)(v0 + 192);
    swift_task_dealloc(*(_QWORD *)(v0 + 208));
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v25 = *(_QWORD *)(v0 + 200);
    v26 = *(_QWORD *)(v0 + 168);
    v27 = *(_QWORD *)(v0 + 176);
    v28 = Logger.sharePlayTogether.unsafeMutableAddressor();
    *(_QWORD *)(v0 + 248) = v28;
    v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 16);
    *(_QWORD *)(v0 + 256) = v29;
    v30 = v29(v25, v28, v26);
    v31 = Logger.logObject.getter(v30);
    v32 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v33 = 0;
      _os_log_impl(&dword_0, v31, v32, "Couldn't get activeUserState, reloading", v33, 2u);
      swift_slowDealloc(v33, -1, -1);
    }
    v34 = v0 + 16;
    v35 = *(_QWORD *)(v0 + 200);
    v36 = *(_QWORD *)(v0 + 168);
    v37 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 176) + 8);
    *(_QWORD *)(v0 + 264) = v37;
    v37(v35, v36);

    v38 = objc_msgSend(v1, "shared");
    *(_QWORD *)(v0 + 272) = v38;
    *(_QWORD *)(v0 + 56) = v0 + 120;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_A26B74;
    v39 = swift_continuation_init(v0 + 16, 1);
    *(_QWORD *)(v0 + 80) = _NSConcreteStackBlock;
    v40 = (_QWORD *)(v0 + 80);
    v40[1] = 0x40000000;
    v40[2] = sub_55B958;
    v40[3] = &block_descriptor_258;
    v40[4] = v39;
    objc_msgSend(v38, "refreshUserStatesWithCompletion:", v40);
    return swift_continuation_await(v34);
  }
}

uint64_t sub_A26B74()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 280) = v2;
  if (v2)
    v3 = sub_A26F1C;
  else
    v3 = sub_A26BD0;
  return swift_task_switch(v3, *(_QWORD *)(v1 + 232), *(_QWORD *)(v1 + 240));
}

uint64_t sub_A26BD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD, uint64_t, uint64_t, __n128);
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  _QWORD *v11;
  uint64_t v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  __n128 v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = *(_QWORD *)(v0 + 120);

  if ((unint64_t)v1 >> 62)
  {
    if (v1 < 0)
      v27 = v1;
    else
      v27 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v2 = _CocoaArrayWrapper.endIndex.getter(v27);
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((char *)&dword_10 + (v1 & 0xFFFFFFFFFFFFF8));
  }
  v3 = swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(v0 + 248);
  v5 = *(uint64_t (**)(_QWORD, uint64_t, uint64_t, __n128))(v0 + 256);
  v6 = *(_QWORD *)(v0 + 168);
  if (v2)
  {
    v7 = v5(*(_QWORD *)(v0 + 192), v4, v6, v3);
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_0, v8, v9, "Got activeUserState, retrying", v10, 2u);
      swift_slowDealloc(v10, -1, -1);
    }
    (*(void (**)(_QWORD, _QWORD))(v0 + 264))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 168));

    v11 = (_QWORD *)swift_task_alloc(dword_14F10C4);
    *(_QWORD *)(v0 + 288) = v11;
    *v11 = v0;
    v11[1] = sub_A26E74;
    return sub_A26768(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), 0, 0, 0);
  }
  else
  {
    v13 = v5(*(_QWORD *)(v0 + 184), v4, v6, v3);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.error.getter(v14);
    if (os_log_type_enabled(v14, (os_log_type_t)v15))
    {
      v16 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_0, v14, (os_log_type_t)v15, "Failed to refresh activeUserState, returning", v16, 2u);
      swift_slowDealloc(v16, -1, -1);
    }
    v17 = *(_QWORD *)(v0 + 208);
    v18 = *(void **)(v0 + 136);
    (*(void (**)(_QWORD, _QWORD))(v0 + 264))(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 168));

    v19 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v17, 1, 1, v19);
    v20 = v18;
    v22 = static MainActor.shared.getter(v21);
    v23 = (_QWORD *)swift_allocObject(&unk_1394200, 40, 7);
    v23[2] = v22;
    v23[3] = &protocol witness table for MainActor;
    v23[4] = v20;
    sub_2223C8(v17, (uint64_t)&unk_14F10D8, (uint64_t)v23);
    swift_release();
    swift_release();
    v24 = *(_QWORD *)(v0 + 200);
    v26 = *(_QWORD *)(v0 + 184);
    v25 = *(_QWORD *)(v0 + 192);
    swift_task_dealloc(*(_QWORD *)(v0 + 208));
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_A26E74()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 288));
  return swift_task_switch(sub_A26EC0, *(_QWORD *)(v1 + 232), *(_QWORD *)(v1 + 240));
}

uint64_t sub_A26EC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  swift_release(*(_QWORD *)(v0 + 224));
  v1 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 192);
  swift_task_dealloc(*(_QWORD *)(v0 + 208));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_A26F1C(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  __n128 v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = *(void **)(v1 + 272);
  v3 = *(_QWORD *)(v1 + 280);
  swift_willThrow(a1);

  swift_errorRelease(v3);
  v4 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v1 + 256))(*(_QWORD *)(v1 + 184), *(_QWORD *)(v1 + 248), *(_QWORD *)(v1 + 168));
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.error.getter(v5);
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_0, v5, v6, "Failed to refresh activeUserState, returning", v7, 2u);
    swift_slowDealloc(v7, -1, -1);
  }
  v8 = *(_QWORD *)(v1 + 208);
  v9 = *(void **)(v1 + 136);
  (*(void (**)(_QWORD, _QWORD))(v1 + 264))(*(_QWORD *)(v1 + 184), *(_QWORD *)(v1 + 168));

  v10 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  v11 = v9;
  v13 = static MainActor.shared.getter(v12);
  v14 = (_QWORD *)swift_allocObject(&unk_1394200, 40, 7);
  v14[2] = v13;
  v14[3] = &protocol witness table for MainActor;
  v14[4] = v11;
  sub_2223C8(v8, (uint64_t)&unk_14F10D8, (uint64_t)v14);
  swift_release();
  swift_release();
  v15 = *(_QWORD *)(v1 + 200);
  v17 = *(_QWORD *)(v1 + 184);
  v16 = *(_QWORD *)(v1 + 192);
  swift_task_dealloc(*(_QWORD *)(v1 + 208));
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_A270A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;

  v4[8] = a4;
  v5 = type metadata accessor for AppInterfaceContext.Activity(0);
  v4[9] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[10] = v6;
  v7 = *(_QWORD *)(v6 + 64);
  v4[11] = v7;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[12] = swift_task_alloc(v8);
  v4[13] = swift_task_alloc(v8);
  v9 = type metadata accessor for Locale(0);
  v4[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for String.LocalizationValue(0);
  v4[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MainActor(0);
  v4[16] = static MainActor.shared.getter(v12);
  v13 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor);
  return swift_task_switch(sub_A2718C, v13, v14);
}

uint64_t sub_A2718C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  NSString v6;
  NSString v7;
  id v8;
  NSString v9;
  void *v10;
  id v11;
  uint64_t v12;
  NSString v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  id v32;
  _QWORD *v33;
  uint64_t v34;
  void (*v35)(uint64_t (*)(), uint64_t, __n128);
  _QWORD *v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v1 = v0[14];
  v2 = v0[15];
  v3 = (void *)v0[8];
  v4 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001ALL, 0x80000000010FBBC0);
  static Locale.current.getter(v4);
  String.init(localized:table:bundle:locale:comment:)(v2, 0, 0, 0, v1, 0, 0, 256);
  v5 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000048, 0x80000000010FBBE0);
  static Locale.current.getter(v5);
  String.init(localized:table:bundle:locale:comment:)(v2, 0, 0, 0, v1, 0, 0, 256);
  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v6, v7, 1);

  String.cancelButtonTitle.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v10 = (void *)objc_opt_self(UIAlertAction);
  v11 = objc_msgSend(v10, "actionWithTitle:style:handler:", v9, 1, 0);

  objc_msgSend(v8, "addAction:", v11);
  v12 = String.LocalizationValue.init(stringLiteral:)(0x73676E6974746553, 0xE800000000000000);
  static Locale.current.getter(v12);
  String.init(localized:table:bundle:locale:comment:)(v2, 0, 0, 0, v1, 0, 0, 256);
  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v0[2] = _NSConcreteStackBlock;
  v0[6] = sub_A27634;
  v0[7] = 0;
  v0[3] = 1107296256;
  v0[4] = sub_5FEBC;
  v0[5] = &block_descriptor_45_4;
  v14 = _Block_copy(v0 + 2);
  v15 = objc_msgSend(v10, "actionWithTitle:style:handler:", v13, 0, v14, swift_release(v0[7]).n128_f64[0]);
  _Block_release(v14);

  objc_msgSend(v8, "addAction:", v15);
  v16 = objc_msgSend(v3, "delegate");
  if (!v16)
  {
    v21 = v0[16];
    goto LABEL_7;
  }
  v17 = v16;
  v18 = type metadata accessor for AppSceneDelegate();
  v19 = swift_dynamicCastClass(v17, v18);
  if (!v19)
  {
    v21 = v0[16];
    swift_unknownObjectRelease(v17);
    goto LABEL_7;
  }
  v20 = *(_QWORD *)(v19 + OBJC_IVAR____TtC16MusicApplication16AppSceneDelegate_interfaceContext);
  swift_retain(v20);
  swift_unknownObjectRelease(v17);
  v21 = v0[16];
  if (!v20)
  {
LABEL_7:

    goto LABEL_8;
  }
  v23 = v0[12];
  v22 = v0[13];
  v25 = v0[10];
  v24 = v0[11];
  v26 = v0[9];
  *(_QWORD *)v22 = v8;
  *(_BYTE *)(v22 + 8) = 1;
  *(_QWORD *)(v22 + 16) = &_swiftEmptySetSingleton;
  swift_storeEnumTagMultiPayload(v22, v26, 2);
  sub_5BDB8(v22, v23, type metadata accessor for AppInterfaceContext.Activity);
  v27 = *(unsigned __int8 *)(v25 + 80);
  v28 = (v27 + 24) & ~v27;
  v29 = (v24 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
  v30 = swift_allocObject(&unk_1394430, v29 + 16, v27 | 7);
  *(_QWORD *)(v30 + 16) = v20;
  sub_5C04C(v23, v30 + v28, type metadata accessor for AppInterfaceContext.Activity);
  v31 = (_QWORD *)(v30 + v29);
  *v31 = 0;
  v31[1] = 0;
  swift_retain(v20);
  v32 = v8;
  v33 = (_QWORD *)*JSBridge.shared.unsafeMutableAddressor();
  v34 = swift_allocObject(&unk_1394458, 32, 7);
  *(_QWORD *)(v34 + 16) = sub_BCA64;
  *(_QWORD *)(v34 + 24) = v30;
  v35 = *(void (**)(uint64_t (*)(), uint64_t, __n128))&stru_B8.segname[(swift_isaMask & *v33) + 16];
  v36 = v33;
  v37 = swift_retain(v30);
  v35(sub_C31F4, v34, v37);
  swift_release(v34);

  swift_release(v30);
  sub_5C0DC(v22, type metadata accessor for AppInterfaceContext.Activity);
  swift_release(v20);
LABEL_8:
  swift_release(v21);
  v38 = v0[14];
  v40 = v0[12];
  v39 = v0[13];
  swift_task_dealloc(v0[15]);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  return ((uint64_t (*)(void))v0[1])();
}

void sub_A27634()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
  if (v0)
  {
    v1 = v0;
    LSApplicationWorkspace.openSettings()();

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_A2768C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  char v22;

  *(_BYTE *)(v8 + 241) = v22;
  *(_BYTE *)(v8 + 240) = a8;
  *(_QWORD *)(v8 + 48) = a6;
  *(_QWORD *)(v8 + 56) = a7;
  *(_QWORD *)(v8 + 32) = a4;
  *(_QWORD *)(v8 + 40) = a5;
  v9 = type metadata accessor for AppInterfaceContext.Activity(0);
  *(_QWORD *)(v8 + 64) = v9;
  v10 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 72) = v10;
  *(_QWORD *)(v8 + 80) = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C81F0);
  *(_QWORD *)(v8 + 88) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Logger(0);
  *(_QWORD *)(v8 + 96) = v12;
  v13 = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v8 + 104) = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v8 + 112) = swift_task_alloc(v14);
  *(_QWORD *)(v8 + 120) = swift_task_alloc(v14);
  *(_QWORD *)(v8 + 128) = swift_task_alloc(v14);
  *(_QWORD *)(v8 + 136) = swift_task_alloc(v14);
  v15 = type metadata accessor for Locale(0);
  *(_QWORD *)(v8 + 144) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v15 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for String.LocalizationValue(0);
  *(_QWORD *)(v8 + 152) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v16 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v8 + 160) = static MainActor.shared.getter(v18);
  v19 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
  *(_QWORD *)(v8 + 168) = v19;
  *(_QWORD *)(v8 + 176) = v20;
  return swift_task_switch(sub_A277E8, v19, v20);
}

uint64_t sub_A277E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  os_log_type_t v64;
  uint8_t *v65;
  void (*v66)(uint64_t, _QWORD);
  void *v67;
  id v68;
  double v69;
  id v70;
  unsigned int v71;
  uint64_t v72;
  id v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  Swift::Int v81;
  _QWORD *v82;
  __n128 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unsigned __int8 v97;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v97 = *(_BYTE *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 48);
  v3 = *(void **)(v0 + 56);
  v5 = *(void **)(v0 + 32);
  v6 = *(_QWORD *)(v0 + 40);
  v7 = (_QWORD *)swift_allocObject(&unk_1394250, 48, 7);
  *(_QWORD *)(v0 + 184) = v7;
  v7[2] = v5;
  v7[3] = v6;
  v7[4] = v4;
  v7[5] = v3;
  v8 = v5;
  sub_A9DEC(v6, v4);
  v9 = v3;
  v96 = Image.init(_internalSystemName:)(0x616C706572616873, 0xE900000000000079);
  v10 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000010, 0x80000000010FBA50);
  static Locale.current.getter(v10);
  v11 = String.init(localized:table:bundle:locale:comment:)(v2, 0, 0, 0, v1, 0, 0, 256);
  v13 = v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8740);
  v15 = swift_allocObject(v14, 72, 7);
  *(_OWORD *)(v15 + 16) = xmmword_105B360;
  v16 = objc_msgSend(v8, "hostDisplayName");
  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v19 = v18;
  *(_QWORD *)(v15 + 56) = &type metadata for String;
  *(_QWORD *)(v15 + 64) = sub_149430();
  *(_QWORD *)(v15 + 32) = v17;
  *(_QWORD *)(v15 + 40) = v19;

  v20 = String.init(format:_:)(v11, v13, v15);
  v94 = v21;
  v95 = v20;
  swift_bridgeObjectRelease();
  v22 = String.LocalizationValue.init(stringLiteral:)(0x100000000000004DLL, 0x80000000010FBA70);
  static Locale.current.getter(v22);
  v23 = String.init(localized:table:bundle:locale:comment:)(v2, 0, 0, 0, v1, 0, 0, 256);
  v25 = v24;
  v26 = String.LocalizationValue.init(stringLiteral:)(0x7341206E696F4ALL, 0xE700000000000000);
  static Locale.current.getter(v26);
  v27 = String.init(localized:table:bundle:locale:comment:)(v2, 0, 0, 0, v1, 0, 0, 256);
  v29 = v28;
  v30 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000042, 0x80000000010FBAC0);
  static Locale.current.getter(v30);
  v31 = String.init(localized:table:bundle:locale:comment:)(v2, 0, 0, 0, v1, 0, 0, 256);
  v33 = v32;
  v34 = swift_allocObject(&unk_1394278, 32, 7);
  *(_QWORD *)(v34 + 16) = sub_A29C80;
  *(_QWORD *)(v34 + 24) = v7;
  v35 = objc_allocWithZone((Class)type metadata accessor for SharePlayProxCardViewController(0));
  swift_retain(v7);
  v36 = (char *)sub_986C60(v96, v95, v94, v23, v25, v27, v29, v31, v33, (uint64_t)sub_A291E4, 0, 0, v97, (uint64_t)sub_129E54, v34, 0, 0);
  *(_QWORD *)(v0 + 192) = v36;
  if ((v97 & 1) != 0)
  {
    v37 = *(_QWORD *)(v0 + 128);
    v38 = *(_QWORD *)(v0 + 96);
    v39 = *(_QWORD *)(v0 + 104);
    v40 = Logger.sharePlayTogether.unsafeMutableAddressor();
    v41 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v39 + 16);
    v42 = v41(v37, v40, v38);
    v43 = Logger.logObject.getter(v42);
    v44 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v43, v44))
    {
      v45 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v45 = 0;
      _os_log_impl(&dword_0, v43, v44, "Presenting identity creation card", v45, 2u);
      swift_slowDealloc(v45, -1, -1);
    }
    v46 = *(_QWORD *)(v0 + 128);
  }
  else
  {
    if (*(_BYTE *)(v0 + 241) == 1)
    {
      v47 = *(_QWORD *)(v0 + 136);
      v48 = *(_QWORD *)(v0 + 96);
      v49 = *(_QWORD *)(v0 + 104);
      v50 = Logger.sharePlayTogether.unsafeMutableAddressor();
      v51 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v49 + 16))(v47, v50, v48);
      v52 = Logger.logObject.getter(v51);
      v53 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v52, v53))
      {
        v54 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v54 = 0;
        _os_log_impl(&dword_0, v52, v53, "Auto connecting", v54, 2u);
        swift_slowDealloc(v54, -1, -1);
      }
      v56 = *(_QWORD *)(v0 + 48);
      v55 = *(void **)(v0 + 56);
      v58 = *(_QWORD *)(v0 + 32);
      v57 = *(_QWORD *)(v0 + 40);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 96));

      sub_A28348(v36, v58, v57, v56, v55);
    }
    v59 = *(_QWORD *)(v0 + 120);
    v60 = *(_QWORD *)(v0 + 96);
    v61 = *(_QWORD *)(v0 + 104);
    v62 = Logger.sharePlayTogether.unsafeMutableAddressor();
    v41 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v61 + 16);
    v63 = v41(v59, v62, v60);
    v43 = Logger.logObject.getter(v63);
    v64 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v43, v64))
    {
      v65 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v65 = 0;
      _os_log_impl(&dword_0, v43, v64, "Presenting join card", v65, 2u);
      swift_slowDealloc(v65, -1, -1);
    }
    v46 = *(_QWORD *)(v0 + 120);
  }
  v66 = *(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 104) + 8);
  v66(v46, *(_QWORD *)(v0 + 96));
  *(_QWORD *)(v0 + 200) = v66;
  *(_QWORD *)(v0 + 208) = v41;
  v67 = *(void **)(v0 + 32);

  v68 = objc_msgSend(v67, "hostInfo");
  LODWORD(v67) = objc_msgSend(v68, "routeType");

  if ((_DWORD)v67 != 1)
  {
    v70 = objc_msgSend(*(id *)(v0 + 32), "hostInfo");
    v71 = objc_msgSend(v70, "routeType");

    if (v71 != 2)
    {
      if (qword_14AB278 != -1)
        swift_once(&qword_14AB278, sub_464438);
      v72 = qword_14CA450;
      swift_retain(qword_14CA450);
      sub_465418(2, 2u);
      *(_QWORD *)&v69 = swift_release(v72).n128_u64[0];
    }
  }
  v73 = objc_msgSend(*(id *)(v0 + 56), "delegate", v69);
  if (v73)
  {
    v74 = v73;
    v75 = type metadata accessor for AppSceneDelegate();
    v76 = swift_dynamicCastClass(v74, v75);
    if (v76)
    {
      v77 = *(_QWORD *)(v76 + OBJC_IVAR____TtC16MusicApplication16AppSceneDelegate_interfaceContext);
      *(_QWORD *)(v0 + 216) = v77;
      swift_retain(v77);
      swift_unknownObjectRelease(v74);
      if (v77)
      {
        v78 = *(_QWORD *)(v0 + 80);
        v79 = *(_QWORD *)(v0 + 64);
        v80 = v36;
        v81 = sub_4C07C((uint64_t)&off_133F740);
        swift_arrayDestroy(&unk_133F760, 2, &type metadata for AppInterfaceContext.Activity.PresentationOptions);
        *(_QWORD *)v78 = v80;
        *(_BYTE *)(v78 + 8) = 1;
        *(_QWORD *)(v78 + 16) = v81;
        swift_storeEnumTagMultiPayload(v78, v79, 2);
        v82 = (_QWORD *)swift_task_alloc(dword_14AF2DC);
        *(_QWORD *)(v0 + 224) = v82;
        *v82 = v0;
        v82[1] = sub_A27F58;
        return sub_B1498(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 80));
      }
    }
    else
    {
      swift_unknownObjectRelease(v74);
    }
  }

  v84 = swift_release(v7);
  v85 = *(_QWORD *)(v0 + 160);
  v86 = *(_QWORD *)(v0 + 88);
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD, __n128))(*(_QWORD *)(v0 + 72) + 56))(v86, 1, 1, *(_QWORD *)(v0 + 64), v84);
  sub_56024(v86, (uint64_t *)&unk_14C81F0);
  swift_release(v85);
  v87 = *(_QWORD *)(v0 + 144);
  v89 = *(_QWORD *)(v0 + 128);
  v88 = *(_QWORD *)(v0 + 136);
  v91 = *(_QWORD *)(v0 + 112);
  v90 = *(_QWORD *)(v0 + 120);
  v93 = *(_QWORD *)(v0 + 80);
  v92 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 152));
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v90);
  swift_task_dealloc(v91);
  swift_task_dealloc(v92);
  swift_task_dealloc(v93);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_A27F58()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 224);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  *(_QWORD *)(*(_QWORD *)v1 + 232) = v0;
  swift_task_dealloc(v3);
  sub_5C0DC(v4, type metadata accessor for AppInterfaceContext.Activity);
  if (v0)
  {
    v5 = v2[21];
    v6 = v2[22];
    v7 = sub_A280B4;
  }
  else
  {
    swift_release(v2[27]);
    v5 = v2[21];
    v6 = v2[22];
    v7 = sub_A27FE0;
  }
  return swift_task_switch(v7, v5, v6);
}

uint64_t sub_A27FE0()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 184);

  v2 = swift_release(v1);
  v3 = *(_QWORD *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 88);
  (*(void (**)(uint64_t, _QWORD, uint64_t, _QWORD, __n128))(*(_QWORD *)(v0 + 72) + 56))(v4, 0, 1, *(_QWORD *)(v0 + 64), v2);
  sub_56024(v4, (uint64_t *)&unk_14C81F0);
  swift_release(v3);
  v5 = *(_QWORD *)(v0 + 144);
  v7 = *(_QWORD *)(v0 + 128);
  v6 = *(_QWORD *)(v0 + 136);
  v9 = *(_QWORD *)(v0 + 112);
  v8 = *(_QWORD *)(v0 + 120);
  v11 = *(_QWORD *)(v0 + 80);
  v10 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 152));
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_A280B4()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  void *v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, __n128);
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t, __n128);
  uint64_t v38;
  uint64_t v39;

  v1 = *(_QWORD *)(v0 + 232);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 208);
  v3 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 96);
  swift_release(*(_QWORD *)(v0 + 216));
  v5 = Logger.sharePlayTogether.unsafeMutableAddressor();
  v2(v3, v5, v4);
  swift_errorRetain(v1);
  v6 = swift_errorRetain(v1);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.error.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v9 = *(_QWORD *)(v0 + 232);
    v10 = *(void **)(v0 + 192);
    v37 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 200);
    v38 = *(_QWORD *)(v0 + 160);
    v36 = *(_QWORD *)(v0 + 112);
    v34 = *(_QWORD *)(v0 + 184);
    v35 = *(_QWORD *)(v0 + 96);
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    *(_DWORD *)v11 = 136446210;
    v39 = v12;
    *(_QWORD *)(v0 + 16) = v9;
    swift_errorRetain(v9);
    v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD690);
    v14 = String.init<A>(describing:)(v0 + 16, v13);
    *(_QWORD *)(v0 + 24) = sub_23EAC8(v14, v15, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32);
    swift_bridgeObjectRelease();
    swift_errorRelease(v9);
    swift_errorRelease(v9);
    _os_log_impl(&dword_0, v7, v8, "Unable to present join card: %{public}s", v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);
    swift_errorRelease(v9);

    v16 = swift_release(v34);
    v37(v36, v35, v16);

    v17 = v38;
  }
  else
  {
    v18 = *(_QWORD *)(v0 + 232);
    v20 = *(void **)(v0 + 192);
    v19 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 200);
    v21 = *(_QWORD *)(v0 + 184);
    v22 = *(_QWORD *)(v0 + 160);
    v23 = *(_QWORD *)(v0 + 112);
    v24 = *(_QWORD *)(v0 + 96);
    swift_errorRelease(v18);
    swift_errorRelease(v18);
    swift_errorRelease(v18);

    v25 = swift_release(v21);
    v19(v23, v24, v25);

    v17 = v22;
  }
  swift_release(v17);
  v26 = *(_QWORD *)(v0 + 144);
  v28 = *(_QWORD *)(v0 + 128);
  v27 = *(_QWORD *)(v0 + 136);
  v30 = *(_QWORD *)(v0 + 112);
  v29 = *(_QWORD *)(v0 + 120);
  v32 = *(_QWORD *)(v0 + 80);
  v31 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 152));
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_A28348(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  _QWORD *v22;
  void (*v23)(uint64_t, double (*)(uint64_t), _QWORD *);
  char *v24;
  id v25;
  double result;
  uint64_t v27;
  char v28;

  v27 = a2;
  v9 = type metadata accessor for Logger(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)&a1[qword_14EBAD0];
  KeyPath = swift_getKeyPath(&unk_10913C0);
  v15 = swift_getKeyPath(&off_10913E8);
  v28 = 1;
  swift_retain(v13);
  static Published.subscript.setter(&v28, v13, KeyPath, v15);
  v16 = Logger.sharePlayTogether.unsafeMutableAddressor();
  v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v16, v9);
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v20 = 0;
    _os_log_impl(&dword_0, v18, v19, "Connecting to session", v20, 2u);
    swift_slowDealloc(v20, -1, -1);
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);

  if (qword_14AB560 != -1)
    swift_once(&qword_14AB560, sub_5BBE68);
  v21 = static UIApplication.player;
  v22 = (_QWORD *)swift_allocObject(&unk_13942A0, 48, 7);
  v22[2] = a1;
  v22[3] = a3;
  v22[4] = a4;
  v22[5] = a5;
  v23 = *(void (**)(uint64_t, double (*)(uint64_t), _QWORD *))(*(_QWORD *)v21 + 712);
  v24 = a1;
  sub_A9DEC(a3, a4);
  v25 = a5;
  v23(v27, sub_A29CF8, v22);
  *(_QWORD *)&result = swift_release(v22).n128_u64[0];
  return result;
}

double sub_A28544(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  void *v25;
  id v26;
  id v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  _QWORD *v33;
  double result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD aBlock[5];
  _QWORD *v42;

  v10 = type metadata accessor for DispatchWorkItemFlags(0);
  v39 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchQoS(0);
  v37 = *(_QWORD *)(v13 - 8);
  v38 = v13;
  __chkstk_darwin(v13);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_4E684(0, (unint64_t *)&qword_14AD360, OS_dispatch_queue_ptr);
  v36 = static OS_dispatch_queue.main.getter(v16, v17, v18, v19, v20, v21, v22, v23);
  v24 = (_QWORD *)swift_allocObject(&unk_13942C8, 56, 7);
  v24[2] = a1;
  v24[3] = a2;
  v24[4] = a3;
  v24[5] = a4;
  v24[6] = a5;
  aBlock[4] = sub_A29D48;
  v42 = v24;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_42D124;
  aBlock[3] = &block_descriptor_22_10;
  v25 = _Block_copy(aBlock);
  swift_errorRetain(a1);
  v26 = a2;
  sub_A9DEC(a3, a4);
  v27 = a5;
  static DispatchQoS.unspecified.getter(v28);
  v40 = _swiftEmptyArrayStorage;
  v29 = sub_4DD24((unint64_t *)&qword_14B1FC0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD370);
  v31 = sub_5C150((unint64_t *)&qword_14B1FD0, (uint64_t *)&unk_14AD370, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v40, v30, v31, v10, v29);
  v32 = (void *)v36;
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v15, v12, v25);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v12, v10);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v15, v38);
  _Block_release(v25);
  v33 = v42;

  *(_QWORD *)&result = swift_release(v33).n128_u64[0];
  return result;
}

void sub_A28784(char *a1, char *a2, void (*a3)(_QWORD), uint64_t a4, void *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  char *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  double v43;
  char *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t KeyPath;
  uint64_t v49;
  uint64_t v50;
  Swift::String v51;
  uint64_t v52;
  NSString v53;
  NSString v54;
  id v55;
  id v56;
  NSString v57;
  id v58;
  id v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  void (*v75)(void (*)(void **), uint64_t, __n128);
  _QWORD *v76;
  __n128 v77;
  void (*v78)(void **);
  NSString v79;
  id v80;
  NSString v81;
  id v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  void (*v97)(_QWORD);
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  id v106;
  char *v107;
  id v108[2];
  void **aBlock;
  _QWORD v110[4];
  uint64_t v111;

  v106 = a5;
  v107 = a2;
  v8 = type metadata accessor for AppInterfaceContext.Activity(0);
  v9 = *(_QWORD *)(v8 - 8);
  v102 = v8;
  v103 = v9;
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  __chkstk_darwin(v11);
  v13 = (char *)&v95 - v12;
  v14 = type metadata accessor for Locale(0);
  __chkstk_darwin(v14);
  v105 = (char *)&v95 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v16);
  v104 = (char *)&v95 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for Logger(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v95 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)&v95 - v23;
  if (a1)
  {
    v99 = v10;
    v100 = (uint64_t)&v95 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    v101 = v13;
    swift_errorRetain(a1);
    v25 = Logger.sharePlayTogether.unsafeMutableAddressor();
    (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, v25, v18);
    swift_errorRetain(a1);
    swift_errorRetain(a1);
    sub_D88B0();
    swift_bridgeObjectRelease();
    v27 = Logger.logObject.getter(v26);
    v28 = a1;
    v29 = static os_log_type_t.error.getter(v27);
    if (os_log_type_enabled(v27, v29))
    {
      v30 = swift_slowAlloc(12, -1);
      v98 = a4;
      v31 = (uint8_t *)v30;
      v96 = (uint64_t *)swift_slowAlloc(8, -1);
      v97 = a3;
      *(_DWORD *)v31 = 138543362;
      swift_errorRetain(a1);
      v32 = _swift_stdlib_bridgeErrorToNSError(a1);
      aBlock = (void **)v32;
      a3 = v97;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v110);
      v33 = v96;
      *v96 = v32;
      swift_errorRelease(v28);
      swift_errorRelease(v28);
      _os_log_impl(&dword_0, v27, v29, "Failed to join session: %{public}@", v31, 0xCu);
      v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14B1FB0);
      swift_arrayDestroy(v33, 1, v34);
      swift_slowDealloc(v33, -1, -1);
      swift_slowDealloc(v31, -1, -1);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
      swift_errorRelease(a1);
      swift_errorRelease(a1);
    }
    v44 = v107;
    v46 = v104;
    v45 = v105;

    v47 = *(_QWORD *)&v44[qword_14EBAD0];
    KeyPath = swift_getKeyPath(&unk_10913C0);
    v49 = swift_getKeyPath(&off_10913E8);
    LOBYTE(aBlock) = 0;
    swift_retain(v47);
    static Published.subscript.setter(&aBlock, v47, KeyPath, v49);
    LODWORD(v47) = *DeviceCapabilities.isInternalInstall.unsafeMutableAddressor();
    v50 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000027, 0x80000000010FBB90);
    static Locale.current.getter(v50);
    if ((_DWORD)v47 == 1)
    {
      String.init(localized:table:bundle:locale:comment:)(v46, 0, 0, 0, v45, 0, 0, 256);
      aBlock = 0;
      v110[0] = 0xE000000000000000;
      v51._countAndFlagsBits = 0x414E5245544E495BLL;
      v51._object = (void *)0xEB00000000205D4CLL;
      String.append(_:)(v51);
      v108[0] = v28;
      v52 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD690);
      _print_unlocked<A, B>(_:_:)(v108, &aBlock, v52, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
      v53 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      v54 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      v55 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v53, v54, 1);

      v56 = v55;
      String.okButtonTitle.unsafeMutableAddressor();
      swift_bridgeObjectRetain();
      v57 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      v58 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v57, 0, 0);

      objc_msgSend(v56, "addAction:", v58);
      v59 = objc_msgSend(v106, "delegate");
      if (v59)
      {
        v60 = v59;
        v61 = type metadata accessor for AppSceneDelegate();
        v62 = swift_dynamicCastClass(v60, v61);
        if (v62)
        {
          v63 = *(_QWORD *)(v62 + OBJC_IVAR____TtC16MusicApplication16AppSceneDelegate_interfaceContext);
          swift_retain(v63);
          swift_unknownObjectRelease(v60);
          if (v63)
          {
            v65 = (uint64_t)v101;
            v64 = v102;
            *v101 = v56;
            *(_BYTE *)(v65 + 8) = 1;
            *(_QWORD *)(v65 + 16) = &_swiftEmptySetSingleton;
            swift_storeEnumTagMultiPayload(v65, v64, 2);
            v66 = v100;
            sub_5BDB8(v65, v100, type metadata accessor for AppInterfaceContext.Activity);
            v67 = *(unsigned __int8 *)(v103 + 80);
            v68 = (v67 + 24) & ~v67;
            v69 = (v99 + v68 + 7) & 0xFFFFFFFFFFFFFFF8;
            v70 = swift_allocObject(&unk_13943B8, v69 + 16, v67 | 7);
            v107 = v28;
            v71 = v70;
            *(_QWORD *)(v70 + 16) = v63;
            sub_5C04C(v66, v70 + v68, type metadata accessor for AppInterfaceContext.Activity);
            v72 = (_QWORD *)(v71 + v69);
            *v72 = 0;
            v72[1] = 0;
            swift_retain(v63);
            v73 = (_QWORD *)*JSBridge.shared.unsafeMutableAddressor();
            v74 = swift_allocObject(&unk_13943E0, 32, 7);
            *(_QWORD *)(v74 + 16) = sub_BCA64;
            *(_QWORD *)(v74 + 24) = v71;
            v75 = *(void (**)(void (*)(void **), uint64_t, __n128))&stru_B8.segname[(swift_isaMask & *v73) + 16];
            v76 = v73;
            v77 = swift_retain(v71);
            v78 = (void (*)(void **))sub_C31F4;
            goto LABEL_17;
          }
          goto LABEL_19;
        }
LABEL_21:

        swift_unknownObjectRelease(v60);
        if (a3)
          goto LABEL_20;
        goto LABEL_22;
      }
    }
    else
    {
      String.init(localized:table:bundle:locale:comment:)(v46, 0, 0, 0, v45, 0, 0, 256);
      v79 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      v80 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", 0, v79, 1);

      v56 = v80;
      String.okButtonTitle.unsafeMutableAddressor();
      swift_bridgeObjectRetain();
      v81 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      v82 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v81, 0, 0);

      objc_msgSend(v56, "addAction:", v82);
      v83 = objc_msgSend(v106, "delegate");
      if (v83)
      {
        v60 = v83;
        v84 = type metadata accessor for AppSceneDelegate();
        v85 = swift_dynamicCastClass(v60, v84);
        if (v85)
        {
          v63 = *(_QWORD *)(v85 + OBJC_IVAR____TtC16MusicApplication16AppSceneDelegate_interfaceContext);
          swift_retain(v63);
          swift_unknownObjectRelease(v60);
          if (v63)
          {
            v65 = (uint64_t)v101;
            v86 = v102;
            *v101 = v56;
            *(_BYTE *)(v65 + 8) = 1;
            *(_QWORD *)(v65 + 16) = &_swiftEmptySetSingleton;
            swift_storeEnumTagMultiPayload(v65, v86, 2);
            v87 = v100;
            sub_5BDB8(v65, v100, type metadata accessor for AppInterfaceContext.Activity);
            v88 = *(unsigned __int8 *)(v103 + 80);
            v89 = (v88 + 24) & ~v88;
            v90 = (v99 + v89 + 7) & 0xFFFFFFFFFFFFFFF8;
            v91 = swift_allocObject(&unk_1394368, v90 + 16, v88 | 7);
            v107 = v28;
            v71 = v91;
            *(_QWORD *)(v91 + 16) = v63;
            sub_5C04C(v87, v91 + v89, type metadata accessor for AppInterfaceContext.Activity);
            v92 = (_QWORD *)(v71 + v90);
            *v92 = 0;
            v92[1] = 0;
            swift_retain(v63);
            v93 = (_QWORD *)*JSBridge.shared.unsafeMutableAddressor();
            v74 = swift_allocObject(&unk_1394390, 32, 7);
            *(_QWORD *)(v74 + 16) = sub_BCA64;
            *(_QWORD *)(v74 + 24) = v71;
            v75 = *(void (**)(void (*)(void **), uint64_t, __n128))&stru_B8.segname[(swift_isaMask & *v93) + 16];
            v76 = v93;
            v77 = swift_retain(v71);
            v78 = sub_55CD8;
LABEL_17:
            v75(v78, v74, v77);
            v94 = v71;
            v28 = v107;
            swift_release(v94);

            swift_release(v74);
            sub_5C0DC(v65, type metadata accessor for AppInterfaceContext.Activity);
            swift_release(v63);
            if (!a3)
              goto LABEL_22;
LABEL_20:
            swift_errorRetain(v28);
            a3(v28);
            swift_errorRelease(v28);

            swift_errorRelease(v28);
            return;
          }
          goto LABEL_19;
        }
        goto LABEL_21;
      }
    }
LABEL_19:

    if (a3)
      goto LABEL_20;
LABEL_22:
    swift_errorRelease(v28);

    return;
  }
  v35 = Logger.sharePlayTogether.unsafeMutableAddressor();
  v36 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 16))(v24, v35, v18);
  v37 = Logger.logObject.getter(v36);
  v38 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v37, v38))
  {
    v39 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v39 = 0;
    _os_log_impl(&dword_0, v37, v38, "Joined session", v39, 2u);
    swift_slowDealloc(v39, -1, -1);
  }
  (*(void (**)(char *, uint64_t))(v19 + 8))(v24, v18);

  v40 = swift_allocObject(&unk_1394318, 32, 7);
  *(_QWORD *)(v40 + 16) = a3;
  *(_QWORD *)(v40 + 24) = a4;
  v110[3] = sub_A29D74;
  v111 = v40;
  aBlock = _NSConcreteStackBlock;
  v110[0] = 1107296256;
  v110[1] = sub_42D124;
  v110[2] = &block_descriptor_28_6;
  v41 = _Block_copy(&aBlock);
  v42 = v111;
  sub_A9DEC((uint64_t)a3, a4);
  *(_QWORD *)&v43 = swift_release(v42).n128_u64[0];
  objc_msgSend(v107, "dismissViewControllerAnimated:completion:", 1, v41, v43);
  _Block_release(v41);
}

uint64_t sub_A291E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[15];
  uint64_t v18;

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v5);
  v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  KeyPath = swift_getKeyPath(&unk_10913C0);
  v9 = swift_getKeyPath(&off_10913E8);
  static Published.subscript.getter(&v18, a1, KeyPath, v9);
  swift_release(KeyPath);
  swift_release(v9);
  if (v18 == 1)
  {
    v10 = String.LocalizationValue.init(stringLiteral:)(0x697463656E6E6F43, 0xEA0000000000676ELL);
    static Locale.current.getter(v10);
    v11 = "Shown when attempting to join a SharePlay session.";
    v12 = v7;
    v13 = v4;
    v14 = 50;
  }
  else
  {
    v15 = String.LocalizationValue.init(stringLiteral:)(0x7463656E6E6F43, 0xE700000000000000);
    static Locale.current.getter(v15);
    v11 = "Button action for connecting to a SharePlay session.";
    v12 = v7;
    v13 = v4;
    v14 = 52;
  }
  return String.init(localized:table:bundle:locale:comment:)(v12, 0, 0, 0, v13, v11, v14, 2);
}

uint64_t sub_A2936C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E0DF0);
  __chkstk_darwin(v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5C238(a1, (uint64_t)v4, &qword_14E0DF0);
  return EnvironmentValues.symbolRenderingMode.setter(v4);
}

void sub_A293EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  _QWORD v27[2];
  uint64_t v28;
  char *v29;
  char *v30;
  char *v31;
  char *v32;
  char *v33;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14BDA30);
  __chkstk_darwin(v4);
  v27[0] = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v27[1] = (char *)v27 - v7;
  v28 = type metadata accessor for SharePlayTogetherSession.Participant(0);
  __chkstk_darwin(v28);
  v29 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v30 = (char *)v27 - v10;
  __chkstk_darwin(v11);
  v31 = (char *)v27 - v12;
  __chkstk_darwin(v13);
  __chkstk_darwin(v14);
  v33 = (char *)v27 - v15;
  __chkstk_darwin(v16);
  v32 = (char *)v27 - v17;
  v18 = type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier(0);
  __chkstk_darwin(v18);
  __chkstk_darwin(v19);
  __chkstk_darwin(v20);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F10B8);
  __chkstk_darwin(v21);
  v23 = (char *)v27 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = (uint64_t)&v23[*(int *)(v24 + 48)];
  sub_5BDB8(a1, (uint64_t)v23, type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier);
  sub_5BDB8(a2, v25, type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier);
  v26 = (char *)sub_A29648 + 4 * byte_1091265[swift_getEnumCaseMultiPayload(v23, v18)];
  __asm { BR              X10 }
}

BOOL sub_A29648()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  BOOL v4;

  sub_5BDB8(v0, (uint64_t)v1, type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier);
  if (swift_getEnumCaseMultiPayload(v3, v2))
  {
    sub_56024(v0, &qword_14F10B8);
    return 0;
  }
  else
  {
    v4 = *v1 == *v3;
    sub_5C0DC(v0, type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier);
  }
  return v4;
}

uint64_t sub_A29B28(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_14F10D4);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_C3150;
  return sub_A270A4(a1, v4, v5, v6);
}

uint64_t sub_A29B94()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  if (*(_QWORD *)(v0 + 40))
    swift_release(*(_QWORD *)(v0 + 48));

  return swift_deallocObject(v0, 66, 7);
}

uint64_t sub_A29BD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _QWORD *v11;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(_QWORD *)(v1 + 48);
  v9 = *(_QWORD *)(v1 + 56);
  v10 = *(_BYTE *)(v1 + 64);
  v11 = (_QWORD *)swift_task_alloc(dword_14F10E4);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_C3150;
  return sub_A2768C(a1, v4, v5, v6, v7, v8, v9, v10);
}

double sub_A29C80(char *a1)
{
  uint64_t v1;

  return sub_A28348(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_A29C8C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t objectdestroy_8Tm_1()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
    swift_release(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 48, 7);
}

double sub_A29CF8(uint64_t a1)
{
  uint64_t v1;

  return sub_A28544(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_A29D04()
{
  uint64_t v0;

  swift_errorRelease(*(_QWORD *)(v0 + 16));

  if (*(_QWORD *)(v0 + 32))
    swift_release(*(_QWORD *)(v0 + 40));

  return swift_deallocObject(v0, 56, 7);
}

void sub_A29D48()
{
  uint64_t v0;

  sub_A28784(*(char **)(v0 + 16), *(char **)(v0 + 24), *(void (**)(_QWORD))(v0 + 32), *(_QWORD *)(v0 + 40), *(void **)(v0 + 48));
}

uint64_t block_copy_helper_254(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t block_destroy_helper_254(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_A29D74()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);
  uint64_t result;

  v1 = *(uint64_t (**)(_QWORD))(v0 + 16);
  if (v1)
    return v1(0);
  return result;
}

void sub_A29DAC(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)();
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  void *v53;
  id v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  Swift::Int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  void (*v71)(uint64_t (*)(), uint64_t, __n128);
  _QWORD *v72;
  __n128 v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int v90;
  uint64_t v91;
  id v92;

  v91 = a6;
  v92 = a1;
  v10 = a2 & 1;
  v11 = type metadata accessor for AppInterfaceContext.Activity(0);
  v12 = *(_QWORD *)(v11 - 8);
  v75 = v11;
  v76 = v12;
  __chkstk_darwin(v11);
  v77 = v13;
  v78 = (uint64_t)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v79 = (uint64_t *)((char *)&v75 - v15);
  v16 = type metadata accessor for Locale(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v75 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v19);
  v21 = (char *)&v75 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v31 = String.LocalizationValue.init(stringLiteral:)(0x616C506572616853, 0xE900000000000079);
    static Locale.current.getter(v31);
    v32 = String.init(localized:table:bundle:locale:comment:)(v21, 0, 0, 0, v18, 0, 0, 256);
    v88 = v33;
    v89 = v32;
    v34 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000055, 0x80000000010FBF90);
    static Locale.current.getter(v34);
    v35 = String.init(localized:table:bundle:locale:comment:)(v21, 0, 0, 0, v18, 0, 0, 256);
    v86 = v36;
    v87 = v35;
    v85 = 0;
    v29 = sub_A291E4;
  }
  else
  {
    v22 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000020, 0x80000000010FBE00);
    static Locale.current.getter(v22);
    v23 = String.init(localized:table:bundle:locale:comment:)(v21, 0, 0, 0, v18, 0, 0, 256);
    v88 = v24;
    v89 = v23;
    v25 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000005DLL, 0x80000000010FBE30);
    static Locale.current.getter(v25);
    v26 = String.init(localized:table:bundle:locale:comment:)(v21, 0, 0, 0, v18, 0, 0, 256);
    v86 = v27;
    v87 = v26;
    v28 = String.LocalizationValue.init(stringLiteral:)(19279, 0xE200000000000000);
    static Locale.current.getter(v28);
    v29 = (uint64_t (*)())String.init(localized:table:bundle:locale:comment:)(v21, 0, 0, 0, v18, 0, 0, 256);
    v85 = v30;
  }
  v90 = v10;
  v84 = Image.init(_internalSystemName:)(0x616C706572616873, 0xE900000000000079);
  v37 = String.LocalizationValue.init(stringLiteral:)(0x4120726165707041, 0xE900000000000073);
  static Locale.current.getter(v37);
  v38 = String.init(localized:table:bundle:locale:comment:)(v21, 0, 0, 0, v18, 0, 0, 256);
  v82 = v39;
  v83 = v38;
  v40 = String.LocalizationValue.init(stringLiteral:)(0xD0000000000000AALL, 0x80000000010FBE90);
  static Locale.current.getter(v40);
  v41 = String.init(localized:table:bundle:locale:comment:)(v21, 0, 0, 0, v18, "{{userName}} will be replaced by the user's actual name, please do not remove.", 78, 2);
  v80 = v42;
  v81 = v41;
  v43 = swift_allocObject(&unk_13947A0, 32, 7);
  *(_QWORD *)(v43 + 16) = a3;
  *(_QWORD *)(v43 + 24) = a4;
  v44 = swift_allocObject(&unk_13947C8, 32, 7);
  v45 = a3;
  v46 = a4;
  v47 = a5;
  *(_QWORD *)(v44 + 16) = a5;
  v48 = v91;
  *(_QWORD *)(v44 + 24) = v91;
  objc_allocWithZone((Class)type metadata accessor for SharePlayProxCardViewController(0));
  v49 = (uint64_t)v29;
  v50 = (uint64_t)v29;
  v51 = v85;
  v52 = v90;
  sub_988B34(v50, v85, v10 == 0);
  sub_A9DEC(v45, v46);
  sub_A9DEC(v47, v48);
  v53 = (void *)sub_986C60(v84, v89, v88, v87, v86, v83, v82, v81, v80, v49, v51, v52 ^ 1u, 1u, (uint64_t)sub_6A55B0, v43, (uint64_t)sub_6A55B0, v44);
  v54 = objc_msgSend(v92, "delegate");
  if (v54)
  {
    v55 = v54;
    v56 = type metadata accessor for AppSceneDelegate();
    v57 = swift_dynamicCastClass(v55, v56);
    if (!v57)
    {
      v74 = v52 == 0;

      swift_unknownObjectRelease(v55);
      goto LABEL_10;
    }
    v58 = *(_QWORD *)(v57 + OBJC_IVAR____TtC16MusicApplication16AppSceneDelegate_interfaceContext);
    swift_retain(v58);
    swift_unknownObjectRelease(v55);
    if (v58)
    {
      LODWORD(v92) = v52 == 0;
      v59 = v53;
      v60 = sub_4C07C((uint64_t)&off_133B9E8);
      swift_arrayDestroy(&unk_133BA08, 2, &type metadata for AppInterfaceContext.Activity.PresentationOptions);
      v61 = v51;
      v62 = (uint64_t)v79;
      *v79 = v59;
      *(_BYTE *)(v62 + 8) = 1;
      *(_QWORD *)(v62 + 16) = v60;
      swift_storeEnumTagMultiPayload(v62, v75, 2);
      v63 = v78;
      sub_5BDB8(v62, v78, type metadata accessor for AppInterfaceContext.Activity);
      v64 = *(unsigned __int8 *)(v76 + 80);
      v65 = (v64 + 24) & ~v64;
      v66 = (v77 + v65 + 7) & 0xFFFFFFFFFFFFFFF8;
      v67 = swift_allocObject(&unk_13947F0, v66 + 16, v64 | 7);
      *(_QWORD *)(v67 + 16) = v58;
      sub_5C04C(v63, v67 + v65, type metadata accessor for AppInterfaceContext.Activity);
      v68 = (_QWORD *)(v67 + v66);
      *v68 = 0;
      v68[1] = 0;
      swift_retain(v58);
      v69 = (_QWORD *)*JSBridge.shared.unsafeMutableAddressor();
      v70 = swift_allocObject(&unk_1394818, 32, 7);
      *(_QWORD *)(v70 + 16) = sub_BCA64;
      *(_QWORD *)(v70 + 24) = v67;
      v71 = *(void (**)(uint64_t (*)(), uint64_t, __n128))&stru_B8.segname[(swift_isaMask & *v69)
                                                                                             + 16];
      v72 = v69;
      v73 = swift_retain(v67);
      v71(sub_C31F4, v70, v73);

      swift_release(v67);
      swift_release(v70);
      sub_988C08(v49, v61, (char)v92);
      sub_5C0DC(v62, type metadata accessor for AppInterfaceContext.Activity);
      swift_release(v58);
      return;
    }
  }
  v74 = v52 == 0;

LABEL_10:
  sub_988C08(v49, v51, v74);
}

void sub_A2A42C()
{
  _BYTE *v0;
  char *v1;
  _QWORD *v2;
  _OWORD *v3;
  char *v4;
  uint64_t v5;

  v1 = &v0[OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_preferredWidth];
  *(_QWORD *)v1 = 0;
  v1[8] = 1;
  v2 = &v0[OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_onDismiss];
  *v2 = 0;
  v2[1] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController____lazy_storage___collectionView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_dataSource] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_observables] = &_swiftEmptySetSingleton;
  v3 = &v0[OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_lastSeenSafeAreaLayoutFrame];
  *v3 = 0u;
  v3[1] = 0u;
  v4 = &v0[OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_lastPendingParticipantScrolledTo];
  v5 = type metadata accessor for SharePlayTogetherSession.Participant(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_contentSizeObserver] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_discoveryPreferenceObserver] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_sessionAssertion] = 0;
  v0[OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_viewDidAppearOnce] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000000010C4100, "MusicApplication/SharePlayTogetherSessionManagementViewController.swift", 71, 2, 95, 0);
  __break(1u);
}

void sub_A2A554(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  char *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14F10F8);
  __chkstk_darwin(v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v7);
  v10 = (uint64_t *)((char *)&v16 - v9);
  v11 = objc_msgSend(v2, "traitCollection", v8);
  v12 = (char *)objc_msgSend(v11, "userInterfaceIdiom");

  if (v12 == (_BYTE *)&dword_0 + 3)
  {
    v13 = *(void **)&v2[OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_dataSource];
    if (v13)
    {
      v14 = v13;
      dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(v10, a1);

      v15 = type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier(0);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v10, 1, v15) != 1)
      {
        sub_5C238((uint64_t)v10, (uint64_t)v6, (uint64_t *)&unk_14F10F8);
        if (swift_getEnumCaseMultiPayload(v6, v15) != 2)
          sub_5C0DC((uint64_t)v6, type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier);
      }
      sub_56024((uint64_t)v10, (uint64_t *)&unk_14F10F8);
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_A2A6D0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_A2A6F4()
{
  uint64_t v0;

  sub_A1DE70(v0);
}

uint64_t sub_A2A6FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14F1128);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_A2A744()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

void sub_A2A754(uint64_t a1)
{
  uint64_t v1;

  sub_A1BA68(a1, v1);
}

void sub_A2A760(uint64_t a1)
{
  uint64_t v1;

  sub_A1C1A8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_A2A76C(_QWORD **a1)
{
  uint64_t v1;

  sub_A1C5DC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_A2A774()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_A2A7A0()
{
  uint64_t v0;

  sub_A1C82C(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_A2A7AC()
{
  uint64_t v0;

  sub_A1C3CC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_A2A7B4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_A2A7D8(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;

  return sub_A17EB4(a3, a1, a2, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24));
}

uint64_t sub_A2A7E0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 64, 7);
}

void sub_A2A804(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v3;

  sub_A18274(a1, a2, *(_QWORD *)(v3 + 16), a3);
}

uint64_t sub_A2A818(uint64_t a1)
{
  uint64_t v1;

  return sub_A18958(a1, v1);
}

uint64_t sub_A2A820()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for SharePlayTogetherSession.Participant(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = v0 + v4 + *(int *)(v1 + 32);
  v7 = type metadata accessor for SocialProfile(0);
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_A2A8D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;

  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SharePlayTogetherSession.Participant(0) - 8) + 80);
  return sub_A18E54(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), v4 + ((v9 + 24) & ~v9));
}

void sub_A2A940(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_A196AC(a1, a2, a3, v3);
}

void sub_A2A948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_A19C64(a1, a2, a3, v3);
}

void sub_A2A950(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_A1A270(a1, a2, a3, v3);
}

void sub_A2A958(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_A1A42C(a1, a2, a3, v3);
}

void sub_A2A960(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_A1A974(a1, a2, a3, v3);
}

uint64_t sub_A2A968()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  void (*v15)(uint64_t, uint64_t, __n128);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14F1168);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v17 = (v3 + 24) & ~v3;
  v4 = *(_QWORD *)(v2 + 64);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F1160);
  v5 = *(_QWORD *)(v19 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v17 + v4 + v6) & ~v6;
  v8 = *(_QWORD *)(v5 + 64);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F1158);
  v9 = *(_QWORD *)(v18 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = (v7 + v8 + v10) & ~v10;
  v20 = v3 | v6 | v10 | 7;
  v12 = (*(_QWORD *)(v9 + 64) + v3 + v11) & ~v3;
  v13 = (v4 + v3 + v12) & ~v3;
  v14 = swift_release(*(_QWORD *)(v0 + 16));
  v15 = *(void (**)(uint64_t, uint64_t, __n128))(v2 + 8);
  v15(v0 + v17, v1, v14);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v7, v19);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v0 + v11, v18);
  ((void (*)(uint64_t, uint64_t))v15)(v0 + v12, v1);
  ((void (*)(uint64_t, uint64_t))v15)(v0 + v13, v1);
  return swift_deallocObject(v0, v13 + v4, v20);
}

id sub_A2AAAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;

  v7 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14F1168) - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v8 + 24) & ~v8;
  v10 = *(_QWORD *)(v7 + 64);
  v11 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14F1160) - 8);
  v12 = (v9 + v10 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 64);
  v14 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_14F1158) - 8);
  v15 = (v12 + v13 + *(unsigned __int8 *)(v14 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v16 = (*(_QWORD *)(v14 + 64) + v8 + v15) & ~v8;
  return sub_A1AB14(a1, a2, a3, *(_QWORD *)(v3 + 16), v3 + v9, v3 + v12, v3 + v15, v3 + v16, v3 + ((v10 + v8 + v16) & ~v8));
}

id sub_A2ABA4@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;
  uint64_t v5;

  result = objc_msgSend(*a1, "contentSize");
  *a2 = v4;
  a2[1] = v5;
  return result;
}

id sub_A2ABD4(double *a1, id *a2)
{
  return objc_msgSend(*a2, "setContentSize:", *a1, a1[1]);
}

void sub_A2ABE8()
{
  uint64_t v0;

  sub_A1B980(v0);
}

void sub_A2ABF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_A1B2A8(a1, a2, a3, v3);
}

uint64_t sub_A2ABF8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_A2AC24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_A1B684(a1, a2, *(_QWORD *)(v2 + 16), *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_A2AC30@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_A1FAB8(*(unsigned __int8 *)(v1 + 16), a1);
}

unint64_t sub_A2AC38()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14F11B0;
  if (!qword_14F11B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14F11B8);
    sub_5C150((unint64_t *)&unk_14F11C0, &qword_14B8EC8, (uint64_t)&protocol conformance descriptor for Toggle<A>);
    sub_5C150((unint64_t *)&unk_14F11D0, (uint64_t *)&unk_14C86F0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14F11B0);
  }
  return result;
}

uint64_t sub_A2ACD4()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_A2ACF8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = MRGroupSessionNearbyContactDiscoveryEnabled();
  *a1 = result;
  return result;
}

uint64_t sub_A2AD1C(unsigned __int8 *a1)
{
  return MRSetGroupSessionNearbyContactDiscoveryEnabled(*a1);
}

void sub_A2AD34()
{
  uint64_t v0;

  sub_A1A58C(v0, (uint64_t)&unk_1394700, (uint64_t)&unk_14F1208);
}

uint64_t sub_A2AD5C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_A1F6DC(v1[2], v1[3], v1[4], a1);
}

uint64_t type metadata accessor for SharePlayTogetherSessionManagementViewController.QRCodeCell(uint64_t a1)
{
  return sub_6345C(a1, qword_14F1468, (uint64_t)&nominal type descriptor for SharePlayTogetherSessionManagementViewController.QRCodeCell);
}

uint64_t sub_A2AD88(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_14F1204);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_50F8C;
  return sub_A1A6A4(a1, v4, v5, v6);
}

uint64_t sub_A2ADF4(uint64_t a1)
{
  sub_A2AE24(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(void **)(a1 + 24));
  return a1;
}

void sub_A2AE24(uint64_t a1, uint64_t a2, unint64_t a3, void *a4)
{
  if (a4)
  {
    sub_50C60(a2, a3);

  }
}

id sub_A2AE58@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_A1F960(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32), a1);
}

uint64_t type metadata accessor for SharePlayTogetherSessionManagementViewController.ParticipantView(uint64_t a1)
{
  return sub_6345C(a1, qword_14F13D0, (uint64_t)&nominal type descriptor for SharePlayTogetherSessionManagementViewController.ParticipantView);
}

void sub_A2AE78()
{
  uint64_t v0;

  sub_A19E64(v0);
}

uint64_t sub_A2AE80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_A1F810(*(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), a1);
}

uint64_t type metadata accessor for SharePlayTogetherSessionManagementViewController.StatusHeaderView(uint64_t a1)
{
  return sub_6345C(a1, qword_14F1330, (uint64_t)&nominal type descriptor for SharePlayTogetherSessionManagementViewController.StatusHeaderView);
}

uint64_t sub_A2AEA4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_A2AEC8()
{
  uint64_t v0;
  _QWORD *v1;
  void (*v2)(void);
  _QWORD *v3;

  v1 = *(_QWORD **)(*(_QWORD *)(v0 + 16)
                  + OBJC_IVAR____TtC16MusicApplication48SharePlayTogetherSessionManagementViewController_session);
  v2 = *(void (**)(void))&stru_338.segname[(swift_isaMask & *v1) - 8];
  v3 = v1;
  v2();

}

void sub_A2AF24()
{
  uint64_t v0;

  sub_A1A58C(v0, (uint64_t)&unk_1394778, (uint64_t)&unk_14F1288);
}

uint64_t sub_A2AF4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_A1F65C(v1[2], v1[3], v1[4], a1);
}

unint64_t sub_A2AF58()
{
  unint64_t result;

  result = qword_14F1270;
  if (!qword_14F1270)
  {
    result = swift_getWitnessTable(&unk_109156C, &type metadata for SharePlayTogetherSessionManagementViewController.CarPlayHeaderView);
    atomic_store(result, (unint64_t *)&qword_14F1270);
  }
  return result;
}

uint64_t sub_A2AFA0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_14F1284);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_C3150;
  return sub_A1996C(a1, v4, v5, v6);
}

uint64_t sub_A2B00C()
{
  return EnvironmentValues.symbolRenderingMode.getter();
}

uint64_t objectdestroy_30Tm_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  id *v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;

  v1 = type metadata accessor for AppInterfaceContext.Activity(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16));
  v6 = (id *)(v0 + v4);
  switch(swift_getEnumCaseMultiPayload(v6, v1))
  {
    case 0u:
      v7 = type metadata accessor for AppInterfaceContext.Activity.Destination(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v6, v7);
      if (EnumCaseMultiPayload == 4)
      {

      }
      else if (EnumCaseMultiPayload == 3)
      {
        v9 = type metadata accessor for Artist(0);
        (*(void (**)(id *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v6, v9);
      }
      break;
    case 1u:
      swift_bridgeObjectRelease();
      v10 = (char *)v6 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AD2E0) + 48);
      v11 = type metadata accessor for SearchScope(0);
      v12 = *(_QWORD *)(v11 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
        (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
      break;
    case 2u:

      goto LABEL_17;
    case 3u:
      v13 = type metadata accessor for Playlist.Folder(0);
      v14 = *(_QWORD *)(v13 - 8);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v14 + 48))(v6, 1, v13))
        (*(void (**)(id *, uint64_t))(v14 + 8))(v6, v13);
      v15 = type metadata accessor for PlaylistCreation.Context(0);
      swift_bridgeObjectRelease();
      v16 = (char *)v6 + *(int *)(v15 + 24);
      v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE7A0);
      v18 = *(_QWORD *)(v17 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
        (*(void (**)(char *, uint64_t))(v18 + 8))(v16, v17);
      v19 = *(int *)(v15 + 28);
      goto LABEL_21;
    case 4u:

      v20 = type metadata accessor for PlaylistCreation.LegacyContext(0);
      v21 = (id *)((char *)v6 + *(int *)(v20 + 28));
      v22 = type metadata accessor for SourcedSongs(0);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v21, 1, v22))
      {
        if (swift_getEnumCaseMultiPayload(v21, v22) == 1)
        {
          v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE7A0);
          (*(void (**)(id *, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v21, v23);
        }
        else
        {

        }
      }
      v19 = *(int *)(v20 + 32);
LABEL_21:
      v25 = (id *)((char *)v6 + v19);
      if (*v25)
        swift_release(v25[1]);
      break;
    case 5u:
      v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14AE7A0);
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v6, v24);
      if (*(id *)((char *)v6 + *(int *)(type metadata accessor for PlaylistPicker.Context(0) + 20) + 16) != (char *)&dword_0 + 1)
LABEL_17:
        swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  if (*(_QWORD *)(v0 + v5))
    swift_release(*(_QWORD *)(v0 + v5 + 8));
  return swift_deallocObject(v0, v5 + 16, v3 | 7);
}

uint64_t destroy for SharePlayTogetherSessionManagementViewController.CarPlayHeaderView(uint64_t a1)
{
  uint64_t result;

  result = swift_release(*(_QWORD *)(a1 + 16));
  if (*(_QWORD *)(a1 + 24))
    return swift_release(*(_QWORD *)(a1 + 32));
  return result;
}

uint64_t initializeWithCopy for SharePlayTogetherSessionManagementViewController.CarPlayHeaderView(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  id v8;
  uint64_t v9;

  v4 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v5;
  v7 = (_OWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 24);
  v8 = v4;
  swift_retain(v5);
  if (v6)
  {
    v9 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 32) = v9;
    swift_retain(v9);
  }
  else
  {
    *(_OWORD *)(a1 + 24) = *v7;
  }
  return a1;
}

uint64_t assignWithCopy for SharePlayTogetherSessionManagementViewController.CarPlayHeaderView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v8;
  swift_retain(v8);
  swift_release(v7);
  v9 = *(_QWORD *)(a2 + 24);
  if (!*(_QWORD *)(a1 + 24))
  {
    if (v9)
    {
      v12 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 24) = v9;
      *(_QWORD *)(a1 + 32) = v12;
      swift_retain(v12);
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    return a1;
  }
  if (!v9)
  {
    swift_release(*(_QWORD *)(a1 + 32));
    goto LABEL_7;
  }
  v10 = *(_QWORD *)(a2 + 32);
  v11 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = v9;
  *(_QWORD *)(a1 + 32) = v10;
  swift_retain(v10);
  swift_release(v11);
  return a1;
}

uint64_t assignWithTake for SharePlayTogetherSessionManagementViewController.CarPlayHeaderView(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release(v5);
  v6 = *(_QWORD *)(a2 + 24);
  if (!*(_QWORD *)(a1 + 24))
  {
    if (v6)
    {
      v9 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 24) = v6;
      *(_QWORD *)(a1 + 32) = v9;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    return a1;
  }
  if (!v6)
  {
    swift_release(*(_QWORD *)(a1 + 32));
    goto LABEL_7;
  }
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  swift_release(v8);
  return a1;
}

ValueMetadata *type metadata accessor for SharePlayTogetherSessionManagementViewController.CarPlayHeaderView()
{
  return &type metadata for SharePlayTogetherSessionManagementViewController.CarPlayHeaderView;
}

_QWORD *sub_A2B570(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  void *v7;
  uint64_t v8;
  _OWORD *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v7 = (void *)a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v9 = a2 + 3;
    v8 = a2[3];
    v10 = v7;
    if (v8)
    {
      v11 = a2[4];
      v4[3] = v8;
      v4[4] = v11;
      swift_retain(v11);
    }
    else
    {
      *(_OWORD *)(v4 + 3) = *v9;
    }
    v13 = *(int *)(a3 + 28);
    v14 = (_QWORD *)((char *)v4 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
    if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
    {
      v17 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v14, v15, v17);
      v18 = v14;
      v19 = v16;
      v20 = 1;
    }
    else
    {
      v21 = *v15;
      *v14 = *v15;
      swift_retain(v21);
      v18 = v14;
      v19 = v16;
      v20 = 0;
    }
    swift_storeEnumTagMultiPayload(v18, v19, v20);
  }
  return v4;
}

double sub_A2B68C(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  if (*(_QWORD *)(a1 + 24))
    swift_release(*(_QWORD *)(a1 + 32));
  v4 = (_QWORD *)(a1 + *(int *)(a2 + 28));
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*v4).n128_u64[0];
  }
  return result;
}

uint64_t sub_A2B714(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  _OWORD *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v8 = (_OWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 24);
  v9 = v6;
  if (v7)
  {
    v10 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v7;
    *(_QWORD *)(a1 + 32) = v10;
    swift_retain(v10);
  }
  else
  {
    *(_OWORD *)(a1 + 24) = *v8;
  }
  v11 = *(int *)(a3 + 28);
  v12 = (uint64_t *)(a1 + v11);
  v13 = (uint64_t *)(a2 + v11);
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
  if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
  {
    v15 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v12, v13, v15);
    v16 = 1;
  }
  else
  {
    v17 = *v13;
    *v12 = *v13;
    swift_retain(v17);
    v16 = 0;
  }
  swift_storeEnumTagMultiPayload(v12, v14, v16);
  return a1;
}

uint64_t sub_A2B7FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(void **)(a2 + 8);
  v7 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  v8 = v6;

  v9 = *(_QWORD *)(a1 + 24);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v10 = *(_QWORD *)(a2 + 24);
  if (v9)
  {
    if (v10)
    {
      v11 = *(_QWORD *)(a2 + 32);
      v12 = *(_QWORD *)(a1 + 32);
      *(_QWORD *)(a1 + 24) = v10;
      *(_QWORD *)(a1 + 32) = v11;
      swift_retain(v11);
      swift_release(v12);
      goto LABEL_8;
    }
    swift_release(*(_QWORD *)(a1 + 32));
  }
  else if (v10)
  {
    v13 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v10;
    *(_QWORD *)(a1 + 32) = v13;
    swift_retain(v13);
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
LABEL_8:
  if (a1 != a2)
  {
    v14 = *(int *)(a3 + 28);
    v15 = (uint64_t *)(a1 + v14);
    v16 = (uint64_t *)(a2 + v14);
    sub_56024(a1 + v14, (uint64_t *)&unk_14C8730);
    v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
    if (swift_getEnumCaseMultiPayload(v16, v17) == 1)
    {
      v18 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v15, v16, v18);
      v19 = 1;
    }
    else
    {
      v20 = *v16;
      *v15 = *v16;
      swift_retain(v20);
      v19 = 0;
    }
    swift_storeEnumTagMultiPayload(v15, v17, v19);
  }
  return a1;
}

uint64_t sub_A2B93C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  if (v4)
  {
    v5 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v4;
    *(_QWORD *)(a1 + 32) = v5;
  }
  else
  {
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  }
  v6 = *(int *)(a3 + 28);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  return a1;
}

uint64_t sub_A2BA10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(void **)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;

  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a1 + 24);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  if (v9)
  {
    if (v8)
    {
      v10 = *(_QWORD *)(a2 + 32);
      v11 = *(_QWORD *)(a1 + 32);
      *(_QWORD *)(a1 + 24) = v8;
      *(_QWORD *)(a1 + 32) = v10;
      swift_release(v11);
      goto LABEL_8;
    }
    swift_release(*(_QWORD *)(a1 + 32));
  }
  else if (v8)
  {
    v12 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v8;
    *(_QWORD *)(a1 + 32) = v12;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
LABEL_8:
  if (a1 != a2)
  {
    v13 = *(int *)(a3 + 28);
    v14 = (void *)(a1 + v13);
    v15 = (const void *)(a2 + v13);
    sub_56024(a1 + v13, (uint64_t *)&unk_14C8730);
    v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
    if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
    {
      v17 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v14, v15, v17);
      swift_storeEnumTagMultiPayload(v14, v16, 1);
    }
    else
    {
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_A2BB3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_A2BB48);
}

uint64_t sub_A2BB48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E4F30);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t sub_A2BBC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_A2BBD4);
}

uint64_t sub_A2BBD4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E4F30);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

void sub_A2BC4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_A2CF94(a1, a2, a3, (uint64_t)&unk_1091538, (uint64_t)&unk_1091328);
}

void **sub_A2BC60(void **a1, void **a2, int *a3)
{
  int v3;
  char *v4;
  void **v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *__dst;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain(v4);
  }
  else
  {
    v7 = a1;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *(uint64_t *)((char *)a2 + v8 + 8);
    *(_QWORD *)v9 = *(void **)((char *)a2 + v8);
    *((_QWORD *)v9 + 1) = v11;
    v12 = *(uint64_t *)((char *)a2 + v8 + 24);
    *((_QWORD *)v9 + 2) = *(void **)((char *)a2 + v8 + 16);
    *((_QWORD *)v9 + 3) = v12;
    *((_WORD *)v9 + 16) = *(_WORD *)((char *)a2 + v8 + 32);
    v13 = *(int *)(type metadata accessor for SharePlayTogetherSession.Participant(0) + 32);
    __dst = &v9[v13];
    v14 = &v10[v13];
    v15 = type metadata accessor for SocialProfile(0);
    v16 = *(_QWORD *)(v15 - 8);
    v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
    v18 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v17(v14, 1, v15))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_14BDA30);
      memcpy(__dst, v14, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(__dst, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
    }
    v20 = a3[7];
    *((_BYTE *)v7 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    v21 = (uint64_t *)((char *)v7 + v20);
    v22 = (uint64_t *)((char *)a2 + v20);
    v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
    if (swift_getEnumCaseMultiPayload(v22, v23) == 1)
    {
      v24 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v21, v22, v24);
      v25 = v21;
      v26 = v23;
      v27 = 1;
    }
    else
    {
      v28 = *v22;
      *v21 = *v22;
      swift_retain(v28);
      v25 = v21;
      v26 = v23;
      v27 = 0;
    }
    swift_storeEnumTagMultiPayload(v25, v26, v27);
  }
  return v7;
}

double sub_A2BE30(id *a1, uint64_t a2)
{
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  double result;

  v4 = (char *)a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = &v4[*(int *)(type metadata accessor for SharePlayTogetherSession.Participant(0) + 32)];
  v6 = type metadata accessor for SocialProfile(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
  v8 = (id *)((char *)a1 + *(int *)(a2 + 28));
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8, v10);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*v8).n128_u64[0];
  }
  return result;
}

void **sub_A2BF20(void **a1, void **a2, int *a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *__dst;

  v6 = *a2;
  *a1 = *a2;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = *(uint64_t *)((char *)a2 + v7 + 8);
  *(_QWORD *)v8 = *(void **)((char *)a2 + v7);
  *((_QWORD *)v8 + 1) = v10;
  v11 = *(uint64_t *)((char *)a2 + v7 + 24);
  *((_QWORD *)v8 + 2) = *(void **)((char *)a2 + v7 + 16);
  *((_QWORD *)v8 + 3) = v11;
  *((_WORD *)v8 + 16) = *(_WORD *)((char *)a2 + v7 + 32);
  v12 = *(int *)(type metadata accessor for SharePlayTogetherSession.Participant(0) + 32);
  __dst = &v8[v12];
  v13 = &v9[v12];
  v14 = type metadata accessor for SocialProfile(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  v17 = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v16(v13, 1, v14))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_14BDA30);
    memcpy(__dst, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(__dst, v13, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(__dst, 0, 1, v14);
  }
  v19 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v20 = (uint64_t *)((char *)a1 + v19);
  v21 = (uint64_t *)((char *)a2 + v19);
  v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
  if (swift_getEnumCaseMultiPayload(v21, v22) == 1)
  {
    v23 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v20, v21, v23);
    v24 = 1;
  }
  else
  {
    v25 = *v21;
    *v20 = *v21;
    swift_retain(v25);
    v24 = 0;
  }
  swift_storeEnumTagMultiPayload(v20, v22, v24);
  return a1;
}

void **sub_A2C0C0(void **a1, void **a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  v8 = v6;

  v9 = a3[5];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  *(_QWORD *)v10 = *(void **)((char *)a2 + v9);
  *((_QWORD *)v10 + 1) = *(void **)((char *)a2 + v9 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
  *((_QWORD *)v10 + 3) = *((_QWORD *)v11 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10[32] = v11[32];
  v10[33] = v11[33];
  v12 = *(int *)(type metadata accessor for SharePlayTogetherSession.Participant(0) + 32);
  v13 = &v10[v12];
  v14 = &v11[v12];
  v15 = type metadata accessor for SocialProfile(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
LABEL_6:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_14BDA30);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v13, v14, v15);
LABEL_7:
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  if (a1 != a2)
  {
    v21 = a3[7];
    v22 = (uint64_t *)((char *)a1 + v21);
    v23 = (uint64_t *)((char *)a2 + v21);
    sub_56024((uint64_t)a1 + v21, (uint64_t *)&unk_14C8730);
    v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
    if (swift_getEnumCaseMultiPayload(v23, v24) == 1)
    {
      v25 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v22, v23, v25);
      v26 = 1;
    }
    else
    {
      v27 = *v23;
      *v22 = *v23;
      swift_retain(v27);
      v26 = 0;
    }
    swift_storeEnumTagMultiPayload(v22, v24, v26);
  }
  return a1;
}

_QWORD *sub_A2C2E0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = *(_OWORD *)((char *)a2 + v6 + 16);
  *(_OWORD *)v7 = *(_OWORD *)((char *)a2 + v6);
  *((_OWORD *)v7 + 1) = v9;
  *((_WORD *)v7 + 16) = *(_WORD *)((char *)a2 + v6 + 32);
  v10 = *(int *)(type metadata accessor for SharePlayTogetherSession.Participant(0) + 32);
  v11 = &v7[v10];
  v12 = &v8[v10];
  v13 = type metadata accessor for SocialProfile(0);
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_14BDA30);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  v16 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
  if (swift_getEnumCaseMultiPayload(v18, v19) == 1)
  {
    v20 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v17, v18, v20);
    swift_storeEnumTagMultiPayload(v17, v19, 1);
  }
  else
  {
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  return a1;
}

void **sub_A2C450(void **a1, void **a2, int *a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;

  v6 = *a1;
  *a1 = *a2;

  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = *(uint64_t *)((char *)a2 + v7 + 8);
  *(_QWORD *)v8 = *(void **)((char *)a2 + v7);
  *((_QWORD *)v8 + 1) = v10;
  swift_bridgeObjectRelease();
  v11 = *((_QWORD *)v9 + 3);
  *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);
  *((_QWORD *)v8 + 3) = v11;
  swift_bridgeObjectRelease();
  v8[32] = v9[32];
  v8[33] = v9[33];
  v12 = *(int *)(type metadata accessor for SharePlayTogetherSession.Participant(0) + 32);
  v13 = &v8[v12];
  v14 = &v9[v12];
  v15 = type metadata accessor for SocialProfile(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
LABEL_6:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_14BDA30);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v13, v14, v15);
LABEL_7:
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  if (a1 != a2)
  {
    v21 = a3[7];
    v22 = (char *)a1 + v21;
    v23 = (char *)a2 + v21;
    sub_56024((uint64_t)a1 + v21, (uint64_t *)&unk_14C8730);
    v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
    if (swift_getEnumCaseMultiPayload(v23, v24) == 1)
    {
      v25 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v22, v23, v25);
      swift_storeEnumTagMultiPayload(v22, v24, 1);
    }
    else
    {
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_A2C650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_A2C65C);
}

uint64_t sub_A2C65C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for SharePlayTogetherSession.Participant(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E4F30);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 28);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t sub_A2C700(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_A2C70C);
}

char *sub_A2C70C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for SharePlayTogetherSession.Participant(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E4F30);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 28);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void sub_A2C7AC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[4];

  v6[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2 = type metadata accessor for SharePlayTogetherSession.Participant(319);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    v6[2] = &unk_1091328;
    sub_1D1B7C(319, (unint64_t *)&qword_14E4FA0, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v5 <= 0x3F)
    {
      v6[3] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 4, v6, a1 + 16);
    }
  }
}

char *sub_A2C860(char *a1, char **a2, uint64_t a3)
{
  int v4;
  char *v5;
  _OWORD *v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain(v5);
  }
  else
  {
    v8 = a2 + 3;
    v9 = a2[3];
    a1[8] = *((_BYTE *)a2 + 8);
    v10 = a2[2];
    *((_QWORD *)a1 + 2) = v10;
    v11 = v5;
    swift_retain(v10);
    if (v9)
    {
      v12 = a2[4];
      *((_QWORD *)a1 + 3) = v9;
      *((_QWORD *)a1 + 4) = v12;
      swift_retain(v12);
    }
    else
    {
      *(_OWORD *)(a1 + 24) = *v8;
    }
    v13 = *(int *)(a3 + 28);
    v14 = &a1[v13];
    v15 = (uint64_t *)((char *)a2 + v13);
    v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
    if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
    {
      v17 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, uint64_t *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v14, v15, v17);
      v18 = v14;
      v19 = v16;
      v20 = 1;
    }
    else
    {
      v21 = *v15;
      *(_QWORD *)v14 = *v15;
      swift_retain(v21);
      v18 = v14;
      v19 = v16;
      v20 = 0;
    }
    swift_storeEnumTagMultiPayload(v18, v19, v20);
  }
  return a1;
}

double sub_A2C984(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  swift_release(*(_QWORD *)(a1 + 16));
  if (*(_QWORD *)(a1 + 24))
    swift_release(*(_QWORD *)(a1 + 32));
  v4 = (_QWORD *)(a1 + *(int *)(a2 + 28));
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*v4).n128_u64[0];
  }
  return result;
}

uint64_t sub_A2CA14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v7;
  v9 = (_OWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 24);
  v10 = v6;
  swift_retain(v7);
  if (v8)
  {
    v11 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v8;
    *(_QWORD *)(a1 + 32) = v11;
    swift_retain(v11);
  }
  else
  {
    *(_OWORD *)(a1 + 24) = *v9;
  }
  v12 = *(int *)(a3 + 28);
  v13 = (uint64_t *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
  if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
  {
    v16 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v13, v14, v16);
    v17 = 1;
  }
  else
  {
    v18 = *v14;
    *v13 = *v14;
    swift_retain(v18);
    v17 = 0;
  }
  swift_storeEnumTagMultiPayload(v13, v15, v17);
  return a1;
}

uint64_t sub_A2CB0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  swift_retain(v10);
  swift_release(v9);
  v11 = *(_QWORD *)(a2 + 24);
  if (*(_QWORD *)(a1 + 24))
  {
    if (v11)
    {
      v12 = *(_QWORD *)(a2 + 32);
      v13 = *(_QWORD *)(a1 + 32);
      *(_QWORD *)(a1 + 24) = v11;
      *(_QWORD *)(a1 + 32) = v12;
      swift_retain(v12);
      swift_release(v13);
      goto LABEL_8;
    }
    swift_release(*(_QWORD *)(a1 + 32));
  }
  else if (v11)
  {
    v14 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v11;
    *(_QWORD *)(a1 + 32) = v14;
    swift_retain(v14);
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
LABEL_8:
  if (a1 != a2)
  {
    v15 = *(int *)(a3 + 28);
    v16 = (uint64_t *)(a1 + v15);
    v17 = (uint64_t *)(a2 + v15);
    sub_56024(a1 + v15, (uint64_t *)&unk_14C8730);
    v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
    if (swift_getEnumCaseMultiPayload(v17, v18) == 1)
    {
      v19 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v16, v17, v19);
      v20 = 1;
    }
    else
    {
      v21 = *v17;
      *v16 = *v17;
      swift_retain(v21);
      v20 = 0;
    }
    swift_storeEnumTagMultiPayload(v16, v18, v20);
  }
  return a1;
}

uint64_t sub_A2CC5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 24);
  if (v4)
  {
    v5 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v4;
    *(_QWORD *)(a1 + 32) = v5;
  }
  else
  {
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  }
  v6 = *(int *)(a3 + 28);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  return a1;
}

uint64_t sub_A2CD30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release(v7);
  v8 = *(_QWORD *)(a2 + 24);
  if (*(_QWORD *)(a1 + 24))
  {
    if (v8)
    {
      v9 = *(_QWORD *)(a2 + 32);
      v10 = *(_QWORD *)(a1 + 32);
      *(_QWORD *)(a1 + 24) = v8;
      *(_QWORD *)(a1 + 32) = v9;
      swift_release(v10);
      goto LABEL_8;
    }
    swift_release(*(_QWORD *)(a1 + 32));
  }
  else if (v8)
  {
    v11 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v8;
    *(_QWORD *)(a1 + 32) = v11;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
LABEL_8:
  if (a1 != a2)
  {
    v12 = *(int *)(a3 + 28);
    v13 = (void *)(a1 + v12);
    v14 = (const void *)(a2 + v12);
    sub_56024(a1 + v12, (uint64_t *)&unk_14C8730);
    v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
    if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
    {
      v16 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v13, v14, v16);
      swift_storeEnumTagMultiPayload(v13, v15, 1);
    }
    else
    {
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_A2CE6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_A2CE78);
}

uint64_t sub_A2CE78(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E4F30);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 28)], a2, v8);
  }
}

uint64_t sub_A2CEF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_A2CF04);
}

char *sub_A2CF04(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14E4F30);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 28)], a2, a2, v7);
  }
  return result;
}

void sub_A2CF7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_A2CF94(a1, a2, a3, (uint64_t)&value witness table for Builtin.UnknownObject + 64, (uint64_t)&unk_10912E0);
}

void sub_A2CF94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[4];

  v8[0] = a4;
  v8[1] = a5;
  v8[2] = &unk_10912E0;
  sub_1D1B7C(319, (unint64_t *)&qword_14E4FA0, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v7 <= 0x3F)
  {
    v8[3] = *(_QWORD *)(v6 - 8) + 64;
    swift_initStructMetadata(a1, 256, 4, v8, a1 + 16);
  }
}

uint64_t sub_A2D024(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_120118C, 1);
}

uint64_t sub_A2D034(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1201164, 1);
}

uint64_t sub_A2D044(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_120113C, 1);
}

uint64_t sub_A2D054(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1201114, 1);
}

double sub_A2D064(uint64_t a1)
{
  double result;

  *(_QWORD *)(a1 + 160) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t sub_A2D084()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v1 = type metadata accessor for SharePlayTogetherSessionManagementViewController.QRCodeCell(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;

  swift_release(*(_QWORD *)(v0 + v4 + 16));
  if (*(_QWORD *)(v0 + v4 + 24))
    swift_release(*(_QWORD *)(v6 + 32));
  v7 = (_QWORD *)(v6 + *(int *)(v1 + 28));
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
  }
  else
  {
    swift_release(*v7);
  }
  v10 = (v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = v10 + 40;
  v12 = v0 + v10;
  sub_50C60(*(_QWORD *)(v0 + v10 + 8), *(_QWORD *)(v0 + v10 + 16));

  return swift_deallocObject(v0, v11, v3 | 7);
}

double sub_A2D174@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for SharePlayTogetherSessionManagementViewController.QRCodeCell(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_A260DC(v1 + v4, v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8), a1);
}

uint64_t sub_A2D1C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for SharePlayTogetherSessionManagementViewController.QRCodeCell(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;

  swift_release(*(_QWORD *)(v0 + v4 + 16));
  if (*(_QWORD *)(v0 + v4 + 24))
    swift_release(*(_QWORD *)(v6 + 32));
  v7 = (_QWORD *)(v6 + *(int *)(v1 + 28));
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
  }
  else
  {
    swift_release(*v7);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_A2D28C()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t (*v3)(void);

  result = type metadata accessor for SharePlayTogetherSessionManagementViewController.QRCodeCell(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(result - 8) + 80);
  v3 = *(uint64_t (**)(void))(v0 + ((v2 + 16) & ~v2) + 24);
  if (v3)
    return v3();
  return result;
}

double sub_A2D2D0@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_A26458(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_A2D2D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14F14D8;
  if (!qword_14F14D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14F14D0);
    sub_A2D35C(&qword_14F14E0, &qword_14F14E8, (void (*)(void))sub_A2D3E0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14F14D8);
  }
  return result;
}

uint64_t sub_A2D35C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    sub_5C150((unint64_t *)&unk_14EC150, &qword_14C8700, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_A2D3E0()
{
  unint64_t result;

  result = qword_14F14F0;
  if (!qword_14F14F0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for QRCodeOverlayViewController.ImageViewRepresentable, &type metadata for QRCodeOverlayViewController.ImageViewRepresentable);
    atomic_store(result, (unint64_t *)&qword_14F14F0);
  }
  return result;
}

uint64_t sub_A2D428()
{
  return sub_A2D81C(type metadata accessor for SharePlayTogetherSessionManagementViewController.ParticipantView, (uint64_t (*)(uint64_t))sub_A23E74);
}

unint64_t sub_A2D43C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14F1580;
  if (!qword_14F1580)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14F1578);
    sub_5C150(&qword_14F1588, &qword_14F1590, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14F1580);
  }
  return result;
}

uint64_t sub_A2D4C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(a1 + 80);
  v4 = *(_QWORD *)(a1 + 88);
  v5 = *(_QWORD *)(a1 + 96);
  v6 = *(_QWORD *)(a1 + 104);
  v7 = *(_QWORD *)(a1 + 112);
  v8 = *(_QWORD *)(a1 + 120);
  sub_AF8E8(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_release(v3);
  swift_release(v2);
  swift_bridgeObjectRelease();
  swift_release(v4);
  sub_184E64(v5, v6, v7, v8);
  return a1;
}

uint64_t objectdestroy_183Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v1 = type metadata accessor for SharePlayTogetherSessionManagementViewController.ParticipantView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);

  v6 = v0 + v4 + *(int *)(v1 + 20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7 = v6 + *(int *)(type metadata accessor for SharePlayTogetherSession.Participant(0) + 32);
  v8 = type metadata accessor for SocialProfile(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  v10 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 28));
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v12 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v10, v12);
  }
  else
  {
    swift_release(*v10);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_A2D678()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = type metadata accessor for SharePlayTogetherSessionManagementViewController.ParticipantView(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return (*(uint64_t (**)(uint64_t))((char *)&stru_2E8.flags
                                            + (swift_isaMask & **(_QWORD **)(v0 + ((v2 + 16) & ~v2)))))(v0 + ((v2 + 16) & ~v2) + *(int *)(v1 + 20));
}

uint64_t sub_A2D6D4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.isFocused.getter();
  *a1 = result & 1;
  return result;
}

unint64_t sub_A2D700()
{
  unint64_t result;

  result = qword_14F1618;
  if (!qword_14F1618)
  {
    result = swift_getWitnessTable(&unk_10917A8, &type metadata for SharePlayTogetherSessionManagementViewController.FocusableButtonStyle);
    atomic_store(result, (unint64_t *)&qword_14F1618);
  }
  return result;
}

unint64_t sub_A2D744()
{
  unint64_t result;

  result = qword_14F1620;
  if (!qword_14F1620)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Circle, &type metadata for Circle);
    atomic_store(result, (unint64_t *)&qword_14F1620);
  }
  return result;
}

uint64_t sub_A2D78C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD **v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for SharePlayTogetherSessionManagementViewController.ParticipantView(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (_QWORD **)(v0 + ((v2 + 16) & ~v2));
  v4 = (char *)v3 + *(int *)(v1 + 20);
  v5 = swift_isaMask & **v3;
  v6 = 824;
  if (v4[32])
    v6 = 816;
  return (*(uint64_t (**)(void))(v5 + v6))();
}

uint64_t sub_A2D808()
{
  return sub_A2D81C(type metadata accessor for SharePlayTogetherSessionManagementViewController.StatusHeaderView, (uint64_t (*)(uint64_t))sub_A21870);
}

uint64_t sub_A2D81C(uint64_t (*a1)(_QWORD), uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(a1(0) - 8) + 80);
  return a2(v2 + ((v3 + 16) & ~v3));
}

uint64_t objectdestroy_199Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for SharePlayTogetherSessionManagementViewController.StatusHeaderView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;

  if (*(_QWORD *)(v0 + v4 + 24))
    swift_release(*(_QWORD *)(v6 + 32));
  v7 = (_QWORD *)(v6 + *(int *)(v1 + 28));
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14C8730);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
  }
  else
  {
    swift_release(*v7);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

void sub_A2D930()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  void (*v3)(void);
  _QWORD *v4;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SharePlayTogetherSessionManagementViewController.StatusHeaderView(0)
                                      - 8)
                          + 80);
  v2 = *(_QWORD **)(v0 + ((v1 + 16) & ~v1) + 8);
  v3 = *(void (**)(void))&stru_338.segname[swift_isaMask & *v2];
  v4 = v2;
  v3();

}

unint64_t sub_A2D99C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  ValueMetadata *v5;
  uint64_t v6;
  unint64_t v7;

  result = qword_14F1740;
  if (!qword_14F1740)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14F16E0);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14F16D0);
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14F16C8);
    v5 = &type metadata for SharePlayTogetherSessionManagementViewController.FocusableButtonStyle;
    v6 = sub_5C150(&qword_14F1730, &qword_14F16C8, (uint64_t)&protocol conformance descriptor for Button<A>);
    v7 = sub_A2D700();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    v4 = v2;
    v5 = (ValueMetadata *)OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.bold(_:)>>, 1);
    sub_5C150(&qword_14F1748, (uint64_t *)&unk_14F1750, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14F1740);
  }
  return result;
}

void sub_A2DAA8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SharePlayTogetherSessionManagementViewController.StatusHeaderView(0)
                                      - 8)
                          + 80);
  sub_A22C00(v0 + ((v1 + 16) & ~v1));
}

uint64_t sub_A2DADC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 96);
  v4 = *(_QWORD *)(a1 + 104);
  v5 = *(_BYTE *)(a1 + 112);
  v6 = *(_QWORD *)(a1 + 128);
  sub_AF8E8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_release(v2);
  swift_bridgeObjectRelease();
  sub_AF8E8(v3, v4, v5);
  swift_release(v6);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_A2DB64(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(a1 + 120);
  v4 = *(_QWORD *)(a1 + 128);
  v5 = *(_BYTE *)(a1 + 136);
  v6 = *(_QWORD *)(a1 + 152);
  sub_AF8E8(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_release(v2);
  swift_bridgeObjectRelease();
  sub_AF8E8(v3, v4, v5);
  swift_release(v6);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_A2DBEC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  if (*(_QWORD *)(v0 + 40))
    swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_A2DC28()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t result;

  v1 = *(uint64_t (**)(void))(v0 + 40);
  if (v1)
    return v1();
  return result;
}

double sub_A2DC50@<D0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v2;

  return sub_A209EC(*(_QWORD *)(v2 + 16), a1, a2);
}

unint64_t sub_A2DC58()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14F17C8;
  if (!qword_14F17C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14F17C0);
    sub_5C150(&qword_14F17D0, &qword_14F17D8, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14F17C8);
  }
  return result;
}

unint64_t sub_A2DCDC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_14F17E8;
  if (!qword_14F17E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14F17A0);
    v2[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14F1790);
    v2[1] = &type metadata for SharePlayTogetherSessionManagementViewController.FocusableButtonStyle;
    v2[2] = sub_5C150(&qword_14F17E0, &qword_14F1790, (uint64_t)&protocol conformance descriptor for Button<A>);
    v2[3] = sub_A2D700();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    sub_5C150(qword_14F17F0, &qword_14DD170, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14F17E8);
  }
  return result;
}

void sub_A2DDC4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = &unk_1091328;
  v4[1] = (char *)&value witness table for () + 64;
  v4[2] = (char *)&value witness table for () + 64;
  sub_184A90(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 0, 4, v4, a1 + 32);
  }
}

_QWORD *sub_A2DE48(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v11);
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    *(_QWORD *)(a1 + 8) = a2[1];
    v5 = a2[4];
    v6 = *((_OWORD *)a2 + 1);
    *(_OWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 32) = v5;
    v7 = *(int *)(a3 + 44);
    v8 = a1 + v7;
    v9 = (uint64_t)a2 + v7;
    swift_retain(v6);
    swift_retain(v5);
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_14B5420);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  }
  return v3;
}

uint64_t sub_A2DEFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release(*(_QWORD *)(a1 + 16));
  swift_release(*(_QWORD *)(a1 + 32));
  v4 = a1 + *(int *)(a2 + 44);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14B5420);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_A2DF50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 32) = v4;
  v6 = *(int *)(a3 + 44);
  v7 = a1 + v6;
  v8 = a2 + v6;
  swift_retain(v5);
  swift_retain(v4);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_14B5420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  return a1;
}

uint64_t sub_A2DFD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v8;
  swift_retain(v8);
  swift_release(v9);
  v10 = *(int *)(a3 + 44);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_14B5420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t sub_A2E070(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = *(int *)(a3 + 44);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14B5420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_A2E0E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release(v6);
  v7 = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release(v7);
  v8 = *(int *)(a3 + 44);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_14B5420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_A2E168(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_A2E174);
}

uint64_t sub_A2E174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_14B5420);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 44), a2, v8);
  }
}

uint64_t sub_A2E1F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_A2E200);
}

uint64_t sub_A2E200(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_14B5420);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 44), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for SharePlayTogetherSessionManagementViewController.ScaledButton(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SharePlayTogetherSessionManagementViewController.ScaledButton);
}

double destroy for SharePlayTogetherSessionManagementViewController.FocusableButtonStyle(uint64_t a1)
{
  double result;

  sub_270154(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  swift_release(*(_QWORD *)(a1 + 16));
  swift_release(*(_QWORD *)(a1 + 24));
  swift_release(*(_QWORD *)(a1 + 32));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for SharePlayTogetherSessionManagementViewController.FocusableButtonStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_270050(*(_QWORD *)a2, v5);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  v9 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v9;
  *(_QWORD *)(a1 + 40) = v8;
  swift_retain(v6);
  swift_retain(v7);
  swift_retain(v9);
  swift_retain(v8);
  return a1;
}

uint64_t assignWithCopy for SharePlayTogetherSessionManagementViewController.FocusableButtonStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_270050(*(_QWORD *)a2, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_270154(v6, v7);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v9;
  swift_retain(v9);
  swift_release(v8);
  v10 = *(_QWORD *)(a1 + 24);
  v11 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v11;
  swift_retain(v11);
  swift_release(v10);
  v12 = *(_QWORD *)(a1 + 32);
  v13 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v13;
  swift_retain(v13);
  swift_release(v12);
  v14 = *(_QWORD *)(a1 + 40);
  v15 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v15;
  swift_retain(v15);
  swift_release(v14);
  return a1;
}

uint64_t assignWithTake for SharePlayTogetherSessionManagementViewController.FocusableButtonStyle(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_270154(v6, v7);
  swift_release(*(_QWORD *)(a1 + 16));
  v8 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
  swift_release(v8);
  swift_release(*(_QWORD *)(a1 + 32));
  v9 = *(_QWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
  swift_release(v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for SharePlayTogetherSessionManagementViewController.FocusableButtonStyle(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SharePlayTogetherSessionManagementViewController.FocusableButtonStyle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for SharePlayTogetherSessionManagementViewController.FocusableButtonStyle()
{
  return &type metadata for SharePlayTogetherSessionManagementViewController.FocusableButtonStyle;
}

unint64_t sub_A2E530()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14F1888;
  if (!qword_14F1888)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14F14A8);
    sub_A2E594();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_14F1888);
  }
  return result;
}

unint64_t sub_A2E594()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14F1890;
  if (!qword_14F1890)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14F1898);
    sub_5C150(&qword_14F18A0, &qword_14F18A8, (uint64_t)&protocol conformance descriptor for AxisStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14F1890);
  }
  return result;
}

uint64_t sub_A2E618()
{
  return sub_184F98(&qword_14F18B0, &qword_14F1528, (void (*)(void))sub_A2E64C);
}

uint64_t sub_A2E64C()
{
  return sub_184F98(&qword_14F18B8, &qword_14F1520, (void (*)(void))sub_A2E670);
}

uint64_t sub_A2E670()
{
  return sub_184F98(&qword_14F18C0, &qword_14EDD28, (void (*)(void))sub_A2E694);
}

unint64_t sub_A2E694()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14F18C8;
  if (!qword_14F18C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_14F1510);
    sub_5C150(&qword_14F18D0, &qword_14F1508, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14F18C8);
  }
  return result;
}

uint64_t sub_A2E718()
{
  return sub_184F98(&qword_14F18D8, &qword_14F1680, (void (*)(void))sub_A2E74C);
}

uint64_t sub_A2E74C()
{
  return sub_184F98(&qword_14F18E0, &qword_14EDD30, (void (*)(void))sub_A2E770);
}

unint64_t sub_A2E770()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14F18E8;
  if (!qword_14F18E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_14F1670);
    sub_5C150(&qword_14F18F0, &qword_14F1668, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14F18E8);
  }
  return result;
}

uint64_t sub_A2E7F4()
{
  return sub_5C150(&qword_14F18F8, &qword_14F1900, (uint64_t)&protocol conformance descriptor for HStack<A>);
}

uint64_t sub_A2E820(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_12011E8, 1);
}

uint64_t sub_A2E830(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_12011B4, 1);
}

uint64_t sub_A2E864@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_A25AB0(v1[4], v1[2], v1[3], a1);
}

unint64_t sub_A2E870()
{
  unint64_t result;
  uint64_t v1;

  result = qword_14F1918;
  if (!qword_14F1918)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14F1908);
    sub_4DD24((unint64_t *)&unk_14F1920, (uint64_t (*)(uint64_t))&type metadata accessor for ButtonStyleConfiguration.Label, (uint64_t)&protocol conformance descriptor for ButtonStyleConfiguration.Label);
    sub_5C150((unint64_t *)&unk_14EC150, &qword_14C8700, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_14F1918);
  }
  return result;
}

uint64_t sub_A2E90C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t WitnessTable;
  uint64_t v3;

  v1 = type metadata accessor for ModifiedContent(255, *a1, &type metadata for _FrameLayout);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
  v3 = type metadata accessor for Button(255, v1, WitnessTable);
  return swift_getWitnessTable(&protocol conformance descriptor for Button<A>, v3);
}

uint64_t sub_A2E984()
{
  _QWORD v1[4];

  v1[0] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_14F1908);
  v1[1] = &type metadata for Color;
  v1[2] = sub_A2E870();
  v1[3] = &protocol witness table for Color;
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.background<A>(_:ignoresSafeAreaEdges:)>>, 1);
}

void sub_A2EA2C(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_A2EA78(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_A2EADC + 4 * byte_1091834[a2]))(0xD00000000000002DLL);
}

uint64_t sub_A2EADC(uint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  char v3;

  v2 = 0x80000000010C2670;
  if (a1 == 0xD00000000000002DLL && v1 == 0x80000000010C2670)
  {
    v3 = 1;
    v2 = v1;
  }
  else
  {
    v3 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0xD00000000000002DLL, 0x80000000010C2670, 0);
  }
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(v2);
  return v3 & 1;
}

uint64_t sub_A2EB70(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000010;
  else
    v3 = 0xD000000000000018;
  if (v2)
    v4 = 0x80000000010C39A0;
  else
    v4 = 0x80000000010C39C0;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000010;
  else
    v5 = 0xD000000000000018;
  if ((a2 & 1) != 0)
    v6 = 0x80000000010C39C0;
  else
    v6 = 0x80000000010C39A0;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

void sub_A2EC18(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_A2EC68(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))((char *)sub_A2ECD4 + 4 * byte_109183D[a2]))(v2 - 12);
}

uint64_t sub_A2ECD4(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  char v4;

  v3 = 0x80000000010C34E0;
  if (a1 == v1 - 12 && v2 == 0x80000000010C34E0)
  {
    v4 = 1;
    v3 = v2;
  }
  else
  {
    v4 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v2, v1 - 12, 0x80000000010C34E0, 0);
  }
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v3);
  return v4 & 1;
}

void sub_A2ED7C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_A2EDC4(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_A2EE84 + 4 * byte_1091849[a2]))(0x73747369747261);
}

uint64_t sub_A2EE84(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x73747369747261 && v1 == 0xE700000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x73747369747261, 0xE700000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE700000000000000);
  return v2 & 1;
}

void sub_A2EF9C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_A2EFF8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_A2F0B0 + 4 * byte_1091857[a2]))(0xD000000000000010);
}

uint64_t sub_A2F0B0(uint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  char v3;

  v2 = 0x80000000010C3A90;
  if (a1 == 0xD000000000000010 && v1 == 0x80000000010C3A90)
  {
    v3 = 1;
    v2 = v1;
  }
  else
  {
    v3 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0xD000000000000010, 0x80000000010C3A90, 0);
  }
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(v2);
  return v3 & 1;
}

uint64_t sub_A2F1BC(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  if ((a1 & 1) != 0)
    v2 = 1953720684;
  else
    v2 = 1684632167;
  if ((a2 & 1) != 0)
    v3 = 1953720684;
  else
    v3 = 1684632167;
  if (v2 == v3)
    v4 = 1;
  else
    v4 = _stringCompareWithSmolCheck(_:_:expecting:)(v2, 0xE400000000000000, v3, 0xE400000000000000, 0);
  swift_bridgeObjectRelease_n(0xE400000000000000, 2);
  return v4 & 1;
}

uint64_t sub_A2F228(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6F4E6E657473696CLL;
  else
    v3 = 0x487972617262696CLL;
  if (v2)
    v4 = 0xED00007265646165;
  else
    v4 = 0xEF72656461654877;
  if ((a2 & 1) != 0)
    v5 = 0x6F4E6E657473696CLL;
  else
    v5 = 0x487972617262696CLL;
  if ((a2 & 1) != 0)
    v6 = 0xEF72656461654877;
  else
    v6 = 0xED00007265646165;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

uint64_t sub_A2F2E4(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xD00000000000002CLL;
  v3 = 0x80000000010C3120;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0xD00000000000001CLL;
    else
      v5 = 0xD000000000000029;
    if (v4 == 1)
      v6 = 0x80000000010C3150;
    else
      v6 = 0x80000000010C3170;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0xD00000000000002CLL;
  v6 = 0x80000000010C3120;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v2 = 0xD00000000000001CLL;
    else
      v2 = 0xD000000000000029;
    if (v7 == 1)
      v3 = 0x80000000010C3150;
    else
      v3 = 0x80000000010C3170;
  }
LABEL_15:
  if (v5 == v2 && v6 == v3)
  {
    v8 = 1;
    v3 = v6;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v6, v2, v3, 0);
  }
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v3);
  return v8 & 1;
}

void sub_A2F3D8(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_A2F420(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_A2F4EC + 4 * byte_1091867[a2]))(0x6D75626C61);
}

uint64_t sub_A2F4EC(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6D75626C61 && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x6D75626C61, 0xE500000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE500000000000000);
  return v2 & 1;
}

void sub_A2F620(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_A2F660(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_A2F730 + 4 * byte_1091878[a2]))(0x73747369747261);
}

uint64_t sub_A2F730(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x73747369747261 && v1 == 0xE700000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x73747369747261, 0xE700000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE700000000000000);
  return v2 & 1;
}

uint64_t sub_A2F868(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6C6169636F73;
  else
    v3 = 0x676F6C61746163;
  if (v2)
    v4 = 0xE700000000000000;
  else
    v4 = 0xE600000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x6C6169636F73;
  else
    v5 = 0x676F6C61746163;
  if ((a2 & 1) != 0)
    v6 = 0xE600000000000000;
  else
    v6 = 0xE700000000000000;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

void sub_A2F908(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_A2F948(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_A2FA04 + 4 * byte_1091887[a2]))(0x75516C65636E6163);
}

uint64_t sub_A2FA04(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x75516C65636E6163 && v1 == 0xEB00000000797265)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x75516C65636E6163, 0xEB00000000797265, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xEB00000000797265);
  return v2 & 1;
}

uint64_t sub_A2FB18(unsigned __int8 a1, unsigned __int8 a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  char v8;

  v2 = 0x73676E6F73;
  v3 = a1;
  if (a1)
  {
    if (a1 == 1)
      v4 = 0x736D75626C61;
    else
      v4 = 0x69762D636973756DLL;
    if (v3 == 1)
      v5 = 0xE600000000000000;
    else
      v5 = 0xEC000000736F6564;
    v6 = a2;
    if (a2)
    {
LABEL_9:
      if (v6 == 1)
        v2 = 0x736D75626C61;
      else
        v2 = 0x69762D636973756DLL;
      if (v6 == 1)
        v7 = 0xE600000000000000;
      else
        v7 = 0xEC000000736F6564;
      if (v4 != v2)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v5 = 0xE500000000000000;
    v4 = 0x73676E6F73;
    v6 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE500000000000000;
  if (v4 != 0x73676E6F73)
  {
LABEL_21:
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v2, v7, 0);
    goto LABEL_22;
  }
LABEL_19:
  if (v5 != v7)
    goto LABEL_21;
  v8 = 1;
  v7 = v5;
LABEL_22:
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v7);
  return v8 & 1;
}

uint64_t sub_A2FC30(unsigned __int8 a1, unsigned __int8 a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  char v8;

  v2 = 0x6E776F6E6B6E75;
  v3 = a1;
  if (a1)
  {
    if (a1 == 1)
      v4 = 0x64657472617473;
    else
      v4 = 0x6465776569766572;
    if (v3 == 1)
      v5 = 0xE700000000000000;
    else
      v5 = 0xE800000000000000;
    v6 = a2;
    if (a2)
    {
LABEL_9:
      if (v6 == 1)
        v2 = 0x64657472617473;
      else
        v2 = 0x6465776569766572;
      if (v6 == 1)
        v7 = 0xE700000000000000;
      else
        v7 = 0xE800000000000000;
      if (v4 != v2)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v5 = 0xE700000000000000;
    v4 = 0x6E776F6E6B6E75;
    v6 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v4 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v2, v7, 0);
    goto LABEL_22;
  }
LABEL_19:
  if (v5 != v7)
    goto LABEL_21;
  v8 = 1;
  v7 = v5;
LABEL_22:
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v7);
  return v8 & 1;
}

uint64_t sub_A2FD48(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x657370616C6C6F63;
  else
    v3 = 0x72616C75676572;
  if (v2)
    v4 = 0xE700000000000000;
  else
    v4 = 0xE900000000000064;
  if ((a2 & 1) != 0)
    v5 = 0x657370616C6C6F63;
  else
    v5 = 0x72616C75676572;
  if ((a2 & 1) != 0)
    v6 = 0xE900000000000064;
  else
    v6 = 0xE700000000000000;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

uint64_t sub_A2FDF0(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x64616F6C6E776F64;
  else
    v3 = 0x6C416C65636E6163;
  if (v2)
    v4 = 0xE90000000000006CLL;
  else
    v4 = 0xE900000000000073;
  if ((a2 & 1) != 0)
    v5 = 0x64616F6C6E776F64;
  else
    v5 = 0x6C416C65636E6163;
  if ((a2 & 1) != 0)
    v6 = 0xE900000000000073;
  else
    v6 = 0xE90000000000006CLL;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

void sub_A2FE98(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_A2FED8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_A2FFD4 + 4 * byte_1091897[a2]))(0x69536E6565726373);
}

uint64_t sub_A2FFD4(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x69536E6565726373 && v1 == 0xEA0000000000657ALL)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x69536E6565726373, 0xEA0000000000657ALL, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xEA0000000000657ALL);
  return v2 & 1;
}

uint64_t sub_A30138(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x657469726F766166;
  else
    v3 = 7105633;
  if (v2)
    v4 = 0xE300000000000000;
  else
    v4 = 0xE900000000000064;
  if ((a2 & 1) != 0)
    v5 = 0x657469726F766166;
  else
    v5 = 7105633;
  if ((a2 & 1) != 0)
    v6 = 0xE900000000000064;
  else
    v6 = 0xE300000000000000;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

uint64_t sub_A301D8(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xEB000000006D6574;
  v3 = 0x49746E6572727563;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0x73636972796CLL;
    else
      v5 = 0x6575657571;
    if (v4 == 1)
      v6 = 0xE600000000000000;
    else
      v6 = 0xE500000000000000;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0x49746E6572727563;
  v6 = 0xEB000000006D6574;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v3 = 0x73636972796CLL;
    else
      v3 = 0x6575657571;
    if (v7 == 1)
      v2 = 0xE600000000000000;
    else
      v2 = 0xE500000000000000;
  }
LABEL_15:
  if (v5 == v3 && v6 == v2)
  {
    v8 = 1;
    v2 = v6;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v6, v3, v2, 0);
  }
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v2);
  return v8 & 1;
}

uint64_t sub_A302E8(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x636972656E6567;
  else
    v3 = 0x6572506563696F76;
  if (v2)
    v4 = 0xEC00000077656976;
  else
    v4 = 0xE700000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x636972656E6567;
  else
    v5 = 0x6572506563696F76;
  if ((a2 & 1) != 0)
    v6 = 0xE700000000000000;
  else
    v6 = 0xEC00000077656976;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

uint64_t sub_A30394(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD00000000000002ELL;
  else
    v3 = 0xD000000000000026;
  if (v2)
    v4 = 0x80000000010C2BC0;
  else
    v4 = 0x80000000010C2BF0;
  if ((a2 & 1) != 0)
    v5 = 0xD00000000000002ELL;
  else
    v5 = 0xD000000000000026;
  if ((a2 & 1) != 0)
    v6 = 0x80000000010C2BF0;
  else
    v6 = 0x80000000010C2BC0;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

uint64_t sub_A3043C(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xD000000000000016;
  v3 = 0x80000000010C31C0;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0xD00000000000001ELL;
    else
      v5 = 0xD000000000000017;
    if (v4 == 1)
      v6 = 0x80000000010C31E0;
    else
      v6 = 0x80000000010C3200;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0xD000000000000016;
  v6 = 0x80000000010C31C0;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v2 = 0xD00000000000001ELL;
    else
      v2 = 0xD000000000000017;
    if (v7 == 1)
      v3 = 0x80000000010C31E0;
    else
      v3 = 0x80000000010C3200;
  }
LABEL_15:
  if (v5 == v2 && v6 == v3)
  {
    v8 = 1;
    v3 = v6;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v6, v2, v3, 0);
  }
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v3);
  return v8 & 1;
}

uint64_t sub_A30530(unsigned __int8 a1, unsigned __int8 a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  char v8;

  v2 = 0x746361706D6F63;
  v3 = a1;
  if (a1)
  {
    if (a1 == 1)
      v4 = 0x72616C75676572;
    else
      v4 = 0x4572616C75676572;
    if (v3 == 1)
      v5 = 0xE700000000000000;
    else
      v5 = 0xEF6465646E657478;
    v6 = a2;
    if (a2)
    {
LABEL_9:
      if (v6 == 1)
        v2 = 0x72616C75676572;
      else
        v2 = 0x4572616C75676572;
      if (v6 == 1)
        v7 = 0xE700000000000000;
      else
        v7 = 0xEF6465646E657478;
      if (v4 != v2)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v5 = 0xE700000000000000;
    v4 = 0x746361706D6F63;
    v6 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v4 != 0x746361706D6F63)
  {
LABEL_21:
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v2, v7, 0);
    goto LABEL_22;
  }
LABEL_19:
  if (v5 != v7)
    goto LABEL_21;
  v8 = 1;
  v7 = v5;
LABEL_22:
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v7);
  return v8 & 1;
}

uint64_t sub_A30660(unsigned __int8 a1, unsigned __int8 a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  char v8;

  v2 = 0x676E6979616C70;
  v3 = a1;
  if (a1)
  {
    if (a1 == 1)
      v4 = 0x646573756170;
    else
      v4 = 0x646570706F7473;
    if (v3 == 1)
      v5 = 0xE600000000000000;
    else
      v5 = 0xE700000000000000;
    v6 = a2;
    if (a2)
    {
LABEL_9:
      if (v6 == 1)
        v2 = 0x646573756170;
      else
        v2 = 0x646570706F7473;
      if (v6 == 1)
        v7 = 0xE600000000000000;
      else
        v7 = 0xE700000000000000;
      if (v4 != v2)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v5 = 0xE700000000000000;
    v4 = 0x676E6979616C70;
    v6 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v4 != 0x676E6979616C70)
  {
LABEL_21:
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v2, v7, 0);
    goto LABEL_22;
  }
LABEL_19:
  if (v5 != v7)
    goto LABEL_21;
  v8 = 1;
  v7 = v5;
LABEL_22:
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v7);
  return v8 & 1;
}

uint64_t sub_A30770(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x64656B63617473;
  else
    v3 = 0x656E696C6E69;
  if (v2)
    v4 = 0xE600000000000000;
  else
    v4 = 0xE700000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x64656B63617473;
  else
    v5 = 0x656E696C6E69;
  if ((a2 & 1) != 0)
    v6 = 0xE700000000000000;
  else
    v6 = 0xE600000000000000;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

void sub_A30810(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_A3085C(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))((char *)sub_A308C0 + 4 * byte_10918AC[a2]))(v2 + 2);
}

uint64_t sub_A308C0(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  char v4;

  v3 = 0x80000000010C32E0;
  if (a1 == v1 + 2 && v2 == 0x80000000010C32E0)
  {
    v4 = 1;
    v3 = v2;
  }
  else
  {
    v4 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v2, v1 + 2, 0x80000000010C32E0, 0);
  }
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v3);
  return v4 & 1;
}

uint64_t sub_A30960(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  if ((a1 & 1) != 0)
    v2 = 0x7972617262696CLL;
  else
    v2 = 0x676F6C61746163;
  if ((a2 & 1) != 0)
    v3 = 0x7972617262696CLL;
  else
    v3 = 0x676F6C61746163;
  if (v2 == v3)
    v4 = 1;
  else
    v4 = _stringCompareWithSmolCheck(_:_:expecting:)(v2, 0xE700000000000000, v3, 0xE700000000000000, 0);
  swift_bridgeObjectRelease_n(0xE700000000000000, 2);
  return v4 & 1;
}

uint64_t sub_A309DC(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  if ((a1 & 1) != 0)
    v2 = 0x6C6C616D73;
  else
    v2 = 0x656772616CLL;
  if ((a2 & 1) != 0)
    v3 = 0x6C6C616D73;
  else
    v3 = 0x656772616CLL;
  if (v2 == v3)
    v4 = 1;
  else
    v4 = _stringCompareWithSmolCheck(_:_:expecting:)(v2, 0xE500000000000000, v3, 0xE500000000000000, 0);
  swift_bridgeObjectRelease_n(0xE500000000000000, 2);
  return v4 & 1;
}

uint64_t sub_A30A50(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x64657265746E6563;
  else
    v3 = 1952867692;
  if (v2)
    v4 = 0xE400000000000000;
  else
    v4 = 0xE800000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x64657265746E6563;
  else
    v5 = 1952867692;
  if ((a2 & 1) != 0)
    v6 = 0xE800000000000000;
  else
    v6 = 0xE400000000000000;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

uint64_t sub_A30AEC(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x656B6F727473;
  else
    v3 = 1819044198;
  if (v2)
    v4 = 0xE400000000000000;
  else
    v4 = 0xE600000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x656B6F727473;
  else
    v5 = 1819044198;
  if ((a2 & 1) != 0)
    v6 = 0xE600000000000000;
  else
    v6 = 0xE400000000000000;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

uint64_t sub_A30B84(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x647261646E617473;
  else
    v3 = 0x6E656E696D6F7270;
  if (v2)
    v4 = 0xE900000000000074;
  else
    v4 = 0xE800000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x647261646E617473;
  else
    v5 = 0x6E656E696D6F7270;
  if ((a2 & 1) != 0)
    v6 = 0xE800000000000000;
  else
    v6 = 0xE900000000000074;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

uint64_t sub_A30C2C(char a1, unsigned __int8 a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  char v5;

  v2 = 0xEF70756F72472E73;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0xED00006C6C412E73;
    else
      v3 = 0xED000077654E2E73;
    v4 = a2;
    if (a2)
      goto LABEL_6;
  }
  else
  {
    v3 = 0xEF70756F72472E73;
    v4 = a2;
    if (a2)
    {
LABEL_6:
      if (v4 == 1)
        v2 = 0xED00006C6C412E73;
      else
        v2 = 0xED000077654E2E73;
    }
  }
  if (v3 == v2)
  {
    v5 = 1;
    v2 = v3;
  }
  else
  {
    v5 = _stringCompareWithSmolCheck(_:_:expecting:)(0x7473696C79616C50, v3, 0x7473696C79616C50, v2, 0);
  }
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);
  return v5 & 1;
}

uint64_t sub_A30D38(unsigned __int8 a1, unsigned __int8 a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  char v8;

  v2 = 0x6D75626C61;
  v3 = a1;
  if (a1)
  {
    if (a1 == 1)
      v4 = 0x7473696C79616C70;
    else
      v4 = 1735290739;
    if (v3 == 1)
      v5 = 0xE800000000000000;
    else
      v5 = 0xE400000000000000;
    v6 = a2;
    if (a2)
    {
LABEL_9:
      if (v6 == 1)
        v2 = 0x7473696C79616C70;
      else
        v2 = 1735290739;
      if (v6 == 1)
        v7 = 0xE800000000000000;
      else
        v7 = 0xE400000000000000;
      if (v4 != v2)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v5 = 0xE500000000000000;
    v4 = 0x6D75626C61;
    v6 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE500000000000000;
  if (v4 != 0x6D75626C61)
  {
LABEL_21:
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v2, v7, 0);
    goto LABEL_22;
  }
LABEL_19:
  if (v5 != v7)
    goto LABEL_21;
  v8 = 1;
  v7 = v5;
LABEL_22:
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v7);
  return v8 & 1;
}

uint64_t sub_A30E38(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xEB00000000747369;
  v3 = 0x6C79616C5077656ELL;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0x73746E65636572;
    else
      v5 = 0x6C79616C506C6C61;
    if (v4 == 1)
      v6 = 0xE700000000000000;
    else
      v6 = 0xEC00000073747369;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0x6C79616C5077656ELL;
  v6 = 0xEB00000000747369;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v3 = 0x73746E65636572;
    else
      v3 = 0x6C79616C506C6C61;
    if (v7 == 1)
      v2 = 0xE700000000000000;
    else
      v2 = 0xEC00000073747369;
  }
LABEL_15:
  if (v5 == v3 && v6 == v2)
  {
    v8 = 1;
    v2 = v6;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v6, v3, v2, 0);
  }
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v2);
  return v8 & 1;
}

uint64_t sub_A30F68(char a1, unsigned __int8 a2)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  int v6;
  char v7;

  v2 = 0xD00000000000001FLL;
  v3 = 0x80000000010C2B10;
  if (a1)
  {
    if (a1 == 1)
      v4 = 0x80000000010C2B40;
    else
      v4 = 0x80000000010C2B60;
    v5 = 0xD00000000000001FLL;
    v6 = a2;
    if (a2)
    {
LABEL_6:
      if (v6 == 1)
        v3 = 0x80000000010C2B40;
      else
        v3 = 0x80000000010C2B60;
      if (v5 != 0xD00000000000001FLL)
        goto LABEL_15;
      goto LABEL_13;
    }
  }
  else
  {
    v5 = 0xD000000000000020;
    v4 = 0x80000000010C2B10;
    v6 = a2;
    if (a2)
      goto LABEL_6;
  }
  v2 = 0xD000000000000020;
  if (v5 != 0xD000000000000020)
  {
LABEL_15:
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v4, v2, v3, 0);
    goto LABEL_16;
  }
LABEL_13:
  if (v4 != v3)
    goto LABEL_15;
  v7 = 1;
  v3 = v4;
LABEL_16:
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v3);
  return v7 & 1;
}

void sub_A31060(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_A310A0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_A31120 + 4 * byte_10918B5[a2]))(0x6D75626C61);
}

uint64_t sub_A31120(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6D75626C61 && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x6D75626C61, 0xE500000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE500000000000000);
  return v2 & 1;
}

uint64_t sub_A311E8(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xEA00000000006C65;
  v3 = 0x62614C656C746974;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0x79426E6F69746361;
    else
      v5 = 0x65546C6961746564;
    if (v4 == 1)
      v6 = 0xEC000000656E696CLL;
    else
      v6 = 0xEF6C6562614C7478;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0x62614C656C746974;
  v6 = 0xEA00000000006C65;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v3 = 0x79426E6F69746361;
    else
      v3 = 0x65546C6961746564;
    if (v7 == 1)
      v2 = 0xEC000000656E696CLL;
    else
      v2 = 0xEF6C6562614C7478;
  }
LABEL_15:
  if (v5 == v3 && v6 == v2)
  {
    v8 = 1;
    v2 = v6;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v6, v3, v2, 0);
  }
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v2);
  return v8 & 1;
}

void sub_A31328(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_A31378(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_A313E8 + 4 * byte_10918BF[a2]))(0x676F6C61746163);
}

uint64_t sub_A313E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == 0x676F6C61746163 && v1 == v2)
  {
    v3 = 1;
    v2 = v1;
  }
  else
  {
    v3 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x676F6C61746163, v2, 0);
  }
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(v2);
  return v3 & 1;
}

uint64_t sub_A314A0(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x746169636F737361;
  else
    v3 = 0xD000000000000011;
  if (v2)
    v4 = 0x80000000010C38E0;
  else
    v4 = 0xEF65756C61566465;
  if ((a2 & 1) != 0)
    v5 = 0x746169636F737361;
  else
    v5 = 0xD000000000000011;
  if ((a2 & 1) != 0)
    v6 = 0xEF65756C61566465;
  else
    v6 = 0x80000000010C38E0;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

void sub_A31554(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_A31594(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_A31618 + 4 * byte_10918CA[a2]))(0x6573776F7262);
}

uint64_t sub_A31618(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6573776F7262 && v1 == 0xE600000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x6573776F7262, 0xE600000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE600000000000000);
  return v2 & 1;
}

void sub_A316EC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_A3173C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_A317D4 + 4 * byte_10918D5[a2]))(0x61656C655277656ELL);
}

uint64_t sub_A317D4(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x61656C655277656ELL && v1 == 0xEB00000000736573)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x61656C655277656ELL, 0xEB00000000736573, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xEB00000000736573);
  return v2 & 1;
}

void sub_A318B0(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_A31924@<X0>(unsigned __int8 a1@<W1>, uint64_t a2@<X8>)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_A3199C + 4 * byte_10918DF[a1]))(a2 + 2);
}

uint64_t sub_A3199C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v2;
  unint64_t v3;
  char v4;

  v3 = 0x80000000010C3230;
  if (a1 == a2 + 2 && v2 == 0x80000000010C3230)
  {
    v4 = 1;
    v3 = v2;
  }
  else
  {
    v4 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v2, a2 + 2, 0x80000000010C3230, 0);
  }
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v3);
  return v4 & 1;
}

uint64_t sub_A31A58(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x7473696C79616C70;
  else
    v3 = 0x6979616C50776F6ELL;
  if (v2)
    v4 = 0xEA0000000000676ELL;
  else
    v4 = 0xEE006C6961746544;
  if ((a2 & 1) != 0)
    v5 = 0x7473696C79616C70;
  else
    v5 = 0x6979616C50776F6ELL;
  if ((a2 & 1) != 0)
    v6 = 0xEE006C6961746544;
  else
    v6 = 0xEA0000000000676ELL;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

void sub_A31B0C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_A31B5C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_A31BE4 + 4 * byte_10918EA[a2]))(0x6F4E6E657473696CLL);
}

uint64_t sub_A31BE4(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6F4E6E657473696CLL && v1 == 0xE900000000000077)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x6F4E6E657473696CLL, 0xE900000000000077, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE900000000000077);
  return v2 & 1;
}

void sub_A31CBC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_A31CFC(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_A31D60 + 4 * byte_10918F4[a2]))(0x6C616D726F6ELL);
}

uint64_t sub_A31D60(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6C616D726F6ELL && v1 == 0xE600000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x6C616D726F6ELL, 0xE600000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE600000000000000);
  return v2 & 1;
}

uint64_t sub_A31E08(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v9[9];

  if (*(_QWORD *)(a2 + 16))
  {
    Hasher.init(_seed:)(v9);
    v4 = ApplicationCapabilities.Service.rawValue.getter(a1);
    v6 = v5;
    String.hash(into:)(v9, v4, v5);
    swift_bridgeObjectRelease(v6);
    v7 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(a2 + 32));
    if (((*(_QWORD *)(a2 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
      __asm { BR              X9 }
  }
  return 0;
}

uint64_t sub_A321D4(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  Swift::Int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int v12;
  unint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD v17[9];

  if (*(_QWORD *)(a2 + 16))
  {
    Hasher.init(_seed:)(v17);
    if (a1)
    {
      v4 = a1 == 1 ? 0x657469726F766166 : 0x64616F6C6E776F64;
      v5 = 0xE900000000000073;
    }
    else
    {
      v5 = 0xE300000000000000;
      v4 = 7105633;
    }
    String.hash(into:)(v17, v4, v5);
    swift_bridgeObjectRelease(v5);
    v6 = Hasher._finalize()();
    v7 = -1 << *(_BYTE *)(a2 + 32);
    v8 = v6 & ~v7;
    if (((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v9 = ~v7;
      while (1)
      {
        if (*(_BYTE *)(*(_QWORD *)(a2 + 48) + v8))
        {
          if (*(_BYTE *)(*(_QWORD *)(a2 + 48) + v8) == 1)
            v10 = 0x657469726F766166;
          else
            v10 = 0x64616F6C6E776F64;
          v11 = 0xE900000000000073;
          v12 = a1;
          if (!a1)
          {
LABEL_14:
            v13 = 0xE300000000000000;
            v14 = 7105633;
            if (v10 != 7105633)
              goto LABEL_23;
            goto LABEL_22;
          }
        }
        else
        {
          v11 = 0xE300000000000000;
          v10 = 7105633;
          v12 = a1;
          if (!a1)
            goto LABEL_14;
        }
        if (v12 == 1)
          v14 = 0x657469726F766166;
        else
          v14 = 0x64616F6C6E776F64;
        v13 = 0xE900000000000073;
        if (v10 != v14)
          goto LABEL_23;
LABEL_22:
        if (v11 == v13)
        {
          swift_bridgeObjectRelease_n(v11, 2);
          v15 = 1;
          return v15 & 1;
        }
LABEL_23:
        v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v11, v14, v13, 0);
        swift_bridgeObjectRelease(v11);
        swift_bridgeObjectRelease(v13);
        if ((v15 & 1) == 0)
        {
          v8 = (v8 + 1) & v9;
          if (((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
            continue;
        }
        return v15 & 1;
      }
    }
  }
  v15 = 0;
  return v15 & 1;
}

BOOL sub_A323D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 result;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  v4 = static Hasher._hash(seed:_:)(*(_QWORD *)(a2 + 40), a1);
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = v4 & ~v5;
  v7 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(v8 + 8 * v6) == a1)
    return 1;
  v9 = ~v5;
  v10 = (v6 + 1) & v9;
  if (((*(_QWORD *)(v7 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
    return 0;
  do
  {
    v11 = *(_QWORD *)(v8 + 8 * v10);
    result = v11 == a1;
    if (v11 == a1)
      break;
    v10 = (v10 + 1) & v9;
  }
  while (((*(_QWORD *)(v7 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  return result;
}

uint64_t sub_A324A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Swift::Int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t result;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  _QWORD v20[9];

  if (*(_QWORD *)(a3 + 16))
  {
    Hasher.init(_seed:)(v20);
    String.hash(into:)(v20, a1, a2);
    v6 = Hasher._finalize()();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = v11[1];
      v13 = *v11 == a1 && v12 == a2;
      if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v11, v12, a1, a2, 0) & 1) != 0)
        return 1;
      v15 = ~v7;
      v16 = (v8 + 1) & v15;
      if (((*(_QWORD *)(v9 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
      {
        while (1)
        {
          v17 = (_QWORD *)(v10 + 16 * v16);
          v18 = v17[1];
          v19 = *v17 == a1 && v18 == a2;
          if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v17, v18, a1, a2, 0) & 1) != 0)
            break;
          result = 0;
          v16 = (v16 + 1) & v15;
          if (((*(_QWORD *)(v9 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_A325D4(void *a1, uint64_t a2)
{
  return sub_A33184(a1, a2, (unint64_t *)&qword_14C9D90, UIViewController_ptr);
}

uint64_t sub_A325E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, unint64_t, uint64_t);
  uint64_t v15;
  char v16;
  uint64_t v18;
  uint64_t v19;

  v4 = type metadata accessor for IndexPath(0);
  v19 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a2 + 16)
    && (v7 = *(_QWORD *)(a2 + 40),
        v8 = sub_4DD24((unint64_t *)&qword_14B2010, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath), v9 = dispatch thunk of Hashable._rawHashValue(seed:)(v7, v4, v8), v10 = -1 << *(_BYTE *)(a2 + 32), v11 = v9 & ~v10, ((*(_QWORD *)(a2 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0))
  {
    v12 = ~v10;
    v13 = *(_QWORD *)(v19 + 72);
    v14 = *(void (**)(char *, unint64_t, uint64_t))(v19 + 16);
    do
    {
      v14(v6, *(_QWORD *)(a2 + 48) + v13 * v11, v4);
      v15 = sub_4DD24((unint64_t *)&qword_14B2940, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
      v16 = dispatch thunk of static Equatable.== infix(_:_:)(v6, a1, v4, v15);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v6, v4);
      if ((v16 & 1) != 0)
        break;
      v11 = (v11 + 1) & v12;
    }
    while (((*(_QWORD *)(a2 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  }
  else
  {
    v16 = 0;
  }
  return v16 & 1;
}

BOOL sub_A3276C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 result;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  v4 = static Hasher._hash(seed:_:)(*(_QWORD *)(a2 + 40), a1);
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = v4 & ~v5;
  v7 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(v8 + 8 * v6) == a1)
    return 1;
  v10 = ~v5;
  v11 = (v6 + 1) & v10;
  if (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
    return 0;
  do
  {
    v12 = *(_QWORD *)(v8 + 8 * v11);
    result = v12 == a1;
    if (v12 == a1)
      break;
    v11 = (v11 + 1) & v10;
  }
  while (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_A32834(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v9[10];

  if (*(_QWORD *)(a2 + 16))
  {
    Hasher.init(_seed:)(v9);
    v4 = Library.Menu.Identifier.rawValue.getter(a1);
    v6 = v5;
    String.hash(into:)(v9, v4, v5);
    swift_bridgeObjectRelease(v6);
    v7 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(a2 + 32));
    if (((*(_QWORD *)(a2 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
      __asm { BR              X9 }
  }
  return 0;
}

uint64_t sub_A32B98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Swift::Int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t result;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  _QWORD v20[9];

  if (*(_QWORD *)(a3 + 16))
  {
    Hasher.init(_seed:)(v20);
    swift_bridgeObjectRetain(a2);
    String.hash(into:)(v20, a1, a2);
    swift_bridgeObjectRelease(a2);
    v6 = Hasher._finalize()();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = v11[1];
      v13 = *v11 == a1 && v12 == a2;
      if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v11, v12, a1, a2, 0) & 1) != 0)
        return 1;
      v15 = ~v7;
      v16 = (v8 + 1) & v15;
      if (((*(_QWORD *)(v9 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
      {
        while (1)
        {
          v17 = (_QWORD *)(v10 + 16 * v16);
          v18 = v17[1];
          v19 = *v17 == a1 && v18 == a2;
          if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v17, v18, a1, a2, 0) & 1) != 0)
            break;
          result = 0;
          v16 = (v16 + 1) & v15;
          if (((*(_QWORD *)(v9 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_A32CE4(unsigned __int8 a1, uint64_t a2)
{
  Swift::UInt v4;
  Swift::Int v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD v10[9];

  if (*(_QWORD *)(a2 + 16))
  {
    Hasher.init(_seed:)(v10);
    if ((a1 - 3) >= 7u)
    {
      Hasher._combine(_:)(6uLL);
      v4 = a1;
    }
    else
    {
      v4 = qword_10928E8[(char)(a1 - 3)];
    }
    Hasher._combine(_:)(v4);
    v5 = Hasher._finalize()();
    v6 = -1 << *(_BYTE *)(a2 + 32);
    v7 = v5 & ~v6;
    if (((*(_QWORD *)(a2 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
    {
      v8 = ~v6;
      while (1)
      {
        switch(*(_BYTE *)(*(_QWORD *)(a2 + 48) + v7))
        {
          case 3:
            if (a1 != 3)
              goto LABEL_8;
            return 1;
          case 4:
            if (a1 == 4)
              return 1;
            goto LABEL_8;
          case 5:
            if (a1 == 5)
              return 1;
            goto LABEL_8;
          case 6:
            if (a1 == 6)
              return 1;
            goto LABEL_8;
          case 7:
            if (a1 == 7)
              return 1;
            goto LABEL_8;
          case 8:
            if (a1 == 8)
              return 1;
            goto LABEL_8;
          case 9:
            if (a1 != 9)
              goto LABEL_8;
            return 1;
          default:
            if ((a1 - 10) <= 0xF8u && *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + v7) == a1)
              return 1;
LABEL_8:
            v7 = (v7 + 1) & v8;
            if (((*(_QWORD *)(a2 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
              return 0;
            break;
        }
      }
    }
  }
  return 0;
}

uint64_t sub_A32E74(uint64_t a1, uint64_t a2)
{
  Swift::Int v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(__n128);
  _QWORD v29[9];

  if (*(_QWORD *)(a2 + 16))
  {
    Hasher.init(_seed:)(v29);
    Lyrics.TextLine.hash(into:)((uint64_t)v29);
    v4 = Hasher._finalize()();
    v5 = -1 << *(_BYTE *)(a2 + 32);
    v6 = v4 & ~v5;
    if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
    {
      v7 = ~v5;
      v8 = *(_QWORD *)(a1 + 16);
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = v9 + 104 * v6;
        if (*(_QWORD *)(v10 + 16) == v8
          && *(double *)(v9 + 104 * v6) == *(double *)a1
          && *(double *)(v10 + 8) == *(double *)(a1 + 8)
          && *(double *)(v10 + 40) == *(double *)(a1 + 40)
          && *(double *)(v10 + 48) == *(double *)(a1 + 48))
        {
          v11 = *(_QWORD *)(v10 + 64);
          v27 = *(_QWORD *)(v10 + 32);
          v28 = *(uint64_t (**)(__n128))(v10 + 56);
          v12 = *(_QWORD *)(v10 + 80);
          v13 = *(_QWORD *)(v10 + 96);
          swift_bridgeObjectRetain();
          swift_retain(v11);
          v25 = v12;
          swift_retain(v12);
          v24 = v13;
          v14 = swift_retain(v13);
          v26 = v11;
          v15 = v28(v14);
          v17 = v16;
          v18 = (*(uint64_t (**)(void))(a1 + 56))();
          if (v15 == v18 && v17 == v19)
          {
            swift_release(v24);
            swift_release(v25);
            swift_release(v11);
            swift_bridgeObjectRelease(v27);
            swift_bridgeObjectRelease_n(v17, 2);
            return 1;
          }
          v21 = v19;
          v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v17, v18, v19, 0);
          swift_release(v24);
          swift_release(v25);
          swift_release(v26);
          swift_bridgeObjectRelease(v27);
          swift_bridgeObjectRelease(v17);
          swift_bridgeObjectRelease(v21);
          if ((v22 & 1) != 0)
            return 1;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
  }
  return 0;
}

BOOL sub_A33084(unsigned __int8 a1, uint64_t a2)
{
  Swift::UInt v3;
  Swift::Int v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 result;
  uint64_t v10;
  unint64_t v11;
  int v12;
  _QWORD v13[9];

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  v3 = a1;
  Hasher.init(_seed:)(v13);
  Hasher._combine(_:)(v3);
  v4 = Hasher._finalize()();
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = v4 & ~v5;
  v7 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(a2 + 48);
  if (*(unsigned __int8 *)(v8 + v6) == (_DWORD)v3)
    return 1;
  v10 = ~v5;
  v11 = (v6 + 1) & v10;
  if (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
    return 0;
  do
  {
    v12 = *(unsigned __int8 *)(v8 + v11);
    result = v12 == (_DWORD)v3;
    if (v12 == (_DWORD)v3)
      break;
    v11 = (v11 + 1) & v10;
  }
  while (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_A33170(void *a1, uint64_t a2)
{
  return sub_A33184(a1, a2, (unint64_t *)&unk_14BA500, MPModelKind_ptr);
}

uint64_t sub_A33184(void *a1, uint64_t a2, unint64_t *a3, _QWORD *a4)
{
  uint64_t v6;
  id v7;
  char v8;
  Swift::Int v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  char v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  id v21;

  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v12 = NSObject._rawHashValue(seed:)(*(_QWORD *)(a2 + 40));
      v13 = -1 << *(_BYTE *)(a2 + 32);
      v14 = v12 & ~v13;
      v15 = a2 + 56;
      if (((*(_QWORD *)(a2 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
      {
        sub_4E684(0, a3, a4);
        v16 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v14);
        v17 = static NSObject.== infix(_:_:)(v16, a1);

        if ((v17 & 1) != 0)
        {
          v18 = 1;
          return v18 & 1;
        }
        v19 = ~v13;
        v20 = (v14 + 1) & v19;
        if (((*(_QWORD *)(v15 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) != 0)
        {
          do
          {
            v21 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v20);
            v18 = static NSObject.== infix(_:_:)(v21, a1);

            if ((v18 & 1) != 0)
              break;
            v20 = (v20 + 1) & v19;
          }
          while (((*(_QWORD *)(v15 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) != 0);
          return v18 & 1;
        }
      }
    }
    v18 = 0;
    return v18 & 1;
  }
  if (a2 < 0)
    v6 = a2;
  else
    v6 = a2 & 0xFFFFFFFFFFFFFF8;
  v7 = a1;
  v8 = __CocoaSet.contains(_:)(v7, v6);

  return v8 & 1;
}

uint64_t sub_A332E0(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v9[9];

  if (*(_QWORD *)(a2 + 16))
  {
    Hasher.init(_seed:)(v9);
    v4 = sub_435A30(a1);
    v6 = v5;
    String.hash(into:)(v9, v4, v5);
    swift_bridgeObjectRelease(v6);
    v7 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(a2 + 32));
    if (((*(_QWORD *)(a2 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
      __asm { BR              X9 }
  }
  return 0;
}

uint64_t sub_A3382C(char a1, uint64_t a2)
{
  Swift::UInt v3;
  Swift::Int v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD v13[9];

  if (!*(_QWORD *)(a2 + 16))
    goto LABEL_9;
  v3 = a1 & 1;
  Hasher.init(_seed:)(v13);
  Hasher._combine(_:)(v3);
  v4 = Hasher._finalize()();
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = v4 & ~v5;
  v7 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    goto LABEL_9;
  v8 = *(_QWORD *)(a2 + 48);
  if (((((_DWORD)v3 == 0) ^ *(unsigned __int8 *)(v8 + v6)) & 1) != 0)
  {
    v9 = 1;
    return v9 & 1;
  }
  v10 = ~v5;
  v11 = (v6 + 1) & v10;
  if (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
  {
LABEL_9:
    v9 = 0;
    return v9 & 1;
  }
  do
  {
    v9 = ((_DWORD)v3 == 0) ^ *(_BYTE *)(v8 + v11);
    if ((v9 & 1) != 0)
      break;
    v11 = (v11 + 1) & v10;
  }
  while (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return v9 & 1;
}

uint64_t sub_A33934(char a1, uint64_t a2)
{
  uint64_t v4;
  Swift::Int v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _QWORD v12[9];

  if (*(_QWORD *)(a2 + 16)
    && ((Hasher.init(_seed:)(v12), (a1 & 1) != 0) ? (v4 = 0x7972617262696CLL) : (v4 = 0x676F6C61746163),
        String.hash(into:)(v12, v4, 0xE700000000000000),
        swift_bridgeObjectRelease(0xE700000000000000),
        v5 = Hasher._finalize()(),
        v6 = -1 << *(_BYTE *)(a2 + 32),
        v7 = v5 & ~v6,
        ((*(_QWORD *)(a2 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0))
  {
    v8 = ~v6;
    while (1)
    {
      v9 = *(_BYTE *)(*(_QWORD *)(a2 + 48) + v7) ? 0x7972617262696CLL : 0x676F6C61746163;
      if (v9 == v4)
        break;
      v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v9, 0xE700000000000000, v4, 0xE700000000000000, 0);
      swift_bridgeObjectRelease_n(0xE700000000000000, 2);
      if ((v10 & 1) == 0)
      {
        v7 = (v7 + 1) & v8;
        if (((*(_QWORD *)(a2 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
          continue;
      }
      return v10 & 1;
    }
    swift_bridgeObjectRelease_n(0xE700000000000000, 2);
    v10 = 1;
  }
  else
  {
    v10 = 0;
  }
  return v10 & 1;
}

uint64_t sub_A33A78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, unint64_t, uint64_t);
  uint64_t v15;
  char v16;
  uint64_t v18;
  uint64_t v19;

  v4 = type metadata accessor for Song(0);
  v19 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a2 + 16)
    && (v7 = *(_QWORD *)(a2 + 40),
        v8 = sub_4DD24(&qword_14AE108, (uint64_t (*)(uint64_t))&type metadata accessor for Song, (uint64_t)&protocol conformance descriptor for Song), v9 = dispatch thunk of Hashable._rawHashValue(seed:)(v7, v4, v8), v10 = -1 << *(_BYTE *)(a2 + 32), v11 = v9 & ~v10, ((*(_QWORD *)(a2 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0))
  {
    v12 = ~v10;
    v13 = *(_QWORD *)(v19 + 72);
    v14 = *(void (**)(char *, unint64_t, uint64_t))(v19 + 16);
    do
    {
      v14(v6, *(_QWORD *)(a2 + 48) + v13 * v11, v4);
      v15 = sub_4DD24(&qword_14AE110, (uint64_t (*)(uint64_t))&type metadata accessor for Song, (uint64_t)&protocol conformance descriptor for Song);
      v16 = dispatch thunk of static Equatable.== infix(_:_:)(v6, a1, v4, v15);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v6, v4);
      if ((v16 & 1) != 0)
        break;
      v11 = (v11 + 1) & v12;
    }
    while (((*(_QWORD *)(a2 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  }
  else
  {
    v16 = 0;
  }
  return v16 & 1;
}

uint64_t sub_A33BFC(char a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_4D9250(*(_QWORD *)(a2 + 40), a1);
    v4 = v3 & ~(-1 << *(_BYTE *)(a2 + 32));
    if (((*(_QWORD *)(a2 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
      __asm { BR              X9 }
  }
  return 0;
}

_QWORD *sub_A33ECC()
{
  uint64_t v0;
  uint64_t v2;

  sub_1A3760(v0, (uint64_t)&v2);
  return sub_A33F00();
}

_QWORD *sub_A33F00()
{
  uint64_t v0;
  void *v1;
  void *v2;
  _QWORD *v3;
  id v4;
  id v5;
  _QWORD *v6;
  _QWORD v8[6];
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  char v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;

  sub_1A3760(v0, (uint64_t)v8);
  v1 = (void *)v8[2];
  v2 = (void *)v8[4];
  sub_1A3760(v0, (uint64_t)&v9);
  if (v12 == 1)
  {
    v13 = v9;
    v14 = v10;
    v15 = v11;
    v16 = *((_QWORD *)&v9 + 1);
    v3 = (_QWORD *)v9;
    v4 = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_95058(&v16);
    v17 = v14;
    sub_95058(&v17);
    v18 = *((_QWORD *)&v14 + 1);
    sub_95058(&v18);
    sub_5C090((uint64_t)&v15, (uint64_t)&v19, &qword_14C98E8);
  }
  else
  {
    v13 = v9;
    *(_QWORD *)&v14 = v10;
    v17 = v9;
    v5 = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_95058(&v17);
    v18 = *((_QWORD *)&v13 + 1);
    sub_95058(&v18);
    sub_5C090((uint64_t)&v14, (uint64_t)&v19, &qword_14C98E8);
    v3 = _swiftEmptyArrayStorage;
  }
  sub_5F12C(&v19);
  v6 = sub_30C744((uint64_t)v3);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t SearchRequestResults._scopes.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;

  v4 = (*(uint64_t (**)(void))(a2 + 32))();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, a2, a1, &protocol requirements base descriptor for SearchRequestResults, &associated type descriptor for SearchRequestResults.Scope);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14B3060);
  v7 = _arrayForceCast<A, B>(_:)(v4, AssociatedTypeWitness, v6);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_A34100@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;
  _BYTE v13[40];
  _BYTE v14[48];

  sub_1A3760(v2, (uint64_t)v14);
  sub_5C238(a1, (uint64_t)v13, &qword_14DC1C0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14DC1C0);
  if (swift_dynamicCast(&v11, v13, v5, &_s7CatalogV11ResultScopeVN, 6))
  {
    v7 = *((_QWORD *)&v11 + 1);
    v6 = v11;
    v9 = *((_QWORD *)&v12 + 1);
    v8 = v12;
  }
  else
  {
    v9 = 0;
    v8 = 0;
    v7 = 0;
    v6 = 0;
    v11 = 0u;
    v12 = 0u;
  }
  sub_42E76C(v6, v7, v8, v9, a2);
  return sub_77DABC(v11, *((uint64_t *)&v11 + 1), v12, *((uint64_t *)&v12 + 1));
}

uint64_t SearchRequestResults._snapshot(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  int v12;
  _BYTE v15[40];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, a3, a2, &protocol requirements base descriptor for SearchRequestResults, &associated type descriptor for SearchRequestResults.Scope);
  v7 = type metadata accessor for Optional(0, AssociatedTypeWitness);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v15[-v9 - 8];
  sub_5C238(a1, (uint64_t)v15, &qword_14DC1C0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_14DC1C0);
  v12 = swift_dynamicCast(v10, v15, v11, AssociatedTypeWitness, 6);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(v10, v12 ^ 1u, 1, AssociatedTypeWitness);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(a3 + 56))(v10, a2, a3);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t Logger.search.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_14ABF88 != -1)
    swift_once(&qword_14ABF88, sub_A421F0);
  v0 = type metadata accessor for Logger(0);
  return __swift_project_value_buffer(v0, (uint64_t)static Logger.search);
}

uint64_t SearchRequest.description.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  Swift::String v8;
  __n128 v9;
  uint64_t v10;
  Swift::String v11;
  __n128 v12;
  void *v13;
  id v14;
  uint64_t v15;
  void *v16;
  void *v17;
  Swift::String v18;
  Swift::String v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;

  v25 = (*(uint64_t (**)(void))(*(_QWORD *)(a2 + 8) + 24))();
  v26 = v4;
  strcpy((char *)&v24, " hashedText: ");
  HIWORD(v24._object) = -4864;
  (*(void (**)(uint64_t, uint64_t))(a2 + 40))(a1, a2);
  v23 = v5;
  v6 = sub_55EA0();
  v7 = StringProtocol.hash.getter(&type metadata for String, v6);
  swift_bridgeObjectRelease();
  v22 = v7;
  v8._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  String.append(_:)(v24);
  v9 = swift_bridgeObjectRelease();
  strcpy((char *)&v24, " variant: ");
  BYTE3(v24._object) = 0;
  HIDWORD(v24._object) = -369098752;
  LOBYTE(v22) = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(a2 + 64))(a1, a2, v9) & 1;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14DEA80);
  v11._countAndFlagsBits = String.init<A>(describing:)(&v22, v10);
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  String.append(_:)(v24);
  v12 = swift_bridgeObjectRelease();
  strcpy((char *)&v24, " library: ");
  BYTE3(v24._object) = 0;
  HIDWORD(v24._object) = -369098752;
  v13 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, __n128))(a2 + 88))(a1, a2, v12);
  v14 = objc_msgSend(v13, "description", v22, v23);
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v17 = v16;

  v18._countAndFlagsBits = v15;
  v18._object = v17;
  String.append(_:)(v18);

  swift_bridgeObjectRelease();
  String.append(_:)(v24);
  swift_bridgeObjectRelease();
  v24._countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(21);
  v19._object = (void *)0x80000000010DCD80;
  v19._countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v19);
  v22 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 112))(a1, a2);
  type metadata accessor for MPMediaLibraryFilteringOptions(0);
  _print_unlocked<A, B>(_:_:)(&v22, &v24, v20, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  String.append(_:)(v24);
  swift_bridgeObjectRelease();
  return v25;
}

uint64_t SearchSource._recentlySearchedStorageKey.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a2 + 8) + 8))();
}

void sub_A345D0(void *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_A4A988();
  SearchSource._add<A>(recentlySearchedModelObject:)(a1, a3, a2, v6);
}

void SearchSource._add<A>(recentlySearchedModelObject:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t AssociatedConformanceWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  uint64_t v18;
  id v19;
  double v20;
  uint64_t v21[4];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, a4, a2, &protocol requirements base descriptor for SearchSource, &associated type descriptor for SearchSource.ResultEntityKind);
  v9 = swift_getAssociatedTypeWitness(255, a4, a2, &protocol requirements base descriptor for SearchSource, &associated type descriptor for SearchSource.RecentlySearchedTranslator);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(a4, a2, v9, &protocol requirements base descriptor for SearchSource, &associated conformance descriptor for SearchSource.SearchSource.RecentlySearchedTranslator: RecentlySearchedTranslating);
  v11 = swift_getAssociatedConformanceWitness(AssociatedConformanceWitness, v9, AssociatedTypeWitness, &protocol requirements base descriptor for RecentlySearchedTranslating, &associated conformance descriptor for RecentlySearchedTranslating.RecentlySearchedTranslating.Kind: SearchResultEntityKind);
  v13 = type metadata accessor for Search.Recents.Item(0, AssociatedTypeWitness, v11, v12);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)v21 - v15;
  v17 = a1;
  v18 = v21[3];
  sub_A3A658(v17, AssociatedTypeWitness, a3, v11, v16);
  if (!v18)
  {
    v19 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    v20 = sub_A3A888((uint64_t)v16, v21[1], a2, a4);
    (*(void (**)(char *, uint64_t, double))(v14 + 8))(v16, v13, v20);

  }
}

void sub_A347A0(uint64_t a1, uint64_t a2)
{
  sub_A4241C(a1, a2, &qword_14F1F88, (uint64_t)&unk_14F1F90, (uint64_t)&unk_14F1F98, (uint64_t (*)(uint64_t, uint64_t, void *, void *))sub_A4AD28);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SearchSource._clearRecentlySearchedItems()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  v3 = v1;
  v4 = v0;
  v5 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  NSUserDefaults.clearRecentlySearchedItems<A>(for:)(v2, v4, v3);

}

uint64_t sub_A34850(char a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD v15[15];

  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v15[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v15[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
  {
    v11 = 0x62694C2072756F59;
    v10 = 0xEC00000079726172;
  }
  else
  {
    static ApplicationCapabilities.shared.getter((uint64_t)v15);
    v8 = v15[3];
    swift_bridgeObjectRetain();
    sub_A9008(v15);
    v9 = sub_A31E08(2u, v8);
    swift_bridgeObjectRelease(v8);
    if ((v9 & 1) != 0)
    {
      v10 = 0x80000000010FC310;
      v11 = 0xD000000000000020;
    }
    else
    {
      v11 = 0x7453206F69646152;
      v10 = 0xEE00736E6F697461;
    }
  }
  v12 = String.LocalizationValue.init(stringLiteral:)(v11, v10);
  static Locale.current.getter(v12);
  return String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, 0, v4, 0, 0, 256);
}

uint64_t Search.Configuration.defaultSource.getter()
{
  uint64_t v0;
  uint64_t v1;
  BOOL v2;
  id v3;
  char v4;
  BOOL v5;
  uint64_t v6;
  _BOOL8 v7;
  char v8;
  uint64_t result;
  Swift::String v10;
  uint64_t v11;
  unint64_t v12;
  _BYTE v13[80];
  uint64_t v14;
  uint64_t v15;

  v1 = v0;
  static ApplicationCapabilities.shared.getter((uint64_t)&v14);
  sub_A9008(&v14);
  v2 = (v15 & 0x80) == 0;
  v3 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v4 = NSUserDefaults.lastSelectedSearchSource.getter();

  if (v4 == 2)
    v5 = v2;
  else
    v5 = v4;
  v6 = *(_QWORD *)(v1 + 64);
  v7 = v5;
  if ((sub_A33934(v5, v6) & 1) != 0)
    return v7;
  v8 = sub_23B184(v6);
  if (v8 != 2)
    return v8 & 1;
  sub_734F70(v1, (uint64_t)v13);
  v11 = 0;
  v12 = 0xE000000000000000;
  _StringGuts.grow(_:)(53);
  _print_unlocked<A, B>(_:_:)(v13, &v11, &type metadata for Search.Configuration, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v10._object = (void *)0x80000000010FC1C0;
  v10._countAndFlagsBits = 0xD000000000000033;
  String.append(_:)(v10);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v11, v12, "MusicApplication/Search.swift", 29, 2, 152, 0);
  __break(1u);
  return result;
}

uint64_t *Search.resultSnapshotController.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  _BYTE v12[88];
  uint64_t v13;
  unint64_t v14;
  char v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 128);
  if (v1)
  {
    v2 = *(uint64_t **)(v0 + 128);
  }
  else
  {
    v3 = v0;
    v4 = v0 + 16;
    swift_beginAccess(v4, &v11, 0, 0);
    sub_734F70(v4, (uint64_t)v12);
    v13 = 0;
    v14 = 0xE000000000000000;
    v15 = 1;
    v16 = 0u;
    v17 = 0u;
    v18 = 0;
    v12[80] = 1;
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F1950);
    swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
    v2 = RequestResponse.Controller.init(request:)((uint64_t)v12, v6, v7, v8);
    v9 = *(_QWORD *)(v3 + 128);
    *(_QWORD *)(v3 + 128) = v2;
    swift_retain(v2);
    swift_release(v9);
    v1 = 0;
  }
  swift_retain(v1);
  return v2;
}

uint64_t Search.configuration.setter(uint64_t a1)
{
  uint64_t v1;
  _BYTE v4[24];
  _BYTE v5[24];
  _BYTE v6[80];

  swift_beginAccess(v1 + 16, v5, 0, 0);
  sub_734F70(v1 + 16, (uint64_t)v6);
  swift_beginAccess(v1 + 16, v4, 33, 0);
  sub_735678(a1, v1 + 16);
  swift_endAccess(v4);
  sub_A36714((uint64_t)v6);
  sub_734FAC(a1);
  return sub_734FAC((uint64_t)v6);
}

uint64_t *Search.recentlySearchedSnapshotController.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v11[24];
  _BYTE v12[80];

  v1 = *(_QWORD *)(v0 + 120);
  if (v1)
  {
    v2 = *(uint64_t **)(v0 + 120);
  }
  else
  {
    v3 = v0;
    v4 = v0 + 16;
    swift_beginAccess(v4, v11, 0, 0);
    sub_734F70(v4, (uint64_t)v12);
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F1958);
    swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
    v2 = RequestResponse.Controller.init(request:)((uint64_t)v12, v6, v7, v8);
    v9 = *(_QWORD *)(v3 + 120);
    *(_QWORD *)(v3 + 120) = v2;
    swift_retain(v2);
    swift_release(v9);
    v1 = 0;
  }
  swift_retain(v1);
  return v2;
}

uint64_t NSUserDefaults.lastSelectedSearchSource.setter(unsigned __int8 a1)
{
  int v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  __int128 v17;
  __int128 v18;

  v1 = a1;
  result = NSUserDefaults.lastSelectedSearchSource.getter();
  if (v1 == 2)
  {
    if (result == 2)
      return result;
    goto LABEL_14;
  }
  if (result == 2)
    goto LABEL_14;
  if ((v1 & 1) != 0)
    v3 = 0x7972617262696CLL;
  else
    v3 = 0x676F6C61746163;
  if ((_BYTE)result)
    v4 = 0x7972617262696CLL;
  else
    v4 = 0x676F6C61746163;
  if (v3 == v4)
    return swift_bridgeObjectRelease_n(0xE700000000000000, 2);
  v5 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, 0xE700000000000000, v4, 0xE700000000000000, 0);
  result = swift_bridgeObjectRelease_n(0xE700000000000000, 2);
  if ((v5 & 1) == 0)
  {
LABEL_14:
    v6 = type metadata accessor for JSONEncoder(0);
    v7 = swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
    v8 = JSONEncoder.init()(v7);
    LOBYTE(v17) = v1;
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F1960);
    v10 = sub_A424C0();
    v11 = dispatch thunk of JSONEncoder.encode<A>(_:)(&v17, v9, v10);
    v13 = v12;
    swift_release(v8);
    if (v13 >> 60 == 15)
    {
      v17 = 0u;
      v18 = 0u;
    }
    else
    {
      *((_QWORD *)&v18 + 1) = &type metadata for Data;
      *(_QWORD *)&v17 = v11;
      *((_QWORD *)&v17 + 1) = v13;
    }
    v16 = 0;
    sub_1390D8(v11, v13);
    v14 = sub_79B904();
    v15 = sub_55EA0();
    NSUserDefaults.subscript.setter((uint64_t)&v17, (uint64_t)&v16, (uint64_t)&_s9SearchKeyON, v14, v15);
    return sub_50C4C(v11, v13);
  }
  return result;
}

uint64_t Search.ResultContext.source(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  unint64_t v4;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, double);
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for Search.ResultContext(0) + 40));
  v4 = v3[2];
  if ((~v4 & 0x7000000000000007) == 0)
    return 2;
  if ((v4 & 0x4000000000000000) == 0)
    return v4 >> 63;
  v7 = (uint64_t (*)(uint64_t, double))*v3;
  v6 = v3[1];
  v8 = sub_73572C(*v3, v6, v3[2]);
  v9 = v7(a1, v8);
  if ((~v11 & 0xF000000000000007) == 0)
  {
    sub_73573C((uint64_t)v7, v6, v4);
    return 2;
  }
  v12 = v11;
  sub_735764(v9, v10, v11);
  sub_73573C((uint64_t)v7, v6, v4);
  return v12 >> 63;
}

uint64_t Search.persist<A>(_:for:)(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[24];
  __int128 v20;
  __int128 v21;
  _UNKNOWN **v22;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;

  v6 = a2 & 1;
  swift_beginAccess(v3 + 16, v19, 0, 0);
  v7 = *(_QWORD *)(v3 + 88);
  swift_bridgeObjectRetain();
  v8 = sub_A37754(v6, v7);
  v10 = v9;
  v12 = v11;
  swift_bridgeObjectRelease();
  if ((~v12 & 0xF000000000000007) != 0)
  {
    if (v12 < 0)
    {
      *((_QWORD *)&v21 + 1) = &_s7LibraryVN;
      v22 = &off_1398C58;
      *(_QWORD *)&v20 = v8;
      *((_QWORD *)&v20 + 1) = v10;
      *(_QWORD *)&v21 = v12 & 0x7FFFFFFFFFFFFFFFLL;
    }
    else
    {
      *((_QWORD *)&v21 + 1) = &_s7CatalogVN;
      v22 = &off_1362C00;
      *(_QWORD *)&v20 = v8;
      *((_QWORD *)&v20 + 1) = v10;
      *(_QWORD *)&v21 = v12;
    }
    sub_8B15C(&v20, (uint64_t)v23);
    v17 = v24;
    v18 = v25;
    __swift_project_boxed_opaque_existential_1(v23, v24);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 24))(a1, a3, v17, v18);
    return __swift_destroy_boxed_opaque_existential_1(v23);
  }
  else
  {
    v22 = 0;
    v20 = 0u;
    v21 = 0u;
    sub_56024((uint64_t)&v20, &qword_14DC1D0);
    v13 = sub_735778();
    v14 = swift_allocError(&type metadata for Search.PersistencyError, v13, 0, 0);
    *v15 = v6;
    return swift_willThrow(v14);
  }
}

uint64_t Search.Source.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0x7972617262696CLL;
  else
    return 0x676F6C61746163;
}

uint64_t Search.augmentedModelObject(from:with:for:completionHandler:)(uint64_t a1, uint64_t a2, char a3, void (*a4)(uint64_t, uint64_t), uint64_t a5)
{
  uint64_t v5;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[24];
  __int128 v24;
  __int128 v25;
  _UNKNOWN **v26;
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;

  v10 = a3 & 1;
  swift_beginAccess(v5 + 16, v23, 0, 0);
  v11 = *(_QWORD *)(v5 + 88);
  swift_bridgeObjectRetain();
  v12 = sub_A37754(v10, v11);
  v14 = v13;
  v16 = v15;
  swift_bridgeObjectRelease();
  if ((~v16 & 0xF000000000000007) != 0)
  {
    if (v16 < 0)
    {
      *((_QWORD *)&v25 + 1) = &_s7LibraryVN;
      v26 = &off_1398C58;
      *(_QWORD *)&v24 = v12;
      *((_QWORD *)&v24 + 1) = v14;
      *(_QWORD *)&v25 = v16 & 0x7FFFFFFFFFFFFFFFLL;
    }
    else
    {
      *((_QWORD *)&v25 + 1) = &_s7CatalogVN;
      v26 = &off_1362C00;
      *(_QWORD *)&v24 = v12;
      *((_QWORD *)&v24 + 1) = v14;
      *(_QWORD *)&v25 = v16;
    }
    sub_8B15C(&v24, (uint64_t)v27);
    v21 = v28;
    v22 = v29;
    __swift_project_boxed_opaque_existential_1(v27, v28);
    (*(void (**)(uint64_t, uint64_t, void (*)(uint64_t, uint64_t), uint64_t, uint64_t, uint64_t))(v22 + 40))(a1, a2, a4, a5, v21, v22);
    return __swift_destroy_boxed_opaque_existential_1(v27);
  }
  else
  {
    v26 = 0;
    v24 = 0u;
    v25 = 0u;
    sub_56024((uint64_t)&v24, &qword_14DC1D0);
    v17 = sub_444F60();
    v18 = swift_allocError(&type metadata for Search.AugmentingError, v17, 0, 0);
    *v19 = 0;
    a4(v18, 1);
    return swift_errorRelease(v18);
  }
}

void Search.Configuration.mediaLibrary.setter(id obj)
{
  uint64_t v1;

  objc_storeStrong((id *)(v1 + 8), obj);
  sub_A36590();

}

void Search.Configuration.mediaPickerConfiguration.setter(void *a1)
{
  void **v1;
  void *v3;
  id v4;

  v3 = *v1;
  v4 = a1;

  *v1 = a1;
  sub_A36590();

}

_QWORD *Search.Configuration.filteringOptions.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return sub_A36590();
}

uint64_t Search.ResultSnapshotRequest.init(configuration:source:text:variant:scope:)@<X0>(_OWORD *a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  __int128 v7;
  __int128 v8;

  *(_QWORD *)(a7 + 144) = 0;
  v7 = a1[3];
  *(_OWORD *)(a7 + 32) = a1[2];
  *(_OWORD *)(a7 + 48) = v7;
  *(_OWORD *)(a7 + 64) = a1[4];
  v8 = a1[1];
  *(_OWORD *)a7 = *a1;
  *(_OWORD *)(a7 + 16) = v8;
  *(_OWORD *)(a7 + 128) = 0u;
  *(_BYTE *)(a7 + 80) = a2 & 1;
  *(_QWORD *)(a7 + 88) = a3;
  *(_QWORD *)(a7 + 96) = a4;
  *(_BYTE *)(a7 + 104) = a5 & 1;
  *(_OWORD *)(a7 + 112) = 0u;
  return sub_5C1F4(a6, a7 + 112, &qword_14DC1C0);
}

uint64_t Search.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = swift_allocObject(v0, 136, 7);
  Search.init()();
  return v1;
}

uint64_t sub_A353C0@<X0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  int v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v51;
  char v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  int v61;
  unint64_t v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  _QWORD v66[5];
  char v67;

  v61 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_14AED20);
  __chkstk_darwin(v6);
  v8 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v59 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_14DC1A0);
  __chkstk_darwin(v12);
  v14 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Search.ResultContext(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5C238(a1, (uint64_t)v14, &qword_14DC1A0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_56024((uint64_t)v14, &qword_14DC1A0);
    v19 = sub_A4085C();
    v21 = v20;
    v22 = *(_QWORD *)aSearch_15;
    v23 = unk_14F1948;
    v24 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v8, 1, 1, v24);
    swift_bridgeObjectRetain();
    return MetricsPageProperties.init(pageIdentifier:pageType:pageURL:pageDetails:extRefUrl:)(v19, v21, v22, v23, (uint64_t)v8, 0, 0, 0, a3);
  }
  v60 = v8;
  v26 = v61;
  sub_5C04C((uint64_t)v14, (uint64_t)v18, type metadata accessor for Search.ResultContext);
  v27 = *(int *)(v15 + 36);
  v28 = *(_QWORD *)&v18[*(int *)(v15 + 32)];
  v59 = v18;
  v29 = *(void **)&v18[v27];
  if (v29)
  {
    swift_bridgeObjectRetain();
    v30 = v29;
    v31 = objc_msgSend(v30, "requestUrl");
    if (v31)
    {
      v32 = v31;
      v33 = a3;
      v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
      v36 = v35;

      goto LABEL_9;
    }
    v33 = a3;

  }
  else
  {
    v33 = a3;
    swift_bridgeObjectRetain();
  }
  v34 = 0;
  v36 = 0;
LABEL_9:
  LODWORD(v37) = v26;
  URL.init(string:)(v34, v36, (uint64_t)v11);
  v38 = sub_196558((uint64_t)_swiftEmptyArrayStorage);
  sub_79B638(v3, (uint64_t)v66);
  if (v67 != 1)
  {
    swift_bridgeObjectRelease(v28);
    sub_734F08(v66);
    v40 = v33;
    v42 = (uint64_t)v59;
    v41 = (uint64_t)v60;
    if ((_DWORD)v37 == 2)
      goto LABEL_35;
    goto LABEL_30;
  }
  if (!v28)
  {
    v65 = 0;
    v63 = 0u;
    v64 = 0u;
    v40 = v33;
    v42 = (uint64_t)v59;
    v41 = (uint64_t)v60;
LABEL_22:
    v44 = v37;
    sub_56024((uint64_t)&v63, &qword_14D3B50);
    goto LABEL_23;
  }
  if (*(_QWORD *)(v28 + 16))
  {
    v39 = sub_21BAD0(0x7363697274656DLL, 0xE700000000000000);
    v40 = v33;
    v42 = (uint64_t)v59;
    v41 = (uint64_t)v60;
    if ((v43 & 1) != 0)
    {
      sub_138F24(*(_QWORD *)(v28 + 56) + 40 * v39, (uint64_t)&v63);
    }
    else
    {
      v65 = 0;
      v63 = 0u;
      v64 = 0u;
    }
  }
  else
  {
    v65 = 0;
    v63 = 0u;
    v64 = 0u;
    v40 = v33;
    v42 = (uint64_t)v59;
    v41 = (uint64_t)v60;
  }
  swift_bridgeObjectRelease(v28);
  if (!*((_QWORD *)&v64 + 1))
    goto LABEL_22;
  v44 = v37;
  v45 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14BA550);
  if ((swift_dynamicCast(&v62, &v63, &type metadata for AnyHashable, v45, 6) & 1) != 0)
  {
    v46 = v62;
    swift_bridgeObjectRelease(v38);
    v38 = v46;
  }
LABEL_23:
  v47 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14DEA30);
  v48 = NSDiffableDataSourceSnapshot.numberOfItems.getter(v47);
  if (v48 <= 0)
    v37 = 0x65736C6166;
  else
    v37 = 1702195828;
  if (v48 <= 0)
    v49 = 0xE500000000000000;
  else
    v49 = 0xE400000000000000;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v38);
  *(_QWORD *)&v63 = v38;
  sub_19CCF0(v37, v49, 0x6C75736552736168, 0xEA00000000007374, isUniquelyReferenced_nonNull_native);
  v38 = v63;
  swift_bridgeObjectRelease(0x8000000000000000);
  sub_56024((uint64_t)v66, &qword_14DC1C0);
  LOBYTE(v37) = v44;
  if (v44 == 2)
    goto LABEL_35;
LABEL_30:
  v51 = 0x7972617262696CLL;
  if ((v37 & 1) != 0)
  {
    swift_bridgeObjectRelease(0xE700000000000000);
  }
  else
  {
    v52 = _stringCompareWithSmolCheck(_:_:expecting:)(0x676F6C61746163, 0xE700000000000000, 0x7972617262696CLL, 0xE700000000000000, 0);
    swift_bridgeObjectRelease(0xE700000000000000);
    v51 = 0x676F6C61746163;
    if ((v52 & 1) == 0)
      goto LABEL_35;
  }
  v53 = swift_isUniquelyReferenced_nonNull_native(v38);
  v66[0] = v38;
  sub_19CCF0(v51, 0xE700000000000000, 0xD000000000000014, 0x80000000010FC2F0, v53);
  v38 = v66[0];
  swift_bridgeObjectRelease(0x8000000000000000);
LABEL_35:
  v54 = sub_A4085C();
  v56 = v55;
  v57 = *(_QWORD *)aSearch_15;
  v58 = unk_14F1948;
  sub_5C238((uint64_t)v11, v41, &qword_14AED20);
  swift_bridgeObjectRetain();
  MetricsPageProperties.init(pageIdentifier:pageType:pageURL:pageDetails:extRefUrl:)(v54, v56, v57, v58, v41, v38, 0, 0, v40);
  sub_56024((uint64_t)v11, &qword_14AED20);
  return sub_5C0DC(v42, type metadata accessor for Search.ResultContext);
}

double static Search.ResultContext.empty()@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  int *v5;
  _OWORD *v6;
  double result;
  _QWORD *v8;
  _QWORD *v9;

  v2 = type metadata accessor for Search.Item(0);
  v3 = sub_44973C();
  v4 = sub_4DD24(&qword_14C9918, type metadata accessor for Search.Item, (uint64_t)&protocol conformance descriptor for Search.Item);
  NSDiffableDataSourceSnapshot.init()(&type metadata for Search.Section, v2, v3, v4);
  v5 = (int *)type metadata accessor for Search.ResultContext(0);
  v6 = (_OWORD *)(a1 + v5[7]);
  result = 0.0;
  v6[1] = 0u;
  v6[2] = 0u;
  *v6 = 0u;
  v8 = (_QWORD *)(a1 + v5[5]);
  *v8 = 0;
  v8[1] = 0;
  *(_BYTE *)(a1 + v5[6]) = 1;
  *(_QWORD *)(a1 + v5[8]) = 0;
  *(_QWORD *)(a1 + v5[9]) = 0;
  v9 = (_QWORD *)(a1 + v5[10]);
  *v9 = 0;
  v9[1] = 0;
  v9[2] = 0x7000000000000007;
  return result;
}

Swift::Void __swiftcall NSUserDefaults.clearAllRecentlySearchedItems()()
{
  unint64_t v0;
  unint64_t v1;
  char v2;
  _OWORD v3[2];

  memset(v3, 0, sizeof(v3));
  v2 = 1;
  v0 = sub_79B904();
  v1 = sub_55EA0();
  NSUserDefaults.subscript.setter((uint64_t)v3, (uint64_t)&v2, (uint64_t)&_s9SearchKeyON, v0, v1);
}

id Search.Item.modelObject.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  id *v10;
  uint64_t v11;
  uint64_t v12;
  id *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t (*v20)(_QWORD);
  int EnumCaseMultiPayload;
  id v22;
  uint64_t v23;
  uint64_t v25;

  v1 = v0;
  v2 = type metadata accessor for Search.Recents.Result.Item(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14DEA50);
  __chkstk_darwin(v5);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14DD590);
  __chkstk_darwin(v8);
  v10 = (id *)((char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  v13 = (id *)((char *)&v25 - v12);
  __chkstk_darwin(v14);
  v16 = (char *)&v25 - v15;
  v17 = type metadata accessor for Search.Item(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5BDB8(v1, (uint64_t)v19, v20);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v19, v17);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_5C090((uint64_t)v19, (uint64_t)v16, (uint64_t *)&unk_14DD590);
      sub_5C238((uint64_t)v16, (uint64_t)v13, (uint64_t *)&unk_14DD590);
      if (swift_getEnumCaseMultiPayload(v13, v8) == 1)
      {
        v22 = *v13;
      }
      else
      {
        sub_5C090((uint64_t)v13, (uint64_t)v7, (uint64_t *)&unk_14DEA50);
        v22 = SnapshotIdentifier.Lazy.object.getter(v5);
        sub_56024((uint64_t)v7, (uint64_t *)&unk_14DEA50);
      }
      sub_56024((uint64_t)v16, (uint64_t *)&unk_14DD590);
    }
    else
    {
      sub_5C04C((uint64_t)v19, (uint64_t)v4, type metadata accessor for Search.Recents.Result.Item);
      sub_5C238((uint64_t)v4, (uint64_t)v10, (uint64_t *)&unk_14DD590);
      if (swift_getEnumCaseMultiPayload(v10, v8) == 1)
      {
        v22 = *v10;
      }
      else
      {
        sub_5C090((uint64_t)v10, (uint64_t)v7, (uint64_t *)&unk_14DEA50);
        v22 = SnapshotIdentifier.Lazy.object.getter(v5);
        sub_56024((uint64_t)v7, (uint64_t *)&unk_14DEA50);
      }
      sub_5C0DC((uint64_t)v4, type metadata accessor for Search.Recents.Result.Item);
    }
  }
  else
  {
    v23 = *((_QWORD *)v19 + 1);
    swift_bridgeObjectRelease(*((_QWORD *)v19 + 3));
    swift_bridgeObjectRelease(v23);
    return 0;
  }
  return v22;
}

id sub_A35D1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t (*v17)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  id v24;
  uint64_t (*v25)(uint64_t);
  uint64_t v26;
  char v27;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_14DC1A0);
  __chkstk_darwin(v2);
  v4 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v42 - v6;
  __chkstk_darwin(v8);
  v10 = (char *)&v42 - v9;
  v11 = type metadata accessor for Search.Item(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Search.Event(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5BDB8(v1, (uint64_t)v16, v17);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v16, v14);
  if (EnumCaseMultiPayload != 4)
  {
    if (EnumCaseMultiPayload != 1)
    {
      v25 = type metadata accessor for Search.Event;
      v26 = (uint64_t)v16;
LABEL_10:
      sub_5C0DC(v26, v25);
      return 0;
    }
    v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14DEA70);
    v20 = v16[*(int *)(v19 + 48)];
    v21 = (uint64_t)&v16[*(int *)(v19 + 64)];
    sub_5C04C((uint64_t)v16, (uint64_t)v13, type metadata accessor for Search.Item);
    sub_5C090(v21, (uint64_t)v10, &qword_14DC1A0);
    sub_5C238((uint64_t)v10, (uint64_t)v7, &qword_14DC1A0);
    v22 = type metadata accessor for Search.ResultContext(0);
    v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48);
    if (v23(v7, 1, v22) == 1)
    {
      sub_56024((uint64_t)v7, &qword_14DC1A0);
LABEL_9:
      sub_56024((uint64_t)v10, &qword_14DC1A0);
      v25 = type metadata accessor for Search.Item;
      v26 = (uint64_t)v13;
      goto LABEL_10;
    }
    v27 = Search.ResultContext.source(for:)((uint64_t)v13);
    sub_5C0DC((uint64_t)v7, type metadata accessor for Search.ResultContext);
    if (v27)
    {
      if (v27 == 2)
        goto LABEL_9;
      goto LABEL_32;
    }
    v29 = Search.Item.modelObject.getter();
    v24 = v29;
    if (!v29)
    {
      sub_56024((uint64_t)v10, &qword_14DC1A0);
      sub_5C0DC((uint64_t)v13, type metadata accessor for Search.Item);
      return v24;
    }
    v30 = objc_msgSend(v29, "identifiers");
    v31 = MPIdentifierSet.bestStoreIdentifier.getter();
    if (!v32)
    {
      sub_56024((uint64_t)v10, &qword_14DC1A0);
      sub_5C0DC((uint64_t)v13, type metadata accessor for Search.Item);

      goto LABEL_33;
    }
    v33 = v31;
    v34 = v32;

    sub_5C238((uint64_t)v10, (uint64_t)v4, &qword_14DC1A0);
    if (v23(v4, 1, v22) == 1)
    {
      swift_bridgeObjectRelease(v34);
      sub_56024((uint64_t)v4, &qword_14DC1A0);
    }
    else
    {
      v35 = *(_QWORD *)&v4[*(int *)(v22 + 32)];
      swift_bridgeObjectRetain();
      sub_5C0DC((uint64_t)v4, type metadata accessor for Search.ResultContext);
      if (v35)
      {
        if (*(_QWORD *)(v35 + 16) && (v36 = sub_21BAD0(v33, v34), (v37 & 1) != 0))
        {
          sub_138F24(*(_QWORD *)(v35 + 56) + 40 * v36, (uint64_t)&v43);
        }
        else
        {
          v45 = 0;
          v43 = 0u;
          v44 = 0u;
        }
        swift_bridgeObjectRelease(v35);
        swift_bridgeObjectRelease(v34);
        if (*((_QWORD *)&v44 + 1))
        {
          v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_14B8480);
          if ((swift_dynamicCast(&v42, &v43, &type metadata for AnyHashable, v38, 6) & 1) != 0)
          {
            v39 = v42;
            if (*(_QWORD *)(v42 + 16) && (v40 = sub_21BAD0(0x73636972796CLL, 0xE600000000000000), (v41 & 1) != 0))
            {
              sub_95094(*(_QWORD *)(v39 + 56) + 32 * v40, (uint64_t)&v43);
            }
            else
            {
              v43 = 0u;
              v44 = 0u;
            }
            sub_56024((uint64_t)v10, &qword_14DC1A0);
            sub_5C0DC((uint64_t)v13, type metadata accessor for Search.Item);
            if (*((_QWORD *)&v44 + 1))
              swift_dynamicCast(&v42, &v43, (char *)&type metadata for Any + 8, &type metadata for String, 6);
            else
              sub_56024((uint64_t)&v43, (uint64_t *)&unk_14AD640);
            swift_bridgeObjectRelease(v39);
LABEL_33:
            __asm { BR              X9 }
          }
LABEL_32:
          sub_56024((uint64_t)v10, &qword_14DC1A0);
          sub_5C0DC((uint64_t)v13, type metadata accessor for Search.Item);
          goto LABEL_33;
        }
LABEL_31:
        sub_56024((uint64_t)&v43, &qword_14D3B50);
        goto LABEL_32;
      }
      swift_bridgeObjectRelease(v34);
    }
    v45 = 0;
    v43 = 0u;
    v44 = 0u;
    goto LABEL_31;
  }
  return (id)*((_QWORD *)v16 + 3);
}

id Search.init()()
{
  uint64_t v0;
  uint64_t v1;
  id result;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  void *v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v1 = v0;
  result = objc_msgSend((id)objc_opt_self(MPMediaLibrary), "deviceMediaLibrary");
  if (result)
  {
    *(_QWORD *)(v0 + 16) = 0;
    *(_QWORD *)(v0 + 24) = result;
    *(_OWORD *)(v0 + 32) = 0u;
    *(_OWORD *)(v0 + 48) = 0u;
    *(_OWORD *)(v0 + 64) = 0u;
    *(_QWORD *)(v0 + 80) = &_swiftEmptySetSingleton;
    *(_QWORD *)(v0 + 88) = &_swiftEmptySetSingleton;
    *(_OWORD *)(v0 + 96) = 0u;
    *(_OWORD *)(v0 + 112) = 0u;
    *(_QWORD *)(v0 + 128) = 0;
    v3 = *ApplicationCapabilities.Controller.shared.unsafeMutableAddressor();
    v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_14B5A60);
    inited = swift_initStackObject(v4, &v40);
    *(_OWORD *)(inited + 16) = xmmword_1063AC0;
    swift_retain(v3);
    v6 = (void *)*ApplicationCapabilities.NotificationNames.allowsMusicServiceDidChange.unsafeMutableAddressor();
    UIScreen.Dimensions.size.getter(v7);
    *(_QWORD *)(inited + 56) = &type metadata for NotificationTrigger;
    *(_QWORD *)(inited + 64) = &protocol witness table for NotificationTrigger;
    *(_QWORD *)(inited + 32) = v8;
    *(_QWORD *)(inited + 40) = v9;
    swift_retain(v3);
    v10 = v6;
    v11 = (void *)*ApplicationCapabilities.NotificationNames.allowsRadioContentDidChange.unsafeMutableAddressor();
    UIScreen.Dimensions.size.getter(v12);
    *(_QWORD *)(inited + 96) = &type metadata for NotificationTrigger;
    *(_QWORD *)(inited + 104) = &protocol witness table for NotificationTrigger;
    *(_QWORD *)(inited + 72) = v13;
    *(_QWORD *)(inited + 80) = v14;
    swift_retain(v3);
    v15 = v11;
    v16 = (void *)*ApplicationCapabilities.NotificationNames.allowsSubscriptionContentDidChange.unsafeMutableAddressor();
    UIScreen.Dimensions.size.getter(v17);
    *(_QWORD *)(inited + 136) = &type metadata for NotificationTrigger;
    *(_QWORD *)(inited + 144) = &protocol witness table for NotificationTrigger;
    *(_QWORD *)(inited + 112) = v18;
    *(_QWORD *)(inited + 120) = v19;
    swift_retain(v3);
    v20 = v16;
    v21 = (void *)*ApplicationCapabilities.NotificationNames.hasNetworkConnectivityDidChange.unsafeMutableAddressor();
    UIScreen.Dimensions.size.getter(v22);
    *(_QWORD *)(inited + 176) = &type metadata for NotificationTrigger;
    *(_QWORD *)(inited + 184) = &protocol witness table for NotificationTrigger;
    *(_QWORD *)(inited + 152) = v23;
    *(_QWORD *)(inited + 160) = v24;
    swift_retain(v3);
    v25 = v21;
    v26 = (void *)*ApplicationCapabilities.NotificationNames.userSubscriptionStateDidChange.unsafeMutableAddressor();
    UIScreen.Dimensions.size.getter(v27);
    *(_QWORD *)(inited + 216) = &type metadata for NotificationTrigger;
    *(_QWORD *)(inited + 224) = &protocol witness table for NotificationTrigger;
    *(_QWORD *)(inited + 192) = v28;
    *(_QWORD *)(inited + 200) = v29;
    swift_retain(v3);
    v30 = v26;
    v31 = (void *)*ApplicationCapabilities.NotificationNames.isCloudLibraryEnabledDidChange.unsafeMutableAddressor();
    UIScreen.Dimensions.size.getter(v32);
    *(_QWORD *)(inited + 256) = &type metadata for NotificationTrigger;
    *(_QWORD *)(inited + 264) = &protocol witness table for NotificationTrigger;
    *(_QWORD *)(inited + 232) = v33;
    *(_QWORD *)(inited + 240) = v34;
    v35 = swift_allocObject(&unk_1394C10, 24, 7);
    swift_weakInit(v35 + 16);
    v36 = type metadata accessor for Whitetail.Binding();
    swift_allocObject(v36, 48, 7);
    v37 = v31;
    v38 = Whitetail.Binding.init(_:needsInitialConfiguration:configurationBlock:)(inited, 1, (uint64_t)sub_A425C8, v35);
    v39 = *(_QWORD *)(v1 + 112);
    *(_QWORD *)(v1 + 112) = v38;
    swift_release(v39);
    return (id)v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

double sub_A364BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  double result;
  uint64_t v4;
  uint64_t v5;
  _BYTE v6[24];
  _BYTE v7[80];
  _BYTE v8[24];
  _BYTE v9[80];
  _BYTE v10[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v10, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v4 = Strong;
    v5 = Strong + 16;
    swift_beginAccess(Strong + 16, v8, 0, 0);
    sub_734F70(v5, (uint64_t)v9);
    sub_A36590();
    sub_734F70(v5, (uint64_t)v7);
    swift_beginAccess(v5, v6, 33, 0);
    sub_735678((uint64_t)v9, v5);
    swift_endAccess(v6);
    sub_A36714((uint64_t)v7);
    sub_734FAC((uint64_t)v9);
    sub_734FAC((uint64_t)v7);
    *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  }
  return result;
}

_QWORD *sub_A36590()
{
  id *v0;
  id *v1;
  id v2;
  unsigned __int8 v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  void *v15;
  _QWORD v16[15];

  v1 = v0;
  v15 = &_swiftEmptySetSingleton;
  static ApplicationCapabilities.shared.getter((uint64_t)v16);
  if (!*v0)
    goto LABEL_9;
  v2 = *v0;
  if (objc_msgSend(v2, "showsLibraryContent"))
  {
    v3 = objc_msgSend(v2, "pickingForExternalPlayer");

    if ((v3 & 1) != 0)
    {
      v4 = BYTE2(v16[0]);
      v5 = sub_A371FC(v1, (uint64_t)v16);
      v6 = v5;
      if ((v4 & 1) == 0)
      {
        if ((v5 & 1) == 0)
          goto LABEL_7;
        goto LABEL_6;
      }
LABEL_10:
      sub_703C0(&v14, 1);
      if ((v6 & 1) == 0)
        goto LABEL_7;
LABEL_6:
      sub_703C0(&v14, 0);
      goto LABEL_7;
    }
LABEL_9:
    v6 = sub_A371FC(v1, (uint64_t)v16);
    goto LABEL_10;
  }

  if ((sub_A371FC(v1, (uint64_t)v16) & 1) != 0)
    goto LABEL_6;
LABEL_7:
  v7 = (uint64_t)v15;
  v8 = (uint64_t)v1[8];
  v1[8] = v15;
  if ((sub_3137F8(v7, v8) & 1) != 0)
  {
    swift_bridgeObjectRelease(v8);
    return sub_A9008(v16);
  }
  else
  {
    v10 = (uint64_t)v1[9];
    swift_bridgeObjectRetain();
    v11 = swift_bridgeObjectRetain();
    v12 = sub_A44C70(v11, v10);
    swift_bridgeObjectRelease(v7);
    v13 = sub_5138A8(v12);
    swift_bridgeObjectRelease(v8);
    swift_bridgeObjectRelease_n(v10, 2);
    swift_bridgeObjectRelease(v12);
    result = sub_A9008(v16);
    v1[9] = (id)v13;
  }
  return result;
}

uint64_t sub_A36714(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v10)(uint64_t);
  uint64_t v11;
  _BYTE v12[24];
  _BYTE v13[152];
  _BYTE v14[24];
  _BYTE v15[64];
  uint64_t v16;

  v2 = v1;
  v4 = v1 + 16;
  swift_beginAccess(v4, v14, 0, 0);
  sub_734F70(v4, (uint64_t)v15);
  v5 = Search.resultSnapshotController.getter();
  swift_beginAccess(v5 + 2, v12, 0, 0);
  sub_734E98((uint64_t)(v5 + 2), (uint64_t)v13);
  sub_735678((uint64_t)v15, (uint64_t)v13);
  RequestResponse.Controller.request.setter((uint64_t)v13);
  swift_release(v5);
  v6 = Search.recentlySearchedSnapshotController.getter();
  sub_734F70((uint64_t)v15, (uint64_t)v13);
  RequestResponse.Controller.request.setter((uint64_t)v13);
  swift_release(v6);
  v7 = *(_QWORD *)(a1 + 64);
  v8 = v16;
  swift_bridgeObjectRetain();
  LOBYTE(v7) = sub_3137F8(v7, v8);
  swift_bridgeObjectRelease(v8);
  if ((v7 & 1) != 0)
    return sub_734FAC((uint64_t)v15);
  swift_beginAccess(v2 + 96, v13, 32, 0);
  v10 = *(void (**)(uint64_t))(v2 + 96);
  if (v10)
  {
    v11 = *(_QWORD *)(v2 + 104);
    swift_endAccess(v13);
    swift_bridgeObjectRetain();
    sub_A9DEC((uint64_t)v10, v11);
    v10(v8);
    sub_734FAC((uint64_t)v15);
    swift_bridgeObjectRelease(v8);
    return sub_5C198((uint64_t)v10, v11);
  }
  else
  {
    sub_734FAC((uint64_t)v15);
    return swift_endAccess(v13);
  }
}

__n128 Search.RecentlySearchedSnapshotRequest.init(configuration:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v2;
  __n128 result;

  v2 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 48) = v2;
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a1 + 64);
  result = *(__n128 *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(__n128 *)(a2 + 16) = result;
  return result;
}

uint64_t Search.configuration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + 16;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_734F70(v3, a1);
}

void (*Search.configuration.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x128uLL);
  *a1 = v3;
  v3[36] = v1;
  swift_beginAccess(v1 + 16, v3 + 33, 0, 0);
  sub_734F70(v1 + 16, (uint64_t)v3);
  return sub_A3695C;
}

void sub_A3695C(uint64_t *a1, char a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = (char *)*a1;
  v3 = *a1 + 80;
  v4 = *a1 + 160;
  v5 = *(_QWORD *)(*a1 + 288);
  if ((a2 & 1) != 0)
  {
    sub_734F70(*a1, v3);
    sub_734F70(v5 + 16, v4);
    swift_beginAccess(v5 + 16, v2 + 240, 33, 0);
    sub_735678(v3, v5 + 16);
    swift_endAccess(v2 + 240);
    sub_A36714(v4);
    sub_734FAC(v3);
    sub_734FAC(v4);
    v6 = (uint64_t)v2;
  }
  else
  {
    sub_734F70(v5 + 16, v3);
    swift_beginAccess(v5 + 16, v4, 33, 0);
    sub_735678((uint64_t)v2, v5 + 16);
    swift_endAccess(v4);
    sub_A36714(v3);
    sub_734FAC((uint64_t)v2);
    v6 = v3;
  }
  sub_734FAC(v6);
  free(v2);
}

_QWORD *(*Search.Configuration.mediaPickerConfiguration.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *a1 = v1;
  return sub_A36A6C;
}

_QWORD *sub_A36A6C(uint64_t a1, char a2)
{
  _QWORD *result;

  if ((a2 & 1) == 0)
    return sub_A36590();
  return result;
}

id PlaylistCovers.Cover.Representation.backgroundImage.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 8);
}

uint64_t (*Search.Configuration.mediaLibrary.modify(_QWORD *a1))()
{
  uint64_t v1;

  *a1 = v1;
  return sub_A4DAC0;
}

uint64_t Library.Menu.Request.filteringOptions.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t (*Search.Configuration.filteringOptions.modify(_QWORD *a1))()
{
  uint64_t v1;

  *a1 = v1;
  return sub_A4DAC0;
}

uint64_t Search.Configuration.requiredProperties.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_5C238(v1 + 24, a1, &qword_14C98D0);
}

uint64_t Search.Configuration.requiredProperties.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_5C1F4(a1, v1 + 24, &qword_14C98D0);
}

uint64_t NSUserDefaults.lastSelectedSearchSource.getter()
{
  void *v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  double v12;
  void (*v13)(char *);
  void (*v14)(char *);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD v25[2];
  uint64_t v26;
  uint64_t v27;

  LOBYTE(v20) = 0;
  v1 = sub_79B904();
  v2 = sub_55EA0();
  NSUserDefaults.subscript.getter((uint64_t)&_s9SearchKeyON, v1, v2, (uint64_t)v25);
  if (v27)
  {
    if ((swift_dynamicCast(&v20, v25, (char *)&type metadata for Any + 8, &type metadata for Data, 6) & 1) != 0)
    {
      v3 = v20;
      v4 = v21;
      v5 = type metadata accessor for JSONDecoder(0);
      swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
      v6 = JSONDecoder.init()();
      v7 = sub_A42614();
      dispatch thunk of JSONDecoder.decode<A>(_:from:)(&type metadata for Search.Source, v3, v4, &type metadata for Search.Source, v7);
      swift_release(v6);
      sub_50C60(v3, v4);
      return LOBYTE(v25[0]);
    }
  }
  else
  {
    sub_56024((uint64_t)v25, (uint64_t *)&unk_14AD640);
  }
  sub_A425D0();
  v8 = v0;
  NSUserDefaults.Migrator.init<A>(userDefaults:key:)((uint64_t)v8, v9, (uint64_t)&type metadata for String, (uint64_t)&type metadata for String, (uint64_t)&_s9SearchKeyO6LegacyON, v2, (char *)v25);
  v10 = (void *)v25[0];
  v11 = v26;
  v20 = v25[0];
  v21 = v25[1];
  v22 = v26;
  UIScreen.Dimensions.size.getter(v12);
  v14 = v13;
  v16 = v15;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F1980);
  NSUserDefaults.Migrator.migrateValue<A, B>(to:valueTransformer:destination:)(v14, v16, 0, v17, (uint64_t)&_s9SearchKeyON, (uint64_t)&type metadata for Data, v1, (uint64_t)&v23, v2);
  swift_release(v16);
  swift_bridgeObjectRelease(v11);

  if (v24 >> 60 == 15)
    return 2;
  v19 = sub_50C4C(v23, v24);
  return NSUserDefaults.lastSelectedSearchSource.getter(v19);
}

uint64_t Search.Configuration.availableSources.getter()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + 64));
}

void sub_A36D70(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a2 + 64) = *a1;
  v5 = swift_bridgeObjectRetain();
  if ((sub_3137F8(v5, v4) & 1) != 0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = *(_QWORD *)(a2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7 = sub_A44C70(v3, v6);
    swift_bridgeObjectRelease();
    v8 = sub_5138A8(v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n(v6, 2);
    swift_bridgeObjectRelease();
    *(_QWORD *)(a2 + 72) = v8;
  }
}

void sub_A36E40(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  _OWORD v34[2];
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  id v39;
  uint64_t v40;
  _OWORD v41[2];
  uint64_t v42;
  int64_t v43;

  v4 = *a1;
  v5 = a2 + 56;
  v6 = 1 << *(_BYTE *)(a2 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a2 + 56);
  v43 = (unint64_t)(v6 + 63) >> 6;
  v32 = v4;
  if (v4)
    v9 = 0x7972617262696CLL;
  else
    v9 = 0x676F6C61746163;
  swift_bridgeObjectRetain();
  v10 = 0;
  if (!v8)
    goto LABEL_8;
LABEL_7:
  v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v11 | (v10 << 6); ; i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    v16 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 24 * i);
    v18 = *v16;
    v17 = v16[1];
    v19 = v16[2];
    if (v19 < 0)
      v20 = 0x7972617262696CLL;
    else
      v20 = 0x676F6C61746163;
    if (v20 == v9)
    {
      sub_87A9C(v18, v17, v19);
      swift_bridgeObjectRelease_n(0xE700000000000000, 2);
LABEL_34:
      swift_release(a2);
      goto LABEL_35;
    }
    v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v20, 0xE700000000000000, v9, 0xE700000000000000, 0);
    sub_87A9C(v18, v17, v19);
    swift_bridgeObjectRelease_n(0xE700000000000000, 2);
    if ((v21 & 1) != 0)
      goto LABEL_34;
    sub_87AC4(v18, v17, v19);
    if (v8)
      goto LABEL_7;
LABEL_8:
    v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_42;
    }
    if (v13 >= v43)
      goto LABEL_36;
    v14 = *(_QWORD *)(v5 + 8 * v13);
    ++v10;
    if (!v14)
    {
      v10 = v13 + 1;
      if (v13 + 1 >= v43)
        goto LABEL_36;
      v14 = *(_QWORD *)(v5 + 8 * v10);
      if (!v14)
      {
        v10 = v13 + 2;
        if (v13 + 2 >= v43)
          goto LABEL_36;
        v14 = *(_QWORD *)(v5 + 8 * v10);
        if (!v14)
        {
          v10 = v13 + 3;
          if (v13 + 3 >= v43)
            goto LABEL_36;
          v14 = *(_QWORD *)(v5 + 8 * v10);
          if (!v14)
          {
            v10 = v13 + 4;
            if (v13 + 4 >= v43)
              goto LABEL_36;
            v14 = *(_QWORD *)(v5 + 8 * v10);
            if (!v14)
              break;
          }
        }
      }
    }
LABEL_25:
    v8 = (v14 - 1) & v14;
  }
  v15 = v13 + 5;
  if (v15 >= v43)
  {
LABEL_36:
    swift_release(a2);
    if ((v32 & 1) != 0)
    {
      v22 = objc_msgSend((id)objc_opt_self(MPMediaLibrary), "deviceMediaLibrary");
      if (!v22)
        goto LABEL_43;
      memset(v41, 0, sizeof(v41));
      v42 = 0;
      v36 = 0;
      v37 = 0xE000000000000000;
      v38 = 1;
      v39 = v22;
      v40 = 0;
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F1FB0);
      swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
      v19 = (unint64_t)RequestResponse.Controller.init(request:)((uint64_t)&v36, v24, v25, v26) | 0x8000000000000000;
      v18 = 0x7972617262694CLL;
      v17 = 0xE700000000000000;
    }
    else
    {
      v35 = 0;
      memset(v34, 0, sizeof(v34));
      v27 = objc_msgSend((id)objc_opt_self(MPMediaLibrary), "deviceMediaLibrary");
      if (!v27)
        goto LABEL_44;
      v36 = 0;
      v37 = 0xE000000000000000;
      v38 = 1;
      v39 = v27;
      v40 = 0;
      sub_5C090((uint64_t)v34, (uint64_t)v41, &qword_14C98D0);
      v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_14F1FB8);
      swift_allocObject(v28, *(unsigned int *)(v28 + 48), *(unsigned __int16 *)(v28 + 52));
      v19 = (uint64_t)RequestResponse.Controller.init(request:)((uint64_t)&v36, v29, v30, v31);
      v17 = 0xEB00000000636973;
      v18 = 0x754D2E656C707041;
    }
LABEL_35:
    *a3 = v18;
    a3[1] = v17;
    a3[2] = v19;
    return;
  }
  v14 = *(_QWORD *)(v5 + 8 * v15);
  if (v14)
  {
    v10 = v15;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v10 >= v43)
      goto LABEL_36;
    v14 = *(_QWORD *)(v5 + 8 * v10);
    ++v15;
    if (v14)
      goto LABEL_25;
  }
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
}

uint64_t sub_A371FC(id *a1, uint64_t a2)
{
  id v4;
  id v5;
  char v6;
  uint64_t v7;
  char v8;
  char v9;
  char v10;
  id v11;
  char v13;
  uint64_t v14;
  char v15;

  sub_4E684(0, &qword_14B50E0, MPMediaLibrary_ptr);
  v4 = a1[1];
  v5 = static MPMediaLibrary.device.getter();
  v6 = static NSObject.== infix(_:_:)(v4, v5);

  if ((v6 & 1) == 0)
    goto LABEL_8;
  v7 = *(_QWORD *)(a2 + 24);
  v8 = sub_A31E08(0, v7);
  v9 = 0;
  if ((v8 & 1) != 0)
  {
    v10 = *(_BYTE *)(a2 + 1);
    if (*a1)
    {
      v11 = *a1;
      if ((MPMediaPickerConfiguration.supportsCatalogContent.getter() & 1) != 0 && (v10 & 1) != 0)
      {
        static ApplicationCapabilities.shared.getter((uint64_t)&v14);
        sub_A9008(&v14);

        v9 = v15 & 1;
        return v9 & 1;
      }

LABEL_8:
      v9 = 0;
      return v9 & 1;
    }
    if ((sub_A31E08(2u, v7) & 1) != 0)
      v13 = 1;
    else
      v13 = sub_A31E08(4u, v7);
    v9 = v10 & v13;
  }
  return v9 & 1;
}

uint64_t Search.onAvailableSourcesChanged.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + 96, v3, 0, 0);
  v1 = *(_QWORD *)(v0 + 96);
  sub_A9DEC(v1, *(_QWORD *)(v0 + 104));
  return v1;
}

uint64_t Search.onAvailableSourcesChanged.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[24];

  swift_beginAccess(v2 + 96, v8, 1, 0);
  v5 = *(_QWORD *)(v2 + 96);
  v6 = *(_QWORD *)(v2 + 104);
  *(_QWORD *)(v2 + 96) = a1;
  *(_QWORD *)(v2 + 104) = a2;
  sub_A9DEC(a1, a2);
  sub_5C198(v5, v6);
  return sub_5C198(a1, a2);
}

uint64_t (*Search.onAvailableSourcesChanged.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 96, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t static Search.Source.< infix(_:_:)(char a1, char a2)
{
  char v2;
  uint64_t v3;
  _QWORD v5[15];

  v2 = 0;
  if ((a1 & 1) == 0 && (a2 & 1) != 0)
  {
    static ApplicationCapabilities.shared.getter((uint64_t)v5);
    v3 = v5[3];
    swift_bridgeObjectRetain();
    sub_A9008(v5);
    v2 = sub_A31E08(2u, v3);
    swift_bridgeObjectRelease();
  }
  return v2 & 1;
}

MusicApplication::Search::Source_optional __swiftcall Search.Source.init(rawValue:)(Swift::String rawValue)
{
  void *object;
  Swift::String v2;
  Swift::Int v3;
  MusicApplication::Search::Source_optional v4;

  object = rawValue._object;
  v2._countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_133F7A0, v2);
  swift_bridgeObjectRelease(object);
  if (v3 == 1)
    v4.value = MusicApplication_Search_Source_library;
  else
    v4.value = MusicApplication_Search_Source_unknownDefault;
  if (v3)
    return v4;
  else
    return 0;
}

uint64_t sub_A374C8(char *a1, char *a2)
{
  return sub_A30960(*a1, *a2) & 1;
}

uint64_t sub_A374E8@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::OpaquePointer v2;

  v2._rawValue = &off_133F7A0;
  return sub_5ADC14(v2, a1, a2);
}

uint64_t sub_A374F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_A4AA14();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_A37550(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_A4AA14();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

uint64_t sub_A3759C(_BYTE *a1, _BYTE *a2)
{
  char v2;
  uint64_t v3;
  _QWORD v5[15];

  v2 = 0;
  if ((*a1 & 1) == 0 && *a2)
  {
    static ApplicationCapabilities.shared.getter((uint64_t)v5);
    v3 = v5[3];
    swift_bridgeObjectRetain();
    sub_A9008(v5);
    v2 = sub_A31E08(2u, v3);
    swift_bridgeObjectRelease();
  }
  return v2 & 1;
}

uint64_t sub_A37608(_BYTE *a1, _BYTE *a2)
{
  char v2;
  uint64_t v3;
  char v4;
  _QWORD v6[15];

  v2 = 1;
  if ((*a2 & 1) == 0 && *a1)
  {
    static ApplicationCapabilities.shared.getter((uint64_t)v6);
    v3 = v6[3];
    swift_bridgeObjectRetain();
    sub_A9008(v6);
    v4 = sub_A31E08(2u, v3);
    swift_bridgeObjectRelease();
    v2 = v4 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_A37678(_BYTE *a1, _BYTE *a2)
{
  char v2;
  uint64_t v3;
  char v4;
  _QWORD v6[15];

  v2 = 1;
  if ((*a1 & 1) == 0 && *a2)
  {
    static ApplicationCapabilities.shared.getter((uint64_t)v6);
    v3 = v6[3];
    swift_bridgeObjectRetain();
    sub_A9008(v6);
    v4 = sub_A31E08(2u, v3);
    swift_bridgeObjectRelease();
    v2 = v4 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_A376E8(_BYTE *a1, _BYTE *a2)
{
  char v2;
  uint64_t v3;
  _QWORD v5[15];

  v2 = 0;
  if ((*a2 & 1) == 0 && *a1)
  {
    static ApplicationCapabilities.shared.getter((uint64_t)v5);
    v3 = v5[3];
    swift_bridgeObjectRetain();
    sub_A9008(v5);
    v2 = sub_A31E08(2u, v3);
    swift_bridgeObjectRelease();
  }
  return v2 & 1;
}

uint64_t sub_A37754(char a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v3 = a2 + 56;
  v4 = 1 << *(_BYTE *)(a2 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a2 + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  if ((a1 & 1) != 0)
    v8 = 0x7972617262696CLL;
  else
    v8 = 0x676F6C61746163;
  result = swift_bridgeObjectRetain();
  v10 = 0;
  if (!v6)
    goto LABEL_8;
LABEL_7:
  v11 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (i = v11 | (v10 << 6); ; i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    v16 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 24 * i);
    v17 = *v16;
    v18 = v16[1];
    v19 = v16[2];
    if (v19 < 0)
      v20 = 0x7972617262696CLL;
    else
      v20 = 0x676F6C61746163;
    if (v20 == v8)
    {
      sub_87A9C(v17, v18, v19);
      swift_bridgeObjectRelease_n(0xE700000000000000, 2);
LABEL_34:
      swift_release(a2);
      return v17;
    }
    v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v20, 0xE700000000000000, v8, 0xE700000000000000, 0);
    sub_87A9C(v17, v18, v19);
    swift_bridgeObjectRelease_n(0xE700000000000000, 2);
    if ((v21 & 1) != 0)
      goto LABEL_34;
    result = sub_87AC4(v17, v18, v19);
    if (v6)
      goto LABEL_7;
LABEL_8:
    v13 = v10 + 1;
    if (__OFADD__(v10, 1))
      break;
    if (v13 >= v7)
      goto LABEL_35;
    v14 = *(_QWORD *)(v3 + 8 * v13);
    ++v10;
    if (v14)
      goto LABEL_25;
    v10 = v13 + 1;
    if (v13 + 1 >= v7)
      goto LABEL_35;
    v14 = *(_QWORD *)(v3 + 8 * v10);
    if (v14)
      goto LABEL_25;
    v10 = v13 + 2;
    if (v13 + 2 >= v7)
      goto LABEL_35;
    v14 = *(_QWORD *)(v3 + 8 * v10);
    if (v14)
      goto LABEL_25;
    v10 = v13 + 3;
    if (v13 + 3 >= v7)
      goto LABEL_35;
    v14 = *(_QWORD *)(v3 + 8 * v10);
    if (v14)
      goto LABEL_25;
    v10 = v13 + 4;
    if (v13 + 4 >= v7)
      goto LABEL_35;
    v14 = *(_QWORD *)(v3 + 8 * v10);
    if (v14)
      goto LABEL_25;
    v15 = v13 + 5;
    if (v15 >= v7)
    {
LABEL_35:
      swift_release(a2);
      return 0;
    }
    v14 = *(_QWORD *)(v3 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        v10 = v15 + 1;
        if (__OFADD__(v15, 1))
          goto LABEL_38;
        if (v10 >= v7)
          goto LABEL_35;
        v14 = *(_QWORD *)(v3 + 8 * v10);
        ++v15;
        if (v14)
          goto LABEL_25;
      }
    }
    v10 = v15;
LABEL_25:
    v6 = (v14 - 1) & v14;
  }
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t LibraryModelRequest.Filter.text.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_bridgeObjectRetain(a4);
  return a3;
}

uint64_t SharePlayTogetherSession.Participant.displayName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v2 + 24));
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t Search.Item.Hint.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_bridgeObjectRetain(a3);
  String.hash(into:)(a1, a2, a3);
  swift_bridgeObjectRelease(a3);
  swift_bridgeObjectRetain(a5);
  String.hash(into:)(a1, a4, a5);
  return swift_bridgeObjectRelease(a5);
}

uint64_t static Search.Item.Hint.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char v12;
  uint64_t result;

  if (a1 == a5 && a2 == a6
    || (v12 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a5, a6, 0), result = 0, (v12 & 1) != 0))
  {
    if (a3 == a7 && a4 == a8)
      return 1;
    else
      return _stringCompareWithSmolCheck(_:_:expecting:)(a3, a4, a7, a8, 0);
  }
  return result;
}

Swift::Int Search.Item.Hint.hashValue.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD v9[9];

  Hasher.init(_seed:)(v9);
  swift_bridgeObjectRetain(a2);
  String.hash(into:)(v9, a1, a2);
  swift_bridgeObjectRelease(a2);
  swift_bridgeObjectRetain(a4);
  String.hash(into:)(v9, a3, a4);
  swift_bridgeObjectRelease(a4);
  return Hasher._finalize()();
}

void Search.Item.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t (*v13)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = v1;
  v4 = type metadata accessor for Search.Recents.Result.Item(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14DD590);
  __chkstk_darwin(v7);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Search.Item(0);
  __chkstk_darwin(v10);
  v12 = (uint64_t *)((char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_5BDB8(v2, (uint64_t)v12, v13);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v12, v10);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_5C090((uint64_t)v12, (uint64_t)v9, (uint64_t *)&unk_14DD590);
      Hasher._combine(_:)(1uLL);
      SnapshotIdentifier.hash(into:)(a1, v7, v15, v16);
      sub_56024((uint64_t)v9, (uint64_t *)&unk_14DD590);
    }
    else
    {
      sub_5C04C((uint64_t)v12, (uint64_t)v6, type metadata accessor for Search.Recents.Result.Item);
      Hasher._combine(_:)(2uLL);
      SnapshotIdentifier.hash(into:)(a1, v7, v21, v22);
      v23 = type metadata accessor for Date(0);
      v24 = sub_4DD24(&qword_14BA4F8, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
      dispatch thunk of Hashable.hash(into:)(a1, v23, v24);
      v25 = &v6[*(int *)(v4 + 24)];
      v26 = *(_QWORD *)v25;
      v27 = *((_QWORD *)v25 + 1);
      swift_bridgeObjectRetain();
      String.hash(into:)(a1, v26, v27);
      swift_bridgeObjectRelease();
      sub_5C0DC((uint64_t)v6, type metadata accessor for Search.Recents.Result.Item);
    }
  }
  else
  {
    v17 = *v12;
    v18 = v12[1];
    v19 = v12[2];
    v20 = v12[3];
    Hasher._combine(_:)(0);
    swift_bridgeObjectRetain();
    String.hash(into:)(a1, v17, v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    String.hash(into:)(a1, v19, v20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n(v20, 2);
  }
}

uint64_t static Search.Recents.Result.Item.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;

  v4 = sub_4E684(0, (unint64_t *)&qword_14B2100, MPModelObject_ptr);
  if ((static SnapshotIdentifier.== infix(_:_:)(a1, a2, v4) & 1) == 0)
    return 0;
  v5 = type metadata accessor for Search.Recents.Result.Item(0);
  if ((static Date.== infix(_:_:)(a1 + *(int *)(v5 + 20), a2 + *(int *)(v5 + 20), v6) & 1) == 0)
    return 0;
  v7 = *(int *)(v5 + 24);
  v8 = *(_QWORD *)(a1 + v7);
  v9 = *(_QWORD *)(a1 + v7 + 8);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  if (v8 == *v10 && v9 == v11)
    return 1;
  else
    return _stringCompareWithSmolCheck(_:_:expecting:)(v8, v9, *v10, v11, 0);
}

Swift::Int Search.Item.hashValue.getter()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  Search.Item.hash(into:)((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_A37F08()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1);
  Search.Item.hash(into:)((uint64_t)v1);
  return Hasher._finalize()();
}

uint64_t Search.ResultContext.snapshot.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14DEA30);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t Search.ResultContext.snapshot.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_14DEA30);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t Search.ResultContext.searchedText.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Search.ResultContext(0) + 20));
  swift_bridgeObjectRetain();
  return v1;
}

void Search.ResultContext.searchedText.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for Search.ResultContext(0) + 20));
  swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
}

double (*Search.ResultContext.searchedText.modify())(double)
{
  type metadata accessor for Search.ResultContext(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t Search.ResultContext.variant.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Search.ResultContext(0) + 24));
}

uint64_t Search.ResultContext.variant.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Search.ResultContext(0);
  *(_BYTE *)(v1 + *(int *)(result + 24)) = a1 & 1;
  return result;
}

double (*Search.ResultContext.variant.modify())(double)
{
  type metadata accessor for Search.ResultContext(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t Search.ResultContext.scopingContext.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Search.ResultContext(0);
  return sub_5C238(v1 + *(int *)(v3 + 28), a1, &qword_14DC1B8);
}

uint64_t Search.ResultContext.scopingContext.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Search.ResultContext(0);
  return sub_5C1F4(a1, v1 + *(int *)(v3 + 28), &qword_14DC1B8);
}

double (*Search.ResultContext.scopingContext.modify())(double)
{
  type metadata accessor for Search.ResultContext(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t Search.ResultContext.resources.getter()
{
  type metadata accessor for Search.ResultContext(0);
  return swift_bridgeObjectRetain();
}

void Search.ResultContext.resources.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(type metadata accessor for Search.ResultContext(0) + 32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
}

double (*Search.ResultContext.resources.modify())(double)
{
  type metadata accessor for Search.ResultContext(0);
  return UIScreen.Dimensions.size.getter;
}

void *Search.ResultContext.performanceMetrics.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + *(int *)(type metadata accessor for Search.ResultContext(0) + 36));
  v2 = v1;
  return v1;
}

void Search.ResultContext.performanceMetrics.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(type metadata accessor for Search.ResultContext(0) + 36);

  *(_QWORD *)(v1 + v3) = a1;
}

double (*Search.ResultContext.performanceMetrics.modify())(double)
{
  type metadata accessor for Search.ResultContext(0);
  return UIScreen.Dimensions.size.getter;
}

uint64_t Search.ResultContext.ScopingContext.selected.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_55D1C(v1 + 8, a1);
}

uint64_t Search.ResultContext.ScopingContext.selected.setter(__int128 *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + 8);
  __swift_destroy_boxed_opaque_existential_1(v3);
  return sub_8B15C(a1, (uint64_t)v3);
}

uint64_t Search.recentlySearchedSnapshotController.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 120);
  *(_QWORD *)(v1 + 120) = a1;
  return swift_release(v2);
}

