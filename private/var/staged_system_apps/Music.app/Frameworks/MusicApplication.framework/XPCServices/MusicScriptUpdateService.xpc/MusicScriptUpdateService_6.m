void sub_100302770(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  sub_1002FAC3C(a1, (uint64_t)&unk_10039D4A0, (uint64_t)&unk_10039D4C8, a2);
}

uint64_t sub_100302794(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1002FACB4(a1, a2, a3, a4, (uint64_t)&unk_10039D4A0, (uint64_t)&unk_10039D4C8);
}

double sub_1003027BC()
{
  return sub_1003027E0("[Management] Decline button tapped", 1);
}

double sub_1003027D0()
{
  return sub_1003027E0("[Management] Approve button tapped", 0);
}

double sub_1003027E0(const char *a1, char a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(_s10ManagementO4ViewV19CollaboratorRowViewVMa(0) - 8) + 80);
  return sub_1002F577C(v2 + ((v5 + 16) & ~v5), a1, a2);
}

unint64_t sub_100302830()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049E520;
  if (!qword_10049E520)
  {
    v1 = sub_100005600(&qword_10049E4C0);
    sub_10002FFB8(&qword_10049E528, &qword_10049E4B8, (uint64_t)&protocol conformance descriptor for ProgressView<A, B>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049E520);
  }
  return result;
}

unint64_t sub_1003028B4()
{
  unint64_t result;

  result = qword_10049E548;
  if (!qword_10049E548)
  {
    result = swift_getWitnessTable(&unk_10039D360, &type metadata for ClearBackground);
    atomic_store(result, (unint64_t *)&qword_10049E548);
  }
  return result;
}

_QWORD *sub_1003028F8(_QWORD *a1)
{
  void *v2;
  id v3;

  v2 = (void *)a1[3];
  sub_1000516F8(a1[1], a1[2]);
  v3 = v2;
  return a1;
}

unint64_t sub_100302928()
{
  unint64_t result;

  result = qword_10049E550;
  if (!qword_10049E550)
  {
    result = swift_getWitnessTable(&unk_10039D298, &_s10ManagementO10QRCodeViewVN);
    atomic_store(result, (unint64_t *)&qword_10049E550);
  }
  return result;
}

unint64_t sub_10030296C()
{
  unint64_t result;

  result = qword_10049E558;
  if (!qword_10049E558)
  {
    result = swift_getWitnessTable(&unk_10039D1D0, &_s10ManagementO22ActivityViewControllerVN);
    atomic_store(result, (unint64_t *)&qword_10049E558);
  }
  return result;
}

uint64_t sub_1003029B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = _s10ManagementO4ViewV5ShareO6ButtonVMa(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + v4 + 16));
  v6 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 24));
  v7 = sub_100005574(&qword_100498ED8);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {
    swift_release(*v6);
  }
  sub_1002D0564(*(_QWORD *)(v0 + v4 + *(int *)(v1 + 28)), *(_BYTE *)(v0 + v4 + *(int *)(v1 + 28) + 8));
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_100302A84()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(_s10ManagementO4ViewV5ShareO6ButtonVMa(0) - 8) + 80);
  return (*(uint64_t (**)(void))(v0 + ((v1 + 16) & ~v1) + 8))();
}

uint64_t sub_100302AC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1002F6BD0(*(unsigned __int8 **)(v1 + 16), a1);
}

uint64_t sub_100302AC8()
{
  return sub_100100628((unint64_t *)&unk_10049E590, (uint64_t *)&unk_10049F730, (void (*)(void))sub_100302AEC);
}

unint64_t sub_100302AEC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049E5A0;
  if (!qword_10049E5A0)
  {
    v1 = sub_100005600(&qword_10049E5A8);
    sub_10002FFB8(&qword_10049E5B0, &qword_10049E5B8, (uint64_t)&protocol conformance descriptor for _LayoutRoot<A>);
    sub_10002FFB8(&qword_10049E5C0, &qword_10049E5C8, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _VariadicView.Tree<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049E5A0);
  }
  return result;
}

uint64_t sub_100302B98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v1 = type metadata accessor for Playlist.Collaborator(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 41) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v7 = swift_release(*(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100302C14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Playlist.Collaborator(0) - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = *(_QWORD *)(v1 + 32);
  v8 = *(_BYTE *)(v1 + 40);
  v9 = v1 + ((v4 + 41) & ~v4);
  v10 = (_QWORD *)swift_task_alloc(dword_10049E634);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10000F894;
  return sub_1002E9A08(a1, v5, v6, v7, v8, v9);
}

uint64_t sub_100302CB4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Playlist.Collaborator(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_10049E644);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10000F894;
  return sub_1002E9E34(a1, v5, v6, v7, v8);
}

uint64_t sub_100302D4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v1 = type metadata accessor for Playlist.Collaborator(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v7 = swift_release(*(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100302DC8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Playlist.Collaborator(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_10049E66C);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10000F894;
  return sub_1002E94C8(a1, v5, v6, v7, v8);
}

uint64_t sub_100302E5C()
{
  return sub_100304610(40);
}

uint64_t sub_100302E64(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_10049E67C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10000F894;
  return sub_1002E8B94(a1, v4, v5, v6);
}

uint64_t sub_100302ED0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_10049B07C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000EA88;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_10049B078 + dword_10049B078))(a1, v4);
}

void sub_100302F40(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  sub_1002FAC3C(a1, (uint64_t)&unk_10039D548, (uint64_t)&unk_10039D570, a2);
}

uint64_t sub_100302F64(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1002FACB4(a1, a2, a3, a4, (uint64_t)&unk_10039D548, (uint64_t)&unk_10039D570);
}

void sub_100302F88(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  sub_1002FAC3C(a1, (uint64_t)&unk_10039D590, (uint64_t)&unk_10039D5B8, a2);
}

uint64_t sub_100302FAC(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1002FACB4(a1, a2, a3, a4, (uint64_t)&unk_10039D590, (uint64_t)&unk_10039D5B8);
}

void sub_100302FD0(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_1001726D8(a1, (uint64_t)&unk_10039D5D8, (uint64_t)&unk_10039D600, a2);
}

uint64_t sub_100302FF4(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100172764(a1, a2, a3, a4, (uint64_t)&unk_10039D5D8, (uint64_t)&unk_10039D600);
}

void sub_100303018(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_1001726D8(a1, (uint64_t)&unk_10039D620, (uint64_t)&unk_10039D648, a2);
}

uint64_t sub_10030303C(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100172764(a1, a2, a3, a4, (uint64_t)&unk_10039D620, (uint64_t)&unk_10039D648);
}

void sub_100303060(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_1001726D8(a1, (uint64_t)&unk_10039D668, (uint64_t)&unk_10039D690, a2);
}

uint64_t sub_100303084(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100172764(a1, a2, a3, a4, (uint64_t)&unk_10039D668, (uint64_t)&unk_10039D690);
}

double sub_1003030A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unsigned int (*v14)(uint64_t, uint64_t, uint64_t);
  double result;
  uint64_t v16;
  char v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;

  v2 = type metadata accessor for UserInterfaceSizeClass(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin();
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100005574((uint64_t *)&unk_10049DB80);
  __chkstk_darwin();
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_100499170);
  __chkstk_darwin();
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v12 = (char *)&v19 - v11;
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))((char *)&v19 - v11, enum case for UserInterfaceSizeClass.compact(_:), v2);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v12, 0, 1, v2);
  v13 = (uint64_t)&v8[*(int *)(v6 + 48)];
  sub_100014A7C(a1, (uint64_t)v8, &qword_100499170);
  sub_100014A7C((uint64_t)v12, v13, &qword_100499170);
  v14 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (v14((uint64_t)v8, 1, v2) == 1)
  {
    sub_100008758((uint64_t)v12, &qword_100499170);
    if (v14(v13, 1, v2) == 1)
    {
      sub_100008758((uint64_t)v8, &qword_100499170);
      return -9.0;
    }
  }
  else
  {
    sub_100014A7C((uint64_t)v8, (uint64_t)v10, &qword_100499170);
    if (v14(v13, 1, v2) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v5, v13, v2);
      v16 = sub_100006924(&qword_10049DB90, (uint64_t (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass, (uint64_t)&protocol conformance descriptor for UserInterfaceSizeClass);
      v17 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v5, v2, v16);
      v18 = *(void (**)(char *, uint64_t))(v3 + 8);
      v18(v5, v2);
      sub_100008758((uint64_t)v12, &qword_100499170);
      v18(v10, v2);
      sub_100008758((uint64_t)v8, &qword_100499170);
      result = -9.0;
      if ((v17 & 1) != 0)
        return result;
      return -12.0;
    }
    sub_100008758((uint64_t)v12, &qword_100499170);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
  }
  sub_100008758((uint64_t)v8, (uint64_t *)&unk_10049DB80);
  return -12.0;
}

uint64_t sub_10030336C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for PlaylistCurators.View(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = (_QWORD *)(v0 + v4 + *(int *)(v1 + 20));
  v7 = sub_100005574(&qword_100498E70);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for UserInterfaceSizeClass(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8))
      (*(void (**)(_QWORD *, uint64_t))(v9 + 8))(v6, v8);
  }
  else
  {
    swift_release(*v6);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_100303448@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  type metadata accessor for PlaylistCurators.View(0);
  return sub_1002F9610(a1, a2, *(_QWORD *)(v3 + 16), a3);
}

uint64_t sub_1003034A0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003034C4(char *a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, char *);
  uint64_t v4;
  uint64_t v5;

  v3 = *(uint64_t (**)(uint64_t, char *))(v1 + 16);
  v4 = *(_QWORD *)a1;
  v5 = sub_100005574((uint64_t *)&unk_10049E840);
  return v3(v4, &a1[*(int *)(v5 + 48)]);
}

unint64_t sub_10030351C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049E778;
  if (!qword_10049E778)
  {
    v1 = sub_100005600(&qword_10049E768);
    sub_1003035C0(&qword_10049E780, &qword_10049E788, (void (*)(void))sub_100303630, (void (*)(void))sub_100296BF0);
    sub_10002FFB8(&qword_10049E830, &qword_10049E838, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049E778);
  }
  return result;
}

uint64_t sub_1003035C0(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v8 = sub_100005600(a2);
    a3();
    a4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100303630()
{
  return sub_1003035C0(&qword_10049E790, &qword_10049E798, (void (*)(void))sub_100303654, (void (*)(void))sub_100296B98);
}

uint64_t sub_100303654()
{
  return sub_100100628(&qword_10049E7A0, &qword_10049E7A8, (void (*)(void))sub_100303678);
}

unint64_t sub_100303678()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10049E7B0;
  if (!qword_10049E7B0)
  {
    v1 = sub_100005600(&qword_10049E7B8);
    v2[0] = sub_100005600((uint64_t *)&unk_10049E7C0);
    v2[1] = sub_1002C6818();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>, 1);
    sub_100006924(&qword_10049D018, type metadata accessor for PlaceholderStyleModifier, (uint64_t)&protocol conformance descriptor for PlaceholderStyleModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049E7B0);
  }
  return result;
}

double sub_100303724(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unsigned int (*v14)(uint64_t, uint64_t, uint64_t);
  double result;
  uint64_t v16;
  char v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;

  v2 = type metadata accessor for UserInterfaceSizeClass(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin();
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100005574((uint64_t *)&unk_10049DB80);
  __chkstk_darwin();
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_100499170);
  __chkstk_darwin();
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v12 = (char *)&v19 - v11;
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))((char *)&v19 - v11, enum case for UserInterfaceSizeClass.compact(_:), v2);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v12, 0, 1, v2);
  v13 = (uint64_t)&v8[*(int *)(v6 + 48)];
  sub_100014A7C(a1, (uint64_t)v8, &qword_100499170);
  sub_100014A7C((uint64_t)v12, v13, &qword_100499170);
  v14 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (v14((uint64_t)v8, 1, v2) == 1)
  {
    sub_100008758((uint64_t)v12, &qword_100499170);
    if (v14(v13, 1, v2) == 1)
    {
      sub_100008758((uint64_t)v8, &qword_100499170);
      return 25.0;
    }
  }
  else
  {
    sub_100014A7C((uint64_t)v8, (uint64_t)v10, &qword_100499170);
    if (v14(v13, 1, v2) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v5, v13, v2);
      v16 = sub_100006924(&qword_10049DB90, (uint64_t (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass, (uint64_t)&protocol conformance descriptor for UserInterfaceSizeClass);
      v17 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v5, v2, v16);
      v18 = *(void (**)(char *, uint64_t))(v3 + 8);
      v18(v5, v2);
      sub_100008758((uint64_t)v12, &qword_100499170);
      v18(v10, v2);
      sub_100008758((uint64_t)v8, &qword_100499170);
      result = 25.0;
      if ((v17 & 1) != 0)
        return result;
      return 29.0;
    }
    sub_100008758((uint64_t)v12, &qword_100499170);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
  }
  sub_100008758((uint64_t)v8, (uint64_t *)&unk_10049DB80);
  return 29.0;
}

uint64_t sub_1003039E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_1003039F0(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_1003039F8@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_1002EACAC(*(_QWORD *)(v1 + 16), a1);
}

void sub_100303A00(double *a1@<X8>)
{
  *a1 = EnvironmentValues.defaultMinListRowHeight.getter();
}

uint64_t sub_100303A28(double *a1)
{
  return EnvironmentValues.defaultMinListRowHeight.setter(*a1);
}

uint64_t sub_100303A50()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = (int *)type metadata accessor for Collaboration.Management.View(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  swift_release(*(_QWORD *)(v0 + v4 + 8));
  v7 = (_QWORD *)(v0 + v4 + v1[5]);
  v8 = sub_100005574(&qword_10049F780);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for DismissAction(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
  }
  else
  {
    swift_release(*v7);
  }
  v10 = (_QWORD *)(v6 + v1[6]);
  v11 = sub_100005574(&qword_100498E60);
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v12 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v10, v12);
  }
  else
  {
    swift_release(*v10);
  }
  v13 = (_QWORD *)(v6 + v1[7]);
  v14 = sub_100005574(&qword_100498E68);
  if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
  {
    v15 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v13, v15);
  }
  else
  {
    swift_release(*v13);
  }
  v16 = v3 | 7;
  v17 = v4 + v5;
  v18 = v6 + v1[8];

  swift_release(*(_QWORD *)(v18 + 8));
  swift_release(*(_QWORD *)(v6 + v1[9] + 8));
  swift_release(*(_QWORD *)(v6 + v1[10] + 8));
  swift_release(*(_QWORD *)(v6 + v1[11] + 8));
  swift_release(*(_QWORD *)(v6 + v1[12] + 8));
  return swift_deallocObject(v0, v17, v16);
}

uint64_t sub_100303C08()
{
  return sub_1003049DC(type metadata accessor for Collaboration.Management.View, (uint64_t (*)(uint64_t))sub_1002F2EF4);
}

uint64_t sub_100303C1C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1002EBDF8(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_100303C24()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049E8D0;
  if (!qword_10049E8D0)
  {
    v1 = sub_100005600(&qword_10049E8C0);
    sub_10002FFB8(&qword_10049E8D8, (uint64_t *)&unk_10049E8E0, (uint64_t)&protocol conformance descriptor for VStack<A>);
    sub_10002FFB8(&qword_10049C4E8, &qword_10049E8F0, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049E8D0);
  }
  return result;
}

uint64_t sub_100303CC0(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_100005600(a2);
    a3();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100303D24()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049E900;
  if (!qword_10049E900)
  {
    v1 = sub_100005600(&qword_10049E908);
    sub_100100628(&qword_10049E910, &qword_10049E918, (void (*)(void))sub_100302344);
    sub_10002FFB8(&qword_10049E920, &qword_10049E928, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049E900);
  }
  return result;
}

unint64_t sub_100303DC8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049E930;
  if (!qword_10049E930)
  {
    v1 = sub_100005600(&qword_10049E8B8);
    sub_10002FFB8(&qword_10049E938, &qword_10049E940, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_10049E930);
  }
  return result;
}

unint64_t sub_100303E44()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_10049E948;
  if (!qword_10049E948)
  {
    v1 = sub_100005600(&qword_10049E8A8);
    v2[0] = sub_100005600(&qword_10049E8C0);
    v2[1] = sub_100005600(&qword_10049E8C8);
    v2[2] = sub_100303C24();
    v2[3] = sub_100303CC0(&qword_10049E8F8, &qword_10049E8C8, (void (*)(void))sub_100303D24);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.fullScreenCover<A>(isPresented:onDismiss:content:)>>, 1);
    sub_100303DC8();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_10049E948);
  }
  return result;
}

uint64_t sub_100303F28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1002F262C(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_100303F30()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049E980;
  if (!qword_10049E980)
  {
    v1 = sub_100005600(&qword_10049E970);
    sub_100304128((unint64_t *)&qword_10049E988, &qword_10049E990, (uint64_t)&protocol witness table for Text, (uint64_t)&protocol conformance descriptor for <> _ConditionalContent<A, B>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049E980);
  }
  return result;
}

uint64_t sub_100303FC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1002F13C0(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_100303FD8()
{
  uint64_t v0;

  return sub_1002F21E4(*(_QWORD *)(v0 + 16));
}

unint64_t sub_100303FE0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049E9B0;
  if (!qword_10049E9B0)
  {
    v1 = sub_100005600(&qword_10049E9A8);
    sub_100006924(&qword_10049E998, _s10ManagementO4ViewV19CollaboratorRowViewVMa, (uint64_t)&unk_10039D3D8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_10049E9B0);
  }
  return result;
}

uint64_t sub_10030405C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1002F1618(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_100304068()
{
  return sub_1003049DC(type metadata accessor for Collaboration.Management.View, (uint64_t (*)(uint64_t))sub_1002F1910);
}

unint64_t sub_10030407C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049E9F0;
  if (!qword_10049E9F0)
  {
    v1 = sub_100005600(&qword_10049E9E8);
    sub_100304128(&qword_10049E9F8, &qword_10049EA00, (uint64_t)&protocol witness table for _FlexFrameLayout, (uint64_t)&protocol conformance descriptor for <> ModifiedContent<A, B>);
    sub_10002FFB8(&qword_10049D560, (uint64_t *)&unk_10049E490, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049E9F0);
  }
  return result;
}

uint64_t sub_100304128(unint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = sub_100005600(a2);
    result = swift_getWitnessTable(a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10030418C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1002F1CDC(*(_QWORD *)(v1 + 16), a1);
}

void sub_1003041A8(BOOL *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Collaboration.Management.View(0) - 8) + 80);
  sub_1002F27DC(v1 + ((v3 + 32) & ~v3), a1);
}

uint64_t sub_1003041EC()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = (int *)type metadata accessor for Collaboration.Management.View(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v6 = v0 + v4;
  swift_release(*(_QWORD *)(v0 + v4 + 8));
  v7 = (_QWORD *)(v0 + v4 + v1[5]);
  v8 = sub_100005574(&qword_10049F780);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for DismissAction(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
  }
  else
  {
    swift_release(*v7);
  }
  v10 = (_QWORD *)(v6 + v1[6]);
  v11 = sub_100005574(&qword_100498E60);
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v12 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v10, v12);
  }
  else
  {
    swift_release(*v10);
  }
  v13 = (_QWORD *)(v6 + v1[7]);
  v14 = sub_100005574(&qword_100498E68);
  if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
  {
    v15 = type metadata accessor for OpenURLAction(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v13, v15);
  }
  else
  {
    swift_release(*v13);
  }
  v16 = v3 | 7;
  v17 = v4 + v5;
  v18 = v6 + v1[8];

  swift_release(*(_QWORD *)(v18 + 8));
  swift_release(*(_QWORD *)(v6 + v1[9] + 8));
  swift_release(*(_QWORD *)(v6 + v1[10] + 8));
  swift_release(*(_QWORD *)(v6 + v1[11] + 8));
  swift_release(*(_QWORD *)(v6 + v1[12] + 8));
  return swift_deallocObject(v0, v17, v16);
}

double sub_1003043AC(char *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Collaboration.Management.View(0) - 8) + 80);
  return sub_1002F2860(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + ((v3 + 32) & ~v3));
}

uint64_t sub_1003043EC()
{
  return sub_100304610(41);
}

uint64_t sub_1003043F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _QWORD *v8;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_BYTE *)(v1 + 40);
  v8 = (_QWORD *)swift_task_alloc(dword_10049EA24);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10000EA88;
  return sub_1002E87A0(a1, v4, v5, v6, v7);
}

uint64_t sub_100304474@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for Collaboration.Management.View(0);
  return sub_1002F11E8(a1);
}

uint64_t sub_1003044B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Collaboration.Management.View(0) - 8) + 80);
  return sub_1002F10C4(a1, v1 + ((v3 + 16) & ~v3));
}

unint64_t sub_100304500()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049EB20;
  if (!qword_10049EB20)
  {
    v1 = sub_100005600(&qword_10049EAF0);
    sub_100304584();
    sub_10002FFB8(&qword_10049EB38, &qword_10049EAE8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049EB20);
  }
  return result;
}

unint64_t sub_100304584()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049EB28;
  if (!qword_10049EB28)
  {
    v1 = sub_100005600(&qword_10049EB30);
    sub_10002FFB8(&qword_10049D560, (uint64_t *)&unk_10049E490, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049EB28);
  }
  return result;
}

uint64_t sub_100304608()
{
  return sub_100304610(40);
}

uint64_t sub_100304610(uint64_t a1)
{
  uint64_t v1;

  swift_unknownObjectRelease(*(_QWORD *)(v1 + 16));
  swift_release(*(_QWORD *)(v1 + 32));
  return swift_deallocObject(v1, a1, 7);
}

uint64_t sub_100304648(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_10049EB54);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10000F894;
  return sub_1002E8EC4(a1, v4, v5, v6);
}

uint64_t sub_1003046B8()
{
  return sub_1003049DC(type metadata accessor for Collaboration.Management.View, (uint64_t (*)(uint64_t))sub_1002F0380);
}

uint64_t sub_1003046E4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

_BYTE *sub_1003046F4(_BYTE *a1)
{
  uint64_t v1;

  return sub_10031A724(a1, *(_BYTE *)(v1 + 16));
}

uint64_t sub_100304700@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Collaboration.Management.View(0) - 8) + 80);
  return sub_1002F04C8(v1 + ((v3 + 16) & ~v3), a1);
}

unint64_t sub_10030473C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049EB88;
  if (!qword_10049EB88)
  {
    v1 = sub_100005600(&qword_10049EB70);
    sub_100006924(&qword_10049EB90, _s10ManagementO4ViewV5ShareO6ButtonVMa, (uint64_t)&unk_10039D0C8);
    sub_10002FFB8(&qword_10049EB98, &qword_10049EBA0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyTransformModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049EB88);
  }
  return result;
}

uint64_t sub_1003047DC()
{
  return sub_1003049DC(type metadata accessor for Collaboration.Management.View, (uint64_t (*)(uint64_t))sub_1002F06AC);
}

uint64_t sub_1003047F0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

unint64_t sub_100304800()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049EBF0;
  if (!qword_10049EBF0)
  {
    v1 = sub_100005600(&qword_10049EBC8);
    sub_100304884();
    sub_10002FFB8(&qword_10049C4E8, &qword_10049E8F0, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049EBF0);
  }
  return result;
}

unint64_t sub_100304884()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049EBF8;
  if (!qword_10049EBF8)
  {
    v1 = sub_100005600(&qword_10049EBC0);
    sub_10002FFB8(&qword_10049EC00, &qword_10049EBB8, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049EBF8);
  }
  return result;
}

unint64_t sub_100304908()
{
  unint64_t result;

  result = qword_10049EC08;
  if (!qword_10049EC08)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for _AlignmentWritingModifier, &type metadata for _AlignmentWritingModifier);
    atomic_store(result, (unint64_t *)&qword_10049EC08);
  }
  return result;
}

uint64_t sub_100304950@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Collaboration.Management.View(0) - 8) + 80);
  return sub_1002F13C0(a1, v2 + ((v5 + 16) & ~v5), a2);
}

uint64_t sub_1003049A0()
{
  return EnvironmentValues.symbolRenderingMode.getter();
}

uint64_t sub_1003049C8()
{
  return sub_1003049DC(type metadata accessor for Collaboration.Management.View, (uint64_t (*)(uint64_t))sub_1002EDED8);
}

uint64_t sub_1003049DC(uint64_t (*a1)(_QWORD), uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(a1(0) - 8) + 80);
  return a2(v2 + ((v3 + 16) & ~v3));
}

unint64_t sub_100304A1C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049ECA0;
  if (!qword_10049ECA0)
  {
    v1 = sub_100005600(&qword_10049EC18);
    sub_10002FFB8(&qword_10049F870, (uint64_t *)&unk_10049DB50, (uint64_t)&protocol conformance descriptor for Button<A>);
    sub_10002FFB8((unint64_t *)&unk_10049E600, &qword_10049B8D8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049ECA0);
  }
  return result;
}

unint64_t sub_100304AB8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049ECB0;
  if (!qword_10049ECB0)
  {
    v1 = sub_100005600(&qword_10049EC48);
    sub_100304B3C();
    sub_10002FFB8(&qword_10049ECE8, &qword_10049ECA8, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049ECB0);
  }
  return result;
}

unint64_t sub_100304B3C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049ECB8;
  if (!qword_10049ECB8)
  {
    v1 = sub_100005600(&qword_10049EC40);
    sub_100100628(&qword_10049ECC0, &qword_10049EC38, (void (*)(void))sub_100304BE0);
    sub_10002FFB8((unint64_t *)&unk_10049F510, &qword_10049ECE0, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049ECB8);
  }
  return result;
}

uint64_t sub_100304BE0()
{
  return sub_100100628(&qword_10049ECC8, &qword_10049EC30, (void (*)(void))sub_100304C04);
}

unint64_t sub_100304C04()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10049ECD0;
  if (!qword_10049ECD0)
  {
    v1 = sub_100005600(&qword_10049EC28);
    v2[0] = sub_100005600(&qword_10049EC18);
    v2[1] = sub_100304A1C();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>, 1);
    sub_10002FFB8(&qword_10049D560, (uint64_t *)&unk_10049E490, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049ECD0);
  }
  return result;
}

uint64_t sub_100304CB0@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_1002EE020(v1[2], v1[3], v1[4], a1);
}

uint64_t sub_100304CC0()
{
  type metadata accessor for Collaboration.Management.View(0);
  return sub_1002F2144();
}

uint64_t sub_100304CF0()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100304D14(uint64_t a1)
{
  uint64_t v1;

  return sub_1002E45B0(a1, v1);
}

uint64_t sub_100304D1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for Playlist(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_100304DAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(type metadata accessor for Playlist(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc(dword_10049ECFC);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10000F894;
  return sub_1002E4648(a1, v6, v7, v8, v9);
}

uint64_t sub_100304E50@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v3 = a1[3];
  v4 = a1[4];
  sub_10000ABC8(a1, v3);
  result = dispatch thunk of LibraryPlaylistFilter.id.getter(v3, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

unint64_t sub_100304E94()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049ED48;
  if (!qword_10049ED48)
  {
    v1 = sub_1000087DC(255, (unint64_t *)&qword_100499FB0, OS_dispatch_queue_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for OS_dispatch_queue, v1);
    atomic_store(result, (unint64_t *)&qword_10049ED48);
  }
  return result;
}

void sub_100304EEC(void (*a1)(char *))
{
  uint64_t v1;

  sub_1002E4B30(a1, v1);
}

uint64_t sub_100304EF4()
{
  return Playlist.collaboration.getter();
}

uint64_t _s10ManagementO4ViewV5ShareOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100304F60 + 4 * byte_10039CD15[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100304F94 + 4 * asc_10039CD10[v4]))();
}

uint64_t sub_100304F94(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100304F9C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100304FA4);
  return result;
}

uint64_t sub_100304FB0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100304FB8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100304FBC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100304FC4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s10ManagementO4ViewV10ModerationOMa()
{
  return &_s10ManagementO4ViewV10ModerationON;
}

double _s10ManagementO4ViewV10ModerationO6ButtonVwxx(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 16)).n128_u64[0];
  return result;
}

uint64_t _s10ManagementO4ViewV10ModerationO6ButtonVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_retain(v3);
  return a1;
}

uint64_t _s10ManagementO4ViewV10ModerationO6ButtonVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_retain(v3);
  swift_release(v4);
  return a1;
}

__n128 _s10ManagementO4ViewV10ModerationO6ButtonVwtk(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t _s10ManagementO4ViewV10ModerationO6ButtonVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release(v3);
  return a1;
}

ValueMetadata *_s10ManagementO4ViewV10ModerationO6ButtonVMa()
{
  return &_s10ManagementO4ViewV10ModerationO6ButtonVN;
}

unint64_t sub_1003050C0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  result = qword_10049EDB0;
  if (!qword_10049EDB0)
  {
    v1 = sub_100005600(&qword_10049EDB8);
    v2 = sub_100005600(&qword_10049E430);
    v3 = sub_100005600(&qword_10049E428);
    v6 = sub_100005600(&qword_10049E420);
    v7 = sub_100005600(&qword_10049E448);
    v8 = sub_1003023E8();
    v9 = sub_100303CC0(&qword_10049E470, &qword_10049E448, (void (*)(void))sub_100302484);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.swipeActions<A>(edge:allowsFullSwipe:content:)>>, 1);
    v6 = v3;
    v7 = OpaqueTypeConformance2;
    v5 = swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.alert(isPresented:content:)>>, 1);
    v6 = v2;
    v7 = v5;
    swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    sub_100006924(&qword_10049EDC0, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049EDB0);
  }
  return result;
}

unint64_t sub_10030520C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049EDC8;
  if (!qword_10049EDC8)
  {
    v1 = sub_100005600(&qword_10049E578);
    sub_100305290();
    sub_10002FFB8(&qword_10049EDE8, &qword_10049E5D0, (uint64_t)&protocol conformance descriptor for _InsettableBackgroundShapeModifier<A, B>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049EDC8);
  }
  return result;
}

unint64_t sub_100305290()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049EDD0;
  if (!qword_10049EDD0)
  {
    v1 = sub_100005600(&qword_10049E570);
    sub_100305314();
    sub_10002FFB8(&qword_10049D560, (uint64_t *)&unk_10049E490, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049EDD0);
  }
  return result;
}

unint64_t sub_100305314()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049EDD8;
  if (!qword_10049EDD8)
  {
    v1 = sub_100005600(&qword_10049E568);
    sub_10002FFB8(&qword_10049EDE0, &qword_10049E560, (uint64_t)&protocol conformance descriptor for Button<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049EDD8);
  }
  return result;
}

uint64_t sub_100305398(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1003E3F20, 1);
}

unint64_t sub_1003053AC()
{
  unint64_t result;

  result = qword_10049EDF0;
  if (!qword_10049EDF0)
  {
    result = swift_getWitnessTable(&unk_10039D938, &_s10ManagementO4ViewV10ModerationON);
    atomic_store(result, (unint64_t *)&qword_10049EDF0);
  }
  return result;
}

uint64_t sub_1003053F0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

double sub_100305414()
{
  uint64_t v0;

  return sub_1002F75A4(*(_BYTE *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_100305420@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1002F761C(*(_BYTE *)(v1 + 16), a1);
}

unint64_t sub_10030542C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049EE18;
  if (!qword_10049EE18)
  {
    v1 = sub_100005600(&qword_10049EE10);
    sub_1003054B0();
    sub_10002FFB8((unint64_t *)&unk_10049EE50, &qword_10049F850, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049EE18);
  }
  return result;
}

unint64_t sub_1003054B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049EE20;
  if (!qword_10049EE20)
  {
    v1 = sub_100005600(&qword_10049EE28);
    sub_100100628(&qword_10049EE30, &qword_10049EE38, (void (*)(void))sub_100305554);
    sub_10002FFB8((unint64_t *)&unk_10049F510, &qword_10049ECE0, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049EE20);
  }
  return result;
}

unint64_t sub_100305554()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049EE40;
  if (!qword_10049EE40)
  {
    v1 = sub_100005600(&qword_10049EE48);
    sub_1002DD9D8();
    sub_10002FFB8(&qword_10049D560, (uint64_t *)&unk_10049E490, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049EE40);
  }
  return result;
}

uint64_t sub_1003055D8()
{
  return EnvironmentValues._buttonBorderShape.getter();
}

uint64_t sub_1003055F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1002FD808(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for ButtonBorderShape, (uint64_t (*)(char *))&EnvironmentValues._buttonBorderShape.setter);
}

uint64_t sub_10030561C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 24))();
}

unint64_t sub_100305648()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_10049EE78;
  if (!qword_10049EE78)
  {
    v1 = sub_100005600(&qword_10049EE68);
    v2[0] = sub_100005600(&qword_10049EDF8);
    v2[1] = type metadata accessor for BorderlessButtonStyle(255);
    v2[2] = sub_10002FFB8(&qword_10049EE60, &qword_10049EDF8, (uint64_t)&protocol conformance descriptor for Button<A>);
    v2[3] = sub_100006924(&qword_10049E9E0, (uint64_t (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle, (uint64_t)&protocol conformance descriptor for BorderlessButtonStyle);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    sub_10002FFB8((unint64_t *)&unk_10049EE80, &qword_10049EE70, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049EE78);
  }
  return result;
}

void Collaboration.Management.ViewController.init(rootView:)()
{
  PlaylistCurators.ViewController.init(rootView:)();
}

uint64_t Collaboration.Flow.Collaborator.init(name:handle:artwork:canCollaborate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, _QWORD *a7@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;

  v14 = type metadata accessor for Collaboration.Flow.Collaborator(0);
  v15 = (uint64_t)a7 + *(int *)(v14 + 24);
  v16 = type metadata accessor for Artwork(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  v17 = *(int *)(v14 + 28);
  *((_BYTE *)a7 + v17) = 0;
  *a7 = a1;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  result = sub_100305828(a5, v15);
  *((_BYTE *)a7 + v17) = a6;
  return result;
}

uint64_t type metadata accessor for Collaboration.Flow.Collaborator(uint64_t a1)
{
  return sub_1000091AC(a1, qword_10049F000, (uint64_t)&nominal type descriptor for Collaboration.Flow.Collaborator);
}

uint64_t sub_100305828(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005574((uint64_t *)&unk_10049F430);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t Collaboration.Flow.Collaborator.artwork.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Collaboration.Flow.Collaborator(0);
  return sub_100014A7C(v1 + *(int *)(v3 + 24), a1, (uint64_t *)&unk_10049F430);
}

uint64_t Collaboration.Flow.Collaborator.artwork.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for Collaboration.Flow.Collaborator(0) + 24);
  return sub_100305828(a1, v3);
}

CFRange (__swiftcall *Collaboration.Flow.Collaborator.artwork.modify())(__C::_NSRange)
{
  type metadata accessor for Collaboration.Flow.Collaborator(0);
  return CFRange.init(_:);
}

uint64_t Collaboration.Flow.Collaborator.canCollaborate.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Collaboration.Flow.Collaborator(0) + 28));
}

uint64_t Collaboration.Flow.Collaborator.canCollaborate.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Collaboration.Flow.Collaborator(0);
  *(_BYTE *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

CFRange (__swiftcall *Collaboration.Flow.Collaborator.canCollaborate.modify())(__C::_NSRange)
{
  type metadata accessor for Collaboration.Flow.Collaborator(0);
  return CFRange.init(_:);
}

uint64_t Collaboration.Flow.title.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t (*v16)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v39[2];

  v1 = v0;
  v39[0] = type metadata accessor for Playlist.Collaborator(0);
  v2 = *(_QWORD *)(v39[0] - 8);
  __chkstk_darwin();
  v4 = (char *)v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v6 = (char *)v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin();
  v10 = (char *)v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v12 = (char *)v39 - v11;
  v13 = type metadata accessor for Collaboration.Flow(0);
  __chkstk_darwin();
  v15 = (char *)v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100082248(v1, (uint64_t)v15, v16);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v15, v13);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v18 = v39[0];
      (*(void (**)(char *, char *, _QWORD))(v2 + 32))(v4, v15, v39[0]);
      String.LocalizationValue.init(stringLiteral:)(0xD000000000000010, 0x80000001003BA820);
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v12, v7);
      if (qword_100498860 != -1)
        swift_once(&qword_100498860, sub_100232E30);
      v19 = qword_1004A2F90;
      static Locale.current.getter((id)qword_1004A2F90);
      v20 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v19, v6, 0, 0, 256);
      v22 = v21;
      (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
      v23 = sub_100005574(&qword_10049EEC8);
      v24 = swift_allocObject(v23, 72, 7);
      *(_OWORD *)(v24 + 16) = xmmword_100384A80;
      v25 = Playlist.Collaborator.name.getter(v24);
      v27 = v26;
      *(_QWORD *)(v24 + 56) = &type metadata for String;
      *(_QWORD *)(v24 + 64) = sub_10030F2FC();
      if (v27)
        v28 = v25;
      else
        v28 = 0;
      v29 = 0xE000000000000000;
      if (v27)
        v29 = v27;
      *(_QWORD *)(v24 + 32) = v28;
      *(_QWORD *)(v24 + 40) = v29;
      v30 = static String.localizedStringWithFormat(_:_:)(v20, v22, v24);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v18);
    }
    else
    {
      String.LocalizationValue.init(stringLiteral:)(0xD000000000000015, 0x80000001003BA860);
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v12, v7);
      if (qword_100498860 != -1)
        swift_once(&qword_100498860, sub_100232E30);
      v35 = qword_1004A2F90;
      static Locale.current.getter((id)qword_1004A2F90);
      v30 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v35, v6, 0, 0, 256);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
    }
  }
  else
  {
    v31 = sub_100005574(&qword_10049EED8);
    v32 = &v15[*(int *)(v31 + 48)];
    if (v15[*(int *)(v31 + 64)] == 1)
    {
      v33 = 0x616C50206E696F4ALL;
      v34 = 0xEE003F7473696C79;
    }
    else
    {
      v33 = 0xD000000000000017;
      v34 = 0x80000001003BA840;
    }
    String.LocalizationValue.init(stringLiteral:)(v33, v34);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v12, v7);
    if (qword_100498860 != -1)
      swift_once(&qword_100498860, sub_100232E30);
    v36 = qword_1004A2F90;
    static Locale.current.getter((id)qword_1004A2F90);
    v30 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v36, v6, 0, 0, 256);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
    v37 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v37 - 8) + 8))(v32, v37);
    sub_100008758((uint64_t)v15, &qword_10049EEE0);
  }
  return v30;
}

Swift::String __swiftcall Collaboration.Flow.subtitle(hasProfileEdit:)(Swift::Bool hasProfileEdit)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  Swift::String *v5;
  uint64_t v6;
  Swift::String *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t (*v21)(_QWORD);
  int EnumCaseMultiPayload;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  char *v27;
  uint64_t v28;
  id v29;
  char *v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  unint64_t v45;
  const char *v46;
  uint64_t v47;
  Swift::String *v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  id v52;
  char *v53;
  void *v54;
  void (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  char *v57;
  uint64_t v58;
  id v59;
  char *v60;
  void *v61;
  void (*v62)(char *, char *, uint64_t);
  uint64_t v63;
  char *v64;
  uint64_t v65;
  id v66;
  char *v67;
  char *v68;
  uint64_t countAndFlagsBits;
  void *object;
  char *v71;
  char *v72;
  Swift::String v73;
  Swift::String v74;
  Swift::String v75;
  unint64_t v76;
  const char *v77;
  void *v78;
  Swift::String v79;
  Swift::String v80;
  Swift::String v81;
  unint64_t v82;
  void (*v83)(char *, char *, uint64_t);
  id v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  uint64_t v89;
  const char *v90;
  uint64_t v91;
  uint64_t v92;
  id v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void *v100;
  uint64_t v101;
  void *v102;
  Swift::String result;
  Swift::String *v104;
  uint64_t v105;
  uint64_t v106;
  _BOOL4 v107;
  char *v108;
  char *v109;
  char *v110;
  uint64_t v111;

  v107 = hasProfileEdit;
  type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  __chkstk_darwin();
  v2 = (char *)&v104 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Collaboration.Flow.Collaborator(0);
  v105 = *(_QWORD *)(v3 - 8);
  v106 = v3;
  __chkstk_darwin();
  v5 = (Swift::String *)((char *)&v104 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  v7 = (Swift::String *)((char *)&v104 - v6);
  v8 = sub_100005574(&qword_10049EEE8);
  __chkstk_darwin();
  v10 = (char *)&v104 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_10049EEE0);
  __chkstk_darwin();
  v12 = (char *)&v104 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v108 = (char *)&v104 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = type metadata accessor for String.LocalizationValue(0);
  v14 = *(_QWORD *)(v111 - 8);
  __chkstk_darwin();
  v110 = (char *)&v104 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v17 = (char *)&v104 - v16;
  v18 = type metadata accessor for Collaboration.Flow(0);
  __chkstk_darwin();
  v20 = (char *)&v104 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100082248((uint64_t)v109, (uint64_t)v20, v21);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v20, v18);
  if (!EnumCaseMultiPayload)
  {
    v104 = v5;
    v34 = sub_100005574(&qword_10049EED8);
    v109 = &v20[*(int *)(v34 + 48)];
    v35 = v20[*(int *)(v34 + 64)];
    sub_1000149A8((uint64_t)v20, (uint64_t)v12, &qword_10049EEE0);
    v36 = *(int *)(v8 + 48);
    sub_100014A7C((uint64_t)v12, (uint64_t)v10, &qword_10049EEE0);
    v10[v36] = v35;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v105 + 48))(v10, 1, v106) == 1)
    {
      v37 = v17;
      v38 = v14;
      if (v35)
      {
        v39 = 0x80000001003BA950;
        v40 = 0x100000000000005BLL;
      }
      else
      {
        v39 = 0x80000001003BA8D0;
        v40 = 0xD00000000000007ELL;
      }
      String.LocalizationValue.init(stringLiteral:)(v40, v39);
      v55 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
      v57 = v110;
      v56 = v111;
      v55(v110, v37, v111);
      if (qword_100498860 != -1)
        swift_once(&qword_100498860, sub_100232E30);
      v58 = qword_1004A2F90;
      v59 = (id)qword_1004A2F90;
      v60 = v108;
      static Locale.current.getter(v59);
      v31 = String.init(localized:table:bundle:locale:comment:)(v57, 0, 0, v58, v60, 0, 0, 256);
      v33 = v61;
      (*(void (**)(char *, uint64_t))(v38 + 8))(v37, v56);
      sub_100008758((uint64_t)v12, &qword_10049EEE0);
      goto LABEL_36;
    }
    v47 = v14;
    if (v35)
    {
      v48 = v7;
      sub_1000648AC((uint64_t)v10, (uint64_t)v7, type metadata accessor for Collaboration.Flow.Collaborator);
      if (v107)
      {
        v49 = 0x80000001003BA950;
        v50 = 0x100000000000005BLL;
LABEL_24:
        String.LocalizationValue.init(stringLiteral:)(v50, v49);
        v62 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
        v64 = v110;
        v63 = v111;
        v62(v110, v17, v111);
        if (qword_100498860 != -1)
          swift_once(&qword_100498860, sub_100232E30);
        v65 = qword_1004A2F90;
        v66 = (id)qword_1004A2F90;
        v67 = v108;
        static Locale.current.getter(v66);
        v68 = v64;
LABEL_34:
        v31 = String.init(localized:table:bundle:locale:comment:)(v68, 0, 0, v65, v67, 0, 0, 256);
        v33 = v85;
        (*(void (**)(char *, uint64_t))(v47 + 8))(v17, v63);
LABEL_35:
        sub_100008758((uint64_t)v12, &qword_10049EEE0);
        sub_100006798((uint64_t)v48, type metadata accessor for Collaboration.Flow.Collaborator);
LABEL_36:
        v86 = type metadata accessor for URL(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v86 - 8) + 8))(v109, v86);
        goto LABEL_37;
      }
      countAndFlagsBits = v7[1]._countAndFlagsBits;
      object = v48[1]._object;
      v71 = v110;
      if (object)
      {
        v72 = v2;
        String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(98, 2);
        v73._countAndFlagsBits = 0x100000000000002ELL;
        v73._object = (void *)0x80000001003BAB20;
        String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v73);
        String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(*v48);
        v74._countAndFlagsBits = 4204576;
        v74._object = (void *)0xE300000000000000;
        String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v74);
        v75._countAndFlagsBits = countAndFlagsBits;
        v75._object = object;
        String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v75);
        v76 = 0xD000000000000031;
        v77 = ") and the playlist will be added to your library.";
LABEL_31:
        v82 = (unint64_t)(v77 - 32) | 0x8000000000000000;
        String.LocalizationValue.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v76);
        String.LocalizationValue.init(stringInterpolation:)(v72);
        v83 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
        v63 = v111;
        v83(v71, v17, v111);
        if (qword_100498860 != -1)
          swift_once(&qword_100498860, sub_100232E30);
        v65 = qword_1004A2F90;
        v84 = (id)qword_1004A2F90;
        v67 = v108;
        static Locale.current.getter(v84);
        v68 = v71;
        goto LABEL_34;
      }
      v89 = 0x1000000000000060;
      v90 = "You’ll be able to edit and reorder songs as %@ and the playlist will be added to your library.";
    }
    else
    {
      v48 = v104;
      sub_1000648AC((uint64_t)v10, (uint64_t)v104, type metadata accessor for Collaboration.Flow.Collaborator);
      if (v107)
      {
        v49 = 0x80000001003BA8D0;
        v50 = 0xD00000000000007ELL;
        goto LABEL_24;
      }
      countAndFlagsBits = v48[1]._countAndFlagsBits;
      v78 = v48[1]._object;
      v71 = v110;
      if (v78)
      {
        v72 = v2;
        String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(117, 2);
        v79._countAndFlagsBits = 0x100000000000002ALL;
        v79._object = (void *)0x80000001003BAA30;
        String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v79);
        String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(*v48);
        v80._countAndFlagsBits = 4204576;
        v80._object = (void *)0xE300000000000000;
        String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v80);
        v81._countAndFlagsBits = countAndFlagsBits;
        v81._object = v78;
        String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v81);
        v76 = 0xD000000000000048;
        v77 = "). The playlist will be added to your library after you request to join.";
        goto LABEL_31;
      }
      v89 = 0x1000000000000073;
      v90 = "Once the owner approves, you’ll join as %@. The playlist will be added to your library after you request to join.";
    }
    String.LocalizationValue.init(stringLiteral:)(v89, (unint64_t)(v90 - 32) | 0x8000000000000000);
    v91 = v111;
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v71, v17, v111);
    if (qword_100498860 != -1)
      swift_once(&qword_100498860, sub_100232E30);
    v92 = qword_1004A2F90;
    v93 = (id)qword_1004A2F90;
    v94 = v108;
    static Locale.current.getter(v93);
    v95 = String.init(localized:table:bundle:locale:comment:)(v71, countAndFlagsBits, 0, v92, v94, 0, 0, 256);
    v97 = v96;
    (*(void (**)(char *, uint64_t))(v47 + 8))(v17, v91);
    v98 = sub_100005574(&qword_10049EEC8);
    v99 = swift_allocObject(v98, 72, 7);
    *(_OWORD *)(v99 + 16) = xmmword_100384A80;
    v101 = v48->_countAndFlagsBits;
    v100 = v48->_object;
    *(_QWORD *)(v99 + 56) = &type metadata for String;
    *(_QWORD *)(v99 + 64) = sub_10030F2FC();
    *(_QWORD *)(v99 + 32) = v101;
    *(_QWORD *)(v99 + 40) = v100;
    swift_bridgeObjectRetain();
    v31 = static String.localizedStringWithFormat(_:_:)(v95, v97, v99);
    v33 = v102;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_35;
  }
  if (EnumCaseMultiPayload == 1)
  {
    v23 = v17;
    String.LocalizationValue.init(stringLiteral:)(0xD00000000000004BLL, 0x80000001003BA880);
    v24 = v14;
    v25 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
    v27 = v110;
    v26 = v111;
    v25(v110, v23, v111);
    if (qword_100498860 != -1)
      swift_once(&qword_100498860, sub_100232E30);
    v28 = qword_1004A2F90;
    v29 = (id)qword_1004A2F90;
    v30 = v108;
    static Locale.current.getter(v29);
    v31 = String.init(localized:table:bundle:locale:comment:)(v27, 0, 0, v28, v30, 0, 0, 256);
    v33 = v32;
    (*(void (**)(char *, uint64_t))(v24 + 8))(v23, v26);
    sub_100006798((uint64_t)v20, type metadata accessor for Collaboration.Flow);
  }
  else
  {
    v41 = v17;
    v42 = v14;
    v43 = v110;
    v44 = v111;
    if (v107)
    {
      v45 = 0xD00000000000006CLL;
      v46 = "Anyone with the link will be able to edit and reorder songs and your name and photo will be shown to others.";
    }
    else
    {
      v45 = 0xD00000000000003CLL;
      v46 = "Anyone with the link will be able to edit and reorder songs.";
    }
    String.LocalizationValue.init(stringLiteral:)(v45, (unint64_t)(v46 - 32) | 0x8000000000000000);
    (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v43, v41, v44);
    if (qword_100498860 != -1)
      swift_once(&qword_100498860, sub_100232E30);
    v51 = qword_1004A2F90;
    v52 = (id)qword_1004A2F90;
    v53 = v108;
    static Locale.current.getter(v52);
    v31 = String.init(localized:table:bundle:locale:comment:)(v43, 0, 0, v51, v53, 0, 0, 256);
    v33 = v54;
    (*(void (**)(char *, uint64_t))(v42 + 8))(v41, v44);
  }
LABEL_37:
  v87 = v31;
  v88 = v33;
  result._object = v88;
  result._countAndFlagsBits = v87;
  return result;
}

uint64_t Collaboration.Flow.buttonActionTitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t (*v13)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v24[16];

  v1 = v0;
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v3 = &v24[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for String.LocalizationValue(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = &v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  v9 = &v24[-v8];
  v10 = type metadata accessor for Collaboration.Flow(0);
  __chkstk_darwin();
  v12 = &v24[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100082248(v1, (uint64_t)v12, v13);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v12, v10);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_100006798((uint64_t)v12, type metadata accessor for Collaboration.Flow);
      return 0;
    }
    else
    {
      String.LocalizationValue.init(stringLiteral:)(0xD000000000000013, 0x80000001003BAC40);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 16))(v7, v9, v4);
      if (qword_100498860 != -1)
        swift_once(&qword_100498860, sub_100232E30);
      v20 = qword_1004A2F90;
      static Locale.current.getter((id)qword_1004A2F90);
      v15 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v20, v3, 0, 0, 256);
      (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v9, v4);
    }
  }
  else
  {
    v16 = sub_100005574(&qword_10049EED8);
    v17 = &v12[*(int *)(v16 + 48)];
    if (v12[*(int *)(v16 + 64)] == 1)
    {
      v18 = 1852403530;
      v19 = 0xE400000000000000;
    }
    else
    {
      v18 = 0x2074736575716552;
      v19 = 0xEF6E696F4A206F74;
    }
    String.LocalizationValue.init(stringLiteral:)(v18, v19);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 16))(v7, v9, v4);
    if (qword_100498860 != -1)
      swift_once(&qword_100498860, sub_100232E30);
    v21 = qword_1004A2F90;
    static Locale.current.getter((id)qword_1004A2F90);
    v15 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v21, v3, 0, 0, 256);
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v9, v4);
    v22 = type metadata accessor for URL(0);
    (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v17, v22);
    sub_100008758((uint64_t)v12, &qword_10049EEE0);
  }
  return v15;
}

uint64_t Collaboration.Flow.View.init(_:object:manager:showProfileCreation:profileUpdateHandler:completion:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  uint64_t v16;
  int *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  uint64_t result;
  _QWORD *v25;
  char v28;
  uint64_t v29;
  uint64_t v30;

  *a9 = swift_getKeyPath(&unk_10039D9A0);
  v16 = sub_100005574(&qword_10049F780);
  swift_storeEnumTagMultiPayload(a9, v16, 0);
  v17 = (int *)type metadata accessor for Collaboration.Flow.View(0);
  v18 = (char *)a9 + v17[5];
  v28 = _s9MusicCore13CollaborationO0aB2UIE4FlowO4ViewV13_isRestricted33_4FA82EB282576B4095E3FA5F35E498B805SwiftD05StateVySbGvpfi_0() & 1;
  State.init(wrappedValue:)(&v29, &v28, &type metadata for Bool);
  v19 = v30;
  *v18 = v29;
  *((_QWORD *)v18 + 1) = v19;
  v20 = (char *)a9 + v17[6];
  v28 = 0;
  State.init(wrappedValue:)(&v29, &v28, &type metadata for Bool);
  v21 = v30;
  *v20 = v29;
  *((_QWORD *)v20 + 1) = v21;
  v22 = (_QWORD *)((char *)a9 + v17[11]);
  v23 = (char *)a9 + v17[13];
  *(_QWORD *)v23 = sub_10030C574;
  *((_QWORD *)v23 + 1) = 0;
  v23[16] = 0;
  sub_1000648AC(a1, (uint64_t)a9 + v17[7], type metadata accessor for Collaboration.Flow);
  result = sub_1000648AC(a2, (uint64_t)a9 + v17[8], type metadata accessor for Collaboration.Object);
  *(_QWORD *)((char *)a9 + v17[9]) = a3;
  *((_BYTE *)a9 + v17[10]) = a4;
  *v22 = a5;
  v22[1] = a6;
  v25 = (_QWORD *)((char *)a9 + v17[12]);
  *v25 = a7;
  v25[1] = a8;
  return result;
}

uint64_t (*variable initialization expression of Collaboration.Flow.View._profileContext())()
{
  return sub_10030C574;
}

uint64_t Collaboration.Flow.View.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  *(_QWORD *)a2 = static HorizontalAlignment.center.getter(a1);
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 0;
  v4 = sub_100005574(&qword_10049EEF0);
  return sub_100306C5C(v2, a2 + *(int *)(v4 + 44));
}

uint64_t sub_100306C5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t KeyPath;
  uint64_t v65;
  unint64_t v66;
  uint64_t OpaqueTypeConformance2;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  char v73;
  void *v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  double v89;
  double v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  int v103;
  int v104;
  uint64_t v105;
  uint64_t v106;
  __n128 v107;
  double v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  double v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  int v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t *v134;
  uint64_t v135;
  double v136;
  double v137;
  double v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  int v157;
  uint64_t v158;
  int EnumCaseMultiPayload;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  Swift::String *v175;
  Swift::String v176;
  uint64_t v177;
  uint64_t v178;
  double v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  id v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  unint64_t *v202;
  uint64_t v203;
  double v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  unint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t *v217;
  uint64_t v218;
  double v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  unint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  unint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  unint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  char *v248;
  void (*v249)(char *, uint64_t, uint64_t);
  uint64_t v250;
  uint64_t v251;
  unint64_t v252;
  uint64_t v253;
  uint64_t v254;
  char *v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  void *v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  unint64_t *v265;
  unint64_t v266;
  uint64_t v267;
  uint64_t v268;
  unint64_t v269;
  uint64_t v270;
  uint64_t v271;
  unint64_t v272;
  uint64_t v273;
  __n128 v274;
  uint64_t v275;
  uint64_t v276;
  char *v277;
  uint64_t v278;
  char v279;
  double v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  char *v292;
  uint64_t v293;
  char v294;
  uint64_t v295;
  uint64_t v296;
  char *v297;
  uint64_t v298;
  _OWORD *v299;
  char *v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  _OWORD *v314;
  __int128 v315;
  __int128 v316;
  __int128 v317;
  void *v318;
  char *v319;
  uint64_t v320;
  unint64_t v321;
  unint64_t v322;
  char *v323;
  uint64_t v324;
  unint64_t v325;
  uint64_t v326;
  id v327;
  char *v328;
  uint64_t v329;
  void *v330;
  void *v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  char v336;
  char v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  __n128 v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  double v346;
  uint64_t v347;
  uint64_t v348;
  char *v349;
  uint64_t v350;
  double v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  char *v360;
  char *v361;
  uint64_t v362;
  unint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  void *v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  char v374;
  uint64_t v375;
  __int128 v376;
  uint64_t v377;
  uint64_t v378;
  char *v379;
  __int128 v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  char *v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  void *v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  char *v392;
  uint64_t v393;
  uint64_t v394;
  void (*v395)(char *, uint64_t);
  unint64_t *v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  unint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  int *v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  __int128 v410;
  __int128 v411;
  __int128 v412;
  __int128 v413;
  __int128 v414;
  __int128 v415;
  __int128 v416;
  __int128 v417;
  __int128 v418;
  uint64_t v419;
  uint64_t v420;
  char *v421;
  uint64_t v422;
  char *v423;
  char *v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v428;
  int v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t *v434;
  uint64_t v435;
  uint64_t v436;
  char *v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  char *v441;
  char *v442;
  uint64_t v443;
  char *v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  char *v449;
  char *v450;
  uint64_t v451;
  char *v452;
  uint64_t v453;
  uint64_t v454;
  char *v455;
  uint64_t v456;
  char *v457;
  uint64_t v458;
  char *v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t v464;
  uint64_t v465;
  char *v466;
  char *v467;
  uint64_t v468;
  uint64_t v469;
  uint64_t v470;
  double v471;
  double v472;
  char *v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  char *v477;
  char *v478;
  char *v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t v482;
  char *v483;
  uint64_t v484;
  uint64_t v485;
  unint64_t *v486;
  void (*v487)(char *, char *, uint64_t);
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  void (*v496)(char *, uint64_t);
  uint64_t v497;
  char *v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  uint64_t v503;
  uint64_t v504;
  uint64_t v505;
  uint64_t v506;
  char *v507;
  int v508;
  uint64_t v509;
  uint64_t v510;
  char *v511;
  uint64_t v512;
  unint64_t v513;
  uint64_t v514;
  uint64_t v515;
  uint64_t *v516;
  uint64_t v517;
  uint64_t v518;
  uint64_t v519;
  uint64_t v520;
  uint64_t v521;
  char *v522;
  uint64_t v523;
  uint64_t v524;
  uint64_t v525;
  uint64_t v526;
  char *v527;
  uint64_t v528;
  uint64_t v529;
  char *v530;
  uint64_t v531;
  uint64_t v532;
  char *v533;
  uint64_t v534;
  uint64_t v535;
  uint64_t v536;
  unint64_t object;
  _DWORD v538[2];
  uint64_t v539;
  Swift::String v540;
  Swift::String v541;
  Swift::String v542;
  __int128 v543;
  __int128 v544;
  __int128 v545;
  __int128 v546;
  __int128 v547;
  __int128 v548;
  __int128 v549;
  __int128 v550;
  uint64_t v551;
  Swift::String v552;
  Swift::String v553;
  Swift::String v554;
  __int128 v555;
  __int128 v556;
  __int128 v557;
  __int128 v558;
  __int128 v559;
  __int128 v560;
  __int128 v561;
  __int128 v562;
  uint64_t v563;
  _OWORD v564[21];
  Swift::String v565;
  Swift::String v566;
  Swift::String v567;
  __int128 v568;
  __int128 v569;
  __int128 v570;
  __int128 v571;
  __int128 v572;
  __int128 v573;
  __int128 v574;
  __int128 v575;
  uint64_t v576;
  char v577;
  _BYTE v578[7];
  uint64_t v579;
  uint64_t v580;
  uint64_t v581;
  char *v582;
  char v583;
  _BYTE v584[7];
  char v585;
  _BYTE v586[7];
  double v587;
  uint64_t v588;
  uint64_t v589;
  uint64_t v590;
  char v591;
  _BYTE v592[7];
  char v593;
  _BYTE v594[7];
  unint64_t v595;
  uint64_t v596;
  char *v597;
  char *v598;
  char v599;
  _OWORD v600[9];
  uint64_t v601;
  unsigned __int8 v602[8];
  unsigned __int8 v603[8];
  unsigned __int8 v604[12];
  _DWORD v605[2];
  int v606;
  __int16 v607;
  _DWORD v608[3];
  unsigned __int8 v609;
  unsigned __int8 v610;
  unsigned __int8 v611;
  _BYTE v612[7];
  _BYTE v613[7];
  _BYTE v614[7];
  int v615;
  __int16 v616;
  _OWORD v617[7];
  uint64_t v618;
  uint64_t v619;
  char v620;
  uint64_t v621;
  __int16 v622;

  v531 = a1;
  v510 = a2;
  v504 = sub_100005574(&qword_10049F260);
  __chkstk_darwin();
  v482 = (uint64_t)&v431 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v463 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v461 = *(_QWORD *)(v463 - 8);
  __chkstk_darwin();
  v459 = (char *)&v431 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  v455 = (char *)&v431 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574((uint64_t *)&unk_10049F7D0);
  __chkstk_darwin();
  v507 = (char *)&v431 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v462 = sub_100005574(&qword_10049C500);
  v460 = *(_QWORD *)(v462 - 8);
  __chkstk_darwin();
  v458 = (uint64_t)&v431 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v453 = sub_100005574((uint64_t *)&unk_10049F7E0);
  __chkstk_darwin();
  v457 = (char *)&v431 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v454 = sub_100005574(&qword_10049F268);
  __chkstk_darwin();
  v464 = (uint64_t)&v431 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v456 = sub_100005574(&qword_10049F7F0);
  __chkstk_darwin();
  v493 = (uint64_t)&v431 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v495 = (uint64_t)&v431 - v10;
  v512 = type metadata accessor for Playlist.Collaborator(0);
  v494 = *(_QWORD *)(v512 - 8);
  __chkstk_darwin();
  v465 = v11;
  v466 = (char *)&v431 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v511 = (char *)&v431 - v12;
  v13 = type metadata accessor for URL(0);
  v474 = *(_QWORD *)(v13 - 8);
  v475 = v13;
  __chkstk_darwin();
  v451 = v14;
  v452 = (char *)&v431 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v473 = (char *)&v431 - v15;
  v501 = sub_100005574(&qword_10049F270);
  __chkstk_darwin();
  v503 = (uint64_t)&v431 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v484 = sub_100005574(&qword_10049F278);
  __chkstk_darwin();
  v486 = (unint64_t *)((char *)&v431 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v485 = sub_100005574(&qword_10049F280);
  __chkstk_darwin();
  v468 = (uint64_t)&v431 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v502 = sub_100005574(&qword_10049F288);
  __chkstk_darwin();
  v487 = (void (*)(char *, char *, uint64_t))((char *)&v431 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = type metadata accessor for Collaboration.Flow.View(0);
  v497 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin();
  v498 = v21;
  v500 = (uint64_t)&v431 - ((unint64_t)(v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v499 = sub_100005574(&qword_10049F290);
  v481 = *(_QWORD *)(v499 - 8);
  __chkstk_darwin();
  v467 = (char *)&v431 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v483 = (char *)&v431 - v23;
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v478 = (char *)&v431 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v492 = type metadata accessor for String.LocalizationValue(0);
  v476 = *(_QWORD *)(v492 - 8);
  __chkstk_darwin();
  v477 = (char *)&v431 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v479 = (char *)&v431 - v26;
  v448 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin();
  v450 = (char *)&v431 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v445 = type metadata accessor for Material(0);
  v443 = *(_QWORD *)(v445 - 8);
  __chkstk_darwin();
  v442 = (char *)&v431 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_100005574(&qword_10049F298);
  v438 = *(_QWORD *)(v29 - 8);
  v439 = v29;
  __chkstk_darwin();
  v437 = (char *)&v431 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v435 = sub_100005574(&qword_10049F2A0);
  __chkstk_darwin();
  v441 = (char *)&v431 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v436 = sub_100005574(&qword_10049F2A8);
  __chkstk_darwin();
  v444 = (char *)&v431 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v440 = sub_100005574(&qword_10049F2B0);
  __chkstk_darwin();
  v449 = (char *)&v431 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v446 = sub_100005574(&qword_10049F2B8);
  __chkstk_darwin();
  v480 = (uint64_t)&v431 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v447 = (uint64_t)&v431 - v35;
  __chkstk_darwin();
  v496 = (void (*)(char *, uint64_t))((char *)&v431 - v36);
  sub_100005574(&qword_10049F2C0);
  __chkstk_darwin();
  v535 = (uint64_t)&v431 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v39 = (char *)&v431 - v38;
  v432 = _s4FlowO18ProfileEditingViewVMa(0);
  __chkstk_darwin();
  v434 = (uint64_t *)((char *)&v431 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0));
  v506 = sub_100005574(&qword_10049F2C8);
  v505 = *(_QWORD *)(v506 - 8);
  __chkstk_darwin();
  v433 = (uint64_t)&v431 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_10049F2D0);
  __chkstk_darwin();
  v529 = (uint64_t)&v431 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v536 = (uint64_t)&v431 - v43;
  v524 = sub_100005574(&qword_10049F2D8);
  v523 = *(_QWORD *)(v524 - 8);
  __chkstk_darwin();
  v522 = (char *)&v431 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v521 = sub_100005574(&qword_10049F2E0);
  __chkstk_darwin();
  v533 = (char *)&v431 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v532 = sub_100005574(&qword_10049F2E8);
  __chkstk_darwin();
  v528 = (uint64_t)&v431 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v525 = (uint64_t)&v431 - v47;
  __chkstk_darwin();
  v534 = (uint64_t)&v431 - v48;
  v49 = sub_100005574(&qword_10049F2F0);
  v517 = *(_QWORD *)(v49 - 8);
  __chkstk_darwin();
  v51 = (char *)&v431 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v519 = sub_100005574(&qword_10049F2F8);
  v518 = *(_QWORD *)(v519 - 8);
  __chkstk_darwin();
  v53 = (char *)&v431 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = type metadata accessor for Collaboration.Flow(0);
  __chkstk_darwin();
  v514 = (uint64_t)&v431 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v520 = (uint64_t)&v431 - v56;
  __chkstk_darwin();
  v58 = (char *)&v431 - v57;
  sub_100005574(&qword_10049F300);
  __chkstk_darwin();
  v526 = (uint64_t)&v431 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v61 = (char *)&v431 - v60;
  v515 = v20;
  object = v531 + *(int *)(v20 + 28);
  sub_100082248(object, (uint64_t)v58, type metadata accessor for Collaboration.Flow);
  v516 = (uint64_t *)v54;
  LODWORD(v20) = swift_getEnumCaseMultiPayload(v58, v54);
  sub_100006798((uint64_t)v58, type metadata accessor for Collaboration.Flow);
  v527 = v39;
  v530 = v61;
  if ((_DWORD)v20 == 1)
  {
    v62 = 1;
  }
  else
  {
    if (qword_100498C40 != -1)
      swift_once(&qword_100498C40, sub_10030E0D8);
    v63 = qword_10049EEB8;
    KeyPath = swift_getKeyPath(&unk_10039DCB8);
    v565._countAndFlagsBits = KeyPath;
    v565._object = (void *)v63;
    swift_retain(v63);
    v65 = sub_100005574(&qword_10049F308);
    v66 = sub_100313888();
    View.bold(_:)(1, v65, v66);
    swift_release(v63);
    swift_release(KeyPath);
    v565._countAndFlagsBits = v65;
    v565._object = (void *)v66;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v565, &opaque type descriptor for <<opaque return type of View.bold(_:)>>, 1);
    View.accessibilityHidden(_:)(1, v49, OpaqueTypeConformance2);
    (*(void (**)(char *, uint64_t))(v517 + 8))(v51, v49);
    v61 = v530;
    sub_1000149A8((uint64_t)v53, (uint64_t)v530, &qword_10049F2F8);
    v62 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v518 + 56))(v61, v62, 1, v519);
  v565._countAndFlagsBits = Collaboration.Flow.title.getter();
  v565._object = v68;
  v513 = sub_10024AF7C();
  v69 = Text.init<A>(_:)(&v565, &type metadata for String, v513);
  v71 = v70;
  v73 = v72;
  v75 = v74;
  if (qword_100498C38 != -1)
    swift_once(&qword_100498C38, sub_10030DFDC);
  v76 = qword_10049EEB0;
  v77 = swift_getKeyPath(&unk_10039DCB8);
  v565._countAndFlagsBits = v69;
  v565._object = (void *)v71;
  LOBYTE(v566._countAndFlagsBits) = v73 & 1;
  v566._object = v75;
  LOWORD(v567._countAndFlagsBits) = 256;
  v567._object = (void *)v77;
  *(_QWORD *)&v568 = v76;
  swift_retain(v76);
  v78 = sub_100005574(&qword_10049F320);
  v79 = sub_100313950();
  v80 = v522;
  View.bold(_:)(1, v78, v79);
  sub_10003B4D0(v69, v71, v73 & 1);
  swift_release(v76);
  swift_release(v77);
  swift_bridgeObjectRelease();
  v81 = swift_getKeyPath(&unk_10039DCE8);
  v82 = v523;
  v83 = (uint64_t)v533;
  v84 = v524;
  (*(void (**)(char *, char *, uint64_t))(v523 + 16))(v533, v80, v524);
  v85 = v83 + *(int *)(v521 + 36);
  *(_QWORD *)v85 = v81;
  *(_BYTE *)(v85 + 8) = 1;
  v86 = (*(uint64_t (**)(char *, uint64_t))(v82 + 8))(v80, v84);
  v87 = static Edge.Set.top.getter(v86);
  v88 = v520;
  sub_100082248(object, v520, type metadata accessor for Collaboration.Flow);
  if (swift_getEnumCaseMultiPayload(v88, v516) == 1)
    v89 = 24.0;
  else
    v89 = 10.0;
  sub_100006798(v88, type metadata accessor for Collaboration.Flow);
  v90 = EdgeInsets.init(_all:)(v89);
  v92 = v91;
  v94 = v93;
  v96 = v95;
  v97 = v525;
  sub_100014A7C(v83, v525, &qword_10049F2E0);
  v98 = v97 + *(int *)(v532 + 36);
  *(_BYTE *)v98 = v87;
  *(double *)(v98 + 8) = v90;
  *(_QWORD *)(v98 + 16) = v92;
  *(_QWORD *)(v98 + 24) = v94;
  *(_QWORD *)(v98 + 32) = v96;
  *(_BYTE *)(v98 + 40) = 0;
  sub_100008758(v83, &qword_10049F2E0);
  sub_1000149A8(v97, v534, &qword_10049F2E8);
  v99 = v515;
  v100 = *(int *)(v515 + 40);
  v101 = v531;
  v565 = Collaboration.Flow.subtitle(hasProfileEdit:)(*(_BYTE *)(v531 + v100));
  v509 = Text.init<A>(_:)(&v565, &type metadata for String, v513);
  v521 = v102;
  v104 = v103;
  v524 = v105;
  v106 = qword_10049EEB0;
  v523 = swift_getKeyPath(&unk_10039DCB8);
  v522 = (char *)swift_getKeyPath(&unk_10039DCE8);
  v525 = v106;
  v107 = swift_retain(v106);
  v533 = (char *)static Color.secondary.getter(v107);
  v532 = swift_getKeyPath(&unk_10039DC28);
  LODWORD(v520) = static Edge.Set.top.getter(v532);
  v108 = EdgeInsets.init(_all:)(10.0);
  v110 = v109;
  v112 = v111;
  v114 = v113;
  v508 = v104;
  v610 = v104 & 1;
  v609 = 0;
  LODWORD(v519) = static Edge.Set.bottom.getter(v115);
  if (qword_100498C30 != -1)
    swift_once(&qword_100498C30, sub_10030DF84);
  v116 = EdgeInsets.init(_all:)(*(double *)&qword_10049EEA8);
  v118 = v117;
  v120 = v119;
  v122 = v121;
  LODWORD(v517) = v610;
  LODWORD(v518) = v609;
  v611 = 0;
  v123 = *(unsigned __int8 *)(v101 + v100);
  v124 = v507;
  v125 = v506;
  v490 = v112;
  v491 = v110;
  v488 = v121;
  v489 = v114;
  if (v123 == 1 && *(_QWORD *)(v101 + *(int *)(v99 + 44)))
  {
    v126 = v101 + *(int *)(v99 + 52);
    v127 = *(_QWORD *)v126;
    v128 = *(_QWORD *)(v126 + 8);
    v129 = *(unsigned __int8 *)(v126 + 16);
    v130 = type metadata accessor for InlineProfileEditingView.Context(0);
    v131 = sub_100006924(&qword_10049F480, type metadata accessor for InlineProfileEditingView.Context, (uint64_t)&protocol conformance descriptor for InlineProfileEditingView.Context);
    v132 = v130;
    v99 = v515;
    v133 = StateObject.wrappedValue.getter(v127, v128, v129, v132, v131);
    v134 = v434;
    v135 = sub_100082248(object, (uint64_t)v434 + *(int *)(v432 + 20), type metadata accessor for Collaboration.Flow);
    *v134 = v133;
    LOBYTE(v133) = static Edge.Set.bottom.getter(v135);
    v136 = v108;
    v137 = v116;
    v138 = EdgeInsets.init(_all:)(12.0);
    v139 = v118;
    v141 = v140;
    v142 = v120;
    v144 = v143;
    v146 = v145;
    v147 = v433;
    sub_100082248((uint64_t)v134, v433, _s4FlowO18ProfileEditingViewVMa);
    v148 = v147 + *(int *)(v125 + 36);
    *(_BYTE *)v148 = v133;
    *(double *)(v148 + 8) = v138;
    *(_QWORD *)(v148 + 16) = v141;
    v116 = v137;
    v108 = v136;
    v118 = v139;
    v110 = v491;
    *(_QWORD *)(v148 + 24) = v144;
    *(_QWORD *)(v148 + 32) = v146;
    v120 = v142;
    v114 = v489;
    v112 = v490;
    v122 = v488;
    *(_BYTE *)(v148 + 40) = 0;
    sub_100006798((uint64_t)v134, _s4FlowO18ProfileEditingViewVMa);
    sub_1000149A8(v147, v536, &qword_10049F2C8);
    v149 = 0;
  }
  else
  {
    v149 = 1;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v505 + 56))(v536, v149, 1, v125);
  v150 = v101 + *(int *)(v99 + 52);
  v151 = *(_QWORD *)v150;
  v152 = *(_QWORD *)(v150 + 8);
  v153 = *(unsigned __int8 *)(v150 + 16);
  v154 = type metadata accessor for InlineProfileEditingView.Context(0);
  v155 = sub_100006924(&qword_10049F480, type metadata accessor for InlineProfileEditingView.Context, (uint64_t)&protocol conformance descriptor for InlineProfileEditingView.Context);
  v156 = StateObject.wrappedValue.getter(v151, v152, v153, v154, v155);
  LODWORD(v152) = InlineProfileEditingView.Context.canValidate.getter();
  swift_release(v156);
  v157 = v152 ^ 1;
  v158 = v514;
  sub_100082248(object, v514, type metadata accessor for Collaboration.Flow);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v158, v516);
  if (EnumCaseMultiPayload)
  {
    v471 = v116;
    v472 = v108;
    v469 = v120;
    v470 = v118;
    if (EnumCaseMultiPayload == 1)
    {
      v516 = *(uint64_t **)(v494 + 32);
      ((void (*)(char *, uint64_t, uint64_t))v516)(v511, v158, v512);
      sub_1002F49D8(v124);
      v160 = sub_100005574(&qword_10049F810);
      v161 = (uint64_t)v124;
      v162 = (uint64_t)v455;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v160 - 8) + 56))(v455, 7, 10, v160);
      v163 = v476;
      if (qword_100498C28 != -1)
        swift_once(&qword_100498C28, sub_10030DF1C);
      v540._countAndFlagsBits = qword_10049EEA0;
      LOBYTE(v540._object) = 0;
      v541._countAndFlagsBits = qword_10049EEA0;
      LOBYTE(v541._object) = 0;
      v542._countAndFlagsBits = 0;
      LOWORD(v542._object) = 257;
      v164 = v461;
      v165 = (uint64_t)v459;
      v166 = v463;
      (*(void (**)(char *, _QWORD, uint64_t))(v461 + 104))(v459, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v463);
      v167 = v458;
      static ArtworkImage.with(_:placeholder:size:reusePolicy:)(v161, v162, (uint64_t)&v540, v165, v458);
      (*(void (**)(uint64_t, uint64_t))(v164 + 8))(v165, v166);
      sub_100006798(v162, type metadata accessor for ArtworkImage.Placeholder);
      v168 = sub_100008758(v161, (uint64_t *)&unk_10049F7D0);
      v169 = qword_10049EEA0;
      v170 = static Alignment.center.getter(v168);
      _FrameLayout.init(width:height:alignment:)(&v552, v169, 0, v169, 0, v170, v171);
      v172 = v460;
      v173 = (uint64_t)v457;
      v174 = v462;
      (*(void (**)(char *, uint64_t, uint64_t))(v460 + 16))(v457, v167, v462);
      v175 = (Swift::String *)(v173 + *(int *)(v453 + 36));
      v176 = v553;
      *v175 = v552;
      v175[1] = v176;
      v175[2] = v554;
      (*(void (**)(uint64_t, uint64_t))(v172 + 8))(v167, v174);
      v177 = v464;
      sub_100014A7C(v173, v464, (uint64_t *)&unk_10049F7E0);
      *(_WORD *)(v177 + *(int *)(v454 + 36)) = 256;
      v178 = sub_100008758(v173, (uint64_t *)&unk_10049F7E0);
      LOBYTE(v174) = static Edge.Set.top.getter(v178);
      v179 = EdgeInsets.init(_all:)(8.0);
      v181 = v180;
      v183 = v182;
      v185 = v184;
      v186 = v493;
      sub_100014A7C(v177, v493, &qword_10049F268);
      v187 = v186 + *(int *)(v456 + 36);
      *(_BYTE *)v187 = v174;
      *(double *)(v187 + 8) = v179;
      *(_QWORD *)(v187 + 16) = v181;
      *(_QWORD *)(v187 + 24) = v183;
      *(_QWORD *)(v187 + 32) = v185;
      *(_BYTE *)(v187 + 40) = 0;
      sub_100008758(v177, &qword_10049F268);
      sub_1000149A8(v186, v495, &qword_10049F7F0);
      v188 = v479;
      String.LocalizationValue.init(stringLiteral:)(0x65766F72707041, 0xE700000000000000);
      v189 = v477;
      v190 = v492;
      v513 = *(_QWORD *)(v163 + 16);
      ((void (*)(char *, char *, uint64_t))v513)(v477, v188, v492);
      if (qword_100498860 != -1)
        swift_once(&qword_100498860, sub_100232E30);
      v191 = qword_1004A2F90;
      v192 = (id)qword_1004A2F90;
      v193 = v478;
      static Locale.current.getter(v192);
      v507 = (char *)String.init(localized:table:bundle:locale:comment:)(v189, 0, 0, v191, v193, 0, 0, 256);
      v515 = v194;
      v496 = *(void (**)(char *, uint64_t))(v163 + 8);
      v496(v188, v190);
      v195 = v500;
      sub_100082248(v101, v500, type metadata accessor for Collaboration.Flow.View);
      v487 = *(void (**)(char *, char *, uint64_t))(v494 + 16);
      v196 = v494;
      v197 = v466;
      v198 = v512;
      v487(v466, v511, v512);
      v199 = *(unsigned __int8 *)(v497 + 80);
      v200 = (v199 + 16) & ~v199;
      v201 = *(unsigned __int8 *)(v196 + 80);
      v202 = (unint64_t *)((unint64_t)&v498[v201 + v200] & ~v201);
      v486 = v202;
      v498 = (char *)v202 + v465;
      v497 = v199 | v201 | 7;
      v203 = swift_allocObject(&unk_1004633B0, (char *)v202 + v465, v497);
      v506 = v203;
      sub_1000648AC(v195, v203 + v200, type metadata accessor for Collaboration.Flow.View);
      ((void (*)(char *, char *, uint64_t))v516)((char *)v202 + v203, v197, v198);
      LOBYTE(v564[0]) = 0;
      State.init(wrappedValue:)(&v565, v564, &type metadata for Bool);
      LODWORD(v505) = LOBYTE(v565._countAndFlagsBits);
      object = (unint64_t)v565._object;
      v514 = swift_getKeyPath(&unk_10039DD18);
      LODWORD(v499) = static Edge.Set.top.getter(v514);
      v204 = EdgeInsets.init(_all:)(32.0);
      v206 = v205;
      v208 = v207;
      v210 = v209;
      String.LocalizationValue.init(stringLiteral:)(0x656E696C636544, 0xE700000000000000);
      v211 = v492;
      ((void (*)(char *, char *, uint64_t))v513)(v189, v188, v492);
      v212 = qword_1004A2F90;
      static Locale.current.getter((id)qword_1004A2F90);
      v213 = String.init(localized:table:bundle:locale:comment:)(v189, 0, 0, v212, v193, 0, 0, 256);
      v513 = v214;
      v496(v188, v211);
      sub_100082248(v531, v195, type metadata accessor for Collaboration.Flow.View);
      v215 = v512;
      v487(v197, v511, v512);
      v216 = swift_allocObject(&unk_1004633D8, v498, v497);
      sub_1000648AC(v195, v216 + v200, type metadata accessor for Collaboration.Flow.View);
      ((void (*)(char *, char *, uint64_t))v516)((char *)v486 + v216, v197, v215);
      LOBYTE(v564[0]) = 0;
      State.init(wrappedValue:)(&v565, v564, &type metadata for Bool);
      LODWORD(v500) = LOBYTE(v565._countAndFlagsBits);
      v217 = (uint64_t *)v565._object;
      v218 = swift_getKeyPath(&unk_10039DD18);
      v531 = v218;
      LOBYTE(v193) = static Edge.Set.top.getter(v218);
      v219 = EdgeInsets.init(_all:)(8.0);
      v221 = v220;
      v223 = v222;
      v225 = v224;
      v226 = v493;
      sub_100014A7C(v495, v493, &qword_10049F7F0);
      LOBYTE(v565._countAndFlagsBits) = 0;
      v227 = v226;
      v228 = v482;
      sub_100014A7C(v227, v482, &qword_10049F7F0);
      v229 = sub_100005574(&qword_10049F340);
      v230 = v228;
      v231 = v228 + *(int *)(v229 + 48);
      v232 = v515;
      *(_QWORD *)v231 = v507;
      *(_QWORD *)(v231 + 8) = v232;
      *(_BYTE *)(v231 + 16) = 0;
      v233 = v506;
      *(_QWORD *)(v231 + 24) = sub_100313A4C;
      *(_QWORD *)(v231 + 32) = v233;
      *(_BYTE *)(v231 + 40) = v505;
      v234 = object;
      v235 = v514;
      *(_QWORD *)(v231 + 48) = object;
      *(_QWORD *)(v231 + 56) = v235;
      *(_BYTE *)(v231 + 64) = 0;
      *(_BYTE *)(v231 + 72) = v499;
      *(double *)(v231 + 80) = v204;
      *(_QWORD *)(v231 + 88) = v206;
      *(_QWORD *)(v231 + 96) = v208;
      *(_QWORD *)(v231 + 104) = v210;
      *(_BYTE *)(v231 + 112) = 0;
      v236 = v230 + *(int *)(v229 + 64);
      *(_QWORD *)v236 = v213;
      *(_QWORD *)(v236 + 8) = v513;
      *(_BYTE *)(v236 + 16) = 1;
      *(_QWORD *)(v236 + 24) = sub_100313D64;
      *(_QWORD *)(v236 + 32) = v216;
      *(_BYTE *)(v236 + 40) = v500;
      *(_QWORD *)(v236 + 48) = v217;
      *(_QWORD *)(v236 + 56) = v218;
      *(_BYTE *)(v236 + 64) = 0;
      *(_BYTE *)(v236 + 72) = (_BYTE)v193;
      *(double *)(v236 + 80) = v219;
      *(_QWORD *)(v236 + 88) = v221;
      *(_QWORD *)(v236 + 96) = v223;
      *(_QWORD *)(v236 + 104) = v225;
      *(_BYTE *)(v236 + 112) = 0;
      swift_retain(v234);
      swift_bridgeObjectRetain();
      swift_retain(v233);
      sub_100301C50(v235, 0);
      swift_retain(v217);
      swift_bridgeObjectRetain();
      v237 = v216;
      swift_retain(v216);
      v238 = v531;
      sub_100301C50(v531, 0);
      swift_bridgeObjectRetain();
      v239 = v233;
      swift_retain(v233);
      v240 = object;
      swift_retain(object);
      sub_100301C50(v235, 0);
      swift_bridgeObjectRetain();
      v498 = (char *)v237;
      swift_retain(v237);
      v516 = v217;
      swift_retain(v217);
      sub_100301C50(v238, 0);
      swift_release(v217);
      swift_release(v237);
      swift_bridgeObjectRelease();
      sub_1002D0564(v238, 0);
      LOBYTE(v233) = v565._countAndFlagsBits;
      swift_release(v240);
      swift_release(v239);
      swift_bridgeObjectRelease();
      v241 = v514;
      sub_1002D0564(v514, v233);
      sub_100008758(v493, &qword_10049F7F0);
      v242 = v482;
      v243 = v503;
      sub_100014A7C(v482, v503, &qword_10049F260);
      swift_storeEnumTagMultiPayload(v243, v501, 1);
      v244 = sub_100313E14();
      v245 = sub_10002FFB8(&qword_10049F370, &qword_10049F260, (uint64_t)&protocol conformance descriptor for TupleView<A>);
      v246 = (uint64_t)v527;
      _ConditionalContent<>.init(storage:)(v243, v502, v504, v244, v245);
      sub_100008758(v242, &qword_10049F260);
      swift_release(v516);
      swift_release(v498);
      swift_bridgeObjectRelease();
      sub_1002D0564(v531, 0);
      swift_release(object);
      swift_release(v239);
      swift_bridgeObjectRelease();
      sub_1002D0564(v241, 0);
      sub_100008758(v495, &qword_10049F7F0);
      (*(void (**)(char *, uint64_t))(v494 + 8))(v511, v512);
    }
    else
    {
      LODWORD(v495) = v157;
      v275 = v101 + *(int *)(v515 + 20);
      v276 = *(_QWORD *)(v275 + 8);
      LOBYTE(v564[0]) = *(_BYTE *)v275;
      *((_QWORD *)&v564[0] + 1) = v276;
      v516 = (uint64_t *)sub_100005574(&qword_10049C5C8);
      State.projectedValue.getter(&v565, v516);
      v277 = v437;
      v278 = Toggle.init(isOn:label:)(v565._countAndFlagsBits, v565._object, LOBYTE(v566._countAndFlagsBits), sub_1003099A0, 0, &type metadata for Text, &protocol witness table for Text);
      v279 = static Edge.Set.all.getter(v278);
      v280 = EdgeInsets.init(_all:)(12.0);
      v282 = v281;
      v284 = v283;
      v286 = v285;
      v288 = v438;
      v287 = v439;
      v289 = (uint64_t)v441;
      (*(void (**)(char *, char *, uint64_t))(v438 + 16))(v441, v277, v439);
      v290 = v289 + *(int *)(v435 + 36);
      *(_BYTE *)v290 = v279;
      *(double *)(v290 + 8) = v280;
      *(_QWORD *)(v290 + 16) = v282;
      *(_QWORD *)(v290 + 24) = v284;
      *(_QWORD *)(v290 + 32) = v286;
      *(_BYTE *)(v290 + 40) = 0;
      v291 = (*(uint64_t (**)(char *, uint64_t))(v288 + 8))(v277, v287);
      v292 = v442;
      v293 = static Material.thick.getter(v291);
      v294 = static Edge.Set.all.getter(v293);
      v296 = v443;
      v295 = (uint64_t)v444;
      v297 = &v444[*(int *)(v436 + 36)];
      v298 = v445;
      (*(void (**)(char *, char *, uint64_t))(v443 + 16))(v297, v292, v445);
      v297[*(int *)(sub_100005574(&qword_10049D570) + 36)] = v294;
      sub_100014A7C(v289, v295, &qword_10049F2A0);
      (*(void (**)(char *, uint64_t))(v296 + 8))(v292, v298);
      sub_100008758(v289, &qword_10049F2A0);
      v299 = v450;
      v300 = &v450[*(int *)(v448 + 20)];
      v301 = enum case for RoundedCornerStyle.continuous(_:);
      v302 = type metadata accessor for RoundedCornerStyle(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v302 - 8) + 104))(v300, v301, v302);
      __asm { FMOV            V0.2D, #16.0 }
      *v299 = _Q0;
      v308 = (uint64_t)v449;
      v309 = (uint64_t)&v449[*(int *)(v440 + 36)];
      sub_100082248((uint64_t)v299, v309, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
      *(_WORD *)(v309 + *(int *)(sub_100005574((uint64_t *)&unk_10049F4D0) + 36)) = 256;
      sub_100014A7C(v295, v308, &qword_10049F2A8);
      sub_100006798((uint64_t)v299, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
      v310 = sub_100008758(v295, &qword_10049F2A8);
      v311 = static Alignment.center.getter(v310);
      LOBYTE(v429) = 1;
      _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v617, 0, 1, 0, 1, 0, 1, 0x404B000000000000, 0, 0, 1, 0, v429, v311, v312);
      v313 = v447;
      sub_100014A7C(v308, v447, &qword_10049F2B0);
      v314 = (_OWORD *)(v313 + *(int *)(v446 + 36));
      v315 = v617[5];
      v314[4] = v617[4];
      v314[5] = v315;
      v314[6] = v617[6];
      v316 = v617[1];
      *v314 = v617[0];
      v314[1] = v316;
      v317 = v617[3];
      v314[2] = v617[2];
      v314[3] = v317;
      sub_100008758(v308, &qword_10049F2B0);
      sub_1000149A8(v313, (uint64_t)v496, &qword_10049F2B8);
      v318 = *(void **)(v275 + 8);
      LOBYTE(v565._countAndFlagsBits) = *(_BYTE *)v275;
      v565._object = v318;
      State.wrappedValue.getter(v564, v516);
      v320 = v476;
      v319 = v477;
      if (LOBYTE(v564[0]) == 1)
      {
        v321 = 0xD000000000000047;
        v322 = 0x80000001003BA5E0;
        v323 = v479;
      }
      else
      {
        v322 = 0x80000001003BA680;
        v323 = v479;
        v321 = 0xD00000000000003BLL;
      }
      String.LocalizationValue.init(stringLiteral:)(v321, v322);
      v324 = v492;
      (*(void (**)(char *, char *, uint64_t))(v320 + 16))(v319, v323, v492);
      v325 = v513;
      if (qword_100498860 != -1)
        swift_once(&qword_100498860, sub_100232E30);
      v326 = qword_1004A2F90;
      v327 = (id)qword_1004A2F90;
      v328 = v478;
      static Locale.current.getter(v327);
      v329 = String.init(localized:table:bundle:locale:comment:)(v319, 0, 0, v326, v328, 0, 0, 256);
      v331 = v330;
      v332 = v531;
      (*(void (**)(char *, uint64_t))(v320 + 8))(v323, v324);
      v565._countAndFlagsBits = v329;
      v565._object = v331;
      v333 = Text.init<A>(_:)(&v565, &type metadata for String, v325);
      v335 = v334;
      v337 = v336 & 1;
      v618 = v333;
      v619 = v334;
      v620 = v336 & 1;
      v621 = v338;
      v622 = 256;
      v339 = static Alignment.leading.getter(v333);
      sub_100315984(0, 1, 0.0, 1, INFINITY, 0, 0, 1, (uint64_t)v600, v341, 0.0, 1, 0.0, 1, v339, v340);
      sub_10003B4D0(v333, v335, v337);
      swift_bridgeObjectRelease();
      v342 = swift_getKeyPath(&unk_10039DCE8);
      v343 = static HierarchicalShapeStyle.secondary.getter(v342);
      LODWORD(v333) = v343;
      v344 = static Font.footnote.getter(v343);
      v345 = swift_getKeyPath(&unk_10039DCB8);
      v547 = v600[7];
      v548 = v600[8];
      v542 = (Swift::String)v600[2];
      v543 = v600[3];
      v544 = v600[4];
      v545 = v600[5];
      v546 = v600[6];
      v540 = (Swift::String)v600[0];
      v541 = (Swift::String)v600[1];
      *(_QWORD *)&v549 = v601;
      *((_QWORD *)&v549 + 1) = v342;
      LOBYTE(v550) = 0;
      *(_WORD *)((char *)&v550 + 1) = v605[0];
      BYTE3(v550) = BYTE2(v605[0]);
      DWORD1(v550) = v333;
      *((_QWORD *)&v550 + 1) = v345;
      v551 = v344;
      LODWORD(v494) = static Edge.Set.horizontal.getter(v345);
      v346 = EdgeInsets.init(_all:)(10.0);
      v492 = v347;
      v493 = *(_QWORD *)&v346;
      v482 = v348;
      v479 = v349;
      v560 = v548;
      v561 = v549;
      v562 = v550;
      v563 = v551;
      v556 = v544;
      v557 = v545;
      v558 = v546;
      v559 = v547;
      v552 = v540;
      v553 = v541;
      v554 = v542;
      v555 = v543;
      v602[0] = 0;
      LODWORD(v478) = static Edge.Set.top.getter(v350);
      if (qword_100498C48 != -1)
        swift_once(&qword_100498C48, sub_10030E1D0);
      v351 = EdgeInsets.init(_all:)(*(double *)&qword_10049EEC0);
      v353 = v352;
      v355 = v354;
      v357 = v356;
      LODWORD(v506) = v602[0];
      v603[0] = 0;
      LODWORD(v514) = static Edge.Set.bottom.getter(v358);
      v513 = EdgeInsets.init(_all:)(24.0);
      v512 = v359;
      v511 = v360;
      v507 = v361;
      LODWORD(v505) = v603[0];
      v604[0] = 0;
      v362 = Collaboration.Flow.buttonActionTitle.getter();
      object = v363;
      v364 = v500;
      sub_100082248(v332, v500, type metadata accessor for Collaboration.Flow.View);
      v365 = *(unsigned __int8 *)(v497 + 80);
      v366 = (v365 + 16) & ~v365;
      v367 = v332;
      v368 = swift_allocObject(&unk_100463450, &v498[v366], v365 | 7);
      sub_1000648AC(v364, v368 + v366, type metadata accessor for Collaboration.Flow.View);
      LOBYTE(v564[0]) = 0;
      State.init(wrappedValue:)(&v565, v564, &type metadata for Bool);
      LOBYTE(v366) = v565._countAndFlagsBits;
      v369 = v565._object;
      v370 = swift_getKeyPath(&unk_10039DD18);
      v371 = swift_getKeyPath(&unk_10039DD48);
      v372 = swift_allocObject(&unk_100463478, 17, 7);
      *(_BYTE *)(v372 + 16) = v495 & 1;
      v565._countAndFlagsBits = v362;
      v565._object = (void *)object;
      LOBYTE(v566._countAndFlagsBits) = 0;
      v566._object = sub_10031434C;
      v567._countAndFlagsBits = v368;
      LOBYTE(v567._object) = v366;
      *(_QWORD *)&v568 = v369;
      *((_QWORD *)&v568 + 1) = v370;
      LOBYTE(v569) = 0;
      *((_QWORD *)&v569 + 1) = v371;
      *(_QWORD *)&v570 = sub_100305750;
      *((_QWORD *)&v570 + 1) = v372;
      v373 = v367 + *(int *)(v515 + 24);
      v374 = *(_BYTE *)v373;
      v375 = *(_QWORD *)(v373 + 8);
      LOBYTE(v538[0]) = v374;
      v539 = v375;
      State.projectedValue.getter(v564, v516);
      v516 = &v431;
      v376 = v564[0];
      v377 = LOBYTE(v564[1]);
      __chkstk_darwin();
      v430 = v367;
      v378 = sub_100005574(&qword_10049F360);
      v531 = v378;
      object = sub_100313E98();
      v379 = v483;
      View.alert(isPresented:content:)(v376, *((_QWORD *)&v376 + 1), v377, sub_100314398, &v428, v378, object);
      swift_release(*((_QWORD *)&v376 + 1));
      swift_release(v376);
      v380 = v568;
      LOBYTE(v368) = v569;
      v381 = *((_QWORD *)&v569 + 1);
      v382 = *((_QWORD *)&v570 + 1);
      swift_release(v567._countAndFlagsBits);
      swift_bridgeObjectRelease();
      swift_release(v380);
      sub_1002D0564(*((uint64_t *)&v380 + 1), v368);
      swift_release(v382);
      swift_release(v381);
      v383 = v480;
      sub_100014A7C((uint64_t)v496, v480, &qword_10049F2B8);
      LOBYTE(v366) = v604[0];
      LODWORD(v516) = v604[0];
      v515 = *(_QWORD *)(v481 + 16);
      v384 = v467;
      ((void (*)(char *, char *, uint64_t))v515)(v467, v379, v499);
      v385 = v383;
      v386 = v468;
      sub_100014A7C(v385, v468, &qword_10049F2B8);
      v387 = sub_100005574(&qword_10049F380);
      v388 = (void *)(v386 + *(int *)(v387 + 48));
      v564[8] = v560;
      v564[9] = v561;
      v564[10] = v562;
      *(_QWORD *)&v564[11] = v563;
      v564[4] = v556;
      v564[5] = v557;
      v564[6] = v558;
      v564[7] = v559;
      v564[0] = v552;
      v564[1] = v553;
      v564[2] = v554;
      v564[3] = v555;
      LOBYTE(v368) = v494;
      BYTE8(v564[11]) = v494;
      *(_DWORD *)((char *)&v564[11] + 9) = v608[0];
      HIDWORD(v564[11]) = *(_DWORD *)((char *)v608 + 3);
      v390 = v492;
      v389 = v493;
      *(_QWORD *)&v564[12] = v493;
      *((_QWORD *)&v564[12] + 1) = v492;
      v391 = v482;
      v392 = v479;
      *(_QWORD *)&v564[13] = v482;
      *((_QWORD *)&v564[13] + 1) = v479;
      LOBYTE(v564[14]) = v506;
      *(_DWORD *)((char *)&v564[14] + 1) = *(_DWORD *)v613;
      DWORD1(v564[14]) = *(_DWORD *)&v613[3];
      LOBYTE(v382) = (_BYTE)v478;
      BYTE8(v564[14]) = (_BYTE)v478;
      HIDWORD(v564[14]) = *(_DWORD *)&v612[3];
      *(_DWORD *)((char *)&v564[14] + 9) = *(_DWORD *)v612;
      *(double *)&v564[15] = v351;
      *((_QWORD *)&v564[15] + 1) = v353;
      *(_QWORD *)&v564[16] = v355;
      *((_QWORD *)&v564[16] + 1) = v357;
      LOBYTE(v564[17]) = v505;
      *(_DWORD *)((char *)&v564[17] + 1) = v538[0];
      DWORD1(v564[17]) = *(_DWORD *)((char *)v538 + 3);
      BYTE8(v564[17]) = v514;
      *(_DWORD *)((char *)&v564[17] + 9) = *(_DWORD *)v614;
      HIDWORD(v564[17]) = *(_DWORD *)&v614[3];
      *(_QWORD *)&v564[18] = v513;
      *((_QWORD *)&v564[18] + 1) = v512;
      *(_QWORD *)&v564[19] = v511;
      *((_QWORD *)&v564[19] + 1) = v507;
      LOBYTE(v564[20]) = v366;
      memcpy(v388, v564, 0x141uLL);
      v393 = v386 + *(int *)(v387 + 64);
      v394 = v499;
      ((void (*)(uint64_t, char *, uint64_t))v515)(v393, v384, v499);
      sub_1003143A0((uint64_t)v564);
      sub_1003143A0((uint64_t)&v540);
      v395 = *(void (**)(char *, uint64_t))(v481 + 8);
      v395(v384, v394);
      v573 = v560;
      v574 = v561;
      v575 = v562;
      v576 = v563;
      v569 = v556;
      v570 = v557;
      v571 = v558;
      v572 = v559;
      v565 = v552;
      v566 = v553;
      v567 = v554;
      v568 = v555;
      v577 = v368;
      *(_DWORD *)v578 = v608[0];
      *(_DWORD *)&v578[3] = *(_DWORD *)((char *)v608 + 3);
      v579 = v389;
      v580 = v390;
      v581 = v391;
      v582 = v392;
      v583 = v506;
      *(_DWORD *)v584 = *(_DWORD *)v613;
      *(_DWORD *)&v584[3] = *(_DWORD *)&v613[3];
      v585 = v382;
      *(_DWORD *)&v586[3] = *(_DWORD *)&v612[3];
      *(_DWORD *)v586 = *(_DWORD *)v612;
      v587 = v351;
      v588 = v353;
      v589 = v355;
      v590 = v357;
      v591 = v505;
      *(_DWORD *)v592 = v538[0];
      *(_DWORD *)&v592[3] = *(_DWORD *)((char *)v538 + 3);
      v593 = v514;
      *(_DWORD *)v594 = *(_DWORD *)v614;
      *(_DWORD *)&v594[3] = *(_DWORD *)&v614[3];
      v595 = v513;
      v596 = v512;
      v597 = v511;
      v598 = v507;
      v599 = (char)v516;
      sub_10031440C((uint64_t)&v565);
      sub_100008758(v480, &qword_10049F2B8);
      v396 = v486;
      sub_100014A7C(v386, (uint64_t)v486, &qword_10049F280);
      swift_storeEnumTagMultiPayload(v396, v484, 0);
      v397 = sub_10002FFB8(&qword_10049F350, &qword_10049F280, (uint64_t)&protocol conformance descriptor for TupleView<A>);
      v398 = (uint64_t)v487;
      _ConditionalContent<>.init(storage:)(v396, v485, v531, v397, object);
      sub_100008758(v386, &qword_10049F280);
      v399 = v503;
      sub_100014A7C(v398, v503, &qword_10049F288);
      swift_storeEnumTagMultiPayload(v399, v501, 0);
      v400 = sub_100313E14();
      v401 = sub_10002FFB8(&qword_10049F370, &qword_10049F260, (uint64_t)&protocol conformance descriptor for TupleView<A>);
      v246 = (uint64_t)v527;
      _ConditionalContent<>.init(storage:)(v399, v502, v504, v400, v401);
      sub_100008758(v398, &qword_10049F288);
      v395(v483, v499);
      sub_10031440C((uint64_t)&v540);
      sub_100008758((uint64_t)v496, &qword_10049F2B8);
    }
    v116 = v471;
    v108 = v472;
    v112 = v490;
    v110 = v491;
    v122 = v488;
    v114 = v489;
    v120 = v469;
    v118 = v470;
  }
  else
  {
    v247 = sub_100005574(&qword_10049EED8);
    v248 = v473;
    v249 = *(void (**)(char *, uint64_t, uint64_t))(v474 + 32);
    v250 = v474;
    v251 = v475;
    v249(v473, v158 + *(int *)(v247 + 48), v475);
    v513 = Collaboration.Flow.buttonActionTitle.getter();
    object = v252;
    v253 = v500;
    sub_100082248(v101, v500, type metadata accessor for Collaboration.Flow.View);
    v254 = v250;
    v255 = v452;
    (*(void (**)(char *, char *, uint64_t))(v250 + 16))(v452, v248, v251);
    v256 = *(unsigned __int8 *)(v497 + 80);
    v257 = (v256 + 16) & ~v256;
    v258 = *(unsigned __int8 *)(v254 + 80);
    v259 = (unint64_t)&v498[v258 + v257] & ~v258;
    v260 = swift_allocObject(&unk_100463400, v259 + v451, v256 | v258 | 7);
    sub_1000648AC(v253, v260 + v257, type metadata accessor for Collaboration.Flow.View);
    v249((char *)(v260 + v259), (uint64_t)v255, v251);
    LOBYTE(v564[0]) = 0;
    State.init(wrappedValue:)(&v565, v564, &type metadata for Bool);
    LOBYTE(v255) = v565._countAndFlagsBits;
    v261 = v565._object;
    v516 = (uint64_t *)v565._object;
    v262 = swift_getKeyPath(&unk_10039DD18);
    v263 = swift_getKeyPath(&unk_10039DD48);
    v264 = swift_allocObject(&unk_100463428, 17, 7);
    *(_BYTE *)(v264 + 16) = v157 & 1;
    v265 = v486;
    v266 = object;
    *v486 = v513;
    v265[1] = v266;
    *((_BYTE *)v265 + 16) = 0;
    v265[3] = (unint64_t)sub_100314314;
    v265[4] = v260;
    *((_BYTE *)v265 + 40) = (_BYTE)v255;
    v265[6] = (unint64_t)v261;
    v265[7] = v262;
    v515 = v262;
    *((_BYTE *)v265 + 64) = 0;
    v265[9] = v263;
    v265[10] = (unint64_t)sub_1003046F4;
    v531 = v263;
    v265[11] = v264;
    swift_storeEnumTagMultiPayload(v265, v484, 1);
    swift_retain(v261);
    swift_bridgeObjectRetain();
    swift_retain(v260);
    sub_100301C50(v262, 0);
    swift_retain(v263);
    swift_retain(v264);
    v267 = sub_100005574(&qword_10049F360);
    v268 = sub_10002FFB8(&qword_10049F350, &qword_10049F280, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    v269 = sub_100313E98();
    v270 = (uint64_t)v487;
    _ConditionalContent<>.init(storage:)(v265, v485, v267, v268, v269);
    v271 = v503;
    sub_100014A7C(v270, v503, &qword_10049F288);
    swift_storeEnumTagMultiPayload(v271, v501, 0);
    v272 = sub_100313E14();
    v273 = sub_10002FFB8(&qword_10049F370, &qword_10049F260, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    v246 = (uint64_t)v527;
    _ConditionalContent<>.init(storage:)(v271, v502, v504, v272, v273);
    sub_100008758(v270, &qword_10049F288);
    swift_release(v516);
    swift_release(v260);
    swift_bridgeObjectRelease();
    sub_1002D0564(v515, 0);
    swift_release(v264);
    v274 = swift_release(v531);
    (*(void (**)(char *, uint64_t, __n128))(v474 + 8))(v473, v475, v274);
    sub_100008758(v514, &qword_10049EEE0);
  }
  v402 = v526;
  sub_100014A7C((uint64_t)v530, v526, &qword_10049F300);
  v403 = v528;
  sub_100014A7C(v534, v528, &qword_10049F2E8);
  v608[0] = v600[0];
  *(_DWORD *)((char *)v608 + 3) = *(_DWORD *)((char *)v600 + 3);
  v606 = v615;
  v607 = v616;
  v605[0] = v538[0];
  *(_DWORD *)((char *)v605 + 3) = *(_DWORD *)((char *)v538 + 3);
  *(_DWORD *)&v604[3] = *(_DWORD *)&v614[3];
  *(_DWORD *)v604 = *(_DWORD *)v614;
  *(_DWORD *)&v603[3] = *(_DWORD *)&v613[3];
  *(_DWORD *)v603 = *(_DWORD *)v613;
  *(_DWORD *)&v602[3] = *(_DWORD *)&v612[3];
  *(_DWORD *)v602 = *(_DWORD *)v612;
  LODWORD(object) = v611;
  v404 = v529;
  sub_100014A7C(v536, v529, &qword_10049F2D0);
  sub_100014A7C(v246, v535, &qword_10049F2C0);
  v405 = v510;
  sub_100014A7C(v402, v510, &qword_10049F300);
  v406 = (int *)sub_100005574(&qword_10049F378);
  sub_100014A7C(v403, v405 + v406[12], &qword_10049F2E8);
  v407 = v405 + v406[16];
  v408 = v509;
  *(_QWORD *)&v564[0] = v509;
  *((_QWORD *)&v564[0] + 1) = v521;
  LOBYTE(v564[1]) = v517;
  *(_DWORD *)((char *)&v564[1] + 1) = v600[0];
  DWORD1(v564[1]) = *(_DWORD *)((char *)v600 + 3);
  *((_QWORD *)&v564[1] + 1) = v524;
  LOWORD(v564[2]) = 256;
  *(_DWORD *)((char *)&v564[2] + 2) = v615;
  WORD3(v564[2]) = v616;
  v409 = v523;
  *((_QWORD *)&v564[2] + 1) = v523;
  *(_QWORD *)&v564[3] = v525;
  *((_QWORD *)&v564[3] + 1) = v522;
  LOBYTE(v564[4]) = 1;
  *(_DWORD *)((char *)&v564[4] + 1) = v538[0];
  DWORD1(v564[4]) = *(_DWORD *)((char *)v538 + 3);
  *((_QWORD *)&v564[4] + 1) = v532;
  *(_QWORD *)&v564[5] = v533;
  BYTE8(v564[5]) = v520;
  *(_DWORD *)((char *)&v564[5] + 9) = *(_DWORD *)v614;
  HIDWORD(v564[5]) = *(_DWORD *)&v614[3];
  *(double *)&v564[6] = v108;
  *((_QWORD *)&v564[6] + 1) = v110;
  *(_QWORD *)&v564[7] = v112;
  *((_QWORD *)&v564[7] + 1) = v114;
  LOBYTE(v564[8]) = v518;
  DWORD1(v564[8]) = *(_DWORD *)&v613[3];
  *(_DWORD *)((char *)&v564[8] + 1) = *(_DWORD *)v613;
  BYTE8(v564[8]) = v519;
  HIDWORD(v564[8]) = *(_DWORD *)&v612[3];
  *(_DWORD *)((char *)&v564[8] + 9) = *(_DWORD *)v612;
  *(double *)&v564[9] = v116;
  *((_QWORD *)&v564[9] + 1) = v118;
  *(_QWORD *)&v564[10] = v120;
  *((_QWORD *)&v564[10] + 1) = v122;
  LOBYTE(v564[11]) = object;
  v411 = v564[8];
  v410 = v564[9];
  v412 = v564[10];
  *(_BYTE *)(v407 + 176) = object;
  *(_OWORD *)(v407 + 144) = v410;
  *(_OWORD *)(v407 + 160) = v412;
  v413 = v564[0];
  v414 = v564[1];
  v415 = v564[3];
  *(_OWORD *)(v407 + 32) = v564[2];
  *(_OWORD *)(v407 + 48) = v415;
  *(_OWORD *)v407 = v413;
  *(_OWORD *)(v407 + 16) = v414;
  v416 = v564[4];
  v417 = v564[5];
  v418 = v564[6];
  *(_OWORD *)(v407 + 112) = v564[7];
  *(_OWORD *)(v407 + 128) = v411;
  *(_OWORD *)(v407 + 80) = v417;
  *(_OWORD *)(v407 + 96) = v418;
  *(_OWORD *)(v407 + 64) = v416;
  sub_100014A7C(v404, v405 + v406[20], &qword_10049F2D0);
  sub_100014A7C(v535, v405 + v406[24], &qword_10049F2C0);
  sub_100313F60((uint64_t)v564);
  LOBYTE(v406) = v508 & 1;
  v419 = v521;
  sub_10003B4C0(v408, v521, v508 & 1);
  swift_bridgeObjectRetain();
  swift_retain(v409);
  v420 = v525;
  swift_retain(v525);
  v421 = v522;
  swift_retain(v522);
  v422 = v532;
  swift_retain(v532);
  v423 = v533;
  swift_retain(v533);
  sub_100008758((uint64_t)v527, &qword_10049F2C0);
  sub_100008758(v536, &qword_10049F2D0);
  sub_10003B4D0(v408, v419, (char)v406);
  swift_release(v423);
  swift_release(v422);
  v424 = v421;
  swift_release(v421);
  swift_release(v420);
  v425 = v523;
  swift_release(v523);
  v426 = v524;
  swift_bridgeObjectRelease();
  sub_100008758(v534, &qword_10049F2E8);
  sub_100008758((uint64_t)v530, &qword_10049F300);
  sub_100008758(v535, &qword_10049F2C0);
  sub_100008758(v529, &qword_10049F2D0);
  v565._countAndFlagsBits = v408;
  v565._object = (void *)v419;
  LOBYTE(v566._countAndFlagsBits) = v517;
  *(_DWORD *)((char *)&v566._countAndFlagsBits + 1) = v608[0];
  HIDWORD(v566._countAndFlagsBits) = *(_DWORD *)((char *)v608 + 3);
  v566._object = (void *)v426;
  LOWORD(v567._countAndFlagsBits) = 256;
  *(_DWORD *)((char *)&v567._countAndFlagsBits + 2) = v606;
  HIWORD(v567._countAndFlagsBits) = v607;
  v567._object = (void *)v425;
  *(_QWORD *)&v568 = v420;
  *((_QWORD *)&v568 + 1) = v424;
  LOBYTE(v569) = 1;
  DWORD1(v569) = *(_DWORD *)((char *)v605 + 3);
  *(_DWORD *)((char *)&v569 + 1) = v605[0];
  *((_QWORD *)&v569 + 1) = v532;
  *(_QWORD *)&v570 = v533;
  BYTE8(v570) = v520;
  HIDWORD(v570) = *(_DWORD *)&v604[3];
  *(_DWORD *)((char *)&v570 + 9) = *(_DWORD *)v604;
  *(double *)&v571 = v108;
  *((_QWORD *)&v571 + 1) = v110;
  *(_QWORD *)&v572 = v112;
  *((_QWORD *)&v572 + 1) = v114;
  LOBYTE(v573) = v518;
  DWORD1(v573) = *(_DWORD *)&v603[3];
  *(_DWORD *)((char *)&v573 + 1) = *(_DWORD *)v603;
  BYTE8(v573) = v519;
  HIDWORD(v573) = *(_DWORD *)&v602[3];
  *(_DWORD *)((char *)&v573 + 9) = *(_DWORD *)v602;
  *(double *)&v574 = v116;
  *((_QWORD *)&v574 + 1) = v118;
  *(_QWORD *)&v575 = v120;
  *((_QWORD *)&v575 + 1) = v122;
  LOBYTE(v576) = object;
  sub_100313FE8((uint64_t)&v565);
  sub_100008758(v528, &qword_10049F2E8);
  return sub_100008758(v526, &qword_10049F300);
}

uint64_t sub_1003099A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t result;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _QWORD v20[3];

  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v3 = (char *)&v20[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for String.LocalizationValue(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v20[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v9 = (char *)&v20[-1] - v8;
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000015, 0x80000001003BA6C0);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v9, v4);
  if (qword_100498860 != -1)
    swift_once(&qword_100498860, sub_100232E30);
  v10 = qword_1004A2F90;
  static Locale.current.getter((id)qword_1004A2F90);
  v11 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v10, v3, 0, 0, 256);
  v13 = v12;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
  v20[0] = v11;
  v20[1] = v13;
  v14 = sub_10024AF7C();
  result = Text.init<A>(_:)(v20, &type metadata for String, v14);
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v16;
  *(_BYTE *)(a1 + 16) = v17 & 1;
  *(_QWORD *)(a1 + 24) = v18;
  return result;
}

double sub_100309B3C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double result;
  uint64_t v16;

  v3 = *(_QWORD *)(type metadata accessor for Collaboration.Flow.View(0) - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin();
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_10049AEC0);
  __chkstk_darwin();
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  sub_100082248(a2, (uint64_t)v5, type metadata accessor for Collaboration.Flow.View);
  v9 = type metadata accessor for MainActor(0);
  v10 = static MainActor.shared.getter(v9);
  v11 = *(unsigned __int8 *)(v3 + 80);
  v12 = (v11 + 32) & ~v11;
  v13 = swift_allocObject(&unk_100463518, v12 + v4, v11 | 7);
  *(_QWORD *)(v13 + 16) = v10;
  *(_QWORD *)(v13 + 24) = &protocol witness table for MainActor;
  sub_1000648AC((uint64_t)v5, v13 + v12, type metadata accessor for Collaboration.Flow.View);
  v14 = sub_100283A94((uint64_t)v7, (uint64_t)&unk_10049F3B8, v13);
  *(_QWORD *)&result = swift_release(v14).n128_u64[0];
  return result;
}

uint64_t sub_100309C80()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = type metadata accessor for MainActor(0);
  v0[2] = v1;
  v0[3] = static MainActor.shared.getter(v1);
  v2 = (_QWORD *)swift_task_alloc(dword_10049F3AC);
  v0[4] = v2;
  *v2 = v0;
  v2[1] = sub_1001CC454;
  return sub_100309CE8(0);
}

uint64_t sub_100309CE8(char a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v12;

  v2[10] = v1;
  v4 = type metadata accessor for DismissAction(0);
  v2[11] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[12] = v5;
  v2[13] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100005574(&qword_10049F388);
  v2[14] = v6;
  v2[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Collaboration.Object(0);
  v2[16] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[17] = v8;
  v2[18] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MainActor(0);
  v2[19] = v9;
  v2[20] = static MainActor.shared.getter(v9);
  type metadata accessor for Collaboration.Flow.View(0);
  if ((a1 & 1) != 0)
  {
    v10 = (_QWORD *)swift_task_alloc(dword_1004912B4);
    v2[21] = v10;
    *v10 = v2;
    v10[1] = sub_100309E20;
    return Collaboration.Object.duplicate()();
  }
  else
  {
    v12 = (_QWORD *)swift_task_alloc(dword_10049123C);
    v2[23] = v12;
    *v12 = v2;
    v12[1] = sub_10030A034;
    return Collaboration.Object.hasUnsupportedContent.getter();
  }
}

uint64_t sub_100309E20()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 168);
  *(_QWORD *)(*v1 + 176) = v0;
  swift_task_dealloc(v3);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(*(_QWORD *)(v2 + 152), &protocol witness table for MainActor);
  if (v0)
    v6 = sub_10030A714;
  else
    v6 = sub_100309EA4;
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_100309EA4()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  int *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;
  char *v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  _QWORD *v19;
  uint64_t (*v20)(uint64_t);

  v1 = *(_QWORD *)(v0 + 80);
  v2 = (int *)type metadata accessor for Collaboration.Flow.View(0);
  *(_QWORD *)(v0 + 192) = v2;
  if (*(_BYTE *)(v1 + v2[10]) == 1 && (v3 = *(int **)(v1 + v2[11])) != 0)
  {
    v4 = (uint64_t *)(v1 + v2[13]);
    v5 = *v4;
    v6 = v4[1];
    v7 = *((unsigned __int8 *)v4 + 16);
    v8 = type metadata accessor for InlineProfileEditingView.Context(0);
    v9 = sub_100006924(&qword_10049F480, type metadata accessor for InlineProfileEditingView.Context, (uint64_t)&protocol conformance descriptor for InlineProfileEditingView.Context);
    v10 = StateObject.wrappedValue.getter(v5, v6, v7, v8, v9);
    *(_QWORD *)(v0 + 200) = v10;
    v20 = (uint64_t (*)(uint64_t))((char *)v3 + *v3);
    v11 = (_QWORD *)swift_task_alloc(v3[1]);
    *(_QWORD *)(v0 + 208) = v11;
    *v11 = v0;
    v11[1] = sub_10030A418;
    return v20(v10);
  }
  else
  {
    v13 = v1 + v2[8];
    v14 = (char *)(v1 + v2[5]);
    v15 = *v14;
    v16 = *((_QWORD *)v14 + 1);
    *(_BYTE *)(v0 + 40) = v15;
    *(_QWORD *)(v0 + 48) = v16;
    v17 = sub_100005574(&qword_10049C5C8);
    State.wrappedValue.getter((_QWORD *)(v0 + 33), v17);
    v18 = *(_BYTE *)(v0 + 33);
    v19 = (_QWORD *)swift_task_alloc(dword_1004912CC);
    *(_QWORD *)(v0 + 224) = v19;
    *v19 = v0;
    v19[1] = sub_10030A56C;
    return Collaboration.Manager.start(_:isOpen:)(*(_QWORD *)(v0 + 144), v13, (v18 & 1) == 0);
  }
}

uint64_t sub_10030A034(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 184);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 152);
  *(_BYTE *)(*(_QWORD *)v1 + 35) = a1;
  swift_task_dealloc(v2);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  return swift_task_switch(sub_10030A0AC, v4, v5);
}

uint64_t sub_10030A0AC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  int *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  char *v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t);

  if (*(_BYTE *)(v0 + 35) == 1)
  {
    swift_release(*(_QWORD *)(v0 + 160));
    v1 = sub_10031471C();
    v2 = swift_allocError(&type metadata for Collaboration.Error, v1, 0, 0);
    *(_OWORD *)v3 = xmmword_100395460;
    *(_BYTE *)(v3 + 16) = 3;
    swift_willThrow((__n128)xmmword_100395460);
    *(_QWORD *)(v0 + 72) = v2;
    swift_errorRetain(v2);
    v4 = sub_100005574(&qword_100499F80);
    if ((swift_dynamicCast(v0 + 16, v0 + 72, v4, &type metadata for Collaboration.Error, 0) & 1) != 0)
    {
      v5 = *(_QWORD *)(v0 + 16);
      v6 = *(_QWORD *)(v0 + 24);
      v7 = *(unsigned __int8 *)(v0 + 32);
      if (v7 == 3 && v5 == 8 && !v6)
      {
        v8 = *(_QWORD *)(v0 + 80);
        swift_errorRelease(v2);
        v9 = (char *)(v8 + *(int *)(type metadata accessor for Collaboration.Flow.View(0) + 24));
        v10 = *v9;
        v11 = *((_QWORD *)v9 + 1);
        *(_BYTE *)(v0 + 56) = v10;
        *(_QWORD *)(v0 + 64) = v11;
        *(_BYTE *)(v0 + 34) = 1;
        v12 = sub_100005574(&qword_10049C5C8);
        State.wrappedValue.setter(v0 + 34, v12);
        swift_errorRelease(*(_QWORD *)(v0 + 72));
LABEL_13:
        v39 = *(_QWORD *)(v0 + 120);
        v40 = *(_QWORD *)(v0 + 104);
        swift_task_dealloc(*(_QWORD *)(v0 + 144));
        swift_task_dealloc(v39);
        swift_task_dealloc(v40);
        return (*(uint64_t (**)(void))(v0 + 8))();
      }
      sub_1000D28A4(v5, v6, v7);
    }
    v32 = *(_QWORD *)(v0 + 112);
    v33 = *(uint64_t **)(v0 + 120);
    v35 = *(_QWORD *)(v0 + 96);
    v34 = *(_QWORD *)(v0 + 104);
    v37 = *(_QWORD *)(v0 + 80);
    v36 = *(_QWORD *)(v0 + 88);
    swift_errorRelease(*(_QWORD *)(v0 + 72));
    *v33 = v2;
    swift_storeEnumTagMultiPayload(v33, v32, 1);
    swift_errorRetain(v2);
    sub_1002BDE04(v34);
    DismissAction.callAsFunction()();
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v36);
    v38 = type metadata accessor for Collaboration.Flow.View(0);
    (*(void (**)(uint64_t *))(v37 + *(int *)(v38 + 48)))(v33);
    swift_errorRelease(v2);
    sub_100008758((uint64_t)v33, &qword_10049F388);
    goto LABEL_13;
  }
  v13 = *(_QWORD *)(v0 + 80);
  v14 = (int *)type metadata accessor for Collaboration.Flow.View(0);
  *(_QWORD *)(v0 + 192) = v14;
  if (*(_BYTE *)(v13 + v14[10]) == 1 && (v15 = *(int **)(v13 + v14[11])) != 0)
  {
    v16 = (uint64_t *)(v13 + v14[13]);
    v17 = *v16;
    v18 = v16[1];
    v19 = *((unsigned __int8 *)v16 + 16);
    v20 = type metadata accessor for InlineProfileEditingView.Context(0);
    v21 = sub_100006924(&qword_10049F480, type metadata accessor for InlineProfileEditingView.Context, (uint64_t)&protocol conformance descriptor for InlineProfileEditingView.Context);
    v22 = StateObject.wrappedValue.getter(v17, v18, v19, v20, v21);
    *(_QWORD *)(v0 + 200) = v22;
    v41 = (uint64_t (*)(uint64_t))((char *)v15 + *v15);
    v23 = (_QWORD *)swift_task_alloc(v15[1]);
    *(_QWORD *)(v0 + 208) = v23;
    *v23 = v0;
    v23[1] = sub_10030A418;
    return v41(v22);
  }
  else
  {
    v25 = v13 + v14[8];
    v26 = (char *)(v13 + v14[5]);
    v27 = *v26;
    v28 = *((_QWORD *)v26 + 1);
    *(_BYTE *)(v0 + 40) = v27;
    *(_QWORD *)(v0 + 48) = v28;
    v29 = sub_100005574(&qword_10049C5C8);
    State.wrappedValue.getter((_QWORD *)(v0 + 33), v29);
    v30 = *(_BYTE *)(v0 + 33);
    v31 = (_QWORD *)swift_task_alloc(dword_1004912CC);
    *(_QWORD *)(v0 + 224) = v31;
    *v31 = v0;
    v31[1] = sub_10030A56C;
    return Collaboration.Manager.start(_:isOpen:)(*(_QWORD *)(v0 + 144), v25, (v30 & 1) == 0);
  }
}

uint64_t sub_10030A418()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 208);
  *(_QWORD *)(*v1 + 216) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = dispatch thunk of Actor.unownedExecutor.getter(*(_QWORD *)(v2 + 152), &protocol witness table for MainActor);
    v6 = v5;
    v7 = sub_10030A8C4;
  }
  else
  {
    v8 = *(_QWORD *)(v2 + 200);
    v9 = *(_QWORD *)(v2 + 152);
    swift_release(v8);
    v4 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
    v6 = v10;
    v7 = sub_10030A4B8;
  }
  return swift_task_switch(v7, v4, v6);
}

uint64_t sub_10030A4B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _QWORD *v8;

  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = v2 + *(int *)(v1 + 32);
  v4 = v2 + *(int *)(v1 + 20);
  LOBYTE(v2) = *(_BYTE *)v4;
  v5 = *(_QWORD *)(v4 + 8);
  *(_BYTE *)(v0 + 40) = v2;
  *(_QWORD *)(v0 + 48) = v5;
  v6 = sub_100005574(&qword_10049C5C8);
  State.wrappedValue.getter((_QWORD *)(v0 + 33), v6);
  v7 = *(_BYTE *)(v0 + 33);
  v8 = (_QWORD *)swift_task_alloc(dword_1004912CC);
  *(_QWORD *)(v0 + 224) = v8;
  *v8 = v0;
  v8[1] = sub_10030A56C;
  return Collaboration.Manager.start(_:isOpen:)(*(_QWORD *)(v0 + 144), v3, (v7 & 1) == 0);
}

uint64_t sub_10030A56C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 224);
  *(_QWORD *)(*v1 + 232) = v0;
  swift_task_dealloc(v3);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(*(_QWORD *)(v2 + 152), &protocol witness table for MainActor);
  if (v0)
    v6 = sub_10030AA84;
  else
    v6 = sub_10030A5F0;
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_10030A5F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v13 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 136);
  v1 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 128);
  v6 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 112);
  v7 = *(_QWORD *)(v0 + 88);
  v8 = *(_QWORD *)(v0 + 96);
  v9 = *(_QWORD *)(v0 + 80);
  swift_release(*(_QWORD *)(v0 + 160));
  sub_100082248(v1, v4, type metadata accessor for Collaboration.Object);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v2 + 56))(v4, 0, 1, v3);
  swift_storeEnumTagMultiPayload(v4, v5, 0);
  sub_1002BDE04(v6);
  DismissAction.callAsFunction()();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  (*(void (**)(uint64_t))(v9 + *(int *)(v13 + 48)))(v4);
  sub_100008758(v4, &qword_10049F388);
  sub_100006798(v1, type metadata accessor for Collaboration.Object);
  v10 = *(_QWORD *)(v0 + 120);
  v11 = *(_QWORD *)(v0 + 104);
  swift_task_dealloc(*(_QWORD *)(v0 + 144));
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10030A714()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char *v19;
  char v20;
  uint64_t v21;
  uint64_t v22;

  swift_release(*(_QWORD *)(v0 + 160));
  v1 = *(_QWORD *)(v0 + 176);
  *(_QWORD *)(v0 + 72) = v1;
  swift_errorRetain(v1);
  v2 = sub_100005574(&qword_100499F80);
  if ((swift_dynamicCast(v0 + 16, v0 + 72, v2, &type metadata for Collaboration.Error, 0) & 1) != 0)
  {
    v3 = *(_QWORD *)(v0 + 16);
    v4 = *(_QWORD *)(v0 + 24);
    v5 = *(unsigned __int8 *)(v0 + 32);
    if (v5 == 3 && v3 == 8 && v4 == 0)
    {
      v18 = *(_QWORD *)(v0 + 80);
      swift_errorRelease(v1);
      v19 = (char *)(v18 + *(int *)(type metadata accessor for Collaboration.Flow.View(0) + 24));
      v20 = *v19;
      v21 = *((_QWORD *)v19 + 1);
      *(_BYTE *)(v0 + 56) = v20;
      *(_QWORD *)(v0 + 64) = v21;
      *(_BYTE *)(v0 + 34) = 1;
      v22 = sub_100005574(&qword_10049C5C8);
      State.wrappedValue.setter(v0 + 34, v22);
      swift_errorRelease(*(_QWORD *)(v0 + 72));
      goto LABEL_11;
    }
    sub_1000D28A4(v3, v4, v5);
  }
  v8 = *(_QWORD *)(v0 + 112);
  v9 = *(_QWORD **)(v0 + 120);
  v11 = *(_QWORD *)(v0 + 96);
  v10 = *(_QWORD *)(v0 + 104);
  v13 = *(_QWORD *)(v0 + 80);
  v12 = *(_QWORD *)(v0 + 88);
  swift_errorRelease(*(_QWORD *)(v0 + 72));
  *v9 = v1;
  swift_storeEnumTagMultiPayload(v9, v8, 1);
  swift_errorRetain(v1);
  sub_1002BDE04(v10);
  DismissAction.callAsFunction()();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  v14 = type metadata accessor for Collaboration.Flow.View(0);
  (*(void (**)(_QWORD *))(v13 + *(int *)(v14 + 48)))(v9);
  swift_errorRelease(v1);
  sub_100008758((uint64_t)v9, &qword_10049F388);
LABEL_11:
  v15 = *(_QWORD *)(v0 + 120);
  v16 = *(_QWORD *)(v0 + 104);
  swift_task_dealloc(*(_QWORD *)(v0 + 144));
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10030A8C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 200);
  swift_release(*(_QWORD *)(v0 + 160));
  swift_release(v1);
  v2 = *(_QWORD *)(v0 + 216);
  *(_QWORD *)(v0 + 72) = v2;
  swift_errorRetain(v2);
  v3 = sub_100005574(&qword_100499F80);
  if ((swift_dynamicCast(v0 + 16, v0 + 72, v3, &type metadata for Collaboration.Error, 0) & 1) == 0)
    goto LABEL_7;
  v4 = *(_QWORD *)(v0 + 16);
  v5 = *(_QWORD *)(v0 + 24);
  v6 = *(unsigned __int8 *)(v0 + 32);
  if (v6 != 3 || v4 != 8 || v5)
  {
    sub_1000D28A4(v4, v5, v6);
LABEL_7:
    v12 = *(_QWORD *)(v0 + 112);
    v13 = *(_QWORD **)(v0 + 120);
    v15 = *(_QWORD *)(v0 + 96);
    v14 = *(_QWORD *)(v0 + 104);
    v17 = *(_QWORD *)(v0 + 80);
    v16 = *(_QWORD *)(v0 + 88);
    swift_errorRelease(*(_QWORD *)(v0 + 72));
    *v13 = v2;
    swift_storeEnumTagMultiPayload(v13, v12, 1);
    swift_errorRetain(v2);
    sub_1002BDE04(v14);
    DismissAction.callAsFunction()();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
    v18 = type metadata accessor for Collaboration.Flow.View(0);
    (*(void (**)(_QWORD *))(v17 + *(int *)(v18 + 48)))(v13);
    swift_errorRelease(v2);
    sub_100008758((uint64_t)v13, &qword_10049F388);
    goto LABEL_8;
  }
  v7 = *(_QWORD *)(v0 + 80);
  swift_errorRelease(v2);
  v8 = (char *)(v7 + *(int *)(type metadata accessor for Collaboration.Flow.View(0) + 24));
  v9 = *v8;
  v10 = *((_QWORD *)v8 + 1);
  *(_BYTE *)(v0 + 56) = v9;
  *(_QWORD *)(v0 + 64) = v10;
  *(_BYTE *)(v0 + 34) = 1;
  v11 = sub_100005574(&qword_10049C5C8);
  State.wrappedValue.setter(v0 + 34, v11);
  swift_errorRelease(*(_QWORD *)(v0 + 72));
LABEL_8:
  v19 = *(_QWORD *)(v0 + 120);
  v20 = *(_QWORD *)(v0 + 104);
  swift_task_dealloc(*(_QWORD *)(v0 + 144));
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10030AA84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char *v19;
  char v20;
  uint64_t v21;
  uint64_t v22;

  swift_release(*(_QWORD *)(v0 + 160));
  v1 = *(_QWORD *)(v0 + 232);
  *(_QWORD *)(v0 + 72) = v1;
  swift_errorRetain(v1);
  v2 = sub_100005574(&qword_100499F80);
  if ((swift_dynamicCast(v0 + 16, v0 + 72, v2, &type metadata for Collaboration.Error, 0) & 1) != 0)
  {
    v3 = *(_QWORD *)(v0 + 16);
    v4 = *(_QWORD *)(v0 + 24);
    v5 = *(unsigned __int8 *)(v0 + 32);
    if (v5 == 3 && v3 == 8 && v4 == 0)
    {
      v18 = *(_QWORD *)(v0 + 80);
      swift_errorRelease(v1);
      v19 = (char *)(v18 + *(int *)(type metadata accessor for Collaboration.Flow.View(0) + 24));
      v20 = *v19;
      v21 = *((_QWORD *)v19 + 1);
      *(_BYTE *)(v0 + 56) = v20;
      *(_QWORD *)(v0 + 64) = v21;
      *(_BYTE *)(v0 + 34) = 1;
      v22 = sub_100005574(&qword_10049C5C8);
      State.wrappedValue.setter(v0 + 34, v22);
      swift_errorRelease(*(_QWORD *)(v0 + 72));
      goto LABEL_11;
    }
    sub_1000D28A4(v3, v4, v5);
  }
  v8 = *(_QWORD *)(v0 + 112);
  v9 = *(_QWORD **)(v0 + 120);
  v11 = *(_QWORD *)(v0 + 96);
  v10 = *(_QWORD *)(v0 + 104);
  v13 = *(_QWORD *)(v0 + 80);
  v12 = *(_QWORD *)(v0 + 88);
  swift_errorRelease(*(_QWORD *)(v0 + 72));
  *v9 = v1;
  swift_storeEnumTagMultiPayload(v9, v8, 1);
  swift_errorRetain(v1);
  sub_1002BDE04(v10);
  DismissAction.callAsFunction()();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  v14 = type metadata accessor for Collaboration.Flow.View(0);
  (*(void (**)(_QWORD *))(v13 + *(int *)(v14 + 48)))(v9);
  swift_errorRelease(v1);
  sub_100008758((uint64_t)v9, &qword_10049F388);
LABEL_11:
  v15 = *(_QWORD *)(v0 + 120);
  v16 = *(_QWORD *)(v0 + 104);
  swift_task_dealloc(*(_QWORD *)(v0 + 144));
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10030AC34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;

  v66 = a1;
  v67 = a2;
  v62 = *(_QWORD *)(type metadata accessor for Collaboration.Flow.View(0) - 8);
  __chkstk_darwin();
  v63 = v2;
  v64 = (uint64_t)&v53 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Alert.Button(0);
  __chkstk_darwin();
  v65 = (char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v68 = (char *)&v53 - v4;
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin();
  v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v12 = (char *)&v53 - v11;
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000027, 0x80000001003BACC0);
  v13 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v13(v10, v12, v7);
  if (qword_100498860 != -1)
    swift_once(&qword_100498860, sub_100232E30);
  v14 = qword_1004A2F90;
  static Locale.current.getter((id)qword_1004A2F90);
  v15 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v14, v6, 0, 0, 256);
  v17 = v16;
  v18 = *(void (**)(char *, uint64_t))(v8 + 8);
  v18(v12, v7);
  v69 = v15;
  v70 = v17;
  v19 = sub_10024AF7C();
  v20 = Text.init<A>(_:)(&v69, &type metadata for String, v19);
  v60 = v21;
  v61 = v20;
  v58 = v22;
  v59 = v23;
  String.LocalizationValue.init(stringLiteral:)(0xD00000000000008ELL, 0x80000001003BACF0);
  v13(v10, v12, v7);
  v24 = qword_1004A2F90;
  static Locale.current.getter((id)qword_1004A2F90);
  v25 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v24, v6, 0, 0, 256);
  v27 = v26;
  v18(v12, v7);
  v69 = v25;
  v70 = v27;
  v28 = Text.init<A>(_:)(&v69, &type metadata for String, v19);
  v56 = v29;
  v57 = v28;
  v54 = v30 & 1;
  v55 = v31;
  String.LocalizationValue.init(stringLiteral:)(0x65756E69746E6F43, 0xE800000000000000);
  v13(v10, v12, v7);
  v32 = qword_1004A2F90;
  static Locale.current.getter((id)qword_1004A2F90);
  v33 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v32, v6, 0, 0, 256);
  v35 = v34;
  v18(v12, v7);
  v69 = v33;
  v70 = v35;
  v36 = Text.init<A>(_:)(&v69, &type metadata for String, v19);
  v38 = v37;
  v40 = v39;
  v42 = v41 & 1;
  v43 = v66;
  v44 = v64;
  sub_100082248(v66, v64, type metadata accessor for Collaboration.Flow.View);
  v45 = *(unsigned __int8 *)(v62 + 80);
  v46 = (v45 + 16) & ~v45;
  v47 = v46 + v63;
  v48 = v45 | 7;
  v49 = swift_allocObject(&unk_1004634A0, v46 + v63, v45 | 7);
  sub_1000648AC(v44, v49 + v46, type metadata accessor for Collaboration.Flow.View);
  static Alert.Button.default(_:action:)(v36, v38, v42, v40, sub_1003146C4, v49);
  sub_10003B4D0(v36, v38, v42);
  swift_release(v49);
  swift_bridgeObjectRelease();
  sub_100082248(v43, v44, type metadata accessor for Collaboration.Flow.View);
  v50 = swift_allocObject(&unk_1004634C8, v47, v48);
  sub_1000648AC(v44, v50 + v46, type metadata accessor for Collaboration.Flow.View);
  v51 = v65;
  static Alert.Button.cancel(_:)(sub_1003146D4, v50);
  swift_release(v50);
  return Alert.init(title:message:primaryButton:secondaryButton:)(v61, v60, v58 & 1, v59, v57, v56, v54, v55, v68, v51);
}

double sub_10030B0E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double result;
  uint64_t v15;

  v2 = *(_QWORD *)(type metadata accessor for Collaboration.Flow.View(0) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  __chkstk_darwin();
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_10049AEC0);
  __chkstk_darwin();
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  sub_100082248(a1, (uint64_t)v4, type metadata accessor for Collaboration.Flow.View);
  v8 = type metadata accessor for MainActor(0);
  v9 = static MainActor.shared.getter(v8);
  v10 = *(unsigned __int8 *)(v2 + 80);
  v11 = (v10 + 32) & ~v10;
  v12 = swift_allocObject(&unk_1004634F0, v11 + v3, v10 | 7);
  *(_QWORD *)(v12 + 16) = v9;
  *(_QWORD *)(v12 + 24) = &protocol witness table for MainActor;
  sub_1000648AC((uint64_t)v4, v12 + v11, type metadata accessor for Collaboration.Flow.View);
  v13 = sub_100283A94((uint64_t)v6, (uint64_t)&unk_10049F3A0, v12);
  *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  return result;
}

uint64_t sub_10030B228()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = type metadata accessor for MainActor(0);
  v0[2] = v1;
  v0[3] = static MainActor.shared.getter(v1);
  v2 = (_QWORD *)swift_task_alloc(dword_10049F3AC);
  v0[4] = v2;
  *v2 = v0;
  v2[1] = sub_100092ED4;
  return sub_100309CE8(1);
}

uint64_t sub_10030B290(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v2 = type metadata accessor for DismissAction(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin();
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100005574(&qword_10049F388);
  __chkstk_darwin();
  v8 = (uint64_t *)((char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_10031471C();
  v10 = swift_allocError(&type metadata for Collaboration.Error, v9, 0, 0);
  *(_OWORD *)v11 = xmmword_100395460;
  *(_BYTE *)(v11 + 16) = 3;
  *v8 = v10;
  swift_storeEnumTagMultiPayload(v8, v6, 1);
  sub_1002BDE04((uint64_t)v5);
  DismissAction.callAsFunction()();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v12 = type metadata accessor for Collaboration.Flow.View(0);
  (*(void (**)(uint64_t *))(a1 + *(int *)(v12 + 48)))(v8);
  return sub_100008758((uint64_t)v8, &qword_10049F388);
}

uint64_t sub_10030B3D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5[2] = a4;
  v5[3] = a5;
  v6 = type metadata accessor for DismissAction(0);
  v5[4] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[5] = v7;
  v5[6] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100005574(&qword_10049F388);
  v5[7] = v8;
  v5[8] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MainActor(0);
  v5[9] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  v5[10] = v10;
  v5[11] = v11;
  return swift_task_switch(sub_10030B48C, v10, v11);
}

uint64_t sub_10030B48C()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  int *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;
  _QWORD *v14;
  uint64_t (*v15)(uint64_t);

  v1 = v0[2];
  v2 = (int *)type metadata accessor for Collaboration.Flow.View(0);
  v0[12] = v2;
  if (*(_BYTE *)(v1 + v2[10]) == 1 && (v3 = *(int **)(v1 + v2[11])) != 0)
  {
    v4 = (uint64_t *)(v1 + v2[13]);
    v5 = *v4;
    v6 = v4[1];
    v7 = *((unsigned __int8 *)v4 + 16);
    v8 = type metadata accessor for InlineProfileEditingView.Context(0);
    v9 = sub_100006924(&qword_10049F480, type metadata accessor for InlineProfileEditingView.Context, (uint64_t)&protocol conformance descriptor for InlineProfileEditingView.Context);
    v10 = StateObject.wrappedValue.getter(v5, v6, v7, v8, v9);
    v0[13] = v10;
    v15 = (uint64_t (*)(uint64_t))((char *)v3 + *v3);
    v11 = (_QWORD *)swift_task_alloc(v3[1]);
    v0[14] = v11;
    *v11 = v0;
    v11[1] = sub_10030B5D4;
    return v15(v10);
  }
  else
  {
    v13 = v1 + v2[8];
    v14 = (_QWORD *)swift_task_alloc(dword_1004912F4);
    v0[16] = v14;
    *v14 = v0;
    v14[1] = sub_10030B6A4;
    return Collaboration.Manager.join(_:url:)(v13, v0[3]);
  }
}

uint64_t sub_10030B5D4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 112);
  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = v2[10];
    v5 = v2[11];
    v6 = sub_10030B7EC;
  }
  else
  {
    swift_release(v2[13]);
    v4 = v2[10];
    v5 = v2[11];
    v6 = sub_10030B640;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_10030B640()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = v0[2] + *(int *)(v0[12] + 32);
  v2 = (_QWORD *)swift_task_alloc(dword_1004912F4);
  v0[16] = v2;
  *v2 = v0;
  v2[1] = sub_10030B6A4;
  return Collaboration.Manager.join(_:url:)(v1, v0[3]);
}

uint64_t sub_10030B6A4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 128);
  *(_QWORD *)(*v1 + 136) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_10030B8D0;
  else
    v4 = sub_10030B704;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88));
}

uint64_t sub_10030B704()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 32);
  v6 = *(_QWORD *)(v0 + 40);
  v7 = *(_QWORD *)(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 72));
  v8 = type metadata accessor for Collaboration.Object(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v2, 1, 1, v8);
  swift_storeEnumTagMultiPayload(v2, v3, 0);
  sub_1002BDE04(v4);
  DismissAction.callAsFunction()();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t))(v7 + *(int *)(v1 + 48)))(v2);
  sub_100008758(v2, &qword_10049F388);
  v9 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 64));
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10030B7EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_release(*(_QWORD *)(v0 + 104));
  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD **)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 56);
  v6 = *(_QWORD *)(v0 + 32);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 72));
  *v3 = v1;
  swift_storeEnumTagMultiPayload(v3, v4, 1);
  swift_errorRetain(v1);
  sub_1002BDE04(v5);
  DismissAction.callAsFunction()();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  (*(void (**)(_QWORD *))(v8 + *(int *)(v2 + 48)))(v3);
  swift_errorRelease(v1);
  sub_100008758((uint64_t)v3, &qword_10049F388);
  v9 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 64));
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10030B8D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD **)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 56);
  v6 = *(_QWORD *)(v0 + 32);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 72));
  *v3 = v1;
  swift_storeEnumTagMultiPayload(v3, v4, 1);
  swift_errorRetain(v1);
  sub_1002BDE04(v5);
  DismissAction.callAsFunction()();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  (*(void (**)(_QWORD *))(v8 + *(int *)(v2 + 48)))(v3);
  swift_errorRelease(v1);
  sub_100008758((uint64_t)v3, &qword_10049F388);
  v9 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 64));
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10030B9AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5[2] = a4;
  v5[3] = a5;
  v6 = type metadata accessor for DismissAction(0);
  v5[4] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[5] = v7;
  v5[6] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100005574(&qword_10049F388);
  v5[7] = v8;
  v5[8] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100005574(&qword_10049F3E0);
  v5[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Playlist(0);
  v5[10] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v5[11] = v11;
  v5[12] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MainActor(0);
  v5[13] = static MainActor.shared.getter(v12);
  v13 = dispatch thunk of Actor.unownedExecutor.getter(v12, &protocol witness table for MainActor);
  v5[14] = v13;
  v5[15] = v14;
  return swift_task_switch(sub_10030BAB4, v13, v14);
}

uint64_t sub_10030BAB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v19;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 72);
  *(_QWORD *)(v0 + 128) = type metadata accessor for Collaboration.Flow.View(0);
  Collaboration.Object.musicItem.getter(v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    v4 = *(_QWORD *)(v0 + 72);
    swift_release(*(_QWORD *)(v0 + 104));
    sub_100008758(v4, &qword_10049F3E0);
    v5 = sub_10031471C();
    v6 = swift_allocError(&type metadata for Collaboration.Error, v5, 0, 0);
    *(_OWORD *)v7 = xmmword_100384B10;
    *(_BYTE *)(v7 + 16) = 3;
    swift_willThrow((__n128)xmmword_100384B10);
    v8 = *(_QWORD *)(v0 + 128);
    v9 = *(_QWORD *)(v0 + 56);
    v10 = *(uint64_t **)(v0 + 64);
    v12 = *(_QWORD *)(v0 + 40);
    v11 = *(_QWORD *)(v0 + 48);
    v13 = *(_QWORD *)(v0 + 32);
    v14 = *(_QWORD *)(v0 + 16);
    *v10 = v6;
    swift_storeEnumTagMultiPayload(v10, v9, 1);
    swift_errorRetain(v6);
    sub_1002BDE04(v11);
    DismissAction.callAsFunction()();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
    (*(void (**)(uint64_t *))(v14 + *(int *)(v8 + 48)))(v10);
    swift_errorRelease(v6);
    sub_100008758((uint64_t)v10, &qword_10049F388);
    v15 = *(_QWORD *)(v0 + 64);
    v16 = *(_QWORD *)(v0 + 72);
    v17 = *(_QWORD *)(v0 + 48);
    swift_task_dealloc(*(_QWORD *)(v0 + 96));
    swift_task_dealloc(v16);
    swift_task_dealloc(v15);
    swift_task_dealloc(v17);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 32))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
    v19 = (_QWORD *)swift_task_alloc(dword_100491304);
    *(_QWORD *)(v0 + 136) = v19;
    *v19 = v0;
    v19[1] = sub_10030BCAC;
    return Collaboration.Manager.moderate(_:collaborator:in:)(0, *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 96));
  }
}

uint64_t sub_10030BCAC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 136);
  *(_QWORD *)(*v1 + 144) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_10030BE2C;
  else
    v4 = sub_10030BD0C;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 112), *(_QWORD *)(v2 + 120));
}

uint64_t sub_10030BD0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 128);
  v15 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 40);
  v7 = *(_QWORD *)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 32);
  v9 = *(_QWORD *)(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 104));
  v10 = type metadata accessor for Collaboration.Object(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v5, 1, 1, v10);
  swift_storeEnumTagMultiPayload(v5, v4, 0);
  sub_1002BDE04(v7);
  DismissAction.callAsFunction()();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v8);
  (*(void (**)(uint64_t))(v9 + *(int *)(v1 + 48)))(v5);
  sub_100008758(v5, &qword_10049F388);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v15, v2);
  v11 = *(_QWORD *)(v0 + 64);
  v12 = *(_QWORD *)(v0 + 72);
  v13 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 96));
  swift_task_dealloc(v12);
  swift_task_dealloc(v11);
  swift_task_dealloc(v13);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10030BE2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 88);
  v4 = swift_release(*(_QWORD *)(v0 + 104));
  (*(void (**)(uint64_t, uint64_t, __n128))(v3 + 8))(v1, v2, v4);
  v5 = *(_QWORD *)(v0 + 144);
  v6 = *(_QWORD *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 56);
  v8 = *(_QWORD **)(v0 + 64);
  v10 = *(_QWORD *)(v0 + 40);
  v9 = *(_QWORD *)(v0 + 48);
  v11 = *(_QWORD *)(v0 + 32);
  v12 = *(_QWORD *)(v0 + 16);
  *v8 = v5;
  swift_storeEnumTagMultiPayload(v8, v7, 1);
  swift_errorRetain(v5);
  sub_1002BDE04(v9);
  DismissAction.callAsFunction()();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  (*(void (**)(_QWORD *))(v12 + *(int *)(v6 + 48)))(v8);
  swift_errorRelease(v5);
  sub_100008758((uint64_t)v8, &qword_10049F388);
  v13 = *(_QWORD *)(v0 + 64);
  v14 = *(_QWORD *)(v0 + 72);
  v15 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 96));
  swift_task_dealloc(v14);
  swift_task_dealloc(v13);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_10030BF30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v29 = a5;
  v30 = a6;
  v28 = a3;
  v7 = a4(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin();
  v11 = (char *)&v27 - v10;
  v12 = *(_QWORD *)(type metadata accessor for Collaboration.Flow.View(0) - 8);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin();
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_10049AEC0);
  __chkstk_darwin();
  v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  sub_100082248(a2, (uint64_t)v14, type metadata accessor for Collaboration.Flow.View);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v28, v7);
  v18 = type metadata accessor for MainActor(0);
  v19 = static MainActor.shared.getter(v18);
  v20 = *(unsigned __int8 *)(v12 + 80);
  v21 = (v20 + 32) & ~v20;
  v22 = *(unsigned __int8 *)(v8 + 80);
  v23 = (v13 + v22 + v21) & ~v22;
  v24 = swift_allocObject(v29, v23 + v9, v20 | v22 | 7);
  *(_QWORD *)(v24 + 16) = v19;
  *(_QWORD *)(v24 + 24) = &protocol witness table for MainActor;
  sub_1000648AC((uint64_t)v14, v24 + v21, type metadata accessor for Collaboration.Flow.View);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v24 + v23, v11, v7);
  v25 = sub_100283A94((uint64_t)v16, v30, v24);
  *(_QWORD *)&result = swift_release(v25).n128_u64[0];
  return result;
}

uint64_t sub_10030C100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5[2] = a4;
  v5[3] = a5;
  v6 = type metadata accessor for DismissAction(0);
  v5[4] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[5] = v7;
  v5[6] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100005574(&qword_10049F388);
  v5[7] = v8;
  v5[8] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100005574(&qword_10049F3E0);
  v5[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Playlist(0);
  v5[10] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v5[11] = v11;
  v5[12] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MainActor(0);
  v5[13] = static MainActor.shared.getter(v12);
  v13 = dispatch thunk of Actor.unownedExecutor.getter(v12, &protocol witness table for MainActor);
  v5[14] = v13;
  v5[15] = v14;
  return swift_task_switch(sub_10030C208, v13, v14);
}

uint64_t sub_10030C208()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v19;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 72);
  *(_QWORD *)(v0 + 128) = type metadata accessor for Collaboration.Flow.View(0);
  Collaboration.Object.musicItem.getter(v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    v4 = *(_QWORD *)(v0 + 72);
    swift_release(*(_QWORD *)(v0 + 104));
    sub_100008758(v4, &qword_10049F3E0);
    v5 = sub_10031471C();
    v6 = swift_allocError(&type metadata for Collaboration.Error, v5, 0, 0);
    *(_OWORD *)v7 = xmmword_100384B10;
    *(_BYTE *)(v7 + 16) = 3;
    swift_willThrow((__n128)xmmword_100384B10);
    v8 = *(_QWORD *)(v0 + 128);
    v9 = *(_QWORD *)(v0 + 56);
    v10 = *(uint64_t **)(v0 + 64);
    v12 = *(_QWORD *)(v0 + 40);
    v11 = *(_QWORD *)(v0 + 48);
    v13 = *(_QWORD *)(v0 + 32);
    v14 = *(_QWORD *)(v0 + 16);
    *v10 = v6;
    swift_storeEnumTagMultiPayload(v10, v9, 1);
    swift_errorRetain(v6);
    sub_1002BDE04(v11);
    DismissAction.callAsFunction()();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
    (*(void (**)(uint64_t *))(v14 + *(int *)(v8 + 48)))(v10);
    swift_errorRelease(v6);
    sub_100008758((uint64_t)v10, &qword_10049F388);
    v15 = *(_QWORD *)(v0 + 64);
    v16 = *(_QWORD *)(v0 + 72);
    v17 = *(_QWORD *)(v0 + 48);
    swift_task_dealloc(*(_QWORD *)(v0 + 96));
    swift_task_dealloc(v16);
    swift_task_dealloc(v15);
    swift_task_dealloc(v17);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 32))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
    v19 = (_QWORD *)swift_task_alloc(dword_100491304);
    *(_QWORD *)(v0 + 136) = v19;
    *v19 = v0;
    v19[1] = sub_10030C400;
    return Collaboration.Manager.moderate(_:collaborator:in:)(1, *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 96));
  }
}

uint64_t sub_10030C400()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 136);
  *(_QWORD *)(*v1 + 144) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_100315470;
  else
    v4 = sub_100315474;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 112), *(_QWORD *)(v2 + 120));
}

id _s9MusicCore13CollaborationO0aB2UIE4FlowO4ViewV13_isRestricted33_4FA82EB282576B4095E3FA5F35E498B8LL05SwiftD05StateVySbGvpfi_0()
{
  id v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  __n128 v8;
  id v10;

  v0 = objc_msgSend((id)objc_opt_self(ICUserIdentityStore), "defaultIdentityStore");
  sub_100315240();
  v1 = static ICUserIdentity.active.getter();
  v10 = 0;
  v2 = objc_msgSend(v0, "getPropertiesForUserIdentity:error:", v1, &v10);

  v3 = v10;
  if (v2)
  {
    v4 = v10;
    v5 = objc_msgSend(v2, "isU18MinorAccount");

  }
  else
  {
    v6 = v10;
    v7 = _convertNSErrorToError(_:)(v3);

    swift_willThrow(v8);
    swift_errorRelease(v7);
    return 0;
  }
  return v5;
}

uint64_t sub_10030C574()
{
  uint64_t v0;

  v0 = type metadata accessor for InlineProfileEditingView.Context(0);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  return InlineProfileEditingView.Context.init()();
}

uint64_t sub_10030C5A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10030D2EC(a1, 0, &qword_10049EEF0, (uint64_t (*)(uint64_t))sub_100306C5C, a2);
}

uint64_t sub_10030C5C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  sub_100005574(&qword_10049EC70);
  __chkstk_darwin();
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = Image.init(systemName:)(0x322E6E6F73726570, 0xED00006C6C69662ELL);
  static SymbolRenderingMode.hierarchical.getter(v4);
  v5 = type metadata accessor for SymbolRenderingMode(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v3, 0, 1, v5);
  v6 = Image.symbolRenderingMode(_:)(v3, v4);
  swift_release(v4);
  sub_100008758((uint64_t)v3, &qword_10049EC70);
  v8 = static Color.accentColor.getter(v7);
  result = swift_getKeyPath(&unk_10039DC28);
  *a1 = v6;
  a1[1] = result;
  a1[2] = v8;
  return result;
}

uint64_t sub_10030C6C0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t KeyPath;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  double v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  char v95;
  _QWORD *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  __n128 v100;
  uint64_t v101;
  __n128 v102;
  uint64_t v103;
  uint64_t v104;
  double v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  __C::_NSRange v109;
  uint64_t v110;
  unint64_t v111;
  char v112;
  uint64_t v113;
  char v114;
  uint64_t v115;
  char v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char v123;
  char v124;
  unint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  void *v128;
  uint64_t v129;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t *v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  char *v146;
  char *v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  uint64_t v155;
  uint64_t v156;
  _QWORD *v157;
  char *v158;
  uint64_t v159;
  _BYTE v160[133];
  _BYTE v161[133];
  char v162;
  _BYTE v163[11];
  __int16 v164;
  char v165;
  _QWORD v166[2];
  char v167;
  _BYTE v168[7];
  _QWORD *v169;
  __int16 v170;
  int v171;
  __int16 v172;
  uint64_t v173;
  char v174;
  _BYTE v175[7];
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char v180;
  _BYTE v181[7];
  double v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char v186;
  uint64_t v187;
  uint64_t v188;
  __n128 v189;
  char v190;
  uint64_t v191;
  char v192;
  uint64_t v193;
  char v194;
  _QWORD *v195;
  unint64_t v196;
  uint64_t v197;
  uint64_t v198;

  v156 = a2;
  v157 = a1;
  v2 = type metadata accessor for Font.Leading(0);
  v154 = *(_QWORD *)(v2 - 8);
  v155 = v2;
  __chkstk_darwin();
  v147 = (char *)&v131 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = sub_100005574(&qword_10049B888);
  __chkstk_darwin();
  v141 = (uint64_t *)((char *)&v131 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100005574(&qword_10049B890);
  __chkstk_darwin();
  v139 = (char *)&v131 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v7 = (char *)&v131 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v153 - 8);
  __chkstk_darwin();
  v10 = (char *)&v131 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v12 = (char *)&v131 - v11;
  v132 = sub_100005574(&qword_10049B898);
  __chkstk_darwin();
  v135 = (char *)&v131 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = sub_100005574(&qword_10049B8A0);
  __chkstk_darwin();
  v136 = (uint64_t)&v131 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = sub_100005574((uint64_t *)&unk_10049F720);
  __chkstk_darwin();
  v138 = (uint64_t)&v131 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_10049F218);
  __chkstk_darwin();
  v142 = (uint64_t)&v131 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100005574(&qword_10049F220);
  v150 = *(_QWORD *)(v17 - 8);
  v151 = v17;
  __chkstk_darwin();
  v140 = (uint64_t)&v131 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for Collaboration.Flow(0);
  __chkstk_darwin();
  v21 = (char *)&v131 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v23 = (char *)&v131 - v22;
  sub_100005574(&qword_10049F228);
  __chkstk_darwin();
  v159 = (uint64_t)&v131 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v26 = (char *)&v131 - v25;
  v148 = (uint64_t)v157 + *(int *)(_s4FlowO18ProfileEditingViewVMa(0) + 20);
  sub_100082248(v148, (uint64_t)v23, type metadata accessor for Collaboration.Flow);
  v152 = v19;
  swift_storeEnumTagMultiPayload(v21, v19, 2);
  LOBYTE(v19) = _s9MusicCore13CollaborationO0aB2UIE4FlowO21__derived_enum_equalsySbAF_AFtFZ_0((uint64_t)v23, (uint64_t)v21);
  v149 = v21;
  sub_100006798((uint64_t)v21, type metadata accessor for Collaboration.Flow);
  sub_100006798((uint64_t)v23, type metadata accessor for Collaboration.Flow);
  v158 = v26;
  v145 = v8;
  v146 = v7;
  v143 = v10;
  v144 = v12;
  if ((v19 & 1) != 0)
  {
    v27 = 1;
    v29 = v154;
    v28 = v155;
    v30 = v151;
  }
  else
  {
    String.LocalizationValue.init(stringLiteral:)(0x7341206E696F4ALL, 0xE700000000000000);
    v31 = v153;
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v12, v153);
    v32 = v31;
    if (qword_100498860 != -1)
      swift_once(&qword_100498860, sub_100232E30);
    v33 = qword_1004A2F90;
    static Locale.current.getter((id)qword_1004A2F90);
    v34 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v33, v7, 0, 0, 256);
    v36 = v35;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v32);
    v187 = v34;
    v188 = v36;
    v37 = sub_10024AF7C();
    v38 = Text.init<A>(_:)(&v187, &type metadata for String, v37);
    v40 = v39;
    v42 = v41;
    v44 = v43 & 1;
    v45 = enum case for Text.Case.uppercase(_:);
    v46 = type metadata accessor for Text.Case(0);
    v47 = *(_QWORD *)(v46 - 8);
    v48 = (uint64_t)v139;
    (*(void (**)(char *, uint64_t, uint64_t))(v47 + 104))(v139, v45, v46);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v47 + 56))(v48, 0, 1, v46);
    KeyPath = swift_getKeyPath(&unk_10039DC88);
    v50 = v141;
    sub_100014A7C(v48, (uint64_t)v141 + *(int *)(v137 + 28), &qword_10049B890);
    *v50 = KeyPath;
    v51 = (uint64_t)v135;
    sub_100014A7C((uint64_t)v50, (uint64_t)&v135[*(int *)(v132 + 36)], &qword_10049B888);
    *(_QWORD *)v51 = v38;
    *(_QWORD *)(v51 + 8) = v40;
    *(_BYTE *)(v51 + 16) = v44;
    *(_QWORD *)(v51 + 24) = v42;
    sub_10003B4C0(v38, v40, v44);
    swift_bridgeObjectRetain();
    sub_100008758((uint64_t)v50, &qword_10049B888);
    sub_100008758(v48, &qword_10049B890);
    sub_10003B4D0(v38, v40, v44);
    v52 = swift_bridgeObjectRelease();
    v53 = static Font.footnote.getter(v52);
    v54 = swift_getKeyPath(&unk_10039DCB8);
    v55 = v136;
    sub_100014A7C(v51, v136, &qword_10049B898);
    v56 = (uint64_t *)(v55 + *(int *)(v133 + 36));
    *v56 = v54;
    v56[1] = v53;
    sub_100008758(v51, &qword_10049B898);
    v58 = static Color.secondary.getter(v57);
    v59 = swift_getKeyPath(&unk_10039DC28);
    v60 = v138;
    sub_100014A7C(v55, v138, &qword_10049B8A0);
    v61 = (uint64_t *)(v60 + *(int *)(v134 + 36));
    *v61 = v59;
    v61[1] = v58;
    v62 = sub_100008758(v55, &qword_10049B8A0);
    v63 = static Alignment.leading.getter(v62);
    v64 = v142;
    sub_100315B50(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v142, 0.0, 1, 0.0, 1, v63, v65);
    v66 = sub_100008758(v60, (uint64_t *)&unk_10049F720);
    LOBYTE(v58) = static Edge.Set.horizontal.getter(v66);
    v67 = EdgeInsets.init(_all:)(12.0);
    v69 = v68;
    v71 = v70;
    v73 = v72;
    v74 = v140;
    sub_100014A7C(v64, v140, &qword_10049F218);
    v30 = v151;
    v75 = v74 + *(int *)(v151 + 36);
    *(_BYTE *)v75 = v58;
    *(double *)(v75 + 8) = v67;
    *(_QWORD *)(v75 + 16) = v69;
    *(_QWORD *)(v75 + 24) = v71;
    *(_QWORD *)(v75 + 32) = v73;
    *(_BYTE *)(v75 + 40) = 0;
    sub_100008758(v64, &qword_10049F218);
    v76 = v74;
    v26 = v158;
    sub_1000149A8(v76, (uint64_t)v158, &qword_10049F220);
    v27 = 0;
    v29 = v154;
    v28 = v155;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v150 + 56))(v26, v27, 1, v30);
  swift_retain(*v157);
  sub_10031A904(v77, &v189);
  sub_100082248(v148, (uint64_t)v23, type metadata accessor for Collaboration.Flow);
  v78 = (uint64_t)v149;
  swift_storeEnumTagMultiPayload(v149, v152, 2);
  v79 = _s9MusicCore13CollaborationO0aB2UIE4FlowO21__derived_enum_equalsySbAF_AFtFZ_0((uint64_t)v23, v78);
  sub_100006798(v78, type metadata accessor for Collaboration.Flow);
  sub_100006798((uint64_t)v23, type metadata accessor for Collaboration.Flow);
  if ((v79 & 1) != 0)
  {
    sub_10031386C((uint64_t)v166);
    sub_1000149A8((uint64_t)v166, (uint64_t)&v187, &qword_10049F230);
  }
  else
  {
    v80 = v144;
    String.LocalizationValue.init(stringLiteral:)(0xD000000000000054, 0x80000001003BAC60);
    v81 = v145;
    v82 = v143;
    v83 = v153;
    (*(void (**)(char *, char *, uint64_t))(v145 + 16))(v143, v80, v153);
    if (qword_100498860 != -1)
      swift_once(&qword_100498860, sub_100232E30);
    v84 = qword_1004A2F90;
    v85 = (id)qword_1004A2F90;
    v86 = v146;
    static Locale.current.getter(v85);
    v87 = String.init(localized:table:bundle:locale:comment:)(v82, 0, 0, v84, v86, 0, 0, 256);
    v89 = v88;
    (*(void (**)(char *, uint64_t))(v81 + 8))(v80, v83);
    v187 = v87;
    v188 = v89;
    v90 = sub_10024AF7C();
    v91 = Text.init<A>(_:)(&v187, &type metadata for String, v90);
    v93 = v92;
    v95 = v94;
    v157 = v96;
    v155 = swift_getKeyPath(&unk_10039DCE8);
    v97 = static Font.footnote.getter(v155);
    v98 = v147;
    (*(void (**)(char *, _QWORD, uint64_t))(v29 + 104))(v147, enum case for Font.Leading.tight(_:), v28);
    v99 = Font.leading(_:)(v98, v97);
    v100 = swift_release(v97);
    (*(void (**)(char *, uint64_t, __n128))(v29 + 8))(v98, v28, v100);
    v101 = swift_getKeyPath(&unk_10039DCB8);
    v103 = static Color.secondary.getter(v102);
    v104 = swift_getKeyPath(&unk_10039DC28);
    LOBYTE(v98) = static Edge.Set.horizontal.getter(v104);
    v105 = EdgeInsets.init(_all:)(12.0);
    v165 = v95 & 1;
    v162 = 0;
    v166[0] = v91;
    v166[1] = v93;
    v167 = v95 & 1;
    *(_DWORD *)v168 = *(_DWORD *)v161;
    *(_DWORD *)&v168[3] = *(_DWORD *)&v161[3];
    v169 = v157;
    v170 = 256;
    v171 = *(_DWORD *)&v163[7];
    v172 = v164;
    v173 = v155;
    v174 = 1;
    *(_DWORD *)&v175[3] = *(_DWORD *)&v160[3];
    *(_DWORD *)v175 = *(_DWORD *)v160;
    v176 = v101;
    v177 = v99;
    v178 = v104;
    v179 = v103;
    v180 = (char)v98;
    *(_DWORD *)&v181[3] = *(_DWORD *)&v163[3];
    *(_DWORD *)v181 = *(_DWORD *)v163;
    v182 = v105;
    v183 = v106;
    v184 = v107;
    v185 = v108;
    v186 = 0;
    v109.location = (Swift::Int)v166;
    CFRange.init(_:)(v109);
    sub_1000149A8((uint64_t)v166, (uint64_t)&v187, &qword_10049F230);
    v26 = v158;
  }
  v110 = v159;
  sub_100014A7C((uint64_t)v26, v159, &qword_10049F228);
  v111 = v189.n128_u64[1];
  v112 = v190;
  v113 = v191;
  v114 = v192;
  v115 = v193;
  v116 = v194;
  v117 = v196;
  v157 = v195;
  v118 = v198;
  v153 = v197;
  v154 = v189.n128_u64[0];
  sub_1000149A8((uint64_t)&v187, (uint64_t)v160, &qword_10049F230);
  v119 = v110;
  v120 = v156;
  sub_100014A7C(v119, v156, &qword_10049F228);
  v121 = sub_100005574(&qword_10049F238);
  v122 = v120 + *(int *)(v121 + 48);
  v123 = v114 & 1;
  v124 = v116 & 1;
  *(_QWORD *)v122 = v154;
  *(_QWORD *)(v122 + 8) = v111;
  v125 = v111;
  v155 = v111;
  *(_BYTE *)(v122 + 16) = v112 & 1;
  *(_QWORD *)(v122 + 24) = v113;
  *(_BYTE *)(v122 + 32) = v123;
  v126 = v115;
  *(_QWORD *)(v122 + 40) = v115;
  *(_BYTE *)(v122 + 48) = v124;
  v127 = v157;
  *(_QWORD *)(v122 + 56) = v157;
  *(_QWORD *)(v122 + 64) = v117;
  v128 = (void *)v153;
  *(_QWORD *)(v122 + 72) = v153;
  *(_QWORD *)(v122 + 80) = v118;
  v129 = v120 + *(int *)(v121 + 64);
  sub_1000149A8((uint64_t)v160, (uint64_t)v161, &qword_10049F230);
  sub_1000149A8((uint64_t)v161, v129, &qword_10049F230);
  swift_retain(v127);
  swift_retain(v125);
  swift_retain(v113);
  swift_retain(v126);
  sub_1003136B8(v117, v128);
  swift_retain(v118);
  sub_100313760((uint64_t)v161, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1003136E8);
  sub_100008758((uint64_t)v158, &qword_10049F228);
  sub_1000149A8((uint64_t)v160, (uint64_t)v166, &qword_10049F230);
  sub_100313760((uint64_t)v166, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1003137C4);
  swift_release(v157);
  swift_release(v126);
  swift_release(v113);
  swift_release(v155);
  sub_10031383C(v117, v128);
  swift_release(v118);
  return sub_100008758(v159, &qword_10049F228);
}

uint64_t sub_10030D2D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10030D2EC(a1, 0x4018000000000000, &qword_10049F210, (uint64_t (*)(uint64_t))sub_10030C6C0, a2);
}

uint64_t sub_10030D2EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X3>, uint64_t (*a4)(uint64_t)@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5;

  *(_QWORD *)a5 = static HorizontalAlignment.center.getter(a1);
  *(_QWORD *)(a5 + 8) = a2;
  *(_BYTE *)(a5 + 16) = 0;
  sub_100005574(a3);
  return a4(v5);
}

uint64_t sub_10030D348@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  double v27;
  uint64_t v28;
  __n128 v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t KeyPath;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  unint64_t v44;
  char *v45;
  double v46;
  double *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __n128 v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  int v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  double *v80;
  uint64_t v81;
  uint64_t v82;
  char v83[16];
  uint64_t v84;
  _OWORD v85[7];

  v2 = v1;
  v82 = a1;
  v74 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin();
  v80 = (double *)((char *)&v71 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v79 = sub_100005574(&qword_10049F190);
  __chkstk_darwin();
  v81 = (uint64_t)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100005574((uint64_t *)&unk_10049F710);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_10049F198);
  __chkstk_darwin();
  v10 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100005574(&qword_10049F1A0);
  __chkstk_darwin();
  v13 = (char *)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_100005574(&qword_10049F1A8);
  __chkstk_darwin();
  v15 = (char *)&v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = sub_100005574(&qword_10049F1B0);
  v77 = *(_QWORD *)(v78 - 8);
  __chkstk_darwin();
  v76 = (char *)&v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = sub_100005574(&qword_10049F1B8);
  __chkstk_darwin();
  v75 = (char *)&v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = swift_allocObject(&unk_100463388, 81, 7);
  v19 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v18 + 48) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v18 + 64) = v19;
  *(_BYTE *)(v18 + 80) = *(_BYTE *)(v2 + 64);
  v20 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v18 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v18 + 32) = v20;
  v84 = v2;
  sub_10031330C(v2);
  v21 = sub_100005574(&qword_10049F1C0);
  v22 = sub_100313370();
  v23 = Button.init(action:label:)(sub_1003132FC, v18, sub_100313304, v83, v21, v22);
  v24 = static Alignment.center.getter(v23);
  v27 = sub_100315BA8(0, 1, 0.0, 1, INFINITY, 0, 0, 1, (uint64_t)v10, v26, 0.0, 1, 0.0, 1, v24, v25);
  v28 = (*(uint64_t (**)(char *, uint64_t, double))(v6 + 8))(v8, v5, v27);
  v30 = *(_BYTE *)(v2 + 16);
  if ((v30 & 1) != 0)
    v31 = static Color.accentColor.getter(v29);
  else
    v31 = static Color.white.getter(v28);
  v32 = v31;
  KeyPath = swift_getKeyPath(&unk_10039DC28);
  sub_100014A7C((uint64_t)v10, (uint64_t)v13, &qword_10049F198);
  v34 = (uint64_t *)&v13[*(int *)(v11 + 36)];
  *v34 = KeyPath;
  v34[1] = v32;
  v35 = sub_100008758((uint64_t)v10, &qword_10049F198);
  if (qword_100498C18 != -1)
    v35 = swift_once(&qword_100498C18, sub_10030DDBC);
  v36 = qword_10049EE90;
  v37 = static Alignment.center.getter(v35);
  LOBYTE(v70) = 1;
  LOBYTE(v69) = 1;
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v85, 0, 1, 0, 1, 0, 1, v36, 0, 0, v69, 0, v70, v37, v38);
  sub_100014A7C((uint64_t)v13, (uint64_t)v15, &qword_10049F1A0);
  v39 = v72;
  v40 = &v15[*(int *)(v72 + 36)];
  v41 = v85[5];
  *((_OWORD *)v40 + 4) = v85[4];
  *((_OWORD *)v40 + 5) = v41;
  *((_OWORD *)v40 + 6) = v85[6];
  v42 = v85[1];
  *(_OWORD *)v40 = v85[0];
  *((_OWORD *)v40 + 1) = v42;
  v43 = v85[3];
  *((_OWORD *)v40 + 2) = v85[2];
  *((_OWORD *)v40 + 3) = v43;
  sub_100008758((uint64_t)v13, &qword_10049F1A0);
  v44 = sub_100313498();
  v45 = v76;
  View.bold(_:)(1, v39, v44);
  sub_100008758((uint64_t)v15, &qword_10049F1A8);
  v46 = *(double *)&qword_10049EE90 * 0.5;
  v47 = v80;
  v48 = (char *)v80 + *(int *)(v74 + 20);
  v49 = enum case for RoundedCornerStyle.continuous(_:);
  v50 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 104))(v48, v49, v50);
  *v47 = v46;
  v47[1] = v46;
  v51 = *(_QWORD *)(v2 + 56);
  LOBYTE(v49) = *(_BYTE *)(v2 + 64);
  sub_100301C50(v51, v49);
  LOBYTE(v39) = sub_1002BE254(v51, v49);
  v53.n128_f64[0] = sub_1002D0564(v51, v49);
  if ((v39 & 1) != 0)
  {
    if ((v30 & 1) != 0)
      v54 = static Color.clear.getter(v52);
    else
      v54 = static Color.accentColor.getter(v53);
  }
  else
  {
    v55 = objc_msgSend((id)objc_opt_self(UIColor), "systemFillColor");
    v54 = Color.init(_:)(v55);
  }
  v56 = v54;
  v57 = v81;
  sub_100082248((uint64_t)v47, v81, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v58 = v79;
  *(_QWORD *)(v57 + *(int *)(v79 + 52)) = v56;
  *(_WORD *)(v57 + *(int *)(v58 + 56)) = 256;
  v59 = sub_100006798((uint64_t)v47, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v60 = static Alignment.center.getter(v59);
  v62 = v61;
  v63 = (uint64_t)v75;
  v64 = (uint64_t)&v75[*(int *)(v73 + 36)];
  sub_100014A7C(v57, v64, &qword_10049F190);
  v65 = (uint64_t *)(v64 + *(int *)(sub_100005574(&qword_10049F200) + 36));
  *v65 = v60;
  v65[1] = v62;
  v66 = v77;
  v67 = v78;
  (*(void (**)(uint64_t, char *, uint64_t))(v77 + 16))(v63, v45, v78);
  sub_100008758(v57, &qword_10049F190);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v45, v67);
  return sub_1000149A8(v63, v82, &qword_10049F1B8);
}

uint64_t sub_10030D9E8(uint64_t a1)
{
  uint64_t v2;
  char v4;
  __int128 v5;

  v5 = *(_OWORD *)(a1 + 40);
  v4 = 1;
  v2 = sub_100005574(&qword_10049C5C8);
  State.wrappedValue.setter(&v4, v2);
  return (*(uint64_t (**)(uint64_t))(a1 + 24))(a1);
}

uint64_t sub_10030DA44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  _QWORD v46[2];
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  _OWORD v57[10];

  v46[1] = a2;
  v46[0] = sub_100005574(&qword_10049F208);
  __chkstk_darwin();
  v4 = (_OWORD *)((char *)v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_100005574(&qword_10049E4B8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_100005574(&qword_10049F1D8);
  __chkstk_darwin();
  v10 = (char *)v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v12 = (char *)v46 - v11;
  v57[0] = *(_OWORD *)(a1 + 40);
  v13 = sub_100005574(&qword_10049C5C8);
  v14 = State.wrappedValue.getter(&v48, v13);
  if (v48 == 1)
  {
    v15 = ProgressView<>.init<>()(v14);
    v16 = static Color.white.getter(v15);
    KeyPath = swift_getKeyPath(&unk_10039DC58);
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v10, v8, v5);
    v18 = (uint64_t *)&v10[*(int *)(v47 + 36)];
    *v18 = KeyPath;
    v18[1] = v16;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_1000149A8((uint64_t)v10, (uint64_t)v12, &qword_10049F1D8);
    sub_100014A7C((uint64_t)v12, (uint64_t)v4, &qword_10049F1D8);
    swift_storeEnumTagMultiPayload(v4, v46[0], 0);
    v19 = sub_100005574(&qword_10049EA00);
    v20 = sub_1003133F4();
    v21 = sub_1003139EC(&qword_10049E9F8, &qword_10049EA00);
    _ConditionalContent<>.init(storage:)(v4, v47, v19, v20, v21);
    return sub_100008758((uint64_t)v12, &qword_10049F1D8);
  }
  else
  {
    v23 = *(_QWORD *)(a1 + 8);
    *(_QWORD *)&v57[0] = *(_QWORD *)a1;
    *((_QWORD *)&v57[0] + 1) = v23;
    v24 = sub_10024AF7C();
    swift_bridgeObjectRetain();
    v25 = Text.init<A>(_:)(v57, &type metadata for String, v24);
    v27 = v26;
    v29 = v28;
    v31 = v30 & 1;
    v32 = static Alignment.center.getter(v25);
    sub_1003156F4(0, 1, 0.0, 1, INFINITY, 0, 0, 1, (uint64_t)&v48, v34, 0.0, 1, 0.0, 1, v32, v33, v25, v27, v31, v29);
    sub_10003B4D0(v25, v27, v31);
    swift_bridgeObjectRelease();
    v35 = v55;
    v57[6] = v54;
    v57[7] = v55;
    v36 = v56;
    v57[8] = v56;
    v37 = v50;
    v38 = v51;
    v57[2] = v50;
    v57[3] = v51;
    v40 = v52;
    v39 = v53;
    v57[4] = v52;
    v57[5] = v53;
    v42 = v48;
    v41 = v49;
    v57[0] = v48;
    v57[1] = v49;
    v4[6] = v54;
    v4[7] = v35;
    v4[8] = v36;
    v4[2] = v37;
    v4[3] = v38;
    v4[4] = v40;
    v4[5] = v39;
    *v4 = v42;
    v4[1] = v41;
    swift_storeEnumTagMultiPayload(v4, v46[0], 1);
    v43 = sub_100005574(&qword_10049EA00);
    v44 = sub_1003133F4();
    v45 = sub_1003139EC(&qword_10049E9F8, &qword_10049EA00);
    return _ConditionalContent<>.init(storage:)(v4, v47, v43, v44, v45);
  }
}

void sub_10030DDBC()
{
  id v0;
  id v1;
  double v2;

  v0 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  v1 = objc_msgSend(v0, "userInterfaceIdiom");

  v2 = 50.0;
  if (v1 == (id)6)
    v2 = 44.0;
  qword_10049EE90 = *(_QWORD *)&v2;
}

uint64_t sub_10030DE2C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.isEnabled.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_10030DE58(unsigned __int8 *a1)
{
  return EnvironmentValues.isEnabled.setter(*a1);
}

uint64_t sub_10030DE7C@<X0>(uint64_t a1@<X8>)
{
  return sub_10030D348(a1);
}

void sub_10030DEBC()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  v1 = objc_msgSend(v0, "userInterfaceIdiom");

  byte_10049EE98 = v1 == (id)6;
}

uint64_t sub_10030DF1C()
{
  double v0;
  uint64_t result;

  if (qword_100498C20 != -1)
    result = swift_once(&qword_100498C20, sub_10030DEBC);
  v0 = 180.0;
  if (byte_10049EE98)
    v0 = 140.0;
  qword_10049EEA0 = *(_QWORD *)&v0;
  return result;
}

uint64_t sub_10030DF84()
{
  double v0;
  uint64_t result;

  if (qword_100498C20 != -1)
    result = swift_once(&qword_100498C20, sub_10030DEBC);
  v0 = 24.0;
  if (byte_10049EE98)
    v0 = 16.0;
  qword_10049EEA8 = *(_QWORD *)&v0;
  return result;
}

uint64_t sub_10030DFDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;

  v0 = type metadata accessor for Font.Leading(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin();
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100498C20 != -1)
    v2 = swift_once(&qword_100498C20, sub_10030DEBC);
  if (byte_10049EE98 == 1)
  {
    result = static Font.subheadline.getter(v2);
    v6 = result;
  }
  else
  {
    v7 = static Font.body.getter();
    (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v4, enum case for Font.Leading.tight(_:), v0);
    v6 = Font.leading(_:)(v4, v7);
    v8 = swift_release(v7);
    result = (*(uint64_t (**)(char *, uint64_t, __n128))(v1 + 8))(v4, v0, v8);
  }
  qword_10049EEB0 = v6;
  return result;
}

uint64_t sub_10030E0D8()
{
  uint64_t v0;
  char *v1;
  double v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  sub_100005574(&qword_10049C6C8);
  __chkstk_darwin();
  v1 = (char *)&v6 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100498C20 != -1)
    swift_once(&qword_100498C20, sub_10030DEBC);
  if (byte_10049EE98)
    v2 = 58.0;
  else
    v2 = 52.0;
  v3 = type metadata accessor for Font.Design(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v1, 1, 1, v3);
  v4 = static Font.system(size:weight:design:)(0, 1, v1, v2);
  result = sub_100008758((uint64_t)v1, &qword_10049C6C8);
  qword_10049EEB8 = v4;
  return result;
}

uint64_t sub_10030E1D0()
{
  double v0;
  uint64_t result;

  if (qword_100498C20 != -1)
    result = swift_once(&qword_100498C20, sub_10030DEBC);
  v0 = 6.0;
  if (byte_10049EE98)
    v0 = 9.0;
  qword_10049EEC0 = *(_QWORD *)&v0;
  return result;
}

uint64_t ICMusicUserProfile.collaborator.getter@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;

  v2 = v1;
  v33 = a1;
  v3 = type metadata accessor for Collaboration.Flow.Collaborator(0);
  __chkstk_darwin();
  v5 = (uint64_t *)((char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100005574((uint64_t *)&unk_10049F430);
  __chkstk_darwin();
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v9 = (char *)&v30 - v8;
  v10 = type metadata accessor for Artwork(0);
  v31 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  v32 = v10;
  v31(v9, 1, 1);
  v11 = objc_msgSend(v2, "artworkInfo");
  if (v11)
  {
    v12 = v11;
    v13 = objc_msgSend(v11, "responseDictionary");

    if (v13)
    {
      v14 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v13, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

      v15 = sub_10030E4D8(v14);
      swift_bridgeObjectRelease();
      if (v15)
      {
        Artwork.init(_:)(v15);
        sub_100008758((uint64_t)v9, (uint64_t *)&unk_10049F430);
        sub_1000149A8((uint64_t)v7, (uint64_t)v9, (uint64_t *)&unk_10049F430);
      }
    }
  }
  v16 = objc_msgSend(v2, "name");
  v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v18 = v17;

  v19 = objc_msgSend(v2, "handle");
  if (v19)
  {
    v20 = v19;
    v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
    v23 = v22;

  }
  else
  {
    v21 = 0;
    v23 = 0;
  }
  sub_100014A7C((uint64_t)v9, (uint64_t)v7, (uint64_t *)&unk_10049F430);
  v24 = objc_msgSend(v2, "collaborationAllowed");
  v25 = (uint64_t)v7;
  v26 = v3;
  v27 = (uint64_t)v5 + *(int *)(v3 + 24);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v31)(v27, 1, 1, v32);
  v28 = *(int *)(v26 + 28);
  *((_BYTE *)v5 + v28) = 0;
  *v5 = v30;
  v5[1] = v18;
  v5[2] = v21;
  v5[3] = v23;
  sub_100305828(v25, v27);
  *((_BYTE *)v5 + v28) = v24;
  sub_1000648AC((uint64_t)v5, v33, type metadata accessor for Collaboration.Flow.Collaborator);
  return sub_100008758((uint64_t)v9, (uint64_t *)&unk_10049F430);
}

unint64_t sub_10030E4D8(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t result;
  int64_t v8;
  _OWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD v29[2];
  _OWORD v30[2];
  __int128 v31;
  _OWORD v32[2];
  _OWORD v33[2];
  _OWORD v34[2];
  _OWORD v35[2];
  uint64_t v36;
  _OWORD v37[2];
  _OWORD v38[2];
  uint64_t v39;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_100005574(&qword_10049F240);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v26 = a1 + 64;
  v4 = -1;
  v5 = -1 << *(_BYTE *)(a1 + 32);
  if (-v5 < 64)
    v4 = ~(-1 << -(char)v5);
  v6 = v4 & *(_QWORD *)(a1 + 64);
  v25 = (unint64_t)(63 - v5) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v11 = (v6 - 1) & v6;
      v12 = __clz(__rbit64(v6)) | (v8 << 6);
      v13 = v8;
    }
    else
    {
      v14 = v8 + 1;
      if (__OFADD__(v8, 1))
        goto LABEL_37;
      if (v14 >= v25)
      {
LABEL_33:
        sub_1000F38AC(a1);
        return (unint64_t)v3;
      }
      v15 = *(_QWORD *)(v26 + 8 * v14);
      v13 = v8 + 1;
      if (!v15)
      {
        v13 = v8 + 2;
        if (v8 + 2 >= v25)
          goto LABEL_33;
        v15 = *(_QWORD *)(v26 + 8 * v13);
        if (!v15)
        {
          v13 = v8 + 3;
          if (v8 + 3 >= v25)
            goto LABEL_33;
          v15 = *(_QWORD *)(v26 + 8 * v13);
          if (!v15)
          {
            v13 = v8 + 4;
            if (v8 + 4 >= v25)
              goto LABEL_33;
            v15 = *(_QWORD *)(v26 + 8 * v13);
            if (!v15)
            {
              v16 = v8 + 5;
              if (v8 + 5 >= v25)
                goto LABEL_33;
              v15 = *(_QWORD *)(v26 + 8 * v16);
              if (!v15)
              {
                while (1)
                {
                  v13 = v16 + 1;
                  if (__OFADD__(v16, 1))
                    goto LABEL_38;
                  if (v13 >= v25)
                    goto LABEL_33;
                  v15 = *(_QWORD *)(v26 + 8 * v13);
                  ++v16;
                  if (v15)
                    goto LABEL_26;
                }
              }
              v13 = v8 + 5;
            }
          }
        }
      }
LABEL_26:
      v11 = (v15 - 1) & v15;
      v12 = __clz(__rbit64(v15)) + (v13 << 6);
    }
    sub_10009B414(*(_QWORD *)(a1 + 48) + 40 * v12, (uint64_t)v37);
    sub_10000684C(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v38 + 8);
    v35[0] = v38[0];
    v35[1] = v38[1];
    v36 = v39;
    v34[0] = v37[0];
    v34[1] = v37[1];
    sub_10009B414((uint64_t)v34, (uint64_t)v29);
    if (!swift_dynamicCast(&v27, v29, &type metadata for AnyHashable, &type metadata for String, 6))
    {
      v27 = 0;
      v28 = 0;
      sub_100008758((uint64_t)v34, &qword_10049F248);
      swift_bridgeObjectRelease();
      sub_1000F38AC(a1);
      swift_release(v3);
      return 0;
    }
    v17 = v27;
    v18 = v28;
    sub_10000684C((uint64_t)v35 + 8, (uint64_t)v29);
    sub_100008758((uint64_t)v34, &qword_10049F248);
    sub_10009B168(v29, v30);
    *(_QWORD *)&v31 = v17;
    *((_QWORD *)&v31 + 1) = v18;
    sub_10009B168(v30, v32);
    v19 = v31;
    sub_10009B168(v32, v33);
    sub_10009B168(v33, &v31);
    result = sub_10009ABAC(v19, *((uint64_t *)&v19 + 1));
    v20 = result;
    if ((v21 & 1) != 0)
    {
      v9 = (_OWORD *)(v3[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v9 = v19;
      v10 = (_QWORD *)(v3[7] + 32 * v20);
      sub_10000682C(v10);
      result = (unint64_t)sub_10009B168(&v31, v10);
      goto LABEL_8;
    }
    if (v3[2] >= v3[3])
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_OWORD *)(v3[6] + 16 * result) = v19;
    result = (unint64_t)sub_10009B168(&v31, (_OWORD *)(v3[7] + 32 * result));
    v22 = v3[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
      goto LABEL_36;
    v3[2] = v24;
LABEL_8:
    v8 = v13;
    v6 = v11;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_10030E8A8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.multilineTextAlignment.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10030E8D0(unsigned __int8 *a1)
{
  return EnvironmentValues.multilineTextAlignment.setter(*a1);
}

uint64_t sub_10030E8F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.tintColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10030E91C(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.tintColor.setter(v1);
}

uint64_t _s9MusicCore13CollaborationO0aB2UIE4FlowO21__derived_enum_equalsySbAF_AFtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  int EnumCaseMultiPayload;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  char v30;
  void (*v31)(_BYTE *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  int v38;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int (*v49)(uint64_t, uint64_t, uint64_t);
  uint64_t v50;
  _QWORD *v51;
  void (*v52)(uint64_t, uint64_t);
  _QWORD *v53;
  char v54;
  char v55;
  void (*v56)(uint64_t, uint64_t);
  char v57;
  _BYTE v58[12];
  int v59;
  _BYTE *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _BYTE *v64;
  _BYTE *v65;
  _BYTE *v66;
  _BYTE *v67;
  uint64_t v68;
  uint64_t v69;
  _BYTE *v70;
  _BYTE *v71;

  v70 = (_BYTE *)a1;
  v71 = (_BYTE *)a2;
  v2 = type metadata accessor for Playlist.Collaborator(0);
  v66 = *(_BYTE **)(v2 - 8);
  v67 = (_BYTE *)v2;
  __chkstk_darwin();
  v65 = &v58[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Collaboration.Flow.Collaborator(0);
  v62 = *(_QWORD *)(v4 - 8);
  v63 = v4;
  __chkstk_darwin();
  v60 = &v58[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v61 = sub_100005574(&qword_10049F250);
  __chkstk_darwin();
  v64 = &v58[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for URL(0);
  v8 = *(_QWORD *)(v7 - 8);
  v68 = v7;
  v69 = v8;
  __chkstk_darwin();
  v10 = &v58[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  v12 = &v58[-v11];
  sub_100005574(&qword_10049EEE0);
  __chkstk_darwin();
  v14 = &v58[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  v16 = &v58[-v15];
  v17 = type metadata accessor for Collaboration.Flow(0);
  __chkstk_darwin();
  v19 = &v58[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  v21 = &v58[-v20];
  sub_100005574(&qword_10049F258);
  v22 = __chkstk_darwin();
  v24 = &v58[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v25 = (uint64_t)&v24[*(int *)(v22 + 48)];
  sub_100082248((uint64_t)v70, (uint64_t)v24, type metadata accessor for Collaboration.Flow);
  sub_100082248((uint64_t)v71, v25, type metadata accessor for Collaboration.Flow);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v24, v17);
  if (!EnumCaseMultiPayload)
  {
    v66 = v14;
    v67 = v16;
    v70 = v10;
    v71 = v12;
    v33 = v68;
    v32 = v69;
    sub_100082248((uint64_t)v24, (uint64_t)v21, type metadata accessor for Collaboration.Flow);
    v34 = sub_100005574(&qword_10049EED8);
    v35 = *(int *)(v34 + 48);
    v36 = &v21[v35];
    v37 = *(int *)(v34 + 64);
    v38 = v21[v37];
    if (swift_getEnumCaseMultiPayload(v25, v17))
    {
      (*(void (**)(_BYTE *, uint64_t))(v32 + 8))(&v21[v35], v33);
      sub_100008758((uint64_t)v21, &qword_10049EEE0);
LABEL_10:
      sub_100008758((uint64_t)v24, &qword_10049F258);
LABEL_11:
      v30 = 0;
      return v30 & 1;
    }
    LODWORD(v65) = v38;
    v40 = (_BYTE *)(v25 + v35);
    v59 = *(unsigned __int8 *)(v25 + v37);
    v41 = (uint64_t)v67;
    sub_1000149A8(v25, (uint64_t)v67, &qword_10049EEE0);
    v42 = v32;
    v43 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v32 + 32);
    v44 = v33;
    v43(v71, v36, v33);
    v45 = (uint64_t)v70;
    v43(v70, v40, v44);
    v46 = v64;
    v47 = (uint64_t)&v64[*(int *)(v61 + 48)];
    sub_1000149A8((uint64_t)v21, (uint64_t)v64, &qword_10049EEE0);
    sub_100014A7C(v41, v47, &qword_10049EEE0);
    v48 = v63;
    v49 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48);
    if (v49((uint64_t)v46, 1, v63) == 1)
    {
      if (v49(v47, 1, v48) == 1)
      {
        sub_100008758((uint64_t)v46, &qword_10049EEE0);
        v50 = (uint64_t)v71;
        goto LABEL_21;
      }
    }
    else
    {
      v51 = v66;
      sub_100014A7C((uint64_t)v46, (uint64_t)v66, &qword_10049EEE0);
      if (v49(v47, 1, v48) != 1)
      {
        v53 = v60;
        sub_1000648AC(v47, (uint64_t)v60, type metadata accessor for Collaboration.Flow.Collaborator);
        v54 = _s9MusicCore13CollaborationO0aB2UIE4FlowO12CollaboratorV23__derived_struct_equalsySbAH_AHtFZ_0(v51, v53);
        sub_100006798((uint64_t)v53, type metadata accessor for Collaboration.Flow.Collaborator);
        sub_100006798((uint64_t)v51, type metadata accessor for Collaboration.Flow.Collaborator);
        sub_100008758((uint64_t)v46, &qword_10049EEE0);
        v50 = (uint64_t)v71;
        if ((v54 & 1) != 0)
        {
LABEL_21:
          v55 = static URL.== infix(_:_:)(v50, v45);
          v56 = *(void (**)(uint64_t, uint64_t))(v42 + 8);
          v56(v45, v44);
          v56(v50, v44);
          sub_100008758(v41, &qword_10049EEE0);
          if ((v55 & 1) != 0)
          {
            v57 = v65 ^ v59;
            sub_100006798((uint64_t)v24, type metadata accessor for Collaboration.Flow);
            v30 = v57 ^ 1;
            return v30 & 1;
          }
          goto LABEL_23;
        }
LABEL_19:
        v52 = *(void (**)(uint64_t, uint64_t))(v42 + 8);
        v52(v45, v44);
        v52(v50, v44);
        sub_100008758(v41, &qword_10049EEE0);
LABEL_23:
        sub_100006798((uint64_t)v24, type metadata accessor for Collaboration.Flow);
        goto LABEL_11;
      }
      sub_100006798((uint64_t)v51, type metadata accessor for Collaboration.Flow.Collaborator);
    }
    sub_100008758((uint64_t)v46, &qword_10049F250);
    v50 = (uint64_t)v71;
    goto LABEL_19;
  }
  if (EnumCaseMultiPayload != 1)
  {
    if (swift_getEnumCaseMultiPayload(v25, v17) == 2)
    {
      sub_100006798((uint64_t)v24, type metadata accessor for Collaboration.Flow);
      v30 = 1;
      return v30 & 1;
    }
    goto LABEL_10;
  }
  sub_100082248((uint64_t)v24, (uint64_t)v19, type metadata accessor for Collaboration.Flow);
  if (swift_getEnumCaseMultiPayload(v25, v17) != 1)
  {
    (*((void (**)(_BYTE *, _BYTE *))v66 + 1))(v19, v67);
    goto LABEL_10;
  }
  v28 = v65;
  v27 = (uint64_t)v66;
  v29 = (uint64_t)v67;
  (*((void (**)(_BYTE *, uint64_t, _BYTE *))v66 + 4))(v65, v25, v67);
  v30 = static Playlist.Collaborator.== infix(_:_:)(v19, v28);
  v31 = *(void (**)(_BYTE *, uint64_t))(v27 + 8);
  v31(v28, v29);
  v31(v19, v29);
  sub_100006798((uint64_t)v24, type metadata accessor for Collaboration.Flow);
  return v30 & 1;
}

uint64_t _s9MusicCore13CollaborationO0aB2UIE4FlowO12CollaboratorV23__derived_struct_equalsySbAH_AHtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  void (*v35)(_BYTE *, uint64_t);
  _BYTE v37[4];
  int v38;
  _BYTE *v39;
  uint64_t v40;
  _BYTE *v41;

  v4 = type metadata accessor for Artwork(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = &v37[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_100005574(&qword_100499E58);
  __chkstk_darwin();
  v10 = &v37[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100005574((uint64_t *)&unk_10049F430);
  __chkstk_darwin();
  v12 = &v37[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  v14 = &v37[-v13];
  __chkstk_darwin();
  v16 = &v37[-v15];
  v17 = a1[1];
  v18 = a2[1];
  if (*a1 == *a2 && v17 == v18
    || (v19 = _stringCompareWithSmolCheck(_:_:expecting:)(*a1, v17, *a2, v18, 0), v20 = 0, (v19 & 1) != 0))
  {
    v21 = a1[3];
    v22 = a2[3];
    if (v21)
    {
      if (!v22)
        goto LABEL_19;
      v23 = a1[2];
      v24 = a2[2];
      if (v23 != v24 || v21 != v22)
      {
        v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v23, v21, v24, v22, 0);
        v20 = 0;
        if ((v25 & 1) == 0)
          return v20 & 1;
      }
    }
    else if (v22)
    {
      goto LABEL_19;
    }
    v41 = v12;
    v39 = v7;
    v26 = v5;
    v27 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    sub_100014A7C((uint64_t)a1 + *(int *)(v27 + 24), (uint64_t)v16, (uint64_t *)&unk_10049F430);
    v40 = v27;
    v28 = *(int *)(v27 + 24);
    v29 = v26;
    sub_100014A7C((uint64_t)a2 + v28, (uint64_t)v14, (uint64_t *)&unk_10049F430);
    v30 = (uint64_t)&v10[*(int *)(v8 + 48)];
    sub_100014A7C((uint64_t)v16, (uint64_t)v10, (uint64_t *)&unk_10049F430);
    sub_100014A7C((uint64_t)v14, v30, (uint64_t *)&unk_10049F430);
    v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
    if (v31((uint64_t)v10, 1, v4) == 1)
    {
      sub_100008758((uint64_t)v14, (uint64_t *)&unk_10049F430);
      sub_100008758((uint64_t)v16, (uint64_t *)&unk_10049F430);
      if (v31(v30, 1, v4) == 1)
      {
        sub_100008758((uint64_t)v10, (uint64_t *)&unk_10049F430);
LABEL_18:
        v20 = *((_BYTE *)a1 + *(int *)(v40 + 28)) ^ *((_BYTE *)a2 + *(int *)(v40 + 28)) ^ 1;
        return v20 & 1;
      }
      goto LABEL_16;
    }
    v32 = (uint64_t)v41;
    sub_100014A7C((uint64_t)v10, (uint64_t)v41, (uint64_t *)&unk_10049F430);
    if (v31(v30, 1, v4) == 1)
    {
      sub_100008758((uint64_t)v14, (uint64_t *)&unk_10049F430);
      sub_100008758((uint64_t)v16, (uint64_t *)&unk_10049F430);
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v32, v4);
LABEL_16:
      sub_100008758((uint64_t)v10, &qword_100499E58);
      goto LABEL_19;
    }
    v33 = v39;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v29 + 32))(v39, v30, v4);
    v34 = sub_100006924(&qword_10049E860, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork, (uint64_t)&protocol conformance descriptor for Artwork);
    v38 = dispatch thunk of static Equatable.== infix(_:_:)(v32, v33, v4, v34);
    v35 = *(void (**)(_BYTE *, uint64_t))(v29 + 8);
    v35(v33, v4);
    sub_100008758((uint64_t)v14, (uint64_t *)&unk_10049F430);
    sub_100008758((uint64_t)v16, (uint64_t *)&unk_10049F430);
    v35((_BYTE *)v32, v4);
    sub_100008758((uint64_t)v10, (uint64_t *)&unk_10049F430);
    if ((v38 & 1) != 0)
      goto LABEL_18;
LABEL_19:
    v20 = 0;
  }
  return v20 & 1;
}

uint64_t type metadata accessor for Collaboration.Flow(uint64_t a1)
{
  return sub_1000091AC(a1, (uint64_t *)&unk_10049EF68, (uint64_t)&nominal type descriptor for Collaboration.Flow);
}

unint64_t sub_10030F2FC()
{
  unint64_t result;

  result = qword_10049EED0;
  if (!qword_10049EED0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_10049EED0);
  }
  return result;
}

uint64_t type metadata accessor for Collaboration.Flow.View(uint64_t a1)
{
  return sub_1000091AC(a1, qword_10049F098, (uint64_t)&nominal type descriptor for Collaboration.Flow.View);
}

uint64_t sub_10030F358(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of Collaboration.Flow.View.body>>, 1);
}

uint64_t *_s4FlowOwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v30;
  char *__dst;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain(v12);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v13 = type metadata accessor for Playlist.Collaborator(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
      v14 = a1;
      v15 = a3;
      v16 = 1;
LABEL_14:
      swift_storeEnumTagMultiPayload(v14, v15, v16);
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      v9 = type metadata accessor for Collaboration.Flow.Collaborator(0);
      v10 = *(_QWORD *)(v9 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
      {
        v11 = sub_100005574(&qword_10049EEE0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        v17 = a2[1];
        *a1 = *a2;
        a1[1] = v17;
        v18 = a2[3];
        a1[2] = a2[2];
        a1[3] = v18;
        v19 = *(int *)(v9 + 24);
        __dst = (char *)a1 + v19;
        v20 = (char *)a2 + v19;
        v21 = type metadata accessor for Artwork(0);
        v30 = *(_QWORD *)(v21 - 8);
        v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v22(v20, 1, v21))
        {
          v23 = sub_100005574((uint64_t *)&unk_10049F430);
          memcpy(__dst, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v30 + 16))(__dst, v20, v21);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(__dst, 0, 1, v21);
        }
        *((_BYTE *)a1 + *(int *)(v9 + 28)) = *((_BYTE *)a2 + *(int *)(v9 + 28));
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
      }
      v24 = sub_100005574(&qword_10049EED8);
      v25 = *(int *)(v24 + 48);
      v26 = (char *)a1 + v25;
      v27 = (char *)a2 + v25;
      v28 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
      *((_BYTE *)a1 + *(int *)(v24 + 64)) = *((_BYTE *)a2 + *(int *)(v24 + 64));
      v14 = a1;
      v15 = a3;
      v16 = 0;
      goto LABEL_14;
    }
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t _s4FlowOwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = a1;
  result = swift_getEnumCaseMultiPayload(a1, a2);
  if ((_DWORD)result == 1)
  {
    v8 = type metadata accessor for Playlist.Collaborator(0);
  }
  else
  {
    if ((_DWORD)result)
      return result;
    v4 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v2, 1, v4))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v5 = v2 + *(int *)(v4 + 24);
      v6 = type metadata accessor for Artwork(0);
      v7 = *(_QWORD *)(v6 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
        (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    }
    v2 += *(int *)(sub_100005574(&qword_10049EED8) + 48);
    v8 = type metadata accessor for URL(0);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v2, v8);
}

_QWORD *_s4FlowOwcp(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v27;
  char *__dst;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 1)
  {
    v10 = type metadata accessor for Playlist.Collaborator(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
    v11 = a1;
    v12 = a3;
    v13 = 1;
LABEL_12:
    swift_storeEnumTagMultiPayload(v11, v12, v13);
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    v7 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_100005574(&qword_10049EEE0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v14 = a2[1];
      *a1 = *a2;
      a1[1] = v14;
      v15 = a2[3];
      a1[2] = a2[2];
      a1[3] = v15;
      v16 = *(int *)(v7 + 24);
      __dst = (char *)a1 + v16;
      v17 = (char *)a2 + v16;
      v18 = type metadata accessor for Artwork(0);
      v27 = *(_QWORD *)(v18 - 8);
      v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v19(v17, 1, v18))
      {
        v20 = sub_100005574((uint64_t *)&unk_10049F430);
        memcpy(__dst, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v27 + 16))(__dst, v17, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(__dst, 0, 1, v18);
      }
      *((_BYTE *)a1 + *(int *)(v7 + 28)) = *((_BYTE *)a2 + *(int *)(v7 + 28));
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v21 = sub_100005574(&qword_10049EED8);
    v22 = *(int *)(v21 + 48);
    v23 = (char *)a1 + v22;
    v24 = (char *)a2 + v22;
    v25 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
    *((_BYTE *)a1 + *(int *)(v21 + 64)) = *((_BYTE *)a2 + *(int *)(v21 + 64));
    v11 = a1;
    v12 = a3;
    v13 = 0;
    goto LABEL_12;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_QWORD *_s4FlowOwca(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v25;
  char *__dst;

  if (a1 != a2)
  {
    sub_100006798((uint64_t)a1, type metadata accessor for Collaboration.Flow);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v10 = type metadata accessor for Playlist.Collaborator(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      v11 = a1;
      v12 = a3;
      v13 = 1;
LABEL_13:
      swift_storeEnumTagMultiPayload(v11, v12, v13);
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      v7 = type metadata accessor for Collaboration.Flow.Collaborator(0);
      v8 = *(_QWORD *)(v7 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        v9 = sub_100005574(&qword_10049EEE0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        v14 = *(int *)(v7 + 24);
        __dst = (char *)a1 + v14;
        v15 = (char *)a2 + v14;
        v16 = type metadata accessor for Artwork(0);
        v25 = *(_QWORD *)(v16 - 8);
        v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v17(v15, 1, v16))
        {
          v18 = sub_100005574((uint64_t *)&unk_10049F430);
          memcpy(__dst, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v25 + 16))(__dst, v15, v16);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(__dst, 0, 1, v16);
        }
        *((_BYTE *)a1 + *(int *)(v7 + 28)) = *((_BYTE *)a2 + *(int *)(v7 + 28));
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      v19 = sub_100005574(&qword_10049EED8);
      v20 = *(int *)(v19 + 48);
      v21 = (char *)a1 + v20;
      v22 = (char *)a2 + v20;
      v23 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
      *((_BYTE *)a1 + *(int *)(v19 + 64)) = *((_BYTE *)a2 + *(int *)(v19 + 64));
      v11 = a1;
      v12 = a3;
      v13 = 0;
      goto LABEL_13;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *_s4FlowOwtk(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 1)
  {
    v10 = type metadata accessor for Playlist.Collaborator(0);
    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
    v11 = a1;
    v12 = a3;
    v13 = 1;
LABEL_12:
    swift_storeEnumTagMultiPayload(v11, v12, v13);
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    v7 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_100005574(&qword_10049EEE0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v14 = a2[1];
      *a1 = *a2;
      a1[1] = v14;
      v15 = *(int *)(v7 + 24);
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      v18 = type metadata accessor for Artwork(0);
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      {
        v20 = sub_100005574((uint64_t *)&unk_10049F430);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      }
      *((_BYTE *)a1 + *(int *)(v7 + 28)) = *((_BYTE *)a2 + *(int *)(v7 + 28));
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v21 = sub_100005574(&qword_10049EED8);
    v22 = *(int *)(v21 + 48);
    v23 = (char *)a1 + v22;
    v24 = (char *)a2 + v22;
    v25 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
    *((_BYTE *)a1 + *(int *)(v21 + 64)) = *((_BYTE *)a2 + *(int *)(v21 + 64));
    v11 = a1;
    v12 = a3;
    v13 = 0;
    goto LABEL_12;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_OWORD *_s4FlowOwta(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  if (a1 != a2)
  {
    sub_100006798((uint64_t)a1, type metadata accessor for Collaboration.Flow);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v10 = type metadata accessor for Playlist.Collaborator(0);
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
      v11 = a1;
      v12 = a3;
      v13 = 1;
LABEL_13:
      swift_storeEnumTagMultiPayload(v11, v12, v13);
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      v7 = type metadata accessor for Collaboration.Flow.Collaborator(0);
      v8 = *(_QWORD *)(v7 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        v9 = sub_100005574(&qword_10049EEE0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        v14 = a2[1];
        *a1 = *a2;
        a1[1] = v14;
        v15 = *(int *)(v7 + 24);
        v16 = (char *)a1 + v15;
        v17 = (char *)a2 + v15;
        v18 = type metadata accessor for Artwork(0);
        v19 = *(_QWORD *)(v18 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
        {
          v20 = sub_100005574((uint64_t *)&unk_10049F430);
          memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
        }
        *((_BYTE *)a1 + *(int *)(v7 + 28)) = *((_BYTE *)a2 + *(int *)(v7 + 28));
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      v21 = sub_100005574(&qword_10049EED8);
      v22 = *(int *)(v21 + 48);
      v23 = (char *)a1 + v22;
      v24 = (char *)a2 + v22;
      v25 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
      *((_BYTE *)a1 + *(int *)(v21 + 64)) = *((_BYTE *)a2 + *(int *)(v21 + 64));
      v11 = a1;
      v12 = a3;
      v13 = 0;
      goto LABEL_13;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_10030FF40(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _BYTE v10[32];
  _QWORD v11[2];

  sub_1002CA7E8(319, (unint64_t *)&unk_10049EF78, type metadata accessor for Collaboration.Flow.Collaborator, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  v3 = v2;
  if (v4 <= 0x3F)
  {
    v5 = type metadata accessor for URL(319);
    if (v6 > 0x3F)
    {
      return v5;
    }
    else
    {
      swift_getTupleTypeLayout3(v10, *(_QWORD *)(v3 - 8) + 64, *(_QWORD *)(v5 - 8) + 64, &unk_10039DA88);
      v11[0] = v10;
      v7 = type metadata accessor for Playlist.Collaborator(319);
      v3 = v7;
      if (v8 <= 0x3F)
      {
        v11[1] = *(_QWORD *)(v7 - 8) + 64;
        swift_initEnumMetadataMultiPayload(a1, 256, 2, v11);
        return 0;
      }
    }
  }
  return v3;
}

_QWORD *_s4FlowO12CollaboratorVwCP(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v16);
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = *(int *)(a3 + 24);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for Artwork(0);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      v15 = sub_100005574((uint64_t *)&unk_10049F430);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    *((_BYTE *)v4 + *(int *)(a3 + 28)) = *((_BYTE *)a2 + *(int *)(a3 + 28));
  }
  return v4;
}

uint64_t _s4FlowO12CollaboratorVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  v4 = a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for Artwork(0);
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

_QWORD *_s4FlowO12CollaboratorVwcp(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for Artwork(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    v14 = sub_100005574((uint64_t *)&unk_10049F430);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  *((_BYTE *)a1 + *(int *)(a3 + 28)) = *((_BYTE *)a2 + *(int *)(a3 + 28));
  return a1;
}

_QWORD *_s4FlowO12CollaboratorVwca(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Artwork(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = sub_100005574((uint64_t *)&unk_10049F430);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *((_BYTE *)a1 + *(int *)(a3 + 28)) = *((_BYTE *)a2 + *(int *)(a3 + 28));
  return a1;
}

_OWORD *_s4FlowO12CollaboratorVwtk(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Artwork(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = sub_100005574((uint64_t *)&unk_10049F430);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *((_BYTE *)a1 + *(int *)(a3 + 28)) = *((_BYTE *)a2 + *(int *)(a3 + 28));
  return a1;
}

_QWORD *_s4FlowO12CollaboratorVwta(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for Artwork(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v16 = sub_100005574((uint64_t *)&unk_10049F430);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  *((_BYTE *)a1 + *(int *)(a3 + 28)) = *((_BYTE *)a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t _s4FlowO12CollaboratorVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100310638);
}

uint64_t sub_100310638(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100005574((uint64_t *)&unk_10049F430);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t _s4FlowO12CollaboratorVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003106C4);
}

uint64_t sub_1003106C4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_100005574((uint64_t *)&unk_10049F430);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

void sub_10031073C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = &unk_10039DAB0;
  v4[1] = &unk_10039DAC8;
  sub_1002CA7E8(319, &qword_10049CCF0, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    v4[3] = &unk_10039DA88;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
  }
}

_QWORD *_s4FlowO4ViewVwCP(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  int EnumCaseMultiPayload;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  void **v45;
  void **v46;
  uint64_t v47;
  uint64_t v48;
  void **v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v73;
  unsigned int (*v74)(char *, uint64_t, uint64_t);
  char *v75;
  uint64_t v76;
  char *__dst;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
    return a1;
  }
  v7 = sub_100005574(&qword_10049F780);
  if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
  {
    v8 = type metadata accessor for DismissAction(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    v9 = a1;
    v10 = v7;
    v11 = 1;
  }
  else
  {
    v13 = *a2;
    *a1 = *a2;
    swift_retain(v13);
    v9 = a1;
    v10 = v7;
    v11 = 0;
  }
  swift_storeEnumTagMultiPayload(v9, v10, v11);
  v14 = a3[5];
  v15 = a3[6];
  v16 = (char *)a1 + v14;
  v17 = (char *)a2 + v14;
  *v16 = *v17;
  v18 = *((_QWORD *)v17 + 1);
  *((_QWORD *)v16 + 1) = v18;
  v19 = (char *)a1 + v15;
  v20 = (char *)a2 + v15;
  *v19 = *v20;
  v21 = *((_QWORD *)v20 + 1);
  *((_QWORD *)v19 + 1) = v21;
  v22 = a3[7];
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)((char *)a2 + v22);
  v25 = type metadata accessor for Collaboration.Flow(0);
  swift_retain(v18);
  swift_retain(v21);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v24, v25);
  if (EnumCaseMultiPayload == 1)
  {
    v30 = type metadata accessor for Playlist.Collaborator(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v23, v24, v30);
    v31 = v23;
    v32 = v25;
    v33 = 1;
LABEL_17:
    swift_storeEnumTagMultiPayload(v31, v32, v33);
    goto LABEL_18;
  }
  if (!EnumCaseMultiPayload)
  {
    v27 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    v28 = *(_QWORD *)(v27 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v28 + 48))(v24, 1, v27))
    {
      v29 = sub_100005574(&qword_10049EEE0);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      v76 = v28;
      v34 = v24[1];
      *v23 = *v24;
      v23[1] = v34;
      v35 = v24[3];
      v23[2] = v24[2];
      v23[3] = v35;
      v36 = *(int *)(v27 + 24);
      __dst = (char *)v23 + v36;
      v75 = (char *)v24 + v36;
      v37 = type metadata accessor for Artwork(0);
      v73 = *(_QWORD *)(v37 - 8);
      v74 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v74(v75, 1, v37))
      {
        v38 = sub_100005574((uint64_t *)&unk_10049F430);
        memcpy(__dst, v75, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v73 + 16))(__dst, v75, v37);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v73 + 56))(__dst, 0, 1, v37);
      }
      *((_BYTE *)v23 + *(int *)(v27 + 28)) = *((_BYTE *)v24 + *(int *)(v27 + 28));
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v23, 0, 1, v27);
    }
    v39 = sub_100005574(&qword_10049EED8);
    v40 = *(int *)(v39 + 48);
    v41 = (char *)v23 + v40;
    v42 = (char *)v24 + v40;
    v43 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
    *((_BYTE *)v23 + *(int *)(v39 + 64)) = *((_BYTE *)v24 + *(int *)(v39 + 64));
    v31 = v23;
    v32 = v25;
    v33 = 0;
    goto LABEL_17;
  }
  memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
LABEL_18:
  v44 = a3[8];
  v45 = (void **)((char *)a1 + v44);
  v46 = (void **)((char *)a2 + v44);
  v47 = type metadata accessor for Collaboration.Object(0);
  if (swift_getEnumCaseMultiPayload(v46, v47) == 1)
  {
    v48 = type metadata accessor for Playlist(0);
    (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v45, v46, v48);
    v49 = v45;
    v50 = v47;
    v51 = 1;
  }
  else
  {
    v52 = *v46;
    *v45 = *v46;
    v53 = v52;
    v49 = v45;
    v50 = v47;
    v51 = 0;
  }
  swift_storeEnumTagMultiPayload(v49, v50, v51);
  v54 = a3[9];
  v55 = a3[10];
  v56 = *(_QWORD *)((char *)a2 + v54);
  *(_QWORD *)((char *)a1 + v54) = v56;
  *((_BYTE *)a1 + v55) = *((_BYTE *)a2 + v55);
  v57 = a3[11];
  v58 = (_QWORD *)((char *)a1 + v57);
  v59 = (char *)a2 + v57;
  v60 = *(_QWORD *)((char *)a2 + v57);
  swift_retain(v56);
  if (v60)
  {
    v61 = *((_QWORD *)v59 + 1);
    *v58 = v60;
    v58[1] = v61;
    swift_retain(v61);
  }
  else
  {
    *(_OWORD *)v58 = *(_OWORD *)v59;
  }
  v62 = a3[12];
  v63 = a3[13];
  v64 = (_QWORD *)((char *)a1 + v62);
  v65 = (_QWORD *)((char *)a2 + v62);
  v66 = v65[1];
  *v64 = *v65;
  v64[1] = v66;
  v67 = (char *)a1 + v63;
  v68 = (char *)a2 + v63;
  v69 = *(_QWORD *)((char *)a2 + v63);
  v70 = *((_QWORD *)v68 + 1);
  v71 = v68[16];
  swift_retain(v66);
  KeyValueObservationTrigger.keyPath.getter(v69, v70);
  *(_QWORD *)v67 = v69;
  *((_QWORD *)v67 + 1) = v70;
  v67[16] = v71;
  return a1;
}

double _s4FlowO4ViewVwxx(_QWORD *a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v4 = sub_100005574(&qword_10049F780);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for DismissAction(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  else
  {
    swift_release(*a1);
  }
  swift_release(*(_QWORD *)((char *)a1 + a2[5] + 8));
  swift_release(*(_QWORD *)((char *)a1 + a2[6] + 8));
  v6 = (char *)a1 + a2[7];
  v7 = type metadata accessor for Collaboration.Flow(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v6, v7);
  if (EnumCaseMultiPayload == 1)
  {
    v13 = type metadata accessor for Playlist.Collaborator(0);
  }
  else
  {
    if (EnumCaseMultiPayload)
      goto LABEL_12;
    v9 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v6, 1, v9))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v10 = &v6[*(int *)(v9 + 24)];
      v11 = type metadata accessor for Artwork(0);
      v12 = *(_QWORD *)(v11 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
        (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
    }
    v6 += *(int *)(sub_100005574(&qword_10049EED8) + 48);
    v13 = type metadata accessor for URL(0);
  }
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v6, v13);
LABEL_12:
  v14 = (id *)((char *)a1 + a2[8]);
  v15 = type metadata accessor for Collaboration.Object(0);
  if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
  {
    v16 = type metadata accessor for Playlist(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v14, v16);
  }
  else
  {

  }
  swift_release(*(_QWORD *)((char *)a1 + a2[9]));
  v17 = (_QWORD *)((char *)a1 + a2[11]);
  if (*v17)
    swift_release(v17[1]);
  swift_release(*(_QWORD *)((char *)a1 + a2[12] + 8));
  return sub_1002B9030(*(_QWORD *)((char *)a1 + a2[13]), *(_QWORD *)((char *)a1 + a2[13] + 8));
}

_QWORD *_s4FlowO4ViewVwcp(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  int EnumCaseMultiPayload;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  void **v43;
  void **v44;
  uint64_t v45;
  uint64_t v46;
  void **v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v71;
  uint64_t v72;
  unsigned int (*v73)(char *, uint64_t, uint64_t);
  char *v74;
  char *__dst;

  v6 = sub_100005574(&qword_10049F780);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for DismissAction(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    v11 = *a2;
    *a1 = *a2;
    swift_retain(v11);
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  v12 = a3[5];
  v13 = a3[6];
  v14 = (char *)a1 + v12;
  v15 = (char *)a2 + v12;
  *v14 = *v15;
  v16 = *((_QWORD *)v15 + 1);
  *((_QWORD *)v14 + 1) = v16;
  v17 = (char *)a1 + v13;
  v18 = (char *)a2 + v13;
  *v17 = *v18;
  v19 = *((_QWORD *)v18 + 1);
  *((_QWORD *)v17 + 1) = v19;
  v20 = a3[7];
  v21 = (_QWORD *)((char *)a1 + v20);
  v22 = (_QWORD *)((char *)a2 + v20);
  v23 = type metadata accessor for Collaboration.Flow(0);
  swift_retain(v16);
  swift_retain(v19);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v22, v23);
  if (EnumCaseMultiPayload == 1)
  {
    v28 = type metadata accessor for Playlist.Collaborator(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v21, v22, v28);
    v29 = v21;
    v30 = v23;
    v31 = 1;
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      goto LABEL_16;
    }
    v25 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    v26 = *(_QWORD *)(v25 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v26 + 48))(v22, 1, v25))
    {
      v27 = sub_100005574(&qword_10049EEE0);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      v72 = v26;
      v32 = v22[1];
      *v21 = *v22;
      v21[1] = v32;
      v33 = v22[3];
      v21[2] = v22[2];
      v21[3] = v33;
      v34 = *(int *)(v25 + 24);
      v74 = (char *)v22 + v34;
      __dst = (char *)v21 + v34;
      v35 = type metadata accessor for Artwork(0);
      v71 = *(_QWORD *)(v35 - 8);
      v73 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v73(v74, 1, v35))
      {
        v36 = sub_100005574((uint64_t *)&unk_10049F430);
        memcpy(__dst, v74, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v71 + 16))(__dst, v74, v35);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v71 + 56))(__dst, 0, 1, v35);
      }
      *((_BYTE *)v21 + *(int *)(v25 + 28)) = *((_BYTE *)v22 + *(int *)(v25 + 28));
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v21, 0, 1, v25);
    }
    v37 = sub_100005574(&qword_10049EED8);
    v38 = *(int *)(v37 + 48);
    v39 = (char *)v21 + v38;
    v40 = (char *)v22 + v38;
    v41 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v39, v40, v41);
    *((_BYTE *)v21 + *(int *)(v37 + 64)) = *((_BYTE *)v22 + *(int *)(v37 + 64));
    v29 = v21;
    v30 = v23;
    v31 = 0;
  }
  swift_storeEnumTagMultiPayload(v29, v30, v31);
LABEL_16:
  v42 = a3[8];
  v43 = (void **)((char *)a1 + v42);
  v44 = (void **)((char *)a2 + v42);
  v45 = type metadata accessor for Collaboration.Object(0);
  if (swift_getEnumCaseMultiPayload(v44, v45) == 1)
  {
    v46 = type metadata accessor for Playlist(0);
    (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v43, v44, v46);
    v47 = v43;
    v48 = v45;
    v49 = 1;
  }
  else
  {
    v50 = *v44;
    *v43 = *v44;
    v51 = v50;
    v47 = v43;
    v48 = v45;
    v49 = 0;
  }
  swift_storeEnumTagMultiPayload(v47, v48, v49);
  v52 = a3[9];
  v53 = a3[10];
  v54 = *(_QWORD *)((char *)a2 + v52);
  *(_QWORD *)((char *)a1 + v52) = v54;
  *((_BYTE *)a1 + v53) = *((_BYTE *)a2 + v53);
  v55 = a3[11];
  v56 = (_QWORD *)((char *)a1 + v55);
  v57 = (char *)a2 + v55;
  v58 = *(_QWORD *)((char *)a2 + v55);
  swift_retain(v54);
  if (v58)
  {
    v59 = *((_QWORD *)v57 + 1);
    *v56 = v58;
    v56[1] = v59;
    swift_retain(v59);
  }
  else
  {
    *(_OWORD *)v56 = *(_OWORD *)v57;
  }
  v60 = a3[12];
  v61 = a3[13];
  v62 = (_QWORD *)((char *)a1 + v60);
  v63 = (_QWORD *)((char *)a2 + v60);
  v64 = v63[1];
  *v62 = *v63;
  v62[1] = v64;
  v65 = (char *)a1 + v61;
  v66 = (char *)a2 + v61;
  v67 = *(_QWORD *)((char *)a2 + v61);
  v68 = *((_QWORD *)v66 + 1);
  v69 = v66[16];
  swift_retain(v64);
  KeyValueObservationTrigger.keyPath.getter(v67, v68);
  *(_QWORD *)v65 = v67;
  *((_QWORD *)v65 + 1) = v68;
  v65[16] = v69;
  return a1;
}

_QWORD *_s4FlowO4ViewVwca(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  int EnumCaseMultiPayload;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  void **v43;
  void **v44;
  uint64_t v45;
  uint64_t v46;
  void **v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v76;
  unsigned int (*v77)(char *, uint64_t, uint64_t);
  char *v78;
  char *__dst;

  if (a1 != a2)
  {
    sub_100008758((uint64_t)a1, &qword_10049F780);
    v6 = sub_100005574(&qword_10049F780);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for DismissAction(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      v11 = *a2;
      *a1 = *a2;
      swift_retain(v11);
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  v12 = a3[5];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  *v13 = *v14;
  v15 = *((_QWORD *)v13 + 1);
  v16 = *((_QWORD *)v14 + 1);
  *((_QWORD *)v13 + 1) = v16;
  swift_retain(v16);
  swift_release(v15);
  v17 = a3[6];
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  *v18 = *v19;
  v20 = *((_QWORD *)v18 + 1);
  v21 = *((_QWORD *)v19 + 1);
  *((_QWORD *)v18 + 1) = v21;
  swift_retain(v21);
  swift_release(v20);
  if (a1 != a2)
  {
    v22 = a3[7];
    v23 = (_QWORD *)((char *)a1 + v22);
    v24 = (_QWORD *)((char *)a2 + v22);
    sub_100006798((uint64_t)a1 + v22, type metadata accessor for Collaboration.Flow);
    v25 = type metadata accessor for Collaboration.Flow(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v24, v25);
    if (EnumCaseMultiPayload == 1)
    {
      v30 = type metadata accessor for Playlist.Collaborator(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v23, v24, v30);
      v31 = v23;
      v32 = v25;
      v33 = 1;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
LABEL_19:
        v42 = a3[8];
        v43 = (void **)((char *)a1 + v42);
        v44 = (void **)((char *)a2 + v42);
        sub_100006798((uint64_t)a1 + v42, type metadata accessor for Collaboration.Object);
        v45 = type metadata accessor for Collaboration.Object(0);
        if (swift_getEnumCaseMultiPayload(v44, v45) == 1)
        {
          v46 = type metadata accessor for Playlist(0);
          (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v43, v44, v46);
          v47 = v43;
          v48 = v45;
          v49 = 1;
        }
        else
        {
          v50 = *v44;
          *v43 = *v44;
          v51 = v50;
          v47 = v43;
          v48 = v45;
          v49 = 0;
        }
        swift_storeEnumTagMultiPayload(v47, v48, v49);
        goto LABEL_23;
      }
      v27 = type metadata accessor for Collaboration.Flow.Collaborator(0);
      v28 = *(_QWORD *)(v27 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v28 + 48))(v24, 1, v27))
      {
        v29 = sub_100005574(&qword_10049EEE0);
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        *v23 = *v24;
        v23[1] = v24[1];
        v23[2] = v24[2];
        v23[3] = v24[3];
        v34 = *(int *)(v27 + 24);
        __dst = (char *)v23 + v34;
        v78 = (char *)v24 + v34;
        v35 = type metadata accessor for Artwork(0);
        v76 = *(_QWORD *)(v35 - 8);
        v77 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v77(v78, 1, v35))
        {
          v36 = sub_100005574((uint64_t *)&unk_10049F430);
          memcpy(__dst, v78, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v76 + 16))(__dst, v78, v35);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v76 + 56))(__dst, 0, 1, v35);
        }
        *((_BYTE *)v23 + *(int *)(v27 + 28)) = *((_BYTE *)v24 + *(int *)(v27 + 28));
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v23, 0, 1, v27);
      }
      v37 = sub_100005574(&qword_10049EED8);
      v38 = *(int *)(v37 + 48);
      v39 = (char *)v23 + v38;
      v40 = (char *)v24 + v38;
      v41 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v39, v40, v41);
      *((_BYTE *)v23 + *(int *)(v37 + 64)) = *((_BYTE *)v24 + *(int *)(v37 + 64));
      v31 = v23;
      v32 = v25;
      v33 = 0;
    }
    swift_storeEnumTagMultiPayload(v31, v32, v33);
    goto LABEL_19;
  }
LABEL_23:
  v52 = a3[9];
  v53 = *(_QWORD *)((char *)a2 + v52);
  v54 = *(_QWORD *)((char *)a1 + v52);
  *(_QWORD *)((char *)a1 + v52) = v53;
  swift_retain(v53);
  swift_release(v54);
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  v55 = a3[11];
  v56 = (_QWORD *)((char *)a1 + v55);
  v57 = (char *)a2 + v55;
  v58 = *(_QWORD *)((char *)a1 + v55);
  v59 = *(_QWORD *)((char *)a2 + v55);
  if (!v58)
  {
    if (v59)
    {
      v62 = *((_QWORD *)v57 + 1);
      *v56 = v59;
      v56[1] = v62;
      swift_retain(v62);
      goto LABEL_30;
    }
LABEL_29:
    *(_OWORD *)v56 = *(_OWORD *)v57;
    goto LABEL_30;
  }
  if (!v59)
  {
    swift_release(v56[1]);
    goto LABEL_29;
  }
  v60 = *((_QWORD *)v57 + 1);
  v61 = v56[1];
  *v56 = v59;
  v56[1] = v60;
  swift_retain(v60);
  swift_release(v61);
LABEL_30:
  v63 = a3[12];
  v64 = (_QWORD *)((char *)a1 + v63);
  v65 = (_QWORD *)((char *)a2 + v63);
  v66 = v65[1];
  v67 = v64[1];
  *v64 = *v65;
  v64[1] = v66;
  swift_retain(v66);
  swift_release(v67);
  v68 = a3[13];
  v69 = (char *)a1 + v68;
  v70 = (char *)a2 + v68;
  v71 = *(_QWORD *)v70;
  v72 = *((_QWORD *)v70 + 1);
  LOBYTE(v67) = v70[16];
  KeyValueObservationTrigger.keyPath.getter(*(_QWORD *)v70, v72);
  v73 = *(_QWORD *)v69;
  v74 = *((_QWORD *)v69 + 1);
  *(_QWORD *)v69 = v71;
  *((_QWORD *)v69 + 1) = v72;
  v69[16] = v67;
  sub_1002B9030(v73, v74);
  return a1;
}

char *_s4FlowO4ViewVwtk(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v46;
  char *v47;

  v6 = sub_100005574(&qword_10049F780);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for DismissAction(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  *(_OWORD *)&a1[v8] = *(_OWORD *)&a2[v8];
  v9 = a3[7];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = type metadata accessor for Collaboration.Flow(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v11, v12);
  if (EnumCaseMultiPayload == 1)
  {
    v17 = type metadata accessor for Playlist.Collaborator(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v10, v11, v17);
    v18 = v10;
    v19 = v12;
    v20 = 1;
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      goto LABEL_16;
    }
    v14 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v11, 1, v14))
    {
      v16 = sub_100005574(&qword_10049EEE0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      v21 = *((_OWORD *)v11 + 1);
      *(_OWORD *)v10 = *(_OWORD *)v11;
      *((_OWORD *)v10 + 1) = v21;
      v22 = *(int *)(v14 + 24);
      v47 = &v10[v22];
      v23 = &v11[v22];
      v24 = type metadata accessor for Artwork(0);
      v46 = *(_QWORD *)(v24 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v23, 1, v24))
      {
        v25 = sub_100005574((uint64_t *)&unk_10049F430);
        memcpy(v47, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v47, v23, v24);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v47, 0, 1, v24);
      }
      v10[*(int *)(v14 + 28)] = v11[*(int *)(v14 + 28)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v10, 0, 1, v14);
    }
    v26 = sub_100005574(&qword_10049EED8);
    v27 = *(int *)(v26 + 48);
    v28 = &v10[v27];
    v29 = &v11[v27];
    v30 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
    v10[*(int *)(v26 + 64)] = v11[*(int *)(v26 + 64)];
    v18 = v10;
    v19 = v12;
    v20 = 0;
  }
  swift_storeEnumTagMultiPayload(v18, v19, v20);
LABEL_16:
  v31 = a3[8];
  v32 = &a1[v31];
  v33 = &a2[v31];
  v34 = type metadata accessor for Collaboration.Object(0);
  if (swift_getEnumCaseMultiPayload(v33, v34) == 1)
  {
    v35 = type metadata accessor for Playlist(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v32, v33, v35);
    swift_storeEnumTagMultiPayload(v32, v34, 1);
  }
  else
  {
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  v36 = a3[10];
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  a1[v36] = a2[v36];
  v37 = a3[11];
  v38 = &a1[v37];
  v39 = &a2[v37];
  v40 = *(_QWORD *)v39;
  if (*(_QWORD *)v39)
  {
    v41 = *((_QWORD *)v39 + 1);
    *(_QWORD *)v38 = v40;
    *((_QWORD *)v38 + 1) = v41;
  }
  else
  {
    *(_OWORD *)v38 = *(_OWORD *)v39;
  }
  v42 = a3[13];
  *(_OWORD *)&a1[a3[12]] = *(_OWORD *)&a2[a3[12]];
  v43 = &a1[v42];
  v44 = &a2[v42];
  *(_OWORD *)v43 = *(_OWORD *)v44;
  v43[16] = v44[16];
  return a1;
}

char *_s4FlowO4ViewVwta(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  int EnumCaseMultiPayload;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v61;
  char *v62;

  if (a1 != a2)
  {
    sub_100008758((uint64_t)a1, &qword_10049F780);
    v6 = sub_100005574(&qword_10049F780);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for DismissAction(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  *v9 = *v10;
  v11 = *((_QWORD *)v9 + 1);
  *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
  swift_release(v11);
  v12 = a3[6];
  v13 = &a1[v12];
  v14 = &a2[v12];
  *v13 = *v14;
  v15 = *((_QWORD *)v13 + 1);
  *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
  swift_release(v15);
  if (a1 != a2)
  {
    v16 = a3[7];
    v17 = &a1[v16];
    v18 = &a2[v16];
    sub_100006798((uint64_t)&a1[v16], type metadata accessor for Collaboration.Flow);
    v19 = type metadata accessor for Collaboration.Flow(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v18, v19);
    if (EnumCaseMultiPayload == 1)
    {
      v24 = type metadata accessor for Playlist.Collaborator(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v17, v18, v24);
      v25 = v17;
      v26 = v19;
      v27 = 1;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
        goto LABEL_18;
      }
      v21 = type metadata accessor for Collaboration.Flow.Collaborator(0);
      v22 = *(_QWORD *)(v21 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v18, 1, v21))
      {
        v23 = sub_100005574(&qword_10049EEE0);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        v28 = *((_OWORD *)v18 + 1);
        *(_OWORD *)v17 = *(_OWORD *)v18;
        *((_OWORD *)v17 + 1) = v28;
        v29 = *(int *)(v21 + 24);
        v62 = &v17[v29];
        v30 = &v18[v29];
        v31 = type metadata accessor for Artwork(0);
        v61 = *(_QWORD *)(v31 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v30, 1, v31))
        {
          v32 = sub_100005574((uint64_t *)&unk_10049F430);
          memcpy(v62, v30, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v62, v30, v31);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v62, 0, 1, v31);
        }
        v17[*(int *)(v21 + 28)] = v18[*(int *)(v21 + 28)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v17, 0, 1, v21);
      }
      v33 = sub_100005574(&qword_10049EED8);
      v34 = *(int *)(v33 + 48);
      v35 = &v17[v34];
      v36 = &v18[v34];
      v37 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v35, v36, v37);
      v17[*(int *)(v33 + 64)] = v18[*(int *)(v33 + 64)];
      v25 = v17;
      v26 = v19;
      v27 = 0;
    }
    swift_storeEnumTagMultiPayload(v25, v26, v27);
LABEL_18:
    v38 = a3[8];
    v39 = &a1[v38];
    v40 = &a2[v38];
    sub_100006798((uint64_t)&a1[v38], type metadata accessor for Collaboration.Object);
    v41 = type metadata accessor for Collaboration.Object(0);
    if (swift_getEnumCaseMultiPayload(v40, v41) == 1)
    {
      v42 = type metadata accessor for Playlist(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v39, v40, v42);
      swift_storeEnumTagMultiPayload(v39, v41, 1);
    }
    else
    {
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
  }
  v43 = a3[9];
  v44 = *(_QWORD *)&a1[v43];
  *(_QWORD *)&a1[v43] = *(_QWORD *)&a2[v43];
  swift_release(v44);
  v45 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  v46 = &a1[v45];
  v47 = &a2[v45];
  v48 = *(_QWORD *)&a2[v45];
  if (!*(_QWORD *)&a1[v45])
  {
    if (v48)
    {
      v51 = *((_QWORD *)v47 + 1);
      *(_QWORD *)v46 = v48;
      *((_QWORD *)v46 + 1) = v51;
      goto LABEL_28;
    }
LABEL_27:
    *(_OWORD *)v46 = *(_OWORD *)v47;
    goto LABEL_28;
  }
  if (!v48)
  {
    swift_release(*((_QWORD *)v46 + 1));
    goto LABEL_27;
  }
  v49 = *((_QWORD *)v47 + 1);
  v50 = *((_QWORD *)v46 + 1);
  *(_QWORD *)v46 = v48;
  *((_QWORD *)v46 + 1) = v49;
  swift_release(v50);
LABEL_28:
  v52 = a3[12];
  v53 = *(_QWORD *)&a1[v52 + 8];
  *(_OWORD *)&a1[v52] = *(_OWORD *)&a2[v52];
  swift_release(v53);
  v54 = a3[13];
  v55 = &a1[v54];
  v56 = &a2[v54];
  v57 = v56[16];
  v58 = *(_QWORD *)v55;
  v59 = *((_QWORD *)v55 + 1);
  *(_OWORD *)v55 = *(_OWORD *)v56;
  v55[16] = v57;
  sub_1002B9030(v58, v59);
  return a1;
}

uint64_t _s4FlowO4ViewVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100311E90);
}

uint64_t sub_100311E90(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v16;

  v6 = sub_100005574(&qword_10049DF50);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = type metadata accessor for Collaboration.Flow(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[7];
LABEL_7:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = type metadata accessor for Collaboration.Object(0);
  v12 = *(_QWORD *)(v14 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v14;
    v13 = a3[8];
    goto LABEL_7;
  }
  v16 = *(_QWORD *)(a1 + a3[9]);
  if (v16 >= 0xFFFFFFFF)
    LODWORD(v16) = -1;
  return (v16 + 1);
}

uint64_t _s4FlowO4ViewVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100311F6C);
}

uint64_t sub_100311F6C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;

  v8 = sub_100005574(&qword_10049DF50);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  v13 = type metadata accessor for Collaboration.Flow(0);
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v13;
    v15 = a4[7];
LABEL_7:
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  result = type metadata accessor for Collaboration.Object(0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v15 = a4[8];
    goto LABEL_7;
  }
  *(_QWORD *)(a1 + a4[9]) = (a2 - 1);
  return result;
}

void sub_100312038(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[10];

  sub_1002CA7E8(319, (unint64_t *)&qword_10049DFD0, (uint64_t (*)(uint64_t))&type metadata accessor for DismissAction, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    v8[1] = &unk_10039DAC8;
    v8[2] = &unk_10039DAC8;
    v4 = type metadata accessor for Collaboration.Flow(319);
    if (v5 <= 0x3F)
    {
      v8[3] = *(_QWORD *)(v4 - 8) + 64;
      v6 = type metadata accessor for Collaboration.Object(319);
      if (v7 <= 0x3F)
      {
        v8[4] = *(_QWORD *)(v6 - 8) + 64;
        v8[5] = (char *)&value witness table for Builtin.NativeObject + 64;
        v8[6] = &unk_10039DA88;
        v8[7] = &unk_10039DAC8;
        v8[8] = (char *)&value witness table for () + 64;
        v8[9] = &unk_10039DAE8;
        swift_initStructMetadata(a1, 256, 10, v8, a1 + 16);
      }
    }
  }
}

uint64_t sub_10031212C()
{
  return sub_10002FFB8(&qword_10049F0F0, &qword_10049F0F8, (uint64_t)&protocol conformance descriptor for VStack<A>);
}

double _s4FlowO12ActionButtonVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_release(*(_QWORD *)(a1 + 32));
  swift_release(*(_QWORD *)(a1 + 48));
  return sub_1002D0564(*(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64));
}

uint64_t _s4FlowO12ActionButtonVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v5;
  v7 = *(_BYTE *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_retain(v4);
  swift_retain(v5);
  sub_100301C50(v6, v7);
  *(_QWORD *)(a1 + 56) = v6;
  *(_BYTE *)(a1 + 64) = v7;
  return a1;
}

uint64_t _s4FlowO12ActionButtonVwca(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v2 = a2;
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *((_BYTE *)v2 + 16);
  v4 = v2[4];
  v5 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = v2[3];
  *(_QWORD *)(a1 + 32) = v4;
  swift_retain(v4);
  swift_release(v5);
  *(_BYTE *)(a1 + 40) = *((_BYTE *)v2 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = v2[6];
  *(_QWORD *)(a1 + 48) = v7;
  swift_retain(v7);
  swift_release(v6);
  v8 = v2[7];
  LOBYTE(v2) = *((_BYTE *)v2 + 64);
  sub_100301C50(v8, (char)v2);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(_BYTE *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = v8;
  *(_BYTE *)(a1 + 64) = (_BYTE)v2;
  sub_1002D0564(v9, v10);
  return a1;
}

__n128 _s4FlowO12ActionButtonVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t _s4FlowO12ActionButtonVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release(v5);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_release(v6);
  v7 = *(_BYTE *)(a2 + 64);
  v8 = *(_QWORD *)(a1 + 56);
  v9 = *(_BYTE *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = v7;
  sub_1002D0564(v8, v9);
  return a1;
}

uint64_t _s4FlowO12ActionButtonVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 65))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s4FlowO12ActionButtonVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 64) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 65) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 65) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s4FlowO12ActionButtonVMa()
{
  return &_s4FlowO12ActionButtonVN;
}

uint64_t *sub_10031241C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v30;
  unsigned int (*v31)(char *, uint64_t, uint64_t);
  char *__dst;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain(v4);
  }
  else
  {
    v5 = a1;
    v6 = *(int *)(a3 + 20);
    v7 = (uint64_t *)((char *)a1 + v6);
    v8 = (uint64_t *)((char *)a2 + v6);
    v9 = type metadata accessor for Collaboration.Flow(0);
    swift_retain(v4);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v8, v9);
    if (EnumCaseMultiPayload == 1)
    {
      v14 = type metadata accessor for Playlist.Collaborator(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v7, v8, v14);
      v15 = v7;
      v16 = v9;
      v17 = 1;
LABEL_14:
      swift_storeEnumTagMultiPayload(v15, v16, v17);
      return v5;
    }
    if (!EnumCaseMultiPayload)
    {
      v11 = type metadata accessor for Collaboration.Flow.Collaborator(0);
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11))
      {
        v13 = sub_100005574(&qword_10049EEE0);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        v18 = v8[1];
        *v7 = *v8;
        v7[1] = v18;
        v19 = v8[3];
        v7[2] = v8[2];
        v7[3] = v19;
        v20 = *(int *)(v11 + 24);
        __dst = (char *)v7 + v20;
        v21 = (char *)v8 + v20;
        v22 = type metadata accessor for Artwork(0);
        v30 = *(_QWORD *)(v22 - 8);
        v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v31(v21, 1, v22))
        {
          v23 = sub_100005574((uint64_t *)&unk_10049F430);
          memcpy(__dst, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v30 + 16))(__dst, v21, v22);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(__dst, 0, 1, v22);
        }
        *((_BYTE *)v7 + *(int *)(v11 + 28)) = *((_BYTE *)v8 + *(int *)(v11 + 28));
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, v11);
      }
      v24 = sub_100005574(&qword_10049EED8);
      v25 = *(int *)(v24 + 48);
      v26 = (char *)v7 + v25;
      v27 = (char *)v8 + v25;
      v28 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
      *((_BYTE *)v7 + *(int *)(v24 + 64)) = *((_BYTE *)v8 + *(int *)(v24 + 64));
      v15 = v7;
      v16 = v9;
      v17 = 0;
      goto LABEL_14;
    }
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  return v5;
}

uint64_t sub_10031269C(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  swift_release(*a1);
  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for Collaboration.Flow(0);
  result = swift_getEnumCaseMultiPayload(v4, v5);
  if ((_DWORD)result == 1)
  {
    v11 = type metadata accessor for Playlist.Collaborator(0);
  }
  else
  {
    if ((_DWORD)result)
      return result;
    v7 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v4, 1, v7))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v8 = &v4[*(int *)(v7 + 24)];
      v9 = type metadata accessor for Artwork(0);
      v10 = *(_QWORD *)(v9 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
        (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    }
    v4 += *(int *)(sub_100005574(&qword_10049EED8) + 48);
    v11 = type metadata accessor for URL(0);
  }
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v4, v11);
}

uint64_t *sub_1003127B4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v29;
  char *__dst;
  unsigned int (*v31)(char *, uint64_t, uint64_t);

  v4 = *a2;
  *a1 = *a2;
  v5 = *(int *)(a3 + 20);
  v6 = (uint64_t *)((char *)a1 + v5);
  v7 = (uint64_t *)((char *)a2 + v5);
  v8 = type metadata accessor for Collaboration.Flow(0);
  swift_retain(v4);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v7, v8);
  if (EnumCaseMultiPayload == 1)
  {
    v13 = type metadata accessor for Playlist.Collaborator(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v6, v7, v13);
    v14 = v6;
    v15 = v8;
    v16 = 1;
LABEL_12:
    swift_storeEnumTagMultiPayload(v14, v15, v16);
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    v10 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v7, 1, v10))
    {
      v12 = sub_100005574(&qword_10049EEE0);
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v17 = v7[1];
      *v6 = *v7;
      v6[1] = v17;
      v18 = v7[3];
      v6[2] = v7[2];
      v6[3] = v18;
      v19 = *(int *)(v10 + 24);
      __dst = (char *)v6 + v19;
      v20 = (char *)v7 + v19;
      v21 = type metadata accessor for Artwork(0);
      v29 = *(_QWORD *)(v21 - 8);
      v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v31(v20, 1, v21))
      {
        v22 = sub_100005574((uint64_t *)&unk_10049F430);
        memcpy(__dst, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v29 + 16))(__dst, v20, v21);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(__dst, 0, 1, v21);
      }
      *((_BYTE *)v6 + *(int *)(v10 + 28)) = *((_BYTE *)v7 + *(int *)(v10 + 28));
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
    }
    v23 = sub_100005574(&qword_10049EED8);
    v24 = *(int *)(v23 + 48);
    v25 = (char *)v6 + v24;
    v26 = (char *)v7 + v24;
    v27 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    *((_BYTE *)v6 + *(int *)(v23 + 64)) = *((_BYTE *)v7 + *(int *)(v23 + 64));
    v14 = v6;
    v15 = v8;
    v16 = 0;
    goto LABEL_12;
  }
  memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  return a1;
}

uint64_t *sub_100312A08(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v30;
  unsigned int (*v31)(char *, uint64_t, uint64_t);
  char *__dst;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  swift_retain(v6);
  swift_release(v7);
  if (a1 != a2)
  {
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    sub_100006798((uint64_t)a1 + v8, type metadata accessor for Collaboration.Flow);
    v11 = type metadata accessor for Collaboration.Flow(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10, v11);
    if (EnumCaseMultiPayload == 1)
    {
      v16 = type metadata accessor for Playlist.Collaborator(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v9, v10, v16);
      v17 = v9;
      v18 = v11;
      v19 = 1;
LABEL_13:
      swift_storeEnumTagMultiPayload(v17, v18, v19);
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      v13 = type metadata accessor for Collaboration.Flow.Collaborator(0);
      v14 = *(_QWORD *)(v13 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v14 + 48))(v10, 1, v13))
      {
        v15 = sub_100005574(&qword_10049EEE0);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        *v9 = *v10;
        v9[1] = v10[1];
        v9[2] = v10[2];
        v9[3] = v10[3];
        v20 = *(int *)(v13 + 24);
        __dst = (char *)v9 + v20;
        v21 = (char *)v10 + v20;
        v22 = type metadata accessor for Artwork(0);
        v30 = *(_QWORD *)(v22 - 8);
        v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v31(v21, 1, v22))
        {
          v23 = sub_100005574((uint64_t *)&unk_10049F430);
          memcpy(__dst, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v30 + 16))(__dst, v21, v22);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(__dst, 0, 1, v22);
        }
        *((_BYTE *)v9 + *(int *)(v13 + 28)) = *((_BYTE *)v10 + *(int *)(v13 + 28));
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
      }
      v24 = sub_100005574(&qword_10049EED8);
      v25 = *(int *)(v24 + 48);
      v26 = (char *)v9 + v25;
      v27 = (char *)v10 + v25;
      v28 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
      *((_BYTE *)v9 + *(int *)(v24 + 64)) = *((_BYTE *)v10 + *(int *)(v24 + 64));
      v17 = v9;
      v18 = v11;
      v19 = 0;
      goto LABEL_13;
    }
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_100312C98(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  _OWORD *v5;
  _OWORD *v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (_OWORD *)((char *)a1 + v4);
  v6 = (_OWORD *)((char *)a2 + v4);
  v7 = type metadata accessor for Collaboration.Flow(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v6, v7);
  if (EnumCaseMultiPayload == 1)
  {
    v12 = type metadata accessor for Playlist.Collaborator(0);
    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v5, v6, v12);
    v13 = v5;
    v14 = v7;
    v15 = 1;
LABEL_12:
    swift_storeEnumTagMultiPayload(v13, v14, v15);
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    v9 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    v10 = *(_QWORD *)(v9 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9))
    {
      v11 = sub_100005574(&qword_10049EEE0);
      memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      v16 = v6[1];
      *v5 = *v6;
      v5[1] = v16;
      v17 = *(int *)(v9 + 24);
      v18 = (char *)v5 + v17;
      v19 = (char *)v6 + v17;
      v20 = type metadata accessor for Artwork(0);
      v21 = *(_QWORD *)(v20 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      {
        v22 = sub_100005574((uint64_t *)&unk_10049F430);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      }
      *((_BYTE *)v5 + *(int *)(v9 + 28)) = *((_BYTE *)v6 + *(int *)(v9 + 28));
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v5, 0, 1, v9);
    }
    v23 = sub_100005574(&qword_10049EED8);
    v24 = *(int *)(v23 + 48);
    v25 = (char *)v5 + v24;
    v26 = (char *)v6 + v24;
    v27 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
    *((_BYTE *)v5 + *(int *)(v23 + 64)) = *((_BYTE *)v6 + *(int *)(v23 + 64));
    v13 = v5;
    v14 = v7;
    v15 = 0;
    goto LABEL_12;
  }
  memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  return a1;
}

uint64_t *sub_100312EAC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;

  v6 = *a1;
  *a1 = *a2;
  swift_release(v6);
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 20);
    v8 = (_OWORD *)((char *)a1 + v7);
    v9 = (_OWORD *)((char *)a2 + v7);
    sub_100006798((uint64_t)a1 + v7, type metadata accessor for Collaboration.Flow);
    v10 = type metadata accessor for Collaboration.Flow(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9, v10);
    if (EnumCaseMultiPayload == 1)
    {
      v15 = type metadata accessor for Playlist.Collaborator(0);
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v8, v9, v15);
      v16 = v8;
      v17 = v10;
      v18 = 1;
LABEL_13:
      swift_storeEnumTagMultiPayload(v16, v17, v18);
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      v12 = type metadata accessor for Collaboration.Flow.Collaborator(0);
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v13 + 48))(v9, 1, v12))
      {
        v14 = sub_100005574(&qword_10049EEE0);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        v19 = v9[1];
        *v8 = *v9;
        v8[1] = v19;
        v20 = *(int *)(v12 + 24);
        v21 = (char *)v8 + v20;
        v22 = (char *)v9 + v20;
        v23 = type metadata accessor for Artwork(0);
        v24 = *(_QWORD *)(v23 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
        {
          v25 = sub_100005574((uint64_t *)&unk_10049F430);
          memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
        }
        *((_BYTE *)v8 + *(int *)(v12 + 28)) = *((_BYTE *)v9 + *(int *)(v12 + 28));
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
      }
      v26 = sub_100005574(&qword_10049EED8);
      v27 = *(int *)(v26 + 48);
      v28 = (char *)v8 + v27;
      v29 = (char *)v9 + v27;
      v30 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
      *((_BYTE *)v8 + *(int *)(v26 + 64)) = *((_BYTE *)v9 + *(int *)(v26 + 64));
      v16 = v8;
      v17 = v10;
      v18 = 0;
      goto LABEL_13;
    }
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1003130E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003130F4);
}

uint64_t sub_1003130F4(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for Collaboration.Flow(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_100313170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10031317C);
}

char *sub_10031317C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for Collaboration.Flow(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t _s4FlowO18ProfileEditingViewVMa(uint64_t a1)
{
  return sub_1000091AC(a1, qword_10049F158, (uint64_t)&_s4FlowO18ProfileEditingViewVMn);
}

uint64_t sub_100313204(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  result = type metadata accessor for Collaboration.Flow(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

ValueMetadata *_s4FlowO14GlyphImageViewVMa()
{
  return &_s4FlowO14GlyphImageViewVN;
}

uint64_t sub_10031328C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1003E40CC, 1);
}

uint64_t sub_10031329C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1003E40A4, 1);
}

uint64_t sub_1003132AC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1003E407C, 1);
}

uint64_t sub_1003132BC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release(*(_QWORD *)(v0 + 48));
  swift_release(*(_QWORD *)(v0 + 64));
  sub_1002D0564(*(_QWORD *)(v0 + 72), *(_BYTE *)(v0 + 80));
  return swift_deallocObject(v0, 81, 7);
}

uint64_t sub_1003132FC()
{
  uint64_t v0;

  return sub_10030D9E8(v0 + 16);
}

uint64_t sub_100313304@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10030DA44(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_10031330C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_BYTE *)(a1 + 64);
  swift_retain(*(_QWORD *)(a1 + 48));
  swift_bridgeObjectRetain();
  swift_retain(v2);
  sub_100301C50(v3, v4);
  return a1;
}

unint64_t sub_100313370()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049F1C8;
  if (!qword_10049F1C8)
  {
    v1 = sub_100005600(&qword_10049F1C0);
    sub_1003133F4();
    sub_1003139EC(&qword_10049E9F8, &qword_10049EA00);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049F1C8);
  }
  return result;
}

unint64_t sub_1003133F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049F1D0;
  if (!qword_10049F1D0)
  {
    v1 = sub_100005600(&qword_10049F1D8);
    sub_10002FFB8(&qword_10049E528, &qword_10049E4B8, (uint64_t)&protocol conformance descriptor for ProgressView<A, B>);
    sub_10002FFB8(&qword_10049D560, (uint64_t *)&unk_10049E490, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049F1D0);
  }
  return result;
}

unint64_t sub_100313498()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049F1E0;
  if (!qword_10049F1E0)
  {
    v1 = sub_100005600(&qword_10049F1A8);
    sub_100313504();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049F1E0);
  }
  return result;
}

unint64_t sub_100313504()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049F1E8;
  if (!qword_10049F1E8)
  {
    v1 = sub_100005600(&qword_10049F1A0);
    sub_100313588();
    sub_10002FFB8(&qword_10049D560, (uint64_t *)&unk_10049E490, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049F1E8);
  }
  return result;
}

unint64_t sub_100313588()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049F1F0;
  if (!qword_10049F1F0)
  {
    v1 = sub_100005600(&qword_10049F198);
    sub_10002FFB8(&qword_10049F1F8, (uint64_t *)&unk_10049F710, (uint64_t)&protocol conformance descriptor for Button<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049F1F0);
  }
  return result;
}

uint64_t sub_10031360C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.tintColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100313634(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.tintColor.setter(v1);
}

uint64_t sub_10031366C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.multilineTextAlignment.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100313694(unsigned __int8 *a1)
{
  return EnvironmentValues.multilineTextAlignment.setter(*a1);
}

unint64_t sub_1003136B8(unint64_t result, void *a2)
{
  id v2;

  if (result >= 3)
  {
    v2 = a2;
    return swift_bridgeObjectRetain();
  }
  return result;
}

double sub_1003136E8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  double result;

  if (a4)
  {
    sub_10003B4C0(a1, a2, a3 & 1);
    swift_retain(a11);
    swift_bridgeObjectRetain();
    swift_retain(a6);
    swift_retain(a8);
    swift_retain(a9);
    *(_QWORD *)&result = swift_retain(a10).n128_u64[0];
  }
  return result;
}

uint64_t sub_100313760(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  char v4;

  v4 = *(_BYTE *)(a1 + 128);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), v4);
  return a1;
}

double sub_1003137C4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  double result;

  if (a4)
  {
    sub_10003B4D0(a1, a2, a3 & 1);
    swift_release(a10);
    swift_release(a8);
    swift_release(a6);
    swift_bridgeObjectRelease();
    swift_release(a9);
    *(_QWORD *)&result = swift_release(a11).n128_u64[0];
  }
  return result;
}

void sub_10031383C(unint64_t a1, void *a2)
{
  if (a1 >= 3)
  {
    swift_bridgeObjectRelease(a1);

  }
}

double sub_10031386C(uint64_t a1)
{
  double result;

  *(_BYTE *)(a1 + 128) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

unint64_t sub_100313888()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049F310;
  if (!qword_10049F310)
  {
    v1 = sub_100005600(&qword_10049F308);
    sub_10031390C();
    sub_10002FFB8((unint64_t *)&unk_10049E600, &qword_10049B8D8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049F310);
  }
  return result;
}

unint64_t sub_10031390C()
{
  unint64_t result;

  result = qword_10049F318;
  if (!qword_10049F318)
  {
    result = swift_getWitnessTable(&unk_10039DB34, &_s4FlowO14GlyphImageViewVN);
    atomic_store(result, (unint64_t *)&qword_10049F318);
  }
  return result;
}

unint64_t sub_100313950()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049F328;
  if (!qword_10049F328)
  {
    v1 = sub_100005600(&qword_10049F320);
    sub_1003139EC(&qword_10049F330, &qword_10049F338);
    sub_10002FFB8((unint64_t *)&unk_10049E600, &qword_10049B8D8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049F328);
  }
  return result;
}

uint64_t sub_1003139EC(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_100005600(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v4);
    atomic_store(result, a1);
  }
  return result;
}

double sub_100313A4C(uint64_t a1)
{
  return sub_100313D80(a1, (uint64_t (*)(_QWORD))&type metadata accessor for Playlist.Collaborator, (uint64_t)&unk_100463590, (uint64_t)&unk_10049F3F0);
}

uint64_t sub_100313A68@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.isEnabled.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100313A94(unsigned __int8 *a1)
{
  return EnvironmentValues.isEnabled.setter(*a1);
}

uint64_t sub_100313ABC()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  id *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;

  v1 = (int *)type metadata accessor for Collaboration.Flow.View(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for Playlist.Collaborator(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v33 = *(_QWORD *)(v7 + 64);
  v9 = (_QWORD *)(v0 + v4);
  v10 = sub_100005574(&qword_10049F780);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v10) == 1)
  {
    v11 = type metadata accessor for DismissAction(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v0 + v4, v11);
  }
  else
  {
    swift_release(*v9);
  }
  swift_release(*(_QWORD *)((char *)v9 + v1[5] + 8));
  swift_release(*(_QWORD *)((char *)v9 + v1[6] + 8));
  v12 = (char *)v9 + v1[7];
  v13 = type metadata accessor for Collaboration.Flow(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v12, v13);
  if (EnumCaseMultiPayload == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
  else if (!EnumCaseMultiPayload)
  {
    v32 = v5;
    v15 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v12, 1, v15))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v16 = &v12[*(int *)(v15 + 24)];
      v17 = type metadata accessor for Artwork(0);
      v30 = *(_QWORD *)(v17 - 8);
      v31 = v16;
      v18 = v16;
      v19 = v17;
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v18, 1, v17))
        (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v19);
    }
    v20 = &v12[*(int *)(sub_100005574(&qword_10049EED8) + 48)];
    v21 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
    v5 = v32;
  }
  v22 = (id *)((char *)v9 + v1[8]);
  v23 = type metadata accessor for Collaboration.Object(0);
  if (swift_getEnumCaseMultiPayload(v22, v23) == 1)
  {
    v24 = type metadata accessor for Playlist(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v22, v24);
  }
  else
  {

  }
  swift_release(*(_QWORD *)((char *)v9 + v1[9]));
  v25 = (_QWORD *)((char *)v9 + v1[11]);
  if (*v25)
    swift_release(v25[1]);
  v26 = v3 | v8 | 7;
  v27 = (v4 + v5 + v8) & ~v8;
  swift_release(*(_QWORD *)((char *)v9 + v1[12] + 8));
  v28 = sub_1002B9030(*(_QWORD *)((char *)v9 + v1[13]), *(_QWORD *)((char *)v9 + v1[13] + 8));
  (*(void (**)(uint64_t, uint64_t, double))(v7 + 8))(v0 + v27, v6, v28);
  return swift_deallocObject(v0, v27 + v33, v26);
}

double sub_100313D64(uint64_t a1)
{
  return sub_100313D80(a1, (uint64_t (*)(_QWORD))&type metadata accessor for Playlist.Collaborator, (uint64_t)&unk_100463568, (uint64_t)&unk_10049F3D8);
}

double sub_100313D80(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v9 = *(_QWORD *)(type metadata accessor for Collaboration.Flow.View(0) - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v9 + 64);
  v12 = *(unsigned __int8 *)(*(_QWORD *)(a2(0) - 8) + 80);
  return sub_10030BF30(a1, v4 + v10, v4 + ((v10 + v11 + v12) & ~v12), a2, a3, a4);
}

unint64_t sub_100313E14()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049F348;
  if (!qword_10049F348)
  {
    v1 = sub_100005600(&qword_10049F288);
    sub_10002FFB8(&qword_10049F350, &qword_10049F280, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    sub_100313E98();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049F348);
  }
  return result;
}

unint64_t sub_100313E98()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049F358;
  if (!qword_10049F358)
  {
    v1 = sub_100005600(&qword_10049F360);
    sub_100313F1C();
    sub_10002FFB8(&qword_10049EB98, &qword_10049EBA0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyTransformModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049F358);
  }
  return result;
}

unint64_t sub_100313F1C()
{
  unint64_t result;

  result = qword_10049F368;
  if (!qword_10049F368)
  {
    result = swift_getWitnessTable(&unk_10039DBD4, &_s4FlowO12ActionButtonVN);
    atomic_store(result, (unint64_t *)&qword_10049F368);
  }
  return result;
}

uint64_t sub_100313F60(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(a1 + 40);
  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(_QWORD *)(a1 + 72);
  v6 = *(_QWORD *)(a1 + 80);
  sub_10003B4C0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_retain(v6);
  swift_bridgeObjectRetain();
  swift_retain(v2);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  return a1;
}

uint64_t sub_100313FE8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(a1 + 40);
  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(_QWORD *)(a1 + 72);
  v6 = *(_QWORD *)(a1 + 80);
  sub_10003B4D0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_release(v5);
  swift_release(v4);
  swift_release(v2);
  swift_bridgeObjectRelease();
  swift_release(v3);
  swift_release(v6);
  return a1;
}

uint64_t sub_100314070()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;

  v1 = (int *)type metadata accessor for Collaboration.Flow.View(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v33 = *(_QWORD *)(v7 + 64);
  v9 = (_QWORD *)(v0 + v4);
  v10 = sub_100005574(&qword_10049F780);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v10) == 1)
  {
    v11 = type metadata accessor for DismissAction(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v0 + v4, v11);
  }
  else
  {
    swift_release(*v9);
  }
  swift_release(*(_QWORD *)((char *)v9 + v1[5] + 8));
  swift_release(*(_QWORD *)((char *)v9 + v1[6] + 8));
  v12 = (char *)v9 + v1[7];
  v13 = type metadata accessor for Collaboration.Flow(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v12, v13);
  if (EnumCaseMultiPayload == 1)
  {
    v21 = type metadata accessor for Playlist.Collaborator(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v12, v21);
  }
  else if (!EnumCaseMultiPayload)
  {
    v32 = v5;
    v15 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v12, 1, v15))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v16 = &v12[*(int *)(v15 + 24)];
      v17 = type metadata accessor for Artwork(0);
      v30 = *(_QWORD *)(v17 - 8);
      v31 = v16;
      v18 = v16;
      v19 = v17;
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v18, 1, v17))
        (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v19);
    }
    v20 = sub_100005574(&qword_10049EED8);
    (*(void (**)(char *, uint64_t))(v7 + 8))(&v12[*(int *)(v20 + 48)], v6);
    v5 = v32;
  }
  v22 = (id *)((char *)v9 + v1[8]);
  v23 = type metadata accessor for Collaboration.Object(0);
  if (swift_getEnumCaseMultiPayload(v22, v23) == 1)
  {
    v24 = type metadata accessor for Playlist(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v22, v24);
  }
  else
  {

  }
  swift_release(*(_QWORD *)((char *)v9 + v1[9]));
  v25 = (_QWORD *)((char *)v9 + v1[11]);
  if (*v25)
    swift_release(v25[1]);
  v26 = v3 | v8 | 7;
  v27 = (v4 + v5 + v8) & ~v8;
  swift_release(*(_QWORD *)((char *)v9 + v1[12] + 8));
  v28 = sub_1002B9030(*(_QWORD *)((char *)v9 + v1[13]), *(_QWORD *)((char *)v9 + v1[13] + 8));
  (*(void (**)(uint64_t, uint64_t, double))(v7 + 8))(v0 + v27, v6, v28);
  return swift_deallocObject(v0, v27 + v33, v26);
}

double sub_100314314(uint64_t a1)
{
  return sub_100313D80(a1, (uint64_t (*)(_QWORD))&type metadata accessor for URL, (uint64_t)&unk_100463540, (uint64_t)&unk_10049F3C8);
}

uint64_t sub_100314338()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

double sub_10031434C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Collaboration.Flow.View(0) - 8) + 80);
  return sub_100309B3C(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_100314388()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100314398@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10030AC34(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1003143A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 152);
  v3 = *(_QWORD *)(a1 + 168);
  v4 = *(_QWORD *)(a1 + 176);
  sub_10003B4C0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_retain(v4);
  swift_bridgeObjectRetain();
  swift_retain(v2);
  swift_retain(v3);
  return a1;
}

uint64_t sub_10031440C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 152);
  v3 = *(_QWORD *)(a1 + 168);
  v4 = *(_QWORD *)(a1 + 176);
  sub_10003B4D0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_release(v3);
  swift_release(v2);
  swift_bridgeObjectRelease();
  swift_release(v4);
  return a1;
}

uint64_t sub_10031447C()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;

  v1 = (int *)type metadata accessor for Collaboration.Flow.View(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = (_QWORD *)(v0 + v4);
  v7 = sub_100005574(&qword_10049F780);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v7) == 1)
  {
    v8 = type metadata accessor for DismissAction(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v0 + v4, v8);
  }
  else
  {
    swift_release(*v6);
  }
  swift_release(*(_QWORD *)((char *)v6 + v1[5] + 8));
  swift_release(*(_QWORD *)((char *)v6 + v1[6] + 8));
  v9 = (char *)v6 + v1[7];
  v10 = type metadata accessor for Collaboration.Flow(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9, v10);
  if (EnumCaseMultiPayload == 1)
  {
    v16 = type metadata accessor for Playlist.Collaborator(0);
  }
  else
  {
    if (EnumCaseMultiPayload)
      goto LABEL_12;
    v12 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v9, 1, v12))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v13 = &v9[*(int *)(v12 + 24)];
      v14 = type metadata accessor for Artwork(0);
      v15 = *(_QWORD *)(v14 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
        (*(void (**)(char *, uint64_t))(v15 + 8))(v13, v14);
    }
    v9 += *(int *)(sub_100005574(&qword_10049EED8) + 48);
    v16 = type metadata accessor for URL(0);
  }
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v9, v16);
LABEL_12:
  v17 = (id *)((char *)v6 + v1[8]);
  v18 = type metadata accessor for Collaboration.Object(0);
  if (swift_getEnumCaseMultiPayload(v17, v18) == 1)
  {
    v19 = type metadata accessor for Playlist(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v17, v19);
  }
  else
  {

  }
  swift_release(*(_QWORD *)((char *)v6 + v1[9]));
  v20 = (_QWORD *)((char *)v6 + v1[11]);
  if (*v20)
    swift_release(v20[1]);
  swift_release(*(_QWORD *)((char *)v6 + v1[12] + 8));
  sub_1002B9030(*(_QWORD *)((char *)v6 + v1[13]), *(_QWORD *)((char *)v6 + v1[13] + 8));
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_1003146C4()
{
  return sub_1003146E0((uint64_t (*)(uint64_t))sub_10030B0E4);
}

uint64_t sub_1003146D4()
{
  return sub_1003146E0(sub_10030B290);
}

uint64_t sub_1003146E0(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Collaboration.Flow.View(0) - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

unint64_t sub_10031471C()
{
  unint64_t result;

  result = qword_10049F390;
  if (!qword_10049F390)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Collaboration.Error, &type metadata for Collaboration.Error);
    atomic_store(result, &qword_10049F390);
  }
  return result;
}

uint64_t sub_100314764()
{
  uint64_t v0;
  _QWORD *v1;

  type metadata accessor for Collaboration.Flow.View(0);
  v1 = (_QWORD *)swift_task_alloc(dword_10049F39C);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10000EA88;
  return sub_10030B228();
}

uint64_t sub_1003147EC()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;

  v1 = (int *)type metadata accessor for Collaboration.Flow.View(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v6 = (_QWORD *)(v0 + v4);
  v7 = sub_100005574(&qword_10049F780);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v7) == 1)
  {
    v8 = type metadata accessor for DismissAction(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v0 + v4, v8);
  }
  else
  {
    swift_release(*v6);
  }
  swift_release(*(_QWORD *)((char *)v6 + v1[5] + 8));
  swift_release(*(_QWORD *)((char *)v6 + v1[6] + 8));
  v9 = (char *)v6 + v1[7];
  v10 = type metadata accessor for Collaboration.Flow(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9, v10);
  if (EnumCaseMultiPayload == 1)
  {
    v16 = type metadata accessor for Playlist.Collaborator(0);
  }
  else
  {
    if (EnumCaseMultiPayload)
      goto LABEL_12;
    v12 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v9, 1, v12))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v13 = &v9[*(int *)(v12 + 24)];
      v14 = type metadata accessor for Artwork(0);
      v15 = *(_QWORD *)(v14 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
        (*(void (**)(char *, uint64_t))(v15 + 8))(v13, v14);
    }
    v9 += *(int *)(sub_100005574(&qword_10049EED8) + 48);
    v16 = type metadata accessor for URL(0);
  }
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v9, v16);
LABEL_12:
  v17 = (id *)((char *)v6 + v1[8]);
  v18 = type metadata accessor for Collaboration.Object(0);
  if (swift_getEnumCaseMultiPayload(v17, v18) == 1)
  {
    v19 = type metadata accessor for Playlist(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v17, v19);
  }
  else
  {

  }
  swift_release(*(_QWORD *)((char *)v6 + v1[9]));
  v20 = (_QWORD *)((char *)v6 + v1[11]);
  if (*v20)
    swift_release(v20[1]);
  swift_release(*(_QWORD *)((char *)v6 + v1[12] + 8));
  sub_1002B9030(*(_QWORD *)((char *)v6 + v1[13]), *(_QWORD *)((char *)v6 + v1[13] + 8));
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_100314A3C()
{
  uint64_t v0;
  _QWORD *v1;

  type metadata accessor for Collaboration.Flow.View(0);
  v1 = (_QWORD *)swift_task_alloc(dword_10049F3B4);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10000F894;
  return sub_100309C80();
}

uint64_t sub_100314AC0()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;

  v1 = (int *)type metadata accessor for Collaboration.Flow.View(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v33 = *(_QWORD *)(v7 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v9 = (_QWORD *)(v0 + v4);
  v10 = sub_100005574(&qword_10049F780);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v10) == 1)
  {
    v11 = type metadata accessor for DismissAction(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v0 + v4, v11);
  }
  else
  {
    swift_release(*v9);
  }
  swift_release(*(_QWORD *)((char *)v9 + v1[5] + 8));
  swift_release(*(_QWORD *)((char *)v9 + v1[6] + 8));
  v12 = (char *)v9 + v1[7];
  v13 = type metadata accessor for Collaboration.Flow(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v12, v13);
  if (EnumCaseMultiPayload == 1)
  {
    v21 = type metadata accessor for Playlist.Collaborator(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v12, v21);
  }
  else if (!EnumCaseMultiPayload)
  {
    v32 = v5;
    v15 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v12, 1, v15))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v16 = &v12[*(int *)(v15 + 24)];
      v17 = type metadata accessor for Artwork(0);
      v30 = *(_QWORD *)(v17 - 8);
      v31 = v16;
      v18 = v16;
      v19 = v17;
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v18, 1, v17))
        (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v19);
    }
    v20 = sub_100005574(&qword_10049EED8);
    (*(void (**)(char *, uint64_t))(v7 + 8))(&v12[*(int *)(v20 + 48)], v6);
    v5 = v32;
  }
  v22 = (id *)((char *)v9 + v1[8]);
  v23 = type metadata accessor for Collaboration.Object(0);
  if (swift_getEnumCaseMultiPayload(v22, v23) == 1)
  {
    v24 = type metadata accessor for Playlist(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v22, v24);
  }
  else
  {

  }
  swift_release(*(_QWORD *)((char *)v9 + v1[9]));
  v25 = (_QWORD *)((char *)v9 + v1[11]);
  if (*v25)
    swift_release(v25[1]);
  v26 = v3 | v8 | 7;
  v27 = (v4 + v5 + v8) & ~v8;
  swift_release(*(_QWORD *)((char *)v9 + v1[12] + 8));
  v28 = sub_1002B9030(*(_QWORD *)((char *)v9 + v1[13]), *(_QWORD *)((char *)v9 + v1[13] + 8));
  (*(void (**)(uint64_t, uint64_t, double))(v7 + 8))(v0 + v27, v6, v28);
  return swift_deallocObject(v0, v27 + v33, v26);
}

uint64_t sub_100314D6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(type metadata accessor for Collaboration.Flow.View(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for URL(0) - 8) + 80);
  v8 = v5 + v6 + v7;
  v9 = *(_QWORD *)(v1 + 16);
  v10 = *(_QWORD *)(v1 + 24);
  v11 = v1 + v5;
  v12 = v1 + (v8 & ~v7);
  v13 = (_QWORD *)swift_task_alloc(dword_10049F3C4);
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_10000F894;
  return sub_10030B3D0(a1, v9, v10, v11, v12);
}

uint64_t sub_100314E24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(type metadata accessor for Collaboration.Flow.View(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Playlist.Collaborator(0) - 8) + 80);
  v8 = v5 + v6 + v7;
  v9 = *(_QWORD *)(v1 + 16);
  v10 = *(_QWORD *)(v1 + 24);
  v11 = v1 + v5;
  v12 = v1 + (v8 & ~v7);
  v13 = (_QWORD *)swift_task_alloc(dword_10049F3D4);
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_10000F894;
  return sub_10030C100(a1, v9, v10, v11, v12);
}

uint64_t sub_100314EDC()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  id *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;

  v1 = (int *)type metadata accessor for Collaboration.Flow.View(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for Playlist.Collaborator(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v33 = *(_QWORD *)(v7 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v9 = (_QWORD *)(v0 + v4);
  v10 = sub_100005574(&qword_10049F780);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v10) == 1)
  {
    v11 = type metadata accessor for DismissAction(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v0 + v4, v11);
  }
  else
  {
    swift_release(*v9);
  }
  swift_release(*(_QWORD *)((char *)v9 + v1[5] + 8));
  swift_release(*(_QWORD *)((char *)v9 + v1[6] + 8));
  v12 = (char *)v9 + v1[7];
  v13 = type metadata accessor for Collaboration.Flow(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v12, v13);
  if (EnumCaseMultiPayload == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
  else if (!EnumCaseMultiPayload)
  {
    v32 = v5;
    v15 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v12, 1, v15))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v16 = &v12[*(int *)(v15 + 24)];
      v17 = type metadata accessor for Artwork(0);
      v30 = *(_QWORD *)(v17 - 8);
      v31 = v16;
      v18 = v16;
      v19 = v17;
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v18, 1, v17))
        (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v19);
    }
    v20 = &v12[*(int *)(sub_100005574(&qword_10049EED8) + 48)];
    v21 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
    v5 = v32;
  }
  v22 = (id *)((char *)v9 + v1[8]);
  v23 = type metadata accessor for Collaboration.Object(0);
  if (swift_getEnumCaseMultiPayload(v22, v23) == 1)
  {
    v24 = type metadata accessor for Playlist(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v22, v24);
  }
  else
  {

  }
  swift_release(*(_QWORD *)((char *)v9 + v1[9]));
  v25 = (_QWORD *)((char *)v9 + v1[11]);
  if (*v25)
    swift_release(v25[1]);
  v26 = v3 | v8 | 7;
  v27 = (v4 + v5 + v8) & ~v8;
  swift_release(*(_QWORD *)((char *)v9 + v1[12] + 8));
  v28 = sub_1002B9030(*(_QWORD *)((char *)v9 + v1[13]), *(_QWORD *)((char *)v9 + v1[13] + 8));
  (*(void (**)(uint64_t, uint64_t, double))(v7 + 8))(v0 + v27, v6, v28);
  return swift_deallocObject(v0, v27 + v33, v26);
}

uint64_t sub_10031518C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(type metadata accessor for Collaboration.Flow.View(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Playlist.Collaborator(0) - 8) + 80);
  v8 = v5 + v6 + v7;
  v9 = *(_QWORD *)(v1 + 16);
  v10 = *(_QWORD *)(v1 + 24);
  v11 = v1 + v5;
  v12 = v1 + (v8 & ~v7);
  v13 = (_QWORD *)swift_task_alloc(dword_10049F3EC);
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_10000F894;
  return sub_10030B9AC(a1, v9, v10, v11, v12);
}

unint64_t sub_100315240()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049F3F8;
  if (!qword_10049F3F8)
  {
    v1 = objc_opt_self(ICUserIdentity);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10049F3F8);
  }
  return result;
}

uint64_t _s4FlowO12ActionButtonV5StyleOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1003152C8 + 4 * byte_10039D995[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1003152FC + 4 * byte_10039D990[v4]))();
}

uint64_t sub_1003152FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100315304(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10031530CLL);
  return result;
}

uint64_t sub_100315318(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100315320);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100315324(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10031532C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s4FlowO12ActionButtonV5StyleOMa()
{
  return &_s4FlowO12ActionButtonV5StyleON;
}

unint64_t sub_10031534C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10049F400;
  if (!qword_10049F400)
  {
    v1 = sub_100005600(&qword_10049F1B8);
    v2[0] = sub_100005600(&qword_10049F1A8);
    v2[1] = sub_100313498();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.bold(_:)>>, 1);
    sub_10002FFB8(&qword_10049F408, &qword_10049F200, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049F400);
  }
  return result;
}

uint64_t sub_1003153F8()
{
  return sub_10002FFB8(&qword_10049F410, &qword_10049F418, (uint64_t)&protocol conformance descriptor for VStack<A>);
}

unint64_t sub_10031542C()
{
  unint64_t result;

  result = qword_10049F420;
  if (!qword_10049F420)
  {
    result = swift_getWitnessTable(&unk_10039DDC0, &_s4FlowO12ActionButtonV5StyleON);
    atomic_store(result, (unint64_t *)&qword_10049F420);
  }
  return result;
}

double sub_100315478@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_100315528(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t *)&unk_10049F740, &qword_10049B5E0).n128_u64[0];
  return result;
}

double sub_1003154D0@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_100315528(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_10049F880, &qword_10049EA50).n128_u64[0];
  return result;
}

__n128 sub_100315528@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  double v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  double v33;
  double v34;
  double v35;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __n128 result;
  unsigned int v45;
  unsigned int v46;
  double v47;
  double v48;
  double v49;
  double v50;
  _OWORD v51[7];

  v18 = v17;
  v19 = a9;
  v20 = a17;
  v22 = a14;
  v21 = a15;
  v23 = a12;
  v24 = a10;
  v25 = a2 & 1;
  v26 = a1;
  if ((_DWORD)v25)
    v26 = -INFINITY;
  v27 = a4 & 1;
  v28 = a3;
  if ((_DWORD)v27)
    v28 = v26;
  v29 = a6 & 1;
  v30 = a8 & 1;
  v31 = a5;
  if ((a6 & 1) != 0)
    v31 = v28;
  if (v26 > v28 || v28 > v31)
    goto LABEL_22;
  v33 = a7;
  if ((a8 & 1) != 0)
    v33 = -INFINITY;
  v34 = a10;
  if ((a11 & 1) != 0)
    v34 = v33;
  v35 = a12;
  if ((a13 & 1) != 0)
    v35 = v34;
  if (v33 > v34 || v34 > v35)
  {
LABEL_22:
    v49 = a5;
    v50 = a7;
    v47 = a3;
    v48 = a1;
    v46 = v25;
    v45 = v27;
    v38 = static os_log_type_t.fault.getter();
    v39 = (void *)static Log.runtimeIssuesLog.getter();
    v40 = v38;
    v19 = a9;
    os_log(_:dso:log:_:_:)(v40, &_mh_execute_header, v39, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v27 = v45;
    v22 = a14;
    v21 = a15;
    v25 = v46;
    v24 = a10;
    v23 = a12;
    a3 = v47;
    a1 = v48;
    a5 = v49;
    a7 = v50;
    v20 = a17;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v51, *(_QWORD *)&a1, v25, *(_QWORD *)&a3, v27, *(_QWORD *)&a5, v29, *(_QWORD *)&a7, v30, *(_QWORD *)&v24, a11 & 1, *(_QWORD *)&v23, a13 & 1, v22, v21);
  sub_100014A7C(v18, v19, a16);
  v41 = v19 + *(int *)(sub_100005574(v20) + 36);
  v42 = v51[5];
  *(_OWORD *)(v41 + 64) = v51[4];
  *(_OWORD *)(v41 + 80) = v42;
  *(_OWORD *)(v41 + 96) = v51[6];
  v43 = v51[1];
  *(_OWORD *)v41 = v51[0];
  *(_OWORD *)(v41 + 16) = v43;
  result = (__n128)v51[3];
  *(_OWORD *)(v41 + 32) = v51[2];
  *(__n128 *)(v41 + 48) = result;
  return result;
}

uint64_t sub_1003156F4@<X0>(unint64_t a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, unint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, __n128 a10@<Q0>, double a11, char a12, double a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20)
{
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  double v34;
  double v36;
  double v37;
  uint64_t v39;
  void *v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  unsigned int v45;
  unsigned int v46;
  unint64_t v47;
  double v48;
  unint64_t v49;
  double v50;
  _OWORD v51[7];

  v21 = a20;
  v22 = a19;
  v23 = a18;
  v25 = a15;
  v24 = a16;
  v26 = a13;
  v27 = a11;
  v28 = a2 & 1;
  a10.n128_u64[0] = a1;
  if ((_DWORD)v28)
    a10.n128_f64[0] = -INFINITY;
  v29 = a4 & 1;
  v30 = a3;
  if ((_DWORD)v29)
    v30 = a10.n128_f64[0];
  v31 = a6 & 1;
  v32 = a8 & 1;
  v33 = a14 & 1;
  v34 = a5;
  if ((a6 & 1) != 0)
    v34 = v30;
  if (a10.n128_f64[0] > v30 || v30 > v34)
    goto LABEL_22;
  a10.n128_u64[0] = a7;
  if ((a8 & 1) != 0)
    a10.n128_f64[0] = -INFINITY;
  v36 = a11;
  if ((a12 & 1) != 0)
    v36 = a10.n128_f64[0];
  v37 = a13;
  if ((a14 & 1) != 0)
    v37 = v36;
  if (a10.n128_f64[0] > v36 || v36 > v37)
  {
LABEL_22:
    v49 = a7;
    v50 = a5;
    v47 = a1;
    v48 = a3;
    v46 = v28;
    v45 = v29;
    v39 = static os_log_type_t.fault.getter(a10);
    v40 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v39, &_mh_execute_header, v40, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v33 = a14 & 1;
    v29 = v45;
    v25 = a15;
    v24 = a16;
    v28 = v46;
    v27 = a11;
    v26 = a13;
    a1 = v47;
    a3 = v48;
    a7 = v49;
    a5 = v50;
    v22 = a19;
    v21 = a20;
    v23 = a18;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v51, a1, v28, *(_QWORD *)&a3, v29, *(_QWORD *)&a5, v31, a7, v32, *(_QWORD *)&v27, a12 & 1, *(_QWORD *)&v26, v33, v25, v24);
  *(_QWORD *)a9 = a17;
  *(_QWORD *)(a9 + 8) = v23;
  *(_BYTE *)(a9 + 16) = v22 & 1;
  *(_QWORD *)(a9 + 24) = v21;
  v41 = v51[5];
  *(_OWORD *)(a9 + 96) = v51[4];
  *(_OWORD *)(a9 + 112) = v41;
  *(_OWORD *)(a9 + 128) = v51[6];
  v42 = v51[1];
  *(_OWORD *)(a9 + 32) = v51[0];
  *(_OWORD *)(a9 + 48) = v42;
  v43 = v51[3];
  *(_OWORD *)(a9 + 64) = v51[2];
  *(_OWORD *)(a9 + 80) = v43;
  sub_10003B4C0(a17, v23, v22 & 1);
  return swift_bridgeObjectRetain();
}

double sub_1003158D4@<D0>(unint64_t a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, unint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, __n128 a10@<Q0>, double a11, char a12, double a13, char a14, uint64_t a15, uint64_t a16)
{
  double result;

  *(_QWORD *)&result = sub_100315C00(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, &qword_10049E560, &qword_10049E568).n128_u64[0];
  return result;
}

double sub_10031592C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_100315528(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t *)&unk_10049F730, &qword_10049E580).n128_u64[0];
  return result;
}

uint64_t sub_100315984@<X0>(unint64_t a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, unint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, __n128 a10@<Q0>, double a11, char a12, double a13, char a14, uint64_t a15, uint64_t a16)
{
  __int128 *v16;
  uint64_t v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v28;
  double v29;
  uint64_t v31;
  void *v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  unsigned int v39;
  double v40;
  unint64_t v41;
  double v42;
  unint64_t v43;
  _OWORD v44[7];
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  _BYTE v48[32];

  v18 = a16;
  v19 = a13;
  v20 = a11;
  v21 = a2 & 1;
  a10.n128_u64[0] = a1;
  if ((_DWORD)v21)
    a10.n128_f64[0] = -INFINITY;
  v22 = a4 & 1;
  v23 = a3;
  if ((a4 & 1) != 0)
    v23 = a10.n128_f64[0];
  v24 = a6 & 1;
  v25 = a8 & 1;
  v26 = a5;
  if ((a6 & 1) != 0)
    v26 = v23;
  if (a10.n128_f64[0] > v23 || v23 > v26)
    goto LABEL_22;
  a10.n128_u64[0] = a7;
  if ((a8 & 1) != 0)
    a10.n128_f64[0] = -INFINITY;
  v28 = a11;
  if ((a12 & 1) != 0)
    v28 = a10.n128_f64[0];
  v29 = a13;
  if ((a14 & 1) != 0)
    v29 = v28;
  if (a10.n128_f64[0] > v28 || v28 > v29)
  {
LABEL_22:
    v43 = a7;
    v41 = a1;
    v42 = a5;
    v40 = a3;
    v39 = v21;
    v31 = static os_log_type_t.fault.getter(a10);
    v32 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v31, &_mh_execute_header, v32, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v18 = a16;
    v20 = a11;
    v21 = v39;
    a3 = v40;
    a1 = v41;
    a5 = v42;
    v19 = a13;
    a7 = v43;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v44, a1, v21, *(_QWORD *)&a3, v22, *(_QWORD *)&a5, v24, a7, v25, *(_QWORD *)&v20, a12 & 1, *(_QWORD *)&v19, a14 & 1, a15, v18);
  v33 = v16[1];
  v45 = *v16;
  v46 = v33;
  sub_10031B74C((uint64_t)&v45, (uint64_t)v48);
  v34 = v16[1];
  *(_OWORD *)a9 = *v16;
  *(_OWORD *)(a9 + 16) = v34;
  v35 = v44[2];
  *(_OWORD *)(a9 + 88) = v44[3];
  v36 = v44[5];
  *(_OWORD *)(a9 + 104) = v44[4];
  *(_OWORD *)(a9 + 120) = v36;
  *(_OWORD *)(a9 + 136) = v44[6];
  v37 = v44[1];
  *(_OWORD *)(a9 + 40) = v44[0];
  *(_OWORD *)(a9 + 56) = v37;
  v47 = *((_QWORD *)&v46 + 1);
  *(_WORD *)(a9 + 32) = *((_WORD *)v16 + 16);
  *(_OWORD *)(a9 + 72) = v35;
  sub_10031B788((uint64_t)v48);
  return sub_10031B7B8((uint64_t)&v47);
}

double sub_100315B50@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_100315528(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t *)&unk_10049F720, &qword_10049F218).n128_u64[0];
  return result;
}

double sub_100315BA8@<D0>(unint64_t a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, unint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, __n128 a10@<Q0>, double a11, char a12, double a13, char a14, uint64_t a15, uint64_t a16)
{
  double result;

  *(_QWORD *)&result = sub_100315C00(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, (uint64_t *)&unk_10049F710, &qword_10049F198).n128_u64[0];
  return result;
}

__n128 sub_100315C00@<Q0>(unint64_t a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, unint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, __n128 a10@<Q0>, double a11, char a12, double a13, char a14, uint64_t a15, uint64_t a16, uint64_t *a17, uint64_t *a18)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  double v32;
  double v33;
  uint64_t v35;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __n128 result;
  unsigned int v45;
  unint64_t v46;
  double v47;
  unint64_t v48;
  double v49;
  _OWORD v50[7];

  v19 = a9;
  v20 = a17;
  v22 = a15;
  v21 = a16;
  v23 = a13;
  v24 = a11;
  v25 = a2 & 1;
  a10.n128_u64[0] = a1;
  if ((_DWORD)v25)
    a10.n128_f64[0] = -INFINITY;
  v26 = a4 & 1;
  v27 = a3;
  if ((_DWORD)v26)
    v27 = a10.n128_f64[0];
  v28 = a6 & 1;
  v29 = a8 & 1;
  v30 = a5;
  if ((a6 & 1) != 0)
    v30 = v27;
  if (a10.n128_f64[0] > v27 || v27 > v30)
    goto LABEL_22;
  a10.n128_u64[0] = a7;
  if ((a8 & 1) != 0)
    a10.n128_f64[0] = -INFINITY;
  v32 = a11;
  if ((a12 & 1) != 0)
    v32 = a10.n128_f64[0];
  v33 = a13;
  if ((a14 & 1) != 0)
    v33 = v32;
  if (a10.n128_f64[0] > v32 || v32 > v33)
  {
LABEL_22:
    v48 = a7;
    v49 = a5;
    v46 = a1;
    v47 = a3;
    v45 = v25;
    v35 = v26;
    v37 = static os_log_type_t.fault.getter(a10);
    v38 = (void *)static Log.runtimeIssuesLog.getter();
    v39 = v37;
    v19 = a9;
    os_log(_:dso:log:_:_:)(v39, &_mh_execute_header, v38, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v26 = v35;
    v22 = a15;
    v21 = a16;
    v25 = v45;
    v24 = a11;
    v23 = a13;
    a1 = v46;
    a3 = v47;
    a7 = v48;
    a5 = v49;
    v20 = a17;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v50, a1, v25, *(_QWORD *)&a3, v26, *(_QWORD *)&a5, v28, a7, v29, *(_QWORD *)&v24, a12 & 1, *(_QWORD *)&v23, a14 & 1, v22, v21);
  v40 = sub_100005574(v20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v19, v18, v40);
  v41 = v19 + *(int *)(sub_100005574(a18) + 36);
  v42 = v50[5];
  *(_OWORD *)(v41 + 64) = v50[4];
  *(_OWORD *)(v41 + 80) = v42;
  *(_OWORD *)(v41 + 96) = v50[6];
  v43 = v50[1];
  *(_OWORD *)v41 = v50[0];
  *(_OWORD *)(v41 + 16) = v43;
  result = (__n128)v50[3];
  *(_OWORD *)(v41 + 32) = v50[2];
  *(__n128 *)(v41 + 48) = result;
  return result;
}

uint64_t InlineProfileEditingView.Context.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  InlineProfileEditingView.Context.init()();
  return v1;
}

double InlineProfileEditingView.init(context:)@<D0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  __n128 v3;
  double result;
  __n128 v5;
  __n128 v6[5];
  unint64_t v7;

  sub_10031A904(a1, v6);
  v3 = v6[3];
  a2[2] = v6[2];
  a2[3] = v3;
  a2[4] = v6[4];
  a2[5].n128_u64[0] = v7;
  result = v6[0].n128_f64[0];
  v5 = v6[1];
  *a2 = v6[0];
  a2[1] = v5;
  return result;
}

uint64_t property wrapper backing initializer of InlineProfileEditingView.Context.artwork(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = sub_100005574((uint64_t *)&unk_10049F430);
  __chkstk_darwin();
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100014A7C(a1, (uint64_t)v4, (uint64_t *)&unk_10049F430);
  Published.init(initialValue:)(v4, v2);
  return sub_100008758(a1, (uint64_t *)&unk_10049F430);
}

double InlineProfileEditingView.Context.userArtwork.getter@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  double result;

  KeyPath = swift_getKeyPath(&unk_10039DE38);
  v4 = swift_getKeyPath(&unk_10039DE60);
  static Published.subscript.getter(a1, v1, KeyPath, v4);
  swift_release(KeyPath);
  *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  return result;
}

uint64_t sub_100315F68()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10039DDF0);
  v2 = swift_getKeyPath(&unk_10039DE18);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t property wrapper backing initializer of Reactions.StackView.Model.userImage(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = a1;
  v1 = sub_100005574(&qword_100499760);
  return Published.init(initialValue:)(&v3, v1);
}

uint64_t sub_10031601C()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10039DE88);
  v2 = swift_getKeyPath(&unk_10039DEB0);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t InlineProfileEditingView.Context.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t KeyPath;
  uint64_t v33;
  id v34;
  void *v35;
  id v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  NSString *v57;
  id v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  id v62;
  Class isa;
  id v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  id v72;
  void *v73;
  void *v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  __n128 v82;
  id v83;
  void *v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  id v88;
  Class v89;
  id v90;
  id v91;
  uint64_t v92;
  __n128 v93;
  char *v95;
  char *v96;
  _QWORD *v97;
  _QWORD *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  id v107;
  unint64_t v108;

  v1 = sub_100005574((uint64_t *)&unk_10049F440);
  v102 = *(_QWORD *)(v1 - 8);
  v103 = v1;
  __chkstk_darwin();
  v99 = (char *)&v95 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100005574(&qword_10049BB68);
  v100 = *(_QWORD *)(v3 - 8);
  v101 = v3;
  __chkstk_darwin();
  v5 = (char *)&v95 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100005574(&qword_10049F450);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = (char *)&v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100005574((uint64_t *)&unk_10049F430);
  __chkstk_darwin();
  v97 = (char **)((char *)&v95 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  v98 = (char **)((char *)&v95 - v12);
  __chkstk_darwin();
  v14 = (char *)&v95 - v13;
  __chkstk_darwin();
  v16 = (char *)&v95 - v15;
  v17 = v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context__artwork;
  v18 = type metadata accessor for Artwork(0);
  v104 = *(_QWORD *)(v18 - 8);
  v105 = v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v104 + 56))(v16, 1, 1);
  sub_100014A7C((uint64_t)v16, (uint64_t)v14, (uint64_t *)&unk_10049F430);
  v96 = v14;
  Published.init(initialValue:)(v14, v10);
  v95 = v16;
  sub_100008758((uint64_t)v16, (uint64_t *)&unk_10049F430);
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v17, v9, v6);
  v19 = v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context__name;
  v107 = 0;
  v108 = 0xE000000000000000;
  Published.init(initialValue:)(&v107, &type metadata for String);
  (*(void (**)(uint64_t, char *, uint64_t))(v100 + 32))(v19, v5, v101);
  v20 = v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context__image;
  v107 = 0;
  v21 = sub_100005574(&qword_100499760);
  v22 = v99;
  Published.init(initialValue:)(&v107, v21);
  v23 = v0;
  (*(void (**)(uint64_t, char *, uint64_t))(v102 + 32))(v20, v22, v103);
  *(_BYTE *)(v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context_hasRemovedImage) = 0;
  v24 = objc_msgSend((id)objc_opt_self(ICMediaUserStateCenter), "shared");
  v25 = objc_msgSend(v24, "activeUserState");

  v26 = objc_msgSend(v25, "music");
  v27 = objc_msgSend(v26, "userProfile");

  if (v27)
  {
    v28 = objc_msgSend(v27, "name");
    v29 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
    v31 = v30;

    KeyPath = swift_getKeyPath(&unk_10039DDF0);
    v33 = swift_getKeyPath(&unk_10039DE18);
    v107 = v29;
    v108 = v31;
    swift_retain(v23);
    static Published.subscript.setter(&v107, v23, KeyPath, v33);
    v34 = objc_msgSend(v27, "artworkInfo");
    if (v34)
    {
      v35 = v34;
      v36 = objc_msgSend(v34, "responseDictionary");

      if (v36)
      {
        v37 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v36, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

        v38 = sub_10030E4D8(v37);
        swift_bridgeObjectRelease();
        if (v38)
        {
          v39 = (uint64_t)v95;
          Artwork.init(_:)(v38);
          v40 = swift_getKeyPath(&unk_10039DE38);
          v41 = swift_getKeyPath(&unk_10039DE60);
          v42 = (uint64_t)v96;
          sub_100014A7C(v39, (uint64_t)v96, (uint64_t *)&unk_10049F430);
          swift_retain(v23);
          static Published.subscript.setter(v42, v23, v40, v41);
          sub_100008758(v39, (uint64_t *)&unk_10049F430);
        }
      }
    }
  }
  v43 = swift_getKeyPath(&unk_10039DDF0);
  v44 = swift_getKeyPath(&unk_10039DE18);
  static Published.subscript.getter(&v107, v23, v43);
  swift_release(v43);
  swift_release(v44);
  v46 = (unint64_t)v107;
  v45 = v108;
  swift_bridgeObjectRelease();
  v47 = HIBYTE(v45) & 0xF;
  if ((v45 & 0x2000000000000000) == 0)
    v47 = v46 & 0xFFFFFFFFFFFFLL;
  v49 = v104;
  v48 = v105;
  if (v47)
  {
    v50 = swift_getKeyPath(&unk_10039DE38);
    v51 = swift_getKeyPath(&unk_10039DE60);
    v52 = v98;
    static Published.subscript.getter(v98, v23, v50);
    swift_release(v50);
    v53 = swift_release(v51);
    LODWORD(v50) = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, __n128))(v49 + 48))(v52, 1, v48, v53);
    sub_100008758((uint64_t)v52, (uint64_t *)&unk_10049F430);
    if ((_DWORD)v50 != 1)
      goto LABEL_24;
  }
  v54 = sub_100005574(&qword_100499F50);
  v55 = swift_allocObject(v54, 40, 7);
  *(_OWORD *)(v55 + 16) = xmmword_100384730;
  *(_QWORD *)(v55 + 32) = CNContactThumbnailImageDataKey;
  v107 = (id)v55;
  specialized Array._endMutation()(v55);
  v106 = (unint64_t)v107;
  v56 = (void *)objc_opt_self(CNContactFormatter);
  v57 = CNContactThumbnailImageDataKey;
  v58 = objc_msgSend(v56, "descriptorForRequiredKeysForStyle:", 0);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v58);
  v60 = *(_QWORD *)((v106 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v59 = *(_QWORD *)((v106 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v60 >= v59 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v59 > 1, v60 + 1, 1);
  v61 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v60, v58);
  specialized Array._endMutation()(v61);
  v62 = objc_msgSend(objc_allocWithZone((Class)CNContactStore), "init");
  sub_100005574(&qword_10049F478);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v107 = 0;
  v64 = objc_msgSend(v62, "_ios_meContactWithKeysToFetch:error:", isa, &v107);

  v65 = v107;
  if (!v64)
  {
    v91 = v107;
    v92 = _convertNSErrorToError(_:)(v65);

    swift_willThrow(v93);
    swift_errorRelease(v92);
    return v23;
  }
  v66 = swift_getKeyPath(&unk_10039DDF0);
  v67 = swift_getKeyPath(&unk_10039DE18);
  v68 = v65;
  static Published.subscript.getter(&v107, v23, v66);
  swift_release(v66);
  swift_release(v67);
  v70 = (unint64_t)v107;
  v69 = v108;
  swift_bridgeObjectRelease();
  v71 = HIBYTE(v69) & 0xF;
  if ((v69 & 0x2000000000000000) == 0)
    v71 = v70 & 0xFFFFFFFFFFFFLL;
  if (!v71)
  {
    v72 = objc_msgSend(v56, "stringFromContact:style:", v64, 0);
    if (v72)
    {
      v73 = v72;
      v74 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v72);
      v76 = v75;

      v77 = swift_getKeyPath(&unk_10039DDF0);
      v78 = swift_getKeyPath(&unk_10039DE18);
      v107 = v74;
      v108 = v76;
      swift_retain(v23);
      static Published.subscript.setter(&v107, v23, v77, v78);
    }
  }
  v79 = swift_getKeyPath(&unk_10039DE38);
  v80 = swift_getKeyPath(&unk_10039DE60);
  v81 = v97;
  static Published.subscript.getter(v97, v23, v79);
  swift_release(v79);
  v82 = swift_release(v80);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t, __n128))(v49 + 48))(v81, 1, v48, v82) != 1)
  {

    sub_100008758((uint64_t)v81, (uint64_t *)&unk_10049F430);
    return v23;
  }
  sub_100008758((uint64_t)v81, (uint64_t *)&unk_10049F430);
  v83 = objc_msgSend(v64, "thumbnailImageData");
  if (!v83)
  {

LABEL_24:
    return v23;
  }
  v84 = v83;
  v85 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v83);
  v87 = v86;

  v88 = objc_allocWithZone((Class)UIImage);
  sub_1000516F8(v85, v87);
  v89 = Data._bridgeToObjectiveC()().super.isa;
  v90 = objc_msgSend(v88, "initWithData:", v89);
  sub_1000067E8(v85, v87);

  sub_10031A738(v90);
  sub_1000067E8(v85, v87);
  return v23;
}

BOOL InlineProfileEditingView.Context.canValidate.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  Swift::String v3;
  unint64_t v4;
  uint64_t v6;

  KeyPath = swift_getKeyPath(&unk_10039DDF0);
  v2 = swift_getKeyPath(&unk_10039DE18);
  static Published.subscript.getter(&v6, v0, KeyPath);
  swift_release(KeyPath);
  swift_release(v2);
  v3 = String.trim()();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = ((unint64_t)v3._object >> 56) & 0xF;
  if (((uint64_t)v3._object & 0x2000000000000000) == 0)
    v4 = v3._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  return v4 != 0;
}

uint64_t InlineProfileEditingView.Context.userName.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t countAndFlagsBits;
  uint64_t v5;

  KeyPath = swift_getKeyPath(&unk_10039DDF0);
  v2 = swift_getKeyPath(&unk_10039DE18);
  static Published.subscript.getter(&v5, v0, KeyPath);
  swift_release(KeyPath);
  swift_release(v2);
  countAndFlagsBits = String.trim()()._countAndFlagsBits;
  swift_bridgeObjectRelease();
  return countAndFlagsBits;
}

uint64_t InlineProfileEditingView.Context.hasRemovedImage.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context_hasRemovedImage);
  swift_beginAccess(v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context_hasRemovedImage, v3, 0, 0);
  return *v1;
}

void InlineProfileEditingView.Context.hasRemovedImage.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  _BYTE v4[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context_hasRemovedImage);
  swift_beginAccess(v3, v4, 1, 0);
  *v3 = a1;
}

uint64_t (*InlineProfileEditingView.Context.hasRemovedImage.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context_hasRemovedImage, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t InlineProfileEditingView.Context.userImage.getter()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _BYTE *v3;
  uint64_t result;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  sub_100005574((uint64_t *)&unk_10049F430);
  __chkstk_darwin();
  v2 = &v11[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v3 = (_BYTE *)(v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context_hasRemovedImage);
  swift_beginAccess(v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context_hasRemovedImage, v11, 0, 0);
  result = 0;
  if ((*v3 & 1) == 0)
  {
    KeyPath = swift_getKeyPath(&unk_10039DE38);
    v6 = swift_getKeyPath(&unk_10039DE60);
    static Published.subscript.getter(v2, v0, KeyPath);
    swift_release(KeyPath);
    swift_release(v6);
    v7 = type metadata accessor for Artwork(0);
    LODWORD(KeyPath) = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v2, 1, v7);
    sub_100008758((uint64_t)v2, (uint64_t *)&unk_10049F430);
    result = 0;
    if ((_DWORD)KeyPath == 1)
    {
      v8 = swift_getKeyPath(&unk_10039DE88);
      v9 = swift_getKeyPath(&unk_10039DEB0);
      static Published.subscript.getter(&v10, v0, v8);
      swift_release(v8);
      swift_release(v9);
      return v10;
    }
  }
  return result;
}

uint64_t InlineProfileEditingView.Context.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context__artwork;
  v2 = sub_100005574(&qword_10049F450);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context__name;
  v4 = sub_100005574(&qword_10049BB68);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context__image;
  v6 = sub_100005574((uint64_t *)&unk_10049F440);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return v0;
}

uint64_t InlineProfileEditingView.Context.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context__artwork;
  v2 = sub_100005574(&qword_10049F450);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context__name;
  v4 = sub_100005574(&qword_10049BB68);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context__image;
  v6 = sub_100005574((uint64_t *)&unk_10049F440);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100316E60@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for InlineProfileEditingView.Context(0);
  result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

uint64_t property wrapper backing initializer of InlineProfileEditingView.imagePickerSourceType(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];
  uint64_t v4;

  v3[0] = a1;
  v3[1] = a2;
  State.init(wrappedValue:)(&v4, v3, &type metadata for ImagePicker.SourceType);
  return v4;
}

uint64_t property wrapper backing initializer of InlineProfileEditingView.context(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for InlineProfileEditingView.Context(0);
  v3 = sub_100006924(&qword_10049F480, type metadata accessor for InlineProfileEditingView.Context, (uint64_t)&protocol conformance descriptor for InlineProfileEditingView.Context);
  return ObservedObject.init(wrappedValue:)(a1, v2, v3);
}

uint64_t InlineProfileEditingView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  char v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  char *v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  char *v81;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char v108[16];
  uint64_t v109;
  __int128 v110;
  uint64_t v111;
  uint64_t v112;
  unsigned __int8 v113;
  uint64_t v114;
  unint64_t v115;
  _OWORD v116[7];

  v2 = v1;
  v106 = a1;
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v105 = (char *)&v88 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = type metadata accessor for String.LocalizationValue(0);
  v99 = *(_QWORD *)(v104 - 8);
  __chkstk_darwin();
  v100 = (char *)&v88 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v98 = (char *)&v88 - v5;
  v91 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin();
  v7 = (_OWORD *)((char *)&v88 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100005574(&qword_10049F488);
  __chkstk_darwin();
  v9 = (char *)&v88 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100005574(&qword_10049F490);
  __chkstk_darwin();
  v12 = (char *)&v88 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = sub_100005574(&qword_10049F498);
  __chkstk_darwin();
  v14 = (char *)&v88 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_10049F4A0);
  __chkstk_darwin();
  v16 = (char *)&v88 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = sub_100005574(&qword_10049F4A8);
  __chkstk_darwin();
  v92 = (char *)&v88 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = sub_100005574(&qword_10049F4B0);
  v96 = *(_QWORD *)(v97 - 8);
  __chkstk_darwin();
  v94 = (char *)&v88 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = sub_100005574(&qword_10049F4B8);
  __chkstk_darwin();
  v93 = (char *)&v88 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = sub_100005574(&qword_10049F4C0);
  v102 = *(_QWORD *)(v103 - 8);
  v20 = __chkstk_darwin();
  v101 = (char *)&v88 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v9 = static VerticalAlignment.center.getter(v20);
  *((_QWORD *)v9 + 1) = 0;
  v9[16] = 1;
  v22 = sub_100005574(&qword_10049F4C8);
  sub_100317854(v2, (uint64_t)&v9[*(int *)(v22 + 44)]);
  v23 = objc_msgSend((id)objc_opt_self(UIColor), "quaternarySystemFillColor");
  v24 = Color.init(_:)(v23);
  v25 = static Edge.Set.all.getter(v24);
  sub_100014A7C((uint64_t)v9, (uint64_t)v12, &qword_10049F488);
  v26 = &v12[*(int *)(v10 + 36)];
  *(_QWORD *)v26 = v24;
  v26[8] = v25;
  v27 = sub_100008758((uint64_t)v9, &qword_10049F488);
  v28 = static Alignment.center.getter(v27);
  LOBYTE(v85) = 1;
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v116, 0, 1, 0, 1, 0, 1, 0x4052800000000000, 0, 0, 1, 0, v85, v28, v29);
  sub_100014A7C((uint64_t)v12, (uint64_t)v14, &qword_10049F490);
  v30 = &v14[*(int *)(v90 + 36)];
  v31 = v116[5];
  *((_OWORD *)v30 + 4) = v116[4];
  *((_OWORD *)v30 + 5) = v31;
  *((_OWORD *)v30 + 6) = v116[6];
  v32 = v116[1];
  *(_OWORD *)v30 = v116[0];
  *((_OWORD *)v30 + 1) = v32;
  v33 = v116[3];
  *((_OWORD *)v30 + 2) = v116[2];
  *((_OWORD *)v30 + 3) = v33;
  v34 = sub_100008758((uint64_t)v12, &qword_10049F490);
  v35 = static Alignment.center.getter(v34);
  sub_100315528(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v16, 0.0, 1, 0.0, 1, v35, v36, &qword_10049F498, &qword_10049F4A0);
  sub_100008758((uint64_t)v14, &qword_10049F498);
  v37 = (char *)v7 + *(int *)(v91 + 20);
  v38 = enum case for RoundedCornerStyle.continuous(_:);
  v39 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 104))(v37, v38, v39);
  __asm { FMOV            V0.2D, #16.0 }
  *v7 = _Q0;
  v45 = (uint64_t)v92;
  v46 = (uint64_t)&v92[*(int *)(v107 + 36)];
  sub_100082248((uint64_t)v7, v46, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v46 + *(int *)(sub_100005574((uint64_t *)&unk_10049F4D0) + 36)) = 256;
  sub_100014A7C((uint64_t)v16, v45, &qword_10049F4A0);
  sub_100006798((uint64_t)v7, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  sub_100008758((uint64_t)v16, &qword_10049F4A0);
  v114 = 0;
  v115 = 0xE000000000000000;
  v47 = v89;
  v110 = *(_OWORD *)(v89 + 16);
  v90 = sub_100005574(&qword_10049C5C8);
  State.projectedValue.getter(&v111, v90);
  v49 = v111;
  v48 = v112;
  v50 = v113;
  v109 = v47;
  v51 = sub_100005574(&qword_10049F4E0);
  v52 = sub_10031AAC8();
  v53 = sub_10024AF7C();
  v54 = v99;
  v55 = sub_10002FFB8(&qword_10049F530, &qword_10049F4E0, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  v91 = v53;
  v84 = v52;
  v85 = v53;
  v56 = v100;
  v83 = v51;
  v57 = v98;
  v58 = v94;
  View.confirmationDialog<A, B>(_:isPresented:titleVisibility:actions:)(&v114, v49, v48, v50, 2, sub_10031AAC0, v108, v107, &type metadata for String, v83, v84, v85, v55);
  v59 = (uint64_t)v93;
  swift_release(v48);
  v60 = v49;
  v61 = v47;
  v62 = v95;
  swift_release(v60);
  swift_bridgeObjectRelease();
  v63 = sub_100008758(v45, &qword_10049F4A8);
  v64 = static Alignment.center.getter(v63);
  v66 = v65;
  v67 = v59 + *(int *)(v62 + 36);
  sub_1003198D0((uint64_t *)v61, v67);
  v68 = (uint64_t *)(v67 + *(int *)(sub_100005574(&qword_10049F538) + 36));
  v69 = v104;
  *v68 = v64;
  v68[1] = v66;
  (*(void (**)(uint64_t, char *, uint64_t))(v96 + 32))(v59, v58, v97);
  String.LocalizationValue.init(stringLiteral:)(0x6D614E2074696445, 0xE900000000000065);
  (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v56, v57, v69);
  if (qword_100498860 != -1)
    swift_once(&qword_100498860, sub_100232E30);
  v70 = qword_1004A2F90;
  v71 = (id)qword_1004A2F90;
  v72 = v105;
  static Locale.current.getter(v71);
  v73 = String.init(localized:table:bundle:locale:comment:)(v56, 0, 0, v70, v72, 0, 0, 256);
  v75 = v74;
  (*(void (**)(char *, uint64_t))(v54 + 8))(v57, v69);
  v114 = v73;
  v115 = v75;
  v110 = *(_OWORD *)(v61 + 48);
  State.projectedValue.getter(&v111, v90);
  v77 = v111;
  v76 = v112;
  v78 = v113;
  __chkstk_darwin();
  v79 = sub_100005574(&qword_10049F540);
  v80 = sub_10031AC34();
  v87 = sub_10002FFB8(&qword_10049F558, &qword_10049F540, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  v85 = v80;
  v86 = v91;
  v84 = v79;
  v81 = v101;
  ((void (*)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t (*)@<X0>(char *@<X8>), unint64_t *, uint64_t, _QWORD *))View.alert<A, B>(_:isPresented:actions:))(&v114, v77, v76, v78, sub_10031AC2C, &v84, v62, &type metadata for String);
  swift_release(v76);
  swift_release(v77);
  swift_bridgeObjectRelease();
  sub_100008758(v59, &qword_10049F4B8);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v102 + 32))(v106, v81, v103);
}

uint64_t sub_100317854@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  double v41;
  uint64_t v42;
  uint64_t KeyPath;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  double v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  __n128 v74;
  uint64_t v75;
  uint64_t (*v76)(uint64_t, uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  Swift::String v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  int v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _OWORD *v109;
  __int128 v110;
  uint64_t v111;
  double v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  Swift::String v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  Swift::String v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char v139;
  char v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char v144;
  char v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t *v148;
  char v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  id v155;
  char *v156;
  uint64_t v157;
  void *v158;
  void *v159;
  uint64_t v160;
  uint64_t v161;
  __int128 v162;
  __int128 v163;
  unint64_t v164;
  char *v165;
  __n128 v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t *v173;
  uint64_t v174;
  uint64_t *v175;
  unint64_t v176;
  uint64_t v177;
  uint64_t v178;
  Swift::String v179;
  unint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  id v184;
  char *v185;
  uint64_t v186;
  void *v187;
  void *v188;
  uint64_t v189;
  uint64_t v190;
  __int128 v191;
  __int128 v192;
  unint64_t v193;
  char *v194;
  uint64_t v195;
  double v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  int *v218;
  uint64_t v219;
  uint64_t v221;
  char *v222;
  char *v223;
  char *v224;
  char *v225;
  uint64_t v226;
  char *v227;
  char *v228;
  uint64_t v229;
  uint64_t v230;
  char *v231;
  uint64_t v232;
  uint64_t v233;
  char *v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  char *v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  char *v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t *v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  char *v255;
  uint64_t v256;
  char *v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  char *v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  char *v268;
  char *v269;
  uint64_t v270;
  uint64_t v271;
  Swift::String v272;
  __int128 v273;
  __int128 v274;
  __int128 v275;
  uint64_t v276;
  char v277;
  uint64_t v278;
  char v279;
  uint64_t v280;
  __int16 v281;

  v266 = a2;
  v243 = sub_100005574(&qword_10049F798);
  __chkstk_darwin();
  v247 = (char *)&v221 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v244 = sub_100005574(&qword_10049F7A0);
  __chkstk_darwin();
  v246 = (uint64_t)&v221 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v263 = sub_100005574(&qword_10049F7A8);
  v262 = *(_QWORD *)(v263 - 8);
  __chkstk_darwin();
  v245 = (uint64_t)&v221 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574((uint64_t *)&unk_10049F7B0);
  __chkstk_darwin();
  v265 = (uint64_t)&v221 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v264 = (char *)&v221 - v7;
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v255 = (char *)&v221 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v256 = type metadata accessor for String.LocalizationValue(0);
  v254 = *(_QWORD *)(v256 - 8);
  __chkstk_darwin();
  v268 = (char *)&v221 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v269 = (char *)&v221 - v10;
  v259 = sub_100005574((uint64_t *)&unk_10049DB50);
  v258 = *(_QWORD *)(v259 - 8);
  __chkstk_darwin();
  v257 = (char *)&v221 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v252 = sub_100005574((uint64_t *)&unk_10049E480);
  __chkstk_darwin();
  v240 = (char *)&v221 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v241 = (uint64_t)&v221 - v13;
  v250 = sub_100005574(&qword_10049F7C0);
  __chkstk_darwin();
  v251 = (uint64_t *)((char *)&v221 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100005574(&qword_10049F7C8);
  __chkstk_darwin();
  v261 = (uint64_t)&v221 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v271 = (uint64_t)&v221 - v16;
  v237 = type metadata accessor for ArtworkImage.ReusePolicy(0);
  v238 = *(_QWORD *)(v237 - 8);
  __chkstk_darwin();
  v225 = (char *)&v221 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  v234 = (char *)&v221 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v226 = type metadata accessor for Artwork(0);
  v242 = *(_QWORD *)(v226 - 8);
  __chkstk_darwin();
  v227 = (char *)&v221 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574((uint64_t *)&unk_10049F7D0);
  __chkstk_darwin();
  v228 = (char *)&v221 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v235 = sub_100005574(&qword_10049C500);
  v236 = *(_QWORD *)(v235 - 8);
  __chkstk_darwin();
  v232 = (uint64_t)&v221 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v229 = sub_100005574((uint64_t *)&unk_10049F7E0);
  __chkstk_darwin();
  v231 = (char *)&v221 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v230 = sub_100005574(&qword_10049F268);
  __chkstk_darwin();
  v224 = (char *)&v221 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v249 = sub_100005574(&qword_10049F7F0);
  __chkstk_darwin();
  v233 = (uint64_t)&v221 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v239 = (uint64_t)&v221 - v25;
  v248 = sub_100005574(&qword_10049F7F8);
  __chkstk_darwin();
  v27 = (char *)&v221 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for Image.ResizingMode(0);
  v29 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin();
  v31 = (char *)&v221 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574((uint64_t *)&unk_10049F430);
  __chkstk_darwin();
  v33 = (char *)&v221 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v35 = (uint64_t *)((char *)&v221 - v34);
  __chkstk_darwin();
  v37 = (char *)&v221 - v36;
  sub_100005574((uint64_t *)&unk_10049F800);
  __chkstk_darwin();
  v253 = (uint64_t)&v221 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v270 = (uint64_t)&v221 - v39;
  v40 = Int.seconds.getter(54);
  v41 = Int.seconds.getter(10);
  v260 = a1;
  v42 = *(_QWORD *)(a1 + 8);
  KeyPath = swift_getKeyPath(&unk_10039DE88);
  v44 = swift_getKeyPath(&unk_10039DEB0);
  v267 = v42;
  static Published.subscript.getter(&v273, v42, KeyPath);
  swift_release(KeyPath);
  swift_release(v44);
  if ((_QWORD)v273)
  {
    v45 = (id)v273;
    v46 = Image.init(uiImage:)(v45);
    (*(void (**)(char *, _QWORD, uint64_t))(v29 + 104))(v31, enum case for Image.ResizingMode.stretch(_:), v28);
    v47 = Image.resizable(capInsets:resizingMode:)(v31, v46, 0.0, 0.0, 0.0, 0.0);
    v48 = swift_release(v46);
    v49 = (*(uint64_t (**)(char *, uint64_t, __n128))(v29 + 8))(v31, v28, v48);
    v50 = static Alignment.center.getter(v49);
    v52 = _FrameLayout.init(width:height:alignment:)(&v273, *(_QWORD *)&v40, 0, *(_QWORD *)&v40, 0, v50, v51);
    v53 = v273;
    v54 = BYTE8(v273);
    v55 = v274;
    v56 = BYTE8(v274);
    v58 = *((_QWORD *)&v275 + 1);
    v57 = v275;
    v59 = static Edge.Set.all.getter(v52);
    v60 = EdgeInsets.init(_all:)(v41);
    *(_QWORD *)v27 = v47;
    *((_QWORD *)v27 + 1) = v53;
    v27[16] = v54;
    *((_QWORD *)v27 + 3) = v55;
    v27[32] = v56;
    *((_QWORD *)v27 + 5) = v57;
    *((_QWORD *)v27 + 6) = v58;
    *((_WORD *)v27 + 28) = 256;
    v27[64] = v59;
    *((double *)v27 + 9) = v60;
    *((_QWORD *)v27 + 10) = v61;
    *((_QWORD *)v27 + 11) = v62;
    *((_QWORD *)v27 + 12) = v63;
    v27[104] = 0;
    swift_storeEnumTagMultiPayload(v27, v248, 0);
    swift_retain(v47);
    v64 = sub_100005574(&qword_10049F818);
    v65 = sub_100100628(&qword_10049F820, &qword_10049F818, (void (*)(void))sub_10031B440);
    v66 = sub_100100628(&qword_10049F858, &qword_10049F7F0, (void (*)(void))sub_10031B528);
    v67 = v270;
    _ConditionalContent<>.init(storage:)(v27, v64, v249, v65, v66);
    swift_release(v47);

    v68 = v269;
    v69 = v268;
    v70 = v267;
  }
  else
  {
    v222 = v33;
    v223 = v37;
    v71 = v225;
    v72 = swift_getKeyPath(&unk_10039DE38);
    v73 = swift_getKeyPath(&unk_10039DE60);
    v70 = v267;
    static Published.subscript.getter(v35, v267, v72);
    swift_release(v72);
    v74 = swift_release(v73);
    v75 = v242;
    v76 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v242 + 48);
    v77 = v226;
    v78 = (uint64_t)v35;
    if (((unsigned int (*)(_QWORD *, uint64_t, uint64_t, __n128))v76)(v35, 1, v226, v74) == 1)
    {
      v79 = swift_getKeyPath(&unk_10039DDF0);
      v80 = swift_getKeyPath(&unk_10039DE18);
      static Published.subscript.getter(&v273, v70, v79);
      swift_release(v79);
      swift_release(v80);
      v81 = String.trim()();
      swift_bridgeObjectRelease();
      sub_10031B404();
      v82 = 1;
      v83 = static MPArtworkCatalog.monogram(for:layoutDirection:)(v81._countAndFlagsBits, (uint64_t)v81._object, 0, 1);
      v84 = (uint64_t)v71;
      if (v83)
      {
        v85 = (uint64_t)v223;
        Artwork.init(_:)(v83);
        v82 = 0;
        v86 = (uint64_t)v224;
      }
      else
      {
        v86 = (uint64_t)v224;
        v85 = (uint64_t)v223;
      }
      v75 = v242;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v242 + 56))(v85, v82, 1, v77);
      swift_bridgeObjectRelease();
      sub_100008758(v78, (uint64_t *)&unk_10049F430);
      v70 = v267;
    }
    else
    {
      v85 = (uint64_t)v223;
      (*(void (**)(char *, _QWORD *, uint64_t))(v75 + 32))(v223, v35, v77);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v75 + 56))(v85, 0, 1, v77);
      v84 = (uint64_t)v71;
      v86 = (uint64_t)v224;
    }
    v87 = v85;
    v88 = (uint64_t)v222;
    sub_100014A7C(v87, (uint64_t)v222, (uint64_t *)&unk_10049F430);
    v89 = v76(v88, 1, v77);
    v90 = v228;
    v91 = v227;
    if (v89 == 1)
    {
      v92 = type metadata accessor for ArtworkImage.ViewModel(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v92 - 8) + 56))(v90, 1, 1, v92);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v75 + 32))(v227, v88, v77);
      (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v90, v91, v77);
      v93 = type metadata accessor for ArtworkImage.ViewModel(0);
      v94 = v75;
      v95 = &v90[*(int *)(v93 + 20)];
      v96 = type metadata accessor for Artwork.CropStyle(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v96 - 8) + 56))(v95, 1, 1, v96);
      (*(void (**)(char *, uint64_t))(v94 + 8))(v91, v77);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 56))(v90, 0, 1, v93);
    }
    v68 = v269;
    v97 = v237;
    v98 = v238;
    v99 = (uint64_t)v90;
    v100 = sub_100005574(&qword_10049F810);
    v101 = (uint64_t)v234;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v100 - 8) + 56))(v234, 7, 10, v100);
    v276 = 0;
    v277 = 1;
    v278 = 0;
    v279 = 1;
    v280 = 0;
    v281 = 513;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v98 + 104))(v84, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v97);
    v102 = v232;
    static ArtworkImage.with(_:placeholder:size:reusePolicy:)(v99, v101, (uint64_t)&v276, v84, v232);
    (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v84, v97);
    sub_100006798(v101, type metadata accessor for ArtworkImage.Placeholder);
    v103 = sub_100008758(v99, (uint64_t *)&unk_10049F7D0);
    v104 = static Alignment.center.getter(v103);
    _FrameLayout.init(width:height:alignment:)(&v273, *(_QWORD *)&v40, 0, *(_QWORD *)&v40, 0, v104, v105);
    v106 = v236;
    v107 = (uint64_t)v231;
    v108 = v235;
    (*(void (**)(char *, uint64_t, uint64_t))(v236 + 16))(v231, v102, v235);
    v109 = (_OWORD *)(v107 + *(int *)(v229 + 36));
    v110 = v274;
    *v109 = v273;
    v109[1] = v110;
    v109[2] = v275;
    (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v102, v108);
    sub_100014A7C(v107, v86, (uint64_t *)&unk_10049F7E0);
    *(_WORD *)(v86 + *(int *)(v230 + 36)) = 256;
    v111 = sub_100008758(v107, (uint64_t *)&unk_10049F7E0);
    LOBYTE(v108) = static Edge.Set.all.getter(v111);
    v112 = EdgeInsets.init(_all:)(v41);
    v114 = v113;
    v116 = v115;
    v118 = v117;
    v119 = v233;
    sub_100014A7C(v86, v233, &qword_10049F268);
    v120 = v249;
    v121 = v119 + *(int *)(v249 + 36);
    *(_BYTE *)v121 = v108;
    *(double *)(v121 + 8) = v112;
    *(_QWORD *)(v121 + 16) = v114;
    *(_QWORD *)(v121 + 24) = v116;
    *(_QWORD *)(v121 + 32) = v118;
    *(_BYTE *)(v121 + 40) = 0;
    sub_100008758(v86, &qword_10049F268);
    v122 = v239;
    sub_1000149A8(v119, v239, &qword_10049F7F0);
    sub_100014A7C(v122, (uint64_t)v27, &qword_10049F7F0);
    swift_storeEnumTagMultiPayload(v27, v248, 1);
    v123 = v120;
    v124 = sub_100005574(&qword_10049F818);
    v125 = sub_100100628(&qword_10049F820, &qword_10049F818, (void (*)(void))sub_10031B440);
    v126 = sub_100100628(&qword_10049F858, &qword_10049F7F0, (void (*)(void))sub_10031B528);
    v67 = v270;
    _ConditionalContent<>.init(storage:)(v27, v124, v123, v125, v126);
    sub_100008758(v122, &qword_10049F7F0);
    sub_100008758((uint64_t)v223, (uint64_t *)&unk_10049F430);
    v69 = v268;
  }
  v127 = swift_getKeyPath(&unk_10039DDF0);
  v128 = swift_getKeyPath(&unk_10039DE18);
  static Published.subscript.getter(&v272, v70, v127);
  swift_release(v127);
  swift_release(v128);
  v129 = String.trim()();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v130 = ((unint64_t)v129._object >> 56) & 0xF;
  if (((uint64_t)v129._object & 0x2000000000000000) == 0)
    v130 = v129._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  v131 = v67;
  if (v130)
  {
    v132 = swift_getKeyPath(&unk_10039DDF0);
    v133 = swift_getKeyPath(&unk_10039DE18);
    static Published.subscript.getter(&v272, v70, v132);
    swift_release(v132);
    swift_release(v133);
    v134 = String.trim()();
    swift_bridgeObjectRelease();
    v272 = v134;
    v135 = sub_10024AF7C();
    v136 = Text.init<A>(_:)(&v272, &type metadata for String, v135);
    v138 = v137;
    v140 = v139 & 1;
    v141 = Text.bold()();
    v143 = v142;
    v145 = v144;
    v147 = v146;
    sub_10003B4D0(v136, v138, v140);
    swift_bridgeObjectRelease();
    v148 = v251;
    *v251 = v141;
    v148[1] = v143;
    v68 = v269;
    v149 = v145 & 1;
    v69 = v268;
    *((_BYTE *)v148 + 16) = v149;
    v148[3] = v147;
    swift_storeEnumTagMultiPayload(v148, v250, 0);
    v150 = sub_100302484();
    _ConditionalContent<>.init(storage:)(v148, &type metadata for Text, v252, &protocol witness table for Text, v150);
    v151 = (uint64_t)v264;
  }
  else
  {
    String.LocalizationValue.init(stringLiteral:)(0x6F59207265746E45, 0xEF656D614E207275);
    v152 = v254;
    v153 = v256;
    (*(void (**)(char *, char *, uint64_t))(v254 + 16))(v69, v68, v256);
    if (qword_100498860 != -1)
      swift_once(&qword_100498860, sub_100232E30);
    v154 = qword_1004A2F90;
    v155 = (id)qword_1004A2F90;
    v156 = v255;
    static Locale.current.getter(v155);
    v157 = String.init(localized:table:bundle:locale:comment:)(v69, 0, 0, v154, v156, 0, 0, 256);
    v159 = v158;
    (*(void (**)(char *, uint64_t))(v152 + 8))(v68, v153);
    v272._countAndFlagsBits = v157;
    v272._object = v159;
    v160 = swift_allocObject(&unk_100463898, 104, 7);
    v161 = v260;
    v162 = *(_OWORD *)(v260 + 48);
    *(_OWORD *)(v160 + 48) = *(_OWORD *)(v260 + 32);
    *(_OWORD *)(v160 + 64) = v162;
    *(_OWORD *)(v160 + 80) = *(_OWORD *)(v161 + 64);
    *(_QWORD *)(v160 + 96) = *(_QWORD *)(v161 + 80);
    v163 = *(_OWORD *)(v161 + 16);
    *(_OWORD *)(v160 + 16) = *(_OWORD *)v161;
    *(_OWORD *)(v160 + 32) = v163;
    sub_10031B310((_QWORD *)v161);
    v164 = sub_10024AF7C();
    v165 = v257;
    Button<>.init<A>(_:action:)(&v272, sub_10031B3DC, v160, &type metadata for String, v164);
    v167 = static Color.secondary.getter(v166);
    v168 = swift_getKeyPath(&unk_10039E040);
    v169 = v258;
    v170 = (uint64_t)v240;
    v171 = v259;
    (*(void (**)(char *, char *, uint64_t))(v258 + 16))(v240, v165, v259);
    v172 = v252;
    v173 = (uint64_t *)(v170 + *(int *)(v252 + 36));
    *v173 = v168;
    v173[1] = v167;
    (*(void (**)(char *, uint64_t))(v169 + 8))(v165, v171);
    v174 = v241;
    sub_1000149A8(v170, v241, (uint64_t *)&unk_10049E480);
    v175 = v251;
    sub_100014A7C(v174, (uint64_t)v251, (uint64_t *)&unk_10049E480);
    swift_storeEnumTagMultiPayload(v175, v250, 1);
    v176 = sub_100302484();
    _ConditionalContent<>.init(storage:)(v175, &type metadata for Text, v172, &protocol witness table for Text, v176);
    sub_100008758(v174, (uint64_t *)&unk_10049E480);
    v151 = (uint64_t)v264;
    v70 = v267;
  }
  v177 = swift_getKeyPath(&unk_10039DDF0);
  v178 = swift_getKeyPath(&unk_10039DE18);
  static Published.subscript.getter(&v272, v70, v177);
  swift_release(v177);
  swift_release(v178);
  v179 = String.trim()();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v180 = ((unint64_t)v179._object >> 56) & 0xF;
  if (((uint64_t)v179._object & 0x2000000000000000) == 0)
    v180 = v179._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  if (v180)
  {
    String.LocalizationValue.init(stringLiteral:)(1953064005, 0xE400000000000000);
    v181 = v254;
    v182 = v256;
    (*(void (**)(char *, char *, uint64_t))(v254 + 16))(v69, v68, v256);
    if (qword_100498860 != -1)
      swift_once(&qword_100498860, sub_100232E30);
    v183 = qword_1004A2F90;
    v184 = (id)qword_1004A2F90;
    v185 = v255;
    static Locale.current.getter(v184);
    v186 = String.init(localized:table:bundle:locale:comment:)(v69, 0, 0, v183, v185, 0, 0, 256);
    v188 = v187;
    (*(void (**)(char *, uint64_t))(v181 + 8))(v68, v182);
    v272._countAndFlagsBits = v186;
    v272._object = v188;
    v189 = swift_allocObject(&unk_100463870, 104, 7);
    v190 = v260;
    v191 = *(_OWORD *)(v260 + 48);
    *(_OWORD *)(v189 + 48) = *(_OWORD *)(v260 + 32);
    *(_OWORD *)(v189 + 64) = v191;
    *(_OWORD *)(v189 + 80) = *(_OWORD *)(v190 + 64);
    *(_QWORD *)(v189 + 96) = *(_QWORD *)(v190 + 80);
    v192 = *(_OWORD *)(v190 + 16);
    *(_OWORD *)(v189 + 16) = *(_OWORD *)v190;
    *(_OWORD *)(v189 + 32) = v192;
    sub_10031B310((_QWORD *)v190);
    v193 = sub_10024AF7C();
    v194 = v257;
    v195 = Button<>.init<A>(_:action:)(&v272, sub_10031B644, v189, &type metadata for String, v193);
    LOBYTE(v189) = static Edge.Set.trailing.getter(v195);
    v196 = EdgeInsets.init(_all:)(24.0);
    v198 = v197;
    v200 = v199;
    v202 = v201;
    v203 = v258;
    v204 = (uint64_t)v247;
    v205 = v259;
    (*(void (**)(char *, char *, uint64_t))(v258 + 16))(v247, v194, v259);
    v206 = v204 + *(int *)(v243 + 36);
    *(_BYTE *)v206 = v189;
    *(double *)(v206 + 8) = v196;
    *(_QWORD *)(v206 + 16) = v198;
    *(_QWORD *)(v206 + 24) = v200;
    *(_QWORD *)(v206 + 32) = v202;
    *(_BYTE *)(v206 + 40) = 0;
    (*(void (**)(char *, uint64_t))(v203 + 8))(v194, v205);
    v207 = swift_getKeyPath(&unk_10039E010);
    v208 = v246;
    sub_100014A7C(v204, v246, &qword_10049F798);
    v209 = v208 + *(int *)(v244 + 36);
    *(_QWORD *)v209 = v207;
    *(_QWORD *)(v209 + 8) = 1;
    *(_BYTE *)(v209 + 16) = 0;
    sub_100008758(v204, &qword_10049F798);
    v210 = v245;
    sub_100014A7C(v208, v245, &qword_10049F7A0);
    v211 = v263;
    *(_QWORD *)(v210 + *(int *)(v263 + 36)) = 0x3FF0000000000000;
    sub_100008758(v208, &qword_10049F7A0);
    sub_1000149A8(v210, v151, &qword_10049F7A8);
    v212 = 0;
  }
  else
  {
    v212 = 1;
    v211 = v263;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v262 + 56))(v151, v212, 1, v211);
  v213 = v253;
  sub_100014A7C(v131, v253, (uint64_t *)&unk_10049F800);
  v214 = v271;
  v215 = v261;
  sub_100014A7C(v271, v261, &qword_10049F7C8);
  v216 = v265;
  sub_100014A7C(v151, v265, (uint64_t *)&unk_10049F7B0);
  v217 = v266;
  sub_100014A7C(v213, v266, (uint64_t *)&unk_10049F800);
  v218 = (int *)sub_100005574(&qword_10049F878);
  sub_100014A7C(v215, v217 + v218[12], &qword_10049F7C8);
  v219 = v217 + v218[16];
  *(_QWORD *)v219 = 0;
  *(_BYTE *)(v219 + 8) = 1;
  sub_100014A7C(v216, v217 + v218[20], (uint64_t *)&unk_10049F7B0);
  sub_100008758(v151, (uint64_t *)&unk_10049F7B0);
  sub_100008758(v214, &qword_10049F7C8);
  sub_100008758(v270, (uint64_t *)&unk_10049F800);
  sub_100008758(v216, (uint64_t *)&unk_10049F7B0);
  sub_100008758(v215, &qword_10049F7C8);
  return sub_100008758(v213, (uint64_t *)&unk_10049F800);
}

uint64_t sub_100318F90@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  char *v51;
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  char *v54;
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  int *v60;
  void (*v61)(char *, uint64_t);
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  char *v72;
  void (*v73)(char *, char *, uint64_t);
  char *v74;
  uint64_t v75;
  uint64_t v76;

  v69 = a2;
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v4 = (char *)&v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for String.LocalizationValue(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v10 = (char *)&v63 - v9;
  v11 = sub_100005574((uint64_t *)&unk_10049DB50);
  v65 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin();
  v68 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v67 = (char *)&v63 - v13;
  __chkstk_darwin();
  v66 = (char *)&v63 - v14;
  __chkstk_darwin();
  v72 = (char *)&v63 - v15;
  __chkstk_darwin();
  v64 = (char *)&v63 - v16;
  __chkstk_darwin();
  v71 = (char *)&v63 - v17;
  __chkstk_darwin();
  v74 = (char *)&v63 - v18;
  __chkstk_darwin();
  v20 = (char *)&v63 - v19;
  String.LocalizationValue.init(stringLiteral:)(0x6D614E2074696445, 0xE900000000000065);
  v73 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v73(v8, v10, v5);
  if (qword_100498860 != -1)
    swift_once(&qword_100498860, sub_100232E30);
  v21 = qword_1004A2F90;
  static Locale.current.getter((id)qword_1004A2F90);
  v22 = String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, v21, v4, 0, 0, 256);
  v24 = v23;
  v25 = *(void (**)(char *, uint64_t))(v6 + 8);
  v25(v10, v5);
  v75 = v22;
  v76 = v24;
  v26 = swift_allocObject(&unk_1004637D0, 104, 7);
  v27 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v26 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v26 + 64) = v27;
  *(_OWORD *)(v26 + 80) = *(_OWORD *)(a1 + 64);
  *(_QWORD *)(v26 + 96) = *(_QWORD *)(a1 + 80);
  v28 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v26 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v26 + 32) = v28;
  sub_10031B310((_QWORD *)a1);
  v29 = sub_10024AF7C();
  Button<>.init<A>(_:action:)(&v75, sub_10031B3DC, v26, &type metadata for String, v29);
  String.LocalizationValue.init(stringLiteral:)(0x502065736F6F6843, 0xEC0000006F746F68);
  v73(v8, v10, v5);
  v30 = qword_1004A2F90;
  static Locale.current.getter((id)qword_1004A2F90);
  v31 = String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, v30, v4, 0, 0, 256);
  v70 = v20;
  v33 = v32;
  v25(v10, v5);
  v75 = v31;
  v76 = v33;
  v34 = swift_allocObject(&unk_1004637F8, 104, 7);
  v35 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v34 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v34 + 64) = v35;
  *(_OWORD *)(v34 + 80) = *(_OWORD *)(a1 + 64);
  *(_QWORD *)(v34 + 96) = *(_QWORD *)(a1 + 80);
  v36 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v34 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v34 + 32) = v36;
  sub_10031B310((_QWORD *)a1);
  Button<>.init<A>(_:action:)(&v75, sub_10031B3E4, v34, &type metadata for String, v29);
  String.LocalizationValue.init(stringLiteral:)(0x6F685020656B6154, 0xEA00000000006F74);
  v73(v8, v10, v5);
  v37 = qword_1004A2F90;
  static Locale.current.getter((id)qword_1004A2F90);
  v38 = String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, v37, v4, 0, 0, 256);
  v40 = v39;
  v25(v10, v5);
  v75 = v38;
  v76 = v40;
  v41 = swift_allocObject(&unk_100463820, 104, 7);
  v42 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v41 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v41 + 64) = v42;
  *(_OWORD *)(v41 + 80) = *(_OWORD *)(a1 + 64);
  *(_QWORD *)(v41 + 96) = *(_QWORD *)(a1 + 80);
  v43 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v41 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v41 + 32) = v43;
  sub_10031B310((_QWORD *)a1);
  Button<>.init<A>(_:action:)(&v75, sub_10031B3F0, v41, &type metadata for String, v29);
  String.LocalizationValue.init(stringLiteral:)(0x502065766F6D6552, 0xEC0000006F746F68);
  v73(v8, v10, v5);
  v44 = qword_1004A2F90;
  static Locale.current.getter((id)qword_1004A2F90);
  v45 = String.init(localized:table:bundle:locale:comment:)(v8, 0, 0, v44, v4, 0, 0, 256);
  v47 = v46;
  v25(v10, v5);
  v75 = v45;
  v76 = v47;
  v48 = swift_allocObject(&unk_100463848, 104, 7);
  v49 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v48 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v48 + 64) = v49;
  *(_OWORD *)(v48 + 80) = *(_OWORD *)(a1 + 64);
  *(_QWORD *)(v48 + 96) = *(_QWORD *)(a1 + 80);
  v50 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v48 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v48 + 32) = v50;
  sub_10031B310((_QWORD *)a1);
  v51 = v64;
  Button<>.init<A>(_:action:)(&v75, sub_10031B3FC, v48, &type metadata for String, v29);
  v52 = v65;
  v53 = *(void (**)(char *, char *, uint64_t))(v65 + 16);
  v54 = v72;
  v53(v72, v70, v11);
  v55 = v66;
  v53(v66, v74, v11);
  v56 = v67;
  v57 = v71;
  v53(v67, v71, v11);
  v58 = v68;
  v53(v68, v51, v11);
  v59 = v69;
  v53(v69, v54, v11);
  v60 = (int *)sub_100005574(&qword_10049F790);
  v53(&v59[v60[12]], v55, v11);
  v53(&v59[v60[16]], v56, v11);
  v53(&v59[v60[20]], v58, v11);
  v61 = *(void (**)(char *, uint64_t))(v52 + 8);
  v61(v51, v11);
  v61(v57, v11);
  v61(v74, v11);
  v61(v70, v11);
  v61(v58, v11);
  v61(v56, v11);
  v61(v55, v11);
  return ((uint64_t (*)(char *, uint64_t))v61)(v72, v11);
}

uint64_t sub_100319688(uint64_t a1)
{
  __int128 v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  v2 = *(_OWORD *)(a1 + 64);
  v8 = *(_QWORD *)(a1 + 80);
  v6 = xmmword_1003849A0;
  v7 = v2;
  v3 = sub_100005574(&qword_10049F778);
  State.wrappedValue.setter(&v6, v3);
  v7 = *(_OWORD *)(a1 + 32);
  LOBYTE(v6) = 1;
  v4 = sub_100005574(&qword_10049C5C8);
  return State.wrappedValue.setter(&v6, v4);
}

uint64_t sub_10031970C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[2];
  __int128 v6;
  uint64_t v7;

  v6 = *(_OWORD *)(a1 + 64);
  v7 = *(_QWORD *)(a1 + 80);
  v5[0] = 0;
  v5[1] = 0;
  v2 = sub_100005574(&qword_10049F778);
  State.wrappedValue.setter(v5, v2);
  v6 = *(_OWORD *)(a1 + 32);
  LOBYTE(v5[0]) = 1;
  v3 = sub_100005574(&qword_10049C5C8);
  return State.wrappedValue.setter(v5, v3);
}

void sub_10031978C(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  _BYTE *v10;
  _BYTE v12[24];

  sub_100005574((uint64_t *)&unk_10049F430);
  __chkstk_darwin();
  v3 = &v12[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin();
  v5 = &v12[-v4 - 8];
  v6 = *(_QWORD *)(a1 + 8);
  sub_10031A738(0);
  v7 = type metadata accessor for Artwork(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 1, 1, v7);
  KeyPath = swift_getKeyPath(&unk_10039DE38);
  v9 = swift_getKeyPath(&unk_10039DE60);
  sub_100014A7C((uint64_t)v5, (uint64_t)v3, (uint64_t *)&unk_10049F430);
  swift_retain(v6);
  static Published.subscript.setter(v3, v6, KeyPath, v9);
  sub_100008758((uint64_t)v5, (uint64_t *)&unk_10049F430);
  v10 = (_BYTE *)(v6 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context_hasRemovedImage);
  swift_beginAccess(v6 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context_hasRemovedImage, v12, 1, 0);
  *v10 = 1;
}

uint64_t sub_1003198D0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  int *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _OWORD *v32;
  __int128 v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  _QWORD v43[3];
  __int128 v44;
  __int128 v45;
  __int128 v46;

  v40 = a2;
  v3 = (int *)type metadata accessor for ImagePicker(0);
  __chkstk_darwin();
  v5 = (uint64_t *)((char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  v7 = (char *)&v35 - v6;
  v8 = *a1;
  v9 = a1[1];
  v10 = type metadata accessor for InlineProfileEditingView.Context(0);
  v11 = sub_100006924(&qword_10049F480, type metadata accessor for InlineProfileEditingView.Context, (uint64_t)&protocol conformance descriptor for InlineProfileEditingView.Context);
  v12 = ObservedObject.projectedValue.getter(v8, v9, v10, v11);
  KeyPath = swift_getKeyPath(&unk_10039DE88);
  ObservedObject.Wrapper.subscript.getter(v43, KeyPath, v12, v11);
  swift_release(KeyPath);
  swift_release(v12);
  v38 = v43[1];
  v39 = v43[0];
  v37 = v43[2];
  v41 = *((_OWORD *)a1 + 4);
  v42 = a1[10];
  v14 = sub_100005574(&qword_10049F778);
  State.projectedValue.getter(&v44, v14);
  v36 = *((_QWORD *)&v44 + 1);
  v15 = v44;
  v16 = v45;
  v41 = *((_OWORD *)a1 + 2);
  v17 = sub_100005574(&qword_10049C5C8);
  State.projectedValue.getter(&v44, v17);
  v18 = v44;
  v19 = v45;
  if (qword_100498C50 != -1)
    swift_once(&qword_100498C50, sub_100329540);
  v20 = static UIImagePickerController.profileImagePickerProperties;
  *v5 = swift_getKeyPath(&unk_10039DFE0);
  v21 = sub_100005574(&qword_10049F780);
  swift_storeEnumTagMultiPayload(v5, v21, 0);
  v22 = (_QWORD *)((char *)v5 + v3[7]);
  v23 = v3[9];
  v24 = (_QWORD *)((char *)v5 + v3[5]);
  *v24 = v39;
  v24[1] = v38;
  v24[2] = v37;
  v25 = (char *)v5 + v3[6];
  v26 = v36;
  *(_QWORD *)v25 = v15;
  *((_QWORD *)v25 + 1) = v26;
  *((_OWORD *)v25 + 1) = v16;
  v27 = (char *)v5 + v3[8];
  *(_OWORD *)v27 = v18;
  v27[16] = v19;
  *v22 = 0;
  v22[1] = 0;
  *(_QWORD *)((char *)v5 + v23) = v20;
  sub_10031B394((uint64_t)v5, (uint64_t)v7);
  v28 = swift_bridgeObjectRetain();
  v29 = static Alignment.center.getter(v28);
  _FrameLayout.init(width:height:alignment:)(&v44, 0, 0, 0, 0, v29, v30);
  v31 = v40;
  sub_100082248((uint64_t)v7, v40, type metadata accessor for ImagePicker);
  v32 = (_OWORD *)(v31 + *(int *)(sub_100005574(&qword_10049F788) + 36));
  v33 = v45;
  *v32 = v44;
  v32[1] = v33;
  v32[2] = v46;
  return sub_100006798((uint64_t)v7, type metadata accessor for ImagePicker);
}

void sub_100319B8C(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10039DE88);
  v5 = swift_getKeyPath(&unk_10039DEB0);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  *a2 = v6;
}

uint64_t sub_100319C08@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t KeyPath;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  Swift::String v45;
  unint64_t v46;
  BOOL v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  __int128 v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  char *v67;
  void (*v68)(char *, char *, uint64_t);
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  void (*v73)(uint64_t, char *, uint64_t);
  char *v74;
  uint64_t v75;
  void (*v76)(char *, uint64_t);
  void (*v77)(char *, uint64_t);
  void (*v79)(char *, uint64_t);
  uint64_t v80;
  void (*v81)(char *, char *, uint64_t);
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  char *v90;
  _QWORD *v91;
  uint64_t v92;
  char *v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  _QWORD v100[2];
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;

  v95 = a2;
  sub_100005574((uint64_t *)&unk_10049F750);
  __chkstk_darwin();
  v90 = (char *)&v79 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = sub_100005574((uint64_t *)&unk_10049DB50);
  v87 = *(_QWORD *)(v96 - 8);
  __chkstk_darwin();
  v94 = (char *)&v79 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v93 = (char *)&v79 - v5;
  __chkstk_darwin();
  v86 = (char *)&v79 - v6;
  v85 = sub_100005574(&qword_10049F760);
  __chkstk_darwin();
  v92 = (uint64_t)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v84 = (char *)&v79 - v8;
  __chkstk_darwin();
  v98 = (uint64_t)&v79 - v9;
  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v11 = (char *)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for String.LocalizationValue(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin();
  v15 = (char *)&v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v17 = (char *)&v79 - v16;
  v89 = sub_100005574(&qword_10049F768);
  v97 = *(_QWORD *)(v89 - 8);
  __chkstk_darwin();
  v88 = (char *)&v79 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v99 = (char *)&v79 - v19;
  v91 = a1;
  v21 = *a1;
  v20 = a1[1];
  KeyPath = swift_getKeyPath(&unk_10039DDF0);
  v23 = swift_getKeyPath(&unk_10039DE18);
  static Published.subscript.getter(&v101, v20, KeyPath);
  swift_release(KeyPath);
  swift_release(v23);
  v83 = v101;
  v82 = v102;
  String.LocalizationValue.init(stringLiteral:)(1701667150, 0xE400000000000000);
  v81 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  v81(v15, v17, v12);
  if (qword_100498860 != -1)
    swift_once(&qword_100498860, sub_100232E30);
  v24 = qword_1004A2F90;
  static Locale.current.getter((id)qword_1004A2F90);
  v25 = String.init(localized:table:bundle:locale:comment:)(v15, 0, 0, v24, v11, 0, 0, 256);
  v27 = v26;
  v79 = *(void (**)(char *, uint64_t))(v13 + 8);
  v79(v17, v12);
  v28 = type metadata accessor for InlineProfileEditingView.Context(0);
  v29 = sub_100006924(&qword_10049F480, type metadata accessor for InlineProfileEditingView.Context, (uint64_t)&protocol conformance descriptor for InlineProfileEditingView.Context);
  v30 = ObservedObject.projectedValue.getter(v21, v20, v28, v29);
  v31 = swift_getKeyPath(&unk_10039DDF0);
  v80 = v20;
  v32 = v31;
  ObservedObject.Wrapper.subscript.getter(&v101, v31, v30, v29);
  swift_release(v32);
  swift_release(v30);
  v33 = v101;
  v34 = v102;
  v36 = v103;
  v35 = v104;
  v100[0] = v25;
  v100[1] = v27;
  v37 = sub_10024AF7C();
  TextField<>.init<A>(_:text:onEditingChanged:onCommit:)(v100, v33, v34, v36, v35, CFRange.init(_:), 0, CFRange.init(_:), 0, &type metadata for String, v37);
  String.LocalizationValue.init(stringLiteral:)(1701736260, 0xE400000000000000);
  v81(v15, v17, v12);
  v38 = qword_1004A2F90;
  static Locale.current.getter((id)qword_1004A2F90);
  v39 = String.init(localized:table:bundle:locale:comment:)(v15, 0, 0, v38, v11, 0, 0, 256);
  v41 = v40;
  v79(v17, v12);
  v101 = v39;
  v102 = v41;
  v42 = v86;
  Button<>.init<A>(_:action:)(&v101, CFRange.init(_:), 0, &type metadata for String, v37);
  v43 = swift_getKeyPath(&unk_10039DDF0);
  v44 = swift_getKeyPath(&unk_10039DE18);
  static Published.subscript.getter(&v101, v80, v43);
  swift_release(v43);
  swift_release(v44);
  v45 = String.trim()();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v46 = ((unint64_t)v45._object >> 56) & 0xF;
  if (((uint64_t)v45._object & 0x2000000000000000) == 0)
    v46 = v45._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  v47 = v46 == 0;
  v48 = swift_getKeyPath(&unk_10039DFB0);
  v49 = swift_allocObject(&unk_100463780, 17, 7);
  *(_BYTE *)(v49 + 16) = v47;
  v50 = v87;
  v81 = *(void (**)(char *, char *, uint64_t))(v87 + 16);
  v51 = (uint64_t)v84;
  v52 = v96;
  v81(v84, v42, v96);
  v53 = (uint64_t *)(v51 + *(int *)(v85 + 36));
  *v53 = v48;
  v53[1] = (uint64_t)sub_10031B288;
  v53[2] = v49;
  v87 = *(_QWORD *)(v50 + 8);
  ((void (*)(char *, uint64_t))v87)(v42, v52);
  v54 = v98;
  sub_1000149A8(v51, v98, &qword_10049F760);
  v55 = String.cancelButtonTitle.unsafeMutableAddressor();
  v57 = *v55;
  v56 = v55[1];
  v101 = v57;
  v102 = v56;
  v58 = swift_bridgeObjectRetain();
  v59 = v90;
  static ButtonRole.cancel.getter(v58);
  v60 = type metadata accessor for ButtonRole(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v59, 0, 1, v60);
  v61 = swift_allocObject(&unk_1004637A8, 120, 7);
  v62 = v91;
  v63 = *((_OWORD *)v91 + 3);
  *(_OWORD *)(v61 + 48) = *((_OWORD *)v91 + 2);
  *(_OWORD *)(v61 + 64) = v63;
  *(_OWORD *)(v61 + 80) = *((_OWORD *)v62 + 4);
  v64 = v62[10];
  v65 = *((_OWORD *)v62 + 1);
  *(_OWORD *)(v61 + 16) = *(_OWORD *)v62;
  *(_OWORD *)(v61 + 32) = v65;
  v66 = v83;
  *(_QWORD *)(v61 + 96) = v64;
  *(_QWORD *)(v61 + 104) = v66;
  *(_QWORD *)(v61 + 112) = v82;
  sub_10031B310(v62);
  v67 = v93;
  Button<>.init<A>(_:role:action:)(&v101, v59, sub_10031B304, v61, &type metadata for String, v37);
  v68 = *(void (**)(char *, char *, uint64_t))(v97 + 16);
  v70 = v88;
  v69 = v89;
  v68(v88, v99, v89);
  v71 = v92;
  sub_100014A7C(v54, v92, &qword_10049F760);
  v72 = v94;
  v73 = (void (*)(uint64_t, char *, uint64_t))v81;
  v81(v94, v67, v52);
  v74 = v95;
  v68(v95, v70, v69);
  v75 = sub_100005574(&qword_10049F770);
  sub_100014A7C(v71, (uint64_t)&v74[*(int *)(v75 + 48)], &qword_10049F760);
  v73((uint64_t)&v74[*(int *)(v75 + 64)], v72, v52);
  v76 = (void (*)(char *, uint64_t))v87;
  ((void (*)(char *, uint64_t))v87)(v67, v52);
  sub_100008758(v98, &qword_10049F760);
  v77 = *(void (**)(char *, uint64_t))(v97 + 8);
  v77(v99, v69);
  v76(v72, v52);
  sub_100008758(v71, &qword_10049F760);
  return ((uint64_t (*)(char *, uint64_t))v77)(v70, v69);
}

void sub_10031A3F4(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[2];

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10039DDF0);
  v5 = swift_getKeyPath(&unk_10039DE18);
  static Published.subscript.getter(v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  v6 = v7[1];
  *a2 = v7[0];
  a2[1] = v6;
}

uint64_t sub_10031A470(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  _QWORD v8[2];

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  KeyPath = swift_getKeyPath(&unk_10039DDF0);
  v6 = swift_getKeyPath(&unk_10039DE18);
  v8[0] = v3;
  v8[1] = v2;
  swift_bridgeObjectRetain();
  swift_retain(v4);
  return static Published.subscript.setter(v8, v4, KeyPath, v6);
}

uint64_t sub_10031A4F0(__int128 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t KeyPath;
  uint64_t v7;
  _QWORD v9[2];
  __int128 v10;

  v10 = *a1;
  v5 = *((_QWORD *)&v10 + 1);
  KeyPath = swift_getKeyPath(&unk_10039DDF0);
  v7 = swift_getKeyPath(&unk_10039DE18);
  v9[0] = a2;
  v9[1] = a3;
  swift_bridgeObjectRetain();
  sub_1002B90B4((uint64_t)&v10);
  return static Published.subscript.setter(v9, v5, KeyPath, v7);
}

uint64_t sub_10031A57C@<X0>(uint64_t a1@<X8>)
{
  return InlineProfileEditingView.body.getter(a1);
}

double sub_10031A5C4@<D0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10039DE38);
  v5 = swift_getKeyPath(&unk_10039DE60);
  static Published.subscript.getter(a2, v3, KeyPath, v5);
  swift_release(KeyPath);
  *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  return result;
}

uint64_t sub_10031A62C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v12;

  sub_100005574((uint64_t *)&unk_10049F430);
  __chkstk_darwin();
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v7 = (char *)&v12 - v6;
  sub_100014A7C(a1, (uint64_t)&v12 - v6, (uint64_t *)&unk_10049F430);
  v8 = *a2;
  KeyPath = swift_getKeyPath(&unk_10039DE38);
  v10 = swift_getKeyPath(&unk_10039DE60);
  sub_100014A7C((uint64_t)v7, (uint64_t)v5, (uint64_t *)&unk_10049F430);
  swift_retain(v8);
  static Published.subscript.setter(v5, v8, KeyPath, v10);
  return sub_100008758((uint64_t)v7, (uint64_t *)&unk_10049F430);
}

_BYTE *sub_10031A724(_BYTE *result, char a2)
{
  *result &= a2 ^ 1;
  return result;
}

void sub_10031A738(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t KeyPath;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[3];

  sub_100005574((uint64_t *)&unk_10049F430);
  __chkstk_darwin();
  v4 = (char *)&v18[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v6 = (char *)&v18[-1] - v5;
  KeyPath = swift_getKeyPath(&unk_10039DE88);
  v8 = swift_getKeyPath(&unk_10039DEB0);
  v18[0] = a1;
  v9 = a1;
  swift_retain(v1);
  static Published.subscript.setter(v18, v1, KeyPath, v8);
  v10 = swift_getKeyPath(&unk_10039DE88);
  v11 = swift_getKeyPath(&unk_10039DEB0);
  static Published.subscript.getter(v18, v1, v10);
  swift_release(v10);
  swift_release(v11);
  v12 = (void *)v18[0];
  if (v18[0])
  {
    v13 = (_BYTE *)(v1 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context_hasRemovedImage);
    swift_beginAccess(v1 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context_hasRemovedImage, v18, 1, 0);
    *v13 = 0;
    v14 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v6, 1, 1, v14);
    v15 = swift_getKeyPath(&unk_10039DE38);
    v16 = swift_getKeyPath(&unk_10039DE60);
    sub_100014A7C((uint64_t)v6, (uint64_t)v4, (uint64_t *)&unk_10049F430);
    swift_retain(v1);
    static Published.subscript.setter(v4, v1, v15, v16);
    sub_100008758((uint64_t)v6, (uint64_t *)&unk_10049F430);

  }
}

__n128 sub_10031A904@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  unsigned __int8 v4;
  unint64_t v5;
  unsigned __int8 v6;
  unint64_t v7;
  unsigned __int8 v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  __n128 result;
  __n128 v15;
  __int128 v16;
  __n128 v17;
  unint64_t v18;

  LOBYTE(v16) = 0;
  State.init(wrappedValue:)(&v17, &v16, &type metadata for Bool);
  v4 = v17.n128_u8[0];
  v5 = v17.n128_u64[1];
  LOBYTE(v16) = 0;
  State.init(wrappedValue:)(&v17, &v16, &type metadata for Bool);
  v6 = v17.n128_u8[0];
  v7 = v17.n128_u64[1];
  LOBYTE(v16) = 0;
  State.init(wrappedValue:)(&v17, &v16, &type metadata for Bool);
  v8 = v17.n128_u8[0];
  v9 = v17.n128_u64[1];
  v16 = xmmword_1003849A0;
  State.init(wrappedValue:)(&v17, &v16, &type metadata for ImagePicker.SourceType);
  v15 = v17;
  v10 = v18;
  v11 = type metadata accessor for InlineProfileEditingView.Context(0);
  v12 = sub_100006924(&qword_10049F480, type metadata accessor for InlineProfileEditingView.Context, (uint64_t)&protocol conformance descriptor for InlineProfileEditingView.Context);
  a2->n128_u64[0] = ObservedObject.init(wrappedValue:)(a1, v11, v12);
  a2->n128_u64[1] = v13;
  a2[1].n128_u8[0] = v4;
  a2[1].n128_u64[1] = v5;
  a2[2].n128_u8[0] = v6;
  a2[2].n128_u64[1] = v7;
  a2[3].n128_u8[0] = v8;
  a2[3].n128_u64[1] = v9;
  result = v15;
  a2[4] = v15;
  a2[5].n128_u64[0] = v10;
  return result;
}

void sub_10031AA48(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  sub_10031A738(v1);

}

uint64_t type metadata accessor for InlineProfileEditingView.Context(uint64_t a1)
{
  uint64_t result;

  result = qword_10049F590;
  if (!qword_10049F590)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for InlineProfileEditingView.Context);
  return result;
}

uint64_t sub_10031AAC0@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_100318F90(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_10031AAC8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049F4E8;
  if (!qword_10049F4E8)
  {
    v1 = sub_100005600(&qword_10049F4A8);
    sub_100100628(&qword_10049F4F0, &qword_10049F4A0, (void (*)(void))sub_10031AB6C);
    sub_10002FFB8((unint64_t *)&unk_10049F520, (uint64_t *)&unk_10049F4D0, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049F4E8);
  }
  return result;
}

uint64_t sub_10031AB6C()
{
  return sub_100100628(&qword_10049F4F8, &qword_10049F498, (void (*)(void))sub_10031AB90);
}

unint64_t sub_10031AB90()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049F500;
  if (!qword_10049F500)
  {
    v1 = sub_100005600(&qword_10049F490);
    sub_10002FFB8(&qword_10049F508, &qword_10049F488, (uint64_t)&protocol conformance descriptor for HStack<A>);
    sub_10002FFB8((unint64_t *)&unk_10049F510, &qword_10049ECE0, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049F500);
  }
  return result;
}

uint64_t sub_10031AC2C@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_100319C08(*(_QWORD **)(v1 + 16), a1);
}

unint64_t sub_10031AC34()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[6];

  result = qword_10049F548;
  if (!qword_10049F548)
  {
    v1 = sub_100005600(&qword_10049F4B8);
    v2[0] = sub_100005600(&qword_10049F4A8);
    v2[1] = &type metadata for String;
    v2[2] = sub_100005600(&qword_10049F4E0);
    v2[3] = sub_10031AAC8();
    v2[4] = sub_10024AF7C();
    v2[5] = sub_10002FFB8(&qword_10049F530, &qword_10049F4E0, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.confirmationDialog<A, B>(_:isPresented:titleVisibility:actions:)>>, 1);
    sub_10002FFB8(&qword_10049F550, &qword_10049F538, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049F548);
  }
  return result;
}

uint64_t sub_10031AD38(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of InlineProfileEditingView.body>>, 1);
}

double destroy for InlineProfileEditingView(uint64_t a1)
{
  unint64_t v2;
  double result;

  swift_release(*(_QWORD *)(a1 + 8));
  swift_release(*(_QWORD *)(a1 + 24));
  swift_release(*(_QWORD *)(a1 + 40));
  swift_release(*(_QWORD *)(a1 + 56));
  v2 = *(_QWORD *)(a1 + 64);
  if (v2 >= 3)
  {
    swift_bridgeObjectRelease(v2);

  }
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 80)).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for InlineProfileEditingView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _OWORD *v9;
  void *v10;
  id v11;
  uint64_t v12;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v6;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v7;
  v9 = (_OWORD *)(a2 + 64);
  v8 = *(_QWORD *)(a2 + 64);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  if (v8 >= 3)
  {
    v10 = *(void **)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v8;
    *(_QWORD *)(a1 + 72) = v10;
    swift_bridgeObjectRetain();
    v11 = v10;
  }
  else
  {
    *(_OWORD *)(a1 + 64) = *v9;
  }
  v12 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 80) = v12;
  swift_retain(v12);
  return a1;
}

uint64_t assignWithCopy for InlineProfileEditingView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_retain(v4);
  swift_release(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v7;
  swift_retain(v7);
  swift_release(v6);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  v9 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v9;
  swift_retain(v9);
  swift_release(v8);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v10 = *(_QWORD *)(a1 + 56);
  v11 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v11;
  swift_retain(v11);
  swift_release(v10);
  v12 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(a1 + 64) >= 3uLL)
  {
    if (v12 >= 3)
    {
      *(_QWORD *)(a1 + 64) = v12;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v15 = *(void **)(a1 + 72);
      v16 = *(void **)(a2 + 72);
      *(_QWORD *)(a1 + 72) = v16;
      v17 = v16;

      goto LABEL_8;
    }
    sub_100008758(a1 + 64, &qword_10049F560);
    goto LABEL_6;
  }
  if (v12 < 3)
  {
LABEL_6:
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    goto LABEL_8;
  }
  *(_QWORD *)(a1 + 64) = v12;
  v13 = *(void **)(a2 + 72);
  *(_QWORD *)(a1 + 72) = v13;
  swift_bridgeObjectRetain();
  v14 = v13;
LABEL_8:
  v18 = *(_QWORD *)(a1 + 80);
  v19 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 80) = v19;
  swift_retain(v19);
  swift_release(v18);
  return a1;
}

uint64_t assignWithTake for InlineProfileEditingView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  uint64_t v11;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_release(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release(v6);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release(v7);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v8 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_release(v8);
  v9 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(a1 + 64) >= 3uLL)
  {
    if (v9 >= 3)
    {
      *(_QWORD *)(a1 + 64) = v9;
      swift_bridgeObjectRelease();
      v10 = *(void **)(a1 + 72);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);

      goto LABEL_6;
    }
    sub_100008758(a1 + 64, &qword_10049F560);
  }
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
LABEL_6:
  v11 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_release(v11);
  return a1;
}

ValueMetadata *type metadata accessor for InlineProfileEditingView()
{
  return &type metadata for InlineProfileEditingView;
}

uint64_t sub_10031B0B4()
{
  return type metadata accessor for InlineProfileEditingView.Context(0);
}

void sub_10031B0BC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[4];

  sub_1001833F4(319, (unint64_t *)&unk_10049F5A0, (uint64_t *)&unk_10049F430);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1002A2BEC();
    if (v5 <= 0x3F)
    {
      v8[1] = *(_QWORD *)(v4 - 8) + 64;
      sub_1001833F4(319, (unint64_t *)&unk_10049F5B0, &qword_100499760);
      if (v7 <= 0x3F)
      {
        v8[2] = *(_QWORD *)(v6 - 8) + 64;
        v8[3] = &unk_10039DF98;
        swift_updateClassMetadata2(a1, 256, 4, v8, a1 + 80);
      }
    }
  }
}

uint64_t sub_10031B184()
{
  _QWORD v1[6];

  v1[0] = sub_100005600(&qword_10049F4B8);
  v1[1] = &type metadata for String;
  v1[2] = sub_100005600(&qword_10049F540);
  v1[3] = sub_10031AC34();
  v1[4] = sub_10024AF7C();
  v1[5] = sub_10002FFB8(&qword_10049F558, &qword_10049F540, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.alert<A, B>(_:isPresented:actions:)>>, 1);
}

uint64_t sub_10031B228@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.isEnabled.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_10031B254(unsigned __int8 *a1)
{
  return EnvironmentValues.isEnabled.setter(*a1);
}

uint64_t sub_10031B278()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

_BYTE *sub_10031B288(_BYTE *result)
{
  uint64_t v1;

  *result &= ~*(_BYTE *)(v1 + 16) & 1;
  return result;
}

uint64_t sub_10031B2A0()
{
  uint64_t v0;
  unint64_t v1;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 56));
  swift_release(*(_QWORD *)(v0 + 72));
  v1 = *(_QWORD *)(v0 + 80);
  if (v1 >= 3)
  {
    swift_bridgeObjectRelease(v1);

  }
  swift_release(*(_QWORD *)(v0 + 96));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 112));
  return swift_deallocObject(v0, 120, 7);
}

uint64_t sub_10031B304()
{
  uint64_t v0;

  return sub_10031A4F0((__int128 *)(v0 + 16), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112));
}

_QWORD *sub_10031B310(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  void *v6;
  uint64_t v7;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[5];
  v5 = a1[8];
  v6 = (void *)a1[9];
  v7 = a1[10];
  swift_retain(a1[7]);
  swift_retain(v2);
  swift_retain(v3);
  swift_retain(v4);
  sub_1003136B8(v5, v6);
  swift_retain(v7);
  return a1;
}

uint64_t sub_10031B394(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ImagePicker(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10031B3E4()
{
  uint64_t v0;

  return sub_100319688(v0 + 16);
}

uint64_t sub_10031B3F0()
{
  uint64_t v0;

  return sub_10031970C(v0 + 16);
}

void sub_10031B3FC()
{
  uint64_t v0;

  sub_10031978C(v0 + 16);
}

unint64_t sub_10031B404()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049E540;
  if (!qword_10049E540)
  {
    v1 = objc_opt_self(MPArtworkCatalog);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10049E540);
  }
  return result;
}

unint64_t sub_10031B440()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049F828;
  if (!qword_10049F828)
  {
    v1 = sub_100005600(&qword_10049F830);
    sub_10031B4C4();
    sub_10002FFB8((unint64_t *)&unk_10049EE50, &qword_10049F850, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049F828);
  }
  return result;
}

unint64_t sub_10031B4C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049F838;
  if (!qword_10049F838)
  {
    v1 = sub_100005600((uint64_t *)&unk_10049F840);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049F838);
  }
  return result;
}

unint64_t sub_10031B528()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049F860;
  if (!qword_10049F860)
  {
    v1 = sub_100005600(&qword_10049F268);
    sub_10031B5AC();
    sub_10002FFB8((unint64_t *)&unk_10049EE50, &qword_10049F850, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049F860);
  }
  return result;
}

unint64_t sub_10031B5AC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10049F868;
  if (!qword_10049F868)
  {
    v1 = sub_100005600((uint64_t *)&unk_10049F7E0);
    v2[0] = sub_100005600((uint64_t *)&unk_10049E7C0);
    v2[1] = sub_1002C6818();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049F868);
  }
  return result;
}

uint64_t sub_10031B644()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  __int128 v4;

  v4 = *(_OWORD *)(v0 + 32);
  v3 = 1;
  v1 = sub_100005574(&qword_10049C5C8);
  return State.wrappedValue.setter(&v3, v1);
}

uint64_t sub_10031B69C()
{
  uint64_t v0;
  unint64_t v1;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 56));
  swift_release(*(_QWORD *)(v0 + 72));
  v1 = *(_QWORD *)(v0 + 80);
  if (v1 >= 3)
  {
    swift_bridgeObjectRelease(v1);

  }
  swift_release(*(_QWORD *)(v0 + 96));
  return swift_deallocObject(v0, 104, 7);
}

uint64_t sub_10031B6F8()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  __int128 v4;

  v4 = *(_OWORD *)(v0 + 64);
  v3 = 1;
  v1 = sub_100005574(&qword_10049C5C8);
  return State.wrappedValue.setter(&v3, v1);
}

uint64_t sub_10031B74C(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(&type metadata for Text.Storage - 1) + 32))(a2, a1);
  return a2;
}

uint64_t sub_10031B788(uint64_t a1)
{
  sub_10003B4C0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  return a1;
}

uint64_t sub_10031B7B8(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10031B7E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char v17;
  char v18;
  double v19;
  void (*v20)(char *, uint64_t, uint64_t, double);
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  unint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _OWORD v75[11];
  _BYTE v76[183];
  char v77;
  _OWORD v78[12];
  __int128 v79;

  v3 = v2;
  v70 = a1;
  v74 = a2;
  v4 = sub_100005574(&qword_10049F888);
  v66 = *(_QWORD *)(v4 - 8);
  v67 = v4;
  __chkstk_darwin();
  v6 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_100005574(&qword_10049F890);
  __chkstk_darwin();
  v8 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = sub_100005574(&qword_10049F898);
  __chkstk_darwin();
  v68 = (uint64_t)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v69 = (uint64_t)&v61 - v10;
  v72 = sub_100005574(&qword_10049F8A0);
  __chkstk_darwin();
  v71 = (uint64_t)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100005574(&qword_10049F8A8);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin();
  v15 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(v3 + 40);
  v17 = *(_BYTE *)(v3 + 48);
  sub_100301C50(v16, v17);
  v18 = sub_1002BE254(v16, v17);
  v19 = sub_1002D0564(v16, v17);
  if ((v18 & 1) != 0)
  {
    v20 = *(void (**)(char *, uint64_t, uint64_t, double))(v13 + 16);
    v20(v15, v70, v12, v19);
    v21 = v71;
    ((void (*)(uint64_t, char *, uint64_t))v20)(v71, v15, v12);
    swift_storeEnumTagMultiPayload(v21, v72, 0);
    v22 = sub_10002FFB8(&qword_10049F8B0, &qword_10049F8A8, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    v23 = sub_10031C6D0();
    _ConditionalContent<>.init(storage:)(v21, v12, v73, v22, v23);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  else
  {
    v25 = type metadata accessor for ScrollGeometry(0);
    v79 = *(_OWORD *)(v3 + 24);
    v26 = swift_allocObject(&unk_1004639C0, 65, 7);
    v27 = *(_OWORD *)(v3 + 16);
    *(_OWORD *)(v26 + 16) = *(_OWORD *)v3;
    *(_OWORD *)(v26 + 32) = v27;
    *(_OWORD *)(v26 + 48) = *(_OWORD *)(v3 + 32);
    *(_BYTE *)(v26 + 64) = *(_BYTE *)(v3 + 48);
    sub_100301C50(v16, v17);
    sub_1002B90B4((uint64_t)&v79);
    v28 = sub_10002FFB8(&qword_10049F8B0, &qword_10049F8A8, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    v64 = v28;
    v29 = sub_10031C640();
    View.onScrollGeometryChange<A>(for:of:action:)(v25, sub_10031BD0C, 0, sub_10031C638, v26, v12, v25, v28, v29);
    v30 = swift_release(v26);
    v31 = static Alignment.bottom.getter(v30);
    v62 = v32;
    v63 = v31;
    v61 = static VerticalAlignment.center.getter(v31);
    sub_10031BDE0(v3, (uint64_t)v75);
    *(_OWORD *)&v76[119] = v75[7];
    *(_OWORD *)&v76[135] = v75[8];
    *(_OWORD *)&v76[151] = v75[9];
    *(_OWORD *)&v76[167] = v75[10];
    *(_OWORD *)&v76[55] = v75[3];
    *(_OWORD *)&v76[71] = v75[4];
    *(_OWORD *)&v76[87] = v75[5];
    *(_OWORD *)&v76[103] = v75[6];
    *(_OWORD *)&v76[7] = v75[0];
    *(_OWORD *)&v76[23] = v75[1];
    v77 = 0;
    *(_OWORD *)&v76[39] = v75[2];
    v34 = static SafeAreaRegions.all.getter(v33);
    LOBYTE(v28) = static Edge.Set.all.getter(v34);
    v70 = v12;
    v36 = v66;
    v35 = v67;
    (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v8, v6, v67);
    v37 = &v8[*(int *)(v65 + 36)];
    v38 = *(_OWORD *)&v76[144];
    *(_OWORD *)(v37 + 161) = *(_OWORD *)&v76[128];
    *(_OWORD *)(v37 + 177) = v38;
    *(_OWORD *)(v37 + 193) = *(_OWORD *)&v76[160];
    v39 = *(_OWORD *)&v76[80];
    *(_OWORD *)(v37 + 97) = *(_OWORD *)&v76[64];
    *(_OWORD *)(v37 + 113) = v39;
    v40 = *(_OWORD *)&v76[112];
    *(_OWORD *)(v37 + 129) = *(_OWORD *)&v76[96];
    *(_OWORD *)(v37 + 145) = v40;
    v41 = *(_OWORD *)&v76[16];
    *(_OWORD *)(v37 + 33) = *(_OWORD *)v76;
    *(_OWORD *)(v37 + 49) = v41;
    v42 = *(_OWORD *)&v76[48];
    *(_OWORD *)(v37 + 65) = *(_OWORD *)&v76[32];
    v43 = v62;
    *(_QWORD *)v37 = v63;
    *((_QWORD *)v37 + 1) = v43;
    *((_QWORD *)v37 + 2) = v61;
    *((_QWORD *)v37 + 3) = 0;
    v37[32] = 0;
    v44 = *(_QWORD *)&v76[175];
    *(_OWORD *)(v37 + 81) = v42;
    *((_QWORD *)v37 + 26) = v44;
    *((_QWORD *)v37 + 27) = v34;
    v37[224] = v28;
    v45 = (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v6, v35);
    v46 = static Alignment.center.getter(v45);
    v48 = v47;
    sub_10031C098((uint64_t *)v3, (uint64_t)v78);
    v49 = v68;
    sub_100014A7C((uint64_t)v8, v68, &qword_10049F890);
    v50 = v73;
    v51 = v49 + *(int *)(v73 + 36);
    v52 = v78[9];
    *(_OWORD *)(v51 + 128) = v78[8];
    *(_OWORD *)(v51 + 144) = v52;
    v53 = v78[11];
    *(_OWORD *)(v51 + 160) = v78[10];
    *(_OWORD *)(v51 + 176) = v53;
    v54 = v78[5];
    *(_OWORD *)(v51 + 64) = v78[4];
    *(_OWORD *)(v51 + 80) = v54;
    v55 = v78[7];
    *(_OWORD *)(v51 + 96) = v78[6];
    *(_OWORD *)(v51 + 112) = v55;
    v56 = v78[1];
    *(_OWORD *)v51 = v78[0];
    *(_OWORD *)(v51 + 16) = v56;
    v57 = v78[3];
    *(_OWORD *)(v51 + 32) = v78[2];
    *(_OWORD *)(v51 + 48) = v57;
    *(_QWORD *)(v51 + 192) = v46;
    *(_QWORD *)(v51 + 200) = v48;
    sub_100008758((uint64_t)v8, &qword_10049F890);
    v58 = v69;
    sub_10031C688(v49, v69);
    v59 = v71;
    sub_100014A7C(v58, v71, &qword_10049F898);
    swift_storeEnumTagMultiPayload(v59, v72, 1);
    v60 = sub_10031C6D0();
    _ConditionalContent<>.init(storage:)(v59, v70, v50, v64, v60);
    return sub_100008758(v58, &qword_10049F898);
  }
}

uint64_t sub_10031BD0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = type metadata accessor for ScrollGeometry(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
}

uint64_t sub_10031BD48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  double v5;
  double v6;
  double MaxY;
  double v8;
  double v9;
  uint64_t v10;
  double v12;
  __int128 v13;
  CGRect v14;

  v4 = ScrollGeometry.contentSize.getter();
  v6 = v5;
  v14.origin.x = ScrollGeometry.visibleRect.getter(v4);
  MaxY = CGRectGetMaxY(v14);
  ScrollGeometry.contentInsets.getter();
  v9 = (v6 - (MaxY - v8)) / *(double *)a3;
  if (v9 > 1.0)
    v9 = 1.0;
  if (v9 < 0.0)
    v9 = 0.0;
  v13 = *(_OWORD *)(a3 + 24);
  v12 = v9;
  v10 = sub_100005574(&qword_10049F8F0);
  return State.wrappedValue.setter(&v12, v10);
}

void sub_10031BDE0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  __n128 v5;
  __n128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char v34;
  __int128 v35;

  v4 = static HorizontalAlignment.center.getter(a1);
  v6.n128_f64[0] = sub_10031BF14((uint64_t *)a1, (uint64_t)&v28, v5);
  v7 = v28;
  v8 = v29;
  v9 = v30;
  v10 = v31;
  v11 = v32;
  v12 = v33;
  v13 = v34;
  v14 = v35;
  if ((*(_BYTE *)(a1 + 16) & 1) != 0)
  {
    v15 = 0;
    v16 = 0;
    v17 = 0;
    v18 = 0;
    v19 = 0;
    v20 = 0uLL;
  }
  else
  {
    v21 = *(_QWORD *)(a1 + 8);
    v26 = v29;
    v27 = v28;
    v24 = v35;
    v25 = v30;
    v15 = static Color.black.getter(v6);
    v22 = static Alignment.center.getter(v15);
    _FrameLayout.init(width:height:alignment:)(&v28, v21, 0, 0, 1, v22, v23);
    v14 = v24;
    v9 = v25;
    v8 = v26;
    v7 = v27;
    v16 = v28;
    v17 = BYTE8(v28);
    v18 = v29;
    v19 = BYTE8(v29);
    v20 = v30;
  }
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 0;
  *(_OWORD *)(a2 + 24) = v7;
  *(_OWORD *)(a2 + 40) = v8;
  *(_OWORD *)(a2 + 56) = v9;
  *(_QWORD *)(a2 + 72) = v10;
  *(_BYTE *)(a2 + 80) = v11;
  *(_QWORD *)(a2 + 88) = v12;
  *(_BYTE *)(a2 + 96) = v13;
  *(_OWORD *)(a2 + 104) = v14;
  *(_QWORD *)(a2 + 120) = v15;
  *(_QWORD *)(a2 + 128) = v16;
  *(_QWORD *)(a2 + 136) = v17;
  *(_QWORD *)(a2 + 144) = v18;
  *(_QWORD *)(a2 + 152) = v19;
  *(_OWORD *)(a2 + 160) = v20;
}

double sub_10031BF14@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>, __n128 a3@<Q0>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  _QWORD *v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  double result;
  __int128 v33;
  double v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  char v40;
  __int128 v41;

  v5 = static Color.black.getter(a3);
  v6 = sub_100005574(&qword_10049F8F8);
  v7 = swift_allocObject(v6, 48, 7);
  *(_OWORD *)(v7 + 16) = xmmword_100384A60;
  *(_QWORD *)(v7 + 32) = static Color.black.getter((__n128)xmmword_100384A60);
  v9 = static Color.black.getter(v8);
  v38 = *(_OWORD *)(a1 + 3);
  v10 = sub_100005574(&qword_10049F8F0);
  State.wrappedValue.getter(&v34, v10);
  v11 = Color.opacity(_:)(1.0 - v34);
  swift_release(v9);
  *(_QWORD *)(v7 + 40) = v11;
  *(_QWORD *)&v38 = v7;
  v13 = specialized Array._endMutation()(v12);
  v14 = v38;
  v15 = static UnitPoint.top.getter(v13);
  v17 = v16;
  v18 = static UnitPoint.bottom.getter();
  v20 = v19;
  Gradient.init(colors:)(v14);
  v21 = LinearGradient.init(gradient:startPoint:endPoint:)(&v34, v15, v17, v18, v20);
  v22 = v34;
  v33 = v35;
  v23 = v36;
  v24 = v37;
  v25 = *a1;
  v26 = static Alignment.center.getter(v21);
  _FrameLayout.init(width:height:alignment:)(&v38, 0, 1, v25, 0, v26, v27);
  v28 = v38;
  v29 = BYTE8(v38);
  v30 = v39;
  v31 = v40;
  *(_QWORD *)a2 = v5;
  *(double *)(a2 + 8) = v22;
  *(_OWORD *)(a2 + 16) = v33;
  *(_QWORD *)(a2 + 32) = v23;
  *(_QWORD *)(a2 + 40) = v24;
  *(_QWORD *)(a2 + 48) = v28;
  *(_BYTE *)(a2 + 56) = v29;
  *(_QWORD *)(a2 + 64) = v30;
  *(_BYTE *)(a2 + 72) = v31;
  result = *(double *)&v41;
  *(_OWORD *)(a2 + 80) = v41;
  return result;
}

uint64_t sub_10031C098@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  char v42;
  char v43;
  char v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;

  v36 = static HorizontalAlignment.center.getter(a1);
  v4 = static Alignment.center.getter(v36);
  v37 = v5;
  v38 = v4;
  v6 = *a1;
  v7 = static Alignment.center.getter(v4);
  v9 = _FrameLayout.init(width:height:alignment:)(&v45, 0, 1, v6, 0, v7, v8);
  v10 = v46;
  v34 = v47;
  v35 = v45;
  v11 = v48;
  v12 = v49;
  v13 = v50;
  v14 = static Edge.Set.trailing.getter(v9);
  v15 = *((_BYTE *)a1 + 16);
  v16 = 0.0;
  v17 = 0;
  v18 = 0;
  v19 = 0;
  if ((v15 & 1) == 0)
  {
    v16 = EdgeInsets.init(_all:)(*((double *)a1 + 1));
    v17 = v20;
    v18 = v21;
    v19 = v22;
  }
  v44 = 1;
  v43 = 1;
  v42 = v10;
  v41 = v11;
  v40 = v15;
  v23 = sub_100005574(&qword_10049F8F0);
  v24 = State.wrappedValue.getter(&v39, v23);
  v25 = v39;
  v26 = v44;
  v27 = v43;
  v28 = v42;
  v29 = v41;
  v30 = v40;
  v31 = static Edge.Set.bottom.getter(v24);
  v32 = v31;
  result = static SafeAreaRegions.all.getter(v31);
  *(_QWORD *)a2 = v36;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = v26;
  *(_QWORD *)(a2 + 24) = 0;
  *(_BYTE *)(a2 + 32) = v27;
  *(_QWORD *)(a2 + 40) = v38;
  *(_QWORD *)(a2 + 48) = v37;
  *(_QWORD *)(a2 + 56) = 0x4018000000000000;
  *(_BYTE *)(a2 + 64) = 3;
  *(_QWORD *)(a2 + 72) = v35;
  *(_BYTE *)(a2 + 80) = v28;
  *(_QWORD *)(a2 + 88) = v34;
  *(_BYTE *)(a2 + 96) = v29;
  *(_QWORD *)(a2 + 104) = v12;
  *(_QWORD *)(a2 + 112) = v13;
  *(_BYTE *)(a2 + 120) = v14;
  *(double *)(a2 + 128) = v16;
  *(_QWORD *)(a2 + 136) = v17;
  *(_QWORD *)(a2 + 144) = v18;
  *(_QWORD *)(a2 + 152) = v19;
  *(_BYTE *)(a2 + 160) = v30;
  *(_QWORD *)(a2 + 168) = v25;
  *(_QWORD *)(a2 + 176) = result;
  *(_BYTE *)(a2 + 184) = v32;
  return result;
}

uint64_t sub_10031C244@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10031B7E0(a1, a2);
}

void sub_10031C284(uint64_t a1, char a2, uint64_t a3, uint64_t a4, double a5)
{
  double v10;
  uint64_t v11;
  uint64_t KeyPath;
  double v13;
  uint64_t v14;
  char v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;

  v20 = 0x3FF0000000000000;
  State.init(wrappedValue:)(&v13, &v20, &type metadata for CGFloat);
  v10 = v13;
  v11 = v14;
  KeyPath = swift_getKeyPath(&unk_10039E070);
  v13 = a5;
  v14 = a1;
  v15 = a2 & 1;
  v16 = v10;
  v17 = v11;
  v18 = KeyPath;
  v19 = 0;
  View.modifier<A>(_:)(&v13, a3, &type metadata for BottomGradientBlurMask, a4);
  swift_release(KeyPath);
  swift_release(v11);
}

uint64_t sub_10031C358@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.accessibilityReduceTransparency.getter();
  *a1 = result & 1;
  return result;
}

double destroy for BottomGradientBlurMask(uint64_t a1)
{
  swift_release(*(_QWORD *)(a1 + 32));
  return sub_1002D0564(*(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
}

uint64_t initializeWithCopy for BottomGradientBlurMask(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  v6 = *(_BYTE *)(a2 + 48);
  swift_retain(v4);
  sub_100301C50(v5, v6);
  *(_QWORD *)(a1 + 40) = v5;
  *(_BYTE *)(a1 + 48) = v6;
  return a1;
}

uint64_t assignWithCopy for BottomGradientBlurMask(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v2 = a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v6;
  swift_retain(v6);
  swift_release(v5);
  v7 = *(_QWORD *)(v2 + 40);
  LOBYTE(v2) = *(_BYTE *)(v2 + 48);
  sub_100301C50(v7, v2);
  v8 = *(_QWORD *)(a1 + 40);
  v9 = *(_BYTE *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = v7;
  *(_BYTE *)(a1 + 48) = v2;
  sub_1002D0564(v8, v9);
  return a1;
}

__n128 initializeWithTake for BottomGradientBlurMask(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for BottomGradientBlurMask(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release(v4);
  v5 = *(_BYTE *)(a2 + 48);
  v6 = *(_QWORD *)(a1 + 40);
  v7 = *(_BYTE *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = v5;
  sub_1002D0564(v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for BottomGradientBlurMask(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 49))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 32);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for BottomGradientBlurMask(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
      *(_QWORD *)(result + 32) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for BottomGradientBlurMask()
{
  return &type metadata for BottomGradientBlurMask;
}

uint64_t sub_10031C5F8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1003E4264, 1);
}

uint64_t sub_10031C608()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));
  sub_1002D0564(*(_QWORD *)(v0 + 56), *(_BYTE *)(v0 + 64));
  return swift_deallocObject(v0, 65, 7);
}

uint64_t sub_10031C638(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10031BD48(a1, a2, v2 + 16);
}

unint64_t sub_10031C640()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049F8B8;
  if (!qword_10049F8B8)
  {
    v1 = type metadata accessor for ScrollGeometry(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for ScrollGeometry, v1);
    atomic_store(result, (unint64_t *)&qword_10049F8B8);
  }
  return result;
}

uint64_t sub_10031C688(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005574(&qword_10049F898);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10031C6D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049F8C0;
  if (!qword_10049F8C0)
  {
    v1 = sub_100005600(&qword_10049F898);
    sub_10031C754();
    sub_10002FFB8(&qword_10049F8E0, &qword_10049F8E8, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049F8C0);
  }
  return result;
}

unint64_t sub_10031C754()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_10049F8C8;
  if (!qword_10049F8C8)
  {
    v1 = sub_100005600(&qword_10049F890);
    v2[0] = sub_100005600(&qword_10049F8A8);
    v2[1] = type metadata accessor for ScrollGeometry(255);
    v2[2] = sub_10002FFB8(&qword_10049F8B0, &qword_10049F8A8, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    v2[3] = sub_10031C640();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.onScrollGeometryChange<A>(for:of:action:)>>, 1);
    sub_10002FFB8(&qword_10049F8D0, &qword_10049F8D8, (uint64_t)&protocol conformance descriptor for _MaskAlignmentEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049F8C8);
  }
  return result;
}

unint64_t sub_10031C83C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049F900;
  if (!qword_10049F900)
  {
    v1 = sub_100005600(&qword_10049F908);
    sub_10002FFB8(&qword_10049F8B0, &qword_10049F8A8, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    sub_10031C6D0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049F900);
  }
  return result;
}

double ExpandableTextView.init(title:buttonColor:_:sheetContent:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(__n128)@<X3>, void (*a5)(uint64_t)@<X5>, uint64_t a6@<X7>, uint64_t a7@<X8>, __int128 a8, uint64_t a9)
{
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  double result;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  char v23;

  v23 = 0;
  State.init(wrappedValue:)(&v20, &v23, &type metadata for Bool);
  v16 = v21;
  *(_BYTE *)a7 = v20;
  *(_QWORD *)(a7 + 8) = v16;
  *(_QWORD *)(a7 + 16) = a1;
  *(_QWORD *)(a7 + 24) = a2;
  v20 = a6;
  v21 = a8;
  v22 = a9;
  *(_QWORD *)(a7 + *(int *)(type metadata accessor for ExpandableTextView(0, (uint64_t)&v20) + 64)) = a3;
  v17 = swift_retain(a3);
  v18 = a4(v17);
  a5(v18);
  *(_QWORD *)&result = swift_release(a3).n128_u64[0];
  return result;
}

uint64_t type metadata accessor for ExpandableTextView(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for ExpandableTextView);
}

double ExpandableTextView.init<>(title:buttonColor:_:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(__n128)@<X3>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  __int128 v8;

  *((_QWORD *)&v8 + 1) = a6;
  *(_QWORD *)&v8 = a5;
  return ExpandableTextView.init(title:buttonColor:_:sheetContent:)(a1, a2, a3, a4, (void (*)(uint64_t))a4, a5, a7, v8, a6);
}

uint64_t ExpandableTextView.body.getter@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t WitnessTable;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t OpaqueTypeConformance2;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  ValueMetadata *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  ValueMetadata *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t, _QWORD *);
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD v93[2];
  uint64_t v94;
  ValueMetadata *v95;
  uint64_t v96;
  void *v97;

  v3 = v2;
  v79 = a2;
  v65 = *(a1 - 1);
  v69 = *(_QWORD *)(v65 + 64);
  v5 = __chkstk_darwin();
  v82 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = *(_QWORD *)(v5 + 16);
  v7 = v63;
  v8 = type metadata accessor for MoreLabel(255);
  v74 = v8;
  v81 = a1[4];
  v9 = v81;
  v71 = (void *)sub_100006924(&qword_10049F910, type metadata accessor for MoreLabel, (uint64_t)&protocol conformance descriptor for MoreLabel);
  v94 = v7;
  v95 = (ValueMetadata *)v8;
  v96 = v9;
  v97 = v71;
  v10 = type metadata accessor for HeightLimitedButtonTextView(0, (uint64_t)&v94);
  v77 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin();
  v70 = (uint64_t)&v57 - v11;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for HeightLimitedButtonTextView<A, B>, v10);
  v94 = v10;
  v95 = (ValueMetadata *)&type metadata for Bool;
  v60 = v10;
  v96 = WitnessTable;
  v97 = &protocol witness table for Bool;
  v61 = WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v94, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v78 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  v72 = OpaqueTypeMetadata2;
  __chkstk_darwin();
  v67 = (char *)&v57 - v14;
  v80 = a1[3];
  v57 = a1[5];
  v16 = type metadata accessor for Sheet(255, v80, v57, v15);
  v17 = swift_getWitnessTable(&unk_10039E298, v16);
  v18 = sub_10031D09C();
  v94 = v16;
  v95 = &type metadata for DescriptionSheetSizing;
  v96 = v17;
  v97 = (void *)v18;
  v19 = swift_getOpaqueTypeMetadata2(255, &v94, &opaque type descriptor for <<opaque return type of View.presentationSizing<A>(_:)>>, 0);
  v64 = v19;
  v94 = v10;
  v95 = (ValueMetadata *)&type metadata for Bool;
  v96 = WitnessTable;
  v97 = &protocol witness table for Bool;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v94, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v68 = OpaqueTypeConformance2;
  v94 = v16;
  v95 = &type metadata for DescriptionSheetSizing;
  v96 = v17;
  v97 = (void *)v18;
  v66 = swift_getOpaqueTypeConformance2(&v94, &opaque type descriptor for <<opaque return type of View.presentationSizing<A>(_:)>>, 1);
  v94 = OpaqueTypeMetadata2;
  v95 = (ValueMetadata *)v19;
  v96 = OpaqueTypeConformance2;
  v97 = (void *)v66;
  v75 = swift_getOpaqueTypeMetadata2(0, &v94, &opaque type descriptor for <<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>, 0);
  v76 = *(_QWORD *)(v75 - 8);
  __chkstk_darwin();
  v62 = (char *)&v57 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v73 = (uint64_t)&v57 - v22;
  v23 = v65;
  v59 = *(void (**)(char *, uint64_t, _QWORD *))(v65 + 16);
  v24 = v82;
  v59(v82, v3, a1);
  v25 = *(unsigned __int8 *)(v23 + 80);
  v26 = (v25 + 48) & ~v25;
  v69 += v26;
  v58 = v25 | 7;
  v27 = (_QWORD *)swift_allocObject(&unk_100463A30, v69, v25 | 7);
  v28 = v63;
  v29 = v80;
  v27[2] = v63;
  v27[3] = v29;
  v30 = v81;
  v31 = v57;
  v27[4] = v81;
  v27[5] = v31;
  v65 = *(_QWORD *)(v23 + 32);
  ((void (*)(char *, char *, _QWORD *))v65)((char *)v27 + v26, v24, a1);
  v32 = v28;
  v88 = v28;
  v89 = v29;
  v90 = v30;
  v91 = v31;
  v33 = v31;
  v92 = v3;
  v83 = v32;
  v84 = v29;
  v85 = v30;
  v86 = v31;
  v87 = v3;
  v34 = v70;
  HeightLimitedButtonTextView.init(action:body:trailingView:)((uint64_t)sub_10031D0E4, (uint64_t)v27, (void (*)(void))sub_10031D1A8, sub_10031D32C, v32, v74, v70, v30, (uint64_t)v71);
  v35 = *(ValueMetadata **)(v3 + 8);
  LOBYTE(v94) = *(_BYTE *)v3;
  v95 = v35;
  v36 = sub_100005574(&qword_10049C5C8);
  State.wrappedValue.getter(v93, v36);
  LOBYTE(v94) = v93[0];
  v37 = v67;
  v38 = v60;
  View.onChange<A>(of:initial:_:)(&v94, 0, CFRange.init(_:), 0, v60, &type metadata for Bool, v61, &protocol witness table for Bool);
  (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v34, v38);
  v39 = *(_QWORD *)(v3 + 8);
  LOBYTE(v93[0]) = *(_BYTE *)v3;
  v93[1] = v39;
  State.projectedValue.getter(&v94, v36);
  v41 = v94;
  v40 = v95;
  v42 = v96;
  v43 = v82;
  v59(v82, v3, a1);
  v44 = (_QWORD *)swift_allocObject(&unk_100463A58, v69, v58);
  v45 = v80;
  v44[2] = v32;
  v44[3] = v45;
  v44[4] = v81;
  v44[5] = v33;
  ((void (*)(char *, char *, _QWORD *))v65)((char *)v44 + v26, v43, a1);
  v46 = swift_checkMetadataState(0, v64);
  v47 = (void *)v66;
  v48 = v68;
  v49 = (uint64_t)v62;
  v50 = v72;
  View.sheet<A>(isPresented:onDismiss:content:)(v41, v40, v42, 0, 0, sub_10031D66C, v44, v72, v51, v46, v68, v66);
  swift_release(v40);
  swift_release(v44);
  v52 = swift_release(v41);
  (*(void (**)(char *, uint64_t, __n128))(v78 + 8))(v37, v50, v52);
  v94 = v50;
  v95 = (ValueMetadata *)v46;
  v96 = v48;
  v97 = v47;
  swift_getOpaqueTypeConformance2(&v94, &opaque type descriptor for <<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>, 1);
  v53 = v73;
  v54 = v75;
  sub_10003B690(v49, v75, v73);
  v55 = *(void (**)(uint64_t, uint64_t))(v76 + 8);
  v55(v49, v54);
  sub_100035E98(v53, v54, v79);
  return ((uint64_t (*)(uint64_t, uint64_t))v55)(v53, v54);
}

uint64_t type metadata accessor for Sheet(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100031DCC(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Sheet);
}

unint64_t sub_10031D09C()
{
  unint64_t result;

  result = qword_10049F918[0];
  if (!qword_10049F918[0])
  {
    result = swift_getWitnessTable(&unk_10039E260, &type metadata for DescriptionSheetSizing);
    atomic_store(result, qword_10049F918);
  }
  return result;
}

uint64_t sub_10031D0E4()
{
  return sub_100320DA8(1);
}

uint64_t sub_10031D0EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[4];

  v6 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin();
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = v9;
  v15[1] = v10;
  v15[2] = v11;
  v15[3] = v12;
  v13 = type metadata accessor for ExpandableTextView(0, (uint64_t)v15);
  sub_10003B690(a1 + *(int *)(v13 + 56), a2, (uint64_t)v8);
  sub_100035E98((uint64_t)v8, a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, a2);
}

uint64_t sub_10031D1A8()
{
  return sub_10031D338((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10031D0EC);
}

double sub_10031D1B4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  char *v25;
  double result;
  _QWORD v27[4];

  v12 = type metadata accessor for MoreLabel(0);
  __chkstk_darwin();
  v14 = (_QWORD *)((char *)v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  v16 = (char *)v27 - v15;
  __chkstk_darwin();
  v18 = (char *)v27 - v17;
  v27[0] = a2;
  v27[1] = a3;
  v27[2] = a4;
  v27[3] = a5;
  v19 = *(int *)(type metadata accessor for ExpandableTextView(0, (uint64_t)v27) + 64);
  v21 = *(_QWORD *)(a1 + v19);
  if (v21)
    v22 = *(_QWORD *)(a1 + v19);
  else
    v22 = static Color.primary.getter(v20);
  v23 = (uint64_t *)((char *)v14 + *(int *)(v12 + 20));
  *v23 = swift_getKeyPath(&unk_10039E318);
  v24 = sub_100005574((uint64_t *)&unk_100498E50);
  swift_storeEnumTagMultiPayload(v23, v24, 0);
  v25 = (char *)v14 + *(int *)(v12 + 24);
  *(_QWORD *)v25 = swift_getKeyPath(&unk_10039E348);
  v25[8] = 0;
  *v14 = v22;
  sub_100320E34((uint64_t)v14, (uint64_t)v16);
  sub_100320E34((uint64_t)v16, (uint64_t)v18);
  sub_100320E34((uint64_t)v18, a6);
  *(_QWORD *)&result = swift_retain(v21).n128_u64[0];
  return result;
}

uint64_t sub_10031D32C()
{
  return sub_10031D338((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10031D1B4);
}

uint64_t sub_10031D338(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[6], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_10031D34C@<X0>(uint64_t a1@<X0>, int *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t WitnessTable;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (**v37)();
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  int *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int *v60;
  ValueMetadata *v61;
  uint64_t v62;
  unint64_t v63;

  v51 = a2;
  v52 = a4;
  v59 = a6;
  v60 = a2;
  v61 = (ValueMetadata *)a3;
  v62 = a4;
  v63 = a5;
  v49 = a5;
  v9 = type metadata accessor for ExpandableTextView(0, (uint64_t)&v60);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin();
  v13 = (char *)&v45 - v12;
  v46 = a3;
  v15 = (int *)type metadata accessor for Sheet(0, a3, a5, v14);
  v58 = *((_QWORD *)v15 - 1);
  __chkstk_darwin();
  v17 = (uint64_t *)((char *)&v45 - v16);
  WitnessTable = swift_getWitnessTable(&unk_10039E298, v15);
  v55 = WitnessTable;
  v54 = sub_10031D09C();
  v60 = v15;
  v61 = &type metadata for DescriptionSheetSizing;
  v62 = WitnessTable;
  v63 = v54;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v60, &opaque type descriptor for <<opaque return type of View.presentationSizing<A>(_:)>>, 0);
  v20 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  v56 = OpaqueTypeMetadata2;
  v57 = v20;
  __chkstk_darwin();
  v50 = (char *)&v45 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v53 = (uint64_t)&v45 - v22;
  v23 = a1;
  v47 = *(_QWORD *)(a1 + 16);
  v48 = a1;
  v45 = *(_QWORD *)(a1 + 24);
  v24 = v13;
  v25 = v13;
  v26 = v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v24, v23, v9);
  v27 = *(unsigned __int8 *)(v10 + 80);
  v28 = (v27 + 48) & ~v27;
  v29 = (char *)swift_allocObject(&unk_100463BF0, v28 + v11, v27 | 7);
  v30 = v52;
  *((_QWORD *)v29 + 2) = v51;
  *((_QWORD *)v29 + 3) = a3;
  v31 = v49;
  *((_QWORD *)v29 + 4) = v30;
  *((_QWORD *)v29 + 5) = v31;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v29[v28], v25, v26);
  v32 = v45;
  swift_bridgeObjectRetain();
  v33 = (_QWORD *)((char *)v17 + v15[11]);
  *v33 = swift_getKeyPath(&unk_10039E2E8);
  v34 = sub_100005574(&qword_10049F780);
  swift_storeEnumTagMultiPayload(v33, v34, 0);
  v35 = v48;
  *v17 = v47;
  v17[1] = v32;
  v36 = sub_10031D718(v35, v46, (uint64_t)v17 + v15[9]);
  v37 = (uint64_t (**)())((char *)v17 + v15[10]);
  *v37 = sub_100320DA0;
  v37[1] = (uint64_t (*)())v29;
  v38 = (uint64_t)v50;
  v40 = v54;
  v39 = v55;
  View.presentationSizing<A>(_:)(v36, v15, &type metadata for DescriptionSheetSizing, v55, v54);
  (*(void (**)(_QWORD *, int *))(v58 + 8))(v17, v15);
  v60 = v15;
  v61 = &type metadata for DescriptionSheetSizing;
  v62 = v39;
  v63 = v40;
  swift_getOpaqueTypeConformance2(&v60, &opaque type descriptor for <<opaque return type of View.presentationSizing<A>(_:)>>, 1);
  v41 = v53;
  v42 = v56;
  sub_10003B690(v38, v56, v53);
  v43 = *(void (**)(uint64_t, uint64_t))(v57 + 8);
  v43(v38, v42);
  sub_100035E98(v41, v42, v59);
  return ((uint64_t (*)(uint64_t, uint64_t))v43)(v41, v42);
}

uint64_t sub_10031D66C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[4];

  v4 = v1[3];
  v5 = v1[4];
  v6 = v1[5];
  v9[0] = v1[2];
  v3 = (int *)v9[0];
  v9[1] = v4;
  v9[2] = v5;
  v9[3] = v6;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ExpandableTextView(0, (uint64_t)v9) - 8) + 80);
  return sub_10031D34C((uint64_t)v1 + ((v7 + 48) & ~v7), v3, v4, v5, v6, a1);
}

uint64_t sub_10031D6E4(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  _OWORD v4[2];

  v2 = *(_OWORD *)(a2 + 32);
  v4[0] = *(_OWORD *)(a2 + 16);
  v4[1] = v2;
  return swift_getOpaqueTypeConformance2(v4, &opaque type descriptor for <<opaque return type of ExpandableTextView.body>>, 1);
}

uint64_t sub_10031D718@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[4];

  v6 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin();
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = v9;
  v15[1] = v10;
  v15[2] = v11;
  v15[3] = v12;
  v13 = type metadata accessor for ExpandableTextView(0, (uint64_t)v15);
  sub_10003B690(a1 + *(int *)(v13 + 60), a2, (uint64_t)v8);
  sub_100035E98((uint64_t)v8, a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, a2);
}

uint64_t sub_10031D7D8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[5];

  v5[0] = &unk_10039E1E8;
  v5[1] = &unk_10039E1E8;
  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v5[2] = *(_QWORD *)(result - 8) + 64;
    result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 24));
    if (v4 <= 0x3F)
    {
      v5[3] = *(_QWORD *)(result - 8) + 64;
      v5[4] = &unk_10039E200;
      swift_initStructMetadata(a1, 0, 5, v5, a1 + 48);
      return 0;
    }
  }
  return result;
}

uint64_t *sub_10031D878(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t *v20;
  uint64_t v21;
  uint64_t v23;

  v3 = a1;
  v5 = *(_QWORD *)(a3 + 16);
  v4 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = *(_QWORD *)(v4 - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = *(_QWORD *)(v6 + 64) + v9;
  v11 = *(_QWORD *)(v8 + 64) + 7;
  if ((v9 | v7) > 7
    || ((*(_DWORD *)(v8 + 80) | *(_DWORD *)(v6 + 80)) & 0x100000) != 0
    || ((v11 + ((v10 + ((v7 + 32) & ~v7)) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v21 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v21 + (((v9 | v7) & 0xF8 ^ 0x1F8) & ((v9 | v7) + 16)));
  }
  else
  {
    v23 = ~v9;
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v14 = a2[1];
    v3[1] = v14;
    v15 = (_QWORD *)(((unint64_t)v3 + 23) & 0xFFFFFFFFFFFFFFF8);
    v16 = (_QWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v15 = *v16;
    v15[1] = v16[1];
    v17 = ((unint64_t)v15 + v7 + 16) & ~v7;
    v18 = ((unint64_t)v16 + v7 + 16) & ~v7;
    v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    swift_retain(v14);
    swift_bridgeObjectRetain();
    v19(v17, v18, v5);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))((v17 + v10) & v23, (v18 + v10) & v23, v4);
    v20 = (uint64_t *)((v11 + ((v18 + v10) & v23)) & 0xFFFFFFFFFFFFF8);
    v21 = *v20;
    *(_QWORD *)((v11 + ((v17 + v10) & v23)) & 0xFFFFFFFFFFFFF8) = *v20;
  }
  swift_retain(v21);
  return v3;
}

double sub_10031D9FC(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  double result;

  swift_release(*(_QWORD *)(a1 + 8));
  v4 = (a1 + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease(*(_QWORD *)(v4 + 8));
  v5 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v6 = (v4 + *(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  (*(void (**)(unint64_t))(v5 + 8))(v6);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a2 + 24) - 8);
  v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  (*(void (**)(unint64_t))(v8 + 8))(v9);
  *(_QWORD *)&result = swift_release(*(_QWORD *)((*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFF8)).n128_u64[0];
  return result;
}

uint64_t sub_10031DA9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v5;
  v6 = (_QWORD *)((a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v7 = (_QWORD *)((a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v6 = *v7;
  v6[1] = v7[1];
  v8 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = ((unint64_t)v6 + v10 + 16) & ~v10;
  v12 = ((unint64_t)v7 + v10 + 16) & ~v10;
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
  swift_retain(v5);
  swift_bridgeObjectRetain();
  v13(v11, v12, v8);
  v14 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = *(_QWORD *)(v9 + 64) + v15;
  v17 = (v16 + v11) & ~v15;
  v18 = (v16 + v12) & ~v15;
  (*(void (**)(uint64_t, uint64_t))(v14 + 16))(v17, v18);
  v19 = *(_QWORD *)(v14 + 64) + 7;
  v20 = (_QWORD *)((v19 + v17) & 0xFFFFFFFFFFFFF8);
  v21 = (uint64_t *)((v19 + v18) & 0xFFFFFFFFFFFFF8);
  v22 = *v21;
  *v20 = *v21;
  swift_retain(v22);
  return a1;
}

uint64_t sub_10031DBA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  swift_retain(v7);
  swift_release(v6);
  v8 = (_QWORD *)((a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v9 = (_QWORD *)((a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v8 = *v9;
  v10 = v8[1];
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v10);
  v11 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = ((unint64_t)v8 + v12 + 16) & ~v12;
  v14 = ((unint64_t)v9 + v12 + 16) & ~v12;
  (*(void (**)(uint64_t, uint64_t))(v11 + 24))(v13, v14);
  v15 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = *(_QWORD *)(v11 + 64) + v16;
  v18 = (v17 + v13) & ~v16;
  v19 = (v17 + v14) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v15 + 24))(v18, v19);
  v20 = *(_QWORD *)(v15 + 64) + 7;
  v21 = (uint64_t *)((v20 + v18) & 0xFFFFFFFFFFFFFFF8);
  v22 = (uint64_t *)((v20 + v19) & 0xFFFFFFFFFFFFF8);
  v23 = *v22;
  v24 = *v21;
  *v21 = *v22;
  swift_retain(v23);
  swift_release(v24);
  return a1;
}

_OWORD *sub_10031DCBC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  _OWORD *v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *a1 = *a2;
  v5 = (_OWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v5 = *v6;
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = ((unint64_t)v5 + v8 + 16) & ~v8;
  v10 = ((unint64_t)v6 + v8 + 16) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 32))(v9, v10);
  v11 = *(_QWORD *)(v7 + 64);
  v12 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = v11 + v13;
  v15 = (v14 + v9) & ~v13;
  v16 = (v14 + v10) & ~v13;
  (*(void (**)(uint64_t, uint64_t))(v12 + 32))(v15, v16);
  *(_QWORD *)((*(_QWORD *)(v12 + 64) + 7 + v15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v12 + 64) + 7 + v16) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_10031DD94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release(v6);
  v7 = (_QWORD *)((a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = v7[1];
  v7[1] = v8[1];
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = ((unint64_t)v7 + v11 + 16) & ~v11;
  v13 = ((unint64_t)v8 + v11 + 16) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v10 + 40))(v12, v13);
  v14 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = *(_QWORD *)(v10 + 64) + v15;
  v17 = (v16 + v12) & ~v15;
  v18 = (v16 + v13) & ~v15;
  (*(void (**)(uint64_t, uint64_t))(v14 + 40))(v17, v18);
  v19 = *(_QWORD *)(v14 + 64) + 7;
  v20 = (uint64_t *)((v19 + v17) & 0xFFFFFFFFFFFFFFF8);
  v21 = *v20;
  *v20 = *(_QWORD *)((v19 + v18) & 0xFFFFFFFFFFFFF8);
  swift_release(v21);
  return a1;
}

uint64_t sub_10031DE98(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  unint64_t v15;
  int v16;
  unint64_t v17;

  v3 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v4 = *(_DWORD *)(v3 + 84);
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  if (v4 <= *(_DWORD *)(v5 + 84))
    v6 = *(_DWORD *)(v5 + 84);
  else
    v6 = *(_DWORD *)(v3 + 84);
  if (v6 <= 0x7FFFFFFE)
    v7 = 2147483646;
  else
    v7 = v6;
  if (!a2)
    return 0;
  v8 = *(unsigned __int8 *)(v3 + 80);
  v9 = *(_QWORD *)(v3 + 64);
  v10 = *(unsigned __int8 *)(v5 + 80);
  if (v7 >= a2)
  {
    if (v6 > 0x7FFFFFFE)
    {
      v17 = (((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v8 + 16) & ~v8;
      if (v4 == v7)
        return (*(uint64_t (**)(unint64_t, _QWORD))(v3 + 48))(v17, *(unsigned int *)(v3 + 84));
      else
        return (*(uint64_t (**)(unint64_t))(v5 + 48))((v17 + v9 + v10) & ~v10);
    }
    else
    {
      v15 = *(_QWORD *)(a1 + 8);
      if (v15 >= 0xFFFFFFFF)
        LODWORD(v15) = -1;
      v16 = v15 - 1;
      if (v16 < 0)
        v16 = -1;
      return (v16 + 1);
    }
  }
  else
  {
    if (((((*(_QWORD *)(v5 + 64) + ((v9 + v10 + ((v8 + 32) & ~v8)) & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v11 = 2;
    else
      v11 = a2 - v7 + 1;
    if (v11 >= 0x10000)
      v12 = 4;
    else
      v12 = 2;
    if (v11 < 0x100)
      v12 = 1;
    if (v11 >= 2)
      v13 = v12;
    else
      v13 = 0;
    return ((uint64_t (*)(void))((char *)&loc_10031DF50 + 4 * byte_10039E120[v13]))();
  }
}

void sub_10031E01C(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v5 + 84) <= *(_DWORD *)(v6 + 84))
    v7 = *(_DWORD *)(v6 + 84);
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (v7 <= 0x7FFFFFFE)
    v8 = 2147483646;
  else
    v8 = v7;
  if (v8 >= a3)
  {
    v11 = 0;
    if (a2 <= v8)
      goto LABEL_20;
  }
  else
  {
    if (((*(_DWORD *)(v6 + 64)
         + ((*(_DWORD *)(v5 + 64)
           + *(unsigned __int8 *)(v6 + 80)
           + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~*(unsigned __int8 *)(v5 + 80))) & ~*(unsigned __int8 *)(v6 + 80))
         + 7) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v9 = a3 - v8 + 1;
    else
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    if (a2 <= v8)
LABEL_20:
      __asm { BR              X6 }
  }
  if (((*(_DWORD *)(v6 + 64)
       + ((*(_DWORD *)(v5 + 64)
         + *(unsigned __int8 *)(v6 + 80)
         + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~*(unsigned __int8 *)(v5 + 80))) & ~*(unsigned __int8 *)(v6 + 80))
       + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v12 = ~v8 + a2;
    bzero(a1, ((*(_QWORD *)(v6 + 64)+ ((*(_QWORD *)(v5 + 64)+ *(unsigned __int8 *)(v6 + 80)+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ 7) & 0xFFFFFFFFFFFFFFF8)+ 8);
    *a1 = v12;
  }
  __asm { BR              X10 }
}

void sub_10031E154()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x10031E1D4);
}

void sub_10031E15C(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x10031E164);
  JUMPOUT(0x10031E1D4);
}

void sub_10031E1AC()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x10031E1D4);
}

void sub_10031E1B4()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x10031E1D4);
}

void sub_10031E1BC(uint64_t a1, unsigned int a2)
{
  int v2;
  int v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (a2)
  {
    if (v4 > 0x7FFFFFFE)
    {
      if (v2 == v3)
        JUMPOUT(0x10031E1FCLL);
      JUMPOUT(0x10031E1E8);
    }
    if (a2 > 0x7FFFFFFE)
      JUMPOUT(0x10031E1C8);
    *(_QWORD *)(v5 + 8) = a2;
  }
  JUMPOUT(0x10031E1D4);
}

uint64_t sub_10031E214(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t WitnessTable;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t OpaqueTypeConformance2;
  uint64_t v13;
  uint64_t v15;
  ValueMetadata *v16;
  uint64_t v17;
  void *v18;

  v1 = a1[1];
  v3 = a1[2];
  v2 = a1[3];
  v15 = *a1;
  v16 = (ValueMetadata *)type metadata accessor for MoreLabel(255);
  v17 = v3;
  v18 = (void *)sub_100006924(&qword_10049F910, type metadata accessor for MoreLabel, (uint64_t)&protocol conformance descriptor for MoreLabel);
  v4 = type metadata accessor for HeightLimitedButtonTextView(255, (uint64_t)&v15);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for HeightLimitedButtonTextView<A, B>, v4);
  v15 = v4;
  v16 = (ValueMetadata *)&type metadata for Bool;
  v17 = WitnessTable;
  v18 = &protocol witness table for Bool;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v15, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 0);
  v8 = type metadata accessor for Sheet(255, v1, v2, v7);
  v9 = swift_getWitnessTable(&unk_10039E298, v8);
  v10 = sub_10031D09C();
  v15 = v8;
  v16 = &type metadata for DescriptionSheetSizing;
  v17 = v9;
  v18 = (void *)v10;
  v11 = swift_getOpaqueTypeMetadata2(255, &v15, &opaque type descriptor for <<opaque return type of View.presentationSizing<A>(_:)>>, 0);
  v15 = v4;
  v16 = (ValueMetadata *)&type metadata for Bool;
  v17 = WitnessTable;
  v18 = &protocol witness table for Bool;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v15, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
  v15 = v8;
  v16 = &type metadata for DescriptionSheetSizing;
  v17 = v9;
  v18 = (void *)v10;
  v13 = swift_getOpaqueTypeConformance2(&v15, &opaque type descriptor for <<opaque return type of View.presentationSizing<A>(_:)>>, 1);
  v15 = OpaqueTypeMetadata2;
  v16 = (ValueMetadata *)v11;
  v17 = OpaqueTypeConformance2;
  v18 = (void *)v13;
  return swift_getOpaqueTypeConformance2(&v15, &opaque type descriptor for <<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>, 1);
}

ValueMetadata *type metadata accessor for DescriptionSheetSizing()
{
  return &type metadata for DescriptionSheetSizing;
}

void sub_10031E3B4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[4];

  v6[0] = &unk_10039E1E8;
  v2 = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    v6[2] = &unk_10039E1E8;
    sub_1002A336C(319);
    if (v5 <= 0x3F)
    {
      v6[3] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 0, 4, v6, a1 + 32);
    }
  }
}

uint64_t *sub_10031E448(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t *v28;
  unsigned int v29;
  uint64_t v30;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = v7;
  v9 = *(_QWORD *)(v6 + 64) + 7;
  v10 = *(_QWORD *)(type metadata accessor for DismissAction(0) - 8);
  v11 = *(_DWORD *)(v10 + 80);
  v12 = v11 & 0xF8 | 7;
  if (*(_QWORD *)(v10 + 64) <= 8uLL)
    v13 = 8;
  else
    v13 = *(_QWORD *)(v10 + 64);
  v14 = (v11 | v7) & 0x100000;
  if ((v12 | v7) != 7
    || v14 != 0
    || v13
     + ((v12
       + ((v9 + ((v7 + 16) & ~(unint64_t)v7)) & 0xFFFFFFFFFFFFFFF8)
       + 16) & ~v12)
     + 1 > 0x18)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + (((v12 | v7) + 16) & ~(v12 | v7)));
LABEL_24:
    swift_retain(v17);
    return a1;
  }
  v18 = ~v12;
  v19 = a2[1];
  *a1 = *a2;
  a1[1] = v19;
  v20 = (char *)a2 + v8;
  v21 = ((unint64_t)a1 + v8 + 16) & ~v8;
  v22 = (unint64_t)(v20 + 16) & ~v8;
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  swift_bridgeObjectRetain();
  v23(v21, v22, v5);
  v24 = (v9 + v21) & 0xFFFFFFFFFFFFFFF8;
  v25 = (v9 + v22) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)v25 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)v24 = *(_OWORD *)v25;
  }
  else
  {
    v26 = *(_QWORD *)(v25 + 8);
    *(_QWORD *)v24 = *(_QWORD *)v25;
    *(_QWORD *)(v24 + 8) = v26;
    swift_retain(v26);
  }
  v27 = (_QWORD *)((v24 + v12 + 16) & v18);
  v28 = (uint64_t *)((v25 + v12 + 16) & v18);
  v29 = *((unsigned __int8 *)v28 + v13);
  if (v29 >= 2)
  {
    if (v13 <= 3)
      v30 = v13;
    else
      v30 = 4;
    __asm { BR              X12 }
  }
  if (v29 != 1)
  {
    v17 = *v28;
    *v27 = *v28;
    *((_BYTE *)v27 + v13) = 0;
    goto LABEL_24;
  }
  (*(void (**)(_QWORD *))(v10 + 16))(v27);
  *((_BYTE *)v27 + v13) = 1;
  return a1;
}

double sub_10031E664(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  unsigned int v11;
  uint64_t v12;
  double result;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v5 = (a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  (*(void (**)(unint64_t))(v4 + 8))(v5);
  v6 = (_QWORD *)((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (*v6 >= 0xFFFFFFFFuLL)
    swift_release(v6[1]);
  v7 = *(_QWORD *)(type metadata accessor for DismissAction(0) - 8);
  v8 = *(_DWORD *)(v7 + 80) & 0xF8 | 7;
  v9 = (_QWORD *)(((unint64_t)v6 + v8 + 16) & ~v8);
  v10 = *(_QWORD *)(v7 + 64);
  if (v10 <= 8)
    v10 = 8;
  v11 = *((unsigned __int8 *)v9 + v10);
  if (v11 >= 2)
  {
    if (v10 <= 3)
      v12 = v10;
    else
      v12 = 4;
    __asm { BR              X14 }
  }
  if (v11 == 1)
    (*(void (**)(void))(v7 + 8))();
  else
    *(_QWORD *)&result = swift_release(*v9).n128_u64[0];
  return result;
}

_QWORD *sub_10031E7A8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  char v22;
  uint64_t v23;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)a1 + v7 + 16) & ~v7;
  v9 = ((unint64_t)a2 + v7 + 16) & ~v7;
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  swift_bridgeObjectRetain();
  v10(v8, v9, v5);
  v11 = *(_QWORD *)(v6 + 64) + 7;
  v12 = (v11 + v8) & 0xFFFFFFFFFFFFFFF8;
  v13 = (v11 + v9) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)v13 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)v12 = *(_OWORD *)v13;
  }
  else
  {
    v14 = *(_QWORD *)(v13 + 8);
    *(_QWORD *)v12 = *(_QWORD *)v13;
    *(_QWORD *)(v12 + 8) = v14;
    swift_retain(v14);
  }
  v15 = *(_QWORD *)(type metadata accessor for DismissAction(0) - 8);
  v16 = *(_DWORD *)(v15 + 80) & 0xF8 | 7;
  v17 = (_QWORD *)((v12 + v16 + 16) & ~v16);
  v18 = (uint64_t *)((v13 + v16 + 16) & ~v16);
  if (*(_QWORD *)(v15 + 64) <= 8uLL)
    v19 = 8;
  else
    v19 = *(_QWORD *)(v15 + 64);
  v20 = *((unsigned __int8 *)v18 + v19);
  if (v20 >= 2)
  {
    if (v19 <= 3)
      v21 = v19;
    else
      v21 = 4;
    __asm { BR              X13 }
  }
  if (v20 == 1)
  {
    (*(void (**)(_QWORD *))(v15 + 16))(v17);
    v22 = 1;
  }
  else
  {
    v23 = *v18;
    *v17 = *v18;
    swift_retain(v23);
    v22 = 0;
  }
  *((_BYTE *)v17 + v19) = v22;
  return a1;
}

_QWORD *sub_10031E93C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  __n128 v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;

  *a1 = *a2;
  v6 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = ((unint64_t)a1 + v8 + 16) & ~v8;
  v10 = ((unint64_t)a2 + v8 + 16) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 24))(v9, v10);
  v11 = *(_QWORD *)(v7 + 64) + 7;
  v12 = (_QWORD *)((v11 + v9) & 0xFFFFFFFFFFFFFFF8);
  v13 = (unint64_t *)((v11 + v10) & 0xFFFFFFFFFFFFFFF8);
  v14 = *v13;
  if (*v12 < 0xFFFFFFFFuLL)
  {
    if (v14 >= 0xFFFFFFFF)
    {
      v17 = v13[1];
      *v12 = v14;
      v12[1] = v17;
      swift_retain(v17);
      goto LABEL_8;
    }
  }
  else
  {
    if (v14 >= 0xFFFFFFFF)
    {
      v15 = v13[1];
      v16 = v12[1];
      *v12 = v14;
      v12[1] = v15;
      swift_retain(v15);
      swift_release(v16);
      goto LABEL_8;
    }
    swift_release(v12[1]);
  }
  *(_OWORD *)v12 = *(_OWORD *)v13;
LABEL_8:
  v18 = type metadata accessor for DismissAction(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(_DWORD *)(v19 + 80) & 0xF8 | 7;
  v21 = (char *)v13 + v20;
  v22 = (uint64_t *)(((unint64_t)v12 + v20 + 16) & ~v20);
  v23 = (uint64_t *)((unint64_t)(v21 + 16) & ~v20);
  if (v22 != v23)
  {
    v24 = v18;
    if (*(_QWORD *)(v19 + 64) <= 8uLL)
      v25 = 8;
    else
      v25 = *(_QWORD *)(v19 + 64);
    v26 = *((unsigned __int8 *)v22 + v25);
    if (v26 >= 2)
    {
      if (v25 <= 3)
        v27 = v25;
      else
        v27 = 4;
      __asm { BR              X12 }
    }
    if (v26 == 1)
      (*(void (**)(uint64_t *, uint64_t))(v19 + 8))(v22, v18);
    else
      v28 = swift_release(*v22);
    v29 = *((unsigned __int8 *)v23 + v25);
    if (v29 >= 2)
    {
      if (v25 <= 3)
        v30 = v25;
      else
        v30 = 4;
      __asm { BR              X12 }
    }
    if (v29 == 1)
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t, __n128))(v19 + 16))(v22, v23, v24, v28);
      *((_BYTE *)v22 + v25) = 1;
    }
    else
    {
      v31 = *v23;
      *v22 = *v23;
      *((_BYTE *)v22 + v25) = 0;
      swift_retain(v31);
    }
  }
  return a1;
}

_OWORD *sub_10031EBCC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  char v19;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = ((unint64_t)a1 + v5 + 16) & ~v5;
  v7 = ((unint64_t)a2 + v5 + 16) & ~v5;
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v6, v7);
  v8 = *(_QWORD *)(v4 + 64) + 7;
  v9 = (v8 + v6) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v8 + v7) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)v10 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)v9 = *(_OWORD *)v10;
  }
  else
  {
    v11 = *(_QWORD *)(v10 + 8);
    *(_QWORD *)v9 = *(_QWORD *)v10;
    *(_QWORD *)(v9 + 8) = v11;
  }
  v12 = *(_QWORD *)(type metadata accessor for DismissAction(0) - 8);
  v13 = *(_DWORD *)(v12 + 80) & 0xF8 | 7;
  v14 = (_QWORD *)((v9 + v13 + 16) & ~v13);
  v15 = (_QWORD *)((v10 + v13 + 16) & ~v13);
  if (*(_QWORD *)(v12 + 64) <= 8uLL)
    v16 = 8;
  else
    v16 = *(_QWORD *)(v12 + 64);
  v17 = *((unsigned __int8 *)v15 + v16);
  if (v17 >= 2)
  {
    if (v16 <= 3)
      v18 = v16;
    else
      v18 = 4;
    __asm { BR              X13 }
  }
  if (v17 == 1)
  {
    (*(void (**)(_QWORD *))(v12 + 32))(v14);
    v19 = 1;
  }
  else
  {
    v19 = 0;
    *v14 = *v15;
  }
  *((_BYTE *)v14 + v16) = v19;
  return a1;
}

_QWORD *sub_10031ED48(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  __n128 v28;
  unsigned int v29;
  uint64_t v30;
  char v31;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = ((unint64_t)a1 + v9 + 16) & ~v9;
  v11 = ((unint64_t)a2 + v9 + 16) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v10, v11);
  v12 = *(_QWORD *)(v8 + 64) + 7;
  v13 = (_QWORD *)((v12 + v10) & 0xFFFFFFFFFFFFFFF8);
  v14 = (unint64_t *)((v12 + v11) & 0xFFFFFFFFFFFFFFF8);
  v15 = *v14;
  if (*v13 < 0xFFFFFFFFuLL)
  {
    if (v15 >= 0xFFFFFFFF)
    {
      v18 = v14[1];
      *v13 = v15;
      v13[1] = v18;
      goto LABEL_8;
    }
  }
  else
  {
    if (v15 >= 0xFFFFFFFF)
    {
      v16 = v14[1];
      v17 = v13[1];
      *v13 = v15;
      v13[1] = v16;
      swift_release(v17);
      goto LABEL_8;
    }
    swift_release(v13[1]);
  }
  *(_OWORD *)v13 = *(_OWORD *)v14;
LABEL_8:
  v19 = type metadata accessor for DismissAction(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(_DWORD *)(v20 + 80) & 0xF8 | 7;
  v22 = (_QWORD *)(((unint64_t)v13 + v21 + 16) & ~v21);
  v23 = (_QWORD *)(((unint64_t)v14 + v21 + 16) & ~v21);
  if (v22 != v23)
  {
    v24 = v19;
    if (*(_QWORD *)(v20 + 64) <= 8uLL)
      v25 = 8;
    else
      v25 = *(_QWORD *)(v20 + 64);
    v26 = *((unsigned __int8 *)v22 + v25);
    if (v26 >= 2)
    {
      if (v25 <= 3)
        v27 = v25;
      else
        v27 = 4;
      __asm { BR              X12 }
    }
    if (v26 == 1)
      (*(void (**)(_QWORD *, uint64_t))(v20 + 8))(v22, v19);
    else
      v28 = swift_release(*v22);
    v29 = *((unsigned __int8 *)v23 + v25);
    if (v29 >= 2)
    {
      if (v25 <= 3)
        v30 = v25;
      else
        v30 = 4;
      __asm { BR              X12 }
    }
    if (v29 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t, __n128))(v20 + 32))(v22, v23, v24, v28);
      v31 = 1;
    }
    else
    {
      v31 = 0;
      *v22 = *v23;
    }
    *((_BYTE *)v22 + v25) = v31;
  }
  return a1;
}

uint64_t sub_10031EFB8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v15;
  unsigned int v17;
  int v18;
  unint64_t v19;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  if (v7 <= 0x7FFFFFFE)
    v8 = 2147483646;
  else
    v8 = *(_DWORD *)(v6 + 84);
  v9 = *(_QWORD *)(type metadata accessor for DismissAction(0) - 8);
  v10 = 8;
  if (*(_QWORD *)(v9 + 64) > 8uLL)
    v10 = *(_QWORD *)(v9 + 64);
  if (!a2)
    return 0;
  v11 = *(unsigned __int8 *)(v6 + 80);
  if (a2 <= v8)
    goto LABEL_24;
  v12 = *(_DWORD *)(v9 + 80) & 0xF8 | 7;
  v13 = v10 + ((v12 + ((*(_QWORD *)(v6 + 64) + ((v11 + 16) & ~v11) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v12) + 1;
  v14 = 8 * v13;
  if (v13 <= 3)
  {
    v17 = ((a2 - v8 + ~(-1 << v14)) >> v14) + 1;
    if (HIWORD(v17))
    {
      v15 = *(_DWORD *)(a1 + v13);
      if (!v15)
        goto LABEL_24;
      goto LABEL_17;
    }
    if (v17 > 0xFF)
    {
      v15 = *(unsigned __int16 *)(a1 + v13);
      if (!*(_WORD *)(a1 + v13))
        goto LABEL_24;
      goto LABEL_17;
    }
    if (v17 < 2)
    {
LABEL_24:
      if (v7 > 0x7FFFFFFE)
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))((a1 + v11 + 16) & ~v11, v7, v5);
      v19 = *(_QWORD *)(a1 + 8);
      if (v19 >= 0xFFFFFFFF)
        LODWORD(v19) = -1;
      if ((v19 + 1) >= 2)
        return v19;
      else
        return 0;
    }
  }
  v15 = *(unsigned __int8 *)(a1 + v13);
  if (!*(_BYTE *)(a1 + v13))
    goto LABEL_24;
LABEL_17:
  v18 = (v15 - 1) << v14;
  if (v13 > 3)
    v18 = 0;
  if ((_DWORD)v13)
  {
    if (v13 > 3)
      LODWORD(v13) = 4;
    __asm { BR              X11 }
  }
  return v8 + v18 + 1;
}

void sub_10031F190(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  unsigned int v13;
  int v14;
  unsigned int v15;
  int v16;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v7 + 84) <= 0x7FFFFFFEu)
    v8 = 2147483646;
  else
    v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(type metadata accessor for DismissAction(0) - 8);
  v10 = 8;
  if (*(_QWORD *)(v9 + 64) > 8uLL)
    v10 = *(_QWORD *)(v9 + 64);
  v11 = *(_DWORD *)(v9 + 80) & 0xF8 | 7;
  v12 = v10
      + ((v11
        + ((*(_QWORD *)(v7 + 64)
          + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))
          + 7) & 0xFFFFFFFFFFFFFFF8)
        + 16) & ~v11)
      + 1;
  if (a3 <= v8)
  {
    v13 = 0;
  }
  else if (v12 <= 3)
  {
    v15 = ((a3 - v8 + ~(-1 << (8 * v12))) >> (8 * v12)) + 1;
    if (HIWORD(v15))
    {
      v13 = &dword_100000004;
    }
    else if (v15 >= 0x100)
    {
      v13 = 2;
    }
    else
    {
      v13 = v15 > 1;
    }
  }
  else
  {
    v13 = &_mh_execute_header.magic + 1;
  }
  if (v8 < a2)
  {
    v14 = ~v8 + a2;
    if (v12 < 4)
    {
      if ((_DWORD)v12)
      {
        v16 = v14 & ~(-1 << (8 * v12));
        bzero(a1, v12);
        if ((_DWORD)v12 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if ((_DWORD)v12 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v12);
      *(_DWORD *)a1 = v14;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X12 }
}

uint64_t sub_10031F3FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t OpaqueTypeMetadata2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  void (*v28)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE v34[16];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t WitnessTable;
  void *v45;
  uint64_t v46;
  void *v47;

  v33 = a2;
  v31 = type metadata accessor for NavigationPath(255);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = type metadata accessor for ModifiedContent(255, v3, &type metadata for _PaddingLayout);
  v5 = type metadata accessor for ModifiedContent(255, v4, &type metadata for _PaddingLayout);
  v6 = *(_QWORD *)(a1 + 24);
  v46 = v6;
  v47 = &protocol witness table for _PaddingLayout;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v4);
  v45 = &protocol witness table for _PaddingLayout;
  v7 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v5);
  v8 = type metadata accessor for ScrollView(255, v5, v7);
  v9 = swift_getWitnessTable(&protocol conformance descriptor for ScrollView<A>, v8);
  v40 = v8;
  v41 = v9;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v40, &opaque type descriptor for <<opaque return type of View.scrollBounceBehavior(_:axes:)>>, 0);
  v40 = v8;
  v41 = v9;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v40, &opaque type descriptor for <<opaque return type of View.scrollBounceBehavior(_:axes:)>>, 1);
  v40 = OpaqueTypeMetadata2;
  v41 = OpaqueTypeConformance2;
  v12 = swift_getOpaqueTypeMetadata2(255, &v40, &opaque type descriptor for <<opaque return type of View.navigationBarTitleDisplayMode(_:)>>, 0);
  v14 = type metadata accessor for Sheet.Toolbar(255, v3, v6, v13);
  v15 = swift_getWitnessTable(&unk_10039E3A0, v14);
  v40 = v14;
  v41 = v15;
  v16 = swift_getOpaqueTypeMetadata2(255, &v40, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 0);
  v40 = OpaqueTypeMetadata2;
  v41 = OpaqueTypeConformance2;
  v17 = swift_getOpaqueTypeConformance2(&v40, &opaque type descriptor for <<opaque return type of View.navigationBarTitleDisplayMode(_:)>>, 1);
  v40 = v14;
  v41 = v15;
  v18 = swift_getOpaqueTypeConformance2(&v40, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
  v40 = v12;
  v41 = v16;
  v42 = v17;
  v43 = v18;
  v19 = swift_getOpaqueTypeMetadata2(255, &v40, &opaque type descriptor for <<opaque return type of View.toolbar<A>(content:)>>, 0);
  v20 = type metadata accessor for ModifiedContent(255, v19, &type metadata for BottomGradientBlurMask);
  v40 = v12;
  v41 = v16;
  v42 = v17;
  v43 = v18;
  v38 = swift_getOpaqueTypeConformance2(&v40, &opaque type descriptor for <<opaque return type of View.toolbar<A>(content:)>>, 1);
  v39 = sub_100320B9C();
  v21 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v20);
  v22 = type metadata accessor for NavigationStack(0, v31, v20, v21);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin();
  v25 = (char *)&v30 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v27 = (char *)&v30 - v26;
  v35 = v3;
  v36 = v6;
  v37 = v32;
  NavigationStack.init<>(root:)(sub_100320BE0, v34, v20, v21);
  swift_getWitnessTable(&protocol conformance descriptor for NavigationStack<A, B>, v22);
  sub_10003B690((uint64_t)v25, v22, (uint64_t)v27);
  v28 = *(void (**)(char *, uint64_t))(v23 + 8);
  v28(v25, v22);
  sub_100035E98((uint64_t)v27, v22, v33);
  return ((uint64_t (*)(char *, uint64_t))v28)(v27, v22);
}

uint64_t sub_10031F71C@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v16;
  uint64_t OpaqueTypeConformance2;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int v39;
  uint64_t v40;
  int v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t);
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  char v87[16];
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t WitnessTable;
  void *v98;
  uint64_t v99;
  void *v100;

  v85 = a1;
  v83 = a4;
  v6 = type metadata accessor for NavigationBarItem.TitleDisplayMode(0);
  v81 = *(_QWORD *)(v6 - 8);
  v82 = v6;
  __chkstk_darwin();
  v80 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = type metadata accessor for ScrollBounceBehavior(0);
  v78 = *(_QWORD *)(v79 - 8);
  __chkstk_darwin();
  v59 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = (char *)a2;
  v9 = type metadata accessor for ModifiedContent(255, a2, &type metadata for _PaddingLayout);
  v10 = type metadata accessor for ModifiedContent(255, v9, &type metadata for _PaddingLayout);
  v99 = a3;
  v100 = &protocol witness table for _PaddingLayout;
  v86 = a3;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v9);
  v98 = &protocol witness table for _PaddingLayout;
  v63 = v10;
  v62 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v10);
  v11 = type metadata accessor for ScrollView(0, v10, v62);
  v77 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin();
  v13 = (char *)&v59 - v12;
  v14 = swift_getWitnessTable(&protocol conformance descriptor for ScrollView<A>, v11);
  v93 = v11;
  v94 = v14;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v93, &opaque type descriptor for <<opaque return type of View.scrollBounceBehavior(_:axes:)>>, 0);
  v76 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin();
  v74 = (char *)&v59 - v16;
  v93 = v11;
  v94 = v14;
  v71 = v14;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v93, &opaque type descriptor for <<opaque return type of View.scrollBounceBehavior(_:axes:)>>, 1);
  v93 = OpaqueTypeMetadata2;
  v94 = OpaqueTypeConformance2;
  v18 = swift_getOpaqueTypeMetadata2(0, &v93, &opaque type descriptor for <<opaque return type of View.navigationBarTitleDisplayMode(_:)>>, 0);
  v75 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin();
  v72 = (char *)&v59 - v19;
  v21 = type metadata accessor for Sheet.Toolbar(255, a2, a3, v20);
  v22 = swift_getWitnessTable(&unk_10039E3A0, v21);
  v93 = v21;
  v94 = v22;
  v23 = swift_getOpaqueTypeMetadata2(255, &v93, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 0);
  v65 = OpaqueTypeMetadata2;
  v93 = OpaqueTypeMetadata2;
  v94 = OpaqueTypeConformance2;
  v70 = OpaqueTypeConformance2;
  v24 = swift_getOpaqueTypeConformance2(&v93, &opaque type descriptor for <<opaque return type of View.navigationBarTitleDisplayMode(_:)>>, 1);
  v93 = v21;
  v94 = v22;
  v25 = v59;
  v26 = swift_getOpaqueTypeConformance2(&v93, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
  v73 = v18;
  v93 = v18;
  v94 = v23;
  v60 = v23;
  v66 = v24;
  v95 = v24;
  v96 = v26;
  v61 = v26;
  v64 = *(_QWORD *)(swift_getOpaqueTypeMetadata2(0, &v93, &opaque type descriptor for <<opaque return type of View.toolbar<A>(content:)>>, 0)- 8);
  __chkstk_darwin();
  v28 = (char *)&v59 - v27;
  v68 = v29;
  v30 = type metadata accessor for ModifiedContent(0, v29, &type metadata for BottomGradientBlurMask);
  v69 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin();
  v32 = (char *)&v59 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __chkstk_darwin();
  v67 = (uint64_t)&v59 - v34;
  v88 = v84;
  v89 = v86;
  v90 = v85;
  v35 = static Axis.Set.vertical.getter(v33);
  v36 = v13;
  v37 = ScrollView.init(_:showsIndicators:content:)(v35, 1, sub_100320BEC, v87, v63, v62);
  v38 = static ScrollBounceBehavior.basedOnSize.getter(v37);
  v39 = static Axis.Set.vertical.getter(v38);
  v40 = Axis.Set.init(rawValue:)(0);
  v41 = Axis.Set.init(rawValue:)(v40);
  if (Axis.Set.init(rawValue:)(v41 & v39) != v39)
    v40 = Axis.Set.init(rawValue:)(v40 | v39);
  v42 = v74;
  View.scrollBounceBehavior(_:axes:)(v25, v40, v11, v71);
  (*(void (**)(char *, uint64_t))(v78 + 8))(v25, v79);
  (*(void (**)(char *, uint64_t))(v77 + 8))(v36, v11);
  v44 = v81;
  v43 = v82;
  v45 = v80;
  (*(void (**)(char *, _QWORD, uint64_t))(v81 + 104))(v80, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v82);
  v46 = v72;
  v47 = v65;
  View.navigationBarTitleDisplayMode(_:)(v45, v65, v70);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v43);
  (*(void (**)(char *, uint64_t))(v76 + 8))(v42, v47);
  __chkstk_darwin();
  v48 = (char *)v86;
  *(&v59 - 4) = v84;
  *(&v59 - 3) = v48;
  *(&v59 - 2) = v85;
  v49 = swift_checkMetadataState(0, v60);
  v50 = v73;
  v51 = v66;
  v52 = v61;
  View.toolbar<A>(content:)(sub_100320BF8, &v59 - 6, v73, v49, v66, v61);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v46, v50);
  v93 = v50;
  v94 = v49;
  v95 = v51;
  v96 = v52;
  v53 = swift_getOpaqueTypeConformance2(&v93, &opaque type descriptor for <<opaque return type of View.toolbar<A>(content:)>>, 1);
  v54 = v68;
  sub_10031C284(0x402E000000000000, 0, v68, v53, 64.0);
  (*(void (**)(char *, uint64_t))(v64 + 8))(v28, v54);
  v55 = sub_100320B9C();
  v91 = v53;
  v92 = v55;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v30);
  v56 = v67;
  sub_10003B690((uint64_t)v32, v30, v67);
  v57 = *(void (**)(char *, uint64_t))(v69 + 8);
  v57(v32, v30);
  sub_100035E98(v56, v30, v83);
  return ((uint64_t (*)(uint64_t, uint64_t))v57)(v56, v30);
}

uint64_t sub_10031FDF8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t WitnessTable;
  void (*v20)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;

  v23 = a3;
  v5 = type metadata accessor for ModifiedContent(0, a1, &type metadata for _PaddingLayout);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v22 - v7;
  v9 = type metadata accessor for ModifiedContent(0, v5, &type metadata for _PaddingLayout);
  v22 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin();
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v13 = (char *)&v22 - v12;
  v15 = type metadata accessor for Sheet(0, a1, a2, v14);
  v16 = static Edge.Set.horizontal.getter(v15);
  v17 = View.padding(_:_:)(v16, 0x4034000000000000, 0, a1, a2);
  v18 = static Edge.Set.vertical.getter(v17);
  v26 = a2;
  v27 = &protocol witness table for _PaddingLayout;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v5);
  View.padding(_:_:)(v18, 0x4038000000000000, 0, v5, WitnessTable);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v24 = WitnessTable;
  v25 = &protocol witness table for _PaddingLayout;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v9);
  sub_10003B690((uint64_t)v11, v9, (uint64_t)v13);
  v20 = *(void (**)(char *, uint64_t))(v22 + 8);
  v20(v11, v9);
  sub_100035E98((uint64_t)v13, v9, v23);
  return ((uint64_t (*)(char *, uint64_t))v20)(v13, v9);
}

uint64_t sub_10031FFDC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)();
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t WitnessTable;
  uint64_t v33;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)();
  uint64_t v44;
  _QWORD v45[3];
  uint64_t v46;

  v40 = a4;
  v36 = type metadata accessor for DismissAction(0);
  v7 = *(_QWORD *)(v36 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin();
  v35 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v10 = (char *)&v35 - v9;
  v38 = a2;
  v39 = a3;
  v12 = type metadata accessor for Sheet(0, a2, a3, v11);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin();
  v16 = (char *)&v35 - v15;
  v17 = a1[1];
  v37 = *a1;
  v18 = (uint64_t *)((char *)a1 + *(int *)(v14 + 40));
  v20 = *v18;
  v19 = v18[1];
  if (*v18)
  {
    v21 = swift_allocObject(&unk_100463BC8, 32, 7);
    *(_QWORD *)(v21 + 16) = v20;
    *(_QWORD *)(v21 + 24) = v19;
    (*(void (**)(char *, uint64_t *, uint64_t))(v13 + 16))(v16, a1, v12);
    swift_bridgeObjectRetain();
    sub_10003A434(v20, v19);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
    v22 = sub_10000AD24;
  }
  else
  {
    (*(void (**)(char *, uint64_t *, uint64_t))(v13 + 16))(v16, a1, v12);
    v23 = v17;
    swift_bridgeObjectRetain();
    sub_10003A434(0, v19);
    sub_1002BDE04((uint64_t)v10);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
    v25 = v35;
    v24 = v36;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v35, v10, v36);
    v26 = *(unsigned __int8 *)(v7 + 80);
    v27 = (v26 + 16) & ~v26;
    v28 = swift_allocObject(&unk_100463B50, v27 + v8, v26 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v28 + v27, v25, v24);
    v17 = v23;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v24);
    v21 = swift_allocObject(&unk_100463B78, 32, 7);
    *(_QWORD *)(v21 + 16) = sub_100320C64;
    *(_QWORD *)(v21 + 24) = v28;
    v22 = sub_100009BB0;
  }
  v29 = swift_allocObject(&unk_100463BA0, 32, 7);
  *(_QWORD *)(v29 + 16) = v22;
  *(_QWORD *)(v29 + 24) = v21;
  v41 = v37;
  v42 = v17;
  v43 = sub_100009BB0;
  v44 = v29;
  v31 = type metadata accessor for Sheet.Toolbar(0, v38, v39, v30);
  WitnessTable = swift_getWitnessTable(&unk_10039E3A0, v31);
  (*(void (**)(_QWORD *, uint64_t *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v45, &v41, v31);
  swift_release(v29);
  swift_bridgeObjectRelease();
  v33 = v46;
  v41 = v45[0];
  v42 = v45[1];
  v43 = (uint64_t (*)())v45[2];
  v44 = v46;
  static ToolbarContentBuilder.buildBlock<A>(_:)(&v41, v31, WitnessTable);
  swift_release(v33);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1003202C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t WitnessTable;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45[16];
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52[16];
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v35 = a6;
  v43 = a4;
  v33 = a1;
  v42 = a7;
  v34 = a5;
  v40 = type metadata accessor for Sheet.Toolbar.CloseButton(255, a5, a6, a4);
  WitnessTable = swift_getWitnessTable(&unk_10039E4A8, v40);
  v11 = type metadata accessor for ToolbarItem(0, (char *)&type metadata for () + 8, v40, WitnessTable);
  v41 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin();
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v37 = (char *)&v33 - v14;
  v44 = type metadata accessor for ToolbarItemPlacement(0);
  v15 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin();
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v19 = (char *)&v33 - v18;
  v36 = sub_100005574(&qword_10049FAA8);
  v39 = *(_QWORD *)(v36 - 8);
  v20 = __chkstk_darwin();
  v22 = (char *)&v33 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  static ToolbarItemPlacement.principal.getter(v20);
  v53 = a5;
  v23 = v35;
  v54 = v35;
  v55 = a1;
  v56 = a2;
  v57 = a3;
  v24 = a2;
  v58 = v43;
  v25 = sub_100005574(&qword_10049FAB0);
  v26 = sub_1003212C0();
  v27 = ToolbarItem<>.init(placement:content:)(v19, sub_1003212B0, v52, v25, v26);
  static ToolbarItemPlacement.automatic.getter(v27);
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v17, v19, v44);
  v46 = v34;
  v47 = v23;
  v48 = v33;
  v49 = v24;
  v50 = a3;
  v51 = v43;
  ToolbarItem<>.init(placement:content:)(v17, sub_100321534, v45, v40, WitnessTable);
  swift_getWitnessTable(&protocol conformance descriptor for ToolbarItem<A, B>, v11);
  v28 = v41;
  v29 = (uint64_t)v37;
  (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v37, v13, v11);
  v30 = *(void (**)(char *, uint64_t))(v28 + 8);
  v30(v13, v11);
  sub_10002FFB8(qword_10049FB00, &qword_10049FAA8, (uint64_t)&protocol conformance descriptor for ToolbarItem<A, B>);
  v31 = v36;
  sub_1003208D0((uint64_t)v22, v29, v36, v11);
  v30((char *)v29, v11);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v19, v44);
  return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v22, v31);
}

uint64_t sub_100320600@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t KeyPath;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;

  v6 = type metadata accessor for AccessibilityTraits(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_10049FAC8);
  __chkstk_darwin();
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 56))(a3, 1, 1);
  v41 = a1;
  v42 = a2;
  v39 = v11;
  v40 = v10;
  v14 = sub_10024AF7C();
  swift_bridgeObjectRetain();
  v15 = Text.init<A>(_:)(&v41, &type metadata for String, v14);
  v17 = v16;
  v19 = v18;
  v21 = v20;
  KeyPath = swift_getKeyPath(&unk_10039E3E8);
  v23 = static Font.headline.getter();
  v38 = a3;
  v24 = v23;
  v25 = swift_getKeyPath(&unk_10039E418);
  v37 = v6;
  v26 = v25;
  v27 = swift_getKeyPath(&unk_10039E448);
  v41 = v15;
  v42 = v17;
  v43 = v19 & 1;
  v44 = v21;
  v45 = KeyPath;
  v46 = 1;
  v47 = 0;
  v48 = v26;
  v49 = v24;
  v50 = v27;
  v51 = 1;
  static AccessibilityTraits.isHeader.getter();
  v28 = sub_100005574(&qword_10049FAD8);
  v29 = sub_1003213A8();
  View.accessibilityAddTraits(_:)(v9, v28, v29);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v37);
  v30 = v45;
  v31 = v48;
  v32 = v49;
  v33 = v50;
  sub_10003B4D0(v41, v42, v43);
  swift_release(v33);
  swift_release(v31);
  swift_release(v30);
  swift_bridgeObjectRelease();
  swift_release(v32);
  v34 = v38;
  sub_10032155C((uint64_t)v13, v38);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v39 + 56))(v34, 0, 1, v40);
}

double sub_100320840@<D0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  double result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v9 = a1;
  v10 = a2;
  v6 = type metadata accessor for Sheet.Toolbar.CloseButton(0, a3, a4, a2);
  swift_getWitnessTable(&unk_10039E4A8, v6);
  sub_10003B690((uint64_t)&v9, v6, (uint64_t)&v11);
  v7 = v12;
  v9 = v11;
  v10 = v12;
  sub_100035E98((uint64_t)&v9, v6, a5);
  *(_QWORD *)&result = swift_release(v7).n128_u64[0];
  return result;
}

uint64_t sub_1003208D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t TupleTypeMetadata2;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v14;

  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, a3, a4, 0, 0);
  v9 = __chkstk_darwin(TupleTypeMetadata2);
  v11 = (char *)&v14 - v10;
  v12 = (char *)&v14 + *(int *)(v9 + 48) - v10;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))((char *)&v14 - v10, a1, a3);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(v12, a2, a4);
  return TupleToolbarContent.init(_:)(v11, TupleTypeMetadata2);
}

uint64_t sub_1003209A4(uint64_t a1, uint64_t a2)
{
  swift_retain(a2);
  return Button.init(action:label:)(a1, a2, sub_100320A00, 0, &type metadata for Text, &protocol witness table for Text);
}

uint64_t sub_100320A00@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;

  v2 = LocalizedStringKey.init(stringLiteral:)(1701736260, 0xE400000000000000);
  v3 = Text.init(_:tableName:bundle:comment:)(v2);
  v5 = v4;
  v7 = v6 & 1;
  v8 = Text.bold()(v3, v4);
  v10 = v9;
  v12 = v11;
  v14 = v13;
  sub_10003B4D0(v3, v5, v7);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a1 = v8;
  *(_QWORD *)(a1 + 8) = v10;
  *(_BYTE *)(a1 + 16) = v12 & 1;
  *(_QWORD *)(a1 + 24) = v14;
  return result;
}

uint64_t sub_100320AD0()
{
  uint64_t *v0;

  return sub_1003209A4(*v0, v0[1]);
}

uint64_t sub_100320AE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_1003202C8(*v2, v2[1], v2[2], v2[3], *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a2);
}

uint64_t sub_100320B00()
{
  return PresentationSizing.proposedSize(for:context:)();
}

uint64_t sub_100320B30()
{
  return 0x4080E00000000000;
}

uint64_t sub_100320B5C(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_1003E43D0, 1);
}

uint64_t type metadata accessor for Sheet.Toolbar(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100031DCC(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Sheet.Toolbar);
}

unint64_t sub_100320B9C()
{
  unint64_t result;

  result = qword_10049FA20[0];
  if (!qword_10049FA20[0])
  {
    result = swift_getWitnessTable(&unk_10039E0C8, &type metadata for BottomGradientBlurMask);
    atomic_store(result, qword_10049FA20);
  }
  return result;
}

uint64_t sub_100320BE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10031F71C(*(char **)(v1 + 32), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_100320BEC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10031FDF8(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_100320BF8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10031FFDC(*(uint64_t **)(v1 + 32), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_100320C04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for DismissAction(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_100320C64()
{
  type metadata accessor for DismissAction(0);
  DismissAction.callAsFunction()();
}

uint64_t sub_100320C9C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100320CC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;

  v2 = *(_QWORD *)(v0 + 40);
  v12 = *(_QWORD *)(v0 + 16);
  v1 = v12;
  v13 = *(_OWORD *)(v0 + 24);
  v11 = v13;
  v14 = v2;
  v3 = (int *)type metadata accessor for ExpandableTextView(0, (uint64_t)&v12);
  v4 = *((_QWORD *)v3 - 1);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 + 48) & ~v5;
  v7 = v6 + *(_QWORD *)(v4 + 64);
  v8 = v5 | 7;
  v9 = v0 + v6;
  swift_release(*(_QWORD *)(v0 + v6 + 8));
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v9 + v3[14], v1);
  (*(void (**)(uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v9 + v3[15]);
  swift_release(*(_QWORD *)(v9 + v3[16]));
  return swift_deallocObject(v0, v7, v8);
}

uint64_t sub_100320DA0()
{
  return sub_100320DA8(0);
}

uint64_t sub_100320DA8(char a1)
{
  uint64_t v1;
  __int128 v3;
  uint64_t v4;
  char *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD v10[2];
  char v11;

  v3 = *(_OWORD *)(v1 + 32);
  v10[0] = *(_OWORD *)(v1 + 16);
  v10[1] = v3;
  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ExpandableTextView(0, (uint64_t)v10) - 8) + 80);
  v5 = (char *)(v1 + ((v4 + 48) & ~v4));
  v6 = *v5;
  v7 = *((_QWORD *)v5 + 1);
  LOBYTE(v10[0]) = v6;
  *((_QWORD *)&v10[0] + 1) = v7;
  v11 = a1;
  v8 = sub_100005574(&qword_10049C5C8);
  return State.wrappedValue.setter(&v11, v8);
}

uint64_t sub_100320E34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MoreLabel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double sub_100320E78(uint64_t a1)
{
  double result;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 24)).n128_u64[0];
  return result;
}

uint64_t sub_100320EA0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  swift_retain(v3);
  return a1;
}

_QWORD *sub_100320EE8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  v6 = a2[2];
  v5 = a2[3];
  v7 = a1[3];
  a1[2] = v6;
  a1[3] = v5;
  swift_retain(v5);
  swift_release(v7);
  return a1;
}

_QWORD *sub_100320F4C(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease(a1[1]);
  v4 = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
  v5 = a1[3];
  a1[3] = v4;
  swift_release(v5);
  return a1;
}

uint64_t sub_100320F98(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_100320FE0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_100321020(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t OpaqueTypeMetadata2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t WitnessTable;
  void *v28;
  uint64_t v29;
  void *v30;

  v1 = *a1;
  v2 = a1[1];
  v3 = type metadata accessor for NavigationPath(255);
  v4 = type metadata accessor for ModifiedContent(255, v1, &type metadata for _PaddingLayout);
  v5 = type metadata accessor for ModifiedContent(255, v4, &type metadata for _PaddingLayout);
  v29 = v2;
  v30 = &protocol witness table for _PaddingLayout;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v4);
  v28 = &protocol witness table for _PaddingLayout;
  v6 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v5);
  v7 = type metadata accessor for ScrollView(255, v5, v6);
  v8 = swift_getWitnessTable(&protocol conformance descriptor for ScrollView<A>, v7);
  v23 = v7;
  v24 = v8;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v23, &opaque type descriptor for <<opaque return type of View.scrollBounceBehavior(_:axes:)>>, 0);
  v23 = v7;
  v24 = v8;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v23, &opaque type descriptor for <<opaque return type of View.scrollBounceBehavior(_:axes:)>>, 1);
  v23 = OpaqueTypeMetadata2;
  v24 = OpaqueTypeConformance2;
  v11 = swift_getOpaqueTypeMetadata2(255, &v23, &opaque type descriptor for <<opaque return type of View.navigationBarTitleDisplayMode(_:)>>, 0);
  v13 = type metadata accessor for Sheet.Toolbar(255, v1, v2, v12);
  v14 = swift_getWitnessTable(&unk_10039E3A0, v13);
  v23 = v13;
  v24 = v14;
  v15 = swift_getOpaqueTypeMetadata2(255, &v23, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 0);
  v23 = OpaqueTypeMetadata2;
  v24 = OpaqueTypeConformance2;
  v16 = swift_getOpaqueTypeConformance2(&v23, &opaque type descriptor for <<opaque return type of View.navigationBarTitleDisplayMode(_:)>>, 1);
  v23 = v13;
  v24 = v14;
  v17 = swift_getOpaqueTypeConformance2(&v23, &opaque type descriptor for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>, 1);
  v23 = v11;
  v24 = v15;
  v25 = v16;
  v26 = v17;
  v18 = swift_getOpaqueTypeMetadata2(255, &v23, &opaque type descriptor for <<opaque return type of View.toolbar<A>(content:)>>, 0);
  v19 = type metadata accessor for ModifiedContent(255, v18, &type metadata for BottomGradientBlurMask);
  v23 = v11;
  v24 = v15;
  v25 = v16;
  v26 = v17;
  swift_getOpaqueTypeConformance2(&v23, &opaque type descriptor for <<opaque return type of View.toolbar<A>(content:)>>, 1);
  sub_100320B9C();
  v20 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v19);
  v21 = type metadata accessor for NavigationStack(255, v3, v19, v20);
  return swift_getWitnessTable(&protocol conformance descriptor for NavigationStack<A, B>, v21);
}

uint64_t sub_100321270(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_1003E4440, 1);
}

uint64_t type metadata accessor for Sheet.Toolbar.CloseButton(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100031DCC(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Sheet.Toolbar.CloseButton);
}

uint64_t sub_1003212B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100320600(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), a1);
}

unint64_t sub_1003212C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049FAB8;
  if (!qword_10049FAB8)
  {
    v1 = sub_100005600(&qword_10049FAB0);
    sub_100321324();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_10049FAB8);
  }
  return result;
}

unint64_t sub_100321324()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049FAC0;
  if (!qword_10049FAC0)
  {
    v1 = sub_100005600(&qword_10049FAC8);
    sub_1003213A8();
    sub_100006924(&qword_10049EDC0, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049FAC0);
  }
  return result;
}

unint64_t sub_1003213A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049FAD0;
  if (!qword_10049FAD0)
  {
    v1 = sub_100005600(&qword_10049FAD8);
    sub_10032142C();
    sub_10002FFB8(&qword_10049C870, &qword_10049C878, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049FAD0);
  }
  return result;
}

unint64_t sub_10032142C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049FAE0;
  if (!qword_10049FAE0)
  {
    v1 = sub_100005600(&qword_10049FAE8);
    sub_1003214B0();
    sub_10002FFB8((unint64_t *)&unk_10049E600, &qword_10049B8D8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049FAE0);
  }
  return result;
}

unint64_t sub_1003214B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049FAF0;
  if (!qword_10049FAF0)
  {
    v1 = sub_100005600(&qword_10049FAF8);
    sub_10002FFB8((unint64_t *)&qword_10049B870, &qword_10049B878, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049FAF0);
  }
  return result;
}

double sub_100321534@<D0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_100320840(v1[6], v1[7], v1[2], v1[3], a1);
}

uint64_t sub_10032155C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005574(&qword_10049FAC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003215A4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t WitnessTable;
  uint64_t v7;
  uint64_t TupleTypeMetadata2;
  uint64_t v9;

  v1 = *a1;
  v2 = a1[1];
  v3 = sub_100005600(&qword_10049FAA8);
  v5 = type metadata accessor for Sheet.Toolbar.CloseButton(255, v1, v2, v4);
  WitnessTable = swift_getWitnessTable(&unk_10039E4A8, v5);
  v7 = type metadata accessor for ToolbarItem(255, (char *)&type metadata for () + 8, v5, WitnessTable);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v3, v7, 0, 0);
  v9 = type metadata accessor for TupleToolbarContent(255, TupleTypeMetadata2);
  return swift_getWitnessTable(&protocol conformance descriptor for TupleToolbarContent<A>, v9);
}

uint64_t sub_100321648(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_1003E4474, 1);
}

uint64_t sub_10032167C()
{
  return sub_10002FFB8(&qword_10049F870, (uint64_t *)&unk_10049DB50, (uint64_t)&protocol conformance descriptor for Button<A>);
}

uint64_t HeightLimitedButtonTextView.init(action:body:trailingView:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(void)@<X2>, uint64_t (*a4)(void)@<X4>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>, uint64_t a8, uint64_t a9)
{
  uint64_t v15;
  uint64_t result;
  _QWORD *v17;
  _QWORD v18[4];

  a3();
  v18[0] = a5;
  v18[1] = a6;
  v18[2] = a8;
  v18[3] = a9;
  v15 = type metadata accessor for HeightLimitedButtonTextView(0, (uint64_t)v18);
  result = a4();
  v17 = (_QWORD *)(a7 + *(int *)(v15 + 56));
  *v17 = a1;
  v17[1] = a2;
  return result;
}

uint64_t type metadata accessor for HeightLimitedButtonTextView(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for HeightLimitedButtonTextView);
}

uint64_t HeightLimitedButtonTextView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t TupleTypeMetadata2;
  uint64_t v9;
  uint64_t WitnessTable;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56[16];
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  _QWORD v66[7];

  v55 = a2;
  v2 = *(_QWORD *)(a1 + 16);
  v4 = sub_100005600(&qword_10049B878);
  v5 = type metadata accessor for ModifiedContent(255, v2, v4);
  v6 = type metadata accessor for ModifiedContent(255, v5, &type metadata for _FixedSizeLayout);
  v53 = *(_QWORD *)(a1 + 24);
  v7 = a1;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v2, v53, 0, 0);
  v9 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v9);
  v11 = type metadata accessor for ZStack(255, v9, WitnessTable);
  v12 = type metadata accessor for ModifiedContent(255, v11, &type metadata for _CompositingGroupEffect);
  v66[4] = swift_getWitnessTable(&protocol conformance descriptor for ZStack<A>, v11);
  v66[5] = &protocol witness table for _CompositingGroupEffect;
  v13 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v12);
  v66[0] = type metadata accessor for Button(255, v12, v13);
  v66[1] = type metadata accessor for PlainButtonStyle(255);
  v66[2] = swift_getWitnessTable(&protocol conformance descriptor for Button<A>, v66[0]);
  v66[3] = sub_100321B9C();
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, v66, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 0);
  v15 = swift_getTupleTypeMetadata2(255, v6, OpaqueTypeMetadata2, 0, 0);
  v49 = type metadata accessor for TupleView(255, v15);
  v48 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v49);
  v16 = type metadata accessor for ViewThatFits(0, v49, v48);
  v52 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin();
  v45 = (char *)&v44 - v17;
  v18 = type metadata accessor for ModifiedContent(0, v2, &type metadata for _HiddenModifier);
  v51 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin();
  v20 = (char *)&v44 - v19;
  v46 = swift_getWitnessTable(&protocol conformance descriptor for ViewThatFits<A>, v16);
  v47 = type metadata accessor for _OverlayModifier(255, v16, v46);
  v21 = type metadata accessor for ModifiedContent(0, v18, v47);
  v50 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin();
  v23 = (char *)&v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v25 = (char *)&v44 - v24;
  v26 = v7;
  v27 = *(_QWORD *)(v7 + 32);
  v28 = v2;
  v29 = v2;
  v30 = v54;
  v31 = View.hidden()(v29, v27);
  v32 = static Axis.Set.vertical.getter(v31);
  v57 = v28;
  v58 = v53;
  v33 = *(_QWORD *)(v26 + 40);
  v59 = v27;
  v60 = v33;
  v61 = v30;
  v34 = v45;
  v35 = ViewThatFits.init(in:content:)(v32, sub_1003221D4, v56, v49, v48);
  v36 = static Alignment.center.getter(v35);
  v38 = v37;
  v39 = sub_1003225A4();
  v64 = v27;
  v65 = v39;
  v40 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v18);
  View.overlay<A>(_:alignment:)(v34, v36, v38, v18, v16, v40, v46);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v34, v16);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v20, v18);
  v41 = swift_getWitnessTable(&protocol conformance descriptor for _OverlayModifier<A>, v47);
  v62 = v40;
  v63 = v41;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v21);
  sub_10003B690((uint64_t)v23, v21, (uint64_t)v25);
  v42 = *(void (**)(char *, uint64_t))(v50 + 8);
  v42(v23, v21);
  sub_100035E98((uint64_t)v25, v21, v55);
  return ((uint64_t (*)(char *, uint64_t))v42)(v25, v21);
}

unint64_t sub_100321B9C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049D598;
  if (!qword_10049D598)
  {
    v1 = type metadata accessor for PlainButtonStyle(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for PlainButtonStyle, v1);
    atomic_store(result, (unint64_t *)&qword_10049D598);
  }
  return result;
}

uint64_t sub_100321BE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t TupleTypeMetadata2;
  uint64_t v13;
  uint64_t WitnessTable;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t OpaqueTypeConformance2;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t);
  char *v54;
  uint64_t (*v55)(char *, uint64_t);
  uint64_t v57;
  char *v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t);
  char *v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79[16];
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD v87[6];
  char *v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  void *v93;

  v74 = a5;
  v73 = a3;
  v57 = a1;
  v77 = a6;
  v9 = type metadata accessor for PlainButtonStyle(0);
  v76 = *(_QWORD *)(v9 - 8);
  v10 = v9;
  v64 = v9;
  __chkstk_darwin();
  v75 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, a2, a3, 0, 0);
  v13 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v13);
  v15 = type metadata accessor for ZStack(255, v13, WitnessTable);
  v16 = type metadata accessor for ModifiedContent(255, v15, &type metadata for _CompositingGroupEffect);
  v92 = swift_getWitnessTable(&protocol conformance descriptor for ZStack<A>, v15);
  v93 = &protocol witness table for _CompositingGroupEffect;
  v68 = v16;
  v69 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v16);
  v17 = type metadata accessor for Button(0, v16, v69);
  v72 = *(_QWORD *)(v17 - 8);
  v65 = v17;
  __chkstk_darwin();
  v66 = (char *)&v57 - v18;
  v19 = swift_getWitnessTable(&protocol conformance descriptor for Button<A>, v17);
  v63 = v19;
  v62 = sub_100321B9C();
  v88 = (char *)v17;
  v89 = v10;
  v90 = v19;
  v91 = v62;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v88, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 0);
  v71 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin();
  v61 = (char *)&v57 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v67 = (uint64_t)&v57 - v21;
  v22 = sub_100005600(&qword_10049B878);
  v23 = type metadata accessor for ModifiedContent(0, a2, v22);
  v24 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin();
  v26 = (char *)&v57 - v25;
  v27 = type metadata accessor for ModifiedContent(0, v23, &type metadata for _FixedSizeLayout);
  v78 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin();
  v29 = (char *)&v57 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v31 = (char *)&v57 - v30;
  v58 = (char *)&v57 - v30;
  View.lineLimit(_:)(0, 1, a2, a4);
  v32 = sub_100322FF0();
  v87[4] = a4;
  v87[5] = v32;
  v33 = a4;
  v34 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v23);
  View.fixedSize(horizontal:vertical:)(0, 1, v23, v34);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
  v87[2] = v34;
  v87[3] = &protocol witness table for _FixedSizeLayout;
  v59 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v27);
  sub_10003B690((uint64_t)v29, v27, (uint64_t)v31);
  v60 = *(void (**)(char *, uint64_t))(v78 + 8);
  v60(v29, v27);
  v35 = v73;
  v88 = (char *)a2;
  v89 = v73;
  v36 = v74;
  v90 = v33;
  v91 = v74;
  v37 = type metadata accessor for HeightLimitedButtonTextView(0, (uint64_t)&v88);
  v38 = (uint64_t *)(v57 + *(int *)(v37 + 56));
  v39 = *v38;
  v40 = v38[1];
  v80 = a2;
  v81 = v35;
  v82 = v33;
  v83 = v36;
  v84 = v57;
  swift_retain(v40);
  v41 = v66;
  v42 = Button.init(action:label:)(v39, v40, sub_10032303C, v79, v68, v69);
  v43 = v75;
  PlainButtonStyle.init()(v42);
  v44 = (uint64_t)v61;
  v45 = v65;
  v46 = v64;
  v47 = v63;
  v48 = v62;
  View.buttonStyle<A>(_:)(v43, v65, v64, v63, v62);
  (*(void (**)(char *, uint64_t))(v76 + 8))(v43, v46);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v41, v45);
  v88 = (char *)v45;
  v89 = v46;
  v90 = v47;
  v91 = v48;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v88, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
  v50 = v67;
  v51 = OpaqueTypeMetadata2;
  sub_10003B690(v44, OpaqueTypeMetadata2, v67);
  v52 = v71;
  v53 = *(void (**)(uint64_t, uint64_t))(v71 + 8);
  v53(v44, v51);
  v54 = v58;
  (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v29, v58, v27);
  v88 = v29;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 16))(v44, v50, v51);
  v89 = v44;
  v87[0] = v27;
  v87[1] = v51;
  v85 = v59;
  v86 = OpaqueTypeConformance2;
  sub_1000388A8((uint64_t *)&v88, 2uLL, (uint64_t)v87);
  v53(v50, v51);
  v55 = (uint64_t (*)(char *, uint64_t))v60;
  v60(v54, v27);
  v53(v44, v51);
  return v55(v29, v27);
}

uint64_t sub_1003221D4()
{
  return sub_10031D338((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100321BE4);
}

uint64_t sub_1003221E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t TupleTypeMetadata2;
  uint64_t v8;
  uint64_t WitnessTable;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[16];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;

  v28 = a4;
  v29 = a5;
  v25 = a3;
  v27 = a1;
  v30 = a6;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, a2, a3, 0, 0);
  v8 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v8);
  v10 = type metadata accessor for ZStack(0, v8, WitnessTable);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin();
  v13 = (char *)&v25 - v12;
  v14 = type metadata accessor for ModifiedContent(0, v10, &type metadata for _CompositingGroupEffect);
  v26 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin();
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin();
  v19 = (char *)&v25 - v18;
  v20 = static HorizontalAlignment.trailing.getter(v17);
  v21 = static VerticalAlignment.lastTextBaseline.getter();
  v32 = a2;
  v33 = v25;
  v34 = v28;
  v35 = v29;
  v36 = v27;
  ZStack.init(alignment:content:)(v20, v21, sub_100323048, v31, v8, WitnessTable);
  v22 = swift_getWitnessTable(&protocol conformance descriptor for ZStack<A>, v10);
  View.compositingGroup()(v10, v22);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v37 = v22;
  v38 = &protocol witness table for _CompositingGroupEffect;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v14);
  sub_10003B690((uint64_t)v16, v14, (uint64_t)v19);
  v23 = *(void (**)(char *, uint64_t))(v26 + 8);
  v23(v16, v14);
  sub_100035E98((uint64_t)v19, v14, v30);
  return ((uint64_t (*)(char *, uint64_t))v23)(v19, v14);
}

uint64_t sub_1003223F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  void (*v26)(char *, uint64_t);
  _QWORD v28[4];
  _QWORD v29[2];
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;

  v28[1] = a6;
  v28[0] = *(_QWORD *)(a3 - 8);
  __chkstk_darwin();
  v12 = (char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v14 = (char *)v28 - v13;
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin();
  v18 = (char *)v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin();
  v21 = (char *)v28 - v20;
  sub_10003B690(v19, v22, (uint64_t)v28 - v20);
  v30 = (char *)a2;
  v31 = (char *)a3;
  v32 = a4;
  v33 = a5;
  v23 = type metadata accessor for HeightLimitedButtonTextView(0, (uint64_t)&v30);
  sub_10003B690(a1 + *(int *)(v23 + 52), a3, (uint64_t)v14);
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v18, v21, a2);
  v30 = v18;
  v24 = v28[0];
  (*(void (**)(char *, char *, uint64_t))(v28[0] + 16))(v12, v14, a3);
  v31 = v12;
  v29[0] = a2;
  v29[1] = a3;
  v28[2] = a4;
  v28[3] = a5;
  sub_1000388A8((uint64_t *)&v30, 2uLL, (uint64_t)v29);
  v25 = *(void (**)(char *, uint64_t))(v24 + 8);
  v25(v14, a3);
  v26 = *(void (**)(char *, uint64_t))(v16 + 8);
  v26(v21, a2);
  v25(v12, a3);
  return ((uint64_t (*)(char *, uint64_t))v26)(v18, a2);
}

unint64_t sub_1003225A4()
{
  unint64_t result;

  result = qword_10049FB88[0];
  if (!qword_10049FB88[0])
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for _HiddenModifier, &type metadata for _HiddenModifier);
    atomic_store(result, qword_10049FB88);
  }
  return result;
}

uint64_t sub_1003225E8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  _OWORD v4[2];

  v2 = *(_OWORD *)(a2 + 32);
  v4[0] = *(_OWORD *)(a2 + 16);
  v4[1] = v2;
  return swift_getOpaqueTypeConformance2(v4, &opaque type descriptor for <<opaque return type of HeightLimitedButtonTextView.body>>, 1);
}

uint64_t sub_100322620(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[3];

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 24));
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      v5[2] = (char *)&value witness table for () + 64;
      swift_initStructMetadata(a1, 0, 3, v5, a1 + 48);
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1003226B8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = *(_QWORD *)(v7 + 64) + 7;
  v11 = v8 | *(_DWORD *)(v6 + 80) & 0xF8;
  if (v11 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) != 0
    || ((v10 + (v9 & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v17 + (((v11 | 7) + 16) & ~(unint64_t)(v11 | 7)));
  }
  else
  {
    v14 = ~v8;
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    v15 = ((unint64_t)a2 + v9) & v14;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v9) & v14, v15, v5);
    v16 = (_QWORD *)((v10 + v15) & 0xFFFFFFFFFFFFFFF8);
    v17 = v16[1];
    v18 = (_QWORD *)((v10 + (((unint64_t)v4 + v9) & v14)) & 0xFFFFFFFFFFFFFFF8);
    *v18 = *v16;
    v18[1] = v17;
  }
  swift_retain(v17);
  return v4;
}

double sub_1003227C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  double result;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  v5 = *(_QWORD *)(v4 + 64) + a1;
  v6 = *(_QWORD *)(*(_QWORD *)(a2 + 24) - 8);
  v7 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t))(v6 + 8))(v7);
  *(_QWORD *)&result = swift_release(*(_QWORD *)(((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFF8) + 8)).n128_u64[0];
  return result;
}

uint64_t sub_100322838(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (_QWORD *)((v13 + v11) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)((v13 + v12) & 0xFFFFFFFFFFFFFFF8);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  swift_retain(v16);
  return a1;
}

uint64_t sub_1003228D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (_QWORD *)((v13 + v11) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)((v13 + v12) & 0xFFFFFFFFFFFFFFF8);
  v16 = v15[1];
  v17 = v14[1];
  *v14 = *v15;
  v14[1] = v16;
  swift_retain(v16);
  swift_release(v17);
  return a1;
}

uint64_t sub_100322974(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v11, v12);
  *(_OWORD *)((*(_QWORD *)(v8 + 64) + 7 + v11) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((*(_QWORD *)(v8 + 64) + 7 + v12) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_100322A08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v11, v12);
  v13 = *(_QWORD *)(v8 + 64) + 7;
  v14 = (v13 + v11) & 0xFFFFFFFFFFFFFFF8;
  v15 = *(_QWORD *)(v14 + 8);
  *(_OWORD *)v14 = *(_OWORD *)((v13 + v12) & 0xFFFFFFFFFFFFF8);
  swift_release(v15);
  return a1;
}

uint64_t sub_100322AA4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v17;
  unint64_t v18;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 84);
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8 <= v6)
    v9 = *(_DWORD *)(v5 + 84);
  else
    v9 = *(_DWORD *)(v7 + 84);
  if (v9 <= 0x7FFFFFFF)
    v9 = 0x7FFFFFFF;
  if (!a2)
    return 0;
  v10 = *(unsigned __int8 *)(v7 + 80);
  v11 = *(_QWORD *)(v5 + 64) + v10;
  v12 = *(_QWORD *)(v7 + 64) + 7;
  if (v9 >= a2)
  {
    if (v6 == v9)
    {
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v5 + 48))(a1, *(unsigned int *)(v5 + 84), v4);
    }
    else
    {
      v17 = (v11 + a1) & ~v10;
      if (v8 == v9)
      {
        return (*(uint64_t (**)(uint64_t))(v7 + 48))(v17);
      }
      else
      {
        v18 = *(_QWORD *)((v12 + v17) & 0xFFFFFFFFFFFFF8);
        if (v18 >= 0xFFFFFFFF)
          LODWORD(v18) = -1;
        return (v18 + 1);
      }
    }
  }
  else
  {
    if (((((v12 + (v11 & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v13 = 2;
    else
      v13 = a2 - v9 + 1;
    if (v13 >= 0x10000)
      v14 = 4;
    else
      v14 = 2;
    if (v13 < 0x100)
      v14 = 1;
    if (v13 >= 2)
      v15 = v14;
    else
      v15 = 0;
    return ((uint64_t (*)(void))((char *)&loc_100322B44 + 4 * byte_10039E500[v15]))();
  }
}

void sub_100322BEC(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  v8 = *(unsigned __int8 *)(v6 + 80);
  if (v7 >= a3)
  {
    v11 = 0;
    if (a2 <= v7)
      goto LABEL_19;
  }
  else
  {
    if (((*(_DWORD *)(v6 + 64) + 7 + ((*(_DWORD *)(v5 + 64) + (_DWORD)v8) & ~(_DWORD)v8)) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v9 = a3 - v7 + 1;
    else
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    if (a2 <= v7)
LABEL_19:
      __asm { BR              X0 }
  }
  if (((*(_DWORD *)(v6 + 64) + 7 + ((*(_DWORD *)(v5 + 64) + (_DWORD)v8) & ~(_DWORD)v8)) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v12 = ~v7 + a2;
    bzero(a1, ((*(_QWORD *)(v6 + 64) + 7 + ((*(_QWORD *)(v5 + 64) + v8) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 16);
    *a1 = v12;
  }
  __asm { BR              X10 }
}

void sub_100322D08()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x100322D98);
}

void sub_100322D10(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x100322D18);
  JUMPOUT(0x100322D98);
}

void sub_100322D5C()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x100322D98);
}

void sub_100322D64()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x100322D98);
}

uint64_t sub_100322D6C(uint64_t a1, int a2, int a3)
{
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_WORD *)(v12 + v13) = 0;
  if (!a2)
    JUMPOUT(0x100322D98);
  if (v6 == v9)
  {
    v3 = *(uint64_t (**)(uint64_t))(v10 + 56);
    v4 = v12;
  }
  else
  {
    v4 = (v11 + v12) & v7;
    if (a3 != v9)
      JUMPOUT(0x100322D78);
    v3 = *(uint64_t (**)(uint64_t))(v8 + 56);
  }
  return v3(v4);
}

uint64_t sub_100322DB0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t TupleTypeMetadata2;
  uint64_t v8;
  uint64_t WitnessTable;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[6];

  v1 = *a1;
  v2 = a1[1];
  v3 = type metadata accessor for ModifiedContent(255, *a1, &type metadata for _HiddenModifier);
  v4 = sub_100005600(&qword_10049B878);
  v5 = type metadata accessor for ModifiedContent(255, v1, v4);
  v6 = type metadata accessor for ModifiedContent(255, v5, &type metadata for _FixedSizeLayout);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v1, v2, 0, 0);
  v8 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v8);
  v10 = type metadata accessor for ZStack(255, v8, WitnessTable);
  v11 = type metadata accessor for ModifiedContent(255, v10, &type metadata for _CompositingGroupEffect);
  v22[4] = swift_getWitnessTable(&protocol conformance descriptor for ZStack<A>, v10);
  v22[5] = &protocol witness table for _CompositingGroupEffect;
  v12 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v11);
  v22[0] = type metadata accessor for Button(255, v11, v12);
  v22[1] = type metadata accessor for PlainButtonStyle(255);
  v22[2] = swift_getWitnessTable(&protocol conformance descriptor for Button<A>, v22[0]);
  v22[3] = sub_100321B9C();
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, v22, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 0);
  v14 = swift_getTupleTypeMetadata2(255, v6, OpaqueTypeMetadata2, 0, 0);
  v15 = type metadata accessor for TupleView(255, v14);
  v16 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v15);
  v17 = type metadata accessor for ViewThatFits(255, v15, v16);
  v18 = swift_getWitnessTable(&protocol conformance descriptor for ViewThatFits<A>, v17);
  v19 = type metadata accessor for _OverlayModifier(255, v17, v18);
  v20 = type metadata accessor for ModifiedContent(255, v3, v19);
  sub_1003225A4();
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v3);
  swift_getWitnessTable(&protocol conformance descriptor for _OverlayModifier<A>, v19);
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v20);
}

unint64_t sub_100322FF0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049B870;
  if (!qword_10049B870)
  {
    v1 = sub_100005600(&qword_10049B878);
    result = swift_getWitnessTable(&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>, v1);
    atomic_store(result, (unint64_t *)&qword_10049B870);
  }
  return result;
}

uint64_t sub_10032303C()
{
  return sub_10031D338((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1003221E0);
}

uint64_t sub_100323048()
{
  return sub_10031D338((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1003223F4);
}

uint64_t MoreLabel.init(color:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  char *v7;
  uint64_t result;

  v4 = type metadata accessor for MoreLabel(0);
  v5 = (_QWORD *)((char *)a2 + *(int *)(v4 + 20));
  *v5 = swift_getKeyPath(&unk_10039E5A0);
  v6 = sub_100005574((uint64_t *)&unk_100498E50);
  swift_storeEnumTagMultiPayload(v5, v6, 0);
  v7 = (char *)a2 + *(int *)(v4 + 24);
  result = swift_getKeyPath(&unk_10039E5D0);
  *(_QWORD *)v7 = result;
  v7[8] = 0;
  *a2 = a1;
  return result;
}

uint64_t type metadata accessor for MoreLabel(uint64_t a1)
{
  uint64_t result;

  result = qword_10049FCC8;
  if (!qword_10049FCC8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MoreLabel);
  return result;
}

uint64_t MoreLabel.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t KeyPath;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  unint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  char *v49;
  uint64_t v50;
  double v51;
  char *v52;
  unint64_t v53;
  char *v54;
  uint64_t v55;
  double v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  double v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  void (*v88)(char *, char *, uint64_t);
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  _QWORD *v119;
  __int128 v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  __int128 v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD *v134;
  char v135;
  uint64_t v136;
  char v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;

  v125 = a1;
  type metadata accessor for _BlendModeEffect(0);
  __chkstk_darwin();
  v124 = (char *)&v102 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = type metadata accessor for BlendMode(0);
  v127 = *(_QWORD *)(v129 - 8);
  __chkstk_darwin();
  v128 = (char *)&v102 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = sub_100005574(&qword_10049FC10);
  __chkstk_darwin();
  v122 = (char *)&v102 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = type metadata accessor for Text.LineStyle.Pattern(0);
  *(_QWORD *)&v120 = *(_QWORD *)(v121 - 8);
  __chkstk_darwin();
  v118 = (char *)&v102 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100005574(&qword_10049B888);
  __chkstk_darwin();
  v104 = (char *)&v102 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_10049B890);
  __chkstk_darwin();
  v8 = (char *)&v102 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = sub_100005574(&qword_10049B898);
  __chkstk_darwin();
  v10 = (char *)&v102 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = sub_100005574(&qword_10049FC18);
  v110 = *(_QWORD *)(v111 - 8);
  __chkstk_darwin();
  v105 = (char *)&v102 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = sub_100005574(&qword_10049FC20);
  __chkstk_darwin();
  v106 = (char *)&v102 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = sub_100005574(&qword_10049FC28);
  __chkstk_darwin();
  v107 = (uint64_t)&v102 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = sub_100005574(&qword_10049FC30);
  v115 = *(_QWORD *)(v116 - 8);
  __chkstk_darwin();
  v112 = (char *)&v102 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = sub_100005574(&qword_10049FC38);
  __chkstk_darwin();
  v113 = (char *)&v102 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = sub_100005574(&qword_10049FC40);
  __chkstk_darwin();
  v126 = (uint64_t)&v102 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = Int.seconds.getter(44);
  v18 = LocalizedStringKey.init(stringLiteral:)(1701998413, 0xE400000000000000);
  v19 = Text.init(_:tableName:bundle:comment:)(v18);
  v21 = v20;
  v23 = v22;
  v25 = v24 & 1;
  v26 = enum case for Text.Case.uppercase(_:);
  v27 = type metadata accessor for Text.Case(0);
  v28 = *(_QWORD *)(v27 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 104))(v8, v26, v27);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v8, 0, 1, v27);
  KeyPath = swift_getKeyPath(&unk_10039E600);
  v30 = (uint64_t)v104;
  sub_100014A7C((uint64_t)v8, (uint64_t)&v104[*(int *)(v5 + 28)], &qword_10049B890);
  *(_QWORD *)v30 = KeyPath;
  v31 = v103;
  sub_100014A7C(v30, (uint64_t)&v10[*(int *)(v103 + 36)], &qword_10049B888);
  *(_QWORD *)v10 = v19;
  *((_QWORD *)v10 + 1) = v21;
  v10[16] = v25;
  *((_QWORD *)v10 + 3) = v23;
  sub_10003B4C0(v19, v21, v25);
  swift_bridgeObjectRetain();
  sub_100008758(v30, &qword_10049B888);
  sub_100008758((uint64_t)v8, &qword_10049B890);
  sub_10003B4D0(v19, v21, v25);
  v32 = swift_bridgeObjectRelease();
  v33 = static Font.Weight.bold.getter(v32);
  v34 = sub_1002A0D7C();
  v35 = v105;
  View.fontWeight(_:)(*(_QWORD *)&v33, 0, v31, v34);
  v36 = sub_100008758((uint64_t)v10, &qword_10049B898);
  v37 = static Font.footnote.getter(v36);
  v38 = swift_getKeyPath(&unk_10039E630);
  v39 = v110;
  v40 = (uint64_t)v106;
  v41 = v111;
  (*(void (**)(char *, char *, uint64_t))(v110 + 16))(v106, v35, v111);
  v42 = (uint64_t *)(v40 + *(int *)(v108 + 36));
  *v42 = v38;
  v42[1] = v37;
  (*(void (**)(char *, uint64_t))(v39 + 8))(v35, v41);
  v43 = v119;
  v44 = *v119;
  v45 = swift_getKeyPath(&unk_10039E660);
  v46 = v107;
  sub_100014A7C(v40, v107, &qword_10049FC20);
  v47 = v109;
  v48 = (uint64_t *)(v46 + *(int *)(v109 + 36));
  *v48 = v45;
  v48[1] = v44;
  swift_retain(v44);
  sub_100008758(v40, &qword_10049FC20);
  v49 = (char *)v43 + *(int *)(type metadata accessor for MoreLabel(0) + 24);
  v50 = *(_QWORD *)v49;
  LOBYTE(v45) = v49[8];
  sub_100301C50(*(_QWORD *)v49, v45);
  LOBYTE(v30) = sub_1002BE254(v50, v45);
  v51 = sub_1002D0564(v50, v45);
  v52 = v118;
  static Text.LineStyle.Pattern.solid.getter(v51);
  v53 = sub_100323F44();
  v54 = v112;
  View.underline(_:pattern:color:)(v30 & 1, v52, 0, v47, v53);
  (*(void (**)(char *, uint64_t))(v120 + 8))(v52, v121);
  v55 = sub_100008758(v46, &qword_10049FC28);
  LOBYTE(v52) = static Edge.Set.leading.getter(v55);
  v56 = EdgeInsets.init(_all:)(v17);
  v58 = v57;
  v60 = v59;
  v62 = v61;
  v63 = v115;
  v64 = (uint64_t)v113;
  v65 = v116;
  (*(void (**)(char *, char *, uint64_t))(v115 + 16))(v113, v54, v116);
  v66 = v64 + *(int *)(v114 + 36);
  *(_BYTE *)v66 = (_BYTE)v52;
  *(double *)(v66 + 8) = v56;
  *(_QWORD *)(v66 + 16) = v58;
  *(_QWORD *)(v66 + 24) = v60;
  *(_QWORD *)(v66 + 32) = v62;
  *(_BYTE *)(v66 + 40) = 0;
  v67 = (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v54, v65);
  LOBYTE(v52) = static Edge.Set.top.getter(v67);
  v68 = EdgeInsets.init(_all:)(4.0);
  v70 = v69;
  v72 = v71;
  v74 = v73;
  v75 = v126;
  sub_100014A7C(v64, v126, &qword_10049FC38);
  v76 = v75 + *(int *)(v117 + 36);
  *(_BYTE *)v76 = (_BYTE)v52;
  *(double *)(v76 + 8) = v68;
  *(_QWORD *)(v76 + 16) = v70;
  *(_QWORD *)(v76 + 24) = v72;
  *(_QWORD *)(v76 + 32) = v74;
  *(_BYTE *)(v76 + 40) = 0;
  v77 = sub_100008758(v64, &qword_10049FC38);
  v121 = static VerticalAlignment.center.getter(v77);
  sub_100323AD4((uint64_t)&v130, v17);
  v78 = v130;
  v120 = v131;
  v79 = v132;
  v80 = v133;
  v119 = v134;
  LOBYTE(v63) = v135;
  v81 = v136;
  LOBYTE(v23) = v137;
  v82 = v138;
  v83 = v139;
  v84 = v140;
  v85 = v127;
  v87 = v128;
  v86 = v129;
  (*(void (**)(char *, _QWORD, uint64_t))(v127 + 104))(v128, enum case for BlendMode.destinationOut(_:), v129);
  v88 = *(void (**)(char *, char *, uint64_t))(v85 + 16);
  v89 = (uint64_t)v124;
  v88(v124, v87, v86);
  v90 = v122;
  sub_100324074(v89, (uint64_t)&v122[*(int *)(v123 + 36)]);
  *(_QWORD *)v90 = v121;
  *((_QWORD *)v90 + 1) = 0;
  v90[16] = 0;
  *((_QWORD *)v90 + 3) = v78;
  *((_OWORD *)v90 + 2) = v120;
  *((_QWORD *)v90 + 6) = v79;
  *((_QWORD *)v90 + 7) = v80;
  *((_QWORD *)v90 + 8) = v119;
  v90[72] = v63;
  *((_QWORD *)v90 + 10) = v81;
  v90[88] = v23;
  *((_QWORD *)v90 + 12) = v82;
  *((_QWORD *)v90 + 13) = v83;
  *((_QWORD *)v90 + 14) = v84;
  v91 = (uint64_t)v90;
  swift_bridgeObjectRetain();
  swift_retain(v84);
  sub_1003240B8(v89);
  (*(void (**)(char *, uint64_t))(v127 + 8))(v128, v129);
  swift_release(v84);
  v92 = swift_bridgeObjectRelease();
  v93 = static Alignment.center.getter(v92);
  v95 = v94;
  v96 = sub_100005574(&qword_10049FC58);
  v97 = v125;
  v98 = v125 + *(int *)(v96 + 36);
  sub_100014A7C(v91, v98, &qword_10049FC10);
  v99 = (uint64_t *)(v98 + *(int *)(sub_100005574(&qword_10049FC60) + 36));
  *v99 = v93;
  v99[1] = v95;
  v100 = v126;
  sub_100014A7C(v126, v97, &qword_10049FC40);
  sub_100008758(v91, &qword_10049FC10);
  return sub_100008758(v100, &qword_10049FC40);
}

double sub_100323AD4@<D0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char v10;
  void (*v11)(char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  _QWORD *v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  double result;
  __int128 v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;

  v4 = type metadata accessor for LayoutDirection(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v9 = (char *)&v40 - v8;
  type metadata accessor for MoreLabel(0);
  sub_1002BDFE4((uint64_t)v9);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for LayoutDirection.rightToLeft(_:), v4);
  v10 = static LayoutDirection.== infix(_:_:)(v9, v7);
  v11 = *(void (**)(char *, uint64_t))(v5 + 8);
  v11(v7, v4);
  v11(v9, v4);
  v12 = sub_100005574(&qword_10049F8F8);
  v13 = swift_allocObject(v12, 48, 7);
  v14 = v13;
  *(_OWORD *)(v13 + 16) = xmmword_100384A60;
  if ((v10 & 1) != 0)
  {
    v15 = static Color.black.getter((__n128)xmmword_100384A60);
    *(_QWORD *)(v14 + 32) = v15;
    v16 = static Color.clear.getter(v15);
  }
  else
  {
    *(_QWORD *)(v13 + 32) = static Color.clear.getter(v13);
    v16 = static Color.black.getter(v17);
  }
  *(_QWORD *)(v14 + 40) = v16;
  v45 = v14;
  specialized Array._endMutation()(v16);
  Gradient.init(colors:)(v45);
  v19 = static UnitPoint.leading.getter(v18);
  v21 = v20;
  v22 = static UnitPoint.trailing.getter();
  v24 = LinearGradient.init(gradient:startPoint:endPoint:)(&v41, v19, v21, v22, v23);
  v25 = v41;
  v40 = v42;
  v26 = a2;
  v27 = v43;
  v28 = v44;
  v29 = static Alignment.center.getter(v24);
  _FrameLayout.init(width:height:alignment:)(&v45, *(_QWORD *)&v26, 0, 0, 1, v29, v30);
  v31 = v45;
  v32 = v46;
  v33 = v47;
  v34 = v48;
  v35 = v49;
  v36 = v50;
  v38 = static Color.black.getter(v37);
  *(_QWORD *)a1 = v25;
  result = *(double *)&v40;
  *(_OWORD *)(a1 + 8) = v40;
  *(_QWORD *)(a1 + 24) = v27;
  *(_QWORD *)(a1 + 32) = v28;
  *(_QWORD *)(a1 + 40) = v31;
  *(_BYTE *)(a1 + 48) = v32;
  *(_QWORD *)(a1 + 56) = v33;
  *(_BYTE *)(a1 + 64) = v34;
  *(_QWORD *)(a1 + 72) = v35;
  *(_QWORD *)(a1 + 80) = v36;
  *(_QWORD *)(a1 + 88) = v38;
  return result;
}

uint64_t sub_100323CE4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.accessibilityShowButtonShapes.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100323D10@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.accessibilityShowButtonShapes.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100323D40()
{
  return EnvironmentValues.textCase.getter();
}

uint64_t sub_100323D60()
{
  return EnvironmentValues.textCase.getter();
}

uint64_t sub_100323D80(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v5;

  sub_100005574(&qword_10049B890);
  __chkstk_darwin();
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100014A7C(a1, (uint64_t)v3, &qword_10049B890);
  return EnvironmentValues.textCase.setter(v3);
}

uint64_t sub_100323E04@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100323E2C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100323E54(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.font.setter(v1);
}

uint64_t sub_100323E7C(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.font.setter(v1);
}

uint64_t sub_100323EA4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100323ECC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100323EF4(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.foregroundColor.setter(v1);
}

uint64_t sub_100323F1C(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.foregroundColor.setter(v1);
}

unint64_t sub_100323F44()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049FC48;
  if (!qword_10049FC48)
  {
    v1 = sub_100005600(&qword_10049FC28);
    sub_100323FC8();
    sub_10002FFB8(&qword_10049D560, (uint64_t *)&unk_10049E490, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049FC48);
  }
  return result;
}

unint64_t sub_100323FC8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10049FC50;
  if (!qword_10049FC50)
  {
    v1 = sub_100005600(&qword_10049FC20);
    v2[0] = sub_100005600(&qword_10049B898);
    v2[1] = sub_1002A0D7C();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>, 1);
    sub_10002FFB8((unint64_t *)&unk_10049E600, &qword_10049B8D8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049FC50);
  }
  return result;
}

uint64_t sub_100324074(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for _BlendModeEffect(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003240B8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for _BlendModeEffect(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1003240F4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of MoreLabel.body>>, 1);
}

uint64_t *initializeBufferWithCopyOfBuffer for MoreLabel(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char v19;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v5);
  }
  else
  {
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    swift_retain(v5);
    v11 = sub_100005574((uint64_t *)&unk_100498E50);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
      v13 = 1;
    }
    else
    {
      v14 = *v10;
      *v9 = *v10;
      swift_retain(v14);
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v11, v13);
    v15 = *(int *)(a3 + 24);
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = *(_QWORD *)v17;
    v19 = v17[8];
    sub_100301C50(*(_QWORD *)v17, v19);
    *(_QWORD *)v16 = v18;
    v16[8] = v19;
  }
  return a1;
}

double destroy for MoreLabel(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  swift_release(*a1);
  v4 = (_QWORD *)((char *)a1 + *(int *)(a2 + 20));
  v5 = sub_100005574((uint64_t *)&unk_100498E50);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    swift_release(*v4);
  }
  return sub_1002D0564(*(_QWORD *)((char *)a1 + *(int *)(a2 + 24)), *((_BYTE *)a1 + *(int *)(a2 + 24) + 8));
}

uint64_t *initializeWithCopy for MoreLabel(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char v18;

  v6 = *a2;
  *a1 = *a2;
  v7 = *(int *)(a3 + 20);
  v8 = (uint64_t *)((char *)a1 + v7);
  v9 = (uint64_t *)((char *)a2 + v7);
  swift_retain(v6);
  v10 = sub_100005574((uint64_t *)&unk_100498E50);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, v9, v11);
    v12 = 1;
  }
  else
  {
    v13 = *v9;
    *v8 = *v9;
    swift_retain(v13);
    v12 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v10, v12);
  v14 = *(int *)(a3 + 24);
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = *(_QWORD *)v16;
  v18 = v16[8];
  sub_100301C50(*(_QWORD *)v16, v18);
  *(_QWORD *)v15 = v17;
  v15[8] = v18;
  return a1;
}

uint64_t *assignWithCopy for MoreLabel(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  swift_retain(v6);
  swift_release(v7);
  if (a1 != a2)
  {
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    sub_100008758((uint64_t)a1 + v8, (uint64_t *)&unk_100498E50);
    v11 = sub_100005574((uint64_t *)&unk_100498E50);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
      v13 = 1;
    }
    else
    {
      v14 = *v10;
      *v9 = *v10;
      swift_retain(v14);
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v11, v13);
  }
  v15 = *(int *)(a3 + 24);
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = *(_QWORD *)v17;
  v19 = v17[8];
  sub_100301C50(*(_QWORD *)v17, v19);
  v20 = *(_QWORD *)v16;
  v21 = v16[8];
  *(_QWORD *)v16 = v18;
  v16[8] = v19;
  sub_1002D0564(v20, v21);
  return a1;
}

_QWORD *initializeWithTake for MoreLabel(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_100005574((uint64_t *)&unk_100498E50);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v11 = *(int *)(a3 + 24);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  *(_QWORD *)v12 = *(_QWORD *)v13;
  v12[8] = v13[8];
  return a1;
}

uint64_t *assignWithTake for MoreLabel(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  v6 = *a1;
  *a1 = *a2;
  swift_release(v6);
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    sub_100008758((uint64_t)a1 + v7, (uint64_t *)&unk_100498E50);
    v10 = sub_100005574((uint64_t *)&unk_100498E50);
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v11 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload(v8, v10, 1);
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
  }
  v12 = *(int *)(a3 + 24);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = *(_QWORD *)v14;
  LOBYTE(v14) = v14[8];
  v16 = *(_QWORD *)v13;
  v17 = v13[8];
  *(_QWORD *)v13 = v15;
  v13[8] = (char)v14;
  sub_1002D0564(v16, v17);
  return a1;
}

uint64_t getEnumTagSinglePayload for MoreLabel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100324668);
}

uint64_t sub_100324668(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100005574(&qword_10049FC68);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for MoreLabel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003246F4);
}

char *sub_1003246F4(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_100005574(&qword_10049FC68);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

void sub_10032476C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  sub_1002E0330(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = "\t";
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
  }
}

unint64_t sub_1003247F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049FD08;
  if (!qword_10049FD08)
  {
    v1 = sub_100005600(&qword_10049FC58);
    sub_100324874();
    sub_10002FFB8(&qword_10049FD20, &qword_10049FC60, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049FD08);
  }
  return result;
}

unint64_t sub_100324874()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049FD10;
  if (!qword_10049FD10)
  {
    v1 = sub_100005600(&qword_10049FC40);
    sub_1003248E0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049FD10);
  }
  return result;
}

unint64_t sub_1003248E0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10049FD18;
  if (!qword_10049FD18)
  {
    v1 = sub_100005600(&qword_10049FC38);
    v2[0] = sub_100005600(&qword_10049FC28);
    v2[1] = sub_100323F44();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.underline(_:pattern:color:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049FD18);
  }
  return result;
}

uint64_t Gradient.colors.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v1 + 8));
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

double Gradient.startPoint.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

void Gradient.startPoint.setter(double a1, double a2)
{
  uint64_t v2;

  *(double *)(v2 + 32) = a1;
  *(double *)(v2 + 40) = a2;
}

double Gradient.endPoint.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 48);
}

void Gradient.endPoint.setter(double a1, double a2)
{
  uint64_t v2;

  *(double *)(v2 + 48) = a1;
  *(double *)(v2 + 56) = a2;
}

uint64_t Gradient.init(kind:colors:locations:interpolations:startPoint:endPoint:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>, double a8@<D2>, double a9@<D3>)
{
  *(_QWORD *)a5 = result;
  *(_QWORD *)(a5 + 8) = a2;
  *(_QWORD *)(a5 + 16) = a3;
  *(_QWORD *)(a5 + 24) = a4;
  *(double *)(a5 + 32) = a6;
  *(double *)(a5 + 40) = a7;
  *(double *)(a5 + 48) = a8;
  *(double *)(a5 + 56) = a9;
  return result;
}

char *sub_1003249D0(void *a1)
{
  double *v1;
  double *v2;
  NSArray v4;
  Class isa;
  Class v6;
  uint64_t v7;
  char *result;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  _QWORD *v20;
  char v21[8];
  char v22[8];
  uint64_t v23;
  objc_class *v24;

  v2 = v1;
  objc_msgSend(a1, "setType:", *(_QWORD *)v1);
  sub_1000149A8((uint64_t)(v1 + 2), (uint64_t)v22, &qword_10049FDE8);
  sub_1000149A8((uint64_t)v22, (uint64_t)&v23, &qword_10049FDE8);
  if (v23)
  {
    sub_100252294(v23);
    sub_1000087DC(0, &qword_100499B58, NSNumber_ptr);
    v4.super.isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v4.super.isa = 0;
  }
  objc_msgSend(a1, "setLocations:", v4.super.isa);

  sub_1000149A8((uint64_t)(v2 + 3), (uint64_t)v21, &qword_10049FDF0);
  sub_1000149A8((uint64_t)v21, (uint64_t)&v24, &qword_10049FDF0);
  isa = v24;
  if (v24)
  {
    sub_1000087DC(0, &qword_100499E50, CAMediaTimingFunction_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
  }
  objc_msgSend(a1, "setInterpolations:", isa);

  v6 = (Class)*((_QWORD *)v2 + 1);
  if (!v6)
    goto LABEL_24;
  if (!((unint64_t)v6 >> 62))
  {
    v7 = *(_QWORD *)(((unint64_t)v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v7)
      goto LABEL_9;
LABEL_22:
    swift_bridgeObjectRelease();
LABEL_23:
    v6 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
LABEL_24:
    objc_msgSend(a1, "setColors:", v6);

    objc_msgSend(a1, "setStartPoint:", v2[4], v2[5]);
    return (char *)objc_msgSend(a1, "setEndPoint:", v2[6], v2[7]);
  }
  if ((uint64_t)v6 >= 0)
    v17 = (unint64_t)v6 & 0xFFFFFFFFFFFFFF8;
  else
    v17 = *((_QWORD *)v2 + 1);
  swift_bridgeObjectRetain();
  v7 = _CocoaArrayWrapper.endIndex.getter(v17);
  if (!v7)
    goto LABEL_22;
LABEL_9:
  v20 = _swiftEmptyArrayStorage;
  result = sub_10025926C(0, v7 & ~(v7 >> 63), 0);
  if ((v7 & 0x8000000000000000) == 0)
  {
    v9 = 0;
    v10 = v20;
    do
    {
      if (((unint64_t)v6 & 0xC000000000000001) != 0)
        v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v6);
      else
        v11 = *((id *)v6 + v9 + 4);
      v12 = v11;
      v13 = objc_msgSend(v11, "CGColor");
      _s3__C7CGColorCMa_0(0);
      v19 = v14;

      *(_QWORD *)&v18 = v13;
      v20 = v10;
      v16 = v10[2];
      v15 = v10[3];
      if (v16 >= v15 >> 1)
      {
        sub_10025926C((char *)(v15 > 1), v16 + 1, 1);
        v10 = v20;
      }
      ++v9;
      v10[2] = v16 + 1;
      sub_10009B168(&v18, &v10[4 * v16 + 4]);
    }
    while (v7 != v9);
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  __break(1u);
  return result;
}

id Gradient.View.__allocating_init(configuration:)(uint64_t a1)
{
  objc_class *v1;
  objc_class *v2;
  char *v4;
  char *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  objc_super v14;

  v2 = v1;
  v4 = (char *)objc_allocWithZone(v2);
  v5 = &v4[OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration];
  v6 = *(_OWORD *)(a1 + 48);
  v8 = *(_OWORD *)a1;
  v7 = *(_OWORD *)(a1 + 16);
  *((_OWORD *)v5 + 2) = *(_OWORD *)(a1 + 32);
  *((_OWORD *)v5 + 3) = v6;
  *(_OWORD *)v5 = v8;
  *((_OWORD *)v5 + 1) = v7;
  sub_100324E7C((void **)a1);
  v14.receiver = v4;
  v14.super_class = v2;
  v9 = objc_msgSendSuper2(&v14, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v10 = objc_msgSend(v9, "layer");
  v11 = objc_opt_self(CAGradientLayer);
  v12 = (void *)swift_dynamicCastObjCClassUnconditional(v10, v11, 0, 0, 0);
  sub_1003249D0(v12);
  sub_100324EC4(a1);

  return v9;
}

id Gradient.View.init(configuration:)(uint64_t a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  char *v5;
  __int128 v6;
  __int128 v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  objc_super v13;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = &v2[OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration];
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v5 = *(_OWORD *)a1;
  *((_OWORD *)v5 + 1) = v6;
  v7 = *(_OWORD *)(a1 + 48);
  *((_OWORD *)v5 + 2) = *(_OWORD *)(a1 + 32);
  *((_OWORD *)v5 + 3) = v7;
  sub_100324E7C((void **)a1);
  v13.receiver = v2;
  v13.super_class = ObjectType;
  v8 = objc_msgSendSuper2(&v13, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v9 = objc_msgSend(v8, "layer");
  v10 = objc_opt_self(CAGradientLayer);
  v11 = (void *)swift_dynamicCastObjCClassUnconditional(v9, v10, 0, 0, 0);
  sub_1003249D0(v11);
  sub_100324EC4(a1);

  return v8;
}

void **sub_100324E7C(void **a1)
{
  void *v2;
  id v3;

  v2 = *a1;
  swift_bridgeObjectRetain();
  v3 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100324EC4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);

  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v4);
  return a1;
}

void Gradient.View.init(coder:)()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001003B2590, "MusicCoreUI/Gradient.swift", 26, 2, 52, 0);
  __break(1u);
}

uint64_t static Gradient.View.layerClass.getter()
{
  return sub_1000087DC(0, (unint64_t *)&qword_10049B1D0, CAGradientLayer_ptr);
}

uint64_t Gradient.View.typedConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  id v9;
  _BYTE v11[24];

  v3 = v1 + OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration;
  swift_beginAccess(v3, v11, 0, 0);
  v4 = *(void **)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  v8 = *(_OWORD *)(v3 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v3 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  v9 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Gradient.View.typedConfiguration.setter(uint64_t a1)
{
  char *v1;
  char *v3;
  __int128 v4;
  __int128 v5;
  void *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  BOOL v11;
  __int128 v12;
  __int128 v13;
  id v14;
  uint64_t v15;
  void *v16;
  char v18[24];
  _OWORD v19[4];
  _OWORD v20[4];
  _OWORD v21[4];

  v3 = &v1[OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration];
  swift_beginAccess(&v1[OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration], v18, 1, 0);
  v4 = *((_OWORD *)v3 + 1);
  v21[0] = *(_OWORD *)v3;
  v21[1] = v4;
  v5 = *((_OWORD *)v3 + 3);
  v21[2] = *((_OWORD *)v3 + 2);
  v21[3] = v5;
  v6 = *(void **)v3;
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *((_OWORD *)v3 + 1) = v7;
  v8 = *(_OWORD *)(a1 + 48);
  *((_OWORD *)v3 + 2) = *(_OWORD *)(a1 + 32);
  *((_OWORD *)v3 + 3) = v8;
  sub_100324E7C((void **)v21);
  sub_100324E7C((void **)a1);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9 = *((_OWORD *)v3 + 1);
  v20[0] = *(_OWORD *)v3;
  v20[1] = v9;
  v10 = *((_OWORD *)v3 + 3);
  v20[2] = *((_OWORD *)v3 + 2);
  v20[3] = v10;
  sub_100324E7C((void **)v20);
  v11 = _s11MusicCoreUI8GradientV23__derived_struct_equalsySbAC_ACtFZ_0((uint64_t)v20, (uint64_t)v21);
  sub_100324EC4((uint64_t)v20);
  if (!v11)
  {
    v12 = *((_OWORD *)v3 + 1);
    v19[0] = *(_OWORD *)v3;
    v19[1] = v12;
    v13 = *((_OWORD *)v3 + 3);
    v19[2] = *((_OWORD *)v3 + 2);
    v19[3] = v13;
    sub_100324E7C((void **)v19);
    v14 = objc_msgSend(v1, "layer");
    v15 = objc_opt_self(CAGradientLayer);
    v16 = (void *)swift_dynamicCastObjCClassUnconditional(v14, v15, 0, 0, 0);
    sub_1003249D0(v16);

    sub_100324EC4((uint64_t)v19);
  }
  sub_100324EC4(a1);
  return sub_100324EC4((uint64_t)v21);
}

void (*Gradient.View.typedConfiguration.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  id v10;

  v3 = malloc(0xE0uLL);
  *a1 = v3;
  v3[27] = v1;
  v4 = v1 + OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration;
  swift_beginAccess(v1 + OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration, v3 + 24, 0, 0);
  v6 = *(void **)v4;
  v5 = *(_QWORD *)(v4 + 8);
  v8 = *(_QWORD *)(v4 + 16);
  v7 = *(_QWORD *)(v4 + 24);
  v3[16] = *(_QWORD *)v4;
  v3[17] = v5;
  v3 += 16;
  v3[2] = v8;
  v3[3] = v7;
  v9 = *(_OWORD *)(v4 + 48);
  *((_OWORD *)v3 + 2) = *(_OWORD *)(v4 + 32);
  *((_OWORD *)v3 + 3) = v9;
  swift_bridgeObjectRetain();
  v10 = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1003252A8;
}

void sub_1003252A8(uint64_t *a1, char a2)
{
  uint64_t v2;
  _OWORD *v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;

  v2 = *a1;
  v3 = (_OWORD *)(*a1 + 128);
  v4 = *(_OWORD *)(*a1 + 144);
  if ((a2 & 1) != 0)
  {
    *(_OWORD *)v2 = *v3;
    *(_OWORD *)(v2 + 16) = v4;
    v5 = v3[3];
    *(_OWORD *)(v2 + 32) = v3[2];
    *(_OWORD *)(v2 + 48) = v5;
    sub_100324E7C((void **)v2);
    Gradient.View.typedConfiguration.setter(v2);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_OWORD *)(v2 + 64) = *v3;
    *(_OWORD *)(v2 + 80) = v4;
    v6 = v3[3];
    *(_OWORD *)(v2 + 96) = v3[2];
    *(_OWORD *)(v2 + 112) = v6;
    Gradient.View.typedConfiguration.setter(v2 + 64);
  }
  free((void *)v2);
}

id sub_1003253B4(_OWORD *a1)
{
  objc_class *v1;
  __int128 v3;
  __int128 v4;
  char *v5;
  char *v6;
  __int128 v7;
  __int128 v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  objc_super v14;
  _OWORD v15[4];

  v3 = a1[1];
  v15[0] = *a1;
  v15[1] = v3;
  v4 = a1[3];
  v15[2] = a1[2];
  v15[3] = v4;
  v5 = (char *)objc_allocWithZone(v1);
  v6 = &v5[OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration];
  v7 = a1[1];
  *(_OWORD *)v6 = *a1;
  *((_OWORD *)v6 + 1) = v7;
  v8 = a1[3];
  *((_OWORD *)v6 + 2) = a1[2];
  *((_OWORD *)v6 + 3) = v8;
  sub_100324E7C((void **)v15);
  v14.receiver = v5;
  v14.super_class = v1;
  v9 = objc_msgSendSuper2(&v14, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v10 = objc_msgSend(v9, "layer");
  v11 = objc_opt_self(CAGradientLayer);
  v12 = (void *)swift_dynamicCastObjCClassUnconditional(v10, v11, 0, 0, 0);
  sub_1003249D0(v12);
  sub_100324EC4((uint64_t)v15);

  return v9;
}

uint64_t sub_1003254A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  id v9;
  _BYTE v11[24];

  v3 = v1 + OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration;
  swift_beginAccess(v3, v11, 0, 0);
  v5 = *(void **)v3;
  v4 = *(_QWORD *)(v3 + 8);
  v7 = *(_QWORD *)(v3 + 16);
  v6 = *(_QWORD *)(v3 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v6;
  v8 = *(_OWORD *)(v3 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v3 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRetain();
  v9 = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_100325528(_OWORD *a1)
{
  __int128 v1;
  __int128 v2;
  _OWORD v4[4];

  v1 = a1[1];
  v4[0] = *a1;
  v4[1] = v1;
  v2 = a1[3];
  v4[2] = a1[2];
  v4[3] = v2;
  return Gradient.View.typedConfiguration.setter((uint64_t)v4);
}

uint64_t sub_100325558@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  id v10;
  _BYTE v12[24];

  a1[3] = (uint64_t)&type metadata for Gradient;
  a1[4] = sub_100325E54();
  v3 = swift_allocObject(&unk_100463F00, 80, 7);
  *a1 = v3;
  v4 = v1 + OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration;
  swift_beginAccess(v1 + OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration, v12, 0, 0);
  v6 = *(void **)v4;
  v5 = *(_QWORD *)(v4 + 8);
  v8 = *(_QWORD *)(v4 + 16);
  v7 = *(_QWORD *)(v4 + 24);
  *(_QWORD *)(v3 + 16) = *(_QWORD *)v4;
  *(_QWORD *)(v3 + 24) = v5;
  *(_QWORD *)(v3 + 32) = v8;
  *(_QWORD *)(v3 + 40) = v7;
  v9 = *(_OWORD *)(v4 + 48);
  *(_OWORD *)(v3 + 48) = *(_OWORD *)(v4 + 32);
  *(_OWORD *)(v3 + 64) = v9;
  swift_bridgeObjectRetain();
  v10 = v6;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_10032560C(_QWORD *a1)
{
  uint64_t v2;
  _OWORD v4[4];
  _BYTE v5[40];
  _OWORD v6[4];

  sub_1000244B0((uint64_t)a1, (uint64_t)v5);
  v2 = sub_100005574(&qword_100499710);
  swift_dynamicCast(v4, v5, v2, &type metadata for Gradient, 7);
  v6[0] = v4[0];
  v6[1] = v4[1];
  v6[2] = v4[2];
  v6[3] = v4[3];
  Gradient.View.typedConfiguration.setter((uint64_t)v6);
  return sub_10000682C(a1);
}

void (*sub_100325694(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  id v11;

  v3 = malloc(0x158uLL);
  *a1 = v3;
  v3[42] = v1;
  v3[32] = &type metadata for Gradient;
  v3[33] = sub_100325E54();
  v4 = swift_allocObject(&unk_100463F00, 80, 7);
  v3[29] = v4;
  v5 = v1 + OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration;
  swift_beginAccess(v5, v3 + 39, 0, 0);
  v7 = *(void **)v5;
  v6 = *(_QWORD *)(v5 + 8);
  v9 = *(_QWORD *)(v5 + 16);
  v8 = *(_QWORD *)(v5 + 24);
  *(_QWORD *)(v4 + 16) = *(_QWORD *)v5;
  *(_QWORD *)(v4 + 24) = v6;
  *(_QWORD *)(v4 + 32) = v9;
  *(_QWORD *)(v4 + 40) = v8;
  v10 = *(_OWORD *)(v5 + 48);
  *(_OWORD *)(v4 + 48) = *(_OWORD *)(v5 + 32);
  *(_OWORD *)(v4 + 64) = v10;
  swift_bridgeObjectRetain();
  v11 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_100325764;
}

void sub_100325764(void **a1, char a2)
{
  _OWORD *v2;
  _OWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;

  v2 = *a1;
  v3 = (char *)*a1 + 128;
  v4 = (uint64_t)*a1 + 192;
  v5 = (char *)*a1 + 232;
  if ((a2 & 1) != 0)
  {
    sub_1000244B0((uint64_t)*a1 + 232, (uint64_t)(v2 + 17));
    sub_1000244B0((uint64_t)(v2 + 17), v4);
    v6 = sub_100005574(&qword_100499710);
    swift_dynamicCast(v3, v4, v6, &type metadata for Gradient, 7);
    v7 = v3[1];
    *v2 = *v3;
    v2[1] = v7;
    v8 = v3[3];
    v2[2] = v3[2];
    v2[3] = v8;
    Gradient.View.typedConfiguration.setter((uint64_t)v2);
    sub_10000682C((_QWORD *)v2 + 34);
  }
  else
  {
    sub_1000244B0((uint64_t)*a1 + 232, v4);
    v9 = sub_100005574(&qword_100499710);
    swift_dynamicCast(v3, v4, v9, &type metadata for Gradient, 7);
    v10 = v3[1];
    v2[4] = *v3;
    v2[5] = v10;
    v11 = v3[3];
    v2[6] = v3[2];
    v2[7] = v11;
    Gradient.View.typedConfiguration.setter((uint64_t)(v2 + 4));
  }
  sub_10000682C(v5);
  free(v2);
}

id sub_100325870()
{
  __int128 *v0;
  __int128 v1;
  __int128 v2;
  objc_class *v3;
  char *v4;
  char *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  objc_super v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;

  v1 = v0[1];
  v15 = *v0;
  v16 = v1;
  v2 = v0[3];
  v17 = v0[2];
  v18 = v2;
  v3 = (objc_class *)type metadata accessor for Gradient.View();
  v4 = (char *)objc_allocWithZone(v3);
  v5 = &v4[OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration];
  v6 = v18;
  v8 = v15;
  v7 = v16;
  *((_OWORD *)v5 + 2) = v17;
  *((_OWORD *)v5 + 3) = v6;
  *(_OWORD *)v5 = v8;
  *((_OWORD *)v5 + 1) = v7;
  sub_100324E7C((void **)&v15);
  v14.receiver = v4;
  v14.super_class = v3;
  v9 = objc_msgSendSuper2(&v14, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v10 = objc_msgSend(v9, "layer");
  v11 = objc_opt_self(CAGradientLayer);
  v12 = (void *)swift_dynamicCastObjCClassUnconditional(v10, v11, 0, 0, 0);
  sub_1003249D0(v12);

  sub_100325DA8(&qword_10049FD78, (uint64_t)&protocol conformance descriptor for Gradient.View);
  return v9;
}

uint64_t sub_100325970@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  id v7;

  v3 = *(void **)v1;
  v2 = *(_QWORD *)(v1 + 8);
  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v4;
  v6 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRetain();
  v7 = v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

BOOL sub_1003259BC(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[4];
  _OWORD v8[4];

  v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  v3 = a1[3];
  v7[2] = a1[2];
  v7[3] = v3;
  v4 = a2[1];
  v8[0] = *a2;
  v8[1] = v4;
  v5 = a2[3];
  v8[2] = a2[2];
  v8[3] = v5;
  return _s11MusicCoreUI8GradientV23__derived_struct_equalsySbAC_ACtFZ_0((uint64_t)v7, (uint64_t)v8);
}

uint64_t static Gradient.vertical(colors:locations:interpolations:)@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, __n128 *a4@<X8>)
{
  return sub_100325A2C(a1, a2, a3, a4, (__n128)xmmword_100395470, (__n128)xmmword_1003952F0);
}

uint64_t static Gradient.horizontal(colors:locations:interpolations:)@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, __n128 *a4@<X8>)
{
  return sub_100325A2C(a1, a2, a3, a4, (__n128)xmmword_100384D10, (__n128)xmmword_100395480);
}

uint64_t sub_100325A2C@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, __n128 *a4@<X8>, __n128 a5@<Q0>, __n128 a6@<Q1>)
{
  NSString *v6;

  a4->n128_u64[0] = (unint64_t)kCAGradientLayerAxial;
  a4->n128_u64[1] = a1;
  a4[1].n128_u64[0] = a2;
  a4[1].n128_u64[1] = a3;
  a4[2] = a5;
  a4[3] = a6;
  v6 = kCAGradientLayerAxial;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

Swift::Void __swiftcall Gradient.flip()()
{
  uint64_t v0;
  __int128 v1;

  v1 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 32) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 48) = v1;
}

__n128 Gradient.flipped()@<Q0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  __int128 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 result;
  __int128 v9;
  __n128 v10;

  v2 = v1;
  v4 = *((_QWORD *)v1 + 3);
  v5 = *((_QWORD *)v2 + 2);
  v9 = *v2;
  v10 = (__n128)v2[3];
  v6 = *((_QWORD *)v2 + 4);
  v7 = *((_QWORD *)v2 + 5);
  sub_100324E7C((void **)v2);
  *(_OWORD *)a1 = v9;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v4;
  result = v10;
  *(__n128 *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 48) = v6;
  *(_QWORD *)(a1 + 56) = v7;
  return result;
}

BOOL _s11MusicCoreUI8GradientV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  _BOOL8 result;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  id v21;
  id v22;

  v4 = *(void **)a1;
  v21 = *(id *)a2;
  v22 = v4;
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v7 = v6;
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  if (v5 == v8 && v7 == v9)
  {
    sub_1000BC564(&v22);
    sub_1000BC564(&v21);
    swift_bridgeObjectRelease_n(v7, 2);
    sub_100222190(&v21);
    sub_100222190(&v22);
LABEL_8:
    v13 = *(_QWORD *)(a2 + 8);
    if (*(_QWORD *)(a1 + 8))
    {
      if (!v13)
        return 0;
      swift_bridgeObjectRetain();
      v14 = swift_bridgeObjectRetain();
      v15 = sub_1002528AC(v14, v13);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v15 & 1) == 0)
        return 0;
    }
    else if (v13)
    {
      return 0;
    }
    v16 = *(_QWORD *)(a1 + 16);
    v17 = *(_QWORD *)(a2 + 16);
    if (v16)
    {
      if (!v17 || !sub_1002528C0(v16, v17))
        return 0;
    }
    else if (v17)
    {
      return 0;
    }
    v18 = *(_QWORD *)(a2 + 24);
    if (*(_QWORD *)(a1 + 24))
    {
      if (!v18)
        return 0;
      swift_bridgeObjectRetain();
      v19 = swift_bridgeObjectRetain();
      v20 = sub_10025292C(v19, v18);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v20 & 1) == 0)
        return 0;
      return *(double *)(a1 + 32) == *(double *)(a2 + 32)
          && *(double *)(a1 + 40) == *(double *)(a2 + 40)
          && *(double *)(a1 + 48) == *(double *)(a2 + 48)
          && *(double *)(a1 + 56) == *(double *)(a2 + 56);
    }
    if (!v18)
      return *(double *)(a1 + 32) == *(double *)(a2 + 32)
          && *(double *)(a1 + 40) == *(double *)(a2 + 40)
          && *(double *)(a1 + 48) == *(double *)(a2 + 48)
          && *(double *)(a1 + 56) == *(double *)(a2 + 56);
    return 0;
  }
  v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v7, v8, v9, 0);
  sub_1000BC564(&v22);
  sub_1000BC564(&v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100222190(&v21);
  sub_100222190(&v22);
  result = 0;
  if ((v11 & 1) != 0)
    goto LABEL_8;
  return result;
}

unint64_t sub_100325CEC()
{
  unint64_t result;

  result = qword_10049FD30;
  if (!qword_10049FD30)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Gradient, &type metadata for Gradient);
    atomic_store(result, (unint64_t *)&qword_10049FD30);
  }
  return result;
}

uint64_t sub_100325D30(uint64_t a1)
{
  uint64_t result;

  result = sub_100325DA8(&qword_10049FD78, (uint64_t)&protocol conformance descriptor for Gradient.View);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for Gradient.View()
{
  return objc_opt_self(_TtCV11MusicCoreUI8Gradient4View);
}

uint64_t sub_100325D84()
{
  return sub_100325DA8(&qword_10049FD80, (uint64_t)&protocol conformance descriptor for Gradient.View);
}

uint64_t sub_100325DA8(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for Gradient.View();
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100325DE4(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_100325E10();
  result = sub_100325E54();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_100325E10()
{
  unint64_t result;

  result = qword_10049FDB0;
  if (!qword_10049FDB0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Gradient, &type metadata for Gradient);
    atomic_store(result, (unint64_t *)&qword_10049FDB0);
  }
  return result;
}

unint64_t sub_100325E54()
{
  unint64_t result;

  result = qword_10049FDB8;
  if (!qword_10049FDB8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Gradient, &type metadata for Gradient);
    atomic_store(result, (unint64_t *)&qword_10049FDB8);
  }
  return result;
}

uint64_t destroy for Gradient(uint64_t a1)
{

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
}

uint64_t initializeWithCopy for Gradient(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  id v7;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  v7 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Gradient(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v8);
  v9 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v9);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  return a1;
}

uint64_t assignWithTake for Gradient(uint64_t a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  v5 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];
  swift_bridgeObjectRelease(v5);
  v6 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v6;
  return a1;
}

ValueMetadata *type metadata accessor for Gradient()
{
  return &type metadata for Gradient;
}

uint64_t sub_100326040()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 80, 7);
}

uint64_t *UIImagePickerController.profileImagePickerProperties.unsafeMutableAddressor()
{
  if (qword_100498C50 != -1)
    swift_once(&qword_100498C50, sub_100329540);
  return &static UIImagePickerController.profileImagePickerProperties;
}

int *ImagePicker.init(pickedImage:sourceType:shouldPresent:didPickImage:editingControllerProperties:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v21;
  int *result;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  char *v27;

  *a9 = swift_getKeyPath(&unk_10039E810);
  v21 = sub_100005574(&qword_10049F780);
  swift_storeEnumTagMultiPayload(a9, v21, 0);
  result = (int *)type metadata accessor for ImagePicker(0);
  v23 = (_QWORD *)((char *)a9 + result[7]);
  v24 = result[9];
  v25 = (_QWORD *)((char *)a9 + result[5]);
  *v25 = a1;
  v25[1] = a2;
  v25[2] = a3;
  v26 = (_QWORD *)((char *)a9 + result[6]);
  *v26 = a4;
  v26[1] = a5;
  v26[2] = a6;
  v26[3] = a7;
  v27 = (char *)a9 + result[8];
  *(_QWORD *)v27 = a8;
  *((_QWORD *)v27 + 1) = a10;
  v27[16] = a11;
  *v23 = a12;
  v23[1] = a13;
  *(_QWORD *)((char *)a9 + v24) = a14;
  return result;
}

id ImagePicker.makeUIViewController(context:)()
{
  return objc_msgSend(objc_allocWithZone((Class)UIViewController), "init");
}

void ImagePicker.updateUIViewController(_:context:)(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  uint64_t v30;
  id v31;
  Class isa;
  id v33;
  uint64_t v34;
  void *v35;
  id v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  Class v45;
  Swift::OpaquePointer v46;
  id v47;
  id v48;
  void *v49;
  id v50;
  id v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  id v61;
  void *v62;
  void *v63;
  void *v64;
  id v65;
  void *v66;
  id v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  __int128 v78;
  _QWORD v79[2];

  v3 = v2;
  v75 = a2;
  v70 = type metadata accessor for PHPickerConfiguration.AssetRepresentationMode(0);
  v5 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin();
  v7 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_10049FDF8);
  __chkstk_darwin();
  v9 = (char *)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for PHPickerConfiguration(0);
  v71 = *(_QWORD *)(v10 - 8);
  v72 = v10;
  __chkstk_darwin();
  v12 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v74 = (char *)&v68 - v13;
  v73 = type metadata accessor for UTType(0);
  v14 = *(_QWORD *)(v73 - 8);
  __chkstk_darwin();
  v16 = (char *)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (int *)type metadata accessor for ImagePicker(0);
  v18 = v2 + v17[8];
  v19 = *(void **)v18;
  v20 = *(_QWORD *)(v18 + 8);
  LOBYTE(v18) = *(_BYTE *)(v18 + 16);
  v76 = v19;
  v77 = v20;
  LOBYTE(v78) = v18;
  v21 = sub_100005574(&qword_10049FE00);
  Binding.wrappedValue.getter(v79, v21);
  if (LOBYTE(v79[0]) != 1)
    return;
  v22 = objc_msgSend(a1, "presentedViewController");

  if (v22)
    return;
  v69 = a1;
  v23 = v3 + v17[6];
  v24 = *(_QWORD *)(v23 + 8);
  v76 = *(void **)v23;
  v77 = v24;
  v78 = *(_OWORD *)(v23 + 16);
  v25 = sub_100005574(&qword_10049FE08);
  Binding.wrappedValue.getter(v79, v25);
  if (v79[0])
  {
    if (v79[0] != 1)
    {
      v26 = v69;
      if (v79[0] != 2)
      {
        v64 = (void *)v79[1];
        swift_bridgeObjectRelease();
        v65 = objc_msgSend(v26, "view");
        if (v65)
        {
          v66 = v65;
          v67 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
          objc_msgSend(v66, "setBackgroundColor:", v67);

          return;
        }
        goto LABEL_20;
      }
      v27 = objc_msgSend(v69, "view");
      if (v27)
      {
        v28 = v27;
        v29 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
        objc_msgSend(v28, "setBackgroundColor:", v29);

        v30 = sub_100005574(&qword_10049FE10);
        *(_OWORD *)(swift_allocObject(v30, ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(_QWORD *)(v14 + 72), *(unsigned __int8 *)(v14 + 80) | 7)+ 16) = xmmword_100384A80;
        static UTType.image.getter();
        v31 = objc_allocWithZone((Class)UIDocumentPickerViewController);
        isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        v33 = objc_msgSend(v31, "initForOpeningContentTypes:asCopy:", isa, 1);

        v34 = sub_100005574(&qword_10049FE18);
        UIViewControllerRepresentableContext.coordinator.getter(&v76, v34);
        v35 = v76;
        objc_msgSend(v33, "setDelegate:", v76);

        objc_msgSend(v33, "_setAutomaticallyDismissesAfterCompletion:", 0);
        objc_msgSend(v26, "presentViewController:animated:completion:", v33, 1, 0);

        return;
      }
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
      return;
    }
    v47 = v69;
    v48 = objc_msgSend(v69, "view");
    if (!v48)
      goto LABEL_19;
    v49 = v48;
    v50 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
    objc_msgSend(v49, "setBackgroundColor:", v50);

    v51 = objc_msgSend((id)objc_opt_self(PHPhotoLibrary), "sharedPhotoLibrary");
    v52 = v74;
    v53 = PHPickerConfiguration.init(photoLibrary:)(v51);
    static PHPickerFilter.images.getter(v53);
    v54 = type metadata accessor for PHPickerFilter(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v9, 0, 1, v54);
    PHPickerConfiguration.filter.setter(v9);
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for PHPickerConfiguration.AssetRepresentationMode.current(_:), v70);
    PHPickerConfiguration.preferredAssetRepresentationMode.setter(v7);
    sub_1000087DC(0, &qword_10049FE20, PHPickerViewController_ptr);
    v56 = v71;
    v55 = v72;
    (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v12, v52, v72);
    v57 = (void *)PHPickerViewController.init(configuration:)(v12);
    v58 = sub_100005574(&qword_10049FE18);
    UIViewControllerRepresentableContext.coordinator.getter(&v76, v58);
    v59 = v76;
    v60 = sub_100006924(&qword_10049FE28, type metadata accessor for ImagePicker.Coordinator, (uint64_t)&protocol conformance descriptor for ImagePicker.Coordinator);
    PHPickerViewController.delegate.setter(v59, v60);
    v61 = objc_msgSend(v57, "presentationController");
    if (v61)
    {
      v62 = v61;
      UIViewControllerRepresentableContext.coordinator.getter(&v76, v58);
      v63 = v76;
      objc_msgSend(v62, "setDelegate:", v76);

    }
    objc_msgSend(v47, "presentViewController:animated:completion:", v57, 1, 0);

    (*(void (**)(char *, uint64_t))(v56 + 8))(v74, v55);
  }
  else
  {
    v36 = objc_msgSend(objc_allocWithZone((Class)UIImagePickerController), "init");
    objc_msgSend(v36, "setSourceType:", 1);
    v37 = sub_100005574(&qword_10049FE18);
    UIViewControllerRepresentableContext.coordinator.getter(&v76, v37);
    v38 = v76;
    objc_msgSend(v36, "setDelegate:", v76);

    objc_msgSend(v36, "setAllowsEditing:", 1);
    v39 = sub_100005574(&qword_100499F90);
    v40 = swift_allocObject(v39, 48, 7);
    *(_OWORD *)(v40 + 16) = xmmword_100384A80;
    v41 = static UTType.image.getter();
    v42 = UTType.identifier.getter(v41);
    v44 = v43;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v73);
    *(_QWORD *)(v40 + 32) = v42;
    *(_QWORD *)(v40 + 40) = v44;
    v45 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v36, "setMediaTypes:", v45);

    v46._rawValue = *(void **)(v3 + v17[9]);
    if (v46._rawValue)
      UIImagePickerController.setProperties(_:)(v46);
    objc_msgSend(v69, "presentViewController:animated:completion:", v36, 1, 0);

  }
}

Swift::Void __swiftcall UIImagePickerController.setProperties(_:)(Swift::OpaquePointer a1)
{
  void *v1;
  id v3;
  void *v4;
  _QWORD *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  int64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  char v19;
  uint64_t v20;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v22;
  unint64_t v23;
  uint64_t v24;
  _BOOL8 v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  NSDictionary v33;
  id v34;
  _OWORD v35[2];
  __int128 v36;
  void *v37;
  _QWORD v38[5];

  v3 = objc_msgSend(v1, "_properties");
  v34 = v1;
  if (v3)
  {
    v4 = v3;
    v5 = (_QWORD *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v3, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  }
  else
  {
    v5 = 0;
  }
  v6 = (char *)a1._rawValue + 64;
  v7 = 1 << *((_BYTE *)a1._rawValue + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *((_QWORD *)a1._rawValue + 8);
  v10 = (unint64_t)(v7 + 63) >> 6;
  swift_bridgeObjectRetain();
  v11 = 0;
  while (1)
  {
    while (1)
    {
      v13 = v5;
      if (!v9)
        break;
      v14 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v15 = v14 | (v11 << 6);
      v5 = 0;
      if (v13)
        goto LABEL_26;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_42;
    if (v16 >= v10)
      break;
    v17 = *(_QWORD *)&v6[8 * v16];
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v10)
        break;
      v17 = *(_QWORD *)&v6[8 * v11];
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v10)
          break;
        v17 = *(_QWORD *)&v6[8 * v11];
        if (!v17)
        {
          v18 = v16 + 3;
          if (v18 >= v10)
            break;
          v17 = *(_QWORD *)&v6[8 * v18];
          if (!v17)
          {
            while (1)
            {
              v11 = v18 + 1;
              if (__OFADD__(v18, 1))
                goto LABEL_44;
              if (v11 >= v10)
                goto LABEL_37;
              v17 = *(_QWORD *)&v6[8 * v11];
              ++v18;
              if (v17)
                goto LABEL_25;
            }
          }
          v11 = v18;
        }
      }
    }
LABEL_25:
    v9 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
    v5 = 0;
    if (v13)
    {
LABEL_26:
      v19 = *(_BYTE *)(*((_QWORD *)a1._rawValue + 7) + v15);
      v20 = *(_QWORD *)(*((_QWORD *)a1._rawValue + 6) + 16 * v15 + 8);
      *(_QWORD *)&v36 = *(_QWORD *)(*((_QWORD *)a1._rawValue + 6) + 16 * v15);
      *((_QWORD *)&v36 + 1) = v20;
      swift_bridgeObjectRetain();
      AnyHashable.init<A>(_:)(v38, &v36, &type metadata for String, &protocol witness table for String);
      v37 = &type metadata for Bool;
      LOBYTE(v36) = v19;
      sub_10009B168(&v36, v35);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v13);
      v23 = sub_1000A580C((uint64_t)v38);
      v24 = v13[2];
      v25 = (v22 & 1) == 0;
      v26 = v24 + v25;
      if (__OFADD__(v24, v25))
      {
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for AnyHashable);
        __break(1u);
        return;
      }
      v27 = v22;
      if (v13[3] >= v26)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v5 = v13;
          if ((v22 & 1) != 0)
            goto LABEL_7;
        }
        else
        {
          sub_10025BC48();
          v5 = v13;
          if ((v27 & 1) != 0)
            goto LABEL_7;
        }
      }
      else
      {
        sub_10025AF6C(v26, isUniquelyReferenced_nonNull_native);
        v28 = sub_1000A580C((uint64_t)v38);
        if ((v27 & 1) != (v29 & 1))
          goto LABEL_45;
        v23 = v28;
        v5 = v13;
        if ((v27 & 1) != 0)
        {
LABEL_7:
          v12 = (_QWORD *)(v5[7] + 32 * v23);
          sub_10000682C(v12);
          sub_10009B168(v35, v12);
          goto LABEL_8;
        }
      }
      v5[(v23 >> 6) + 8] |= 1 << v23;
      sub_10009B414((uint64_t)v38, v5[6] + 40 * v23);
      sub_10009B168(v35, (_OWORD *)(v5[7] + 32 * v23));
      v30 = v5[2];
      v31 = __OFADD__(v30, 1);
      v32 = v30 + 1;
      if (v31)
        goto LABEL_43;
      v5[2] = v32;
LABEL_8:
      swift_bridgeObjectRelease();
      sub_10009B178((uint64_t)v38);
    }
  }
LABEL_37:
  swift_release(a1._rawValue);
  if (v5)
  {
    swift_bridgeObjectRetain();
    v33.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v33.super.isa = 0;
  }
  objc_msgSend(v34, "_setProperties:", v33.super.isa);
  swift_bridgeObjectRelease();

}

Swift::Void __swiftcall ImagePicker.Coordinator.imagePickerController(_:didFinishPickingMediaWithInfo:)(UIImagePickerController _, Swift::OpaquePointer didFinishPickingMediaWithInfo)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  NSString *v11;
  unint64_t v12;
  char v13;
  NSString *v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  void *v18;
  id v19;
  NSString *v20;
  unint64_t v21;
  char v22;
  Swift::String v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  Swift::String v27;
  Swift::String v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, __n128);
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  __n128 v36;
  id v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  id v49;
  void (*v50)(id, _QWORD);
  uint64_t v51;
  id v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  unint64_t v58;
  id v59;
  void *v60;
  id v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  void *v71;
  id v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD v77[2];
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  char v82;

  v3 = v2;
  v6 = type metadata accessor for ImagePicker(0);
  __chkstk_darwin();
  v8 = (char *)v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v10 = (char *)v77 - v9;
  if (*((_QWORD *)didFinishPickingMediaWithInfo._rawValue + 2))
  {
    v11 = UIImagePickerControllerEditedImage;
    v12 = sub_1000A5994((uint64_t)v11);
    if ((v13 & 1) != 0)
    {
      sub_10000684C(*((_QWORD *)didFinishPickingMediaWithInfo._rawValue + 7) + 32 * v12, (uint64_t)&v78);

      if (*((_QWORD *)&v79 + 1))
      {
        sub_10009B168(&v78, &v80);
        goto LABEL_13;
      }
    }
    else
    {
      v78 = 0u;
      v79 = 0u;

    }
    if (*((_QWORD *)didFinishPickingMediaWithInfo._rawValue + 2))
    {
      v14 = UIImagePickerControllerOriginalImage;
      v15 = sub_1000A5994((uint64_t)v14);
      if ((v16 & 1) != 0)
      {
        sub_10000684C(*((_QWORD *)didFinishPickingMediaWithInfo._rawValue + 7) + 32 * v15, (uint64_t)&v80);
      }
      else
      {
        v80 = 0u;
        v81 = 0u;
      }

      goto LABEL_12;
    }
  }
  else
  {
    v78 = 0u;
    v79 = 0u;
  }
  v80 = 0u;
  v81 = 0u;
LABEL_12:
  sub_100008758((uint64_t)&v78, &qword_10049B130);
LABEL_13:
  if (!*((_QWORD *)&v81 + 1))
  {
    sub_100008758((uint64_t)&v80, &qword_10049B130);
LABEL_19:
    *(_QWORD *)&v80 = 0;
    *((_QWORD *)&v80 + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(61);
    v23._countAndFlagsBits = 0xD00000000000002ALL;
    v23._object = (void *)0x80000001003BAEB0;
    String.append(_:)(v23);
    type metadata accessor for InfoKey(0);
    v25 = v24;
    v26 = sub_100006924(&qword_10049FE30, (uint64_t (*)(uint64_t))type metadata accessor for InfoKey, (uint64_t)&unk_10039675C);
    v27._countAndFlagsBits = Dictionary.description.getter(didFinishPickingMediaWithInfo._rawValue, v25, (char *)&type metadata for Any + 8, v26);
    String.append(_:)(v27);
    swift_bridgeObjectRelease();
    v28._object = (void *)0x80000001003BAEE0;
    v28._countAndFlagsBits = 0xD000000000000011;
    String.append(_:)(v28);
    v29 = *((_QWORD *)&v80 + 1);
    v30 = *(void (**)(uint64_t, uint64_t, __n128))(v3
                                                          + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_pickHandler);
    if (v30)
    {
      v31 = v80;
      v32 = *(_QWORD *)(v3 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_pickHandler + 8);
      v33 = sub_1003295D0();
      v34 = swift_allocError(&type metadata for ImagePicker.Coordinator.ImagePickerError, v33, 0, 0);
      *v35 = v31;
      v35[1] = v29;
      v36 = swift_retain(v32);
      v30(v34, 1, v36);
      sub_10003A5C8((uint64_t)v30, v32);
      swift_errorRelease(v34);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    return;
  }
  v17 = sub_1000087DC(0, &qword_10049FE40, UIImage_ptr);
  if ((swift_dynamicCast(&v78, &v80, (char *)&type metadata for Any + 8, v17, 6) & 1) == 0)
    goto LABEL_19;
  v18 = (void *)v78;
  if (!*((_QWORD *)didFinishPickingMediaWithInfo._rawValue + 2))
  {
    v80 = 0u;
    v81 = 0u;
    v37 = (id)v78;
    if (*((_QWORD *)&v81 + 1))
      goto LABEL_27;
LABEL_24:
    sub_100008758((uint64_t)&v80, &qword_10049B130);
LABEL_29:
    v48 = 1;
    v41 = 0;
    v43 = 0;
    v45 = 0;
    v47 = 0;
    goto LABEL_30;
  }
  v19 = (id)v78;
  v20 = UIImagePickerControllerCropRect;
  v21 = sub_1000A5994((uint64_t)v20);
  if ((v22 & 1) != 0)
  {
    sub_10000684C(*((_QWORD *)didFinishPickingMediaWithInfo._rawValue + 7) + 32 * v21, (uint64_t)&v80);
  }
  else
  {
    v80 = 0u;
    v81 = 0u;
  }

  if (!*((_QWORD *)&v81 + 1))
    goto LABEL_24;
LABEL_27:
  v38 = sub_1000087DC(0, (unint64_t *)&unk_10049FE48, NSValue_ptr);
  if ((swift_dynamicCast(&v78, &v80, (char *)&type metadata for Any + 8, v38, 6) & 1) == 0)
    goto LABEL_29;
  v39 = (void *)v78;
  objc_msgSend((id)v78, "CGRectValue");
  v41 = v40;
  v43 = v42;
  v45 = v44;
  v47 = v46;

  v48 = 0;
LABEL_30:
  *(_QWORD *)&v80 = v41;
  *((_QWORD *)&v80 + 1) = v43;
  *(_QWORD *)&v81 = v45;
  *((_QWORD *)&v81 + 1) = v47;
  v82 = v48;
  v49 = UIImage.centerCropIfNeeded(imageRect:)((uint64_t)&v80);

  v50 = *(void (**)(id, _QWORD))(v3 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_pickHandler);
  if (v50)
  {
    v51 = *(_QWORD *)(v3 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_pickHandler + 8);
    v52 = v49;
    sub_10003A434((uint64_t)v50, v51);
    v50(v49, 0);
    sub_10003A5C8((uint64_t)v50, v51);

  }
  v53 = v3 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_imagePicker;
  sub_100329614(v53, (uint64_t)v10);
  v54 = &v10[*(int *)(v6 + 24)];
  v55 = *((_QWORD *)v54 + 1);
  *(_QWORD *)&v78 = *(_QWORD *)v54;
  *((_QWORD *)&v78 + 1) = v55;
  v79 = *((_OWORD *)v54 + 1);
  v56 = sub_100005574(&qword_10049FE08);
  Binding.wrappedValue.getter(v77, v56);
  v58 = v77[0];
  v57 = (void *)v77[1];
  sub_100329658((uint64_t)v10);
  if (v58 - 1 < 2)
  {
    v59 = -[objc_class presentingViewController](_.super.super.super.super.isa, "presentingViewController");
    if (!v59
      || (v60 = v59,
          v61 = objc_msgSend(v59, "presentingViewController"),
          v60,
          !v61))
    {

      return;
    }
    sub_100329614(v53, (uint64_t)v8);
    v62 = &v8[*(int *)(v6 + 32)];
    v63 = *(_QWORD *)v62;
    v64 = *((_QWORD *)v62 + 1);
    LOBYTE(v62) = v62[16];
    *(_QWORD *)&v78 = v63;
    *((_QWORD *)&v78 + 1) = v64;
    LOBYTE(v79) = (_BYTE)v62;
    LOBYTE(v77[0]) = 0;
    v65 = sub_100005574(&qword_10049FE00);
    Binding.wrappedValue.setter(v77, v65);
    objc_msgSend(v61, "dismissViewControllerAnimated:completion:", 1, 0);

    goto LABEL_42;
  }
  if (!v58)
  {
    sub_100329614(v53, (uint64_t)v8);
    v66 = &v8[*(int *)(v6 + 32)];
    v67 = *(_QWORD *)v66;
    v68 = *((_QWORD *)v66 + 1);
    LOBYTE(v66) = v66[16];
    *(_QWORD *)&v78 = v67;
    *((_QWORD *)&v78 + 1) = v68;
    LOBYTE(v79) = (_BYTE)v66;
    LOBYTE(v77[0]) = 0;
    v69 = sub_100005574(&qword_10049FE00);
    Binding.wrappedValue.setter(v77, v69);
    -[objc_class dismissViewControllerAnimated:completion:](_.super.super.super.super.isa, "dismissViewControllerAnimated:completion:", 1, 0);

LABEL_42:
    sub_100329658((uint64_t)v8);
    return;
  }
  v70 = -[objc_class presentingViewController](_.super.super.super.super.isa, "presentingViewController");
  if (v70)
  {
    v71 = v70;
    v72 = objc_msgSend(v70, "presentingViewController");

    if (v72)
    {
      sub_100329614(v53, (uint64_t)v8);
      v73 = &v8[*(int *)(v6 + 32)];
      v74 = *(_QWORD *)v73;
      v75 = *((_QWORD *)v73 + 1);
      LOBYTE(v73) = v73[16];
      *(_QWORD *)&v78 = v74;
      *((_QWORD *)&v78 + 1) = v75;
      LOBYTE(v79) = (_BYTE)v73;
      LOBYTE(v77[0]) = 0;
      v76 = sub_100005574(&qword_10049FE00);
      Binding.wrappedValue.setter(v77, v76);
      objc_msgSend(v72, "dismissViewControllerAnimated:completion:", 1, 0);

      sub_10031383C(v58, v57);
      goto LABEL_42;
    }
  }

  sub_10031383C(v58, v57);
}

id UIImage.centerCropIfNeeded(imageRect:)(uint64_t a1)
{
  double v1;
  double v2;
  double v3;
  double v4;
  id result;
  id v6;
  uint64_t v7;
  double v8;
  _BYTE v9[16];
  double v10;
  double v11;
  char v12;

  sub_100293DE8(a1, (uint64_t)v9);
  if ((v12 & 1) != 0)
  {
    objc_msgSend(v6, "size");
    v2 = v1;
    v4 = v3;
  }
  else
  {
    v2 = v10;
    v4 = v11;
  }
  v8 = v4;
  v7 = 0;
  if ((static ApproximatelyEquatable.!=~ infix(_:_:)(&v8, &v7) & 1) == 0)
    return v6;
  if (vabdd_f64(1.0, v2 / v4) <= 0.05)
    return v6;
  result = (id)UIImage.byCroppingToUniformCenter()();
  if (!result)
    return v6;
  return result;
}

Swift::Void __swiftcall ImagePicker.Coordinator.imagePickerControllerDidCancel(_:)(UIImagePickerController a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  Class isa;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  void *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  _QWORD v32[2];

  v3 = type metadata accessor for ImagePicker(0);
  __chkstk_darwin();
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v7 = (char *)&v27 - v6;
  v8 = -[objc_class presentingViewController](a1.super.super.super.super.isa, "presentingViewController");
  if (v8)
  {
    v9 = v8;
    objc_opt_self(PHPickerViewController);
    v10 = swift_dynamicCastObjCClass(v9);
    if (v10)
    {
      v11 = (uint64_t *)(v1 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_selectedPhotoIdentifier);
      v12 = *(_QWORD *)(v1 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_selectedPhotoIdentifier + 8);
      if (v12)
      {
        v13 = (void *)v10;
        v28 = *v11;
        v14 = sub_100005574(&qword_100499F90);
        v15 = swift_allocObject(v14, 48, 7);
        *(_OWORD *)(v15 + 16) = xmmword_100384A80;
        *(_QWORD *)(v15 + 32) = v28;
        *(_QWORD *)(v15 + 40) = v12;
        swift_bridgeObjectRetain();
        isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        objc_msgSend(v13, "deselectAssetsWithIdentifiers:", isa);

        *v11 = 0;
        v11[1] = 0;
        swift_bridgeObjectRelease();
        objc_msgSend(v13, "setModalInPresentation:", 0);
      }
    }

  }
  v17 = v1 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_imagePicker;
  sub_100329614(v1 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_imagePicker, (uint64_t)v7);
  v18 = &v7[*(int *)(v3 + 24)];
  v19 = *((_QWORD *)v18 + 1);
  v29 = *(_QWORD *)v18;
  v30 = v19;
  v31 = *((_OWORD *)v18 + 1);
  v20 = sub_100005574(&qword_10049FE08);
  Binding.wrappedValue.getter(v32, v20);
  v21 = v32[0];
  v22 = (void *)v32[1];
  sub_100329658((uint64_t)v7);
  if (v21 - 1 >= 2)
  {
    if (!v21)
    {
      sub_100329614(v17, (uint64_t)v5);
      v23 = &v5[*(int *)(v3 + 32)];
      v24 = *(_QWORD *)v23;
      v25 = *((_QWORD *)v23 + 1);
      LOBYTE(v23) = v23[16];
      v29 = v24;
      v30 = v25;
      LOBYTE(v31) = (_BYTE)v23;
      LOBYTE(v32[0]) = 0;
      v26 = sub_100005574(&qword_10049FE00);
      Binding.wrappedValue.setter(v32, v26);
      -[objc_class dismissViewControllerAnimated:completion:](a1.super.super.super.super.isa, "dismissViewControllerAnimated:completion:", 1, 0);
      sub_100329658((uint64_t)v5);
      return;
    }
    sub_10031383C(v21, v22);
  }
  -[objc_class dismissViewControllerAnimated:completion:](a1.super.super.super.super.isa, "dismissViewControllerAnimated:completion:", 1, 0);
}

Swift::Void __swiftcall ImagePicker.Coordinator.picker(_:didFinishPicking:)(PHPickerViewController _, Swift::OpaquePointer didFinishPicking)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  Class v22;
  void *v23;
  id v24;
  objc_class *v25;
  void *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  Class isa;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char v38;

  v5 = type metadata accessor for ImagePicker(0);
  __chkstk_darwin();
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PHPickerResult(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin();
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for UTType(0);
  v12 = __chkstk_darwin();
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*((_QWORD *)didFinishPicking._rawValue + 2))
  {
    v16 = *(unsigned __int8 *)(v9 + 80);
    v32 = v2;
    isa = _.super.super.super.isa;
    v17 = (v16 + 32) & ~v16;
    v18 = (char *)didFinishPicking._rawValue + v17;
    v34 = v12;
    v19 = v13;
    v20 = (void *)PHPickerResult.itemProvider.getter();
    static UTType.image.getter();
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))((char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v18, v8);
    v21 = swift_allocObject(&unk_100463F88, v17 + v10, v16 | 7);
    v23 = v32;
    v22 = isa;
    *(_QWORD *)(v21 + 16) = v32;
    *(_QWORD *)(v21 + 24) = v22;
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v21 + v17, v11, v8);
    v24 = v23;
    v25 = v22;
    v26 = (void *)NSItemProvider.loadDataRepresentation(for:completionHandler:)(v15, sub_1003297F8, v21);
    swift_release(v21);

    (*(void (**)(char *, uint64_t))(v19 + 8))(v15, v34);
  }
  else
  {
    sub_100329614((uint64_t)v2 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_imagePicker, (uint64_t)v7);
    v27 = &v7[*(int *)(v5 + 32)];
    v28 = *(_QWORD *)v27;
    v29 = *((_QWORD *)v27 + 1);
    LOBYTE(v27) = v27[16];
    v36 = v28;
    v37 = v29;
    v38 = (char)v27;
    v35 = 0;
    v30 = sub_100005574(&qword_10049FE00);
    Binding.wrappedValue.setter(&v35, v30);
    -[objc_class dismissViewControllerAnimated:completion:](_.super.super.super.isa, "dismissViewControllerAnimated:completion:", 1, 0);
    sub_100329658((uint64_t)v7);
  }
}

double sub_10032796C(uint64_t a1, unint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  double result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;

  v32 = a5;
  v30 = a1;
  v11 = type metadata accessor for PHPickerResult(0);
  v12 = *(_QWORD *)(v11 - 8);
  v31 = v11;
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin();
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_10049AEC0);
  __chkstk_darwin();
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a6, v11);
  type metadata accessor for MainActor(0);
  v18 = a2;
  sub_1000516E4(a1, a2);
  v19 = a3;
  swift_errorRetain(a3);
  v20 = a4;
  v21 = v32;
  v22 = static MainActor.shared.getter(v21);
  v23 = *(unsigned __int8 *)(v12 + 80);
  v24 = (v23 + 72) & ~v23;
  v25 = (char *)swift_allocObject(&unk_1004640F8, v24 + v13, v23 | 7);
  *((_QWORD *)v25 + 2) = v22;
  *((_QWORD *)v25 + 3) = &protocol witness table for MainActor;
  v26 = v31;
  *((_QWORD *)v25 + 4) = v30;
  *((_QWORD *)v25 + 5) = v18;
  *((_QWORD *)v25 + 6) = v19;
  *((_QWORD *)v25 + 7) = v20;
  *((_QWORD *)v25 + 8) = v21;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v25[v24], v14, v26);
  v27 = sub_100283A94((uint64_t)v16, (uint64_t)&unk_1004A00C8, (uint64_t)v25);
  *(_QWORD *)&result = swift_release(v27).n128_u64[0];
  return result;
}

uint64_t sub_100327B24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v8[7] = a8;
  v8[8] = v13;
  v8[5] = a6;
  v8[6] = a7;
  v8[3] = a4;
  v8[4] = a5;
  v9 = type metadata accessor for MainActor(0);
  v8[9] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  return swift_task_switch(sub_100327BA0, v10, v11);
}

uint64_t sub_100327BA0()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  id v4;
  Class isa;
  UIImage *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  NSData *v11;
  NSData *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  double v16;
  double v17;
  double v18;
  double v19;
  id v20;
  void *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  Swift::String v27;
  void (*v28)(uint64_t, uint64_t, __n128);
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  __n128 v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  Class v43;

  v1 = *(_QWORD *)(v0 + 32);
  swift_release(*(_QWORD *)(v0 + 72));
  if (v1 >> 60 != 15)
  {
    v2 = *(_QWORD *)(v0 + 24);
    v3 = *(_QWORD *)(v0 + 32);
    v4 = objc_allocWithZone((Class)UIImage);
    sub_1000516F8(v2, v3);
    isa = Data._bridgeToObjectiveC()().super.isa;
    v6 = (UIImage *)objc_msgSend(v4, "initWithData:", isa);

    if (v6)
    {
      v7 = *(_QWORD *)(v0 + 48);
      v8 = PHPickerResult.assetIdentifier.getter();
      v9 = (uint64_t *)(v7 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_selectedPhotoIdentifier);
      *v9 = v8;
      v9[1] = v10;
      swift_bridgeObjectRelease();
      v11 = UIImagePNGRepresentation(v6);
      if (v11)
      {
        v12 = v11;
        v13 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v11);
        v15 = v14;

        v16 = UIImage.centeredSquareCropRect.getter();
        v20 = sub_100328744(v16, v17, v18, v19);
        if (v20)
        {
          v21 = v20;
          v23 = *(_QWORD *)(v0 + 24);
          v22 = *(_QWORD *)(v0 + 32);
          objc_msgSend(*(id *)(v0 + 56), "presentViewController:animated:completion:", v20, 1, 0);
          objc_msgSend(v21, "becomeFirstResponder");
          sub_1000067D4(v23, v22);

        }
        else
        {
          sub_1000067D4(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
        }

        sub_1000067E8(v13, v15);
      }
      else
      {
        sub_1000067D4(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));

      }
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    sub_1000067D4(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  }
  v24 = *(_QWORD *)(v0 + 40);
  v25 = *(_QWORD *)(v0 + 48);
  _StringGuts.grow(_:)(49);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 16) = v24;
  swift_errorRetain(v24);
  v26 = sub_100005574((uint64_t *)&unk_1004A00D0);
  v27._countAndFlagsBits = String.init<A>(describing:)(v0 + 16, v26);
  String.append(_:)(v27);
  swift_bridgeObjectRelease();
  v28 = *(void (**)(uint64_t, uint64_t, __n128))(v25
                                                        + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_pickHandler);
  if (v28)
  {
    v29 = *(_QWORD *)(v25 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_pickHandler + 8);
    v30 = sub_1003295D0();
    v31 = swift_allocError(&type metadata for ImagePicker.Coordinator.ImagePickerError, v30, 0, 0);
    *v32 = 0xD00000000000002FLL;
    v32[1] = 0x80000001003BB100;
    v33 = swift_retain(v29);
    v28(v31, 1, v33);
    sub_10003A5C8((uint64_t)v28, v29);
    swift_errorRelease(v31);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v34 = *(void **)(v0 + 56);
  v35 = sub_100328854();
  objc_msgSend(v34, "presentViewController:animated:completion:", v35, 1, 0);

  v36 = PHPickerResult.assetIdentifier.getter();
  if (v37)
  {
    v38 = v36;
    v39 = v37;
    v40 = *(void **)(v0 + 56);
    v41 = sub_100005574(&qword_100499F90);
    v42 = swift_allocObject(v41, 48, 7);
    *(_OWORD *)(v42 + 16) = xmmword_100384A80;
    *(_QWORD *)(v42 + 32) = v38;
    *(_QWORD *)(v42 + 40) = v39;
    v43 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v40, "deselectAssetsWithIdentifiers:", v43);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double UIImage.centeredSquareCropRect.getter()
{
  void *v0;
  double v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  CGRect v26;
  CGRect v27;

  objc_msgSend(v0, "size");
  v2 = v1;
  objc_msgSend(v0, "size");
  v4 = v3;
  objc_msgSend(v0, "size");
  v6 = v5;
  objc_msgSend(v0, "size");
  v8 = v7;
  objc_msgSend(v0, "size");
  v10 = v9;
  v12 = v11;
  objc_msgSend(v0, "size");
  v14 = (v10 - v13) * 0.5 + 0.0;
  v16 = (v12 - v15) * 0.5 + 0.0;
  if (v6 < v8)
    v17 = v16;
  else
    v17 = 0.0;
  if (v6 < v8)
    v18 = 0.0;
  else
    v18 = v14;
  if (v4 >= v2)
    v19 = v2;
  else
    v19 = v4;
  v20 = v19;
  v26 = CGRectIntegral(*(CGRect *)(&v17 - 1));
  x = v26.origin.x;
  y = v26.origin.y;
  width = v26.size.width;
  height = v26.size.height;
  CGRectGetWidth(v26);
  v27.origin.x = x;
  v27.origin.y = y;
  v27.size.width = width;
  v27.size.height = height;
  CGRectGetHeight(v27);
  return x;
}

Swift::Void __swiftcall ImagePicker.Coordinator.documentPicker(_:didPickDocumentsAt:)(UIDocumentPickerViewController _, Swift::OpaquePointer didPickDocumentsAt)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  objc_class *isa;
  uint64_t v16;
  id v17;
  NSString v18;
  UIImage *v19;
  id v20;
  void *v21;
  NSData *v22;
  NSData *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  double v27;
  double v28;
  double v29;
  double v30;
  id v31;
  void *v32;
  Swift::String v33;
  Swift::String v34;
  Swift::String v35;
  unint64_t v36;
  void (*v37)(uint64_t, uint64_t, __n128);
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  __n128 v43;
  char *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  unint64_t v52;
  char v53;

  v3 = v2;
  v6 = type metadata accessor for ImagePicker(0);
  __chkstk_darwin();
  v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_1004991A0);
  __chkstk_darwin();
  v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin();
  v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*((_QWORD *)didPickDocumentsAt._rawValue + 2))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
    goto LABEL_9;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v10, (char *)didPickDocumentsAt._rawValue+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)), v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
LABEL_9:
    sub_100008758((uint64_t)v10, &qword_1004991A0);
LABEL_10:
    v51 = 0;
    v52 = 0xE000000000000000;
    _StringGuts.grow(_:)(59);
    v33._countAndFlagsBits = 0xD000000000000025;
    v33._object = (void *)0x80000001003BAF00;
    String.append(_:)(v33);
    v34._countAndFlagsBits = Array.description.getter(didPickDocumentsAt._rawValue, v11);
    String.append(_:)(v34);
    swift_bridgeObjectRelease();
    v35._object = (void *)0x80000001003BAF30;
    v35._countAndFlagsBits = 0xD000000000000014;
    String.append(_:)(v35);
    v36 = v52;
    v37 = *(void (**)(uint64_t, uint64_t, __n128))(v3
                                                          + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_pickHandler);
    if (v37)
    {
      v38 = v51;
      v39 = *(_QWORD *)(v3 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_pickHandler + 8);
      v40 = sub_1003295D0();
      v41 = swift_allocError(&type metadata for ImagePicker.Coordinator.ImagePickerError, v40, 0, 0);
      *v42 = v38;
      v42[1] = v36;
      v43 = swift_retain(v39);
      v37(v41, 1, v43);
      sub_10003A5C8((uint64_t)v37, v39);
      swift_errorRelease(v41);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    sub_100329614(v3 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_imagePicker, (uint64_t)v8);
    v44 = &v8[*(int *)(v6 + 32)];
    v45 = *(_QWORD *)v44;
    v46 = *((_QWORD *)v44 + 1);
    LOBYTE(v44) = v44[16];
    v51 = v45;
    v52 = v46;
    v53 = (char)v44;
    v50 = 0;
    v47 = sub_100005574(&qword_10049FE00);
    Binding.wrappedValue.setter(&v50, v47);
    -[objc_class dismissViewControllerAnimated:completion:](_.super.super.super.isa, "dismissViewControllerAnimated:completion:", 1, 0);
    sub_100329658((uint64_t)v8);
    return;
  }
  v49 = v3;
  isa = _.super.super.super.isa;
  v16 = (*(uint64_t (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
  URL.path.getter(v16);
  v17 = objc_allocWithZone((Class)UIImage);
  v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v19 = (UIImage *)objc_msgSend(v17, "initWithContentsOfFile:", v18);

  if (!v19)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    _.super.super.super.isa = isa;
    v3 = v49;
    goto LABEL_10;
  }
  v20 = -[objc_class view](isa, "view");
  if (v20)
  {
    v21 = v20;
    objc_msgSend(v20, "endEditing:", 1);

    v22 = UIImagePNGRepresentation(v19);
    if (!v22)
    {

      goto LABEL_17;
    }
    v23 = v22;
    v24 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v22);
    v26 = v25;

    v27 = UIImage.centeredSquareCropRect.getter();
    v31 = sub_100328744(v27, v28, v29, v30);
    if (v31)
    {
      v32 = v31;
      -[objc_class presentViewController:animated:completion:](isa, "presentViewController:animated:completion:", v31, 1, 0);

      sub_1000067E8(v24, v26);
LABEL_17:
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      return;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    sub_1000067E8(v24, v26);

  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall ImagePicker.Coordinator.documentPickerWasCancelled(_:)(UIDocumentPickerViewController a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  v3 = type metadata accessor for ImagePicker(0);
  __chkstk_darwin();
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100329614(v1 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_imagePicker, (uint64_t)v5);
  v6 = &v5[*(int *)(v3 + 32)];
  v7 = *(_QWORD *)v6;
  v8 = *((_QWORD *)v6 + 1);
  LOBYTE(v6) = v6[16];
  v11 = v7;
  v12 = v8;
  v13 = (char)v6;
  HIBYTE(v10) = 0;
  v9 = sub_100005574(&qword_10049FE00);
  Binding.wrappedValue.setter((char *)&v10 + 7, v9);
  -[objc_class dismissViewControllerAnimated:completion:](a1.super.super.super.isa, "dismissViewControllerAnimated:completion:", 1, 0);
  sub_100329658((uint64_t)v5);
}

Swift::Void __swiftcall ImagePicker.Coordinator.presentationControllerDidDismiss(_:)(UIPresentationController a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v2 = v1 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_imagePicker;
  v3 = (uint64_t *)(v2 + *(int *)(type metadata accessor for ImagePicker(0) + 32));
  v4 = *v3;
  v5 = v3[1];
  LOBYTE(v3) = *((_BYTE *)v3 + 16);
  v8 = v4;
  v9 = v5;
  v10 = (char)v3;
  v7 = 0;
  v6 = sub_100005574(&qword_10049FE00);
  Binding.wrappedValue.setter(&v7, v6);
}

id sub_100328744(double a1, double a2, double a3, double a4)
{
  uint64_t v4;
  id v9;
  Class isa;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;

  type metadata accessor for ImageEditingViewController();
  v9 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  isa = Data._bridgeToObjectiveC()().super.isa;
  v11 = objc_msgSend(v9, "_initWithSourceImageData:cropRect:", isa, a1, a2, a3, a4);

  if (v11)
  {
    v12 = v11;
    objc_msgSend(v12, "setDelegate:", v4);
    objc_msgSend(v12, "setModalInPresentation:", 1);
    v13 = v4 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_imagePicker;
    if (*(_QWORD *)(v13 + *(int *)(type metadata accessor for ImagePicker(0) + 36)))
    {
      v14 = swift_bridgeObjectRetain();
      UIImagePickerController.setProperties(_:)((Swift::OpaquePointer)v14);
      swift_bridgeObjectRelease();
    }

  }
  return v11;
}

id sub_100328854()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator____lazy_storage___downloadFailureAlertController;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator____lazy_storage___downloadFailureAlertController);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator____lazy_storage___downloadFailureAlertController);
  }
  else
  {
    v4 = sub_1003288B0();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1003288B0()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE *v7;
  void (*v8)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v9;
  void (*v10)(_BYTE *, uint64_t);
  uint64_t v11;
  NSString v12;
  NSString v13;
  id v14;
  NSString v15;
  id v16;
  _BYTE v18[16];

  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v1 = &v18[-((v0 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v2 = type metadata accessor for String.LocalizationValue(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin();
  v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  v7 = &v18[-v6];
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000018, 0x80000001003BB090);
  v8 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v3 + 16);
  v8(v5, v7, v2);
  if (qword_100498860 != -1)
    swift_once(&qword_100498860, sub_100232E30);
  v9 = qword_1004A2F90;
  static Locale.current.getter((id)qword_1004A2F90);
  String.init(localized:table:bundle:locale:comment:)(v5, 0, 0, v9, v1, 0, 0, 256);
  v10 = *(void (**)(_BYTE *, uint64_t))(v3 + 8);
  v10(v7, v2);
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000042, 0x80000001003BB0B0);
  v8(v5, v7, v2);
  v11 = qword_1004A2F90;
  static Locale.current.getter((id)qword_1004A2F90);
  String.init(localized:table:bundle:locale:comment:)(v5, 0, 0, v11, v1, 0, 0, 256);
  v10(v7, v2);
  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v12, v13, 1);

  String.okButtonTitle.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v16 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v15, 1, 0);

  objc_msgSend(v14, "addAction:", v16);
  return v14;
}

void ImagePicker.Coordinator.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("MusicCoreUI.Coordinator", 23, "init()", 6, 0);
  __break(1u);
}

id ImagePicker.Coordinator.__deallocating_deinit()
{
  return sub_100005360(0, (uint64_t (*)(void))type metadata accessor for ImagePicker.Coordinator);
}

char *ImagePicker.makeCoordinator()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  objc_class *v3;
  char *v4;
  char *v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (**v11)(void *, char);
  uint64_t v12;
  uint64_t v13;
  objc_super v15;

  v1 = *(_QWORD *)(type metadata accessor for ImagePicker(0) - 8);
  v2 = *(_QWORD *)(v1 + 64);
  __chkstk_darwin();
  sub_100329614(v0, (uint64_t)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = (objc_class *)type metadata accessor for ImagePicker.Coordinator(0);
  v4 = (char *)objc_allocWithZone(v3);
  v5 = &v4[OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_pickHandler];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  v6 = &v4[OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_selectedPhotoIdentifier];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator____lazy_storage___downloadFailureAlertController] = 0;
  sub_100329614((uint64_t)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)&v4[OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_imagePicker]);
  v15.receiver = v4;
  v15.super_class = v3;
  v7 = (char *)objc_msgSendSuper2(&v15, "init");
  sub_100329658((uint64_t)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100329614(v0, (uint64_t)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(unsigned __int8 *)(v1 + 80);
  v9 = (v8 + 16) & ~v8;
  v10 = swift_allocObject(&unk_100463FB0, v9 + v2, v8 | 7);
  sub_10031B394((uint64_t)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9);
  v11 = (void (**)(void *, char))&v7[OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_pickHandler];
  v12 = *(_QWORD *)&v7[OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_pickHandler];
  v13 = *(_QWORD *)&v7[OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_pickHandler + 8];
  *v11 = sub_10032998C;
  v11[1] = (void (*)(void *, char))v10;
  sub_10003A5C8(v12, v13);
  return v7;
}

void sub_100328D94(void *a1, uint64_t a2, uint64_t a3)
{
  char v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  __int128 *v11;
  __int128 v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  void (*v16)(unint64_t, void *);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  __int128 v33;
  __int128 v34;
  unint64_t v35;
  void *v36;

  v4 = a2;
  v6 = type metadata accessor for Logger(0, a2);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((v4 & 1) != 0)
  {
    v22 = swift_errorRetain(a1);
    v24 = Logger.playlistCovers.unsafeMutableAddressor(v22, v23);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v24, v6);
    swift_errorRetain(a1);
    v25 = swift_errorRetain(a1);
    v26 = Logger.logObject.getter(v25);
    v27 = static os_log_type_t.error.getter(v26);
    if (os_log_type_enabled(v26, v27))
    {
      v28 = swift_slowAlloc(12, -1);
      v29 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v33 = v29;
      *(_DWORD *)v28 = 136446210;
      v35 = (unint64_t)a1;
      swift_errorRetain(a1);
      v30 = sub_100005574(&qword_100499F80);
      v31 = (char *)String.init<A>(describing:)(&v35, v30);
      *(_QWORD *)(v28 + 4) = sub_100249A1C(v31, v32, (uint64_t *)&v33);
      swift_bridgeObjectRelease();
      sub_1000D4F4C(a1, 1);
      sub_1000D4F4C(a1, 1);
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "ImagePicker failed with error: %{public}s", (uint8_t *)v28, 0xCu);
      swift_arrayDestroy(v29, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v29, -1, -1);
      swift_slowDealloc(v28, -1, -1);

      sub_1000D4F4C(a1, 1);
    }
    else
    {
      sub_1000D4F4C(a1, 1);
      sub_1000D4F4C(a1, 1);
      swift_errorRelease(a1);

    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else
  {
    v10 = (int *)type metadata accessor for ImagePicker(0);
    v11 = (__int128 *)(a3 + v10[5]);
    v12 = *v11;
    v13 = *((_QWORD *)v11 + 2);
    v33 = v12;
    *(_QWORD *)&v34 = v13;
    v35 = (unint64_t)a1;
    v14 = a1;
    v15 = sub_100005574((uint64_t *)&unk_1004A00B0);
    Binding.wrappedValue.setter(&v35, v15);
    v16 = *(void (**)(unint64_t, void *))(a3 + v10[7]);
    if (v16)
    {
      v17 = a3 + v10[6];
      v18 = *(_QWORD *)(v17 + 8);
      *(_QWORD *)&v33 = *(_QWORD *)v17;
      *((_QWORD *)&v33 + 1) = v18;
      v34 = *(_OWORD *)(v17 + 16);
      v19 = sub_100005574(&qword_10049FE08);
      Binding.wrappedValue.getter(&v35, v19);
      v20 = v35;
      v21 = v36;
      v16(v35, v36);
      sub_10031383C(v20, v21);
    }
  }
}

uint64_t sub_100329040(uint64_t a1, uint64_t a2)
{
  return _s11MusicCoreUI11ImagePickerV10SourceTypeO21__derived_enum_equalsySbAE_AEtFZ_0(*(_QWORD **)a1, *(void **)(a1 + 8), *(_QWORD **)a2, *(void **)(a2 + 8));
}

char *sub_100329058@<X0>(char **a1@<X8>)
{
  char *result;

  result = ImagePicker.makeCoordinator()();
  *a1 = result;
  return result;
}

uint64_t sub_10032907C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_100006924((unint64_t *)&unk_1004A00A0, type metadata accessor for ImagePicker, (uint64_t)&protocol conformance descriptor for ImagePicker);
  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_1003290E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_100006924((unint64_t *)&unk_1004A00A0, type metadata accessor for ImagePicker, (uint64_t)&protocol conformance descriptor for ImagePicker);
  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_10032914C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100006924((unint64_t *)&unk_1004A00A0, type metadata accessor for ImagePicker, (uint64_t)&protocol conformance descriptor for ImagePicker);
  UIViewControllerRepresentable.body.getter(a1, v2);
  __break(1u);
}

id ImageEditingViewController.__allocating_init(navigationBarClass:toolbarClass:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  uint64_t v3;
  uint64_t ObjCClassFromMetadata;

  v3 = a2;
  if (!a1)
  {
    ObjCClassFromMetadata = 0;
    if (!a2)
      return objc_msgSend(objc_allocWithZone(v2), "initWithNavigationBarClass:toolbarClass:", ObjCClassFromMetadata, v3);
    goto LABEL_3;
  }
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  if (v3)
LABEL_3:
    v3 = swift_getObjCClassFromMetadata();
  return objc_msgSend(objc_allocWithZone(v2), "initWithNavigationBarClass:toolbarClass:", ObjCClassFromMetadata, v3);
}

id ImageEditingViewController.init(navigationBarClass:toolbarClass:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t ObjCClassFromMetadata;
  objc_super v6;

  v3 = a2;
  if (!a1)
  {
    ObjCClassFromMetadata = 0;
    if (!a2)
      goto LABEL_4;
    goto LABEL_3;
  }
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  if (v3)
LABEL_3:
    v3 = swift_getObjCClassFromMetadata();
LABEL_4:
  v6.receiver = v2;
  v6.super_class = (Class)type metadata accessor for ImageEditingViewController();
  return objc_msgSendSuper2(&v6, "initWithNavigationBarClass:toolbarClass:", ObjCClassFromMetadata, v3);
}

id ImageEditingViewController.__allocating_init(rootViewController:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), "initWithRootViewController:", a1);

  return v3;
}

id ImageEditingViewController.init(rootViewController:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for ImageEditingViewController();
  v3 = objc_msgSendSuper2(&v5, "initWithRootViewController:", a1);

  return v3;
}

id ImageEditingViewController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  void *v3;
  NSString v5;
  id v6;
  objc_super v8;

  if (a2)
  {
    v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = 0;
  }
  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for ImageEditingViewController();
  v6 = objc_msgSendSuper2(&v8, "initWithNibName:bundle:", v5, a3);

  return v6;
}

id ImageEditingViewController.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for ImageEditingViewController();
  v3 = objc_msgSendSuper2(&v5, "initWithCoder:", a1);

  return v3;
}

id ImageEditingViewController.__deallocating_deinit(uint64_t a1)
{
  return sub_100005360(a1, type metadata accessor for ImageEditingViewController);
}

unint64_t sub_100329540()
{
  unint64_t result;

  result = sub_1002338F0((uint64_t)&off_100459FD0);
  static UIImagePickerController.profileImagePickerProperties = result;
  return result;
}

uint64_t type metadata accessor for ImagePicker(uint64_t a1)
{
  return sub_1000091AC(a1, qword_10049FED0, (uint64_t)&nominal type descriptor for ImagePicker);
}

uint64_t type metadata accessor for ImagePicker.Coordinator(uint64_t a1)
{
  return sub_1000091AC(a1, (uint64_t *)&unk_1004A0068, (uint64_t)&nominal type descriptor for ImagePicker.Coordinator);
}

uint64_t static UIImagePickerController.profileImagePickerProperties.getter()
{
  if (qword_100498C50 != -1)
    swift_once(&qword_100498C50, sub_100329540);
  return swift_bridgeObjectRetain();
}

unint64_t sub_1003295D0()
{
  unint64_t result;

  result = qword_10049FE38;
  if (!qword_10049FE38)
  {
    result = swift_getWitnessTable(&unk_10039EA34, &type metadata for ImagePicker.Coordinator.ImagePickerError);
    atomic_store(result, (unint64_t *)&qword_10049FE38);
  }
  return result;
}

uint64_t sub_100329614(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ImagePicker(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100329658(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ImagePicker(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t _s11MusicCoreUI11ImagePickerV10SourceTypeO21__derived_enum_equalsySbAE_AEtFZ_0(_QWORD *a1, void *a2, _QWORD *a3, void *a4)
{
  id v7;
  id v8;
  char v9;

  if (!a1)
    return !a3;
  if (a1 == (_QWORD *)1)
    return a3 == (_QWORD *)1;
  if (a1 == (_QWORD *)2)
    return a3 == (_QWORD *)2;
  if ((unint64_t)a3 < 3)
    return 0;
  if ((sub_100252A34(a1, a3) & 1) != 0)
  {
    if (a2)
    {
      if (a4)
      {
        sub_1000087DC(0, &qword_10049FE40, UIImage_ptr);
        v7 = a2;
        v8 = a4;
        v9 = static NSObject.== infix(_:_:)(v7, v8);

        if ((v9 & 1) != 0)
          return 1;
      }
    }
    else if (!a4)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_10032977C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for PHPickerResult(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

double sub_1003297F8(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PHPickerResult(0) - 8) + 80);
  return sub_10032796C(a1, a2, a3, *(void **)(v3 + 16), *(void **)(v3 + 24), v3 + ((v7 + 32) & ~v7));
}

uint64_t sub_100329850()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;

  v1 = (int *)type metadata accessor for ImagePicker(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = (_QWORD *)(v0 + v4);
  v7 = sub_100005574(&qword_10049F780);
  if (swift_getEnumCaseMultiPayload(v0 + v4, v7) == 1)
  {
    v8 = type metadata accessor for DismissAction(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v0 + v4, v8);
  }
  else
  {
    swift_release(*v6);
  }
  v9 = (char *)v6 + v1[5];
  swift_release(*(_QWORD *)v9);
  swift_release(*((_QWORD *)v9 + 1));

  v10 = (char *)v6 + v1[6];
  swift_release(*(_QWORD *)v10);
  swift_release(*((_QWORD *)v10 + 1));
  if (*((_QWORD *)v10 + 2) >= 3uLL)
  {
    swift_bridgeObjectRelease();

  }
  v11 = (_QWORD *)((char *)v6 + v1[7]);
  if (*v11)
    swift_release(v11[1]);
  v12 = v4 + v5;
  v13 = (_QWORD *)((char *)v6 + v1[8]);
  swift_release(*v13);
  swift_release(v13[1]);
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, v12, v3 | 7);
}

void sub_10032998C(void *a1, char a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = a2 & 1;
  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ImagePicker(0) - 8) + 80);
  sub_100328D94(a1, v4, v2 + ((v5 + 16) & ~v5));
}

uint64_t type metadata accessor for ImageEditingViewController()
{
  return objc_opt_self(_TtC11MusicCoreUI26ImageEditingViewController);
}

uint64_t sub_1003299F8()
{
  return sub_100006924(&qword_10049FE70, type metadata accessor for ImagePicker, (uint64_t)&protocol conformance descriptor for ImagePicker);
}

uint64_t *initializeBufferWithCopyOfBuffer for ImagePicker(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t *v26;
  id v27;
  void *v28;
  id v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  int *v41;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v7 = sub_100005574(&qword_10049F780);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v8 = type metadata accessor for DismissAction(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = v7;
      v11 = 1;
    }
    else
    {
      v13 = *a2;
      *a1 = *a2;
      swift_retain(v13);
      v9 = a1;
      v10 = v7;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    v14 = a3[5];
    v15 = a3[6];
    v41 = a3;
    v16 = (uint64_t *)((char *)a1 + v14);
    v17 = (uint64_t *)((char *)a2 + v14);
    v18 = *v17;
    v19 = v17[1];
    *v16 = *v17;
    v16[1] = v19;
    v20 = (void *)v17[2];
    v16[2] = (uint64_t)v20;
    v21 = (uint64_t *)((char *)a1 + v15);
    v22 = (char *)a2 + v15;
    v23 = *(uint64_t *)((char *)a2 + v15);
    v24 = *(uint64_t *)((char *)a2 + v15 + 8);
    *v21 = v23;
    v21[1] = v24;
    v26 = (unint64_t *)((char *)a2 + v15 + 16);
    v25 = *v26;
    swift_retain(v18);
    swift_retain(v19);
    v27 = v20;
    swift_retain(v23);
    swift_retain(v24);
    if (v25 >= 3)
    {
      v28 = (void *)*((_QWORD *)v22 + 3);
      v21[2] = v25;
      v21[3] = v28;
      swift_bridgeObjectRetain();
      v29 = v28;
    }
    else
    {
      *((_OWORD *)v21 + 1) = *(_OWORD *)v26;
    }
    v30 = v41[7];
    v31 = (uint64_t *)((char *)a1 + v30);
    v32 = (uint64_t *)((char *)a2 + v30);
    if (*v32)
    {
      v33 = v32[1];
      *v31 = *v32;
      v31[1] = v33;
      swift_retain(v33);
    }
    else
    {
      *(_OWORD *)v31 = *(_OWORD *)v32;
    }
    v34 = v41[8];
    v35 = v41[9];
    v36 = (char *)a1 + v34;
    v37 = (char *)a2 + v34;
    v38 = *(_QWORD *)v37;
    v39 = *((_QWORD *)v37 + 1);
    *(_QWORD *)v36 = *(_QWORD *)v37;
    *((_QWORD *)v36 + 1) = v39;
    v36[16] = v37[16];
    *(uint64_t *)((char *)a1 + v35) = *(uint64_t *)((char *)a2 + v35);
    swift_retain(v38);
    swift_retain(v39);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ImagePicker(_QWORD *a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  _QWORD *v8;
  _QWORD *v9;

  v4 = sub_100005574(&qword_10049F780);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for DismissAction(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  else
  {
    swift_release(*a1);
  }
  v6 = (char *)a1 + a2[5];
  swift_release(*(_QWORD *)v6);
  swift_release(*((_QWORD *)v6 + 1));

  v7 = (char *)a1 + a2[6];
  swift_release(*(_QWORD *)v7);
  swift_release(*((_QWORD *)v7 + 1));
  if (*((_QWORD *)v7 + 2) >= 3uLL)
  {
    swift_bridgeObjectRelease();

  }
  v8 = (_QWORD *)((char *)a1 + a2[7]);
  if (*v8)
    swift_release(v8[1]);
  v9 = (_QWORD *)((char *)a1 + a2[8]);
  swift_release(*v9);
  swift_release(v9[1]);
  return swift_bridgeObjectRelease();
}

uint64_t *initializeWithCopy for ImagePicker(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  _QWORD *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t *v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  int *v39;

  v6 = sub_100005574(&qword_10049F780);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for DismissAction(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    v11 = *a2;
    *a1 = *a2;
    swift_retain(v11);
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  v12 = a3[5];
  v13 = a3[6];
  v39 = a3;
  v14 = (uint64_t *)((char *)a1 + v12);
  v15 = (uint64_t *)((char *)a2 + v12);
  v16 = *v15;
  v17 = v15[1];
  *v14 = *v15;
  v14[1] = v17;
  v18 = (void *)v15[2];
  v14[2] = (uint64_t)v18;
  v19 = (uint64_t *)((char *)a1 + v13);
  v20 = (char *)a2 + v13;
  v21 = *(uint64_t *)((char *)a2 + v13);
  v22 = *(uint64_t *)((char *)a2 + v13 + 8);
  *v19 = v21;
  v19[1] = v22;
  v24 = (unint64_t *)((char *)a2 + v13 + 16);
  v23 = *v24;
  swift_retain(v16);
  swift_retain(v17);
  v25 = v18;
  swift_retain(v21);
  swift_retain(v22);
  if (v23 >= 3)
  {
    v26 = (void *)*((_QWORD *)v20 + 3);
    v19[2] = v23;
    v19[3] = v26;
    swift_bridgeObjectRetain();
    v27 = v26;
  }
  else
  {
    *((_OWORD *)v19 + 1) = *(_OWORD *)v24;
  }
  v28 = v39[7];
  v29 = (uint64_t *)((char *)a1 + v28);
  v30 = (uint64_t *)((char *)a2 + v28);
  if (*v30)
  {
    v31 = v30[1];
    *v29 = *v30;
    v29[1] = v31;
    swift_retain(v31);
  }
  else
  {
    *(_OWORD *)v29 = *(_OWORD *)v30;
  }
  v32 = v39[8];
  v33 = v39[9];
  v34 = (char *)a1 + v32;
  v35 = (char *)a2 + v32;
  v36 = *(_QWORD *)v35;
  v37 = *((_QWORD *)v35 + 1);
  *(_QWORD *)v34 = *(_QWORD *)v35;
  *((_QWORD *)v34 + 1) = v37;
  v34[16] = v35[16];
  *(uint64_t *)((char *)a1 + v33) = *(uint64_t *)((char *)a2 + v33);
  swift_retain(v36);
  swift_retain(v37);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for ImagePicker(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  void *v30;
  id v31;
  void *v32;
  void *v33;
  id v34;
  uint64_t v35;
  _QWORD *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  if (a1 != a2)
  {
    sub_100008758((uint64_t)a1, &qword_10049F780);
    v6 = sub_100005574(&qword_10049F780);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for DismissAction(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      v11 = *a2;
      *a1 = *a2;
      swift_retain(v11);
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  v12 = a3[5];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = *(uint64_t *)((char *)a1 + v12);
  v16 = *(uint64_t *)((char *)a2 + v12);
  *(uint64_t *)((char *)a1 + v12) = v16;
  swift_retain(v16);
  swift_release(v15);
  v17 = *((_QWORD *)v14 + 1);
  v18 = *((_QWORD *)v13 + 1);
  *((_QWORD *)v13 + 1) = v17;
  swift_retain(v17);
  swift_release(v18);
  v19 = (void *)*((_QWORD *)v13 + 2);
  v20 = (void *)*((_QWORD *)v14 + 2);
  *((_QWORD *)v13 + 2) = v20;
  v21 = v20;

  v22 = a3[6];
  v23 = (uint64_t *)((char *)a1 + v22);
  v24 = (uint64_t *)((char *)a2 + v22);
  v25 = *(uint64_t *)((char *)a1 + v22);
  v26 = *(uint64_t *)((char *)a2 + v22);
  *(uint64_t *)((char *)a1 + v22) = v26;
  swift_retain(v26);
  swift_release(v25);
  v27 = v24[1];
  v28 = v23[1];
  v23[1] = v27;
  swift_retain(v27);
  swift_release(v28);
  v29 = v24[2];
  if (v23[2] < 3uLL)
  {
    if (v29 >= 3)
    {
      v23[2] = v29;
      v30 = (void *)v24[3];
      v23[3] = v30;
      swift_bridgeObjectRetain();
      v31 = v30;
      goto LABEL_13;
    }
    goto LABEL_11;
  }
  if (v29 < 3)
  {
    sub_100008758((uint64_t)(v23 + 2), &qword_10049F560);
LABEL_11:
    *((_OWORD *)v23 + 1) = *((_OWORD *)v24 + 1);
    goto LABEL_13;
  }
  v23[2] = v29;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v32 = (void *)v23[3];
  v33 = (void *)v24[3];
  v23[3] = v33;
  v34 = v33;

LABEL_13:
  v35 = a3[7];
  v36 = (uint64_t *)((char *)a1 + v35);
  v37 = (char *)a2 + v35;
  v38 = *(uint64_t *)((char *)a1 + v35);
  v39 = *(uint64_t *)((char *)a2 + v35);
  if (!v38)
  {
    if (v39)
    {
      v42 = *((_QWORD *)v37 + 1);
      *v36 = v39;
      v36[1] = v42;
      swift_retain(v42);
      goto LABEL_20;
    }
LABEL_19:
    *(_OWORD *)v36 = *(_OWORD *)v37;
    goto LABEL_20;
  }
  if (!v39)
  {
    swift_release(v36[1]);
    goto LABEL_19;
  }
  v40 = *((_QWORD *)v37 + 1);
  v41 = v36[1];
  *v36 = v39;
  v36[1] = v40;
  swift_retain(v40);
  swift_release(v41);
LABEL_20:
  v43 = a3[8];
  v44 = (char *)a1 + v43;
  v45 = (char *)a2 + v43;
  v46 = *(uint64_t *)((char *)a1 + v43);
  v47 = *(uint64_t *)((char *)a2 + v43);
  *(uint64_t *)((char *)a1 + v43) = v47;
  swift_retain(v47);
  swift_release(v46);
  v48 = *((_QWORD *)v45 + 1);
  v49 = *((_QWORD *)v44 + 1);
  *((_QWORD *)v44 + 1) = v48;
  swift_retain(v48);
  swift_release(v49);
  v44[16] = v45[16];
  *(uint64_t *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for ImagePicker(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  __int128 v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;

  v6 = sub_100005574(&qword_10049F780);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for DismissAction(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = a3[5];
  v9 = a3[6];
  v10 = &a1[v8];
  v11 = &a2[v8];
  *(_OWORD *)v10 = *(_OWORD *)v11;
  *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
  v12 = &a1[v9];
  v13 = &a2[v9];
  v14 = *((_OWORD *)v13 + 1);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v14;
  v15 = a3[7];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = *(_QWORD *)v17;
  if (*(_QWORD *)v17)
  {
    v19 = *((_QWORD *)v17 + 1);
    *(_QWORD *)v16 = v18;
    *((_QWORD *)v16 + 1) = v19;
  }
  else
  {
    *(_OWORD *)v16 = *(_OWORD *)v17;
  }
  v20 = a3[8];
  v21 = a3[9];
  v22 = &a1[v20];
  v23 = &a2[v20];
  *(_OWORD *)v22 = *(_OWORD *)v23;
  v22[16] = v23[16];
  *(_QWORD *)&a1[v21] = *(_QWORD *)&a2[v21];
  return a1;
}

char *assignWithTake for ImagePicker(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  void *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;

  if (a1 != a2)
  {
    sub_100008758((uint64_t)a1, &qword_10049F780);
    v6 = sub_100005574(&qword_10049F780);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for DismissAction(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = *(_QWORD *)&a1[v8];
  *(_QWORD *)&a1[v8] = *(_QWORD *)&a2[v8];
  swift_release(v11);
  v12 = *((_QWORD *)v9 + 1);
  *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
  swift_release(v12);
  v13 = (void *)*((_QWORD *)v9 + 2);
  *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);

  v14 = a3[6];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = *(_QWORD *)&a1[v14];
  *(_QWORD *)&a1[v14] = *(_QWORD *)&a2[v14];
  swift_release(v17);
  v18 = *((_QWORD *)v15 + 1);
  *((_QWORD *)v15 + 1) = *((_QWORD *)v16 + 1);
  swift_release(v18);
  v19 = *((_QWORD *)v16 + 2);
  if (*((_QWORD *)v15 + 2) < 3uLL)
    goto LABEL_8;
  if (v19 < 3)
  {
    sub_100008758((uint64_t)(v15 + 16), &qword_10049F560);
LABEL_8:
    *((_OWORD *)v15 + 1) = *((_OWORD *)v16 + 1);
    goto LABEL_10;
  }
  *((_QWORD *)v15 + 2) = v19;
  swift_bridgeObjectRelease();
  v20 = (void *)*((_QWORD *)v15 + 3);
  *((_QWORD *)v15 + 3) = *((_QWORD *)v16 + 3);

LABEL_10:
  v21 = a3[7];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = *(_QWORD *)&a1[v21];
  v25 = *(_QWORD *)&a2[v21];
  if (!v24)
  {
    if (v25)
    {
      v28 = *((_QWORD *)v23 + 1);
      *(_QWORD *)v22 = v25;
      *((_QWORD *)v22 + 1) = v28;
      goto LABEL_17;
    }
LABEL_16:
    *(_OWORD *)v22 = *(_OWORD *)v23;
    goto LABEL_17;
  }
  if (!v25)
  {
    swift_release(*((_QWORD *)v22 + 1));
    goto LABEL_16;
  }
  v26 = *((_QWORD *)v23 + 1);
  v27 = *((_QWORD *)v22 + 1);
  *(_QWORD *)v22 = v25;
  *((_QWORD *)v22 + 1) = v26;
  swift_release(v27);
LABEL_17:
  v29 = a3[8];
  v30 = &a1[v29];
  v31 = &a2[v29];
  v32 = *(_QWORD *)&a1[v29];
  *(_QWORD *)&a1[v29] = *(_QWORD *)&a2[v29];
  swift_release(v32);
  v33 = *((_QWORD *)v30 + 1);
  *((_QWORD *)v30 + 1) = *((_QWORD *)v31 + 1);
  swift_release(v33);
  v30[16] = v31[16];
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ImagePicker(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10032A468);
}

uint64_t sub_10032A468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_100005574(&qword_10049DF50);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for ImagePicker(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10032A4F8);
}

uint64_t sub_10032A4F8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_100005574(&qword_10049DF50);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

void sub_10032A578(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[6];

  sub_1002A336C(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = &unk_10039E970;
    v4[2] = &unk_10039E988;
    v4[3] = &unk_10039E9A0;
    v4[4] = &unk_10039E9B8;
    v4[5] = &unk_10039E9D0;
    swift_initStructMetadata(a1, 256, 6, v4, a1 + 16);
  }
}

uint64_t sub_10032A610()
{
  return type metadata accessor for ImagePicker.Coordinator(0);
}

uint64_t sub_10032A618(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  result = type metadata accessor for ImagePicker(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_10039E9A0;
    v4[2] = &unk_10039E9A0;
    v4[3] = &unk_10039E9D0;
    result = swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

void destroy for ImagePicker.SourceType(uint64_t a1)
{
  unint64_t v2;

  v2 = *(_QWORD *)a1;
  if (v2 >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease(v2);

  }
}

uint64_t _s11MusicCoreUI11ImagePickerV10SourceTypeOwCP_0(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    v3 = *(void **)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
    v4 = v3;
  }
  return a1;
}

uint64_t assignWithCopy for ImagePicker.SourceType(uint64_t a1, unint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  id v10;

  v4 = *(_QWORD *)a1;
  v5 = *a2;
  if (v4 < 0xFFFFFFFF)
  {
    if (v5 >= 0xFFFFFFFF)
    {
      *(_QWORD *)a1 = v5;
      v9 = (void *)a2[1];
      *(_QWORD *)(a1 + 8) = v9;
      swift_bridgeObjectRetain();
      v10 = v9;
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v5 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease(v4);

    goto LABEL_7;
  }
  *(_QWORD *)a1 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  v6 = *(void **)(a1 + 8);
  v7 = (void *)a2[1];
  *(_QWORD *)(a1 + 8) = v7;
  v8 = v7;

  return a1;
}

uint64_t assignWithTake for ImagePicker.SourceType(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  void *v5;

  v4 = *(_QWORD *)a1;
  if (v4 < 0xFFFFFFFF)
    goto LABEL_5;
  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {
    swift_bridgeObjectRelease(v4);

LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease(v4);
  v5 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  return a1;
}

ValueMetadata *type metadata accessor for ImagePicker.SourceType()
{
  return &type metadata for ImagePicker.SourceType;
}

ValueMetadata *type metadata accessor for ImagePicker.Coordinator.ImagePickerError()
{
  return &type metadata for ImagePicker.Coordinator.ImagePickerError;
}

uint64_t sub_10032A86C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for PHPickerResult(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v5 = *(_QWORD *)(v0 + 40);
  if (v5 >> 60 != 15)
    sub_1000067E8(*(_QWORD *)(v0 + 32), v5);
  v6 = (v3 + 72) & ~v3;
  swift_errorRelease(*(_QWORD *)(v0 + 48));

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v6, v1);
  return swift_deallocObject(v0, v6 + v4, v3 | 7);
}

uint64_t sub_10032A918(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  type metadata accessor for PHPickerResult(0);
  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc(dword_1004A00C4);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_10000EA88;
  return sub_100327B24(a1, v4, v5, v6, v7, v8, v9, v10);
}

double InteractionFeedbackLoadingView.init(delay:)(double a1)
{
  char v3;
  uint64_t v4;

  v3 = 0;
  State.init(wrappedValue:)(&v4, &v3, &type metadata for Bool);
  return a1;
}

uint64_t InteractionFeedbackLoadingView.body.getter@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (**v13)();
  uint64_t v15;

  sub_100005574(&qword_1004A00E0);
  v8 = __chkstk_darwin();
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v10 = static VerticalAlignment.center.getter(v8);
  *((_QWORD *)v10 + 1) = 0;
  v10[16] = 1;
  v11 = sub_100005574(&qword_1004A00E8);
  sub_10032AB3C(a1, a2, &v10[*(int *)(v11 + 44)]);
  v12 = swift_allocObject(&unk_100464208, 40, 7);
  *(double *)(v12 + 16) = a4;
  *(_BYTE *)(v12 + 24) = a1;
  *(_QWORD *)(v12 + 32) = a2;
  sub_100014A7C((uint64_t)v10, a3, &qword_1004A00E0);
  v13 = (uint64_t (**)())(a3 + *(int *)(sub_100005574(&qword_1004A00F0) + 36));
  *v13 = sub_10032B170;
  v13[1] = (uint64_t (*)())v12;
  v13[2] = 0;
  v13[3] = 0;
  swift_retain(a2);
  return sub_100008758((uint64_t)v10, &qword_1004A00E0);
}

uint64_t sub_10032AB3C@<X0>(char a1@<W0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t KeyPath;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  char *v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;

  v63 = a2;
  v65 = a3;
  v4 = type metadata accessor for OpacityTransition(0);
  v61 = *(_QWORD *)(v4 - 8);
  v62 = v4;
  __chkstk_darwin();
  v59 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v60 = (char *)&v51 - v6;
  v7 = type metadata accessor for ControlSize(0);
  v57 = *(_QWORD *)(v7 - 8);
  v58 = v7;
  __chkstk_darwin();
  v56 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CircularProgressViewStyle(0);
  v53 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin();
  v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100005574(&qword_10049E4B8);
  v52 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin();
  v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100005574(&qword_1004A0118);
  v54 = *(_QWORD *)(v15 - 8);
  v55 = v15;
  __chkstk_darwin();
  v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_100005574(&qword_1004A0120);
  __chkstk_darwin();
  v19 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_100005574(&qword_1004A0128);
  v64 = *(_QWORD *)(v66 - 8);
  __chkstk_darwin();
  v21 = (char *)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_1004A0130);
  __chkstk_darwin();
  v23 = (char *)&v51 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v25 = (char *)&v51 - v24;
  v67 = a1;
  v68 = v63;
  v26 = sub_100005574(&qword_10049C5C8);
  v27 = State.wrappedValue.getter(&v69, v26);
  v28 = 1;
  if (v69 == 1)
  {
    v29 = ProgressView<>.init<>()(v27);
    CircularProgressViewStyle.init()(v29);
    v30 = sub_10002FFB8(&qword_10049E528, &qword_10049E4B8, (uint64_t)&protocol conformance descriptor for ProgressView<A, B>);
    v31 = sub_100006924(&qword_1004A0140, (uint64_t (*)(uint64_t))&type metadata accessor for CircularProgressViewStyle, (uint64_t)&protocol conformance descriptor for CircularProgressViewStyle);
    View.progressViewStyle<A>(_:)(v11, v12, v9, v30, v31);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v11, v9);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v14, v12);
    v33 = v56;
    v32 = v57;
    v34 = v58;
    (*(void (**)(char *, _QWORD, uint64_t))(v57 + 104))(v56, enum case for ControlSize.large(_:), v58);
    KeyPath = swift_getKeyPath(&unk_10039EB00);
    v36 = (uint64_t *)&v19[*(int *)(v51 + 36)];
    v37 = sub_100005574(&qword_1004A0148);
    (*(void (**)(char *, char *, uint64_t))(v32 + 16))((char *)v36 + *(int *)(v37 + 28), v33, v34);
    *v36 = KeyPath;
    v39 = v54;
    v38 = v55;
    (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v19, v17, v55);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v34);
    v40 = (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v17, v38);
    v41 = v60;
    OpacityTransition.init()(v40);
    v43 = v61;
    v42 = v62;
    v44 = v59;
    (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v59, v41, v62);
    v45 = sub_100006924(&qword_1004A0150, (uint64_t (*)(uint64_t))&type metadata accessor for OpacityTransition, (uint64_t)&protocol conformance descriptor for OpacityTransition);
    v46 = AnyTransition.init<A>(_:)(v44, v42, v45);
    sub_100014A7C((uint64_t)v19, (uint64_t)v21, &qword_1004A0120);
    *(_QWORD *)&v21[*(int *)(v66 + 36)] = v46;
    (*(void (**)(char *, uint64_t))(v43 + 8))(v41, v42);
    sub_100008758((uint64_t)v19, &qword_1004A0120);
    sub_10032B648((uint64_t)v21, (uint64_t)v25);
    v28 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v64 + 56))(v25, v28, 1, v66);
  sub_100014A7C((uint64_t)v25, (uint64_t)v23, &qword_1004A0130);
  v47 = v65;
  *v65 = 0;
  *((_BYTE *)v47 + 8) = 1;
  v48 = sub_100005574(&qword_1004A0138);
  sub_100014A7C((uint64_t)v23, (uint64_t)v47 + *(int *)(v48 + 48), &qword_1004A0130);
  v49 = (char *)v47 + *(int *)(v48 + 64);
  *(_QWORD *)v49 = 0;
  v49[8] = 1;
  sub_100008758((uint64_t)v25, &qword_1004A0130);
  return sub_100008758((uint64_t)v23, &qword_1004A0130);
}

uint64_t sub_10032B044(char a1, uint64_t a2, double a3)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  sub_100005574(&qword_10049AEC0);
  __chkstk_darwin();
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = swift_allocObject(&unk_1004642D8, 40, 7);
  *(double *)(v9 + 16) = a3;
  *(_BYTE *)(v9 + 24) = a1;
  *(_QWORD *)(v9 + 32) = a2;
  swift_retain(a2);
  v10 = static Task<>.delayed(by:priority:task:)((uint64_t)v7, (uint64_t)&unk_1004A0110, v9, (uint64_t)&type metadata for () + 8, a3);
  swift_release(v10);
  swift_release(v9);
  return sub_100008758((uint64_t)v7, &qword_10049AEC0);
}

uint64_t sub_10032B14C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10032B170()
{
  uint64_t v0;

  return sub_10032B044(*(_BYTE *)(v0 + 24), *(_QWORD *)(v0 + 32), *(double *)(v0 + 16));
}

uint64_t sub_10032B180(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of InteractionFeedbackLoadingView.body>>, 1);
}

uint64_t sub_10032B190(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 32) = a3;
  *(_BYTE *)(v3 + 41) = a2;
  return swift_task_switch(sub_10032B1AC, 0, 0);
}

uint64_t sub_10032B1AC()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v0 + 16) = *(_BYTE *)(v0 + 41);
  *(_QWORD *)(v0 + 24) = *(_QWORD *)(v0 + 32);
  *(_BYTE *)(v0 + 40) = 1;
  v1 = sub_100005574(&qword_10049C5C8);
  State.wrappedValue.setter(v0 + 40, v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10032B210@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (**v11)();
  uint64_t v13;

  sub_100005574(&qword_1004A00E0);
  v3 = __chkstk_darwin();
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1;
  v7 = *((_BYTE *)v1 + 8);
  v8 = v1[2];
  *(_QWORD *)v5 = static VerticalAlignment.center.getter(v3);
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 1;
  v9 = sub_100005574(&qword_1004A00E8);
  sub_10032AB3C(v7, v8, &v5[*(int *)(v9 + 44)]);
  v10 = swift_allocObject(&unk_1004642B0, 40, 7);
  *(_QWORD *)(v10 + 16) = v6;
  *(_BYTE *)(v10 + 24) = v7;
  *(_QWORD *)(v10 + 32) = v8;
  sub_100014A7C((uint64_t)v5, a1, &qword_1004A00E0);
  v11 = (uint64_t (**)())(a1 + *(int *)(sub_100005574(&qword_1004A00F0) + 36));
  *v11 = sub_10032B698;
  v11[1] = (uint64_t (*)())v10;
  v11[2] = 0;
  v11[3] = 0;
  swift_retain(v8);
  return sub_100008758((uint64_t)v5, &qword_1004A00E0);
}

uint64_t sub_10032B334(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v3;
  swift_retain(v3);
  return a1;
}

uint64_t assignWithCopy for InteractionFeedbackLoadingView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  swift_retain(v4);
  swift_release(v3);
  return a1;
}

uint64_t assignWithTake for InteractionFeedbackLoadingView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for InteractionFeedbackLoadingView(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for InteractionFeedbackLoadingView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for InteractionFeedbackLoadingView()
{
  return &type metadata for InteractionFeedbackLoadingView;
}

unint64_t sub_10032B4BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004A00F8;
  if (!qword_1004A00F8)
  {
    v1 = sub_100005600(&qword_1004A00F0);
    sub_10002FFB8(&qword_1004A0100, &qword_1004A00E0, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1004A00F8);
  }
  return result;
}

uint64_t sub_10032B540()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_BYTE *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = swift_task_alloc(dword_1004A010C);
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = sub_10000EA88;
  *(_QWORD *)(v4 + 32) = v3;
  *(_BYTE *)(v4 + 41) = v2;
  return swift_task_switch(sub_10032B1AC, 0, 0);
}

uint64_t sub_10032B5A8()
{
  return EnvironmentValues.controlSize.getter();
}

uint64_t sub_10032B5C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for ControlSize(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return EnvironmentValues.controlSize.setter(v4);
}

uint64_t sub_10032B648(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005574(&qword_1004A0128);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10032B69C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t WitnessTable;
  _QWORD v24[2];
  _BYTE v25[16];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v8 = v7;
  v24[0] = a6;
  v24[1] = a7;
  v14 = *(_QWORD *)(a3 - 8);
  __chkstk_darwin();
  v16 = (char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for _LayoutRoot(0, v17, v18);
  __chkstk_darwin();
  v21 = (char *)v24 - v20;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v8, a3);
  _LayoutRoot.init(_:)(v16, a3, a5);
  v26 = a3;
  v27 = a4;
  v28 = a5;
  v29 = v24[0];
  v30 = a1;
  v31 = a2;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for _LayoutRoot<A>, v19);
  return _VariadicView.Tree.init(_:content:)(v21, sub_10032C8AC, v25, v19, a4, WitnessTable);
}

int *LayoutProviderStack.init(layoutProvider:alignment:spacing:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 a10, uint64_t a11)
{
  int *result;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a8 - 8) + 32))(a9, a1, a8);
  v23 = a8;
  v24 = a10;
  v25 = a11;
  result = (int *)type metadata accessor for LayoutProviderStack(0, (uint64_t)&v23);
  v20 = (_QWORD *)(a9 + result[13]);
  *v20 = a2;
  v20[1] = a3;
  v21 = a9 + result[14];
  *(_QWORD *)v21 = a4;
  *(_BYTE *)(v21 + 8) = a5 & 1;
  v22 = (_QWORD *)(a9 + result[15]);
  *v22 = a6;
  v22[1] = a7;
  return result;
}

uint64_t type metadata accessor for LayoutProviderStack(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for LayoutProviderStack);
}

uint64_t LayoutProviderStack.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[3];
  uint64_t v32;
  uint64_t v33;

  v27 = a2;
  v4 = sub_100005600(&qword_1004A0158);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = sub_10032BB0C(&qword_1004A0160, (uint64_t)&protocol conformance descriptor for _LayoutRoot<A>);
  v7 = type metadata accessor for _VariadicView.Tree(0, v4, v5, v6);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin();
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v12 = (char *)&v26 - v11;
  (*(void (**)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))(*(_QWORD *)(a1 + 32) + 8))(v31, *(_QWORD *)(v2 + *(int *)(a1 + 52)), *(_QWORD *)(v2 + *(int *)(a1 + 52) + 8), *(_QWORD *)(v2 + *(int *)(a1 + 56)), *(unsigned __int8 *)(v2 + *(int *)(a1 + 56) + 8), *(_QWORD *)(a1 + 16));
  v13 = v32;
  v14 = v33;
  sub_10000ABC8(v31, v32);
  __chkstk_darwin();
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v17 + 16))(v16);
  v18 = AnyLayout.init<A>(_:)(v16, v13, v14);
  v30 = v18;
  v19 = (uint64_t *)(v2 + *(int *)(a1 + 60));
  v20 = *v19;
  v21 = v19[1];
  v22 = sub_10032BAC8();
  v23 = *(_QWORD *)(a1 + 40);
  sub_10032B69C(v20, v21, (uint64_t)&type metadata for AnyLayout, v5, v22, v23, (uint64_t)v10);
  swift_release(v18);
  sub_10000682C(v31);
  v28 = sub_10032BB0C(&qword_1004A0170, (uint64_t)&protocol conformance descriptor for _LayoutRoot<A>);
  v29 = v23;
  swift_getWitnessTable(&protocol conformance descriptor for <> _VariadicView.Tree<A, B>, v7);
  sub_10003B690((uint64_t)v10, v7, (uint64_t)v12);
  v24 = *(void (**)(char *, uint64_t))(v8 + 8);
  v24(v10, v7);
  sub_100035E98((uint64_t)v12, v7, v27);
  return ((uint64_t (*)(char *, uint64_t))v24)(v12, v7);
}

unint64_t sub_10032BAC8()
{
  unint64_t result;

  result = qword_1004A0168;
  if (!qword_1004A0168)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AnyLayout, &type metadata for AnyLayout);
    atomic_store(result, (unint64_t *)&qword_1004A0168);
  }
  return result;
}

uint64_t sub_10032BB0C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_100005600(&qword_1004A0158);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t AxisStack.init(axis:alignment:spacing:content:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  *(_BYTE *)a8 = result & 1;
  *(_QWORD *)(a8 + 8) = a2;
  *(_QWORD *)(a8 + 16) = a3;
  *(_QWORD *)(a8 + 24) = a4;
  *(_BYTE *)(a8 + 32) = a5 & 1;
  *(_QWORD *)(a8 + 40) = a6;
  *(_QWORD *)(a8 + 48) = a7;
  return result;
}

double AxisStack.body.getter@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  _QWORD *v12;
  _BYTE *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double result;
  _BYTE v20[8];
  __int128 v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE v26[8];
  __int128 v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;

  v20[0] = *(_BYTE *)v2;
  v3 = *(_QWORD *)(v2 + 8);
  v4 = *(_QWORD *)(v2 + 16);
  v5 = *(_QWORD *)(v2 + 24);
  v6 = *(_BYTE *)(v2 + 32);
  v8 = *(_QWORD *)(v2 + 40);
  v7 = *(_QWORD *)(v2 + 48);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  (*(void (**)(_BYTE *, _BYTE *, _QWORD *))(*(&type metadata for Axis - 1) + 32))(v26, v20, &type metadata for Axis);
  v32 = &type metadata for Axis;
  *(_QWORD *)&v33 = v9;
  *((_QWORD *)&v33 + 1) = &protocol witness table for Axis;
  v34 = v10;
  v11 = (int *)type metadata accessor for LayoutProviderStack(0, (uint64_t)&v32);
  v12 = &v26[v11[13]];
  *v12 = v3;
  v12[1] = v4;
  v13 = &v26[v11[14]];
  *(_QWORD *)v13 = v5;
  v13[8] = v6;
  v14 = &v26[v11[15]];
  *v14 = v8;
  v14[1] = v7;
  v15 = v31;
  v20[0] = v26[0];
  v21 = v27;
  v22 = v28;
  v23 = v29;
  v24 = v30;
  v25 = v31;
  v32 = &type metadata for Axis;
  *(_QWORD *)&v33 = v9;
  *((_QWORD *)&v33 + 1) = &protocol witness table for Axis;
  v34 = v10;
  v16 = type metadata accessor for LayoutProviderStack(0, (uint64_t)&v32);
  swift_getWitnessTable(&protocol conformance descriptor for LayoutProviderStack<A, B>, v16);
  sub_10003B690((uint64_t)v20, v16, (uint64_t)&v32);
  swift_retain(v7);
  swift_release(v15);
  v17 = v37;
  v26[0] = (_BYTE)v32;
  v27 = v33;
  v28 = v34;
  v29 = v35;
  v30 = v36;
  v31 = v37;
  sub_100035E98((uint64_t)v26, v16, a2);
  *(_QWORD *)&result = swift_release(v17).n128_u64[0];
  return result;
}

unint64_t Axis.layout(alignment:spacing:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, char a5@<W4>, uint64_t a6@<X8>)
{
  unint64_t result;

  if ((a5 & 1) != 0)
  {
    *(_QWORD *)(a6 + 24) = &type metadata for VStackLayout;
    result = sub_10032BD84();
    *(_QWORD *)(a6 + 32) = result;
    *(_QWORD *)a6 = a1;
  }
  else
  {
    *(_QWORD *)(a6 + 24) = &type metadata for HStackLayout;
    result = sub_10032BDC8();
    *(_QWORD *)(a6 + 32) = result;
    *(_QWORD *)a6 = a2;
  }
  *(_QWORD *)(a6 + 8) = a3;
  *(_BYTE *)(a6 + 16) = a4 & 1;
  return result;
}

unint64_t sub_10032BD84()
{
  unint64_t result;

  result = qword_1004A0178;
  if (!qword_1004A0178)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for VStackLayout, &type metadata for VStackLayout);
    atomic_store(result, (unint64_t *)&qword_1004A0178);
  }
  return result;
}

unint64_t sub_10032BDC8()
{
  unint64_t result;

  result = qword_1004A0180[0];
  if (!qword_1004A0180[0])
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for HStackLayout, &type metadata for HStackLayout);
    atomic_store(result, qword_1004A0180);
  }
  return result;
}

uint64_t sub_10032BE0C(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  _OWORD v4[2];

  v2 = *(_OWORD *)(a2 + 32);
  v4[0] = *(_OWORD *)(a2 + 16);
  v4[1] = v2;
  return swift_getOpaqueTypeConformance2(v4, &opaque type descriptor for <<opaque return type of LayoutProviderStack.body>>, 1);
}

uint64_t sub_10032BE40(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &opaque type descriptor for <<opaque return type of AxisStack.body>>, 1);
}

unint64_t sub_10032BE74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  _BYTE *v5;
  unint64_t result;

  if ((*v5 & 1) != 0)
  {
    *(_QWORD *)(a5 + 24) = &type metadata for VStackLayout;
    result = sub_10032BD84();
    *(_QWORD *)(a5 + 32) = result;
    *(_QWORD *)a5 = a1;
  }
  else
  {
    *(_QWORD *)(a5 + 24) = &type metadata for HStackLayout;
    result = sub_10032BDC8();
    *(_QWORD *)(a5 + 32) = result;
    *(_QWORD *)a5 = a2;
  }
  *(_QWORD *)(a5 + 8) = a3;
  *(_BYTE *)(a5 + 16) = a4 & 1;
  return result;
}

uint64_t sub_10032BEF8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_10039EC28;
    v4[2] = &unk_10039EC40;
    v4[3] = (char *)&value witness table for () + 64;
    swift_initStructMetadata(a1, 0, 4, v4, a1 + 48);
    return 0;
  }
  return result;
}

uint64_t *sub_10032BF84(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  _OWORD *v9;
  _OWORD *v10;
  unint64_t v11;
  unint64_t v12;
  char v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v9 = (_OWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v10 = (_OWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v9 = *v10;
    v11 = ((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8;
    v12 = ((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8;
    v13 = *(_BYTE *)(v12 + 8);
    *(_QWORD *)v11 = *(_QWORD *)v12;
    *(_BYTE *)(v11 + 8) = v13;
    v14 = (_QWORD *)(((unint64_t)v9 + 39) & 0xFFFFFFFFFFFFFFF8);
    v15 = (_QWORD *)(((unint64_t)v10 + 39) & 0xFFFFFFFFFFFFFFF8);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
  }
  swift_retain(v16);
  return v4;
}

double sub_10032C074(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  double result;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  *(_QWORD *)&result = swift_release(*(_QWORD *)(((((a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFF8)
                                               + 8)).n128_u64[0];
  return result;
}

uint64_t sub_10032C0BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = ((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  v10 = ((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_QWORD *)v9 = v11;
  v12 = (_QWORD *)(((unint64_t)v7 + 39) & 0xFFFFFFFFFFFFFFF8);
  v13 = (_QWORD *)(((unint64_t)v8 + 39) & 0xFFFFFFFFFFFFFFF8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  swift_retain(v14);
  return a1;
}

uint64_t sub_10032C154(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  char v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  v9 = ((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  v10 = ((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_BYTE *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = v11;
  v12 = (_QWORD *)(((unint64_t)v7 + 39) & 0xFFFFFFFFFFFFFFF8);
  v13 = (_QWORD *)(((unint64_t)v8 + 39) & 0xFFFFFFFFFFFFFFF8);
  v14 = v13[1];
  v15 = v12[1];
  *v12 = *v13;
  v12[1] = v14;
  swift_retain(v14);
  swift_release(v15);
  return a1;
}

uint64_t sub_10032C200(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = ((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  v10 = ((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_QWORD *)v9 = v11;
  *(_OWORD *)(((unint64_t)v7 + 39) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v8 + 39) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_10032C294(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  v9 = ((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  v10 = ((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_BYTE *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = v11;
  v12 = ((unint64_t)v7 + 39) & 0xFFFFFFFFFFFFFFF8;
  v13 = *(_QWORD *)(v12 + 8);
  *(_OWORD *)v12 = *(_OWORD *)(((unint64_t)v8 + 39) & 0xFFFFFFFFFFFFF8);
  swift_release(v13);
  return a1;
}

uint64_t sub_10032C338(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)((((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFF8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_10032C3BC + 4 * byte_10039EB30[v10]))();
  }
}

void sub_10032C448(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 39) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 39) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8) + 16);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_10032C544()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x10032C5C4);
}

void sub_10032C54C(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x10032C554);
  JUMPOUT(0x10032C5C4);
}

void sub_10032C59C()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x10032C5C4);
}

void sub_10032C5A4()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x10032C5C4);
}

uint64_t sub_10032C5AC(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (!a2)
    JUMPOUT(0x10032C5C4);
  if (a3 < 0x7FFFFFFF)
  {
    if ((a2 & 0x80000000) == 0)
      JUMPOUT(0x10032C5C0);
    JUMPOUT(0x10032C5B8);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v5);
}

double sub_10032C5DC(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 48)).n128_u64[0];
  return result;
}

uint64_t sub_10032C5E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v3 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v3;
  swift_retain(v3);
  return a1;
}

uint64_t sub_10032C630(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v3 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v3;
  v4 = *(_QWORD *)(a2 + 48);
  v5 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  swift_retain(v4);
  swift_release(v5);
  return a1;
}

uint64_t sub_10032C690(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v3 = *(_QWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release(v3);
  return a1;
}

uint64_t type metadata accessor for AxisStack(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100031DCC(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AxisStack);
}

uint64_t sub_10032C6EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = sub_100005600(&qword_1004A0158);
  v3 = sub_10032BB0C(&qword_1004A0160, (uint64_t)&protocol conformance descriptor for _LayoutRoot<A>);
  v4 = type metadata accessor for _VariadicView.Tree(255, v2, v1, v3);
  sub_10032BB0C(&qword_1004A0170, (uint64_t)&protocol conformance descriptor for _LayoutRoot<A>);
  return swift_getWitnessTable(&protocol conformance descriptor for <> _VariadicView.Tree<A, B>, v4);
}

uint64_t sub_10032C784(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[4];

  v1 = *a1;
  v2 = a1[1];
  v5[0] = &type metadata for Axis;
  v5[1] = v1;
  v5[2] = &protocol witness table for Axis;
  v5[3] = v2;
  v3 = type metadata accessor for LayoutProviderStack(255, (uint64_t)v5);
  return swift_getWitnessTable(&protocol conformance descriptor for LayoutProviderStack<A, B>, v3);
}

uint64_t sub_10032C7D4@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void (*v7)(void);
  uint64_t v8;
  char *v9;
  void (*v10)(char *, uint64_t);
  uint64_t v12;

  v4 = *(_QWORD *)(a1 - 8);
  __chkstk_darwin();
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (void (*)(void))__chkstk_darwin();
  v9 = (char *)&v12 - v8;
  v7();
  sub_10003B690((uint64_t)v6, a1, (uint64_t)v9);
  v10 = *(void (**)(char *, uint64_t))(v4 + 8);
  v10(v6, a1);
  sub_100035E98((uint64_t)v9, a1, a2);
  return ((uint64_t (*)(char *, uint64_t))v10)(v9, a1);
}

uint64_t sub_10032C8AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10032C7D4(*(_QWORD *)(v1 + 24), a1);
}

char *LoadingView.__allocating_init(title:style:usesSubtitleTextColor:)(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  objc_class *v4;
  id v9;

  v9 = objc_allocWithZone(v4);
  return LoadingView.init(title:style:usesSubtitleTextColor:)(a1, a2, a3 & 0xFFFFFFFFFFLL | (((a3 >> 40) & 1) << 40), a4);
}

char *LoadingView.init(title:style:usesSubtitleTextColor:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _BYTE *v4;
  _BYTE *v5;
  objc_class *ObjectType;
  char *v10;
  _QWORD *v11;
  uint64_t v12;
  id v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  char *v19;
  uint64_t v20;
  id v21;
  NSString v22;
  uint64_t v23;
  id v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  char *v29;
  id v30;
  objc_super v33;
  char v34[24];
  char v35[24];

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v10 = &v5[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_style];
  *(_DWORD *)v10 = 0;
  *((_WORD *)v10 + 2) = 256;
  v5[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_titlePosition] = 1;
  v11 = &v5[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_title];
  *v11 = 0;
  v11[1] = 0;
  v12 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label;
  v13 = objc_allocWithZone((Class)UILabel);
  v14 = v5;
  *(_QWORD *)&v5[v12] = objc_msgSend(v13, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v15 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_activityIndicator;
  *(_QWORD *)&v14[v15] = objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "initWithActivityIndicatorStyle:", 100);
  *(_QWORD *)&v14[OBJC_IVAR____TtC11MusicCoreUI11LoadingView____lazy_storage___progressBar] = 0;
  swift_beginAccess(v11, v35, 1, 0);
  *v11 = a1;
  v11[1] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess(v10, v34, 1, 0);
  v10[4] = BYTE4(a3);
  *(_DWORD *)v10 = a3;
  v10[5] = BYTE5(a3) & 1;

  v33.receiver = v14;
  v33.super_class = ObjectType;
  v16 = (char *)objc_msgSendSuper2(&v33, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v17 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_activityIndicator;
  v18 = *(void **)&v16[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_activityIndicator];
  v19 = v16;
  objc_msgSend(v18, "setHidesWhenStopped:", 1);
  v20 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label;
  v21 = *(id *)&v19[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label];
  if (a2)
  {
    v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    v22 = 0;
  }
  objc_msgSend(v21, "setText:", v22);

  objc_msgSend(*(id *)&v19[v20], "setAdjustsFontForContentSizeCategory:", 1);
  v23 = qword_100498C58;
  v24 = *(id *)&v19[v20];
  if (v23 != -1)
    swift_once(&qword_100498C58, sub_10032E038);
  objc_msgSend(v24, "setFont:", qword_1004A0288);

  objc_msgSend(*(id *)&v19[v20], "setMaximumContentSizeCategory:", UIContentSizeCategoryAccessibilityMedium);
  objc_msgSend(*(id *)&v19[v20], "setNumberOfLines:", 0);
  objc_msgSend(*(id *)&v19[v20], "setTextAlignment:", 1);
  if ((a4 & 1) != 0)
  {
    v25 = *(void **)&v19[v20];
    v26 = (void *)objc_opt_self(UIColor);
    v27 = v25;
    v28 = objc_msgSend(v26, "secondaryLabelColor");
    objc_msgSend(v27, "setTextColor:", v28);

  }
  sub_10032CC88();
  objc_msgSend(v19, "addSubview:", *(_QWORD *)&v19[v20]);
  objc_msgSend(v19, "addSubview:", *(_QWORD *)&v16[v17]);
  v29 = v19;
  v30 = sub_10032CDF8();
  objc_msgSend(v29, "addSubview:", v30);

  return v29;
}

void sub_10032CC88()
{
  uint64_t v0;
  unsigned int *v1;
  double v2;
  id v3;
  int v4;
  id v5;
  id v6;
  double v7;
  id v8;
  _BYTE v9[24];

  v1 = (unsigned int *)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_style);
  *(_QWORD *)&v2 = swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_style, v9, 0, 0).n128_u64[0];
  if ((*((_BYTE *)v1 + 5) & 1) != 0)
  {
    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_activityIndicator), "stopAnimating", v2);
    v3 = sub_10032CDF8();
    objc_msgSend(v3, "setHidden:", 1);

    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label), "setHidden:", 1);
  }
  else if (((*v1 | ((unint64_t)*((unsigned __int8 *)v1 + 4) << 32)) & 0x100000000) != 0)
  {
    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_activityIndicator), "startAnimating", v2);
    v8 = sub_10032CDF8();
    objc_msgSend(v8, "setHidden:", 1);

    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label), "setHidden:", 0);
  }
  else
  {
    v4 = *v1;
    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_activityIndicator), "stopAnimating", v2);
    v5 = sub_10032CDF8();
    objc_msgSend(v5, "setHidden:", 0);

    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label), "setHidden:", 0);
    v6 = sub_10032CDF8();
    LODWORD(v7) = v4;
    objc_msgSend(v6, "setProgress:", v7);

  }
}

id sub_10032CDF8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView____lazy_storage___progressBar;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView____lazy_storage___progressBar);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView____lazy_storage___progressBar);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UIProgressView), "initWithProgressViewStyle:", 1);
    v5 = objc_msgSend((id)objc_opt_self(UIColor), "systemFillColor");
    objc_msgSend(v4, "setTrackTintColor:", v5);

    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

unint64_t LoadingView.style.getter()
{
  uint64_t v0;
  unsigned int *v1;
  _BYTE v3[24];

  v1 = (unsigned int *)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_style);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_style, v3, 0, 0);
  return *v1 | ((unint64_t)*((unsigned __int8 *)v1 + 4) << 32) | ((unint64_t)*((unsigned __int8 *)v1 + 5) << 40);
}

float LoadingView.style.setter(uint64_t a1)
{
  uint64_t v1;
  unsigned int *v3;
  float result;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  _BYTE v9[24];

  v3 = (unsigned int *)(v1 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_style);
  LODWORD(result) = swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_style, v9, 1, 0).n128_u32[0];
  v5 = *((unsigned __int8 *)v3 + 4);
  v6 = *v3;
  v7 = *((_BYTE *)v3 + 5);
  *v3 = a1;
  *((_BYTE *)v3 + 4) = BYTE4(a1);
  *((_BYTE *)v3 + 5) = BYTE5(a1) & 1;
  if ((a1 & 0x10000000000) != 0)
  {
    if ((v7 & 1) != 0)
      return result;
    goto LABEL_5;
  }
  if ((v7 & 1) != 0)
    goto LABEL_5;
  v8 = v6 | (v5 << 32);
  if ((a1 & 0x100000000) != 0)
  {
    if ((v8 & 0x100000000) != 0)
      return result;
    goto LABEL_5;
  }
  if ((v8 & 0x100000000) != 0 || (result = *(float *)&a1, *(float *)&a1 != *(float *)&v8))
LABEL_5:
    sub_10032CC88();
  return result;
}

void (*LoadingView.style.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_style;
  v3[3] = v1;
  v3[4] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 1, 0);
  v6 = *(_BYTE *)(v5 + 4);
  v7 = *(_BYTE *)(v5 + 5);
  *((_DWORD *)v3 + 10) = *(_DWORD *)v5;
  v3 += 5;
  *((_BYTE *)v3 + 4) = v6;
  *((_BYTE *)v3 + 5) = v7;
  return sub_10032D054;
}

void sub_10032D054(uint64_t a1, char a2)
{
  void *v2;
  uint64_t v3;
  unsigned int *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  unint64_t v8;
  char v9;

  v2 = *(void **)a1;
  v3 = *(unsigned int *)(*(_QWORD *)a1 + 40);
  v4 = (unsigned int *)(*(_QWORD *)(*(_QWORD *)a1 + 24) + *(_QWORD *)(*(_QWORD *)a1 + 32));
  v5 = *(unsigned __int8 *)(*(_QWORD *)a1 + 44);
  v6 = v3 | (v5 << 32);
  v7 = *(_BYTE *)(*(_QWORD *)a1 + 45);
  v8 = *v4 | ((unint64_t)*((unsigned __int8 *)v4 + 4) << 32);
  v9 = *((_BYTE *)v4 + 5);
  *v4 = v3;
  *((_BYTE *)v4 + 4) = v5;
  *((_BYTE *)v4 + 5) = v7;
  if ((a2 & 1) != 0)
  {
    if ((v7 & 1) == 0)
    {
      if ((v9 & 1) == 0)
      {
        if ((v6 & 0x100000000) != 0)
          goto LABEL_5;
        goto LABEL_12;
      }
LABEL_14:
      sub_10032CC88();
      goto LABEL_15;
    }
LABEL_8:
    if ((v9 & 1) != 0)
      goto LABEL_15;
    goto LABEL_14;
  }
  if ((v7 & 1) != 0)
    goto LABEL_8;
  if ((v9 & 1) != 0)
    goto LABEL_14;
  if ((v6 & 0x100000000) != 0)
  {
LABEL_5:
    if ((v8 & 0x100000000) != 0)
      goto LABEL_15;
    goto LABEL_14;
  }
LABEL_12:
  if ((v8 & 0x100000000) != 0 || *(float *)&v3 != *(float *)&v8)
    goto LABEL_14;
LABEL_15:
  free(v2);
}

uint64_t LoadingView.titlePosition.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_titlePosition);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_titlePosition, v3, 0, 0);
  return *v1;
}

void LoadingView.titlePosition.setter(unsigned __int8 a1)
{
  char *v1;
  char *v3;
  double v4;
  int v5;
  char v6[24];

  v3 = &v1[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_titlePosition];
  *(_QWORD *)&v4 = swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_titlePosition], v6, 1, 0).n128_u64[0];
  v5 = *v3;
  *v3 = a1;
  if (v5 != a1)
    objc_msgSend(v1, "setNeedsLayout", v4);
}

void (*LoadingView.titlePosition.modify(_QWORD *a1))(id **a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _BYTE *v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_titlePosition;
  v3[3] = v1;
  v3[4] = v4;
  v5 = (_BYTE *)(v1 + v4);
  swift_beginAccess(v1 + v4, v3, 1, 0);
  *((_BYTE *)v3 + 40) = *v5;
  return sub_10032D210;
}

void sub_10032D210(id **a1)
{
  id *v1;
  int v2;
  _BYTE *v3;
  id v4;
  int v5;

  v1 = *a1;
  v2 = *((unsigned __int8 *)*a1 + 40);
  v4 = (*a1)[3];
  v3 = (*a1)[4];
  v5 = v3[(_QWORD)v4];
  v3[(_QWORD)v4] = v2;
  if (v2 != v5)
    objc_msgSend(v1[3], "setNeedsLayout");
  free(v1);
}

id LoadingView.font.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label), "font");
}

void LoadingView.font.setter(void *a1)
{
  uint64_t v1;
  id v2;

  v2 = *(id *)(v1 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label);
  objc_msgSend(v2, "setFont:", a1);

}

void (*LoadingView.font.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  uint64_t v2;

  v2 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label;
  a1[1] = v1;
  a1[2] = v2;
  *a1 = objc_msgSend(*(id *)(v1 + v2), "font");
  return sub_10032D32C;
}

void sub_10032D32C(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;

  v2 = *(void **)a1;
  v3 = *(void **)(*(_QWORD *)(a1 + 8) + *(_QWORD *)(a1 + 16));
  if ((a2 & 1) != 0)
  {
    objc_msgSend(v3, "setFont:", v2);
    v4 = v2;
  }
  else
  {
    v5 = v3;
    objc_msgSend(v5, "setFont:", v2);

    v4 = v5;
  }

}

void sub_10032D394(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  id v9;
  NSString v10;
  char v11[24];

  v5 = &v2[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_title];
  swift_beginAccess(&v2[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_title], v11, 0, 0);
  v6 = *((_QWORD *)v5 + 1);
  if (!v6)
  {
    if (!a2)
      return;
    v9 = *(id *)&v2[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label];
    v10 = 0;
    goto LABEL_11;
  }
  v7 = *(_QWORD *)v5;
  if (!a2
    || (v7 == a1 ? (v8 = v6 == a2) : (v8 = 0),
        !v8 && (_stringCompareWithSmolCheck(_:_:expecting:)(v7, v6, a1, a2, 0) & 1) == 0))
  {
    v9 = *(id *)&v2[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label];
    swift_bridgeObjectRetain();
    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v6);
LABEL_11:
    objc_msgSend(v9, "setText:", v10);

    objc_msgSend(v2, "setNeedsLayout");
  }
}

uint64_t LoadingView.title.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_title);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_title, v4, 0, 0);
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

void LoadingView.title.setter(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  id v9;
  NSString v10;
  char v11[24];

  v5 = &v2[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_title];
  swift_beginAccess(&v2[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_title], v11, 1, 0);
  v6 = *(_QWORD *)v5;
  v7 = *((_QWORD *)v5 + 1);
  *(_QWORD *)v5 = a1;
  *((_QWORD *)v5 + 1) = a2;
  if (a2)
  {
    if (v7)
    {
      v8 = v6 == a1 && v7 == a2;
      if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, v6, v7, 0) & 1) != 0)
        goto LABEL_12;
    }
    v9 = *(id *)&v2[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label];
    swift_bridgeObjectRetain();
    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    if (!v7)
      return;
    v9 = *(id *)&v2[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label];
    v10 = 0;
  }
  objc_msgSend(v9, "setText:", v10);

  objc_msgSend(v2, "setNeedsLayout");
LABEL_12:
  swift_bridgeObjectRelease(v7);
}

void (*LoadingView.title.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_title;
  v3[5] = v1;
  v3[6] = v4;
  v5 = (_QWORD *)(v1 + v4);
  swift_beginAccess(v1 + v4, v3, 1, 0);
  v6 = v5[1];
  v3[3] = *v5;
  v3[4] = v6;
  swift_bridgeObjectRetain();
  return sub_10032D680;
}

void sub_10032D680(uint64_t a1, char a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 48);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v7 = (uint64_t *)(v5 + v4);
  v9 = *v7;
  v8 = v7[1];
  *v7 = v3;
  v7[1] = v6;
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    sub_10032D394(v9, v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10032D394(v9, v8);
  }
  swift_bridgeObjectRelease();
  free(v2);
}

Swift::Void __swiftcall LoadingView.layoutSubviews()()
{
  char *v0;
  id v1;
  id v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double x;
  double y;
  double width;
  double height;
  double v29;
  uint64_t v30;
  double v31;
  double v32;
  CGFloat v33;
  id v34;
  double v35;
  double v36;
  uint64_t v37;
  double v38;
  CGFloat v39;
  double v40;
  CGFloat v41;
  double v42;
  double v43;
  double v44;
  char *v45;
  double v46;
  double MaxY;
  double v48;
  double MinY;
  double v50;
  CGFloat v51;
  double v52;
  double v53;
  double v54;
  double v55;
  id v56;
  double v57;
  int v58;
  id v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;
  double v66;
  double v67;
  double v68;
  double v69;
  double v70;
  double v71;
  id v72;
  double v73;
  double v74;
  double v75;
  double v76;
  double v77;
  double v78;
  double v79;
  double v80;
  double v81;
  double v82;
  double v83;
  id v84;
  double v85;
  double v86;
  double v87;
  double v88;
  double v89;
  double v90;
  double v91;
  double v92;
  double v93;
  double v94;
  double v95;
  double v96;
  double v97;
  double v98;
  double v99;
  double v100;
  double v101;
  double v102;
  double v103;
  double v104;
  id v105;
  double v106;
  double v107;
  double v108;
  double v109;
  double v110;
  double v111;
  double v112;
  double v113;
  double v114;
  double v115;
  double v116;
  double v117;
  double v118;
  double v119;
  double v120;
  double v121;
  double v122;
  double v123;
  double v124;
  double v125;
  double v126;
  double v127;
  double v128;
  double v129;
  double v130;
  double v131;
  double v132;
  double v133;
  double v134;
  double v135;
  double v136;
  double MinX;
  double v138;
  double v139;
  double rect;
  double v141;
  double v142;
  double v143;
  double v144;
  double v145;
  char v146[24];
  objc_super v147;
  CGRect v148;
  CGRect v149;
  CGRect v150;
  CGRect v151;
  CGRect v152;
  CGRect v153;
  CGRect v154;
  CGRect v155;
  CGRect v156;
  CGRect v157;

  v147.receiver = v0;
  v147.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v147, "layoutSubviews");
  v1 = objc_msgSend(v0, "effectiveUserInterfaceLayoutDirection");
  v2 = objc_msgSend(v0, "traitCollection");
  objc_msgSend(v2, "displayScale");
  v4 = v3;

  objc_msgSend(v0, "bounds");
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;
  objc_msgSend(v0, "layoutMargins");
  v142 = sub_10019431C(v6, v8, v10, v12, v13, v14);
  v143 = v15;
  v144 = v16;
  v145 = v17;
  v18 = LoadingView.sizeThatFits(_:)(v16, v17);
  v20 = v19;
  objc_msgSend(v0, "bounds");
  v141 = v4;
  v148.origin.x = CGRect.centeringAlong(axes:bounds:scale:)(3, v21, v22, v23, v24, v4, 0.0, 0.0, v18, v20);
  x = v148.origin.x;
  y = v148.origin.y;
  width = v148.size.width;
  height = v148.size.height;
  v29 = CGRectGetWidth(v148);
  v30 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label;
  rect = height;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label], "sizeThatFits:", width, height);
  v138 = v32;
  v139 = v31;
  v149.origin.x = 0.0;
  v149.origin.y = 0.0;
  v149.size.height = 0.0;
  v149.size.width = v29;
  v33 = CGRectGetWidth(v149);
  v34 = sub_10032CDF8();
  objc_msgSend(v34, "intrinsicContentSize");
  v36 = v35;

  v37 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_activityIndicator;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_activityIndicator], "intrinsicContentSize");
  v39 = v38;
  v41 = v40;
  v150.origin.x = 0.0;
  v150.origin.y = 0.0;
  v130 = v33;
  v150.size.width = v33;
  v150.size.height = v36;
  v42 = CGRectGetHeight(v150);
  v151.origin.x = 0.0;
  v151.origin.y = 0.0;
  v131 = v41;
  v133 = v39;
  v151.size.width = v39;
  v151.size.height = v41;
  v43 = CGRectGetHeight(v151);
  if (v42 > v43)
    v44 = v42;
  else
    v44 = v43;
  v45 = &v0[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_titlePosition];
  *(_QWORD *)&v46 = swift_beginAccess(&v0[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_titlePosition], v146, 0, 0).n128_u64[0];
  if (*v45)
  {
    if (*v45 == 1)
    {
      v152.origin.x = x;
      v152.origin.y = y;
      v152.size.width = width;
      v152.size.height = rect;
      MinX = CGRectGetMinX(v152);
      v153.origin.x = x;
      v153.origin.y = y;
      v153.size.width = v29;
      v153.size.height = v44;
      MaxY = CGRectGetMaxY(v153);
      objc_msgSend(*(id *)&v0[v30], "_firstBaselineOffsetFromTop");
      MinY = MaxY + v48 + -8.0;
    }
    else
    {
      objc_msgSend(*(id *)&v0[v37], "intrinsicContentSize", v46);
      v55 = v54;
      v56 = sub_10032CDF8();
      objc_msgSend(v56, "intrinsicContentSize");
      v29 = v57;

      if (v55 > v29)
        v29 = v55;
      v156.origin.x = x;
      v156.origin.y = y;
      v156.size.width = v29;
      v156.size.height = v44;
      MinX = CGRectGetMaxX(v156) + 8.0;
      v157.origin.x = x;
      v157.origin.y = y;
      v157.size.width = width;
      v157.size.height = rect;
      MinY = CGRectGetMinY(v157);
    }
    v136 = MinY;
    v53 = y;
    v50 = x;
  }
  else
  {
    v154.origin.x = x;
    v154.origin.y = y;
    v154.size.width = width;
    v154.size.height = rect;
    v50 = CGRectGetMinX(v154);
    v155.origin.x = x;
    v155.origin.y = y;
    v155.size.height = v138;
    v155.size.width = v139;
    v51 = CGRectGetMaxY(v155) + 8.0;
    objc_msgSend(*(id *)&v0[v30], "_baselineOffsetFromBottom");
    v53 = v51 - v52;
    v136 = y;
    MinX = x;
  }
  v58 = *v45;
  v59 = sub_10032CDF8();
  v134 = v53;
  v135 = v44;
  if (v58 == 2)
  {
    v129 = v44;
    v60 = v29;
    v61 = CGRect.centeringAlong(axes:bounds:scale:)(2, x, y, width, rect, v141, v50, v53, v29, v129);
    v63 = v62;
    v132 = v50;
    v65 = v64;
    v67 = v66;
    objc_msgSend(v0, "bounds");
    CGRect.applyingLayoutDirection(_:inBounds:)(v1, v68, v69, v70, v71, v61, v63, v65, v67);
    objc_msgSend(v59, "setFrame:");

    v72 = *(id *)&v0[v37];
    v73 = CGRect.centeringAlong(axes:bounds:scale:)(2, x, y, width, rect, v141, v132, v134, v60, v135);
    v75 = v74;
    v77 = v76;
    v79 = v78;
    objc_msgSend(v0, "bounds");
    CGRect.applyingLayoutDirection(_:inBounds:)(v1, v80, v81, v82, v83, v73, v75, v77, v79);
    objc_msgSend(v72, "setFrame:");

    v84 = *(id *)&v0[v30];
    v85 = CGRect.centeringAlong(axes:bounds:scale:)(2, v142, v143, v144, v145, v141, MinX, v136, v139, v138);
  }
  else
  {
    v89 = CGRect.centeringAlong(axes:bounds:scale:)(2, v50, v53, v29, v44, v141, 0.0, 0.0, v130, v36);
    v93 = CGRect.centeringAlong(axes:bounds:scale:)(1, v142, v143, v144, v145, v141, v89, v90, v91, v92);
    v95 = v94;
    v96 = v29;
    v98 = v97;
    v100 = v99;
    objc_msgSend(v0, "bounds");
    CGRect.applyingLayoutDirection(_:inBounds:)(v1, v101, v102, v103, v104, v93, v95, v98, v100);
    objc_msgSend(v59, "setFrame:");

    v105 = *(id *)&v0[v37];
    v106 = CGRect.centeringAlong(axes:bounds:scale:)(2, v50, v134, v96, v44, v141, 0.0, 0.0, v133, v131);
    v110 = CGRect.centeringAlong(axes:bounds:scale:)(1, v142, v143, v144, v145, v141, v106, v107, v108, v109);
    v112 = v111;
    v114 = v113;
    v116 = v115;
    objc_msgSend(v0, "bounds");
    CGRect.applyingLayoutDirection(_:inBounds:)(v1, v117, v118, v119, v120, v110, v112, v114, v116);
    objc_msgSend(v105, "setFrame:");

    v84 = *(id *)&v0[v30];
    v85 = CGRect.centeringAlong(axes:bounds:scale:)(1, v142, v143, v144, v145, v141, MinX, v136, v139, v138);
  }
  v121 = v85;
  v122 = v86;
  v123 = v87;
  v124 = v88;
  objc_msgSend(v0, "bounds");
  CGRect.applyingLayoutDirection(_:inBounds:)(v1, v125, v126, v127, v128, v121, v122, v123, v124);
  objc_msgSend(v84, "setFrame:");

}

double LoadingView.sizeThatFits(_:)(double a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  id v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  _BYTE *v15;
  double v16;
  double v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  double v21;
  double v22;
  _QWORD v24[2];
  _QWORD v25[2];
  _BYTE v26[24];

  v3 = v2;
  v6 = sub_10032CDF8();
  objc_msgSend(v6, "sizeThatFits:", 0.0, 0.0);
  v8 = v7;
  v10 = v9;

  objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_activityIndicator), "sizeThatFits:", 0.0, 0.0);
  v13 = v12;
  if (v8 > v11)
    v14 = v8;
  else
    v14 = v11;
  v15 = (_BYTE *)(v3 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_titlePosition);
  *(_QWORD *)&v16 = swift_beginAccess(v3 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_titlePosition, v26, 0, 0).n128_u64[0];
  if (v10 > v13)
    v17 = v10;
  else
    v17 = v13;
  if (*v15 == 2)
  {
    v18 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label;
    objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label), "intrinsicContentSize", v16);
    objc_msgSend(*(id *)(v3 + v18), "intrinsicContentSize");
    return v14 + v19;
  }
  else
  {
    v20 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label;
    objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label), "sizeThatFits:", 0.0, 0.0);
    v22 = v21;
    _s3__C6CGSizeVMa_1(0);
    *(double *)v25 = a1;
    *(double *)&v25[1] = a2;
    v24[0] = 0;
    v24[1] = 0;
    if ((static ApproximatelyEquatable.!=~ infix(_:_:)(v25, v24) & 1) != 0)
    {
      objc_msgSend(*(id *)(v3 + v20), "sizeThatFits:", a1, a2 - (v17 + 0.0 + 8.0));
    }
    else if (v22 > v14)
    {
      return v22;
    }
    else
    {
      return v14;
    }
  }
  return a1;
}

double LoadingView.intrinsicContentSize.getter()
{
  return LoadingView.sizeThatFits(_:)(0.0, 0.0);
}

BOOL static LoadingView.Style.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  if (((a1 | a2) & (unint64_t)&_mh_execute_header) != 0)
    return BYTE4(a1) & BYTE4(a2) & 1;
  else
    return *(float *)&a1 == *(float *)&a2;
}

uint64_t sub_10032E008(uint64_t a1, uint64_t a2)
{
  int v3;
  unsigned int v4;
  uint64_t result;

  v3 = *(unsigned __int8 *)(a1 + 4);
  v4 = *(unsigned __int8 *)(a2 + 4);
  result = v3 & v4;
  if ((v3 & 1) == 0 && (v4 & 1) == 0)
    return *(float *)a1 == *(float *)a2;
  return result;
}

uint64_t sub_10032E038()
{
  uint64_t result;

  sub_10032E414();
  result = static UIFont.preferredFont(forTextStyle:weight:)(UIFontTextStyleSubheadline, UIFontWeightRegular);
  qword_1004A0288 = result;
  return result;
}

void LoadingView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer("MusicCoreUI.LoadingView", 23, "init(frame:)", 12, 0);
  __break(1u);
}

unint64_t sub_10032E138()
{
  unint64_t result;

  result = qword_1004A02C0;
  if (!qword_1004A02C0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for LoadingView.TextPosition, &type metadata for LoadingView.TextPosition);
    atomic_store(result, (unint64_t *)&qword_1004A02C0);
  }
  return result;
}

uint64_t type metadata accessor for LoadingView()
{
  return objc_opt_self(_TtC11MusicCoreUI11LoadingView);
}

uint64_t storeEnumTagSinglePayload for LoadingView.TextPosition(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_10032E1E8 + 4 * byte_10039ECA5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_10032E21C + 4 * byte_10039ECA0[v4]))();
}

uint64_t sub_10032E21C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10032E224(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10032E22CLL);
  return result;
}

uint64_t sub_10032E238(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10032E240);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_10032E244(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10032E24C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LoadingView.TextPosition()
{
  return &type metadata for LoadingView.TextPosition;
}

uint64_t initializeBufferWithCopyOfBuffer for LoadingView.Style(uint64_t result, int *a2)
{
  int v2;

  v2 = *a2;
  *(_BYTE *)(result + 4) = *((_BYTE *)a2 + 4);
  *(_DWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for LoadingView.Style(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 5))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for LoadingView.Style(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_BYTE *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 5) = v3;
  return result;
}

uint64_t sub_10032E2C8(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 4))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_10032E2E4(uint64_t result, int a2)
{
  if (a2)
  {
    *(_DWORD *)result = a2 - 1;
    *(_BYTE *)(result + 4) = 1;
  }
  else
  {
    *(_BYTE *)(result + 4) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for LoadingView.Style()
{
  return &type metadata for LoadingView.Style;
}

void sub_10032E314()
{
  _BYTE *v0;
  char *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = &v0[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_style];
  *((_WORD *)v1 + 2) = 256;
  *(_DWORD *)v1 = 0;
  v0[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_titlePosition] = 1;
  v2 = &v0[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_title];
  *v2 = 0;
  v2[1] = 0;
  v3 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v4 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_activityIndicator;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "initWithActivityIndicatorStyle:", 100);
  *(_QWORD *)&v0[OBJC_IVAR____TtC11MusicCoreUI11LoadingView____lazy_storage___progressBar] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001003B2590, "MusicCoreUI/LoadingView.swift", 29, 2, 42, 0);
  __break(1u);
}

unint64_t sub_10032E414()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100498E28;
  if (!qword_100498E28)
  {
    v1 = objc_opt_self(UIFont);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100498E28);
  }
  return result;
}

uint64_t MarkupView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t result;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD v15[2];

  type metadata accessor for AttributedString(0);
  __chkstk_darwin();
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = a1;
  v15[1] = a2;
  v8 = sub_100005574(&qword_1004A02F0);
  swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  swift_bridgeObjectRetain();
  v9 = MarkupRenderer.init(_:)(v15);
  dispatch thunk of MarkupRenderer.attributedString.getter();
  v10 = swift_release(v9);
  result = Text.init(_:)(v7, v10);
  *(_QWORD *)a3 = result;
  *(_QWORD *)(a3 + 8) = v12;
  *(_BYTE *)(a3 + 16) = v13 & 1;
  *(_QWORD *)(a3 + 24) = v14;
  return result;
}

uint64_t sub_10032E518(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of MarkupView.body>>, 1);
}

uint64_t sub_10032E528@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t result;
  uint64_t v11;
  char v12;
  uint64_t v13;
  _QWORD v14[2];

  type metadata accessor for AttributedString(0);
  __chkstk_darwin();
  v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v1;
  v6 = v1[1];
  v14[0] = v5;
  v14[1] = v6;
  v7 = sub_100005574(&qword_1004A02F0);
  swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
  swift_bridgeObjectRetain();
  v8 = MarkupRenderer.init(_:)(v14);
  dispatch thunk of MarkupRenderer.attributedString.getter();
  v9 = swift_release(v8);
  result = Text.init(_:)(v4, v9);
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v11;
  *(_BYTE *)(a1 + 16) = v12 & 1;
  *(_QWORD *)(a1 + 24) = v13;
  return result;
}

ValueMetadata *type metadata accessor for MarkupView()
{
  return &type metadata for MarkupView;
}

void *sub_10032E5FC()
{
  return &protocol witness table for Text;
}

uint64_t NoticeView.init(notice:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;

  v4 = (int *)type metadata accessor for NoticeView(0);
  v5 = a2 + v4[5];
  *(_QWORD *)v5 = swift_getKeyPath(&unk_10039EDE0);
  *(_QWORD *)(v5 + 8) = 0;
  *(_WORD *)(v5 + 16) = 0;
  v6 = (_QWORD *)(a2 + v4[6]);
  v17 = 0x3FF0000000000000;
  State.init(wrappedValue:)(&v14, &v17, &type metadata for Double);
  v7 = v15;
  *v6 = v14;
  v6[1] = v7;
  v8 = a2 + v4[7];
  LOBYTE(v17) = 0;
  GestureState.init(wrappedValue:)(&v14, &v17, &type metadata for Bool);
  v9 = v15;
  v10 = v16;
  *(_BYTE *)v8 = v14;
  *(_QWORD *)(v8 + 8) = v9;
  *(_OWORD *)(v8 + 16) = v10;
  v11 = a2 + v4[8];
  LOBYTE(v17) = 0;
  State.init(wrappedValue:)(&v14, &v17, &type metadata for Bool);
  v12 = v15;
  *(_BYTE *)v11 = v14;
  *(_QWORD *)(v11 + 8) = v12;
  return sub_1000648AC(a1, a2, type metadata accessor for Notice);
}

uint64_t type metadata accessor for NoticeView(uint64_t a1)
{
  return sub_1000091AC(a1, qword_1004A0478, (uint64_t)&nominal type descriptor for NoticeView);
}

uint64_t EnvironmentValues.noticeDismissal.getter()
{
  unint64_t v0;
  uint64_t v2;

  v0 = sub_10032E91C();
  EnvironmentValues.subscript.getter(&_s25NoticeDismissalContextKeyVN, &_s25NoticeDismissalContextKeyVN, v0);
  return v2;
}

double sub_10032E768@<D0>(uint64_t a1@<X8>)
{
  unint64_t v2;
  double result;
  __int128 v4;
  char v5;

  v2 = sub_10032E91C();
  EnvironmentValues.subscript.getter(&_s25NoticeDismissalContextKeyVN, &_s25NoticeDismissalContextKeyVN, v2);
  result = *(double *)&v4;
  *(_OWORD *)a1 = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return result;
}

double sub_10032E7BC@<D0>(uint64_t a1@<X8>)
{
  unint64_t v2;
  double result;
  __int128 v4;
  char v5;

  v2 = sub_10032E91C();
  EnvironmentValues.subscript.getter(&_s25NoticeDismissalContextKeyVN, &_s25NoticeDismissalContextKeyVN, v2);
  result = *(double *)&v4;
  *(_OWORD *)a1 = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return result;
}

uint64_t sub_10032E810(uint64_t a1)
{
  uint64_t v1;
  char v2;
  unint64_t v3;
  uint64_t v5[2];
  char v6;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(_BYTE *)(a1 + 16);
  v5[0] = *(_QWORD *)a1;
  v5[1] = v1;
  v6 = v2;
  sub_1002D05AC(v5[0], v1);
  v3 = sub_10032E91C();
  return EnvironmentValues.subscript.setter(v5, &_s25NoticeDismissalContextKeyVN, &_s25NoticeDismissalContextKeyVN, v3);
}

uint64_t EnvironmentValues.noticeDismissal.setter(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v3;
  _QWORD v5[2];
  char v6;

  v5[0] = a1;
  v5[1] = a2;
  v6 = a3;
  v3 = sub_10032E91C();
  return EnvironmentValues.subscript.setter(v5, &_s25NoticeDismissalContextKeyVN, &_s25NoticeDismissalContextKeyVN, v3);
}

uint64_t property wrapper backing initializer of NoticeView.swapScale(double a1)
{
  double v2;
  _QWORD v3[2];

  v2 = a1;
  State.init(wrappedValue:)(v3, &v2, &type metadata for Double);
  return v3[1];
}

uint64_t property wrapper backing initializer of NoticeView.isHighlighted(char a1)
{
  char v2;
  uint64_t v3;

  v2 = a1;
  GestureState.init(wrappedValue:)(&v3, &v2, &type metadata for Bool);
  return v3;
}

unint64_t sub_10032E91C()
{
  unint64_t result;

  result = qword_1004A02F8;
  if (!qword_1004A02F8)
  {
    result = swift_getWitnessTable(&unk_10039EFDC, &_s25NoticeDismissalContextKeyVN);
    atomic_store(result, (unint64_t *)&qword_1004A02F8);
  }
  return result;
}

uint64_t NoticeView.notice.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100082248(v1, a1, type metadata accessor for Notice);
}

uint64_t NoticeView.notice.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_10032E98C(a1, v1);
}

uint64_t sub_10032E98C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Notice(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t NoticeView.dismiss.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  v1 = v0 + *(int *)(type metadata accessor for NoticeView(0) + 20);
  v2 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(unsigned __int8 *)(v1 + 16);
  v5 = *(unsigned __int8 *)(v1 + 17);
  sub_10032EA74(*(_QWORD *)v1, v3, v4, *(_BYTE *)(v1 + 17));
  v6 = sub_1002BE634(v2, v3, v4 | (v5 << 8));
  sub_1002D0570(v2, v3, v4, v5);
  return v6;
}

double sub_10032EA74(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  double v4;

  if ((a4 & 1) != 0)
    sub_1002D05AC(result, a2);
  else
    *(_QWORD *)&v4 = swift_retain(result).n128_u64[0];
  return v4;
}

uint64_t NoticeView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t KeyPath;
  uint64_t *v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  double v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  __n128 v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t OpaqueTypeConformance2;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t *v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  __n128 v128;
  double v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  double *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t *v137;
  uint64_t v138;
  _QWORD *v139;
  void (*v140)(char *, _QWORD, uint64_t);
  char *v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t result;
  char *v146;
  uint64_t v147;
  char *v148;
  char *v149;
  void (*v150)(char *, char *, uint64_t);
  char *v151;
  char *v152;
  void (*v153)(char *, char *, uint64_t);
  uint64_t v154;
  void (*v155)(char *, uint64_t);
  char *v156;
  uint64_t v157;
  uint64_t v158;
  unint64_t v159;
  uint64_t v160;
  char *v161;
  unint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  __int128 v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  uint64_t v197;
  char *v198;
  uint64_t v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  char *v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  uint64_t v214;
  char *v215;
  _QWORD *v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  _QWORD v224[2];
  __int128 v225;
  uint64_t v226;
  char *v227;
  __int128 v228;
  _OWORD v229[7];

  v2 = v1;
  v173 = a1;
  v171 = sub_100005574(&qword_1004A0300);
  __chkstk_darwin();
  v172 = (char *)&v164 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v168 = (char *)&v164 - v4;
  v214 = type metadata accessor for DynamicTypeSize(0);
  v216 = *(_QWORD **)(v214 - 8);
  __chkstk_darwin();
  v215 = (char *)&v164 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v213 = (char *)&v164 - v6;
  v170 = sub_100005574(&qword_1004A0308);
  __chkstk_darwin();
  v167 = (char *)&v164 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v169 = (uint64_t)&v164 - v8;
  v212 = type metadata accessor for ContentTransition(0);
  v211 = *(_QWORD *)(v212 - 8);
  __chkstk_darwin();
  v210 = (char *)&v164 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v208 = type metadata accessor for TapGesture(0);
  v206 = *(_QWORD *)(v208 - 8);
  __chkstk_darwin();
  v204 = (char *)&v164 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v207 = sub_100005574(&qword_1004A0310);
  v205 = *(_QWORD *)(v207 - 8);
  __chkstk_darwin();
  v203 = (char *)&v164 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v223 = type metadata accessor for NoticeView(0);
  v189 = *(_QWORD *)(v223 - 8);
  __chkstk_darwin();
  v219 = v12;
  v209 = (uint64_t)&v164 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v182 = type metadata accessor for LocalCoordinateSpace(0);
  __chkstk_darwin();
  v181 = (char *)&v164 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v191 = type metadata accessor for DragGesture(0);
  v190 = *(_QWORD *)(v191 - 8);
  __chkstk_darwin();
  v188 = (char *)&v164 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v184 = sub_100005574(&qword_1004A0318);
  __chkstk_darwin();
  v198 = (char *)&v164 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v202 = sub_100005574(&qword_1004A0320);
  __chkstk_darwin();
  v199 = (uint64_t)&v164 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v180 = type metadata accessor for Material(0);
  v179 = *(_QWORD *)(v180 - 8);
  __chkstk_darwin();
  v174 = (char *)&v164 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_10049DF58);
  __chkstk_darwin();
  v19 = (char **)((char *)&v164 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v201 = type metadata accessor for Notice(0);
  __chkstk_darwin();
  v21 = (char *)&v164 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for NoticeView.Content(0);
  __chkstk_darwin();
  v24 = (char *)&v164 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v175 = sub_100005574(&qword_1004A0328);
  __chkstk_darwin();
  v26 = (char *)&v164 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v176 = sub_100005574(&qword_1004A0330);
  __chkstk_darwin();
  v28 = (char *)&v164 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v177 = sub_100005574(&qword_1004A0338);
  __chkstk_darwin();
  v30 = (char *)&v164 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v178 = sub_100005574(&qword_1004A0340);
  __chkstk_darwin();
  v32 = (char *)&v164 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v221 = sub_100005574(&qword_1004A0348);
  __chkstk_darwin();
  v220 = (uint64_t)&v164 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v187 = sub_100005574(&qword_1004A0350);
  v186 = *(_QWORD *)(v187 - 8);
  __chkstk_darwin();
  v185 = (char *)&v164 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v195 = sub_100005574(&qword_1004A0358);
  v193 = *(_QWORD *)(v195 - 8);
  __chkstk_darwin();
  v192 = (char *)&v164 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v183 = sub_100005574(&qword_1004A0360);
  __chkstk_darwin();
  v196 = (char *)&v164 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v194 = sub_100005574(&qword_1004A0368);
  __chkstk_darwin();
  v197 = (uint64_t)&v164 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v218 = sub_100005574(&qword_1004A0370);
  __chkstk_darwin();
  v217 = (char *)&v164 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v166 = sub_100005574(&qword_1004A0378);
  v165 = *(_QWORD *)(v166 - 8);
  __chkstk_darwin();
  v164 = (char *)&v164 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v222 = v2;
  sub_100082248(v2, (uint64_t)v21, type metadata accessor for Notice);
  *v19 = swift_getKeyPath(&unk_10039EE08);
  v40 = sub_100005574(&qword_100498E60);
  swift_storeEnumTagMultiPayload(v19, v40, 0);
  KeyPath = swift_getKeyPath(&unk_10039EE38);
  v42 = (uint64_t *)&v24[*(int *)(v22 + 32)];
  *v42 = KeyPath;
  v43 = sub_100005574((uint64_t *)&unk_100498E50);
  swift_storeEnumTagMultiPayload(v42, v43, 0);
  v200 = v21;
  sub_1000648AC((uint64_t)v21, (uint64_t)v24, type metadata accessor for Notice);
  *(_QWORD *)&v229[0] = 0x4041000000000000;
  v44 = sub_10032FEFC();
  ScaledMetric.init(wrappedValue:)(v229, &type metadata for Double, v44);
  *(_QWORD *)&v229[0] = 0x4010000000000000;
  v45 = sub_10029CE4C();
  ScaledMetric.init(wrappedValue:)(v229, &type metadata for CGFloat, v45);
  v46 = sub_1000149A8((uint64_t)v19, (uint64_t)&v24[*(int *)(v22 + 28)], &qword_10049DF58);
  v47 = static Alignment.center.getter(v46);
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v229, 0, 1, 0, 1, 0, 1, 0x404B000000000000, 0, 0, 1, 0, 1, v47, v48);
  sub_100082248((uint64_t)v24, (uint64_t)v26, type metadata accessor for NoticeView.Content);
  v49 = &v26[*(int *)(v175 + 36)];
  v50 = v229[5];
  *((_OWORD *)v49 + 4) = v229[4];
  *((_OWORD *)v49 + 5) = v50;
  *((_OWORD *)v49 + 6) = v229[6];
  v51 = v229[1];
  *(_OWORD *)v49 = v229[0];
  *((_OWORD *)v49 + 1) = v51;
  v52 = v229[3];
  *((_OWORD *)v49 + 2) = v229[2];
  *((_OWORD *)v49 + 3) = v52;
  v53 = sub_100006798((uint64_t)v24, type metadata accessor for NoticeView.Content);
  v54 = v174;
  v55 = static Material.regular.getter(v53);
  LOBYTE(v19) = static Edge.Set.all.getter(v55);
  v56 = &v28[*(int *)(v176 + 36)];
  v57 = v179;
  v58 = v180;
  (*(void (**)(char *, char *, _QWORD))(v179 + 16))(v56, v54, v180);
  v56[*(int *)(sub_100005574(&qword_10049D570) + 36)] = (char)v19;
  sub_100014A7C((uint64_t)v26, (uint64_t)v28, &qword_1004A0328);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v54, v58);
  sub_100008758((uint64_t)v26, &qword_1004A0328);
  if (qword_100498A98 != -1)
    swift_once(&qword_100498A98, sub_100296574);
  v59 = static Corner.extraLarge;
  v60 = *(_QWORD *)algn_1004A3D48;
  v61 = byte_1004A3D50;
  sub_100014A7C((uint64_t)v28, (uint64_t)v30, &qword_1004A0330);
  v62 = &v30[*(int *)(v177 + 36)];
  *(_QWORD *)v62 = v59;
  *((_QWORD *)v62 + 1) = v60;
  v62[16] = v61;
  sub_100008758((uint64_t)v28, &qword_1004A0330);
  v63 = v222 + *(int *)(v223 + 28);
  v64 = v222;
  v65 = *(char **)(v63 + 8);
  LOBYTE(v226) = *(_BYTE *)v63;
  v227 = v65;
  v228 = *(_OWORD *)(v63 + 16);
  v66 = sub_100005574(&qword_1004A0388);
  GestureState.wrappedValue.getter(v224);
  if (LOBYTE(v224[0]))
    v67 = 0.4;
  else
    v67 = 1.0;
  sub_100014A7C((uint64_t)v30, (uint64_t)v32, &qword_1004A0338);
  *(double *)&v32[*(int *)(v178 + 36)] = v67;
  v68 = sub_100008758((uint64_t)v30, &qword_1004A0338);
  v69 = static Animation.easeIn(duration:)(v68, 0.2);
  v70 = *(char **)(v63 + 8);
  LOBYTE(v226) = *(_BYTE *)v63;
  v227 = v70;
  v228 = *(_OWORD *)(v63 + 16);
  GestureState.wrappedValue.getter(v224);
  v71 = v224[0];
  v72 = v220;
  sub_100014A7C((uint64_t)v32, v220, &qword_1004A0340);
  v73 = v72 + *(int *)(v221 + 36);
  *(_QWORD *)v73 = v69;
  *(_BYTE *)(v73 + 8) = v71;
  v74 = sub_100008758((uint64_t)v32, &qword_1004A0340);
  v75 = v181;
  static CoordinateSpaceProtocol<>.local.getter(v74);
  v76 = v188;
  DragGesture.init<A>(minimumDistance:coordinateSpace:)(v75, v182, &protocol witness table for LocalCoordinateSpace, 0.0);
  v77 = *(_QWORD *)(v63 + 8);
  LOBYTE(v224[0]) = *(_BYTE *)v63;
  v224[1] = v77;
  v225 = *(_OWORD *)(v63 + 16);
  GestureState.projectedValue.getter(&v226, v66);
  LOBYTE(v75) = v226;
  v181 = v227;
  v180 = v228;
  v78 = v64;
  v79 = v209;
  sub_100082248(v64, v209, type metadata accessor for NoticeView);
  v80 = *(unsigned __int8 *)(v189 + 80);
  v81 = (v80 + 16) & ~v80;
  v82 = v81 + v219;
  v219 = v80 | 7;
  v182 = v82;
  v83 = swift_allocObject(&unk_100464648, v82, v80 | 7);
  v189 = v81;
  sub_1000648AC(v79, v83 + v81, type metadata accessor for NoticeView);
  v84 = v190;
  v85 = (uint64_t)v198;
  v86 = v191;
  (*(void (**)(char *, char *, uint64_t))(v190 + 16))(v198, v76, v191);
  v87 = v184;
  v88 = v85 + *(int *)(v184 + 44);
  *(_BYTE *)v88 = (_BYTE)v75;
  *(_QWORD *)(v88 + 8) = v181;
  *(_OWORD *)(v88 + 16) = v180;
  v89 = (_QWORD *)(v85 + *(int *)(v87 + 48));
  *v89 = sub_100330124;
  v89[1] = v83;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v76, v86);
  v90 = v204;
  TapGesture.init(count:)(1);
  sub_100082248(v78, v79, type metadata accessor for NoticeView);
  v91 = swift_allocObject(&unk_100464670, v82, v219);
  v92 = v79;
  sub_1000648AC(v79, v91 + v81, type metadata accessor for NoticeView);
  v93 = swift_allocObject(&unk_100464698, 32, 7);
  *(_QWORD *)(v93 + 16) = sub_100330470;
  *(_QWORD *)(v93 + 24) = v91;
  v94 = v203;
  v95 = v208;
  Gesture.onEnded(_:)(sub_100009BB0, v93, v208, &protocol witness table for TapGesture);
  v96 = swift_release(v93);
  (*(void (**)(char *, uint64_t, __n128))(v206 + 8))(v90, v95, v96);
  v97 = v199;
  sub_100014A7C(v85, v199, &qword_1004A0318);
  v98 = v202;
  (*(void (**)(uint64_t, char *, uint64_t))(v205 + 32))(v97 + *(int *)(v202 + 52), v94, v207);
  v99 = sub_100008758(v85, &qword_1004A0318);
  v100 = static GestureMask.all.getter(v99);
  v101 = sub_1003304A0();
  v102 = sub_10002FFB8(&qword_1004A03C0, &qword_1004A0320, (uint64_t)&protocol conformance descriptor for SequenceGesture<A, B>);
  v103 = v185;
  v104 = v221;
  v105 = v220;
  View.gesture<A>(_:including:)(v97, v100, v221, v98, v101, v102);
  sub_100008758(v97, &qword_1004A0320);
  sub_100008758(v105, &qword_1004A0348);
  v106 = v222;
  v107 = (uint64_t)v200;
  sub_100082248(v222, (uint64_t)v200, type metadata accessor for Notice);
  sub_100082248(v106, v92, type metadata accessor for NoticeView);
  v108 = swift_allocObject(&unk_1004646C0, v182, v219);
  sub_1000648AC(v92, v108 + v189, type metadata accessor for NoticeView);
  v226 = v104;
  v227 = (char *)v98;
  *(_QWORD *)&v228 = v101;
  *((_QWORD *)&v228 + 1) = v102;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v226, &opaque type descriptor for <<opaque return type of View.gesture<A>(_:including:)>>, 1);
  v110 = sub_100006924(&qword_1004A03C8, type metadata accessor for Notice, (uint64_t)&protocol conformance descriptor for Notice);
  v111 = v192;
  v112 = v187;
  View.onChange<A>(of:initial:_:)(v107, 0, sub_100330800, v108, v187, v201, OpaqueTypeConformance2, v110);
  swift_release(v108);
  sub_100006798(v107, type metadata accessor for Notice);
  v113 = (*(uint64_t (**)(char *, uint64_t))(v186 + 8))(v103, v112);
  v114 = v210;
  static ContentTransition.opacity.getter(v113);
  v115 = swift_getKeyPath(&unk_10039EE68);
  v116 = (uint64_t)v196;
  v117 = (uint64_t *)&v196[*(int *)(v183 + 36)];
  v118 = sub_100005574(&qword_1004A03D0);
  v119 = v211;
  v120 = v212;
  (*(void (**)(char *, char *, uint64_t))(v211 + 16))((char *)v117 + *(int *)(v118 + 28), v114, v212);
  *v117 = v115;
  v121 = v193;
  v122 = v195;
  (*(void (**)(uint64_t, char *, uint64_t))(v193 + 16))(v116, v111, v195);
  (*(void (**)(char *, uint64_t))(v119 + 8))(v114, v120);
  (*(void (**)(char *, uint64_t))(v121 + 8))(v111, v122);
  v123 = (uint64_t *)(v106 + *(int *)(v223 + 24));
  v124 = *v123;
  v125 = (char *)v123[1];
  v226 = v124;
  v227 = v125;
  v126 = sub_100005574(&qword_1004A03D8);
  State.wrappedValue.getter(v224, v126);
  v127 = v224[0];
  v129 = static UnitPoint.center.getter(v128);
  v131 = v130;
  v132 = v197;
  sub_100014A7C(v116, v197, &qword_1004A0360);
  v133 = (double *)(v132 + *(int *)(v194 + 36));
  *(_QWORD *)v133 = v127;
  *((_QWORD *)v133 + 1) = v127;
  v133[2] = v129;
  *((_QWORD *)v133 + 3) = v131;
  sub_100008758(v116, &qword_1004A0360);
  v134 = static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)(1.0, 818.0, 38.0, 1.0);
  v135 = Animation.delay(_:)(0.05);
  swift_release(v134);
  v136 = (uint64_t)v217;
  v137 = (uint64_t *)&v217[*(int *)(v218 + 36)];
  v138 = sub_100005574(&qword_1004A03E0);
  sub_100082248(v106, (uint64_t)v137 + *(int *)(v138 + 36), type metadata accessor for Notice);
  *v137 = v135;
  sub_1000149A8(v132, v136, &qword_1004A0368);
  v139 = v216;
  v140 = (void (*)(char *, _QWORD, uint64_t))v216[13];
  v141 = v213;
  v142 = v214;
  v140(v213, enum case for DynamicTypeSize.xSmall(_:), v214);
  v143 = v215;
  v140(v215, enum case for DynamicTypeSize.accessibility2(_:), v142);
  v144 = sub_100006924((unint64_t *)&qword_10049E500, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  result = dispatch thunk of static Comparable.<= infix(_:_:)(v141, v143, v142, v144);
  if ((result & 1) != 0)
  {
    v146 = v143;
    v147 = v171;
    v148 = v168;
    v149 = &v168[*(int *)(v171 + 48)];
    v150 = (void (*)(char *, char *, uint64_t))v139[4];
    v150(v168, v141, v142);
    v150(v149, v146, v142);
    v151 = v172;
    v152 = &v172[*(int *)(v147 + 48)];
    v153 = (void (*)(char *, char *, uint64_t))v139[2];
    v153(v172, v148, v142);
    v153(v152, v149, v142);
    v154 = (uint64_t)v167;
    v150(v167, v151, v142);
    v155 = (void (*)(char *, uint64_t))v139[1];
    v155(v152, v142);
    v156 = &v151[*(int *)(v147 + 48)];
    v150(v151, v148, v142);
    v150(v156, v149, v142);
    v157 = v170;
    v150((char *)(v154 + *(int *)(v170 + 36)), v156, v142);
    v155(v151, v142);
    v158 = v169;
    sub_1000149A8(v154, v169, &qword_1004A0308);
    v159 = sub_100333020();
    v160 = sub_10002FFB8(&qword_1004A0410, &qword_1004A0308, (uint64_t)&protocol conformance descriptor for ClosedRange<A>);
    v161 = v164;
    v162 = v159;
    v163 = (uint64_t)v217;
    View.dynamicTypeSize<A>(_:)(v158, v218, v157, v162, v160);
    sub_100008758(v158, &qword_1004A0308);
    sub_100008758(v163, &qword_1004A0370);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v165 + 32))(v173, v161, v166);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for NoticeView.Content(uint64_t a1)
{
  return sub_1000091AC(a1, (uint64_t *)&unk_1004A0520, (uint64_t)&nominal type descriptor for NoticeView.Content);
}

unint64_t sub_10032FEFC()
{
  unint64_t result;

  result = qword_1004A0380;
  if (!qword_1004A0380)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Double, &type metadata for Double);
    atomic_store(result, (unint64_t *)&qword_1004A0380);
  }
  return result;
}

uint64_t sub_10032FF40(uint64_t a1, _BYTE *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  int v12;
  uint64_t result;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;

  v6 = type metadata accessor for NoticeView(0);
  __chkstk_darwin();
  v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  v10 = &v22[-v9];
  v11 = type metadata accessor for Notice(0);
  v12 = *(unsigned __int8 *)(a4 + *(int *)(v11 + 40));
  sub_100082248(a4, (uint64_t)v10, type metadata accessor for NoticeView);
  if (v12 == 1)
  {
    result = sub_100006798((uint64_t)v10, type metadata accessor for NoticeView);
LABEL_5:
    *a2 = 1;
    return result;
  }
  v14 = (uint64_t *)&v10[*(int *)(v11 + 32)];
  v16 = *v14;
  v15 = v14[1];
  if (*v14)
  {
    v17 = swift_allocObject(&unk_1004647B0, 32, 7);
    *(_QWORD *)(v17 + 16) = v16;
    *(_QWORD *)(v17 + 24) = v15;
    sub_10003A434(v16, v15);
    sub_10003A5C8((uint64_t)sub_1000B0290, v17);
    sub_100082248((uint64_t)v10, (uint64_t)v8, type metadata accessor for NoticeView);
    v18 = &v8[*(int *)(v6 + 32)];
    v19 = *v18;
    v20 = *((_QWORD *)v18 + 1);
    v22[8] = v19;
    v23 = v20;
    v21 = sub_100005574(&qword_10049C5C8);
    State.wrappedValue.getter(&v24, v21);
    sub_100006798((uint64_t)v8, type metadata accessor for NoticeView);
    result = sub_100006798((uint64_t)v10, type metadata accessor for NoticeView);
    if ((v24 & 1) != 0)
      return result;
    goto LABEL_5;
  }
  sub_10003A434(0, v14[1]);
  sub_10003A5C8(0, 0);
  sub_100082248((uint64_t)v10, (uint64_t)v8, type metadata accessor for NoticeView);
  sub_100006798((uint64_t)v8, type metadata accessor for NoticeView);
  return sub_100006798((uint64_t)v10, type metadata accessor for NoticeView);
}

uint64_t sub_100330124(uint64_t a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for NoticeView(0) - 8) + 80);
  return sub_10032FF40(a1, a2, a3, v3 + ((v7 + 16) & ~v7));
}

double sub_100330178(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void (*v4)(void);
  double result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = type metadata accessor for NoticeView(0);
  v3 = sub_100005574(&qword_10049C5C8);
  State.wrappedValue.getter(&v15, v3);
  if ((v15 & 1) == 0)
  {
    LOBYTE(v15) = 1;
    State.wrappedValue.setter(&v15, v3);
    v4 = *(void (**)(void))(a1 + *(int *)(type metadata accessor for Notice(0) + 32));
    if (v4)
      v4();
  }
  if (*(_BYTE *)(a1 + *(int *)(type metadata accessor for Notice(0) + 40)) == 1)
  {
    v6 = a1 + *(int *)(v2 + 20);
    v7 = *(_QWORD *)v6;
    v8 = *(_QWORD *)(v6 + 8);
    v9 = *(unsigned __int8 *)(v6 + 16);
    v10 = *(unsigned __int8 *)(v6 + 17);
    sub_10032EA74(*(_QWORD *)v6, v8, v9, *(_BYTE *)(v6 + 17));
    v11 = sub_1002BE634(v7, v8, v9 | (v10 << 8));
    v13 = v12;
    result = sub_1002D0570(v7, v8, v9, v10);
    if (v13)
    {
      LOBYTE(v15) = 0;
      v14 = sub_100005574(&qword_10049FE00);
      Binding.wrappedValue.setter(&v15, v14);
      swift_release(v13);
      *(_QWORD *)&result = swift_release(v11).n128_u64[0];
    }
  }
  return result;
}

uint64_t sub_1003302F0()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  uint64_t v14;

  v1 = (int *)type metadata accessor for NoticeView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  swift_bridgeObjectRelease();
  v7 = type metadata accessor for Notice(0);
  v8 = (_QWORD *)(v0 + v4 + *(int *)(v7 + 20));
  v9 = type metadata accessor for Notice.Thumbnail(0);
  if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v8, v9);
    if (EnumCaseMultiPayload == 1)
    {
      v14 = type metadata accessor for Artwork(0);
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v8, v14);
    }
    else if (!EnumCaseMultiPayload)
    {
      swift_release(*v8);
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = (_QWORD *)(v6 + *(int *)(v7 + 32));
  if (*v10)
    swift_release(v10[1]);
  sub_1002D0570(*(_QWORD *)(v6 + v1[5]), *(_QWORD *)(v6 + v1[5] + 8), *(unsigned __int8 *)(v6 + v1[5] + 16), *(_BYTE *)(v6 + v1[5] + 17));
  swift_release(*(_QWORD *)(v6 + v1[6] + 8));
  v11 = v6 + v1[7];
  swift_release(*(_QWORD *)(v11 + 8));
  swift_release(*(_QWORD *)(v11 + 24));
  swift_release(*(_QWORD *)(v6 + v1[8] + 8));
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_100330470()
{
  return sub_100336564((uint64_t (*)(uint64_t))sub_100330178);
}

uint64_t sub_10033047C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_1003304A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004A0390;
  if (!qword_1004A0390)
  {
    v1 = sub_100005600(&qword_1004A0348);
    sub_100330524();
    sub_10002FFB8(&qword_10049D678, &qword_10049D680, (uint64_t)&protocol conformance descriptor for _AnimationModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1004A0390);
  }
  return result;
}

unint64_t sub_100330524()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004A0398;
  if (!qword_1004A0398)
  {
    v1 = sub_100005600(&qword_1004A0340);
    sub_1003035C0(&qword_1004A03A0, &qword_1004A0338, (void (*)(void))sub_1003305B0, (void (*)(void))sub_100296B98);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1004A0398);
  }
  return result;
}

unint64_t sub_1003305B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004A03A8;
  if (!qword_1004A03A8)
  {
    v1 = sub_100005600(&qword_1004A0330);
    sub_100330634();
    sub_10002FFB8(&qword_10049D568, &qword_10049D570, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1004A03A8);
  }
  return result;
}

unint64_t sub_100330634()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004A03B0;
  if (!qword_1004A03B0)
  {
    v1 = sub_100005600(&qword_1004A0328);
    sub_100006924(&qword_1004A03B8, type metadata accessor for NoticeView.Content, (uint64_t)&unk_10039EF8C);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1004A03B0);
  }
  return result;
}

void sub_1003306B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[16];
  uint64_t v20;

  v4 = *(_QWORD *)(type metadata accessor for NoticeView(0) - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin();
  v6 = static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)(1.0, 850.0, 48.0, 1.0);
  v20 = a3;
  withAnimation<A>(_:_:)(v6, sub_1003364F8, v19, (char *)&type metadata for () + 8);
  swift_release(v6);
  v7 = sub_100336518();
  v15 = (void *)static OS_dispatch_queue.main.getter(v7, v8, v9, v10, v11, v12, v13, v14);
  sub_100082248(a3, (uint64_t)&v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], type metadata accessor for NoticeView);
  v16 = *(unsigned __int8 *)(v4 + 80);
  v17 = (v16 + 16) & ~v16;
  v18 = swift_allocObject(&unk_100464788, v17 + v5, v16 | 7);
  sub_1000648AC((uint64_t)&v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], v18 + v17, type metadata accessor for NoticeView);
  OS_dispatch_queue.asyncAfter(_:block:)((uint64_t)sub_100336558, v18, 0.215);
  swift_release(v18);

}

void sub_100330800(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for NoticeView(0) - 8) + 80);
  sub_1003306B8(a1, a2, v2 + ((v5 + 16) & ~v5));
}

double sub_10033084C(uint64_t a1)
{
  uint64_t v2;
  double result;
  _QWORD v4[4];

  v2 = static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)(1.0, 227.0, 17.0, 1.0);
  v4[2] = a1;
  withAnimation<A>(_:_:)(v2, sub_1003365A0, v4, (char *)&type metadata for () + 8);
  *(_QWORD *)&result = swift_release(v2).n128_u64[0];
  return result;
}

uint64_t sub_1003308C4(double a1)
{
  uint64_t v2;
  double v4;

  type metadata accessor for NoticeView(0);
  v4 = a1;
  v2 = sub_100005574(&qword_1004A03D8);
  return State.wrappedValue.setter(&v4, v2);
}

uint64_t sub_100330940@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(_QWORD);
  _BOOL8 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char *v21;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  sub_100005574(&qword_1004A0570);
  __chkstk_darwin();
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100005574(&qword_1004A0578);
  __chkstk_darwin();
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DynamicTypeSize(0);
  __chkstk_darwin();
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Notice(0);
  __chkstk_darwin();
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100082248(v1, (uint64_t)v11, v12);
  type metadata accessor for NoticeView.Content(0);
  sub_1002BE220((uint64_t)v9);
  sub_100335D3C((uint64_t)v11, (uint64_t)v9, (double *)&v24);
  v13 = sub_100330B44();
  if (v13)
    v14 = static VerticalAlignment.top.getter();
  else
    v14 = static VerticalAlignment.center.getter(v13);
  v15 = v27;
  *(_QWORD *)v4 = v14;
  *((_QWORD *)v4 + 1) = v15;
  v4[16] = 0;
  v16 = sub_100005574(&qword_1004A0580);
  v17 = sub_100330CD0(v1, (uint64_t)&v24, (uint64_t)&v4[*(int *)(v16 + 44)]);
  v23 = v24;
  v18 = v25;
  v19 = v26;
  v20 = static Edge.Set.all.getter(v17);
  sub_100014A7C((uint64_t)v4, (uint64_t)v7, &qword_1004A0570);
  v21 = &v7[*(int *)(v5 + 36)];
  *v21 = v20;
  *(_OWORD *)(v21 + 8) = v23;
  *((_QWORD *)v21 + 3) = v18;
  *((_QWORD *)v21 + 4) = v19;
  v21[40] = 0;
  sub_100008758((uint64_t)v4, &qword_1004A0570);
  return sub_1000149A8((uint64_t)v7, a1, &qword_1004A0578);
}

BOOL sub_100330B44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v18;

  v1 = v0;
  sub_100005574(&qword_1004A0418);
  __chkstk_darwin();
  v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DynamicTypeSize(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for NoticeView.Content(0);
  v8 = sub_1002BE220((uint64_t)v7);
  v9 = DynamicTypeSize.isAccessibilitySize.getter(v8);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if ((v9 & 1) != 0)
  {
    v10 = type metadata accessor for Notice(0);
    v11 = (_QWORD *)(v1 + *(int *)(v10 + 28));
    v12 = v11[1];
    if (v12)
    {
      v13 = *v11 & 0xFFFFFFFFFFFFLL;
      if ((v12 & 0x2000000000000000) != 0 ? HIBYTE(v12) & 0xF : v13)
      {
        sub_100014A7C(v1 + *(int *)(v10 + 20), (uint64_t)v3, &qword_1004A0418);
        v15 = type metadata accessor for Notice.Thumbnail(0);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v3, 1, v15) != 1)
        {
          v16 = swift_getEnumCaseMultiPayload(v3, v15) == 1;
          sub_100006798((uint64_t)v3, type metadata accessor for Notice.Thumbnail);
          return v16;
        }
        sub_100008758((uint64_t)v3, &qword_1004A0418);
      }
    }
  }
  return 0;
}

uint64_t sub_100330CD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  double v23;
  uint64_t v24;
  uint64_t KeyPath;
  uint64_t *v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _OWORD v55[7];

  v53 = a2;
  v54 = a3;
  v50 = a1;
  sub_100005574(&qword_1004A0588);
  __chkstk_darwin();
  v52 = (uint64_t)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v6 = (char *)&v46 - v5;
  sub_100005574(&qword_1004A0590);
  __chkstk_darwin();
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = sub_100005574(&qword_1004A0598);
  __chkstk_darwin();
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_100005574(&qword_1004A05A0);
  __chkstk_darwin();
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_100005574(&qword_1004A05A8);
  __chkstk_darwin();
  v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = sub_100005574(&qword_1004A05B0);
  __chkstk_darwin();
  v51 = (uint64_t)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v17 = (char *)&v46 - v16;
  __chkstk_darwin();
  v19 = (char *)&v46 - v18;
  sub_100331148(a1, (uint64_t)v8);
  v21 = static Font.subheadline.getter(v20);
  v23 = static Font.Weight.semibold.getter(v22);
  v24 = Font.weight(_:)(v21, v23);
  swift_release(v21);
  KeyPath = swift_getKeyPath(&unk_10039F018);
  sub_100014A7C((uint64_t)v8, (uint64_t)v10, &qword_1004A0590);
  v26 = (uint64_t *)&v10[*(int *)(v46 + 36)];
  *v26 = KeyPath;
  v26[1] = v24;
  v27 = sub_100008758((uint64_t)v8, &qword_1004A0590);
  v28 = static HierarchicalShapeStyle.primary.getter(v27);
  sub_100014A7C((uint64_t)v10, (uint64_t)v12, &qword_1004A0598);
  *(_DWORD *)&v12[*(int *)(v47 + 36)] = v28;
  v29 = sub_100008758((uint64_t)v10, &qword_1004A0598);
  v30 = static Alignment.center.getter(v29);
  v45 = 1;
  v44 = 1;
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v55, 0x403E000000000000, 0, 0, 1, 0, 1, 0, 1, 0, v44, 0, v45, v30, v31);
  sub_100014A7C((uint64_t)v12, (uint64_t)v14, &qword_1004A05A0);
  v32 = &v14[*(int *)(v48 + 36)];
  v33 = v55[5];
  *((_OWORD *)v32 + 4) = v55[4];
  *((_OWORD *)v32 + 5) = v33;
  *((_OWORD *)v32 + 6) = v55[6];
  v34 = v55[1];
  *(_OWORD *)v32 = v55[0];
  *((_OWORD *)v32 + 1) = v34;
  v35 = v55[3];
  *((_OWORD *)v32 + 2) = v55[2];
  *((_OWORD *)v32 + 3) = v35;
  sub_100008758((uint64_t)v12, &qword_1004A05A0);
  sub_100014A7C((uint64_t)v14, (uint64_t)v17, &qword_1004A05A8);
  v36 = &v17[*(int *)(v49 + 36)];
  *(_QWORD *)v36 = 0x3FF0000000000000;
  *((_WORD *)v36 + 4) = 0;
  sub_100008758((uint64_t)v14, &qword_1004A05A8);
  v37 = sub_1000149A8((uint64_t)v17, (uint64_t)v19, &qword_1004A05B0);
  *(_QWORD *)v6 = static HorizontalAlignment.leading.getter(v37);
  *((_QWORD *)v6 + 1) = 0;
  v6[16] = 1;
  v38 = sub_100005574(&qword_1004A05B8);
  sub_100331C28(v50, v53, (uint64_t *)&v6[*(int *)(v38 + 44)]);
  v39 = v51;
  sub_100014A7C((uint64_t)v19, v51, &qword_1004A05B0);
  v40 = v52;
  sub_100014A7C((uint64_t)v6, v52, &qword_1004A0588);
  v41 = v54;
  sub_100014A7C(v39, v54, &qword_1004A05B0);
  v42 = sub_100005574(&qword_1004A05C0);
  sub_100014A7C(v40, v41 + *(int *)(v42 + 48), &qword_1004A0588);
  sub_100008758((uint64_t)v6, &qword_1004A0588);
  sub_100008758((uint64_t)v19, &qword_1004A05B0);
  sub_100008758(v40, &qword_1004A0588);
  return sub_100008758(v39, &qword_1004A05B0);
}

void sub_100331148(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t EnumCaseMultiPayload;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _OWORD *v77;
  __int128 v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _OWORD v113[3];

  v112 = a2;
  v110 = sub_100005574(&qword_1004A0600);
  __chkstk_darwin();
  v4 = (char *)&v84 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = sub_100005574(&qword_1004A0608);
  __chkstk_darwin();
  v6 = (char *)&v84 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = type metadata accessor for CircularProgressView.LineStyle(0);
  v89 = *(_QWORD *)(v90 - 8);
  __chkstk_darwin();
  v92 = (char *)&v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = type metadata accessor for CircularProgressView(0);
  v98 = *(_QWORD *)(v99 - 8);
  __chkstk_darwin();
  v97 = (char *)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100005574(&qword_1004A0610);
  __chkstk_darwin();
  v95 = (char *)&v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v101 = (uint64_t)&v84 - v11;
  v94 = type metadata accessor for ArtworkImage(0);
  v93 = *(_QWORD *)(v94 - 8);
  __chkstk_darwin();
  v91 = (char *)&v84 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = sub_100005574(&qword_1004A0618);
  __chkstk_darwin();
  v100 = (char *)&v84 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = sub_100005574(&qword_1004A0620);
  __chkstk_darwin();
  v96 = (uint64_t)&v84 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v104 = (uint64_t)&v84 - v15;
  v103 = type metadata accessor for Artwork(0);
  v108 = *(_QWORD *)(v103 - 8);
  __chkstk_darwin();
  v17 = (char *)&v84 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v102 = (char *)&v84 - v18;
  v19 = sub_100005574(&qword_1004A0628);
  __chkstk_darwin();
  v21 = (char *)&v84 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = sub_100005574(&qword_1004A0630);
  __chkstk_darwin();
  v106 = (uint64_t *)((char *)&v84 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = sub_100005574(&qword_1004A0638);
  __chkstk_darwin();
  v107 = (char *)&v84 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_1004A0418);
  __chkstk_darwin();
  v26 = (uint64_t *)((char *)&v84 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  v27 = type metadata accessor for Notice(0);
  sub_100014A7C(a1 + *(int *)(v27 + 20), (uint64_t)v26, &qword_1004A0418);
  v28 = type metadata accessor for Notice.Thumbnail(0);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 48))(v26, 1, v28) == 1)
  {
    swift_storeEnumTagMultiPayload(v4, v110, 1);
    v29 = sub_100336364();
    _ConditionalContent<>.init(storage:)(v4, v9, &type metadata for EmptyView, v29, &protocol witness table for EmptyView);
    sub_100014A7C((uint64_t)v6, (uint64_t)v21, &qword_1004A0608);
    swift_storeEnumTagMultiPayload(v21, v19, 1);
    v30 = sub_1003363E8();
    v31 = sub_10033618C(&qword_1004A0670, &qword_1004A0608, (void (*)(void))sub_100336364);
    _ConditionalContent<>.init(storage:)(v21, v23, v111, v30, v31);
    v32 = (uint64_t)v6;
    v33 = &qword_1004A0608;
LABEL_10:
    sub_100008758(v32, v33);
    return;
  }
  v85 = v21;
  v86 = v19;
  v87 = v23;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v26, v28);
  if (!(_DWORD)EnumCaseMultiPayload)
  {
    v60 = *v26;
    v61 = v105;
    v62 = v106;
    *v106 = *v26;
    swift_storeEnumTagMultiPayload(v62, v61, 0);
    v63 = sub_1003035C0(&qword_1004A0658, &qword_1004A0620, (void (*)(void))sub_100336474, (void (*)(void))sub_100296BF0);
    swift_retain(v60);
    v64 = (uint64_t)v107;
    _ConditionalContent<>.init(storage:)(v62, &type metadata for Image, v109, &protocol witness table for Image, v63);
    v65 = (uint64_t)v85;
    sub_100014A7C(v64, (uint64_t)v85, &qword_1004A0638);
    swift_storeEnumTagMultiPayload(v65, v86, 0);
    v66 = sub_1003363E8();
    v67 = sub_10033618C(&qword_1004A0670, &qword_1004A0608, (void (*)(void))sub_100336364);
    _ConditionalContent<>.init(storage:)(v65, v87, v111, v66, v67);
    sub_100008758(v64, &qword_1004A0638);
    swift_release(v60);
    return;
  }
  if ((_DWORD)EnumCaseMultiPayload != 1)
  {
    v68 = static Color.white.getter(EnumCaseMultiPayload);
    v69 = v92;
    (*(void (**)(char *, _QWORD, uint64_t))(v89 + 104))(v92, enum case for CircularProgressView.LineStyle.round(_:), v90);
    LOBYTE(v113[0]) = 1;
    v70 = v97;
    v71 = CircularProgressView.init(value:trackColor:lineWidth:lineStyle:)(0x100000000, v68, v69, 2.5);
    v72 = static Alignment.center.getter(v71);
    _FrameLayout.init(width:height:alignment:)(v113, 0x4030000000000000, 0, 0x4030000000000000, 0, v72, v73);
    v74 = v98;
    v75 = (uint64_t)v95;
    v76 = v99;
    (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v95, v70, v99);
    v77 = (_OWORD *)(v75 + *(int *)(v9 + 36));
    v78 = v113[1];
    *v77 = v113[0];
    v77[1] = v78;
    v77[2] = v113[2];
    (*(void (**)(char *, uint64_t))(v74 + 8))(v70, v76);
    v79 = v101;
    sub_1000149A8(v75, v101, &qword_1004A0610);
    sub_100014A7C(v79, (uint64_t)v4, &qword_1004A0610);
    swift_storeEnumTagMultiPayload(v4, v110, 0);
    v80 = sub_100336364();
    _ConditionalContent<>.init(storage:)(v4, v9, &type metadata for EmptyView, v80, &protocol witness table for EmptyView);
    v81 = (uint64_t)v85;
    sub_100014A7C((uint64_t)v6, (uint64_t)v85, &qword_1004A0608);
    swift_storeEnumTagMultiPayload(v81, v86, 1);
    v82 = sub_1003363E8();
    v83 = sub_10033618C(&qword_1004A0670, &qword_1004A0608, (void (*)(void))sub_100336364);
    _ConditionalContent<>.init(storage:)(v81, v87, v111, v82, v83);
    sub_100008758((uint64_t)v6, &qword_1004A0608);
    v32 = v79;
    v33 = &qword_1004A0610;
    goto LABEL_10;
  }
  v36 = v102;
  v35 = v103;
  v37 = v108;
  (*(void (**)(char *, uint64_t *, uint64_t))(v108 + 32))(v102, v26, v103);
  (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v17, v36, v35);
  type metadata accessor for NoticeView.Content(0);
  v38 = sub_100005574(&qword_1004A04C0);
  ScaledMetric.wrappedValue.getter(v113, v38);
  v39 = v91;
  ArtworkImage.init(_:height:)(v17, *(double *)v113);
  v40 = sub_100005574(&qword_10049B670);
  ScaledMetric.wrappedValue.getter(v113, v40);
  v41 = *(_QWORD *)&v113[0];
  v42 = v93;
  v43 = (uint64_t)v100;
  v44 = v94;
  (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v100, v39, v94);
  v45 = v43 + *(int *)(v88 + 36);
  *(_QWORD *)v45 = v41;
  *(_QWORD *)(v45 + 8) = -1;
  *(_BYTE *)(v45 + 16) = 0;
  (*(void (**)(char *, uint64_t))(v42 + 8))(v39, v44);
  if (qword_100498AA0 != -1)
    swift_once(&qword_100498AA0, sub_100296660);
  v46 = static Border.artwork;
  v47 = qword_1004A3D60;
  v48 = byte_1004A3D68;
  ScaledMetric.wrappedValue.getter(v113, v40);
  v49 = *(_QWORD *)&v113[0];
  v50 = v96;
  sub_100014A7C(v43, v96, &qword_1004A0618);
  v51 = v109;
  v52 = v50 + *(int *)(v109 + 36);
  *(_QWORD *)v52 = v46;
  *(_QWORD *)(v52 + 8) = v47;
  *(_BYTE *)(v52 + 16) = v48;
  *(_QWORD *)(v52 + 24) = v49;
  *(_QWORD *)(v52 + 32) = -1;
  *(_BYTE *)(v52 + 40) = 0;
  swift_retain(v46);
  sub_100008758(v43, &qword_1004A0618);
  v53 = v104;
  sub_1000149A8(v50, v104, &qword_1004A0620);
  v54 = v106;
  sub_100014A7C(v53, (uint64_t)v106, &qword_1004A0620);
  swift_storeEnumTagMultiPayload(v54, v105, 1);
  v55 = sub_1003035C0(&qword_1004A0658, &qword_1004A0620, (void (*)(void))sub_100336474, (void (*)(void))sub_100296BF0);
  v56 = (uint64_t)v107;
  _ConditionalContent<>.init(storage:)(v54, &type metadata for Image, v51, &protocol witness table for Image, v55);
  v57 = (uint64_t)v85;
  sub_100014A7C(v56, (uint64_t)v85, &qword_1004A0638);
  swift_storeEnumTagMultiPayload(v57, v86, 0);
  v58 = sub_1003363E8();
  v59 = sub_10033618C(&qword_1004A0670, &qword_1004A0608, (void (*)(void))sub_100336364);
  _ConditionalContent<>.init(storage:)(v57, v87, v111, v58, v59);
  sub_100008758(v56, &qword_1004A0638);
  sub_100008758(v53, &qword_1004A0620);
  (*(void (**)(char *, uint64_t))(v108 + 8))(v36, v35);
}

uint64_t sub_100331C28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  __n128 v50;
  double v51;
  uint64_t v52;
  uint64_t v53;
  double v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t KeyPath;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  double v94;
  __int128 v95;
  uint64_t v96;
  uint64_t v97;
  unsigned __int8 v98;
  char v99;
  uint64_t v100;
  uint64_t v101;

  v75 = a2;
  v85 = a3;
  v4 = type metadata accessor for Font.Leading(0);
  v78 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v77 = (uint64_t)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100005574(&qword_1004A05C8);
  v89 = *(_QWORD *)(v6 - 8);
  v90 = v6;
  __chkstk_darwin();
  v88 = (char *)&v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = sub_100005574(&qword_1004A05D0);
  __chkstk_darwin();
  v92 = (uint64_t)&v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v86 = (char *)&v75 - v9;
  __chkstk_darwin();
  v91 = (uint64_t)&v75 - v10;
  v11 = *(int *)(type metadata accessor for Notice(0) + 28);
  v93 = a1;
  v12 = (_QWORD *)(a1 + v11);
  v13 = v12[1];
  if (v13)
  {
    *(_QWORD *)&v95 = *v12;
    *((_QWORD *)&v95 + 1) = v13;
    v14 = sub_10024AF7C();
    swift_bridgeObjectRetain();
    v15 = Text.init<A>(_:)(&v95, &type metadata for String, v14);
    v17 = v16;
    v19 = v18;
    v21 = v20 & 1;
    v22 = static Font.footnote.getter(v15);
    v23 = Text.font(_:)(v22, v15, v17, v21, v19);
    v25 = v24;
    v27 = v26;
    v76 = v4;
    v29 = v28;
    swift_release(v22);
    sub_10003B4D0(v15, v17, v21);
    v30 = swift_bridgeObjectRelease();
    LODWORD(v95) = static HierarchicalShapeStyle.secondary.getter(v30);
    v84 = Text.foregroundStyle<A>(_:)(&v95, v23, v25, v27 & 1, v29, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
    v83 = v31;
    v82 = v32;
    v81 = v33 & 1;
    sub_10003B4D0(v23, v25, v27 & 1);
    v4 = v76;
    swift_bridgeObjectRelease();
    KeyPath = swift_getKeyPath(&unk_10039F048);
    v79 = 2;
  }
  else
  {
    v84 = 0;
    v83 = 0;
    v81 = 0;
    v82 = 0;
    KeyPath = 0;
    v79 = 0;
  }
  sub_1003321CC(v93, &v95);
  v34 = *((_QWORD *)&v95 + 1);
  v76 = v95;
  v35 = v96;
  v36 = v97;
  v37 = v98;
  v38 = v99;
  v40 = static Font.subheadline.getter(v39);
  v41 = v78;
  v42 = v77;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v78 + 104))(v77, enum case for Font.Leading.tight(_:), v4);
  v43 = Font.leading(_:)(v42, v40);
  v44 = swift_release(v40);
  v45 = v42;
  v46 = v76;
  v47 = v36;
  v48 = v4;
  v49 = v38;
  v50.n128_f64[0] = (*(double (**)(uint64_t, uint64_t, __n128))(v41 + 8))(v45, v48, v44);
  v51 = static Font.Weight.semibold.getter(v50);
  v52 = Font.weight(_:)(v43, v51);
  swift_release(v43);
  v53 = swift_getKeyPath(&unk_10039F018);
  *(_QWORD *)&v95 = v46;
  *((_QWORD *)&v95 + 1) = v34;
  v96 = v35;
  v97 = v47;
  v77 = v47;
  LODWORD(v78) = v37;
  v98 = v37;
  v99 = v38;
  v100 = v53;
  v101 = v52;
  v54 = 0.0;
  if (sub_100330B44())
  {
    type metadata accessor for NoticeView.Content(0);
    v55 = sub_100005574(&qword_1004A04C0);
    ScaledMetric.wrappedValue.getter(&v94, v55);
    v54 = v94 + *(double *)(v75 + 32);
  }
  v56 = sub_100005574(&qword_1004A05D8);
  v57 = sub_100336084();
  v58 = v88;
  View.bodyHeadOutdent(_:)(v56, v57, v54);
  sub_100336250(v46, v34, v35, v77, v78, v49);
  swift_release(v52);
  swift_release(v53);
  v59 = swift_getKeyPath(&unk_10039F048);
  v61 = v89;
  v60 = v90;
  v62 = (uint64_t)v86;
  (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v86, v58, v90);
  v63 = v62 + *(int *)(v87 + 36);
  *(_QWORD *)v63 = v59;
  *(_QWORD *)(v63 + 8) = 4;
  *(_BYTE *)(v63 + 16) = 0;
  (*(void (**)(char *, uint64_t))(v61 + 8))(v58, v60);
  v64 = v91;
  sub_1000149A8(v62, v91, &qword_1004A05D0);
  v65 = v92;
  sub_100014A7C(v64, v92, &qword_1004A05D0);
  v66 = v84;
  v67 = v85;
  v68 = v83;
  *v85 = v84;
  v67[1] = v68;
  v69 = v81;
  v70 = v82;
  v67[2] = v81;
  v67[3] = v70;
  v71 = KeyPath;
  v72 = v79;
  v67[4] = KeyPath;
  v67[5] = v72;
  *((_BYTE *)v67 + 48) = 0;
  v73 = sub_100005574(&qword_1004A05F8);
  sub_100014A7C(v65, (uint64_t)v67 + *(int *)(v73 + 48), &qword_1004A05D0);
  sub_1003362EC(v66, v68, v69, v70, v71);
  sub_100008758(v64, &qword_1004A05D0);
  sub_100008758(v65, &qword_1004A05D0);
  return sub_100336328(v66, v68, v69, v70, v71);
}

double sub_1003321CC@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  NSString v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  void (*v30)(char *, uint64_t);
  void *v31;
  _QWORD *v32;
  NSString v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  void *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char v126;
  uint64_t v127;
  uint64_t *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  char v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char v155;
  uint64_t v156;
  __int128 v157;
  char v158;
  uint64_t v159;
  unint64_t v160;
  double result;
  __int128 v162;
  unsigned __int8 v163;
  char v164;
  _OWORD *v165;
  id v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  _OWORD *v172;
  __int128 v173;
  __int128 v174;
  __int16 v175;
  __int128 v176;
  __int128 v177;
  unsigned __int8 v178;
  char v179;

  v172 = a2;
  v3 = type metadata accessor for Locale.Language(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v170 = (char *)&v166 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for LayoutDirection(0);
  v171 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v8 = (char *)&v166 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v10 = (char *)&v166 - v9;
  sub_100005574(&qword_100499A30);
  __chkstk_darwin();
  v12 = (char *)&v166 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Notice(0);
  if (*(_QWORD *)(a1 + *(int *)(v13 + 32)))
  {
    v168 = v4;
    v169 = v3;
    v14 = type metadata accessor for NoticeView.Content(0);
    sub_1002BE220((uint64_t)v12);
    v15 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v12, 0, 1, v15);
    v16 = (void *)UIContentSizeCategory.init(_:)(v12);
    v17 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithPreferredContentSizeCategory:", v16);

    v18 = objc_msgSend((id)objc_opt_self(UIFontDescriptor), "preferredFontDescriptorWithTextStyle:compatibleWithTraitCollection:", UIFontTextStyleSubheadline, v17);
    v19 = objc_msgSend(v18, "fontDescriptorWithSymbolicTraits:", 32770);

    v20 = (void *)objc_opt_self(UIFont);
    v167 = v14;
    if (v19)
    {
      v21 = objc_msgSend(v20, "fontWithDescriptor:size:", v19, 0.0);

    }
    else
    {
      v21 = objc_msgSend(v20, "preferredFontForTextStyle:compatibleWithTraitCollection:", UIFontTextStyleSubheadline, v17);
    }
    v22 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:scale:", v21, 1);
    v23 = String._bridgeToObjectiveC()();
    v24 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v23, v22);

    if (v24)
    {
      v25 = objc_msgSend(v24, "imageWithRenderingMode:", 2);

      v26 = v169;
      v27 = v168;
      if (v25)
      {
        sub_1002BDFE4((uint64_t)v10);
        v28 = v171;
        (*(void (**)(char *, _QWORD, uint64_t))(v171 + 104))(v8, enum case for LayoutDirection.rightToLeft(_:), v6);
        v29 = static LayoutDirection.== infix(_:_:)(v10, v8);
        v30 = *(void (**)(char *, uint64_t))(v28 + 8);
        v30(v8, v6);
        v30(v10, v6);
        v166 = v25;
        if ((v29 & 1) != 0)
        {
          v31 = (void *)objc_opt_self(NLLanguageRecognizer);
          v32 = (_QWORD *)(a1 + *(int *)(v13 + 24));
          v33 = String._bridgeToObjectiveC()();
          v34 = (char *)objc_msgSend(v31, "dominantLanguageForString:", v33, v166, v167);

          if (v34)
          {
            v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
            v36 = v170;
            v38 = Locale.Language.init(identifier:)(v35, v37);
            v39 = Locale.Language.characterDirection.getter(v38);
            (*(void (**)(char *, uint64_t))(v27 + 8))(v36, v26);
            if (v39 == 1)
            {
              v40 = Image.init(uiImage:)(v25);
              v41 = Text.init(_:)(v40);
              v43 = v42;
              v45 = v44;
              v47 = v46 & 1;
              LODWORD(v176) = static HierarchicalShapeStyle.secondary.getter(v41);
              v48 = Text.foregroundStyle<A>(_:)(&v176, v41, v43, v47, v45, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
              v170 = v34;
              v50 = v49;
              v52 = v51;
              v54 = v53 & 1;
              sub_10003B4D0(v41, v43, v47);
              swift_bridgeObjectRelease();
              v55 = (uint64_t *)String.nonBreakingSpace.unsafeMutableAddressor();
              v56 = *v55;
              v57 = v55[1];
              swift_bridgeObjectRetain();
              v58 = static Text.+ infix(_:_:)(v48, v50, v54, v52, v56, v57, 0, _swiftEmptyArrayStorage);
              v169 = v59;
              v61 = v60;
              v171 = v62;
              swift_bridgeObjectRelease();
              v63 = v61 & 1;
              sub_10003B4D0(v48, v50, v54);
              swift_bridgeObjectRelease();
              v64 = v32[1];
              *(_QWORD *)&v176 = *v32;
              *((_QWORD *)&v176 + 1) = v64;
              v65 = sub_10024AF7C();
              swift_bridgeObjectRetain();
              v66 = Text.init<A>(_:)(&v176, &type metadata for String, v65);
              v68 = v67;
              v70 = v69;
              v72 = v71 & 1;
              LODWORD(v176) = static HierarchicalShapeStyle.primary.getter(v66);
              v73 = Text.foregroundStyle<A>(_:)(&v176, v66, v68, v72, v70, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
              v75 = v74;
              v77 = v76;
              v79 = v78 & 1;
              LODWORD(v168) = v78 & 1;
              sub_10003B4D0(v66, v68, v72);
              swift_bridgeObjectRelease();
              v80 = v58;
              v81 = v58;
              v82 = v169;
              v83 = static Text.+ infix(_:_:)(v81, v169, v63, v171, v73, v75, v79, v77);
              v85 = v84;
              v87 = v86;
              v89 = v88 & 1;
              sub_10003B4D0(v73, v75, v168);
              swift_bridgeObjectRelease();
              sub_10003B4D0(v80, v82, v63);
              swift_bridgeObjectRelease();
              *(_QWORD *)&v173 = v83;
              *((_QWORD *)&v173 + 1) = v85;
              *(_QWORD *)&v174 = v89;
              *((_QWORD *)&v174 + 1) = v87;
              LOBYTE(v175) = 0;
              sub_10003B4C0(v83, v85, v89);
              swift_bridgeObjectRetain();
              sub_10003B4C0(v83, v85, v89);
              swift_bridgeObjectRetain();
              _ConditionalContent<>.init(storage:)(&v173, &type metadata for Text, &type metadata for Text, &protocol witness table for Text, &protocol witness table for Text);

              sub_10003B4D0(v83, v85, v89);
              swift_bridgeObjectRelease();
              sub_10003B4D0(v83, v85, v89);
              swift_bridgeObjectRelease();
LABEL_15:
              v157 = v176;
              v158 = v177;
              v173 = v176;
              v174 = v177;
              v175 = v178;
              sub_100302708(v176, *((uint64_t *)&v176 + 1), v177);
              v159 = sub_100005574(&qword_10049E990);
              v160 = sub_1003361F4();
              _ConditionalContent<>.init(storage:)(&v173, v159, &type metadata for Text, v160, &protocol witness table for Text);

              sub_100302748(v157, *((uint64_t *)&v157 + 1), v158);
              goto LABEL_16;
            }

          }
        }
        v109 = (_QWORD *)(a1 + *(int *)(v13 + 24));
        v110 = v109[1];
        *(_QWORD *)&v176 = *v109;
        *((_QWORD *)&v176 + 1) = v110;
        v111 = sub_10024AF7C();
        swift_bridgeObjectRetain();
        v112 = Text.init<A>(_:)(&v176, &type metadata for String, v111);
        v113 = v25;
        v114 = v112;
        v116 = v115;
        v118 = v117;
        v120 = v119 & 1;
        LODWORD(v176) = static HierarchicalShapeStyle.primary.getter(v112);
        v121 = Text.foregroundStyle<A>(_:)(&v176, v114, v116, v120, v118, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
        v123 = v122;
        v125 = v124;
        v127 = v126 & 1;
        sub_10003B4D0(v114, v116, v120);
        swift_bridgeObjectRelease();
        v128 = (uint64_t *)String.nonBreakingSpace.unsafeMutableAddressor();
        v129 = *v128;
        v130 = v128[1];
        swift_bridgeObjectRetain();
        v131 = static Text.+ infix(_:_:)(v121, v123, v127, v125, v129, v130, 0, _swiftEmptyArrayStorage);
        v170 = v132;
        LOBYTE(v110) = v133;
        v171 = v134;
        swift_bridgeObjectRelease();
        v135 = v110 & 1;
        sub_10003B4D0(v121, v123, v127);
        swift_bridgeObjectRelease();
        v136 = Image.init(uiImage:)(v113);
        v137 = Text.init(_:)(v136);
        v139 = v138;
        v141 = v140;
        v143 = v142 & 1;
        LODWORD(v176) = static HierarchicalShapeStyle.secondary.getter(v137);
        v144 = Text.foregroundStyle<A>(_:)(&v176, v137, v139, v143, v141, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
        v146 = v145;
        v148 = v147;
        v150 = v149 & 1;
        sub_10003B4D0(v137, v139, v143);
        swift_bridgeObjectRelease();
        v151 = (uint64_t)v170;
        v169 = static Text.+ infix(_:_:)(v131, v170, v135, v171, v144, v146, v150, v148);
        v168 = v152;
        v154 = v153;
        v156 = v155 & 1;
        sub_10003B4D0(v144, v146, v150);
        swift_bridgeObjectRelease();
        sub_10003B4D0(v131, v151, v135);
        swift_bridgeObjectRelease();
        *(_QWORD *)&v173 = v169;
        *((_QWORD *)&v173 + 1) = v168;
        *(_QWORD *)&v174 = v156;
        *((_QWORD *)&v174 + 1) = v154;
        LOBYTE(v175) = 1;
        _ConditionalContent<>.init(storage:)(&v173, &type metadata for Text, &type metadata for Text, &protocol witness table for Text, &protocol witness table for Text);
        goto LABEL_15;
      }
    }
    else
    {

    }
  }
  v90 = (_QWORD *)(a1 + *(int *)(v13 + 24));
  v91 = v90[1];
  *(_QWORD *)&v176 = *v90;
  *((_QWORD *)&v176 + 1) = v91;
  v92 = sub_10024AF7C();
  swift_bridgeObjectRetain();
  v93 = Text.init<A>(_:)(&v176, &type metadata for String, v92);
  v95 = v94;
  v97 = v96;
  v99 = v98 & 1;
  LODWORD(v176) = static HierarchicalShapeStyle.primary.getter(v93);
  v100 = Text.foregroundStyle<A>(_:)(&v176, v93, v95, v99, v97, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
  v102 = v101;
  v104 = v103;
  v106 = v105 & 1;
  sub_10003B4D0(v93, v95, v99);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v173 = v100;
  *((_QWORD *)&v173 + 1) = v102;
  *(_QWORD *)&v174 = v106;
  *((_QWORD *)&v174 + 1) = v104;
  v175 = 256;
  v107 = sub_100005574(&qword_10049E990);
  v108 = sub_1003361F4();
  _ConditionalContent<>.init(storage:)(&v173, v107, &type metadata for Text, v108, &protocol witness table for Text);
LABEL_16:
  result = *(double *)&v176;
  v162 = v177;
  v163 = v178;
  v164 = v179;
  v165 = v172;
  *v172 = v176;
  v165[1] = v162;
  *((_BYTE *)v165 + 32) = v163;
  *((_BYTE *)v165 + 33) = v164;
  return result;
}

uint64_t NoticeDismissal.presented.getter()
{
  uint64_t v0;
  uint64_t v2;

  v0 = sub_100005574(&qword_10049FE00);
  Binding.wrappedValue.getter(&v2, v0);
  return v2;
}

uint64_t NoticeDismissal.presented.setter(char a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v7 = a2;
  v8 = a3;
  v9 = a4;
  v6 = a1;
  v4 = sub_100005574(&qword_10049FE00);
  return Binding.wrappedValue.setter(&v6, v4);
}

void (*NoticeDismissal.presented.modify(_QWORD *a1, uint64_t a2, uint64_t a3, char a4))(uint64_t a1)
{
  _BYTE *v8;
  uint64_t v9;

  v8 = malloc(0x30uLL);
  *a1 = v8;
  v8[19] = a4;
  *((_QWORD *)v8 + 3) = a2;
  *((_QWORD *)v8 + 4) = a3;
  *(_QWORD *)v8 = a2;
  *((_QWORD *)v8 + 1) = a3;
  v8[16] = a4;
  swift_retain(a2);
  swift_retain(a3);
  v9 = sub_100005574(&qword_10049FE00);
  *((_QWORD *)v8 + 5) = v9;
  Binding.wrappedValue.getter(v8 + 17, v9);
  return sub_100332DC8;
}

void sub_100332DC8(uint64_t a1)
{
  _QWORD *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  v1 = *(_QWORD **)a1;
  v2 = *(_BYTE *)(*(_QWORD *)a1 + 17);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  v5 = *(_BYTE *)(*(_QWORD *)a1 + 19);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  *v1 = v6;
  v1[1] = v4;
  *((_BYTE *)v1 + 16) = v5;
  *((_BYTE *)v1 + 18) = v2;
  Binding.wrappedValue.setter((char *)v1 + 18, v3);
  swift_release(v6);
  swift_release(v4);
  free(v1);
}

uint64_t NoticeDismissal.$presented.getter()
{
  uint64_t v0;
  uint64_t v2;

  v0 = sub_100005574(&qword_10049FE00);
  Binding.projectedValue.getter(&v2, v0);
  return v2;
}

void sub_100332E6C(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 0;
}

void (*EnvironmentValues.noticeDismissal.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  char *v3;
  unint64_t v4;
  char v5;

  v3 = (char *)malloc(0x40uLL);
  *a1 = v3;
  *((_QWORD *)v3 + 6) = v1;
  v4 = sub_10032E91C();
  *((_QWORD *)v3 + 7) = v4;
  EnvironmentValues.subscript.getter(&_s25NoticeDismissalContextKeyVN, &_s25NoticeDismissalContextKeyVN, v4);
  v5 = v3[40];
  *(_OWORD *)v3 = *(_OWORD *)(v3 + 24);
  v3[16] = v5;
  return sub_100332EF0;
}

void sub_100332EF0(uint64_t **a1, char a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v3 = *a1;
  v4 = **a1;
  v5 = v3[1];
  v3[3] = v4;
  v6 = *((_BYTE *)v3 + 16);
  v7 = v3[7];
  v3[4] = v5;
  *((_BYTE *)v3 + 40) = v6;
  if ((a2 & 1) != 0)
  {
    sub_1002D05AC(v4, v5);
    EnvironmentValues.subscript.setter(v3 + 3, &_s25NoticeDismissalContextKeyVN, &_s25NoticeDismissalContextKeyVN, v7);
    sub_1002D057C(*v3, v3[1]);
  }
  else
  {
    EnvironmentValues.subscript.setter(v3 + 3, &_s25NoticeDismissalContextKeyVN, &_s25NoticeDismissalContextKeyVN, v7);
  }
  free(v3);
}

uint64_t sub_100332F80()
{
  return EnvironmentValues.contentTransition.getter();
}

uint64_t sub_100332FA0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for ContentTransition(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return EnvironmentValues.contentTransition.setter(v4);
}

unint64_t sub_100333020()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004A03E8;
  if (!qword_1004A03E8)
  {
    v1 = sub_100005600(&qword_1004A0370);
    sub_1003330A4();
    sub_10002FFB8(&qword_1004A0408, &qword_1004A03E0, (uint64_t)&protocol conformance descriptor for _AnimationModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1004A03E8);
  }
  return result;
}

unint64_t sub_1003330A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004A03F0;
  if (!qword_1004A03F0)
  {
    v1 = sub_100005600(&qword_1004A0368);
    sub_100333110();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1004A03F0);
  }
  return result;
}

unint64_t sub_100333110()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  result = qword_1004A03F8;
  if (!qword_1004A03F8)
  {
    v1 = sub_100005600(&qword_1004A0360);
    v2 = sub_100005600(&qword_1004A0350);
    v3 = type metadata accessor for Notice(255);
    v6 = sub_100005600(&qword_1004A0348);
    v7 = sub_100005600(&qword_1004A0320);
    v8 = sub_1003304A0();
    v9 = sub_10002FFB8(&qword_1004A03C0, &qword_1004A0320, (uint64_t)&protocol conformance descriptor for SequenceGesture<A, B>);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.gesture<A>(_:including:)>>, 1);
    v5 = sub_100006924(&qword_1004A03C8, type metadata accessor for Notice, (uint64_t)&protocol conformance descriptor for Notice);
    v6 = v2;
    v7 = v3;
    v8 = OpaqueTypeConformance2;
    v9 = v5;
    swift_getOpaqueTypeConformance2(&v6, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
    sub_10002FFB8(&qword_1004A0400, &qword_1004A03D0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1004A03F8);
  }
  return result;
}

uint64_t sub_100333264(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of NoticeView.body>>, 1);
}

_QWORD *initializeBufferWithCopyOfBuffer for NoticeView(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(uint64_t *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  int EnumCaseMultiPayload;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  unsigned __int8 v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  __int128 v55;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = (int *)type metadata accessor for Notice(0);
    v9 = v8[5];
    v10 = (_QWORD *)((char *)v4 + v9);
    v11 = (_QWORD *)((char *)a2 + v9);
    v12 = type metadata accessor for Notice.Thumbnail(0);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      v15 = sub_100005574(&qword_1004A0418);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v11, v12);
      if (EnumCaseMultiPayload == 1)
      {
        v19 = type metadata accessor for Artwork(0);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v10, v11, v19);
        swift_storeEnumTagMultiPayload(v10, v12, 1);
      }
      else if (EnumCaseMultiPayload)
      {
        memcpy(v10, v11, *(_QWORD *)(v13 + 64));
      }
      else
      {
        v18 = *v11;
        *v10 = *v11;
        swift_retain(v18);
        swift_storeEnumTagMultiPayload(v10, v12, 0);
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v20 = v8[6];
    v21 = (_QWORD *)((char *)v4 + v20);
    v22 = (_QWORD *)((char *)a2 + v20);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    v24 = v8[7];
    v25 = (_QWORD *)((char *)v4 + v24);
    v26 = (_QWORD *)((char *)a2 + v24);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    v28 = v8[8];
    v29 = (_QWORD *)((char *)v4 + v28);
    v30 = (char *)a2 + v28;
    v31 = *(_QWORD *)((char *)a2 + v28);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v31)
    {
      v32 = *((_QWORD *)v30 + 1);
      *v29 = v31;
      v29[1] = v32;
      swift_retain(v32);
    }
    else
    {
      *(_OWORD *)v29 = *(_OWORD *)v30;
    }
    v33 = v8[9];
    v34 = (char *)v4 + v33;
    v35 = (char *)a2 + v33;
    *(_QWORD *)v34 = *(_QWORD *)v35;
    v34[8] = v35[8];
    *((_BYTE *)v4 + v8[10]) = *((_BYTE *)a2 + v8[10]);
    v36 = a3[5];
    v37 = (char *)v4 + v36;
    v38 = (char *)a2 + v36;
    v39 = *(_QWORD *)v38;
    v40 = *((_QWORD *)v38 + 1);
    v41 = v38[17];
    v42 = v38[16];
    sub_10032EA74(*(_QWORD *)v38, v40, v42, v41);
    *(_QWORD *)v37 = v39;
    *((_QWORD *)v37 + 1) = v40;
    v37[16] = v42;
    v37[17] = v41;
    v43 = a3[6];
    v44 = a3[7];
    v45 = (_QWORD *)((char *)v4 + v43);
    v46 = (_QWORD *)((char *)a2 + v43);
    v47 = v46[1];
    *v45 = *v46;
    v45[1] = v47;
    v48 = (char *)v4 + v44;
    v49 = (char *)a2 + v44;
    *v48 = *v49;
    v50 = *((_QWORD *)v49 + 3);
    v55 = *(_OWORD *)(v49 + 8);
    *(_OWORD *)(v48 + 8) = v55;
    *((_QWORD *)v48 + 3) = v50;
    v51 = a3[8];
    v52 = (char *)v4 + v51;
    v53 = (char *)a2 + v51;
    *v52 = *v53;
    v16 = *((_QWORD *)v53 + 1);
    *((_QWORD *)v52 + 1) = v16;
    swift_retain(v47);
    swift_retain(v55);
    swift_retain(v50);
  }
  swift_retain(v16);
  return v4;
}

double destroy for NoticeView(uint64_t a1, int *a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  double result;
  int EnumCaseMultiPayload;
  uint64_t v11;

  swift_bridgeObjectRelease();
  v4 = type metadata accessor for Notice(0);
  v5 = (_QWORD *)(a1 + *(int *)(v4 + 20));
  v6 = type metadata accessor for Notice.Thumbnail(0);
  if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v5, v6);
    if (EnumCaseMultiPayload == 1)
    {
      v11 = type metadata accessor for Artwork(0);
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v5, v11);
    }
    else if (!EnumCaseMultiPayload)
    {
      swift_release(*v5);
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7 = (_QWORD *)(a1 + *(int *)(v4 + 32));
  if (*v7)
    swift_release(v7[1]);
  sub_1002D0570(*(_QWORD *)(a1 + a2[5]), *(_QWORD *)(a1 + a2[5] + 8), *(unsigned __int8 *)(a1 + a2[5] + 16), *(_BYTE *)(a1 + a2[5] + 17));
  swift_release(*(_QWORD *)(a1 + a2[6] + 8));
  v8 = a1 + a2[7];
  swift_release(*(_QWORD *)(v8 + 8));
  swift_release(*(_QWORD *)(v8 + 24));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + a2[8] + 8)).n128_u64[0];
  return result;
}

_QWORD *initializeWithCopy for NoticeView(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(uint64_t *, uint64_t, uint64_t);
  uint64_t v14;
  int EnumCaseMultiPayload;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  unsigned __int8 v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  __int128 v54;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = (int *)type metadata accessor for Notice(0);
  v8 = v7[5];
  v9 = (_QWORD *)((char *)a1 + v8);
  v10 = (_QWORD *)((char *)a2 + v8);
  v11 = type metadata accessor for Notice.Thumbnail(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    v14 = sub_100005574(&qword_1004A0418);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10, v11);
    if (EnumCaseMultiPayload == 1)
    {
      v17 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v9, v10, v17);
      swift_storeEnumTagMultiPayload(v9, v11, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v9, v10, *(_QWORD *)(v12 + 64));
    }
    else
    {
      v16 = *v10;
      *v9 = *v10;
      swift_retain(v16);
      swift_storeEnumTagMultiPayload(v9, v11, 0);
    }
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v18 = v7[6];
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  v22 = v7[7];
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)((char *)a2 + v22);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  v26 = v7[8];
  v27 = (_QWORD *)((char *)a1 + v26);
  v28 = (char *)a2 + v26;
  v29 = *(_QWORD *)((char *)a2 + v26);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v29)
  {
    v30 = *((_QWORD *)v28 + 1);
    *v27 = v29;
    v27[1] = v30;
    swift_retain(v30);
  }
  else
  {
    *(_OWORD *)v27 = *(_OWORD *)v28;
  }
  v31 = v7[9];
  v32 = (char *)a1 + v31;
  v33 = (char *)a2 + v31;
  *(_QWORD *)v32 = *(_QWORD *)v33;
  v32[8] = v33[8];
  *((_BYTE *)a1 + v7[10]) = *((_BYTE *)a2 + v7[10]);
  v34 = a3[5];
  v35 = (char *)a1 + v34;
  v36 = (char *)a2 + v34;
  v37 = *(_QWORD *)v36;
  v38 = *((_QWORD *)v36 + 1);
  v39 = v36[17];
  v40 = v36[16];
  sub_10032EA74(*(_QWORD *)v36, v38, v40, v39);
  *(_QWORD *)v35 = v37;
  *((_QWORD *)v35 + 1) = v38;
  v35[16] = v40;
  v35[17] = v39;
  v41 = a3[6];
  v42 = a3[7];
  v43 = (_QWORD *)((char *)a1 + v41);
  v44 = (_QWORD *)((char *)a2 + v41);
  v45 = v44[1];
  *v43 = *v44;
  v43[1] = v45;
  v46 = (char *)a1 + v42;
  v47 = (char *)a2 + v42;
  *v46 = *v47;
  v48 = *((_QWORD *)v47 + 3);
  v54 = *(_OWORD *)(v47 + 8);
  *(_OWORD *)(v46 + 8) = v54;
  *((_QWORD *)v46 + 3) = v48;
  v49 = a3[8];
  v50 = (char *)a1 + v49;
  v51 = (char *)a2 + v49;
  *v50 = *v51;
  v52 = *((_QWORD *)v51 + 1);
  *((_QWORD *)v50 + 1) = v52;
  swift_retain(v45);
  swift_retain(v54);
  swift_retain(v48);
  swift_retain(v52);
  return a1;
}

_QWORD *assignWithCopy for NoticeView(_QWORD *a1, _QWORD *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t *, uint64_t, uint64_t);
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  size_t v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  unsigned __int8 v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v68;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (int *)type metadata accessor for Notice(0);
  v7 = v6[5];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for Notice.Thumbnail(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      if (a1 == a2)
        goto LABEL_17;
      sub_100006798((uint64_t)v8, type metadata accessor for Notice.Thumbnail);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9, v10);
      if (EnumCaseMultiPayload == 1)
      {
        v68 = type metadata accessor for Artwork(0);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v68 - 8) + 16))(v8, v9, v68);
        swift_storeEnumTagMultiPayload(v8, v10, 1);
        goto LABEL_17;
      }
      if (!EnumCaseMultiPayload)
      {
        v19 = *v9;
        *v8 = *v9;
        swift_retain(v19);
        swift_storeEnumTagMultiPayload(v8, v10, 0);
        goto LABEL_17;
      }
      v17 = *(_QWORD *)(v11 + 64);
LABEL_9:
      memcpy(v8, v9, v17);
      goto LABEL_17;
    }
    sub_100006798((uint64_t)v8, type metadata accessor for Notice.Thumbnail);
LABEL_8:
    v17 = *(_QWORD *)(*(_QWORD *)(sub_100005574(&qword_1004A0418) - 8) + 64);
    goto LABEL_9;
  }
  if (v14)
    goto LABEL_8;
  v15 = swift_getEnumCaseMultiPayload(v9, v10);
  if (v15 == 1)
  {
    v20 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v8, v9, v20);
    swift_storeEnumTagMultiPayload(v8, v10, 1);
  }
  else if (v15)
  {
    memcpy(v8, v9, *(_QWORD *)(v11 + 64));
  }
  else
  {
    v16 = *v9;
    *v8 = *v9;
    swift_retain(v16);
    swift_storeEnumTagMultiPayload(v8, v10, 0);
  }
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_17:
  v21 = v6[6];
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (_QWORD *)((char *)a2 + v21);
  *v22 = *v23;
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v24 = v6[7];
  v25 = (_QWORD *)((char *)a1 + v24);
  v26 = (_QWORD *)((char *)a2 + v24);
  *v25 = *v26;
  v25[1] = v26[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v27 = v6[8];
  v28 = (_QWORD *)((char *)a1 + v27);
  v29 = (char *)a2 + v27;
  v30 = *(_QWORD *)((char *)a1 + v27);
  v31 = *(_QWORD *)((char *)a2 + v27);
  if (!v30)
  {
    if (v31)
    {
      v34 = *((_QWORD *)v29 + 1);
      *v28 = v31;
      v28[1] = v34;
      swift_retain(v34);
      goto LABEL_24;
    }
LABEL_23:
    *(_OWORD *)v28 = *(_OWORD *)v29;
    goto LABEL_24;
  }
  if (!v31)
  {
    swift_release(v28[1]);
    goto LABEL_23;
  }
  v32 = *((_QWORD *)v29 + 1);
  v33 = v28[1];
  *v28 = v31;
  v28[1] = v32;
  swift_retain(v32);
  swift_release(v33);
LABEL_24:
  v35 = v6[9];
  v36 = (char *)a1 + v35;
  v37 = (char *)a2 + v35;
  v38 = *(_QWORD *)v37;
  v36[8] = v37[8];
  *(_QWORD *)v36 = v38;
  *((_BYTE *)a1 + v6[10]) = *((_BYTE *)a2 + v6[10]);
  v39 = a3[5];
  v40 = (char *)a1 + v39;
  v41 = (char *)a2 + v39;
  v42 = *(_QWORD *)v41;
  v43 = *((_QWORD *)v41 + 1);
  v44 = v41[17];
  v45 = v41[16];
  sub_10032EA74(*(_QWORD *)v41, v43, v45, v44);
  v46 = *(_QWORD *)v40;
  v47 = *((_QWORD *)v40 + 1);
  v48 = v40[17];
  *(_QWORD *)v40 = v42;
  *((_QWORD *)v40 + 1) = v43;
  v49 = v40[16];
  v40[16] = v45;
  v40[17] = v44;
  sub_1002D0570(v46, v47, v49, v48);
  v50 = a3[6];
  v51 = (_QWORD *)((char *)a1 + v50);
  v52 = (_QWORD *)((char *)a2 + v50);
  *v51 = *v52;
  v53 = v51[1];
  v54 = v52[1];
  v51[1] = v54;
  swift_retain(v54);
  swift_release(v53);
  v55 = a3[7];
  v56 = (char *)a1 + v55;
  v57 = (char *)a2 + v55;
  *v56 = *((_BYTE *)a2 + v55);
  v58 = *(_QWORD *)((char *)a1 + v55 + 8);
  v59 = *(_QWORD *)((char *)a2 + v55 + 8);
  *((_QWORD *)v56 + 1) = v59;
  swift_retain(v59);
  swift_release(v58);
  v60 = *((_QWORD *)v57 + 3);
  v61 = *((_QWORD *)v56 + 3);
  *((_QWORD *)v56 + 2) = *((_QWORD *)v57 + 2);
  *((_QWORD *)v56 + 3) = v60;
  swift_retain(v60);
  swift_release(v61);
  v62 = a3[8];
  v63 = (char *)a1 + v62;
  v64 = (char *)a2 + v62;
  *v63 = *v64;
  v65 = *((_QWORD *)v63 + 1);
  v66 = *((_QWORD *)v64 + 1);
  *((_QWORD *)v63 + 1) = v66;
  swift_retain(v66);
  swift_release(v65);
  return a1;
}

_OWORD *initializeWithTake for NoticeView(_OWORD *a1, _OWORD *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _OWORD *v28;
  _OWORD *v29;
  __int128 v30;

  *a1 = *a2;
  v6 = (int *)type metadata accessor for Notice(0);
  v7 = v6[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Notice.Thumbnail(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = sub_100005574(&qword_1004A0418);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v13 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v8, v9, v13);
      swift_storeEnumTagMultiPayload(v8, v10, 1);
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(v11 + 64));
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(_OWORD *)((char *)a1 + v6[6]) = *(_OWORD *)((char *)a2 + v6[6]);
  *(_OWORD *)((char *)a1 + v6[7]) = *(_OWORD *)((char *)a2 + v6[7]);
  v14 = v6[8];
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (uint64_t *)((char *)a2 + v14);
  v17 = *v16;
  if (*v16)
  {
    v18 = v16[1];
    *v15 = v17;
    v15[1] = v18;
  }
  else
  {
    *(_OWORD *)v15 = *(_OWORD *)v16;
  }
  v19 = v6[9];
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  *(_QWORD *)v20 = *(_QWORD *)v21;
  v20[8] = v21[8];
  *((_BYTE *)a1 + v6[10]) = *((_BYTE *)a2 + v6[10]);
  v22 = a3[5];
  v23 = a3[6];
  v24 = (char *)a1 + v22;
  v25 = (char *)a2 + v22;
  *((_WORD *)v24 + 8) = *((_WORD *)v25 + 8);
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *(_OWORD *)((char *)a1 + v23) = *(_OWORD *)((char *)a2 + v23);
  v26 = a3[7];
  v27 = a3[8];
  v28 = (_OWORD *)((char *)a1 + v26);
  v29 = (_OWORD *)((char *)a2 + v26);
  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  *(_OWORD *)((char *)a1 + v27) = *(_OWORD *)((char *)a2 + v27);
  return a1;
}

_QWORD *assignWithTake for NoticeView(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  size_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = (int *)type metadata accessor for Notice(0);
  v8 = v7[5];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for Notice.Thumbnail(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      if (a1 == a2)
        goto LABEL_14;
      sub_100006798((uint64_t)v9, type metadata accessor for Notice.Thumbnail);
      if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
      {
        v18 = type metadata accessor for Artwork(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v9, v10, v18);
        swift_storeEnumTagMultiPayload(v9, v11, 1);
        goto LABEL_14;
      }
      v17 = *(_QWORD *)(v12 + 64);
LABEL_8:
      memcpy(v9, v10, v17);
      goto LABEL_14;
    }
    sub_100006798((uint64_t)v9, type metadata accessor for Notice.Thumbnail);
LABEL_7:
    v17 = *(_QWORD *)(*(_QWORD *)(sub_100005574(&qword_1004A0418) - 8) + 64);
    goto LABEL_8;
  }
  if (v15)
    goto LABEL_7;
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v16 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v9, v10, v16);
    swift_storeEnumTagMultiPayload(v9, v11, 1);
  }
  else
  {
    memcpy(v9, v10, *(_QWORD *)(v12 + 64));
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_14:
  v19 = v7[6];
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  v23 = *v21;
  v22 = v21[1];
  *v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease();
  v24 = v7[7];
  v25 = (_QWORD *)((char *)a1 + v24);
  v26 = (_QWORD *)((char *)a2 + v24);
  v28 = *v26;
  v27 = v26[1];
  *v25 = v28;
  v25[1] = v27;
  swift_bridgeObjectRelease();
  v29 = v7[8];
  v30 = (_QWORD *)((char *)a1 + v29);
  v31 = (char *)a2 + v29;
  v32 = *(_QWORD *)((char *)a1 + v29);
  v33 = *(_QWORD *)((char *)a2 + v29);
  if (!v32)
  {
    if (v33)
    {
      v36 = *((_QWORD *)v31 + 1);
      *v30 = v33;
      v30[1] = v36;
      goto LABEL_21;
    }
LABEL_20:
    *(_OWORD *)v30 = *(_OWORD *)v31;
    goto LABEL_21;
  }
  if (!v33)
  {
    swift_release(v30[1]);
    goto LABEL_20;
  }
  v34 = *((_QWORD *)v31 + 1);
  v35 = v30[1];
  *v30 = v33;
  v30[1] = v34;
  swift_release(v35);
LABEL_21:
  v37 = v7[9];
  v38 = (char *)a1 + v37;
  v39 = (char *)a2 + v37;
  *(_QWORD *)v38 = *(_QWORD *)v39;
  v38[8] = v39[8];
  *((_BYTE *)a1 + v7[10]) = *((_BYTE *)a2 + v7[10]);
  v40 = a3[5];
  v41 = (char *)a1 + v40;
  v42 = (char *)a2 + v40;
  v43 = v42[16];
  v44 = v42[17];
  v45 = *(_QWORD *)v41;
  v46 = *((_QWORD *)v41 + 1);
  v47 = v41[17];
  *(_OWORD *)v41 = *(_OWORD *)v42;
  v48 = v41[16];
  v41[16] = v43;
  v41[17] = v44;
  sub_1002D0570(v45, v46, v48, v47);
  v49 = a3[6];
  v50 = (_QWORD *)((char *)a1 + v49);
  v51 = (_QWORD *)((char *)a2 + v49);
  *v50 = *v51;
  v52 = v50[1];
  v50[1] = v51[1];
  swift_release(v52);
  v53 = a3[7];
  v54 = (char *)a1 + v53;
  v55 = (char *)a2 + v53;
  *v54 = *((_BYTE *)a2 + v53);
  v56 = *(_QWORD *)((char *)a1 + v53 + 8);
  *((_QWORD *)v54 + 1) = *(_QWORD *)((char *)a2 + v53 + 8);
  swift_release(v56);
  v57 = *((_QWORD *)v54 + 3);
  *((_OWORD *)v54 + 1) = *((_OWORD *)v55 + 1);
  swift_release(v57);
  v58 = a3[8];
  v59 = (char *)a1 + v58;
  v60 = (char *)a2 + v58;
  *v59 = *v60;
  v61 = *((_QWORD *)v59 + 1);
  *((_QWORD *)v59 + 1) = *((_QWORD *)v60 + 1);
  swift_release(v61);
  return a1;
}

uint64_t getEnumTagSinglePayload for NoticeView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003341B8);
}

uint64_t sub_1003341B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for Notice(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28) + 16);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for NoticeView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100334244);
}

uint64_t sub_100334244(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Notice(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28) + 16) = (a2 - 1);
  return result;
}

uint64_t sub_1003342C0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  result = type metadata accessor for Notice(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_10039EF08;
    v4[2] = &unk_10039EF20;
    v4[3] = &unk_10039EF38;
    v4[4] = &unk_10039EF20;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
    return 0;
  }
  return result;
}

double destroy for NoticeDismissal(_QWORD *a1)
{
  double result;

  swift_release(*a1);
  *(_QWORD *)&result = swift_release(a1[1]).n128_u64[0];
  return result;
}

uint64_t _s11MusicCoreUI15NoticeDismissalVwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  swift_retain(v3);
  swift_retain(v4);
  return a1;
}

uint64_t *assignWithCopy for NoticeDismissal(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  v5 = *a2;
  *a1 = *a2;
  swift_retain(v5);
  swift_release(v4);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
  return a1;
}

uint64_t assignWithTake for NoticeDismissal(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_release(*(_QWORD *)a1);
  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for NoticeDismissal(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 17))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NoticeDismissal(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for NoticeDismissal()
{
  return &type metadata for NoticeDismissal;
}

uint64_t sub_1003344F0()
{
  _QWORD v1[4];

  v1[0] = sub_100005600(&qword_1004A0370);
  v1[1] = sub_100005600(&qword_1004A0308);
  v1[2] = sub_100333020();
  v1[3] = sub_10002FFB8(&qword_1004A0410, &qword_1004A0308, (uint64_t)&protocol conformance descriptor for ClosedRange<A>);
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.dynamicTypeSize<A>(_:)>>, 1);
}

_QWORD *sub_100334578(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(uint64_t *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  int EnumCaseMultiPayload;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v16);
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = (int *)type metadata accessor for Notice(0);
    v9 = v8[5];
    v10 = (_QWORD *)((char *)v4 + v9);
    v11 = (_QWORD *)((char *)a2 + v9);
    v12 = type metadata accessor for Notice.Thumbnail(0);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      v15 = sub_100005574(&qword_1004A0418);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v11, v12);
      if (EnumCaseMultiPayload == 1)
      {
        v19 = type metadata accessor for Artwork(0);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v10, v11, v19);
        swift_storeEnumTagMultiPayload(v10, v12, 1);
      }
      else if (EnumCaseMultiPayload)
      {
        memcpy(v10, v11, *(_QWORD *)(v13 + 64));
      }
      else
      {
        v18 = *v11;
        *v10 = *v11;
        swift_retain(v18);
        swift_storeEnumTagMultiPayload(v10, v12, 0);
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v20 = v8[6];
    v21 = (_QWORD *)((char *)v4 + v20);
    v22 = (_QWORD *)((char *)a2 + v20);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    v24 = v8[7];
    v25 = (_QWORD *)((char *)v4 + v24);
    v26 = (_QWORD *)((char *)a2 + v24);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    v28 = v8[8];
    v29 = (_QWORD *)((char *)v4 + v28);
    v30 = (char *)a2 + v28;
    v31 = *(_QWORD *)((char *)a2 + v28);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v31)
    {
      v32 = *((_QWORD *)v30 + 1);
      *v29 = v31;
      v29[1] = v32;
      swift_retain(v32);
    }
    else
    {
      *(_OWORD *)v29 = *(_OWORD *)v30;
    }
    v33 = v8[9];
    v34 = (char *)v4 + v33;
    v35 = (char *)a2 + v33;
    *(_QWORD *)v34 = *(_QWORD *)v35;
    v34[8] = v35[8];
    *((_BYTE *)v4 + v8[10]) = *((_BYTE *)a2 + v8[10]);
    v36 = a3[5];
    v37 = (char *)v4 + v36;
    v38 = (char *)a2 + v36;
    v39 = sub_100005574(&qword_1004A04C0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = a3[6];
    v41 = (char *)v4 + v40;
    v42 = (char *)a2 + v40;
    v43 = sub_100005574(&qword_10049B670);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
    v44 = a3[7];
    v45 = (_QWORD *)((char *)v4 + v44);
    v46 = (_QWORD *)((char *)a2 + v44);
    v47 = sub_100005574(&qword_100498E60);
    if (swift_getEnumCaseMultiPayload(v46, v47) == 1)
    {
      v48 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v45, v46, v48);
      v49 = 1;
    }
    else
    {
      v50 = *v46;
      *v45 = *v46;
      swift_retain(v50);
      v49 = 0;
    }
    swift_storeEnumTagMultiPayload(v45, v47, v49);
    v51 = a3[8];
    v52 = (_QWORD *)((char *)v4 + v51);
    v53 = (_QWORD *)((char *)a2 + v51);
    v54 = sub_100005574((uint64_t *)&unk_100498E50);
    if (swift_getEnumCaseMultiPayload(v53, v54) == 1)
    {
      v55 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v52, v53, v55);
      v56 = v52;
      v57 = v54;
      v58 = 1;
    }
    else
    {
      v59 = *v53;
      *v52 = *v53;
      swift_retain(v59);
      v56 = v52;
      v57 = v54;
      v58 = 0;
    }
    swift_storeEnumTagMultiPayload(v56, v57, v58);
  }
  return v4;
}

double sub_1003348CC(uint64_t a1, int *a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  double result;
  int EnumCaseMultiPayload;
  uint64_t v20;

  swift_bridgeObjectRelease();
  v4 = type metadata accessor for Notice(0);
  v5 = (_QWORD *)(a1 + *(int *)(v4 + 20));
  v6 = type metadata accessor for Notice.Thumbnail(0);
  if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v5, v6);
    if (EnumCaseMultiPayload == 1)
    {
      v20 = type metadata accessor for Artwork(0);
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v5, v20);
    }
    else if (!EnumCaseMultiPayload)
    {
      swift_release(*v5);
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7 = (_QWORD *)(a1 + *(int *)(v4 + 32));
  if (*v7)
    swift_release(v7[1]);
  v8 = a1 + a2[5];
  v9 = sub_100005574(&qword_1004A04C0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = a1 + a2[6];
  v11 = sub_100005574(&qword_10049B670);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  v12 = (_QWORD *)(a1 + a2[7]);
  v13 = sub_100005574(&qword_100498E60);
  if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
  {
    v14 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v12, v14);
  }
  else
  {
    swift_release(*v12);
  }
  v15 = (_QWORD *)(a1 + a2[8]);
  v16 = sub_100005574((uint64_t *)&unk_100498E50);
  if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
  {
    v17 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v15, v17);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*v15).n128_u64[0];
  }
  return result;
}

_QWORD *sub_100334AB4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(uint64_t *, uint64_t, uint64_t);
  uint64_t v14;
  int EnumCaseMultiPayload;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = (int *)type metadata accessor for Notice(0);
  v8 = v7[5];
  v9 = (_QWORD *)((char *)a1 + v8);
  v10 = (_QWORD *)((char *)a2 + v8);
  v11 = type metadata accessor for Notice.Thumbnail(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    v14 = sub_100005574(&qword_1004A0418);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10, v11);
    if (EnumCaseMultiPayload == 1)
    {
      v17 = type metadata accessor for Artwork(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v9, v10, v17);
      swift_storeEnumTagMultiPayload(v9, v11, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v9, v10, *(_QWORD *)(v12 + 64));
    }
    else
    {
      v16 = *v10;
      *v9 = *v10;
      swift_retain(v16);
      swift_storeEnumTagMultiPayload(v9, v11, 0);
    }
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v18 = v7[6];
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  v22 = v7[7];
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)((char *)a2 + v22);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  v26 = v7[8];
  v27 = (_QWORD *)((char *)a1 + v26);
  v28 = (char *)a2 + v26;
  v29 = *(_QWORD *)((char *)a2 + v26);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v29)
  {
    v30 = *((_QWORD *)v28 + 1);
    *v27 = v29;
    v27[1] = v30;
    swift_retain(v30);
  }
  else
  {
    *(_OWORD *)v27 = *(_OWORD *)v28;
  }
  v31 = v7[9];
  v32 = (char *)a1 + v31;
  v33 = (char *)a2 + v31;
  *(_QWORD *)v32 = *(_QWORD *)v33;
  v32[8] = v33[8];
  *((_BYTE *)a1 + v7[10]) = *((_BYTE *)a2 + v7[10]);
  v34 = a3[5];
  v35 = (char *)a1 + v34;
  v36 = (char *)a2 + v34;
  v37 = sub_100005574(&qword_1004A04C0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v35, v36, v37);
  v38 = a3[6];
  v39 = (char *)a1 + v38;
  v40 = (char *)a2 + v38;
  v41 = sub_100005574(&qword_10049B670);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v39, v40, v41);
  v42 = a3[7];
  v43 = (_QWORD *)((char *)a1 + v42);
  v44 = (_QWORD *)((char *)a2 + v42);
  v45 = sub_100005574(&qword_100498E60);
  if (swift_getEnumCaseMultiPayload(v44, v45) == 1)
  {
    v46 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v43, v44, v46);
    v47 = 1;
  }
  else
  {
    v48 = *v44;
    *v43 = *v44;
    swift_retain(v48);
    v47 = 0;
  }
  swift_storeEnumTagMultiPayload(v43, v45, v47);
  v49 = a3[8];
  v50 = (_QWORD *)((char *)a1 + v49);
  v51 = (_QWORD *)((char *)a2 + v49);
  v52 = sub_100005574((uint64_t *)&unk_100498E50);
  if (swift_getEnumCaseMultiPayload(v51, v52) == 1)
  {
    v53 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(v50, v51, v53);
    v54 = 1;
  }
  else
  {
    v55 = *v51;
    *v50 = *v51;
    swift_retain(v55);
    v54 = 0;
  }
  swift_storeEnumTagMultiPayload(v50, v52, v54);
  return a1;
}

_QWORD *sub_100334DD4(_QWORD *a1, _QWORD *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t *, uint64_t, uint64_t);
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  size_t v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (int *)type metadata accessor for Notice(0);
  v7 = v6[5];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for Notice.Thumbnail(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      if (a1 == a2)
        goto LABEL_17;
      sub_100006798((uint64_t)v8, type metadata accessor for Notice.Thumbnail);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9, v10);
      if (EnumCaseMultiPayload == 1)
      {
        v62 = type metadata accessor for Artwork(0);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v8, v9, v62);
        swift_storeEnumTagMultiPayload(v8, v10, 1);
        goto LABEL_17;
      }
      if (!EnumCaseMultiPayload)
      {
        v19 = *v9;
        *v8 = *v9;
        swift_retain(v19);
        swift_storeEnumTagMultiPayload(v8, v10, 0);
        goto LABEL_17;
      }
      v17 = *(_QWORD *)(v11 + 64);
LABEL_9:
      memcpy(v8, v9, v17);
      goto LABEL_17;
    }
    sub_100006798((uint64_t)v8, type metadata accessor for Notice.Thumbnail);
LABEL_8:
    v17 = *(_QWORD *)(*(_QWORD *)(sub_100005574(&qword_1004A0418) - 8) + 64);
    goto LABEL_9;
  }
  if (v14)
    goto LABEL_8;
  v15 = swift_getEnumCaseMultiPayload(v9, v10);
  if (v15 == 1)
  {
    v20 = type metadata accessor for Artwork(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v8, v9, v20);
    swift_storeEnumTagMultiPayload(v8, v10, 1);
  }
  else if (v15)
  {
    memcpy(v8, v9, *(_QWORD *)(v11 + 64));
  }
  else
  {
    v16 = *v9;
    *v8 = *v9;
    swift_retain(v16);
    swift_storeEnumTagMultiPayload(v8, v10, 0);
  }
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_17:
  v21 = v6[6];
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (_QWORD *)((char *)a2 + v21);
  *v22 = *v23;
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v24 = v6[7];
  v25 = (_QWORD *)((char *)a1 + v24);
  v26 = (_QWORD *)((char *)a2 + v24);
  *v25 = *v26;
  v25[1] = v26[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v27 = v6[8];
  v28 = (_QWORD *)((char *)a1 + v27);
  v29 = (char *)a2 + v27;
  v30 = *(_QWORD *)((char *)a1 + v27);
  v31 = *(_QWORD *)((char *)a2 + v27);
  if (v30)
  {
    if (v31)
    {
      v32 = *((_QWORD *)v29 + 1);
      v33 = v28[1];
      *v28 = v31;
      v28[1] = v32;
      swift_retain(v32);
      swift_release(v33);
      goto LABEL_24;
    }
    swift_release(v28[1]);
  }
  else if (v31)
  {
    v34 = *((_QWORD *)v29 + 1);
    *v28 = v31;
    v28[1] = v34;
    swift_retain(v34);
    goto LABEL_24;
  }
  *(_OWORD *)v28 = *(_OWORD *)v29;
LABEL_24:
  v35 = v6[9];
  v36 = (char *)a1 + v35;
  v37 = (char *)a2 + v35;
  v38 = *(_QWORD *)v37;
  v36[8] = v37[8];
  *(_QWORD *)v36 = v38;
  *((_BYTE *)a1 + v6[10]) = *((_BYTE *)a2 + v6[10]);
  v39 = a3[5];
  v40 = (char *)a1 + v39;
  v41 = (char *)a2 + v39;
  v42 = sub_100005574(&qword_1004A04C0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  v43 = a3[6];
  v44 = (char *)a1 + v43;
  v45 = (char *)a2 + v43;
  v46 = sub_100005574(&qword_10049B670);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v44, v45, v46);
  if (a1 != a2)
  {
    v47 = a3[7];
    v48 = (_QWORD *)((char *)a1 + v47);
    v49 = (_QWORD *)((char *)a2 + v47);
    sub_100008758((uint64_t)a1 + v47, &qword_100498E60);
    v50 = sub_100005574(&qword_100498E60);
    if (swift_getEnumCaseMultiPayload(v49, v50) == 1)
    {
      v51 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v48, v49, v51);
      v52 = 1;
    }
    else
    {
      v53 = *v49;
      *v48 = *v49;
      swift_retain(v53);
      v52 = 0;
    }
    swift_storeEnumTagMultiPayload(v48, v50, v52);
    v54 = a3[8];
    v55 = (_QWORD *)((char *)a1 + v54);
    v56 = (_QWORD *)((char *)a2 + v54);
    sub_100008758((uint64_t)a1 + v54, (uint64_t *)&unk_100498E50);
    v57 = sub_100005574((uint64_t *)&unk_100498E50);
    if (swift_getEnumCaseMultiPayload(v56, v57) == 1)
    {
      v58 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v55, v56, v58);
      v59 = 1;
    }
    else
    {
      v60 = *v56;
      *v55 = *v56;
      swift_retain(v60);
      v59 = 0;
    }
    swift_storeEnumTagMultiPayload(v55, v57, v59);
  }
  return a1;
}

_OWORD *sub_100335238(_OWORD *a1, _OWORD *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;

  *a1 = *a2;
  v6 = (int *)type metadata accessor for Notice(0);
  v7 = v6[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Notice.Thumbnail(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = sub_100005574(&qword_1004A0418);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v13 = type metadata accessor for Artwork(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v8, v9, v13);
      swift_storeEnumTagMultiPayload(v8, v10, 1);
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(v11 + 64));
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(_OWORD *)((char *)a1 + v6[6]) = *(_OWORD *)((char *)a2 + v6[6]);
  *(_OWORD *)((char *)a1 + v6[7]) = *(_OWORD *)((char *)a2 + v6[7]);
  v14 = v6[8];
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (uint64_t *)((char *)a2 + v14);
  v17 = *v16;
  if (*v16)
  {
    v18 = v16[1];
    *v15 = v17;
    v15[1] = v18;
  }
  else
  {
    *(_OWORD *)v15 = *(_OWORD *)v16;
  }
  v19 = v6[9];
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  *(_QWORD *)v20 = *(_QWORD *)v21;
  v20[8] = v21[8];
  *((_BYTE *)a1 + v6[10]) = *((_BYTE *)a2 + v6[10]);
  v22 = a3[5];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = sub_100005574(&qword_1004A04C0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
  v26 = a3[6];
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  v29 = sub_100005574(&qword_10049B670);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
  v30 = a3[7];
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  v33 = sub_100005574(&qword_100498E60);
  if (swift_getEnumCaseMultiPayload(v32, v33) == 1)
  {
    v34 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v31, v32, v34);
    swift_storeEnumTagMultiPayload(v31, v33, 1);
  }
  else
  {
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  v35 = a3[8];
  v36 = (char *)a1 + v35;
  v37 = (char *)a2 + v35;
  v38 = sub_100005574((uint64_t *)&unk_100498E50);
  if (swift_getEnumCaseMultiPayload(v37, v38) == 1)
  {
    v39 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v36, v37, v39);
    swift_storeEnumTagMultiPayload(v36, v38, 1);
  }
  else
  {
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_10033550C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  size_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = (int *)type metadata accessor for Notice(0);
  v8 = v7[5];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for Notice.Thumbnail(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      if (a1 == a2)
        goto LABEL_14;
      sub_100006798((uint64_t)v9, type metadata accessor for Notice.Thumbnail);
      if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
      {
        v18 = type metadata accessor for Artwork(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v9, v10, v18);
        swift_storeEnumTagMultiPayload(v9, v11, 1);
        goto LABEL_14;
      }
      v17 = *(_QWORD *)(v12 + 64);
LABEL_8:
      memcpy(v9, v10, v17);
      goto LABEL_14;
    }
    sub_100006798((uint64_t)v9, type metadata accessor for Notice.Thumbnail);
LABEL_7:
    v17 = *(_QWORD *)(*(_QWORD *)(sub_100005574(&qword_1004A0418) - 8) + 64);
    goto LABEL_8;
  }
  if (v15)
    goto LABEL_7;
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v16 = type metadata accessor for Artwork(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v9, v10, v16);
    swift_storeEnumTagMultiPayload(v9, v11, 1);
  }
  else
  {
    memcpy(v9, v10, *(_QWORD *)(v12 + 64));
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_14:
  v19 = v7[6];
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  v23 = *v21;
  v22 = v21[1];
  *v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease();
  v24 = v7[7];
  v25 = (_QWORD *)((char *)a1 + v24);
  v26 = (_QWORD *)((char *)a2 + v24);
  v28 = *v26;
  v27 = v26[1];
  *v25 = v28;
  v25[1] = v27;
  swift_bridgeObjectRelease();
  v29 = v7[8];
  v30 = (_QWORD *)((char *)a1 + v29);
  v31 = (char *)a2 + v29;
  v32 = *(_QWORD *)((char *)a1 + v29);
  v33 = *(_QWORD *)((char *)a2 + v29);
  if (v32)
  {
    if (v33)
    {
      v34 = *((_QWORD *)v31 + 1);
      v35 = v30[1];
      *v30 = v33;
      v30[1] = v34;
      swift_release(v35);
      goto LABEL_21;
    }
    swift_release(v30[1]);
  }
  else if (v33)
  {
    v36 = *((_QWORD *)v31 + 1);
    *v30 = v33;
    v30[1] = v36;
    goto LABEL_21;
  }
  *(_OWORD *)v30 = *(_OWORD *)v31;
LABEL_21:
  v37 = v7[9];
  v38 = (char *)a1 + v37;
  v39 = (char *)a2 + v37;
  *(_QWORD *)v38 = *(_QWORD *)v39;
  v38[8] = v39[8];
  *((_BYTE *)a1 + v7[10]) = *((_BYTE *)a2 + v7[10]);
  v40 = a3[5];
  v41 = (char *)a1 + v40;
  v42 = (char *)a2 + v40;
  v43 = sub_100005574(&qword_1004A04C0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 40))(v41, v42, v43);
  v44 = a3[6];
  v45 = (char *)a1 + v44;
  v46 = (char *)a2 + v44;
  v47 = sub_100005574(&qword_10049B670);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 40))(v45, v46, v47);
  if (a1 != a2)
  {
    v48 = a3[7];
    v49 = (char *)a1 + v48;
    v50 = (char *)a2 + v48;
    sub_100008758((uint64_t)a1 + v48, &qword_100498E60);
    v51 = sub_100005574(&qword_100498E60);
    if (swift_getEnumCaseMultiPayload(v50, v51) == 1)
    {
      v52 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v49, v50, v52);
      swift_storeEnumTagMultiPayload(v49, v51, 1);
    }
    else
    {
      memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    }
    v53 = a3[8];
    v54 = (char *)a1 + v53;
    v55 = (char *)a2 + v53;
    sub_100008758((uint64_t)a1 + v53, (uint64_t *)&unk_100498E50);
    v56 = sub_100005574((uint64_t *)&unk_100498E50);
    if (swift_getEnumCaseMultiPayload(v55, v56) == 1)
    {
      v57 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(v54, v55, v57);
      swift_storeEnumTagMultiPayload(v54, v56, 1);
    }
    else
    {
      memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1003358F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100335900);
}

uint64_t sub_100335900(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = type metadata accessor for Notice(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v11 = sub_100005574(&qword_1004A04C0);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      v14 = sub_100005574(&qword_10049B670);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        v15 = sub_100005574(&qword_10049DF58);
        v12 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v13 = a3[7];
        }
        else
        {
          v8 = sub_100005574(&qword_10049FC68);
          v12 = *(_QWORD *)(v8 - 8);
          v13 = a3[8];
        }
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_1003359F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003359FC);
}

uint64_t sub_1003359FC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v8 = type metadata accessor for Notice(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v13 = sub_100005574(&qword_1004A04C0);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      v16 = sub_100005574(&qword_10049B670);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        v17 = sub_100005574(&qword_10049DF58);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[7];
        }
        else
        {
          v10 = sub_100005574(&qword_10049FC68);
          v14 = *(_QWORD *)(v10 - 8);
          v15 = a4[8];
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_100335AF4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD v12[5];

  v2 = type metadata accessor for Notice(319);
  if (v3 <= 0x3F)
  {
    v12[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_100335C1C(319, (unint64_t *)&unk_1004A0530, (uint64_t (*)(void))sub_10032FEFC, (uint64_t)&type metadata for Double);
    if (v5 <= 0x3F)
    {
      v12[1] = *(_QWORD *)(v4 - 8) + 64;
      sub_100335C1C(319, (unint64_t *)&qword_10049B700, (uint64_t (*)(void))sub_10029CE4C, (uint64_t)&type metadata for CGFloat);
      if (v7 <= 0x3F)
      {
        v12[2] = *(_QWORD *)(v6 - 8) + 64;
        sub_100335C74(319, &qword_10049DFD8, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
        if (v9 <= 0x3F)
        {
          v12[3] = *(_QWORD *)(v8 - 8) + 64;
          sub_100335C74(319, (unint64_t *)&qword_10049D718, (uint64_t (*)(uint64_t))&type metadata accessor for LayoutDirection);
          if (v11 <= 0x3F)
          {
            v12[4] = *(_QWORD *)(v10 - 8) + 64;
            swift_initStructMetadata(a1, 256, 5, v12, a1 + 16);
          }
        }
      }
    }
  }
}

void sub_100335C1C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3();
    v8 = type metadata accessor for ScaledMetric(a1, a4, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

void sub_100335C74(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v5 = a3(255);
    v6 = type metadata accessor for Environment.Content(a1, v5);
    if (!v7)
      atomic_store(v6, a2);
  }
}

ValueMetadata *_s25NoticeDismissalContextKeyVMa()
{
  return &_s25NoticeDismissalContextKeyVN;
}

uint64_t sub_100335CD0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1003E4A20, 1);
}

uint64_t sub_100335CE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = EnvironmentValues.lineLimit.getter();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_100335D10(uint64_t a1)
{
  return EnvironmentValues.lineLimit.setter(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t sub_100335D3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, double *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL4 v14;
  int v15;
  uint64_t result;
  double v18;
  double v19;
  double v20;
  double v21;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;

  v6 = type metadata accessor for DynamicTypeSize(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_1004A0418);
  __chkstk_darwin();
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Notice(0);
  sub_100014A7C(a1 + *(int *)(v12 + 20), (uint64_t)v11, &qword_1004A0418);
  v13 = type metadata accessor for Notice.Thumbnail(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v11, 1, v13) == 1)
  {
    sub_100008758((uint64_t)v11, &qword_1004A0418);
    v14 = 0;
  }
  else
  {
    v14 = swift_getEnumCaseMultiPayload(v11, v13) == 1;
    sub_100006798((uint64_t)v11, type metadata accessor for Notice.Thumbnail);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  v15 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (v15 == enum case for DynamicTypeSize.xSmall(_:) || v15 == enum case for DynamicTypeSize.small(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a2, v6);
    result = sub_100006798(a1, type metadata accessor for Notice);
    v18 = 4.0;
    v19 = 12.0;
    if (v14)
      v20 = 12.0;
    else
      v20 = 4.0;
    v21 = 0.0;
    if (v14)
      v21 = 6.0;
  }
  else
  {
    if (v15 == enum case for DynamicTypeSize.medium(_:)
      || v15 == enum case for DynamicTypeSize.large(_:)
      || v15 == enum case for DynamicTypeSize.xLarge(_:))
    {
      v24 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
LABEL_32:
      if (*(_QWORD *)(a1 + *(int *)(v12 + 32)))
        v19 = 19.0;
      else
        v19 = 20.0;
      v24(a2, v6);
      result = sub_100006798(a1, type metadata accessor for Notice);
      v21 = 10.0;
      if (v14)
        v20 = 10.0;
      else
        v20 = 12.0;
      v18 = 4.0;
      if (!v14)
        v21 = 4.0;
      goto LABEL_43;
    }
    v24 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    if (v15 != enum case for DynamicTypeSize.xxLarge(_:)
      && v15 != enum case for DynamicTypeSize.xxxLarge(_:)
      && v15 != enum case for DynamicTypeSize.accessibility1(_:)
      && v15 != enum case for DynamicTypeSize.accessibility2(_:)
      && v15 != enum case for DynamicTypeSize.accessibility3(_:)
      && v15 != enum case for DynamicTypeSize.accessibility4(_:)
      && v15 != enum case for DynamicTypeSize.accessibility5(_:))
    {
      v24((uint64_t)v9, v6);
      goto LABEL_32;
    }
    v24(a2, v6);
    result = sub_100006798(a1, type metadata accessor for Notice);
    v21 = 10.0;
    if (!v14)
      v21 = 6.0;
    v19 = 20.0;
    v20 = 12.0;
    v18 = 8.0;
  }
LABEL_43:
  *a3 = v18;
  a3[1] = v20;
  a3[2] = v18;
  a3[3] = v19;
  a3[4] = v21;
  return result;
}

unint64_t sub_100336084()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004A05E0;
  if (!qword_1004A05E0)
  {
    v1 = sub_100005600(&qword_1004A05D8);
    sub_100336108();
    sub_10002FFB8((unint64_t *)&unk_10049E600, &qword_10049B8D8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1004A05E0);
  }
  return result;
}

unint64_t sub_100336108()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004A05E8;
  if (!qword_1004A05E8)
  {
    v1 = sub_100005600(&qword_1004A05F0);
    sub_10033618C((unint64_t *)&qword_10049E980, &qword_10049E970, (void (*)(void))sub_1003361F4);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1004A05E8);
  }
  return result;
}

uint64_t sub_10033618C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_100005600(a2);
    a3();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1003361F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049E988;
  if (!qword_10049E988)
  {
    v1 = sub_100005600(&qword_10049E990);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10049E988);
  }
  return result;
}

uint64_t sub_100336250(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if ((a6 & 1) == 0)
    return sub_100302748(a1, a2, a3);
  sub_10003B4D0(a1, a2, a3 & 1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100336290@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = EnvironmentValues.lineLimit.getter();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_1003362C0(uint64_t a1)
{
  return EnvironmentValues.lineLimit.setter(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
}

double sub_1003362EC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  double result;

  if (a4)
  {
    sub_10003B4C0(a1, a2, a3 & 1);
    swift_bridgeObjectRetain();
    *(_QWORD *)&result = swift_retain(a5).n128_u64[0];
  }
  return result;
}

uint64_t sub_100336328(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  if (a4)
  {
    sub_10003B4D0(result, a2, a3 & 1);
    swift_release(a5);
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_100336364()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004A0640;
  if (!qword_1004A0640)
  {
    v1 = sub_100005600(&qword_1004A0610);
    sub_100006924(&qword_1004A0648, (uint64_t (*)(uint64_t))&type metadata accessor for CircularProgressView, (uint64_t)&protocol conformance descriptor for CircularProgressView);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1004A0640);
  }
  return result;
}

unint64_t sub_1003363E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004A0650;
  if (!qword_1004A0650)
  {
    v1 = sub_100005600(&qword_1004A0638);
    sub_1003035C0(&qword_1004A0658, &qword_1004A0620, (void (*)(void))sub_100336474, (void (*)(void))sub_100296BF0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1004A0650);
  }
  return result;
}

unint64_t sub_100336474()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004A0660;
  if (!qword_1004A0660)
  {
    v1 = sub_100005600(&qword_1004A0618);
    sub_100006924(&qword_1004A0668, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkImage, (uint64_t)&protocol conformance descriptor for ArtworkImage);
    sub_100296B98();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1004A0660);
  }
  return result;
}

uint64_t sub_1003364F8()
{
  return sub_1003308C4(1.05);
}

unint64_t sub_100336518()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100499FB0;
  if (!qword_100499FB0)
  {
    v1 = objc_opt_self(OS_dispatch_queue);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100499FB0);
  }
  return result;
}

uint64_t sub_100336558()
{
  return sub_100336564((uint64_t (*)(uint64_t))sub_10033084C);
}

uint64_t sub_100336564(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for NoticeView(0) - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

uint64_t sub_1003365A0()
{
  return sub_1003308C4(1.0);
}

unint64_t sub_1003365C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004A0678;
  if (!qword_1004A0678)
  {
    v1 = sub_100005600(&qword_1004A0578);
    sub_10002FFB8(&qword_1004A0680, &qword_1004A0570, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1004A0678);
  }
  return result;
}

id PassthroughView.hitTest(_:with:)(uint64_t a1, double a2, double a3)
{
  void *v3;
  id v7;
  id v8;
  id v9;
  char v10;
  objc_super v12;

  if ((UIViewIgnoresTouchEvents(v3) & 1) != 0)
    return 0;
  v12.receiver = v3;
  v12.super_class = (Class)type metadata accessor for PassthroughView();
  v7 = objc_msgSendSuper2(&v12, "hitTest:withEvent:", a1, a2, a3);
  if (v7)
  {
    sub_100336730();
    v8 = v3;
    v9 = v7;
    v10 = static NSObject.== infix(_:_:)(v9, v8);

    if ((v10 & 1) != 0)
    {

      return 0;
    }
  }
  return v7;
}

uint64_t type metadata accessor for PassthroughView()
{
  return objc_opt_self(_TtC11MusicCoreUI15PassthroughView);
}

unint64_t sub_100336730()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10049D970;
  if (!qword_10049D970)
  {
    v1 = objc_opt_self(UIView);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10049D970);
  }
  return result;
}

id PassthroughView.init(frame:)(double a1, double a2, double a3, double a4)
{
  void *v4;
  objc_super v10;

  v10.receiver = v4;
  v10.super_class = (Class)type metadata accessor for PassthroughView();
  return objc_msgSendSuper2(&v10, "initWithFrame:", a1, a2, a3, a4);
}

id PassthroughView.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for PassthroughView();
  v3 = objc_msgSendSuper2(&v5, "initWithCoder:", a1);

  return v3;
}

id PassthroughView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PassthroughView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

char *SymbolButton.__allocating_init(intent:)(int a1)
{
  uint64_t v2;
  char *v3;
  id v4;
  char *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v15[24];

  type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  v3 = &v15[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_100336A94(a1, 2, (uint64_t)v3);
  v4 = objc_allocWithZone((Class)type metadata accessor for SymbolButton(0));
  v5 = SymbolButton.init(configuration:handler:)((uint64_t)v3, 0, 0);
  v6 = (uint64_t *)&v5[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_configurationProvider];
  swift_beginAccess(&v5[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_configurationProvider], v15, 1, 0);
  v7 = *v6;
  v8 = v6[1];
  *v6 = (uint64_t)sub_100336D44;
  v6[1] = 0;
  v9 = v5;
  sub_10003A5C8(v7, v8);
  if ((_BYTE)a1)
  {
    if (a1 == 1)
      v10 = AccessibilityIdentifier.shuffleIntentButton.unsafeMutableAddressor();
    else
      v10 = AccessibilityIdentifier.startSingingIntentButton.unsafeMutableAddressor();
  }
  else
  {
    v10 = AccessibilityIdentifier.playIntentButton.unsafeMutableAddressor();
  }
  v12 = *v10;
  v11 = v10[1];
  swift_bridgeObjectRetain();
  UIAccessibilityIdentification.musicAccessibilityIdentifier.setter(v12, v11);

  return v9;
}

uint64_t sub_100336A94@<X0>(int a1@<W0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  NSString *v17;
  uint64_t v18;
  _OWORD *v19;
  __int128 v20;
  uint64_t v21;
  id v22;
  int v24;
  int v25;
  uint64_t v26;

  v24 = a1;
  v25 = a2;
  v26 = type metadata accessor for UIViewConfigurationState(0);
  v4 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin();
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (int *)type metadata accessor for SymbolButton.Configuration(0);
  v8 = __chkstk_darwin();
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)(a3 + 24) = UIFontTextStyleSubheadline;
  *(_QWORD *)(a3 + 32) = 0;
  *(_BYTE *)(a3 + 40) = 1;
  *(_OWORD *)(a3 + 48) = xmmword_1003952D0;
  *(_QWORD *)(a3 + 64) = 0;
  *(_QWORD *)(a3 + 72) = 0;
  *(_BYTE *)(a3 + 80) = -1;
  *(_QWORD *)(a3 + 88) = 0;
  *(_QWORD *)(a3 + 96) = 0;
  *(_QWORD *)(a3 + 104) = 0x3FF0000000000000;
  *(_QWORD *)(a3 + 112) = 0;
  *(_QWORD *)(a3 + 120) = 0;
  *(_QWORD *)(a3 + 128) = 0;
  *(_QWORD *)(a3 + 136) = UIFontTextStyleSubheadline;
  *(UIFontWeight *)(a3 + 144) = UIFontWeightSemibold;
  *(_QWORD *)(a3 + 152) = 0;
  *(_QWORD *)(a3 + 160) = 0;
  *(_QWORD *)(a3 + 168) = 0x3FF0000000000000;
  *(_QWORD *)(a3 + 176) = 0;
  *(_BYTE *)(a3 + 184) = 0;
  *(_OWORD *)(a3 + 192) = xmmword_100384A50;
  *(_QWORD *)(a3 + 208) = 0;
  *(_QWORD *)(a3 + 216) = 0;
  *(_QWORD *)(a3 + 224) = 1;
  *(_OWORD *)(a3 + 232) = 0u;
  *(_OWORD *)(a3 + 248) = 0u;
  *(_OWORD *)(a3 + 264) = 0u;
  *(_OWORD *)(a3 + 280) = 0u;
  v11 = a3 + *(int *)(v8 + 36);
  v12 = type metadata accessor for UIView.Corner(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = a3 + v7[10];
  *(_QWORD *)(v13 + 48) = 0;
  *(_OWORD *)(v13 + 16) = 0u;
  *(_OWORD *)(v13 + 32) = 0u;
  *(_OWORD *)v13 = 0u;
  v14 = (_QWORD *)(a3 + v7[11]);
  *v14 = 0;
  v14[1] = 0;
  v14[2] = 1;
  *(_QWORD *)(a3 + v7[12]) = 0x4010000000000000;
  v15 = v7[13];
  v16 = qword_100498D18;
  v17 = UIFontTextStyleSubheadline;
  if (v16 != -1)
    swift_once(&qword_100498D18, sub_10035C908);
  *(_OWORD *)(a3 + v15) = static SymbolButton.Configuration.platterMinimumSize;
  v18 = a3 + v7[14];
  *(_QWORD *)v18 = 0;
  *(_QWORD *)(v18 + 8) = 0;
  *(_BYTE *)(v18 + 16) = 1;
  v19 = (_OWORD *)(a3 + v7[15]);
  v20 = *(_OWORD *)&NSDirectionalEdgeInsetsZero.bottom;
  *v19 = *(_OWORD *)&NSDirectionalEdgeInsetsZero.top;
  v19[1] = v20;
  v21 = a3 + v7[16];
  *(_BYTE *)v21 = 1;
  *(_QWORD *)(v21 + 8) = 0;
  *(_QWORD *)(v21 + 16) = 0;
  *(_BYTE *)(v21 + 24) = 0;
  *(_QWORD *)(a3 + v7[17]) = 0x3FF0000000000000;
  *(_QWORD *)(a3 + v7[18]) = 0;
  *(_BYTE *)(a3 + v7[19]) = 2;
  SymbolButton.Configuration.init()((uint64_t)v10);
  sub_10033794C((uint64_t)v10, v24, v25);
  sub_100339600(a3);
  sub_10033BA38((uint64_t)v10, a3);
  v22 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  UIViewConfigurationState.init(traitCollection:)(v22);
  sub_100336D64((uint64_t)v6);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v26);
}

void sub_100336D44(uint64_t a1)
{
  sub_100336D64(a1);
}

void sub_100336D64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  id v10;
  int v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  id v32;
  uint64_t v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;

  v2 = v1;
  v4 = type metadata accessor for UIViewConfigurationState(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin();
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (void *)UIViewConfigurationState.traitCollection.getter(v6);
  v10 = objc_msgSend(v9, "userInterfaceIdiom");

  if (v10 != (id)6)
  {
    if (*(_QWORD *)(v2 + 224) == 1 || (v11 = *(unsigned __int8 *)(v2 + 248), v11 == 2))
    {
      v12 = UIViewConfigurationState.isHighlighted.getter();
      v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
      if ((v12 & 1) != 0)
      {
        (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      }
      else
      {
        v14 = UIViewConfigurationState.isSelected.getter(v13);
        (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
        if ((v14 & 1) == 0)
        {

          *(_QWORD *)(v2 + 112) = 0;
          *(_QWORD *)(v2 + 176) = 0;
          return;
        }
      }
      if (qword_100498930 != -1)
        swift_once(&qword_100498930, sub_10024E228);
      v15 = static UIColor.MusicTint.pressed;
      v16 = *(void **)(v2 + 112);
      v17 = (id)static UIColor.MusicTint.pressed;

      *(_QWORD *)(v2 + 112) = v15;
      v18 = static UIColor.MusicTint.pressed;
      v19 = *(void **)(v2 + 176);
      v20 = (id)static UIColor.MusicTint.pressed;

      *(_QWORD *)(v2 + 176) = v18;
    }
    else
    {
      v21 = (void *)objc_opt_self(UIColor);
      v22 = v21;
      if ((v11 & 1) != 0)
      {
        v34 = objc_msgSend(v21, "blackColor");

        *(_QWORD *)(v2 + 112) = v34;
        v35 = objc_msgSend(v22, "blackColor");

        *(_QWORD *)(v2 + 176) = v35;
        objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 0.0, 0.05);
        UIView.Border.init(thickness:color:)();
        v37 = v36;
        v39 = v38;
        v41 = v40 & 1;

        *(_QWORD *)(v2 + 272) = v37;
        *(_QWORD *)(v2 + 280) = v41;
        *(_QWORD *)(v2 + 288) = v39;
        LOBYTE(v37) = UIViewConfigurationState.isHighlighted.getter();
        sub_10024EA50();
        v42 = UIColor.init(decimalRed:decimalGreen:decimalBlue:alpha:)(19, 19, 20, 1.0);
        if ((v37 & 1) != 0)
          v43 = 0x3FD5C28F5C28F5C3;
        else
          v43 = 0x3FD3333333333333;
        sub_100246168(*(_QWORD *)(v2 + 192), *(void **)(v2 + 200), *(_QWORD *)(v2 + 208), *(_QWORD *)(v2 + 216));
        *(_QWORD *)(v2 + 192) = v43;
        *(_QWORD *)(v2 + 200) = v42;
      }
      else
      {
        v23 = objc_msgSend(v21, "whiteColor");

        *(_QWORD *)(v2 + 112) = v23;
        v24 = objc_msgSend(v22, "whiteColor");

        *(_QWORD *)(v2 + 176) = v24;
        objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 1.0, 0.05);
        UIView.Border.init(thickness:color:)();
        v26 = v25;
        v28 = v27;
        v30 = v29 & 1;

        *(_QWORD *)(v2 + 272) = v26;
        *(_QWORD *)(v2 + 280) = v30;
        *(_QWORD *)(v2 + 288) = v28;
        v31 = UIViewConfigurationState.isHighlighted.getter();
        v32 = objc_msgSend(v22, "whiteColor");
        if ((v31 & 1) != 0)
          v33 = 0x3FD0A3D70A3D70A4;
        else
          v33 = 0x3FCC28F5C28F5C29;
        sub_100246168(*(_QWORD *)(v2 + 192), *(void **)(v2 + 200), *(_QWORD *)(v2 + 208), *(_QWORD *)(v2 + 216));
        *(_QWORD *)(v2 + 192) = v33;
        *(_QWORD *)(v2 + 200) = v32;
      }
      *(_QWORD *)(v2 + 208) = 0;
      *(_QWORD *)(v2 + 216) = 0;
    }
  }
}

uint64_t SymbolButton.Intent.accessibilityIdentifier.getter(char a1)
{
  uint64_t *v1;
  uint64_t v2;

  if (a1)
  {
    if (a1 == 1)
      v1 = AccessibilityIdentifier.shuffleIntentButton.unsafeMutableAddressor();
    else
      v1 = AccessibilityIdentifier.startSingingIntentButton.unsafeMutableAddressor();
  }
  else
  {
    v1 = AccessibilityIdentifier.playIntentButton.unsafeMutableAddressor();
  }
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

void SymbolButton.update(to:)(int a1)
{
  uint64_t v2;
  char *v3;
  int v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = SymbolButton.materialColor.getter();
  sub_100336A94(a1, v4, (uint64_t)v3);
  SymbolButton.setConfiguration(_:animation:updates:)((uint64_t)v3, 0, 0, 0, 1, (uint64_t)_swiftEmptyArrayStorage);
  sub_100339600((uint64_t)v3);
  if ((_BYTE)a1)
  {
    if (a1 == 1)
      v5 = AccessibilityIdentifier.shuffleIntentButton.unsafeMutableAddressor();
    else
      v5 = AccessibilityIdentifier.startSingingIntentButton.unsafeMutableAddressor();
  }
  else
  {
    v5 = AccessibilityIdentifier.playIntentButton.unsafeMutableAddressor();
  }
  v7 = *v5;
  v6 = v5[1];
  type metadata accessor for SymbolButton(0);
  swift_bridgeObjectRetain();
  UIAccessibilityIdentification.musicAccessibilityIdentifier.setter(v7, v6);
}

uint64_t SymbolButton.materialColor.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  int v5;
  _BYTE v7[24];

  type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  v2 = &v7[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v3 = v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration;
  swift_beginAccess(v3, v7, 0, 0);
  sub_10033963C(v3, (uint64_t)v2);
  if (*((_QWORD *)v2 + 28) == 1)
  {
    sub_100339600((uint64_t)v2);
    return 2;
  }
  else
  {
    v5 = v2[248];
    sub_100339600((uint64_t)v2);
    if (v5 == 2)
      return 2;
    else
      return (v5 & 1) == 0;
  }
}

void SymbolButton.materialColor.setter(char a1)
{
  char *v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  uint64_t v24;

  sub_100005574(&qword_1004A06B0);
  __chkstk_darwin();
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SymbolButton.Configuration(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(v1, "traitCollection");
  v10 = objc_msgSend(v9, "userInterfaceIdiom");

  if (v10 != (id)6)
  {
    if (a1 == 2)
    {
      v17 = 0;
      v18 = 0;
      v11 = 0;
      v12 = 0;
      v13 = 0;
      v14 = 1;
    }
    else
    {
      v19 = 0;
      v20 = 0;
      v21 = 0;
      v22 = 2;
      v23 = 0;
      v24 = 0;
      sub_100337834((uint64_t)&v19, a1 & 1);
      v14 = v19;
      v17 = v21;
      v18 = v20;
      v11 = v22;
      v12 = v23;
      v13 = v24;
    }
    v15 = (uint64_t)&v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration];
    swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration], &v19, 0, 0);
    sub_10033963C(v15, (uint64_t)v8);
    sub_100339680(*((void **)v8 + 28), *((void **)v8 + 29), *((void **)v8 + 30), *((_QWORD *)v8 + 31), *((_QWORD *)v8 + 32), *((_QWORD *)v8 + 33));
    v16 = v18;
    *((_QWORD *)v8 + 28) = v14;
    *((_QWORD *)v8 + 29) = v16;
    *((_QWORD *)v8 + 30) = v17;
    *((_QWORD *)v8 + 31) = v11;
    *((_QWORD *)v8 + 32) = v12;
    *((_QWORD *)v8 + 33) = v13;
    SymbolButton.setConfiguration(_:animation:updates:)((uint64_t)v8, 0, 0, 0, 1, (uint64_t)_swiftEmptyArrayStorage);
    sub_100339600((uint64_t)v8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    SymbolButton.updateConfigurationIfNeeded(_:animation:)((uint64_t)v4, 0, 0, 0, 1);
    sub_100008758((uint64_t)v4, &qword_1004A06B0);
  }
}

void (*SymbolButton.materialColor.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = SymbolButton.materialColor.getter();
  return sub_100337504;
}

void sub_100337504(uint64_t a1)
{
  SymbolButton.materialColor.setter(*(_BYTE *)(a1 + 8));
}

uint64_t SymbolButton.Intent.title.getter(char a1)
{
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[16];

  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v3 = &v15[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for String.LocalizationValue(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  v9 = &v15[-v8];
  if (a1)
  {
    if (a1 == 1)
    {
      v10 = 0x656C6666756853;
      v11 = 0xE700000000000000;
    }
    else
    {
      v10 = 0x6953207472617453;
      v11 = 0xED0000676E69676ELL;
    }
  }
  else
  {
    v10 = 2036427856;
    v11 = 0xE400000000000000;
  }
  String.LocalizationValue.init(stringLiteral:)(v10, v11);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 16))(v7, v9, v4);
  if (qword_100498860 != -1)
    swift_once(&qword_100498860, sub_100232E30);
  v12 = qword_1004A2F90;
  static Locale.current.getter((id)qword_1004A2F90);
  v13 = String.init(localized:table:bundle:locale:comment:)(v7, 0, 0, v12, v3, 0, 0, 256);
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v9, v4);
  return v13;
}

uint64_t SymbolButton.Intent.symbolName.getter(char a1)
{
  if (!a1)
    return 0x6C69662E79616C70;
  if (a1 == 1)
    return 0x656C6666756873;
  return 0x2E646E612E63696DLL;
}

uint64_t SymbolButton.Intent.symbolBundle.getter(char a1)
{
  uint64_t v1;
  id v2;

  if (a1 != 2)
    return 0;
  if (qword_100498900 != -1)
    swift_once(&qword_100498900, sub_100245D10);
  v1 = static NSBundle.musicCoreUIBundle;
  v2 = (id)static NSBundle.musicCoreUIBundle;
  return v1;
}

unint64_t SymbolButton.Intent.id.getter(char a1)
{
  unint64_t result;

  result = 0xD000000000000015;
  if (a1 == 1)
    return 0xD000000000000018;
  return result;
}

unint64_t sub_10033780C@<X0>(unint64_t *a1@<X8>)
{
  char *v1;
  unint64_t result;
  unint64_t v4;

  result = SymbolButton.Intent.id.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_100337834(uint64_t a1, char a2)
{
  char v3;
  id v4;
  id v5;
  Swift::String v6;
  void *object;
  unint64_t v8;
  unint64_t v9;
  uint64_t result;
  char v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a2 & 1;
  *(_BYTE *)(a1 + 24) = !(a2 & 1);
  v4 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithBlurRadius:", 50.0);

  *(_QWORD *)a1 = v4;
  v5 = objc_msgSend((id)objc_opt_self(UIColorEffect), "colorEffectSaturate:", 1.6);

  *(_QWORD *)(a1 + 8) = v5;
  _StringGuts.grow(_:)(19);
  swift_bridgeObjectRelease(0xE000000000000000);
  v12 = 0xD000000000000011;
  v13 = 0x80000001003BB240;
  v11 = v3;
  v6._countAndFlagsBits = String.init<A>(describing:)(&v11, &type metadata for SymbolButton.MaterialColor);
  object = v6._object;
  String.append(_:)(v6);
  swift_bridgeObjectRelease(object);
  v8 = v12;
  v9 = v13;
  result = swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  return result;
}

double sub_10033794C(uint64_t a1, unsigned __int8 a2, int a3)
{
  uint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  UIFontTextStyle v10;
  uint64_t v11;
  NSString *v12;
  NSString *v13;
  void *v14;
  void *v15;
  NSString *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSString *v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;
  _OWORD *v36;
  double result;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned __int8 v43;
  uint64_t v44;
  uint64_t v45;

  HIDWORD(v38) = a3;
  sub_100005574(&qword_1004A1050);
  __chkstk_darwin();
  v39 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v6 = a2;
    if (a2 == 1)
    {
      v7 = 0;
      v8 = 0xE700000000000000;
      v9 = 0x656C6666756873;
      v10 = UIFontTextStyleSubheadline;
    }
    else
    {
      v11 = qword_100498900;
      v12 = UIFontTextStyleSubheadline;
      if (v11 != -1)
        swift_once(&qword_100498900, sub_100245D10);
      v10 = (UIFontTextStyle)static NSBundle.musicCoreUIBundle;
      v8 = 0xED00007372617473;
      v9 = 0x2E646E612E63696DLL;
      v7 = static NSBundle.musicCoreUIBundle;
    }
  }
  else
  {
    v6 = a2;
    v7 = a2;
    v8 = 0xE90000000000006CLL;
    v9 = 0x6C69662E79616C70;
    v10 = UIFontTextStyleSubheadline;
  }
  v13 = v10;
  v14 = *(void **)(a1 + 16);
  v15 = *(void **)(a1 + 112);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  *(_QWORD *)a1 = v9;
  *(_QWORD *)(a1 + 8) = v8;
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = UIFontTextStyleSubheadline;
  *(_QWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 40) = 1;
  *(_OWORD *)(a1 + 48) = xmmword_1003952D0;
  *(_OWORD *)(a1 + 64) = xmmword_100395490;
  *(_BYTE *)(a1 + 80) = 1;
  *(_QWORD *)(a1 + 88) = 0;
  *(_QWORD *)(a1 + 96) = 0;
  *(_QWORD *)(a1 + 104) = 0x3FF0000000000000;
  *(_QWORD *)(a1 + 112) = 0;
  v16 = UIFontTextStyleSubheadline;
  v17 = v6;
  v18 = SymbolButton.Intent.title.getter(v6);
  v20 = v19;
  v21 = UIFontTextStyleBody;

  v22 = *(void **)(a1 + 176);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  *(_QWORD *)(a1 + 120) = v18;
  *(_QWORD *)(a1 + 128) = v20;
  *(_QWORD *)(a1 + 136) = v21;
  *(UIFontWeight *)(a1 + 144) = UIFontWeightSemibold;
  *(_QWORD *)(a1 + 152) = 0;
  *(_QWORD *)(a1 + 160) = 0;
  *(_QWORD *)(a1 + 168) = 0x3FF0000000000000;
  *(_QWORD *)(a1 + 176) = 0;
  *(_BYTE *)(a1 + 184) = 0;
  v23 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  v24 = objc_msgSend(v23, "userInterfaceIdiom");

  if (v24 != (id)6)
  {
    if (BYTE4(v38) == 2)
    {
      v25 = 0;
      v26 = 0;
      v27 = 0;
      v28 = 0;
      v29 = 0;
      v30 = 1;
    }
    else
    {
      v40 = 0;
      v41 = 0;
      v42 = 0;
      v43 = 2;
      v44 = 0;
      v45 = 0;
      sub_100337834((uint64_t)&v40, BYTE4(v38) & 1);
      v30 = v40;
      v25 = v41;
      v26 = v42;
      v27 = v43;
      v28 = v44;
      v29 = v45;
    }
    sub_100339680(*(void **)(a1 + 224), *(void **)(a1 + 232), *(void **)(a1 + 240), *(_QWORD *)(a1 + 248), *(_QWORD *)(a1 + 256), *(_QWORD *)(a1 + 264));
    *(_QWORD *)(a1 + 224) = v30;
    *(_QWORD *)(a1 + 232) = v25;
    *(_QWORD *)(a1 + 240) = v26;
    *(_QWORD *)(a1 + 248) = v27;
    *(_QWORD *)(a1 + 256) = v28;
    *(_QWORD *)(a1 + 264) = v29;
  }
  if (qword_100498D58 != -1)
    swift_once(&qword_100498D58, sub_10035D984);
  v31 = type metadata accessor for UIView.Corner(0);
  v32 = sub_1000086B4(v31, (uint64_t)static UIView.Corner.roundedRect);
  v33 = *(_QWORD *)(v31 - 8);
  v34 = (uint64_t)v39;
  (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v39, v32, v31);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v33 + 56))(v34, 0, 1, v31);
  v35 = (int *)type metadata accessor for SymbolButton.Configuration(0);
  sub_1002460F4(v34, a1 + v35[9]);
  *(_QWORD *)(a1 + v35[12]) = qword_10039F630[v17];
  *(int64x2_t *)(a1 + v35[13]) = vdupq_n_s64(0x4048000000000000uLL);
  v36 = (_OWORD *)(a1 + v35[15]);
  result = 0.0;
  *v36 = xmmword_1003954A0;
  v36[1] = xmmword_1003954A0;
  return result;
}

Swift::Int static PlayIntentButtonStack.playShuffle(_:)(uint64_t a1, uint64_t a2)
{
  return sub_100337D24(a1, a2, (uint64_t)&off_10045A050);
}

Swift::Int static PlayIntentButtonStack.sing(_:)(uint64_t a1, uint64_t a2)
{
  return sub_100337D24(a1, a2, (uint64_t)&off_10045A078);
}

Swift::Int sub_100337D24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Swift::Int v4;

  v4 = sub_10024C0F0(a3);
  swift_retain(a2);
  return v4;
}

Swift::Int PlayIntentButtonStack.init(_:handler:)(char a1)
{
  uint64_t v2;
  uint64_t inited;
  Swift::Int v4;
  _BYTE v6[40];

  v2 = sub_100005574(&qword_1004999A0);
  inited = swift_initStackObject(v2, v6);
  *(_OWORD *)(inited + 16) = xmmword_100384A80;
  *(_BYTE *)(inited + 32) = a1;
  v4 = sub_10024C0F0(inited);
  swift_setDeallocating(inited);
  return v4;
}

uint64_t PlayIntentButtonStack.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  unsigned int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v17;

  sub_100005574(&qword_1004A06B8);
  v8 = __chkstk_darwin();
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = static Axis.Set.horizontal.getter(v8);
  v12 = Axis.Set.init(rawValue:)(0);
  v13 = v12;
  v14 = Axis.Set.init(rawValue:)(v12);
  if (Axis.Set.init(rawValue:)(v14 & v11) != v11)
    LOBYTE(v13) = Axis.Set.init(rawValue:)(v13 | v11);
  *v10 = v13;
  v15 = sub_100005574(&qword_1004A06C0);
  sub_100337ED4(a1, a2, a3, &v10[*(int *)(v15 + 44)]);
  return sub_1000149A8((uint64_t)v10, a4, &qword_1004A06B8);
}

uint64_t sub_100337ED4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v22;

  v8 = sub_100005574(&qword_1004A0750);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin();
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v13 = (char *)&v22 - v12;
  __chkstk_darwin();
  v15 = (char *)&v22 - v14;
  __chkstk_darwin();
  v17 = (char *)&v22 - v16;
  sub_100338068(0, a1, a2, a3, (uint64_t)&v22 - v16);
  sub_100338068(1, a1, a2, a3, (uint64_t)v15);
  v18 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v18(v13, v17, v8);
  v18(v11, v15, v8);
  v18(a4, v13, v8);
  v19 = sub_100005574(&qword_1004A0758);
  v18(&a4[*(int *)(v19 + 48)], v11, v8);
  v20 = *(void (**)(char *, uint64_t))(v9 + 8);
  v20(v15, v8);
  v20(v17, v8);
  v20(v11, v8);
  return ((uint64_t (*)(char *, uint64_t))v20)(v13, v8);
}

void sub_100338068(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  _BYTE *v34;
  _QWORD *v35;
  void (*v36)(char *, _QWORD, uint64_t);
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  void (*v43)(char *, char *, uint64_t);
  char *v44;
  void (*v45)(char *, char *, uint64_t);
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  char *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  char *v66;
  char *v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;

  v65 = a1;
  v61 = a5;
  v59 = sub_100005574(&qword_1004A0300);
  __chkstk_darwin();
  v9 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v57 = (char *)&v55 - v10;
  v11 = type metadata accessor for DynamicTypeSize(0);
  v68 = *(_QWORD **)(v11 - 8);
  __chkstk_darwin();
  v67 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v66 = (char *)&v55 - v13;
  v60 = sub_100005574(&qword_1004A0308);
  __chkstk_darwin();
  v56 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v58 = (uint64_t)&v55 - v15;
  v16 = sub_100005574(&qword_1004A0760);
  v63 = *(_QWORD *)(v16 - 8);
  v64 = v16;
  __chkstk_darwin();
  v18 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v20 = (char *)&v55 - v19;
  v21 = sub_100005574(&qword_1004A0768);
  __chkstk_darwin();
  v23 = (uint64_t *)((char *)&v55 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v69 = sub_100005574(&qword_1004A0770);
  __chkstk_darwin();
  v70 = (uint64_t)&v55 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v23 = 0x4030000000000000;
  swift_bridgeObjectRetain_n(a2, 2);
  v25 = (char *)sub_1002451A4(a2);
  swift_bridgeObjectRelease();
  v71 = v25;
  sub_1003396C8(&v71);
  swift_bridgeObjectRelease();
  v62 = (char *)v23 + *(int *)(v21 + 44);
  v26 = swift_allocObject(&unk_100464D48, 48, 7);
  *(_BYTE *)(v26 + 16) = v65 & 1;
  *(_QWORD *)(v26 + 24) = a2;
  *(_QWORD *)(v26 + 32) = a3;
  *(_QWORD *)(v26 + 40) = a4;
  swift_bridgeObjectRetain();
  swift_retain(a4);
  v27 = sub_100005574(&qword_1004A0778);
  v28 = sub_10002FFB8(&qword_1004A0780, &qword_1004A0778, (uint64_t)&protocol conformance descriptor for [A]);
  v29 = sub_10033AEAC();
  v30 = sub_10033B89C();
  ForEach<>.init(_:content:)(&v71, sub_10033B840, v26, v27, &type metadata for String, &type metadata for PlayIntentButtonWrapper, v28, v29, v30);
  v31 = v64;
  v32 = *(void (**)(char *, char *, uint64_t))(v63 + 32);
  v32(v20, v18, v64);
  v32(v62, v20, v31);
  LOBYTE(v32) = *(_QWORD *)(a2 + 16) < 2uLL;
  v33 = v70;
  sub_10033B8E0((uint64_t)v23, v70);
  v34 = (_BYTE *)(v33 + *(int *)(v69 + 36));
  *v34 = (_BYTE)v32;
  v34[1] = 1;
  sub_100008758((uint64_t)v23, &qword_1004A0768);
  v35 = v68;
  v36 = (void (*)(char *, _QWORD, uint64_t))v68[13];
  v37 = v66;
  v36(v66, enum case for DynamicTypeSize.xSmall(_:), v11);
  v38 = v67;
  v36(v67, enum case for DynamicTypeSize.accessibility2(_:), v11);
  v39 = sub_100006924((unint64_t *)&qword_10049E500, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  if ((dispatch thunk of static Comparable.<= infix(_:_:)(v37, v38, v11, v39) & 1) != 0)
  {
    v40 = v59;
    v41 = v57;
    v42 = &v57[*(int *)(v59 + 48)];
    v43 = (void (*)(char *, char *, uint64_t))v35[4];
    v43(v57, v37, v11);
    v43(v42, v38, v11);
    v44 = &v9[*(int *)(v40 + 48)];
    v45 = (void (*)(char *, char *, uint64_t))v35[2];
    v45(v9, v41, v11);
    v45(v44, v42, v11);
    v46 = (uint64_t)v56;
    v43(v56, v9, v11);
    v47 = (void (*)(char *, uint64_t))v35[1];
    v47(v44, v11);
    v48 = &v9[*(int *)(v40 + 48)];
    v43(v9, v41, v11);
    v43(v48, v42, v11);
    v49 = v60;
    v43((char *)(v46 + *(int *)(v60 + 36)), v48, v11);
    v47(v9, v11);
    v50 = v58;
    sub_1000149A8(v46, v58, &qword_1004A0308);
    v51 = sub_10033B928();
    v52 = sub_10002FFB8(&qword_1004A0410, &qword_1004A0308, (uint64_t)&protocol conformance descriptor for ClosedRange<A>);
    v53 = v51;
    v54 = v70;
    View.dynamicTypeSize<A>(_:)(v50, v69, v49, v53, v52);
    sub_100008758(v50, &qword_1004A0308);
    sub_100008758(v54, &qword_1004A0770);
  }
  else
  {
    __break(1u);
    swift_release(v71);
    __break(1u);
  }
}

uint64_t PlayIntentButtonWrapper.init(intent:iconOnly:handler:)@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t result;

  result = swift_getKeyPath(&unk_10039F0B8);
  *(_BYTE *)a5 = a1;
  *(_BYTE *)(a5 + 1) = a2;
  *(_QWORD *)(a5 + 8) = a3;
  *(_QWORD *)(a5 + 16) = a4;
  *(_QWORD *)(a5 + 24) = result;
  *(_BYTE *)(a5 + 32) = 0;
  return result;
}

uint64_t sub_100338640(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, double *a6, double a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  double v27;
  double v28;
  uint64_t v29;
  void (*v30)(_QWORD *, _QWORD);
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  double v37;
  double v38;
  uint64_t v39;
  double *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t result;
  _QWORD v44[2];
  int v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  double *v49;
  char *v50;
  char *v51;
  void (*v52)(char *, uint64_t, uint64_t);
  char *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[5];

  v49 = a6;
  v47 = a4;
  v46 = a3;
  v45 = a2;
  v44[1] = a1;
  v9 = type metadata accessor for LayoutSubview(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin();
  v51 = (char *)v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_1004A0728);
  __chkstk_darwin();
  v13 = (char *)v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for LayoutSubviews(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin();
  v17 = (char *)v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100005574(&qword_1004A0730);
  __chkstk_darwin();
  v20 = (char *)v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = v15;
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v48 = a5;
  v52 = v21;
  v21(v17, a5, v14);
  v22 = sub_100006924(&qword_1004A0740, (uint64_t (*)(uint64_t))&type metadata accessor for LayoutSubviews, (uint64_t)&protocol conformance descriptor for LayoutSubviews);
  v53 = v17;
  dispatch thunk of Sequence.makeIterator()(v14, v22);
  v23 = &v20[*(int *)(v18 + 36)];
  v24 = sub_100006924(&qword_1004A0738, (uint64_t (*)(uint64_t))&type metadata accessor for LayoutSubviews, (uint64_t)&protocol conformance descriptor for LayoutSubviews);
  v25 = *(_QWORD *)v23;
  v50 = v20;
  dispatch thunk of Collection.endIndex.getter(v56, v14, v24);
  if (v25 == v56[0])
  {
    v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    v27 = 0.0;
LABEL_10:
    v40 = v49;
    v26(v13, 1, 1, v9);
    v41 = (uint64_t)v50;
  }
  else
  {
    v27 = 0.0;
    v28 = 0.0;
    v29 = (uint64_t)v50;
    while (1)
    {
      v30 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v56, v23, v14, v24);
      (*(void (**)(char *))(v10 + 16))(v13);
      v30(v56, 0);
      v31 = v53;
      v52(v53, v29, v14);
      dispatch thunk of Collection.formIndex(after:)(v23, v14, v24);
      (*(void (**)(char *, uint64_t))(v54 + 8))(v31, v14);
      v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
      v26(v13, 0, 1, v9);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v13, 1, v9) == 1)
        break;
      v32 = v51;
      v33 = (*(uint64_t (**)(char *, char *, uint64_t))(v10 + 32))(v51, v13, v9);
      v34 = static ProposedViewSize.zero.getter(v33);
      LOBYTE(v56[0]) = v35 & 1;
      LOBYTE(v55) = v36 & 1;
      v37 = LayoutSubview.sizeThatFits(_:)(v34);
      if (v27 <= v37)
        v27 = v37;
      if (v28 <= v38)
        v28 = v38;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v32, v9);
      v39 = *(_QWORD *)v23;
      dispatch thunk of Collection.endIndex.getter(v56, v14, v24);
      if (v39 == v56[0])
        goto LABEL_10;
    }
    v40 = v49;
    v41 = v29;
  }
  sub_100008758(v41, &qword_1004A0730);
  dispatch thunk of Collection.startIndex.getter(v14);
  dispatch thunk of Collection.endIndex.getter(&v55, v14, v24);
  v42 = dispatch thunk of Collection.distance(from:to:)(v56, &v55, v14, v24);
  dispatch thunk of Collection.startIndex.getter(v14);
  dispatch thunk of Collection.endIndex.getter(&v55, v14, v24);
  result = dispatch thunk of Collection.distance(from:to:)(v56, &v55, v14, v24);
  if (__OFSUB__(result, 1))
  {
    __break(1u);
  }
  else
  {
    *v40 = v27;
    v40[1] = v27 * (double)v42 + (double)(result - 1) * a7;
  }
  return result;
}

void sub_100338A70(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

uint64_t sub_100338A80(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, double *a6)
{
  double *v6;

  return sub_100338640(a1, a2 & 1, a3, a4 & 1, a5, a6, *v6);
}

uint64_t sub_100338A9C(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, double *a10)
{
  double *v10;

  return sub_100339EB0(a9, a10, a1, a2, a3, a4, *v10);
}

uint64_t sub_100338AAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_100338B04(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t))&Layout.explicitAlignment(of:in:proposal:subviews:cache:));
}

uint64_t sub_100338AD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_100338B04(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t))&Layout.explicitAlignment(of:in:proposal:subviews:cache:));
}

uint64_t sub_100338B04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t))
{
  return a10(a1);
}

uint64_t sub_100338B40@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v15;

  sub_100005574(&qword_1004A06B8);
  v3 = __chkstk_darwin();
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1;
  v7 = v1[1];
  v8 = v1[2];
  v9 = static Axis.Set.horizontal.getter(v3);
  v10 = Axis.Set.init(rawValue:)(0);
  v11 = v10;
  v12 = Axis.Set.init(rawValue:)(v10);
  if (Axis.Set.init(rawValue:)(v12 & v9) != v9)
    LOBYTE(v11) = Axis.Set.init(rawValue:)(v11 | v9);
  *v5 = v11;
  v13 = sub_100005574(&qword_1004A06C0);
  sub_100337ED4(v6, v7, v8, &v5[*(int *)(v13 + 44)]);
  return sub_1000149A8((uint64_t)v5, a1, &qword_1004A06B8);
}

uint64_t EnvironmentValues.playIntentButtonMaterial.getter()
{
  unint64_t v0;
  unsigned __int8 v2;

  v0 = sub_100339DF8();
  EnvironmentValues.subscript.getter(&type metadata for PlayIntentButtonMaterialKey, &type metadata for PlayIntentButtonMaterialKey, v0);
  return v2;
}

uint64_t sub_100338C64@<X0>(_BYTE *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_100339DF8();
  result = EnvironmentValues.subscript.getter(&type metadata for PlayIntentButtonMaterialKey, &type metadata for PlayIntentButtonMaterialKey, v2);
  *a1 = v4;
  return result;
}

uint64_t sub_100338CB0(char *a1)
{
  unint64_t v1;
  char v3;

  v3 = *a1;
  v1 = sub_100339DF8();
  return EnvironmentValues.subscript.setter(&v3, &type metadata for PlayIntentButtonMaterialKey, &type metadata for PlayIntentButtonMaterialKey, v1);
}

uint64_t EnvironmentValues.playIntentButtonMaterial.setter(char a1)
{
  unint64_t v1;
  char v3;

  v3 = a1;
  v1 = sub_100339DF8();
  return EnvironmentValues.subscript.setter(&v3, &type metadata for PlayIntentButtonMaterialKey, &type metadata for PlayIntentButtonMaterialKey, v1);
}

char *PlayIntentButtonWrapper.makeUIView(context:)()
{
  unsigned __int8 *v0;
  unsigned __int8 *v1;
  uint64_t v2;
  _BYTE *v3;
  int v4;
  char *v5;
  int v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v21[24];
  char v22[24];

  v1 = v0;
  type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  v3 = &v21[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for SymbolButton(0);
  v4 = *v0;
  v5 = SymbolButton.__allocating_init(intent:)(v4);
  v6 = SymbolButton.materialColor.getter();
  sub_100336A94(v4, v6, (uint64_t)v3);
  SymbolButton.setConfiguration(_:animation:updates:)((uint64_t)v3, 0, 0, 0, 1, (uint64_t)_swiftEmptyArrayStorage);
  sub_100339600((uint64_t)v3);
  if (v4)
  {
    if (v4 == 1)
      v7 = AccessibilityIdentifier.shuffleIntentButton.unsafeMutableAddressor();
    else
      v7 = AccessibilityIdentifier.startSingingIntentButton.unsafeMutableAddressor();
  }
  else
  {
    v7 = AccessibilityIdentifier.playIntentButton.unsafeMutableAddressor();
  }
  v9 = *v7;
  v8 = v7[1];
  swift_bridgeObjectRetain();
  UIAccessibilityIdentification.musicAccessibilityIdentifier.setter(v9, v8);
  v10 = *((_QWORD *)v1 + 3);
  LOBYTE(v8) = v1[32];
  sub_100301C50(v10, v8);
  LOBYTE(v9) = sub_1002BE7F8(v10, v8);
  sub_1002D0564(v10, v8);
  SymbolButton.materialColor.setter(v9);
  v11 = v1[1];
  v12 = (uint64_t)&v5[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration];
  swift_beginAccess(&v5[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration], v22, 0, 0);
  sub_10033963C(v12, (uint64_t)v3);
  v3[184] = v11;
  SymbolButton.setConfiguration(_:animation:updates:)((uint64_t)v3, 0, 0, 0, 1, (uint64_t)_swiftEmptyArrayStorage);
  sub_100339600((uint64_t)v3);
  v13 = *((_QWORD *)v1 + 1);
  v14 = *((_QWORD *)v1 + 2);
  v15 = swift_allocObject(&unk_100464858, 49, 7);
  v16 = *((_OWORD *)v1 + 1);
  *(_OWORD *)(v15 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v15 + 32) = v16;
  *(_BYTE *)(v15 + 48) = v1[32];
  v17 = (uint64_t *)&v5[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_handler];
  swift_beginAccess(&v5[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_handler], v21, 1, 0);
  v18 = *v17;
  v19 = v17[1];
  *v17 = (uint64_t)sub_100339E40;
  v17[1] = v15;
  sub_100301C50(v10, v8);
  sub_10003A434(v13, v14);
  sub_10003A5C8(v18, v19);
  return v5;
}

uint64_t PlayIntentButtonWrapper.updateUIView(_:context:)(uint64_t a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  _BYTE *v5;
  int v6;
  int v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v23[24];
  _BYTE v24[24];

  v2 = v1;
  type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  v5 = &v23[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = *v2;
  v7 = SymbolButton.materialColor.getter();
  sub_100336A94(v6, v7, (uint64_t)v5);
  SymbolButton.setConfiguration(_:animation:updates:)((uint64_t)v5, 0, 0, 0, 1, (uint64_t)_swiftEmptyArrayStorage);
  sub_100339600((uint64_t)v5);
  if (v6)
  {
    if (v6 == 1)
      v8 = AccessibilityIdentifier.shuffleIntentButton.unsafeMutableAddressor();
    else
      v8 = AccessibilityIdentifier.startSingingIntentButton.unsafeMutableAddressor();
  }
  else
  {
    v8 = AccessibilityIdentifier.playIntentButton.unsafeMutableAddressor();
  }
  v10 = *v8;
  v9 = v8[1];
  type metadata accessor for SymbolButton(0);
  swift_bridgeObjectRetain();
  UIAccessibilityIdentification.musicAccessibilityIdentifier.setter(v10, v9);
  v11 = *((_QWORD *)v2 + 3);
  LOBYTE(v10) = v2[32];
  sub_100301C50(v11, v10);
  v12 = sub_1002BE7F8(v11, v10);
  sub_1002D0564(v11, v10);
  SymbolButton.materialColor.setter(v12);
  v13 = v2[1];
  v14 = a1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration;
  swift_beginAccess(a1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration, v24, 0, 0);
  sub_10033963C(v14, (uint64_t)v5);
  v5[184] = v13;
  SymbolButton.setConfiguration(_:animation:updates:)((uint64_t)v5, 0, 0, 0, 1, (uint64_t)_swiftEmptyArrayStorage);
  sub_100339600((uint64_t)v5);
  v15 = *((_QWORD *)v2 + 1);
  v16 = *((_QWORD *)v2 + 2);
  v17 = swift_allocObject(&unk_100464880, 49, 7);
  v18 = *((_OWORD *)v2 + 1);
  *(_OWORD *)(v17 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v17 + 32) = v18;
  *(_BYTE *)(v17 + 48) = v2[32];
  v19 = (uint64_t *)(a1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_handler);
  swift_beginAccess(a1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_handler, v23, 1, 0);
  v20 = *v19;
  v21 = v19[1];
  *v19 = (uint64_t)sub_100339E40;
  v19[1] = v17;
  sub_100301C50(v11, v10);
  sub_10003A434(v15, v16);
  return sub_10003A5C8(v20, v21);
}

double PlayIntentButtonWrapper.sizeThatFits(_:uiView:context:)(uint64_t a1, char a2, int a3, int a4, id a5)
{
  double result;
  double v8;

  objc_msgSend(a5, "intrinsicContentSize");
  if ((a2 & 1) == 0)
  {
    if (result > *(double *)&a1)
      v8 = result;
    else
      v8 = *(double *)&a1;
    if (*(double *)&a1 != INFINITY)
      return v8;
  }
  return result;
}

uint64_t sub_100339224(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_10033B7D0();
  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100339274(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_10033B7D0();
  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_1003392C4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10033B7D0();
  UIViewRepresentable.body.getter(a1, v2);
  __break(1u);
}

double View.playIntentButtonMaterial(_:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t KeyPath;
  double result;
  char v8;

  KeyPath = swift_getKeyPath(&unk_10039F0B8);
  v8 = a1;
  View.environment<A>(_:_:)(KeyPath, &v8, a2, a3);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

uint64_t sub_100339358(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  v8 = sub_10008FE98(&qword_1004A0718, &qword_1004A0720, (void (*)(void))sub_10033AE54, (uint64_t)&protocol conformance descriptor for <A> A?);
  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

uint64_t (*EnvironmentValues.playIntentButtonMaterial.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;

  *a1 = v1;
  v3 = sub_100339DF8();
  a1[1] = v3;
  EnvironmentValues.subscript.getter(&type metadata for PlayIntentButtonMaterialKey, &type metadata for PlayIntentButtonMaterialKey, v3);
  return sub_100339420;
}

uint64_t sub_100339420(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a1 + 16);
  return EnvironmentValues.subscript.setter(a1 + 17, &type metadata for PlayIntentButtonMaterialKey, &type metadata for PlayIntentButtonMaterialKey, v1);
}

uint64_t PlayIntentLayoutHelper.Configuration.distribution.getter(__int16 a1)
{
  return HIBYTE(a1);
}

uint64_t static PlayIntentLayoutHelper.Configuration.with(_:)(void (*a1)(unsigned __int16 *))
{
  unsigned __int16 v2;
  uint64_t v3;

  v2 = 513;
  v3 = 0x4030000000000000;
  a1(&v2);
  return v2;
}

BOOL static PlayIntentLayoutHelper.Configuration.__derived_struct_equals(_:_:)(__int16 a1, __int16 a2, double a3, double a4)
{
  return a3 == a4 && a1 == a2;
}

BOOL sub_1003394BC(double *a1, double *a2)
{
  return *(unsigned __int8 *)a1 == *(unsigned __int8 *)a2
      && *((unsigned __int8 *)a1 + 1) == *((unsigned __int8 *)a2 + 1)
      && a1[1] == a2[1];
}

uint64_t PlayIntentLayoutHelper.configuration.setter(uint64_t result, double a2)
{
  uint64_t v2;

  *(_WORD *)(v2 + 16) = result;
  *(double *)(v2 + 24) = a2;
  return result;
}

char *PlayIntentLayoutHelper.init()()
{
  char *v0;

  type metadata accessor for SymbolButton(0);
  v0 = SymbolButton.__allocating_init(intent:)(0);
  SymbolButton.__allocating_init(intent:)(1);
  return v0;
}

uint64_t PlayIntentLayoutHelper.layout(in:rect:)(void *a1, uint64_t a2, void *a3, void *a4, int a5, double a6)
{
  uint64_t v12;
  uint64_t inited;
  id v14;
  id v15;
  uint64_t v17;
  _BYTE v18[48];

  v12 = sub_100005574(&qword_100499F50);
  inited = swift_initStackObject(v12, v18);
  *(_OWORD *)(inited + 16) = xmmword_100384B70;
  *(_QWORD *)(inited + 32) = a3;
  *(_QWORD *)(inited + 40) = a4;
  v17 = inited;
  specialized Array._endMutation()(inited);
  v14 = a3;
  v15 = a4;
  _s11MusicCoreUI22PlayIntentLayoutHelperV6layout_2in4rect13configurationySayAA12SymbolButtonCG_So6UIViewCSo6CGRectVSgAC13ConfigurationVtFZ_0(v17, a1, a2, a5, a6);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100339600(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SymbolButton.Configuration(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10033963C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SymbolButton.Configuration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void *sub_100339680(void *result, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (result != (void *)1)
  {

    return (void *)swift_bridgeObjectRelease(a6);
  }
  return result;
}

uint64_t sub_1003396C8(char **a1)
{
  char *v2;
  uint64_t v3;
  uint64_t result;
  _QWORD v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v2 = sub_100273DD4((uint64_t)v2);
  v3 = *((_QWORD *)v2 + 2);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_100339730(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_100339730(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  Swift::Int v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  Swift::Int v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  Swift::Int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  Swift::Int v17;
  Swift::Int v18;
  char v19;
  Swift::Int v20;
  _BYTE *v21;
  unsigned int v22;
  Swift::Int v23;
  _BYTE *v24;
  unsigned int v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  char *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  BOOL v41;
  unint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  BOOL v51;
  uint64_t v52;
  char v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t i;
  unsigned int v79;
  uint64_t v80;
  unsigned int v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  unint64_t v89;
  _QWORD *v90;
  _QWORD *v91;
  uint64_t v92;
  Swift::Int v93;
  uint64_t v94;
  unsigned __int8 *v95;

  v2 = a1;
  v3 = a1[1];
  result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_138;
    if ((unint64_t)v3 >= 2)
    {
      v76 = 0;
      v77 = *v2;
      for (i = 1; i != v3; ++i)
      {
        v79 = *(unsigned __int8 *)(v77 + i);
        v80 = v76;
        do
        {
          v81 = *(unsigned __int8 *)(v77 + v80);
          if (v79 >= v81)
            break;
          if (!v77)
            goto LABEL_142;
          *(_BYTE *)(v77 + v80 + 1) = v81;
          *(_BYTE *)(v77 + v80--) = v79;
        }
        while (v80 != -1);
        ++v76;
      }
    }
  }
  else
  {
    if (v3 >= 0)
      v5 = v3;
    else
      v5 = v3 + 1;
    if (v3 < -1)
      goto LABEL_137;
    v92 = result;
    v93 = v3;
    if (v3 > 1)
    {
      v6 = v5 >> 1;
      result = static Array._allocateBufferUninitialized(minimumCapacity:)(v5 >> 1, &type metadata for SymbolButton.Intent);
      *(_QWORD *)(result + 16) = v6;
      v3 = v93;
      v91 = (_QWORD *)result;
      v95 = (unsigned __int8 *)(result + 32);
LABEL_13:
      v8 = 0;
      v90 = v2;
      v9 = *v2;
      v10 = (char *)_swiftEmptyArrayStorage;
      v94 = *v2;
      while (1)
      {
        v12 = v8++;
        if (v8 < v3)
        {
          v13 = *(unsigned __int8 *)(v9 + v8);
          v14 = *(unsigned __int8 *)(v9 + v12);
          v8 = v12 + 2;
          if (v12 + 2 < v3)
          {
            v15 = v13;
            while (1)
            {
              v16 = *(unsigned __int8 *)(v9 + v8);
              if (v13 < v14 == v16 >= v15)
                break;
              ++v8;
              v15 = v16;
              if (v3 == v8)
              {
                v8 = v3;
                break;
              }
            }
          }
          if (v13 < v14)
          {
            if (v8 < v12)
              goto LABEL_139;
            if (v12 < v8)
            {
              v17 = v8 - 1;
              v18 = v12;
              do
              {
                if (v18 != v17)
                {
                  if (!v9)
                    goto LABEL_145;
                  v19 = *(_BYTE *)(v9 + v18);
                  *(_BYTE *)(v9 + v18) = *(_BYTE *)(v9 + v17);
                  *(_BYTE *)(v9 + v17) = v19;
                }
                v58 = ++v18 < v17--;
              }
              while (v58);
            }
          }
        }
        if (v8 < v3)
        {
          if (__OFSUB__(v8, v12))
            goto LABEL_136;
          if (v8 - v12 < v92)
          {
            v20 = v12 + v92;
            if (__OFADD__(v12, v92))
              goto LABEL_140;
            if (v20 >= v3)
              v20 = v3;
            if (v20 < v12)
            {
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
              return result;
            }
            if (v8 != v20)
            {
              v21 = (_BYTE *)(v9 + v8);
              do
              {
                v22 = *(unsigned __int8 *)(v9 + v8);
                v23 = v12;
                v24 = v21;
                do
                {
                  v25 = *(v24 - 1);
                  if (v22 >= v25)
                    break;
                  if (!v9)
                    goto LABEL_143;
                  *v24 = v25;
                  *--v24 = v22;
                  ++v23;
                }
                while (v8 != v23);
                ++v8;
                ++v21;
              }
              while (v8 != v20);
              v8 = v20;
            }
          }
        }
        if (v8 < v12)
          goto LABEL_131;
        result = swift_isUniquelyReferenced_nonNull_native(v10);
        if ((result & 1) == 0)
        {
          result = (uint64_t)sub_100273C4C(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
          v10 = (char *)result;
        }
        v27 = *((_QWORD *)v10 + 2);
        v26 = *((_QWORD *)v10 + 3);
        v11 = v27 + 1;
        v9 = v94;
        if (v27 >= v26 >> 1)
        {
          result = (uint64_t)sub_100273C4C((char *)(v26 > 1), v27 + 1, 1, v10);
          v9 = v94;
          v10 = (char *)result;
        }
        *((_QWORD *)v10 + 2) = v11;
        v28 = v10 + 32;
        v29 = &v10[16 * v27 + 32];
        *(_QWORD *)v29 = v12;
        *((_QWORD *)v29 + 1) = v8;
        if (v27)
        {
          while (1)
          {
            v30 = v11 - 1;
            if (v11 >= 4)
            {
              v35 = &v28[2 * v11];
              v36 = *(v35 - 8);
              v37 = *(v35 - 7);
              v41 = __OFSUB__(v37, v36);
              v38 = v37 - v36;
              if (v41)
                goto LABEL_120;
              v40 = *(v35 - 6);
              v39 = *(v35 - 5);
              v41 = __OFSUB__(v39, v40);
              v33 = v39 - v40;
              v34 = v41;
              if (v41)
                goto LABEL_121;
              v42 = v11 - 2;
              v43 = &v28[2 * v11 - 4];
              v45 = *v43;
              v44 = v43[1];
              v41 = __OFSUB__(v44, v45);
              v46 = v44 - v45;
              if (v41)
                goto LABEL_122;
              v41 = __OFADD__(v33, v46);
              v47 = v33 + v46;
              if (v41)
                goto LABEL_124;
              if (v47 >= v38)
              {
                v65 = &v28[2 * v30];
                v67 = *v65;
                v66 = v65[1];
                v41 = __OFSUB__(v66, v67);
                v68 = v66 - v67;
                if (v41)
                  goto LABEL_130;
                v58 = v33 < v68;
                goto LABEL_84;
              }
            }
            else
            {
              if (v11 != 3)
              {
                v59 = *((_QWORD *)v10 + 4);
                v60 = *((_QWORD *)v10 + 5);
                v41 = __OFSUB__(v60, v59);
                v52 = v60 - v59;
                v53 = v41;
                goto LABEL_78;
              }
              v32 = *((_QWORD *)v10 + 4);
              v31 = *((_QWORD *)v10 + 5);
              v41 = __OFSUB__(v31, v32);
              v33 = v31 - v32;
              v34 = v41;
            }
            if ((v34 & 1) != 0)
              goto LABEL_123;
            v42 = v11 - 2;
            v48 = &v28[2 * v11 - 4];
            v50 = *v48;
            v49 = v48[1];
            v51 = __OFSUB__(v49, v50);
            v52 = v49 - v50;
            v53 = v51;
            if (v51)
              goto LABEL_125;
            v54 = &v28[2 * v30];
            v56 = *v54;
            v55 = v54[1];
            v41 = __OFSUB__(v55, v56);
            v57 = v55 - v56;
            if (v41)
              goto LABEL_127;
            if (__OFADD__(v52, v57))
              goto LABEL_129;
            if (v52 + v57 >= v33)
            {
              v58 = v33 < v57;
LABEL_84:
              if (v58)
                v30 = v42;
              goto LABEL_86;
            }
LABEL_78:
            if ((v53 & 1) != 0)
              goto LABEL_126;
            v61 = &v28[2 * v30];
            v63 = *v61;
            v62 = v61[1];
            v41 = __OFSUB__(v62, v63);
            v64 = v62 - v63;
            if (v41)
              goto LABEL_128;
            if (v64 < v52)
              goto LABEL_15;
LABEL_86:
            v69 = v30 - 1;
            if (v30 - 1 >= v11)
            {
              __break(1u);
LABEL_117:
              __break(1u);
LABEL_118:
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
              goto LABEL_141;
            }
            if (!v9)
              goto LABEL_144;
            v70 = &v28[2 * v69];
            v71 = *v70;
            v72 = v28;
            v73 = &v28[2 * v30];
            v74 = v73[1];
            result = sub_1002156F4((unsigned __int8 *)(v9 + *v70), (unsigned __int8 *)(v9 + *v73), v9 + v74, v95);
            if (v1)
              goto LABEL_114;
            if (v74 < v71)
              goto LABEL_117;
            if (v30 > *((_QWORD *)v10 + 2))
              goto LABEL_118;
            *v70 = v71;
            v72[2 * v69 + 1] = v74;
            v75 = *((_QWORD *)v10 + 2);
            if (v30 >= v75)
              goto LABEL_119;
            v11 = v75 - 1;
            result = (uint64_t)memmove(v73, v73 + 2, 16 * (v75 - 1 - v30));
            v28 = v72;
            *((_QWORD *)v10 + 2) = v75 - 1;
            v9 = v94;
            if (v75 <= 2)
              goto LABEL_15;
          }
        }
        v11 = 1;
LABEL_15:
        v3 = v93;
        if (v8 >= v93)
        {
          v2 = v90;
          v7 = v91;
          goto LABEL_103;
        }
      }
    }
    v7 = _swiftEmptyArrayStorage;
    v95 = (unsigned __int8 *)&_swiftEmptyArrayStorage[4];
    if (v3 == 1)
    {
      v91 = _swiftEmptyArrayStorage;
      goto LABEL_13;
    }
    v11 = _swiftEmptyArrayStorage[2];
    v10 = (char *)_swiftEmptyArrayStorage;
LABEL_103:
    v91 = v7;
    if (v11 >= 2)
    {
      v82 = *v2;
      do
      {
        v83 = v11 - 2;
        if (v11 < 2)
          goto LABEL_132;
        if (!v82)
          goto LABEL_146;
        v84 = (uint64_t)v10;
        v85 = v10 + 32;
        v86 = *(_QWORD *)&v10[16 * v83 + 32];
        v87 = *(_QWORD *)&v10[16 * v11 + 24];
        result = sub_1002156F4((unsigned __int8 *)(v82 + v86), (unsigned __int8 *)(v82 + v85[2 * v11 - 2]), v82 + v87, v95);
        if (v1)
          break;
        if (v87 < v86)
          goto LABEL_133;
        result = swift_isUniquelyReferenced_nonNull_native(v84);
        if ((result & 1) == 0)
        {
          result = (uint64_t)sub_100273D44(v84);
          v84 = result;
        }
        if (v83 >= *(_QWORD *)(v84 + 16))
          goto LABEL_134;
        v88 = (_QWORD *)(v84 + 32 + 16 * v83);
        *v88 = v86;
        v88[1] = v87;
        v89 = *(_QWORD *)(v84 + 16);
        if (v11 > v89)
          goto LABEL_135;
        result = (uint64_t)memmove((void *)(v84 + 32 + 16 * (v11 - 1)), (const void *)(v84 + 32 + 16 * v11), 16 * (v89 - v11));
        v10 = (char *)v84;
        *(_QWORD *)(v84 + 16) = v89 - 1;
        v11 = v89 - 1;
      }
      while (v89 > 2);
    }
LABEL_114:
    swift_bridgeObjectRelease();
    v91[2] = 0;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100339D64@<X0>(_BYTE *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_100339DF8();
  result = EnvironmentValues.subscript.getter(&type metadata for PlayIntentButtonMaterialKey, &type metadata for PlayIntentButtonMaterialKey, v2);
  *a1 = v4;
  return result;
}

uint64_t sub_100339DB0(char *a1)
{
  unint64_t v1;
  char v3;

  v3 = *a1;
  v1 = sub_100339DF8();
  return EnvironmentValues.subscript.setter(&v3, &type metadata for PlayIntentButtonMaterialKey, &type metadata for PlayIntentButtonMaterialKey, v1);
}

unint64_t sub_100339DF8()
{
  unint64_t result;

  result = qword_1004A06C8;
  if (!qword_1004A06C8)
  {
    result = swift_getWitnessTable(&unk_10039F5F0, &type metadata for PlayIntentButtonMaterialKey);
    atomic_store(result, (unint64_t *)&qword_1004A06C8);
  }
  return result;
}

uint64_t sub_100339E48()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
    swift_release(*(_QWORD *)(v0 + 32));
  sub_1002D0564(*(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
  return swift_deallocObject(v0, 49, 7);
}

uint64_t sub_100339E80()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);
  uint64_t result;

  v1 = *(uint64_t (**)(_QWORD))(v0 + 24);
  if (v1)
    return v1(*(unsigned __int8 *)(v0 + 16));
  return result;
}

uint64_t sub_100339EB0(uint64_t a1, double *a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, double a7)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  double Width;
  double v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  double v34;
  double v35;
  void (*v36)(_QWORD *, _QWORD);
  char *v37;
  void (*v38)(char *, uint64_t, uint64_t, uint64_t);
  char *v39;
  double v40;
  char *v41;
  CGFloat Height;
  double v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  CGFloat v49;
  uint64_t v50;
  double v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v56;
  void (*v57)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  double *v64;
  void (*v65)(char *, uint64_t, uint64_t);
  char *v66;
  uint64_t v67;
  _QWORD v68[4];
  _QWORD v69[2];
  CGRect v70;
  CGRect v71;

  v14 = type metadata accessor for ViewDimensions(0);
  v62 = *(_QWORD *)(v14 - 8);
  v63 = v14;
  __chkstk_darwin();
  v61 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for LayoutSubview(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin();
  v60 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_1004A0728);
  __chkstk_darwin();
  v20 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for LayoutSubviews(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin();
  v24 = (char *)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_100005574(&qword_1004A0730);
  __chkstk_darwin();
  v27 = (char *)&v56 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70.origin.x = a3;
  v70.origin.y = a4;
  v70.size.width = a5;
  v70.size.height = a6;
  Width = CGRectGetWidth(v70);
  v64 = a2;
  v29 = a2[1];
  v30 = sub_100006924(&qword_1004A0738, (uint64_t (*)(uint64_t))&type metadata accessor for LayoutSubviews, (uint64_t)&protocol conformance descriptor for LayoutSubviews);
  dispatch thunk of Collection.startIndex.getter(v21);
  dispatch thunk of Collection.endIndex.getter(v69, v21, v30);
  v57 = (void (*)(char *, uint64_t, uint64_t, uint64_t))dispatch thunk of Collection.distance(from:to:)(v68, v69, v21, v30);
  v67 = v22;
  v65 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
  v65(v24, a1, v21);
  v31 = sub_100006924(&qword_1004A0740, (uint64_t (*)(uint64_t))&type metadata accessor for LayoutSubviews, (uint64_t)&protocol conformance descriptor for LayoutSubviews);
  v66 = v24;
  dispatch thunk of Sequence.makeIterator()(v21, v31);
  v32 = &v27[*(int *)(v25 + 36)];
  v33 = *(_QWORD *)v32;
  dispatch thunk of Collection.endIndex.getter(v68, v21, v30);
  if (v33 == v68[0])
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v20, 1, 1, v16);
  }
  else
  {
    v34 = (Width - v29) / (double)(uint64_t)v57;
    v35 = a3;
    v59 = v30;
    v58 = v21;
    while (1)
    {
      v36 = (void (*)(_QWORD *, _QWORD))dispatch thunk of Collection.subscript.read(v68, v32, v21, v30);
      (*(void (**)(char *))(v17 + 16))(v20);
      v36(v68, 0);
      v37 = v66;
      v65(v66, (uint64_t)v27, v21);
      dispatch thunk of Collection.formIndex(after:)(v32, v21, v30);
      (*(void (**)(char *, uint64_t))(v67 + 8))(v37, v21);
      v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
      v38(v20, 0, 1, v16);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v20, 1, v16) == 1)
        break;
      v57 = v38;
      v39 = v60;
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v60, v20, v16);
      v40 = v34 + *v64;
      v71.origin.x = a3;
      v71.origin.y = a4;
      v71.size.width = a5;
      v71.size.height = a6;
      v41 = v27;
      Height = CGRectGetHeight(v71);
      v43 = static UnitPoint.topLeading.getter();
      LOBYTE(v68[0]) = 0;
      LOBYTE(v69[0]) = 0;
      LayoutSubview.place(at:anchor:proposal:)(*(_QWORD *)&v40, 0, *(_QWORD *)&Height, 0, v35, a4, v43, v44);
      LOBYTE(v68[0]) = 0;
      LOBYTE(v69[0]) = 0;
      v45 = v17;
      v46 = v16;
      v47 = v20;
      v48 = v61;
      v49 = Height;
      v27 = v41;
      v21 = v58;
      v50 = LayoutSubview.dimensions(in:)(*(_QWORD *)&v40, 0, *(_QWORD *)&v49, 0);
      v51 = ViewDimensions.width.getter(v50);
      v52 = v48;
      v20 = v47;
      v16 = v46;
      v17 = v45;
      (*(void (**)(char *, uint64_t))(v62 + 8))(v52, v63);
      v35 = v35 + v51 + a7;
      v53 = v39;
      v30 = v59;
      (*(void (**)(char *, uint64_t))(v45 + 8))(v53, v16);
      v54 = *(_QWORD *)v32;
      dispatch thunk of Collection.endIndex.getter(v68, v21, v30);
      if (v54 == v68[0])
      {
        v57(v20, 1, 1, v16);
        return sub_100008758((uint64_t)v27, &qword_1004A0730);
      }
    }
  }
  return sub_100008758((uint64_t)v27, &qword_1004A0730);
}

void sub_10033A370(id *a1, id a2, double *a3, uint64_t a4, uint64_t a5, uint64_t a6, BOOL *a7, double a8, double a9, double a10, double a11, double a12, double a13, double a14)
{
  id v25;
  id v26;
  id v27;
  double v28;
  double v29;
  double v30;
  double v31;
  id v32;
  double v33;
  double v34;
  uint64_t v35;
  double v36;
  BOOL v37;
  double v38;
  double v39;
  uint64_t v40;
  double v41;
  CGRect v44;
  CGRect v45;
  CGRect v46;

  v25 = *a1;
  v26 = objc_msgSend(*a1, "superview");
  if (!v26 || (v27 = v26, v26, v27 != a2))
    objc_msgSend(a2, "addSubview:", v25);
  v28 = *a3;
  v29 = a3[1];
  v30 = a3[3];
  if ((*(_BYTE *)(a4 + 8) & 1) != 0)
  {
    v41 = a12;
    v31 = a9;
    v32 = objc_msgSend(v25, "intrinsicContentSize");
    v34 = v33;
    if ((unint64_t)a5 >> 62)
    {
      if (a5 < 0)
        v40 = a5;
      else
        v40 = a5 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v35 = _CocoaArrayWrapper.endIndex.getter(v40);
      v32 = (id)swift_bridgeObjectRelease(a5);
    }
    else
    {
      v35 = *(_QWORD *)((a5 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v36 = v34 - CGFloat.ceilingValue(scale:)(v32, v31, a8 / (double)v35);
    a12 = v41;
  }
  else
  {
    v36 = *(double *)a4;
  }
  CGRect.applyingLayoutDirection(_:inBounds:)(a6, a10, a11, a12, a13, v28, v29, v36, v30);
  objc_msgSend(v25, "setFrame:");
  v44.origin.x = v28;
  v44.origin.y = v29;
  v44.size.width = v36;
  v44.size.height = v30;
  a3[2] = a3[2] - (CGRectGetWidth(v44) + a14);
  v45.origin.x = v28;
  v45.origin.y = v29;
  v45.size.width = v36;
  v45.size.height = v30;
  *a3 = *a3 + CGRectGetWidth(v45) + a14;
  if (*a7)
  {
    v37 = 1;
  }
  else
  {
    objc_msgSend(v25, "intrinsicContentSize");
    v39 = v38;
    v46.origin.x = v28;
    v46.origin.y = v29;
    v46.size.width = v36;
    v46.size.height = v30;
    v37 = CGRectGetWidth(v46) < v39;
  }
  *a7 = v37;
}

void _s11MusicCoreUI22PlayIntentLayoutHelperV6layout_2in4rect13configurationySayAA12SymbolButtonCG_So6UIViewCSo6CGRectVSgAC13ConfigurationVtFZ_0(uint64_t a1, void *a2, uint64_t a3, int a4, double a5)
{
  uint64_t v6;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t i;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  id v27;
  double v28;
  double v29;
  id v30;
  double v31;
  double v32;
  double v33;
  double v34;
  uint64_t v35;
  _BOOL4 v36;
  uint64_t v37;
  double v38;
  double v39;
  CGFloat v40;
  CGFloat height;
  CGFloat width;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  double v46;
  double v47;
  char *v48;
  void *v49;
  uint64_t v50;
  id v51;
  double v52;
  double v53;
  uint64_t v54;
  double v55;
  char v56;
  int v57;
  double v58;
  void *v59;
  uint64_t v60;
  double v61;
  int v62;
  CGFloat y;
  CGFloat v64;
  uint64_t v65;
  CGFloat v66;
  uint64_t v67;
  CGFloat v68;
  double v69;
  double v70;
  double v71;
  CGFloat v72;
  CGFloat v73;
  CGFloat v74;
  CGFloat v75;
  CGFloat v76;
  double v77;
  double v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  void *v83;
  uint64_t v84;
  char *v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD v90[2];
  uint64_t v91;
  uint64_t v92;
  void *v93;
  int v94;
  CGSize size;
  CGFloat v96;
  CGFloat x;
  double v98;
  id v99[4];
  BOOL v100;
  double v101;
  char v102;
  char v103[24];
  CGRect v104;
  _QWORD v105[5];
  _QWORD *v106;
  char v107;
  CGRect v108;
  CGRect v109;

  v94 = a4;
  v6 = a3;
  sub_1000149A8(a3, (uint64_t)v105, (uint64_t *)&unk_10049B0A0);
  x = *(double *)v105;
  v96 = *(double *)&v105[1];
  *(_QWORD *)&size.height = v105[2];
  *(_QWORD *)&size.width = v105[3];
  type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  v10 = (char *)v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = _swiftEmptyArrayStorage;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v88 = a1;
    else
      v88 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v11 = _CocoaArrayWrapper.endIndex.getter(v88);
  }
  else
  {
    v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  v98 = a5;
  if (v11)
  {
    if (v11 < 1)
    {
LABEL_77:
      __break(1u);
      goto LABEL_78;
    }
    v92 = v6;
    for (i = 0; i != v11; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
      else
        v15 = *(id *)(a1 + 8 * i + 32);
      v16 = v15;
      v17 = objc_msgSend(v15, "isHidden");
      if ((v17 & 1) != 0)
      {

      }
      else
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v17);
        v13 = v106[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v13);
        v14 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v16);
        specialized ContiguousArray._endMutation()(v14);
      }
    }
    swift_bridgeObjectRelease();
    v18 = (uint64_t)v106;
    v6 = v92;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = (uint64_t)_swiftEmptyArrayStorage;
  }
  objc_msgSend(a2, "bounds");
  v20 = v19;
  v22 = v21;
  v24 = v23;
  v26 = v25;
  v27 = objc_msgSend(a2, "traitCollection");
  objc_msgSend(v27, "displayScale");
  v29 = v28;

  v30 = objc_msgSend(a2, "effectiveUserInterfaceLayoutDirection");
  objc_msgSend(a2, "layoutMargins");
  v32 = v31;
  v34 = v33;
  v90[1] = v35;
  v36 = v18 < 0 || (v18 & 0x4000000000000000) != 0;
  if (!v36)
  {
    v37 = *(_QWORD *)(v18 + 16);
    *(_QWORD *)&v38 = v37 - 1;
    if (!__OFSUB__(v37, 1))
      goto LABEL_20;
    goto LABEL_76;
  }
  v89 = swift_bridgeObjectRetain();
  v37 = _CocoaArrayWrapper.endIndex.getter(v89);
  swift_release(v18);
  *(_QWORD *)&v38 = v37 - 1;
  if (__OFSUB__(v37, 1))
  {
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
LABEL_20:
  sub_1000149A8(v6, (uint64_t)&v106, (uint64_t *)&unk_10049B0A0);
  v39 = x;
  v40 = v96;
  height = size.height;
  width = size.width;
  if ((v107 & 1) != 0)
    v39 = sub_10019431C(v20, v22, v24, v26, v32, v34);
  x = v38;
  v104.origin.x = v39;
  v104.origin.y = v40;
  v104.size.width = height;
  v104.size.height = width;
  if (v36)
  {
    swift_retain(v18);
    v44 = _CocoaArrayWrapper.endIndex.getter(v43);
  }
  else
  {
    v44 = *(_QWORD *)(v18 + 16);
    swift_retain(v18);
  }
  v93 = a2;
  v91 = (uint64_t)v30;
  v92 = v37;
  if (v44)
  {
    if (v44 >= 1)
    {
      v45 = 0;
      v46 = 0.0;
      v47 = 0.0;
      do
      {
        if ((v18 & 0xC000000000000001) != 0)
          v48 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v45, v18);
        else
          v48 = (char *)*(id *)(v18 + 8 * v45 + 32);
        v49 = v48;
        v50 = (uint64_t)&v48[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration];
        swift_beginAccess(&v48[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration], v103, 0, 0);
        sub_10033963C(v50, (uint64_t)v10);
        v10[184] = 0;
        SymbolButton.setConfiguration(_:animation:updates:)((uint64_t)v10, 0, 0, 0, 1, (uint64_t)_swiftEmptyArrayStorage);
        sub_100339600((uint64_t)v10);
        v51 = objc_msgSend(v49, "intrinsicContentSize");
        v53 = v52;
        v46 = v46 + CGFloat.ceilingValue(scale:)(v51, v29, v52);
        if (v53 > v47)
          v55 = v53;
        else
          v55 = v47;
        ++v45;
        v47 = CGFloat.ceilingValue(scale:)(v54, v29, v55);

      }
      while (v44 != v45);
      goto LABEL_36;
    }
LABEL_78:
    __break(1u);
    __break(1u);
    return;
  }
  v46 = 0.0;
  v47 = 0.0;
LABEL_36:
  v56 = v94;
  v57 = BYTE1(v94);
  v58 = (double)(*(_QWORD *)&x & ~(*(uint64_t *)&x >> 63)) * v98;
  swift_release(v18);
  if (v57)
  {
    v59 = v93;
    v60 = v92;
    if (v57 == 1)
    {
      v101 = v47;
      v102 = 0;
      v61 = v58 + v47 * (double)v92;
    }
    else
    {
      x = v104.origin.x;
      y = v104.origin.y;
      v96 = v104.size.width;
      size.height = v104.size.height;
      v64 = CGRectGetWidth(v104);
      v47 = CGFloat.ceilingValue(scale:)(v65, v29, (v64 - v58) / (double)v60);
      v101 = v47;
      v102 = 0;
      v108.origin.x = x;
      v108.origin.y = y;
      v108.size.width = v96;
      v108.size.height = size.height;
      v61 = CGRectGetWidth(v108);
    }
    v62 = 1;
  }
  else
  {
    v62 = 0;
    v101 = 0.0;
    v102 = 1;
    v61 = v58 + v46;
    v47 = 0.0;
    v59 = v93;
    v60 = v92;
  }
  v66 = v104.origin.y;
  v96 = v104.origin.x;
  size = v104.size;
  v68 = CGRectGetWidth(v104);
  x = v61;
  v69 = v61 - v68;
  if (v69 < 0.0)
    v70 = 0.0;
  else
    v70 = v69;
  if (v62 && v70 > 0.0)
  {
    v101 = v47 - CGFloat.ceilingValue(scale:)(v67, v29, v70 / (double)v60);
    v102 = 0;
    v109.origin.x = v96;
    v109.origin.y = v66;
    v109.size.width = size.width;
    v109.size.height = size.height;
    x = CGRectGetWidth(v109);
  }
  v71 = v98;
  if (v57 != 2)
  {
    if (v56)
    {
      v72 = v96;
      v73 = v66;
      v74 = size.width;
      v75 = size.height;
      if (v56 == 1)
      {
        v76 = CGRectGetWidth(*(CGRect *)&v72);
        v77 = CGFloat.floorValue(scale:)(v29, (v76 - x) * 0.5);
        v78 = v96 + v77;
      }
      else
      {
        v78 = CGRectGetMaxX(*(CGRect *)&v72) - x;
      }
      v104.origin.x = v78;
    }
    v104.size.width = x;
  }
  v100 = 0;
  if (v44)
  {
    v79 = v18 & 0xC000000000000001;
    swift_retain(v18);
    v80 = 0;
    v81 = v91;
    do
    {
      if (v79)
        v82 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v80, v18);
      else
        v82 = *(id *)(v18 + 8 * v80 + 32);
      v83 = v82;
      ++v80;
      v99[0] = v82;
      sub_10033A370(v99, v59, &v104.origin.x, (uint64_t)&v101, v18, v81, &v100, v70, v29, v20, v22, v24, v26, v71);

    }
    while (v44 != v80);
    swift_release(v18);
    if (v100 && v60 > 1)
    {
      swift_retain(v18);
      v84 = 0;
      do
      {
        if (v79)
          v85 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v84, v18);
        else
          v85 = (char *)*(id *)(v18 + 8 * v84 + 32);
        v86 = v85;
        ++v84;
        v87 = (uint64_t)&v85[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration];
        swift_beginAccess(&v85[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration], v99, 0, 0);
        sub_10033963C(v87, (uint64_t)v10);
        v10[184] = 1;
        SymbolButton.setConfiguration(_:animation:updates:)((uint64_t)v10, 0, 0, 0, 1, (uint64_t)_swiftEmptyArrayStorage);
        sub_100339600((uint64_t)v10);

      }
      while (v44 != v84);
      swift_release(v18);
    }
  }
  swift_release(v18);
}

unint64_t sub_10033AE0C()
{
  unint64_t result;

  result = qword_1004A06D0;
  if (!qword_1004A06D0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SymbolButton.Intent, &type metadata for SymbolButton.Intent);
    atomic_store(result, (unint64_t *)&qword_1004A06D0);
  }
  return result;
}

unint64_t sub_10033AE54()
{
  unint64_t result;

  result = qword_1004A06D8;
  if (!qword_1004A06D8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SymbolButton.MaterialColor, &type metadata for SymbolButton.MaterialColor);
    atomic_store(result, (unint64_t *)&qword_1004A06D8);
  }
  return result;
}

uint64_t sub_10033AE98(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of PlayIntentButtonStack.body>>, 1);
}

unint64_t sub_10033AEAC()
{
  unint64_t result;

  result = qword_1004A06E0;
  if (!qword_1004A06E0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PlayIntentButtonWrapper, &type metadata for PlayIntentButtonWrapper);
    atomic_store(result, (unint64_t *)&qword_1004A06E0);
  }
  return result;
}

unint64_t sub_10033AEF4()
{
  unint64_t result;

  result = qword_1004A06E8;
  if (!qword_1004A06E8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PlayIntentLayoutHelper.Alignment, &type metadata for PlayIntentLayoutHelper.Alignment);
    atomic_store(result, (unint64_t *)&qword_1004A06E8);
  }
  return result;
}

unint64_t sub_10033AF3C()
{
  unint64_t result;

  result = qword_1004A06F0;
  if (!qword_1004A06F0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PlayIntentLayoutHelper.Distribution, &type metadata for PlayIntentLayoutHelper.Distribution);
    atomic_store(result, (unint64_t *)&qword_1004A06F0);
  }
  return result;
}

ValueMetadata *type metadata accessor for SymbolButton.Intent()
{
  return &type metadata for SymbolButton.Intent;
}

uint64_t _s13MaterialColorOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10033AFE0 + 4 * byte_10039F0A5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10033B014 + 4 * asc_10039F0A0[v4]))();
}

uint64_t sub_10033B014(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10033B01C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10033B024);
  return result;
}

uint64_t sub_10033B030(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10033B038);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10033B03C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10033B044(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SymbolButton.MaterialColor()
{
  return &type metadata for SymbolButton.MaterialColor;
}

double destroy for PlayIntentButtonStack(_QWORD *a1)
{
  double result;

  swift_bridgeObjectRelease(*a1);
  *(_QWORD *)&result = swift_release(a1[2]).n128_u64[0];
  return result;
}

uint64_t _s11MusicCoreUI21PlayIntentButtonStackVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  swift_retain(v3);
  return a1;
}

uint64_t *assignWithCopy for PlayIntentButtonStack(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  v6 = a2[1];
  v5 = a2[2];
  v7 = a1[2];
  a1[1] = v6;
  a1[2] = v5;
  swift_retain(v5);
  swift_release(v7);
  return a1;
}

_QWORD *assignWithTake for PlayIntentButtonStack(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease(*a1);
  v4 = *(_QWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v5 = a1[2];
  a1[2] = v4;
  swift_release(v5);
  return a1;
}

ValueMetadata *type metadata accessor for PlayIntentButtonStack()
{
  return &type metadata for PlayIntentButtonStack;
}

double destroy for PlayIntentButtonWrapper(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 8))
    swift_release(*(_QWORD *)(a1 + 16));
  return sub_1002D0564(*(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t initializeWithCopy for PlayIntentButtonWrapper(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *(_WORD *)a1 = *(_WORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4)
  {
    v5 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 8) = v4;
    *(_QWORD *)(a1 + 16) = v5;
    swift_retain(v5);
  }
  else
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  }
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_100301C50(v6, v7);
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for PlayIntentButtonWrapper(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v4 = (_OWORD *)(a1 + 8);
  v6 = (_OWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 8);
  if (!*(_QWORD *)(a1 + 8))
  {
    if (v5)
    {
      v9 = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 8) = v5;
      *(_QWORD *)(a1 + 16) = v9;
      swift_retain(v9);
      goto LABEL_8;
    }
LABEL_7:
    *v4 = *v6;
    goto LABEL_8;
  }
  if (!v5)
  {
    swift_release(*(_QWORD *)(a1 + 16));
    goto LABEL_7;
  }
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v7;
  swift_retain(v7);
  swift_release(v8);
LABEL_8:
  v10 = *(_QWORD *)(a2 + 24);
  v11 = *(_BYTE *)(a2 + 32);
  sub_100301C50(v10, v11);
  v12 = *(_QWORD *)(a1 + 24);
  v13 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = v10;
  *(_BYTE *)(a1 + 32) = v11;
  sub_1002D0564(v12, v13);
  return a1;
}

uint64_t assignWithTake for PlayIntentButtonWrapper(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v4 = (_OWORD *)(a1 + 8);
  v6 = (_OWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 8);
  if (!*(_QWORD *)(a1 + 8))
  {
    if (v5)
    {
      v9 = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 8) = v5;
      *(_QWORD *)(a1 + 16) = v9;
      goto LABEL_8;
    }
LABEL_7:
    *v4 = *v6;
    goto LABEL_8;
  }
  if (!v5)
  {
    swift_release(*(_QWORD *)(a1 + 16));
    goto LABEL_7;
  }
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v7;
  swift_release(v8);
LABEL_8:
  v10 = *(_BYTE *)(a2 + 32);
  v11 = *(_QWORD *)(a1 + 24);
  v12 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = v10;
  sub_1002D0564(v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for PlayIntentButtonWrapper(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PlayIntentButtonWrapper(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PlayIntentButtonWrapper()
{
  return &type metadata for PlayIntentButtonWrapper;
}

uint64_t initializeWithCopy for PlayIntentLayoutHelper(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v5 = v3;
  v6 = v4;
  return a1;
}

uint64_t assignWithCopy for PlayIntentLayoutHelper(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for PlayIntentLayoutHelper(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

ValueMetadata *type metadata accessor for PlayIntentLayoutHelper()
{
  return &type metadata for PlayIntentLayoutHelper;
}

uint64_t getEnumTagSinglePayload for PlayIntentLayoutHelper.Configuration(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && a1[16])
    return (*(_DWORD *)a1 + 254);
  v3 = *a1;
  v4 = v3 >= 3;
  v5 = v3 - 3;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for PlayIntentLayoutHelper.Configuration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PlayIntentLayoutHelper.Configuration()
{
  return &type metadata for PlayIntentLayoutHelper.Configuration;
}

ValueMetadata *type metadata accessor for PlayIntentLayoutHelper.Alignment()
{
  return &type metadata for PlayIntentLayoutHelper.Alignment;
}

uint64_t _s6IntentOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_10033B63C + 4 * byte_10039F0AF[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_10033B670 + 4 * byte_10039F0AA[v4]))();
}

uint64_t sub_10033B670(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10033B678(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10033B680);
  return result;
}

uint64_t sub_10033B68C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10033B694);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_10033B698(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10033B6A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PlayIntentLayoutHelper.Distribution()
{
  return &type metadata for PlayIntentLayoutHelper.Distribution;
}

uint64_t sub_10033B6BC()
{
  return sub_10002FFB8(&qword_1004A06F8, &qword_1004A06B8, (uint64_t)&protocol conformance descriptor for ViewThatFits<A>);
}

uint64_t sub_10033B6E8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *a1;
  v2 = sub_100005600(&qword_1004A0700);
  v3 = type metadata accessor for ModifiedContent(255, v1, v2);
  sub_10002FFB8(&qword_1004A0708, &qword_1004A0700, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v3);
}

ValueMetadata *type metadata accessor for PlayIntentButtonMaterialKey()
{
  return &type metadata for PlayIntentButtonMaterialKey;
}

ValueMetadata *type metadata accessor for PlayIntentButtonStack.SmartHStack()
{
  return &type metadata for PlayIntentButtonStack.SmartHStack;
}

unint64_t sub_10033B78C()
{
  unint64_t result;

  result = qword_1004A0710;
  if (!qword_1004A0710)
  {
    result = swift_getWitnessTable(&unk_10039F528, &type metadata for PlayIntentButtonStack.SmartHStack);
    atomic_store(result, (unint64_t *)&qword_1004A0710);
  }
  return result;
}

unint64_t sub_10033B7D0()
{
  unint64_t result;

  result = qword_1004A0748;
  if (!qword_1004A0748)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PlayIntentButtonWrapper, &type metadata for PlayIntentButtonWrapper);
    atomic_store(result, (unint64_t *)&qword_1004A0748);
  }
  return result;
}

uint64_t sub_10033B814()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10033B840@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t KeyPath;

  v4 = *(_BYTE *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 32);
  v5 = *(_QWORD *)(v2 + 40);
  v7 = *a1;
  KeyPath = swift_getKeyPath(&unk_10039F0B8);
  *(_BYTE *)a2 = v7;
  *(_BYTE *)(a2 + 1) = v4;
  *(_QWORD *)(a2 + 8) = v6;
  *(_QWORD *)(a2 + 16) = v5;
  *(_QWORD *)(a2 + 24) = KeyPath;
  *(_BYTE *)(a2 + 32) = 0;
  return swift_retain(v5);
}

unint64_t sub_10033B89C()
{
  unint64_t result;

  result = qword_1004A0788;
  if (!qword_1004A0788)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SymbolButton.Intent, &type metadata for SymbolButton.Intent);
    atomic_store(result, (unint64_t *)&qword_1004A0788);
  }
  return result;
}

uint64_t sub_10033B8E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005574(&qword_1004A0768);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_10033B928()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004A0790;
  if (!qword_1004A0790)
  {
    v1 = sub_100005600(&qword_1004A0770);
    sub_10033B994();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1004A0790);
  }
  return result;
}

unint64_t sub_10033B994()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004A0798;
  if (!qword_1004A0798)
  {
    v1 = sub_100005600(&qword_1004A0768);
    sub_10002FFB8(&qword_1004A07A0, &qword_1004A07A8, (uint64_t)&protocol conformance descriptor for _LayoutRoot<A>);
    sub_10008FE98(&qword_1004A07B0, &qword_1004A0760, (void (*)(void))sub_10033AEAC, (uint64_t)&protocol conformance descriptor for <> ForEach<A, B, C>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _VariadicView.Tree<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1004A0798);
  }
  return result;
}

uint64_t sub_10033BA38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SymbolButton.Configuration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for PlayIntentButtonStack.SmartHStack.Cache()
{
  return &type metadata for PlayIntentButtonStack.SmartHStack.Cache;
}

uint64_t PlaylistCovers.CarouselItem.itemType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10033BA98(v1, a1);
}

uint64_t sub_10033BA98(uint64_t a1, uint64_t a2)
{
  _s12CarouselItemV16CarouselItemTypeOwcp(a2, a1);
  return a2;
}

uint64_t PlaylistCovers.CarouselItem.itemType.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_10033BAD4(a1, v1);
}

uint64_t sub_10033BAD4(uint64_t a1, uint64_t a2)
{
  _s12CarouselItemV16CarouselItemTypeOwta(a2, a1);
  return a2;
}

uint64_t PlaylistCovers.CarouselItem.pageIndicator.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100014A7C(v1 + 80, a1, &qword_10049D738);
}

uint64_t PlaylistCovers.CarouselItem.pageIndicator.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_10033BB34(a1, v1 + 80);
}

uint64_t sub_10033BB34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005574(&qword_10049D738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

__n128 PlaylistCovers.CarouselItem.init(itemType:pageIndicator:)@<Q0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __n128 result;
  __n128 v11;
  __int128 v12;
  _OWORD v13[5];
  _OWORD v14[2];
  uint64_t v15;

  sub_10033BC00(a2, (uint64_t)v14);
  v11 = (__n128)v14[1];
  v12 = v14[0];
  v5 = v15;
  sub_10033BC48(a1, v13);
  v6 = v13[1];
  v7 = v13[2];
  v8 = v13[3];
  v9 = v13[4];
  *(_OWORD *)a3 = v13[0];
  *(_OWORD *)(a3 + 16) = v6;
  *(_OWORD *)(a3 + 32) = v7;
  *(_OWORD *)(a3 + 48) = v8;
  *(_OWORD *)(a3 + 64) = v9;
  *(_OWORD *)(a3 + 80) = v12;
  result = v11;
  *(__n128 *)(a3 + 96) = v11;
  *(_QWORD *)(a3 + 112) = v5;
  return result;
}

uint64_t sub_10033BC00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005574(&qword_10049D738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_OWORD *sub_10033BC48(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;

  *a2 = *a1;
  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[4];
  a2[3] = a1[3];
  a2[4] = v4;
  a2[1] = v2;
  a2[2] = v3;
  return a2;
}

uint64_t static PlaylistCovers.CarouselItem.CarouselItemType.__derived_enum_equals(_:_:)(_OWORD *a1, _OWORD *a2)
{
  char v4;
  _OWORD v6[5];
  _OWORD v7[5];
  _OWORD v8[5];
  _OWORD v9[5];

  sub_10033BC48(a1, v8);
  if (*(_QWORD *)&v8[0])
  {
    v9[2] = v8[2];
    v9[3] = v8[3];
    v9[4] = v8[4];
    v9[0] = v8[0];
    v9[1] = v8[1];
    sub_10033BC48(a2, v6);
    if (*(_QWORD *)&v6[0])
    {
      v7[2] = v6[2];
      v7[3] = v6[3];
      v7[4] = v6[4];
      v7[0] = v6[0];
      v7[1] = v6[1];
      sub_1002951B0(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1002613B8);
      sub_1002951B0(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1002613B8);
      v4 = static PlaylistCovers.Cover.__derived_struct_equals(_:_:)(v9, v7);
      sub_1002951B0(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10033BD6C);
      sub_1002951B0(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10033BD6C);
    }
    else
    {
      v4 = 0;
    }
  }
  else
  {
    sub_10033BC48(a2, v9);
    v4 = *(_QWORD *)&v9[0] == 0;
  }
  return v4 & 1;
}

void *sub_10033BD6C(void *result, uint64_t a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  if (result)
  {

    sub_1001941B0(a2, a3, a4, a5, a6, a7, a8);
    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10033BDEC(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  char v24;
  void *v26;
  void *v27;
  uint64_t v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  _QWORD v35[10];
  _QWORD v36[11];

  v2 = *(void **)a1;
  v3 = *(void **)a2;
  if (*(_QWORD *)a1)
  {
    v4 = *(_QWORD *)(a1 + 8);
    v5 = *(void **)(a1 + 16);
    v6 = *(void **)(a1 + 24);
    v7 = *(void **)(a1 + 32);
    v8 = *(void **)(a1 + 40);
    v9 = *(void **)(a1 + 48);
    v10 = *(void **)(a1 + 56);
    v11 = *(_QWORD *)(a1 + 64);
    v12 = *(_QWORD *)(a1 + 72);
    v13 = *(_QWORD *)(a2 + 8);
    v14 = *(void **)(a2 + 16);
    v15 = *(void **)(a2 + 24);
    v16 = *(void **)(a2 + 32);
    v17 = *(void **)(a2 + 40);
    v18 = *(void **)(a2 + 48);
    v19 = *(void **)(a2 + 56);
    v20 = *(_QWORD *)(a2 + 64);
    v21 = *(_QWORD *)(a2 + 72);
    v35[0] = *(_QWORD *)a1;
    v35[1] = v4;
    v35[2] = v5;
    v35[3] = v6;
    v35[4] = v7;
    v35[5] = v8;
    v35[6] = v9;
    v35[7] = v10;
    v35[8] = v11;
    v35[9] = v12;
    if (v3)
    {
      v36[0] = v3;
      v36[1] = v13;
      v36[2] = v14;
      v36[3] = v15;
      v36[4] = v16;
      v36[5] = v17;
      v36[6] = v18;
      v36[7] = v19;
      v36[8] = v20;
      v36[9] = v21;
      v33 = v6;
      v34 = v5;
      v27 = v14;
      v31 = v8;
      v32 = v7;
      v26 = v16;
      v29 = v10;
      v30 = v9;
      v22 = v19;
      v28 = v4;
      v23 = v13;
      sub_1002613B8(v2, v4, v5, v6, v7, v8, v9, v10);
      sub_1002613B8(v3, v23, v14, v15, v26, v17, v18, v22);
      v24 = static PlaylistCovers.Cover.__derived_struct_equals(_:_:)(v35, v36);
      sub_10033BD6C(v3, v23, v27, v15, v26, v17, v18, v22);
      sub_10033BD6C(v2, v28, v34, v33, v32, v31, v30, v29);
    }
    else
    {
      v24 = 0;
    }
  }
  else
  {
    v24 = v3 == 0;
  }
  return v24 & 1;
}

void PlaylistCovers.CarouselItem.hash(into:)(uint64_t a1)
{
  _OWORD *v1;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  _OWORD v10[5];
  char v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  __int128 v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;

  sub_10033BC48(v1, v10);
  sub_10033BC48(v10, &v18);
  if ((_QWORD)v18)
  {
    v3 = v19;
    if (v19)
    {
      v5 = v23;
      v4 = v24;
      v7 = v21;
      v6 = v22;
      v8 = v20;
      v9 = *((_QWORD *)&v18 + 1);
      v11 = BYTE8(v18);
      v12 = v19;
      v13 = v20;
      v14 = v21;
      v15 = v22;
      v16 = v23;
      v17 = v24;
      Hasher._combine(_:)(1u);
      sub_1002951B0(v10, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1002613B8);
      sub_100194154(v9, v3, v8, v7, v6, v5, v4);
      PlaylistCovers.Cover.Representation.hash(into:)(a1);
      sub_1002951B0(v10, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10033BD6C);
      sub_1001941B0(v9, v3, v8, v7, v6, v5, v4);
    }
    else
    {
      Hasher._combine(_:)(0);
    }
  }
  else
  {
    String.hash(into:)(a1, 0x72656B636970, 0xE600000000000000);
  }
}

uint64_t static PlaylistCovers.CarouselItem.== infix(_:_:)(_OWORD *a1, _OWORD *a2)
{
  char v3;
  _OWORD v5[5];
  _OWORD v6[5];
  _OWORD v7[5];
  _OWORD v8[5];
  _OWORD v9[5];
  _OWORD v10[5];

  sub_10033BC48(a1, v6);
  sub_10033BC48(a2, v5);
  sub_10033BC48(v6, v9);
  if (*(_QWORD *)&v9[0])
  {
    v7[2] = v9[2];
    v7[3] = v9[3];
    v7[4] = v9[4];
    v7[0] = v9[0];
    v7[1] = v9[1];
    sub_10033BC48(v5, v10);
    if (*(_QWORD *)&v10[0])
    {
      v8[2] = v10[2];
      v8[3] = v10[3];
      v8[4] = v10[4];
      v8[0] = v10[0];
      v8[1] = v10[1];
      sub_1002951B0(v6, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1002613B8);
      sub_1002951B0(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1002613B8);
      v3 = static PlaylistCovers.Cover.__derived_struct_equals(_:_:)(v7, v8);
      sub_1002951B0(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10033BD6C);
      sub_1002951B0(v6, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10033BD6C);
    }
    else
    {
      v3 = 0;
    }
  }
  else
  {
    sub_10033BC48(v5, v10);
    v3 = *(_QWORD *)&v10[0] == 0;
  }
  return v3 & 1;
}

_QWORD *PlaylistCovers.CarouselItem.cover.getter@<X0>(_QWORD *a1@<X8>)
{
  _OWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *result;
  uint64_t v13;
  _OWORD v14[5];
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  sub_10033BC48(v1, v14);
  sub_10033BC48(v14, &v15);
  v3 = v15;
  if ((_QWORD)v15)
  {
    v4 = v16;
    v13 = *((_QWORD *)&v15 + 1);
    v5 = v17;
    v6 = v18;
    v7 = v19;
    v8 = v20;
    v9 = v21;
    v10 = v22;
    v11 = v23;
  }
  else
  {
    v13 = 0;
    v4 = 0;
    v5 = 0;
    v6 = 0;
    v7 = 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    v11 = 0;
  }
  result = sub_1002951B0(v14, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1002613B8);
  *a1 = v3;
  a1[1] = v13;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  a1[9] = v11;
  return result;
}

double static PlaylistCovers.CarouselItem.picker.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  double result;

  v2 = Image.init(systemName:)(0x662E6172656D6163, 0xEB000000006C6C69);
  v3 = static Font.caption2.getter();
  v4 = static Animation.spring(response:dampingFraction:blendDuration:)(0.5, 1.0, 0.0);
  v5 = ((uint64_t (*)(void))static Color.primary.getter)();
  v6 = Color.opacity(_:)(1.0);
  v7 = swift_release(v5);
  v8 = static Color.primary.getter(v7);
  v9 = Color.opacity(_:)(0.25);
  swift_release(v8);
  result = 0.0;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_QWORD *)(a1 + 80) = v2;
  *(_QWORD *)(a1 + 88) = v3;
  *(_QWORD *)(a1 + 96) = v4;
  *(_QWORD *)(a1 + 104) = v6;
  *(_QWORD *)(a1 + 112) = v9;
  return result;
}

double static PlaylistCovers.CarouselItem.tracksTiled(image:)@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  double result;
  _BYTE v23[16];
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;

  type metadata accessor for Locale(0);
  __chkstk_darwin();
  v5 = &v23[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for String.LocalizationValue(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = &v23[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  v11 = &v23[-v10];
  v12 = a1;
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000030, 0x80000001003BB260);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 16))(v9, v11, v6);
  if (qword_100498860 != -1)
    swift_once(&qword_100498860, sub_100232E30);
  v13 = qword_1004A2F90;
  static Locale.current.getter((id)qword_1004A2F90);
  v14 = String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, v13, v5, 0, 0, 256);
  v16 = v15;
  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v11, v6);
  PlaylistCovers.Cover.init(image:accessibilityLabel:)((uint64_t)v12, v14, v16, (uint64_t)&v24);
  v17 = v29;
  v18 = v25;
  v19 = v26;
  v20 = v27;
  v21 = v28;
  *(_QWORD *)a2 = v24;
  *(_OWORD *)(a2 + 8) = v18;
  *(_OWORD *)(a2 + 24) = v19;
  *(_OWORD *)(a2 + 40) = v20;
  *(_OWORD *)(a2 + 56) = v21;
  *(_QWORD *)(a2 + 72) = v17;
  result = 0.0;
  *(_OWORD *)(a2 + 80) = 0u;
  *(_OWORD *)(a2 + 96) = 0u;
  *(_QWORD *)(a2 + 112) = 0;
  return result;
}

Swift::Int PlaylistCovers.CarouselItem.hashValue.getter()
{
  _OWORD *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  _QWORD v9[9];
  _OWORD v10[5];
  char v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  __int128 v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;

  Hasher.init(_seed:)(v9);
  sub_10033BC48(v0, v10);
  sub_10033BC48(v10, &v18);
  if ((_QWORD)v18)
  {
    v1 = v19;
    if (v19)
    {
      v3 = v23;
      v2 = v24;
      v5 = v21;
      v4 = v22;
      v6 = v20;
      v7 = *((_QWORD *)&v18 + 1);
      v11 = BYTE8(v18);
      v12 = v19;
      v13 = v20;
      v14 = v21;
      v15 = v22;
      v16 = v23;
      v17 = v24;
      Hasher._combine(_:)(1u);
      sub_1002951B0(v10, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1002613B8);
      sub_100194154(v7, v1, v6, v5, v4, v3, v2);
      PlaylistCovers.Cover.Representation.hash(into:)((uint64_t)v9);
      sub_1002951B0(v10, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10033BD6C);
      sub_1001941B0(v7, v1, v6, v5, v4, v3, v2);
    }
    else
    {
      Hasher._combine(_:)(0);
    }
  }
  else
  {
    String.hash(into:)(v9, 0x72656B636970, 0xE600000000000000);
  }
  return Hasher._finalize()();
}

Swift::Int sub_10033C654()
{
  return PlaylistCovers.CarouselItem.hashValue.getter();
}

void sub_10033C6A4(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    v4 = *(void **)(v1 + 16);
    if (v4)
    {
      v5 = *(void **)(v1 + 24);
      v6 = *(void **)(v1 + 32);
      v7 = *(void **)(v1 + 40);
      v8 = *(void **)(v1 + 48);
      v9 = *(void **)(v1 + 56);
      v10 = *(_QWORD *)(v1 + 8);
      Hasher._combine(_:)(1u);
      sub_1002613B8(v3, v10, v4, v5, v6, v7, v8, v9);
      sub_100194154(v10, v4, v5, v6, v7, v8, v9);
      PlaylistCovers.Cover.Representation.hash(into:)(a1);
      sub_10033BD6C(v3, v10, v4, v5, v6, v7, v8, v9);
      sub_1001941B0(v10, v4, v5, v6, v7, v8, v9);
    }
    else
    {
      Hasher._combine(_:)(0);
    }
  }
  else
  {
    String.hash(into:)(a1, 0x72656B636970, 0xE600000000000000);
  }
}

Swift::Int sub_10033C838()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  _QWORD v10[9];
  char v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;

  v1 = *(void **)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(void **)(v0 + 16);
  v4 = *(void **)(v0 + 24);
  v5 = *(void **)(v0 + 32);
  v6 = *(void **)(v0 + 40);
  v7 = *(void **)(v0 + 48);
  v8 = *(void **)(v0 + 56);
  Hasher.init(_seed:)(v10);
  if (v1)
  {
    if (v3)
    {
      v11 = v2;
      v12 = v3;
      v13 = v4;
      v14 = v5;
      v15 = v6;
      v16 = v7;
      v17 = v8;
      Hasher._combine(_:)(1u);
      sub_1002613B8(v1, v2, v3, v4, v5, v6, v7, v8);
      sub_100194154(v2, v3, v4, v5, v6, v7, v8);
      PlaylistCovers.Cover.Representation.hash(into:)((uint64_t)v10);
      sub_10033BD6C(v1, v2, v3, v4, v5, v6, v7, v8);
      sub_1001941B0(v2, v3, v4, v5, v6, v7, v8);
    }
    else
    {
      Hasher._combine(_:)(0);
    }
  }
  else
  {
    String.hash(into:)(v10, 0x72656B636970, 0xE600000000000000);
  }
  return Hasher._finalize()();
}

uint64_t static PlaylistCovers.carouselItems(from:playlistTitle:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  return swift_task_switch(sub_10033C9B8, 0, 0);
}

uint64_t sub_10033C9B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  __int128 v7;

  v1 = *(_QWORD *)(v0 + 40);
  v7 = *(_OWORD *)(v0 + 24);
  v2 = sub_100005574(&qword_1004A07C0);
  v3 = swift_task_alloc(48);
  *(_QWORD *)(v0 + 48) = v3;
  *(_OWORD *)(v3 + 16) = v7;
  *(_QWORD *)(v3 + 32) = v1;
  v4 = sub_100005574(&qword_1004A07D8);
  v5 = (_QWORD *)swift_task_alloc(async function pointer to withTaskGroup<A, B>(of:returning:isolation:body:)[1]);
  *(_QWORD *)(v0 + 56) = v5;
  *v5 = v0;
  v5[1] = sub_10033CA88;
  return withTaskGroup<A, B>(of:returning:isolation:body:)(v0 + 16, v2, v4, 0, 0, &unk_1004A07D0, v3, v2);
}

uint64_t sub_10033CA88()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 56));
  swift_task_dealloc(v1);
  return swift_task_switch(sub_1001957F0, 0, 0);
}

uint64_t sub_10033CAE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v5[45] = a4;
  v5[46] = a5;
  v5[43] = a2;
  v5[44] = a3;
  v5[42] = a1;
  v6 = sub_100005574(&qword_1004A07E8);
  v5[47] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[48] = v7;
  v5[49] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (*(_QWORD *)(*(_QWORD *)(sub_100005574(&qword_10049AEC0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[50] = swift_task_alloc(v8);
  v5[51] = swift_task_alloc(v8);
  return swift_task_switch(sub_10033CB84, 0, 0);
}

uint64_t sub_10033CB84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _OWORD *v3;
  uint64_t v4;
  __int128 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t *v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t ObjectType;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;

  v1 = *(_QWORD *)(v0 + 352);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = (_OWORD *)(v0 + 216);
    v4 = *(_QWORD *)(v0 + 368);
    v5 = (__int128 *)(v1 + 32);
    v6 = type metadata accessor for TaskPriority(0);
    v7 = *(_QWORD *)(v6 - 8);
    v45 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
    v46 = v6;
    swift_bridgeObjectRetain();
    v43 = v4;
    v44 = v7;
    do
    {
      v47 = v2;
      v10 = *(_QWORD *)(v0 + 408);
      v11 = v4;
      v13 = *(_QWORD *)(v0 + 360);
      v12 = *(_QWORD *)(v0 + 368);
      v14 = *(uint64_t **)(v0 + 344);
      v16 = v5[1];
      v15 = v5[2];
      v17 = *v5;
      *(_QWORD *)(v0 + 264) = *((_QWORD *)v5 + 6);
      *(_OWORD *)(v0 + 232) = v16;
      *(_OWORD *)(v0 + 248) = v15;
      *v3 = v17;
      v45(v10, 1, 1, v46);
      v18 = swift_allocObject(&unk_100465118, 104, 7);
      *(_QWORD *)(v18 + 16) = 0;
      v19 = (uint64_t *)(v18 + 16);
      *(_QWORD *)(v18 + 24) = 0;
      v20 = *(_OWORD *)(v0 + 232);
      *(_OWORD *)(v18 + 32) = *v3;
      *(_OWORD *)(v18 + 48) = v20;
      *(_OWORD *)(v18 + 64) = *(_OWORD *)(v0 + 248);
      *(_QWORD *)(v18 + 80) = *(_QWORD *)(v0 + 264);
      *(_QWORD *)(v18 + 88) = v13;
      v4 = v11;
      *(_QWORD *)(v18 + 96) = v12;
      v21 = *v14;
      sub_1001908EC(v0 + 216);
      sub_1001908EC(v0 + 216);
      swift_bridgeObjectRetain();
      if ((swift_taskGroup_addPending(v21, 0) & 1) != 0)
      {
        v22 = *(_QWORD *)(v0 + 400);
        sub_100014A7C(*(_QWORD *)(v0 + 408), v22, &qword_10049AEC0);
        v23 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v22, 1, v46);
        v24 = *(_QWORD *)(v0 + 400);
        if ((_DWORD)v23 == 1)
        {
          sub_10033E628(*(_QWORD *)(v0 + 400));
          v25 = 0;
        }
        else
        {
          v26 = TaskPriority.rawValue.getter(v23);
          (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v24, v46);
          v25 = v26;
        }
        v8 = v47;
        v27 = *v19;
        if (*v19)
        {
          v28 = *(_QWORD *)(v18 + 24);
          ObjectType = swift_getObjectType();
          swift_unknownObjectRetain(v27);
          v30 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v28);
          v32 = v31;
          swift_unknownObjectRelease(v27);
        }
        else
        {
          v30 = 0;
          v32 = 0;
        }
        v33 = **(_QWORD **)(v0 + 344);
        v34 = swift_allocObject(&unk_100465140, 32, 7);
        *(_QWORD *)(v34 + 16) = &unk_1004A07F8;
        *(_QWORD *)(v34 + 24) = v18;
        v35 = sub_100005574(&qword_1004A07C0);
        v36 = v32 | v30;
        if (v32 | v30)
        {
          v36 = v0 + 272;
          *(_QWORD *)(v0 + 272) = 0;
          *(_QWORD *)(v0 + 280) = 0;
          *(_QWORD *)(v0 + 288) = v30;
          *(_QWORD *)(v0 + 296) = v32;
        }
        *(_QWORD *)(v0 + 304) = 1;
        *(_QWORD *)(v0 + 312) = v36;
        *(_QWORD *)(v0 + 320) = v33;
        v37 = swift_task_create(v25 | 0x1100, v0 + 304, v35, &unk_1004A0810, v34);
        swift_release(v37);
        v4 = v43;
      }
      else
      {
        swift_release(v18);
        v8 = v47;
      }
      v9 = *(_QWORD *)(v0 + 408);
      sub_100190940(v0 + 216);
      sub_10033E628(v9);
      v5 = (__int128 *)((char *)v5 + 56);
      v2 = v8 - 1;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  v38 = **(_QWORD **)(v0 + 344);
  v39 = sub_100005574(&qword_1004A07C0);
  TaskGroup.makeAsyncIterator()(v38, v39);
  v40 = sub_10033E668();
  *(_QWORD *)(v0 + 416) = v40;
  v41 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
  *(_QWORD *)(v0 + 424) = v41;
  *v41 = v0;
  v41[1] = sub_10033CEA4;
  return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 96, *(_QWORD *)(v0 + 376), v40);
}

uint64_t sub_10033CEA4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v2 = *(_QWORD **)v1;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 424));
  if (v0)
  {
    v4 = v2[48];
    v3 = v2[49];
    v5 = v2[47];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    v6 = CFRange.init(_:);
  }
  else
  {
    v2[54] = 0;
    v2[55] = &_swiftEmptyDictionarySingleton;
    v6 = sub_10033CF3C;
  }
  return swift_task_switch(v6, 0, 0);
}

void sub_10033CF3C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t isUniquelyReferenced_nonNull_native;
  unsigned __int8 *v22;
  char v23;
  unint64_t v24;
  uint64_t v25;
  _BOOL8 v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char **v36;
  char *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  void *v46;
  void *v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  BOOL v54;
  uint64_t v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  _QWORD *v62;
  id v63;
  id v64;
  id v65;
  void *v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  id v85;
  id v86;
  void *v87;

  v1 = *(void **)(v0 + 104);
  if (!v1)
  {
    v31 = *(_QWORD *)(v0 + 440);
    v33 = *(_QWORD *)(v0 + 400);
    v32 = *(_QWORD *)(v0 + 408);
    v34 = *(_QWORD *)(v0 + 392);
    v35 = *(_QWORD *)(v0 + 352);
    v36 = *(char ***)(v0 + 336);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 384) + 8))(v34, *(_QWORD *)(v0 + 376));
    sub_10033E6B4(*(_QWORD *)(v0 + 96), *(void **)(v0 + 104), *(void **)(v0 + 112), *(void **)(v0 + 120), *(void **)(v0 + 128), *(void **)(v0 + 136), *(void **)(v0 + 144), *(void **)(v0 + 152));
    swift_bridgeObjectRetain();
    v37 = sub_10033E720(v35, v31);
    swift_bridgeObjectRelease_n(v31, 2);
    *v36 = v37;
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  v2 = *(void **)(v0 + 112);
  v3 = *(void **)(v0 + 120);
  v5 = *(void **)(v0 + 128);
  v4 = *(void **)(v0 + 136);
  v6 = *(void **)(v0 + 144);
  v87 = *(void **)(v0 + 152);
  v83 = *(_QWORD *)(v0 + 440);
  v71 = *(void **)(v0 + 104);
  v72 = *(_QWORD *)(v0 + 96);
  *(_BYTE *)(v0 + 160) = v72;
  *(_QWORD *)(v0 + 168) = v1;
  *(_QWORD *)(v0 + 176) = v2;
  *(_QWORD *)(v0 + 184) = v3;
  *(_QWORD *)(v0 + 192) = v5;
  *(_QWORD *)(v0 + 200) = v4;
  *(_QWORD *)(v0 + 208) = v6;
  v7 = v1;
  v70 = v2;
  v8 = v2;
  v69 = v3;
  v9 = v3;
  v68 = v5;
  v10 = v5;
  v67 = v4;
  v11 = v4;
  v66 = v6;
  v12 = v6;
  v13 = v7;
  v14 = v8;
  v15 = v9;
  v16 = v10;
  v17 = v11;
  v18 = v12;
  v19 = v87;
  v63 = v13;
  v64 = v14;
  v65 = v15;
  v20 = v16;
  v85 = v17;
  v86 = v18;
  PlaylistCovers.Cover.init(image:representation:)((uint64_t)v19, (unsigned __int8 *)(v0 + 160), v0 + 16);
  v73 = *(_QWORD *)(v0 + 16);
  v74 = *(_QWORD *)(v0 + 24);
  v75 = *(_QWORD *)(v0 + 32);
  v76 = *(_QWORD *)(v0 + 40);
  v77 = *(_QWORD *)(v0 + 48);
  v78 = *(_QWORD *)(v0 + 56);
  v79 = *(_QWORD *)(v0 + 64);
  v80 = *(_QWORD *)(v0 + 72);
  v81 = *(_QWORD *)(v0 + 80);
  v82 = *(_QWORD *)(v0 + 88);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v83);
  *(_QWORD *)(v0 + 328) = v83;
  v22 = (unsigned __int8 *)(v0 + 160);
  v24 = sub_10025A248((unsigned __int8 *)(v0 + 160));
  v25 = *(_QWORD *)(v83 + 16);
  v26 = (v23 & 1) == 0;
  v27 = v25 + v26;
  if (__OFADD__(v25, v26))
  {
    __break(1u);
  }
  else
  {
    v28 = v23;
    if (*(_QWORD *)(*(_QWORD *)(v0 + 440) + 24) >= v27)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_10025BE2C();
    }
    else
    {
      sub_10025B280(v27, isUniquelyReferenced_nonNull_native);
      v29 = sub_10025A248(v22);
      if ((v28 & 1) != (v30 & 1))
      {
        KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for PlaylistCovers.Cover.Representation);
        return;
      }
      v24 = v29;
    }
    v84 = v19;
    v38 = *(_QWORD **)(v0 + 328);
    *(_QWORD *)(v0 + 448) = v38;
    if ((v28 & 1) != 0)
    {
      v39 = v38[7] + 120 * v24;
      v40 = *(_QWORD *)(v39 + 80);
      v41 = *(_QWORD *)(v39 + 88);
      v42 = *(_QWORD *)(v39 + 96);
      v43 = *(_QWORD *)(v39 + 104);
      v44 = *(_QWORD *)(v39 + 112);
      sub_10033BD6C(*(void **)v39, *(_QWORD *)(v39 + 8), *(void **)(v39 + 16), *(void **)(v39 + 24), *(void **)(v39 + 32), *(void **)(v39 + 40), *(void **)(v39 + 48), *(void **)(v39 + 56));
      sub_10033E944(v40, v41, v42, v43, v44);
      *(_QWORD *)v39 = v73;
      *(_QWORD *)(v39 + 8) = v74;
      *(_QWORD *)(v39 + 16) = v75;
      *(_QWORD *)(v39 + 24) = v76;
      *(_QWORD *)(v39 + 32) = v77;
      *(_QWORD *)(v39 + 40) = v78;
      *(_QWORD *)(v39 + 48) = v79;
      *(_QWORD *)(v39 + 56) = v80;
      *(_QWORD *)(v39 + 64) = v81;
      *(_QWORD *)(v39 + 72) = v82;
      *(_OWORD *)(v39 + 80) = 0u;
      *(_OWORD *)(v39 + 96) = 0u;
      *(_QWORD *)(v39 + 112) = 0;
      v46 = v64;
      v45 = v65;
      v47 = v63;
LABEL_14:
      swift_bridgeObjectRelease();

      sub_10033E6B4(v72, v71, v70, v69, v68, v67, v66, v87);
      v62 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
      *(_QWORD *)(v0 + 456) = v62;
      *v62 = v0;
      v62[1] = sub_10033D43C;
      dispatch thunk of AsyncIteratorProtocol.next()(v0 + 96, *(_QWORD *)(v0 + 376), *(_QWORD *)(v0 + 416));
      return;
    }
    v38[(v24 >> 6) + 8] |= 1 << v24;
    v48 = v38[6] + 56 * v24;
    v49 = *(_OWORD *)v22;
    v50 = *(_OWORD *)(v0 + 176);
    v51 = *(_OWORD *)(v0 + 192);
    *(_QWORD *)(v48 + 48) = *(_QWORD *)(v0 + 208);
    *(_OWORD *)(v48 + 16) = v50;
    *(_OWORD *)(v48 + 32) = v51;
    *(_OWORD *)v48 = v49;
    v52 = v38[7] + 120 * v24;
    *(_QWORD *)v52 = v73;
    *(_QWORD *)(v52 + 8) = v74;
    *(_QWORD *)(v52 + 16) = v75;
    *(_QWORD *)(v52 + 24) = v76;
    *(_QWORD *)(v52 + 32) = v77;
    *(_QWORD *)(v52 + 40) = v78;
    *(_QWORD *)(v52 + 48) = v79;
    *(_QWORD *)(v52 + 56) = v80;
    *(_QWORD *)(v52 + 64) = v81;
    *(_QWORD *)(v52 + 72) = v82;
    *(_QWORD *)(v52 + 112) = 0;
    *(_OWORD *)(v52 + 80) = 0u;
    *(_OWORD *)(v52 + 96) = 0u;
    v53 = v38[2];
    v54 = __OFADD__(v53, 1);
    v55 = v53 + 1;
    if (!v54)
    {
      v38[2] = v55;
      v47 = v63;
      v56 = v63;
      v46 = v64;
      v57 = v64;
      v45 = v65;
      v58 = v65;
      v59 = v20;
      v60 = v85;
      v61 = v86;
      goto LABEL_14;
    }
  }
  __break(1u);
}

uint64_t sub_10033D43C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  CFRange (__swiftcall *v7)(__C::_NSRange);

  v2 = *(_QWORD **)v1;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 456));
  v3 = v2[56];
  if (v0)
  {
    v5 = v2[48];
    v4 = v2[49];
    v6 = v2[47];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    v7 = CFRange.init(_:);
  }
  else
  {
    v2[54] = 0;
    v2[55] = v3;
    v7 = (CFRange (__swiftcall *)(__C::_NSRange))sub_10033CF3C;
  }
  return swift_task_switch(v7, 0, 0);
}

uint64_t sub_10033D4C8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v6 = v2[2];
  v7 = v2[3];
  v8 = v2[4];
  v9 = (_QWORD *)swift_task_alloc(dword_1004A07CC);
  *(_QWORD *)(v3 + 16) = v9;
  *v9 = v3;
  v9[1] = sub_10000F894;
  return sub_10033CAE4(a1, a2, v6, v7, v8);
}

unint64_t sub_10033D548()
{
  unint64_t result;

  result = qword_1004A07E0;
  if (!qword_1004A07E0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PlaylistCovers.CarouselItem, &type metadata for PlaylistCovers.CarouselItem);
    atomic_store(result, (unint64_t *)&qword_1004A07E0);
  }
  return result;
}

double _s12CarouselItemVwxx(uint64_t a1)
{
  void *v2;
  double result;
  uint64_t v4;

  if (*(_QWORD *)a1)
  {

    v2 = *(void **)(a1 + 16);
    if (v2)
    {

    }
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 72));
  }
  v4 = *(_QWORD *)(a1 + 80);
  if (v4)
  {
    swift_release(v4);
    swift_release(*(_QWORD *)(a1 + 88));
    swift_release(*(_QWORD *)(a1 + 96));
    swift_release(*(_QWORD *)(a1 + 104));
    *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 112)).n128_u64[0];
  }
  return result;
}

uint64_t _s12CarouselItemVwcp(uint64_t a1, uint64_t a2)
{
  void *v4;
  _OWORD *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;

  v4 = *(void **)a2;
  if (*(_QWORD *)a2)
  {
    *(_QWORD *)a1 = v4;
    v5 = (_OWORD *)(a1 + 8);
    v6 = *(void **)(a2 + 16);
    v7 = v4;
    if (v6)
    {
      *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
      v8 = *(void **)(a2 + 24);
      v9 = *(void **)(a2 + 32);
      *(_QWORD *)(a1 + 16) = v6;
      *(_QWORD *)(a1 + 24) = v8;
      v10 = *(void **)(a2 + 40);
      v11 = *(void **)(a2 + 48);
      *(_QWORD *)(a1 + 32) = v9;
      *(_QWORD *)(a1 + 40) = v10;
      v12 = *(void **)(a2 + 56);
      *(_QWORD *)(a1 + 48) = v11;
      *(_QWORD *)(a1 + 56) = v12;
      v13 = v6;
      v14 = v8;
      v15 = v9;
      v16 = v10;
      v17 = v11;
      v18 = v12;
    }
    else
    {
      v21 = *(_OWORD *)(a2 + 24);
      *v5 = *(_OWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 24) = v21;
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    }
    v22 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = v22;
    swift_bridgeObjectRetain();
  }
  else
  {
    v19 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v19;
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    v20 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v20;
  }
  v23 = *(_QWORD *)(a2 + 80);
  if (v23)
  {
    v24 = *(_QWORD *)(a2 + 88);
    v25 = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 80) = v23;
    *(_QWORD *)(a1 + 88) = v24;
    v27 = *(_QWORD *)(a2 + 104);
    v26 = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 96) = v25;
    *(_QWORD *)(a1 + 104) = v27;
    *(_QWORD *)(a1 + 112) = v26;
    swift_retain(v23);
    swift_retain(v24);
    swift_retain(v25);
    swift_retain(v27);
    swift_retain(v26);
  }
  else
  {
    v28 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v28;
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  }
  return a1;
}

uint64_t _s12CarouselItemVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  _OWORD *v7;
  __int128 *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  id v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  _OWORD *v69;
  uint64_t v70;
  uint64_t v71;
  _OWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  if (*(_QWORD *)a1)
  {
    if (v5)
    {
      *(_QWORD *)a1 = v5;
      v6 = v5;

      v7 = (_OWORD *)(a1 + 8);
      v8 = (__int128 *)(a2 + 8);
      v9 = *(void **)(a1 + 16);
      v10 = *(_QWORD *)(a2 + 16);
      if (v9)
      {
        if (v10)
        {
          *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
          v11 = *(void **)(a2 + 16);
          *(_QWORD *)(a1 + 16) = v11;
          v12 = v11;

          v13 = *(void **)(a2 + 24);
          v14 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v13;
          v15 = v13;

          v16 = *(void **)(a2 + 32);
          v17 = *(void **)(a1 + 32);
          *(_QWORD *)(a1 + 32) = v16;
          v18 = v16;

          v19 = *(void **)(a2 + 40);
          v20 = *(void **)(a1 + 40);
          *(_QWORD *)(a1 + 40) = v19;
          v21 = v19;

          v22 = *(void **)(a2 + 48);
          v23 = *(void **)(a1 + 48);
          *(_QWORD *)(a1 + 48) = v22;
          v24 = v22;

          v25 = *(void **)(a2 + 56);
          v26 = *(void **)(a1 + 56);
          *(_QWORD *)(a1 + 56) = v25;
          v27 = v25;

        }
        else
        {
          sub_10033DAE4((id *)(a1 + 8));
          v61 = *(_OWORD *)(a2 + 24);
          v60 = *(_OWORD *)(a2 + 40);
          v62 = *v8;
          *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
          *(_OWORD *)(a1 + 24) = v61;
          *(_OWORD *)(a1 + 40) = v60;
          *v7 = v62;
        }
      }
      else if (v10)
      {
        *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
        v45 = *(void **)(a2 + 16);
        *(_QWORD *)(a1 + 16) = v45;
        v46 = *(void **)(a2 + 24);
        *(_QWORD *)(a1 + 24) = v46;
        v47 = *(void **)(a2 + 32);
        *(_QWORD *)(a1 + 32) = v47;
        v48 = *(void **)(a2 + 40);
        *(_QWORD *)(a1 + 40) = v48;
        v49 = *(void **)(a2 + 48);
        *(_QWORD *)(a1 + 48) = v49;
        v50 = *(void **)(a2 + 56);
        *(_QWORD *)(a1 + 56) = v50;
        v51 = v45;
        v52 = v46;
        v53 = v47;
        v54 = v48;
        v55 = v49;
        v56 = v50;
      }
      else
      {
        v66 = *v8;
        v67 = *(_OWORD *)(a2 + 24);
        v68 = *(_OWORD *)(a2 + 40);
        *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
        *(_OWORD *)(a1 + 24) = v67;
        *(_OWORD *)(a1 + 40) = v68;
        *v7 = v66;
      }
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10033DB18(a1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v42 = *(_OWORD *)(a2 + 64);
      v44 = *(_OWORD *)(a2 + 16);
      v43 = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 64) = v42;
      *(_OWORD *)(a1 + 16) = v44;
      *(_OWORD *)(a1 + 32) = v43;
    }
  }
  else if (v5)
  {
    *(_QWORD *)a1 = v5;
    v28 = *(_QWORD *)(a2 + 16);
    v29 = v5;
    if (v28)
    {
      *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
      v30 = *(void **)(a2 + 16);
      *(_QWORD *)(a1 + 16) = v30;
      v31 = *(void **)(a2 + 24);
      *(_QWORD *)(a1 + 24) = v31;
      v32 = *(void **)(a2 + 32);
      *(_QWORD *)(a1 + 32) = v32;
      v33 = *(void **)(a2 + 40);
      *(_QWORD *)(a1 + 40) = v33;
      v34 = *(void **)(a2 + 48);
      *(_QWORD *)(a1 + 48) = v34;
      v35 = *(void **)(a2 + 56);
      *(_QWORD *)(a1 + 56) = v35;
      v36 = v30;
      v37 = v31;
      v38 = v32;
      v39 = v33;
      v40 = v34;
      v41 = v35;
    }
    else
    {
      v63 = *(_OWORD *)(a2 + 8);
      v64 = *(_OWORD *)(a2 + 24);
      v65 = *(_OWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 24) = v64;
      *(_OWORD *)(a1 + 40) = v65;
      *(_OWORD *)(a1 + 8) = v63;
    }
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v57 = *(_OWORD *)(a2 + 16);
    v58 = *(_OWORD *)(a2 + 32);
    v59 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v59;
    *(_OWORD *)(a1 + 16) = v57;
    *(_OWORD *)(a1 + 32) = v58;
  }
  v69 = (_OWORD *)(a1 + 80);
  v70 = *(_QWORD *)(a1 + 80);
  v72 = (_OWORD *)(a2 + 80);
  v71 = *(_QWORD *)(a2 + 80);
  if (v70)
  {
    if (v71)
    {
      *(_QWORD *)(a1 + 80) = v71;
      swift_retain(v71);
      swift_release(v70);
      v73 = *(_QWORD *)(a2 + 88);
      v74 = *(_QWORD *)(a1 + 88);
      *(_QWORD *)(a1 + 88) = v73;
      swift_retain(v73);
      swift_release(v74);
      v75 = *(_QWORD *)(a2 + 96);
      v76 = *(_QWORD *)(a1 + 96);
      *(_QWORD *)(a1 + 96) = v75;
      swift_retain(v75);
      swift_release(v76);
      v77 = *(_QWORD *)(a2 + 104);
      v78 = *(_QWORD *)(a1 + 104);
      *(_QWORD *)(a1 + 104) = v77;
      swift_retain(v77);
      swift_release(v78);
      v79 = *(_QWORD *)(a2 + 112);
      v80 = *(_QWORD *)(a1 + 112);
      *(_QWORD *)(a1 + 112) = v79;
      swift_retain(v79);
      swift_release(v80);
    }
    else
    {
      sub_10033DB4C((_QWORD *)(a1 + 80));
      v85 = *(_QWORD *)(a2 + 112);
      v86 = *(_OWORD *)(a2 + 96);
      *v69 = *v72;
      *(_OWORD *)(a1 + 96) = v86;
      *(_QWORD *)(a1 + 112) = v85;
    }
  }
  else if (v71)
  {
    *(_QWORD *)(a1 + 80) = v71;
    v81 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 88) = v81;
    v82 = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 96) = v82;
    v83 = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 104) = v83;
    v84 = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 112) = v84;
    swift_retain(v71);
    swift_retain(v81);
    swift_retain(v82);
    swift_retain(v83);
    swift_retain(v84);
  }
  else
  {
    v87 = *v72;
    v88 = *(_OWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *v69 = v87;
    *(_OWORD *)(a1 + 96) = v88;
  }
  return a1;
}

id *sub_10033DAE4(id *a1)
{
  destroy for PlaylistCovers.Cover.Representation(a1);
  return a1;
}

uint64_t sub_10033DB18(uint64_t a1)
{
  destroy for PlaylistCovers.Cover(a1);
  return a1;
}

_QWORD *sub_10033DB4C(_QWORD *a1)
{
  destroy for PageIndicator(a1);
  return a1;
}

__n128 initializeWithTake for SymbolButton.Symbol(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_QWORD *)(a1 + 112) = *((_QWORD *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t _s12CarouselItemVwta(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;

  v4 = *(void **)a1;
  if (!*(_QWORD *)a1)
    goto LABEL_7;
  if (!*(_QWORD *)a2)
  {
    sub_10033DB18(a1);
LABEL_7:
    v12 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v12;
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    v13 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v13;
    goto LABEL_11;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(void **)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    v14 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v14;
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    goto LABEL_10;
  }
  v6 = *(_QWORD *)(a2 + 16);
  if (!v6)
  {
    sub_10033DAE4((id *)(a1 + 8));
    goto LABEL_9;
  }
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;

  v7 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  v8 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);

  v9 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);

  v10 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);

  v11 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);

LABEL_10:
  v15 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v15;
  swift_bridgeObjectRelease();
LABEL_11:
  v16 = *(_QWORD *)(a1 + 80);
  v17 = *(_QWORD *)(a2 + 80);
  if (!v16)
  {
LABEL_15:
    v22 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v22;
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    return a1;
  }
  if (!v17)
  {
    sub_10033DB4C((_QWORD *)(a1 + 80));
    goto LABEL_15;
  }
  *(_QWORD *)(a1 + 80) = v17;
  swift_release(v16);
  v18 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_release(v18);
  v19 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_release(v19);
  v20 = *(_QWORD *)(a1 + 104);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_release(v20);
  v21 = *(_QWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_release(v21);
  return a1;
}

uint64_t _s12CarouselItemVwet(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 120))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s12CarouselItemVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 120) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 120) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaylistCovers.CarouselItem()
{
  return &type metadata for PlaylistCovers.CarouselItem;
}

id *_s12CarouselItemV16CarouselItemTypeOwxx(id *result)
{
  id *v1;
  id v2;

  if ((unint64_t)*result >= 0xFFFFFFFF)
  {
    v1 = result;

    v2 = v1[2];
    if (v2)
    {

    }
    return (id *)swift_bridgeObjectRelease(v1[9]);
  }
  return result;
}

uint64_t _s12CarouselItemV16CarouselItemTypeOwcp(uint64_t a1, uint64_t a2)
{
  void *v4;
  _OWORD *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;

  v4 = *(void **)a2;
  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {
    v19 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v19;
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    v20 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v20;
  }
  else
  {
    *(_QWORD *)a1 = v4;
    v5 = (_OWORD *)(a1 + 8);
    v6 = *(void **)(a2 + 16);
    v7 = v4;
    if (v6)
    {
      *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
      v8 = *(void **)(a2 + 24);
      v9 = *(void **)(a2 + 32);
      *(_QWORD *)(a1 + 16) = v6;
      *(_QWORD *)(a1 + 24) = v8;
      v10 = *(void **)(a2 + 40);
      v11 = *(void **)(a2 + 48);
      *(_QWORD *)(a1 + 32) = v9;
      *(_QWORD *)(a1 + 40) = v10;
      v12 = *(void **)(a2 + 56);
      *(_QWORD *)(a1 + 48) = v11;
      *(_QWORD *)(a1 + 56) = v12;
      v13 = v6;
      v14 = v8;
      v15 = v9;
      v16 = v10;
      v17 = v11;
      v18 = v12;
    }
    else
    {
      v21 = *(_OWORD *)(a2 + 24);
      *v5 = *(_OWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 24) = v21;
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    }
    v22 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = v22;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t _s12CarouselItemV16CarouselItemTypeOwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  _OWORD *v7;
  __int128 *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  id v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  void *v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
  {
    if ((unint64_t)v5 >= 0xFFFFFFFF)
    {
      *(_QWORD *)a1 = v5;
      v6 = v5;

      v7 = (_OWORD *)(a1 + 8);
      v8 = (__int128 *)(a2 + 8);
      v9 = *(void **)(a1 + 16);
      v10 = *(_QWORD *)(a2 + 16);
      if (v9)
      {
        if (v10)
        {
          *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
          v11 = *(void **)(a2 + 16);
          *(_QWORD *)(a1 + 16) = v11;
          v12 = v11;

          v13 = *(void **)(a2 + 24);
          v14 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v13;
          v15 = v13;

          v16 = *(void **)(a2 + 32);
          v17 = *(void **)(a1 + 32);
          *(_QWORD *)(a1 + 32) = v16;
          v18 = v16;

          v19 = *(void **)(a2 + 40);
          v20 = *(void **)(a1 + 40);
          *(_QWORD *)(a1 + 40) = v19;
          v21 = v19;

          v22 = *(void **)(a2 + 48);
          v23 = *(void **)(a1 + 48);
          *(_QWORD *)(a1 + 48) = v22;
          v24 = v22;

          v25 = *(void **)(a2 + 56);
          v26 = *(void **)(a1 + 56);
          *(_QWORD *)(a1 + 56) = v25;
          v27 = v25;

        }
        else
        {
          sub_10033DAE4((id *)(a1 + 8));
          v62 = *(_OWORD *)(a2 + 24);
          v61 = *(_OWORD *)(a2 + 40);
          v63 = *v8;
          *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
          *(_OWORD *)(a1 + 24) = v62;
          *(_OWORD *)(a1 + 40) = v61;
          *v7 = v63;
        }
      }
      else if (v10)
      {
        *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
        v46 = *(void **)(a2 + 16);
        *(_QWORD *)(a1 + 16) = v46;
        v47 = *(void **)(a2 + 24);
        *(_QWORD *)(a1 + 24) = v47;
        v48 = *(void **)(a2 + 32);
        *(_QWORD *)(a1 + 32) = v48;
        v49 = *(void **)(a2 + 40);
        *(_QWORD *)(a1 + 40) = v49;
        v50 = *(void **)(a2 + 48);
        *(_QWORD *)(a1 + 48) = v50;
        v51 = *(void **)(a2 + 56);
        *(_QWORD *)(a1 + 56) = v51;
        v52 = v46;
        v53 = v47;
        v54 = v48;
        v55 = v49;
        v56 = v50;
        v57 = v51;
      }
      else
      {
        v64 = *v8;
        v65 = *(_OWORD *)(a2 + 24);
        v66 = *(_OWORD *)(a2 + 40);
        *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
        *(_OWORD *)(a1 + 24) = v65;
        *(_OWORD *)(a1 + 40) = v66;
        *v7 = v64;
      }
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }

    v42 = *(void **)(a1 + 16);
    if (v42)
    {

    }
    swift_bridgeObjectRelease();
LABEL_12:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v43 = *(_OWORD *)(a2 + 16);
    v44 = *(_OWORD *)(a2 + 32);
    v45 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v45;
    *(_OWORD *)(a1 + 16) = v43;
    *(_OWORD *)(a1 + 32) = v44;
    return a1;
  }
  if ((unint64_t)v5 < 0xFFFFFFFF)
    goto LABEL_12;
  *(_QWORD *)a1 = v5;
  v28 = *(_QWORD *)(a2 + 16);
  v29 = v5;
  if (v28)
  {
    *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
    v30 = *(void **)(a2 + 16);
    *(_QWORD *)(a1 + 16) = v30;
    v31 = *(void **)(a2 + 24);
    *(_QWORD *)(a1 + 24) = v31;
    v32 = *(void **)(a2 + 32);
    *(_QWORD *)(a1 + 32) = v32;
    v33 = *(void **)(a2 + 40);
    *(_QWORD *)(a1 + 40) = v33;
    v34 = *(void **)(a2 + 48);
    *(_QWORD *)(a1 + 48) = v34;
    v35 = *(void **)(a2 + 56);
    *(_QWORD *)(a1 + 56) = v35;
    v36 = v30;
    v37 = v31;
    v38 = v32;
    v39 = v33;
    v40 = v34;
    v41 = v35;
  }
  else
  {
    v58 = *(_OWORD *)(a2 + 8);
    v59 = *(_OWORD *)(a2 + 24);
    v60 = *(_OWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 24) = v59;
    *(_OWORD *)(a1 + 40) = v60;
    *(_OWORD *)(a1 + 8) = v58;
  }
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s12CarouselItemV16CarouselItemTypeOwta(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;

  v4 = *(void **)a1;
  if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
  {
    if (*(_QWORD *)a2 >= 0xFFFFFFFFuLL)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;

      v5 = *(void **)(a1 + 16);
      if (v5)
      {
        v6 = *(_QWORD *)(a2 + 16);
        if (v6)
        {
          *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
          *(_QWORD *)(a1 + 16) = v6;

          v7 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

          v8 = *(void **)(a1 + 32);
          *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);

          v9 = *(void **)(a1 + 40);
          *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);

          v10 = *(void **)(a1 + 48);
          *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);

          v11 = *(void **)(a1 + 56);
          *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);

LABEL_12:
          v16 = *(_QWORD *)(a2 + 72);
          *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
          *(_QWORD *)(a1 + 72) = v16;
          swift_bridgeObjectRelease();
          return a1;
        }
        sub_10033DAE4((id *)(a1 + 8));
      }
      v15 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 24) = v15;
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      goto LABEL_12;
    }

    v12 = *(void **)(a1 + 16);
    if (v12)
    {

    }
    swift_bridgeObjectRelease();
  }
  v13 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v13;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  v14 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v14;
  return a1;
}

uint64_t _s12CarouselItemV16CarouselItemTypeOwet(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 80))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t _s12CarouselItemV16CarouselItemTypeOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 80) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

uint64_t sub_10033E430(uint64_t result, int a2)
{
  uint64_t v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  else
  {
    if (!a2)
      return result;
    v2 = (a2 - 1);
  }
  *(_QWORD *)result = v2;
  return result;
}

ValueMetadata *type metadata accessor for PlaylistCovers.CarouselItem.CarouselItemType()
{
  return &type metadata for PlaylistCovers.CarouselItem.CarouselItemType;
}

uint64_t sub_10033E474(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[4] = a5;
  v6[5] = a6;
  v6[2] = a1;
  v6[3] = a4;
  return swift_task_switch(sub_10033E490, 0, 0);
}

uint64_t sub_10033E490()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 *v8;
  CGFloat v9;
  CGFloat v10;
  void *v11;
  char **v12;
  id v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v5 = *(_OWORD *)v3;
  v6 = *(_OWORD *)(v3 + 16);
  v7 = *(_OWORD *)(v3 + 32);
  *(_QWORD *)(v4 + 48) = *(_QWORD *)(v3 + 48);
  *(_OWORD *)(v4 + 16) = v6;
  *(_OWORD *)(v4 + 32) = v7;
  *(_OWORD *)v4 = v5;
  sub_1001908EC(v3);
  v8 = PlaylistCovers.Specs.coverSize.unsafeMutableAddressor();
  v9 = *(double *)v8;
  v10 = *((double *)v8 + 1);
  v11 = *(void **)(v3 + 8);
  v12 = *(char ***)(v3 + 48);
  sub_10033EA30();
  v13 = objc_msgSend((id)swift_getObjCClassFromMetadata(), "preferredFormat");
  static PlaylistCovers.playlistCoverImage(size:backgroundImage:textColor:title:graphicsFormat:)(v11, v12, v1, v2, v13, v9, v10);
  v15 = v14;

  *(_QWORD *)(v4 + 56) = v15;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10033E558()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 96));
  return swift_deallocObject(v0, 104, 7);
}

uint64_t sub_10033E5B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1 + 32;
  v6 = *(_QWORD *)(v1 + 88);
  v5 = *(_QWORD *)(v1 + 96);
  v7 = (_QWORD *)swift_task_alloc(dword_1004A07F4);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10000EA88;
  v7[4] = v6;
  v7[5] = v5;
  v7[2] = a1;
  v7[3] = v4;
  return swift_task_switch(sub_10033E490, 0, 0);
}

uint64_t sub_10033E628(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100005574(&qword_10049AEC0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10033E668()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004A0800;
  if (!qword_1004A0800)
  {
    v1 = sub_100005600(&qword_1004A07E8);
    result = swift_getWitnessTable(&protocol conformance descriptor for TaskGroup<A>.Iterator, v1);
    atomic_store(result, (unint64_t *)&qword_1004A0800);
  }
  return result;
}

void sub_10033E6B4(uint64_t a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  if (a2)
  {

  }
}

char *sub_10033E720(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __int128 v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char *v25;
  uint64_t v27;
  void *v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  void *v37;
  uint64_t v38;
  _OWORD v39[3];
  uint64_t v40;
  void *v41;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return (char *)_swiftEmptyArrayStorage;
  v4 = a1;
  v5 = (char *)_swiftEmptyArrayStorage;
  v6 = 32;
  v27 = swift_bridgeObjectRetain();
  do
  {
    v7 = *(_OWORD *)(v4 + v6 + 16);
    v39[0] = *(_OWORD *)(v4 + v6);
    v39[1] = v7;
    v39[2] = *(_OWORD *)(v4 + v6 + 32);
    v40 = *(_QWORD *)(v4 + v6 + 48);
    if (*(_QWORD *)(a2 + 16))
    {
      sub_1001908EC((uint64_t)v39);
      sub_1001908EC((uint64_t)v39);
      v8 = sub_10025A248((unsigned __int8 *)v39);
      if ((v9 & 1) != 0)
      {
        v10 = *(_QWORD *)(a2 + 56) + 120 * v8;
        v11 = *(_QWORD *)(v10 + 8);
        v12 = *(void **)(v10 + 16);
        v13 = *(void **)(v10 + 24);
        v14 = *(void **)(v10 + 32);
        v15 = *(void **)(v10 + 40);
        v16 = *(void **)(v10 + 48);
        v17 = *(void **)(v10 + 56);
        v18 = *(_QWORD *)(v10 + 80);
        v19 = *(_QWORD *)(v10 + 88);
        v20 = *(_QWORD *)(v10 + 96);
        v21 = *(_QWORD *)(v10 + 104);
        v22 = *(_QWORD *)(v10 + 112);
        v33 = *(_QWORD *)(v10 + 72);
        v34 = *(_QWORD *)(v10 + 64);
        v41 = *(void **)v10;
        v37 = v15;
        v38 = v11;
        v29 = v13;
        v30 = v12;
        v28 = v14;
        v35 = v17;
        v36 = v16;
        sub_1002613B8(v41, v11, v12, v13, v14, v15, v16, v17);
        v31 = v19;
        v32 = v18;
        sub_100261438(v18, v19, v20, v21, v22);
        sub_100190940((uint64_t)v39);
        sub_100190940((uint64_t)v39);
        if ((swift_isUniquelyReferenced_nonNull_native(v5) & 1) == 0)
          v5 = sub_100258BDC(0, *((_QWORD *)v5 + 2) + 1, 1, v5);
        v24 = *((_QWORD *)v5 + 2);
        v23 = *((_QWORD *)v5 + 3);
        if (v24 >= v23 >> 1)
          v5 = sub_100258BDC((char *)(v23 > 1), v24 + 1, 1, v5);
        *((_QWORD *)v5 + 2) = v24 + 1;
        v25 = &v5[120 * v24];
        *((_QWORD *)v25 + 4) = v41;
        *((_QWORD *)v25 + 5) = v38;
        *((_QWORD *)v25 + 6) = v30;
        *((_QWORD *)v25 + 7) = v29;
        v4 = v27;
        *((_QWORD *)v25 + 8) = v28;
        *((_QWORD *)v25 + 9) = v37;
        *((_QWORD *)v25 + 10) = v36;
        *((_QWORD *)v25 + 11) = v35;
        *((_QWORD *)v25 + 12) = v34;
        *((_QWORD *)v25 + 13) = v33;
        *((_QWORD *)v25 + 14) = v32;
        *((_QWORD *)v25 + 15) = v31;
        *((_QWORD *)v25 + 16) = v20;
        *((_QWORD *)v25 + 17) = v21;
        *((_QWORD *)v25 + 18) = v22;
      }
      else
      {
        sub_100190940((uint64_t)v39);
        sub_100190940((uint64_t)v39);
      }
    }
    v6 += 56;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
  return v5;
}

double sub_10033E944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double result;

  if (a1)
  {
    swift_release(a1);
    swift_release(a2);
    swift_release(a3);
    swift_release(a4);
    *(_QWORD *)&result = swift_release(a5).n128_u64[0];
  }
  return result;
}

uint64_t sub_10033E99C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10033E9C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1004A080C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000EA88;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1004A0808 + dword_1004A0808))(a1, v4);
}

unint64_t sub_10033EA30()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004A0818;
  if (!qword_1004A0818)
  {
    v1 = objc_opt_self(UIGraphicsImageRendererFormat);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1004A0818);
  }
  return result;
}

id ProgressiveBlur.makeUIView(context:)(double a1, uint64_t a2, char a3)
{
  objc_class *v5;
  _BYTE *v6;
  void *v7;
  void *v8;
  id v9;
  objc_super v11;

  v5 = (objc_class *)type metadata accessor for ProgressiveBlurView();
  v6 = objc_allocWithZone(v5);
  *(double *)&v6[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_blurRadius] = a1;
  v6[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_edge] = a3;
  sub_10033F410(a3, 0.0, 0.0, 1.0, 1.0, a1);
  v8 = v7;
  v11.receiver = v6;
  v11.super_class = v5;
  v9 = objc_msgSendSuper2(&v11, "initWithEffect:", v7);

  return v9;
}

id ProgressiveBlurView.__allocating_init(blurRadius:edge:)(char a1, double a2)
{
  objc_class *v2;
  _BYTE *v5;
  void *v6;
  void *v7;
  id v8;
  objc_super v10;

  v5 = objc_allocWithZone(v2);
  *(double *)&v5[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_blurRadius] = a2;
  v5[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_edge] = a1;
  sub_10033F410(a1, 0.0, 0.0, 1.0, 1.0, a2);
  v7 = v6;
  v10.receiver = v5;
  v10.super_class = v2;
  v8 = objc_msgSendSuper2(&v10, "initWithEffect:", v6);

  return v8;
}

void ProgressiveBlur.updateUIView(_:context:)(_BYTE *a1, double a2, uint64_t a3, char a4)
{
  uint64_t v5;
  uint64_t v6;
  double v7;
  double v8;
  double v9;
  double v10;
  void *v11;
  id v12;

  v5 = OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_blurRadius;
  *(double *)&a1[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_blurRadius] = a2;
  v6 = OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_edge;
  a1[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_edge] = a4;
  objc_msgSend(a1, "bounds");
  sub_10033F410(a1[v6], v7, v8, v9, v10, *(double *)&a1[v5]);
  v12 = v11;
  objc_msgSend(a1, "setEffect:", v11);

}

id sub_10033EC28()
{
  uint64_t v0;
  double v1;
  char v2;
  objc_class *v3;
  _BYTE *v4;
  void *v5;
  void *v6;
  id v7;
  objc_super v9;

  v1 = *(double *)v0;
  v2 = *(_BYTE *)(v0 + 8);
  v3 = (objc_class *)type metadata accessor for ProgressiveBlurView();
  v4 = objc_allocWithZone(v3);
  *(double *)&v4[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_blurRadius] = v1;
  v4[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_edge] = v2;
  sub_10033F410(v2, 0.0, 0.0, 1.0, 1.0, v1);
  v6 = v5;
  v9.receiver = v4;
  v9.super_class = v3;
  v7 = objc_msgSendSuper2(&v9, "initWithEffect:", v5);

  return v7;
}

void sub_10033ECCC(uint64_t a1)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 8);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_blurRadius) = *(_QWORD *)v1;
  *(_BYTE *)(a1 + OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_edge) = v2;
  ProgressiveBlurView.updateEffect()();
}

uint64_t sub_10033ED0C(uint64_t a1, char a2)
{
  return UIViewRepresentable.sizeThatFits(_:uiView:context:)(a1, a2 & 1);
}

uint64_t sub_10033ED3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_10033F82C();
  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_10033ED8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_10033F82C();
  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_10033EDDC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10033F82C();
  UIViewRepresentable.body.getter(a1, v2);
  __break(1u);
}

void sub_10033EE00(char a1)
{
  sub_10033EE48(a1);
}

void sub_10033EE24(char a1)
{
  sub_10033EE48(a1);
}

void sub_10033EE48(char a1)
{
  __asm { BR              X10 }
}

double sub_10033EE74(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v2;
  uint64_t v4;

  v2 = a2();
  swift_beginAccess(v2, &v4, 0, 0);
  return *(double *)v2;
}

id ProgressiveBlurView.init(blurRadius:edge:)(char a1, double a2)
{
  _BYTE *v2;
  void *v3;
  void *v4;
  id v5;
  objc_super v7;

  *(double *)&v2[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_blurRadius] = a2;
  v2[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_edge] = a1;
  sub_10033F410(a1, 0.0, 0.0, 1.0, 1.0, a2);
  v4 = v3;
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ProgressiveBlurView();
  v5 = objc_msgSendSuper2(&v7, "initWithEffect:", v4);

  return v5;
}

uint64_t type metadata accessor for ProgressiveBlurView()
{
  return objc_opt_self(_TtC11MusicCoreUI19ProgressiveBlurView);
}

Swift::Void __swiftcall ProgressiveBlurView.layoutSubviews()()
{
  char *v0;
  double v1;
  double v2;
  double v3;
  double v4;
  void *v5;
  void *v6;
  objc_super v7;

  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for ProgressiveBlurView();
  objc_msgSendSuper2(&v7, "layoutSubviews");
  objc_msgSend(v0, "bounds");
  sub_10033F410(v0[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_edge], v1, v2, v3, v4, *(double *)&v0[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_blurRadius]);
  v6 = v5;
  objc_msgSend(v0, "setEffect:", v5);

}

Swift::Void __swiftcall ProgressiveBlurView.updateEffect()()
{
  char *v0;
  double v1;
  double v2;
  double v3;
  double v4;
  void *v5;
  id v6;

  objc_msgSend(v0, "bounds");
  sub_10033F410(v0[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_edge], v1, v2, v3, v4, *(double *)&v0[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_blurRadius]);
  v6 = v5;
  objc_msgSend(v0, "setEffect:", v5);

}

void sub_10033F0C0(void *a1, char a2, double a3, double a4, double a5, double a6)
{
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  Class isa;
  id v25;

  v12 = objc_msgSend(objc_allocWithZone((Class)CAGradientLayer), "init");
  objc_msgSend(v12, "setBounds:", a3, a4, a5, a6);
  sub_10033EE48(a2);
  objc_msgSend(v12, "setStartPoint:");
  sub_10033EE48(a2);
  objc_msgSend(v12, "setEndPoint:");
  v13 = sub_100005574(&qword_1004999B0);
  v14 = swift_allocObject(v13, 96, 7);
  *(_OWORD *)(v14 + 16) = xmmword_100384A60;
  v15 = (void *)objc_opt_self(UIColor);
  v16 = objc_msgSend(v15, "whiteColor");
  v17 = objc_msgSend(v16, "colorWithAlphaComponent:", 0.3);

  v18 = objc_msgSend(v17, "CGColor");
  _s3__C7CGColorCMa_0(0);
  v20 = v19;
  *(_QWORD *)(v14 + 56) = v19;
  *(_QWORD *)(v14 + 32) = v18;
  v21 = objc_msgSend(v15, "whiteColor");
  v22 = objc_msgSend(v21, "colorWithAlphaComponent:", 0.0);

  v23 = objc_msgSend(v22, "CGColor");
  *(_QWORD *)(v14 + 88) = v20;
  *(_QWORD *)(v14 + 64) = v23;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v12, "setColors:", isa);

  v25 = objc_msgSend(a1, "CGContext");
  objc_msgSend(v12, "renderInContext:", v25);

}

id ProgressiveBlurView.__allocating_init(effect:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), "initWithEffect:", a1);

  return v3;
}

void ProgressiveBlurView.init(effect:)()
{
  _swift_stdlib_reportUnimplementedInitializer("MusicCoreUI.ProgressiveBlurView", 31, "init(effect:)", 13, 0);
  __break(1u);
}

id ProgressiveBlurView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ProgressiveBlurView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_10033F410(char a1, double a2, double a3, double a4, double a5, double a6)
{
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  __n128 v19;
  _QWORD v20[5];
  uint64_t v21;

  if (!CGRectIsEmpty(*(CGRect *)&a2))
  {
    v12 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRendererFormat), "init");
    objc_msgSend(v12, "setScale:", 1.0);
    objc_msgSend(v12, "setPreferredRange:", 2);
    v13 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithBounds:format:", v12, a2, a3, a4, a5);
    v14 = swift_allocObject(&unk_1004652B8, 49, 7);
    *(double *)(v14 + 16) = a2;
    *(double *)(v14 + 24) = a3;
    *(double *)(v14 + 32) = a4;
    *(double *)(v14 + 40) = a5;
    *(_BYTE *)(v14 + 48) = a1;
    v15 = swift_allocObject(&unk_1004652E0, 32, 7);
    *(_QWORD *)(v15 + 16) = sub_10033F880;
    *(_QWORD *)(v15 + 24) = v14;
    v20[4] = sub_10016CBB4;
    v21 = v15;
    v20[0] = _NSConcreteStackBlock;
    v20[1] = 1107296256;
    v20[2] = sub_1000E776C;
    v20[3] = &unk_1004652F8;
    v16 = _Block_copy(v20);
    v17 = v21;
    swift_retain(v15);
    v18 = objc_msgSend(v13, "imageWithActions:", v16, swift_release(v17).n128_f64[0]);

    _Block_release(v16);
    LOBYTE(v12) = swift_isEscapingClosureAtFileLocation(v15, "", 128, 99, 78, 1, v19);
    swift_release(v14);
    swift_release(v15);
    if ((v12 & 1) != 0)
    {
      __break(1u);
    }
    else if (v18)
    {
      objc_msgSend((id)objc_opt_self(UIBlurEffect), "_effectWithVariableBlurRadius:imageMask:scale:", v18, a6, 1.0);

    }
  }
}

unint64_t sub_10033F63C()
{
  unint64_t result;

  result = qword_1004A0830;
  if (!qword_1004A0830)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ProgressiveBlur, &type metadata for ProgressiveBlur);
    atomic_store(result, (unint64_t *)&qword_1004A0830);
  }
  return result;
}

unint64_t sub_10033F684()
{
  unint64_t result;

  result = qword_1004A0838;
  if (!qword_1004A0838)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ProgressiveBlurView.Edge, &type metadata for ProgressiveBlurView.Edge);
    atomic_store(result, (unint64_t *)&qword_1004A0838);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ProgressiveBlur(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = v3 >= 4;
  v5 = v3 - 4;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ProgressiveBlur(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = a2 + 3;
  }
  return result;
}

ValueMetadata *type metadata accessor for ProgressiveBlur()
{
  return &type metadata for ProgressiveBlur;
}

uint64_t storeEnumTagSinglePayload for ProgressiveBlurView.Edge(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_10033F7AC + 4 * byte_10039F739[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_10033F7E0 + 4 * byte_10039F734[v4]))();
}

uint64_t sub_10033F7E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10033F7E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10033F7F0);
  return result;
}

uint64_t sub_10033F7FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10033F804);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_10033F808(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10033F810(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ProgressiveBlurView.Edge()
{
  return &type metadata for ProgressiveBlurView.Edge;
}

unint64_t sub_10033F82C()
{
  unint64_t result;

  result = qword_1004A0868;
  if (!qword_1004A0868)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ProgressiveBlur, &type metadata for ProgressiveBlur);
    atomic_store(result, (unint64_t *)&qword_1004A0868);
  }
  return result;
}

uint64_t sub_10033F870()
{
  uint64_t v0;

  return swift_deallocObject(v0, 49, 7);
}

void sub_10033F880(void *a1)
{
  uint64_t v1;

  sub_10033F0C0(a1, *(_BYTE *)(v1 + 48), *(double *)(v1 + 16), *(double *)(v1 + 24), *(double *)(v1 + 32), *(double *)(v1 + 40));
}

uint64_t sub_10033F890()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10033F8A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_10033F8B0(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

char *QRCodeOverlayViewController.__allocating_init(qrCode:title:subtitle:)(_QWORD *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return QRCodeOverlayViewController.init(qrCode:title:subtitle:)(a1);
}

void sub_10033F918()
{
  qword_1004A3EA8 = Int.seconds.getter(10);
}

void sub_10033F938()
{
  qword_1004A3EB0 = Int.seconds.getter(20);
}

void sub_10033F958()
{
  qword_1004A3EB8 = Int.seconds.getter(22);
}

void sub_10033F978()
{
  qword_1004A3EC0 = Int.seconds.getter(350);
}

void sub_10033F998()
{
  qword_1004A3EC8 = Int.seconds.getter(90);
}

void sub_10033F9B8()
{
  qword_1004A3ED0 = Int.seconds.getter(33);
}

void sub_10033F9D8()
{
  qword_1004A3ED8 = Int.seconds.getter(4);
}

void sub_10033F9F8()
{
  qword_1004A3EE0 = Int.seconds.getter(10);
}

id sub_10033FA18()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 18);
  qword_1004A3EE8 = (uint64_t)result;
  return result;
}

char *QRCodeOverlayViewController.init(qrCode:title:subtitle:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSString v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  __int128 v27;
  char *v28;
  void *v29;
  char *v30;
  id v31;
  NSString v32;
  id v33;
  NSString v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t ObjectType;
  objc_super v41;
  _QWORD v42[5];
  char v43[24];
  uint64_t v44;

  ObjectType = swift_getObjectType();
  v3 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_backgroundView;
  v4 = objc_allocWithZone((Class)UIVisualEffectView);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "init");
  v6 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView;
  type metadata accessor for QRCodeOverlayViewController.ContainerView();
  *(_QWORD *)&v5[v6] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  v7 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_destOutLayer;
  *(_QWORD *)&v5[v7] = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
  v8 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_logoView;
  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v9);

  v11 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v10);
  *(_QWORD *)&v5[v8] = v11;
  v12 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_titleLabel;
  *(_QWORD *)&v5[v12] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v13 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabelEffectView;
  if (qword_100498CA0 != -1)
    swift_once(&qword_100498CA0, sub_10033FA18);
  v14 = objc_msgSend((id)objc_opt_self(UIVibrancyEffect), "effectForBlurEffect:", qword_1004A3EE8);
  v15 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v14);

  *(_QWORD *)&v5[v13] = v15;
  v16 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabel;
  *(_QWORD *)&v5[v16] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  *(_QWORD *)&v5[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeBackgroundView] = 0;
  v17 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollView;
  *(_QWORD *)&v5[v17] = objc_msgSend(objc_allocWithZone((Class)UIScrollView), "init");
  v18 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollContentView;
  *(_QWORD *)&v5[v18] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  *(_QWORD *)&v5[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_brightnessManager] = 0;
  if (a1[4] == 76)
  {
    QRCode.with(errorCorrectionLevel:)(77, (uint64_t)v42);
    v20 = v42[0];
    v19 = v42[1];
    v22 = v42[2];
    v21 = v42[3];
    v23 = v42[4];
    sub_10034298C((uint64_t)v42, (uint64_t)v43);
    if (!v44)
    {
      v22 = a1[2];
      v21 = a1[3];
      v20 = *a1;
      v19 = a1[1];
      sub_1003028F8(a1);
      v23 = 76;
    }
    v24 = &v5[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCode];
    *(_QWORD *)v24 = v20;
    *((_QWORD *)v24 + 1) = v19;
    *((_QWORD *)v24 + 2) = v22;
    *((_QWORD *)v24 + 3) = v21;
    *((_QWORD *)v24 + 4) = v23;
  }
  else
  {
    v25 = &v5[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCode];
    v26 = a1[4];
    v27 = *((_OWORD *)a1 + 1);
    *(_OWORD *)v25 = *(_OWORD *)a1;
    *((_OWORD *)v25 + 1) = v27;
    *((_QWORD *)v25 + 4) = v26;
    sub_1003028F8(a1);
  }

  v41.receiver = v5;
  v41.super_class = (Class)type metadata accessor for QRCodeOverlayViewController();
  v28 = (char *)objc_msgSendSuper2(&v41, "initWithNibName:bundle:", 0, 0);
  v29 = *(void **)&v28[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_titleLabel];
  v30 = v28;
  v31 = v29;
  v32 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  objc_msgSend(v31, "setText:", v32);

  v33 = *(id *)&v30[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabel];
  v34 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  objc_msgSend(v33, "setText:", v34);

  v35 = sub_100005574(&qword_10049AED0);
  v36 = swift_allocObject(v35, 48, 7);
  *(_OWORD *)(v36 + 16) = xmmword_100384A80;
  *(_QWORD *)(v36 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory(0);
  *(_QWORD *)(v36 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  v37 = v30;
  v38 = UIViewController.registerForTraitChanges<A>(_:handler:)(v36, sub_100342914, 0, ObjectType);
  sub_10034295C(a1);
  swift_unknownObjectRelease(v38);
  swift_bridgeObjectRelease();

  return v37;
}

uint64_t type metadata accessor for QRCodeOverlayViewController.ContainerView()
{
  return objc_opt_self(_TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView);
}

Swift::Void __swiftcall QRCodeOverlayViewController.viewDidLoad()()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  Class isa;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  char *v18;
  uint64_t v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  char *v40;
  objc_super v41;
  UIAction_optional v42;
  UIMenu_optional v43;

  v1 = v0;
  v41.receiver = v0;
  v41.super_class = (Class)type metadata accessor for QRCodeOverlayViewController();
  objc_msgSendSuper2(&v41, "viewDidLoad");
  v2 = objc_msgSend(v0, "view");
  if (!v2)
  {
    __break(1u);
    goto LABEL_8;
  }
  v3 = v2;
  v4 = (void *)objc_opt_self(UIColor);
  v5 = objc_msgSend(v4, "clearColor");
  objc_msgSend(v3, "setBackgroundColor:", v5);

  v6 = objc_msgSend(v1, "navigationItem");
  sub_1000087DC(0, &qword_1004A08D0, UIBarButtonItem_ptr);
  sub_1000087DC(0, &qword_10049B098, UIAction_ptr);
  v7 = swift_allocObject(&unk_100465418, 24, 7);
  swift_unknownObjectWeakInit(v7 + 16);
  v42.value.super.super.isa = (Class)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_1003429F8, v7);
  v42.is_nil = 0;
  isa = UIBarButtonItem.init(systemItem:primaryAction:menu:)(UIBarButtonSystemItemDone, v42, v43).super.super.isa;
  objc_msgSend(v6, "setLeftBarButtonItem:", isa);

  v9 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v1, "dismissAnimated");
  v10 = objc_msgSend(v1, "view");
  if (!v10)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v11 = v10;
  v39 = v9;
  objc_msgSend(v10, "addGestureRecognizer:", v9);

  v12 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView;
  v13 = *(char **)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView];
  v40 = &v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCode];
  v14 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCode + 24];
  v15 = OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_image;
  v16 = *(void **)&v13[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_image];
  *(_QWORD *)&v13[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_image] = v14;
  v17 = v14;
  v18 = v13;

  objc_msgSend(*(id *)&v18[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_imageView], "setImage:", *(_QWORD *)&v13[v15]);
  v38 = v12;
  objc_msgSend(*(id *)&v1[v12], "setAlpha:", 0.0);
  v37 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_logoView;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_logoView], "setContentMode:", 1);
  v19 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_titleLabel;
  v20 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_titleLabel];
  sub_1000087DC(0, (unint64_t *)&qword_100498E28, UIFont_ptr);
  v21 = v20;
  v22 = (void *)static UIFont.preferredFont(forTextStyle:weight:)(UIFontTextStyleBody, UIFontWeightBold);
  objc_msgSend(v21, "setFont:", v22);

  v23 = *(id *)&v1[v19];
  v24 = objc_msgSend(v4, "whiteColor");
  objc_msgSend(v23, "setTextColor:", v24);

  objc_msgSend(*(id *)&v1[v19], "setTextAlignment:", 1);
  objc_msgSend(*(id *)&v1[v19], "setNumberOfLines:", 0);
  objc_msgSend(*(id *)&v1[v19], "setAlpha:", 0.0);
  objc_msgSend(*(id *)&v1[v19], "setAdjustsFontForContentSizeCategory:", 1);
  v25 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabel;
  v26 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabel];
  v27 = (void *)objc_opt_self(UIFont);
  v28 = v26;
  v29 = objc_msgSend(v27, "preferredFontForTextStyle:", UIFontTextStyleBody);
  objc_msgSend(v28, "setFont:", v29);

  objc_msgSend(*(id *)&v1[v25], "setTextAlignment:", 1);
  objc_msgSend(*(id *)&v1[v25], "setNumberOfLines:", 0);
  objc_msgSend(*(id *)&v1[v25], "setAlpha:", 0.0);
  objc_msgSend(*(id *)&v1[v25], "setAdjustsFontForContentSizeCategory:", 1);
  v30 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_destOutLayer;
  v31 = *(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_destOutLayer];
  v32 = objc_msgSend(v4, "blackColor");
  v33 = objc_msgSend(v32, "CGColor");

  objc_msgSend(v31, "setFillColor:", v33);
  objc_msgSend(*(id *)&v1[v30], "setFillRule:", kCAFillRuleNonZero);
  objc_msgSend(*(id *)&v1[v30], "setCompositingFilter:", kCAFilterDestOut);
  if (*((_QWORD *)v40 + 4) != 76)
  {
    v34 = objc_msgSend(*(id *)&v1[v38], "layer");
    objc_msgSend(v34, "addSublayer:", *(_QWORD *)&v1[v30]);

    objc_msgSend(*(id *)&v1[v38], "addSubview:", *(_QWORD *)&v1[v37]);
  }
  v35 = objc_msgSend(v1, "view");
  if (v35)
  {
    v36 = v35;
    objc_msgSend(v35, "addSubview:", *(_QWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_backgroundView]);

    return;
  }
LABEL_9:
  __break(1u);
}

void sub_100340460(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    QRCodeOverlayViewController.dismissAnimated()();

  }
}

Swift::Void __swiftcall QRCodeOverlayViewController.viewIsAppearing(_:)(Swift::Bool a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  char *v5;
  objc_class *v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  char *v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  id v32;
  char *v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  objc_super v38;

  v2 = v1;
  sub_100005574(&qword_1004A1050);
  __chkstk_darwin();
  v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (objc_class *)type metadata accessor for QRCodeOverlayViewController();
  v38.receiver = v2;
  v38.super_class = v6;
  objc_msgSendSuper2(&v38, "viewIsAppearing:", a1);
  v7 = objc_msgSend(v2, "traitCollection");
  v8 = objc_msgSend(v7, "userInterfaceIdiom");

  if (v8 != (id)3)
  {
    v20 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
    v21 = (void *)objc_opt_self(UIColor);
    v22 = objc_msgSend(v21, "whiteColor");
    objc_msgSend(v20, "setBackgroundColor:", v22);

    static UIView.Corner.value(_:continuous:)(1, 12.0);
    v23 = type metadata accessor for UIView.Corner(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v5, 0, 1, v23);
    UIView.corner.setter(v5);
    objc_msgSend(v20, "setClipsToBounds:", 1);
    objc_msgSend(v20, "setAlpha:", 0.0);
    v24 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView;
    objc_msgSend(v20, "addSubview:", *(_QWORD *)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView]);
    v25 = *(void **)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeBackgroundView];
    *(_QWORD *)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeBackgroundView] = v20;
    v26 = v20;

    v27 = objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_backgroundView], "contentView");
    v28 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollView;
    objc_msgSend(v27, "addSubview:", *(_QWORD *)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollView]);

    v29 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollContentView;
    objc_msgSend(*(id *)&v2[v28], "addSubview:", *(_QWORD *)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollContentView]);
    objc_msgSend(*(id *)&v2[v29], "addSubview:", v26);
    objc_msgSend(*(id *)&v2[v29], "addSubview:", *(_QWORD *)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_titleLabel]);
    v30 = *(void **)&v2[v29];
    v31 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabelEffectView;
    objc_msgSend(v30, "addSubview:", *(_QWORD *)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabelEffectView]);
    v32 = objc_msgSend(*(id *)&v2[v31], "contentView");
    objc_msgSend(v32, "addSubview:", *(_QWORD *)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabel]);

    v33 = (char *)*(id *)&v2[v24];
    v34 = objc_msgSend(v21, "blackColor");
    v35 = *(void **)&v33[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayColor];
    *(_QWORD *)&v33[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayColor] = v34;
    v36 = v34;

    sub_10034235C();
    v37 = *(id *)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_logoView];
    v19 = objc_msgSend(v21, "blackColor");
    objc_msgSend(v37, "setTintColor:", v19);

    goto LABEL_5;
  }
  v9 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView;
  v10 = *(void **)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView];
  v11 = (void *)objc_opt_self(UIColor);
  v12 = v10;
  v13 = objc_msgSend(v11, "whiteColor");
  v14 = *(void **)&v12[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayColor];
  *(_QWORD *)&v12[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayColor] = v13;
  v15 = v13;

  sub_10034235C();
  v16 = *(id *)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_logoView];
  v17 = objc_msgSend(v11, "whiteColor");
  objc_msgSend(v16, "setTintColor:", v17);

  v18 = objc_msgSend(v2, "view");
  if (v18)
  {
    v19 = v18;
    objc_msgSend(v18, "addSubview:", *(_QWORD *)&v2[v9]);
LABEL_5:

    return;
  }
  __break(1u);
}

Swift::Void __swiftcall QRCodeOverlayViewController.viewDidAppear(_:)(Swift::Bool a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD v18[5];
  uint64_t v19;
  objc_super v20;

  v2 = v1;
  v20.receiver = v2;
  v20.super_class = (Class)type metadata accessor for QRCodeOverlayViewController();
  objc_msgSendSuper2(&v20, "viewDidAppear:", a1);
  v4 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_brightnessManager;
  if (*(_QWORD *)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_brightnessManager])
  {
LABEL_2:
    v5 = (void *)objc_opt_self(UIView);
    v6 = swift_allocObject(&unk_100465440, 24, 7);
    *(_QWORD *)(v6 + 16) = v2;
    v18[4] = sub_100342A00;
    v19 = v6;
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 1107296256;
    v18[2] = sub_1000BED80;
    v18[3] = &unk_100465458;
    v7 = _Block_copy(v18);
    v8 = v19;
    v9 = v2;
    swift_release(v8);
    objc_msgSend(v5, "animateWithDuration:animations:", v7, 0.25);
    _Block_release(v7);
    return;
  }
  v10 = objc_msgSend(v2, "view");
  if (v10)
  {
    v11 = v10;
    v12 = objc_msgSend(v10, "window");

    if (v12)
    {
      v13 = objc_msgSend(v12, "windowScene");

      if (v13)
      {
        v14 = type metadata accessor for BrightnessManager();
        swift_allocObject(v14, 64, 7);
        v15 = v13;
        v16 = BrightnessManager.init(windowScene:)(v15);
        v17 = *(_QWORD *)&v2[v4];
        *(_QWORD *)&v2[v4] = v16;

        swift_release(v17);
      }
    }
    goto LABEL_2;
  }
  __break(1u);
}

double sub_100340AD4(uint64_t a1)
{
  uint64_t v2;
  id v3;
  double result;
  uint64_t v5;

  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView), "setAlpha:", 1.0);
  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeBackgroundView), "setAlpha:", 1.0);
  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_titleLabel), "setAlpha:", 1.0);
  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabel), "setAlpha:", 1.0);
  v2 = qword_100498CA0;
  v3 = *(id *)(a1 + OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_backgroundView);
  if (v2 != -1)
    swift_once(&qword_100498CA0, sub_10033FA18);
  objc_msgSend(v3, "setEffect:", qword_1004A3EE8);

  v5 = *(_QWORD *)(a1 + OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_brightnessManager);
  if (v5)
  {
    swift_retain(*(_QWORD *)(a1 + OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_brightnessManager));
    BrightnessManager.increaseBrightnessIfNeeded()();
    *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  }
  return result;
}

Swift::Void __swiftcall QRCodeOverlayViewController.viewDidLayoutSubviews()()
{
  char *v0;
  char *v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  __int128 v16;
  double v17;
  double Width;
  double Height;
  double v20;
  double v21;
  id v22;
  double v23;
  id v24;
  id v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  __int128 v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  id v45;
  double v46;
  double v47;
  double v48;
  id v49;
  void *v50;
  double v51;
  double v52;
  id v53;
  void *v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  uint64_t v63;
  double v64;
  double v65;
  double v66;
  uint64_t v67;
  double v68;
  double v69;
  double v70;
  double v71;
  double v72;
  double v73;
  double v74;
  double v75;
  uint64_t v76;
  double v77;
  void *v78;
  id v79;
  id v80;
  uint64_t v81;
  double v82;
  double v83;
  double v84;
  double v85;
  double v86;
  double v87;
  double v88;
  double v89;
  double v90;
  uint64_t v91;
  CGFloat v92;
  double v93;
  double v94;
  double v95;
  CGFloat v96;
  double v97;
  double v98;
  uint64_t v99;
  void *v100;
  void *v101;
  id v102;
  id v103;
  double v104;
  double v105;
  double v106;
  double v107;
  double v108;
  double v109;
  double v110;
  double v111;
  void *v112;
  double v113;
  void *v114;
  id v115;
  double v116;
  double v117;
  double v118;
  double v119;
  double v120;
  double v121;
  double v122;
  double v123;
  id v124;
  double v125;
  double v126;
  id v127;
  double MinY;
  id v129;
  double v130;
  double v131;
  double v132;
  double v133;
  double v134;
  double v135;
  double v136;
  double v137;
  CGFloat v138;
  CGFloat v139;
  uint64_t v140;
  id v141;
  double v142;
  id v143;
  double v144;
  double v145;
  double v146;
  double v147;
  double v148;
  double v149;
  double v150;
  double v151;
  void *v152;
  id v153;
  id v154;
  void *v155;
  double v156;
  double v157;
  double v158;
  double v159;
  double v160;
  double v161;
  double v162;
  double v163;
  char *v164;
  uint64_t v165;
  double v166;
  id v167;
  double v168;
  double v169;
  double v170;
  double v171;
  double v172;
  double v173;
  double v174;
  double v175;
  uint64_t v176;
  CGFloat b;
  CGFloat a;
  CGFloat c;
  CGFloat d;
  CGFloat ty;
  CGFloat tx;
  __int128 v183;
  uint64_t v184;
  uint64_t inited;
  void *v186;
  double v187;
  CGFloat v188;
  double v189;
  CGFloat v190;
  double v191;
  CGFloat v192;
  double v193;
  CGFloat v194;
  CGFloat v195;
  CGFloat v196;
  CGFloat v197;
  CGFloat v198;
  CGMutablePathRef v199;
  uint64_t v200;
  void *v201;
  void *v202;
  id v203;
  double v204;
  double v205;
  double v206;
  double v207;
  double v208;
  double v209;
  CGRect recta;
  CGAffineTransform v211;
  objc_super v212;
  _OWORD v213[2];
  uint64_t v214;
  __int128 v215;
  __int128 v216;
  uint64_t v217;
  CGPoint v218;
  CGPoint v219;
  CGPoint v220;
  CGPoint v221;
  CGPoint v222;
  CGPoint v223;
  CGPoint v224;
  CGPoint v225;
  CGPoint v226;
  CGPoint v227;
  CGPoint v228;
  CGPoint v229;
  CGRect v230;
  CGRect v231;
  CGRect v232;
  CGRect v233;
  CGRect v234;
  CGRect v235;
  CGRect v236;
  CGRect v237;
  CGRect v238;
  CGRect v239;

  v1 = v0;
  v212.receiver = v0;
  v212.super_class = (Class)type metadata accessor for QRCodeOverlayViewController();
  objc_msgSendSuper2(&v212, "viewDidLayoutSubviews");
  v2 = objc_msgSend(v0, "traitCollection");
  v3 = objc_msgSend(v2, "userInterfaceIdiom");

  v4 = objc_msgSend(v1, "view");
  v5 = v4;
  if (v3 == (id)3)
  {
    if (!v4)
    {
LABEL_52:
      __break(1u);
      goto LABEL_53;
    }
    v6 = objc_msgSend(v4, "safeAreaLayoutGuide");

    objc_msgSend(v6, "layoutFrame");
    v8 = v7;
    v10 = v9;
    v12 = v11;
    v14 = v13;

    if (qword_100498C60 != -1)
      swift_once(&qword_100498C60, sub_10033F918);
    v15 = *(double *)&qword_1004A3EA8;
    v16 = *(_OWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCode + 16];
    v215 = *(_OWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCode];
    v216 = v16;
    v217 = *(_QWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCode + 32];
    sub_1003028F8(&v215);
    if (qword_100498C78 != -1)
      swift_once(&qword_100498C78, sub_10033F978);
    v17 = *(double *)&qword_1004A3EC0;
    v230.origin.x = v8;
    v230.origin.y = v10;
    v230.size.width = v12;
    v230.size.height = v14;
    Width = CGRectGetWidth(v230);
    v231.origin.x = v8;
    v231.origin.y = v10;
    v231.size.width = v12;
    v231.size.height = v14;
    Height = CGRectGetHeight(v231);
    if (Height >= Width)
      Height = Width;
    v20 = Height - (v15 + v15);
    if (v20 >= v17)
      v21 = v17;
    else
      v21 = v20;
    v22 = objc_msgSend(v1, "traitCollection");
    objc_msgSend(v22, "displayScale");

    v23 = QRCode.dotAdjustedWidth(with:scale:)(v21);
    sub_10034295C(&v215);
    v24 = *(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView];
    v25 = objc_msgSend(v1, "traitCollection");
    objc_msgSend(v25, "displayScale");
    v27 = v26;

    v28 = CGRect.centeringAlong(axes:bounds:scale:)(3, v8, v10, v12, v14, v27, 0.0, 0.0, v23, v23);
  }
  else
  {
    if (!v4)
    {
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
      goto LABEL_55;
    }
    objc_msgSend(v4, "bounds");
    v30 = v29;
    v32 = v31;
    v34 = v33;
    v36 = v35;

    if (qword_100498C68 != -1)
      swift_once(&qword_100498C68, sub_10033F938);
    v37 = *(double *)&qword_1004A3EB0;
    if (qword_100498C70 != -1)
      swift_once(&qword_100498C70, sub_10033F958);
    v38 = v37 + *(double *)&qword_1004A3EB8;
    v39 = *(_OWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCode + 16];
    v215 = *(_OWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCode];
    v216 = v39;
    v217 = *(_QWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCode + 32];
    sub_1003028F8(&v215);
    if (qword_100498C78 != -1)
      swift_once(&qword_100498C78, sub_10033F978);
    v40 = *(double *)&qword_1004A3EC0;
    v232.origin.x = v30;
    v232.origin.y = v32;
    v232.size.width = v34;
    v232.size.height = v36;
    v41 = CGRectGetWidth(v232);
    v233.origin.x = v30;
    v233.origin.y = v32;
    v233.size.width = v34;
    v233.size.height = v36;
    v42 = CGRectGetHeight(v233);
    if (v42 >= v41)
      v42 = v41;
    v43 = v42 - (v38 + v38);
    if (v43 >= v40)
      v44 = v40;
    else
      v44 = v43;
    v45 = objc_msgSend(v1, "traitCollection");
    objc_msgSend(v45, "displayScale");

    v46 = QRCode.dotAdjustedWidth(with:scale:)(v44);
    sub_10034295C(&v215);
    v47 = *(double *)&qword_1004A3EB8;
    v234.origin.x = v30;
    v234.origin.y = v32;
    v234.size.width = v34;
    v234.size.height = v36;
    v48 = CGRectGetWidth(v234);
    v49 = objc_msgSend(v1, "view");
    if (!v49)
      goto LABEL_54;
    v50 = v49;
    objc_msgSend(v49, "safeAreaInsets");
    v52 = v51;

    v53 = objc_msgSend(v1, "view");
    if (!v53)
    {
LABEL_55:
      __break(1u);
      return;
    }
    v54 = v53;
    v209 = v46;
    v55 = v46 + v47 + v47;
    objc_msgSend(v53, "safeAreaInsets");

    v56 = sub_10019431C(v30, v32, v34, v36, v52, (v48 - v55) * 0.5);
    v58 = v57;
    v60 = v59;
    v62 = v61;
    v63 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_titleLabel;
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_titleLabel], "sizeThatFits:", v59, v61);
    v205 = v64;
    v66 = v65;
    v67 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabel;
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabel], "sizeThatFits:", v60, v62);
    v208 = v68;
    v70 = v69;
    if (qword_100498C88 != -1)
      swift_once(&qword_100498C88, sub_10033F9B8);
    v206 = v66;
    v71 = v66 + v55 + *(double *)&qword_1004A3ED0;
    if (qword_100498C90 != -1)
      swift_once(&qword_100498C90, sub_10033F9D8);
    v207 = v70;
    v72 = v70 + v71 + *(double *)&qword_1004A3ED8;
    if (qword_100498C98 != -1)
      swift_once(&qword_100498C98, sub_10033F9F8);
    v73 = *(double *)&qword_1004A3EE0;
    v74 = v72 + v73 + v73;
    v235.origin.x = v56;
    v235.origin.y = v58;
    v235.size.width = v60;
    v235.size.height = v62;
    v75 = CGRectGetWidth(v235);
    v76 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollView;
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollView], "setFrame:", v56, v58, v60, v62);
    objc_msgSend(*(id *)&v1[v76], "setContentSize:", v75, v74);
    v236.origin.x = v56;
    v236.origin.y = v58;
    v236.size.width = v60;
    v236.size.height = v62;
    v77 = CGRectGetHeight(v236);
    v78 = *(void **)&v1[v76];
    v79 = *(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollContentView];
    v80 = v78;
    if (v77 >= v74)
    {
      v82 = 0.0;
      v81 = 3;
    }
    else
    {
      v81 = 1;
      v82 = v73;
    }
    CGRect.centeringAlong(axes:in:)(v81, 0.0, v82, v75, v74);
    v84 = v83;
    v86 = v85;
    v88 = v87;
    v90 = v89;

    objc_msgSend(v79, "setFrame:", v84, v86, v88, v90);
    v91 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollContentView;
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollContentView], "bounds");
    recta.origin.x = v92;
    v94 = v93;
    v96 = v95;
    v98 = v97;
    v99 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeBackgroundView;
    v100 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeBackgroundView];
    if (v100)
    {
      v101 = *(void **)&v1[v91];
      v102 = v100;
      v103 = v101;
      CGRect.centeringAlong(axes:in:)(1, 0.0, 0.0, v55, v55);
      v105 = v104;
      v107 = v106;
      v109 = v108;
      v111 = v110;

      objc_msgSend(v102, "setFrame:", v105, v107, v109, v111);
      v112 = *(void **)&v1[v99];
    }
    else
    {
      v112 = 0;
    }
    v113 = v94 + v55 + *(double *)&qword_1004A3ED0;
    v114 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView];
    v204 = v98 - (v55 + *(double *)&qword_1004A3ED0);
    v115 = v114;
    if (v112)
    {
      objc_msgSend(v112, "bounds");
      v117 = v116;
      v119 = v118;
      v121 = v120;
      v123 = v122;
    }
    else
    {
      v121 = 0.0;
      v123 = 0.0;
      v117 = 0.0;
      v119 = 0.0;
    }
    v124 = objc_msgSend(v1, "traitCollection");
    objc_msgSend(v124, "displayScale");
    v126 = v125;

    objc_msgSend(v114, "setFrame:", CGRect.centeringAlong(axes:bounds:scale:)(3, v117, v119, v121, v123, v126, 0.0, 0.0, v209, v209));
    v127 = *(id *)&v1[v63];
    v237.origin.x = recta.origin.x;
    v237.origin.y = v113;
    v237.size.width = v96;
    v237.size.height = v204;
    MinY = CGRectGetMinY(v237);
    v129 = *(id *)&v1[v91];
    CGRect.centeringAlong(axes:in:)(1, 0.0, MinY, v205, v206);
    v131 = v130;
    v133 = v132;
    v135 = v134;
    v137 = v136;

    objc_msgSend(v127, "setFrame:", v131, v133, v135, v137);
    v138 = v204 - (v206 + *(double *)&qword_1004A3ED8);
    v139 = v113 + v206 + *(double *)&qword_1004A3ED8;
    v140 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabelEffectView;
    v141 = *(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabelEffectView];
    v238.origin.x = recta.origin.x;
    v238.origin.y = v139;
    v238.size.width = v96;
    v238.size.height = v138;
    v142 = CGRectGetMinY(v238);
    v143 = *(id *)&v1[v91];
    CGRect.centeringAlong(axes:in:)(1, 0.0, v142, v208, v207);
    v145 = v144;
    v147 = v146;
    v149 = v148;
    v151 = v150;

    objc_msgSend(v141, "setFrame:", v145, v147, v149, v151);
    v152 = *(void **)&v1[v140];
    v24 = *(id *)&v1[v67];
    objc_msgSend(v152, "bounds");
  }
  objc_msgSend(v24, "setFrame:", v28);

  v153 = *(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_backgroundView];
  v154 = objc_msgSend(v1, "view");
  if (!v154)
  {
    __break(1u);
    goto LABEL_52;
  }
  v155 = v154;
  objc_msgSend(v154, "bounds");
  v157 = v156;
  v159 = v158;
  v161 = v160;
  v163 = v162;

  objc_msgSend(v153, "setFrame:", v157, v159, v161, v163);
  v164 = &v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCode];
  if (*(_QWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCode + 32] != 76)
  {
    v165 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView;
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView], "frame");
    v166 = CGRectGetWidth(v239) * 0.3;
    if (qword_100498C80 != -1)
      swift_once(&qword_100498C80, sub_10033F998);
    if (*(double *)&qword_1004A3EC8 < v166)
      v166 = *(double *)&qword_1004A3EC8;
    v167 = *(id *)&v1[v165];
    CGRect.centeringAlong(axes:in:)(3, 0.0, 0.0, v166, v166);
    v169 = v168;
    v171 = v170;
    v173 = v172;
    v175 = v174;

    v176 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_logoView;
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_logoView], "setFrame:", v169, v171, v173, v175);
    CGAffineTransformMakeScale(&v211, v166 / *(double *)&qword_1004A3EC8, v166 / *(double *)&qword_1004A3EC8);
    a = v211.a;
    b = v211.b;
    c = v211.c;
    d = v211.d;
    tx = v211.tx;
    ty = v211.ty;
    v183 = *((_OWORD *)v164 + 1);
    v213[0] = *(_OWORD *)v164;
    v213[1] = v183;
    v214 = *((_QWORD *)v164 + 4);
    v184 = sub_100005574(&qword_1004A08F0);
    inited = swift_initStackObject(v184, &recta.origin.y);
    *(_OWORD *)(inited + 16) = xmmword_1003954B0;
    v211.a = a;
    v211.b = b;
    v211.c = c;
    v211.d = d;
    v211.tx = tx;
    v211.ty = ty;
    v218.x = 12.0;
    v218.y = 15.0;
    *(CGPoint *)(inited + 32) = CGPointApplyAffineTransform(v218, &v211);
    v211.a = a;
    v211.b = b;
    v211.c = c;
    v211.d = d;
    v211.tx = tx;
    v211.ty = ty;
    v219.x = 12.0;
    v219.y = 6.0;
    *(CGPoint *)(inited + 48) = CGPointApplyAffineTransform(v219, &v211);
    v211.a = a;
    v211.b = b;
    v211.c = c;
    v211.d = d;
    v211.tx = tx;
    v211.ty = ty;
    v220.y = 6.0;
    v220.x = 36.0;
    *(CGPoint *)(inited + 64) = CGPointApplyAffineTransform(v220, &v211);
    v211.a = a;
    v211.b = b;
    v211.c = c;
    v211.d = d;
    v211.tx = tx;
    v211.ty = ty;
    v221.y = 0.0;
    v221.x = 36.0;
    *(CGPoint *)(inited + 80) = CGPointApplyAffineTransform(v221, &v211);
    v211.a = a;
    v211.b = b;
    v211.c = c;
    v211.d = d;
    v211.tx = tx;
    v211.ty = ty;
    v222.y = 0.0;
    v222.x = 85.0;
    *(CGPoint *)(inited + 96) = CGPointApplyAffineTransform(v222, &v211);
    v211.a = a;
    v211.b = b;
    v211.c = c;
    v211.d = d;
    v211.tx = tx;
    v211.ty = ty;
    v223.x = 85.0;
    v223.y = 90.0;
    *(CGPoint *)(inited + 112) = CGPointApplyAffineTransform(v223, &v211);
    v211.a = a;
    v211.b = b;
    v211.c = c;
    v211.d = d;
    v211.tx = tx;
    v211.ty = ty;
    v224.x = 36.0;
    v224.y = 90.0;
    *(CGPoint *)(inited + 128) = CGPointApplyAffineTransform(v224, &v211);
    v211.a = a;
    v211.b = b;
    v211.c = c;
    v211.d = d;
    v211.tx = tx;
    v211.ty = ty;
    v225.x = 36.0;
    v225.y = 95.0;
    *(CGPoint *)(inited + 144) = CGPointApplyAffineTransform(v225, &v211);
    v211.a = a;
    v211.b = b;
    v211.c = c;
    v211.d = d;
    v211.tx = tx;
    v211.ty = ty;
    v226.x = 0.0;
    v226.y = 95.0;
    *(CGPoint *)(inited + 160) = CGPointApplyAffineTransform(v226, &v211);
    v211.a = a;
    v211.b = b;
    v211.c = c;
    v211.d = d;
    v211.tx = tx;
    v211.ty = ty;
    v227.x = 0.0;
    v227.y = 57.0;
    *(CGPoint *)(inited + 176) = CGPointApplyAffineTransform(v227, &v211);
    v211.a = a;
    v211.b = b;
    v211.c = c;
    v211.d = d;
    v211.tx = tx;
    v211.ty = ty;
    v228.x = 12.0;
    v228.y = 57.0;
    *(CGPoint *)(inited + 192) = CGPointApplyAffineTransform(v228, &v211);
    v211.a = a;
    v211.b = b;
    v211.c = c;
    v211.d = d;
    v211.tx = tx;
    v211.ty = ty;
    v229.x = 12.0;
    v229.y = 15.0;
    *(CGPoint *)(inited + 208) = CGPointApplyAffineTransform(v229, &v211);
    v186 = *(void **)&v1[v176];
    sub_1003028F8(v213);
    objc_msgSend(v186, "frame");
    v188 = v187;
    v190 = v189;
    v192 = v191;
    v194 = v193;
    objc_msgSend(*(id *)&v1[v165], "bounds");
    v199 = QRCode.dotAlignedPath(with:in:imageBounds:)(inited, v188, v190, v192, v194, v195, v196, v197, v198);
    swift_setDeallocating(inited);
    sub_10034295C(v213);
    v200 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_destOutLayer;
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_destOutLayer], "setPath:", v199);
    v201 = *(void **)&v1[v200];
    v202 = *(void **)&v1[v165];
    v203 = v201;
    objc_msgSend(v202, "bounds");
    objc_msgSend(v203, "setFrame:");

  }
}

Swift::Void __swiftcall QRCodeOverlayViewController.dismissAnimated()()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  void **v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;

  v1 = (void *)objc_opt_self(UIView);
  v2 = swift_allocObject(&unk_100465490, 24, 7);
  *(_QWORD *)(v2 + 16) = v0;
  v14 = sub_100342A20;
  v15 = v2;
  v10 = _NSConcreteStackBlock;
  v11 = 1107296256;
  v12 = sub_1000BED80;
  v13 = &unk_1004654A8;
  v3 = _Block_copy(&v10);
  v4 = v15;
  v5 = v0;
  swift_release(v4);
  v6 = swift_allocObject(&unk_1004654E0, 24, 7);
  *(_QWORD *)(v6 + 16) = v5;
  v14 = sub_100342A4C;
  v15 = v6;
  v10 = _NSConcreteStackBlock;
  v11 = 1107296256;
  v12 = sub_100204BB4;
  v13 = &unk_1004654F8;
  v7 = _Block_copy(&v10);
  v8 = v15;
  v9 = v5;
  swift_release(v8);
  objc_msgSend(v1, "animateWithDuration:animations:completion:", v3, v7, 0.25);
  _Block_release(v7);
  _Block_release(v3);
}

double sub_100341B78(uint64_t a1)
{
  double result;
  uint64_t v3;

  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView), "setAlpha:", 0.0);
  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeBackgroundView), "setAlpha:", 0.0);
  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_titleLabel), "setAlpha:", 0.0);
  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabel), "setAlpha:", 0.0);
  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_backgroundView), "setEffect:", 0);
  v3 = *(_QWORD *)(a1 + OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_brightnessManager);
  if (v3)
  {
    swift_retain(*(_QWORD *)(a1 + OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_brightnessManager));
    BrightnessManager.resetBrightnessToSystemDefault()();
    *(_QWORD *)&result = swift_release(v3).n128_u64[0];
  }
  return result;
}

void QRCodeOverlayViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer("MusicCoreUI.QRCodeOverlayViewController", 39, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

id QRCodeOverlayViewController.__deallocating_deinit()
{
  return sub_10018E6F4(type metadata accessor for QRCodeOverlayViewController);
}

char *sub_100341DC0(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  uint64_t v10;
  id v11;
  char *v12;
  id v13;
  id v14;
  uint64_t v15;
  objc_class *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  Class isa;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  _QWORD v43[4];
  objc_super v44;

  v5 = v4;
  *(_QWORD *)&v4[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_image] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayColor] = 0;
  v10 = OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_imageView;
  v11 = objc_allocWithZone((Class)UIImageView);
  v12 = v5;
  v13 = objc_msgSend(v11, "init");
  v14 = UIView.forAutolayout.getter();

  *(_QWORD *)&v5[v10] = v14;
  v15 = OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayLayer;
  *(_QWORD *)&v12[v15] = objc_msgSend(objc_allocWithZone((Class)CALayer), "init");

  v16 = (objc_class *)type metadata accessor for QRCodeOverlayViewController.ContainerView();
  v44.receiver = v12;
  v44.super_class = v16;
  v17 = (char *)objc_msgSendSuper2(&v44, "initWithFrame:", a1, a2, a3, a4);
  v18 = OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_imageView;
  v19 = *(_QWORD *)&v17[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_imageView];
  v20 = v17;
  objc_msgSend(v20, "addSubview:", v19);
  v21 = (void *)objc_opt_self(NSLayoutConstraint);
  v22 = sub_100005574(&qword_100499F50);
  v23 = swift_allocObject(v22, 64, 7);
  *(_OWORD *)(v23 + 16) = xmmword_100384C00;
  v24 = objc_msgSend(*(id *)&v17[v18], "leadingAnchor");
  v25 = objc_msgSend(v20, "leadingAnchor");
  v26 = objc_msgSend(v24, "constraintEqualToAnchor:", v25);

  *(_QWORD *)(v23 + 32) = v26;
  v27 = objc_msgSend(*(id *)&v17[v18], "trailingAnchor");
  v28 = objc_msgSend(v20, "trailingAnchor");
  v29 = objc_msgSend(v27, "constraintEqualToAnchor:", v28);

  *(_QWORD *)(v23 + 40) = v29;
  v30 = objc_msgSend(*(id *)&v17[v18], "topAnchor");
  v31 = objc_msgSend(v20, "topAnchor");
  v32 = objc_msgSend(v30, "constraintEqualToAnchor:", v31);

  *(_QWORD *)(v23 + 48) = v32;
  v33 = objc_msgSend(*(id *)&v17[v18], "bottomAnchor");
  v34 = objc_msgSend(v20, "bottomAnchor");
  v35 = objc_msgSend(v33, "constraintEqualToAnchor:", v34);

  *(_QWORD *)(v23 + 56) = v35;
  specialized Array._endMutation()(v36);
  sub_1000087DC(0, &qword_10049AC18, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v21, "activateConstraints:", isa, v23);

  sub_1000087DC(0, &qword_100499968, UITraitCollection_ptr);
  v38 = v20;
  v39 = static UITraitCollection.systemTraitsAffectingColorAppearance.getter();
  v43[3] = v16;
  v43[0] = v38;
  v40 = v38;
  v41 = UIView.registerForTraitChanges(_:target:action:)(v39, v43, "updateColor");
  swift_unknownObjectRelease(v41);
  swift_bridgeObjectRelease();

  sub_10000682C(v43);
  return v40;
}

Swift::Void __swiftcall QRCodeOverlayViewController.ContainerView.layoutSubviews()()
{
  void *v0;
  uint64_t v1;
  id v2;
  objc_super v3;

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for QRCodeOverlayViewController.ContainerView();
  objc_msgSendSuper2(&v3, "layoutSubviews");
  sub_1000087DC(0, &qword_1004A08F8, CATransaction_ptr);
  v1 = swift_allocObject(&unk_100465530, 24, 7);
  *(_QWORD *)(v1 + 16) = v0;
  v2 = v0;
  static CATransaction.performWithoutAnimation(_:)((void (*)(id))sub_100342A64);
  swift_release(v1);
}

void sub_10034224C(uint64_t a1)
{
  void *v1;
  id v2;

  v1 = *(void **)(a1 + OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_imageView);
  v2 = *(id *)(a1 + OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayLayer);
  objc_msgSend(v1, "bounds");
  objc_msgSend(v2, "setFrame:");

}

void sub_10034235C()
{
  char *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;

  v1 = *(void **)&v0[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayColor];
  if (v1)
  {
    v2 = OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayLayer;
    v3 = *(void **)&v0[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayLayer];
    v4 = kCAFilterSourceIn;
    v12 = v1;
    objc_msgSend(v3, "setCompositingFilter:", v4);
    v5 = *(id *)&v0[v2];
    v6 = objc_msgSend(v0, "traitCollection");
    v7 = objc_msgSend(v12, "resolvedColorWithTraitCollection:", v6);

    v8 = objc_msgSend(v7, "CGColor");
    objc_msgSend(v5, "setBackgroundColor:", v8);

    v9 = objc_msgSend(*(id *)&v0[v2], "superlayer");
    if (!v9)
    {
      v10 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_imageView], "layer");
      v11 = *(id *)&v0[v2];
      objc_msgSend(v10, "addSublayer:", v11);

    }
  }
  else
  {
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayLayer], "removeFromSuperlayer");
  }
}

id QRCodeOverlayViewController.ContainerView.__deallocating_deinit()
{
  return sub_10018E6F4(type metadata accessor for QRCodeOverlayViewController.ContainerView);
}

uint64_t QRCodeOverlayViewController.ImageViewRepresentable.init(image:)()
{
  return swift_getKeyPath(&unk_10039F8D0);
}

char *QRCodeOverlayViewController.ImageViewRepresentable.makeUIView(context:)(uint64_t a1, uint64_t a2, char a3, void *a4)
{
  char *v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  __n128 v12;
  void *v13;
  void *v14;
  id v15;

  type metadata accessor for QRCodeOverlayViewController.ContainerView();
  v7 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  v8 = OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_image;
  v9 = *(void **)&v7[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_image];
  *(_QWORD *)&v7[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_image] = a4;
  v10 = a4;

  objc_msgSend(*(id *)&v7[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_imageView], "setImage:", *(_QWORD *)&v7[v8]);
  Border.color.getter(a2, a3 & 1);
  v11 = sub_1002BE98C(a2, a3 & 1);
  j__swift_release(a2);
  if (v11)
  {
    sub_1000087DC(0, (unint64_t *)&qword_1004A1510, UIColor_ptr);
    v12 = swift_retain(v11);
    v13 = (void *)UIColor.init(_:)(v12);
    v14 = *(void **)&v7[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayColor];
    *(_QWORD *)&v7[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayColor] = v13;
    v15 = v13;

    sub_10034235C();
    swift_release(v11);

  }
  return v7;
}

void QRCodeOverlayViewController.ImageViewRepresentable.updateUIView(_:context:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  void *v14;
  void *v15;
  id v16;

  v8 = OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_image;
  v9 = *(void **)(a1 + OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_image);
  *(_QWORD *)(a1 + OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_image) = a5;
  v10 = a5;

  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_imageView), "setImage:", *(_QWORD *)(a1 + v8));
  v11 = a4 & 1;
  Border.color.getter(a3, v11);
  v12 = sub_1002BE98C(a3, v11);
  j__swift_release(a3);
  if (v12)
  {
    sub_1000087DC(0, (unint64_t *)&qword_1004A1510, UIColor_ptr);
    v13 = swift_retain(v12);
    v14 = (void *)UIColor.init(_:)(v13);
    v15 = *(void **)(a1 + OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayColor);
    *(_QWORD *)(a1 + OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayColor) = v14;
    v16 = v14;

    sub_10034235C();
    swift_release(v12);

  }
}

char *sub_100342800(uint64_t a1)
{
  uint64_t v1;

  return QRCodeOverlayViewController.ImageViewRepresentable.makeUIView(context:)(a1, *(_QWORD *)v1, *(_BYTE *)(v1 + 8), *(void **)(v1 + 16));
}

void sub_100342818(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  QRCodeOverlayViewController.ImageViewRepresentable.updateUIView(_:context:)(a1, a2, *(_QWORD *)v2, *(_BYTE *)(v2 + 8), *(void **)(v2 + 16));
}

uint64_t sub_100342830(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100342F34();
  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100342880(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100342F34();
  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_1003428D0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100342F34();
  UIViewRepresentable.body.getter(a1, v2);
  __break(1u);
}

uint64_t type metadata accessor for QRCodeOverlayViewController()
{
  return objc_opt_self(_TtC11MusicCoreUI27QRCodeOverlayViewController);
}

void sub_100342914(void *a1)
{
  id v1;
  id v2;

  v1 = objc_msgSend(a1, "view");
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, "setNeedsLayout");

  }
  else
  {
    __break(1u);
  }
}

_QWORD *sub_10034295C(_QWORD *a1)
{
  void *v2;

  v2 = (void *)a1[3];
  sub_1000067E8(a1[1], a1[2]);

  return a1;
}

uint64_t sub_10034298C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005574((uint64_t *)&unk_10049EA40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003429D4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1003429F8(uint64_t a1)
{
  uint64_t v1;

  sub_100340460(a1, v1);
}

double sub_100342A00()
{
  uint64_t v0;

  return sub_100340AD4(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100342A08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100342A18(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

double sub_100342A20()
{
  uint64_t v0;

  return sub_100341B78(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100342A28()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_100342A4C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "dismissViewControllerAnimated:completion:", 0, 0);
}

void sub_100342A64()
{
  uint64_t v0;

  sub_10034224C(*(_QWORD *)(v0 + 16));
}

unint64_t sub_100342A74()
{
  unint64_t result;

  result = qword_1004A0900;
  if (!qword_1004A0900)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for QRCodeOverlayViewController.ImageViewRepresentable, &type metadata for QRCodeOverlayViewController.ImageViewRepresentable);
    atomic_store(result, (unint64_t *)&qword_1004A0900);
  }
  return result;
}

void destroy for QRCodeOverlayViewController.ImageViewRepresentable(uint64_t a1)
{
  j__swift_release(*(_QWORD *)a1);

}

uint64_t _s11MusicCoreUI27QRCodeOverlayViewControllerC22ImageViewRepresentableVwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  unsigned __int8 v5;
  void *v6;
  id v7;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  Border.color.getter(*a2, v5);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  v6 = (void *)a2[2];
  *(_QWORD *)(a1 + 16) = v6;
  v7 = v6;
  return a1;
}

uint64_t *assignWithCopy for QRCodeOverlayViewController.ImageViewRepresentable(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  Border.color.getter(*a2, v5);
  v6 = *a1;
  *a1 = v4;
  *((_BYTE *)a1 + 8) = v5;
  j__swift_release(v6);
  v7 = (void *)a2[2];
  v8 = (void *)a1[2];
  a1[2] = (uint64_t)v7;
  v9 = v7;

  return a1;
}

uint64_t *assignWithTake for QRCodeOverlayViewController.ImageViewRepresentable(uint64_t *a1, uint64_t *a2)
{
  char v4;
  uint64_t v5;
  void *v6;

  v4 = *((_BYTE *)a2 + 8);
  v5 = *a1;
  *a1 = *a2;
  *((_BYTE *)a1 + 8) = v4;
  j__swift_release(v5);
  v6 = (void *)a1[2];
  a1[2] = a2[2];

  return a1;
}

ValueMetadata *type metadata accessor for QRCodeOverlayViewController.ImageViewRepresentable()
{
  return &type metadata for QRCodeOverlayViewController.ImageViewRepresentable;
}

void sub_100342C04()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSString v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_backgroundView;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "init");
  v2 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView;
  type metadata accessor for QRCodeOverlayViewController.ContainerView();
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), "init");
  v3 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_destOutLayer;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
  v4 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_logoView;
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v5);

  v7 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v6);
  *(_QWORD *)&v0[v4] = v7;
  v8 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_titleLabel;
  *(_QWORD *)&v0[v8] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v9 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabelEffectView;
  if (qword_100498CA0 != -1)
    swift_once(&qword_100498CA0, sub_10033FA18);
  v10 = objc_msgSend((id)objc_opt_self(UIVibrancyEffect), "effectForBlurEffect:", qword_1004A3EE8);
  v11 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v10);

  *(_QWORD *)&v0[v9] = v11;
  v12 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabel;
  *(_QWORD *)&v0[v12] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeBackgroundView] = 0;
  v13 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollView;
  *(_QWORD *)&v0[v13] = objc_msgSend(objc_allocWithZone((Class)UIScrollView), "init");
  v14 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollContentView;
  *(_QWORD *)&v0[v14] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_brightnessManager] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001003B2590, "MusicCoreUI/QRCodeOverlayViewController.swift", 45, 2, 64, 0);
  __break(1u);
}

void sub_100342E5C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  id v4;
  uint64_t v5;

  v1 = v0;
  *(_QWORD *)&v0[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_image] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayColor] = 0;
  v2 = OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_imageView;
  v3 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v4 = UIView.forAutolayout.getter();

  *(_QWORD *)&v1[v2] = v4;
  v5 = OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayLayer;
  *(_QWORD *)&v1[v5] = objc_msgSend(objc_allocWithZone((Class)CALayer), "init");

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001003B2590, "MusicCoreUI/QRCodeOverlayViewController.swift", 45, 2, 330, 0);
  __break(1u);
}

unint64_t sub_100342F34()
{
  unint64_t result;

  result = qword_1004A0960;
  if (!qword_1004A0960)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for QRCodeOverlayViewController.ImageViewRepresentable, &type metadata for QRCodeOverlayViewController.ImageViewRepresentable);
    atomic_store(result, (unint64_t *)&qword_1004A0960);
  }
  return result;
}

uint64_t Radiosity.ViewModifier.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _OWORD *v2;
  _OWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  char *v22;
  __int128 v23;
  uint64_t v24;
  _OWORD *v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _QWORD *v30;
  uint64_t v32;
  char v33;
  _OWORD v34[2];
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;

  v3 = v2;
  v6 = sub_100005574(&qword_1004A0968);
  __chkstk_darwin();
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34[0] = v2[8];
  v9 = sub_100005574(&qword_10049C5C8);
  State.wrappedValue.getter(&v33, v9);
  v10 = v2[5];
  v12 = v2[3];
  v37 = v2[4];
  v11 = v37;
  v38 = v10;
  v13 = v2[5];
  v14 = v2[7];
  v39 = v2[6];
  v15 = v39;
  v40 = v14;
  v16 = v2[1];
  v17 = v2[3];
  v35 = v2[2];
  v18 = v35;
  v36 = v17;
  v19 = *v2;
  v20 = v2[1];
  v8[*(int *)(v6 + 40)] = v33;
  v21 = *v2;
  v34[0] = v19;
  v34[1] = v20;
  v22 = &v8[*(int *)(v6 + 36)];
  *((_OWORD *)v22 + 4) = v11;
  *((_OWORD *)v22 + 5) = v13;
  v23 = v2[7];
  *((_OWORD *)v22 + 6) = v15;
  *((_OWORD *)v22 + 7) = v23;
  *(_OWORD *)v22 = v21;
  *((_OWORD *)v22 + 1) = v16;
  *((_OWORD *)v22 + 2) = v18;
  *((_OWORD *)v22 + 3) = v12;
  v24 = sub_100005574(&qword_1004A0970);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v8, a1, v24);
  v25 = (_OWORD *)swift_allocObject(&unk_1004656B8, 160, 7);
  v26 = v3[7];
  v25[7] = v3[6];
  v25[8] = v26;
  v25[9] = v3[8];
  v27 = v3[3];
  v25[3] = v3[2];
  v25[4] = v27;
  v28 = v3[5];
  v25[5] = v3[4];
  v25[6] = v28;
  v29 = v3[1];
  v25[1] = *v3;
  v25[2] = v29;
  sub_10034314C((uint64_t)v8, a2);
  v30 = (_QWORD *)(a2 + *(int *)(sub_100005574(&qword_1004A0978) + 36));
  *v30 = sub_100343148;
  v30[1] = v25;
  sub_100343194((uint64_t)v34);
  sub_1003431F4((uint64_t)v3);
  return sub_100008758((uint64_t)v8, &qword_1004A0968);
}

uint64_t sub_10034314C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005574(&qword_1004A0968);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100343194(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v2 = *(_QWORD *)(a1 + 72);
  v3 = *(_QWORD *)(a1 + 80);
  v4 = *(_QWORD *)(a1 + 96);
  v5 = *(_QWORD *)(a1 + 112);
  v6 = *(id *)(a1 + 56);
  sub_10003A434(v2, v3);
  swift_retain(v4);
  swift_retain(v5);
  return a1;
}

uint64_t sub_1003431F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  v2 = *(_QWORD *)(a1 + 72);
  v3 = *(_QWORD *)(a1 + 80);
  v4 = *(_QWORD *)(a1 + 96);
  v5 = *(_QWORD *)(a1 + 112);
  v6 = *(_QWORD *)(a1 + 136);
  v7 = *(id *)(a1 + 56);
  sub_10003A434(v2, v3);
  swift_retain(v6);
  swift_retain(v4);
  swift_retain(v5);
  return a1;
}

uint64_t sub_100343260@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  char *v22;
  uint64_t v23;
  _OWORD *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _QWORD *v29;
  uint64_t v31;
  char v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  _OWORD v42[8];

  v5 = sub_100005574(&qword_1004A0968);
  __chkstk_darwin();
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v2[7];
  v8 = v2[8];
  v39 = v2[6];
  v40 = v9;
  v10 = v2[3];
  v35 = v2[2];
  v36 = v10;
  v11 = v2[5];
  v37 = v2[4];
  v38 = v11;
  v12 = v2[1];
  v33 = *v2;
  v34 = v12;
  v41 = v8;
  v42[0] = v8;
  v13 = sub_100005574(&qword_10049C5C8);
  State.wrappedValue.getter(&v32, v13);
  v14 = v37;
  v15 = v38;
  v42[4] = v37;
  v42[5] = v38;
  v16 = v39;
  v17 = v40;
  v42[6] = v39;
  v42[7] = v40;
  v18 = v35;
  v19 = v36;
  v42[2] = v35;
  v42[3] = v36;
  v20 = v33;
  v21 = v34;
  v42[0] = v33;
  v42[1] = v34;
  v7[*(int *)(v5 + 40)] = v32;
  v22 = &v7[*(int *)(v5 + 36)];
  *((_OWORD *)v22 + 4) = v14;
  *((_OWORD *)v22 + 5) = v15;
  *((_OWORD *)v22 + 6) = v16;
  *((_OWORD *)v22 + 7) = v17;
  *(_OWORD *)v22 = v20;
  *((_OWORD *)v22 + 1) = v21;
  *((_OWORD *)v22 + 2) = v18;
  *((_OWORD *)v22 + 3) = v19;
  v23 = sub_100005574(&qword_1004A0970);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v7, a1, v23);
  v24 = (_OWORD *)swift_allocObject(&unk_100465B50, 160, 7);
  v25 = v40;
  v24[7] = v39;
  v24[8] = v25;
  v24[9] = v41;
  v26 = v36;
  v24[3] = v35;
  v24[4] = v26;
  v27 = v38;
  v24[5] = v37;
  v24[6] = v27;
  v28 = v34;
  v24[1] = v33;
  v24[2] = v28;
  sub_10034314C((uint64_t)v7, a2);
  v29 = (_QWORD *)(a2 + *(int *)(sub_100005574(&qword_1004A0978) + 36));
  *v29 = sub_100343148;
  v29[1] = v24;
  sub_100343194((uint64_t)v42);
  sub_1003431F4((uint64_t)&v33);
  return sub_100008758((uint64_t)v7, &qword_1004A0968);
}

id Radiosity.UIView.__allocating_init(content:isRadiosityEnabled:specs:)(void *a1, char a2, _OWORD *a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  return Radiosity.UIView.init(content:isRadiosityEnabled:specs:)(a1, a2, a3);
}

id sub_100343478(uint64_t a1, uint64_t a2)
{
  return sub_10034579C(a2);
}

void sub_100343480(void *a1, uint64_t a2, uint64_t a3)
{
  sub_1003458A8(a1, a3);
}

double sub_100343488(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  return sub_100345990(a5);
}

uint64_t sub_1003434A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_10039FBB8, a3);
  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, WitnessTable);
}

uint64_t sub_100343500(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_10039FBB8, a3);
  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, WitnessTable);
}

void sub_10034355C(uint64_t a1)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_10039FBB8, a1);
  UIViewRepresentable.body.getter(a1, WitnessTable);
  __break(1u);
}

id Radiosity.UIView.content.getter()
{
  uint64_t v0;

  return *(id *)(v0 + direct field offset for Radiosity.UIView.content);
}

void sub_10034359C(char a1)
{
  char *v1;
  int v2;
  char *v3;
  double v4;
  char v5[24];

  v2 = a1 & 1;
  v3 = &v1[direct field offset for Radiosity.UIView.isRadiosityEnabled];
  *(_QWORD *)&v4 = swift_beginAccess(&v1[direct field offset for Radiosity.UIView.isRadiosityEnabled], v5, 0, 0).n128_u64[0];
  if (*v3 != v2)
  {
    if (*v3)
    {
      objc_msgSend(v1, "addSubview:", *(_QWORD *)&v1[qword_1004A0998], v4);
      objc_msgSend(v1, "addSubview:", *(_QWORD *)&v1[qword_1004A09A0]);
    }
    else
    {
      objc_msgSend(*(id *)&v1[qword_1004A0998], "removeFromSuperview", v4);
      objc_msgSend(*(id *)&v1[qword_1004A09A0], "removeFromSuperview");
    }
  }
}

uint64_t Radiosity.UIView.isRadiosityEnabled.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + direct field offset for Radiosity.UIView.isRadiosityEnabled);
  swift_beginAccess(v0 + direct field offset for Radiosity.UIView.isRadiosityEnabled, v3, 0, 0);
  return *v1;
}

void Radiosity.UIView.isRadiosityEnabled.setter(char a1)
{
  uint64_t v1;
  char *v3;
  char v4;
  _BYTE v5[24];

  v3 = (char *)(v1 + direct field offset for Radiosity.UIView.isRadiosityEnabled);
  swift_beginAccess(v1 + direct field offset for Radiosity.UIView.isRadiosityEnabled, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;
  sub_10034359C(v4);
}

void (*Radiosity.UIView.isRadiosityEnabled.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _BYTE *v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = (_BYTE *)(v1 + direct field offset for Radiosity.UIView.isRadiosityEnabled);
  swift_beginAccess(v1 + direct field offset for Radiosity.UIView.isRadiosityEnabled, v3, 0, 0);
  *((_BYTE *)v3 + 32) = *v4;
  return sub_10034375C;
}

void sub_10034375C(uint64_t a1)
{
  void *v1;

  v1 = *(void **)a1;
  Radiosity.UIView.isRadiosityEnabled.setter(*(_BYTE *)(*(_QWORD *)a1 + 32));
  free(v1);
}

void sub_100343788(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  _BYTE v6[24];
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;

  v2 = *(_OWORD *)(a1 + 64);
  v7 = *(_OWORD *)(a1 + 48);
  v8 = v2;
  v9 = *(_QWORD *)(a1 + 80);
  sub_100345684((__int128 *)((char *)&v8 + 8), &v10);
  v3 = v1 + direct field offset for Radiosity.UIView.specs;
  swift_beginAccess(v1 + direct field offset for Radiosity.UIView.specs, v6, 0, 0);
  v4 = *(_QWORD *)(v3 + 72);
  sub_100345684(&v10, &v11);
  if ((_QWORD)v11)
    v5 = v4 == 0;
  else
    v5 = v4 != 0;
  sub_100343F74(v5);
  sub_10034469C();
}

double Radiosity.UIView.specs.getter@<D0>(_OWORD *a1@<X8>)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  double result;
  __int128 v6;
  _OWORD v7[2];
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  sub_1003455C0((uint64_t)v7);
  sub_100343194((uint64_t)v7);
  v2 = v11;
  a1[4] = v10;
  a1[5] = v2;
  v3 = v13;
  a1[6] = v12;
  a1[7] = v3;
  v4 = v7[1];
  *a1 = v7[0];
  a1[1] = v4;
  result = *(double *)&v8;
  v6 = v9;
  a1[2] = v8;
  a1[3] = v6;
  return result;
}

uint64_t Radiosity.UIView.specs.setter(_OWORD *a1)
{
  uint64_t v1;
  _OWORD *v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v13[24];
  _OWORD v14[2];
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _OWORD v21[9];

  v3 = (_OWORD *)(v1 + direct field offset for Radiosity.UIView.specs);
  swift_beginAccess(v1 + direct field offset for Radiosity.UIView.specs, v13, 1, 0);
  v4 = v3[5];
  v17 = v3[4];
  v18 = v4;
  v5 = v3[7];
  v19 = v3[6];
  v6 = v3[1];
  v14[0] = *v3;
  v14[1] = v6;
  v7 = v3[3];
  v15 = v3[2];
  v16 = v7;
  v20 = v5;
  v21[0] = v14[0];
  v21[1] = v6;
  v21[2] = v15;
  v21[3] = v7;
  v21[4] = v17;
  v21[5] = v4;
  v21[6] = v19;
  v21[7] = v5;
  v8 = a1[3];
  v3[2] = a1[2];
  v3[3] = v8;
  v9 = a1[1];
  *v3 = *a1;
  v3[1] = v9;
  v10 = a1[7];
  v3[6] = a1[6];
  v3[7] = v10;
  v11 = a1[5];
  v3[4] = a1[4];
  v3[5] = v11;
  sub_100343194((uint64_t)v14);
  sub_100343194((uint64_t)a1);
  sub_100345624((uint64_t)v21);
  sub_100343788((uint64_t)v14);
  sub_100345624((uint64_t)a1);
  return sub_100345624((uint64_t)v14);
}

void (*Radiosity.UIView.specs.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  __int128 *v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v3 = malloc(0x2A0uLL);
  *a1 = v3;
  v3[83] = v1;
  v4 = (__int128 *)(v1 + direct field offset for Radiosity.UIView.specs);
  swift_beginAccess(v4, v3 + 80, 0, 0);
  v5 = v4[4];
  v6 = v4[5];
  *((_OWORD *)v3 + 4) = v5;
  *((_OWORD *)v3 + 5) = v6;
  v7 = v4[6];
  v8 = v4[7];
  *((_OWORD *)v3 + 6) = v7;
  *((_OWORD *)v3 + 7) = v8;
  v9 = *v4;
  v10 = v4[1];
  *(_OWORD *)v3 = *v4;
  *((_OWORD *)v3 + 1) = v10;
  v11 = v4[2];
  v12 = v4[3];
  *((_OWORD *)v3 + 2) = v11;
  *((_OWORD *)v3 + 3) = v12;
  *((_OWORD *)v3 + 24) = v9;
  *((_OWORD *)v3 + 25) = v10;
  *((_OWORD *)v3 + 26) = v11;
  *((_OWORD *)v3 + 27) = v12;
  *((_OWORD *)v3 + 28) = v5;
  *((_OWORD *)v3 + 29) = v6;
  *((_OWORD *)v3 + 30) = v7;
  *((_OWORD *)v3 + 31) = v8;
  sub_100343194((uint64_t)v3);
  return sub_1003439E0;
}

void sub_1003439E0(uint64_t a1, char a2)
{
  _OWORD *v2;
  _OWORD *v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  v2 = *(_OWORD **)a1;
  v3 = (_OWORD *)(*(_QWORD *)a1 + 384);
  v4 = *(_OWORD *)(*(_QWORD *)a1 + 464);
  if ((a2 & 1) != 0)
  {
    v2[12] = *(_OWORD *)(*(_QWORD *)a1 + 448);
    v2[13] = v4;
    v5 = v3[7];
    v2[14] = v3[6];
    v2[15] = v5;
    v6 = v3[1];
    v2[8] = *v3;
    v2[9] = v6;
    v7 = v3[3];
    v2[10] = v3[2];
    v2[11] = v7;
    sub_100343194((uint64_t)(v2 + 8));
    Radiosity.UIView.specs.setter(v2 + 8);
    v8 = v3[5];
    v2[36] = v3[4];
    v2[37] = v8;
    v9 = v3[7];
    v2[38] = v3[6];
    v2[39] = v9;
    v10 = v3[1];
    v2[32] = *v3;
    v2[33] = v10;
    v11 = v3[3];
    v2[34] = v3[2];
    v2[35] = v11;
    sub_100345624((uint64_t)(v2 + 32));
  }
  else
  {
    v2[20] = *(_OWORD *)(*(_QWORD *)a1 + 448);
    v2[21] = v4;
    v12 = v3[7];
    v2[22] = v3[6];
    v2[23] = v12;
    v13 = v3[1];
    v2[16] = *v3;
    v2[17] = v13;
    v14 = v3[3];
    v2[18] = v3[2];
    v2[19] = v14;
    Radiosity.UIView.specs.setter(v2 + 16);
  }
  free(v2);
}

__int128 *Radiosity.Specs.containerDetailHeaderArtwork.unsafeMutableAddressor()
{
  if (qword_100498CA8 != -1)
    swift_once(&qword_100498CA8, sub_100344FF4);
  return &static Radiosity.Specs.containerDetailHeaderArtwork;
}

id Radiosity.UIView.init(content:isRadiosityEnabled:specs:)(void *a1, char a2, _OWORD *a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  objc_super v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  id v19;
  _QWORD *v20;
  id v21;
  id v22;
  id v23;
  _QWORD *v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  objc_class *v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  objc_super v44[2];
  __int128 v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;

  v4 = v3;
  ObjectType = swift_getObjectType();
  v9 = *v4;
  v10 = swift_isaMask;
  *(_QWORD *)((char *)v4 + direct field offset for Radiosity.UIView.content) = a1;
  v11 = (_OWORD *)((char *)v4 + direct field offset for Radiosity.UIView.specs);
  v12 = (objc_super)a3[3];
  v14 = a3[4];
  v13 = a3[5];
  v11[4] = v14;
  v11[5] = v13;
  v15 = a3[7];
  v11[6] = a3[6];
  v11[7] = v15;
  v16 = a3[1];
  *v11 = *a3;
  v11[1] = v16;
  v17 = a3[3];
  v11[2] = a3[2];
  v11[3] = v17;
  v18 = v10 & v9;
  *((_BYTE *)v4 + direct field offset for Radiosity.UIView.isRadiosityEnabled) = a2;
  v46 = *((_QWORD *)a3 + 10);
  v44[1] = v12;
  v45 = v14;
  sub_100345684((__int128 *)((char *)&v45 + 8), &v47);
  sub_100345684(&v47, &v48);
  if ((_QWORD)v48)
  {
    v19 = objc_allocWithZone((Class)UIView);
    v20 = v4;
    v21 = a1;
    sub_100343194((uint64_t)a3);
    v22 = objc_msgSend(v19, "init");
  }
  else
  {
    v23 = objc_allocWithZone((Class)_UIPortalView);
    v24 = v4;
    v25 = a1;
    sub_100343194((uint64_t)a3);
    v22 = objc_msgSend(v23, "initWithSourceView:", v25);
  }
  v26 = v22;
  *(_QWORD *)((char *)v4 + qword_1004A0998) = v22;
  v27 = objc_allocWithZone((Class)_UIPortalView);
  v28 = v26;
  v29 = objc_msgSend(v27, "initWithSourceView:", a1);
  *(_QWORD *)((char *)v4 + qword_1004A09A0) = v29;
  v30 = v29;

  v33 = (objc_class *)type metadata accessor for Radiosity.UIView(0, *(_QWORD *)(v18 + 80), v31, v32);
  v44[0].receiver = v4;
  v44[0].super_class = v33;
  v34 = -[objc_super initWithFrame:](v44, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v34, "addSubview:", a1);
  if ((a2 & 1) != 0)
  {
    objc_msgSend(v34, "addSubview:", v28);
    objc_msgSend(v34, "addSubview:", v30);
  }
  v35 = a1;
  objc_msgSend(v34, "bounds");
  objc_msgSend(v35, "setFrame:");

  objc_msgSend(v35, "setAutoresizingMask:", 18);
  sub_100343F74(0);
  sub_10034469C();
  v36 = objc_msgSend(v34, "traitCollection");
  v37 = objc_msgSend(v36, "userInterfaceStyle");

  sub_100344B0C((uint64_t)v37);
  v38 = sub_100005574(&qword_10049AED0);
  v39 = swift_allocObject(v38, 48, 7);
  *(_OWORD *)(v39 + 16) = xmmword_100384A80;
  *(_QWORD *)(v39 + 32) = type metadata accessor for UITraitUserInterfaceStyle(0);
  *(_QWORD *)(v39 + 40) = &protocol witness table for UITraitUserInterfaceStyle;
  v40 = swift_allocObject(&unk_1004656E0, 24, 7);
  *(_QWORD *)(v40 + 16) = ObjectType;
  v41 = v34;
  v42 = UIView.registerForTraitChanges<A>(_:handler:)(v39, sub_1003456B0, v40, ObjectType);
  sub_100345624((uint64_t)a3);

  swift_unknownObjectRelease(v42);
  swift_bridgeObjectRelease();
  swift_release(v40);

  return v41;
}

void sub_100343E38()
{
  sub_100345A2C();
}

uint64_t sub_100343E64(uint64_t a1)
{
  void *v1;
  id v3;

  v3 = v1;
  return a1;
}

double sub_100343E7C(void *a1)
{
  id v1;
  double v2;
  double v3;

  v1 = a1;
  Radiosity.UIView.intrinsicContentSize.getter();
  v3 = v2;

  return v3;
}

id Radiosity.UIView.intrinsicContentSize.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + direct field offset for Radiosity.UIView.content), "intrinsicContentSize");
}

Swift::Void __swiftcall Radiosity.UIView.layoutSubviews()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  objc_class *v3;
  objc_super v4;

  v3 = (objc_class *)type metadata accessor for Radiosity.UIView(0, *(_QWORD *)((swift_isaMask & *v2) + 0x50), v0, v1);
  v4.receiver = v2;
  v4.super_class = v3;
  objc_msgSendSuper2(&v4, "layoutSubviews");
  sub_100343F74(0);
  sub_10034469C();
}

void sub_100343F2C(void *a1)
{
  id v1;

  v1 = a1;
  Radiosity.UIView.layoutSubviews()();

}

void sub_100343F60(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + qword_1004A0998);
  *(_QWORD *)(v1 + qword_1004A0998) = a1;

}

void sub_100343F74(char a1)
{
  char *v1;
  char *v2;
  char *v3;
  id v4;
  void *v5;
  id v6;
  char *v7;
  double v8;
  char *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  CGFloat v18;
  CGFloat v19;
  double v20;
  double v21;
  double v22;
  double v23;
  id v24;
  id v25;
  id v26;
  char *v27;
  __n128 v28;
  id v29;
  double *v30;
  id v31;
  char *v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t (*v37)(uint64_t *, double, double, double, double, double);
  double *v38;
  double v39;
  uint64_t *v40;
  void *v41;
  void *v42;
  void *v43;
  id v44;
  char *v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t (*v50)(double, double, double, double, double);
  uint64_t v51;
  id v52;
  double v53;
  double v54;
  double MinX;
  __int128 v56;
  __int128 v57;
  CGAffineTransform v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  CGAffineTransform v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  uint64_t v80;
  _OWORD v81[2];
  __int128 v82;
  uint64_t v83;
  _OWORD v84[2];
  __int128 v85;
  uint64_t v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  char v91[24];
  char v92[24];
  char v93[24];
  char v94[24];
  char v95[24];
  char v96[24];
  char v97[24];
  char v98[24];
  char v99[24];
  CGRect v100;
  CGRect v101;
  CGRect v102;
  CGRect v103;
  CGRect v104;
  CGRect v105;

  v2 = v1;
  if ((a1 & 1) != 0)
  {
    objc_msgSend(*(id *)&v1[qword_1004A0998], "removeFromSuperview");
    v3 = &v1[direct field offset for Radiosity.UIView.specs];
    swift_beginAccess(&v2[direct field offset for Radiosity.UIView.specs], v91, 0, 0);
    v56 = *((_OWORD *)v3 + 4);
    v57 = *((_OWORD *)v3 + 5);
    v84[1] = *((_OWORD *)v3 + 3);
    v85 = v56;
    v86 = v57;
    sub_100345684((__int128 *)((char *)&v85 + 8), &v87);
    sub_100345684(&v87, &v88);
    if ((_QWORD)v88)
      v4 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
    else
      v4 = objc_msgSend(objc_allocWithZone((Class)_UIPortalView), "initWithSourceView:", *(_QWORD *)&v2[direct field offset for Radiosity.UIView.content]);
    v5 = *(void **)&v2[qword_1004A0998];
    *(_QWORD *)&v2[qword_1004A0998] = v4;
    v6 = v4;

    v7 = &v2[direct field offset for Radiosity.UIView.isRadiosityEnabled];
    *(_QWORD *)&v8 = swift_beginAccess(&v2[direct field offset for Radiosity.UIView.isRadiosityEnabled], v92, 0, 0).n128_u64[0];
    if (*v7 == 1)
      objc_msgSend(v2, "addSubview:", v6, v8);

  }
  v9 = &v2[direct field offset for Radiosity.UIView.specs];
  swift_beginAccess(&v2[direct field offset for Radiosity.UIView.specs], v93, 0, 0);
  v10 = *((_OWORD *)v9 + 5);
  v60 = *((_OWORD *)v9 + 4);
  v61 = v10;
  v11 = *((_OWORD *)v9 + 7);
  v62 = *((_OWORD *)v9 + 6);
  v63 = v11;
  v12 = *((_OWORD *)v9 + 1);
  *(_OWORD *)&v58.a = *(_OWORD *)v9;
  *(_OWORD *)&v58.c = v12;
  v13 = *((_OWORD *)v9 + 3);
  *(_OWORD *)&v58.tx = *((_OWORD *)v9 + 2);
  v59 = v13;
  sub_100343194((uint64_t)&v58);
  objc_msgSend(v2, "bounds");
  x = v100.origin.x;
  y = v100.origin.y;
  width = v100.size.width;
  height = v100.size.height;
  v72 = v58;
  v101 = CGRectApplyAffineTransform(v100, &v72);
  v18 = v101.origin.x;
  v19 = v101.origin.y;
  v20 = v101.size.width;
  v21 = v101.size.height;
  v101.origin.x = x;
  v101.origin.y = y;
  v101.size.width = width;
  v101.size.height = height;
  MinX = CGRectGetMinX(v101);
  v102.origin.x = x;
  v102.origin.y = y;
  v102.size.width = width;
  v102.size.height = height;
  v54 = CGRectGetWidth(v102);
  v103.origin.x = v18;
  v103.origin.y = v19;
  v103.size.width = v20;
  v103.size.height = v21;
  v53 = CGRectGetWidth(v103);
  v104.origin.x = x;
  v104.origin.y = y;
  v104.size.width = width;
  v104.size.height = height;
  v22 = CGRectGetHeight(v104);
  v105.origin.x = v18;
  v105.origin.y = v19;
  v105.size.width = v20;
  v105.size.height = v21;
  v23 = CGRectGetHeight(v105);
  sub_100345624((uint64_t)&v58);
  v24 = *(id *)&v2[qword_1004A0998];
  objc_msgSend(v2, "bounds");
  objc_msgSend(v24, "setFrame:");

  v25 = objc_msgSend(*(id *)&v2[qword_1004A0998], "layer");
  objc_msgSend(v25, "setShadowColor:", *(_QWORD *)&v2[direct field offset for Radiosity.UIView.specs + 56], swift_beginAccess(&v2[direct field offset for Radiosity.UIView.specs], v94, 0, 0).n128_f64[0]);

  v26 = objc_msgSend(*(id *)&v2[qword_1004A0998], "layer");
  v27 = &v2[direct field offset for Radiosity.UIView.specs];
  v28 = swift_beginAccess(&v2[direct field offset for Radiosity.UIView.specs], v95, 0, 0);
  v28.n128_u32[0] = *((_DWORD *)v27 + 12);
  objc_msgSend(v26, "setShadowOpacity:", v28.n128_f64[0]);

  v29 = objc_msgSend(*(id *)&v2[qword_1004A0998], "layer");
  v30 = (double *)&v2[direct field offset for Radiosity.UIView.specs];
  swift_beginAccess(&v2[direct field offset for Radiosity.UIView.specs], v96, 0, 0);
  objc_msgSend(v29, "setShadowRadius:", v30[8]);

  v31 = objc_msgSend(*(id *)&v2[qword_1004A0998], "layer");
  v32 = &v2[direct field offset for Radiosity.UIView.specs];
  swift_beginAccess(&v2[direct field offset for Radiosity.UIView.specs], v97, 0, 0);
  v33 = *((_OWORD *)v32 + 5);
  v68 = *((_OWORD *)v32 + 4);
  v69 = v33;
  v34 = *((_OWORD *)v32 + 7);
  v70 = *((_OWORD *)v32 + 6);
  v71 = v34;
  v35 = *((_OWORD *)v32 + 1);
  v64 = *(_OWORD *)v32;
  v65 = v35;
  v36 = *((_OWORD *)v32 + 3);
  v66 = *((_OWORD *)v32 + 2);
  v67 = v36;
  v81[1] = v36;
  v82 = v68;
  v83 = v33;
  sub_100345684((__int128 *)((char *)&v82 + 8), v84);
  sub_100345684(v84, &v89);
  v37 = (uint64_t (*)(uint64_t *, double, double, double, double, double))v89;
  if ((_QWORD)v89)
  {
    v38 = (double *)&v2[direct field offset for Radiosity.UIView.specs];
    swift_beginAccess(&v2[direct field offset for Radiosity.UIView.specs], v98, 0, 0);
    v39 = v38[8];
    v40 = sub_100347424((uint64_t *)v84);
    v41 = (void *)v37(v40, MinX + (v54 - v53) * 0.5, v22 - v23, v20, v21, v39);
    v43 = v42;
    sub_100347450((uint64_t *)v84);

  }
  else
  {
    v41 = 0;
  }
  objc_msgSend(v31, "setShadowPath:", v41);

  v44 = objc_msgSend(*(id *)&v2[qword_1004A0998], "layer");
  v45 = &v2[direct field offset for Radiosity.UIView.specs];
  swift_beginAccess(&v2[direct field offset for Radiosity.UIView.specs], v99, 0, 0);
  v46 = *((_OWORD *)v45 + 5);
  v74 = *((_OWORD *)v45 + 4);
  v75 = v46;
  v47 = *((_OWORD *)v45 + 7);
  v76 = *((_OWORD *)v45 + 6);
  v77 = v47;
  v48 = *((_OWORD *)v45 + 1);
  *(_OWORD *)&v72.a = *(_OWORD *)v45;
  *(_OWORD *)&v72.c = v48;
  v49 = *((_OWORD *)v45 + 3);
  *(_OWORD *)&v72.tx = *((_OWORD *)v45 + 2);
  v73 = v49;
  v78 = v49;
  v79 = v74;
  v80 = v46;
  sub_100345684((__int128 *)((char *)&v79 + 8), v81);
  sub_100345684(v81, &v90);
  v50 = (uint64_t (*)(double, double, double, double, double))v90;
  if ((_QWORD)v90)
  {
    v51 = *((_QWORD *)&v90 + 1);
    sub_100347424((uint64_t *)v81);
    v52 = sub_100344530(v50, v51, v2);
    sub_100347450((uint64_t *)v81);
  }
  else
  {
    v52 = 0;
  }
  objc_msgSend(v44, "setMask:", v52);

}

id sub_100344530(uint64_t (*a1)(double, double, double, double, double), uint64_t a2, char *a3)
{
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double *v18;
  void *v19;
  void *v20;
  void *v21;
  char v23[24];

  v5 = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
  v6 = (void *)objc_opt_self(UIColor);
  v7 = v5;
  v8 = objc_msgSend(v6, "blackColor");
  v9 = objc_msgSend(v8, "CGColor");

  objc_msgSend(v7, "setBackgroundColor:", v9);
  objc_msgSend(a3, "bounds");
  v11 = v10;
  v13 = v12;
  v15 = v14;
  v17 = v16;
  v18 = (double *)&a3[direct field offset for Radiosity.UIView.specs];
  swift_beginAccess(v18, v23, 0, 0);
  v19 = (void *)a1(v11, v13, v15, v17, v18[8]);
  v21 = v20;

  objc_msgSend(v7, "setPath:", v21);
  objc_msgSend(v7, "setFillRule:", kCAFillRuleEvenOdd);
  return v7;
}

void sub_10034469C()
{
  char *v0;
  char *v1;
  char *v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  CGFloat v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  void *v18;
  char *v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void (*v24)(id);
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  NSString v30;
  id v31;
  Class isa;
  unint64_t v33;
  id v34;
  Class v35;
  id v36;
  char *v37;
  uint64_t v38;
  float (*v39)(id);
  id v40;
  id v41;
  __n128 v42;
  _QWORD rect[9];
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  char v52[24];
  char v53[24];
  char v54[24];
  char v55[32];
  CGRect v56;
  CGRect v57;
  CGRect v58;
  CGRect v59;
  CGRect v60;
  CGRect v61;

  v1 = v0;
  v2 = &v0[direct field offset for Radiosity.UIView.specs];
  swift_beginAccess(v2, v52, 0, 0);
  v3 = *((_OWORD *)v2 + 5);
  v48 = *((_OWORD *)v2 + 4);
  v49 = v3;
  v4 = *((_OWORD *)v2 + 7);
  v50 = *((_OWORD *)v2 + 6);
  v51 = v4;
  v5 = *((_OWORD *)v2 + 1);
  v44 = *(_OWORD *)v2;
  v45 = v5;
  v6 = *((_OWORD *)v2 + 3);
  v46 = *((_OWORD *)v2 + 2);
  v47 = v6;
  sub_100343194((uint64_t)&v44);
  objc_msgSend(v1, "bounds");
  x = v56.origin.x;
  y = v56.origin.y;
  width = v56.size.width;
  height = v56.size.height;
  *(_OWORD *)&rect[3] = v44;
  *(_OWORD *)&rect[5] = v45;
  *(_OWORD *)&rect[7] = v46;
  v57 = CGRectApplyAffineTransform(v56, (CGAffineTransform *)&rect[3]);
  v11 = v57.origin.x;
  rect[0] = *(_QWORD *)&v57.origin.x;
  rect[2] = *(_QWORD *)&v57.origin.y;
  v12 = v57.size.width;
  v13 = v57.size.height;
  v57.origin.x = x;
  v57.origin.y = y;
  v57.size.width = width;
  v57.size.height = height;
  rect[1] = CGRectGetMinX(v57);
  v58.origin.x = x;
  v58.origin.y = y;
  v58.size.width = width;
  v58.size.height = height;
  v14 = CGRectGetWidth(v58);
  v59.origin.x = v11;
  *(_QWORD *)&v59.origin.y = rect[2];
  v59.size.width = v12;
  v59.size.height = v13;
  v15 = *(double *)&rect[1] + (v14 - CGRectGetWidth(v59)) * 0.5;
  v60.origin.x = x;
  v60.origin.y = y;
  v60.size.width = width;
  v60.size.height = height;
  v16 = CGRectGetHeight(v60);
  *(_QWORD *)&v61.origin.x = rect[0];
  *(_QWORD *)&v61.origin.y = rect[2];
  v61.size.width = v12;
  v61.size.height = v13;
  v17 = CGRectGetHeight(v61);
  sub_100345624((uint64_t)&v44);
  v18 = *(void **)&v1[qword_1004A09A0];
  objc_msgSend(v18, "setFrame:", v15, v16 - v17, v12, v13);
  v19 = &v1[direct field offset for Radiosity.UIView.specs];
  swift_beginAccess(&v1[direct field offset for Radiosity.UIView.specs], v53, 0, 0);
  v20 = *((_OWORD *)v19 + 1);
  *(_OWORD *)&rect[3] = *(_OWORD *)v19;
  *(_OWORD *)&rect[5] = v20;
  *(_OWORD *)&rect[7] = *((_OWORD *)v19 + 2);
  objc_msgSend(v18, "setTransform:", &rect[3]);
  rect[2] = objc_msgSend(v18, "layer");
  v21 = sub_100005574(&qword_1004999B0);
  v22 = swift_allocObject(v21, 96, 7);
  *(_OWORD *)(v22 + 16) = xmmword_100384A60;
  v23 = &v1[direct field offset for Radiosity.UIView.specs];
  swift_beginAccess(&v1[direct field offset for Radiosity.UIView.specs], v54, 0, 0);
  v25 = *((_QWORD *)v23 + 12);
  v24 = (void (*)(id))*((_QWORD *)v23 + 13);
  v26 = *((_QWORD *)v23 + 14);
  swift_retain(v25);
  v27 = objc_msgSend(v1, "traitCollection", swift_retain(v26).n128_f64[0]);
  v28 = objc_msgSend(v27, "userInterfaceStyle");

  static String._unconditionallyBridgeFromObjectiveC(_:)(kCAFilterColorSaturate);
  v29 = objc_allocWithZone((Class)CAFilter);
  v30 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v31 = objc_msgSend(v29, "initWithType:", v30);

  v24(v28);
  isa = Double._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v31, "setValue:forKey:", isa, kCAFilterInputAmount);
  swift_release(v26);
  swift_release(v25);

  v33 = sub_1003473E8();
  *(_QWORD *)(v22 + 56) = v33;
  *(_QWORD *)(v22 + 32) = v31;
  swift_beginAccess(&v1[direct field offset for Radiosity.UIView.specs], v55, 0, 0);
  v34 = sub_1003456B4();
  *(_QWORD *)(v22 + 88) = v33;
  *(_QWORD *)(v22 + 64) = v34;
  v35 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend((id)rect[2], "setFilters:", v35);

  v36 = objc_msgSend(v18, "layer");
  v37 = &v1[direct field offset for Radiosity.UIView.specs];
  swift_beginAccess(&v1[direct field offset for Radiosity.UIView.specs], &rect[3], 0, 0);
  v39 = (float (*)(id))*((_QWORD *)v37 + 11);
  v38 = *((_QWORD *)v37 + 12);
  v40 = objc_msgSend(v1, "traitCollection", swift_retain(v38).n128_f64[0]);
  v41 = objc_msgSend(v40, "userInterfaceStyle");

  LODWORD(v16) = v39(v41);
  v42 = swift_release(v38);
  v42.n128_u32[0] = LODWORD(v16);
  objc_msgSend(v36, "setOpacity:", v42.n128_f64[0]);

}

void sub_100344B0C(uint64_t a1)
{
  uint64_t v1;
  id v3;
  void *v4;
  double v5;
  double v6;
  id v7;

  sub_10034469C();
  v3 = objc_msgSend(*(id *)(v1 + qword_1004A0998), "layer");
  v4 = v3;
  if (a1 == 2)
    v5 = -1.0;
  else
    v5 = -2.0;
  if (a1 == 2)
    v6 = -2.0;
  else
    v6 = -1.0;
  objc_msgSend(v3, "setZPosition:", v5);

  v7 = objc_msgSend(*(id *)(v1 + qword_1004A09A0), "layer");
  objc_msgSend(v7, "setZPosition:", v6);

}

void Radiosity.UIView.init(frame:)()
{
  sub_100345A84();
}

void sub_100344BD8()
{
  sub_100345A84();
}

id Radiosity.UIView.__deallocating_deinit(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for Radiosity.UIView(0, *(_QWORD *)((swift_isaMask & *v4) + 0x50), a3, a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, "dealloc");
}

void sub_100344C40(uint64_t a1)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v6[8];

  v2 = *(_OWORD *)(a1 + direct field offset for Radiosity.UIView.specs + 80);
  v6[4] = *(_OWORD *)(a1 + direct field offset for Radiosity.UIView.specs + 64);
  v6[5] = v2;
  v3 = *(_OWORD *)(a1 + direct field offset for Radiosity.UIView.specs + 112);
  v6[6] = *(_OWORD *)(a1 + direct field offset for Radiosity.UIView.specs + 96);
  v6[7] = v3;
  v4 = *(_OWORD *)(a1 + direct field offset for Radiosity.UIView.specs + 16);
  v6[0] = *(_OWORD *)(a1 + direct field offset for Radiosity.UIView.specs);
  v6[1] = v4;
  v5 = *(_OWORD *)(a1 + direct field offset for Radiosity.UIView.specs + 48);
  v6[2] = *(_OWORD *)(a1 + direct field offset for Radiosity.UIView.specs + 32);
  v6[3] = v5;
  sub_100345624((uint64_t)v6);

}

__n128 Radiosity.Specs.transform.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v2;
  __n128 result;

  v2 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(v1 + 32);
  *(__n128 *)(a1 + 32) = result;
  return result;
}

__n128 Radiosity.Specs.transform.setter(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  __n128 result;

  v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v1 = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 16) = v2;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v1 + 32) = result;
  return result;
}

float Radiosity.Specs.Shadow.opacity.getter()
{
  uint64_t v0;

  return *(float *)v0;
}

uint64_t Radiosity.Specs.Shadow.drawMode.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  sub_10003A434(v1, *(_QWORD *)(v0 + 32));
  return v1;
}

uint64_t Radiosity.Specs.Shadow.drawMode.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_10003A5C8(*(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t Radiosity.Specs.shadow.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t result;

  v3 = *(_DWORD *)(v1 + 48);
  v4 = *(void **)(v1 + 56);
  v5 = *(_QWORD *)(v1 + 64);
  v7 = *(_QWORD *)(v1 + 72);
  v6 = *(_QWORD *)(v1 + 80);
  v8 = v4;
  result = sub_10003A434(v7, v6);
  *(_DWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v8;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v6;
  return result;
}

__n128 Radiosity.Specs.shadow.setter(uint64_t a1)
{
  uint64_t v1;
  __n128 result;
  __int128 v4;

  sub_10003A5C8(*(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80));
  result = *(__n128 *)a1;
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 48) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 64) = v4;
  *(_QWORD *)(v1 + 80) = *(_QWORD *)(a1 + 32);
  return result;
}

uint64_t Radiosity.Specs.radiosity.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v2 = *(_QWORD *)(v1 + 112);
  v3 = *(_QWORD *)(v1 + 120);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 88);
  v4 = *(_OWORD *)(v1 + 96);
  *(_OWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 24) = v2;
  *(_QWORD *)(a1 + 32) = v3;
  swift_retain(v4);
  return swift_retain(v2);
}

__n128 Radiosity.Specs.radiosity.setter(uint64_t a1)
{
  uint64_t v1;
  __n128 result;
  __int128 v4;

  swift_release(*(_QWORD *)(v1 + 96));
  swift_release(*(_QWORD *)(v1 + 112));
  result = *(__n128 *)a1;
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 88) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 104) = v4;
  *(_QWORD *)(v1 + 120) = *(_QWORD *)(a1 + 32);
  return result;
}

uint64_t View.radiosity(specs:)(__int128 *a1, uint64_t a2, uint64_t a3)
{
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  char v9;
  uint64_t v10;
  _OWORD v12[9];
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _OWORD v21[8];
  __int128 v22;

  v5 = a1[5];
  v17 = a1[4];
  v18 = v5;
  v6 = a1[7];
  v19 = a1[6];
  v20 = v6;
  v7 = a1[1];
  v13 = *a1;
  v14 = v7;
  v8 = a1[3];
  v15 = a1[2];
  v16 = v8;
  LOBYTE(v12[0]) = 1;
  sub_100343194((uint64_t)a1);
  State.init(wrappedValue:)(v21, v12, &type metadata for Bool);
  v9 = v21[0];
  v10 = *((_QWORD *)&v21[0] + 1);
  v21[4] = v17;
  v21[5] = v18;
  v21[6] = v19;
  v21[7] = v20;
  v21[0] = v13;
  v21[1] = v14;
  v21[2] = v15;
  v21[3] = v16;
  LOBYTE(v22) = v9;
  *((_QWORD *)&v22 + 1) = v10;
  v12[6] = v19;
  v12[7] = v20;
  v12[8] = v22;
  v12[2] = v15;
  v12[3] = v16;
  v12[4] = v17;
  v12[5] = v18;
  v12[0] = v13;
  v12[1] = v14;
  View.modifier<A>(_:)(v12, a2, &type metadata for Radiosity.ViewModifier, a3);
  return sub_100345AB0((uint64_t)v21);
}

double Radiosity.Specs.with(_:)@<D0>(void (*a1)(__int128 *)@<X0>, _OWORD *a2@<X8>)
{
  __int128 *v2;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  double result;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;

  v5 = v2[5];
  v18 = v2[4];
  v19 = v5;
  v6 = v2[7];
  v20 = v2[6];
  v21 = v6;
  v7 = v2[1];
  v14 = *v2;
  v15 = v7;
  v8 = v2[3];
  v16 = v2[2];
  v17 = v8;
  sub_100343194((uint64_t)v2);
  a1(&v14);
  v9 = v19;
  a2[4] = v18;
  a2[5] = v9;
  v10 = v21;
  a2[6] = v20;
  a2[7] = v10;
  v11 = v15;
  *a2 = v14;
  a2[1] = v11;
  result = *(double *)&v16;
  v13 = v17;
  a2[2] = v16;
  a2[3] = v13;
  return result;
}

__n128 sub_100344FF4()
{
  CGFloat tx;
  CGFloat ty;
  id v2;
  id v3;
  __n128 result;
  __n128 v5;
  __int128 v6;
  CGAffineTransform v7;
  CGAffineTransform v8;

  v8.a = 1.0;
  v8.b = 0.0;
  v8.c = 0.0;
  v8.d = 1.0;
  v8.tx = 0.0;
  v8.ty = 0.0;
  CGAffineTransformScale(&v7, &v8, 0.85, 0.85);
  v5 = *(__n128 *)&v7.c;
  v6 = *(_OWORD *)&v7.a;
  tx = v7.tx;
  ty = v7.ty;
  v2 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
  v3 = objc_msgSend(v2, "CGColor");

  result = v5;
  static Radiosity.Specs.containerDetailHeaderArtwork = v6;
  unk_1004A3F00 = v5;
  qword_1004A3F10 = *(_QWORD *)&tx;
  unk_1004A3F18 = *(_QWORD *)&ty;
  dword_1004A3F20 = 1050253722;
  qword_1004A3F28 = (uint64_t)v3;
  unk_1004A3F30 = 0x402E000000000000;
  qword_1004A3F38 = 0;
  unk_1004A3F40 = 0;
  qword_1004A3F48 = (uint64_t)sub_1003450E8;
  unk_1004A3F50 = 0;
  qword_1004A3F58 = (uint64_t)sub_100345110;
  unk_1004A3F60 = 0;
  qword_1004A3F68 = 0x4040000000000000;
  return result;
}

float sub_1003450E8(unint64_t a1)
{
  if (a1 > 2)
    return 0.42;
  else
    return flt_10039FC9C[a1];
}

double sub_100345110(unint64_t a1)
{
  if (a1 > 2)
    return 1.8;
  else
    return dbl_10039FCA8[a1];
}

uint64_t static Radiosity.Specs.containerDetailHeaderArtwork.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1003452A4(&qword_100498CA8, (uint64_t)&static Radiosity.Specs.containerDetailHeaderArtwork, (uint64_t)sub_100344FF4, a1);
}

__n128 sub_100345150()
{
  CGFloat tx;
  CGFloat ty;
  id v2;
  id v3;
  __n128 result;
  __n128 v5;
  __int128 v6;
  CGAffineTransform v7;
  CGAffineTransform v8;

  v8.a = 1.0;
  v8.b = 0.0;
  v8.c = 0.0;
  v8.d = 1.0;
  v8.tx = 0.0;
  v8.ty = 0.0;
  CGAffineTransformScale(&v7, &v8, 0.94, 0.94);
  v5 = *(__n128 *)&v7.c;
  v6 = *(_OWORD *)&v7.a;
  tx = v7.tx;
  ty = v7.ty;
  v2 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
  v3 = objc_msgSend(v2, "CGColor");

  result = v5;
  static Radiosity.Specs.nowPlaying = v6;
  unk_1004A3F80 = v5;
  qword_1004A3F90 = *(_QWORD *)&tx;
  unk_1004A3F98 = *(_QWORD *)&ty;
  dword_1004A3FA0 = 1053609165;
  qword_1004A3FA8 = (uint64_t)v3;
  unk_1004A3FB0 = 0x402E000000000000;
  qword_1004A3FB8 = 0;
  unk_1004A3FC0 = 0;
  qword_1004A3FC8 = (uint64_t)variable initialization expression of VerticalToggleSlider._maxValue;
  unk_1004A3FD0 = 0;
  qword_1004A3FD8 = (uint64_t)sub_100345240;
  unk_1004A3FE0 = 0;
  qword_1004A3FE8 = 0x4049000000000000;
  return result;
}

double sub_100345240()
{
  return 1.5;
}

__int128 *Radiosity.Specs.nowPlaying.unsafeMutableAddressor()
{
  if (qword_100498CB0 != -1)
    swift_once(&qword_100498CB0, sub_100345150);
  return &static Radiosity.Specs.nowPlaying;
}

uint64_t static Radiosity.Specs.nowPlaying.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1003452A4(&qword_100498CB0, (uint64_t)&static Radiosity.Specs.nowPlaying, (uint64_t)sub_100345150, a1);
}

uint64_t sub_1003452A4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*a1 != -1)
    swift_once(a1, a3);
  return sub_100345B1C(a2, a4);
}

double Radiosity.Specs.pathShadow(for:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  int v6;
  uint64_t v7;
  uint64_t v8;
  id (*v9)(double, double, double, double, double);
  uint64_t v10;
  uint64_t v13;
  double result;
  __int128 v15;

  v6 = *(_DWORD *)(v4 + 48);
  v7 = *(_QWORD *)(v4 + 56);
  v8 = *(_QWORD *)(v4 + 64);
  v9 = *(id (**)(double, double, double, double, double))(v4 + 72);
  v10 = *(_QWORD *)(v4 + 80);
  if ((a3 & 1) != 0)
  {
    sub_100343194(v4);
  }
  else
  {
    v13 = swift_allocObject(&unk_100465708, 32, 7);
    *(_QWORD *)(v13 + 16) = a2;
    *(_QWORD *)(v13 + 24) = a1;
    sub_100343194(v4);
    sub_10003A5C8((uint64_t)v9, v10);
    v9 = sub_100345B60;
    v10 = v13;
  }
  result = *(double *)(v4 + 120);
  v15 = *(_OWORD *)(v4 + 16);
  *(_OWORD *)a4 = *(_OWORD *)v4;
  *(_OWORD *)(a4 + 16) = v15;
  *(_OWORD *)(a4 + 32) = *(_OWORD *)(v4 + 32);
  *(_DWORD *)(a4 + 48) = v6;
  *(_QWORD *)(a4 + 56) = v7;
  *(_QWORD *)(a4 + 64) = v8;
  *(_QWORD *)(a4 + 72) = v9;
  *(_QWORD *)(a4 + 80) = v10;
  *(_OWORD *)(a4 + 88) = *(_OWORD *)(v4 + 88);
  *(_OWORD *)(a4 + 104) = *(_OWORD *)(v4 + 104);
  *(double *)(a4 + 120) = result;
  return result;
}

id sub_1003453BC(uint64_t a1, double a2, double a3, double a4, double a5, double a6, double a7)
{
  void *v14;
  id v15;
  id v16;
  id v17;
  double v18;
  double v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v32[6];

  v14 = (void *)objc_opt_self(UIBezierPath);
  v15 = objc_msgSend(v14, "bezierPathWithRoundedRect:byRoundingCorners:cornerRadii:", a1, a2, a3, a4, a5, a7, a7);
  v16 = objc_msgSend(v15, "CGPath");

  v17 = objc_msgSend(v14, "bezierPathWithRoundedRect:cornerRadius:", a2, a3, a4, a5, a7);
  v18 = UIEdgeInsets.init(edges:inset:)(15, -(a7 + a7 + a6));
  v20 = objc_msgSend(v14, "bezierPathWithRoundedRect:cornerRadius:", sub_10019431C(a2, a3, a4, a5, v18, v19));
  CGPathCreateMutable();
  v21 = objc_msgSend(v17, "CGPath");
  v32[0] = 0x3FF0000000000000;
  v32[1] = 0;
  v32[2] = 0;
  v32[3] = 0x3FF0000000000000;
  v32[4] = 0;
  v32[5] = 0;
  CGMutablePathRef.addPath(_:transform:)(v21, v32, v22, v23, v24, v25);

  v26 = objc_msgSend(v20, "CGPath");
  CGMutablePathRef.addPath(_:transform:)(v26, v32, v27, v28, v29, v30);

  return v16;
}

_BYTE *sub_100345574(_BYTE *result, _QWORD *(*a2)(uint64_t *__return_ptr))
{
  _BYTE *v2;
  char v3;
  uint64_t v4;

  v2 = result;
  if (*result == 1)
  {
    result = a2(&v4);
    v3 = v4;
  }
  else
  {
    v3 = 0;
  }
  *v2 = v3;
  return result;
}

__n128 sub_1003455C0@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  __int128 v8;
  _BYTE v9[24];

  v3 = v1 + direct field offset for Radiosity.UIView.specs;
  swift_beginAccess(v3, v9, 0, 0);
  v4 = *(_OWORD *)(v3 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(v3 + 64);
  *(_OWORD *)(a1 + 80) = v4;
  v5 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(v3 + 96);
  *(_OWORD *)(a1 + 112) = v5;
  v6 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v6;
  result = *(__n128 *)(v3 + 32);
  v8 = *(_OWORD *)(v3 + 48);
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v8;
  return result;
}

uint64_t sub_100345624(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 72);
  v3 = *(_QWORD *)(a1 + 80);
  v4 = *(_QWORD *)(a1 + 96);
  v5 = *(_QWORD *)(a1 + 112);

  sub_10003A5C8(v2, v3);
  swift_release(v5);
  swift_release(v4);
  return a1;
}

_OWORD *sub_100345684(_OWORD *a1, _OWORD *a2)
{
  *a2 = *a1;
  return a2;
}

uint64_t type metadata accessor for Radiosity.UIView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100031DCC(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Radiosity.UIView);
}

uint64_t sub_1003456A0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_1003456B4()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  NSString v3;
  id v4;
  Class isa;
  Class v6;

  static String._unconditionallyBridgeFromObjectiveC(_:)(kCAFilterGaussianBlur);
  v1 = v0;
  v2 = objc_allocWithZone((Class)CAFilter);
  v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v1);
  v4 = objc_msgSend(v2, "initWithType:", v3);

  isa = Double._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v4, "setValue:forKey:", isa, kCAFilterInputRadius);

  v6 = Bool._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v4, "setValue:forKey:", v6, kCAFilterInputNormalizeEdges);

  return v4;
}

id sub_10034579C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  objc_class *v12;
  void *v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  id v19;
  _OWORD v21[8];

  v2 = v1;
  v3 = a1;
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin();
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for _UIHostingView(255, v4, *(_QWORD *)(v6 + 24));
  v12 = (objc_class *)type metadata accessor for Radiosity.UIView(0, v9, v10, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v2, v4);
  v13 = (void *)_UIHostingView.__allocating_init(rootView:)(v8);
  v14 = *(int *)(v3 + 36);
  LOBYTE(v3) = *(_BYTE *)(v2 + *(int *)(v3 + 40));
  v15 = *(_OWORD *)(v2 + v14 + 80);
  v21[4] = *(_OWORD *)(v2 + v14 + 64);
  v21[5] = v15;
  v16 = *(_OWORD *)(v2 + v14 + 112);
  v21[6] = *(_OWORD *)(v2 + v14 + 96);
  v21[7] = v16;
  v17 = *(_OWORD *)(v2 + v14 + 16);
  v21[0] = *(_OWORD *)(v2 + v14);
  v21[1] = v17;
  v18 = *(_OWORD *)(v2 + v14 + 48);
  v21[2] = *(_OWORD *)(v2 + v14 + 32);
  v21[3] = v18;
  sub_100343194((uint64_t)v21);
  v19 = objc_allocWithZone(v12);
  return Radiosity.UIView.init(content:isRadiosityEnabled:specs:)(v13, v3, v21);
}

void sub_1003458A8(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _OWORD *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD v13[8];

  __chkstk_darwin();
  v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, v2);
  dispatch thunk of _UIHostingView.rootView.setter(v6);
  objc_msgSend(a1, "invalidateIntrinsicContentSize");
  v8 = (_OWORD *)(v2 + *(int *)(a2 + 36));
  v9 = v8[5];
  v13[4] = v8[4];
  v13[5] = v9;
  v10 = v8[7];
  v13[6] = v8[6];
  v13[7] = v10;
  v11 = v8[1];
  v13[0] = *v8;
  v13[1] = v11;
  v12 = v8[3];
  v13[2] = v8[2];
  v13[3] = v12;
  sub_100343194((uint64_t)v13);
  Radiosity.UIView.specs.setter(v13);
  Radiosity.UIView.isRadiosityEnabled.setter(*(_BYTE *)(v2 + *(int *)(a2 + 40)));
}

double sub_100345990(void *a1)
{
  double result;

  objc_msgSend(a1, "intrinsicContentSize");
  return result;
}

void sub_1003459D4(void *a1)
{
  id v1;
  id v2;

  v1 = objc_msgSend(a1, "traitCollection");
  v2 = objc_msgSend(v1, "userInterfaceStyle");

  sub_100344B0C((uint64_t)v2);
}

void sub_100345A2C()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001003B2590, "MusicCoreUI/Radiosity.swift", 27, 2, 142, 0);
  __break(1u);
}

void sub_100345A84()
{
  _swift_stdlib_reportUnimplementedInitializer("MusicCoreUI.UIView", 18, "init(frame:)", 12, 0);
  __break(1u);
}

uint64_t sub_100345AB0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(a1 + 72);
  v3 = *(_QWORD *)(a1 + 80);
  v4 = *(_QWORD *)(a1 + 96);
  v5 = *(_QWORD *)(a1 + 112);
  v6 = *(_QWORD *)(a1 + 136);

  sub_10003A5C8(v2, v3);
  swift_release(v5);
  swift_release(v4);
  swift_release(v6);
  return a1;
}

uint64_t sub_100345B1C(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for Radiosity.Specs(a2, a1);
  return a2;
}

uint64_t sub_100345B50()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_100345B60(double a1, double a2, double a3, double a4, double a5)
{
  uint64_t v5;

  return sub_1003453BC(*(_QWORD *)(v5 + 16), a1, a2, a3, a4, a5, *(double *)(v5 + 24));
}

uint64_t sub_100345B6C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of Radiosity.ViewModifier.body(content:)>>, 1);
}

ValueMetadata *type metadata accessor for Radiosity()
{
  return &type metadata for Radiosity;
}

double destroy for Radiosity.ViewModifier(uint64_t a1)
{
  double result;

  if (*(_QWORD *)(a1 + 72))
    swift_release(*(_QWORD *)(a1 + 80));
  swift_release(*(_QWORD *)(a1 + 96));
  swift_release(*(_QWORD *)(a1 + 112));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 136)).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for Radiosity.ViewModifier(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  id v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  v5 = *(void **)(a2 + 56);
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 64) = v6;
  v8 = (_OWORD *)(a2 + 72);
  v7 = *(_QWORD *)(a2 + 72);
  v9 = v5;
  if (v7)
  {
    v10 = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 72) = v7;
    *(_QWORD *)(a1 + 80) = v10;
    swift_retain(v10);
  }
  else
  {
    *(_OWORD *)(a1 + 72) = *v8;
  }
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v11 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 96) = v11;
  v13 = *(_QWORD *)(a2 + 112);
  v12 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = v13;
  *(_QWORD *)(a1 + 120) = v12;
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  v14 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 136) = v14;
  swift_retain(v11);
  swift_retain(v13);
  swift_retain(v14);
  return a1;
}

uint64_t assignWithCopy for Radiosity.ViewModifier(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  v4 = *(void **)(a2 + 56);
  v5 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v4;
  v6 = v4;

  v7 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v8 = *(_QWORD *)(a2 + 72);
  if (!v7)
  {
    if (v8)
    {
      v11 = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 72) = v8;
      *(_QWORD *)(a1 + 80) = v11;
      swift_retain(v11);
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    goto LABEL_8;
  }
  if (!v8)
  {
    sub_100008758(a1 + 72, qword_1004A09A8);
    goto LABEL_7;
  }
  v9 = *(_QWORD *)(a2 + 80);
  v10 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 72) = v8;
  *(_QWORD *)(a1 + 80) = v9;
  swift_retain(v9);
  swift_release(v10);
LABEL_8:
  v12 = *(_QWORD *)(a2 + 96);
  v13 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v12;
  swift_retain(v12);
  swift_release(v13);
  v14 = *(_QWORD *)(a2 + 112);
  v15 = *(_QWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v14;
  swift_retain(v14);
  swift_release(v15);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  v16 = *(_QWORD *)(a1 + 136);
  v17 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 136) = v17;
  swift_retain(v17);
  swift_release(v16);
  return a1;
}

__n128 initializeWithTake for Radiosity.ViewModifier(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(__n128 *)(a1 + 80) = result;
  *(_OWORD *)(a1 + 96) = v6;
  return result;
}

uint64_t assignWithTake for Radiosity.ViewModifier(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  v5 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);

  v6 = *(_QWORD *)(a2 + 72);
  v7 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  if (!v7)
    goto LABEL_5;
  if (!v6)
  {
    sub_100008758(a1 + 72, qword_1004A09A8);
LABEL_5:
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    goto LABEL_6;
  }
  v8 = *(_QWORD *)(a2 + 80);
  v9 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 72) = v6;
  *(_QWORD *)(a1 + 80) = v8;
  swift_release(v9);
LABEL_6:
  v10 = *(_QWORD *)(a1 + 96);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_release(v10);
  v11 = *(_QWORD *)(a1 + 112);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  swift_release(v11);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  v12 = *(_QWORD *)(a1 + 136);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_release(v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for Radiosity.ViewModifier(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 144))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Radiosity.ViewModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 144) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 56) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 144) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Radiosity.ViewModifier()
{
  return &type metadata for Radiosity.ViewModifier;
}

uint64_t sub_100345F8C(uint64_t a1)
{
  _QWORD v2[5];

  v2[0] = "\b";
  v2[1] = &unk_10039FAE8;
  v2[2] = &unk_10039FB00;
  v2[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
  return swift_initClassMetadata2(a1, 0, 5, v2, a1 + 88);
}

double destroy for Radiosity.Specs(uint64_t a1)
{
  double result;

  if (*(_QWORD *)(a1 + 72))
    swift_release(*(_QWORD *)(a1 + 80));
  swift_release(*(_QWORD *)(a1 + 96));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 112)).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for Radiosity.Specs(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  id v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  v5 = *(void **)(a2 + 56);
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 64) = v6;
  v8 = (_OWORD *)(a2 + 72);
  v7 = *(_QWORD *)(a2 + 72);
  v9 = v5;
  if (v7)
  {
    v10 = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 72) = v7;
    *(_QWORD *)(a1 + 80) = v10;
    swift_retain(v10);
  }
  else
  {
    *(_OWORD *)(a1 + 72) = *v8;
  }
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v11 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 96) = v11;
  v13 = *(_QWORD *)(a2 + 112);
  v12 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = v13;
  *(_QWORD *)(a1 + 120) = v12;
  swift_retain(v11);
  swift_retain(v13);
  return a1;
}

uint64_t assignWithCopy for Radiosity.Specs(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  v4 = *(void **)(a2 + 56);
  v5 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v4;
  v6 = v4;

  v7 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v8 = *(_QWORD *)(a2 + 72);
  if (!v7)
  {
    if (v8)
    {
      v11 = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 72) = v8;
      *(_QWORD *)(a1 + 80) = v11;
      swift_retain(v11);
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    goto LABEL_8;
  }
  if (!v8)
  {
    sub_100008758(a1 + 72, qword_1004A09A8);
    goto LABEL_7;
  }
  v9 = *(_QWORD *)(a2 + 80);
  v10 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 72) = v8;
  *(_QWORD *)(a1 + 80) = v9;
  swift_retain(v9);
  swift_release(v10);
LABEL_8:
  v12 = *(_QWORD *)(a2 + 96);
  v13 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v12;
  swift_retain(v12);
  swift_release(v13);
  v14 = *(_QWORD *)(a2 + 112);
  v15 = *(_QWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v14;
  swift_retain(v14);
  swift_release(v15);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  return a1;
}

__n128 initializeWithTake for Radiosity.Specs(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

uint64_t assignWithTake for Radiosity.Specs(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  v5 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);

  v6 = *(_QWORD *)(a2 + 72);
  v7 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  if (!v7)
    goto LABEL_5;
  if (!v6)
  {
    sub_100008758(a1 + 72, qword_1004A09A8);
LABEL_5:
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    goto LABEL_6;
  }
  v8 = *(_QWORD *)(a2 + 80);
  v9 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 72) = v6;
  *(_QWORD *)(a1 + 80) = v8;
  swift_release(v9);
LABEL_6:
  v10 = *(_QWORD *)(a1 + 96);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_release(v10);
  v11 = *(_QWORD *)(a1 + 112);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  swift_release(v11);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  return a1;
}

uint64_t getEnumTagSinglePayload for Radiosity.Specs(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 128))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Radiosity.Specs(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 128) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 56) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 128) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Radiosity.Specs()
{
  return &type metadata for Radiosity.Specs;
}

double destroy for Radiosity.Specs.Shadow(uint64_t a1)
{
  double result;

  if (*(_QWORD *)(a1 + 24))
    *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 32)).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for Radiosity.Specs.Shadow(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  id v8;
  uint64_t v9;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v7 = (_OWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 24);
  v8 = v4;
  if (v6)
  {
    v9 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 32) = v9;
    swift_retain(v9);
  }
  else
  {
    *(_OWORD *)(a1 + 24) = *v7;
  }
  return a1;
}

uint64_t assignWithCopy for Radiosity.Specs.Shadow(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  v6 = v4;

  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  if (!v7)
  {
    if (v8)
    {
      v11 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 24) = v8;
      *(_QWORD *)(a1 + 32) = v11;
      swift_retain(v11);
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    return a1;
  }
  if (!v8)
  {
    sub_100008758(a1 + 24, qword_1004A09A8);
    goto LABEL_7;
  }
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = v9;
  swift_retain(v9);
  swift_release(v10);
  return a1;
}

uint64_t assignWithTake for Radiosity.Specs.Shadow(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v4 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  if (!v6)
    goto LABEL_5;
  if (!v5)
  {
    sub_100008758(a1 + 24, qword_1004A09A8);
LABEL_5:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    return a1;
  }
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v7;
  swift_release(v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for Radiosity.Specs.Shadow(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Radiosity.Specs.Shadow(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Radiosity.Specs.Shadow()
{
  return &type metadata for Radiosity.Specs.Shadow;
}

double destroy for Radiosity.Specs.Shadow.DrawMode(_QWORD *a1)
{
  double result;

  if (*a1 >= 0xFFFFFFFFuLL)
    *(_QWORD *)&result = swift_release(a1[1]).n128_u64[0];
  return result;
}

uint64_t _s11MusicCoreUI9RadiosityO5SpecsV6ShadowV8DrawModeOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    v3 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_retain(v3);
  }
  return a1;
}

unint64_t *assignWithCopy for Radiosity.Specs.Shadow.DrawMode(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v4 = *a2;
  if (*a1 < 0xFFFFFFFF)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      v7 = a2[1];
      *a1 = v4;
      a1[1] = v7;
      swift_retain(v7);
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_release(a1[1]);
    goto LABEL_7;
  }
  v5 = a2[1];
  v6 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  swift_retain(v5);
  swift_release(v6);
  return a1;
}

_QWORD *assignWithTake for Radiosity.Specs.Shadow.DrawMode(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  if (*a1 < 0xFFFFFFFFuLL)
    goto LABEL_5;
  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {
    swift_release(a1[1]);
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  v4 = *(_QWORD *)(a2 + 8);
  v5 = a1[1];
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  swift_release(v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for Radiosity.Specs.Shadow.DrawMode(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for Radiosity.Specs.Shadow.DrawMode(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for Radiosity.Specs.Shadow.DrawMode()
{
  return &type metadata for Radiosity.Specs.Shadow.DrawMode;
}

uint64_t initializeWithCopy for Radiosity.Specs.Radiosity(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 8) = v3;
  v5 = *(_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v4;
  swift_retain(v3);
  swift_retain(v5);
  return a1;
}

_QWORD *assignWithCopy for Radiosity.Specs.Radiosity(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[3];
  v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_retain(v6);
  swift_release(v7);
  a1[4] = a2[4];
  return a1;
}

uint64_t assignWithTake for Radiosity.Specs.Radiosity(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  v5 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release(v5);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for Radiosity.Specs.Radiosity()
{
  return &type metadata for Radiosity.Specs.Radiosity;
}

unint64_t sub_10034692C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004A0A30;
  if (!qword_1004A0A30)
  {
    v1 = sub_100005600(&qword_1004A0978);
    sub_10002FFB8(&qword_1004A0A38, &qword_1004A0968, (uint64_t)&unk_10039FC48);
    sub_10002FFB8(&qword_1004A0A40, &qword_1004A0A48, (uint64_t)&protocol conformance descriptor for _PreferenceActionModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1004A0A30);
  }
  return result;
}

uint64_t sub_1003469C8(_QWORD *a1)
{
  uint64_t v1;

  v1 = type metadata accessor for ModifiedContent(255, *a1, &type metadata for Radiosity.ViewModifier);
  sub_100346A1C();
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
}

unint64_t sub_100346A1C()
{
  unint64_t result;

  result = qword_1004A0A50[0];
  if (!qword_1004A0A50[0])
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Radiosity.ViewModifier, &type metadata for Radiosity.ViewModifier);
    atomic_store(result, qword_1004A0A50);
  }
  return result;
}

uint64_t sub_100346A60(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_10039FB00;
    v4[2] = &unk_10039FAE8;
    swift_initStructMetadata(a1, 0, 3, v4, a1 + 32);
    return 0;
  }
  return result;
}

uint64_t *sub_100346AE0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  __int128 v12;
  __int128 v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 129 > 0x18)
  {
    v9 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v12 = *(_OWORD *)(v11 + 32);
    v13 = *(_OWORD *)v11;
    *(_OWORD *)(v10 + 16) = *(_OWORD *)(v11 + 16);
    *(_OWORD *)(v10 + 32) = v12;
    *(_OWORD *)v10 = v13;
    *(_DWORD *)(v10 + 48) = *(_DWORD *)(v11 + 48);
    v14 = *(void **)(v11 + 56);
    *(_QWORD *)(v10 + 56) = v14;
    *(_QWORD *)(v10 + 64) = *(_QWORD *)(v11 + 64);
    v15 = *(_QWORD *)(v11 + 72);
    v16 = v14;
    if (v15)
    {
      v17 = *(_QWORD *)(v11 + 80);
      *(_QWORD *)(v10 + 72) = v15;
      *(_QWORD *)(v10 + 80) = v17;
      swift_retain(v17);
    }
    else
    {
      *(_OWORD *)(v10 + 72) = *(_OWORD *)(v11 + 72);
    }
    v18 = *(_QWORD *)(v11 + 96);
    *(_QWORD *)(v10 + 88) = *(_QWORD *)(v11 + 88);
    *(_QWORD *)(v10 + 96) = v18;
    v9 = *(_QWORD *)(v11 + 112);
    *(_QWORD *)(v10 + 104) = *(_QWORD *)(v11 + 104);
    *(_QWORD *)(v10 + 112) = v9;
    *(_QWORD *)(v10 + 120) = *(_QWORD *)(v11 + 120);
    *(_BYTE *)(v10 + 128) = *(_BYTE *)(v11 + 128);
    swift_retain(v18);
  }
  swift_retain(v9);
  return v4;
}

double sub_100346C0C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  double result;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = (a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;

  if (*(_QWORD *)(v4 + 72))
    swift_release(*(_QWORD *)(v4 + 80));
  swift_release(*(_QWORD *)(v4 + 96));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(v4 + 112)).n128_u64[0];
  return result;
}

uint64_t sub_100346C6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  void *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_OWORD *)v8;
  v10 = *(_OWORD *)(v8 + 32);
  *(_OWORD *)(v7 + 16) = *(_OWORD *)(v8 + 16);
  *(_OWORD *)(v7 + 32) = v10;
  *(_OWORD *)v7 = v9;
  *(_DWORD *)(v7 + 48) = *(_DWORD *)(v8 + 48);
  v11 = *(void **)(v8 + 56);
  *(_QWORD *)(v7 + 56) = v11;
  *(_QWORD *)(v7 + 64) = *(_QWORD *)(v8 + 64);
  v12 = *(_QWORD *)(v8 + 72);
  v13 = v11;
  if (v12)
  {
    v14 = *(_QWORD *)(v8 + 80);
    *(_QWORD *)(v7 + 72) = v12;
    *(_QWORD *)(v7 + 80) = v14;
    swift_retain(v14);
  }
  else
  {
    *(_OWORD *)(v7 + 72) = *(_OWORD *)(v8 + 72);
  }
  v15 = *(_QWORD *)(v8 + 96);
  *(_QWORD *)(v7 + 88) = *(_QWORD *)(v8 + 88);
  *(_QWORD *)(v7 + 96) = v15;
  v16 = *(_QWORD *)(v8 + 112);
  *(_QWORD *)(v7 + 104) = *(_QWORD *)(v8 + 104);
  *(_QWORD *)(v7 + 112) = v16;
  *(_QWORD *)(v7 + 120) = *(_QWORD *)(v8 + 120);
  *(_BYTE *)(v7 + 128) = *(_BYTE *)(v8 + 128);
  swift_retain(v15);
  swift_retain(v16);
  return a1;
}

uint64_t sub_100346D48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_QWORD *)(v7 + 8) = *(_QWORD *)(v8 + 8);
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v8 + 16);
  *(_QWORD *)(v7 + 24) = *(_QWORD *)(v8 + 24);
  *(_QWORD *)(v7 + 32) = *(_QWORD *)(v8 + 32);
  *(_QWORD *)(v7 + 40) = *(_QWORD *)(v8 + 40);
  *(_DWORD *)(v7 + 48) = *(_DWORD *)(v8 + 48);
  v9 = *(void **)(v8 + 56);
  v10 = *(void **)(v7 + 56);
  *(_QWORD *)(v7 + 56) = v9;
  v11 = v9;

  *(_QWORD *)(v7 + 64) = *(_QWORD *)(v8 + 64);
  v12 = *(_QWORD *)(v8 + 72);
  if (!*(_QWORD *)(v7 + 72))
  {
    if (v12)
    {
      v15 = *(_QWORD *)(v8 + 80);
      *(_QWORD *)(v7 + 72) = v12;
      *(_QWORD *)(v7 + 80) = v15;
      swift_retain(v15);
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(v7 + 72) = *(_OWORD *)(v8 + 72);
    goto LABEL_8;
  }
  if (!v12)
  {
    sub_100008758(v7 + 72, qword_1004A09A8);
    goto LABEL_7;
  }
  v13 = *(_QWORD *)(v8 + 80);
  v14 = *(_QWORD *)(v7 + 80);
  *(_QWORD *)(v7 + 72) = v12;
  *(_QWORD *)(v7 + 80) = v13;
  swift_retain(v13);
  swift_release(v14);
LABEL_8:
  v16 = *(_QWORD *)(v8 + 96);
  v17 = *(_QWORD *)(v7 + 96);
  *(_QWORD *)(v7 + 88) = *(_QWORD *)(v8 + 88);
  *(_QWORD *)(v7 + 96) = v16;
  swift_retain(v16);
  swift_release(v17);
  v18 = *(_QWORD *)(v8 + 112);
  v19 = *(_QWORD *)(v7 + 112);
  *(_QWORD *)(v7 + 104) = *(_QWORD *)(v8 + 104);
  *(_QWORD *)(v7 + 112) = v18;
  swift_retain(v18);
  swift_release(v19);
  *(_QWORD *)(v7 + 120) = *(_QWORD *)(v8 + 120);
  *(_BYTE *)(v7 + 128) = *(_BYTE *)(v8 + 128);
  return a1;
}

uint64_t sub_100346E98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_OWORD *)(v8 + 48);
  v11 = *(_OWORD *)v8;
  v10 = *(_OWORD *)(v8 + 16);
  *(_OWORD *)(v7 + 32) = *(_OWORD *)(v8 + 32);
  *(_OWORD *)(v7 + 48) = v9;
  *(_OWORD *)v7 = v11;
  *(_OWORD *)(v7 + 16) = v10;
  v12 = *(_OWORD *)(v8 + 112);
  v14 = *(_OWORD *)(v8 + 64);
  v13 = *(_OWORD *)(v8 + 80);
  *(_OWORD *)(v7 + 96) = *(_OWORD *)(v8 + 96);
  *(_OWORD *)(v7 + 112) = v12;
  *(_OWORD *)(v7 + 64) = v14;
  *(_OWORD *)(v7 + 80) = v13;
  *(_BYTE *)(v7 + 128) = *(_BYTE *)(v8 + 128);
  return a1;
}

uint64_t sub_100346F14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_QWORD *)(v7 + 8) = *(_QWORD *)(v8 + 8);
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v8 + 16);
  *(_QWORD *)(v7 + 24) = *(_QWORD *)(v8 + 24);
  *(_QWORD *)(v7 + 32) = *(_QWORD *)(v8 + 32);
  *(_QWORD *)(v7 + 40) = *(_QWORD *)(v8 + 40);
  *(_DWORD *)(v7 + 48) = *(_DWORD *)(v8 + 48);
  v9 = *(void **)(v7 + 56);
  *(_QWORD *)(v7 + 56) = *(_QWORD *)(v8 + 56);

  *(_QWORD *)(v7 + 64) = *(_QWORD *)(v8 + 64);
  v10 = *(_QWORD *)(v8 + 72);
  if (!*(_QWORD *)(v7 + 72))
    goto LABEL_5;
  if (!v10)
  {
    sub_100008758(v7 + 72, qword_1004A09A8);
LABEL_5:
    *(_OWORD *)(v7 + 72) = *(_OWORD *)(v8 + 72);
    goto LABEL_6;
  }
  v11 = *(_QWORD *)(v8 + 80);
  v12 = *(_QWORD *)(v7 + 80);
  *(_QWORD *)(v7 + 72) = v10;
  *(_QWORD *)(v7 + 80) = v11;
  swift_release(v12);
LABEL_6:
  v13 = *(_QWORD *)(v7 + 96);
  *(_OWORD *)(v7 + 88) = *(_OWORD *)(v8 + 88);
  swift_release(v13);
  v14 = *(_QWORD *)(v7 + 112);
  *(_OWORD *)(v7 + 104) = *(_OWORD *)(v8 + 104);
  swift_release(v14);
  *(_QWORD *)(v7 + 120) = *(_QWORD *)(v8 + 120);
  *(_BYTE *)(v7 + 128) = *(_BYTE *)(v8 + 128);
  return a1;
}

uint64_t sub_100347034(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unint64_t v13;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v13 = *(_QWORD *)(((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) + 0x38);
      if (v13 >= 0xFFFFFFFF)
        LODWORD(v13) = -1;
      return (v13 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    v8 = (a2 - v6 + 255) >> (8 * (((v7 + 7) & 0xF8) - 127));
    if ((((_DWORD)v7 + 7) & 0xFFFFFFF8) + 129 < 4)
      v9 = v8 + 1;
    else
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1003470BC + 4 * byte_10039FA40[v11]))();
  }
}

void sub_100347150(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 129;
  if (v6 >= a3)
  {
    v10 = 0;
    if (v6 >= a2)
      goto LABEL_17;
  }
  else
  {
    if (v7 <= 3)
      v8 = ((a3 - v6 + 255) >> (8 * (((*(_BYTE *)(v5 + 64) + 7) & 0xF8) - 127))) + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    if (v6 >= a2)
LABEL_17:
      __asm { BR              X12 }
  }
  if (v7 >= 4)
    v11 = ~v6 + a2;
  else
    v11 = (~(_BYTE)v6 + a2);
  bzero(a1, v7);
  if ((_DWORD)v7 == 1)
    *a1 = v11;
  else
    *(_DWORD *)a1 = v11;
  __asm { BR              X10 }
}

void sub_10034726C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x100347308);
}

void sub_100347274(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x10034727CLL);
  JUMPOUT(0x100347308);
}

void sub_1003472C0()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x100347308);
}

void sub_1003472C8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x100347308);
}

uint64_t sub_1003472D0(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)(v6 + v7) = 0;
  if (!a2)
    goto LABEL_6;
  if (a3 < 0x7FFFFFFF)
  {
    if (a2 < 0)
      JUMPOUT(0x1003472DCLL);
    *(_QWORD *)(((v6 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 56) = (a2 - 1);
LABEL_6:
    JUMPOUT(0x100347308);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v6);
}

uint64_t type metadata accessor for Radiosity.View(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100031DCC(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Radiosity.View);
}

ValueMetadata *type metadata accessor for RadiosityEnabledPreferenceKey()
{
  return &type metadata for RadiosityEnabledPreferenceKey;
}

uint64_t sub_10034733C(uint64_t a1)
{
  return swift_getWitnessTable(&unk_10039FC48, a1);
}

uint64_t sub_100347350()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 88))
    swift_release(*(_QWORD *)(v0 + 96));
  swift_release(*(_QWORD *)(v0 + 112));
  swift_release(*(_QWORD *)(v0 + 128));
  swift_release(*(_QWORD *)(v0 + 152));
  return swift_deallocObject(v0, 160, 7);
}

uint64_t sub_10034739C(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v5;
  __int128 v6;

  v2 = *a1;
  v6 = *(_OWORD *)(v1 + 144);
  v5 = v2;
  v3 = sub_100005574(&qword_10049C5C8);
  return State.wrappedValue.setter(&v5, v3);
}

unint64_t sub_1003473E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004999B8;
  if (!qword_1004999B8)
  {
    v1 = objc_opt_self(CAFilter);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1004999B8);
  }
  return result;
}

uint64_t *sub_100347424(uint64_t *a1)
{
  sub_10003A434(*a1, a1[1]);
  return a1;
}

uint64_t *sub_100347450(uint64_t *a1)
{
  sub_10003A5C8(*a1, a1[1]);
  return a1;
}

uint64_t sub_10034747C()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t sub_10034749C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for ColorScheme(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return EnvironmentValues.colorScheme.setter(v4);
}

uint64_t property wrapper backing initializer of Reactions.StackView.Model.reaction(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD v4[2];

  v4[0] = a1;
  v4[1] = a2;
  v2 = sub_100005574(&qword_1004A10E0);
  return Published.init(initialValue:)(v4, v2);
}

uint64_t Reactions.StackView.Model.reaction.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10039FCC0);
  v2 = swift_getKeyPath(&unk_10039FCE8);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

double sub_1003475CC@<D0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  __int128 v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10039FCC0);
  v5 = swift_getKeyPath(&unk_10039FCE8);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  result = *(double *)&v7;
  *a2 = v7;
  return result;
}

uint64_t sub_10034764C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  _QWORD v8[2];

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  KeyPath = swift_getKeyPath(&unk_10039FCC0);
  v6 = swift_getKeyPath(&unk_10039FCE8);
  v8[0] = v3;
  v8[1] = v2;
  swift_bridgeObjectRetain();
  swift_retain(v4);
  return static Published.subscript.setter(v8, v4, KeyPath, v6);
}

uint64_t Reactions.StackView.Model.reaction.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v6;
  _QWORD v8[2];

  KeyPath = swift_getKeyPath(&unk_10039FCC0);
  v6 = swift_getKeyPath(&unk_10039FCE8);
  v8[0] = a1;
  v8[1] = a2;
  swift_retain(v2);
  return static Published.subscript.setter(v8, v2, KeyPath, v6);
}

void (*Reactions.StackView.Model.reaction.modify(_QWORD *a1))(_QWORD *)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_10039FCC0);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_10039FCE8);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_100152AF8;
}

uint64_t Reactions.StackView.Model.$reaction.getter()
{
  return sub_100152DFC(&OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__reaction, &qword_1004A0AF0);
}

uint64_t Reactions.StackView.Model.$reaction.setter(uint64_t a1)
{
  return sub_100152E7C(a1, &qword_1004A0AF8, &OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__reaction, &qword_1004A0AF0);
}

void (*Reactions.StackView.Model.$reaction.modify(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_100005574(&qword_1004A0AF8);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__reaction;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_100005574(&qword_1004A0AF0);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_100152BF4;
}

uint64_t Reactions.StackView.Model.count.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10039FD08);
  v2 = swift_getKeyPath(&unk_10039FD30);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

void sub_100347928(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10039FD08);
  v5 = swift_getKeyPath(&unk_10039FD30);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  *a2 = v6;
}

uint64_t sub_1003479A8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10039FD08);
  v5 = swift_getKeyPath(&unk_10039FD30);
  v7 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t Reactions.StackView.Model.count.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v6;

  KeyPath = swift_getKeyPath(&unk_10039FD08);
  v4 = swift_getKeyPath(&unk_10039FD30);
  v6 = a1;
  swift_retain(v1);
  return static Published.subscript.setter(&v6, v1, KeyPath, v4);
}

void (*Reactions.StackView.Model.count.modify(_QWORD *a1))(_QWORD *)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_10039FD08);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_10039FD30);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_100152AF8;
}

uint64_t Reactions.StackView.Model.$count.getter()
{
  return sub_100152DFC(&OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__count, &qword_1004A0B08);
}

uint64_t Reactions.StackView.Model.$count.setter(uint64_t a1)
{
  return sub_100152E7C(a1, &qword_1004A0B10, &OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__count, &qword_1004A0B08);
}

void (*Reactions.StackView.Model.$count.modify(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_100005574(&qword_1004A0B10);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__count;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_100005574(&qword_1004A0B08);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_100152BF4;
}

uint64_t Reactions.StackView.Model.userImage.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10039FD50);
  v2 = swift_getKeyPath(&unk_10039FD78);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

void sub_100347C68(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10039FD50);
  v5 = swift_getKeyPath(&unk_10039FD78);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  *a2 = v6;
}

uint64_t sub_100347CE8(void **a1, uint64_t *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  id v6;
  void *v8;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10039FD50);
  v5 = swift_getKeyPath(&unk_10039FD78);
  v8 = v2;
  v6 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v8, v3, KeyPath, v5);
}

uint64_t Reactions.StackView.Model.userImage.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v6;

  KeyPath = swift_getKeyPath(&unk_10039FD50);
  v4 = swift_getKeyPath(&unk_10039FD78);
  v6 = a1;
  swift_retain(v1);
  return static Published.subscript.setter(&v6, v1, KeyPath, v4);
}

void (*Reactions.StackView.Model.userImage.modify(_QWORD *a1))(_QWORD *)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_10039FD50);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_10039FD78);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_100152AF8;
}

uint64_t Reactions.StackView.Model.$userImage.getter()
{
  return sub_100152DFC(&OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__userImage, (uint64_t *)&unk_10049F440);
}

uint64_t Reactions.StackView.Model.$userImage.setter(uint64_t a1)
{
  return sub_100152E7C(a1, &qword_1004A0B20, &OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__userImage, (uint64_t *)&unk_10049F440);
}

void (*Reactions.StackView.Model.$userImage.modify(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_100005574(&qword_1004A0B20);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__userImage;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_100005574((uint64_t *)&unk_10049F440);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_100152BF4;
}

uint64_t Reactions.StackView.Model.isReacting.getter()
{
  return sub_1001727E4((uint64_t)&unk_10039FD98, (uint64_t)&unk_10039FDC0);
}

void sub_100347F50(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_1001726D8(a1, (uint64_t)&unk_10039FD98, (uint64_t)&unk_10039FDC0, a2);
}

uint64_t sub_100347F74(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100172764(a1, a2, a3, a4, (uint64_t)&unk_10039FD98, (uint64_t)&unk_10039FDC0);
}

uint64_t Reactions.StackView.Model.isReacting.setter(char a1)
{
  return sub_10034818C(a1, (uint64_t)&unk_10039FD98, (uint64_t)&unk_10039FDC0);
}

void (*Reactions.StackView.Model.isReacting.modify(_QWORD *a1))(_QWORD *)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_10039FD98);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_10039FDC0);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_100152AF8;
}

uint64_t Reactions.StackView.Model.$isReacting.getter()
{
  return sub_100152DFC(&OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__isReacting, &qword_10049DAA0);
}

uint64_t Reactions.StackView.Model.$isReacting.setter(uint64_t a1)
{
  return sub_100152E7C(a1, &qword_1004A0B30, &OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__isReacting, &qword_10049DAA0);
}

void (*Reactions.StackView.Model.$isReacting.modify(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_100005574(&qword_1004A0B30);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__isReacting;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_100005574(&qword_10049DAA0);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_100152BF4;
}

uint64_t Reactions.StackView.Model.hasAnimatedBackground.getter()
{
  return sub_1001727E4((uint64_t)&unk_10039FDE0, (uint64_t)&unk_10039FE08);
}

void sub_100348130(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_1001726D8(a1, (uint64_t)&unk_10039FDE0, (uint64_t)&unk_10039FE08, a2);
}

uint64_t sub_100348154(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100172764(a1, a2, a3, a4, (uint64_t)&unk_10039FDE0, (uint64_t)&unk_10039FE08);
}

uint64_t Reactions.StackView.Model.hasAnimatedBackground.setter(char a1)
{
  return sub_10034818C(a1, (uint64_t)&unk_10039FDE0, (uint64_t)&unk_10039FE08);
}

uint64_t sub_10034818C(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v7;
  char v9;

  KeyPath = swift_getKeyPath(a2);
  v7 = swift_getKeyPath(a3);
  v9 = a1;
  swift_retain(v3);
  return static Published.subscript.setter(&v9, v3, KeyPath, v7);
}

void (*Reactions.StackView.Model.hasAnimatedBackground.modify(_QWORD *a1))(_QWORD *)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_10039FDE0);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_10039FE08);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_100152AF8;
}

uint64_t Reactions.StackView.Model.$hasAnimatedBackground.getter()
{
  return sub_100152DFC(&OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__hasAnimatedBackground, &qword_10049DAA0);
}

uint64_t Reactions.StackView.Model.$hasAnimatedBackground.setter(uint64_t a1)
{
  return sub_100152E7C(a1, &qword_1004A0B30, &OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__hasAnimatedBackground, &qword_10049DAA0);
}

void (*Reactions.StackView.Model.$hasAnimatedBackground.modify(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_100005574(&qword_1004A0B30);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__hasAnimatedBackground;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_100005574(&qword_10049DAA0);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_100152BF4;
}

uint64_t Reactions.StackView.Model.__allocating_init(reaction:count:userImage:isVibrant:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v11;

  v11 = swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  Reactions.StackView.Model.init(reaction:count:userImage:isVibrant:)(a1, a2, a3, a4, a5);
  return v11;
}

uint64_t Reactions.StackView.Model.init(reaction:count:userImage:isVibrant:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t KeyPath;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  _QWORD v35[2];
  _QWORD v36[3];

  v34 = a5;
  v32 = a3;
  v33 = a4;
  v30 = a1;
  v31 = a2;
  v6 = sub_100005574(&qword_10049DAA0);
  v29 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100005574((uint64_t *)&unk_10049F440);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin();
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100005574(&qword_1004A0AF0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin();
  v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = v5 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__reaction;
  v36[0] = 0;
  v36[1] = 0;
  v28 = sub_100005574(&qword_1004A10E0);
  Published.init(initialValue:)(v36, v28);
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v17, v16, v13);
  v18 = v5 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__userImage;
  v36[0] = 0;
  v19 = sub_100005574(&qword_100499760);
  Published.init(initialValue:)(v36, v19);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v18, v12, v9);
  v20 = v5 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__isReacting;
  LOBYTE(v36[0]) = 0;
  Published.init(initialValue:)(v36, &type metadata for Bool);
  v21 = *(void (**)(uint64_t, char *, uint64_t))(v29 + 32);
  v21(v20, v8, v6);
  v22 = v5 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__hasAnimatedBackground;
  LOBYTE(v36[0]) = 1;
  Published.init(initialValue:)(v36, &type metadata for Bool);
  v21(v22, v8, v6);
  v23 = OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model_isVibrant;
  *(_BYTE *)(v5 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model_isVibrant) = 0;
  v24 = swift_beginAccess(v17, v36, 33, 0);
  (*(void (**)(uint64_t, uint64_t, __n128))(v14 + 8))(v17, v13, v24);
  v35[0] = v30;
  v35[1] = v31;
  Published.init(initialValue:)(v35, v28);
  swift_endAccess(v36);
  swift_beginAccess(v5 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__count, v36, 33, 0);
  v35[0] = v32;
  Published.init(initialValue:)(v35, &type metadata for Int);
  swift_endAccess(v36);
  KeyPath = swift_getKeyPath(&unk_10039FD50);
  v26 = swift_getKeyPath(&unk_10039FD78);
  v36[0] = v33;
  swift_retain(v5);
  static Published.subscript.setter(v36, v5, KeyPath, v26);
  *(_BYTE *)(v5 + v23) = v34;
  return v5;
}

uint64_t Reactions.StackView.Model.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);

  v1 = v0 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__reaction;
  v2 = sub_100005574(&qword_1004A0AF0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__count;
  v4 = sub_100005574(&qword_1004A0B08);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__userImage;
  v6 = sub_100005574((uint64_t *)&unk_10049F440);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = v0 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__isReacting;
  v8 = sub_100005574(&qword_10049DAA0);
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
  v9(v7, v8);
  v9(v0 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__hasAnimatedBackground, v8);
  return v0;
}

uint64_t Reactions.StackView.Model.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);

  v1 = v0 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__reaction;
  v2 = sub_100005574(&qword_1004A0AF0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__count;
  v4 = sub_100005574(&qword_1004A0B08);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__userImage;
  v6 = sub_100005574((uint64_t *)&unk_10049F440);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = v0 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__isReacting;
  v8 = sub_100005574(&qword_10049DAA0);
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
  v9(v7, v8);
  v9(v0 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__hasAnimatedBackground, v8);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100348898@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for Reactions.StackView.Model(0);
  result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

uint64_t property wrapper backing initializer of Reactions.StackView.model(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for Reactions.StackView.Model(0);
  v3 = sub_100006924(&qword_1004A0B40, type metadata accessor for Reactions.StackView.Model, (uint64_t)&protocol conformance descriptor for Reactions.StackView.Model);
  return ObservedObject.init(wrappedValue:)(a1, v2, v3);
}

uint64_t type metadata accessor for Reactions.StackView.Model(uint64_t a1)
{
  return sub_1000091AC(a1, (uint64_t *)&unk_1004A0C20, (uint64_t)&nominal type descriptor for Reactions.StackView.Model);
}

uint64_t Reactions.StackView.model.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 8));
}

void Reactions.StackView.model.setter(uint64_t a1)
{
  uint64_t v1;

  swift_release(*(_QWORD *)(v1 + 8));
  *(_QWORD *)(v1 + 8) = a1;
}

uint64_t Reactions.StackView.$model.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *v0;
  v2 = v0[1];
  v3 = type metadata accessor for Reactions.StackView.Model(0);
  v4 = sub_100006924(&qword_1004A0B40, type metadata accessor for Reactions.StackView.Model, (uint64_t)&protocol conformance descriptor for Reactions.StackView.Model);
  return ObservedObject.projectedValue.getter(v1, v2, v3, v4);
}

uint64_t Reactions.StackView.init(model:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  int *v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v4 = (int *)type metadata accessor for Reactions.StackView(0);
  v5 = (uint64_t *)((char *)a2 + v4[5]);
  *v5 = swift_getKeyPath(&unk_10039FE28);
  v6 = sub_100005574(&qword_100498ED8);
  swift_storeEnumTagMultiPayload(v5, v6, 0);
  v7 = (uint64_t *)((char *)a2 + v4[6]);
  *v7 = swift_getKeyPath(&unk_10039FE58);
  v8 = sub_100005574((uint64_t *)&unk_100498E40);
  swift_storeEnumTagMultiPayload(v7, v8, 0);
  v9 = (uint64_t *)((char *)a2 + v4[7]);
  *v9 = swift_getKeyPath(&unk_10039FE88);
  v10 = sub_100005574(&qword_100498E60);
  swift_storeEnumTagMultiPayload(v9, v10, 0);
  v11 = type metadata accessor for Reactions.StackView.Model(0);
  v12 = sub_100006924(&qword_1004A0B40, type metadata accessor for Reactions.StackView.Model, (uint64_t)&protocol conformance descriptor for Reactions.StackView.Model);
  result = ObservedObject.init(wrappedValue:)(a1, v11, v12);
  *a2 = result;
  a2[1] = v14;
  return result;
}

uint64_t type metadata accessor for Reactions.StackView(uint64_t a1)
{
  return sub_1000091AC(a1, qword_1004A0BB8, (uint64_t)&nominal type descriptor for Reactions.StackView);
}

uint64_t sub_100348AE4()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t Reactions.StackView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  double *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  double v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v23;

  sub_100005574(&qword_1004A0B48);
  __chkstk_darwin();
  v4 = (double *)((char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_100005574(&qword_1004A0B50);
  __chkstk_darwin();
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100498CC0 != -1)
    swift_once(&qword_100498CC0, sub_10034AF70);
  v8 = *(double *)&qword_1004A0AE0;
  v9 = v8 - sub_100348CAC();
  *(_QWORD *)v4 = static VerticalAlignment.center.getter(v10);
  v4[1] = v9;
  *((_BYTE *)v4 + 16) = 0;
  v11 = sub_100005574(&qword_1004A0B58);
  sub_100348E54(v1, (double *)((char *)v4 + *(int *)(v11 + 44)));
  v13 = static Edge.Set.all.getter(v12);
  v14 = EdgeInsets.init(_all:)(-2.0);
  v16 = v15;
  v18 = v17;
  v20 = v19;
  sub_100014A7C((uint64_t)v4, (uint64_t)v7, &qword_1004A0B48);
  v21 = &v7[*(int *)(v5 + 36)];
  *v21 = v13;
  *((double *)v21 + 1) = v14;
  *((_QWORD *)v21 + 2) = v16;
  *((_QWORD *)v21 + 3) = v18;
  *((_QWORD *)v21 + 4) = v20;
  v21[40] = 0;
  sub_100008758((uint64_t)v4, &qword_1004A0B48);
  sub_100014A7C((uint64_t)v7, a1, &qword_1004A0B50);
  return sub_100008758((uint64_t)v7, &qword_1004A0B50);
}

double sub_100348CAC()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  double v6;
  void *v7;
  id v8;
  id v9;
  double v10;
  double v11;
  uint64_t v13;

  sub_100005574(&qword_100499A30);
  __chkstk_darwin();
  v1 = (char *)&v13 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for DynamicTypeSize(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin();
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100498CB8 != -1)
    swift_once(&qword_100498CB8, sub_10034AF60);
  v6 = *(double *)&qword_1004A0AD8;
  type metadata accessor for Reactions.StackView(0);
  sub_1002BE220((uint64_t)v5);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v1, v5, v2);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v1, 0, 1, v2);
  v7 = (void *)UIContentSizeCategory.init(_:)(v1);
  v8 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithPreferredContentSizeCategory:", v7);
  v9 = objc_msgSend((id)objc_opt_self(UIFontMetrics), "defaultMetrics");
  objc_msgSend(v9, "scaledValueForValue:compatibleWithTraitCollection:", v8, v6);
  v11 = v10;

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v11;
}

void sub_100348E54(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(void);
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  _QWORD v60[2];

  v56 = a2;
  sub_100005574(&qword_1004A0E08);
  __chkstk_darwin();
  v57 = (uint64_t)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v5 = (uint64_t *)((char *)&v48 - v4);
  v50 = *(_QWORD *)(type metadata accessor for Reactions.StackView(0) - 8);
  v6 = *(_QWORD *)(v50 + 64);
  __chkstk_darwin();
  v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = sub_100005574(&qword_1004A0E10);
  v53 = *(_QWORD *)(v55 - 8);
  __chkstk_darwin();
  v54 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v52 = (char *)&v48 - v9;
  v10 = type metadata accessor for BlendMode(0);
  v11 = *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64);
  __chkstk_darwin();
  v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v51 = a1;
  v13 = *(_QWORD *)(a1 + 8);
  v59 = v14;
  v15 = *(void (**)(void))(v14 + 104);
  v58 = (char *)&v48 - v16;
  v15();
  KeyPath = swift_getKeyPath(&unk_10039FD08);
  v18 = swift_getKeyPath(&unk_10039FD30);
  swift_retain(v13);
  static Published.subscript.getter(v60, v19, KeyPath);
  swift_release(v13);
  swift_release(KeyPath);
  swift_release(v18);
  v20 = v60[0];
  if (v60[0] >= 3)
    v20 = 3;
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    v60[0] = 0;
    v60[1] = v22 & ~(v22 >> 63);
    v49 = swift_getKeyPath(&unk_10039FFB0);
    v23 = v51;
    sub_10034BE5C(v51, (uint64_t)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    v24 = v58;
    v25 = v59;
    (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v12, v58, v10);
    v26 = *(unsigned __int8 *)(v50 + 80);
    v27 = (v26 + 16) & ~v26;
    v28 = *(unsigned __int8 *)(v25 + 80);
    v29 = (v6 + v28 + v27) & ~v28;
    v30 = swift_allocObject(&unk_100465CD0, v29 + v11, v26 | v28 | 7);
    sub_10034C050((uint64_t)v7, v30 + v27);
    (*(void (**)(uint64_t, char *, uint64_t))(v25 + 32))(v30 + v29, v12, v10);
    v31 = sub_100005574(&qword_10049D728);
    v32 = sub_100005574(&qword_1004A0E18);
    v33 = sub_10034C10C();
    v34 = sub_10034C178();
    v35 = v52;
    v36 = ForEach<>.init(_:id:content:)(v60, v49, sub_10034C094, v30, v31, v32, v33, &protocol witness table for Int, v34);
    *v5 = static Alignment.center.getter(v36);
    v5[1] = v37;
    v38 = sub_100005574(&qword_1004A0E50);
    sub_100349D98(v23, v24, (uint64_t)v5 + *(int *)(v38 + 44));
    v51 = v10;
    v39 = v35;
    v40 = v53;
    v41 = v54;
    v42 = *(void (**)(char *, char *, uint64_t))(v53 + 16);
    v43 = v55;
    v42(v54, v39, v55);
    v44 = v57;
    sub_100014A7C((uint64_t)v5, v57, &qword_1004A0E08);
    v45 = v56;
    *v56 = 0;
    *((_BYTE *)v45 + 8) = 1;
    v46 = sub_100005574(&qword_1004A0E58);
    v42((char *)v45 + *(int *)(v46 + 48), v41, v43);
    sub_100014A7C(v44, (uint64_t)v45 + *(int *)(v46 + 64), &qword_1004A0E08);
    sub_100008758((uint64_t)v5, &qword_1004A0E08);
    v47 = *(void (**)(char *, uint64_t))(v40 + 8);
    v47(v39, v43);
    (*(void (**)(char *, uint64_t))(v59 + 8))(v58, v51);
    sub_100008758(v44, &qword_1004A0E08);
    v47(v41, v43);
  }
}

uint64_t sub_100349290@<X0>(uint64_t a1@<X1>, char *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  double v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t OpaqueTypeConformance2;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[2];

  v31 = a3;
  v5 = type metadata accessor for ScaleTransition(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100005574(&qword_1004A0E60);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin();
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v14 = (char *)&v30 - v13;
  sub_100005574(&qword_1004A0E38);
  v15 = __chkstk_darwin();
  v17 = (uint64_t *)((char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v17 = static Alignment.center.getter(v15);
  v17[1] = v18;
  v19 = sub_100005574(&qword_1004A0F08);
  sub_1003494D4(a1, a2, (uint64_t)v17 + *(int *)(v19 + 44));
  v21 = static UnitPoint.center.getter(v20);
  ScaleTransition.init(_:anchor:)(0.00001, v21, v22);
  v23 = static Animation.easeInOut(duration:)(0.25);
  v24 = sub_100006924(&qword_1004A0EA8, (uint64_t (*)(uint64_t))&type metadata accessor for ScaleTransition, (uint64_t)&protocol conformance descriptor for ScaleTransition);
  Transition.animation(_:)(v23, v5, v24);
  v25 = swift_release(v23);
  (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v25);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v14, v9);
  v32[0] = v5;
  v32[1] = v24;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v32, &opaque type descriptor for <<opaque return type of Transition.animation(_:)>>, 1);
  v27 = AnyTransition.init<A>(_:)(v12, v9, OpaqueTypeConformance2);
  v28 = v31;
  sub_100014A7C((uint64_t)v17, v31, &qword_1004A0E38);
  *(_QWORD *)(v28 + *(int *)(sub_100005574(&qword_1004A0E18) + 36)) = v27;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
  return sub_100008758((uint64_t)v17, &qword_1004A0E38);
}

uint64_t sub_1003494D4@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  unsigned __int8 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unsigned __int8 v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;

  v61 = a2;
  v63 = a3;
  v62 = sub_100005574(&qword_1004A0E68);
  __chkstk_darwin();
  v59 = (uint64_t)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_100005574(&qword_1004A0E70);
  __chkstk_darwin();
  v56 = (uint64_t *)((char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v57 = sub_100005574(&qword_1004A0F10);
  __chkstk_darwin();
  v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v60 = (uint64_t)&v48 - v8;
  v55 = sub_100005574(&qword_1004A0E80);
  __chkstk_darwin();
  v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = type metadata accessor for BlendMode(0);
  v11 = *(_QWORD *)(v64 - 8);
  __chkstk_darwin();
  v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_1004A0E88);
  __chkstk_darwin();
  v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_100005574(&qword_1004A0E90);
  __chkstk_darwin();
  v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin();
  v65 = (uint64_t)&v48 - v19;
  v20 = static Color.clear.getter(v18);
  v53 = a1;
  v21 = sub_100348CAC() + 4.0;
  v22 = sub_100348CAC() + 4.0;
  v24 = static Alignment.center.getter(v23);
  _FrameLayout.init(width:height:alignment:)(&v67, *(_QWORD *)&v21, 0, *(_QWORD *)&v22, 0, v24, v25);
  v26 = v67;
  LOBYTE(v21) = v68;
  v51 = v69;
  v50 = v70;
  v49 = v71;
  v48 = v72;
  v27 = v64;
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for BlendMode.destinationOut(_:), v64);
  v54 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v54(v15, v13, v27);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v27);
  sub_100014A7C((uint64_t)v15, (uint64_t)v10, &qword_1004A0E88);
  *(_WORD *)&v10[*(int *)(v55 + 56)] = 256;
  sub_100014A7C((uint64_t)v10, (uint64_t)&v17[*(int *)(v52 + 36)], &qword_1004A0E80);
  *(_QWORD *)v17 = v20;
  *((_QWORD *)v17 + 1) = v26;
  v17[16] = LOBYTE(v21);
  *((_QWORD *)v17 + 3) = v51;
  v17[32] = v50;
  v28 = v48;
  *((_QWORD *)v17 + 5) = v49;
  *((_QWORD *)v17 + 6) = v28;
  swift_retain(v20);
  sub_100008758((uint64_t)v10, &qword_1004A0E80);
  sub_100008758((uint64_t)v15, &qword_1004A0E88);
  swift_release(v20);
  v29 = sub_1000149A8((uint64_t)v17, v65, &qword_1004A0E90);
  v30 = static Color.clear.getter(v29);
  v31 = sub_100348CAC();
  v32 = sub_100348CAC();
  v34 = static Alignment.center.getter(v33);
  _FrameLayout.init(width:height:alignment:)(&v73, *(_QWORD *)&v31, 0, *(_QWORD *)&v32, 0, v34, v35);
  v55 = v73;
  LODWORD(v52) = v74;
  v36 = v75;
  LOBYTE(v21) = v76;
  v37 = v77;
  v51 = v78;
  sub_100349AC0(&v66);
  v38 = v66;
  v39 = v56;
  v54((char *)v56 + *(int *)(v58 + 36), v61, v64);
  *v39 = v38;
  v40 = v59;
  sub_100014A7C((uint64_t)v39, v59, &qword_1004A0E70);
  *(_WORD *)(v40 + *(int *)(v62 + 56)) = 256;
  sub_100014A7C(v40, (uint64_t)&v7[*(int *)(v57 + 36)], &qword_1004A0E68);
  v41 = v55;
  *(_QWORD *)v7 = v30;
  *((_QWORD *)v7 + 1) = v41;
  v7[16] = v52;
  *((_QWORD *)v7 + 3) = v36;
  v7[32] = LOBYTE(v21);
  v42 = v51;
  *((_QWORD *)v7 + 5) = v37;
  *((_QWORD *)v7 + 6) = v42;
  swift_retain(v30);
  sub_100008758(v40, &qword_1004A0E68);
  sub_100008758((uint64_t)v39, &qword_1004A0E70);
  swift_release(v30);
  v43 = v60;
  sub_1000149A8((uint64_t)v7, v60, &qword_1004A0F10);
  v44 = v65;
  sub_100014A7C(v65, (uint64_t)v17, &qword_1004A0E90);
  sub_100014A7C(v43, (uint64_t)v7, &qword_1004A0F10);
  v45 = v63;
  sub_100014A7C((uint64_t)v17, v63, &qword_1004A0E90);
  v46 = sub_100005574(&qword_1004A0F18);
  sub_100014A7C((uint64_t)v7, v45 + *(int *)(v46 + 48), &qword_1004A0F10);
  sub_100008758(v43, &qword_1004A0F10);
  sub_100008758(v44, &qword_1004A0E90);
  sub_100008758((uint64_t)v7, &qword_1004A0F10);
  return sub_100008758((uint64_t)v17, &qword_1004A0E90);
}

uint64_t sub_100349AC0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  int v14;
  id v15;
  void *v16;
  void *v17;
  uint64_t v18;
  void *v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v2 = v1;
  v26 = a1;
  v25 = sub_100005574(&qword_1004A0EB0);
  __chkstk_darwin();
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ColorSchemeContrast(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ColorScheme(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin();
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Reactions.StackView(0);
  sub_1002BE3E0((uint64_t)v12);
  sub_1002BEB28((uint64_t)v8);
  v13 = &v4[*(int *)(v25 + 48)];
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v4, v12, v9);
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v13, v8, v5);
  v14 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v4, v9);
  if (v14 == enum case for ColorScheme.light(_:))
  {
    if ((*(unsigned int (**)(char *, uint64_t))(v6 + 88))(v13, v5) == enum case for ColorSchemeContrast.increased(_:))
    {
      v15 = objc_msgSend((id)objc_opt_self(UIColor), "secondarySystemFillColor");
      v27 = Color.init(_:)(v15);
      v16 = &type metadata for Color;
      v17 = &protocol witness table for Color;
LABEL_7:
      v18 = AnyShapeStyle.init<A>(_:)(&v27, v16, v17);
      *v26 = v18;
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v4, v9);
    }
  }
  else if (v14 == enum case for ColorScheme.dark(_:)
         && (*(unsigned int (**)(char *, uint64_t))(v6 + 88))(v13, v5) == enum case for ColorSchemeContrast.increased(_:))
  {
    LODWORD(v27) = static HierarchicalShapeStyle.quinary.getter();
    v16 = &type metadata for HierarchicalShapeStyle;
    v17 = &protocol witness table for HierarchicalShapeStyle;
    goto LABEL_7;
  }
  if (*(_BYTE *)(*(_QWORD *)(v2 + 8) + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model_isVibrant) == 1)
  {
    LODWORD(v27) = static HierarchicalShapeStyle.quaternary.getter();
    v20 = &type metadata for HierarchicalShapeStyle;
    v21 = &protocol witness table for HierarchicalShapeStyle;
  }
  else
  {
    v22 = objc_msgSend((id)objc_opt_self(UIColor), "secondarySystemFillColor");
    v27 = Color.init(_:)(v22);
    v20 = &type metadata for Color;
    v21 = &protocol witness table for Color;
  }
  v23 = AnyShapeStyle.init<A>(_:)(&v27, v20, v21);
  *v26 = v23;
  return sub_100008758((uint64_t)v4, &qword_1004A0EB0);
}

uint64_t sub_100349D98@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t KeyPath;
  double v41;
  double v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  __n128 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  __n128 v85;
  uint64_t v86;
  __n128 v87;
  double v88;
  char *v89;
  double v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  __n128 v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t OpaqueTypeConformance2;
  uint64_t v100;
  double v101;
  double v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  __C::_NSRange v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  void (*v136)(char *, char *, uint64_t);
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  int *v147;
  uint64_t v148;
  uint64_t *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  _BYTE v153[7];
  char v154;
  _BYTE v155[7];
  char v156;
  char v157;
  int v158;
  __int16 v159;
  char v160;
  _BYTE v161[147];
  _QWORD v162[19];
  _QWORD v163[2];
  __int16 v164;
  int v165;
  __int16 v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char v171;
  _BYTE v172[7];
  uint64_t v173;
  uint64_t v174;
  char v175;
  _BYTE v176[7];
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char v180;
  _BYTE v181[7];
  uint64_t v182;
  char v183;
  _BYTE v184[7];
  __int128 v185;
  uint64_t v186;
  unsigned __int8 v187;
  uint64_t v188;
  unsigned __int8 v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  char v193;
  uint64_t v194;
  unsigned __int8 v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  char v199;
  uint64_t v200;
  char v201;
  __int128 v202;
  int *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  unsigned __int8 v209;

  v141 = a2;
  v144 = a3;
  v125 = type metadata accessor for ScaleTransition(0);
  v122 = *(_QWORD *)(v125 - 8);
  __chkstk_darwin();
  v121 = (char *)&v117 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100005574(&qword_1004A0E60);
  v126 = *(_QWORD *)(v5 - 8);
  v127 = v5;
  __chkstk_darwin();
  v123 = (char *)&v117 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v124 = (char *)&v117 - v7;
  v8 = type metadata accessor for Image.ResizingMode(0);
  v119 = *(_QWORD *)(v8 - 8);
  v120 = v8;
  __chkstk_darwin();
  v118 = (char *)&v117 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = sub_100005574(&qword_1004A0E68);
  __chkstk_darwin();
  v150 = (uint64_t)&v117 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = sub_100005574(&qword_1004A0E70);
  __chkstk_darwin();
  v149 = (uint64_t *)((char *)&v117 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100005574(&qword_10049C6C8);
  __chkstk_darwin();
  v137 = (char *)&v117 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = sub_100005574(&qword_1004A0E78);
  __chkstk_darwin();
  v143 = (uint64_t)&v117 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v15 = (char *)&v117 - v14;
  __chkstk_darwin();
  v145 = (char *)&v117 - v16;
  v147 = (int *)sub_100005574(&qword_1004A0E80);
  __chkstk_darwin();
  v18 = (char *)&v117 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v148 = type metadata accessor for BlendMode(0);
  v19 = *(_QWORD *)(v148 - 8);
  __chkstk_darwin();
  v21 = (char *)&v117 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_1004A0E88);
  __chkstk_darwin();
  v23 = (char *)&v117 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = sub_100005574(&qword_1004A0E90);
  __chkstk_darwin();
  v25 = (char *)&v117 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __chkstk_darwin();
  v151 = (uint64_t)&v117 - v27;
  v28 = static Color.clear.getter(v26);
  v152 = a1;
  v29 = sub_100348CAC() + 4.0;
  v30 = sub_100348CAC() + 4.0;
  v32 = static Alignment.center.getter(v31);
  _FrameLayout.init(width:height:alignment:)(&v186, *(_QWORD *)&v29, 0, *(_QWORD *)&v30, 0, v32, v33);
  v34 = v186;
  LODWORD(v142) = v187;
  v135 = v188;
  LODWORD(v134) = v189;
  v132 = v191;
  v133 = v190;
  v35 = v148;
  (*(void (**)(char *, _QWORD, uint64_t))(v19 + 104))(v21, enum case for BlendMode.destinationOut(_:), v148);
  v136 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
  v136(v23, v21, v35);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v35);
  sub_100014A7C((uint64_t)v23, (uint64_t)v18, &qword_1004A0E88);
  *(_WORD *)&v18[v147[14]] = 256;
  sub_100014A7C((uint64_t)v18, (uint64_t)&v25[*(int *)(v146 + 36)], &qword_1004A0E80);
  *(_QWORD *)v25 = v28;
  *((_QWORD *)v25 + 1) = v34;
  v25[16] = (char)v142;
  *((_QWORD *)v25 + 3) = v135;
  v25[32] = v134;
  v36 = v132;
  *((_QWORD *)v25 + 5) = v133;
  *((_QWORD *)v25 + 6) = v36;
  swift_retain(v28);
  sub_100008758((uint64_t)v18, &qword_1004A0E80);
  sub_100008758((uint64_t)v23, &qword_1004A0E88);
  swift_release(v28);
  v142 = v25;
  sub_1000149A8((uint64_t)v25, v151, &qword_1004A0E90);
  sub_10034A988(v152, (uint64_t)&v203);
  v147 = v203;
  v134 = v205;
  v135 = v204;
  v132 = v207;
  v133 = v206;
  v131 = v208;
  LODWORD(v146) = v209;
  v37 = sub_10034AC5C();
  v38 = type metadata accessor for Font.Design(0);
  v39 = (uint64_t)v137;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v137, 1, 1, v38);
  v130 = static Font.system(size:weight:design:)(0, 1, v39, v37);
  sub_100008758(v39, &qword_10049C6C8);
  KeyPath = swift_getKeyPath(&unk_10039FFC8);
  v41 = sub_100348CAC();
  v42 = sub_100348CAC();
  v44 = static Alignment.center.getter(v43);
  _FrameLayout.init(width:height:alignment:)(&v192, *(_QWORD *)&v41, 0, *(_QWORD *)&v42, 0, v44, v45);
  v46 = v192;
  LOBYTE(v19) = v193;
  v47 = v194;
  LODWORD(v137) = v195;
  v48 = v196;
  v129 = v197;
  sub_100349AC0((uint64_t *)&v203);
  v49 = (uint64_t)v203;
  v50 = v149;
  v136((char *)v149 + *(int *)(v139 + 36), (char *)v141, v148);
  *v50 = v49;
  v51 = v150;
  sub_100014A7C((uint64_t)v50, v150, &qword_1004A0E70);
  *(_WORD *)(v51 + *(int *)(v140 + 56)) = 256;
  sub_100014A7C(v51, (uint64_t)&v15[*(int *)(v138 + 36)], &qword_1004A0E68);
  v52 = (uint64_t)v147;
  v54 = v134;
  v53 = v135;
  *(_QWORD *)v15 = v147;
  *((_QWORD *)v15 + 1) = v53;
  v56 = v132;
  v55 = v133;
  *((_QWORD *)v15 + 2) = v54;
  *((_QWORD *)v15 + 3) = v55;
  v57 = v130;
  v58 = v131;
  *((_QWORD *)v15 + 4) = v56;
  *((_QWORD *)v15 + 5) = v58;
  v59 = v146;
  v15[48] = v146;
  v128 = KeyPath;
  *((_QWORD *)v15 + 7) = KeyPath;
  *((_QWORD *)v15 + 8) = v57;
  *((_QWORD *)v15 + 9) = v46;
  v15[80] = v19;
  *((_QWORD *)v15 + 11) = v47;
  v15[96] = (char)v137;
  v60 = (uint64_t)v145;
  v61 = v129;
  *((_QWORD *)v15 + 13) = v48;
  *((_QWORD *)v15 + 14) = v61;
  v62 = v53;
  v63 = v54;
  v64 = v55;
  v65 = v56;
  sub_10034C21C(v52, v53, v54, v55, v56, v58, v59);
  swift_retain(KeyPath);
  swift_retain(v57);
  sub_100008758(v150, &qword_1004A0E68);
  sub_100008758((uint64_t)v149, &qword_1004A0E70);
  sub_10034C2B4((uint64_t)v147, v62, v63, v64, v65, v58, v146);
  swift_release(v57);
  swift_release(v128);
  v66 = v60;
  sub_1000149A8((uint64_t)v15, v60, &qword_1004A0E78);
  v67 = *(_QWORD *)(v152 + 8);
  v68 = swift_getKeyPath(&unk_10039FD50);
  v69 = swift_getKeyPath(&unk_10039FD78);
  swift_retain(v67);
  static Published.subscript.getter(&v203, v70, v68);
  swift_release(v67);
  swift_release(v68);
  swift_release(v69);
  v71 = v203;
  if (!v203)
    goto LABEL_5;
  v72 = *(_QWORD *)(v152 + 8);
  v73 = swift_getKeyPath(&unk_10039FD98);
  v74 = swift_getKeyPath(&unk_10039FDC0);
  swift_retain(v72);
  static Published.subscript.getter(&v203, v75, v73);
  swift_release(v72);
  swift_release(v73);
  swift_release(v74);
  if (v203 != 1)
  {

LABEL_5:
    sub_10034C330((uint64_t)v163);
    goto LABEL_6;
  }
  v76 = v71;
  v77 = Image.init(uiImage:)(v76);
  v79 = v118;
  v78 = v119;
  v80 = v120;
  (*(void (**)(char *, _QWORD, uint64_t))(v119 + 104))(v118, enum case for Image.ResizingMode.stretch(_:), v120);
  v150 = Image.resizable(capInsets:resizingMode:)(v79, v77, 0.0, 0.0, 0.0, 0.0);
  v81 = swift_release(v77);
  v82 = (*(uint64_t (**)(char *, uint64_t, __n128))(v78 + 8))(v79, v80, v81);
  v83 = static Alignment.center.getter(v82);
  v148 = v84;
  v149 = (uint64_t *)v83;
  v86 = static Color.black.getter(v85);
  v147 = (int *)Color.opacity(_:)(0.08);
  v87 = swift_release(v86);
  v88 = static UnitPoint.center.getter(v87);
  v89 = v121;
  ScaleTransition.init(_:anchor:)(0.00001, v88, v90);
  v91 = static Animation.easeInOut(duration:)(0.25);
  v92 = sub_100006924(&qword_1004A0EA8, (uint64_t (*)(uint64_t))&type metadata accessor for ScaleTransition, (uint64_t)&protocol conformance descriptor for ScaleTransition);
  v94 = v124;
  v93 = v125;
  Transition.animation(_:)(v91, v125, v92);
  v95 = swift_release(v91);
  (*(void (**)(char *, uint64_t, __n128))(v122 + 8))(v89, v93, v95);
  v97 = v126;
  v96 = v127;
  v98 = v123;
  (*(void (**)(char *, char *, uint64_t))(v126 + 16))(v123, v94, v127);
  v203 = (int *)v93;
  v204 = v92;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v203, &opaque type descriptor for <<opaque return type of Transition.animation(_:)>>, 1);
  v100 = AnyTransition.init<A>(_:)(v98, v96, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v97 + 8))(v94, v96);
  v101 = sub_100348CAC();
  v102 = sub_100348CAC();
  v104 = static Alignment.center.getter(v103);
  _FrameLayout.init(width:height:alignment:)(&v198, *(_QWORD *)&v101, 0, *(_QWORD *)&v102, 0, v104, v105);
  v106 = v198;
  LOBYTE(v101) = v199;
  v107 = v200;
  v108 = v201;

  v160 = 1;
  v157 = 1;
  v156 = LOBYTE(v101);
  v154 = v108;
  v163[0] = v150;
  v163[1] = 0;
  v164 = 257;
  v165 = v158;
  v166 = v159;
  v167 = (uint64_t)v149;
  v168 = v148;
  v169 = (uint64_t)v147;
  v170 = 0x3FE0000000000000;
  v171 = 0;
  *(_DWORD *)&v172[3] = *(_DWORD *)((char *)v162 + 3);
  *(_DWORD *)v172 = v162[0];
  v173 = 0;
  v174 = 0;
  v175 = 1;
  *(_DWORD *)v176 = *(_DWORD *)v161;
  *(_DWORD *)&v176[3] = *(_DWORD *)&v161[3];
  v177 = 0x3FF0000000000000;
  v178 = v100;
  v66 = (uint64_t)v145;
  v179 = v106;
  v180 = LOBYTE(v101);
  *(_DWORD *)v181 = *(_DWORD *)v155;
  *(_DWORD *)&v181[3] = *(_DWORD *)&v155[3];
  v182 = v107;
  v183 = v108;
  *(_DWORD *)&v184[3] = *(_DWORD *)&v153[3];
  *(_DWORD *)v184 = *(_DWORD *)v153;
  v185 = v202;
  v109.location = (Swift::Int)v163;
  CFRange.init(_:)(v109);
LABEL_6:
  sub_1000149A8((uint64_t)v163, (uint64_t)&v203, &qword_1004A0E98);
  v110 = v151;
  v111 = (uint64_t)v142;
  sub_100014A7C(v151, (uint64_t)v142, &qword_1004A0E90);
  v112 = v143;
  sub_100014A7C(v66, v143, &qword_1004A0E78);
  sub_1000149A8((uint64_t)&v203, (uint64_t)v161, &qword_1004A0E98);
  v113 = v144;
  sub_100014A7C(v111, v144, &qword_1004A0E90);
  v114 = sub_100005574(&qword_1004A0EA0);
  sub_100014A7C(v112, v113 + *(int *)(v114 + 48), &qword_1004A0E78);
  v115 = v113 + *(int *)(v114 + 64);
  sub_1000149A8((uint64_t)v161, (uint64_t)v162, &qword_1004A0E98);
  sub_1000149A8((uint64_t)v162, v115, &qword_1004A0E98);
  sub_10034C388(v162, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10034C350);
  sub_100008758(v66, &qword_1004A0E78);
  sub_100008758(v110, &qword_1004A0E90);
  sub_1000149A8((uint64_t)v161, (uint64_t)v163, &qword_1004A0E98);
  sub_10034C388(v163, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10034C3EC);
  sub_100008758(v112, &qword_1004A0E78);
  return sub_100008758(v111, &qword_1004A0E90);
}

double sub_10034A988@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  double v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  double result;
  __int128 v42;
  __int128 v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  _OWORD v53[3];
  char v54;

  v4 = type metadata accessor for ScaleTransition(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v9 = (char *)&v45 - v8;
  v10 = *(_QWORD *)(a1 + 8);
  KeyPath = swift_getKeyPath(&unk_10039FCC0);
  v12 = swift_getKeyPath(&unk_10039FCE8);
  swift_retain(v10);
  static Published.subscript.getter(v53, v13, KeyPath);
  swift_release(v10);
  swift_release(KeyPath);
  swift_release(v12);
  if (*((_QWORD *)&v53[0] + 1))
  {
    v14 = sub_10024AF7C();
    v15 = Text.init<A>(_:)(v53, &type metadata for String, v14);
    v17 = v16;
    v19 = v18;
    v21 = v20 & 1;
    v22 = static Animation.easeInOut(duration:)(0.25);
    v24 = static UnitPoint.center.getter(v23);
    ScaleTransition.init(_:anchor:)(0.00001, v24, v25);
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v9, v4);
    v26 = sub_100006924(&qword_1004A0EA8, (uint64_t (*)(uint64_t))&type metadata accessor for ScaleTransition, (uint64_t)&protocol conformance descriptor for ScaleTransition);
    v27 = AnyTransition.init<A>(_:)(v7, v4, v26);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
    v46 = v15;
    v47 = v17;
    v48 = v21;
    v49 = v19;
    v50 = v22;
    v51 = v27;
    v52 = 0;
  }
  else
  {
    v28 = Image.init(_internalSystemName:)(0xD000000000000013, 0x80000001003BB620);
    v29 = swift_getKeyPath(&unk_10039FDE0);
    v30 = swift_getKeyPath(&unk_10039FE08);
    swift_retain(v10);
    static Published.subscript.getter(v53, v31, v29);
    swift_release(v10);
    swift_release(v29);
    v32 = swift_release(v30);
    if (LOBYTE(v53[0]) == 1)
      v33 = static Color.primary.getter(v32);
    else
      v33 = static Color.accentColor.getter(v32);
    v34 = v33;
    v35 = static Font.callout.getter(v33);
    v36 = swift_getKeyPath(&unk_10039FFC8);
    v46 = v28;
    v47 = v34;
    v48 = v36;
    v49 = v35;
    v50 = 0;
    v51 = 0;
    v52 = 1;
  }
  v37 = sub_100005574(&qword_1004A0EB8);
  v38 = sub_100005574(&qword_1004A0EC0);
  v39 = sub_10034C424();
  v40 = sub_10034C4C0();
  _ConditionalContent<>.init(storage:)(&v46, v37, v38, v39, v40);
  result = *(double *)v53;
  v42 = v53[1];
  v43 = v53[2];
  v44 = v54;
  *(_OWORD *)a2 = v53[0];
  *(_OWORD *)(a2 + 16) = v42;
  *(_OWORD *)(a2 + 32) = v43;
  *(_BYTE *)(a2 + 48) = v44;
  return result;
}

double sub_10034AC5C()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  id v7;
  id v8;
  double v9;
  double v10;
  uint64_t v12;

  sub_100005574(&qword_100499A30);
  __chkstk_darwin();
  v1 = (char *)&v12 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for DynamicTypeSize(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin();
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Reactions.StackView(0);
  sub_1002BE220((uint64_t)v5);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v1, v5, v2);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v1, 0, 1, v2);
  v6 = (void *)UIContentSizeCategory.init(_:)(v1);
  v7 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithPreferredContentSizeCategory:", v6);
  v8 = objc_msgSend((id)objc_opt_self(UIFontMetrics), "defaultMetrics");
  objc_msgSend(v8, "scaledValueForValue:compatibleWithTraitCollection:", v7, 14.0);
  v10 = v9;

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v10;
}

double static Reactions.StackView.Specs.width(for:)(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  double v10;
  double v11;
  uint64_t v13;

  sub_100005574(&qword_100499A30);
  __chkstk_darwin();
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100498CB8 != -1)
    swift_once(&qword_100498CB8, sub_10034AF60);
  v4 = *(double *)&qword_1004A0AD8;
  v5 = type metadata accessor for DynamicTypeSize(0);
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v3, a1, v5);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v3, 0, 1, v5);
  v7 = (void *)UIContentSizeCategory.init(_:)(v3);
  v8 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithPreferredContentSizeCategory:", v7);
  v9 = objc_msgSend((id)objc_opt_self(UIFontMetrics), "defaultMetrics");
  objc_msgSend(v9, "scaledValueForValue:compatibleWithTraitCollection:", v8, v4);
  v11 = v10;

  if (qword_100498CC0 != -1)
    swift_once(&qword_100498CC0, sub_10034AF70);
  return v11 + *(double *)&qword_1004A0AE0 * 3.0;
}

void sub_10034AF60()
{
  qword_1004A0AD8 = 0x403C000000000000;
}

void sub_10034AF70()
{
  qword_1004A0AE0 = 0x4014000000000000;
}

uint64_t sub_10034AF80(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of Reactions.StackView.body>>, 1);
}

ValueMetadata *type metadata accessor for Reactions()
{
  return &type metadata for Reactions;
}

uint64_t *initializeBufferWithCopyOfBuffer for Reactions.StackView(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v14);
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    swift_retain(v7);
    v11 = sub_100005574(&qword_100498ED8);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
      v13 = 1;
    }
    else
    {
      v15 = *v10;
      *v9 = *v10;
      swift_retain(v15);
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v11, v13);
    v16 = a3[6];
    v17 = (uint64_t *)((char *)a1 + v16);
    v18 = (uint64_t *)((char *)a2 + v16);
    v19 = sub_100005574((uint64_t *)&unk_100498E40);
    if (swift_getEnumCaseMultiPayload(v18, v19) == 1)
    {
      v20 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v17, v18, v20);
      v21 = 1;
    }
    else
    {
      v22 = *v18;
      *v17 = *v18;
      swift_retain(v22);
      v21 = 0;
    }
    swift_storeEnumTagMultiPayload(v17, v19, v21);
    v23 = a3[7];
    v24 = (uint64_t *)((char *)a1 + v23);
    v25 = (uint64_t *)((char *)a2 + v23);
    v26 = sub_100005574(&qword_100498E60);
    if (swift_getEnumCaseMultiPayload(v25, v26) == 1)
    {
      v27 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v24, v25, v27);
      v28 = v24;
      v29 = v26;
      v30 = 1;
    }
    else
    {
      v31 = *v25;
      *v24 = *v25;
      swift_retain(v31);
      v28 = v24;
      v29 = v26;
      v30 = 0;
    }
    swift_storeEnumTagMultiPayload(v28, v29, v30);
  }
  return a1;
}

double destroy for Reactions.StackView(uint64_t a1, int *a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  double result;

  swift_release(*(_QWORD *)(a1 + 8));
  v4 = (_QWORD *)(a1 + a2[5]);
  v5 = sub_100005574(&qword_100498ED8);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    swift_release(*v4);
  }
  v7 = (_QWORD *)(a1 + a2[6]);
  v8 = sub_100005574((uint64_t *)&unk_100498E40);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
  }
  else
  {
    swift_release(*v7);
  }
  v10 = (_QWORD *)(a1 + a2[7]);
  v11 = sub_100005574(&qword_100498E60);
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v12 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v10, v12);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*v10).n128_u64[0];
  }
  return result;
}

_QWORD *initializeWithCopy for Reactions.StackView(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  swift_retain(v6);
  v10 = sub_100005574(&qword_100498ED8);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for ColorScheme(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, v9, v11);
    v12 = 1;
  }
  else
  {
    v13 = *v9;
    *v8 = *v9;
    swift_retain(v13);
    v12 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v10, v12);
  v14 = a3[6];
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  v17 = sub_100005574((uint64_t *)&unk_100498E40);
  if (swift_getEnumCaseMultiPayload(v16, v17) == 1)
  {
    v18 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v15, v16, v18);
    v19 = 1;
  }
  else
  {
    v20 = *v16;
    *v15 = *v16;
    swift_retain(v20);
    v19 = 0;
  }
  swift_storeEnumTagMultiPayload(v15, v17, v19);
  v21 = a3[7];
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (_QWORD *)((char *)a2 + v21);
  v24 = sub_100005574(&qword_100498E60);
  if (swift_getEnumCaseMultiPayload(v23, v24) == 1)
  {
    v25 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v22, v23, v25);
    v26 = 1;
  }
  else
  {
    v27 = *v23;
    *v22 = *v23;
    swift_retain(v27);
    v26 = 0;
  }
  swift_storeEnumTagMultiPayload(v22, v24, v26);
  return a1;
}

_QWORD *assignWithCopy for Reactions.StackView(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  *a1 = *a2;
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  if (a1 != a2)
  {
    v8 = a3[5];
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (_QWORD *)((char *)a2 + v8);
    sub_100008758((uint64_t)a1 + v8, &qword_100498ED8);
    v11 = sub_100005574(&qword_100498ED8);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
      v13 = 1;
    }
    else
    {
      v14 = *v10;
      *v9 = *v10;
      swift_retain(v14);
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v11, v13);
    v15 = a3[6];
    v16 = (_QWORD *)((char *)a1 + v15);
    v17 = (_QWORD *)((char *)a2 + v15);
    sub_100008758((uint64_t)a1 + v15, (uint64_t *)&unk_100498E40);
    v18 = sub_100005574((uint64_t *)&unk_100498E40);
    if (swift_getEnumCaseMultiPayload(v17, v18) == 1)
    {
      v19 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v16, v17, v19);
      v20 = 1;
    }
    else
    {
      v21 = *v17;
      *v16 = *v17;
      swift_retain(v21);
      v20 = 0;
    }
    swift_storeEnumTagMultiPayload(v16, v18, v20);
    v22 = a3[7];
    v23 = (_QWORD *)((char *)a1 + v22);
    v24 = (_QWORD *)((char *)a2 + v22);
    sub_100008758((uint64_t)a1 + v22, &qword_100498E60);
    v25 = sub_100005574(&qword_100498E60);
    if (swift_getEnumCaseMultiPayload(v24, v25) == 1)
    {
      v26 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v23, v24, v26);
      v27 = 1;
    }
    else
    {
      v28 = *v24;
      *v23 = *v24;
      swift_retain(v28);
      v27 = 0;
    }
    swift_storeEnumTagMultiPayload(v23, v25, v27);
  }
  return a1;
}

_OWORD *initializeWithTake for Reactions.StackView(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_100005574(&qword_100498ED8);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for ColorScheme(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v11 = a3[6];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_100005574((uint64_t *)&unk_100498E40);
  if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
  {
    v15 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v12, v13, v15);
    swift_storeEnumTagMultiPayload(v12, v14, 1);
  }
  else
  {
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  v16 = a3[7];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = sub_100005574(&qword_100498E60);
  if (swift_getEnumCaseMultiPayload(v18, v19) == 1)
  {
    v20 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v17, v18, v20);
    swift_storeEnumTagMultiPayload(v17, v19, 1);
  }
  else
  {
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  return a1;
}

_QWORD *assignWithTake for Reactions.StackView(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release(v7);
  if (a1 != a2)
  {
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_100008758((uint64_t)a1 + v8, &qword_100498ED8);
    v11 = sub_100005574(&qword_100498ED8);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for ColorScheme(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload(v9, v11, 1);
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    v13 = a3[6];
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    sub_100008758((uint64_t)a1 + v13, (uint64_t *)&unk_100498E40);
    v16 = sub_100005574((uint64_t *)&unk_100498E40);
    if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
    {
      v17 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v14, v15, v17);
      swift_storeEnumTagMultiPayload(v14, v16, 1);
    }
    else
    {
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    v18 = a3[7];
    v19 = (char *)a1 + v18;
    v20 = (char *)a2 + v18;
    sub_100008758((uint64_t)a1 + v18, &qword_100498E60);
    v21 = sub_100005574(&qword_100498E60);
    if (swift_getEnumCaseMultiPayload(v20, v21) == 1)
    {
      v22 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v19, v20, v22);
      swift_storeEnumTagMultiPayload(v19, v21, 1);
    }
    else
    {
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for Reactions.StackView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10034B9C4);
}

uint64_t sub_10034B9C4(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100005574(&qword_10049E350);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[5];
    }
    else
    {
      v12 = sub_100005574(&qword_10049CDC8);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[6];
      }
      else
      {
        v10 = sub_100005574(&qword_10049DF58);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a3[7];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for Reactions.StackView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10034BAA0);
}

uint64_t sub_10034BAA0(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_100005574(&qword_10049E350);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[5];
    }
    else
    {
      v12 = sub_100005574(&qword_10049CDC8);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[6];
      }
      else
      {
        v10 = sub_100005574(&qword_10049DF58);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[7];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_10034BB6C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[4];

  v8[0] = &unk_10039FF68;
  sub_100335C74(319, (unint64_t *)&unk_10049E3C0, (uint64_t (*)(uint64_t))&type metadata accessor for ColorScheme);
  if (v3 <= 0x3F)
  {
    v8[1] = *(_QWORD *)(v2 - 8) + 64;
    sub_100335C74(319, (unint64_t *)&unk_10049CE40, (uint64_t (*)(uint64_t))&type metadata accessor for ColorSchemeContrast);
    if (v5 <= 0x3F)
    {
      v8[2] = *(_QWORD *)(v4 - 8) + 64;
      sub_100335C74(319, &qword_10049DFD8, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
      if (v7 <= 0x3F)
      {
        v8[3] = *(_QWORD *)(v6 - 8) + 64;
        swift_initStructMetadata(a1, 256, 4, v8, a1 + 16);
      }
    }
  }
}

uint64_t sub_10034BC48()
{
  return type metadata accessor for Reactions.StackView.Model(0);
}

void sub_10034BC50(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;
  void *v13;

  sub_1001833F4(319, &qword_1004A0C30, &qword_1004A10E0);
  if (v3 <= 0x3F)
  {
    v10[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1001B8E28(319, (unint64_t *)&unk_1004A0C38, (uint64_t)&type metadata for Int);
    if (v5 <= 0x3F)
    {
      v10[1] = *(_QWORD *)(v4 - 8) + 64;
      sub_1001833F4(319, (unint64_t *)&unk_10049F5B0, &qword_100499760);
      if (v7 <= 0x3F)
      {
        v10[2] = *(_QWORD *)(v6 - 8) + 64;
        sub_1001B8E28(319, (unint64_t *)&qword_10049DBF8, (uint64_t)&type metadata for Bool);
        if (v9 <= 0x3F)
        {
          v11 = *(_QWORD *)(v8 - 8) + 64;
          v12 = v11;
          v13 = &unk_10039FF88;
          swift_updateClassMetadata2(a1, 256, 6, v10, a1 + 80);
        }
      }
    }
  }
}

ValueMetadata *type metadata accessor for Reactions.StackView.Specs()
{
  return &type metadata for Reactions.StackView.Specs;
}

unint64_t sub_10034BD6C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004A0DE8;
  if (!qword_1004A0DE8)
  {
    v1 = sub_100005600(&qword_1004A0DF0);
    sub_10034BDD8();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1004A0DE8);
  }
  return result;
}

unint64_t sub_10034BDD8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004A0DF8;
  if (!qword_1004A0DF8)
  {
    v1 = sub_100005600(&qword_1004A0B50);
    sub_10002FFB8(&qword_1004A0E00, &qword_1004A0B48, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1004A0DF8);
  }
  return result;
}

uint64_t sub_10034BE5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Reactions.StackView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10034BEA0()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v1 = (int *)type metadata accessor for Reactions.StackView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v23 = *(_QWORD *)(v2 + 64);
  v5 = type metadata accessor for BlendMode(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = v0 + v4;
  swift_release(*(_QWORD *)(v0 + v4 + 8));
  v10 = (_QWORD *)(v0 + v4 + v1[5]);
  v11 = sub_100005574(&qword_100498ED8);
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v12 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v10, v12);
  }
  else
  {
    swift_release(*v10);
  }
  v13 = (_QWORD *)(v9 + v1[6]);
  v14 = sub_100005574((uint64_t *)&unk_100498E40);
  if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
  {
    v15 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v13, v15);
  }
  else
  {
    swift_release(*v13);
  }
  v16 = (_QWORD *)(v9 + v1[7]);
  v17 = sub_100005574(&qword_100498E60);
  if (swift_getEnumCaseMultiPayload(v16, v17) == 1)
  {
    v18 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v16, v18);
  }
  else
  {
    v19 = swift_release(*v16);
  }
  v20 = (v4 + v23 + v7) & ~v7;
  v21 = v20 + v8;
  (*(void (**)(uint64_t, uint64_t, __n128))(v6 + 8))(v0 + v20, v5, v19);
  return swift_deallocObject(v0, v21, v3 | v7 | 7);
}

uint64_t sub_10034C050(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Reactions.StackView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10034C094@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(type metadata accessor for Reactions.StackView(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for BlendMode(0) - 8) + 80);
  return sub_100349290(v1 + v4, (char *)(v1 + ((v4 + v5 + v6) & ~v6)), a1);
}

unint64_t sub_10034C10C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004A0E20;
  if (!qword_1004A0E20)
  {
    v1 = sub_100005600(&qword_10049D728);
    sub_1002E0BC8();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> Range<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1004A0E20);
  }
  return result;
}

unint64_t sub_10034C178()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004A0E28;
  if (!qword_1004A0E28)
  {
    v1 = sub_100005600(&qword_1004A0E18);
    sub_10002FFB8(&qword_1004A0E30, &qword_1004A0E38, (uint64_t)&protocol conformance descriptor for ZStack<A>);
    sub_10002FFB8(&qword_1004A0E40, &qword_1004A0E48, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1004A0E28);
  }
  return result;
}

void sub_10034C21C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if ((a7 & 1) != 0)
  {
    swift_retain(a4);
    swift_retain(a1);
    swift_retain(a2);
    swift_retain(a3);
  }
  else
  {
    sub_10003B4C0(a1, a2, a3 & 1);
    swift_retain(a5);
    swift_retain(a6);
    swift_bridgeObjectRetain();
  }
}

double sub_10034C2B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v10;
  double result;

  if ((a7 & 1) != 0)
  {
    swift_release(a1);
    swift_release(a2);
    swift_release(a3);
    v10 = a4;
  }
  else
  {
    v10 = a5;
    sub_10003B4D0(a1, a2, a3 & 1);
    swift_release(a6);
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)&result = swift_release(v10).n128_u64[0];
  return result;
}

double sub_10034C330(uint64_t a1)
{
  double result;

  *(_QWORD *)(a1 + 144) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

uint64_t sub_10034C350(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  if (result)
  {
    swift_retain(result);
    swift_retain(a6);
    return swift_retain(a13);
  }
  return result;
}

_QWORD *sub_10034C388(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18]);
  return a1;
}

double sub_10034C3EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  double result;

  if (a1)
  {
    swift_release(a1);
    swift_release(a6);
    *(_QWORD *)&result = swift_release(a13).n128_u64[0];
  }
  return result;
}

unint64_t sub_10034C424()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004A0EC8;
  if (!qword_1004A0EC8)
  {
    v1 = sub_100005600(&qword_1004A0EB8);
    sub_10002FFB8(&qword_1004A0ED0, &qword_1004A0ED8, (uint64_t)&protocol conformance descriptor for _AnimationView<A>);
    sub_10002FFB8(&qword_1004A0E40, &qword_1004A0E48, (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1004A0EC8);
  }
  return result;
}

unint64_t sub_10034C4C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004A0EE0;
  if (!qword_1004A0EE0)
  {
    v1 = sub_100005600(&qword_1004A0EC0);
    sub_10034C544();
    sub_10002FFB8((unint64_t *)&unk_10049E600, &qword_10049B8D8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1004A0EE0);
  }
  return result;
}

unint64_t sub_10034C544()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004A0EE8;
  if (!qword_1004A0EE8)
  {
    v1 = sub_100005600(&qword_1004A0EF0);
    sub_10002FFB8(&qword_1004A0EF8, &qword_1004A0F00, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1004A0EE8);
  }
  return result;
}

id sub_10034C6AC(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  objc_class *v10;
  id v11;
  objc_super v13;
  _QWORD v14[3];
  uint64_t v15;

  sub_10034F390(a1, (uint64_t)v14);
  v5 = v15;
  if (v15)
  {
    sub_10000ABC8(v14, v15);
    v6 = *(_QWORD *)(v5 - 8);
    __chkstk_darwin();
    v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v6 + 16))(v8);
    v9 = _bridgeAnythingToObjectiveC<A>(_:)(v8, v5);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_10000682C(v14);
  }
  else
  {
    v9 = 0;
  }
  v10 = (objc_class *)type metadata accessor for SliderView.PanGestureRecognizer();
  v13.receiver = v2;
  v13.super_class = v10;
  v11 = objc_msgSendSuper2(&v13, "initWithTarget:action:", v9, a2);
  swift_unknownObjectRelease(v9);
  sub_10024ED50(a1);
  return v11;
}

id sub_10034C824()
{
  return sub_100005360(0, type metadata accessor for SliderView.PanGestureRecognizer);
}

void sub_10034C834()
{
  static SliderView.Specs.barHeight = Int.seconds.getter(7);
}

uint64_t *SliderView.Specs.barHeight.unsafeMutableAddressor()
{
  if (qword_100498CC8 != -1)
    swift_once(&qword_100498CC8, sub_10034C834);
  return &static SliderView.Specs.barHeight;
}

double static SliderView.Specs.barHeight.getter()
{
  return sub_100240A44(&qword_100498CC8, (uint64_t)&static SliderView.Specs.barHeight);
}

void sub_10034C8B0()
{
  static SliderView.Specs.expandedBarHeight = Int.seconds.getter(16);
}

uint64_t *SliderView.Specs.expandedBarHeight.unsafeMutableAddressor()
{
  if (qword_100498CD0 != -1)
    swift_once(&qword_100498CD0, sub_10034C8B0);
  return &static SliderView.Specs.expandedBarHeight;
}

double static SliderView.Specs.expandedBarHeight.getter()
{
  return sub_100240A44(&qword_100498CD0, (uint64_t)&static SliderView.Specs.expandedBarHeight);
}

CGFloat sub_10034C92C()
{
  CGFloat result;
  CGAffineTransform v1;

  CGAffineTransformMakeScale(&v1, 1.05, 1.05);
  result = v1.a;
  *(CGAffineTransform *)static SliderView.Specs.expandedTransform = v1;
  return result;
}

char *SliderView.Specs.expandedTransform.unsafeMutableAddressor()
{
  if (qword_100498CD8 != -1)
    swift_once(&qword_100498CD8, sub_10034C92C);
  return static SliderView.Specs.expandedTransform;
}

double static SliderView.Specs.expandedTransform.getter@<D0>(_OWORD *a1@<X8>)
{
  __int128 v2;
  double result;

  if (qword_100498CD8 != -1)
    swift_once(&qword_100498CD8, sub_10034C92C);
  v2 = *(_OWORD *)&static SliderView.Specs.expandedTransform[16];
  *a1 = *(_OWORD *)static SliderView.Specs.expandedTransform;
  a1[1] = v2;
  result = *(double *)&static SliderView.Specs.expandedTransform[32];
  a1[2] = *(_OWORD *)&static SliderView.Specs.expandedTransform[32];
  return result;
}

void sub_10034CA0C()
{
  static SliderView.Specs.stretchLimit = Int.seconds.getter(12);
}

uint64_t *SliderView.Specs.stretchLimit.unsafeMutableAddressor()
{
  if (qword_100498CE0 != -1)
    swift_once(&qword_100498CE0, sub_10034CA0C);
  return &static SliderView.Specs.stretchLimit;
}

double static SliderView.Specs.stretchLimit.getter()
{
  return sub_100240A44(&qword_100498CE0, (uint64_t)&static SliderView.Specs.stretchLimit);
}

void sub_10034CA88()
{
  static SliderView.Specs.escapeHeight = Int.seconds.getter(180);
}

uint64_t *SliderView.Specs.escapeHeight.unsafeMutableAddressor()
{
  if (qword_100498CE8 != -1)
    swift_once(&qword_100498CE8, sub_10034CA88);
  return &static SliderView.Specs.escapeHeight;
}

double static SliderView.Specs.escapeHeight.getter()
{
  return sub_100240A44(&qword_100498CE8, (uint64_t)&static SliderView.Specs.escapeHeight);
}

id SliderView.panRecognizer.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC11MusicCoreUI10SliderView____lazy_storage___panRecognizer;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView____lazy_storage___panRecognizer);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView____lazy_storage___panRecognizer);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SliderView.PanGestureRecognizer()), "initWithTarget:action:", v0, "panGestureRecognized:");
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t type metadata accessor for SliderView.PanGestureRecognizer()
{
  return objc_opt_self(_TtCC11MusicCoreUI10SliderViewP33_54515F1554A39BA10CF5FF24DBCB49D920PanGestureRecognizer);
}

void SliderView.panRecognizer.setter(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView____lazy_storage___panRecognizer);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView____lazy_storage___panRecognizer) = a1;

}

void (*SliderView.panRecognizer.modify(id *a1))(uint64_t *a1)
{
  void *v1;

  a1[1] = v1;
  *a1 = SliderView.panRecognizer.getter();
  return sub_10034CBEC;
}

void sub_10034CBEC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v2 = *a1;
  v1 = a1[1];
  v3 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView____lazy_storage___panRecognizer);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView____lazy_storage___panRecognizer) = v2;

}

id SliderView.trackLayoutGuide.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackLayoutGuide);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackLayoutGuide, v3, 0, 0);
  return *v1;
}

void SliderView.trackLayoutGuide.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  _BYTE v5[24];

  v3 = (void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackLayoutGuide);
  swift_beginAccess(v3, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*SliderView.trackLayoutGuide.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackLayoutGuide, a1, 33, 0);
  return j_j__swift_endAccess;
}

id SliderView.elapsedTrackColor.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackColor);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackColor, v3, 0, 0);
  return *v1;
}

void SliderView.elapsedTrackColor.setter(void *a1)
{
  uint64_t v1;
  _QWORD *v3;
  void *v4;
  id v5;
  void *v6;
  _BYTE *v7;
  unint64_t v8;
  uint64_t v9;
  _BYTE v10[24];
  _BYTE v11[24];
  _BYTE v12[24];

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackColor);
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackColor, v12, 1, 0);
  v4 = (void *)*v3;
  *v3 = a1;
  v5 = a1;

  v6 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrack);
  v7 = (_BYTE *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking);
  v8 = swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking, v11, 0, 0).n128_u64[0];
  if (*v7 == 1)
  {
    v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackingColor);
    v8 = swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackingColor, &v9, 0, 0).n128_u64[0];
  }
  objc_msgSend(v6, "setBackgroundColor:", *v3, *(double *)&v8);
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrack), "setBackgroundColor:", *(_QWORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor), swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor, v10, 0, 0).n128_f64[0]);

}

void (*SliderView.elapsedTrackColor.modify(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackColor;
  v3[9] = v1;
  v3[10] = v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  return sub_10034CE8C;
}

void sub_10034CE8C(_QWORD *a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  _BYTE *v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  v3 = (_QWORD *)*a1;
  swift_endAccess(*a1);
  if ((a2 & 1) == 0)
  {
    v4 = v3[9];
    v5 = *(void **)(v4 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrack);
    v6 = (_BYTE *)(v4 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking);
    v7 = swift_beginAccess(v4 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking, v3, 0, 0).n128_u64[0];
    if ((*v6 & 1) != 0)
    {
      v8 = (_QWORD *)(v3[9] + OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackingColor);
      v7 = swift_beginAccess(v8, v3 + 6, 0, 0).n128_u64[0];
      v9 = v3[9];
    }
    else
    {
      v9 = v3[9];
      v8 = (_QWORD *)(v9 + v3[10]);
    }
    objc_msgSend(v5, "setBackgroundColor:", *v8, *(double *)&v7);
    objc_msgSend(*(id *)(v9 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrack), "setBackgroundColor:", *(_QWORD *)(v9 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor), swift_beginAccess(v9 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor, v3 + 3, 0, 0).n128_f64[0]);
  }
  free(v3);
}

id SliderView.remainingTrackColor.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor, v3, 0, 0);
  return *v1;
}

void SliderView.remainingTrackColor.setter(void *a1)
{
  uint64_t v1;
  _QWORD *v3;
  void *v4;
  id v5;
  void *v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE v9[24];
  _BYTE v10[24];
  _BYTE v11[24];

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor);
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor, v11, 1, 0);
  v4 = (void *)*v3;
  *v3 = a1;
  v5 = a1;

  v6 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrack);
  v7 = (_BYTE *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking);
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking, v10, 0, 0);
  if (*v7 == 1)
    v8 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackingColor;
  else
    v8 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackColor;
  objc_msgSend(v6, "setBackgroundColor:", *(_QWORD *)(v1 + v8), swift_beginAccess(v1 + v8, v9, 0, 0).n128_f64[0]);
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrack), "setBackgroundColor:", *v3);

}

void (*SliderView.remainingTrackColor.modify(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor;
  v3[9] = v1;
  v3[10] = v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  return sub_10034D124;
}

void sub_10034D124(_QWORD *a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  _BYTE *v6;
  uint64_t *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (_QWORD *)*a1;
  swift_endAccess(*a1);
  if ((a2 & 1) == 0)
  {
    v4 = v3[9];
    v5 = *(void **)(v4 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrack);
    v6 = (_BYTE *)(v4 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking);
    swift_beginAccess(v4 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking, v3, 0, 0);
    v7 = &OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackingColor;
    if (*v6)
      v8 = v3 + 6;
    else
      v8 = v3 + 3;
    if (!*v6)
      v7 = &OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackColor;
    v10 = v3[9];
    v9 = v3[10];
    objc_msgSend(v5, "setBackgroundColor:", *(_QWORD *)(v10 + *v7), swift_beginAccess(v10 + *v7, v8, 0, 0).n128_f64[0]);
    objc_msgSend(*(id *)(v10 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrack), "setBackgroundColor:", *(_QWORD *)(v10 + v9));
  }
  free(v3);
}

id SliderView.trackingColor.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackingColor);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackingColor, v3, 0, 0);
  return *v1;
}

void SliderView.trackingColor.setter(void *a1)
{
  uint64_t v1;
  _QWORD *v3;
  void *v4;
  id v5;
  void *v6;
  _BYTE *v7;
  unint64_t v8;
  uint64_t v9;
  _BYTE v10[24];
  _BYTE v11[24];
  _BYTE v12[24];

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackingColor);
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackingColor, v12, 1, 0);
  v4 = (void *)*v3;
  *v3 = a1;
  v5 = a1;

  v6 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrack);
  v7 = (_BYTE *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking);
  v8 = swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking, v11, 0, 0).n128_u64[0];
  if ((*v7 & 1) == 0)
  {
    v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackColor);
    v8 = swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackColor, v10, 0, 0).n128_u64[0];
  }
  objc_msgSend(v6, "setBackgroundColor:", *v3, *(double *)&v8);
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrack), "setBackgroundColor:", *(_QWORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor), swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor, &v9, 0, 0).n128_f64[0]);

}

void (*SliderView.trackingColor.modify(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackingColor;
  v3[9] = v1;
  v3[10] = v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  return sub_10034D3B0;
}

void sub_10034D3B0(_QWORD *a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  _BYTE *v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v3 = (_QWORD *)*a1;
  swift_endAccess(*a1);
  if ((a2 & 1) == 0)
  {
    v4 = v3[9];
    v5 = *(void **)(v4 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrack);
    v6 = (_BYTE *)(v4 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking);
    v7 = swift_beginAccess(v4 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking, v3, 0, 0).n128_u64[0];
    if (*v6 == 1)
    {
      v8 = v3[9];
      v9 = (_QWORD *)(v8 + v3[10]);
    }
    else
    {
      v9 = (_QWORD *)(v3[9] + OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackColor);
      v7 = swift_beginAccess(v9, v3 + 3, 0, 0).n128_u64[0];
      v8 = v3[9];
    }
    objc_msgSend(v5, "setBackgroundColor:", *v9, *(double *)&v7);
    objc_msgSend(*(id *)(v8 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrack), "setBackgroundColor:", *(_QWORD *)(v8 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor), swift_beginAccess(v8 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor, v3 + 6, 0, 0).n128_f64[0]);
  }
  free(v3);
}

double SliderView.value.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_value;
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_value, v3, 0, 0);
  return *(double *)v1;
}

uint64_t SliderView.isEnabled.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isEnabled);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isEnabled, v3, 0, 0);
  return *v1;
}

void SliderView.isEnabled.setter(unsigned __int8 a1)
{
  uint64_t v1;
  unsigned __int8 *v3;
  id v4;
  _BYTE v5[24];

  v3 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isEnabled);
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isEnabled, v5, 1, 0);
  *v3 = a1;
  v4 = SliderView.panRecognizer.getter();
  objc_msgSend(v4, "setEnabled:", *v3);

}

void (*SliderView.isEnabled.modify(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_isEnabled;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  return sub_10034D600;
}

void sub_10034D600(_QWORD *a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v3 = (_QWORD *)*a1;
  swift_endAccess(*a1);
  if ((a2 & 1) == 0)
  {
    v4 = v3[3];
    v5 = v3[4];
    v6 = SliderView.panRecognizer.getter();
    objc_msgSend(v6, "setEnabled:", *(unsigned __int8 *)(v4 + v5));

  }
  free(v3);
}

uint64_t SliderView.isTracking.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking, v3, 0, 0);
  return *v1;
}

uint64_t SliderView.valueChangedHandler.getter()
{
  return sub_10034D71C(&OBJC_IVAR____TtC11MusicCoreUI10SliderView_valueChangedHandler, (void (*)(_QWORD, _QWORD, __n128))sub_10003A434);
}

uint64_t SliderView.valueChangedHandler.setter(uint64_t a1, uint64_t a2)
{
  return sub_10034D790(a1, a2, &OBJC_IVAR____TtC11MusicCoreUI10SliderView_valueChangedHandler, (uint64_t (*)(uint64_t, uint64_t, __n128))sub_10003A5C8);
}

uint64_t (*SliderView.valueChangedHandler.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_valueChangedHandler, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t SliderView.cancelledHandler.getter()
{
  return sub_10034D71C(&OBJC_IVAR____TtC11MusicCoreUI10SliderView_cancelledHandler, (void (*)(_QWORD, _QWORD, __n128))sub_10003A434);
}

uint64_t sub_10034D71C(_QWORD *a1, void (*a2)(_QWORD, _QWORD, __n128))
{
  uint64_t v2;
  _QWORD *v4;
  __n128 v5;
  uint64_t v6;
  _BYTE v8[24];

  v4 = (_QWORD *)(v2 + *a1);
  v5 = swift_beginAccess(v4, v8, 0, 0);
  v6 = *v4;
  a2(*v4, v4[1], v5);
  return v6;
}

uint64_t SliderView.cancelledHandler.setter(uint64_t a1, uint64_t a2)
{
  return sub_10034D790(a1, a2, &OBJC_IVAR____TtC11MusicCoreUI10SliderView_cancelledHandler, (uint64_t (*)(uint64_t, uint64_t, __n128))sub_10003A5C8);
}

uint64_t sub_10034D790(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t (*a4)(uint64_t, uint64_t, __n128))
{
  uint64_t v4;
  uint64_t *v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[24];

  v8 = (uint64_t *)(v4 + *a3);
  v9 = swift_beginAccess(v8, v13, 1, 0);
  v10 = *v8;
  v11 = v8[1];
  *v8 = a1;
  v8[1] = a2;
  return a4(v10, v11, v9);
}

uint64_t (*SliderView.cancelledHandler.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_cancelledHandler, a1, 33, 0);
  return j__swift_endAccess;
}

id SliderView.semanticContentAttribute.getter()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SliderView();
  return objc_msgSendSuper2(&v2, "semanticContentAttribute");
}

uint64_t type metadata accessor for SliderView()
{
  return objc_opt_self(_TtC11MusicCoreUI10SliderView);
}

id SliderView.semanticContentAttribute.setter(uint64_t a1)
{
  char *v1;
  objc_super v4;

  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for SliderView();
  objc_msgSendSuper2(&v4, "setSemanticContentAttribute:", a1);
  return objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_stackView], "setSemanticContentAttribute:", objc_msgSend(v1, "semanticContentAttribute"));
}

uint64_t sub_10034D9B8(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id v17;
  char *v18;
  id v19;
  id v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  id v39;
  objc_class *v40;
  id v41;
  id v42;
  char *v43;
  id v44;
  id *v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  id v53;
  id v54;
  uint64_t v55;
  void *v56;
  id v57;
  id v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  uint64_t result;
  void *v63;
  _QWORD *v64;
  void *v65;
  void *v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  uint64_t v95;
  Class isa;
  uint64_t v97;
  id v98;
  _QWORD *v99;
  char v100[24];
  objc_super v101;

  v5 = v4;
  v10 = type metadata accessor for UIView.Corner.Radius(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin();
  v13 = (double *)((char *)&v97 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100005574(&qword_1004A1050);
  __chkstk_darwin();
  v15 = (char *)&v97 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_stackView;
  v17 = objc_allocWithZone((Class)UIStackView);
  v18 = v5;
  v19 = objc_msgSend(v17, "init");
  v20 = UIView.forAutolayout.getter();

  *(_QWORD *)&v5[v16] = v20;
  v21 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrack;
  v22 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v23 = UIView.forAutolayout.getter();

  *(_QWORD *)&v18[v21] = v23;
  v24 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrack;
  v25 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v26 = UIView.forAutolayout.getter();

  *(_QWORD *)&v18[v24] = v26;
  *(_QWORD *)&v18[OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackWidthConstraint] = 0;
  *(_QWORD *)&v18[OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackHeightConstraint] = 0;
  v27 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_feedbackGenerator;
  *(_QWORD *)&v18[v27] = objc_msgSend(objc_allocWithZone((Class)UIImpactFeedbackGenerator), "initWithStyle:", 0);
  v28 = &v18[OBJC_IVAR____TtC11MusicCoreUI10SliderView_startingWidth];
  *(_QWORD *)v28 = 0;
  v28[8] = 1;
  v29 = &v18[OBJC_IVAR____TtC11MusicCoreUI10SliderView_lastSeenBounds];
  *(_OWORD *)v29 = 0u;
  *((_OWORD *)v29 + 1) = 0u;
  *(_QWORD *)&v18[OBJC_IVAR____TtC11MusicCoreUI10SliderView____lazy_storage___panRecognizer] = 0;
  v30 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackLayoutGuide;
  *(_QWORD *)&v18[v30] = objc_msgSend(objc_allocWithZone((Class)UILayoutGuide), "init");
  v31 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackColor;
  v32 = (void *)objc_opt_self(UIColor);
  *(_QWORD *)&v18[v31] = objc_msgSend(v32, "whiteColor");
  v33 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor;
  *(_QWORD *)&v18[v33] = objc_msgSend(v32, "systemFillColor");
  v34 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackingColor;
  if (qword_100498920 != -1)
    swift_once(&qword_100498920, sub_10024DEF0);
  v35 = (void *)static UIColor.MusicTint.normal;
  *(_QWORD *)&v18[v34] = static UIColor.MusicTint.normal;
  v36 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_value;
  *(double *)&v18[v36] = Int.seconds.getter(0);
  v18[OBJC_IVAR____TtC11MusicCoreUI10SliderView_isEnabled] = 1;
  v18[OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking] = 0;
  v37 = &v18[OBJC_IVAR____TtC11MusicCoreUI10SliderView_valueChangedHandler];
  *(_QWORD *)v37 = 0;
  *((_QWORD *)v37 + 1) = 0;
  v38 = &v18[OBJC_IVAR____TtC11MusicCoreUI10SliderView_cancelledHandler];
  *(_QWORD *)v38 = 0;
  *((_QWORD *)v38 + 1) = 0;
  v39 = v35;

  v40 = (objc_class *)type metadata accessor for SliderView();
  v101.receiver = v18;
  v101.super_class = v40;
  v41 = objc_msgSendSuper2(&v101, "initWithFrame:", a1, a2, a3, a4);
  v42 = SliderView.panRecognizer.getter();
  objc_msgSend(v42, "_setRequiresSystemGesturesToFail:", 0);

  v43 = (char *)v41;
  v44 = SliderView.panRecognizer.getter();
  objc_msgSend(v43, "addGestureRecognizer:", v44);

  v45 = (id *)&v43[OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackLayoutGuide];
  objc_msgSend(v43, "addLayoutGuide:", *(_QWORD *)&v43[OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackLayoutGuide], swift_beginAccess(&v43[OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackLayoutGuide], v100, 0, 0).n128_f64[0]);
  objc_msgSend(v43, "setExclusiveTouch:", 1);
  v46 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_stackView;
  v47 = *(void **)&v43[OBJC_IVAR____TtC11MusicCoreUI10SliderView_stackView];
  v48 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrack;
  objc_msgSend(v47, "addArrangedSubview:", *(_QWORD *)&v43[OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrack]);
  objc_msgSend(v47, "addArrangedSubview:", *(_QWORD *)&v43[OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrack]);
  objc_msgSend(v47, "setAxis:", 0);
  if (qword_100498CC8 != -1)
    swift_once(&qword_100498CC8, sub_10034C834);
  *v13 = *(double *)&static SliderView.Specs.barHeight * 0.5;
  *((_BYTE *)v13 + 8) = 1;
  v49 = (*(uint64_t (**)(double *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for UIView.Corner.Radius.value(_:), v10);
  v50 = static CACornerMask.all.getter(v49);
  UIView.Corner.init(radius:mask:)(v13, v50);
  v51 = type metadata accessor for UIView.Corner(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v15, 0, 1, v51);
  UIView.corner.setter(v15);
  v52 = objc_msgSend(*(id *)&v43[v46], "layer");
  objc_msgSend(v52, "setMasksToBounds:", 1);

  objc_msgSend(v43, "addSubview:", *(_QWORD *)&v43[v46]);
  v53 = objc_msgSend(*(id *)&v43[v48], "widthAnchor");
  v54 = objc_msgSend(v53, "constraintEqualToConstant:", 0.0);

  v55 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackWidthConstraint;
  v56 = *(void **)&v43[OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackWidthConstraint];
  *(_QWORD *)&v43[OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackWidthConstraint] = v54;

  v57 = objc_msgSend(*(id *)&v43[v46], "heightAnchor");
  v58 = objc_msgSend(v57, "constraintEqualToConstant:", *(double *)&static SliderView.Specs.barHeight);

  v59 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackHeightConstraint;
  v60 = *(void **)&v43[OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackHeightConstraint];
  *(_QWORD *)&v43[OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackHeightConstraint] = v58;

  v61 = sub_100005574(&qword_100499F50);
  result = swift_allocObject(v61, 120, 7);
  *(_OWORD *)(result + 16) = xmmword_1003954C0;
  v63 = *(void **)&v43[v55];
  if (v63)
  {
    v64 = (_QWORD *)result;
    *(_QWORD *)(result + 32) = v63;
    v65 = *(void **)&v43[v59];
    if (v65)
    {
      v98 = (id)objc_opt_self(NSLayoutConstraint);
      v64[5] = v65;
      v66 = *(void **)&v43[v46];
      v67 = v63;
      v68 = v65;
      v69 = objc_msgSend(v66, "leadingAnchor");
      v70 = objc_msgSend(v43, "leadingAnchor");
      v71 = objc_msgSend(v69, "constraintEqualToAnchor:", v70);

      v64[6] = v71;
      v72 = objc_msgSend(*(id *)&v43[v46], "trailingAnchor");
      v73 = objc_msgSend(v43, "trailingAnchor");
      v74 = objc_msgSend(v72, "constraintEqualToAnchor:", v73);

      v64[7] = v74;
      v75 = objc_msgSend(*(id *)&v43[v46], "topAnchor");
      v76 = objc_msgSend(v43, "topAnchor");
      v77 = objc_msgSend(v75, "constraintEqualToAnchor:", v76);

      v64[8] = v77;
      v78 = objc_msgSend(*(id *)&v43[v46], "bottomAnchor");
      v79 = objc_msgSend(v43, "bottomAnchor");
      v80 = objc_msgSend(v78, "constraintEqualToAnchor:", v79);

      v64[9] = v80;
      v81 = objc_msgSend(*(id *)&v43[v46], "centerYAnchor");
      v82 = objc_msgSend(v43, "centerYAnchor");
      v83 = objc_msgSend(v81, "constraintEqualToAnchor:", v82);

      v64[10] = v83;
      v84 = objc_msgSend(*v45, "leadingAnchor");
      v85 = objc_msgSend(v43, "leadingAnchor");
      v86 = objc_msgSend(v84, "constraintEqualToAnchor:", v85);

      v64[11] = v86;
      v87 = objc_msgSend(*v45, "trailingAnchor");
      v88 = objc_msgSend(v43, "trailingAnchor");
      v89 = objc_msgSend(v87, "constraintEqualToAnchor:", v88);

      v64[12] = v89;
      v90 = objc_msgSend(*v45, "centerYAnchor");
      v91 = objc_msgSend(v43, "centerYAnchor");
      v92 = objc_msgSend(v90, "constraintEqualToAnchor:", v91);

      v64[13] = v92;
      v93 = objc_msgSend(*v45, "heightAnchor");
      v94 = objc_msgSend(v93, "constraintEqualToConstant:", *(double *)&static SliderView.Specs.barHeight);

      v64[14] = v94;
      v99 = v64;
      specialized Array._endMutation()(v95);
      sub_1000087DC(0, &qword_10049AC18, NSLayoutConstraint_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      objc_msgSend(v98, "activateConstraints:", isa);

      return (uint64_t)v43;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

Swift::Void __swiftcall SliderView.layoutSubviews()()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  double Width;
  double *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10[24];
  objc_super v11;
  CGRect v12;
  CGRect v13;

  v11.receiver = v0;
  v11.super_class = (Class)type metadata accessor for SliderView();
  objc_msgSendSuper2(&v11, "layoutSubviews");
  objc_msgSend(v0, "bounds");
  v1 = &v0[OBJC_IVAR____TtC11MusicCoreUI10SliderView_lastSeenBounds];
  if (!CGRectEqualToRect(v12, *(CGRect *)&v0[OBJC_IVAR____TtC11MusicCoreUI10SliderView_lastSeenBounds]))
  {
    v2 = *(void **)&v0[OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackWidthConstraint];
    if (v2)
    {
      v3 = v2;
      objc_msgSend(v0, "bounds");
      Width = CGRectGetWidth(v13);
      v5 = (double *)&v0[OBJC_IVAR____TtC11MusicCoreUI10SliderView_value];
      swift_beginAccess(&v0[OBJC_IVAR____TtC11MusicCoreUI10SliderView_value], v10, 0, 0);
      objc_msgSend(v3, "setConstant:", Width * *v5);

      objc_msgSend(v0, "bounds");
      *(_QWORD *)v1 = v6;
      *((_QWORD *)v1 + 1) = v7;
      *((_QWORD *)v1 + 2) = v8;
      *((_QWORD *)v1 + 3) = v9;
    }
    else
    {
      __break(1u);
    }
  }
}

void SliderView.setValue(_:animated:)(char a1, double a2)
{
  char *v2;
  double v4;
  double *v5;
  void *v6;
  id v7;
  uint64_t v8;
  double v9;
  double v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  char *v15;
  _QWORD aBlock[5];
  uint64_t v17;
  char v18[24];
  CGRect v19;

  if (a2 < 0.0)
    a2 = 0.0;
  if (a2 <= 1.0)
    v4 = a2;
  else
    v4 = 1.0;
  v5 = (double *)&v2[OBJC_IVAR____TtC11MusicCoreUI10SliderView_value];
  swift_beginAccess(&v2[OBJC_IVAR____TtC11MusicCoreUI10SliderView_value], v18, 1, 0);
  if (v4 != *v5)
  {
    v6 = *(void **)&v2[OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackWidthConstraint];
    if (v6)
    {
      v7 = v6;
      objc_msgSend(v2, "bounds");
      objc_msgSend(v7, "setConstant:", v4 * CGRectGetWidth(v19));

      v8 = swift_allocObject(&unk_100465D70, 32, 7);
      *(_QWORD *)(v8 + 16) = v2;
      *(double *)(v8 + 24) = v4;
      if ((a1 & 1) != 0)
      {
        v9 = vabdd_f64(*v5, v4) * 0.25;
        if (v9 > 0.1)
          v10 = v9;
        else
          v10 = 0.1;
        v11 = (void *)objc_opt_self(UIView);
        v12 = swift_allocObject(&unk_100465D98, 32, 7);
        *(_QWORD *)(v12 + 16) = sub_10034E6A8;
        *(_QWORD *)(v12 + 24) = v8;
        aBlock[4] = sub_100009BB0;
        v17 = v12;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1000BED80;
        aBlock[3] = &unk_100465DB0;
        v13 = _Block_copy(aBlock);
        v14 = v17;
        v15 = v2;
        swift_retain(v8);
        swift_release(v14);
        objc_msgSend(v11, "animateWithDuration:delay:options:animations:completion:", 4, v13, 0, v10, 0.0);
        swift_release(v8);
        _Block_release(v13);
      }
      else
      {
        *v5 = v4;
        objc_msgSend(v2, "layoutIfNeeded");
        swift_release(v8);
      }
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_10034E684()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_10034E6A8()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  char *v3;
  double v4;
  char v6[24];

  v1 = *(char **)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = &v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_value];
  *(_QWORD *)&v4 = swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_value], v6, 1, 0).n128_u64[0];
  *(_QWORD *)v3 = v2;
  return objc_msgSend(v1, "layoutIfNeeded", v4);
}

void sub_10034E70C(void *a1)
{
  char *v1;
  void *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  char *v13;
  void *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  id v24;
  double v25;
  double v26;
  double Width;
  double v28;
  double v29;
  double v30;
  double *v31;
  char *v32;
  void (*v33)(uint64_t, double);
  uint64_t v34;
  double *v35;
  double v36;
  void *v37;
  uint64_t v38;
  char *v39;
  id v40;
  double v41;
  char v42[24];
  char v43[24];
  void **aBlock;
  uint64_t v45;
  uint64_t (*v46)(uint64_t);
  void *v47;
  id (*v48)();
  uint64_t v49;
  _BYTE v50[24];
  CGRect v51;
  CGRect v52;

  switch((unint64_t)objc_msgSend(a1, "state"))
  {
    case 1uLL:
      v3 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackWidthConstraint];
      if (!v3)
      {
        __break(1u);
        JUMPOUT(0x10034ECE0);
      }
      objc_msgSend(v3, "constant");
      v4 = &v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_startingWidth];
      *(_QWORD *)v4 = v5;
      v4[8] = 0;
      v6 = swift_allocObject(&unk_100465F18, 24, 7);
      *(_QWORD *)(v6 + 16) = v1;
      v7 = &v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking];
      swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking], v50, 1, 0);
      if (*v7 == 1)
      {
        v8 = v1;
        goto LABEL_35;
      }
      *v7 = 1;
      v10 = swift_allocObject(&unk_100465F40, 48, 7);
      *(_BYTE *)(v10 + 16) = 1;
      *(_QWORD *)(v10 + 24) = v1;
      *(_QWORD *)(v10 + 32) = sub_10034F490;
      *(_QWORD *)(v10 + 40) = v6;
      v37 = (void *)objc_opt_self(UIView);
      v48 = sub_10034F758;
      v49 = v10;
      aBlock = _NSConcreteStackBlock;
      v45 = 1107296256;
      v46 = sub_1000BED80;
      v47 = &unk_100465F58;
      v14 = _Block_copy(&aBlock);
      v38 = v49;
      v39 = v1;
      swift_retain(v6);
      swift_retain(v10);
      swift_release(v38);
      objc_msgSend(v37, "_animateUsingSpringWithDuration:delay:options:mass:stiffness:damping:initialVelocity:animations:completion:", 2, v14, 0, 1.0, 0.0, 1.0, 288.0, 26.5, 0.0);
      goto LABEL_34;
    case 2uLL:
      v17 = &v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking];
      *(_QWORD *)&v18 = swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking], &aBlock, 0, 0).n128_u64[0];
      if (*v17 == 1 && (v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_startingWidth + 8] & 1) == 0)
      {
        v19 = *(double *)&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_startingWidth];
        objc_msgSend(a1, "translationInView:", v1, v18);
        v21 = v20;
        v23 = fabs(v22);
        if (qword_100498CE8 != -1)
        {
          v41 = v23;
          swift_once(&qword_100498CE8, sub_10034CA88);
          v23 = v41;
        }
        if (v23 >= *(double *)&static SliderView.Specs.escapeHeight)
        {
          v40 = SliderView.panRecognizer.getter();
          objc_msgSend(v40, "setState:", 4);

        }
        else
        {
          v24 = objc_msgSend(v1, "effectiveUserInterfaceLayoutDirection");
          v25 = -v21;
          if (v24 != (id)1)
            v25 = v21;
          v26 = v19 + v25;
          objc_msgSend(v1, "bounds", *(_QWORD *)&v41);
          Width = CGRectGetWidth(v51);
          if (Width >= v26)
            Width = v26;
          if (Width < 0.0)
            v28 = 0.0;
          else
            v28 = Width;
          objc_msgSend(v1, "bounds");
          v29 = v28 / CGRectGetWidth(v52);
          if (v29 < 0.0)
            v29 = 0.0;
          if (v29 <= 1.0)
            v30 = v29;
          else
            v30 = 1.0;
          if (v30 == 1.0 || v30 == 0.0)
          {
            v31 = (double *)&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_value];
            swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_value], v42, 0, 0);
            if (v30 != *v31)
              objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_feedbackGenerator], "impactOccurred");
          }
          SliderView.setValue(_:animated:)(0, v30);
          v32 = &v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_valueChangedHandler];
          swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_valueChangedHandler], v50, 0, 0);
          v33 = *(void (**)(uint64_t, double))v32;
          if (*(_QWORD *)v32)
          {
            v34 = *((_QWORD *)v32 + 1);
            v35 = (double *)&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_value];
            swift_beginAccess(v35, v43, 0, 0);
            v36 = *v35;
            swift_retain(v34);
            v33(1, v36);
            sub_10003A5C8((uint64_t)v33, v34);
          }
        }
      }
      return;
    case 3uLL:
      v9 = &v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking];
      swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking], v50, 1, 0);
      if (*v9 != 1)
        return;
      v6 = swift_allocObject(&unk_100465EA0, 24, 7);
      *(_QWORD *)(v6 + 16) = v1;
      *v9 = 0;
      v10 = swift_allocObject(&unk_100465EC8, 48, 7);
      *(_BYTE *)(v10 + 16) = 0;
      *(_QWORD *)(v10 + 24) = v1;
      *(_QWORD *)(v10 + 32) = sub_10034F470;
      *(_QWORD *)(v10 + 40) = v6;
      v11 = (void *)objc_opt_self(UIView);
      v48 = sub_10034F758;
      v49 = v10;
      aBlock = _NSConcreteStackBlock;
      v45 = 1107296256;
      v12 = &unk_100465EE0;
      break;
    case 4uLL:
      v13 = &v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking];
      swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking], v50, 1, 0);
      if (*v13 != 1)
        return;
      v6 = swift_allocObject(&unk_100465E28, 24, 7);
      *(_QWORD *)(v6 + 16) = v1;
      *v13 = 0;
      v10 = swift_allocObject(&unk_100465E50, 48, 7);
      *(_BYTE *)(v10 + 16) = 0;
      *(_QWORD *)(v10 + 24) = v1;
      *(_QWORD *)(v10 + 32) = sub_10034F430;
      *(_QWORD *)(v10 + 40) = v6;
      v11 = (void *)objc_opt_self(UIView);
      v48 = sub_10034F43C;
      v49 = v10;
      aBlock = _NSConcreteStackBlock;
      v45 = 1107296256;
      v12 = &unk_100465E68;
      break;
    default:
      return;
  }
  v46 = sub_1000BED80;
  v47 = v12;
  v14 = _Block_copy(&aBlock);
  v15 = v49;
  v16 = v1;
  swift_retain(v6);
  swift_retain(v10);
  swift_release(v15);
  objc_msgSend(v11, "_animateUsingSpringWithDuration:delay:options:mass:stiffness:damping:initialVelocity:animations:completion:", 2, v14, 0, 1.0, 0.0, 2.0, 500.0, 40.0, 0.0);
LABEL_34:
  swift_release(v10);
  _Block_release(v14);
LABEL_35:
  swift_release(v6);
}

void sub_10034ECF0(uint64_t a1)
{
  uint64_t v1;
  void (*v2)(__n128);
  uint64_t v3;
  __n128 v4;
  _BYTE v5[24];

  v1 = a1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_cancelledHandler;
  swift_beginAccess(a1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_cancelledHandler, v5, 0, 0);
  v2 = *(void (**)(__n128))v1;
  if (*(_QWORD *)v1)
  {
    v3 = *(_QWORD *)(v1 + 8);
    v4 = swift_retain(v3);
    v2(v4);
    sub_10003A5C8((uint64_t)v2, v3);
  }
}

void sub_10034ED5C(uint64_t a1, char a2)
{
  uint64_t v4;
  void (*v5)(_QWORD, double);
  uint64_t v6;
  double *v7;
  double v8;
  uint64_t v9;
  _BYTE v10[24];

  v4 = a1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_valueChangedHandler;
  swift_beginAccess(a1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_valueChangedHandler, v10, 0, 0);
  v5 = *(void (**)(_QWORD, double))v4;
  if (*(_QWORD *)v4)
  {
    v6 = *(_QWORD *)(v4 + 8);
    v7 = (double *)(a1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_value);
    swift_beginAccess(v7, &v9, 0, 0);
    v8 = *v7;
    swift_retain(v6);
    v5(a2 & 1, v8);
    sub_10003A5C8((uint64_t)v5, v6);
  }
}

id sub_10034EE4C(char a1, char *a2, void (*a3)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double *v9;
  id result;
  uint64_t v11;
  char *v12;
  void *v13;
  uint64_t v14;
  id v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  char *v23;
  uint64_t v24;
  char v26[24];
  char v27[24];
  char v28[24];

  v6 = type metadata accessor for UIView.Corner.Radius(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = (double *)&v26[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_100005574(&qword_1004A1050);
  result = (id)__chkstk_darwin();
  v12 = &v26[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = *(void **)&a2[OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackHeightConstraint];
  if ((a1 & 1) == 0)
  {
    if (v13)
    {
      v17 = qword_100498CC8;
      v15 = v13;
      if (v17 != -1)
        swift_once(&qword_100498CC8, sub_10034C834);
      v16 = &static SliderView.Specs.barHeight;
      goto LABEL_10;
    }
LABEL_17:
    __break(1u);
    return result;
  }
  if (!v13)
  {
    __break(1u);
    goto LABEL_17;
  }
  v14 = qword_100498CD0;
  v15 = v13;
  if (v14 != -1)
    swift_once(&qword_100498CD0, sub_10034C8B0);
  v16 = &static SliderView.Specs.expandedBarHeight;
LABEL_10:
  objc_msgSend(v15, "setConstant:", *(double *)v16);

  *v9 = *(double *)v16 * 0.5;
  *((_BYTE *)v9 + 8) = 1;
  v18 = (*(uint64_t (**)(double *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for UIView.Corner.Radius.value(_:), v6);
  v19 = static CACornerMask.all.getter(v18);
  UIView.Corner.init(radius:mask:)(v9, v19);
  v20 = type metadata accessor for UIView.Corner(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v12, 0, 1, v20);
  v21 = UIView.corner.setter(v12);
  if (a3)
    a3(v21);
  v22 = *(void **)&a2[OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrack];
  v23 = &a2[OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking];
  swift_beginAccess(&a2[OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking], v28, 0, 0);
  if (*v23 == 1)
    v24 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackingColor;
  else
    v24 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackColor;
  objc_msgSend(v22, "setBackgroundColor:", *(_QWORD *)&a2[v24], swift_beginAccess(&a2[v24], v27, 0, 0).n128_f64[0]);
  objc_msgSend(*(id *)&a2[OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrack], "setBackgroundColor:", *(_QWORD *)&a2[OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor], swift_beginAccess(&a2[OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor], v26, 0, 0).n128_f64[0]);
  return objc_msgSend(a2, "layoutIfNeeded");
}

id SliderView.__deallocating_deinit(uint64_t a1)
{
  return sub_100005360(a1, type metadata accessor for SliderView);
}

uint64_t sub_10034F204()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10034F228(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_10034F238(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

double sub_10034F240@<D0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  double *v3;
  double result;
  _BYTE v5[24];

  v3 = (double *)(*a1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_value);
  swift_beginAccess(v3, v5, 0, 0);
  result = *v3;
  *a2 = *(_QWORD *)v3;
  return result;
}

void sub_10034F290(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;
  _BYTE v4[24];

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_value);
  swift_beginAccess(v3, v4, 1, 0);
  *v3 = v2;
}

void sub_10034F2E4(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  _BYTE v4[24];

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking);
  swift_beginAccess(v3, v4, 0, 0);
  *a2 = *v3;
}

void sub_10034F334(char *a1, _QWORD *a2)
{
  char v2;
  _BYTE *v3;
  _BYTE v4[24];

  v2 = *a1;
  v3 = (_BYTE *)(*a2 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking);
  swift_beginAccess(v3, v4, 1, 0);
  *v3 = v2;
}

ValueMetadata *type metadata accessor for SliderView.Specs()
{
  return &type metadata for SliderView.Specs;
}

uint64_t sub_10034F390(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005574(&qword_10049B130);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_10034F3D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004A1008;
  if (!qword_1004A1008)
  {
    v1 = sub_1000087DC(255, &qword_1004A1000, UITouch_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1004A1008);
  }
  return result;
}

void sub_10034F430()
{
  uint64_t v0;

  sub_10034ECF0(*(_QWORD *)(v0 + 16));
}

id sub_10034F43C()
{
  uint64_t v0;

  return sub_10034EE4C(*(_BYTE *)(v0 + 16), *(char **)(v0 + 24), *(void (**)(uint64_t))(v0 + 32));
}

uint64_t sub_10034F44C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10034F470()
{
  uint64_t v0;

  sub_10034ED5C(*(_QWORD *)(v0 + 16), 0);
}

void sub_10034F490()
{
  uint64_t v0;

  sub_10034ED5C(*(_QWORD *)(v0 + 16), 1);
}

uint64_t sub_10034F4B0()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 32))
    swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_10034F4E4()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  id v3;
  id v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  char *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  id v23;

  v1 = v0;
  v2 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_stackView;
  v3 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v4 = UIView.forAutolayout.getter();

  *(_QWORD *)&v1[v2] = v4;
  v5 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrack;
  v6 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v7 = UIView.forAutolayout.getter();

  *(_QWORD *)&v1[v5] = v7;
  v8 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrack;
  v9 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v10 = UIView.forAutolayout.getter();

  *(_QWORD *)&v1[v8] = v10;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackWidthConstraint] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackHeightConstraint] = 0;
  v11 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_feedbackGenerator;
  *(_QWORD *)&v1[v11] = objc_msgSend(objc_allocWithZone((Class)UIImpactFeedbackGenerator), "initWithStyle:", 0);
  v12 = &v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_startingWidth];
  *(_QWORD *)v12 = 0;
  v12[8] = 1;
  v13 = &v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_lastSeenBounds];
  *v13 = 0u;
  v13[1] = 0u;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView____lazy_storage___panRecognizer] = 0;
  v14 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackLayoutGuide;
  *(_QWORD *)&v1[v14] = objc_msgSend(objc_allocWithZone((Class)UILayoutGuide), "init");
  v15 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackColor;
  v16 = (void *)objc_opt_self(UIColor);
  *(_QWORD *)&v1[v15] = objc_msgSend(v16, "whiteColor");
  v17 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor;
  *(_QWORD *)&v1[v17] = objc_msgSend(v16, "systemFillColor");
  v18 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackingColor;
  if (qword_100498920 != -1)
    swift_once(&qword_100498920, sub_10024DEF0);
  v19 = (void *)static UIColor.MusicTint.normal;
  *(_QWORD *)&v1[v18] = static UIColor.MusicTint.normal;
  v20 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_value;
  *(double *)&v1[v20] = Int.seconds.getter(0);
  v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_isEnabled] = 1;
  v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking] = 0;
  v21 = &v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_valueChangedHandler];
  *v21 = 0;
  v21[1] = 0;
  v22 = &v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_cancelledHandler];
  *v22 = 0;
  v22[1] = 0;
  v23 = v19;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001003B2590, "MusicCoreUI/SliderView.swift", 28, 2, 115, 0);
  __break(1u);
}

__int128 *SymbolButton.Configuration.platterMinimumSize.unsafeMutableAddressor()
{
  if (qword_100498D18 != -1)
    swift_once(&qword_100498D18, sub_10035C908);
  return &static SymbolButton.Configuration.platterMinimumSize;
}

unint64_t SymbolButton.CustomView.init(view:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>, int64x2_t a3@<Q0>, int64x2_t a4@<Q1>)
{
  int8x16_t v4;
  int8x16_t v5;
  uint64_t v6;

  a3.i64[0] = 0;
  *(_QWORD *)a2 = result;
  a4.i64[0] = result;
  v4 = (int8x16_t)vdupq_lane_s64(vmvnq_s8((int8x16_t)vceqq_s64(a4, a3)).i64[0], 0);
  v5 = vandq_s8(*(int8x16_t *)&UIEdgeInsetsZero.bottom, v4);
  v6 = 0x3FF0000000000000;
  *(int8x16_t *)(a2 + 8) = vandq_s8(*(int8x16_t *)&UIEdgeInsetsZero.top, v4);
  if (!result)
    v6 = 0;
  *(int8x16_t *)(a2 + 24) = v5;
  *(_QWORD *)(a2 + 40) = v6;
  *(_QWORD *)(a2 + 48) = 0;
  return result;
}

uint64_t SymbolButton.updateConfigurationIfNeeded(_:animation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  char *v5;
  char *v6;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  double v19;
  char *v20;
  char v21;
  char *v22;
  char *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  char *v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  id v48;
  void *v49;
  id v50;
  id v51;
  char *v52;
  void *v53;
  id v54;
  id v55;
  char *v56;
  uint64_t v57;
  id v58;
  id v59;
  void *v60;
  id v61;
  id v62;
  uint64_t *v63;
  void (*v64)(char *, char *);
  uint64_t v65;
  char *v66;
  id v67;
  char *v68;
  id v70;
  char *v71;
  _BYTE *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  uint64_t v80;
  char v81[24];
  char v82[24];
  char v83[24];
  char v84[24];
  char v85[24];
  char v86[24];
  char v87[24];
  char v88[8];

  v6 = v5;
  v79 = a5;
  v80 = a2;
  v78 = type metadata accessor for UIViewConfigurationState(0);
  v77 = *(_QWORD *)(v78 - 8);
  __chkstk_darwin();
  v76 = (char *)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_1004A06B0);
  __chkstk_darwin();
  v12 = (char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for SymbolButton.Configuration(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin();
  v16 = (char *)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100014A7C(a1, (uint64_t)v12, &qword_1004A06B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    v17 = (uint64_t)&v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration];
    swift_beginAccess(&v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration], v88, 0, 0);
    sub_100082248(v17, (uint64_t)v16, type metadata accessor for SymbolButton.Configuration);
    sub_100008758((uint64_t)v12, &qword_1004A06B0);
  }
  else
  {
    sub_1000648AC((uint64_t)v12, (uint64_t)v16, type metadata accessor for SymbolButton.Configuration);
  }
  v18 = &v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHidden];
  *(_QWORD *)&v19 = swift_beginAccess(&v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHidden], v87, 0, 0).n128_u64[0];
  if ((*v18 & 1) != 0 || (v19 = *(double *)&v16[*(int *)(v13 + 68)], v19 != 0.0))
  {
    objc_msgSend(v6, "state", v19);
    v20 = &v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenDisabled];
    swift_beginAccess(&v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenDisabled], v86, 0, 0);
    v72 = v20;
    v21 = *v20;
    v74 = a4;
    v73 = a3;
    v75 = v13;
    if ((v21 & 1) != 0
      || (v22 = &v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHighlighted],
          swift_beginAccess(&v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHighlighted], v85, 0, 0), (*v22 & 1) != 0)|| (v23 = &v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenSelected], swift_beginAccess(&v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenSelected], v84, 0, 0), *v23 == 1))
    {
      if (qword_100498D38 != -1)
        swift_once(&qword_100498D38, sub_10035D638);
      v25 = static SymbolButton.Background.normal;
      v24 = (void *)qword_1004A4128;
      v27 = qword_1004A4130;
      v26 = qword_1004A4138;
      v28 = *((_QWORD *)v16 + 24);
      v29 = (void *)*((_QWORD *)v16 + 25);
      v30 = *((_QWORD *)v16 + 26);
      v31 = *((_QWORD *)v16 + 27);
      swift_bridgeObjectRetain();
      v32 = v24;
      sub_100246168(v28, v29, v30, v31);
      *((_QWORD *)v16 + 24) = v25;
      *((_QWORD *)v16 + 25) = v24;
      *((_QWORD *)v16 + 26) = v27;
      *((_QWORD *)v16 + 27) = v26;
      v33 = objc_msgSend(v6, "traitCollection");
      v34 = objc_msgSend(v33, "userInterfaceIdiom");

      if (v34 == (id)6)
      {
        v35 = (void *)objc_opt_self(UIColor);
        v36 = objc_msgSend(v35, "labelColor");

        *((_QWORD *)v16 + 14) = v36;
        v37 = objc_msgSend(v35, "labelColor");

        *((_QWORD *)v16 + 22) = v37;
      }
      v13 = v75;
      *(_QWORD *)&v16[*(int *)(v75 + 68)] = 0x3FF0000000000000;
      a4 = v74;
      a3 = v73;
    }
    if ((objc_msgSend(v6, "state") & 2) != 0 && *v72 == 1)
      *(_QWORD *)&v16[*(int *)(v13 + 68)] = 0x3FD0000000000000;
    if ((objc_msgSend(v6, "state") & 1) != 0)
    {
      v38 = &v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHighlighted];
      swift_beginAccess(&v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHighlighted], v81, 0, 0);
      if (*v38 == 1)
      {
        if (qword_100498D40 != -1)
          swift_once(&qword_100498D40, sub_10035D730);
        v39 = (void *)qword_1004A4148;
        v72 = (_BYTE *)static SymbolButton.Background.highlighted;
        v41 = qword_1004A4150;
        v40 = qword_1004A4158;
        v42 = *((_QWORD *)v16 + 24);
        v43 = (void *)*((_QWORD *)v16 + 25);
        v44 = *((_QWORD *)v16 + 26);
        v45 = *((_QWORD *)v16 + 27);
        swift_bridgeObjectRetain();
        v70 = v39;
        sub_100246168(v42, v43, v44, v45);
        *((_QWORD *)v16 + 24) = v72;
        v71 = v16 + 200;
        *((_QWORD *)v16 + 25) = v39;
        *((_QWORD *)v16 + 26) = v41;
        *((_QWORD *)v16 + 27) = v40;
        v72 = (_BYTE *)v40;
        v13 = v75;
        v46 = *(int *)(v75 + 68);
        *(_QWORD *)&v16[v46] = 0x3FE0000000000000;
        v47 = objc_msgSend(v6, "traitCollection");
        v48 = objc_msgSend(v47, "userInterfaceIdiom");

        a4 = v74;
        a3 = v73;
        if (v48 == (id)6)
        {
          v49 = (void *)objc_opt_self(UIColor);
          v50 = objc_msgSend(v49, "labelColor");

          *((_QWORD *)v16 + 14) = v50;
          v13 = v75;
          v51 = objc_msgSend(v49, "labelColor");

          *((_QWORD *)v16 + 22) = v51;
          *(_QWORD *)&v16[v46] = 0x3FF0000000000000;
          if (objc_msgSend(v6, "showsMenuAsPrimaryAction"))
          {
            if (objc_msgSend(v6, "isContextMenuInteractionEnabled"))
            {

              swift_bridgeObjectRelease();
              *((_QWORD *)v16 + 24) = 0x3FF0000000000000;
              v52 = v71;
              *((_QWORD *)v71 + 1) = 0;
              *((_QWORD *)v52 + 2) = 0;
              *(_QWORD *)v52 = 0;
              v53 = v51;
              v54 = objc_msgSend(v49, "blackColor");

              *((_QWORD *)v16 + 14) = v54;
              v13 = v75;
              v55 = objc_msgSend(v49, "blackColor");

              *((_QWORD *)v16 + 22) = v55;
            }
          }
        }
      }
    }
    if ((objc_msgSend(v6, "state") & 4) != 0)
    {
      v56 = &v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenSelected];
      swift_beginAccess(&v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenSelected], v82, 0, 0);
      if (*v56 == 1)
      {
        sub_100246168(*((_QWORD *)v16 + 24), *((void **)v16 + 25), *((_QWORD *)v16 + 26), *((_QWORD *)v16 + 27));
        *((_QWORD *)v16 + 24) = 0x3FF0000000000000;
        *((_QWORD *)v16 + 25) = 0;
        *((_QWORD *)v16 + 26) = 0;
        *((_QWORD *)v16 + 27) = 0;
        v57 = *(int *)(v13 + 68);
        *(_QWORD *)&v16[v57] = 0x3FF0000000000000;
        v58 = objc_msgSend(v6, "traitCollection");
        v59 = objc_msgSend(v58, "userInterfaceIdiom");

        if (v59 == (id)6)
        {
          v60 = (void *)objc_opt_self(UIColor);
          v61 = objc_msgSend(v60, "blackColor");

          *((_QWORD *)v16 + 14) = v61;
          v62 = objc_msgSend(v60, "blackColor");

          *((_QWORD *)v16 + 22) = v62;
        }
        else if ((objc_msgSend(v6, "state") & 1) != 0)
        {
          *(_QWORD *)&v16[v57] = 0x3FE0000000000000;
        }
      }
    }
  }
  v63 = (uint64_t *)&v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_configurationProvider];
  swift_beginAccess(&v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_configurationProvider], v83, 0, 0);
  v64 = (void (*)(char *, char *))*v63;
  if (*v63)
  {
    v65 = v63[1];
    sub_10003A434(*v63, v65);
    v66 = v6;
    v67 = objc_msgSend(v66, "traitCollection");
    v68 = v76;
    UIViewConfigurationState.init(traitCollection:)(v67);
    UIViewConfigurationState.isDisabled.setter(objc_msgSend(v66, "isEnabled") ^ 1);
    UIViewConfigurationState.isSelected.setter(objc_msgSend(v66, "isSelected"));
    UIViewConfigurationState.isHighlighted.setter(objc_msgSend(v66, "isHighlighted"));

    v64(v68, v16);
    sub_10003A5C8((uint64_t)v64, v65);
    (*(void (**)(char *, uint64_t))(v77 + 8))(v68, v78);
  }
  SymbolButton.setConfiguration(_:animation:updates:)((uint64_t)v16, v80, a3, a4, v79 & 1, (uint64_t)_swiftEmptyArrayStorage);
  return sub_100006798((uint64_t)v16, type metadata accessor for SymbolButton.Configuration);
}

double static SymbolButton.Material.with(_:)@<D0>(void (*a1)(__int128 *)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char v4;
  double result;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  char v9;
  __int128 v10;

  v7 = 0uLL;
  v8 = 0;
  v9 = 2;
  v10 = 0uLL;
  a1(&v7);
  v3 = v8;
  v4 = v9;
  result = *(double *)&v7;
  v6 = v10;
  *(_OWORD *)a2 = v7;
  *(_QWORD *)(a2 + 16) = v3;
  *(_BYTE *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 32) = v6;
  return result;
}

double static SymbolButton.Symbol.with(_:)@<D0>(void (*a1)(__int128 *)@<X0>, uint64_t a2@<X8>)
{
  NSString *v4;
  uint64_t v5;
  char v6;
  char v7;
  double result;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  char v17;
  __int128 v18;
  __int128 v19;
  char v20;
  __int128 v21;
  double v22;
  uint64_t v23;

  v14 = 0uLL;
  *(_QWORD *)&v15 = 0;
  *((_QWORD *)&v15 + 1) = UIFontTextStyleSubheadline;
  v16 = 0;
  v17 = 1;
  v18 = xmmword_1003952D0;
  v19 = 0uLL;
  v20 = -1;
  v21 = 0uLL;
  v22 = 1.0;
  v23 = 0;
  v4 = UIFontTextStyleSubheadline;
  a1(&v14);
  v5 = v16;
  v6 = v17;
  v7 = v20;
  result = v22;
  v9 = v23;
  v10 = v15;
  v11 = v18;
  v12 = v19;
  v13 = v21;
  *(_OWORD *)a2 = v14;
  *(_OWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 32) = v5;
  *(_BYTE *)(a2 + 40) = v6;
  *(_OWORD *)(a2 + 48) = v11;
  *(_OWORD *)(a2 + 64) = v12;
  *(_BYTE *)(a2 + 80) = v7;
  *(_OWORD *)(a2 + 88) = v13;
  *(double *)(a2 + 104) = result;
  *(_QWORD *)(a2 + 112) = v9;
  return result;
}

double static SymbolButton.Title.with(_:)@<D0>(void (*a1)(__int128 *)@<X0>, uint64_t a2@<X8>)
{
  NSString *v4;
  UIFontTextStyle v5;
  double result;
  uint64_t v7;
  uint64_t v8;
  char v9;
  __int128 v10;
  __int128 v11;
  UIFontTextStyle v12;
  double v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  v11 = 0uLL;
  v12 = UIFontTextStyleSubheadline;
  v13 = UIFontWeightSemibold;
  v14 = 0uLL;
  v15 = 0x3FF0000000000000;
  v16 = 0;
  v17 = 0;
  v4 = UIFontTextStyleSubheadline;
  a1(&v11);
  v5 = v12;
  result = v13;
  v7 = v15;
  v8 = v16;
  v9 = v17;
  v10 = v14;
  *(_OWORD *)a2 = v11;
  *(_QWORD *)(a2 + 16) = v5;
  *(double *)(a2 + 24) = result;
  *(_OWORD *)(a2 + 32) = v10;
  *(_QWORD *)(a2 + 48) = v7;
  *(_QWORD *)(a2 + 56) = v8;
  *(_BYTE *)(a2 + 64) = v9;
  return result;
}

uint64_t UIView.Corner.roundedRect.unsafeMutableAddressor()
{
  return sub_1002BDD9C(&qword_100498D58, (uint64_t (*)(_QWORD))&type metadata accessor for UIView.Corner, (uint64_t)static UIView.Corner.roundedRect, (uint64_t)sub_10035D984);
}

uint64_t static SymbolButton.Configuration.with(_:)@<X0>(uint64_t (*a1)(uint64_t)@<X0>, uint64_t a2@<X8>)
{
  SymbolButton.Configuration.init()(a2);
  return a1(a2);
}

uint64_t static SymbolButton.Background.with(_:)(void (*a1)(uint64_t *))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = 0x3FF0000000000000;
  v3 = 0;
  v4 = 0;
  v5 = 0;
  a1(&v2);
  return v3;
}

char *SymbolButton.__allocating_init(configuration:handler:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  return SymbolButton.init(configuration:handler:)(a1, a2, a3);
}

char *SymbolButton.init(configuration:handler:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  objc_class *v18;
  id v19;
  uint64_t v20;
  double v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  objc_class *v32;
  char *v33;
  uint64_t v34;
  void *v35;
  char *v36;
  id v37;
  void *v38;
  void *v39;
  id v40;
  uint64_t v41;
  void *v42;
  uint64_t ObjCClassFromMetadata;
  id v44;
  char *v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  char *v53;
  void *v54;
  UIAccessibilityTraits v55;
  char *v56;
  unint64_t v57;
  UIAccessibilityTraits v58;
  id v59;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t ObjectType;
  uint64_t v65;
  uint64_t v66;
  char v67[24];
  objc_super v68;
  char v69[24];
  char v70[24];
  objc_super v71;
  uint64_t v72;
  __int128 v73;
  __int128 v74;
  uint64_t v75;

  v66 = a3;
  v65 = a2;
  ObjectType = swift_getObjectType();
  sub_100005574(&qword_1004A1050);
  __chkstk_darwin();
  v62 = (uint64_t)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SymbolButton.Metrics(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v63 = (uint64_t *)((char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = &v3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_debugLabel];
  *v9 = 0;
  v9[1] = 0;
  v10 = &v3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_configurationProvider];
  *v10 = 0;
  v10[1] = 0;
  v11 = (uint64_t *)&v3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_handler];
  *v11 = 0;
  v11[1] = 0;
  v3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHighlighted] = 1;
  v3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenSelected] = 1;
  v3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenDisabled] = 1;
  v3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHidden] = 1;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_pendingAnimatedChangesCount] = 0;
  v12 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_hitRectMinimumSize;
  v13 = qword_100498D20;
  v14 = v3;
  if (v13 != -1)
    swift_once(&qword_100498D20, sub_10035C94C);
  *(_OWORD *)&v3[v12] = static SymbolButton.Configuration.hitRectMinimumSize;
  v15 = &v14[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_buildMenu];
  *v15 = 0;
  v15[1] = 0;
  v16 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_containerView;
  *(_QWORD *)&v14[v16] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v17 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_materialView;
  v72 = 1;
  v18 = (objc_class *)type metadata accessor for SymbolButton.MaterialView();
  v73 = 0u;
  v74 = 0u;
  v75 = 0;
  v71.receiver = objc_allocWithZone(v18);
  v71.super_class = v18;
  v19 = objc_msgSendSuper2(&v71, "initWithEffect:", 0);
  sub_10035AF88((uint64_t)&v72);

  *(_QWORD *)&v14[v17] = v19;
  v20 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_backgroundView;
  if (qword_100498CF8 != -1)
    swift_once(&qword_100498CF8, sub_100355D50);
  swift_beginAccess(&static SymbolButton.Background.clear, v70, 0, 0);
  v21 = *(double *)&static SymbolButton.Background.clear;
  v22 = (void *)qword_1004A4078;
  v23 = qword_1004A4080;
  v24 = qword_1004A4088;
  v25 = objc_allocWithZone((Class)type metadata accessor for SymbolButton.BackgroundView());
  swift_bridgeObjectRetain();
  v26 = v22;
  *(_QWORD *)&v14[v20] = sub_10035B374(v22, v21, v23, v24);
  *(_QWORD *)&v14[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___imageView] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_customView] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView] = 0;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v7 + 56))(&v14[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___metrics], 1, 1, v6);
  v14[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_isClippingInvalidated] = 1;
  v27 = a1;
  sub_100082248(a1, (uint64_t)&v14[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration], type metadata accessor for SymbolButton.Configuration);
  swift_beginAccess(v11, v69, 1, 0);
  v28 = *v11;
  v29 = v11[1];
  v30 = v65;
  v31 = v66;
  *v11 = v65;
  v11[1] = v31;
  sub_10003A434(v30, v31);
  sub_10003A5C8(v28, v29);

  v32 = (objc_class *)type metadata accessor for SymbolButton(0);
  v68.receiver = v14;
  v68.super_class = v32;
  v33 = (char *)objc_msgSendSuper2(&v68, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v34 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_containerView;
  v35 = *(void **)&v33[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_containerView];
  v36 = v33;
  objc_msgSend(v35, "setAutoresizingMask:", 18);
  v37 = v35;
  objc_msgSend(v36, "bounds");
  objc_msgSend(v37, "setFrame:");

  v38 = *(void **)&v33[v34];
  objc_msgSend(v36, "addSubview:", v38);
  v39 = *(void **)&v36[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_materialView];
  objc_msgSend(v38, "addSubview:", v39);
  v40 = objc_msgSend(v39, "contentView");
  v41 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_backgroundView;
  objc_msgSend(v40, "addSubview:", *(_QWORD *)&v36[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_backgroundView]);

  v42 = *(void **)&v36[v41];
  type metadata accessor for SymbolButton.Label();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v44 = v42;
  if ((objc_msgSend(v44, "isKindOfClass:", ObjCClassFromMetadata) & 1) == 0)
  {
    v45 = &v36[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration];
    swift_beginAccess(&v36[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration], v67, 0, 0);
    v46 = type metadata accessor for SymbolButton.Configuration(0);
    v47 = v45[*(int *)(v46 + 76)];
    if (v47 == 2)
    {
      v48 = v62;
      sub_100014A7C((uint64_t)&v45[*(int *)(v46 + 36)], v62, &qword_1004A1050);
      v49 = type metadata accessor for UIView.Corner(0);
      v50 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 48))(v48, 1, v49) != 1;
      sub_100008758(v48, &qword_1004A1050);
    }
    else
    {
      v50 = v47 & 1;
    }
    objc_msgSend(v44, "setClipsToBounds:", v50);
  }

  sub_100359758(a1);
  v51 = v63;
  sub_100359380(v63);
  sub_10035A2F8((uint64_t)v51);
  sub_100006798((uint64_t)v51, type metadata accessor for SymbolButton.Metrics);
  sub_1000087DC(0, &qword_10049B098, UIAction_ptr);
  v52 = swift_allocObject(&unk_100465F90, 24, 7);
  *(_QWORD *)(v52 + 16) = ObjectType;
  v53 = v36;
  v54 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0x6E6F69746341, 0xE600000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_10035DC54, v52);
  objc_msgSend(v53, "addAction:forControlEvents:", v54, 64);

  v55 = UIAccessibilityTraitButton;
  v56 = v53;
  v57 = (unint64_t)objc_msgSend(v56, "accessibilityTraits");
  if ((v55 & ~v57) != 0)
    v58 = v55;
  else
    v58 = 0;
  objc_msgSend(v56, "setAccessibilityTraits:", v58 | v57);

  v59 = objc_msgSend(objc_allocWithZone((Class)UIPointerInteraction), "initWithDelegate:", v56);
  objc_msgSend(v56, "addInteraction:", v59);

  sub_10003A5C8(v65, v66);
  sub_100006798(v27, type metadata accessor for SymbolButton.Configuration);
  return v56;
}

void sub_1003509E8(void *a1, uint64_t a2)
{
  id v3;
  id v4;
  void *v5;
  char *v6;
  void (*v7)(void *);
  uint64_t v8;
  char *v9;
  _OWORD v10[2];
  _BYTE v11[24];
  uint64_t v12;

  v3 = objc_msgSend(a1, "sender");
  if (v3)
  {
    v4 = v3;
    _bridgeAnyObjectToAny(_:)(v3);
    swift_unknownObjectRelease(v4);
  }
  else
  {
    memset(v10, 0, sizeof(v10));
  }
  sub_1000149A8((uint64_t)v10, (uint64_t)v11, &qword_10049B130);
  if (v12)
  {
    if ((swift_dynamicCast(&v9, v11, (char *)&type metadata for Any + 8, a2, 6) & 1) != 0)
    {
      v5 = v9;
      v6 = &v9[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_handler];
      swift_beginAccess(&v9[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_handler], v11, 0, 0);
      v7 = *(void (**)(void *))v6;
      if (*(_QWORD *)v6)
      {
        v8 = *((_QWORD *)v6 + 1);
        swift_retain(v8);
        v7(v5);

        sub_10003A5C8((uint64_t)v7, v8);
      }
      else
      {

      }
    }
  }
  else
  {
    sub_100008758((uint64_t)v11, &qword_10049B130);
  }
}

uint64_t SymbolButton.debugLabel.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_debugLabel);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_debugLabel, v4, 0, 0);
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t SymbolButton.debugLabel.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  _BYTE v8[24];

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_debugLabel);
  swift_beginAccess(v5, v8, 1, 0);
  v6 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease(v6);
}

uint64_t (*SymbolButton.debugLabel.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_debugLabel, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t SymbolButton.configurationProvider.getter()
{
  return sub_10034D71C(&OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_configurationProvider, (void (*)(_QWORD, _QWORD, __n128))sub_100208034);
}

uint64_t SymbolButton.configurationProvider.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  char *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v13[24];

  sub_100005574(&qword_1004A06B0);
  __chkstk_darwin();
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = (uint64_t *)(v2 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_configurationProvider);
  swift_beginAccess(v2 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_configurationProvider, v13, 1, 0);
  v8 = *v7;
  v9 = v7[1];
  *v7 = a1;
  v7[1] = a2;
  sub_10003A434(a1, a2);
  sub_10003A5C8(v8, v9);
  v10 = type metadata accessor for SymbolButton.Configuration(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v6, 1, 1, v10);
  SymbolButton.updateConfigurationIfNeeded(_:animation:)((uint64_t)v6, 0, 0, 0, 1);
  sub_100008758((uint64_t)v6, &qword_1004A06B0);
  return sub_10003A5C8(a1, a2);
}

void (*SymbolButton.configurationProvider.modify(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = sub_100005574(&qword_1004A06B0);
  v3[4] = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_configurationProvider, v3, 33, 0);
  return sub_100350DB8;
}

void sub_100350DB8(_QWORD *a1, char a2)
{
  _QWORD *v3;
  void *v4;
  uint64_t v5;

  v3 = (_QWORD *)*a1;
  swift_endAccess(*a1);
  v4 = (void *)v3[4];
  if ((a2 & 1) == 0)
  {
    v5 = type metadata accessor for SymbolButton.Configuration(0);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
    SymbolButton.updateConfigurationIfNeeded(_:animation:)((uint64_t)v4, 0, 0, 0, 1);
    sub_100008758((uint64_t)v4, &qword_1004A06B0);
  }
  free(v4);
  free(v3);
}

void SymbolButton.configurationState.getter()
{
  void *v0;
  id v1;

  v1 = v0;
  UIViewConfigurationState.init(traitCollection:)(objc_msgSend(v1, "traitCollection"));
  UIViewConfigurationState.isDisabled.setter(objc_msgSend(v1, "isEnabled") ^ 1);
  UIViewConfigurationState.isSelected.setter(objc_msgSend(v1, "isSelected"));
  UIViewConfigurationState.isHighlighted.setter(objc_msgSend(v1, "isHighlighted"));

}

uint64_t SymbolButton.handler.getter()
{
  return sub_10034D71C(&OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_handler, (void (*)(_QWORD, _QWORD, __n128))sub_10003A434);
}

uint64_t SymbolButton.handler.setter(uint64_t a1, uint64_t a2)
{
  return sub_10034D790(a1, a2, &OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_handler, (uint64_t (*)(uint64_t, uint64_t, __n128))sub_10003A5C8);
}

uint64_t (*SymbolButton.handler.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_handler, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t SymbolButton.automaticallyAdjustsAlphaWhenHighlighted.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHighlighted);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHighlighted, v3, 0, 0);
  return *v1;
}

void SymbolButton.automaticallyAdjustsAlphaWhenHighlighted.setter(char a1)
{
  sub_100351074(a1, &OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHighlighted);
}

uint64_t (*SymbolButton.automaticallyAdjustsAlphaWhenHighlighted.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  _BYTE *v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = sub_100005574(&qword_1004A06B0);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v6 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHighlighted;
  v3[4] = v5;
  v3[5] = v6;
  v7 = (_BYTE *)(v1 + v6);
  swift_beginAccess(v1 + v6, v3, 1, 0);
  *((_BYTE *)v3 + 48) = *v7;
  return sub_100351020;
}

uint64_t SymbolButton.automaticallyAdjustsAlphaWhenSelected.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenSelected);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenSelected, v3, 0, 0);
  return *v1;
}

void SymbolButton.automaticallyAdjustsAlphaWhenSelected.setter(char a1)
{
  sub_100351074(a1, &OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenSelected);
}

void sub_100351074(char a1, _QWORD *a2)
{
  uint64_t v2;
  int v5;
  uint64_t v6;
  char *v7;
  _BYTE *v8;
  int v9;
  uint64_t v10;
  _BYTE v12[24];

  v5 = a1 & 1;
  sub_100005574(&qword_1004A06B0);
  __chkstk_darwin();
  v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = (_BYTE *)(v2 + *a2);
  swift_beginAccess(v8, v12, 1, 0);
  v9 = *v8;
  *v8 = a1;
  if (v9 != v5)
  {
    v10 = type metadata accessor for SymbolButton.Configuration(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    SymbolButton.updateConfigurationIfNeeded(_:animation:)((uint64_t)v7, 0, 0, 0, 1);
    sub_100008758((uint64_t)v7, &qword_1004A06B0);
  }
}

uint64_t (*SymbolButton.automaticallyAdjustsAlphaWhenSelected.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  _BYTE *v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = sub_100005574(&qword_1004A06B0);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v6 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenSelected;
  v3[4] = v5;
  v3[5] = v6;
  v7 = (_BYTE *)(v1 + v6);
  swift_beginAccess(v1 + v6, v3, 1, 0);
  *((_BYTE *)v3 + 48) = *v7;
  return sub_100351020;
}

void sub_1003511E8(void ***a1)
{
  void **v1;
  _BYTE *v2;
  void *v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *a1;
  v2 = (*a1)[5];
  v3 = (*a1)[3];
  v4 = *((unsigned __int8 *)*a1 + 48);
  v5 = v2[(_QWORD)v3];
  v2[(_QWORD)v3] = v4;
  if (((v4 ^ v5) & 1) != 0)
  {
    v6 = (uint64_t)v1[4];
    v7 = type metadata accessor for SymbolButton.Configuration(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
    SymbolButton.updateConfigurationIfNeeded(_:animation:)(v6, 0, 0, 0, 1);
    sub_100008758(v6, &qword_1004A06B0);
  }
  free(v1[4]);
  free(v1);
}

uint64_t SymbolButton.automaticallyAdjustsAlphaWhenDisabled.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenDisabled);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenDisabled, v3, 0, 0);
  return *v1;
}

void SymbolButton.automaticallyAdjustsAlphaWhenDisabled.setter(char a1)
{
  sub_100351074(a1, &OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenDisabled);
}

uint64_t (*SymbolButton.automaticallyAdjustsAlphaWhenDisabled.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  _BYTE *v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = sub_100005574(&qword_1004A06B0);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v6 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenDisabled;
  v3[4] = v5;
  v3[5] = v6;
  v7 = (_BYTE *)(v1 + v6);
  swift_beginAccess(v1 + v6, v3, 1, 0);
  *((_BYTE *)v3 + 48) = *v7;
  return sub_100351020;
}

uint64_t SymbolButton.automaticallyAdjustsAlphaWhenHidden.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHidden);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHidden, v3, 0, 0);
  return *v1;
}

void SymbolButton.automaticallyAdjustsAlphaWhenHidden.setter(char a1)
{
  sub_100351074(a1, &OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHidden);
}

uint64_t (*SymbolButton.automaticallyAdjustsAlphaWhenHidden.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  _BYTE *v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = sub_100005574(&qword_1004A06B0);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v6 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHidden;
  v3[4] = v5;
  v3[5] = v6;
  v7 = (_BYTE *)(v1 + v6);
  swift_beginAccess(v1 + v6, v3, 1, 0);
  *((_BYTE *)v3 + 48) = *v7;
  return sub_100351020;
}

uint64_t SymbolButton.configuration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_100082248(v3, a1, type metadata accessor for SymbolButton.Configuration);
}

uint64_t SymbolButton.configuration.setter(uint64_t a1)
{
  SymbolButton.setConfiguration(_:animation:updates:)(a1, 0, 0, 0, 1, (uint64_t)_swiftEmptyArrayStorage);
  return sub_100006798(a1, type metadata accessor for SymbolButton.Configuration);
}

void (*SymbolButton.configuration.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  void *v5;
  uint64_t v6;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for SymbolButton.Configuration(0) - 8) + 64);
  v3[4] = malloc(v4);
  v5 = malloc(v4);
  v3[5] = v5;
  v6 = v1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration;
  swift_beginAccess(v6, v3, 0, 0);
  sub_100082248(v6, (uint64_t)v5, type metadata accessor for SymbolButton.Configuration);
  return sub_100351580;
}

void sub_100351580(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = *(void **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 32);
  v4 = *(void **)(*(_QWORD *)a1 + 40);
  if ((a2 & 1) != 0)
  {
    sub_100082248(*(_QWORD *)(*(_QWORD *)a1 + 40), (uint64_t)v3, type metadata accessor for SymbolButton.Configuration);
    SymbolButton.setConfiguration(_:animation:updates:)((uint64_t)v3, 0, 0, 0, 1, (uint64_t)_swiftEmptyArrayStorage);
    sub_100006798((uint64_t)v3, type metadata accessor for SymbolButton.Configuration);
  }
  else
  {
    SymbolButton.setConfiguration(_:animation:updates:)(*(_QWORD *)(*(_QWORD *)a1 + 40), 0, 0, 0, 1, (uint64_t)_swiftEmptyArrayStorage);
  }
  sub_100006798((uint64_t)v4, type metadata accessor for SymbolButton.Configuration);
  free(v4);
  free(v3);
  free(v2);
}

uint64_t *SymbolButton.Background.normal.unsafeMutableAddressor()
{
  if (qword_100498D38 != -1)
    swift_once(&qword_100498D38, sub_10035D638);
  return &static SymbolButton.Background.normal;
}

uint64_t *SymbolButton.Background.highlighted.unsafeMutableAddressor()
{
  if (qword_100498D40 != -1)
    swift_once(&qword_100498D40, sub_10035D730);
  return &static SymbolButton.Background.highlighted;
}

void *SymbolButton.Background.selected.unsafeMutableAddressor()
{
  return &static SymbolButton.Background.selected;
}

void *SymbolButton.Animation.default.unsafeMutableAddressor()
{
  return &static SymbolButton.Animation.default;
}

uint64_t static SymbolButton.Animation.default.getter()
{
  return 3075;
}

void *SymbolButton.Animation.eased.unsafeMutableAddressor()
{
  return &static SymbolButton.Animation.eased;
}

uint64_t static SymbolButton.Animation.eased.getter()
{
  return 3075;
}

uint64_t SymbolButton.Update.alongside.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_10003A434(*v0, v0[1]);
  return v1;
}

uint64_t SymbolButton.Update.alongside.setter(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t result;

  result = sub_10003A5C8(*v2, v2[1]);
  *v2 = a1;
  v2[1] = a2;
  return result;
}

double SymbolButton.Update.animationOptions.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

void SymbolButton.Update.animationOptions.setter(double a1, double a2)
{
  uint64_t v2;

  *(double *)(v2 + 16) = a1;
  *(double *)(v2 + 24) = a2;
}

uint64_t SymbolButton.Update.completion.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  sub_10003A434(v1, *(_QWORD *)(v0 + 40));
  return v1;
}

uint64_t SymbolButton.Update.completion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_10003A5C8(*(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t SymbolButton.Update.init(alongside:animationOptions:completion:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>)
{
  *(_QWORD *)a5 = result;
  *(_QWORD *)(a5 + 8) = a2;
  *(double *)(a5 + 16) = a6;
  *(double *)(a5 + 24) = a7;
  *(_QWORD *)(a5 + 32) = a3;
  *(_QWORD *)(a5 + 40) = a4;
  return result;
}

void SymbolButton.setConfiguration(_:animation:updates:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  _BYTE *v6;
  _BYTE *v7;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  char *v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  __int128 *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(char *, uint64_t, uint64_t);
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  id v46;
  id v47;
  uint64_t v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  char *v53;
  NSObject *v54;
  int v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  _BYTE *v64;
  uint64_t v65;
  char *v66;
  NSObject *v67;
  int v68;
  _BOOL4 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  __int128 *v77;
  char *v78;
  id v79;
  char *v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  __int128 *v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(char *);
  uint64_t v90;
  uint64_t v91;
  void (*v92)(char *);
  uint64_t v93;
  uint64_t v94;
  void *v95;
  void *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  __int128 v102;
  uint64_t v103;
  void *v104;
  _QWORD *v105;
  uint64_t v106;
  __int128 v107;
  __int128 v108;
  id v109;
  id v110;
  id v111;
  char v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  __int128 v119;
  __int128 v120;
  uint64_t v121;
  char v122;
  uint64_t v123;
  uint64_t v124;
  char v125;
  char v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  NSObject *v132;
  os_log_type_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  double v137;
  char *v138;
  char *v139;
  char *v140;
  int v141;
  uint64_t v142;
  int v143;
  uint64_t v144;
  BOOL v145;
  int *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  _BOOL4 v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  id v154;
  char *v155;
  char *v156;
  __int128 *v157;
  id v158;
  char *v159;
  uint64_t v160;
  char *v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  unint64_t v174;
  unint64_t v175;
  uint64_t v176;
  int *v177;
  uint64_t v178;
  void *v179;
  _QWORD *v180;
  int *v181;
  double v182;
  __n128 v183;
  double v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  unint64_t v188;
  unint64_t v189;
  unint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  void *v194;
  _QWORD *v195;
  int *v196;
  _QWORD *v197;
  char *v198;
  uint64_t v199;
  void *v200;
  _QWORD *v201;
  int *v202;
  uint64_t v203;
  char *v204;
  char *v205;
  double v206;
  uint64_t ObjectType;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  double v212;
  uint64_t v213;
  int v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  char *v219;
  char *v220;
  uint64_t v221;
  uint64_t v222;
  int *v223;
  char *v224;
  char *v225;
  __int128 *v226;
  char *v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  __int128 v233;
  uint64_t v234;
  __int128 v235;
  __int128 v236;
  uint64_t v237;
  char v238;
  __int128 v239;
  uint64_t v240;
  __int128 v241;
  __int128 v242;
  uint64_t v243;
  char v244;
  _QWORD v245[6];
  __int128 v246;
  __int128 v247;
  uint64_t v248;
  uint64_t v249;
  __int128 v250;
  void *v251;
  __int128 v252;
  __int128 v253;
  void *v254;
  _QWORD *v255;
  __int128 v256;
  __int128 v257;
  uint64_t v258;
  __int128 v259;
  __int128 v260;
  _OWORD v261[7];
  uint64_t v262;

  v7 = v6;
  v228 = a6;
  v214 = a5;
  v208 = a4;
  v206 = *(double *)&a3;
  v212 = *(double *)&a2;
  ObjectType = swift_getObjectType();
  v224 = (char *)sub_100005574(&qword_1004A10C0);
  __chkstk_darwin();
  v10 = (char *)&v203 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (int *)type metadata accessor for UUID(0);
  v222 = *((_QWORD *)v11 - 1);
  v223 = v11;
  __chkstk_darwin();
  v13 = (char *)&v203 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (int *)type metadata accessor for SymbolButton.Configuration(0);
  v209 = *((_QWORD *)v14 - 1);
  v15 = *(_QWORD *)(v209 + 64);
  __chkstk_darwin();
  v213 = (uint64_t)&v203 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v220 = (char *)&v203 - v16;
  __chkstk_darwin();
  v219 = (char *)&v203 - v17;
  __chkstk_darwin();
  v221 = (uint64_t)&v203 - v18;
  __chkstk_darwin();
  v218 = (uint64_t)&v203 - v19;
  __chkstk_darwin();
  v217 = (uint64_t)&v203 - v20;
  __chkstk_darwin();
  v216 = (uint64_t)&v203 - v21;
  __chkstk_darwin();
  v215 = (uint64_t)&v203 - v22;
  __chkstk_darwin();
  v225 = (char *)&v203 - v23;
  __chkstk_darwin();
  v211 = (uint64_t)&v203 - v24;
  __chkstk_darwin();
  v210 = (uint64_t)&v203 - v25;
  __chkstk_darwin();
  v27 = (char *)&v203 - v26;
  __chkstk_darwin();
  v29 = (__int128 *)((char *)&v203 - v28);
  v30 = (uint64_t)&v7[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration];
  swift_beginAccess(&v7[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration], &v232, 0, 0);
  sub_100082248(v30, (uint64_t)v29, type metadata accessor for SymbolButton.Configuration);
  if ((_s11MusicCoreUI12SymbolButtonC13ConfigurationV23__derived_struct_equalsySbAE_AEtFZ_0(a1, v29) & 1) != 0)
  {
LABEL_55:
    sub_100006798((uint64_t)v29, type metadata accessor for SymbolButton.Configuration);
    return;
  }
  sub_100082248(a1, (uint64_t)v27, type metadata accessor for SymbolButton.Configuration);
  swift_beginAccess(v30, v261, 33, 0);
  v204 = v27;
  sub_100360170((uint64_t)v27, v30);
  swift_endAccess(v261);
  v31 = _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  v205 = (char *)UUID.uuidString.getter(v31);
  v227 = v32;
  (*(void (**)(char *, int *))(v222 + 8))(v13, v223);
  v223 = v14;
  v33 = v14[9];
  v226 = (__int128 *)a1;
  v34 = a1 + v33;
  v35 = (uint64_t)&v10[*((int *)v224 + 12)];
  sub_100014A7C((uint64_t)v29 + v33, (uint64_t)v10, &qword_1004A1050);
  sub_100014A7C(v34, v35, &qword_1004A1050);
  v36 = type metadata accessor for UIView.Corner(0);
  v37 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 48);
  v38 = v37(v10, 1, v36);
  v39 = v37((char *)v35, 1, v36);
  if (v38 != 1)
  {
    v40 = (uint64_t)v225;
    if (v39 == 1)
      goto LABEL_6;
LABEL_7:
    sub_100008758((uint64_t)v10, &qword_1004A10C0);
    goto LABEL_8;
  }
  v40 = (uint64_t)v225;
  if (v39 == 1)
    goto LABEL_7;
  sub_100008758(v35, &qword_1004A1050);
LABEL_6:
  sub_100008758((uint64_t)v10, &qword_1004A1050);
  v7[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_isClippingInvalidated] = 1;
LABEL_8:
  v41 = (uint64_t)v226;
  v42 = v227;
  objc_msgSend(v7, "invalidateIntrinsicContentSize");
  objc_msgSend(v7, "accessibilityUpdateSymbolButton");
  v43 = *(_OWORD *)(v41 + 80);
  v261[4] = *(_OWORD *)(v41 + 64);
  v261[5] = v43;
  v261[6] = *(_OWORD *)(v41 + 96);
  v262 = *(_QWORD *)(v41 + 112);
  v44 = *(_OWORD *)(v41 + 16);
  v261[0] = *(_OWORD *)v41;
  v261[1] = v44;
  v45 = *(_OWORD *)(v41 + 48);
  v261[2] = *(_OWORD *)(v41 + 32);
  v261[3] = v45;
  v46 = sub_100352C2C();
  objc_msgSend(v7, "setLargeContentImage:", v46);

  v47 = objc_msgSend(v7, "window");
  if (!v47 || (v214 & 1) != 0 || (v49 = v212, v212 <= 0.0))
  {
    if (qword_100498918 != -1)
      swift_once(&qword_100498918, sub_10024C274);
    v62 = type metadata accessor for Logger(0, v48);
    v63 = sub_1000086B4(v62, (uint64_t)qword_1004A31D8);
    sub_100082248(v41, v40, type metadata accessor for SymbolButton.Configuration);
    v64 = v7;
    swift_bridgeObjectRetain_n(v42, 2);
    v65 = v40;
    v66 = v64;
    v224 = (char *)v63;
    v67 = Logger.logObject.getter(v66);
    v68 = static os_log_type_t.debug.getter();
    v69 = os_log_type_enabled(v67, (os_log_type_t)v68);
    v70 = v228;
    if (v69)
    {
      LODWORD(v222) = v68;
      v71 = swift_slowAlloc(32, -1);
      v72 = swift_slowAlloc(96, -1);
      *(_QWORD *)&v252 = v72;
      *(_DWORD *)v71 = 136446722;
      v73 = &v66[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_debugLabel];
      swift_beginAccess(&v66[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_debugLabel], &v229, 0, 0);
      v74 = (char *)*((_QWORD *)v73 + 1);
      if (v74)
      {
        v75 = *(char **)v73;
        v76 = v74;
      }
      else
      {
        v77 = v29;
        v78 = v66;
        v79 = objc_msgSend(v78, "description");
        v75 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v79);
        v76 = v80;

        v70 = v228;
        v29 = v77;
        v42 = v227;
      }
      swift_bridgeObjectRetain();
      *(_QWORD *)(v71 + 4) = sub_100249A1C(v75, v76, (uint64_t *)&v252);
      swift_bridgeObjectRelease();

      *(_WORD *)(v71 + 12) = 2082;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v71 + 14) = sub_100249A1C(v205, v42, (uint64_t *)&v252);
      swift_bridgeObjectRelease_n(v42, 3);
      *(_WORD *)(v71 + 22) = 2082;
      v81 = (uint64_t)v225;
      v82 = (char *)SymbolButton.Configuration.description.getter();
      *(_QWORD *)(v71 + 24) = sub_100249A1C(v82, v83, (uint64_t *)&v252);
      swift_bridgeObjectRelease();
      sub_100006798(v81, type metadata accessor for SymbolButton.Configuration);
      _os_log_impl((void *)&_mh_execute_header, v67, (os_log_type_t)v222, "[%{public}s] UpdateID=%{public}s — Applying new configuration=%{public}s", (uint8_t *)v71, 0x20u);
      swift_arrayDestroy(v72, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v72, -1, -1);
      swift_slowDealloc(v71, -1, -1);

      v41 = (uint64_t)v226;
    }
    else
    {

      swift_bridgeObjectRelease_n(v42, 2);
      sub_100006798(v65, type metadata accessor for SymbolButton.Configuration);

    }
    sub_100359758(v41);
    v84 = *(_QWORD *)(v70 + 16);
    if (v84)
    {
      v85 = v29;
      swift_bridgeObjectRetain();
      v86 = (uint64_t *)(v70 + 72);
      while (1)
      {
        v89 = (void (*)(char *))*(v86 - 5);
        v90 = *(v86 - 4);
        v92 = (void (*)(char *))*(v86 - 1);
        v91 = *v86;
        v93 = *v86;
        if (v89)
        {
          sub_10003A434((uint64_t)v92, v93);
          sub_10003A434((uint64_t)v89, v90);
          v89(v66);
          if (v92)
            goto LABEL_32;
        }
        else
        {
          sub_10003A434((uint64_t)v92, v93);
          if (v92)
          {
LABEL_32:
            v92(v66);
            sub_10003A5C8((uint64_t)v89, v90);
            v87 = (uint64_t)v92;
            v88 = v91;
            goto LABEL_27;
          }
        }
        v87 = (uint64_t)v89;
        v88 = v90;
LABEL_27:
        sub_10003A5C8(v87, v88);
        v86 += 6;
        if (!--v84)
        {
          swift_bridgeObjectRelease();
          v29 = v85;
          break;
        }
      }
    }
    v94 = *((_QWORD *)v29 + 1);
    v95 = (void *)*((_QWORD *)v29 + 2);
    v96 = (void *)*((_QWORD *)v29 + 3);
    v97 = *((_QWORD *)v29 + 4);
    v98 = *((unsigned __int8 *)v29 + 40);
    v99 = *((unsigned __int8 *)v29 + 80);
    v100 = *((_QWORD *)v29 + 11);
    v101 = (void *)*((_QWORD *)v29 + 14);
    v245[0] = *(_QWORD *)v29;
    v245[1] = v94;
    v245[2] = v95;
    v245[3] = v96;
    v245[4] = v97;
    v245[5] = v98;
    v102 = v29[4];
    v246 = v29[3];
    v247 = v102;
    v248 = v99;
    v249 = v100;
    v250 = v29[6];
    v251 = v101;
    v103 = (uint64_t)v226;
    v104 = (void *)*((_QWORD *)v226 + 4);
    v105 = (_QWORD *)*((unsigned __int8 *)v226 + 40);
    v106 = *((unsigned __int8 *)v226 + 80);
    v107 = v226[1];
    v252 = *v226;
    v253 = v107;
    v254 = v104;
    v255 = v105;
    v108 = v226[4];
    v256 = v226[3];
    v257 = v108;
    v258 = v106;
    v259 = *(__int128 *)((char *)v226 + 88);
    v260 = *(__int128 *)((char *)v226 + 104);
    v109 = v101;
    swift_bridgeObjectRetain();
    v110 = v95;
    v111 = v96;
    swift_bridgeObjectRetain();
    v112 = _s11MusicCoreUI12SymbolButtonC0D0V21hasSignificantChanges4from2toSbAESg_AItFZ_0((uint64_t)v245, (uint64_t)&v252);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    v113 = v215;
    sub_100082248((uint64_t)v29, v215, type metadata accessor for SymbolButton.Configuration);
    v114 = v216;
    sub_100082248(v103, v216, type metadata accessor for SymbolButton.Configuration);
    if ((v112 & 1) != 0)
    {
      sub_100006798(v113, type metadata accessor for SymbolButton.Configuration);
      sub_100006798(v114, type metadata accessor for SymbolButton.Configuration);
      v115 = v217;
      sub_100082248((uint64_t)v29, v217, type metadata accessor for SymbolButton.Configuration);
      v116 = v218;
      sub_100082248(v103, v218, type metadata accessor for SymbolButton.Configuration);
      v118 = (uint64_t)v219;
      v117 = (uint64_t)v220;
    }
    else
    {
      v233 = *(_OWORD *)(v113 + 120);
      v119 = *(_OWORD *)(v113 + 160);
      v235 = *(_OWORD *)(v113 + 144);
      v236 = v119;
      v239 = *(_OWORD *)(v114 + 120);
      v120 = *(_OWORD *)(v114 + 160);
      v241 = *(_OWORD *)(v114 + 144);
      v121 = *(_QWORD *)(v113 + 176);
      v122 = *(_BYTE *)(v113 + 184);
      v234 = *(_QWORD *)(v113 + 136);
      v237 = v121;
      v238 = v122;
      v123 = *(_QWORD *)(v114 + 136);
      v124 = *(_QWORD *)(v114 + 176);
      v125 = *(_BYTE *)(v114 + 184);
      v242 = v120;
      v240 = v123;
      v243 = v124;
      v244 = v125;
      v126 = sub_10035FBA0((uint64_t)&v233, (uint64_t)&v239);
      sub_100006798(v113, type metadata accessor for SymbolButton.Configuration);
      sub_100006798(v114, type metadata accessor for SymbolButton.Configuration);
      v115 = v217;
      sub_100082248((uint64_t)v29, v217, type metadata accessor for SymbolButton.Configuration);
      v116 = v218;
      sub_100082248(v103, v218, type metadata accessor for SymbolButton.Configuration);
      v118 = (uint64_t)v219;
      v117 = (uint64_t)v220;
      if ((v126 & 1) == 0)
      {
        v141 = (*(_QWORD *)(v115 + 128) != 0) & (*(unsigned __int8 *)(v115 + 184) ^ 1);
        v142 = v115;
        v143 = (*(_QWORD *)(v116 + 128) != 0) & (*(unsigned __int8 *)(v116 + 184) ^ 1);
        sub_100006798(v142, type metadata accessor for SymbolButton.Configuration);
        sub_100006798(v116, type metadata accessor for SymbolButton.Configuration);
        v144 = v221;
        sub_100082248((uint64_t)v29, v221, type metadata accessor for SymbolButton.Configuration);
        sub_100082248(v103, v118, type metadata accessor for SymbolButton.Configuration);
        v145 = v141 == v143;
        v127 = v144;
        v146 = v223;
        if (!v145)
          goto LABEL_38;
        v147 = v223[10];
        v148 = *(_QWORD *)(v127 + v147);
        v149 = *(_QWORD *)(v118 + v147);
        v150 = v149 == 0;
        if (v148)
        {
          v127 = v221;
          if (!v149)
            goto LABEL_38;
          v150 = v148 == v149;
        }
        sub_100006798(v221, type metadata accessor for SymbolButton.Configuration);
        sub_100006798(v118, type metadata accessor for SymbolButton.Configuration);
        sub_100082248((uint64_t)v29, v117, type metadata accessor for SymbolButton.Configuration);
        v128 = v213;
        sub_100082248(v103, v213, type metadata accessor for SymbolButton.Configuration);
        if (v150)
        {
          v151 = v146[11];
          v152 = *(_QWORD *)(v117 + v151 + 16);
          v153 = *(_QWORD *)(v128 + v151 + 16);
          if (v152 == 1)
          {
            if (v153 != 1)
              goto LABEL_39;
          }
          else if (v153 == 1)
          {
            goto LABEL_39;
          }
          sub_100006798(v128, type metadata accessor for SymbolButton.Configuration);
          sub_100006798(v117, type metadata accessor for SymbolButton.Configuration);
LABEL_40:
          v129 = v66;
          v130 = v227;
          v131 = swift_bridgeObjectRetain();
          v132 = Logger.logObject.getter(v131);
          v133 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v132, v133))
          {
            v134 = swift_slowAlloc(22, -1);
            v135 = swift_slowAlloc(64, -1);
            v231 = v135;
            *(_DWORD *)v134 = 136446466;
            v136 = &v129[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_debugLabel];
            *(_QWORD *)&v137 = swift_beginAccess(&v129[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_debugLabel], &v230, 0, 0).n128_u64[0];
            v138 = (char *)*((_QWORD *)v136 + 1);
            if (v138)
            {
              v139 = *(char **)v136;
              v140 = v138;
            }
            else
            {
              v154 = objc_msgSend(v129, "description", v137);
              v139 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v154);
              v140 = v155;

            }
            swift_bridgeObjectRetain();
            *(_QWORD *)(v134 + 4) = sub_100249A1C(v139, v140, &v231);
            swift_bridgeObjectRelease();

            *(_WORD *)(v134 + 12) = 2082;
            v156 = v227;
            swift_bridgeObjectRetain();
            *(_QWORD *)(v134 + 14) = sub_100249A1C(v205, v156, &v231);
            swift_bridgeObjectRelease_n(v156, 3);
            _os_log_impl((void *)&_mh_execute_header, v132, v133, "[%{public}s] UpdateID=%{public}s — Updated ✅", (uint8_t *)v134, 0x16u);
            swift_arrayDestroy(v135, 2, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v135, -1, -1);
            swift_slowDealloc(v134, -1, -1);

          }
          else
          {

            swift_bridgeObjectRelease_n(v130, 2);
          }
          goto LABEL_55;
        }
LABEL_39:
        sub_100006798(v128, type metadata accessor for SymbolButton.Configuration);
        sub_100006798(v117, type metadata accessor for SymbolButton.Configuration);
        objc_msgSend(v66, "setNeedsLayout");
        goto LABEL_40;
      }
    }
    sub_100006798(v115, type metadata accessor for SymbolButton.Configuration);
    sub_100006798(v116, type metadata accessor for SymbolButton.Configuration);
    v127 = v221;
    sub_100082248((uint64_t)v29, v221, type metadata accessor for SymbolButton.Configuration);
    sub_100082248(v103, v118, type metadata accessor for SymbolButton.Configuration);
LABEL_38:
    sub_100006798(v127, type metadata accessor for SymbolButton.Configuration);
    sub_100006798(v118, type metadata accessor for SymbolButton.Configuration);
    sub_100082248((uint64_t)v29, v117, type metadata accessor for SymbolButton.Configuration);
    v128 = v213;
    sub_100082248(v103, v213, type metadata accessor for SymbolButton.Configuration);
    goto LABEL_39;
  }
  if (qword_100498918 != -1)
    swift_once(&qword_100498918, sub_10024C274);
  v50 = type metadata accessor for Logger(0, v48);
  sub_1000086B4(v50, (uint64_t)qword_1004A31D8);
  v51 = v210;
  sub_100082248(v41, v210, type metadata accessor for SymbolButton.Configuration);
  v52 = v7;
  swift_bridgeObjectRetain_n(v42, 2);
  v53 = v52;
  v54 = Logger.logObject.getter(v53);
  v55 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v54, (os_log_type_t)v55))
  {
    LODWORD(v225) = v55;
    v56 = swift_slowAlloc(32, -1);
    v224 = (char *)swift_slowAlloc(96, -1);
    *(_QWORD *)&v252 = v224;
    *(_DWORD *)v56 = 136446722;
    v57 = &v53[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_debugLabel];
    swift_beginAccess(&v53[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_debugLabel], v245, 0, 0);
    v58 = (char *)*((_QWORD *)v57 + 1);
    if (v58)
    {
      v59 = *(char **)v57;
      v60 = v53;
      v61 = v58;
    }
    else
    {
      v223 = v53;
      v157 = v29;
      v158 = objc_msgSend(v223, "description");
      v59 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v158);
      v60 = v53;
      v61 = v159;

      v29 = v157;
      v41 = (uint64_t)v226;

    }
    swift_bridgeObjectRetain();
    *(_QWORD *)(v56 + 4) = sub_100249A1C(v59, v61, (uint64_t *)&v252);
    swift_bridgeObjectRelease();

    *(_WORD *)(v56 + 12) = 2082;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v56 + 14) = sub_100249A1C(v205, v42, (uint64_t *)&v252);
    swift_bridgeObjectRelease_n(v42, 3);
    *(_WORD *)(v56 + 22) = 2082;
    v160 = v210;
    v161 = (char *)SymbolButton.Configuration.description.getter();
    *(_QWORD *)(v56 + 24) = sub_100249A1C(v161, v162, (uint64_t *)&v252);
    swift_bridgeObjectRelease();
    sub_100006798(v160, type metadata accessor for SymbolButton.Configuration);
    _os_log_impl((void *)&_mh_execute_header, v54, (os_log_type_t)v225, "[%{public}s] UpdateID=%{public}s — Animating to new configuration=%{public}s", (uint8_t *)v56, 0x20u);
    v163 = (uint64_t)v224;
    swift_arrayDestroy(v224, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v163, -1, -1);
    swift_slowDealloc(v56, -1, -1);

    v53 = v60;
  }
  else
  {

    swift_bridgeObjectRelease_n(v42, 2);
    sub_100006798(v51, type metadata accessor for SymbolButton.Configuration);

  }
  v164 = *(_QWORD *)&v53[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_pendingAnimatedChangesCount];
  v165 = v164 + 1;
  v166 = v211;
  v167 = (uint64_t)v204;
  if (__OFADD__(v164, 1))
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)&v53[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_pendingAnimatedChangesCount] = v165;
    if (v165 != v164)
      sub_10035A00C();
    v168 = swift_allocObject(&unk_100465FB8, 24, 7);
    v222 = v168;
    *(_QWORD *)(v168 + 16) = _swiftEmptyArrayStorage;
    v169 = v168 + 16;
    v225 = (char *)objc_opt_self(UIView);
    v223 = (int *)v53;
    sub_100082248((uint64_t)v29, v167, type metadata accessor for SymbolButton.Configuration);
    sub_100082248(v41, v166, type metadata accessor for SymbolButton.Configuration);
    v170 = *(unsigned __int8 *)(v209 + 80);
    v171 = v167;
    v172 = (v170 + 16) & ~v170;
    v220 = (char *)(v15 + v170);
    v221 = v170 | 7;
    v224 = (char *)v29;
    v173 = (v172 + v15 + v170) & ~v170;
    v219 = (char *)(v15 + 7);
    v174 = (v173 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
    v175 = (v174 + 15) & 0xFFFFFFFFFFFFFFF8;
    v176 = swift_allocObject(&unk_100465FE0, v175 + 8, v170 | 7);
    sub_1000648AC(v171, v176 + v172, type metadata accessor for SymbolButton.Configuration);
    sub_1000648AC(v166, v176 + v173, type metadata accessor for SymbolButton.Configuration);
    v177 = v223;
    *(_QWORD *)(v176 + v174) = v223;
    *(_QWORD *)(v176 + v175) = v169;
    v178 = swift_allocObject(&unk_100466008, 32, 7);
    *(_QWORD *)(v178 + 16) = sub_1003604C0;
    *(_QWORD *)(v178 + 24) = v176;
    v254 = sub_1000B0290;
    v255 = (_QWORD *)v178;
    *(_QWORD *)&v252 = _NSConcreteStackBlock;
    *((_QWORD *)&v252 + 1) = 1107296256;
    *(_QWORD *)&v253 = sub_100009BD0;
    *((_QWORD *)&v253 + 1) = &unk_100466020;
    v179 = _Block_copy(&v252);
    v180 = v255;
    v181 = v177;
    swift_retain(v178);
    *(_QWORD *)&v182 = swift_release(v180).n128_u64[0];
    objc_msgSend(v225, "performWithoutAnimation:", v179, v182);
    _Block_release(v179);
    LOBYTE(v179) = swift_isEscapingClosureAtFileLocation(v178, "", 121, 336, 40, 1, v183);
    swift_release(v178);
    if ((v179 & 1) == 0)
    {
      v184 = v206;
      v185 = (uint64_t)v204;
      sub_100082248((uint64_t)v226, (uint64_t)v204, type metadata accessor for SymbolButton.Configuration);
      v186 = v211;
      sub_100082248((uint64_t)v224, v211, type metadata accessor for SymbolButton.Configuration);
      v187 = (v170 + 24) & ~v170;
      v188 = (unint64_t)&v220[v187] & ~v170;
      v189 = (unint64_t)&v219[v188] & 0xFFFFFFFFFFFFFFF8;
      v190 = (v189 + 15) & 0xFFFFFFFFFFFFFFF8;
      v191 = swift_allocObject(&unk_100466058, v190 + 8, v221);
      *(_QWORD *)(v191 + 16) = v181;
      sub_1000648AC(v185, v191 + v187, type metadata accessor for SymbolButton.Configuration);
      sub_1000648AC(v186, v191 + v188, type metadata accessor for SymbolButton.Configuration);
      v192 = v222;
      *(_QWORD *)(v191 + v189) = v222;
      v193 = v228;
      *(_QWORD *)(v191 + v190) = v228;
      v254 = sub_10036083C;
      v255 = (_QWORD *)v191;
      *(_QWORD *)&v252 = _NSConcreteStackBlock;
      *((_QWORD *)&v252 + 1) = 1107296256;
      *(_QWORD *)&v253 = sub_1000BED80;
      *((_QWORD *)&v253 + 1) = &unk_100466070;
      v194 = _Block_copy(&v252);
      v195 = v255;
      v196 = v181;
      swift_retain(v192);
      swift_bridgeObjectRetain();
      swift_release(v195);
      v197 = (_QWORD *)swift_allocObject(&unk_1004660A8, 64, 7);
      v197[2] = v192;
      v197[3] = v196;
      v198 = v205;
      v197[4] = v193;
      v197[5] = v198;
      v199 = ObjectType;
      v197[6] = v227;
      v197[7] = v199;
      v254 = sub_1003608D8;
      v255 = v197;
      *(_QWORD *)&v252 = _NSConcreteStackBlock;
      *((_QWORD *)&v252 + 1) = 1107296256;
      *(_QWORD *)&v253 = sub_100204BB4;
      *((_QWORD *)&v253 + 1) = &unk_1004660C0;
      v200 = _Block_copy(&v252);
      v201 = v255;
      v202 = v196;
      swift_retain(v192);
      swift_bridgeObjectRetain();
      swift_release(v201);
      objc_msgSend(v225, "animateKeyframesWithDuration:delay:options:animations:completion:", v208, v194, v200, v49, v184);
      _Block_release(v200);
      _Block_release(v194);
      sub_100006798((uint64_t)v224, type metadata accessor for SymbolButton.Configuration);
      swift_release(v192);
      swift_release(v176);
      return;
    }
  }
  __break(1u);
}

id sub_100352C2C()
{
  uint64_t v0;
  uint64_t v1;
  NSString v2;
  void *v3;
  id v4;
  id v5;
  NSString v6;

  v1 = *(_QWORD *)(v0 + 8);
  if (!v1)
    return 0;
  swift_bridgeObjectRetain();
  v2 = String._bridgeToObjectiveC()();
  v3 = (void *)objc_opt_self(UIImage);
  v4 = objc_msgSend(v3, "_systemImageNamed:", v2);

  if (v4)
  {
    swift_bridgeObjectRelease(v1);
  }
  else
  {
    v5 = *(id *)(v0 + 16);
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v1);
    v4 = objc_msgSend(v3, "imageNamed:inBundle:", v6, v5);

  }
  return v4;
}

BOOL static SymbolButton.CustomView.hasSignificantChanges(from:to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  BOOL v4;
  _BOOL4 v5;
  _QWORD v7[7];
  _QWORD v8[7];

  sub_1000149A8(a2, (uint64_t)v8, &qword_1004A10C8);
  v3 = v8[0];
  sub_1000149A8(a1, (uint64_t)v7, &qword_1004A10C8);
  if (v7[0])
    v4 = v3 == 0;
  else
    v4 = 1;
  if (v4)
    v5 = (v7[0] | v3) == 0;
  else
    v5 = v7[0] == v3;
  return !v5;
}

void sub_100352D9C(uint64_t *a1, uint64_t a2, char *a3, char **a4)
{
  uint64_t v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  id v22;
  objc_class *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  char **v36;
  char *v37;
  id v38;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  void *v57;
  id v58;
  id v59;
  void *v60;
  id v61;
  id v62;
  BOOL v63;
  char **v64;
  char *v65;
  char v66;
  unint64_t v67;
  unint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  void *v76;
  id v77;
  uint64_t v78;
  void *v79;
  id v80;
  id v81;
  char *v82;
  char **v83;
  char *v84;
  char v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  void *v94;
  id *v95;
  void *v96;
  id v97;
  void *v98;
  void *v99;
  uint64_t v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  objc_class *v104;
  id v105;
  id v106;
  id v107;
  char *v108;
  id v109;
  char *v110;
  objc_class *v111;
  objc_class *v112;
  int *v113;
  char v114;
  void *v115;
  objc_class *v116;
  char *v117;
  uint64_t v118;
  _BOOL4 v119;
  id v120;
  uint64_t v121;
  _BOOL8 v122;
  char **v123;
  char *v124;
  id v125;
  id v126;
  char v127;
  unint64_t v128;
  unint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  id v133;
  objc_class *v134;
  __int128 v135;
  int *v136;
  char **v137;
  objc_super v138;
  __int128 v139;
  uint64_t v140;
  __int128 v141;
  __int128 v142;
  uint64_t v143;
  char v144;
  __int128 v145;
  uint64_t v146;
  __int128 v147;
  __int128 v148;
  uint64_t v149;
  char v150;
  _OWORD v151[3];
  __int128 v152;
  char v153;
  _OWORD v154[4];
  __int128 v155;
  __int128 v156;
  __int128 v157;
  uint64_t v158;
  uint64_t v159;
  __int128 v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  __int128 v164;
  __int128 v165;
  uint64_t v166;
  __int128 v167;
  __int128 v168;
  _OWORD v169[2];
  uint64_t v170;
  uint64_t v171;
  __int128 v172;
  __int128 v173;
  uint64_t v174;
  __int128 v175;
  __int128 v176;

  v137 = a4;
  v136 = (int *)type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  v8 = (char *)&v131 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *((_OWORD *)a1 + 4);
  v164 = *((_OWORD *)a1 + 3);
  v165 = v9;
  v167 = *(_OWORD *)(a1 + 11);
  v168 = *(_OWORD *)(a1 + 13);
  v10 = *(_OWORD *)(a2 + 48);
  v11 = *(_OWORD *)(a2 + 80);
  v155 = *(_OWORD *)(a2 + 64);
  v156 = v11;
  v157 = *(_OWORD *)(a2 + 96);
  v12 = *(_OWORD *)(a2 + 16);
  v154[0] = *(_OWORD *)a2;
  v154[1] = v12;
  v13 = *(_OWORD *)(a2 + 48);
  v154[2] = *(_OWORD *)(a2 + 32);
  v154[3] = v13;
  v14 = *a1;
  v15 = a1[3];
  v16 = a1[4];
  v17 = *((unsigned __int8 *)a1 + 40);
  v18 = *((unsigned __int8 *)a1 + 80);
  v169[0] = v154[0];
  v169[1] = v12;
  v135 = *(_OWORD *)(a1 + 1);
  v160 = v135;
  v159 = v14;
  v161 = v15;
  v162 = v16;
  v163 = v17;
  v166 = v18;
  v158 = *(_QWORD *)(a2 + 112);
  v19 = *(unsigned __int8 *)(a2 + 40);
  v20 = *(unsigned __int8 *)(a2 + 80);
  v170 = *(_QWORD *)(a2 + 32);
  v171 = v19;
  v172 = v10;
  v173 = v155;
  v174 = v20;
  v21 = *(_OWORD *)(a2 + 104);
  v175 = *(_OWORD *)(a2 + 88);
  v176 = v21;
  if ((_s11MusicCoreUI12SymbolButtonC0D0V21hasSignificantChanges4from2toSbAESg_AItFZ_0((uint64_t)&v159, (uint64_t)v169) & 1) != 0)
  {
    v22 = sub_100358560();
    v23 = (objc_class *)type metadata accessor for SymbolButton.ImageView();
    v24 = objc_allocWithZone(v23);
    sub_100364A60((uint64_t)v154);
    v138.receiver = v24;
    v138.super_class = v23;
    v25 = objc_msgSendSuper2(&v138, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v25, "setAdjustsImageSizeForAccessibilityContentSizeCategory:", 0);
    objc_msgSend(v25, "setContentMode:", 4);
    sub_10035B878((uint64_t)v154);
    sub_100364ABC((uint64_t)v154);
    v26 = v25;
    v27 = objc_msgSend(v22, "preferredSymbolConfiguration");
    objc_msgSend(v26, "setPreferredSymbolConfiguration:", v27);

    v28 = v26;
    objc_msgSend(v22, "frame");
    objc_msgSend(v28, "setFrame:");

    v29 = *(void **)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___imageView];
    *(_QWORD *)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___imageView] = v28;

    v30 = sub_100358560();
    objc_msgSend(v30, "setAlpha:", 0.0);

    v31 = sub_100358560();
    v32 = *(void **)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_backgroundView];
    if ((objc_msgSend(v31, "isDescendantOfView:", v32) & 1) == 0)
      objc_msgSend(v32, "addSubview:", v31);

    sub_100082248(a2, (uint64_t)v8, type metadata accessor for SymbolButton.Configuration);
    if ((_QWORD)v135)
    {
      sub_100006798((uint64_t)v8, type metadata accessor for SymbolButton.Configuration);
    }
    else
    {
      v33 = *((_QWORD *)v8 + 1);
      sub_100006798((uint64_t)v8, type metadata accessor for SymbolButton.Configuration);
      if (v33)
      {
        objc_msgSend(a3, "setNeedsLayout");
        objc_msgSend(a3, "layoutIfNeeded");
      }
    }
    v34 = sub_100358560();
    v35 = *(_QWORD *)(a2 + 104);
    v36 = v137;
    v37 = *v137;
    v38 = v22;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v37);
    *v36 = v37;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v37 = sub_100258CF4(0, *((_QWORD *)v37 + 2) + 1, 1, v37);
      *v137 = v37;
    }
    v41 = *((_QWORD *)v37 + 2);
    v40 = *((_QWORD *)v37 + 3);
    if (v41 >= v40 >> 1)
      v37 = sub_100258CF4((char *)(v40 > 1), v41 + 1, 1, v37);
    *((_QWORD *)v37 + 2) = v41 + 1;
    v42 = &v37[88 * v41];
    *((_QWORD *)v42 + 4) = v34;
    *((_QWORD *)v42 + 5) = v35;
    *((_QWORD *)v42 + 6) = 0;
    *((_QWORD *)v42 + 7) = 0;
    *((_QWORD *)v42 + 8) = 0;
    *((_QWORD *)v42 + 9) = v38;
    *((_OWORD *)v42 + 5) = xmmword_100384A50;
    *((_QWORD *)v42 + 12) = 0;
    *((_QWORD *)v42 + 13) = 0;
    v42[112] = 0;
    *v137 = v37;

  }
  v43 = a1[17];
  v44 = a1[22];
  v45 = *((_BYTE *)a1 + 184);
  v139 = *(_OWORD *)(a1 + 15);
  v140 = v43;
  v46 = *((_OWORD *)a1 + 10);
  v141 = *((_OWORD *)a1 + 9);
  v142 = v46;
  v143 = v44;
  v144 = v45;
  v47 = *(_OWORD *)(a2 + 136);
  v48 = *(_OWORD *)(a2 + 168);
  v151[2] = *(_OWORD *)(a2 + 152);
  v152 = v48;
  v153 = *(_BYTE *)(a2 + 184);
  v151[0] = *(_OWORD *)(a2 + 120);
  v151[1] = v47;
  v49 = *(_QWORD *)(a2 + 136);
  v50 = *(_QWORD *)(a2 + 176);
  v51 = *(_BYTE *)(a2 + 184);
  v145 = *(_OWORD *)(a2 + 120);
  v146 = v49;
  v147 = *(_OWORD *)(a2 + 144);
  v148 = *(_OWORD *)(a2 + 160);
  v149 = v50;
  v150 = v51;
  if ((sub_10035FBA0((uint64_t)&v139, (uint64_t)&v145) & 1) != 0)
  {
    v52 = sub_1003586C4();
    v53 = objc_allocWithZone((Class)type metadata accessor for SymbolButton.Label());
    sub_1003649C8((uint64_t)v151);
    v54 = sub_10035BA58((uint64_t)v151);
    v55 = objc_msgSend(v52, "font");
    objc_msgSend(v54, "setFont:", v55);

    v56 = v54;
    objc_msgSend(v52, "frame");
    objc_msgSend(v56, "setFrame:");

    v57 = *(void **)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___titleLabel];
    *(_QWORD *)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___titleLabel] = v56;

    v58 = sub_1003586C4();
    objc_msgSend(v58, "setAlpha:", 0.0);

    v59 = sub_1003586C4();
    v60 = *(void **)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_backgroundView];
    if ((objc_msgSend(v59, "isDescendantOfView:", v60) & 1) == 0)
      objc_msgSend(v60, "addSubview:", v59);

    *(_QWORD *)&v135 = v152;
    v61 = sub_1003586C4();
    v62 = v52;
    v63 = sub_100360A44((uint64_t)&v139, (uint64_t)&v145);
    v64 = v137;
    v65 = *v137;
    v66 = swift_isUniquelyReferenced_nonNull_native(*v137);
    *v64 = v65;
    if ((v66 & 1) == 0)
    {
      v65 = sub_100258CF4(0, *((_QWORD *)v65 + 2) + 1, 1, v65);
      *v137 = v65;
    }
    v68 = *((_QWORD *)v65 + 2);
    v67 = *((_QWORD *)v65 + 3);
    if (v68 >= v67 >> 1)
      v65 = sub_100258CF4((char *)(v67 > 1), v68 + 1, 1, v65);
    *((_QWORD *)v65 + 2) = v68 + 1;
    v69 = &v65[88 * v68];
    v70 = v135;
    *((_QWORD *)v69 + 4) = v61;
    *((_QWORD *)v69 + 5) = v70;
    *((_QWORD *)v69 + 6) = 0;
    *((_QWORD *)v69 + 7) = 0;
    *((_QWORD *)v69 + 8) = 0;
    *((_QWORD *)v69 + 9) = v62;
    *((_OWORD *)v69 + 5) = xmmword_100384A50;
    *((_QWORD *)v69 + 12) = 0;
    *((_QWORD *)v69 + 13) = 0;
    v69[112] = v63;
    *v137 = v65;

  }
  v71 = v136[10];
  v72 = *(void **)((char *)a1 + v71);
  v73 = a2 + v71;
  v74 = *(void **)v73;
  v75 = *(_QWORD *)(v73 + 40);
  if (v72)
  {
    if (v74 && v72 == v74)
      goto LABEL_40;
    if (!v74)
    {
      v76 = 0;
      goto LABEL_28;
    }
  }
  else if (!v74)
  {
    goto LABEL_40;
  }
  v77 = v74;
  v76 = v74;
LABEL_28:
  sub_10035F808(v76);

  v78 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_customView;
  v79 = *(void **)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_customView];
  if (v79)
    objc_msgSend(v79, "setAlpha:", 0.0);
  sub_1003587C0();
  objc_msgSend(*(id *)&a3[v78], "layoutIfNeeded");
  if (!v74)
  {
    v75 = 0;
    if (v72)
      goto LABEL_32;
LABEL_34:
    *(_QWORD *)&v135 = 0;
    goto LABEL_35;
  }
  v80 = v74;
  if (!v72)
    goto LABEL_34;
LABEL_32:
  v81 = v72;
  *(_QWORD *)&v135 = 1;
LABEL_35:
  v82 = a3;
  v83 = v137;
  v84 = *v137;
  v85 = swift_isUniquelyReferenced_nonNull_native(*v137);
  *v83 = v84;
  v86 = v75;
  if ((v85 & 1) == 0)
  {
    v84 = sub_100258CF4(0, *((_QWORD *)v84 + 2) + 1, 1, v84);
    *v137 = v84;
  }
  v88 = *((_QWORD *)v84 + 2);
  v87 = *((_QWORD *)v84 + 3);
  if (v88 >= v87 >> 1)
    v84 = sub_100258CF4((char *)(v87 > 1), v88 + 1, 1, v84);
  *((_QWORD *)v84 + 2) = v88 + 1;
  v89 = &v84[88 * v88];
  *((_QWORD *)v89 + 4) = v74;
  *((_QWORD *)v89 + 5) = v86;
  *((_QWORD *)v89 + 6) = 0;
  *((_QWORD *)v89 + 7) = 0;
  *((_QWORD *)v89 + 8) = 0;
  *((_QWORD *)v89 + 9) = v72;
  v90 = v135;
  *((_QWORD *)v89 + 10) = 0;
  *((_QWORD *)v89 + 11) = v90;
  *((_QWORD *)v89 + 12) = 0;
  *((_QWORD *)v89 + 13) = 0;
  v89[112] = 0;
  *v137 = v84;
  a3 = v82;
LABEL_40:
  v91 = v136[11];
  v92 = *(uint64_t *)((char *)a1 + v91 + 16);
  v93 = (uint64_t *)(a2 + v91);
  v94 = (void *)v93[2];
  if (v92 != 1)
  {
    if (v94 != (void *)1)
      return;
    v95 = (id *)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView];
    v96 = *(void **)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView];
    *(_QWORD *)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView] = 0;
    v97 = v96;
    if (v96)
    {
      v98 = v97;
      objc_msgSend(v97, "removeFromSuperview");
      if (*v95)
      {
        v99 = *(void **)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_containerView];
        v100 = *(_QWORD *)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_materialView];
        v101 = *v95;
        objc_msgSend(v99, "insertSubview:aboveSubview:", v101, v100);
        sub_100358978();

      }
      v102 = 0;
    }
    else
    {
      v102 = 0;
    }
    goto LABEL_63;
  }
  if (v94 == (void *)1)
    return;
  v103 = *v93;
  v102 = v93[1];
  v95 = (id *)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView];
  v96 = *(void **)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView];
  v104 = (objc_class *)type metadata accessor for SymbolButton.BadgeView();
  v105 = objc_allocWithZone(v104);
  sub_1003609EC(v103, v102, v94);
  v134 = v104;
  if (v96)
  {
    v106 = v96;
    sub_1003609EC(v103, v102, v94);
  }
  else
  {
    v107 = v94;
  }
  v108 = sub_10035BD60(v94, *(double *)&v103, *(double *)&v102);
  v109 = *v95;
  *v95 = v108;
  v110 = v108;
  *(_QWORD *)&v135 = v103;
  v136 = (int *)v110;
  if (v108)
  {
    if (!v109)
      goto LABEL_57;
    v111 = (objc_class *)v109;
    v132 = 1;
    v112 = v111;
    v113 = v136;
    v114 = static NSObject.== infix(_:_:)(v113, v112);
    v134 = v112;

    v92 = v132;
    if ((v114 & 1) != 0)
    {
      v109 = v134;
LABEL_59:

      goto LABEL_60;
    }
LABEL_56:
    objc_msgSend(v109, "removeFromSuperview");
    v108 = (char *)*v95;
    if (!*v95)
    {
LABEL_58:
      v113 = v136;
      goto LABEL_59;
    }
LABEL_57:
    v115 = *(void **)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_containerView];
    v116 = *(objc_class **)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_materialView];
    v133 = v109;
    v134 = v116;
    v117 = v108;
    objc_msgSend(v115, "insertSubview:aboveSubview:", v117, v134);
    sub_100358978();

    v109 = v133;
    goto LABEL_58;
  }
  if (v109)
    goto LABEL_56;
LABEL_60:
  v118 = v135;

  if (*v95)
    objc_msgSend(*v95, "setAlpha:", 0.0);
  sub_100358978();
  sub_10024DEB0(v118, v102, v94);
LABEL_63:
  v119 = v92 != 1;
  v120 = *v95;
  if (*v95)
    v121 = v102;
  else
    v121 = 0;
  if (*v95)
    v122 = v119;
  else
    v122 = 0;
  v123 = v137;
  v124 = *v137;
  v125 = v120;
  v126 = v96;
  v127 = swift_isUniquelyReferenced_nonNull_native(v124);
  *v123 = v124;
  if ((v127 & 1) == 0)
  {
    v124 = sub_100258CF4(0, *((_QWORD *)v124 + 2) + 1, 1, v124);
    *v137 = v124;
  }
  v129 = *((_QWORD *)v124 + 2);
  v128 = *((_QWORD *)v124 + 3);
  if (v129 >= v128 >> 1)
    v124 = sub_100258CF4((char *)(v128 > 1), v129 + 1, 1, v124);
  *((_QWORD *)v124 + 2) = v129 + 1;
  v130 = &v124[88 * v129];
  *((_QWORD *)v130 + 4) = v120;
  *((_QWORD *)v130 + 5) = v121;
  *((_QWORD *)v130 + 6) = v122;
  *((_QWORD *)v130 + 7) = 0;
  *((_QWORD *)v130 + 8) = 0;
  *((_QWORD *)v130 + 9) = v96;
  *((_QWORD *)v130 + 10) = 0;
  *((_QWORD *)v130 + 11) = v96 != 0;
  *((_QWORD *)v130 + 12) = 0;
  *((_QWORD *)v130 + 13) = 0;
  v130[112] = 0;
  *v137 = v124;

}

uint64_t sub_100353844(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  _QWORD *v20;
  id v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  void *v32;
  _QWORD *v33;
  id v34;
  uint64_t *v36;
  uint64_t result;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  double v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  const void *v57;
  double v58;
  double v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  void *v65;
  const void *v66;
  _QWORD *v67;
  id v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  char v89[24];
  void **aBlock;
  uint64_t v91;
  uint64_t (*v92)(uint64_t);
  void *v93;
  void *v94;
  _QWORD *v95;
  _BYTE v96[7];
  char v97;
  _BYTE v98[7];
  char v99;

  v88 = a5;
  v9 = *(_QWORD *)(type metadata accessor for SymbolButton.Configuration(0) - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin();
  v11 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v13 = (char *)&v74 - v12;
  v81 = (id)objc_opt_self(UIView);
  sub_100082248(a2, (uint64_t)v13, type metadata accessor for SymbolButton.Configuration);
  sub_100082248(a3, (uint64_t)v11, type metadata accessor for SymbolButton.Configuration);
  v14 = *(unsigned __int8 *)(v9 + 80);
  v15 = (v14 + 24) & ~v14;
  v16 = (v10 + v14 + v15) & ~v14;
  v17 = (v10 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = swift_allocObject(&unk_100466A98, v17 + 8, v14 | 7);
  *(_QWORD *)(v18 + 16) = a1;
  sub_1000648AC((uint64_t)v13, v18 + v15, type metadata accessor for SymbolButton.Configuration);
  sub_1000648AC((uint64_t)v11, v18 + v16, type metadata accessor for SymbolButton.Configuration);
  *(_QWORD *)(v18 + v17) = a4;
  v94 = sub_100364E68;
  v95 = (_QWORD *)v18;
  aBlock = _NSConcreteStackBlock;
  v91 = 1107296256;
  v92 = sub_1000BED80;
  v93 = &unk_100466AB0;
  v19 = _Block_copy(&aBlock);
  v20 = v95;
  v21 = a1;
  v87 = a4;
  swift_retain(a4);
  swift_release(v20);
  objc_msgSend(v81, "addKeyframeWithRelativeStartTime:relativeDuration:animations:", v19, 0.0, 1.0);
  _Block_release(v19);
  v22 = *(_QWORD *)(v88 + 16);
  if (v22)
  {
    v23 = (uint64_t *)(v88 + 72);
    swift_bridgeObjectRetain();
    v24 = 1;
    while (1)
    {
      v25 = *(v23 - 5);
      if (v25)
      {
        v26 = *(v23 - 4);
        v27 = *((double *)v23 - 3);
        v28 = *((double *)v23 - 2);
        v29 = *(v23 - 1);
        v30 = *v23;
        v31 = (_QWORD *)swift_allocObject(&unk_100466B88, 40, 7);
        v31[2] = v25;
        v31[3] = v26;
        v31[4] = v21;
        v94 = sub_1001F6758;
        v95 = v31;
        aBlock = _NSConcreteStackBlock;
        v91 = 1107296256;
        v92 = sub_1000BED80;
        v93 = &unk_100466BA0;
        v32 = _Block_copy(&aBlock);
        v33 = v95;
        sub_10003A434(v25, v26);
        sub_10003A434(v25, v26);
        v34 = v21;
        sub_10003A434(v25, v26);
        sub_10003A434(v29, v30);
        swift_release(v33);
        objc_msgSend(v81, "addKeyframeWithRelativeStartTime:relativeDuration:animations:", v32, v27, v28);
        _Block_release(v32);
        sub_10003A5C8(v25, v26);
        sub_10003A5C8(v25, v26);
        sub_10003A5C8(v29, v30);
      }
      if (v22 == v24)
        break;
      v23 += 6;
      if (__OFADD__(v24++, 1))
      {
        __break(1u);
        break;
      }
    }
    swift_bridgeObjectRelease();
  }
  v36 = (uint64_t *)(v87 + 16);
  swift_beginAccess(v87 + 16, v89, 0, 0);
  result = *v36;
  v76 = *(_QWORD *)(*v36 + 16);
  if (!v76)
    return result;
  v38 = result + 56;
  v75 = result;
  swift_bridgeObjectRetain_n(result, 2);
  v39 = 1;
  do
  {
    v41 = *(void **)(v38 - 24);
    v40 = *(_QWORD *)(v38 - 16);
    v42 = *(_QWORD *)(v38 - 8);
    v43 = *(_QWORD *)v38;
    v44 = *(_QWORD *)(v38 + 8);
    v45 = *(void **)(v38 + 16);
    v46 = *(_QWORD *)(v38 + 24);
    v47 = *(_QWORD *)(v38 + 32);
    v49 = *(_QWORD *)(v38 + 40);
    v48 = *(_QWORD *)(v38 + 48);
    v50 = *(unsigned __int8 *)(v38 + 56);
    if ((v42 & 1) != 0)
      v51 = 1.0;
    else
      v51 = *(double *)(v38 - 16);
    v88 = *(_QWORD *)(v38 + 32);
    v87 = v46;
    v86 = v45;
    v85 = v44;
    v84 = v40;
    v83 = v43;
    v82 = v39;
    LODWORD(v80) = v50;
    if (v45)
    {
      v99 = v47 & 1;
      if (v50)
        v52 = 1.0;
      else
        v52 = 0.5;
      v79 = v42;
      v53 = v40;
      v54 = swift_allocObject(&unk_100466B38, 56, 7);
      *(_QWORD *)(v54 + 16) = v45;
      *(_QWORD *)(v54 + 24) = v46;
      *(_BYTE *)(v54 + 32) = v99;
      *(_DWORD *)(v54 + 33) = *(_DWORD *)v98;
      *(_DWORD *)(v54 + 36) = *(_DWORD *)&v98[3];
      *(_QWORD *)(v54 + 40) = v49;
      *(_QWORD *)(v54 + 48) = v48;
      v94 = sub_100364F20;
      v95 = (_QWORD *)v54;
      aBlock = _NSConcreteStackBlock;
      v91 = 1107296256;
      v92 = sub_1000BED80;
      v93 = &unk_100466B50;
      v78 = _Block_copy(&aBlock);
      v77 = v95;
      v55 = v53;
      v42 = v79;
      sub_100364B18(v41, v55, v79, v43, v44);
      sub_100364B18(v45, v46, v47, v49, v48);
      sub_100364B18(v45, v46, v47, v49, v48);
      v56 = v45;
      sub_10003A434(v49, v48);
      swift_release(v77);
      v57 = v78;
      objc_msgSend(v81, "addKeyframeWithRelativeStartTime:relativeDuration:animations:", v78, 0.0, v52);
      _Block_release(v57);

      sub_10003A5C8(v49, v48);
      if (!v41)
      {
LABEL_28:
        sub_100364B4C(0, v84, v42, v83, v85);
        v69 = v86;
        v70 = v87;
        v71 = v88;
        v72 = v49;
        v73 = v48;
        goto LABEL_29;
      }
    }
    else
    {
      sub_100364B18(v41, v40, v42, v43, v44);
      sub_100364B18(0, v46, v47, v49, v48);
      if (!v41)
        goto LABEL_28;
    }
    v97 = v42 & 1;
    if ((_DWORD)v80)
      v58 = 1.0;
    else
      v58 = 0.5;
    if ((_DWORD)v80)
      v59 = 0.0;
    else
      v59 = 0.5;
    v60 = swift_allocObject(&unk_100466AE8, 64, 7);
    v61 = v84;
    *(_QWORD *)(v60 + 16) = v41;
    *(_QWORD *)(v60 + 24) = v61;
    *(_BYTE *)(v60 + 32) = v97;
    *(_DWORD *)(v60 + 33) = *(_DWORD *)v96;
    *(_DWORD *)(v60 + 36) = *(_DWORD *)&v96[3];
    v62 = v83;
    v63 = v41;
    v64 = v85;
    *(_QWORD *)(v60 + 40) = v83;
    *(_QWORD *)(v60 + 48) = v64;
    *(double *)(v60 + 56) = v51;
    v94 = sub_100364EC4;
    v95 = (_QWORD *)v60;
    aBlock = _NSConcreteStackBlock;
    v91 = 1107296256;
    v92 = sub_1000BED80;
    v93 = &unk_100466B00;
    v65 = _Block_copy(&aBlock);
    v80 = v48;
    v66 = v65;
    v67 = v95;
    sub_100364B18(v63, v61, v42, v62, v64);
    v68 = v63;
    sub_10003A434(v62, v64);
    swift_release(v67);
    objc_msgSend(v81, "addKeyframeWithRelativeStartTime:relativeDuration:animations:", v66, v59, v58);
    _Block_release(v66);

    sub_10003A5C8(v62, v64);
    sub_100364B4C(v63, v61, v42, v62, v64);
    v69 = v86;
    v70 = v87;
    v71 = v88;
    v72 = v49;
    v73 = v80;
LABEL_29:
    sub_100364B4C(v69, v70, v71, v72, v73);
    if (v76 == v82)
      return swift_bridgeObjectRelease_n(v75, 2);
    v38 += 88;
    v39 = v82 + 1;
  }
  while (!__OFADD__(v82, 1));
  __break(1u);
  return swift_bridgeObjectRelease_n(v75, 2);
}

uint64_t sub_100353F90(char *a1, uint64_t ObjCClassFromMetadata, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  id v12;
  void *v13;
  void *v14;
  uint64_t v15;
  double v16;
  void *v17;
  uint64_t v18;
  id v19;
  id v20;
  NSString v21;
  int *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  char *v34;
  id v35;
  uint64_t v36;
  NSString v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t *v50;
  void *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  void *v56;
  id v57;
  void *v58;
  char *v59;
  id v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  id v65;
  _QWORD *v66;
  id v67;
  id v68;
  id v69;
  id v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  id v76;
  int v77;
  unsigned __int8 *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t *v84;
  uint64_t result;
  uint64_t v86;
  uint64_t v87;
  uint64_t i;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  void (*v92)(double, double, double, double);
  char *v93;
  void *v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  id v99;
  uint64_t v100;
  uint64_t v101;
  id v102;
  double v103;
  double v104;
  double v105;
  double v106;
  double v107;
  double v108;
  double v109;
  double v110;
  void (*v111)(double, double, double, double);
  uint64_t v112;
  uint64_t v113;
  id v114;
  double v115;
  double v116;
  double v117;
  double v118;
  double v119;
  double v120;
  double v121;
  double v122;
  void *v123;
  _QWORD *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  id v130;
  char *v131;
  uint64_t v132;
  int *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  _OWORD v139[4];
  __int128 v140;
  __int128 v141;
  __int128 v142;
  uint64_t v143;
  _OWORD v144[2];
  uint64_t v145;
  uint64_t v146;
  __int128 v147;
  __int128 v148;
  uint64_t v149;
  __int128 v150;
  __int128 v151;
  _OWORD v152[2];
  uint64_t v153;
  uint64_t v154;
  __int128 v155;
  __int128 v156;
  uint64_t v157;
  __int128 v158;
  __int128 v159;
  _OWORD v160[4];
  char v161;
  __int128 v162;
  uint64_t v163;
  __int128 v164;
  __int128 v165;
  uint64_t v166;
  char v167;
  __int128 v168;
  uint64_t v169;
  __int128 v170;
  __int128 v171;
  uint64_t v172;
  char v173;
  _BYTE v174[48];
  _BYTE v175[16];
  uint64_t v176;
  unint64_t v177;

  v129 = a4;
  v131 = a1;
  sub_100005574(&qword_1004A1050);
  __chkstk_darwin();
  v132 = (uint64_t)&v127 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = (int *)type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  v9 = (char *)&v127 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SymbolButton.Metrics(0);
  __chkstk_darwin();
  v11 = (uint64_t *)((char *)&v127 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = objc_msgSend(a1, "traitCollection");
  sub_100359380(v11);
  sub_100006798((uint64_t)v11, type metadata accessor for SymbolButton.Metrics);
  sub_100082248(ObjCClassFromMetadata, (uint64_t)v9, type metadata accessor for SymbolButton.Configuration);
  sub_100358AC0((uint64_t)v9, v12, v11);
  v135 = (uint64_t)v11;
  sub_10035958C((uint64_t)v11);
  v13 = *(void **)&a1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_materialView];
  sub_1000149A8(ObjCClassFromMetadata + 224, (uint64_t)v174, &qword_1004A10D0);
  v130 = v13;
  sub_10035AF88((uint64_t)v174);
  v134 = *(char **)&a1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_backgroundView];
  v15 = *(_QWORD *)(ObjCClassFromMetadata + 192);
  v14 = *(void **)(ObjCClassFromMetadata + 200);
  if (v14 != (void *)1)
  {
    v16 = *(double *)(ObjCClassFromMetadata + 192);
    v18 = *(_QWORD *)(ObjCClassFromMetadata + 216);
    v17 = *(void **)(ObjCClassFromMetadata + 200);
    goto LABEL_5;
  }
  if (qword_100498CF8 == -1)
    goto LABEL_3;
  while (1)
  {
    swift_once(&qword_100498CF8, sub_100355D50);
LABEL_3:
    swift_beginAccess(&static SymbolButton.Background.clear, &v138, 0, 0);
    v16 = *(double *)&static SymbolButton.Background.clear;
    v17 = (void *)qword_1004A4078;
    v18 = qword_1004A4088;
    swift_bridgeObjectRetain();
    v19 = v17;
LABEL_5:
    sub_1003609B8(v15, v14);
    v20 = objc_msgSend(v134, "layer");
    if (v18)
      v21 = String._bridgeToObjectiveC()();
    else
      v21 = 0;
    v22 = v133;
    objc_msgSend(v20, "setCompositingFilter:", v21);
    swift_unknownObjectRelease(v21);

    v23 = v17;
    sub_10035B55C(v17, v16);

    swift_bridgeObjectRelease();
    v24 = *(_QWORD *)(a3 + 136);
    v25 = *(_QWORD *)(a3 + 176);
    v26 = *(_BYTE *)(a3 + 184);
    v162 = *(_OWORD *)(a3 + 120);
    v27 = *(_OWORD *)(a3 + 160);
    v164 = *(_OWORD *)(a3 + 144);
    v165 = v27;
    v163 = v24;
    v166 = v25;
    v167 = v26;
    v28 = *(_OWORD *)(ObjCClassFromMetadata + 136);
    v29 = *(_OWORD *)(ObjCClassFromMetadata + 168);
    v160[2] = *(_OWORD *)(ObjCClassFromMetadata + 152);
    v160[3] = v29;
    v161 = *(_BYTE *)(ObjCClassFromMetadata + 184);
    v160[0] = *(_OWORD *)(ObjCClassFromMetadata + 120);
    v160[1] = v28;
    v30 = *(_QWORD *)(ObjCClassFromMetadata + 136);
    v31 = *(_QWORD *)(ObjCClassFromMetadata + 176);
    v32 = *(_BYTE *)(ObjCClassFromMetadata + 184);
    v168 = *(_OWORD *)(ObjCClassFromMetadata + 120);
    v170 = *(_OWORD *)(ObjCClassFromMetadata + 144);
    v171 = *(_OWORD *)(ObjCClassFromMetadata + 160);
    v169 = v30;
    v172 = v31;
    v173 = v32;
    v33 = sub_10035FBA0((uint64_t)&v162, (uint64_t)&v168);
    v34 = v131;
    if ((v33 & 1) == 0)
    {
      v35 = sub_1003586C4();
      sub_1000149A8((uint64_t)v160, (uint64_t)v175, &qword_1004A10E0);
      sub_10035BBD8((uint64_t)v160);

      sub_1000149A8((uint64_t)v175, (uint64_t)&v176, &qword_1004A10E0);
      if (v177)
      {
        v36 = HIBYTE(v177) & 0xF;
        if ((v177 & 0x2000000000000000) == 0)
          v36 = v176 & 0xFFFFFFFFFFFFLL;
        if (v36)
        {
          v37 = String._bridgeToObjectiveC()();
          objc_msgSend(v34, "setAccessibilityLabel:", v37);

        }
      }
    }
    v38 = *(_OWORD *)(a3 + 16);
    v144[0] = *(_OWORD *)a3;
    v144[1] = v38;
    v39 = *(_OWORD *)(a3 + 64);
    v147 = *(_OWORD *)(a3 + 48);
    v148 = v39;
    v150 = *(_OWORD *)(a3 + 88);
    v151 = *(_OWORD *)(a3 + 104);
    v40 = *(_OWORD *)(ObjCClassFromMetadata + 48);
    v41 = *(_OWORD *)(ObjCClassFromMetadata + 80);
    v140 = *(_OWORD *)(ObjCClassFromMetadata + 64);
    v141 = v41;
    v142 = *(_OWORD *)(ObjCClassFromMetadata + 96);
    v42 = *(_OWORD *)(ObjCClassFromMetadata + 16);
    v139[0] = *(_OWORD *)ObjCClassFromMetadata;
    v139[1] = v42;
    v43 = *(_OWORD *)(ObjCClassFromMetadata + 48);
    v139[2] = *(_OWORD *)(ObjCClassFromMetadata + 32);
    v139[3] = v43;
    v152[0] = v139[0];
    v152[1] = v42;
    v44 = *(unsigned __int8 *)(a3 + 40);
    v45 = *(unsigned __int8 *)(a3 + 80);
    v145 = *(_QWORD *)(a3 + 32);
    v146 = v44;
    v149 = v45;
    v143 = *(_QWORD *)(ObjCClassFromMetadata + 112);
    v46 = *(unsigned __int8 *)(ObjCClassFromMetadata + 40);
    v47 = *(unsigned __int8 *)(ObjCClassFromMetadata + 80);
    v153 = *(_QWORD *)(ObjCClassFromMetadata + 32);
    v154 = v46;
    v155 = v40;
    v156 = v140;
    v157 = v47;
    v158 = *(_OWORD *)(ObjCClassFromMetadata + 88);
    v159 = *(_OWORD *)(ObjCClassFromMetadata + 104);
    if ((_s11MusicCoreUI12SymbolButtonC0D0V21hasSignificantChanges4from2toSbAESg_AItFZ_0((uint64_t)v144, (uint64_t)v152) & 1) == 0)
    {
      v48 = sub_100358560();
      sub_10035B878((uint64_t)v139);

    }
    v49 = v22[11];
    v50 = (uint64_t *)(ObjCClassFromMetadata + v49);
    v51 = *(void **)(ObjCClassFromMetadata + v49 + 16);
    if (v51 != (void *)1 && *(_QWORD *)(a3 + v49 + 16) != 1)
    {
      v52 = *(char **)&v34[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView];
      if (v52)
      {
        v54 = *v50;
        v53 = v50[1];
        if (v51)
        {
          v55 = v52;
          v56 = v51;
          v57 = v51;
        }
        else
        {
          v58 = (void *)objc_opt_self(UIColor);
          v59 = v52;
          sub_1003609EC(v54, v53, 0);
          v57 = objc_msgSend(v58, "tintColor");
          v56 = 0;
        }
        v60 = v56;
        objc_msgSend(v52, "setBackgroundColor:", v57);

        objc_msgSend(v52, "setAlpha:", *(double *)&v53);
        objc_msgSend(*(id *)&v52[OBJC_IVAR____TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A939BadgeView_punchOutView], "setAlpha:", *(double *)&v53);
        sub_10035C230();
        sub_10024DEB0(v54, v53, v51);

      }
    }
    v61 = objc_msgSend(v130, "contentView");
    v62 = *(_QWORD *)(ObjCClassFromMetadata + 272);
    v63 = *(_QWORD *)(ObjCClassFromMetadata + 280);
    v64 = *(void **)(ObjCClassFromMetadata + 288);
    v65 = v64;
    UIView.border.setter(v62, v63, v64);

    objc_msgSend(v34, "setAlpha:", *(double *)(ObjCClassFromMetadata + v22[17]));
    v66 = (_QWORD *)v135;
    sub_100359380((_QWORD *)v135);
    sub_10035A448((uint64_t)v66);
    sub_100006798((uint64_t)v66, type metadata accessor for SymbolButton.Metrics);
    v67 = objc_msgSend(v34, "superview");
    objc_msgSend(v67, "layoutIfNeeded");

    objc_msgSend(v34, "layoutIfNeeded");
    if (v34[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_isClippingInvalidated] != 1)
      break;
    v128 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_isClippingInvalidated;
    v68 = v130;
    objc_msgSend(v130, "_setAllowsGroupFiltering:", 1);
    v69 = objc_msgSend(v68, "contentView");
    v70 = objc_msgSend(v69, "subviews");

    v71 = sub_1000087DC(0, (unint64_t *)&qword_10049D970, UIView_ptr);
    v72 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v70, v71);

    v135 = v72;
    if (v72 >> 62)
    {
      if (v135 < 0)
        v83 = v135;
      else
        v83 = v135 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v73 = _CocoaArrayWrapper.endIndex.getter(v83);
      if (!v73)
      {
LABEL_44:
        swift_bridgeObjectRelease_n(v135, 2);
        v131[v128] = 0;
        break;
      }
    }
    else
    {
      v73 = *(_QWORD *)((v135 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v73)
        goto LABEL_44;
    }
    type metadata accessor for SymbolButton.Label();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v74 = v135 & 0xC000000000000001;
    v134 = &v131[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration];
    swift_beginAccess(&v131[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration], &v136, 0, 0);
    v15 = 4;
    v75 = 0;
    if (v74)
    {
LABEL_27:
      v76 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v75, v135);
      goto LABEL_29;
    }
    while (1)
    {
      v76 = *(id *)(v135 + 8 * v15);
LABEL_29:
      v14 = v76;
      a3 = v75 + 1;
      if (__OFADD__(v75, 1))
        break;
      if (!objc_msgSend(v76, "isKindOfClass:", ObjCClassFromMetadata))
      {
        v77 = v134[v22[19]];
        if (v77 == 2)
        {
          v78 = (unsigned __int8 *)&v134[v22[9]];
          v79 = v132;
          sub_100014A7C((uint64_t)v78, v132, &qword_1004A1050);
          v80 = type metadata accessor for UIView.Corner(0);
          v81 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 48))(v79, 1, v80) != 1;
          v82 = v79;
          v22 = v133;
          sub_100008758(v82, &qword_1004A1050);
        }
        else
        {
          v81 = v77 & 1;
        }
        objc_msgSend(v14, "setClipsToBounds:", v81);
      }

      if (a3 == v73)
        goto LABEL_44;
      v75 = ++v15 - 4;
      if (v74)
        goto LABEL_27;
    }
    __break(1u);
  }
  v84 = (uint64_t *)(v129 + 16);
  swift_beginAccess(v129 + 16, &v137, 0, 0);
  result = *v84;
  v86 = *(_QWORD *)(*v84 + 16);
  if (!v86)
    return result;
  v87 = v86 - 1;
  v128 = swift_bridgeObjectRetain();
  for (i = v128 + 56; ; i += 88)
  {
    v90 = *(void **)(i - 24);
    v89 = *(_QWORD *)(i - 16);
    v91 = *(_QWORD *)(i - 8);
    v92 = *(void (**)(double, double, double, double))i;
    v93 = *(char **)(i + 8);
    v94 = *(void **)(i + 16);
    v95 = *(_QWORD **)(i + 24);
    v96 = *(_QWORD *)(i + 32);
    v134 = v93;
    v135 = (uint64_t)v95;
    v97 = *(_QWORD *)(i + 40);
    v98 = *(_QWORD *)(i + 48);
    v132 = v91;
    v133 = (int *)v92;
    v131 = (char *)v89;
    if (v90)
    {
      if (v92)
      {
        sub_100364B18(v90, v89, v91, (uint64_t)v92, (uint64_t)v93);
        sub_100364B18(v94, v135, v96, v97, v98);
        v99 = objc_msgSend(v130, "contentView");
        v129 = v98;
        v100 = v96;
        v101 = v87;
        v102 = v99;
        objc_msgSend(v99, "bounds");
        v104 = v103;
        v106 = v105;
        v108 = v107;
        v110 = v109;

        v111 = (void (*)(double, double, double, double))v97;
        v92(v104, v106, v108, v110);
        v87 = v101;
        v96 = v100;
        v98 = v129;
        objc_msgSend(v90, "setFrame:");
        if (!v94)
          goto LABEL_55;
      }
      else
      {
        sub_100364B18(v90, v89, v91, 0, (uint64_t)v93);
        v111 = (void (*)(double, double, double, double))v97;
        sub_100364B18(v94, v135, v96, v97, v98);
        if (!v94)
        {
LABEL_55:
          sub_100364B4C(v90, (uint64_t)v131, v132, (uint64_t)v133, (uint64_t)v134);
          v123 = 0;
          v124 = (_QWORD *)v135;
          v125 = v96;
          v126 = (uint64_t)v111;
          goto LABEL_57;
        }
      }
    }
    else
    {
      sub_100364B18(0, v89, v91, (uint64_t)v92, (uint64_t)v93);
      sub_100364B18(v94, v135, v96, v97, v98);
      v111 = (void (*)(double, double, double, double))v97;
      if (!v94)
        goto LABEL_55;
    }
    if (v111)
    {
      v112 = v96;
      v113 = v87;
      v114 = objc_msgSend(v130, "contentView");
      objc_msgSend(v114, "bounds");
      v116 = v115;
      v118 = v117;
      v120 = v119;
      v122 = v121;

      v111(v116, v118, v120, v122);
      v87 = v113;
      objc_msgSend(v94, "setFrame:");
      sub_100364B4C(v90, (uint64_t)v131, v132, (uint64_t)v133, (uint64_t)v134);
      v123 = v94;
      v124 = (_QWORD *)v135;
      v125 = v112;
      v126 = (uint64_t)v111;
    }
    else
    {
      sub_100364B4C(v90, (uint64_t)v131, v132, (uint64_t)v133, (uint64_t)v134);
      v123 = v94;
      v124 = (_QWORD *)v135;
      v125 = v96;
      v126 = 0;
    }
LABEL_57:
    sub_100364B4C(v123, (uint64_t)v124, v125, v126, v98);
    if (!v87)
      break;
    --v87;
  }
  return swift_bridgeObjectRelease();
}

uint64_t *SymbolButton.Background.clear.unsafeMutableAddressor()
{
  if (qword_100498CF8 != -1)
    swift_once(&qword_100498CF8, sub_100355D50);
  return &static SymbolButton.Background.clear;
}

void sub_100354AA0(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, char *a5, char *a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  void (*v25)(char *);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;
  NSObject *v36;
  os_log_type_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  double v42;
  char *v43;
  char *v44;
  char *v45;
  id v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55[24];
  uint64_t v56;
  char v57[24];

  swift_beginAccess(a2 + 16, v57, 0, 0);
  v11 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 16);
  if (v11)
  {
    v48 = a4;
    v49 = a6;
    v12 = swift_bridgeObjectRetain();
    v13 = v11 - 1;
    v14 = (uint64_t *)(v12 + 56);
    v51 = a3;
    while (1)
    {
      v15 = (void *)v14[2];
      if (!v15)
        goto LABEL_4;
      v54 = v13;
      v16 = (void *)*(v14 - 3);
      v17 = *(v14 - 1);
      v18 = v14[1];
      v20 = v14[3];
      v19 = v14[4];
      v22 = v14[5];
      v21 = v14[6];
      v52 = *v14;
      v53 = *(v14 - 2);
      sub_100364B18(v16, v53, v17, *v14, v18);
      sub_100364B18(v15, v20, v19, v22, v21);
      if (!objc_msgSend(v15, "isDescendantOfView:", a3))
        break;
      objc_msgSend(v15, "removeFromSuperview");
      sub_100364B4C(v16, v53, v17, v52, v18);
      sub_100364B4C(v15, v20, v19, v22, v21);
      a3 = v51;
      v13 = v54;
      if (!v54)
      {
LABEL_9:
        swift_bridgeObjectRelease();
        a4 = v48;
        a6 = v49;
        goto LABEL_10;
      }
LABEL_5:
      v14 += 11;
      --v13;
    }
    sub_100364B4C(v16, v53, v17, v52, v18);
    sub_100364B4C(v15, v20, v19, v22, v21);
    a3 = v51;
    v13 = v54;
LABEL_4:
    if (!v13)
      goto LABEL_9;
    goto LABEL_5;
  }
LABEL_10:
  v23 = *(_QWORD *)(a4 + 16);
  if (v23)
  {
    swift_bridgeObjectRetain();
    v24 = (uint64_t *)(a4 + 72);
    do
    {
      v25 = (void (*)(char *))*(v24 - 1);
      if (v25)
      {
        v26 = *v24;
        v28 = *(v24 - 5);
        v27 = *(v24 - 4);
        sub_10003A434(v28, v27);
        sub_10003A434((uint64_t)v25, v26);
        v25(a3);
        sub_10003A5C8(v28, v27);
        sub_10003A5C8((uint64_t)v25, v26);
      }
      v24 += 6;
      --v23;
    }
    while (v23);
    swift_bridgeObjectRelease();
  }
  v29 = *(_QWORD *)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_pendingAnimatedChangesCount];
  v30 = v29 - 1;
  if (__OFSUB__(v29, 1))
  {
    __break(1u);
LABEL_28:
    swift_once(&qword_100498918, sub_10024C274);
    goto LABEL_20;
  }
  *(_QWORD *)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_pendingAnimatedChangesCount] = v30;
  if (v30 != v29)
    sub_10035A00C();
  if (qword_100498918 != -1)
    goto LABEL_28;
LABEL_20:
  v31 = type metadata accessor for Logger(0, v10);
  sub_1000086B4(v31, (uint64_t)qword_1004A31D8);
  v32 = a3;
  swift_bridgeObjectRetain_n(a6, 2);
  v33 = v32;
  v34 = a6;
  v35 = v33;
  v36 = Logger.logObject.getter(v33);
  v37 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v36, v37))
  {
    v38 = v34;
    v39 = swift_slowAlloc(22, -1);
    v40 = swift_slowAlloc(64, -1);
    v56 = v40;
    *(_DWORD *)v39 = 136446466;
    v41 = &v35[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_debugLabel];
    *(_QWORD *)&v42 = swift_beginAccess(&v35[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_debugLabel], v55, 0, 0).n128_u64[0];
    v43 = (char *)*((_QWORD *)v41 + 1);
    if (v43)
    {
      v44 = *(char **)v41;
      v45 = v43;
    }
    else
    {
      v46 = objc_msgSend(v35, "description", v42);
      v44 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v46);
      v45 = v47;

    }
    swift_bridgeObjectRetain();
    *(_QWORD *)(v39 + 4) = sub_100249A1C(v44, v45, &v56);
    swift_bridgeObjectRelease();

    *(_WORD *)(v39 + 12) = 2082;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v39 + 14) = sub_100249A1C(a5, v38, &v56);
    swift_bridgeObjectRelease_n(v38, 3);
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "[%{public}s] UpdateID=%{public}s — Updated ✅", (uint8_t *)v39, 0x16u);
    swift_arrayDestroy(v40, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v40, -1, -1);
    swift_slowDealloc(v39, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n(v34, 2);
  }

}

uint64_t SymbolButton.Configuration.symbol.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1003608E8(v1, a1);
}

uint64_t SymbolButton.Configuration.symbol.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_10036091C(a1, v1);
}

uint64_t SymbolButton.Configuration.title.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100360950(v1 + 120, a1);
}

uint64_t SymbolButton.Configuration.title.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_100360984(a1, v1 + 120);
}

uint64_t SymbolButton.Configuration.background.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 192);
  sub_1003609B8(v1, *(void **)(v0 + 200));
  return v1;
}

uint64_t SymbolButton.Configuration.background.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t result;

  result = sub_100246168(*(_QWORD *)(v4 + 192), *(void **)(v4 + 200), *(_QWORD *)(v4 + 208), *(_QWORD *)(v4 + 216));
  *(_QWORD *)(v4 + 192) = a1;
  *(_QWORD *)(v4 + 200) = a2;
  *(_QWORD *)(v4 + 208) = a3;
  *(_QWORD *)(v4 + 216) = a4;
  return result;
}

uint64_t SymbolButton.Configuration.material.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100014A7C(v1 + 224, a1, &qword_1004A10D0);
}

uint64_t SymbolButton.Configuration.material.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_100129EBC(a1, v1 + 224, &qword_1004A10D0);
}

uint64_t SymbolButton.Configuration.border.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;

  v1 = *(_QWORD *)(v0 + 272);
  v2 = *(id *)(v0 + 288);
  return v1;
}

void SymbolButton.Configuration.border.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 272) = a1;
  *(_QWORD *)(v3 + 280) = a2;
  *(_QWORD *)(v3 + 288) = a3;
}

uint64_t SymbolButton.Configuration.corner.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for SymbolButton.Configuration(0);
  return sub_100014A7C(v1 + *(int *)(v3 + 36), a1, &qword_1004A1050);
}

uint64_t SymbolButton.Configuration.corner.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for SymbolButton.Configuration(0);
  return sub_100129EBC(a1, v1 + *(int *)(v3 + 36), &qword_1004A1050);
}

CFRange (__swiftcall *SymbolButton.Configuration.corner.modify())(__C::_NSRange)
{
  type metadata accessor for SymbolButton.Configuration(0);
  return CFRange.init(_:);
}

uint64_t SymbolButton.Configuration.customView.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for SymbolButton.Configuration(0);
  return sub_100014A7C(v1 + *(int *)(v3 + 40), a1, &qword_1004A10C8);
}

uint64_t SymbolButton.Configuration.customView.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for SymbolButton.Configuration(0);
  return sub_100129EBC(a1, v1 + *(int *)(v3 + 40), &qword_1004A10C8);
}

CFRange (__swiftcall *SymbolButton.Configuration.customView.modify())(__C::_NSRange)
{
  type metadata accessor for SymbolButton.Configuration(0);
  return CFRange.init(_:);
}

uint64_t SymbolButton.Configuration.badge.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for SymbolButton.Configuration(0) + 44);
  v2 = *(_QWORD *)v1;
  sub_1003609EC(*(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(void **)(v1 + 16));
  return v2;
}

void SymbolButton.Configuration.badge.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = v3 + *(int *)(type metadata accessor for SymbolButton.Configuration(0) + 44);
  sub_10024DEB0(*(_QWORD *)v7, *(_QWORD *)(v7 + 8), *(void **)(v7 + 16));
  *(_QWORD *)v7 = a1;
  *(_QWORD *)(v7 + 8) = a2;
  *(_QWORD *)(v7 + 16) = a3;
}

CFRange (__swiftcall *SymbolButton.Configuration.badge.modify())(__C::_NSRange)
{
  type metadata accessor for SymbolButton.Configuration(0);
  return CFRange.init(_:);
}

double SymbolButton.Configuration.symbolToTextSpacing.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for SymbolButton.Configuration(0) + 48));
}

uint64_t SymbolButton.Configuration.symbolToTextSpacing.setter(double a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SymbolButton.Configuration(0);
  *(double *)(v1 + *(int *)(result + 48)) = a1;
  return result;
}

CFRange (__swiftcall *SymbolButton.Configuration.symbolToTextSpacing.modify())(__C::_NSRange)
{
  type metadata accessor for SymbolButton.Configuration(0);
  return CFRange.init(_:);
}

double SymbolButton.Configuration.minimumSize.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for SymbolButton.Configuration(0) + 52));
}

uint64_t SymbolButton.Configuration.minimumSize.setter(double a1, double a2)
{
  uint64_t v2;
  uint64_t result;
  double *v6;

  result = type metadata accessor for SymbolButton.Configuration(0);
  v6 = (double *)(v2 + *(int *)(result + 52));
  *v6 = a1;
  v6[1] = a2;
  return result;
}

CFRange (__swiftcall *SymbolButton.Configuration.minimumSize.modify())(__C::_NSRange)
{
  type metadata accessor for SymbolButton.Configuration(0);
  return CFRange.init(_:);
}

uint64_t SymbolButton.Configuration.maximumImageSize.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for SymbolButton.Configuration(0) + 56));
}

uint64_t SymbolButton.Configuration.maximumImageSize.setter(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v8;

  result = type metadata accessor for SymbolButton.Configuration(0);
  v8 = v3 + *(int *)(result + 56);
  *(_QWORD *)v8 = a1;
  *(_QWORD *)(v8 + 8) = a2;
  *(_BYTE *)(v8 + 16) = a3 & 1;
  return result;
}

CFRange (__swiftcall *SymbolButton.Configuration.maximumImageSize.modify())(__C::_NSRange)
{
  type metadata accessor for SymbolButton.Configuration(0);
  return CFRange.init(_:);
}

double SymbolButton.Configuration.contentInsets.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for SymbolButton.Configuration(0) + 60));
}

uint64_t SymbolButton.Configuration.contentInsets.setter(double a1, double a2, double a3, double a4)
{
  uint64_t v4;
  uint64_t result;
  double *v10;

  result = type metadata accessor for SymbolButton.Configuration(0);
  v10 = (double *)(v4 + *(int *)(result + 60));
  *v10 = a1;
  v10[1] = a2;
  v10[2] = a3;
  v10[3] = a4;
  return result;
}

CFRange (__swiftcall *SymbolButton.Configuration.contentInsets.modify())(__C::_NSRange)
{
  type metadata accessor for SymbolButton.Configuration(0);
  return CFRange.init(_:);
}

uint64_t SymbolButton.Configuration.Accessibility.init(automaticallyAdjustsForAccessibility:minimumContentSizeCategory:maximumContentSizeCategory:showsLargeContentViewer:)(char a1)
{
  return a1 & 1;
}

uint64_t SymbolButton.Configuration.accessibility.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;

  v1 = (unsigned __int8 *)(v0 + *(int *)(type metadata accessor for SymbolButton.Configuration(0) + 64));
  v2 = *v1;
  v3 = (void *)*((_QWORD *)v1 + 2);
  v4 = *((id *)v1 + 1);
  v5 = v3;
  return v2;
}

void SymbolButton.Configuration.accessibility.setter(char a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v9;

  v9 = v4 + *(int *)(type metadata accessor for SymbolButton.Configuration(0) + 64);

  *(_BYTE *)v9 = a1;
  *(_QWORD *)(v9 + 8) = a2;
  *(_QWORD *)(v9 + 16) = a3;
  *(_BYTE *)(v9 + 24) = a4;
}

CFRange (__swiftcall *SymbolButton.Configuration.accessibility.modify())(__C::_NSRange)
{
  type metadata accessor for SymbolButton.Configuration(0);
  return CFRange.init(_:);
}

void *SymbolButton.Configuration.Accessibility.minimumContentSizeCategory.getter(uint64_t a1, void *a2)
{
  id v3;

  v3 = a2;
  return a2;
}

UIPointerRegion_optional __swiftcall SymbolButton.pointerInteraction(_:regionFor:defaultRegion:)(UIPointerInteraction _, UIPointerRegionRequest regionFor, UIPointerRegion defaultRegion)
{
  objc_class *v4;
  Swift::Bool v5;
  objc_class *isa;
  UIPointerRegion_optional result;

  v4 = defaultRegion.super.isa;
  isa = defaultRegion.super.isa;
  result.value.super.isa = isa;
  result.is_nil = v5;
  return result;
}

uint64_t SymbolButton.Configuration.Accessibility.showsLargeContentViewer.getter(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return a4 & 1;
}

uint64_t SymbolButton.Material.color.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 24) = result;
  return result;
}

UIContentSizeCategory sub_1003555AC()
{
  NSString *v0;

  static SymbolButton.Configuration.Accessibility.forBarButtonItem = 1;
  qword_1004A4058 = (uint64_t)UIContentSizeCategoryLarge;
  unk_1004A4060 = UIContentSizeCategoryExtraLarge;
  byte_1004A4068 = 1;
  v0 = UIContentSizeCategoryLarge;
  return UIContentSizeCategoryExtraLarge;
}

char *SymbolButton.Configuration.Accessibility.forBarButtonItem.unsafeMutableAddressor()
{
  if (qword_100498CF0 != -1)
    swift_once(&qword_100498CF0, sub_1003555AC);
  return &static SymbolButton.Configuration.Accessibility.forBarButtonItem;
}

uint64_t static SymbolButton.Configuration.Accessibility.forBarButtonItem.getter()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;

  if (qword_100498CF0 != -1)
    swift_once(&qword_100498CF0, sub_1003555AC);
  v0 = static SymbolButton.Configuration.Accessibility.forBarButtonItem;
  v1 = (void *)unk_1004A4060;
  v2 = (id)qword_1004A4058;
  v3 = v1;
  return v0;
}

uint64_t sub_1003556B8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return _s11MusicCoreUI12SymbolButtonC13ConfigurationV13AccessibilityV23__derived_struct_equalsySbAG_AGtFZ_0(*a1, *((_QWORD *)a1 + 1), *((_QWORD *)a1 + 2), a1[24], *a2, *((_QWORD *)a2 + 1), *((_QWORD *)a2 + 2), a2[24]);
}

double SymbolButton.Configuration.alpha.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for SymbolButton.Configuration(0) + 68));
}

uint64_t SymbolButton.Configuration.alpha.setter(double a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SymbolButton.Configuration(0);
  *(double *)(v1 + *(int *)(result + 68)) = a1;
  return result;
}

CFRange (__swiftcall *SymbolButton.Configuration.alpha.modify())(__C::_NSRange)
{
  type metadata accessor for SymbolButton.Configuration(0);
  return CFRange.init(_:);
}

void *SymbolButton.Configuration.tint.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + *(int *)(type metadata accessor for SymbolButton.Configuration(0) + 72));
  v2 = v1;
  return v1;
}

void SymbolButton.Configuration.tint.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(type metadata accessor for SymbolButton.Configuration(0) + 72);

  *(_QWORD *)(v1 + v3) = a1;
}

CFRange (__swiftcall *SymbolButton.Configuration.tint.modify())(__C::_NSRange)
{
  type metadata accessor for SymbolButton.Configuration(0);
  return CFRange.init(_:);
}

uint64_t SymbolButton.Configuration.shouldClipToBounds.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for SymbolButton.Configuration(0) + 76));
}

uint64_t SymbolButton.Configuration.shouldClipToBounds.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SymbolButton.Configuration(0);
  *(_BYTE *)(v1 + *(int *)(result + 76)) = a1;
  return result;
}

CFRange (__swiftcall *SymbolButton.Configuration.shouldClipToBounds.modify())(__C::_NSRange)
{
  type metadata accessor for SymbolButton.Configuration(0);
  return CFRange.init(_:);
}

void SymbolButton.Configuration.init()(uint64_t a1@<X8>)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  NSString *v9;
  uint64_t v10;
  _OWORD *v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  void *v29;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = UIFontTextStyleSubheadline;
  *(_QWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 40) = 1;
  *(_OWORD *)(a1 + 48) = xmmword_1003952D0;
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  *(_BYTE *)(a1 + 80) = -1;
  *(_QWORD *)(a1 + 88) = 0;
  *(_QWORD *)(a1 + 96) = 0;
  *(_QWORD *)(a1 + 104) = 0x3FF0000000000000;
  *(_QWORD *)(a1 + 112) = 0;
  *(_QWORD *)(a1 + 120) = 0;
  *(_QWORD *)(a1 + 128) = 0;
  *(_QWORD *)(a1 + 136) = UIFontTextStyleSubheadline;
  *(UIFontWeight *)(a1 + 144) = UIFontWeightSemibold;
  *(_QWORD *)(a1 + 152) = 0;
  *(_QWORD *)(a1 + 160) = 0;
  *(_QWORD *)(a1 + 168) = 0x3FF0000000000000;
  *(_QWORD *)(a1 + 176) = 0;
  *(_BYTE *)(a1 + 184) = 0;
  *(_QWORD *)(a1 + 224) = 1;
  v2 = (int *)type metadata accessor for SymbolButton.Configuration(0);
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 248) = 0u;
  *(_OWORD *)(a1 + 264) = 0u;
  *(_OWORD *)(a1 + 280) = 0u;
  v3 = a1 + v2[9];
  v4 = type metadata accessor for UIView.Corner(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v5 = a1 + v2[10];
  *(_QWORD *)(v5 + 48) = 0;
  *(_OWORD *)(v5 + 16) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)v5 = 0u;
  v6 = (_QWORD *)(a1 + v2[11]);
  *v6 = 0;
  v6[1] = 0;
  v6[2] = 1;
  *(_QWORD *)(a1 + v2[12]) = 0x4010000000000000;
  v7 = v2[13];
  v8 = qword_100498D18;
  v9 = UIFontTextStyleSubheadline;
  if (v8 != -1)
    swift_once(&qword_100498D18, sub_10035C908);
  *(_OWORD *)(a1 + v7) = static SymbolButton.Configuration.platterMinimumSize;
  v10 = a1 + v2[14];
  *(_QWORD *)v10 = 0;
  *(_QWORD *)(v10 + 8) = 0;
  *(_BYTE *)(v10 + 16) = 1;
  v11 = (_OWORD *)(a1 + v2[15]);
  v12 = *(_OWORD *)&NSDirectionalEdgeInsetsZero.bottom;
  *v11 = *(_OWORD *)&NSDirectionalEdgeInsetsZero.top;
  v11[1] = v12;
  v13 = a1 + v2[16];
  *(_BYTE *)v13 = 1;
  *(_QWORD *)(v13 + 8) = 0;
  *(_QWORD *)(v13 + 16) = 0;
  *(_BYTE *)(v13 + 24) = 0;
  *(_QWORD *)(a1 + v2[17]) = 0x3FF0000000000000;
  *(_QWORD *)(a1 + v2[18]) = 0;
  *(_BYTE *)(a1 + v2[19]) = 2;
  if (qword_100498D38 != -1)
    swift_once(&qword_100498D38, sub_10035D638);
  v14 = qword_1004A4138;
  *(_QWORD *)(a1 + 192) = static SymbolButton.Background.normal;
  v28 = (void *)qword_1004A4128;
  *(_OWORD *)(a1 + 200) = *(_OWORD *)&qword_1004A4128;
  *(_QWORD *)(a1 + 216) = v14;
  v15 = (void *)objc_opt_self(UITraitCollection);
  swift_bridgeObjectRetain();
  v16 = v28;
  v17 = objc_msgSend(v15, "currentTraitCollection");
  v18 = objc_msgSend(v17, "userInterfaceIdiom");

  if (v18 == (id)6)
  {
    if (qword_100498D48 != -1)
      swift_once(&qword_100498D48, sub_10035D828);
    v19 = (void *)static SymbolButton.Material.xr;
    v20 = (void *)qword_1004A4168;
    v21 = qword_1004A4170;
    v29 = (void *)qword_1004A4170;
    v22 = byte_1004A4178;
    v24 = qword_1004A4180;
    v23 = unk_1004A4188;
    *(_QWORD *)(a1 + 224) = static SymbolButton.Material.xr;
    *(_QWORD *)(a1 + 232) = v20;
    *(_QWORD *)(a1 + 240) = v21;
    *(_QWORD *)(a1 + 248) = v22;
    *(_QWORD *)(a1 + 256) = v24;
    *(_QWORD *)(a1 + 264) = v23;
    swift_bridgeObjectRetain();
    v25 = v19;
    v26 = v20;
    v27 = v29;
  }
}

uint64_t *SymbolButton.Material.xr.unsafeMutableAddressor()
{
  if (qword_100498D48 != -1)
    swift_once(&qword_100498D48, sub_10035D828);
  return &static SymbolButton.Material.xr;
}

uint64_t SymbolButton.Symbol.weight.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 48) = result;
  return result;
}

uint64_t SymbolButton.Symbol.scale.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 56);
}

uint64_t SymbolButton.Symbol.scale.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = result;
  return result;
}

uint64_t SymbolButton.Symbol.offset.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 64);
}

uint64_t SymbolButton.Symbol.offset.setter(uint64_t result, uint64_t a2, char a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 64) = result;
  *(_QWORD *)(v3 + 72) = a2;
  *(_BYTE *)(v3 + 80) = a3;
  return result;
}

double SymbolButton.Symbol.alpha.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 104);
}

void SymbolButton.Symbol.alpha.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 104) = a1;
}

void *SymbolButton.Symbol.tint.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 112);
  v2 = v1;
  return v1;
}

void SymbolButton.Symbol.tint.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 112) = a1;
}

BOOL sub_100355C1C(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _OWORD v12[7];
  uint64_t v13;
  _OWORD v14[7];
  uint64_t v15;

  v2 = *(_OWORD *)(a1 + 80);
  v12[4] = *(_OWORD *)(a1 + 64);
  v12[5] = v2;
  v12[6] = *(_OWORD *)(a1 + 96);
  v13 = *(_QWORD *)(a1 + 112);
  v3 = *(_OWORD *)(a1 + 16);
  v12[0] = *(_OWORD *)a1;
  v12[1] = v3;
  v4 = *(_OWORD *)(a1 + 48);
  v12[2] = *(_OWORD *)(a1 + 32);
  v12[3] = v4;
  v5 = *a2;
  v6 = a2[1];
  v7 = a2[3];
  v14[2] = a2[2];
  v14[3] = v7;
  v14[0] = v5;
  v14[1] = v6;
  v8 = a2[4];
  v9 = a2[5];
  v10 = a2[6];
  v15 = *((_QWORD *)a2 + 14);
  v14[5] = v9;
  v14[6] = v10;
  v14[4] = v8;
  return _s11MusicCoreUI12SymbolButtonC0D0V23__derived_struct_equalsySbAE_AEtFZ_0((double *)v12, (uint64_t)v14);
}

void SymbolButton.Title.alpha.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 48) = a1;
}

uint64_t SymbolButton.Title.isHidden.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 64);
}

uint64_t SymbolButton.Title.isHidden.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 64) = result;
  return result;
}

uint64_t sub_100355CB4(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[4];
  char v8;
  _OWORD v9[4];
  char v10;

  v2 = *(_OWORD *)(a1 + 48);
  v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v2;
  v8 = *(_BYTE *)(a1 + 64);
  v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  v4 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v4;
  v10 = *(_BYTE *)(a2 + 64);
  v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return _s11MusicCoreUI12SymbolButtonC5TitleV23__derived_struct_equalsySbAE_AEtFZ_0((double *)v7, (uint64_t)v9) & 1;
}

uint64_t SymbolButton.Background.compositingFilter.getter(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain();
  return a2;
}

uint64_t SymbolButton.Background.init()()
{
  return 0;
}

id sub_100355D50()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  static SymbolButton.Background.clear = 0x3FF0000000000000;
  qword_1004A4078 = (uint64_t)result;
  qword_1004A4080 = 0;
  qword_1004A4088 = 0;
  return result;
}

uint64_t static SymbolButton.Background.clear.getter()
{
  uint64_t v0;
  id v1;
  _BYTE v3[24];

  if (qword_100498CF8 != -1)
    swift_once(&qword_100498CF8, sub_100355D50);
  swift_beginAccess(&static SymbolButton.Background.clear, v3, 0, 0);
  v0 = qword_1004A4078;
  v1 = (id)qword_1004A4078;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static SymbolButton.Background.clear.setter(void *a1, uint64_t a2, uint64_t a3, double a4)
{
  void *v8;
  _BYTE v10[24];

  if (qword_100498CF8 != -1)
    swift_once(&qword_100498CF8, sub_100355D50);
  swift_beginAccess(&static SymbolButton.Background.clear, v10, 1, 0);
  v8 = (void *)qword_1004A4078;
  static SymbolButton.Background.clear = *(_QWORD *)&a4;
  qword_1004A4078 = (uint64_t)a1;
  qword_1004A4080 = a2;
  qword_1004A4088 = a3;

  return swift_bridgeObjectRelease();
}

uint64_t (*static SymbolButton.Background.clear.modify(uint64_t a1))(_QWORD)
{
  if (qword_100498CF8 != -1)
    swift_once(&qword_100498CF8, sub_100355D50);
  swift_beginAccess(&static SymbolButton.Background.clear, a1, 33, 0);
  return j__swift_endAccess;
}

BOOL sub_100355F54(uint64_t a1, uint64_t a2)
{
  return _s11MusicCoreUI12SymbolButtonC10BackgroundV23__derived_struct_equalsySbAE_AEtFZ_0(*(void **)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(void **)(a2 + 8), *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), *(double *)a1, *(double *)a2);
}

void SymbolButton.Material.init()(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 24) = 2;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
}

BOOL sub_100355F94(_OWORD *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[3];
  _OWORD v8[3];

  v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  v3 = *a2;
  v4 = a2[1];
  v7[2] = a1[2];
  v8[0] = v3;
  v5 = a2[2];
  v8[1] = v4;
  v8[2] = v5;
  return _s11MusicCoreUI12SymbolButtonC8MaterialV23__derived_struct_equalsySbAE_AEtFZ_0((uint64_t)v7, (uint64_t)v8);
}

double SymbolButton.CustomView.insets.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

void SymbolButton.CustomView.insets.setter(double a1, double a2, double a3, double a4)
{
  double *v4;

  v4[1] = a1;
  v4[2] = a2;
  v4[3] = a3;
  v4[4] = a4;
}

void SymbolButton.CustomView.alpha.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 40) = a1;
}

void *static SymbolButton.CustomView.with(_:configurator:)@<X0>(void *result@<X0>, uint64_t (*a2)(void **)@<X1>, uint64_t a3@<X8>)
{
  __int128 v5;
  id v6;
  void *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  void *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  if (result)
  {
    v11 = result;
    v5 = *(_OWORD *)&UIEdgeInsetsZero.bottom;
    v12 = *(_OWORD *)&UIEdgeInsetsZero.top;
    v13 = v5;
    v14 = 0x3FF0000000000000uLL;
    v6 = result;
    result = (void *)a2(&v11);
    v7 = v11;
    v8 = v12;
    v9 = v13;
    v10 = v14;
  }
  else
  {
    v7 = 0;
    v8 = 0uLL;
    v9 = 0uLL;
    v10 = 0uLL;
  }
  *(_QWORD *)a3 = v7;
  *(_OWORD *)(a3 + 8) = v8;
  *(_OWORD *)(a3 + 24) = v9;
  *(_OWORD *)(a3 + 40) = v10;
  return result;
}

uint64_t sub_10035608C(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[3];
  uint64_t v6;
  _OWORD v7[3];
  uint64_t v8;

  v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v5[2] = *(_OWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 48);
  v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v7[2] = *(_OWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 48);
  return _s11MusicCoreUI12SymbolButtonC10CustomViewV23__derived_struct_equalsySbAE_AEtFZ_0((uint64_t)v5, (uint64_t)v7) & 1;
}

uint64_t SymbolButton.Badge.init()()
{
  return 0;
}

uint64_t static SymbolButton.Badge.with(_:)(void (*a1)(__int128 *))
{
  __int128 v2;
  uint64_t v3;

  v2 = xmmword_1003954D0;
  v3 = 0;
  a1(&v2);
  return v3;
}

uint64_t sub_100356140(uint64_t a1, uint64_t a2)
{
  return _s11MusicCoreUI12SymbolButtonC5BadgeV23__derived_struct_equalsySbAE_AEtFZ_0(*(void **)(a1 + 16), *(void **)(a2 + 16), *(double *)a1, *(double *)(a1 + 8), *(double *)a2, *(double *)(a2 + 8));
}

Swift::Void __swiftcall SymbolButton.layoutSubviews()()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  objc_class *v13;
  void *v14;
  id v15;
  double v16;
  CGFloat v17;
  double *v18;
  double v19;
  double v20;
  double v21;
  double v22;
  id v23;
  id v24;
  id v25;
  double v26;
  CGFloat v27;
  double v28;
  CGFloat v29;
  double v30;
  double v31;
  double v32;
  id v33;
  double *v34;
  double v35;
  double v36;
  int v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  CGFloat v43;
  uint64_t v44;
  CGFloat v45;
  CGFloat v46;
  double Width;
  double v48;
  double Height;
  id v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  char **v56;
  char **v57;
  double v58;
  double v59;
  double v60;
  CGFloat v61;
  CGFloat v62;
  double v63;
  uint64_t v64;
  double v65;
  unint64_t v66;
  double MinY;
  double MinX;
  CGFloat v69;
  CGFloat v70;
  CGFloat v71;
  CGFloat v72;
  id v73;
  uint64_t v74;
  double MaxX;
  id v76;
  uint64_t v77;
  double MaxY;
  CGFloat v79;
  CGFloat v80;
  double v81;
  id v82;
  id v83;
  uint64_t v84;
  double v85;
  double v86;
  double v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  id v91;
  double v92;
  double v93;
  double v94;
  id v95;
  id v96;
  id v97;
  id v98;
  uint64_t v99;
  char v100;
  CGFloat v101;
  double v102;
  id v103;
  double v104;
  CGFloat v105;
  double v106;
  CGFloat v107;
  double v108;
  CGFloat v109;
  double v110;
  CGFloat v111;
  double v112;
  id v113;
  double v114;
  double v115;
  double v116;
  double *v117;
  double v118;
  double v119;
  uint64_t v120;
  double v121;
  double v122;
  double v123;
  double v124;
  double v125;
  double v126;
  double v127;
  id v128;
  double v129;
  double v130;
  double v131;
  void *v132;
  id v133;
  double v134;
  double v135;
  double v136;
  double v137;
  double v138;
  double v139;
  double v140;
  double v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t (*v145)(uint64_t);
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  int v150;
  int v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  double v157;
  CGFloat v158;
  CGFloat v159;
  CGFloat v160;
  CGFloat v161;
  CGFloat v162;
  char v163[24];
  objc_super v164;
  _OWORD v165[2];
  char v166;
  _OWORD v167[2];
  char v168;
  CGRect v169;
  CGRect v170;
  CGRect v171;
  CGRect v172;
  CGRect v173;
  CGRect v174;
  CGRect v175;
  CGRect v176;
  CGRect v177;
  CGRect v178;
  CGRect v179;
  CGRect v180;
  CGRect v181;
  CGRect v182;
  CGRect v183;
  CGRect v184;
  CGRect v185;
  CGRect v186;
  CGRect v187;
  CGRect v188;
  CGRect v189;
  CGRect v190;
  CGRect v191;
  CGRect v192;
  CGRect v193;
  CGRect v194;
  CGRect v195;
  CGRect v196;

  v1 = v0;
  v2 = type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  v4 = (char *)&v152 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v155 = type metadata accessor for UIView.Corner.Radius(0);
  v154 = *(_QWORD *)(v155 - 8);
  __chkstk_darwin();
  v153 = (char *)&v152 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (int *)type metadata accessor for SymbolButton.Metrics(0);
  __chkstk_darwin();
  v8 = (uint64_t *)((char *)&v152 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  v10 = (uint64_t *)((char *)&v152 - v9);
  __chkstk_darwin();
  v12 = (uint64_t *)((char *)&v152 - v11);
  v13 = (objc_class *)type metadata accessor for SymbolButton(0);
  v164.receiver = v0;
  v164.super_class = v13;
  objc_msgSendSuper2(&v164, "layoutSubviews");
  v14 = *(void **)&v0[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_materialView];
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_containerView], "bounds");
  objc_msgSend(v14, "setFrame:");
  v15 = objc_msgSend(v14, "contentView");
  objc_msgSend(v15, "bounds");
  v17 = v16;

  sub_100359380(v12);
  v18 = (double *)((char *)v12 + v6[12]);
  v20 = *v18;
  v19 = v18[1];
  v22 = v18[2];
  v21 = v18[3];
  v23 = objc_msgSend(v1, "effectiveUserInterfaceLayoutDirection");
  v24 = objc_msgSend(v1, "contentHorizontalAlignment");
  v156 = v2;
  v162 = v17;
  switch((unint64_t)v24)
  {
    case 1uLL:
      goto LABEL_7;
    case 2uLL:
      goto LABEL_8;
    case 4uLL:
      if (!v23)
        goto LABEL_7;
      if (v23 == (id)1)
LABEL_8:
        v21 = 0.0;
      break;
    case 5uLL:
      if (!v23)
        goto LABEL_8;
      if (v23 == (id)1)
LABEL_7:
        v19 = 0.0;
      break;
    default:
      break;
  }
  v25 = objc_msgSend(v1, "contentVerticalAlignment");
  if (v25 == (id)2)
    v26 = 0.0;
  else
    v26 = v22;
  if (v25 == (id)1)
    v20 = 0.0;
  else
    v22 = v26;
  objc_msgSend(v1, "effectiveUserInterfaceLayoutDirection", v26);
  v27 = CGRect.inset(by:for:)(v20, v19, v22, v21);
  v29 = v28;
  v160 = v30;
  v161 = v31;
  sub_100006798((uint64_t)v12, type metadata accessor for SymbolButton.Metrics);
  sub_100359380(v10);
  v32 = *(double *)((char *)v10 + v6[8]);
  sub_100006798((uint64_t)v10, type metadata accessor for SymbolButton.Metrics);
  v33 = sub_100358560();
  sub_100359380(v8);
  v34 = (double *)((char *)v8 + v6[11]);
  v35 = *v34;
  v36 = v34[1];
  v37 = *((unsigned __int8 *)v34 + 16);
  sub_100006798((uint64_t)v8, type metadata accessor for SymbolButton.Metrics);
  if (v37)
    v38 = 0.0;
  else
    v38 = v36;
  if (v37)
    v39 = 0.0;
  else
    v39 = v35;
  objc_msgSend(v33, "sizeThatFits:", v39, v38);
  v41 = v40;
  v43 = v42;

  v44 = (uint64_t)&v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration];
  swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration], v163, 0, 0);
  if (!*(_QWORD *)(v44 + 128) || (*(_BYTE *)(v44 + 184) & 1) != 0)
  {
    v50 = sub_1003586C4();
    objc_msgSend(v50, "frame");
    v52 = v54;
    v158 = v55;
  }
  else
  {
    v169.origin.x = v27;
    v169.origin.y = v29;
    v45 = v160;
    v169.size.width = v160;
    v46 = v161;
    v169.size.height = v161;
    Width = CGRectGetWidth(v169);
    v170.origin.x = 0.0;
    v170.origin.y = 0.0;
    v170.size.width = v41;
    v170.size.height = v43;
    v48 = Width - (v32 + CGRectGetWidth(v170));
    v171.origin.x = v27;
    v171.origin.y = v29;
    v171.size.width = v45;
    v171.size.height = v46;
    Height = CGRectGetHeight(v171);
    v50 = sub_1003586C4();
    objc_msgSend(v50, "sizeThatFits:", v48, Height);
    v52 = v51;
    v158 = v53;
  }

  v56 = &selRef_borderWidth;
  v57 = &selRef_borderWidth;
  v157 = v32;
  v159 = v52;
  if (!*(_QWORD *)(v44 + 8))
  {
    v59 = 0.0;
    v58 = 0.0;
    if (!*(_QWORD *)(v44 + 128))
      goto LABEL_34;
    goto LABEL_31;
  }
  v172.origin.x = 0.0;
  v172.origin.y = 0.0;
  v172.size.width = v41;
  v172.size.height = v43;
  v58 = CGRectGetWidth(v172) + 0.0;
  v173.origin.x = 0.0;
  v173.origin.y = 0.0;
  v173.size.height = 0.0;
  v173.size.width = v58;
  v59 = CGRectGetHeight(v173);
  v174.origin.x = 0.0;
  v174.origin.y = 0.0;
  v174.size.width = v41;
  v174.size.height = v43;
  v60 = CGRectGetHeight(v174);
  if (v59 <= v60)
    v59 = v60;
  if (*(_QWORD *)(v44 + 128))
  {
LABEL_31:
    if ((*(_BYTE *)(v44 + 184) & 1) == 0)
    {
      v175.origin.x = 0.0;
      v175.origin.y = 0.0;
      v61 = v159;
      v175.size.width = v159;
      v62 = v158;
      v175.size.height = v158;
      v58 = v58 + CGRectGetWidth(v175);
      v176.origin.x = 0.0;
      v176.origin.y = 0.0;
      v176.size.width = v58;
      v176.size.height = v59;
      v59 = CGRectGetHeight(v176);
      v177.origin.x = 0.0;
      v177.origin.y = 0.0;
      v177.size.width = v61;
      v177.size.height = v62;
      v63 = CGRectGetHeight(v177);
      if (v59 <= v63)
        v59 = v63;
    }
  }
LABEL_34:
  v64 = *(_QWORD *)(v44 + 8);
  v162 = v43;
  if (v64 && *(_QWORD *)(v44 + 128))
  {
    v65 = -0.0;
    if (!*(_BYTE *)(v44 + 184))
      v65 = v157;
    v58 = v58 + v65;
  }
  v66 = (unint64_t)objc_msgSend(v1, "contentHorizontalAlignment");
  MinY = 0.0;
  MinX = 0.0;
  if (v66 <= 5)
  {
    if (((1 << v66) & 9) != 0)
    {
      v178.origin.x = v27;
      v178.origin.y = v29;
      v178.size.width = v160;
      v178.size.height = v161;
      CGRectGetMidX(v178);
      v179.origin.x = 0.0;
      v179.origin.y = 0.0;
      v179.size.width = v58;
      v179.size.height = v59;
      CGRectGetWidth(v179);
      v73 = objc_msgSend(v1, "traitCollection");
      objc_msgSend(v73, "displayScale");

      MinX = CGFloat.roundValue(scale:)(v74);
    }
    else
    {
      v69 = v27;
      v70 = v29;
      v71 = v160;
      v72 = v161;
      if (((1 << v66) & 0x12) != 0)
      {
        MinX = CGRectGetMinX(*(CGRect *)&v69);
      }
      else
      {
        MaxX = CGRectGetMaxX(*(CGRect *)&v69);
        v180.origin.x = 0.0;
        v180.origin.y = 0.0;
        v180.size.width = v58;
        v180.size.height = v59;
        MinX = MaxX - CGRectGetWidth(v180);
      }
    }
  }
  switch((unint64_t)objc_msgSend(v1, "contentVerticalAlignment"))
  {
    case 0uLL:
      v181.origin.x = v27;
      v181.origin.y = v29;
      v181.size.width = v160;
      v181.size.height = v161;
      CGRectGetMidY(v181);
      v182.origin.y = 0.0;
      v182.origin.x = MinX;
      v182.size.width = v58;
      v182.size.height = v59;
      CGRectGetHeight(v182);
      v76 = objc_msgSend(v1, "traitCollection");
      objc_msgSend(v76, "displayScale");

      MinY = CGFloat.roundValue(scale:)(v77);
      break;
    case 1uLL:
      v183.origin.x = v27;
      v183.origin.y = v29;
      v183.size.width = v160;
      v183.size.height = v161;
      MinY = CGRectGetMinY(v183);
      break;
    case 2uLL:
      v184.origin.x = v27;
      v184.origin.y = v29;
      v184.size.width = v160;
      v184.size.height = v161;
      MaxY = CGRectGetMaxY(v184);
      v185.origin.y = 0.0;
      v185.origin.x = MinX;
      v185.size.width = v58;
      v185.size.height = v59;
      MinY = MaxY - CGRectGetHeight(v185);
      break;
    case 3uLL:
      v186.origin.x = v27;
      v186.origin.y = v29;
      v79 = v160;
      v186.size.width = v160;
      v80 = v161;
      v186.size.height = v161;
      MinY = CGRectGetMinY(v186);
      v187.origin.x = v27;
      v187.origin.y = v29;
      v187.size.width = v79;
      v187.size.height = v80;
      v59 = CGRectGetHeight(v187);
      break;
    default:
      break;
  }
  v81 = MinX;
  if (*(_QWORD *)(v44 + 8))
  {
    v188.origin.x = MinX;
    v188.origin.y = MinY;
    v188.size.width = v41;
    v188.size.height = v162;
    v81 = v157 + CGRectGetMaxX(v188);
  }
  v82 = objc_msgSend(v1, "contentVerticalAlignment");
  if (v82 == (id)3)
  {
    v193.origin.x = MinX;
    v193.origin.y = MinY;
    v193.size.width = v58;
    v193.size.height = v59;
    v162 = CGRectGetHeight(v193);
    v194.origin.x = MinX;
    v194.origin.y = MinY;
    v194.size.width = v58;
    v194.size.height = v59;
    v87 = CGRectGetHeight(v194);
    v85 = MinY;
    v90 = v156;
    v86 = v159;
  }
  else if (v82)
  {
    v85 = MinY;
    v90 = v156;
    v86 = v159;
    v87 = v158;
  }
  else
  {
    v189.origin.x = MinX;
    v189.origin.y = MinY;
    v189.size.width = v58;
    v189.size.height = v59;
    CGRectGetMidY(v189);
    v190.origin.x = MinX;
    v190.origin.y = MinY;
    v190.size.width = v41;
    v190.size.height = v162;
    CGRectGetHeight(v190);
    v83 = objc_msgSend(v1, "traitCollection");
    objc_msgSend(v83, "displayScale");

    v85 = CGFloat.roundValue(scale:)(v84);
    v191.origin.x = MinX;
    v191.origin.y = MinY;
    v191.size.width = v58;
    v191.size.height = v59;
    CGRectGetMidY(v191);
    v192.origin.x = v81;
    v192.origin.y = MinY;
    v86 = v159;
    v192.size.width = v159;
    v87 = v158;
    v192.size.height = v158;
    CGRectGetHeight(v192);
    v57 = &selRef_borderWidth;
    v88 = objc_msgSend(v1, "traitCollection");
    objc_msgSend(v88, "displayScale");

    MinY = CGFloat.roundValue(scale:)(v89);
    v90 = v156;
  }
  v91 = sub_1003586C4();
  if (objc_msgSend(v1, v57[249]) == (id)4 || objc_msgSend(v1, v57[249]) == (id)5)
  {
    memset(v167, 0, sizeof(v167));
    v168 = 1;
    v81 = CGRect.applyingLayoutDirection(in:bounds:)(v1, v167, v81, MinY, v86, v87);
    MinY = v92;
    v86 = v93;
    v87 = v94;
  }
  objc_msgSend(v91, "setFrame:", v81, MinY, v86, v87);

  if (*(_QWORD *)(v44 + 128) && (*(_BYTE *)(v44 + 184) & 1) == 0)
  {
    v95 = sub_100358560();
    v96 = objc_msgSend(v95, "image");

    if (v96)
    {
      sub_100359380(v10);
      v97 = *(id *)((char *)v10 + v6[7]);
      sub_100006798((uint64_t)v10, type metadata accessor for SymbolButton.Metrics);
      v98 = objc_msgSend(v96, "imageByApplyingSymbolConfiguration:", v97);

      if (v98)
      {
        *(double *)&v99 = COERCE_DOUBLE(UIImage.baselineOffsetFromBottom.getter());
        v56 = &selRef_borderWidth;
        if ((v100 & 1) != 0)
        {

        }
        else
        {
          v101 = v41;
          v102 = *(double *)&v99;
          v103 = sub_1003586C4();
          objc_msgSend(v103, "frame");
          v105 = v104;
          v107 = v106;
          v109 = v108;
          v111 = v110;

          v195.origin.x = v105;
          v195.origin.y = v107;
          v195.size.width = v109;
          v195.size.height = v111;
          v112 = CGRectGetMinY(v195);
          v113 = sub_1003586C4();
          objc_msgSend(v113, "_firstLineBaseline");
          v115 = v114;

          v196.origin.x = MinX;
          v196.origin.y = v85;
          v196.size.width = v101;
          v196.size.height = v162;
          v116 = CGRectGetHeight(v196);

          v85 = v112 + v115 - v116 + v102;
          v41 = v101;
        }
      }
      else
      {
        v56 = &selRef_borderWidth;
      }
      v57 = &selRef_borderWidth;
    }
    else
    {
      v56 = &selRef_borderWidth;
    }
  }
  sub_100359380(v10);
  v117 = (double *)((char *)v10 + v6[9]);
  v118 = *v117;
  v119 = v117[1];
  v120 = sub_100006798((uint64_t)v10, type metadata accessor for SymbolButton.Metrics);
  v121 = CGRect.offset(by:)(v120, v118, v119, MinX, v85, v41, v162);
  v123 = v122;
  v125 = v124;
  v127 = v126;
  v128 = sub_100358560();
  if (objc_msgSend(v1, v57[249]) == (id)4 || objc_msgSend(v1, v57[249]) == (id)5)
  {
    memset(v165, 0, sizeof(v165));
    v166 = 1;
    v121 = CGRect.applyingLayoutDirection(in:bounds:)(v1, v165, v121, v123, v125, v127);
    v123 = v129;
    v125 = v130;
    v127 = v131;
  }
  objc_msgSend(v128, v56[462], v121, v123, v125, v127);

  sub_1003587C0();
  sub_100358978();
  v132 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_backgroundView];
  v133 = objc_msgSend(v14, "contentView");
  objc_msgSend(v133, "bounds");
  v135 = v134;
  v137 = v136;
  v139 = v138;
  v141 = v140;

  objc_msgSend(v132, v56[462], v135, v137, v139, v141);
  sub_100082248(v44, (uint64_t)v4, type metadata accessor for SymbolButton.Configuration);
  v142 = &v4[*(int *)(v90 + 36)];
  v143 = type metadata accessor for UIView.Corner(0);
  v144 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v143 - 8) + 48))(v142, 1, v143);
  if ((_DWORD)v144)
  {
    v145 = type metadata accessor for SymbolButton.Configuration;
    v146 = (uint64_t)v4;
  }
  else
  {
    v147 = v153;
    UIView.Corner.radius.getter(v144);
    sub_100006798((uint64_t)v4, type metadata accessor for SymbolButton.Configuration);
    v148 = v154;
    v149 = v155;
    v150 = (*(uint64_t (**)(char *, uint64_t))(v154 + 88))(v147, v155);
    v151 = enum case for UIView.Corner.Radius.rounded(_:);
    (*(void (**)(char *, uint64_t))(v148 + 8))(v147, v149);
    if (v150 != v151)
      return;
    sub_100359380(v10);
    sub_10035A448((uint64_t)v10);
    v145 = type metadata accessor for SymbolButton.Metrics;
    v146 = (uint64_t)v10;
  }
  sub_100006798(v146, v145);
}

Swift::Void __swiftcall SymbolButton.traitCollectionDidChange(_:)(UITraitCollection_optional a1)
{
  char *v1;
  Class isa;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  objc_class *v13;
  uint64_t v14;
  id v15;
  _BYTE v17[24];
  objc_super v18;

  isa = a1.value.super.isa;
  type metadata accessor for SymbolButton.Metrics(0);
  __chkstk_darwin();
  v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for SymbolButton.Configuration(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin();
  v10 = &v17[-v9 - 8];
  sub_100005574(&qword_1004A06B0);
  __chkstk_darwin();
  v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v13 = (objc_class *)type metadata accessor for SymbolButton(0);
  v18.receiver = v1;
  v18.super_class = v13;
  objc_msgSendSuper2(&v18, "traitCollectionDidChange:", isa);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v12, 1, 1, v5);
  SymbolButton.updateConfigurationIfNeeded(_:animation:)((uint64_t)v12, 0, 0, 0, 1);
  sub_100008758((uint64_t)v12, &qword_1004A06B0);
  v14 = (uint64_t)&v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration];
  swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration], v17, 0, 0);
  sub_100082248(v14, (uint64_t)v10, type metadata accessor for SymbolButton.Configuration);
  v15 = objc_msgSend(v1, "traitCollection");
  sub_100359380(v4);
  sub_100006798((uint64_t)v4, type metadata accessor for SymbolButton.Metrics);
  sub_100082248((uint64_t)v10, (uint64_t)v8, type metadata accessor for SymbolButton.Configuration);
  sub_100358AC0((uint64_t)v8, v15, v4);
  sub_100006798((uint64_t)v10, type metadata accessor for SymbolButton.Configuration);
  sub_10035958C((uint64_t)v4);
}

double SymbolButton.intrinsicContentSize.getter()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  double *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  uint64_t v15;
  double v16;
  double *v17;
  double v18;
  double v19;
  double v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  double *v24;
  double v25;
  int v26;
  id v27;
  double v28;
  double v29;
  double v30;
  double v31;
  id v32;
  double v33;
  double v34;
  double v35;
  void *v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  char v44[24];

  v1 = (int *)type metadata accessor for SymbolButton.Metrics(0);
  __chkstk_darwin();
  v3 = &v44[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin();
  v5 = &v44[-v4 - 8];
  __chkstk_darwin();
  v7 = &v44[-v6 - 8];
  __chkstk_darwin();
  v9 = &v44[-v8 - 8];
  sub_100359380(&v44[-v8 - 8]);
  v10 = (double *)&v9[v1[12]];
  v11 = *v10;
  v12 = v10[1];
  v13 = v10[2];
  v14 = v10[3];
  v15 = sub_100006798((uint64_t)v9, type metadata accessor for SymbolButton.Metrics);
  v16 = NSDirectionalEdgeInsets.horizontal.getter(v15, v11, v12, v13, v14);
  sub_100359380(v9);
  v17 = (double *)&v9[v1[12]];
  v18 = *v17;
  v19 = v17[1];
  v20 = v17[2];
  v21 = v17[3];
  v22 = sub_100006798((uint64_t)v9, type metadata accessor for SymbolButton.Metrics);
  NSDirectionalEdgeInsets.vertical.getter(v22, v18, v19, v20, v21);
  v23 = v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration;
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration, v44, 0, 0);
  if (!*(_QWORD *)(v23 + 8))
  {
    v31 = 0.0;
    if (!*(_QWORD *)(v23 + 128))
      goto LABEL_12;
    goto LABEL_10;
  }
  sub_100359380(v7);
  v24 = (double *)&v7[v1[11]];
  v25 = *v24;
  v26 = *((unsigned __int8 *)v24 + 16);
  sub_100006798((uint64_t)v7, type metadata accessor for SymbolButton.Metrics);
  v27 = sub_100358560();
  objc_msgSend(v27, "intrinsicContentSize");
  v29 = v28;

  if (v25 >= v29)
    v30 = v29;
  else
    v30 = v25;
  if (v26)
    v30 = v29;
  v31 = v30 + 0.0;
  if (*(_QWORD *)(v23 + 128))
  {
LABEL_10:
    if ((*(_BYTE *)(v23 + 184) & 1) == 0)
    {
      v32 = sub_1003586C4();
      objc_msgSend(v32, "intrinsicContentSize");
      v34 = v33;

      v31 = v31 + v34;
    }
  }
LABEL_12:
  if (*(_QWORD *)(v23 + 8) && *(_QWORD *)(v23 + 128) && (*(_BYTE *)(v23 + 184) & 1) == 0)
  {
    sub_100359380(v9);
    v35 = *(double *)&v9[v1[8]];
    sub_100006798((uint64_t)v9, type metadata accessor for SymbolButton.Metrics);
    v31 = v31 + v35;
  }
  v36 = *(void **)(v23 + *(int *)(type metadata accessor for SymbolButton.Configuration(0) + 40));
  if (v36)
  {
    objc_msgSend(v36, "intrinsicContentSize");
    if (v37 > v31)
      v31 = v37;
  }
  v38 = v16 + 0.0;
  sub_100359380(v5);
  v39 = *(double *)&v5[v1[10]];
  sub_100006798((uint64_t)v5, type metadata accessor for SymbolButton.Metrics);
  if (v31 > v39)
    v40 = v31;
  else
    v40 = v39;
  v41 = v38 + v40;
  sub_100359380(v3);
  sub_100006798((uint64_t)v3, type metadata accessor for SymbolButton.Metrics);
  return v41;
}

Swift::Void __swiftcall SymbolButton.tintColorDidChange()()
{
  char *v0;
  uint64_t v1;
  char *v2;
  objc_class *v3;
  uint64_t v4;
  _BYTE v6[24];
  objc_super v7;

  type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  v2 = &v6[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v3 = (objc_class *)type metadata accessor for SymbolButton(0);
  v7.receiver = v0;
  v7.super_class = v3;
  objc_msgSendSuper2(&v7, "tintColorDidChange");
  v4 = (uint64_t)&v0[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration];
  swift_beginAccess(&v0[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration], v6, 0, 0);
  sub_100082248(v4, (uint64_t)v2, type metadata accessor for SymbolButton.Configuration);
  sub_100359758((uint64_t)v2);
  sub_100006798((uint64_t)v2, type metadata accessor for SymbolButton.Configuration);
}

id SymbolButton.sizeThatFits(_:)()
{
  void *v0;

  return objc_msgSend(v0, "intrinsicContentSize");
}

__int128 *SymbolButton.Configuration.hitRectMinimumSize.unsafeMutableAddressor()
{
  if (qword_100498D20 != -1)
    swift_once(&qword_100498D20, sub_10035C94C);
  return &static SymbolButton.Configuration.hitRectMinimumSize;
}

double SymbolButton.hitRectMinimumSize.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_hitRectMinimumSize;
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_hitRectMinimumSize, v3, 0, 0);
  return *(double *)v1;
}

void SymbolButton.hitRectMinimumSize.setter(double a1, double a2)
{
  uint64_t v2;
  double *v5;
  _BYTE v6[24];

  v5 = (double *)(v2 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_hitRectMinimumSize);
  swift_beginAccess(v2 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_hitRectMinimumSize, v6, 1, 0);
  *v5 = a1;
  v5[1] = a2;
}

uint64_t (*SymbolButton.hitRectMinimumSize.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_hitRectMinimumSize, a1, 33, 0);
  return j_j__swift_endAccess;
}

double SymbolButton.hitRect()()
{
  char *v0;
  double v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double *v9;
  double v10;
  double Width;
  double v12;
  _BYTE v14[24];
  objc_super v15;
  CGRect v16;
  CGRect v17;

  v15.receiver = v0;
  v15.super_class = (Class)type metadata accessor for SymbolButton(0);
  objc_msgSendSuper2(&v15, "hitRect");
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v9 = (double *)&v0[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_hitRectMinimumSize];
  swift_beginAccess(&v0[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_hitRectMinimumSize], v14, 0, 0);
  v10 = *v9;
  v16.origin.x = v2;
  v16.origin.y = v4;
  v16.size.width = v6;
  v16.size.height = v8;
  Width = CGRectGetWidth(v16);
  if (Width > v10)
    v10 = Width;
  v17.origin.x = v2;
  v17.origin.y = v4;
  v17.size.width = v6;
  v17.size.height = v8;
  CGRectGetHeight(v17);
  v12 = CGRect.center.getter(v2, v4, v6, v8) - v10 * 0.5;
  CGRect.center.getter(v2, v4, v6, v8);
  return v12;
}

void *SymbolButton.hitTest(_:with:)(uint64_t a1, double a2, double a3)
{
  void *v3;
  id v7;

  if ((UIViewIgnoresTouchEvents(v3) & 1) != 0 || !objc_msgSend(v3, "pointInside:withEvent:", a1, a2, a3))
    return 0;
  v7 = v3;
  return v3;
}

BOOL SymbolButton.point(inside:with:)(CGFloat a1, CGFloat a2)
{
  void *v2;
  CGPoint v6;
  CGRect v7;

  objc_msgSend(v2, "hitRect");
  v6.x = a1;
  v6.y = a2;
  return CGRectContainsPoint(v7, v6);
}

id SymbolButton.isHighlighted.getter()
{
  return sub_100358104((SEL *)&selRef_isHighlighted);
}

id SymbolButton.isHighlighted.setter(char a1)
{
  void *v1;
  objc_class *v3;
  char v4;
  objc_super v6;
  objc_super v7;

  v3 = (objc_class *)type metadata accessor for SymbolButton(0);
  v7.receiver = v1;
  v7.super_class = v3;
  v4 = objc_msgSendSuper2(&v7, "isHighlighted");
  v6.receiver = v1;
  v6.super_class = v3;
  objc_msgSendSuper2(&v6, "setHighlighted:", a1 & 1);
  return sub_100357C18(v4);
}

id sub_100357C18(char a1)
{
  void *v1;
  void *v2;
  int v3;
  uint64_t v4;
  char *v5;
  id result;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  void **aBlock;
  uint64_t v26;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;

  v2 = v1;
  v3 = a1 & 1;
  sub_100005574(&qword_1004A06B0);
  __chkstk_darwin();
  v5 = (char *)&aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend(v2, "isHighlighted");
  if ((_DWORD)result != v3)
  {
    v7 = objc_msgSend(v2, "traitCollection");
    v8 = objc_msgSend(v7, "userInterfaceIdiom");

    if (v8 == (id)6)
    {
      v9 = (void *)objc_opt_self(UIView);
      if (objc_msgSend(v9, "areAnimationsEnabled"))
      {
        if (objc_msgSend(v2, "isHighlighted"))
        {
          v10 = swift_allocObject(&unk_1004669D0, 24, 7);
          *(_QWORD *)(v10 + 16) = v2;
          v29 = sub_10036499C;
          v30 = v10;
          aBlock = _NSConcreteStackBlock;
          v26 = 1107296256;
          v27 = sub_1000BED80;
          v28 = &unk_1004669E8;
          v11 = _Block_copy(&aBlock);
          v12 = v30;
          v13 = v2;
          swift_release(v12);
          v14 = swift_allocObject(&unk_100466A20, 24, 7);
          *(_QWORD *)(v14 + 16) = v13;
          v29 = sub_1003649C0;
          v30 = v14;
          aBlock = _NSConcreteStackBlock;
          v26 = 1107296256;
          v27 = sub_100204BB4;
          v28 = &unk_100466A38;
          v15 = _Block_copy(&aBlock);
          v16 = v30;
          v17 = v13;
          swift_release(v16);
          objc_msgSend(v9, "animateWithDuration:delay:options:animations:completion:", 0x20000, v11, v15, 0.1, 0.0);
          _Block_release(v15);
          _Block_release(v11);
        }
        else
        {
          sub_1000087DC(0, (unint64_t *)&qword_10049D970, UIView_ptr);
          sub_1000087DC(0, &qword_10049ADC0, UISpringTimingParameters_ptr);
          v18 = UISpringTimingParameters.init(dampingRatio:response:)(0.7, 0.4);
          v19 = swift_allocObject(&unk_1004669A8, 24, 7);
          *(_QWORD *)(v19 + 16) = v2;
          v20 = v2;
          static UIView.animate(withSpringTimingParameters:delay:options:animations:completion:)(v18, 0, sub_100364980, v19, 0, 0, 0.0);

          swift_release(v19);
        }
      }
    }
    v21 = type metadata accessor for SymbolButton.Configuration(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v5, 1, 1, v21);
    v22 = objc_msgSend((id)objc_opt_self(UIView), "areAnimationsEnabled");
    if (v22)
      v23 = 0x3FD0000000000000;
    else
      v23 = 0;
    if (v22)
      v24 = 3075;
    else
      v24 = 0;
    SymbolButton.updateConfigurationIfNeeded(_:animation:)((uint64_t)v5, v23, 0, v24, v22 ^ 1);
    return (id)sub_100008758((uint64_t)v5, &qword_1004A06B0);
  }
  return result;
}

id sub_100357F3C(uint64_t a1, CGFloat a2)
{
  void *v2;
  CGAffineTransform v4;

  v2 = *(void **)(a1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_containerView);
  CGAffineTransformMakeScale(&v4, a2, a2);
  return objc_msgSend(v2, "setTransform:", &v4);
}

double sub_100357F98(int a1, id a2)
{
  double result;
  id v4;
  uint64_t v5;
  id v6;

  if (objc_msgSend(a2, "showsMenuAsPrimaryAction"))
  {
    if (objc_msgSend(a2, "isContextMenuInteractionEnabled"))
    {
      sub_1000087DC(0, (unint64_t *)&qword_10049D970, UIView_ptr);
      sub_1000087DC(0, &qword_10049ADC0, UISpringTimingParameters_ptr);
      v4 = UISpringTimingParameters.init(dampingRatio:response:)(0.7, 0.4);
      v5 = swift_allocObject(&unk_100466A70, 24, 7);
      *(_QWORD *)(v5 + 16) = a2;
      v6 = a2;
      static UIView.animate(withSpringTimingParameters:delay:options:animations:completion:)(v4, 0, sub_100365924, v5, 0, 0, 0.0);

      *(_QWORD *)&result = swift_release(v5).n128_u64[0];
    }
  }
  return result;
}

id sub_1003580B8(void *a1, uint64_t a2, uint64_t (*a3)(_QWORD), SEL *a4)
{
  objc_super v6;

  v6.receiver = a1;
  v6.super_class = (Class)a3(0);
  return objc_msgSendSuper2(&v6, *a4);
}

id SymbolButton.isSelected.getter()
{
  return sub_100358104((SEL *)&selRef_isSelected);
}

id sub_100358104(SEL *a1)
{
  void *v1;
  objc_super v4;

  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for SymbolButton(0);
  return objc_msgSendSuper2(&v4, *a1);
}

id SymbolButton.isSelected.setter(char a1)
{
  return sub_100358208(a1, (SEL *)&selRef_isSelected, (SEL *)&selRef_setSelected_);
}

id SymbolButton.isEnabled.getter()
{
  return sub_100358104((SEL *)&selRef_isEnabled);
}

id SymbolButton.isEnabled.setter(char a1)
{
  return sub_100358208(a1, (SEL *)&selRef_isEnabled, (SEL *)&selRef_setEnabled_);
}

id sub_100358208(char a1, SEL *a2, SEL *a3)
{
  void *v3;
  uint64_t v7;
  char *v8;
  objc_class *v9;
  unsigned int v10;
  id result;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  objc_super v16;
  objc_super v17;

  sub_100005574(&qword_1004A06B0);
  __chkstk_darwin();
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (objc_class *)type metadata accessor for SymbolButton(0);
  v17.receiver = v3;
  v17.super_class = v9;
  v10 = objc_msgSendSuper2(&v17, *a2);
  v16.receiver = v3;
  v16.super_class = v9;
  objc_msgSendSuper2(&v16, *a3, a1 & 1);
  result = objc_msgSend(v3, *a2);
  if (v10 != (_DWORD)result)
  {
    v12 = type metadata accessor for SymbolButton.Configuration(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 1, 1, v12);
    v13 = objc_msgSend((id)objc_opt_self(UIView), "areAnimationsEnabled");
    if (v13)
      v14 = 0x3FD0000000000000;
    else
      v14 = 0;
    if (v13)
      v15 = 3075;
    else
      v15 = 0;
    SymbolButton.updateConfigurationIfNeeded(_:animation:)((uint64_t)v8, v14, 0, v15, v13 ^ 1);
    return (id)sub_100008758((uint64_t)v8, &qword_1004A06B0);
  }
  return result;
}

Swift::Void __swiftcall SymbolButton.setEnabled(_:animated:)(Swift::Bool _, Swift::Bool animated)
{
  void *v2;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  __n128 v10;
  char isEscapingClosureAtFileLocation;
  _QWORD v12[5];
  uint64_t v13;

  if (animated)
  {
    objc_msgSend(v2, "setEnabled:", _);
  }
  else
  {
    v4 = (void *)objc_opt_self(UIView);
    v5 = swift_allocObject(&unk_1004660F8, 25, 7);
    *(_QWORD *)(v5 + 16) = v2;
    *(_BYTE *)(v5 + 24) = _;
    v6 = swift_allocObject(&unk_100466120, 32, 7);
    *(_QWORD *)(v6 + 16) = sub_100360A20;
    *(_QWORD *)(v6 + 24) = v5;
    v12[4] = sub_1000B04E0;
    v13 = v6;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 1107296256;
    v12[2] = sub_100009BD0;
    v12[3] = &unk_100466138;
    v7 = _Block_copy(v12);
    v8 = v13;
    v9 = v2;
    swift_retain(v6);
    objc_msgSend(v4, "performWithoutAnimation:", v7, swift_release(v8).n128_f64[0]);
    _Block_release(v7);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v6, "", 121, 962, 78, 1, v10);
    swift_release(v6);
    swift_release(v5);
    if ((isEscapingClosureAtFileLocation & 1) != 0)
      __break(1u);
  }
}

uint64_t SymbolButton.buildMenu.getter()
{
  return sub_10034D71C(&OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_buildMenu, (void (*)(_QWORD, _QWORD, __n128))sub_100208034);
}

uint64_t SymbolButton.buildMenu.setter(uint64_t a1, uint64_t a2)
{
  return sub_10034D790(a1, a2, &OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_buildMenu, (uint64_t (*)(uint64_t, uint64_t, __n128))sub_100208030);
}

uint64_t (*SymbolButton.buildMenu.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_buildMenu, a1, 33, 0);
  return j_j__swift_endAccess;
}

id sub_100358560()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  objc_class *v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  objc_super v16;
  _BYTE v17[24];
  _OWORD v18[7];
  uint64_t v19;

  v1 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___imageView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___imageView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___imageView);
  }
  else
  {
    v4 = v0;
    v5 = v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration;
    swift_beginAccess(v5, v17, 0, 0);
    v6 = *(_OWORD *)(v5 + 80);
    v18[4] = *(_OWORD *)(v5 + 64);
    v18[5] = v6;
    v18[6] = *(_OWORD *)(v5 + 96);
    v19 = *(_QWORD *)(v5 + 112);
    v7 = *(_OWORD *)(v5 + 16);
    v18[0] = *(_OWORD *)v5;
    v18[1] = v7;
    v8 = *(_OWORD *)(v5 + 48);
    v18[2] = *(_OWORD *)(v5 + 32);
    v18[3] = v8;
    v9 = (objc_class *)type metadata accessor for SymbolButton.ImageView();
    v10 = objc_allocWithZone(v9);
    sub_100364A60((uint64_t)v18);
    v16.receiver = v10;
    v16.super_class = v9;
    v11 = objc_msgSendSuper2(&v16, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v11, "setAdjustsImageSizeForAccessibilityContentSizeCategory:", 0);
    objc_msgSend(v11, "setContentMode:", 4);
    sub_10035B878((uint64_t)v18);
    sub_100364ABC((uint64_t)v18);

    v12 = *(void **)(v4 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_backgroundView);
    if ((objc_msgSend(v11, "isDescendantOfView:", v12) & 1) == 0)
      objc_msgSend(v12, "addSubview:", v11);
    v13 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v11;
    v3 = v11;

    v2 = 0;
  }
  v14 = v2;
  return v3;
}

id sub_1003586C4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  _BYTE v14[24];
  _OWORD v15[4];
  char v16;

  v1 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___titleLabel;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___titleLabel);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___titleLabel);
  }
  else
  {
    v4 = v0;
    v5 = v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration;
    swift_beginAccess(v5, v14, 0, 0);
    v6 = *(_OWORD *)(v5 + 136);
    v7 = *(_OWORD *)(v5 + 168);
    v15[2] = *(_OWORD *)(v5 + 152);
    v15[3] = v7;
    v16 = *(_BYTE *)(v5 + 184);
    v15[0] = *(_OWORD *)(v5 + 120);
    v15[1] = v6;
    v8 = objc_allocWithZone((Class)type metadata accessor for SymbolButton.Label());
    sub_1003649C8((uint64_t)v15);
    v9 = sub_10035BA58((uint64_t)v15);
    v10 = *(void **)(v4 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_backgroundView);
    if ((objc_msgSend(v9, "isDescendantOfView:", v10) & 1) == 0)
      objc_msgSend(v10, "addSubview:", v9);
    v11 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v9;
    v3 = v9;

    v2 = 0;
  }
  v12 = v2;
  return v3;
}

void sub_1003587C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  uint64_t v16;
  char *v17;
  const UIEdgeInsets *v18;
  CGFloat *p_left;
  double v20;
  double top;
  _BYTE v23[24];

  v1 = type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  v3 = &v23[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_customView);
  if (v4)
  {
    v5 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_materialView);
    v6 = v4;
    v7 = objc_msgSend(v5, "contentView");
    objc_msgSend(v7, "bounds");
    v9 = v8;
    v11 = v10;
    v13 = v12;
    v15 = v14;

    v16 = v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration;
    swift_beginAccess(v16, v23, 0, 0);
    sub_100082248(v16, (uint64_t)v3, type metadata accessor for SymbolButton.Configuration);
    v17 = &v3[*(int *)(v1 + 40)];
    if (*(_QWORD *)v17)
      v18 = (const UIEdgeInsets *)(v17 + 8);
    else
      v18 = &UIEdgeInsetsZero;
    if (*(_QWORD *)v17)
      p_left = (CGFloat *)(v17 + 16);
    else
      p_left = &UIEdgeInsetsZero.left;
    v20 = *p_left;
    top = v18->top;
    sub_100006798((uint64_t)v3, type metadata accessor for SymbolButton.Configuration);
    objc_msgSend(v6, "setFrame:", sub_10019431C(v9, v11, v13, v15, top, v20));

  }
}

void sub_100358978()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  double v4;
  double MaxX;
  double v6;
  id v7;
  CGRect v8;
  CGRect v9;
  CGRect v10;

  v1 = *(void **)&v0[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView];
  if (v1)
  {
    v7 = v1;
    v2 = objc_msgSend(v0, "traitCollection");
    v3 = objc_msgSend(v2, "userInterfaceIdiom");

    if (v3 == (id)6)
      v4 = 12.0;
    else
      v4 = 8.0;
    objc_msgSend(v0, "bounds");
    MaxX = CGRectGetMaxX(v8);
    v9.origin.x = 0.0;
    v9.origin.y = 0.0;
    v9.size.width = v4;
    v9.size.height = v4;
    v6 = MaxX - CGRectGetWidth(v9) + 1.0;
    objc_msgSend(v0, "bounds");
    objc_msgSend(v7, "setFrame:", v6, CGRectGetMinY(v10) + -1.0, v4, v4);

  }
}

id sub_100358A88()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIFontMetrics), "defaultMetrics");
  qword_1004A1010 = (uint64_t)result;
  return result;
}

uint64_t sub_100358AC0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v11;
  int *v12;
  unsigned __int8 *v13;
  int v14;
  NSString *v15;
  UIContentSizeCategory v16;
  void *v17;
  NSString *v18;
  char v19;
  UIContentSizeCategory v20;
  void *v21;
  NSString *v22;
  char v23;
  void *v24;
  id v25;
  void *v26;
  uint64_t v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  void *v32;
  uint64_t v33;
  id v34;
  id v35;
  double v36;
  id v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  int v43;
  int v44;
  uint64_t v45;
  double v46;
  double v47;
  id v48;
  double v49;
  __n128 v50;
  double v51;
  char *v52;
  uint64_t v53;
  _OWORD *v54;
  _OWORD *v55;
  __int128 v56;
  uint64_t v57;
  __int128 v58;
  _OWORD *v59;
  uint64_t v60;
  _QWORD *v61;
  void *v62;
  double *v63;
  double v64;
  double v65;
  double v66;
  double v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  void *v78;
  double *v79;
  double v80;
  double v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  double v89;
  double v90;
  void *v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _OWORD *v97;
  uint64_t v98;
  id v99;
  uint64_t v101;
  _OWORD *v102;
  int v103;
  id v104;
  UIContentSizeCategory v105;
  uint64_t v106;
  uint64_t v107;
  id v108;

  sub_100005574(&qword_1004A1050);
  __chkstk_darwin();
  v107 = (uint64_t)&v101 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (int *)type metadata accessor for SymbolButton.Metrics(0);
  v8 = (uint64_t)a3 + v7[5];
  v9 = type metadata accessor for UIView.Corner(0);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56);
  v106 = v8;
  v10(v8, 1, 1, v9);
  v11 = (char *)a3 + v7[11];
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;
  v102 = v11;
  v11[16] = 1;
  v12 = (int *)type metadata accessor for SymbolButton.Configuration(0);
  v13 = (unsigned __int8 *)(a1 + v12[16]);
  v14 = *v13;
  v108 = a2;
  v103 = v14;
  if (v14 == 1)
  {
    v15 = (NSString *)objc_msgSend(a2, "preferredContentSizeCategory");
    v16 = v15;
    v17 = (void *)*((_QWORD *)v13 + 1);
    if (v17)
    {
      v18 = v15;
      v16 = v17;
      v19 = static UIContentSizeCategory.>= infix(_:_:)();
      if ((v19 & 1) != 0)
        v20 = v18;
      else
        v20 = v16;
      if ((v19 & 1) == 0)
        v16 = v18;

    }
    v21 = (void *)*((_QWORD *)v13 + 2);
    if (v21)
    {
      v22 = v21;
      v16 = v16;
      v23 = static UIContentSizeCategory.< infix(_:_:)(v22, v16);

      if ((v23 & 1) != 0)
      {

        v16 = v22;
      }
      else
      {

      }
    }
  }
  else
  {
    v16 = UIContentSizeCategoryLarge;
  }
  *((_BYTE *)a3 + v7[13]) = v13[24];
  v24 = (void *)objc_opt_self(UITraitCollection);
  v105 = v16;
  v25 = objc_msgSend(v24, "traitCollectionWithPreferredContentSizeCategory:", v16);
  *a3 = v25;
  v26 = (void *)objc_opt_self(UIFontDescriptor);
  v27 = *(_QWORD *)(a1 + 136);
  v101 = (uint64_t)v25;
  v28 = v25;
  v29 = objc_msgSend(v26, "preferredFontDescriptorWithTextStyle:compatibleWithTraitCollection:", v27, v28);
  v30 = (void *)objc_opt_self(UIFont);
  v104 = v29;
  objc_msgSend(v29, "pointSize");
  v31 = objc_msgSend(v30, "systemFontOfSize:weight:");
  v32 = v31;
  *(_QWORD *)((char *)a3 + v7[6]) = v31;
  if ((*(_BYTE *)(a1 + 40) & 1) != 0)
  {
    v33 = *(_QWORD *)(a1 + 24);
    v34 = v31;
    v35 = objc_msgSend(v26, "preferredFontDescriptorWithTextStyle:compatibleWithTraitCollection:", v33, v28);
    objc_msgSend(v35, "pointSize");
    v37 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:weight:scale:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), v36);

  }
  else
  {
    v38 = *(double *)(a1 + 32);
    v39 = *(_QWORD *)(a1 + 48);
    v40 = *(_QWORD *)(a1 + 56);
    v41 = (void *)objc_opt_self(UIImageSymbolConfiguration);
    v42 = v32;
    v37 = objc_msgSend(v41, "configurationWithPointSize:weight:scale:", v39, v40, v38);
  }
  *(_QWORD *)((char *)a3 + v7[7]) = v37;
  *(_QWORD *)((char *)a3 + v7[8]) = *(_QWORD *)(a1 + v12[12]);
  v43 = *(unsigned __int8 *)(a1 + 80);
  v44 = v103;
  if (v43 == 255)
  {
    *(UIOffset *)((char *)a3 + v7[9]) = UIOffsetZero;
    if (v44)
      goto LABEL_27;
LABEL_25:

    v54 = (_OWORD *)(a1 + v12[15]);
    v55 = (_OWORD *)((char *)a3 + v7[12]);
    v56 = v54[1];
    *v55 = *v54;
    v55[1] = v56;
    *(_OWORD *)((char *)a3 + v7[10]) = *(_OWORD *)(a1 + v12[13]);
    v57 = a1 + v12[14];
    LOBYTE(v55) = *(_BYTE *)(v57 + 16);
    v58 = *(_OWORD *)v57;
    v59 = v102;
    *v102 = v58;
    *((_BYTE *)v59 + 16) = (_BYTE)v55;
    v60 = v107;
    sub_100014A7C(a1 + v12[9], v107, &qword_1004A1050);
    goto LABEL_32;
  }
  v45 = *(_QWORD *)(a1 + 72);
  if ((v43 & 1) == 0)
  {
    v46 = *(double *)(a1 + 64);
    v47 = *(double *)(a1 + 72);
    v48 = objc_msgSend(v108, "displayScale");
    if (v49 > 1.0)
      v50.n128_f64[0] = v49;
    else
      v50.n128_f64[0] = 1.0;
    v51 = static UIOffset./ infix(_:_:)(v48, v46, v47, v50);
    v52 = (char *)a3 + v7[9];
    *(double *)v52 = v51;
    *((_QWORD *)v52 + 1) = v53;
    if (v44)
      goto LABEL_27;
    goto LABEL_25;
  }
  v61 = (_QWORD *)((char *)a3 + v7[9]);
  *v61 = *(_QWORD *)(a1 + 64);
  v61[1] = v45;
  if (!v44)
    goto LABEL_25;
LABEL_27:
  if (qword_100498D00 != -1)
    swift_once(&qword_100498D00, sub_100358A88);
  v62 = (void *)qword_1004A1010;
  v63 = (double *)(a1 + v12[15]);
  v64 = *v63;
  v65 = v63[1];
  v66 = v63[2];
  v67 = v63[3];
  v68 = v28;
  objc_msgSend(v62, "scaledValueForValue:compatibleWithTraitCollection:", v68, v64);
  v70 = v69;
  objc_msgSend(v62, "scaledValueForValue:compatibleWithTraitCollection:", v68, v65);
  v72 = v71;
  objc_msgSend(v62, "scaledValueForValue:compatibleWithTraitCollection:", v68, v66);
  v74 = v73;
  objc_msgSend(v62, "scaledValueForValue:compatibleWithTraitCollection:", v68, v67);
  v76 = v75;

  v77 = (_QWORD *)((char *)a3 + v7[12]);
  *v77 = v70;
  v77[1] = v72;
  v77[2] = v74;
  v77[3] = v76;
  v78 = (void *)qword_1004A1010;
  v79 = (double *)(a1 + v12[13]);
  v80 = *v79;
  v81 = v79[1];
  v82 = v68;
  objc_msgSend(v78, "scaledValueForValue:compatibleWithTraitCollection:", v82, v80);
  v84 = v83;
  objc_msgSend(v78, "scaledValueForValue:compatibleWithTraitCollection:", v82, v81);
  v86 = v85;

  v87 = (_QWORD *)((char *)a3 + v7[10]);
  *v87 = v84;
  v87[1] = v86;
  v88 = a1 + v12[14];
  if ((*(_BYTE *)(v88 + 16) & 1) == 0)
  {
    v90 = *(double *)v88;
    v89 = *(double *)(v88 + 8);
    v91 = (void *)qword_1004A1010;
    v92 = v82;
    objc_msgSend(v91, "scaledValueForValue:compatibleWithTraitCollection:", v92, v90);
    v94 = v93;
    objc_msgSend(v91, "scaledValueForValue:compatibleWithTraitCollection:", v92, v89);
    v96 = v95;

    v97 = v102;
    *(_QWORD *)v102 = v94;
    *((_QWORD *)v97 + 1) = v96;
    *((_BYTE *)v97 + 16) = 0;
  }
  v98 = a1 + v12[9];
  v99 = v82;
  v60 = v107;
  sub_10035910C(v98, v101, v107);

LABEL_32:
  sub_100006798(a1, type metadata accessor for SymbolButton.Configuration);
  return sub_100129EBC(v60, v106, &qword_1004A1050);
}

uint64_t sub_10035910C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  id v24[2];
  uint64_t v25;
  uint64_t v26;

  v25 = a2;
  v26 = a3;
  v4 = type metadata accessor for UIView.Corner.Radius(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v9 = (char *)v24 - v8;
  sub_100005574(&qword_1004A1050);
  __chkstk_darwin();
  v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for UIView.Corner(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin();
  v15 = (char *)v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100014A7C(a1, (uint64_t)v11, &qword_1004A1050);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_100008758((uint64_t)v11, &qword_1004A1050);
  }
  else
  {
    v16 = (*(uint64_t (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    UIView.Corner.radius.getter(v16);
    v17 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v9, v4);
    if ((_DWORD)v17 == enum case for UIView.Corner.Radius.value(_:))
    {
      v18 = v17;
      (*(void (**)(char *, uint64_t))(v5 + 96))(v9, v4);
      v19 = *(double *)v9;
      v20 = v9[8];
      v21 = v26;
      (*(void (**)(uint64_t, char *, uint64_t))(v13 + 16))(v26, v15, v12);
      objc_msgSend(v24[1], "scaledValueForValue:compatibleWithTraitCollection:", v25, v19);
      *(_QWORD *)v7 = v22;
      v7[8] = v20;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 104))(v7, v18, v4);
      UIView.Corner.radius.setter(v7);
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(v21, 0, 1, v12);
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
  }
  return sub_100014A7C(a1, v26, &qword_1004A1050);
}

uint64_t sub_100359380@<X0>(_QWORD *a1@<X8>)
{
  char *v1;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v15[24];
  _BYTE v16[24];
  _BYTE v17[24];

  type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_100005574(&qword_1004A1520);
  __chkstk_darwin();
  v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin();
  v8 = &v15[-v7 - 8];
  v9 = (uint64_t)&v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___metrics];
  swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___metrics], v17, 0, 0);
  sub_100014A7C(v9, (uint64_t)v8, &qword_1004A1520);
  v10 = type metadata accessor for SymbolButton.Metrics(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    return sub_1000648AC((uint64_t)v8, (uint64_t)a1, type metadata accessor for SymbolButton.Metrics);
  sub_100008758((uint64_t)v8, &qword_1004A1520);
  v12 = (uint64_t)&v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration];
  swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration], v16, 0, 0);
  sub_100082248(v12, (uint64_t)v4, type metadata accessor for SymbolButton.Configuration);
  sub_100358AC0((uint64_t)v4, objc_msgSend(v1, "traitCollection"), a1);
  sub_100082248((uint64_t)a1, (uint64_t)v6, type metadata accessor for SymbolButton.Metrics);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
  swift_beginAccess(v9, v15, 33, 0);
  sub_100129EBC((uint64_t)v6, v9, &qword_1004A1520);
  return swift_endAccess(v15);
}

uint64_t sub_10035958C(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void **v8;
  uint64_t v9;
  void **v10;
  uint64_t v11;
  char v12;
  _BYTE v15[24];

  sub_100005574(&qword_1004A1520);
  __chkstk_darwin();
  v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for SymbolButton.Metrics(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin();
  v8 = (void **)&v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin();
  v10 = (void **)&v15[-v9 - 8];
  sub_100359380(&v15[-v9 - 8]);
  sub_100082248(a1, (uint64_t)v4, type metadata accessor for SymbolButton.Metrics);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  v11 = (uint64_t)&v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___metrics];
  swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___metrics], v15, 33, 0);
  sub_100129EBC((uint64_t)v4, v11, &qword_1004A1520);
  swift_endAccess(v15);
  sub_100359380(v8);
  v12 = sub_10035E7C8(v8, v10);
  sub_100006798((uint64_t)v8, type metadata accessor for SymbolButton.Metrics);
  if ((v12 & 1) == 0)
  {
    sub_100359380(v8);
    sub_10035A2F8((uint64_t)v8);
    sub_100006798((uint64_t)v8, type metadata accessor for SymbolButton.Metrics);
    objc_msgSend(v1, "invalidateIntrinsicContentSize");
    objc_msgSend(v1, "setNeedsLayout");
  }
  sub_100006798(a1, type metadata accessor for SymbolButton.Metrics);
  return sub_100006798((uint64_t)v10, type metadata accessor for SymbolButton.Metrics);
}

void sub_100359758(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  id v18;
  id v19;
  char *v20;
  char *v21;
  char *v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  uint64_t v29;
  void *v30;
  double v31;
  void *v32;
  uint64_t v33;
  id v34;
  id v35;
  NSString v36;
  int *v37;
  id v38;
  id v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  id v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  NSString v47;
  uint64_t v48;
  void *v49;
  char **v50;
  uint64_t v51;
  char *v52;
  void *v53;
  void *v54;
  void *v55;
  id v56;
  char *v57;
  uint64_t v58;
  double v59;
  uint64_t v60;
  void *v61;
  id v62;
  id v63;
  char *v64;
  char *v65;
  char v66;
  char *v67;
  id v68;
  id v69;
  char *v70;
  void *v71;
  char *v72;
  char *v73;
  char *v74;
  void *v75;
  id v76;
  void *v77;
  char *v78;
  id v79;
  id v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  _BYTE v93[56];
  _OWORD v94[4];
  char v95;
  _OWORD v96[7];
  uint64_t v97;
  _BYTE v98[48];
  _BYTE v99[16];
  uint64_t v100;
  unint64_t v101;

  type metadata accessor for SymbolButton.Metrics(0);
  __chkstk_darwin();
  v87 = (uint64_t *)((char *)&v84 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v88 = type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  v86 = (uint64_t)&v84 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v7 = (char *)&v84 - v6;
  if (qword_100498918 != -1)
    swift_once(&qword_100498918, sub_10024C274);
  v8 = type metadata accessor for Logger(0, v5);
  sub_1000086B4(v8, (uint64_t)qword_1004A31D8);
  sub_100082248(a1, (uint64_t)v7, type metadata accessor for SymbolButton.Configuration);
  v9 = v1;
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc(22, -1);
    v13 = (char *)swift_slowAlloc(64, -1);
    *(_QWORD *)&v96[0] = v13;
    *(_DWORD *)v12 = 136446466;
    v14 = &v9[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_debugLabel];
    swift_beginAccess(&v9[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_debugLabel], &v91, 0, 0);
    v15 = (char *)*((_QWORD *)v14 + 1);
    if (v15)
    {
      v16 = *(char **)v14;
      v17 = v15;
    }
    else
    {
      v89 = v9;
      v18 = objc_msgSend(v89, "description");
      v90 = v13;
      v19 = v18;
      v16 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
      v17 = v20;

      v13 = v90;
    }
    swift_bridgeObjectRetain();
    *(_QWORD *)(v12 + 4) = sub_100249A1C(v16, v17, (uint64_t *)v96);
    swift_bridgeObjectRelease();

    *(_WORD *)(v12 + 12) = 2082;
    v21 = (char *)SymbolButton.Configuration.description.getter();
    *(_QWORD *)(v12 + 14) = sub_100249A1C(v21, v22, (uint64_t *)v96);
    swift_bridgeObjectRelease();
    sub_100006798((uint64_t)v7, type metadata accessor for SymbolButton.Configuration);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "[%{public}s] Applying configuration=%{public}s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy(v13, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);
  }
  else
  {

    sub_100006798((uint64_t)v7, type metadata accessor for SymbolButton.Configuration);
  }

  v23 = *(void **)&v9[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_materialView];
  sub_1000149A8(a1 + 224, (uint64_t)v98, &qword_1004A10D0);
  sub_10035AF88((uint64_t)v98);
  v85 = v23;
  v24 = objc_msgSend(v23, "contentView");
  v25 = *(_QWORD *)(a1 + 272);
  v26 = *(_QWORD *)(a1 + 280);
  v27 = *(void **)(a1 + 288);
  v28 = v27;
  UIView.border.setter(v25, v26, v27);

  v89 = *(char **)&v9[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_backgroundView];
  v90 = v9;
  v29 = *(_QWORD *)(a1 + 192);
  v30 = *(void **)(a1 + 200);
  if (v30 == (void *)1)
  {
    if (qword_100498CF8 != -1)
      swift_once(&qword_100498CF8, sub_100355D50);
    swift_beginAccess(&static SymbolButton.Background.clear, &v92, 0, 0);
    v31 = *(double *)&static SymbolButton.Background.clear;
    v32 = (void *)qword_1004A4078;
    v33 = qword_1004A4088;
    swift_bridgeObjectRetain();
    v34 = v32;
  }
  else
  {
    v31 = *(double *)(a1 + 192);
    v33 = *(_QWORD *)(a1 + 216);
    v32 = *(void **)(a1 + 200);
  }
  sub_1003609B8(v29, v30);
  v35 = objc_msgSend(v89, "layer");
  if (v33)
    v36 = String._bridgeToObjectiveC()();
  else
    v36 = 0;
  v37 = (int *)v88;
  objc_msgSend(v35, "setCompositingFilter:", v36);
  swift_unknownObjectRelease(v36);

  v38 = v32;
  sub_10035B55C(v32, v31);

  swift_bridgeObjectRelease();
  v39 = sub_100358560();
  v40 = *(_OWORD *)(a1 + 80);
  v96[4] = *(_OWORD *)(a1 + 64);
  v96[5] = v40;
  v96[6] = *(_OWORD *)(a1 + 96);
  v97 = *(_QWORD *)(a1 + 112);
  v41 = *(_OWORD *)(a1 + 16);
  v96[0] = *(_OWORD *)a1;
  v96[1] = v41;
  v42 = *(_OWORD *)(a1 + 48);
  v96[2] = *(_OWORD *)(a1 + 32);
  v96[3] = v42;
  sub_10035B878((uint64_t)v96);

  v43 = sub_1003586C4();
  v44 = *(_OWORD *)(a1 + 136);
  v45 = *(_OWORD *)(a1 + 168);
  v94[2] = *(_OWORD *)(a1 + 152);
  v94[3] = v45;
  v95 = *(_BYTE *)(a1 + 184);
  v94[0] = *(_OWORD *)(a1 + 120);
  v94[1] = v44;
  sub_1000149A8((uint64_t)v94, (uint64_t)v99, &qword_1004A10E0);
  sub_10035BBD8((uint64_t)v94);

  sub_1000149A8((uint64_t)v99, (uint64_t)&v100, &qword_1004A10E0);
  if (v101)
  {
    v46 = HIBYTE(v101) & 0xF;
    if ((v101 & 0x2000000000000000) == 0)
      v46 = v100 & 0xFFFFFFFFFFFFLL;
    if (v46)
    {
      v47 = String._bridgeToObjectiveC()();
      objc_msgSend(v90, "setAccessibilityLabel:", v47);

    }
  }
  v48 = a1 + v37[11];
  v49 = *(void **)(v48 + 16);
  v50 = &selRef_borderWidth;
  if (v49 != (void *)1)
  {
    v57 = *(char **)v48;
    v58 = *(_QWORD *)(v48 + 8);
    v59 = *(double *)&v58;
    v60 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView;
    v52 = v90;
    v61 = *(void **)&v90[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView];
    v89 = v57;
    v84 = v58;
    if (v61)
    {
      v62 = v61;
      v63 = v49;
      v64 = (char *)v62;
      v65 = v64;
    }
    else
    {
      v68 = objc_allocWithZone((Class)type metadata accessor for SymbolButton.BadgeView());
      sub_1003609EC((uint64_t)v57, v58, v49);
      v69 = v49;
      v67 = sub_10035BD60(v49, *(double *)&v57, *(double *)&v58);
      v64 = *(char **)&v52[v60];
      *(_QWORD *)&v52[v60] = v67;
      v70 = v67;
      if (!v67)
      {
        if (!v64)
        {
LABEL_36:

          v73 = *(char **)&v52[v60];
          if (v73)
          {
            v50 = &selRef_borderWidth;
            if (v49)
            {
              v74 = v73;
              v75 = v49;
              v76 = v49;
            }
            else
            {
              v77 = (void *)objc_opt_self(UIColor);
              v78 = v73;
              v76 = objc_msgSend(v77, "tintColor");
              v75 = 0;
            }
            v79 = v75;
            objc_msgSend(v73, "setBackgroundColor:", v76);

            objc_msgSend(v73, "setAlpha:", v59);
            objc_msgSend(*(id *)&v73[OBJC_IVAR____TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A939BadgeView_punchOutView], "setAlpha:", v59);
            sub_10035C230();
            sub_10024DEB0((uint64_t)v89, v84, v49);

          }
          else
          {
            sub_10024DEB0((uint64_t)v89, v84, v49);
            v50 = &selRef_borderWidth;
          }
          goto LABEL_42;
        }
        v65 = 0;
LABEL_30:
        objc_msgSend(v64, "removeFromSuperview", v84);
        v67 = *(char **)&v52[v60];
        if (!v67)
          goto LABEL_35;
        goto LABEL_34;
      }
      v65 = v70;
      if (!v64)
      {
LABEL_34:
        v71 = *(void **)&v52[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_containerView];
        v72 = v67;
        objc_msgSend(v71, "insertSubview:aboveSubview:", v72, v85);
        sub_100358978();

        v37 = (int *)v88;
        goto LABEL_35;
      }
    }
    type metadata accessor for SymbolButton.BadgeView();
    v64 = v64;
    v65 = v65;
    v66 = static NSObject.== infix(_:_:)(v65, v64);

    if ((v66 & 1) != 0)
    {
LABEL_35:

      goto LABEL_36;
    }
    goto LABEL_30;
  }
  v51 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView;
  v52 = v90;
  v53 = *(void **)&v90[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView];
  *(_QWORD *)&v90[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView] = 0;
  if (v53)
  {
    objc_msgSend(v53, "removeFromSuperview");
    v54 = *(void **)&v52[v51];
    if (v54)
    {
      v55 = *(void **)&v52[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_containerView];
      v56 = v54;
      objc_msgSend(v55, "insertSubview:aboveSubview:", v56, v85);
      sub_100358978();

    }
  }
LABEL_42:
  sub_1000149A8(a1 + v37[10], (uint64_t)v93, &qword_1004A10C8);
  sub_10035A154((uint64_t)v93);
  objc_msgSend(v52, v50[426], *(double *)(a1 + v37[17]));
  objc_msgSend(v52, "setTintColor:", *(_QWORD *)(a1 + v37[18]));
  v80 = objc_msgSend(v52, "traitCollection");
  v81 = v87;
  sub_100359380(v87);
  sub_100006798((uint64_t)v81, type metadata accessor for SymbolButton.Metrics);
  v82 = a1;
  v83 = v86;
  sub_100082248(v82, v86, type metadata accessor for SymbolButton.Configuration);
  sub_100358AC0(v83, v80, v81);
  sub_10035958C((uint64_t)v81);
  sub_100359380(v81);
  sub_10035A448((uint64_t)v81);
  sub_100006798((uint64_t)v81, type metadata accessor for SymbolButton.Metrics);
  sub_10035A00C();
}

void sub_10035A00C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  NSString v6;
  _BYTE v8[24];

  type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  v2 = &v8[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v3 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_materialView);
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_pendingAnimatedChangesCount))
  {
    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_materialView), "_setGroupName:", 0);
    return;
  }
  v4 = v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration;
  swift_beginAccess(v4, v8, 0, 0);
  sub_100082248(v4, (uint64_t)v2, type metadata accessor for SymbolButton.Configuration);
  if (*((_QWORD *)v2 + 28) == 1)
  {
    sub_100006798((uint64_t)v2, type metadata accessor for SymbolButton.Configuration);
LABEL_7:
    v6 = 0;
    goto LABEL_8;
  }
  v5 = *((_QWORD *)v2 + 33);
  swift_bridgeObjectRetain();
  sub_100006798((uint64_t)v2, type metadata accessor for SymbolButton.Configuration);
  if (!v5)
    goto LABEL_7;
  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
LABEL_8:
  objc_msgSend(v3, "_setGroupName:", v6);

}

void sub_10035A154(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  char v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  double v14;
  void *v15;
  uint64_t v16;
  _QWORD v17[7];
  _QWORD v18[7];
  id v19[7];
  id v20[7];

  v2 = v1;
  v4 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_customView;
  v5 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_customView);
  sub_1000149A8(a1, (uint64_t)v20, &qword_1004A10C8);
  if (!v20[0])
  {
    if (!v5)
      goto LABEL_14;
LABEL_4:
    v10 = *(void **)(v2 + v4);
    if (!v10)
      goto LABEL_11;
LABEL_9:
    if (objc_msgSend(v10, "isDescendantOfView:", v2))
      objc_msgSend(*(id *)(v2 + v4), "removeFromSuperview");
    goto LABEL_11;
  }
  v6 = v20[0];
  v7 = v6;
  if (v5)
  {
    sub_1000087DC(0, (unint64_t *)&qword_10049D970, UIView_ptr);
    v8 = v5;
    v9 = static NSObject.== infix(_:_:)(v8, v7);

    if ((v9 & 1) != 0)
      goto LABEL_14;
    goto LABEL_4;
  }

  v10 = *(void **)(v1 + v4);
  if (v10)
    goto LABEL_9;
LABEL_11:
  sub_1000149A8(a1, (uint64_t)v19, &qword_1004A10C8);
  v11 = v19[0];
  if (v19[0])
    v12 = v19[0];
  sub_10035F808(v11);

LABEL_14:
  v13 = *(void **)(v2 + v4);
  if (v13)
  {
    sub_1000149A8(a1, (uint64_t)v18, &qword_1004A10C8);
    v14 = *(double *)&v18[5];
    if (!v18[0])
      v14 = 1.0;
    objc_msgSend(v13, "setAlpha:", v14);
    v15 = *(void **)(v2 + v4);
    if (v15)
    {
      sub_1000149A8(a1, (uint64_t)v17, &qword_1004A10C8);
      if (v17[0])
        v16 = v17[6];
      else
        v16 = 0;
      objc_msgSend(v15, "setTintColor:", v16);
    }
  }
}

id sub_10035A2F8(uint64_t a1)
{
  void *v1;
  int *v3;
  uint64_t v4;
  _QWORD *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  uint64_t v11;

  v3 = (int *)type metadata accessor for SymbolButton.Metrics(0);
  __chkstk_darwin();
  v5 = (uint64_t *)((char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_100358560();
  sub_100359380(v5);
  v7 = *(id *)((char *)v5 + v3[7]);
  sub_100006798((uint64_t)v5, type metadata accessor for SymbolButton.Metrics);
  objc_msgSend(v6, "setPreferredSymbolConfiguration:", v7);

  v8 = sub_1003586C4();
  sub_100359380(v5);
  v9 = *(id *)((char *)v5 + v3[6]);
  sub_100006798((uint64_t)v5, type metadata accessor for SymbolButton.Metrics);
  objc_msgSend(v8, "setFont:", v9);

  sub_100359380(v5);
  sub_10035A448((uint64_t)v5);
  sub_100006798((uint64_t)v5, type metadata accessor for SymbolButton.Metrics);
  objc_msgSend(v1, "setShowsLargeContentViewer:", *(unsigned __int8 *)(a1 + v3[13]));
  return objc_msgSend(v1, "setScalesLargeContentImage:", 1);
}

uint64_t sub_10035A448(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  id v11;
  unsigned int v12;
  uint64_t v13;
  int v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjCClassFromMetadata;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char **v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char **v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  _BYTE v49[24];

  v2 = v1;
  sub_100005574(&qword_1004A1050);
  __chkstk_darwin();
  v48 = (uint64_t)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v6 = (char *)&v44 - v5;
  __chkstk_darwin();
  v8 = (char *)&v44 - v7;
  v9 = *(void **)(v2 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_materialView);
  v10 = a1 + *(int *)(type metadata accessor for SymbolButton.Metrics(0) + 20);
  sub_100014A7C(v10, (uint64_t)v8, &qword_1004A1050);
  UIView.corner.setter(v8);
  sub_100014A7C(v10, (uint64_t)v8, &qword_1004A1050);
  UIView.corner.setter(v8);
  v11 = objc_msgSend(v9, "contentView");
  v12 = objc_msgSend(v11, "clipsToBounds");

  if (v12)
  {
    sub_100014A7C(v10, (uint64_t)v6, &qword_1004A1050);
    v13 = type metadata accessor for UIView.Corner(0);
    v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v6, 1, v13);
    sub_100008758((uint64_t)v6, &qword_1004A1050);
    if (v14 != 1)
    {
      v15 = objc_msgSend(v9, "contentView");
      objc_msgSend(v15, "setClipsToBounds:", 0);

    }
  }
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_isClippingInvalidated) == 1)
  {
    v45 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_isClippingInvalidated;
    objc_msgSend(v9, "_setAllowsGroupFiltering:", 1);
    v16 = objc_msgSend(v9, "contentView");
    v17 = objc_msgSend(v16, "subviews");

    v18 = sub_1000087DC(0, (unint64_t *)&qword_10049D970, UIView_ptr);
    v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v17, v18);

    v46 = v2;
    if ((unint64_t)v19 >> 62)
      goto LABEL_20;
    v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v20; v20 = _CocoaArrayWrapper.endIndex.getter(v42))
    {
      type metadata accessor for SymbolButton.Label();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      v22 = v46 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration;
      v23 = v19 & 0xC000000000000001;
      swift_beginAccess(v46 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration, v49, 0, 0);
      v24 = 4;
      v25 = &selRef_borderWidth;
      v47 = v19 & 0xC000000000000001;
      v26 = 0;
      if ((v19 & 0xC000000000000001) != 0)
      {
LABEL_8:
        v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v26, v19);
        goto LABEL_10;
      }
      while (1)
      {
        v27 = *(id *)(v19 + 8 * v24);
LABEL_10:
        v28 = v27;
        v29 = v26 + 1;
        if (__OFADD__(v26, 1))
          break;
        if (!objc_msgSend(v27, v25[342], ObjCClassFromMetadata))
        {
          v30 = type metadata accessor for SymbolButton.Configuration(0);
          v31 = *(unsigned __int8 *)(v22 + *(int *)(v30 + 76));
          if (v31 == 2)
          {
            v32 = v22 + *(int *)(v30 + 36);
            v33 = ObjCClassFromMetadata;
            v34 = v19;
            v35 = v20;
            v36 = v22;
            v37 = v25;
            v38 = v48;
            sub_100014A7C(v32, v48, &qword_1004A1050);
            v39 = type metadata accessor for UIView.Corner(0);
            v40 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 48))(v38, 1, v39) != 1;
            v41 = v38;
            v25 = v37;
            v22 = v36;
            v20 = v35;
            v19 = v34;
            ObjCClassFromMetadata = v33;
            v23 = v47;
            sub_100008758(v41, &qword_1004A1050);
          }
          else
          {
            v40 = v31 & 1;
          }
          objc_msgSend(v28, "setClipsToBounds:", v40);
        }

        if (v29 == v20)
          goto LABEL_24;
        v26 = ++v24 - 4;
        if (v23)
          goto LABEL_8;
      }
      __break(1u);
LABEL_20:
      if (v19 < 0)
        v42 = v19;
      else
        v42 = v19 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
    }
LABEL_24:
    swift_bridgeObjectRelease_n(v19, 2);
    *(_BYTE *)(v46 + v45) = 0;
  }
  return sub_10035A858();
}

uint64_t sub_10035A858()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  double v26;
  char *v28;
  id v29;
  double v30;
  double v31;
  CACornerMask v32;
  char *v33;
  __C::UIRectCorner v34;
  uint64_t v35;
  void *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char **v40;
  void *v41;
  id v42;
  uint64_t v43;
  char *v44;
  __int128 v45;
  uint64_t v46;
  _QWORD v47[3];
  uint64_t v48;
  void *v49;
  _OWORD v50[2];
  uint64_t v51;

  v1 = v0;
  v2 = type metadata accessor for UIView.Corner.Radius(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin();
  v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v10 = (char *)&v37 - v9;
  sub_100005574(&qword_1004A1548);
  __chkstk_darwin();
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = 0;
  memset(v50, 0, sizeof(v50));
  v13 = objc_msgSend(v0, "traitCollection");
  v14 = objc_msgSend(v13, "userInterfaceIdiom");

  if (v14 == (id)6)
  {
    v48 = type metadata accessor for UIHoverHighlightEffect(0);
    v49 = &protocol witness table for UIHoverHighlightEffect;
    sub_1000207D4(v47);
    static UIHoverEffect<>.highlight.getter();
  }
  else
  {
    v48 = type metadata accessor for UIHoverLiftEffect(0);
    v49 = &protocol witness table for UIHoverLiftEffect;
    sub_1000207D4(v47);
    static UIHoverEffect<>.lift.getter();
  }
  sub_100008758((uint64_t)v50, &qword_1004A1550);
  sub_1000149A8((uint64_t)v47, (uint64_t)v50, &qword_1004A1550);
  sub_100014A7C((uint64_t)v50, (uint64_t)&v45, &qword_1004A1550);
  if (v46)
  {
    v37 = v5;
    v38 = v3;
    v39 = v2;
    v44 = v12;
    sub_1000137C8(&v45, (uint64_t)v47);
    v15 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_containerView];
    v16 = v48;
    v41 = v49;
    v42 = v15;
    sub_10000ABC8(v47, v48);
    v40 = &v37;
    __chkstk_darwin();
    v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v19 + 16))(v18);
    v20 = (uint64_t)&v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration];
    swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration], &v45, 0, 0);
    sub_100082248(v20, (uint64_t)v10, type metadata accessor for SymbolButton.Configuration);
    v43 = v6;
    v21 = &v10[*(int *)(v6 + 36)];
    v22 = type metadata accessor for UIView.Corner(0);
    v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48);
    v24 = v23(v21, 1, v22);
    if ((_DWORD)v24)
    {
      v25 = sub_100006798((uint64_t)v10, type metadata accessor for SymbolButton.Configuration);
      v26 = static UIPointerShape.defaultCornerRadius.getter(v25);
    }
    else
    {
      v28 = v37;
      UIView.Corner.radius.getter(v24);
      sub_100006798((uint64_t)v10, type metadata accessor for SymbolButton.Configuration);
      v29 = objc_msgSend(v1, "bounds");
      v26 = UIView.Corner.Radius.value(in:)(v29, v30, v31);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v28, v39);
    }
    sub_100082248(v20, (uint64_t)v8, type metadata accessor for SymbolButton.Configuration);
    if (v23(&v8[*(int *)(v43 + 36)], 1, v22))
      v32 = 0;
    else
      v32 = UIView.Corner.mask.getter();
    v33 = v44;
    sub_1000087DC(0, &qword_1004A1558, UIHoverStyle_ptr);
    sub_100006798((uint64_t)v8, type metadata accessor for SymbolButton.Configuration);
    v34.rawValue = UIRectCorner.init(_:)(v32).rawValue;
    static UIShape.rect(cornerRadius:cornerCurve:maskedCorners:)(2, v34.rawValue, v26);
    v35 = type metadata accessor for UIShape(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v33, 0, 1, v35);
    v36 = (void *)UIHoverStyle.init<A>(effect:shape:)(v18, v33, v16, v41);
    objc_msgSend(v42, "setHoverStyle:", v36);

    sub_100008758((uint64_t)v50, &qword_1004A1550);
    return sub_10000682C(v47);
  }
  else
  {
    sub_100008758((uint64_t)&v45, &qword_1004A1550);
    objc_msgSend(v1, "setHoverStyle:", 0);
    return sub_100008758((uint64_t)v50, &qword_1004A1550);
  }
}

void SymbolButton.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer("MusicCoreUI.SymbolButton", 24, "init(frame:)", 12, 0);
  __break(1u);
}

id SymbolButton.__deallocating_deinit()
{
  return sub_10029A7E0(type metadata accessor for SymbolButton);
}

void sub_10035AF88(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v4;
  void *v5;
  void *v6;
  Class v7;
  NSArray v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  Class isa;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  Class v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  _BYTE v27[8];
  void *v28;
  void *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  void *v33;
  unint64_t v34[6];

  v2 = v1;
  sub_1000149A8(a1, (uint64_t)v27, &qword_1004A10D0);
  v5 = v28;
  v4 = v29;
  objc_msgSend(v1, "setEffect:", 0);
  sub_1000149A8(a1, (uint64_t)v34, &qword_1004A10D0);
  v6 = (void *)v34[0];
  if (v34[0] >= 2)
  {
    v9 = sub_100005574(&qword_100499F50);
    v10 = swift_allocObject(v9, 40, 7);
    *(_OWORD *)(v10 + 16) = xmmword_100384730;
    *(_QWORD *)(v10 + 32) = v6;
    v32 = v10;
    specialized Array._endMutation()(v10);
    sub_1000087DC(0, &qword_1004A1560, UIVisualEffect_ptr);
    v11 = v6;
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v1, "setBackgroundEffects:", isa);

    if (!v5)
      goto LABEL_4;
    goto LABEL_8;
  }
  sub_1000087DC(0, &qword_1004A1560, UIVisualEffect_ptr);
  v7 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v2, "setBackgroundEffects:", v7);

  sub_1000149A8(a1, (uint64_t)&v32, &qword_1004A10D0);
  if (v32 != 1)
  {
    v5 = v33;
    if (!v33)
    {
LABEL_4:
      sub_1000149A8(a1, (uint64_t)&v30, &qword_1004A10D0);
      if (v30 == 1)
        goto LABEL_6;
      v4 = v31;
      if (!v31)
        goto LABEL_6;
LABEL_11:
      v22 = sub_100005574(&qword_100499F50);
      v23 = swift_allocObject(v22, 40, 7);
      *(_OWORD *)(v23 + 16) = xmmword_100384730;
      *(_QWORD *)(v23 + 32) = v4;
      specialized Array._endMutation()(v23);
      sub_1000087DC(0, &qword_1004A1560, UIVisualEffect_ptr);
      v24 = v4;
      v8.super.isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      objc_msgSend(v2, "setContentEffects:", v8.super.isa);

      goto LABEL_12;
    }
LABEL_8:
    v13 = v5;
    v14 = objc_msgSend(v2, "backgroundEffects");
    v15 = sub_1000087DC(0, &qword_1004A1560, UIVisualEffect_ptr);
    v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v14, v15);

    v30 = v16;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v17);
    v19 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v18 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v19 >= v18 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v18 > 1, v19 + 1, 1);
    v20 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v13);
    specialized Array._endMutation()(v20);
    v21 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    objc_msgSend(v2, "setBackgroundEffects:", v21);

    if (!v4)
      goto LABEL_6;
    goto LABEL_11;
  }
LABEL_6:
  sub_1000087DC(0, &qword_1004A1560, UIVisualEffect_ptr);
  v8.super.isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v2, "setContentEffects:", v8.super.isa);
LABEL_12:

  v25 = objc_msgSend(v2, "contentView");
  v26 = objc_msgSend(v25, "layer");

  objc_msgSend(v26, "setAllowsGroupBlending:", 0);
}

id sub_10035B368()
{
  return sub_10029A7E0((uint64_t (*)(_QWORD))type metadata accessor for SymbolButton.MaterialView);
}

id sub_10035B374(void *a1, double a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  char *v8;
  id v9;
  id v10;
  NSString v11;
  id v12;
  objc_super v14;

  v8 = &v4[OBJC_IVAR____TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A9314BackgroundView_configuration];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0x3FF0000000000000;
  v14.receiver = v4;
  v14.super_class = (Class)type metadata accessor for SymbolButton.BackgroundView();
  v9 = objc_msgSendSuper2(&v14, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v10 = objc_msgSend(v9, "layer");
  if (a4)
    v11 = String._bridgeToObjectiveC()();
  else
    v11 = 0;
  objc_msgSend(v10, "setCompositingFilter:", v11);
  swift_unknownObjectRelease(v11);

  v12 = a1;
  sub_10035B55C(a1, a2);
  sub_10035B63C();

  swift_bridgeObjectRelease();
  return v9;
}

void sub_10035B55C(void *a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  void *v7;
  double v8;
  id v9;
  id v10;
  char v11;
  id v12;
  id v13;

  v3 = v2;
  v6 = v3
     + OBJC_IVAR____TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A9314BackgroundView_configuration;
  v7 = *(void **)(v3
                + OBJC_IVAR____TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A9314BackgroundView_configuration);
  v8 = *(double *)(v3
                 + OBJC_IVAR____TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A9314BackgroundView_configuration
                 + 8);
  *(_QWORD *)v6 = a1;
  *(double *)(v6 + 8) = a2;
  v13 = v7;
  if (a1)
  {
    if (!v7)
      goto LABEL_8;
    sub_1000087DC(0, (unint64_t *)&qword_1004A1510, UIColor_ptr);
    v9 = v13;
    v10 = a1;
    v11 = static NSObject.== infix(_:_:)(v10, v9);

    if ((v11 & 1) == 0)
      goto LABEL_8;
  }
  else if (v7)
  {
    v12 = v7;
LABEL_8:
    sub_10035B63C();
    goto LABEL_9;
  }
  if (v8 != a2)
    goto LABEL_8;
LABEL_9:

}

void sub_10035B63C()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  _QWORD v11[5];
  uint64_t v12;

  v1 = &v0[OBJC_IVAR____TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A9314BackgroundView_configuration];
  v2 = *(void **)&v0[OBJC_IVAR____TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A9314BackgroundView_configuration];
  if (v2)
    v3 = *(id *)&v0[OBJC_IVAR____TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A9314BackgroundView_configuration];
  else
    v3 = objc_msgSend((id)objc_opt_self(UIColor), "tintColor");
  v4 = *((_QWORD *)v1 + 1);
  v5 = swift_allocObject(&unk_100466908, 32, 7);
  *(_QWORD *)(v5 + 16) = v3;
  *(_QWORD *)(v5 + 24) = v4;
  v6 = objc_allocWithZone((Class)UIColor);
  v11[4] = sub_10036494C;
  v12 = v5;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_100234A18;
  v11[3] = &unk_100466920;
  v7 = _Block_copy(v11);
  v8 = v2;
  v9 = v3;
  v10 = objc_msgSend(v6, "initWithDynamicProvider:", v7);
  _Block_release(v7);
  objc_msgSend(v0, "setBackgroundColor:", v10, swift_release(v12).n128_f64[0]);

}

id sub_10035B778(uint64_t a1, id a2, double a3)
{
  id v4;
  double v5;
  id v6;

  v4 = objc_msgSend(a2, "resolvedColorWithTraitCollection:", a1);
  objc_msgSend(v4, "alphaComponent");
  v6 = objc_msgSend(v4, "colorWithAlphaComponent:", v5 * a3);

  return v6;
}

id sub_10035B804()
{
  return sub_10029A7E0((uint64_t (*)(_QWORD))type metadata accessor for SymbolButton.BackgroundView);
}

id sub_10035B878(uint64_t a1)
{
  void *v1;
  void *v2;
  id v4;
  id v5;
  NSString v6;
  id v7;
  _BYTE v9[16];
  _QWORD v10[2];

  v2 = v1;
  v4 = sub_100352C2C();
  objc_msgSend(v2, "setImage:", v4);

  v5 = objc_msgSend(v2, "layer");
  sub_1000149A8(a1 + 88, (uint64_t)v9, &qword_1004A10E0);
  sub_1000149A8((uint64_t)v9, (uint64_t)v10, &qword_1004A10E0);
  if (v10[1])
    v6 = String._bridgeToObjectiveC()();
  else
    v6 = 0;
  objc_msgSend(v5, "setCompositingFilter:", v6);

  v7 = objc_msgSend(v2, "layer", swift_unknownObjectRelease(v6).n128_f64[0]);
  objc_msgSend(v7, "setAllowsGroupOpacity:", 0);

  objc_msgSend(v2, "setTintColor:", *(_QWORD *)(a1 + 112));
  return objc_msgSend(v2, "setAlpha:", *(double *)(a1 + 104));
}

void sub_10035B9C0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v11;

  v11 = a3;
  _swift_stdlib_reportUnimplementedInitializer(a4, a5, a6, a7, 0);
  __break(1u);
}

id sub_10035BA4C()
{
  return sub_10029A7E0((uint64_t (*)(_QWORD))type metadata accessor for SymbolButton.ImageView);
}

id sub_10035BA58(uint64_t a1)
{
  void *v1;
  id v3;
  void *v4;
  id v5;
  id v6;
  objc_super v8;

  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for SymbolButton.Label();
  v3 = objc_msgSendSuper2(&v8, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v3, "setLineBreakMode:", 5);
  objc_msgSend(v3, "setNumberOfLines:", 1);
  v4 = (void *)objc_opt_self(UIColor);
  v5 = v3;
  v6 = objc_msgSend(v4, "clearColor");
  objc_msgSend(v5, "setBackgroundColor:", v6);

  objc_msgSend(v5, "setAdjustsFontForContentSizeCategory:", 0);
  objc_msgSend(v5, "setClipsToBounds:", 0);
  objc_msgSend(v5, "_setTextColorFollowsTintColor:", 1);
  sub_10035BBD8(a1);
  sub_100364A14(a1);

  return v5;
}

id sub_10035BBD8(uint64_t a1)
{
  void *v1;
  NSString v3;
  id v4;
  NSString v5;
  id v6;
  double v7;
  _BYTE v9[16];
  _BYTE v10[16];
  _QWORD v11[2];
  _QWORD v12[2];

  sub_1000149A8(a1, (uint64_t)v10, &qword_1004A10E0);
  sub_1000149A8((uint64_t)v10, (uint64_t)v11, &qword_1004A10E0);
  if (v11[1])
    v3 = String._bridgeToObjectiveC()();
  else
    v3 = 0;
  objc_msgSend(v1, "setText:", v3);

  v4 = objc_msgSend(v1, "layer");
  sub_1000149A8(a1 + 32, (uint64_t)v9, &qword_1004A10E0);
  sub_1000149A8((uint64_t)v9, (uint64_t)v12, &qword_1004A10E0);
  if (v12[1])
    v5 = String._bridgeToObjectiveC()();
  else
    v5 = 0;
  objc_msgSend(v4, "setCompositingFilter:", v5);

  v6 = objc_msgSend(v1, "layer", swift_unknownObjectRelease(v5).n128_f64[0]);
  objc_msgSend(v6, "setAllowsGroupOpacity:", 0);

  objc_msgSend(v1, "setTintColor:", *(_QWORD *)(a1 + 56));
  v7 = 0.0;
  if ((*(_BYTE *)(a1 + 64) & 1) == 0)
    v7 = *(double *)(a1 + 48);
  return objc_msgSend(v1, "setAlpha:", v7);
}

id sub_10035BD54()
{
  return sub_10029A7E0((uint64_t (*)(_QWORD))type metadata accessor for SymbolButton.Label);
}

char *sub_10035BD60(void *a1, double a2, double a3)
{
  char *v3;
  uint64_t v7;
  id v8;
  char *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  double *v14;
  id v15;
  char *v16;
  id v17;
  id v18;
  objc_super v20;

  v7 = OBJC_IVAR____TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A939BadgeView_punchOutView;
  v8 = objc_allocWithZone((Class)UIView);
  v9 = v3;
  v10 = objc_msgSend(v8, "init");
  v11 = (void *)objc_opt_self(UIColor);
  v12 = objc_msgSend(v11, "blackColor");
  objc_msgSend(v10, "setBackgroundColor:", v12);

  v13 = objc_msgSend(v10, "layer");
  objc_msgSend(v13, "setCompositingFilter:", kCAFilterDestOut);

  *(_QWORD *)&v3[v7] = v10;
  v14 = (double *)&v9[OBJC_IVAR____TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A939BadgeView_configuration];
  *v14 = a2;
  v14[1] = a3;
  *((_QWORD *)v14 + 2) = a1;
  v15 = a1;

  v20.receiver = v9;
  v20.super_class = (Class)type metadata accessor for SymbolButton.BadgeView();
  v16 = (char *)objc_msgSendSuper2(&v20, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v17 = v15;
  if (!a1)
    v17 = objc_msgSend(v11, "tintColor");
  v18 = v15;
  objc_msgSend(v16, "setBackgroundColor:", v17);

  objc_msgSend(v16, "setAlpha:", a3);
  objc_msgSend(*(id *)&v16[OBJC_IVAR____TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A939BadgeView_punchOutView], "setAlpha:", a3);
  sub_10035C230();

  return v16;
}

void sub_10035C230()
{
  char *v0;
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  void *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;

  v1 = v0;
  sub_100005574(&qword_1004A1050);
  __chkstk_darwin();
  v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(v1, "bounds");
  v4 = OBJC_IVAR____TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A939BadgeView_configuration;
  v5 = UIEdgeInsets.init(edges:inset:)(15, -*(double *)&v1[OBJC_IVAR____TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A939BadgeView_configuration]);
  v6 = CGSize.inset(by:)(v5);
  v8 = v7;
  objc_msgSend(v1, "frame");
  v10 = v9 - *(double *)&v1[v4];
  objc_msgSend(v1, "frame");
  v12 = v11 - *(double *)&v1[v4];
  v13 = *(void **)&v1[OBJC_IVAR____TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A939BadgeView_punchOutView];
  static UIView.Corner.rounded.getter(objc_msgSend(v13, "setFrame:", v10, v12, v6, v8));
  v14 = type metadata accessor for UIView.Corner(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v3, 0, 1, v14);
  UIView.corner.setter(v3);
  v15 = objc_msgSend(v1, "superview");
  objc_msgSend(v15, "insertSubview:belowSubview:", v13, v1);

}

id sub_10035C3B4()
{
  return sub_10029A7E0((uint64_t (*)(_QWORD))type metadata accessor for SymbolButton.BadgeView);
}

double sub_10035C3FC()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  NSString *v5;
  id v6;
  id v7;
  const UIFontTextStyle *v8;
  UIFontTextStyle v9;
  uint64_t v10;
  NSString *v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  double result;
  uint64_t v18;

  sub_100005574(&qword_1004A1050);
  __chkstk_darwin();
  v1 = (char *)&v18 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for SymbolButton.Configuration(0);
  sub_1000086DC(v2, static SymbolButton.Configuration.contextualAction);
  v3 = sub_1000086B4(v2, (uint64_t)static SymbolButton.Configuration.contextualAction);
  SymbolButton.Configuration.init()(v3);
  v4 = (void *)objc_opt_self(UITraitCollection);
  v5 = UIFontTextStyleSubheadline;
  v6 = objc_msgSend(v4, "currentTraitCollection");
  v7 = objc_msgSend(v6, "userInterfaceIdiom");

  v8 = &UIFontTextStyleTitle3;
  if (v7 != (id)6)
    v8 = &UIFontTextStyleCallout;
  v9 = *v8;
  if (v7 == (id)6)
    v10 = 5;
  else
    v10 = 6;
  v11 = v9;

  v12 = *(void **)(v3 + 16);
  v13 = *(void **)(v3 + 24);
  v14 = *(void **)(v3 + 112);
  *(_OWORD *)v3 = xmmword_1003954E0;
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = v11;
  *(_QWORD *)(v3 + 32) = 0;
  *(_BYTE *)(v3 + 40) = 1;
  *(_QWORD *)(v3 + 48) = v10;
  *(_QWORD *)(v3 + 56) = 2;
  *(_QWORD *)(v3 + 64) = 0;
  *(_QWORD *)(v3 + 72) = 0;
  *(_BYTE *)(v3 + 80) = -1;
  *(_QWORD *)(v3 + 88) = 0;
  *(_QWORD *)(v3 + 96) = 0;
  *(_QWORD *)(v3 + 104) = 0x3FF0000000000000;
  *(_QWORD *)(v3 + 112) = 0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  static UIView.Corner.rounded.getter(v15);
  v16 = type metadata accessor for UIView.Corner(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v1, 0, 1, v16);
  sub_100129EBC((uint64_t)v1, v3 + *(int *)(v2 + 36), &qword_1004A1050);
  if (qword_100498D18 != -1)
    swift_once(&qword_100498D18, sub_10035C908);
  result = *(double *)&static SymbolButton.Configuration.platterMinimumSize;
  *(_OWORD *)(v3 + *(int *)(v2 + 52)) = static SymbolButton.Configuration.platterMinimumSize;
  return result;
}

uint64_t SymbolButton.Configuration.contextualAction.unsafeMutableAddressor()
{
  return sub_1002BDD9C(&qword_100498D08, type metadata accessor for SymbolButton.Configuration, (uint64_t)static SymbolButton.Configuration.contextualAction, (uint64_t)sub_10035C3FC);
}

uint64_t static SymbolButton.Configuration.contextualAction.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10035C8A4(&qword_100498D08, (uint64_t)static SymbolButton.Configuration.contextualAction, (uint64_t)sub_10035C3FC, a1);
}

uint64_t sub_10035C64C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void *v7;
  void *v8;
  char v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v16;

  v0 = type metadata accessor for SymbolButton.Configuration(0);
  v1 = __chkstk_darwin();
  v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000086DC(v1, static SymbolButton.Configuration.barButtonContextualAction);
  v4 = sub_1000086B4(v0, (uint64_t)static SymbolButton.Configuration.barButtonContextualAction);
  if (qword_100498D08 != -1)
    swift_once(&qword_100498D08, sub_10035C3FC);
  v5 = sub_1000086B4(v0, (uint64_t)static SymbolButton.Configuration.contextualAction);
  sub_100082248(v5, (uint64_t)v3, type metadata accessor for SymbolButton.Configuration);
  if (qword_100498CF0 != -1)
    swift_once(&qword_100498CF0, sub_1003555AC);
  v6 = static SymbolButton.Configuration.Accessibility.forBarButtonItem;
  v7 = (void *)qword_1004A4058;
  v8 = (void *)unk_1004A4060;
  v9 = byte_1004A4068;
  sub_100082248((uint64_t)v3, v4, type metadata accessor for SymbolButton.Configuration);
  v10 = v4 + *(int *)(v0 + 64);
  v11 = *(void **)(v10 + 8);
  v12 = *(void **)(v10 + 16);
  v13 = v7;
  v14 = v8;

  *(_BYTE *)v10 = v6;
  *(_QWORD *)(v10 + 8) = v7;
  *(_QWORD *)(v10 + 16) = v8;
  *(_BYTE *)(v10 + 24) = v9;
  return sub_100006798((uint64_t)v3, type metadata accessor for SymbolButton.Configuration);
}

void SymbolButton.Configuration.forBarButtonItem()(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v3;
  void *v4;
  void *v5;
  char v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  id v11;

  if (qword_100498CF0 != -1)
    swift_once(&qword_100498CF0, sub_1003555AC);
  v3 = static SymbolButton.Configuration.Accessibility.forBarButtonItem;
  v4 = (void *)qword_1004A4058;
  v5 = (void *)unk_1004A4060;
  v6 = byte_1004A4068;
  sub_100082248(v1, a1, type metadata accessor for SymbolButton.Configuration);
  v7 = a1 + *(int *)(type metadata accessor for SymbolButton.Configuration(0) + 64);
  v8 = *(void **)(v7 + 8);
  v9 = *(void **)(v7 + 16);
  v10 = v4;
  v11 = v5;

  *(_BYTE *)v7 = v3;
  *(_QWORD *)(v7 + 8) = v4;
  *(_QWORD *)(v7 + 16) = v5;
  *(_BYTE *)(v7 + 24) = v6;
}

uint64_t SymbolButton.Configuration.barButtonContextualAction.unsafeMutableAddressor()
{
  return sub_1002BDD9C(&qword_100498D10, type metadata accessor for SymbolButton.Configuration, (uint64_t)static SymbolButton.Configuration.barButtonContextualAction, (uint64_t)sub_10035C64C);
}

uint64_t static SymbolButton.Configuration.barButtonContextualAction.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10035C8A4(&qword_100498D10, (uint64_t)static SymbolButton.Configuration.barButtonContextualAction, (uint64_t)sub_10035C64C, a1);
}

uint64_t sub_10035C8A4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  if (*a1 != -1)
    swift_once(a1, a3);
  v6 = type metadata accessor for SymbolButton.Configuration(0);
  v7 = sub_1000086B4(v6, a2);
  return sub_100082248(v7, a4, type metadata accessor for SymbolButton.Configuration);
}

__n128 sub_10035C908()
{
  __n128 result;

  __asm { FMOV            V0.2D, #28.0 }
  static SymbolButton.Configuration.platterMinimumSize = (__int128)result;
  return result;
}

uint64_t type metadata accessor for SymbolButton.Configuration(uint64_t a1)
{
  return sub_1000091AC(a1, (uint64_t *)&unk_1004A11B0, (uint64_t)&nominal type descriptor for SymbolButton.Configuration);
}

double static SymbolButton.Configuration.platterMinimumSize.getter()
{
  return sub_1002355A8(&qword_100498D18, (uint64_t)&static SymbolButton.Configuration.platterMinimumSize);
}

int64x2_t sub_10035C94C()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4040000000000000uLL);
  static SymbolButton.Configuration.hitRectMinimumSize = (__int128)result;
  return result;
}

double static SymbolButton.Configuration.hitRectMinimumSize.getter()
{
  return sub_1002355A8(&qword_100498D20, (uint64_t)&static SymbolButton.Configuration.hitRectMinimumSize);
}

__n128 SymbolButton.Configuration.adding(_:)@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 result;
  uint64_t v13;
  void *v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  __n128 v19;
  _BYTE v20[16];
  id v21;
  id v22;
  id v23;

  v19 = *(__n128 *)a1;
  v5 = a1 + 16;
  v6 = a1 + 8;
  v17 = *(unsigned __int8 *)(a1 + 24);
  v18 = *(_QWORD *)(a1 + 16);
  v7 = a1 + 32;
  v15 = *(_QWORD *)(a1 + 40);
  v16 = *(_QWORD *)(a1 + 32);
  sub_100082248(v2, (uint64_t)a2, type metadata accessor for SymbolButton.Configuration);
  v8 = (void *)a2[14].n128_u64[1];
  v9 = (void *)a2[15].n128_u64[0];
  v10 = a2[15].n128_i64[1];
  v11 = a2[16].n128_i64[0];
  v13 = a2[16].n128_i64[1];
  v14 = (void *)a2[14].n128_u64[0];
  sub_1000149A8(a1, (uint64_t)&v23, &qword_1004A10D8);
  sub_1000149A8(v6, (uint64_t)&v22, &qword_1004A10D8);
  sub_1000149A8(v5, (uint64_t)&v21, &qword_1004A10D8);
  sub_1000149A8(v7, (uint64_t)v20, &qword_1004A10E0);
  sub_1000BC564(&v23);
  sub_1000BC564(&v22);
  sub_1000BC564(&v21);
  sub_1000595EC((uint64_t)v20);
  sub_100339680(v14, v8, v9, v10, v11, v13);
  result = v19;
  a2[14] = v19;
  a2[15].n128_u64[0] = v18;
  a2[15].n128_u64[1] = v17;
  a2[16].n128_u64[0] = v16;
  a2[16].n128_u64[1] = v15;
  return result;
}

double SymbolButton.Configuration.removingMaterial()@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  sub_100082248(v1, a1, type metadata accessor for SymbolButton.Configuration);
  sub_100339680(*(void **)(a1 + 224), *(void **)(a1 + 232), *(void **)(a1 + 240), *(_QWORD *)(a1 + 248), *(_QWORD *)(a1 + 256), *(_QWORD *)(a1 + 264));
  *(_QWORD *)(a1 + 224) = 1;
  result = 0.0;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 248) = 0u;
  *(_QWORD *)(a1 + 264) = 0;
  return result;
}

uint64_t SymbolButton.Configuration.adding(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, double *a4@<X8>, double a5@<D0>)
{
  uint64_t v5;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t result;

  sub_100082248(v5, (uint64_t)a4, type metadata accessor for SymbolButton.Configuration);
  v11 = *((_QWORD *)a4 + 24);
  v12 = (void *)*((_QWORD *)a4 + 25);
  v13 = *((_QWORD *)a4 + 26);
  v14 = *((_QWORD *)a4 + 27);
  swift_bridgeObjectRetain();
  v15 = a1;
  result = sub_100246168(v11, v12, v13, v14);
  a4[24] = a5;
  *((_QWORD *)a4 + 25) = a1;
  *((_QWORD *)a4 + 26) = a2;
  *((_QWORD *)a4 + 27) = a3;
  return result;
}

double SymbolButton.Configuration.removingBackground()@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  sub_100082248(v1, a1, type metadata accessor for SymbolButton.Configuration);
  sub_100246168(*(_QWORD *)(a1 + 192), *(void **)(a1 + 200), *(_QWORD *)(a1 + 208), *(_QWORD *)(a1 + 216));
  result = 0.0;
  *(_OWORD *)(a1 + 192) = xmmword_100384A50;
  *(_QWORD *)(a1 + 208) = 0;
  *(_QWORD *)(a1 + 216) = 0;
  return result;
}

void SymbolButton.Configuration.withAccessibility(_:)(char a1@<W0>, void *a2@<X1>, void *a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  id v15;

  sub_100082248(v5, a5, type metadata accessor for SymbolButton.Configuration);
  v11 = a5 + *(int *)(type metadata accessor for SymbolButton.Configuration(0) + 64);
  v12 = *(void **)(v11 + 8);
  v13 = *(void **)(v11 + 16);
  v14 = a2;
  v15 = a3;

  *(_BYTE *)v11 = a1;
  *(_QWORD *)(v11 + 8) = a2;
  *(_QWORD *)(v11 + 16) = a3;
  *(_BYTE *)(v11 + 24) = a4;
}

uint64_t *SymbolButton.Background.tertiary.unsafeMutableAddressor()
{
  if (qword_100498D30 != -1)
    swift_once(&qword_100498D30, sub_10035D574);
  return &static SymbolButton.Background.tertiary;
}

uint64_t SymbolButton.Configuration.forUberNavigationBar(withMaterial:background:groupName:)@<X0>(int a1@<W0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>, double a8@<D0>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  void *v20;
  void *v21;
  char v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  id v57;
  uint64_t v58;

  v9 = v8;
  v53 = a5;
  v54 = a6;
  v51 = a3;
  v52 = a4;
  v50 = a2;
  LODWORD(v57) = a1;
  v12 = type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  v58 = (uint64_t)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v15 = (char *)&v49 - v14;
  __chkstk_darwin();
  v17 = (char *)&v49 - v16;
  sub_100005574(&qword_1004A1050);
  __chkstk_darwin();
  v19 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100498CF0 != -1)
    swift_once(&qword_100498CF0, sub_1003555AC);
  v55 = static SymbolButton.Configuration.Accessibility.forBarButtonItem;
  v20 = (void *)qword_1004A4058;
  v21 = (void *)unk_1004A4060;
  v22 = byte_1004A4068;
  sub_100082248(v9, a7, type metadata accessor for SymbolButton.Configuration);
  v23 = a7 + *(int *)(v12 + 64);
  v56 = v12;
  v25 = *(void **)(v23 + 8);
  v24 = *(void **)(v23 + 16);
  v26 = v20;
  v27 = v21;

  v28 = a7;
  *(_BYTE *)v23 = v55;
  *(_QWORD *)(v23 + 8) = v20;
  *(_QWORD *)(v23 + 16) = v21;
  *(_BYTE *)(v23 + 24) = v22;
  static UIView.Corner.rounded.getter(v29);
  v30 = type metadata accessor for UIView.Corner(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v19, 0, 1, v30);
  sub_100129EBC((uint64_t)v19, a7 + *(int *)(v56 + 36), &qword_1004A1050);

  *(_QWORD *)(a7 + 272) = 0;
  *(_QWORD *)(a7 + 280) = 0;
  *(_QWORD *)(a7 + 288) = 0;
  if ((v57 & 1) != 0)
  {
    v31 = v58;
    sub_100082248(a7, v58, type metadata accessor for SymbolButton.Configuration);
    v57 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 16);
    sub_100082248(v31, (uint64_t)v15, type metadata accessor for SymbolButton.Configuration);
    v32 = (void *)*((_QWORD *)v15 + 28);
    v33 = (void *)*((_QWORD *)v15 + 29);
    v34 = (void *)*((_QWORD *)v15 + 30);
    v35 = *((_QWORD *)v15 + 31);
    v36 = *((_QWORD *)v15 + 32);
    v37 = *((_QWORD *)v15 + 33);
    v38 = v54;
    swift_bridgeObjectRetain();
    sub_100339680(v32, v33, v34, v35, v36, v37);
    v39 = v58;
    *((_QWORD *)v15 + 28) = v57;
    *((_QWORD *)v15 + 29) = 0;
    *((_QWORD *)v15 + 30) = 0;
    *((_QWORD *)v15 + 31) = 2;
    *((_QWORD *)v15 + 32) = v53;
    *((_QWORD *)v15 + 33) = v38;
    sub_100006798(v39, type metadata accessor for SymbolButton.Configuration);
    sub_100082248((uint64_t)v15, (uint64_t)v17, type metadata accessor for SymbolButton.Configuration);
    sub_100246168(*((_QWORD *)v17 + 24), *((void **)v17 + 25), *((_QWORD *)v17 + 26), *((_QWORD *)v17 + 27));
    *((_OWORD *)v17 + 12) = xmmword_100384A50;
    *((_QWORD *)v17 + 26) = 0;
    *((_QWORD *)v17 + 27) = 0;
  }
  else
  {
    sub_100082248(a7, (uint64_t)v15, type metadata accessor for SymbolButton.Configuration);
    sub_100339680(*((void **)v15 + 28), *((void **)v15 + 29), *((void **)v15 + 30), *((_QWORD *)v15 + 31), *((_QWORD *)v15 + 32), *((_QWORD *)v15 + 33));
    *((_QWORD *)v15 + 28) = 1;
    *(_OWORD *)(v15 + 232) = 0u;
    *(_OWORD *)(v15 + 248) = 0u;
    *((_QWORD *)v15 + 33) = 0;
    sub_100082248((uint64_t)v15, (uint64_t)v17, type metadata accessor for SymbolButton.Configuration);
    v40 = *((_QWORD *)v17 + 24);
    v41 = (void *)*((_QWORD *)v17 + 25);
    v42 = *((_QWORD *)v17 + 26);
    v43 = *((_QWORD *)v17 + 27);
    v44 = v52;
    swift_bridgeObjectRetain();
    v45 = v50;
    v46 = v50;
    sub_100246168(v40, v41, v42, v43);
    *((double *)v17 + 24) = a8;
    v47 = v51;
    *((_QWORD *)v17 + 25) = v45;
    *((_QWORD *)v17 + 26) = v47;
    *((_QWORD *)v17 + 27) = v44;
  }
  sub_100006798((uint64_t)v15, type metadata accessor for SymbolButton.Configuration);
  return sub_100360170((uint64_t)v17, v28);
}

uint64_t SymbolButton.Configuration.forPromotionalParallaxNavigationBar(withMaterial:background:backgroundAlpha:groupName:)@<X0>(int a1@<W0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char v18;
  void *v19;
  void *v20;
  char v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  int v54;

  v10 = v9;
  v46 = a7;
  v47 = a8;
  v54 = a6;
  v49 = a5;
  v50 = a3;
  v51 = a4;
  v48 = a2;
  LODWORD(v53) = a1;
  v12 = type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  v45 = (uint64_t)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v15 = (char *)&v45 - v14;
  sub_100005574(&qword_1004A1050);
  __chkstk_darwin();
  v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100498CF0 != -1)
    swift_once(&qword_100498CF0, sub_1003555AC);
  v18 = static SymbolButton.Configuration.Accessibility.forBarButtonItem;
  v19 = (void *)qword_1004A4058;
  v20 = (void *)unk_1004A4060;
  v21 = byte_1004A4068;
  sub_100082248(v10, a9, type metadata accessor for SymbolButton.Configuration);
  v22 = a9 + *(int *)(v12 + 64);
  v52 = v12;
  v24 = *(void **)(v22 + 8);
  v23 = *(void **)(v22 + 16);
  v25 = v19;
  v26 = v20;

  *(_BYTE *)v22 = v18;
  *(_QWORD *)(v22 + 8) = v19;
  *(_QWORD *)(v22 + 16) = v20;
  *(_BYTE *)(v22 + 24) = v21;
  static UIView.Corner.rounded.getter(v27);
  v28 = type metadata accessor for UIView.Corner(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v17, 0, 1, v28);
  sub_100129EBC((uint64_t)v17, a9 + *(int *)(v52 + 36), &qword_1004A1050);

  *(_QWORD *)(a9 + 272) = 0;
  *(_QWORD *)(a9 + 280) = 0;
  *(_QWORD *)(a9 + 288) = 0;
  if ((v53 & 1) != 0)
  {
    v29 = v45;
    sub_100082248(a9, v45, type metadata accessor for SymbolButton.Configuration);
    v53 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 16);
    sub_100082248(v29, (uint64_t)v15, type metadata accessor for SymbolButton.Configuration);
    v30 = (void *)*((_QWORD *)v15 + 28);
    v31 = (void *)*((_QWORD *)v15 + 29);
    v32 = (void *)*((_QWORD *)v15 + 30);
    v33 = *((_QWORD *)v15 + 31);
    v35 = *((_QWORD *)v15 + 32);
    v34 = *((_QWORD *)v15 + 33);
    v36 = v47;
    swift_bridgeObjectRetain();
    sub_100339680(v30, v31, v32, v33, v35, v34);
    *((_QWORD *)v15 + 28) = v53;
    *((_QWORD *)v15 + 29) = 0;
    *((_QWORD *)v15 + 30) = 0;
    *((_QWORD *)v15 + 31) = 2;
    *((_QWORD *)v15 + 32) = v46;
    *((_QWORD *)v15 + 33) = v36;
    sub_100006798(v29, type metadata accessor for SymbolButton.Configuration);
  }
  else
  {
    sub_100082248(a9, (uint64_t)v15, type metadata accessor for SymbolButton.Configuration);
    sub_100339680(*((void **)v15 + 28), *((void **)v15 + 29), *((void **)v15 + 30), *((_QWORD *)v15 + 31), *((_QWORD *)v15 + 32), *((_QWORD *)v15 + 33));
    *((_QWORD *)v15 + 28) = 1;
    *(_OWORD *)(v15 + 232) = 0u;
    *(_OWORD *)(v15 + 248) = 0u;
    *((_QWORD *)v15 + 33) = 0;
  }
  sub_100360170((uint64_t)v15, a9);
  sub_100082248(a9, (uint64_t)v15, type metadata accessor for SymbolButton.Configuration);
  v37 = *((_QWORD *)v15 + 26);
  v38 = *((_QWORD *)v15 + 24);
  v39 = (void *)*((_QWORD *)v15 + 25);
  v40 = *((_QWORD *)v15 + 27);
  if ((v54 & 1) != 0)
  {
    sub_100246168(*((_QWORD *)v15 + 24), *((void **)v15 + 25), *((_QWORD *)v15 + 26), *((_QWORD *)v15 + 27));
    *((_OWORD *)v15 + 12) = xmmword_100384A50;
    *((_QWORD *)v15 + 26) = 0;
    *((_QWORD *)v15 + 27) = 0;
  }
  else
  {
    v41 = v51;
    swift_bridgeObjectRetain();
    v42 = v48;
    v43 = v48;
    sub_100246168(v38, v39, v37, v40);
    *((_QWORD *)v15 + 24) = v49;
    *((_QWORD *)v15 + 25) = v42;
    *((_QWORD *)v15 + 26) = v50;
    *((_QWORD *)v15 + 27) = v41;
  }
  return sub_100360170((uint64_t)v15, a9);
}

void *SymbolButton.Background.withAlpha(_:)(void *a1)
{
  id v2;

  v2 = a1;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t SymbolButton.Configuration.withAlpha(_:)@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v2;
  uint64_t result;

  sub_100082248(v2, a1, type metadata accessor for SymbolButton.Configuration);
  result = type metadata accessor for SymbolButton.Configuration(0);
  *(double *)(a1 + *(int *)(result + 68)) = a2;
  return result;
}

void *static SymbolButton.Background.tint(_:)(void *a1)
{
  id v2;

  v2 = a1;
  return a1;
}

id sub_10035D470()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIColor), "secondarySystemFillColor");
  static SymbolButton.Background.secondary = 0x3FF0000000000000;
  qword_1004A40E8 = (uint64_t)result;
  qword_1004A40F0 = 0;
  qword_1004A40F8 = 0;
  return result;
}

uint64_t *SymbolButton.Background.secondary.unsafeMutableAddressor()
{
  if (qword_100498D28 != -1)
    swift_once(&qword_100498D28, sub_10035D470);
  return &static SymbolButton.Background.secondary;
}

uint64_t static SymbolButton.Background.secondary.getter()
{
  uint64_t v0;
  id v1;

  if (qword_100498D28 != -1)
    swift_once(&qword_100498D28, sub_10035D470);
  v0 = qword_1004A40E8;
  v1 = (id)qword_1004A40E8;
  swift_bridgeObjectRetain();
  return v0;
}

id sub_10035D574()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIColor), "tertiarySystemFillColor");
  static SymbolButton.Background.tertiary = 0x3FF0000000000000;
  qword_1004A4108 = (uint64_t)result;
  qword_1004A4110 = 0;
  qword_1004A4118 = 0;
  return result;
}

uint64_t static SymbolButton.Background.tertiary.getter()
{
  uint64_t v0;
  id v1;

  if (qword_100498D30 != -1)
    swift_once(&qword_100498D30, sub_10035D574);
  v0 = qword_1004A4108;
  v1 = (id)qword_1004A4108;
  swift_bridgeObjectRetain();
  return v0;
}

id sub_10035D638()
{
  id v1;

  if (qword_100498D30 != -1)
    swift_once(&qword_100498D30, sub_10035D574);
  static SymbolButton.Background.normal = static SymbolButton.Background.tertiary;
  *(_OWORD *)&qword_1004A4128 = *(_OWORD *)&qword_1004A4108;
  qword_1004A4138 = qword_1004A4118;
  v1 = (id)qword_1004A4108;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static SymbolButton.Background.normal.getter()
{
  uint64_t v0;
  id v1;

  if (qword_100498D38 != -1)
    swift_once(&qword_100498D38, sub_10035D638);
  v0 = qword_1004A4128;
  v1 = (id)qword_1004A4128;
  swift_bridgeObjectRetain();
  return v0;
}

id sub_10035D730()
{
  id v1;

  if (qword_100498D28 != -1)
    swift_once(&qword_100498D28, sub_10035D470);
  static SymbolButton.Background.highlighted = static SymbolButton.Background.secondary;
  *(_OWORD *)&qword_1004A4148 = *(_OWORD *)&qword_1004A40E8;
  qword_1004A4158 = qword_1004A40F8;
  v1 = (id)qword_1004A40E8;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static SymbolButton.Background.highlighted.getter()
{
  uint64_t v0;
  id v1;

  if (qword_100498D40 != -1)
    swift_once(&qword_100498D40, sub_10035D730);
  v0 = qword_1004A4148;
  v1 = (id)qword_1004A4148;
  swift_bridgeObjectRetain();
  return v0;
}

id sub_10035D828()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 7);
  qword_1004A4168 = 0;
  qword_1004A4170 = 0;
  static SymbolButton.Material.xr = (uint64_t)result;
  byte_1004A4178 = 2;
  qword_1004A4180 = 0;
  unk_1004A4188 = 0;
  return result;
}

uint64_t static SymbolButton.Material.xr.getter@<X0>(uint64_t a1@<X8>)
{
  void *v2;
  void *v3;
  void *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;

  if (qword_100498D48 != -1)
    swift_once(&qword_100498D48, sub_10035D828);
  v2 = (void *)static SymbolButton.Material.xr;
  v3 = (void *)qword_1004A4168;
  v4 = (void *)qword_1004A4170;
  v5 = byte_1004A4178;
  v6 = qword_1004A4180;
  v7 = unk_1004A4188;
  *(_QWORD *)a1 = static SymbolButton.Material.xr;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  v8 = v2;
  v9 = v3;
  v10 = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_10035D8FC()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for UIView.Corner(0);
  sub_1000086DC(v0, static UIView.Corner.capsule);
  v1 = sub_1000086B4(v0, (uint64_t)static UIView.Corner.capsule);
  return static UIView.Corner.rounded.getter(v1);
}

uint64_t UIView.Corner.capsule.unsafeMutableAddressor()
{
  return sub_1002BDD9C(&qword_100498D50, (uint64_t (*)(_QWORD))&type metadata accessor for UIView.Corner, (uint64_t)static UIView.Corner.capsule, (uint64_t)sub_10035D8FC);
}

uint64_t static UIView.Corner.capsule.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1002504DC(&qword_100498D50, (uint64_t)static UIView.Corner.capsule, (uint64_t)sub_10035D8FC, a1);
}

uint64_t sub_10035D984()
{
  uint64_t v0;

  v0 = type metadata accessor for UIView.Corner(0);
  sub_1000086DC(v0, static UIView.Corner.roundedRect);
  sub_1000086B4(v0, (uint64_t)static UIView.Corner.roundedRect);
  return static UIView.Corner.value(_:continuous:)(1, 10.0);
}

uint64_t static UIView.Corner.roundedRect.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1002504DC(&qword_100498D58, (uint64_t)static UIView.Corner.roundedRect, (uint64_t)sub_10035D984, a1);
}

char *SymbolButton.withProvider(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v11;
  _BYTE v12[24];

  sub_100005574(&qword_1004A06B0);
  __chkstk_darwin();
  v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = (uint64_t *)&v11[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_configurationProvider];
  swift_beginAccess(&v11[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_configurationProvider], v12, 1, 0);
  v7 = *v6;
  v8 = v6[1];
  *v6 = a1;
  v6[1] = a2;
  swift_retain_n(a2, 2);
  sub_10003A5C8(v7, v8);
  v9 = type metadata accessor for SymbolButton.Configuration(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v5, 1, 1, v9);
  SymbolButton.updateConfigurationIfNeeded(_:animation:)((uint64_t)v5, 0, 0, 0, 1);
  sub_100008758((uint64_t)v5, &qword_1004A06B0);
  swift_release(a2);
  return v11;
}

id SymbolButton.withConfiguration(_:)(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  id v5[2];

  type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  v3 = (char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100082248(a1, (uint64_t)v3, type metadata accessor for SymbolButton.Configuration);
  SymbolButton.setConfiguration(_:animation:updates:)((uint64_t)v3, 0, 0, 0, 1, (uint64_t)_swiftEmptyArrayStorage);
  sub_100006798((uint64_t)v3, type metadata accessor for SymbolButton.Configuration);
  return v5[1];
}

uint64_t type metadata accessor for SymbolButton.Metrics(uint64_t a1)
{
  return sub_1000091AC(a1, qword_1004A13C0, (uint64_t)&nominal type descriptor for SymbolButton.Metrics);
}

uint64_t type metadata accessor for SymbolButton.MaterialView()
{
  return objc_opt_self(_TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A9312MaterialView);
}

uint64_t type metadata accessor for SymbolButton.BackgroundView()
{
  return objc_opt_self(_TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A9314BackgroundView);
}

uint64_t type metadata accessor for SymbolButton(uint64_t a1)
{
  return sub_1000091AC(a1, (uint64_t *)&unk_1004A1140, (uint64_t)&nominal type descriptor for SymbolButton);
}

uint64_t type metadata accessor for SymbolButton.Label()
{
  return objc_opt_self(_TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A935Label);
}

uint64_t sub_10035DC44()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10035DC54(void *a1)
{
  uint64_t v1;

  sub_1003509E8(a1, *(_QWORD *)(v1 + 16));
}

id sub_10035DC5C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t, __n128);
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  void *v8;

  v4 = *(uint64_t (**)(uint64_t, __n128))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v5 = sub_1000087DC(0, (unint64_t *)&unk_1004A1538, UIMenuElement_ptr);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v5);
  v7 = swift_retain(v3);
  v8 = (void *)v4(v6, v7);
  swift_release(v3);
  swift_bridgeObjectRelease();
  return v8;
}

BOOL _s11MusicCoreUI12SymbolButtonC0D0V23__derived_struct_equalsySbAE_AEtFZ_0(double *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  double v6;
  BOOL v7;
  char v8;
  _BOOL8 result;
  void *v10;
  void *v11;
  id v12;
  id v13;
  char v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  void *v33;
  void *v34;
  id v35;
  id v36;
  char v37;
  _QWORD v38[2];
  char v39;
  _BYTE v40[24];
  _BYTE v41[24];
  id v42;
  id v43;
  _BYTE v44[24];
  _BYTE v45[24];

  v4 = *((_QWORD *)a1 + 1);
  v5 = *(_QWORD *)(a2 + 8);
  if (!v4)
  {
    if (v5)
      return 0;
    goto LABEL_10;
  }
  if (!v5)
    return 0;
  v6 = *a1;
  v7 = *(_QWORD *)a1 == *(_QWORD *)a2 && v4 == v5;
  if (v7
    || (v8 = _stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)&v6, v4, *(_QWORD *)a2, v5, 0),
        result = 0,
        (v8 & 1) != 0))
  {
LABEL_10:
    v10 = (void *)*((_QWORD *)a1 + 2);
    v11 = *(void **)(a2 + 16);
    if (v10)
    {
      if (!v11)
        return 0;
      sub_1000087DC(0, &qword_1004A1580, NSBundle_ptr);
      v12 = v11;
      v13 = v10;
      v14 = static NSObject.== infix(_:_:)(v13, v12);

      if ((v14 & 1) == 0)
        return 0;
    }
    else if (v11)
    {
      return 0;
    }
    v15 = (void *)*((_QWORD *)a1 + 3);
    v42 = *(id *)(a2 + 24);
    v43 = v15;
    v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    v18 = v17;
    v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
    if (v16 == v20 && v18 == v19)
    {
      sub_1000BC564(&v43);
      sub_1000BC564(&v42);
      swift_bridgeObjectRelease_n(v18, 2);
      sub_100222190(&v42);
      sub_100222190(&v43);
    }
    else
    {
      v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v18, v20, v19, 0);
      sub_1000BC564(&v43);
      sub_1000BC564(&v42);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100222190(&v42);
      sub_100222190(&v43);
      result = 0;
      if ((v21 & 1) == 0)
        return result;
    }
    v22 = *(_BYTE *)(a2 + 40);
    if (((_BYTE)a1[5] & 1) != 0)
    {
      if (!*(_BYTE *)(a2 + 40))
        return 0;
    }
    else
    {
      if (a1[4] != *(double *)(a2 + 32))
        v22 = 1;
      if ((v22 & 1) != 0)
        return 0;
    }
    if (*((_QWORD *)a1 + 6) != *(_QWORD *)(a2 + 48) || *((_QWORD *)a1 + 7) != *(_QWORD *)(a2 + 56))
      return 0;
    sub_1000149A8((uint64_t)(a1 + 8), (uint64_t)v41, &qword_1004A1568);
    v23 = *(_QWORD *)(a2 + 64);
    v24 = *(_QWORD *)(a2 + 72);
    v25 = *(unsigned __int8 *)(a2 + 80);
    sub_1000149A8((uint64_t)v41, (uint64_t)v44, &qword_1004A1568);
    if (v44[16] == 255)
    {
      if (v25 != 255)
        return 0;
    }
    else
    {
      sub_1000149A8((uint64_t)v44, (uint64_t)v45, &qword_1004A1570);
      sub_1000149A8((uint64_t)v41, (uint64_t)v40, &qword_1004A1568);
      if (v25 == 255)
        return 0;
      v38[0] = v23;
      v38[1] = v24;
      v39 = v25 & 1;
      type metadata accessor for UIOffset(0);
      v27 = v26;
      sub_100006924(&qword_1004A1578, (uint64_t (*)(uint64_t))type metadata accessor for UIOffset, (uint64_t)&protocol conformance descriptor for UIOffset);
      if ((static DisplayUnit.__derived_enum_equals(_:_:)((uint64_t)v40, (uint64_t)v38, v27) & 1) == 0)
        return 0;
    }
    v28 = *((_QWORD *)a1 + 12);
    v29 = *(_QWORD *)(a2 + 96);
    if (v28)
    {
      if (!v29)
        return 0;
      v30 = *((_QWORD *)a1 + 11);
      v31 = *(_QWORD *)(a2 + 88);
      if (v30 != v31 || v28 != v29)
      {
        v32 = _stringCompareWithSmolCheck(_:_:expecting:)(v30, v28, v31, v29, 0);
        result = 0;
        if ((v32 & 1) == 0)
          return result;
      }
    }
    else if (v29)
    {
      return 0;
    }
    if (a1[13] == *(double *)(a2 + 104))
    {
      v33 = (void *)*((_QWORD *)a1 + 14);
      v34 = *(void **)(a2 + 112);
      if (v33)
      {
        if (!v34)
          return 0;
        sub_1000087DC(0, (unint64_t *)&qword_1004A1510, UIColor_ptr);
        v35 = v34;
        v36 = v33;
        v37 = static NSObject.== infix(_:_:)(v36, v35);

        return (v37 & 1) != 0;
      }
      if (!v34)
        return 1;
    }
    return 0;
  }
  return result;
}

BOOL _s11MusicCoreUI12SymbolButtonC10BackgroundV23__derived_struct_equalsySbAE_AEtFZ_0(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, double a7, double a8)
{
  id v14;
  id v15;
  char v16;

  if (a7 != a8)
    return 0;
  if (a1)
  {
    if (!a4)
      return 0;
    sub_1000087DC(0, (unint64_t *)&qword_1004A1510, UIColor_ptr);
    v14 = a4;
    v15 = a1;
    v16 = static NSObject.== infix(_:_:)(v15, v14);

    if ((v16 & 1) == 0)
      return 0;
  }
  else if (a4)
  {
    return 0;
  }
  if (a3)
    return a6 && (a2 == a5 && a3 == a6 || (_stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, a5, a6, 0) & 1) != 0);
  return !a6;
}

uint64_t _s11MusicCoreUI12SymbolButtonC10CustomViewV23__derived_struct_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  BOOL v4;
  BOOL v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  char v10;

  sub_1000087DC(0, (unint64_t *)&qword_10049A0D0, NSObject_ptr);
  if ((static NSObject.== infix(_:_:)(*(_QWORD *)a1, *(_QWORD *)a2) & 1) != 0
    && *(double *)(a1 + 8) == *(double *)(a2 + 8))
  {
    v4 = *(double *)(a1 + 16) == *(double *)(a2 + 16) && *(double *)(a1 + 24) == *(double *)(a2 + 24);
    v5 = v4 && *(double *)(a1 + 32) == *(double *)(a2 + 32);
    if (v5 && *(double *)(a1 + 40) == *(double *)(a2 + 40))
    {
      v6 = *(void **)(a1 + 48);
      v7 = *(void **)(a2 + 48);
      if (v6)
      {
        if (v7)
        {
          sub_1000087DC(0, (unint64_t *)&qword_1004A1510, UIColor_ptr);
          v8 = v7;
          v9 = v6;
          v10 = static NSObject.== infix(_:_:)(v9, v8);

          if ((v10 & 1) != 0)
            return 1;
        }
      }
      else if (!v7)
      {
        return 1;
      }
    }
  }
  return 0;
}

uint64_t _s11MusicCoreUI12SymbolButtonC13ConfigurationV13AccessibilityV23__derived_struct_equalsySbAG_AGtFZ_0(int a1, uint64_t a2, uint64_t a3, char a4, int a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;

  if (((a1 ^ a5) & 1) != 0)
    return 0;
  if (a2)
  {
    if (!a6)
      goto LABEL_17;
    v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
    v16 = v15;
    v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(a6);
    v19 = v17;
    if (v14 == v18 && v16 == v17)
    {
      swift_bridgeObjectRelease_n(v16, 2);
    }
    else
    {
      v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v16, v18, v17, 0);
      swift_bridgeObjectRelease(v16);
      swift_bridgeObjectRelease(v19);
      v21 = 0;
      if ((v20 & 1) == 0)
        return v21 & 1;
    }
  }
  else if (a6)
  {
    goto LABEL_17;
  }
  if (!a3)
  {
    if (!a7)
      goto LABEL_19;
    goto LABEL_17;
  }
  if (!a7)
  {
LABEL_17:
    v21 = 0;
    return v21 & 1;
  }
  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v24 = v23;
  v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(a7);
  v27 = v25;
  if (v22 == v26 && v24 == v25)
  {
    swift_bridgeObjectRelease_n(v24, 2);
LABEL_19:
    v21 = a4 ^ a8 ^ 1;
    return v21 & 1;
  }
  v28 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v24, v26, v25, 0);
  swift_bridgeObjectRelease(v24);
  swift_bridgeObjectRelease(v27);
  v21 = 0;
  if ((v28 & 1) != 0)
    goto LABEL_19;
  return v21 & 1;
}

uint64_t _s11MusicCoreUI12SymbolButtonC5TitleV23__derived_struct_equalsySbAE_AEtFZ_0(double *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  double v6;
  BOOL v7;
  char v8;
  char v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  char v27;
  id v29;
  id v30;

  v4 = *((_QWORD *)a1 + 1);
  v5 = *(_QWORD *)(a2 + 8);
  if (!v4)
  {
    if (v5)
      goto LABEL_31;
    goto LABEL_10;
  }
  if (!v5)
    goto LABEL_31;
  v6 = *a1;
  v7 = *(_QWORD *)a1 == *(_QWORD *)a2 && v4 == v5;
  if (v7
    || (v8 = _stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)&v6, v4, *(_QWORD *)a2, v5, 0),
        v9 = 0,
        (v8 & 1) != 0))
  {
LABEL_10:
    v10 = (void *)*((_QWORD *)a1 + 2);
    v29 = *(id *)(a2 + 16);
    v30 = v10;
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v13 = v12;
    v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
    if (v11 == v14 && v13 == v15)
    {
      sub_1000BC564(&v30);
      sub_1000BC564(&v29);
      swift_bridgeObjectRelease_n(v13, 2);
      sub_100222190(&v29);
      sub_100222190(&v30);
    }
    else
    {
      v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v13, v14, v15, 0);
      sub_1000BC564(&v30);
      sub_1000BC564(&v29);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100222190(&v29);
      sub_100222190(&v30);
      v9 = 0;
      if ((v17 & 1) == 0)
        return v9 & 1;
    }
    if (a1[3] != *(double *)(a2 + 24))
      goto LABEL_31;
    v18 = *((_QWORD *)a1 + 5);
    v19 = *(_QWORD *)(a2 + 40);
    if (v18)
    {
      if (!v19)
        goto LABEL_31;
      v20 = *((_QWORD *)a1 + 4);
      v21 = *(_QWORD *)(a2 + 32);
      if (v20 != v21 || v18 != v19)
      {
        v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v20, v18, v21, v19, 0);
        v9 = 0;
        if ((v22 & 1) == 0)
          return v9 & 1;
      }
    }
    else if (v19)
    {
      goto LABEL_31;
    }
    if (a1[6] == *(double *)(a2 + 48))
    {
      v23 = (void *)*((_QWORD *)a1 + 7);
      v24 = *(void **)(a2 + 56);
      if (v23)
      {
        if (v24)
        {
          sub_1000087DC(0, (unint64_t *)&qword_1004A1510, UIColor_ptr);
          v25 = v24;
          v26 = v23;
          v27 = static NSObject.== infix(_:_:)(v26, v25);

          if ((v27 & 1) != 0)
            goto LABEL_29;
        }
      }
      else if (!v24)
      {
LABEL_29:
        v9 = (((_BYTE)a1[8] & 1) == 0) ^ *(_BYTE *)(a2 + 64);
        return v9 & 1;
      }
    }
LABEL_31:
    v9 = 0;
  }
  return v9 & 1;
}

BOOL _s11MusicCoreUI12SymbolButtonC8MaterialV23__derived_struct_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  id v7;
  char v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  char v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  char v18;
  int v19;
  int v20;
  _BOOL8 result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  if (*(_QWORD *)a1)
  {
    if (!v5)
      return 0;
    sub_1000087DC(0, &qword_1004A1560, UIVisualEffect_ptr);
    v6 = v5;
    v7 = v4;
    v8 = static NSObject.== infix(_:_:)(v7, v6);

    if ((v8 & 1) == 0)
      return 0;
  }
  else if (v5)
  {
    return 0;
  }
  v9 = *(void **)(a1 + 8);
  v10 = *(void **)(a2 + 8);
  if (v9)
  {
    if (!v10)
      return 0;
    sub_1000087DC(0, &qword_1004A1560, UIVisualEffect_ptr);
    v11 = v10;
    v12 = v9;
    v13 = static NSObject.== infix(_:_:)(v12, v11);

    if ((v13 & 1) == 0)
      return 0;
  }
  else if (v10)
  {
    return 0;
  }
  v14 = *(void **)(a1 + 16);
  v15 = *(void **)(a2 + 16);
  if (v14)
  {
    if (!v15)
      return 0;
    sub_1000087DC(0, &qword_1004A1560, UIVisualEffect_ptr);
    v16 = v15;
    v17 = v14;
    v18 = static NSObject.== infix(_:_:)(v17, v16);

    if ((v18 & 1) == 0)
      return 0;
  }
  else if (v15)
  {
    return 0;
  }
  v19 = *(unsigned __int8 *)(a1 + 24);
  v20 = *(unsigned __int8 *)(a2 + 24);
  if (v19 == 2)
  {
    if (v20 != 2)
      return 0;
    goto LABEL_21;
  }
  result = 0;
  if (v20 != 2 && ((v20 ^ v19) & 1) == 0)
  {
LABEL_21:
    v22 = *(_QWORD *)(a1 + 40);
    v23 = *(_QWORD *)(a2 + 40);
    if (v22)
    {
      if (!v23)
        return 0;
      v24 = *(_QWORD *)(a1 + 32);
      v25 = *(_QWORD *)(a2 + 32);
      return v24 == v25 && v22 == v23 || (_stringCompareWithSmolCheck(_:_:expecting:)(v24, v22, v25, v23, 0) & 1) != 0;
    }
    return !v23;
  }
  return result;
}

uint64_t _s11MusicCoreUI12SymbolButtonC5BadgeV23__derived_struct_equalsySbAE_AEtFZ_0(void *a1, void *a2, double a3, double a4, double a5, double a6)
{
  id v10;
  id v11;
  char v12;

  if (a3 != a5 || a4 != a6)
    return 0;
  if (a1)
  {
    if (a2)
    {
      sub_1000087DC(0, (unint64_t *)&qword_1004A1510, UIColor_ptr);
      v10 = a2;
      v11 = a1;
      v12 = static NSObject.== infix(_:_:)(v11, v10);

      if ((v12 & 1) != 0)
        return 1;
    }
  }
  else if (!a2)
  {
    return 1;
  }
  return 0;
}

uint64_t sub_10035E7C8(void **a1, void **a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  char *v24;
  uint64_t v25;
  char v26;
  void (*v27)(char *, uint64_t);
  int *v28;
  void **v29;
  void **v30;
  double v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  double *v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  double *v41;
  double *v42;
  char v43;
  double *v44;
  int *v46;
  char *v47;
  void **v48;
  void **v49;

  v4 = type metadata accessor for UIView.Corner(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v47 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100005574(&qword_1004A10C0);
  __chkstk_darwin();
  v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_1004A1050);
  __chkstk_darwin();
  v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v13 = (char *)&v46 - v12;
  __chkstk_darwin();
  v15 = (char *)&v46 - v14;
  v48 = a1;
  v49 = a2;
  v16 = *a1;
  v17 = *a2;
  if (*a1)
  {
    if (!v17)
      goto LABEL_27;
    sub_1000087DC(0, &qword_100499968, UITraitCollection_ptr);
    v18 = v17;
    v19 = v16;
    v20 = static NSObject.== infix(_:_:)(v19, v18);

    if ((v20 & 1) == 0)
      goto LABEL_27;
  }
  else if (v17)
  {
    goto LABEL_27;
  }
  v21 = type metadata accessor for SymbolButton.Metrics(0);
  sub_100014A7C((uint64_t)v48 + *(int *)(v21 + 20), (uint64_t)v15, &qword_1004A1050);
  v46 = (int *)v21;
  sub_100014A7C((uint64_t)v49 + *(int *)(v21 + 20), (uint64_t)v13, &qword_1004A1050);
  v22 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_100014A7C((uint64_t)v15, (uint64_t)v9, &qword_1004A1050);
  sub_100014A7C((uint64_t)v13, v22, &qword_1004A1050);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v23((uint64_t)v9, 1, v4) == 1)
  {
    sub_100008758((uint64_t)v13, &qword_1004A1050);
    sub_100008758((uint64_t)v15, &qword_1004A1050);
    if (v23(v22, 1, v4) == 1)
    {
      sub_100008758((uint64_t)v9, &qword_1004A1050);
      goto LABEL_13;
    }
LABEL_11:
    sub_100008758((uint64_t)v9, &qword_1004A10C0);
    goto LABEL_27;
  }
  sub_100014A7C((uint64_t)v9, (uint64_t)v11, &qword_1004A1050);
  if (v23(v22, 1, v4) == 1)
  {
    sub_100008758((uint64_t)v13, &qword_1004A1050);
    sub_100008758((uint64_t)v15, &qword_1004A1050);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
    goto LABEL_11;
  }
  v24 = v47;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v47, v22, v4);
  v25 = sub_100006924((unint64_t *)&unk_1004A1500, (uint64_t (*)(uint64_t))&type metadata accessor for UIView.Corner, (uint64_t)&protocol conformance descriptor for UIView.Corner);
  v26 = dispatch thunk of static Equatable.== infix(_:_:)(v11, v24, v4, v25);
  v27 = *(void (**)(char *, uint64_t))(v5 + 8);
  v27(v24, v4);
  sub_100008758((uint64_t)v13, &qword_1004A1050);
  sub_100008758((uint64_t)v15, &qword_1004A1050);
  v27(v11, v4);
  sub_100008758((uint64_t)v9, &qword_1004A1050);
  if ((v26 & 1) == 0)
    goto LABEL_27;
LABEL_13:
  sub_1000087DC(0, (unint64_t *)&qword_10049A0D0, NSObject_ptr);
  v28 = v46;
  v30 = v48;
  v29 = v49;
  if ((static NSObject.== infix(_:_:)(*(void **)((char *)v48 + v46[6]), *(void **)((char *)v49 + v46[6])) & 1) == 0
    || (static NSObject.== infix(_:_:)(*(void **)((char *)v30 + v28[7]), *(void **)((char *)v29 + v28[7])) & 1) == 0)
  {
    goto LABEL_27;
  }
  v33 = v28[8];
  v31 = *(double *)((char *)v30 + v33);
  v32 = *(double *)((char *)v29 + v33);
  LOBYTE(v33) = 0;
  if (v31 != v32)
    return v33 & 1;
  v34 = v28[9];
  v35 = (uint64_t)v30 + v34;
  v36 = *(double *)((char *)v30 + v34);
  v37 = (double *)((char *)v29 + v34);
  if (v36 != *v37)
    return v33 & 1;
  if (*(double *)(v35 + 8) != v37[1])
    return v33 & 1;
  LOBYTE(v33) = 0;
  v38 = v28[10];
  v39 = (uint64_t)v30 + v38;
  v40 = *(double *)((char *)v30 + v38);
  v41 = (double *)((char *)v29 + v38);
  if (v40 != *v41 || *(double *)(v39 + 8) != v41[1])
    return v33 & 1;
  v33 = v28[11];
  v42 = (double *)((char *)v30 + v33);
  v43 = *((_BYTE *)v30 + v33 + 16);
  v44 = (double *)((char *)v29 + v33);
  LODWORD(v33) = *((unsigned __int8 *)v29 + v33 + 16);
  if ((v43 & 1) != 0)
  {
    if (!(_DWORD)v33)
      return v33 & 1;
LABEL_26:
    if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)((char *)v30 + v28[12]), *(float64x2_t *)((char *)v29 + v28[12])), (int32x4_t)vceqq_f64(*(float64x2_t *)((char *)v30 + v28[12] + 16), *(float64x2_t *)((char *)v29 + v28[12] + 16)))), 0xFuLL))) & 1) != 0)
    {
      LOBYTE(v33) = *((_BYTE *)v30 + v28[13]) ^ *((_BYTE *)v29 + v28[13]) ^ 1;
      return v33 & 1;
    }
    goto LABEL_27;
  }
  if ((v33 & 1) != 0)
  {
LABEL_27:
    LOBYTE(v33) = 0;
    return v33 & 1;
  }
  LOBYTE(v33) = 0;
  if (*v42 == *v44 && v42[1] == v44[1])
    goto LABEL_26;
  return v33 & 1;
}

uint64_t _s11MusicCoreUI12SymbolButtonC13ConfigurationV23__derived_struct_equalsySbAE_AEtFZ_0(uint64_t a1, __int128 *a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  void *v38;
  int *v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  void *v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  int *v51;
  void *v52;
  void *v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  id v61;
  BOOL v62;
  uint64_t v63;
  void *v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  id v72;
  int *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unsigned int (*v78)(uint64_t, uint64_t, void *);
  void *v79;
  int *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  void (*v85)(uint64_t, void *);
  uint64_t v86;
  uint64_t v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  void *v95;
  int *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void *v118;
  uint64_t result;
  int *v120;
  uint64_t v121;
  uint64_t *v122;
  void *v123;
  uint64_t *v124;
  void *v125;
  uint64_t v126;
  uint64_t v127;
  double v128;
  double *v129;
  uint64_t v130;
  double *v131;
  char v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char v138;
  uint64_t v139;
  uint64_t v140;
  void *v141;
  void *v142;
  id v143;
  id v144;
  char v145;
  uint64_t v146;
  int v147;
  int v148;
  _BOOL4 v149;
  uint64_t v150;
  void *v151;
  id v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  void *v156;
  uint64_t v157;
  void *v158;
  double v159;
  char *v160;
  int *v161;
  void *v162;
  char *v163;
  uint64_t v164;
  char *v165;
  char *v166;
  int *v167;
  _QWORD v168[7];
  _QWORD v169[7];
  _QWORD v170[3];
  char v171;
  uint64_t v172;
  uint64_t v173;
  _QWORD v174[3];
  char v175;
  uint64_t v176;
  uint64_t v177;
  _OWORD v178[4];
  char v179;
  _OWORD v180[4];
  char v181;
  _OWORD v182[7];
  uint64_t v183;
  _OWORD v184[7];
  uint64_t v185;

  v4 = (_QWORD *)type metadata accessor for UIView.Corner(0);
  v5 = *(v4 - 1);
  __chkstk_darwin();
  v7 = (char *)&v150 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v167 = (int *)sub_100005574(&qword_1004A10C0);
  __chkstk_darwin();
  v9 = (char *)&v150 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_1004A1050);
  __chkstk_darwin();
  v11 = (int *)((char *)&v150 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  v13 = (char *)&v150 - v12;
  __chkstk_darwin();
  v15 = (char *)&v150 - v14;
  v16 = *(_OWORD *)(a1 + 80);
  v182[4] = *(_OWORD *)(a1 + 64);
  v182[5] = v16;
  v182[6] = *(_OWORD *)(a1 + 96);
  v183 = *(_QWORD *)(a1 + 112);
  v17 = *(_OWORD *)(a1 + 16);
  v182[0] = *(_OWORD *)a1;
  v182[1] = v17;
  v18 = *(_OWORD *)(a1 + 48);
  v182[2] = *(_OWORD *)(a1 + 32);
  v182[3] = v18;
  v19 = *a2;
  v20 = a2[1];
  v21 = a2[3];
  v184[2] = a2[2];
  v184[3] = v21;
  v184[0] = v19;
  v184[1] = v20;
  v22 = a2[4];
  v23 = a2[5];
  v24 = a2[6];
  v185 = *((_QWORD *)a2 + 14);
  v184[5] = v23;
  v184[6] = v24;
  v184[4] = v22;
  if (!_s11MusicCoreUI12SymbolButtonC0D0V23__derived_struct_equalsySbAE_AEtFZ_0((double *)v182, (uint64_t)v184))
    return 0;
  v25 = *(_OWORD *)(a1 + 136);
  v26 = *(_OWORD *)(a1 + 168);
  v178[2] = *(_OWORD *)(a1 + 152);
  v178[3] = v26;
  v179 = *(_BYTE *)(a1 + 184);
  v178[0] = *(_OWORD *)(a1 + 120);
  v178[1] = v25;
  v27 = *(__int128 *)((char *)a2 + 136);
  v28 = *(__int128 *)((char *)a2 + 168);
  v180[2] = *(__int128 *)((char *)a2 + 152);
  v180[3] = v28;
  v181 = *((_BYTE *)a2 + 184);
  v180[0] = *(__int128 *)((char *)a2 + 120);
  v180[1] = v27;
  if ((_s11MusicCoreUI12SymbolButtonC5TitleV23__derived_struct_equalsySbAE_AEtFZ_0((double *)v178, (uint64_t)v180) & 1) == 0)
    return 0;
  v165 = v9;
  v166 = v13;
  v163 = v15;
  v164 = v5;
  v160 = v7;
  v161 = v11;
  v162 = v4;
  v29 = *(void **)(a1 + 200);
  v30 = *(_QWORD *)(a1 + 208);
  v31 = *(_QWORD *)(a1 + 216);
  v32 = *((_QWORD *)a2 + 24);
  v33 = (void *)*((_QWORD *)a2 + 25);
  v35 = *((_QWORD *)a2 + 26);
  v34 = *((_QWORD *)a2 + 27);
  if (v29 == (void *)1)
  {
    if (v33 == (void *)1)
      goto LABEL_9;
LABEL_7:
    v36 = *(_QWORD *)(a1 + 192);
    sub_1003609B8(v36, *(void **)(a1 + 200));
    sub_1003609B8(v32, v33);
    sub_100246168(v36, v29, v30, v31);
    sub_100246168(v32, v33, v35, v34);
    return 0;
  }
  if (v33 == (void *)1)
    goto LABEL_7;
  v159 = *(double *)(a1 + 192);
  v37 = v159;
  sub_1003609B8(*(uint64_t *)&v159, v29);
  sub_1003609B8(v32, v33);
  LODWORD(v158) = _s11MusicCoreUI12SymbolButtonC10BackgroundV23__derived_struct_equalsySbAE_AEtFZ_0(v29, v30, v31, v33, v35, v34, v37, *(double *)&v32);
  sub_100246168(v32, v33, v35, v34);
  sub_100246168(*(uint64_t *)&v159, v29, v30, v31);
  if ((v158 & 1) == 0)
    return 0;
LABEL_9:
  v39 = *(int **)(a1 + 224);
  v38 = *(void **)(a1 + 232);
  v40 = *(void **)(a1 + 240);
  v41 = *(_QWORD *)(a1 + 248);
  v43 = *(_QWORD *)(a1 + 256);
  v42 = *(_QWORD *)(a1 + 264);
  v44 = (void *)*((_QWORD *)a2 + 28);
  v45 = (void *)*((_QWORD *)a2 + 29);
  v47 = (void *)*((_QWORD *)a2 + 30);
  v46 = *((_QWORD *)a2 + 31);
  v48 = *((_QWORD *)a2 + 32);
  v159 = *((double *)a2 + 33);
  if (v39 == (int *)1)
  {
    v49 = (uint64_t)v166;
    if (v44 == (void *)1)
      goto LABEL_15;
LABEL_13:
    v50 = v44;
    v51 = v39;
    v157 = v48;
    v158 = v38;
    v52 = v45;
    v167 = v39;
    v53 = v47;
    v54 = v40;
    v55 = v46;
    sub_100364F74(v51, v38, v40);
    v56 = *(_QWORD *)&v159;
    sub_100364F74(v50, v52, v53);
    sub_100339680(v167, v158, v54, v41, v43, v42);
    sub_100339680(v50, v52, v53, v55, v157, v56);
    return 0;
  }
  if (v44 == (void *)1)
    goto LABEL_13;
  v170[0] = v39;
  v170[1] = v38;
  v158 = v38;
  v170[2] = v40;
  v171 = v41;
  v172 = v43;
  v173 = v42;
  v174[0] = v44;
  v174[1] = v45;
  v174[2] = v47;
  v175 = v46;
  v57 = *(_QWORD *)&v159;
  v176 = v48;
  v177 = *(_QWORD *)&v159;
  v151 = v45;
  v152 = v44;
  v155 = v41;
  v156 = v40;
  v58 = v46;
  v59 = v48;
  v153 = v42;
  v154 = v43;
  sub_100364F74(v39, v38, v40);
  v60 = v151;
  v61 = v152;
  sub_100364F74(v152, v151, v47);
  v62 = _s11MusicCoreUI12SymbolButtonC8MaterialV23__derived_struct_equalsySbAE_AEtFZ_0((uint64_t)v170, (uint64_t)v174);
  v63 = v57;
  LOBYTE(v57) = v62;
  sub_100339680(v61, v60, v47, v58, v59, v63);
  sub_100339680(v39, v158, v156, v155, v154, v153);
  v49 = (uint64_t)v166;
  if ((v57 & 1) == 0)
    return 0;
LABEL_15:
  v64 = *(void **)(a1 + 288);
  v65 = (void *)*((_QWORD *)a2 + 36);
  if (v64)
  {
    if (!v65)
      return 0;
    v66 = v49;
    v67 = *(_QWORD *)(a1 + 272);
    v68 = *(_QWORD *)(a1 + 280);
    v69 = *((_QWORD *)a2 + 34);
    v70 = *((_QWORD *)a2 + 35);
    v71 = v65;
    v72 = v64;
    LOBYTE(v169[0]) = v70 & 1;
    LOBYTE(v67) = static UIView.Border.__derived_struct_equals(_:_:)(v67, v68 & 1, (uint64_t)v72, v69, v70 & 1, (uint64_t)v71);

    if ((v67 & 1) == 0)
      return 0;
  }
  else
  {
    v66 = v49;
    if (v65)
      return 0;
  }
  v73 = (int *)type metadata accessor for SymbolButton.Configuration(0);
  v74 = (uint64_t)v163;
  sub_100014A7C(a1 + v73[9], (uint64_t)v163, &qword_1004A1050);
  sub_100014A7C((uint64_t)a2 + v73[9], v66, &qword_1004A1050);
  v75 = (uint64_t)v165;
  v76 = (uint64_t)&v165[v167[12]];
  sub_100014A7C(v74, (uint64_t)v165, &qword_1004A1050);
  v77 = v75;
  sub_100014A7C(v66, v76, &qword_1004A1050);
  v78 = *(unsigned int (**)(uint64_t, uint64_t, void *))(v164 + 48);
  v79 = v162;
  if (v78(v77, 1, v162) == 1)
  {
    sub_100008758(v66, &qword_1004A1050);
    v77 = (uint64_t)v165;
    sub_100008758(v74, &qword_1004A1050);
    if (v78(v76, 1, v79) == 1)
    {
      sub_100008758(v77, &qword_1004A1050);
      goto LABEL_27;
    }
LABEL_25:
    sub_100008758(v77, &qword_1004A10C0);
    return 0;
  }
  v80 = v161;
  sub_100014A7C(v77, (uint64_t)v161, &qword_1004A1050);
  if (v78(v76, 1, v79) == 1)
  {
    sub_100008758((uint64_t)v166, &qword_1004A1050);
    sub_100008758((uint64_t)v163, &qword_1004A1050);
    (*(void (**)(int *, void *))(v164 + 8))(v80, v79);
    goto LABEL_25;
  }
  v81 = v164;
  v82 = (uint64_t)v160;
  (*(void (**)(char *, uint64_t, void *))(v164 + 32))(v160, v76, v79);
  v83 = sub_100006924((unint64_t *)&unk_1004A1500, (uint64_t (*)(uint64_t))&type metadata accessor for UIView.Corner, (uint64_t)&protocol conformance descriptor for UIView.Corner);
  v84 = dispatch thunk of static Equatable.== infix(_:_:)(v80, v82, v79, v83);
  v85 = *(void (**)(uint64_t, void *))(v81 + 8);
  v85(v82, v79);
  sub_100008758((uint64_t)v166, &qword_1004A1050);
  sub_100008758((uint64_t)v163, &qword_1004A1050);
  v85((uint64_t)v80, v79);
  sub_100008758(v77, &qword_1004A1050);
  if ((v84 & 1) == 0)
    return 0;
LABEL_27:
  v161 = v73;
  v86 = v73[10];
  v88 = *(void **)(a1 + v86);
  v87 = *(_QWORD *)(a1 + v86 + 8);
  v90 = *(_QWORD *)(a1 + v86 + 16);
  v89 = *(_QWORD *)(a1 + v86 + 24);
  v92 = *(_QWORD *)(a1 + v86 + 32);
  v91 = *(_QWORD *)(a1 + v86 + 40);
  v93 = *(void **)(a1 + v86 + 48);
  v94 = (uint64_t)a2 + v86;
  v95 = *(void **)v94;
  v96 = *(int **)(v94 + 8);
  v98 = *(_QWORD *)(v94 + 16);
  v97 = *(_QWORD *)(v94 + 24);
  v100 = *(_QWORD *)(v94 + 32);
  v99 = *(_QWORD *)(v94 + 40);
  v101 = *(void **)(v94 + 48);
  if (!v88)
  {
    if (!v95)
      goto LABEL_35;
LABEL_32:
    v111 = v90;
    v163 = (char *)v90;
    v164 = v89;
    v112 = v98;
    v113 = v89;
    v114 = v97;
    v115 = v92;
    v165 = (char *)v92;
    v166 = (char *)v91;
    v116 = v100;
    v117 = v99;
    v162 = v93;
    v167 = v96;
    v118 = v101;
    sub_10024DEC0(v88, v87, v111, v113, v115, v91, v93);
    sub_10024DEC0(v95, (uint64_t)v96, v112, v114, v116, v117, v118);
    sub_10024613C(v88, v87, (uint64_t)v163, v164, (uint64_t)v165, (uint64_t)v166, v162);
    sub_10024613C(v95, (uint64_t)v167, v112, v114, v116, v117, v118);
    return 0;
  }
  if (!v95)
    goto LABEL_32;
  v168[0] = v88;
  v168[1] = v87;
  v168[2] = v90;
  v168[3] = v89;
  v168[4] = v92;
  v168[5] = v91;
  v168[6] = v93;
  v169[0] = v95;
  v166 = (char *)v91;
  v167 = v96;
  v169[1] = v96;
  v169[2] = v98;
  v169[3] = v97;
  v169[4] = v100;
  v169[5] = v99;
  v169[6] = v101;
  v160 = (char *)v87;
  v102 = v87;
  v103 = v90;
  v163 = (char *)v90;
  v164 = v89;
  v104 = v98;
  v105 = v89;
  v106 = v97;
  v107 = v92;
  v165 = (char *)v92;
  v108 = v100;
  v109 = v99;
  v162 = v93;
  v110 = v101;
  sub_10024DEC0(v88, v102, v103, v105, v107, v91, v93);
  sub_10024DEC0(v95, (uint64_t)v167, v104, v106, v108, v109, v110);
  LODWORD(v159) = _s11MusicCoreUI12SymbolButtonC10CustomViewV23__derived_struct_equalsySbAE_AEtFZ_0((uint64_t)v168, (uint64_t)v169);
  sub_10024613C(v95, (uint64_t)v167, v104, v106, v108, v109, v110);
  sub_10024613C(v88, (uint64_t)v160, (uint64_t)v163, v164, (uint64_t)v165, (uint64_t)v166, v162);
  if ((LOBYTE(v159) & 1) == 0)
    return 0;
LABEL_35:
  v120 = v161;
  v121 = v161[11];
  v122 = (uint64_t *)(a1 + v121);
  v123 = *(void **)(a1 + v121 + 16);
  v124 = (uint64_t *)((char *)a2 + v121);
  v125 = (void *)v124[2];
  if (v123 == (void *)1)
  {
    if (v125 != (void *)1)
      return 0;
  }
  else
  {
    if (v125 == (void *)1)
      return 0;
    result = 0;
    v134 = *v122;
    v135 = *v124;
    if (*(double *)v122 != *(double *)v124)
      return result;
    v136 = v122[1];
    v137 = v124[1];
    if (*(double *)&v136 != *(double *)&v137)
      return result;
    if (v123)
    {
      if (!v125)
        return 0;
      sub_1000087DC(0, (unint64_t *)&qword_1004A1510, UIColor_ptr);
      sub_1003609EC(v135, v137, v125);
      sub_1003609EC(v134, v136, v123);
      v138 = static NSObject.== infix(_:_:)(v123, v125);
      sub_10024DEB0(v135, v137, v125);
      sub_10024DEB0(v134, v136, v123);
      v120 = v161;
      if ((v138 & 1) == 0)
        return 0;
    }
    else
    {
      v120 = v161;
      if (v125)
        return 0;
    }
  }
  if (*(double *)(a1 + v120[12]) != *(double *)((char *)a2 + v120[12]))
    return 0;
  result = 0;
  v126 = v120[13];
  v127 = a1 + v126;
  v128 = *(double *)(a1 + v126);
  v129 = (double *)((char *)a2 + v126);
  if (v128 == *v129 && *(double *)(v127 + 8) == v129[1])
  {
    v130 = v161[14];
    v131 = (double *)(a1 + v130);
    v132 = *(_BYTE *)(a1 + v130 + 16);
    v133 = (uint64_t)a2 + v130;
    if ((v132 & 1) != 0)
    {
      if (!*(_BYTE *)(v133 + 16))
        return 0;
      goto LABEL_55;
    }
    if ((*(_BYTE *)(v133 + 16) & 1) != 0)
      return 0;
    result = 0;
    if (*v131 == *(double *)v133 && v131[1] == *(double *)(v133 + 8))
    {
LABEL_55:
      if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + v161[15]), *(float64x2_t *)((char *)a2 + v161[15])), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + v161[15] + 16), *(float64x2_t *)((char *)a2 + v161[15] + 16)))), 0xFuLL))) & 1) == 0)return 0;
      v139 = v161[16];
      if ((_s11MusicCoreUI12SymbolButtonC13ConfigurationV13AccessibilityV23__derived_struct_equalsySbAG_AGtFZ_0(*(unsigned __int8 *)(a1 + v139), *(_QWORD *)(a1 + v139 + 8), *(_QWORD *)(a1 + v139 + 16), *(_BYTE *)(a1 + v139 + 24), *((unsigned __int8 *)a2 + v139), *(_QWORD *)((char *)a2 + v139 + 8), *(_QWORD *)((char *)a2 + v139 + 16), *((_BYTE *)a2 + v139 + 24)) & 1) == 0|| *(double *)(a1 + v161[17]) != *(double *)((char *)a2 + v161[17]))
      {
        return 0;
      }
      v140 = v161[18];
      v141 = *(void **)(a1 + v140);
      v142 = *(void **)((char *)a2 + v140);
      if (v141)
      {
        if (!v142)
          return 0;
        sub_1000087DC(0, (unint64_t *)&qword_1004A1510, UIColor_ptr);
        v143 = v142;
        v144 = v141;
        v145 = static NSObject.== infix(_:_:)(v144, v143);

        if ((v145 & 1) == 0)
          return 0;
      }
      else if (v142)
      {
        return 0;
      }
      v146 = v161[19];
      v147 = *(unsigned __int8 *)(a1 + v146);
      v148 = *((unsigned __int8 *)a2 + v146);
      if (v147 == 2)
      {
        if (v148 == 2)
          return 1;
      }
      else
      {
        v149 = (v147 & 1) == 0;
        if (v148 != 2 && ((v149 ^ v148) & 1) != 0)
          return 1;
      }
      return 0;
    }
  }
  return result;
}

void sub_10035F808(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  id v8;

  v2 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_customView;
  v3 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_customView);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_customView) = a1;
  v4 = a1;

  v5 = *(void **)(v1 + v2);
  if (v5)
  {
    v6 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_backgroundView);
    v8 = v5;
    v7 = v6;
    if (objc_msgSend(v7, "isDescendantOfView:", v7))
    {
      objc_msgSend(v7, "insertSubview:aboveSubview:", v8, v7);

    }
    else
    {

      if (!objc_msgSend(v8, "isDescendantOfView:", v7))
        objc_msgSend(v7, "addSubview:", v8);
    }
    sub_1003587C0();

  }
}

uint64_t _s11MusicCoreUI12SymbolButtonC0D0V21hasSignificantChanges4from2toSbAESg_AItFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  _BOOL4 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[24];
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[24];
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[24];
  uint64_t v36;
  uint64_t v37;
  _BYTE v38[24];
  id v39;
  _BYTE v40[24];
  id v41;
  _QWORD v42[15];
  _QWORD v43[15];

  sub_1000149A8(a1, (uint64_t)v43, &qword_1004A1590);
  if (v43[3])
  {
    v5 = v43[0];
    v4 = v43[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    v5 = 0;
    v4 = 0;
  }
  sub_1000149A8(a2, (uint64_t)v42, &qword_1004A1590);
  if (!v42[3])
  {
    if (!v4)
      goto LABEL_15;
    goto LABEL_13;
  }
  v6 = v42[0];
  v7 = v42[1];
  swift_bridgeObjectRetain();
  if (!v4)
  {
    if (!v7)
      goto LABEL_15;
LABEL_13:
    swift_bridgeObjectRelease();
    return 1;
  }
  if (!v7)
    goto LABEL_13;
  if (v5 == v6 && v4 == v7)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v4, v6, v7, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0)
      return 1;
  }
LABEL_15:
  sub_1000149A8(a1, (uint64_t)v40, &qword_1004A1590);
  v9 = v41;
  if (v41)
  {
    v10 = v41;
    sub_1000149A8(a2, (uint64_t)v38, &qword_1004A1590);
    v11 = v39;
    if (!v39)
    {

      return 1;
    }
    v12 = v39;
    v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v15 = v14;
    v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    if (v13 == v17 && v15 == v16)
    {
      swift_bridgeObjectRelease_n(v15, 2);

    }
    else
    {
      v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v15, v17, v16, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      if ((v18 & 1) == 0)
        return 1;
    }
  }
  else
  {
    sub_1000149A8(a2, (uint64_t)v38, &qword_1004A1590);
    if (v39)
      return 1;
  }
  sub_1000149A8(a2, (uint64_t)v35, &qword_1004A1590);
  v19 = v36;
  v20 = v37;
  sub_1000149A8(a1, (uint64_t)v32, &qword_1004A1590);
  if (v33)
  {
    if (v19)
      v21 = v20;
    else
      v21 = 0;
    result = 1;
    if (!v19 || v34 != v21)
      return result;
    goto LABEL_34;
  }
  if (v19)
    return 1;
LABEL_34:
  sub_1000149A8(a2, (uint64_t)v29, &qword_1004A1590);
  v23 = v30;
  v24 = v31;
  sub_1000149A8(a1, (uint64_t)&v26, &qword_1004A1590);
  v25 = (v27 | v23) == 0;
  if (v27)
  {
    if (v23)
      v25 = v28 == v24;
  }
  return !v25;
}

uint64_t sub_10035FBA0(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  double v21;
  double v22;
  char v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  char v29;
  _QWORD v31[9];
  char v32[16];
  uint64_t v33;
  id v34;
  char v35[16];
  uint64_t v36;
  double v37;
  char v38[16];
  uint64_t v39;
  double v40;
  _BYTE v41[16];
  id v42;
  char v43[16];
  id v44;
  _QWORD v45[9];
  _QWORD v46[9];

  sub_1000149A8(a1, (uint64_t)v31, &qword_1004A1588);
  v4 = (void *)v31[7];
  sub_1000149A8(a1, (uint64_t)v46, &qword_1004A1588);
  if (v46[2])
  {
    v6 = v46[0];
    v5 = v46[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  sub_1000149A8(a2, (uint64_t)v45, &qword_1004A1588);
  if (!v45[2])
  {
    if (!v5)
      goto LABEL_15;
    goto LABEL_13;
  }
  v8 = v45[0];
  v7 = v45[1];
  swift_bridgeObjectRetain();
  if (!v5)
  {
    if (!v7)
      goto LABEL_15;
LABEL_13:
    swift_bridgeObjectRelease();
    goto LABEL_40;
  }
  if (!v7)
    goto LABEL_13;
  if (v6 == v8 && v5 == v7)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v5, v8, v7, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0)
      goto LABEL_40;
  }
LABEL_15:
  sub_1000149A8(a1, (uint64_t)v43, &qword_1004A1588);
  v10 = v44;
  if (v44)
  {
    v11 = v44;
    sub_1000149A8(a2, (uint64_t)v41, &qword_1004A1588);
    v12 = v42;
    if (!v42)
    {

      goto LABEL_40;
    }
    v13 = v42;
    v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v16 = v15;
    v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
    if (v14 == v18 && v16 == v17)
    {
      swift_bridgeObjectRelease_n(v16, 2);

    }
    else
    {
      v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v16, v18, v17, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      if ((v19 & 1) == 0)
        goto LABEL_40;
    }
  }
  else
  {
    sub_1000149A8(a2, (uint64_t)v41, &qword_1004A1588);
    if (v42)
      goto LABEL_40;
  }
  sub_1000149A8(a2, (uint64_t)v38, &qword_1004A1588);
  v20 = v39;
  v21 = v40;
  sub_1000149A8(a1, (uint64_t)v35, &qword_1004A1588);
  if (!v36)
  {
    if (!v20)
    {
      v4 = 0;
LABEL_32:
      sub_1000149A8(a2, (uint64_t)v32, &qword_1004A1588);
      if (v33)
      {
        v25 = v34;
        v26 = v34;
        v27 = v26;
        if (v4)
        {
          if (v25)
          {
            sub_1000087DC(0, (unint64_t *)&qword_1004A1510, UIColor_ptr);
            v28 = v4;
            v29 = static NSObject.== infix(_:_:)(v28, v27);

            v23 = v29 ^ 1;
            return v23 & 1;
          }
          goto LABEL_37;
        }
        if (v25)
        {

          goto LABEL_40;
        }
      }
      else if (v4)
      {
LABEL_37:

        goto LABEL_40;
      }
      v23 = 0;
      return v23 & 1;
    }
LABEL_40:
    v23 = 1;
    return v23 & 1;
  }
  v22 = 0.0;
  if (v20)
    v22 = v21;
  v23 = 1;
  if (v20 && v37 == v22)
  {
    v24 = v4;
    goto LABEL_32;
  }
  return v23 & 1;
}

void _s11MusicCoreUI12SymbolButtonC5coderACSgSo7NSCoderC_tcfc_0()
{
  _BYTE *v0;
  _BYTE *v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  objc_class *v9;
  id v10;
  uint64_t v11;
  double v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  char *v17;
  uint64_t v18;
  char v19[24];
  objc_super v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_debugLabel];
  *v2 = 0;
  v2[1] = 0;
  v3 = &v0[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_configurationProvider];
  *v3 = 0;
  v3[1] = 0;
  v4 = &v0[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_handler];
  *v4 = 0;
  v4[1] = 0;
  v0[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHighlighted] = 1;
  v0[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenSelected] = 1;
  v0[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenDisabled] = 1;
  v0[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHidden] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_pendingAnimatedChangesCount] = 0;
  v5 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_hitRectMinimumSize;
  if (qword_100498D20 != -1)
    swift_once(&qword_100498D20, sub_10035C94C);
  *(_OWORD *)&v1[v5] = static SymbolButton.Configuration.hitRectMinimumSize;
  v6 = &v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_buildMenu];
  *v6 = 0;
  v6[1] = 0;
  v7 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_containerView;
  *(_QWORD *)&v1[v7] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v8 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_materialView;
  v21 = 1;
  v9 = (objc_class *)type metadata accessor for SymbolButton.MaterialView();
  v22 = 0u;
  v23 = 0u;
  v24 = 0;
  v20.receiver = objc_allocWithZone(v9);
  v20.super_class = v9;
  v10 = objc_msgSendSuper2(&v20, "initWithEffect:", 0);
  sub_10035AF88((uint64_t)&v21);

  *(_QWORD *)&v1[v8] = v10;
  v11 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_backgroundView;
  if (qword_100498CF8 != -1)
    swift_once(&qword_100498CF8, sub_100355D50);
  swift_beginAccess(&static SymbolButton.Background.clear, v19, 0, 0);
  v12 = *(double *)&static SymbolButton.Background.clear;
  v13 = (void *)qword_1004A4078;
  v14 = qword_1004A4080;
  v15 = qword_1004A4088;
  objc_allocWithZone((Class)type metadata accessor for SymbolButton.BackgroundView());
  swift_bridgeObjectRetain();
  v16 = v13;
  *(_QWORD *)&v1[v11] = sub_10035B374(v13, v12, v14, v15);
  *(_QWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___imageView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___titleLabel] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_customView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView] = 0;
  v17 = &v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___metrics];
  v18 = type metadata accessor for SymbolButton.Metrics(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_isClippingInvalidated] = 1;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001003B2590, "MusicCoreUI/SymbolButton.swift", 30, 2, 60, 0);
  __break(1u);
}

uint64_t sub_100360170(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SymbolButton.Configuration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003601B4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003601D8()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  id *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  id *v23;
  void *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;

  v1 = (int *)type metadata accessor for SymbolButton.Configuration(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v7 = *(void **)(v0 + v4 + 200);
  if (v7 != (void *)1)
  {

    swift_bridgeObjectRelease();
  }
  v8 = *(void **)(v6 + 224);
  if (v8 != (void *)1)
  {

    swift_bridgeObjectRelease();
  }
  v29 = v5;
  v9 = v5 + v3;

  v10 = v6 + v1[9];
  v11 = type metadata accessor for UIView.Corner(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (!v13(v10, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  v14 = v9 + v4;
  v15 = (id *)(v6 + v1[10]);
  if (*v15)
  {

  }
  v16 = v14 & ~v3;
  v17 = *(void **)(v6 + v1[11] + 16);
  if (v17 != (void *)1)

  v18 = v6 + v1[16];
  v19 = v0 + v16;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v20 = *(void **)(v0 + v16 + 200);
  if (v20 != (void *)1)
  {

    swift_bridgeObjectRelease();
  }
  v21 = *(void **)(v19 + 224);
  if (v21 != (void *)1)
  {

    swift_bridgeObjectRelease();
  }

  v22 = v19 + v1[9];
  if (!v13(v22, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v22, v11);
  v23 = (id *)(v19 + v1[10]);
  if (*v23)
  {

  }
  v24 = *(void **)(v19 + v1[11] + 16);
  if (v24 != (void *)1)

  v25 = (v29 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v26 = v3 | 7;
  v27 = v19 + v1[16];

  return swift_deallocObject(v0, ((v25 + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v26);
}

void sub_1003604C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(type metadata accessor for SymbolButton.Configuration(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  sub_100352D9C((uint64_t *)(v0 + v3), v0 + ((v4 + v2 + v3) & ~v2), *(char **)(v0 + ((v4 + ((v4 + v2 + v3) & ~v2) + 7) & 0xFFFFFFFFFFFFFFF8)), *(char ***)(v0 + ((((v4 + ((v4 + v2 + v3) & ~v2) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_10036051C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10036052C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_10036053C(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_100360544()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  id *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  id *v23;
  void *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;

  v1 = (int *)type metadata accessor for SymbolButton.Configuration(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);

  v6 = v0 + v4;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v7 = *(void **)(v0 + v4 + 200);
  if (v7 != (void *)1)
  {

    swift_bridgeObjectRelease();
  }
  v8 = *(void **)(v6 + 224);
  if (v8 != (void *)1)
  {

    swift_bridgeObjectRelease();
  }
  v29 = v5;
  v9 = v5 + v3;

  v10 = v6 + v1[9];
  v11 = type metadata accessor for UIView.Corner(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (!v13(v10, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  v14 = v9 + v4;
  v15 = (id *)(v6 + v1[10]);
  if (*v15)
  {

  }
  v16 = v14 & ~v3;
  v17 = *(void **)(v6 + v1[11] + 16);
  if (v17 != (void *)1)

  v18 = v6 + v1[16];
  v19 = v0 + v16;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v20 = *(void **)(v0 + v16 + 200);
  if (v20 != (void *)1)
  {

    swift_bridgeObjectRelease();
  }
  v21 = *(void **)(v19 + 224);
  if (v21 != (void *)1)
  {

    swift_bridgeObjectRelease();
  }

  v22 = v19 + v1[9];
  if (!v13(v22, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v22, v11);
  v23 = (id *)(v19 + v1[10]);
  if (*v23)
  {

  }
  v24 = *(void **)(v19 + v1[11] + 16);
  if (v24 != (void *)1)

  v25 = (v29 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v26 = v3 | 7;
  v27 = v19 + v1[16];

  swift_release(*(_QWORD *)(v0 + v25));
  swift_bridgeObjectRelease();
  return swift_deallocObject(v0, ((v25 + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v26);
}

uint64_t sub_10036083C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(type metadata accessor for SymbolButton.Configuration(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 24) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  return sub_100353844(*(void **)(v0 + 16), v0 + v3, v0 + ((v4 + v2 + v3) & ~v2), *(_QWORD *)(v0 + ((v4 + ((v4 + v2 + v3) & ~v2) + 7) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((((v4 + ((v4 + v2 + v3) & ~v2) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_10036089C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 64, 7);
}

void sub_1003608D8(uint64_t a1)
{
  uint64_t v1;

  sub_100354AA0(a1, *(_QWORD *)(v1 + 16), *(char **)(v1 + 24), *(_QWORD *)(v1 + 32), *(char **)(v1 + 40), *(char **)(v1 + 48));
}

uint64_t sub_1003608E8(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for SymbolButton.Symbol(a2, a1);
  return a2;
}

uint64_t sub_10036091C(uint64_t a1, uint64_t a2)
{
  assignWithTake for SymbolButton.Symbol(a2, a1);
  return a2;
}

uint64_t sub_100360950(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for SymbolButton.Title(a2, a1);
  return a2;
}

uint64_t sub_100360984(uint64_t a1, uint64_t a2)
{
  assignWithTake for SymbolButton.Title(a2, a1);
  return a2;
}

id sub_1003609B8(uint64_t a1, void *a2)
{
  id result;

  if (a2 != (void *)1)
  {
    swift_bridgeObjectRetain();
    return a2;
  }
  return result;
}

id sub_1003609EC(uint64_t a1, uint64_t a2, void *a3)
{
  id result;

  if (a3 != (void *)1)
    return a3;
  return result;
}

uint64_t sub_1003609FC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

id sub_100360A20()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "setEnabled:", *(unsigned __int8 *)(v0 + 24));
}

uint64_t sub_100360A34()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

BOOL sub_100360A44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _BOOL8 result;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  double v21;
  _QWORD v22[9];
  _BYTE v23[16];
  uint64_t v24;
  double v25;
  _BYTE v26[16];
  id v27;
  _BYTE v28[16];
  id v29;
  _QWORD v30[9];
  _QWORD v31[9];

  sub_1000149A8(a1, (uint64_t)v31, &qword_1004A1588);
  if (v31[2])
  {
    v5 = v31[0];
    v4 = v31[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    v5 = 0;
    v4 = 0;
  }
  sub_1000149A8(a2, (uint64_t)v30, &qword_1004A1588);
  if (!v30[2])
  {
    if (!v4)
      goto LABEL_15;
    goto LABEL_13;
  }
  v7 = v30[0];
  v6 = v30[1];
  swift_bridgeObjectRetain();
  if (!v4)
  {
    if (!v6)
      goto LABEL_15;
LABEL_13:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (!v6)
    goto LABEL_13;
  if (v5 == v7 && v4 == v6)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v4, v7, v6, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = 0;
    if ((v8 & 1) == 0)
      return result;
  }
LABEL_15:
  sub_1000149A8(a1, (uint64_t)v28, &qword_1004A1588);
  v10 = v29;
  if (v29)
  {
    v11 = v29;
    sub_1000149A8(a2, (uint64_t)v26, &qword_1004A1588);
    v12 = v27;
    if (!v27)
    {

      return 0;
    }
    v13 = v27;
    v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v16 = v15;
    v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
    if (v14 == v18 && v16 == v17)
    {
      swift_bridgeObjectRelease_n(v16, 2);

    }
    else
    {
      v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v16, v18, v17, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      result = 0;
      if ((v19 & 1) == 0)
        return result;
    }
  }
  else
  {
    sub_1000149A8(a2, (uint64_t)v26, &qword_1004A1588);
    if (v27)
      return 0;
  }
  sub_1000149A8(a2, (uint64_t)v23, &qword_1004A1588);
  v20 = v24;
  v21 = v25;
  sub_1000149A8(a1, (uint64_t)v22, &qword_1004A1588);
  if (!v22[2])
    return !v20;
  result = 0;
  if (v20 && *(double *)&v22[3] == v21)
    return 1;
  return result;
}

id _s11MusicCoreUI12SymbolButtonC22contextMenuInteraction_016configurationForG10AtLocationSo09UIContextG13ConfigurationCSgSo0mgH0C_So7CGPointVtF_0()
{
  char *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  void *v6;
  _QWORD *v7;
  char *v8;
  id v9;
  _QWORD aBlock[5];
  _QWORD *v12;
  char v13[24];

  v1 = (uint64_t *)&v0[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_buildMenu];
  swift_beginAccess(&v0[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_buildMenu], v13, 0, 0);
  v2 = *v1;
  if (!*v1)
    return 0;
  v3 = v1[1];
  v4 = (_QWORD *)swift_allocObject(&unk_100466958, 40, 7);
  v4[2] = v2;
  v4[3] = v3;
  v4[4] = v0;
  v5 = (void *)objc_opt_self(UIContextMenuConfiguration);
  aBlock[4] = sub_1001F6758;
  v12 = v4;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10035DC5C;
  aBlock[3] = &unk_100466970;
  v6 = _Block_copy(aBlock);
  v7 = v12;
  sub_10003A434(v2, v3);
  sub_10003A434(v2, v3);
  v8 = v0;
  swift_retain(v4);
  v9 = objc_msgSend(v5, "configurationWithIdentifier:previewProvider:actionProvider:", 0, 0, v6, swift_release(v7).n128_f64[0]);
  swift_release(v4);
  _Block_release(v6);
  objc_msgSend(v9, "setPreferredMenuElementOrder:", 2);
  sub_10003A5C8(v2, v3);
  return v9;
}

uint64_t _s11MusicCoreUI12SymbolButtonC18pointerInteraction_8styleForSo14UIPointerStyleCSgSo0jG0C_So0J6RegionCtF_0(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  unsigned int *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  char *v38;
  id v39;
  double v40;
  double v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  id v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char v53[24];

  v3 = type metadata accessor for UIView.Corner.Radius(0);
  v50 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v49 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_1004A1528);
  __chkstk_darwin();
  v6 = (double *)((char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v11 = (char *)&v46 - v10;
  v51 = type metadata accessor for UIPointerEffect(0);
  v12 = *(_QWORD *)(v51 - 8);
  __chkstk_darwin();
  v52 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v15 = (uint64_t *)((char *)&v46 - v14);
  v16 = objc_msgSend(a1, "view");
  if (!v16)
    return 0;
  v17 = v16;
  if (!objc_msgSend(v1, "isUserInteractionEnabled"))
  {

    return 0;
  }
  v48 = v3;
  v18 = (uint64_t)&v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration];
  swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration], v53, 0, 0);
  sub_100082248(v18, (uint64_t)v11, type metadata accessor for SymbolButton.Configuration);
  v19 = (void *)*((_QWORD *)v11 + 28);
  if (v19 == (void *)1)
  {
    sub_100006798((uint64_t)v11, type metadata accessor for SymbolButton.Configuration);
LABEL_9:
    v21 = (unsigned int *)&enum case for UIPointerEffect.lift(_:);
    if (*(_QWORD *)(v18 + 200) == 1 && !*(_QWORD *)(v18 + *(int *)(v7 + 40)))
      v21 = (unsigned int *)&enum case for UIPointerEffect.highlight(_:);
    goto LABEL_12;
  }
  v47 = v19;
  sub_100006798((uint64_t)v11, type metadata accessor for SymbolButton.Configuration);
  if (!v19)
    goto LABEL_9;

  v21 = (unsigned int *)&enum case for UIPointerEffect.lift(_:);
LABEL_12:
  *v15 = objc_msgSend(objc_allocWithZone((Class)UITargetedPreview), "initWithView:", v17);
  v22 = v51;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v12 + 104))(v15, *v21, v51);
  (*(void (**)(char *, _QWORD *, uint64_t))(v12 + 16))(v52, v15, v22);
  v23 = v1;
  objc_msgSend(v1, "bounds");
  v25 = v24;
  v27 = v26;
  v29 = v28;
  v31 = v30;
  sub_100082248(v18, (uint64_t)v9, type metadata accessor for SymbolButton.Configuration);
  v32 = &v9[*(int *)(v7 + 36)];
  v33 = type metadata accessor for UIView.Corner(0);
  v34 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v32, 1, v33);
  v35 = v48;
  if ((_DWORD)v34)
  {
    v36 = sub_100006798((uint64_t)v9, type metadata accessor for SymbolButton.Configuration);
    v37 = static UIPointerShape.defaultCornerRadius.getter(v36);
  }
  else
  {
    v38 = v49;
    UIView.Corner.radius.getter(v34);
    sub_100006798((uint64_t)v9, type metadata accessor for SymbolButton.Configuration);
    v39 = objc_msgSend(v23, "bounds");
    v37 = UIView.Corner.Radius.value(in:)(v39, v40, v41);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v38, v35);
  }
  sub_1000087DC(0, &qword_1004A1530, UIPointerStyle_ptr);
  *(_QWORD *)v6 = v25;
  *((_QWORD *)v6 + 1) = v27;
  *((_QWORD *)v6 + 2) = v29;
  *((_QWORD *)v6 + 3) = v31;
  v6[4] = v37;
  v42 = enum case for UIPointerShape.roundedRect(_:);
  v43 = type metadata accessor for UIPointerShape(0);
  v44 = *(_QWORD *)(v43 - 8);
  (*(void (**)(double *, uint64_t, uint64_t))(v44 + 104))(v6, v42, v43);
  (*(void (**)(double *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v6, 0, 1, v43);
  v20 = UIPointerStyle.init(effect:shape:)(v52, v6);

  (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v15, v51);
  return v20;
}

unint64_t sub_100361258(uint64_t a1)
{
  unint64_t result;

  result = sub_10036127C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10036127C()
{
  unint64_t result;

  result = qword_1004A10E8;
  if (!qword_1004A10E8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SymbolButton.Symbol, &type metadata for SymbolButton.Symbol);
    atomic_store(result, (unint64_t *)&qword_1004A10E8);
  }
  return result;
}

unint64_t sub_1003612C0(uint64_t a1)
{
  unint64_t result;

  result = sub_1003612E4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1003612E4()
{
  unint64_t result;

  result = qword_1004A10F0;
  if (!qword_1004A10F0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SymbolButton.Title, &type metadata for SymbolButton.Title);
    atomic_store(result, (unint64_t *)&qword_1004A10F0);
  }
  return result;
}

unint64_t sub_100361328(uint64_t a1)
{
  unint64_t result;

  result = sub_10036134C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10036134C()
{
  unint64_t result;

  result = qword_1004A10F8;
  if (!qword_1004A10F8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SymbolButton.Background, &type metadata for SymbolButton.Background);
    atomic_store(result, (unint64_t *)&qword_1004A10F8);
  }
  return result;
}

unint64_t sub_100361394()
{
  unint64_t result;

  result = qword_1004A1100;
  if (!qword_1004A1100)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SymbolButton.Material.Color, &type metadata for SymbolButton.Material.Color);
    atomic_store(result, (unint64_t *)&qword_1004A1100);
  }
  return result;
}

unint64_t sub_1003613D8(uint64_t a1)
{
  unint64_t result;

  result = sub_1003613FC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1003613FC()
{
  unint64_t result;

  result = qword_1004A1108;
  if (!qword_1004A1108)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SymbolButton.CustomView, &type metadata for SymbolButton.CustomView);
    atomic_store(result, (unint64_t *)&qword_1004A1108);
  }
  return result;
}

unint64_t sub_100361440(uint64_t a1)
{
  unint64_t result;

  result = sub_100361464();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100361464()
{
  unint64_t result;

  result = qword_1004A1110;
  if (!qword_1004A1110)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SymbolButton.Badge, &type metadata for SymbolButton.Badge);
    atomic_store(result, (unint64_t *)&qword_1004A1110);
  }
  return result;
}

uint64_t sub_1003614A8()
{
  return type metadata accessor for SymbolButton(0);
}

void sub_1003614B0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[20];

  v6[0] = &unk_1003A02F8;
  v6[1] = &unk_1003A02F8;
  v6[2] = &unk_1003A02F8;
  v6[3] = &unk_1003A0310;
  v6[4] = &unk_1003A0310;
  v6[5] = &unk_1003A0310;
  v6[6] = &unk_1003A0310;
  v2 = type metadata accessor for SymbolButton.Configuration(319);
  if (v3 <= 0x3F)
  {
    v6[7] = *(_QWORD *)(v2 - 8) + 64;
    v6[8] = (char *)&value witness table for Builtin.Int64 + 64;
    v6[9] = &unk_1003A0328;
    v6[10] = &unk_1003A02F8;
    v6[11] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v6[12] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v6[13] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v6[14] = &unk_1003A0340;
    v6[15] = &unk_1003A0340;
    v6[16] = &unk_1003A0340;
    v6[17] = &unk_1003A0340;
    sub_100084498(319, &qword_1004A1150, type metadata accessor for SymbolButton.Metrics);
    if (v5 <= 0x3F)
    {
      v6[18] = *(_QWORD *)(v4 - 8) + 64;
      v6[19] = &unk_1003A0310;
      swift_updateClassMetadata2(a1, 256, 20, v6, a1 + 80);
    }
  }
}

uint64_t getEnumTagSinglePayload for SymbolButton.Animation(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SymbolButton.Animation(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for SymbolButton.Animation()
{
  return &type metadata for SymbolButton.Animation;
}

double destroy for SymbolButton.Update(_QWORD *a1)
{
  double result;

  if (*a1)
    *(_QWORD *)&result = swift_release(a1[1]).n128_u64[0];
  if (a1[4])
    *(_QWORD *)&result = swift_release(a1[5]).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for SymbolButton.Update(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (*(_QWORD *)a2)
  {
    v4 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v4;
    swift_retain(v4);
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  v5 = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  if (v5)
  {
    v6 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = v5;
    *(_QWORD *)(a1 + 40) = v6;
    swift_retain(v6);
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  }
  return a1;
}

_QWORD *assignWithCopy for SymbolButton.Update(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *a2;
  if (*a1)
  {
    if (v4)
    {
      v5 = a2[1];
      v6 = a1[1];
      *a1 = v4;
      a1[1] = v5;
      swift_retain(v5);
      swift_release(v6);
      goto LABEL_8;
    }
    swift_release(a1[1]);
  }
  else if (v4)
  {
    v7 = a2[1];
    *a1 = v4;
    a1[1] = v7;
    swift_retain(v7);
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  v8 = a1[4];
  a1[2] = a2[2];
  a1[3] = a2[3];
  v9 = a2[4];
  if (!v8)
  {
    if (v9)
    {
      v12 = a2[5];
      a1[4] = v9;
      a1[5] = v12;
      swift_retain(v12);
      return a1;
    }
LABEL_14:
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
    return a1;
  }
  if (!v9)
  {
    swift_release(a1[5]);
    goto LABEL_14;
  }
  v10 = a2[5];
  v11 = a1[5];
  a1[4] = v9;
  a1[5] = v10;
  swift_retain(v10);
  swift_release(v11);
  return a1;
}

uint64_t assignWithTake for SymbolButton.Update(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *a2;
  if (*(_QWORD *)a1)
  {
    if (v4)
    {
      v5 = a2[1];
      v6 = *(_QWORD *)(a1 + 8);
      *(_QWORD *)a1 = v4;
      *(_QWORD *)(a1 + 8) = v5;
      swift_release(v6);
      goto LABEL_8;
    }
    swift_release(*(_QWORD *)(a1 + 8));
  }
  else if (v4)
  {
    v7 = a2[1];
    *(_QWORD *)a1 = v4;
    *(_QWORD *)(a1 + 8) = v7;
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  v8 = a2[4];
  v9 = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
  if (!v9)
  {
    if (v8)
    {
      v12 = a2[5];
      *(_QWORD *)(a1 + 32) = v8;
      *(_QWORD *)(a1 + 40) = v12;
      return a1;
    }
LABEL_14:
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    return a1;
  }
  if (!v8)
  {
    swift_release(*(_QWORD *)(a1 + 40));
    goto LABEL_14;
  }
  v10 = a2[5];
  v11 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v10;
  swift_release(v11);
  return a1;
}

ValueMetadata *type metadata accessor for SymbolButton.Update()
{
  return &type metadata for SymbolButton.Update;
}

ValueMetadata *type metadata accessor for SymbolButton.Update.AnimationOptions()
{
  return &type metadata for SymbolButton.Update.AnimationOptions;
}

uint64_t initializeBufferWithCopyOfBuffer for SymbolButton.Configuration(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void *v8;
  __int128 v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  __int128 v26;
  void *v27;
  void *v28;
  uint64_t v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  uint64_t v34;
  void *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int (*v39)(const void *, uint64_t, uint64_t);
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  void *v46;
  id v47;
  id v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _OWORD *v60;
  _OWORD *v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  id v72;
  id v73;
  id v74;
  void *v76;
  void *v77;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v22 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain(v22);
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = (void *)a2[2];
    v77 = (void *)a2[3];
    *(_QWORD *)(a1 + 16) = v8;
    *(_QWORD *)(a1 + 24) = v77;
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
    *(_BYTE *)(a1 + 80) = *((_BYTE *)a2 + 80);
    v9 = *((_OWORD *)a2 + 4);
    *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 64) = v9;
    v10 = a2[12];
    *(_QWORD *)(a1 + 88) = a2[11];
    *(_QWORD *)(a1 + 96) = v10;
    v11 = (void *)a2[14];
    *(_QWORD *)(a1 + 104) = a2[13];
    *(_QWORD *)(a1 + 112) = v11;
    v12 = a2[16];
    *(_QWORD *)(a1 + 120) = a2[15];
    *(_QWORD *)(a1 + 128) = v12;
    v13 = (void *)a2[17];
    *(_QWORD *)(a1 + 136) = v13;
    *(_OWORD *)(a1 + 144) = *((_OWORD *)a2 + 9);
    v14 = a2[21];
    *(_QWORD *)(a1 + 160) = a2[20];
    *(_QWORD *)(a1 + 168) = v14;
    v15 = (void *)a2[22];
    *(_QWORD *)(a1 + 176) = v15;
    *(_BYTE *)(a1 + 184) = *((_BYTE *)a2 + 184);
    v76 = (void *)a2[25];
    swift_bridgeObjectRetain();
    v16 = v8;
    v17 = v77;
    swift_bridgeObjectRetain();
    v18 = v11;
    swift_bridgeObjectRetain();
    v19 = v13;
    swift_bridgeObjectRetain();
    v20 = v15;
    if (v76 == (void *)1)
    {
      v21 = *((_OWORD *)a2 + 13);
      *(_OWORD *)(a1 + 192) = *((_OWORD *)a2 + 12);
      *(_OWORD *)(a1 + 208) = v21;
    }
    else
    {
      *(_QWORD *)(a1 + 192) = a2[24];
      *(_QWORD *)(a1 + 200) = v76;
      v23 = a2[27];
      *(_QWORD *)(a1 + 208) = a2[26];
      *(_QWORD *)(a1 + 216) = v23;
      v24 = v76;
      swift_bridgeObjectRetain();
    }
    v25 = (void *)a2[28];
    if (v25 == (void *)1)
    {
      v26 = *((_OWORD *)a2 + 15);
      *(_OWORD *)(a1 + 224) = *((_OWORD *)a2 + 14);
      *(_OWORD *)(a1 + 240) = v26;
      *(_OWORD *)(a1 + 256) = *((_OWORD *)a2 + 16);
    }
    else
    {
      v27 = (void *)a2[29];
      v28 = (void *)a2[30];
      *(_QWORD *)(a1 + 224) = v25;
      *(_QWORD *)(a1 + 232) = v27;
      *(_QWORD *)(a1 + 240) = v28;
      *(_BYTE *)(a1 + 248) = *((_BYTE *)a2 + 248);
      v29 = a2[33];
      *(_QWORD *)(a1 + 256) = a2[32];
      *(_QWORD *)(a1 + 264) = v29;
      v30 = v25;
      v31 = v27;
      v32 = v28;
      swift_bridgeObjectRetain();
    }
    *(_QWORD *)(a1 + 272) = a2[34];
    *(_BYTE *)(a1 + 280) = *((_BYTE *)a2 + 280);
    v33 = (void *)a2[36];
    *(_QWORD *)(a1 + 288) = v33;
    v34 = a3[9];
    v35 = (void *)(a1 + v34);
    v36 = (char *)a2 + v34;
    v37 = type metadata accessor for UIView.Corner(0);
    v38 = *(_QWORD *)(v37 - 8);
    v39 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v38 + 48);
    v40 = v33;
    if (v39(v36, 1, v37))
    {
      v41 = sub_100005574(&qword_1004A1050);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v38 + 16))(v35, v36, v37);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
    }
    v42 = a3[10];
    v43 = a1 + v42;
    v44 = (uint64_t)a2 + v42;
    v45 = *(void **)v44;
    if (*(_QWORD *)v44)
    {
      *(_QWORD *)v43 = v45;
      *(_OWORD *)(v43 + 8) = *(_OWORD *)(v44 + 8);
      *(_OWORD *)(v43 + 24) = *(_OWORD *)(v44 + 24);
      v46 = *(void **)(v44 + 48);
      *(_QWORD *)(v43 + 40) = *(_QWORD *)(v44 + 40);
      *(_QWORD *)(v43 + 48) = v46;
      v47 = v45;
      v48 = v46;
    }
    else
    {
      v49 = *(_OWORD *)(v44 + 16);
      *(_OWORD *)v43 = *(_OWORD *)v44;
      *(_OWORD *)(v43 + 16) = v49;
      *(_OWORD *)(v43 + 32) = *(_OWORD *)(v44 + 32);
      *(_QWORD *)(v43 + 48) = *(_QWORD *)(v44 + 48);
    }
    v50 = a3[11];
    v51 = a1 + v50;
    v52 = (uint64_t)a2 + v50;
    v53 = *(void **)(v52 + 16);
    *(_OWORD *)v51 = *(_OWORD *)v52;
    if (v53 == (void *)1)
    {
      *(_QWORD *)(v51 + 16) = *(_QWORD *)(v52 + 16);
    }
    else
    {
      *(_QWORD *)(v51 + 16) = v53;
      v54 = v53;
    }
    v55 = a3[13];
    *(_QWORD *)(a1 + a3[12]) = *(uint64_t *)((char *)a2 + a3[12]);
    *(_OWORD *)(a1 + v55) = *(_OWORD *)((char *)a2 + v55);
    v56 = a3[14];
    v57 = a3[15];
    v58 = a1 + v56;
    v59 = (uint64_t)a2 + v56;
    *(_OWORD *)v58 = *(_OWORD *)v59;
    *(_BYTE *)(v58 + 16) = *(_BYTE *)(v59 + 16);
    v60 = (_OWORD *)(a1 + v57);
    v61 = (_OWORD *)((char *)a2 + v57);
    v62 = v61[1];
    *v60 = *v61;
    v60[1] = v62;
    v63 = a3[16];
    v64 = a3[17];
    v65 = a1 + v63;
    v66 = (uint64_t)a2 + v63;
    *(_BYTE *)v65 = *(_BYTE *)v66;
    *(_BYTE *)(v65 + 24) = *(_BYTE *)(v66 + 24);
    v67 = *(void **)(v66 + 8);
    v68 = *(void **)(v66 + 16);
    *(_QWORD *)(v65 + 8) = v67;
    *(_QWORD *)(v65 + 16) = v68;
    *(_QWORD *)(a1 + v64) = *(uint64_t *)((char *)a2 + v64);
    v69 = a3[18];
    v70 = a3[19];
    v71 = *(void **)((char *)a2 + v69);
    *(_QWORD *)(a1 + v69) = v71;
    *(_BYTE *)(a1 + v70) = *((_BYTE *)a2 + v70);
    v72 = v67;
    v73 = v68;
    v74 = v71;
  }
  return a1;
}

void destroy for SymbolButton.Configuration(uint64_t a1, int *a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id *v9;
  void *v10;
  uint64_t v11;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 96));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 128));

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 160));
  v4 = *(void **)(a1 + 200);
  if (v4 != (void *)1)
  {

    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 216));
  }
  v5 = *(void **)(a1 + 224);
  if (v5 != (void *)1)
  {

    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 264));
  }

  v6 = a1 + a2[9];
  v7 = type metadata accessor for UIView.Corner(0);
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  v9 = (id *)(a1 + a2[10]);
  if (*v9)
  {

  }
  v10 = *(void **)(a1 + a2[11] + 16);
  if (v10 != (void *)1)

  v11 = a1 + a2[16];
}

uint64_t initializeWithCopy for SymbolButton.Configuration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  void *v6;
  void *v7;
  __int128 v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  __int128 v20;
  uint64_t v21;
  id v22;
  void *v23;
  __int128 v24;
  void *v25;
  void *v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  void *v31;
  uint64_t v32;
  void *v33;
  const void *v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(const void *, uint64_t, uint64_t);
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  void *v44;
  id v45;
  id v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _OWORD *v58;
  _OWORD *v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  id v70;
  id v71;
  id v72;
  void *v75;

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(void **)(a2 + 16);
  v7 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v8 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v8;
  v9 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v9;
  v10 = *(void **)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v10;
  v11 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v11;
  v12 = *(void **)(a2 + 136);
  *(_QWORD *)(a1 + 136) = v12;
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  v13 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v13;
  v14 = *(void **)(a2 + 176);
  *(_QWORD *)(a1 + 176) = v14;
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  v75 = *(void **)(a2 + 200);
  swift_bridgeObjectRetain();
  v15 = v6;
  v16 = v7;
  swift_bridgeObjectRetain();
  v17 = v10;
  swift_bridgeObjectRetain();
  v18 = v12;
  swift_bridgeObjectRetain();
  v19 = v14;
  if (v75 == (void *)1)
  {
    v20 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v20;
  }
  else
  {
    *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
    *(_QWORD *)(a1 + 200) = v75;
    v21 = *(_QWORD *)(a2 + 216);
    *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
    *(_QWORD *)(a1 + 216) = v21;
    v22 = v75;
    swift_bridgeObjectRetain();
  }
  v23 = *(void **)(a2 + 224);
  if (v23 == (void *)1)
  {
    v24 = *(_OWORD *)(a2 + 240);
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 240) = v24;
    *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  }
  else
  {
    v25 = *(void **)(a2 + 232);
    v26 = *(void **)(a2 + 240);
    *(_QWORD *)(a1 + 224) = v23;
    *(_QWORD *)(a1 + 232) = v25;
    *(_QWORD *)(a1 + 240) = v26;
    *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
    v27 = *(_QWORD *)(a2 + 264);
    *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
    *(_QWORD *)(a1 + 264) = v27;
    v28 = v23;
    v29 = v25;
    v30 = v26;
    swift_bridgeObjectRetain();
  }
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_BYTE *)(a1 + 280) = *(_BYTE *)(a2 + 280);
  v31 = *(void **)(a2 + 288);
  *(_QWORD *)(a1 + 288) = v31;
  v32 = a3[9];
  v33 = (void *)(a1 + v32);
  v34 = (const void *)(a2 + v32);
  v35 = type metadata accessor for UIView.Corner(0);
  v36 = *(_QWORD *)(v35 - 8);
  v37 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v36 + 48);
  v38 = v31;
  if (v37(v34, 1, v35))
  {
    v39 = sub_100005574(&qword_1004A1050);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v36 + 16))(v33, v34, v35);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
  }
  v40 = a3[10];
  v41 = a1 + v40;
  v42 = a2 + v40;
  v43 = *(void **)v42;
  if (*(_QWORD *)v42)
  {
    *(_QWORD *)v41 = v43;
    *(_OWORD *)(v41 + 8) = *(_OWORD *)(v42 + 8);
    *(_OWORD *)(v41 + 24) = *(_OWORD *)(v42 + 24);
    v44 = *(void **)(v42 + 48);
    *(_QWORD *)(v41 + 40) = *(_QWORD *)(v42 + 40);
    *(_QWORD *)(v41 + 48) = v44;
    v45 = v43;
    v46 = v44;
  }
  else
  {
    v47 = *(_OWORD *)(v42 + 16);
    *(_OWORD *)v41 = *(_OWORD *)v42;
    *(_OWORD *)(v41 + 16) = v47;
    *(_OWORD *)(v41 + 32) = *(_OWORD *)(v42 + 32);
    *(_QWORD *)(v41 + 48) = *(_QWORD *)(v42 + 48);
  }
  v48 = a3[11];
  v49 = a1 + v48;
  v50 = a2 + v48;
  v51 = *(void **)(v50 + 16);
  *(_OWORD *)v49 = *(_OWORD *)v50;
  if (v51 == (void *)1)
  {
    *(_QWORD *)(v49 + 16) = *(_QWORD *)(v50 + 16);
  }
  else
  {
    *(_QWORD *)(v49 + 16) = v51;
    v52 = v51;
  }
  v53 = a3[13];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_OWORD *)(a1 + v53) = *(_OWORD *)(a2 + v53);
  v54 = a3[14];
  v55 = a3[15];
  v56 = a1 + v54;
  v57 = a2 + v54;
  *(_OWORD *)v56 = *(_OWORD *)v57;
  *(_BYTE *)(v56 + 16) = *(_BYTE *)(v57 + 16);
  v58 = (_OWORD *)(a1 + v55);
  v59 = (_OWORD *)(a2 + v55);
  v60 = v59[1];
  *v58 = *v59;
  v58[1] = v60;
  v61 = a3[16];
  v62 = a3[17];
  v63 = a1 + v61;
  v64 = a2 + v61;
  *(_BYTE *)v63 = *(_BYTE *)v64;
  *(_BYTE *)(v63 + 24) = *(_BYTE *)(v64 + 24);
  v65 = *(void **)(v64 + 8);
  v66 = *(void **)(v64 + 16);
  *(_QWORD *)(v63 + 8) = v65;
  *(_QWORD *)(v63 + 16) = v66;
  *(_QWORD *)(a1 + v62) = *(_QWORD *)(a2 + v62);
  v67 = a3[18];
  v68 = a3[19];
  v69 = *(void **)(a2 + v67);
  *(_QWORD *)(a1 + v67) = v69;
  *(_BYTE *)(a1 + v68) = *(_BYTE *)(a2 + v68);
  v70 = v65;
  v71 = v66;
  v72 = v69;
  return a1;
}

uint64_t assignWithCopy for SymbolButton.Configuration(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  __int128 v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  void *v20;
  void *v21;
  id v22;
  _OWORD *v23;
  _OWORD *v24;
  void *v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  void *v29;
  id v30;
  void *v31;
  id v32;
  __int128 *v33;
  void *v34;
  void *v35;
  __int128 *v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  void *v41;
  void *v42;
  id v43;
  id v44;
  id v45;
  id v46;
  void *v47;
  void *v48;
  id v49;
  void *v50;
  void *v51;
  id v52;
  uint64_t v53;
  void *v54;
  void *v55;
  id v56;
  uint64_t v57;
  void *v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t (*v62)(void *, uint64_t, uint64_t);
  int v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __int128 *v68;
  void *v69;
  void *v70;
  id v71;
  void *v72;
  void *v73;
  id v74;
  __int128 v75;
  void *v76;
  id v77;
  id v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  uint64_t v85;
  uint64_t v86;
  __int128 *v87;
  void *v88;
  uint64_t v89;
  __int128 v90;
  uint64_t v91;
  void *v92;
  id v93;
  void *v94;
  id v95;
  uint64_t v96;
  _QWORD *v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  __int128 *v101;
  __int128 v102;
  uint64_t v103;
  _QWORD *v104;
  _QWORD *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void *v109;
  void *v110;
  id v111;
  void *v112;
  void *v113;
  id v114;
  uint64_t v115;
  void *v116;
  void *v117;
  id v118;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(void **)(a1 + 16);
  v7 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v7;
  v8 = v7;

  v9 = *(void **)(a2 + 24);
  v10 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v9;
  v11 = v9;

  v12 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v12;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v13 = *(_OWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = v13;
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  v14 = *(void **)(a1 + 112);
  v15 = *(void **)(a2 + 112);
  *(_QWORD *)(a1 + 112) = v15;
  v16 = v15;

  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = *(void **)(a2 + 136);
  v18 = *(void **)(a1 + 136);
  *(_QWORD *)(a1 + 136) = v17;
  v19 = v17;

  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  v20 = *(void **)(a1 + 176);
  v21 = *(void **)(a2 + 176);
  *(_QWORD *)(a1 + 176) = v21;
  v22 = v21;

  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  v23 = (_OWORD *)(a1 + 192);
  v24 = (_OWORD *)(a2 + 192);
  v25 = *(void **)(a1 + 200);
  v26 = *(_QWORD *)(a2 + 200);
  if (v25 == (void *)1)
  {
    if (v26 == 1)
    {
      v27 = *(_OWORD *)(a2 + 208);
      *v23 = *v24;
      *(_OWORD *)(a1 + 208) = v27;
    }
    else
    {
      *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
      v29 = *(void **)(a2 + 200);
      *(_QWORD *)(a1 + 200) = v29;
      *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
      *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
      v30 = v29;
      swift_bridgeObjectRetain();
    }
  }
  else if (v26 == 1)
  {
    sub_100362710(a1 + 192);
    v28 = *(_OWORD *)(a2 + 208);
    *v23 = *v24;
    *(_OWORD *)(a1 + 208) = v28;
  }
  else
  {
    *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
    v31 = *(void **)(a2 + 200);
    *(_QWORD *)(a1 + 200) = v31;
    v32 = v31;

    *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
    *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v33 = (__int128 *)(a1 + 224);
  v34 = *(void **)(a1 + 224);
  v36 = (__int128 *)(a2 + 224);
  v35 = *(void **)(a2 + 224);
  if (v34 == (void *)1)
  {
    if (v35 == (void *)1)
    {
      v37 = *v36;
      v38 = *(_OWORD *)(a2 + 256);
      *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
      *(_OWORD *)(a1 + 256) = v38;
      *v33 = v37;
    }
    else
    {
      *(_QWORD *)(a1 + 224) = v35;
      v41 = *(void **)(a2 + 232);
      *(_QWORD *)(a1 + 232) = v41;
      v42 = *(void **)(a2 + 240);
      *(_QWORD *)(a1 + 240) = v42;
      *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
      *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
      *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
      v43 = v35;
      v44 = v41;
      v45 = v42;
      swift_bridgeObjectRetain();
    }
  }
  else if (v35 == (void *)1)
  {
    sub_100362740(a1 + 224);
    v40 = *(_OWORD *)(a2 + 240);
    v39 = *(_OWORD *)(a2 + 256);
    *v33 = *v36;
    *(_OWORD *)(a1 + 240) = v40;
    *(_OWORD *)(a1 + 256) = v39;
  }
  else
  {
    *(_QWORD *)(a1 + 224) = v35;
    v46 = v35;

    v47 = *(void **)(a1 + 232);
    v48 = *(void **)(a2 + 232);
    *(_QWORD *)(a1 + 232) = v48;
    v49 = v48;

    v50 = *(void **)(a1 + 240);
    v51 = *(void **)(a2 + 240);
    *(_QWORD *)(a1 + 240) = v51;
    v52 = v51;

    *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
    *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
    *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v53 = *(_QWORD *)(a2 + 272);
  *(_BYTE *)(a1 + 280) = *(_BYTE *)(a2 + 280);
  *(_QWORD *)(a1 + 272) = v53;
  v54 = *(void **)(a2 + 288);
  v55 = *(void **)(a1 + 288);
  *(_QWORD *)(a1 + 288) = v54;
  v56 = v54;

  v57 = a3[9];
  v58 = (void *)(a1 + v57);
  v59 = (void *)(a2 + v57);
  v60 = type metadata accessor for UIView.Corner(0);
  v61 = *(_QWORD *)(v60 - 8);
  v62 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v61 + 48);
  v63 = v62(v58, 1, v60);
  v64 = v62(v59, 1, v60);
  if (v63)
  {
    if (!v64)
    {
      (*(void (**)(void *, void *, uint64_t))(v61 + 16))(v58, v59, v60);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
      goto LABEL_21;
    }
    goto LABEL_20;
  }
  if (v64)
  {
    (*(void (**)(void *, uint64_t))(v61 + 8))(v58, v60);
LABEL_20:
    v65 = sub_100005574(&qword_1004A1050);
    memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    goto LABEL_21;
  }
  (*(void (**)(void *, void *, uint64_t))(v61 + 24))(v58, v59, v60);
LABEL_21:
  v66 = a3[10];
  v67 = a1 + v66;
  v68 = (__int128 *)(a2 + v66);
  v69 = *(void **)(a1 + v66);
  v70 = *(void **)(a2 + v66);
  if (v69)
  {
    if (v70)
    {
      *(_QWORD *)v67 = v70;
      v71 = v70;

      *(_QWORD *)(v67 + 8) = *((_QWORD *)v68 + 1);
      *(_QWORD *)(v67 + 16) = *((_QWORD *)v68 + 2);
      *(_QWORD *)(v67 + 24) = *((_QWORD *)v68 + 3);
      *(_QWORD *)(v67 + 32) = *((_QWORD *)v68 + 4);
      *(_QWORD *)(v67 + 40) = *((_QWORD *)v68 + 5);
      v72 = *(void **)(v67 + 48);
      v73 = (void *)*((_QWORD *)v68 + 6);
      *(_QWORD *)(v67 + 48) = v73;
      v74 = v73;

    }
    else
    {
      sub_10036276C((id *)v67);
      v80 = v68[1];
      v79 = v68[2];
      v81 = *v68;
      *(_QWORD *)(v67 + 48) = *((_QWORD *)v68 + 6);
      *(_OWORD *)(v67 + 16) = v80;
      *(_OWORD *)(v67 + 32) = v79;
      *(_OWORD *)v67 = v81;
    }
  }
  else if (v70)
  {
    *(_QWORD *)v67 = v70;
    v75 = *(__int128 *)((char *)v68 + 8);
    *(_OWORD *)(v67 + 24) = *(__int128 *)((char *)v68 + 24);
    *(_OWORD *)(v67 + 8) = v75;
    *(_QWORD *)(v67 + 40) = *((_QWORD *)v68 + 5);
    v76 = (void *)*((_QWORD *)v68 + 6);
    *(_QWORD *)(v67 + 48) = v76;
    v77 = v70;
    v78 = v76;
  }
  else
  {
    v82 = *v68;
    v83 = v68[1];
    v84 = v68[2];
    *(_QWORD *)(v67 + 48) = *((_QWORD *)v68 + 6);
    *(_OWORD *)(v67 + 16) = v83;
    *(_OWORD *)(v67 + 32) = v84;
    *(_OWORD *)v67 = v82;
  }
  v85 = a3[11];
  v86 = a1 + v85;
  v87 = (__int128 *)(a2 + v85);
  v88 = *(void **)(a1 + v85 + 16);
  v89 = *(_QWORD *)(a2 + v85 + 16);
  if (v88 == (void *)1)
  {
    if (v89 == 1)
    {
      v90 = *v87;
      *(_QWORD *)(v86 + 16) = *((_QWORD *)v87 + 2);
      *(_OWORD *)v86 = v90;
    }
    else
    {
      *(_QWORD *)v86 = *(_QWORD *)v87;
      *(_QWORD *)(v86 + 8) = *((_QWORD *)v87 + 1);
      v92 = (void *)*((_QWORD *)v87 + 2);
      *(_QWORD *)(v86 + 16) = v92;
      v93 = v92;
    }
  }
  else if (v89 == 1)
  {
    sub_10036279C(v86);
    v91 = *((_QWORD *)v87 + 2);
    *(_OWORD *)v86 = *v87;
    *(_QWORD *)(v86 + 16) = v91;
  }
  else
  {
    *(_QWORD *)v86 = *(_QWORD *)v87;
    *(_QWORD *)(v86 + 8) = *((_QWORD *)v87 + 1);
    v94 = (void *)*((_QWORD *)v87 + 2);
    *(_QWORD *)(v86 + 16) = v94;
    v95 = v94;

  }
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  v96 = a3[13];
  v97 = (_QWORD *)(a1 + v96);
  v98 = (_QWORD *)(a2 + v96);
  *v97 = *v98;
  v97[1] = v98[1];
  v99 = a3[14];
  v100 = a1 + v99;
  v101 = (__int128 *)(a2 + v99);
  v102 = *v101;
  *(_BYTE *)(v100 + 16) = *((_BYTE *)v101 + 16);
  *(_OWORD *)v100 = v102;
  v103 = a3[15];
  v104 = (_QWORD *)(a1 + v103);
  v105 = (_QWORD *)(a2 + v103);
  *v104 = *v105;
  v104[1] = v105[1];
  v104[2] = v105[2];
  v104[3] = v105[3];
  v106 = a3[16];
  v107 = a1 + v106;
  v108 = a2 + v106;
  *(_BYTE *)v107 = *(_BYTE *)(a2 + v106);
  v109 = *(void **)(a1 + v106 + 8);
  v110 = *(void **)(a2 + v106 + 8);
  *(_QWORD *)(v107 + 8) = v110;
  v111 = v110;

  v112 = *(void **)(v107 + 16);
  v113 = *(void **)(v108 + 16);
  *(_QWORD *)(v107 + 16) = v113;
  v114 = v113;

  *(_BYTE *)(v107 + 24) = *(_BYTE *)(v108 + 24);
  *(_QWORD *)(a1 + a3[17]) = *(_QWORD *)(a2 + a3[17]);
  v115 = a3[18];
  v116 = *(void **)(a1 + v115);
  v117 = *(void **)(a2 + v115);
  *(_QWORD *)(a1 + v115) = v117;
  v118 = v117;

  *(_BYTE *)(a1 + a3[19]) = *(_BYTE *)(a2 + a3[19]);
  return a1;
}

uint64_t sub_100362710(uint64_t a1)
{

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  return a1;
}

uint64_t sub_100362740(uint64_t a1)
{
  destroy for SymbolButton.Material(a1);
  return a1;
}

id *sub_10036276C(id *a1)
{

  return a1;
}

uint64_t sub_10036279C(uint64_t a1)
{

  return a1;
}

uint64_t initializeWithTake for SymbolButton.Configuration(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _OWORD *v34;
  _OWORD *v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  _OWORD *v39;
  _OWORD *v40;
  uint64_t v41;

  v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v7;
  v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  v9 = *(_OWORD *)(a2 + 136);
  v10 = *(_OWORD *)(a2 + 152);
  v11 = *(_OWORD *)(a2 + 168);
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  *(_OWORD *)(a1 + 168) = v11;
  *(_OWORD *)(a1 + 152) = v10;
  *(_OWORD *)(a1 + 136) = v9;
  v12 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v12;
  v13 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 240) = v13;
  v14 = *(_OWORD *)(a2 + 256);
  v15 = *(_OWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  v16 = a3[9];
  v17 = (void *)(a1 + v16);
  v18 = (const void *)(a2 + v16);
  *(_OWORD *)(a1 + 256) = v14;
  *(_OWORD *)(a1 + 272) = v15;
  v19 = type metadata accessor for UIView.Corner(0);
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    v21 = sub_100005574(&qword_1004A1050);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v20 + 32))(v17, v18, v19);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  v22 = a3[10];
  v23 = a3[11];
  v24 = a1 + v22;
  v25 = a2 + v22;
  v26 = *(_OWORD *)(v25 + 16);
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *(_OWORD *)(v24 + 16) = v26;
  *(_OWORD *)(v24 + 32) = *(_OWORD *)(v25 + 32);
  *(_QWORD *)(v24 + 48) = *(_QWORD *)(v25 + 48);
  v27 = a1 + v23;
  v28 = a2 + v23;
  *(_OWORD *)v27 = *(_OWORD *)v28;
  *(_QWORD *)(v27 + 16) = *(_QWORD *)(v28 + 16);
  v29 = a3[13];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_OWORD *)(a1 + v29) = *(_OWORD *)(a2 + v29);
  v30 = a3[14];
  v31 = a3[15];
  v32 = a1 + v30;
  v33 = a2 + v30;
  *(_OWORD *)v32 = *(_OWORD *)v33;
  *(_BYTE *)(v32 + 16) = *(_BYTE *)(v33 + 16);
  v34 = (_OWORD *)(a1 + v31);
  v35 = (_OWORD *)(a2 + v31);
  v36 = v35[1];
  *v34 = *v35;
  v34[1] = v36;
  v37 = a3[16];
  v38 = a3[17];
  v39 = (_OWORD *)(a1 + v37);
  v40 = (_OWORD *)(a2 + v37);
  *v39 = *v40;
  *(_OWORD *)((char *)v39 + 9) = *(_OWORD *)((char *)v40 + 9);
  *(_QWORD *)(a1 + v38) = *(_QWORD *)(a2 + v38);
  v41 = a3[19];
  *(_QWORD *)(a1 + a3[18]) = *(_QWORD *)(a2 + a3[18]);
  *(_BYTE *)(a1 + v41) = *(_BYTE *)(a2 + v41);
  return a1;
}

uint64_t assignWithTake for SymbolButton.Configuration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  __int128 v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  __int128 v22;
  void *v23;
  void *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(void *, uint64_t, uint64_t);
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _OWORD *v52;
  _OWORD *v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  void *v59;
  uint64_t v60;
  void *v61;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  v8 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v9 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v9;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v10 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v10;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  v11 = *(void **)(a1 + 112);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);

  v12 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v12;
  swift_bridgeObjectRelease();
  v13 = *(void **)(a1 + 136);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);

  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  v14 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = v14;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  v15 = *(void **)(a1 + 176);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);

  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  v16 = *(void **)(a1 + 200);
  if (v16 == (void *)1)
    goto LABEL_4;
  v17 = *(_QWORD *)(a2 + 200);
  if (v17 == 1)
  {
    sub_100362710(a1 + 192);
LABEL_4:
    v18 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v18;
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = v17;

  v19 = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = v19;
  swift_bridgeObjectRelease();
LABEL_6:
  v20 = *(void **)(a1 + 224);
  v21 = *(_QWORD *)(a2 + 224);
  if (v20 == (void *)1)
  {
LABEL_9:
    v22 = *(_OWORD *)(a2 + 240);
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 240) = v22;
    *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
    goto LABEL_11;
  }
  if (v21 == 1)
  {
    sub_100362740(a1 + 224);
    goto LABEL_9;
  }
  *(_QWORD *)(a1 + 224) = v21;

  v23 = *(void **)(a1 + 232);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);

  v24 = *(void **)(a1 + 240);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);

  *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
  v25 = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = v25;
  swift_bridgeObjectRelease();
LABEL_11:
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_BYTE *)(a1 + 280) = *(_BYTE *)(a2 + 280);
  v26 = *(void **)(a1 + 288);
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);

  v27 = a3[9];
  v28 = (void *)(a1 + v27);
  v29 = (void *)(a2 + v27);
  v30 = type metadata accessor for UIView.Corner(0);
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v31 + 48);
  v33 = v32(v28, 1, v30);
  v34 = v32(v29, 1, v30);
  if (v33)
  {
    if (!v34)
    {
      (*(void (**)(void *, void *, uint64_t))(v31 + 32))(v28, v29, v30);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  if (v34)
  {
    (*(void (**)(void *, uint64_t))(v31 + 8))(v28, v30);
LABEL_16:
    v35 = sub_100005574(&qword_1004A1050);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    goto LABEL_17;
  }
  (*(void (**)(void *, void *, uint64_t))(v31 + 40))(v28, v29, v30);
LABEL_17:
  v36 = a3[10];
  v37 = a1 + v36;
  v38 = a2 + v36;
  v39 = *(void **)(a1 + v36);
  if (v39)
  {
    if (*(_QWORD *)v38)
    {
      *(_QWORD *)v37 = *(_QWORD *)v38;

      *(_OWORD *)(v37 + 8) = *(_OWORD *)(v38 + 8);
      *(_OWORD *)(v37 + 24) = *(_OWORD *)(v38 + 24);
      *(_QWORD *)(v37 + 40) = *(_QWORD *)(v38 + 40);
      v40 = *(void **)(v37 + 48);
      *(_QWORD *)(v37 + 48) = *(_QWORD *)(v38 + 48);

      goto LABEL_22;
    }
    sub_10036276C((id *)v37);
  }
  v41 = *(_OWORD *)(v38 + 16);
  *(_OWORD *)v37 = *(_OWORD *)v38;
  *(_OWORD *)(v37 + 16) = v41;
  *(_OWORD *)(v37 + 32) = *(_OWORD *)(v38 + 32);
  *(_QWORD *)(v37 + 48) = *(_QWORD *)(v38 + 48);
LABEL_22:
  v42 = a3[11];
  v43 = a1 + v42;
  v44 = a2 + v42;
  v45 = *(void **)(a1 + v42 + 16);
  if (v45 != (void *)1)
  {
    v46 = *(_QWORD *)(v44 + 16);
    if (v46 != 1)
    {
      *(_OWORD *)v43 = *(_OWORD *)v44;
      *(_QWORD *)(v43 + 16) = v46;

      goto LABEL_27;
    }
    sub_10036279C(v43);
  }
  *(_OWORD *)v43 = *(_OWORD *)v44;
  *(_QWORD *)(v43 + 16) = *(_QWORD *)(v44 + 16);
LABEL_27:
  v47 = a3[13];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_OWORD *)(a1 + v47) = *(_OWORD *)(a2 + v47);
  v48 = a3[14];
  v49 = a3[15];
  v50 = a1 + v48;
  v51 = a2 + v48;
  *(_OWORD *)v50 = *(_OWORD *)v51;
  *(_BYTE *)(v50 + 16) = *(_BYTE *)(v51 + 16);
  v52 = (_OWORD *)(a1 + v49);
  v53 = (_OWORD *)(a2 + v49);
  v54 = v53[1];
  *v52 = *v53;
  v52[1] = v54;
  v55 = a3[16];
  v56 = a1 + v55;
  v57 = a2 + v55;
  *(_BYTE *)v56 = *(_BYTE *)(a2 + v55);
  v58 = *(void **)(a1 + v55 + 8);
  *(_QWORD *)(v56 + 8) = *(_QWORD *)(v57 + 8);

  v59 = *(void **)(v56 + 16);
  *(_QWORD *)(v56 + 16) = *(_QWORD *)(v57 + 16);

  *(_BYTE *)(v56 + 24) = *(_BYTE *)(v57 + 24);
  v60 = a3[18];
  *(_QWORD *)(a1 + a3[17]) = *(_QWORD *)(a2 + a3[17]);
  v61 = *(void **)(a1 + v60);
  *(_QWORD *)(a1 + v60) = *(_QWORD *)(a2 + v60);

  *(_BYTE *)(a1 + a3[19]) = *(_BYTE *)(a2 + a3[19]);
  return a1;
}

uint64_t getEnumTagSinglePayload for SymbolButton.Configuration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100362DEC);
}

uint64_t sub_100362DEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100005574(&qword_1004A1050);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for SymbolButton.Configuration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100362E78);
}

uint64_t sub_100362E78(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = sub_100005574(&qword_1004A1050);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 36), a2, a2, v7);
  }
  return result;
}

void sub_100362EF0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[16];

  v4[0] = "x";
  v4[1] = &unk_1003A03A8;
  v4[2] = &unk_1003A03C0;
  v4[3] = &unk_1003A03D8;
  v4[4] = &unk_1003A03F0;
  sub_100084498(319, (unint64_t *)&qword_1004A11C0, (uint64_t (*)(uint64_t))&type metadata accessor for UIView.Corner);
  if (v3 <= 0x3F)
  {
    v4[5] = *(_QWORD *)(v2 - 8) + 64;
    v4[6] = &unk_1003A0408;
    v4[9] = &unk_1003A0328;
    v4[10] = &unk_1003A0438;
    v4[11] = &unk_1003A0450;
    v4[12] = &unk_1003A0468;
    v4[7] = &unk_1003A0420;
    v4[8] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[13] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[14] = &unk_1003A0340;
    v4[15] = &unk_1003A0480;
    swift_initStructMetadata(a1, 256, 16, v4, a1 + 16);
  }
}

void destroy for SymbolButton.Configuration.Accessibility(uint64_t a1)
{

}

uint64_t initializeWithCopy for SymbolButton.Configuration.Accessibility(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(void **)(a2 + 8);
  v4 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v5 = v3;
  v6 = v4;
  return a1;
}

uint64_t assignWithCopy for SymbolButton.Configuration.Accessibility(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(void **)(a1 + 8);
  v5 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v5;
  v6 = v5;

  v7 = *(void **)(a1 + 16);
  v8 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v8;
  v9 = v8;

  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for SymbolButton.Configuration.Accessibility(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;

  v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for SymbolButton.Configuration.Accessibility(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SymbolButton.Configuration.Accessibility(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for SymbolButton.Configuration.Accessibility()
{
  return &type metadata for SymbolButton.Configuration.Accessibility;
}

void destroy for SymbolButton.Symbol(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 96));
}

uint64_t initializeWithCopy for SymbolButton.Symbol(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  void *v5;
  __int128 v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  id v11;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(void **)(a2 + 16);
  v5 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v6;
  v7 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v7;
  v8 = *(void **)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v8;
  swift_bridgeObjectRetain();
  v9 = v4;
  v10 = v5;
  swift_bridgeObjectRetain();
  v11 = v8;
  return a1;
}

uint64_t assignWithCopy for SymbolButton.Symbol(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  v5 = *(void **)(a1 + 16);
  v6 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v6;
  v7 = v6;

  v8 = *(void **)(a2 + 24);
  v9 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v8;
  v10 = v8;

  v11 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v11;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v12 = *(_OWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = v12;
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v13 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v13);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  v14 = *(void **)(a1 + 112);
  v15 = *(void **)(a2 + 112);
  *(_QWORD *)(a1 + 112) = v15;
  v16 = v15;

  return a1;
}

uint64_t assignWithTake for SymbolButton.Symbol(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  v5 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v6;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v7 = *(_QWORD *)(a2 + 96);
  v8 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v7;
  swift_bridgeObjectRelease(v8);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  v9 = *(void **)(a1 + 112);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);

  return a1;
}

ValueMetadata *type metadata accessor for SymbolButton.Symbol()
{
  return &type metadata for SymbolButton.Symbol;
}

void destroy for SymbolButton.Title(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));
}

uint64_t initializeWithCopy for SymbolButton.Title(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  v6 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v6;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  swift_bridgeObjectRetain();
  v7 = v4;
  swift_bridgeObjectRetain();
  v8 = v6;
  return a1;
}

uint64_t assignWithCopy for SymbolButton.Title(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  v5 = *(void **)(a2 + 16);
  v6 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v5;
  v7 = v5;

  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v8);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v9 = *(void **)(a1 + 56);
  v10 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v10;
  v11 = v10;

  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

uint64_t assignWithTake for SymbolButton.Title(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 40);
  v6 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease(v6);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v7 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);

  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for SymbolButton.Title(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 65))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SymbolButton.Title(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 64) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 65) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 65) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SymbolButton.Title()
{
  return &type metadata for SymbolButton.Title;
}

uint64_t destroy for SymbolButton.Background(uint64_t a1)
{

  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
}

_QWORD *initializeWithCopy for SymbolButton.Background(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SymbolButton.Background(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  *a1 = *a2;
  v4 = (void *)a1[1];
  v5 = (void *)a2[1];
  a1[1] = v5;
  v6 = v5;

  a1[2] = a2[2];
  v7 = a2[3];
  v8 = a1[3];
  a1[3] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v8);
  return a1;
}

_QWORD *assignWithTake for SymbolButton.Background(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;

  *a1 = *a2;
  v4 = (void *)a1[1];
  a1[1] = a2[1];

  v5 = a2[3];
  v6 = a1[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease(v6);
  return a1;
}

ValueMetadata *type metadata accessor for SymbolButton.Background()
{
  return &type metadata for SymbolButton.Background;
}

uint64_t destroy for SymbolButton.Material(uint64_t a1)
{

  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));
}

uint64_t initializeWithCopy for SymbolButton.Material(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = v3;
  v8 = v4;
  v9 = v5;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SymbolButton.Material(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  v7 = *(void **)(a1 + 8);
  v8 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v8;
  v9 = v8;

  v10 = *(void **)(a1 + 16);
  v11 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v11;
  v12 = v11;

  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v13 = *(_QWORD *)(a2 + 40);
  v14 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v14);
  return a1;
}

uint64_t assignWithTake for SymbolButton.Material(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 40);
  v7 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease(v7);
  return a1;
}

uint64_t _s11MusicCoreUI12SymbolButtonC8MaterialVwet_0(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 48))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s11MusicCoreUI12SymbolButtonC8MaterialVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for SymbolButton.Material()
{
  return &type metadata for SymbolButton.Material;
}

ValueMetadata *type metadata accessor for SymbolButton.Material.Color()
{
  return &type metadata for SymbolButton.Material.Color;
}

void destroy for SymbolButton.CustomView(id *a1)
{

}

uint64_t initializeWithCopy for SymbolButton.CustomView(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  v5 = v3;
  v6 = v4;
  return a1;
}

uint64_t assignWithCopy for SymbolButton.CustomView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v7 = *(void **)(a1 + 48);
  v8 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v8;
  v9 = v8;

  return a1;
}

uint64_t assignWithTake for SymbolButton.CustomView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v5 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);

  return a1;
}

uint64_t getEnumTagSinglePayload for SymbolButton.CustomView(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SymbolButton.CustomView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SymbolButton.CustomView()
{
  return &type metadata for SymbolButton.CustomView;
}

uint64_t initializeBufferWithCopyOfBuffer for SymbolButton.Badge(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = v3;
  return a1;
}

_QWORD *assignWithCopy for SymbolButton.Badge(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  void *v4;
  id v5;

  *a1 = *a2;
  a1[1] = a2[1];
  v3 = (void *)a1[2];
  v4 = (void *)a2[2];
  a1[2] = v4;
  v5 = v4;

  return a1;
}

uint64_t assignWithTake for SymbolButton.Badge(uint64_t a1, uint64_t a2)
{
  void *v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  return a1;
}

ValueMetadata *type metadata accessor for SymbolButton.Badge()
{
  return &type metadata for SymbolButton.Badge;
}

uint64_t type metadata accessor for SymbolButton.ImageView()
{
  return objc_opt_self(_TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A939ImageView);
}

uint64_t type metadata accessor for SymbolButton.BadgeView()
{
  return objc_opt_self(_TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A939BadgeView);
}

void **sub_100363D20(void **a1, void **a2, int *a3)
{
  int v3;
  char *v4;
  void **v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD *v26;
  _OWORD *v27;
  __int128 v28;
  id v29;
  id v30;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain(v4);
  }
  else
  {
    v7 = a1;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for UIView.Corner(0);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    v14 = v4;
    if (v13(v10, 1, v11))
    {
      v15 = sub_100005574(&qword_1004A1050);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v16 = a3[6];
    v17 = a3[7];
    v18 = *(void **)((char *)a2 + v16);
    *(void **)((char *)v7 + v16) = v18;
    v19 = *(void **)((char *)a2 + v17);
    *(void **)((char *)v7 + v17) = v19;
    v20 = a3[9];
    *(void **)((char *)v7 + a3[8]) = *(void **)((char *)a2 + a3[8]);
    *(_OWORD *)((char *)v7 + v20) = *(_OWORD *)((char *)a2 + v20);
    v21 = a3[11];
    *(_OWORD *)((char *)v7 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
    v22 = (char *)v7 + v21;
    v23 = (char *)a2 + v21;
    *(_OWORD *)v22 = *(_OWORD *)v23;
    v22[16] = v23[16];
    v24 = a3[12];
    v25 = a3[13];
    v26 = (_OWORD *)((char *)v7 + v24);
    v27 = (_OWORD *)((char *)a2 + v24);
    v28 = v27[1];
    *v26 = *v27;
    v26[1] = v28;
    *((_BYTE *)v7 + v25) = *((_BYTE *)a2 + v25);
    v29 = v18;
    v30 = v19;
  }
  return v7;
}

void sub_100363E90(id *a1, int *a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;

  v4 = (char *)a1 + a2[5];
  v5 = type metadata accessor for UIView.Corner(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);

}

void **sub_100363F1C(void **a1, void **a2, int *a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  _OWORD *v26;
  __int128 v27;
  id v28;
  id v29;

  v6 = *a2;
  *a1 = *a2;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for UIView.Corner(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v6;
  if (v12(v9, 1, v10))
  {
    v14 = sub_100005574(&qword_1004A1050);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v15 = a3[6];
  v16 = a3[7];
  v17 = *(void **)((char *)a2 + v15);
  *(void **)((char *)a1 + v15) = v17;
  v18 = *(void **)((char *)a2 + v16);
  *(void **)((char *)a1 + v16) = v18;
  v19 = a3[9];
  *(void **)((char *)a1 + a3[8]) = *(void **)((char *)a2 + a3[8]);
  *(_OWORD *)((char *)a1 + v19) = *(_OWORD *)((char *)a2 + v19);
  v20 = a3[11];
  *(_OWORD *)((char *)a1 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  *(_OWORD *)v21 = *(_OWORD *)v22;
  v21[16] = v22[16];
  v23 = a3[12];
  v24 = a3[13];
  v25 = (_OWORD *)((char *)a1 + v23);
  v26 = (_OWORD *)((char *)a2 + v23);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  *((_BYTE *)a1 + v24) = *((_BYTE *)a2 + v24);
  v28 = v17;
  v29 = v18;
  return a1;
}

void **sub_100364064(void **a1, void **a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  __int128 v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;

  v6 = *a1;
  v7 = *a2;
  *a1 = *a2;
  v8 = v7;

  v9 = a3[5];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for UIView.Corner(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v17 = sub_100005574(&qword_1004A1050);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  v18 = a3[6];
  v19 = *(void **)((char *)a2 + v18);
  v20 = *(void **)((char *)a1 + v18);
  *(void **)((char *)a1 + v18) = v19;
  v21 = v19;

  v22 = a3[7];
  v23 = *(void **)((char *)a2 + v22);
  v24 = *(void **)((char *)a1 + v22);
  *(void **)((char *)a1 + v22) = v23;
  v25 = v23;

  *(void **)((char *)a1 + a3[8]) = *(void **)((char *)a2 + a3[8]);
  v26 = a3[9];
  v27 = (void **)((char *)a1 + v26);
  v28 = (void **)((char *)a2 + v26);
  *v27 = *v28;
  v27[1] = v28[1];
  v29 = a3[10];
  v30 = (void **)((char *)a1 + v29);
  v31 = (void **)((char *)a2 + v29);
  *v30 = *v31;
  v30[1] = v31[1];
  v32 = a3[11];
  v33 = (char *)a1 + v32;
  v34 = (char *)a2 + v32;
  v35 = *(_OWORD *)v34;
  v33[16] = v34[16];
  *(_OWORD *)v33 = v35;
  v36 = a3[12];
  v37 = (void **)((char *)a1 + v36);
  v38 = (void **)((char *)a2 + v36);
  *v37 = *v38;
  v37[1] = v38[1];
  v37[2] = v38[2];
  v37[3] = v38[3];
  *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
  return a1;
}

_QWORD *sub_100364250(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  __int128 v21;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UIView.Corner(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = sub_100005574(&qword_1004A1050);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v12) = *(_QWORD *)((char *)a2 + v12);
  v13 = a3[9];
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  *(_OWORD *)((char *)a1 + v13) = *(_OWORD *)((char *)a2 + v13);
  v14 = a3[11];
  *(_OWORD *)((char *)a1 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  *(_OWORD *)v15 = *(_OWORD *)v16;
  v15[16] = v16[16];
  v17 = a3[12];
  v18 = a3[13];
  v19 = (_OWORD *)((char *)a1 + v17);
  v20 = (_OWORD *)((char *)a2 + v17);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  *((_BYTE *)a1 + v18) = *((_BYTE *)a2 + v18);
  return a1;
}

void **sub_100364384(void **a1, void **a2, int *a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD *v26;
  _OWORD *v27;
  __int128 v28;

  v6 = *a1;
  *a1 = *a2;

  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for UIView.Corner(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = sub_100005574(&qword_1004A1050);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  v16 = a3[6];
  v17 = *(void **)((char *)a1 + v16);
  *(void **)((char *)a1 + v16) = *(void **)((char *)a2 + v16);

  v18 = a3[7];
  v19 = *(void **)((char *)a1 + v18);
  *(void **)((char *)a1 + v18) = *(void **)((char *)a2 + v18);

  v20 = a3[9];
  *(void **)((char *)a1 + a3[8]) = *(void **)((char *)a2 + a3[8]);
  *(_OWORD *)((char *)a1 + v20) = *(_OWORD *)((char *)a2 + v20);
  v21 = a3[11];
  *(_OWORD *)((char *)a1 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  *(_OWORD *)v22 = *(_OWORD *)v23;
  v22[16] = v23[16];
  v24 = a3[12];
  v25 = a3[13];
  v26 = (_OWORD *)((char *)a1 + v24);
  v27 = (_OWORD *)((char *)a2 + v24);
  v28 = v27[1];
  *v26 = *v27;
  v26[1] = v28;
  *((_BYTE *)a1 + v25) = *((_BYTE *)a2 + v25);
  return a1;
}

uint64_t sub_100364520(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10036452C);
}

uint64_t sub_10036452C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_100005574(&qword_1004A1050);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1003645B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003645BC);
}

uint64_t sub_1003645BC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_100005574(&qword_1004A1050);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

void sub_10036463C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[10];

  v4[0] = &unk_1003A0340;
  sub_100084498(319, (unint64_t *)&qword_1004A11C0, (uint64_t (*)(uint64_t))&type metadata accessor for UIView.Corner);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[4] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[5] = &unk_1003A0328;
    v4[6] = &unk_1003A0328;
    v4[7] = &unk_1003A0438;
    v4[8] = &unk_1003A0450;
    v4[9] = &unk_1003A0310;
    swift_initStructMetadata(a1, 256, 10, v4, a1 + 16);
  }
}

unint64_t sub_10036470C()
{
  unint64_t result;

  result = qword_1004A1418;
  if (!qword_1004A1418)
  {
    result = swift_getWitnessTable(&unk_1003A02B8, &type metadata for SymbolButton.Badge);
    atomic_store(result, (unint64_t *)&qword_1004A1418);
  }
  return result;
}

unint64_t sub_100364754()
{
  unint64_t result;

  result = qword_1004A1450;
  if (!qword_1004A1450)
  {
    result = swift_getWitnessTable(&unk_1003A0134, &type metadata for SymbolButton.Title);
    atomic_store(result, (unint64_t *)&qword_1004A1450);
  }
  return result;
}

unint64_t sub_10036479C()
{
  unint64_t result;

  result = qword_1004A1488;
  if (!qword_1004A1488)
  {
    result = swift_getWitnessTable(&unk_1003A00F0, &type metadata for SymbolButton.Symbol);
    atomic_store(result, (unint64_t *)&qword_1004A1488);
  }
  return result;
}

unint64_t sub_1003647E4()
{
  unint64_t result;

  result = qword_1004A14C0;
  if (!qword_1004A14C0)
  {
    result = swift_getWitnessTable(&unk_1003A0178, &type metadata for SymbolButton.Background);
    atomic_store(result, (unint64_t *)&qword_1004A14C0);
  }
  return result;
}

void sub_100364828()
{
  char *v0;
  uint64_t v1;
  id v2;
  id v3;
  id v4;

  v1 = OBJC_IVAR____TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A939BadgeView_punchOutView;
  v2 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v3 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
  objc_msgSend(v2, "setBackgroundColor:", v3);

  v4 = objc_msgSend(v2, "layer");
  objc_msgSend(v4, "setCompositingFilter:", kCAFilterDestOut);

  *(_QWORD *)&v0[v1] = v2;
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001003B2590, "MusicCoreUI/SymbolButton.swift", 30, 2, 1505, 0);
  __break(1u);
}

uint64_t sub_100364928()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_10036494C(uint64_t a1)
{
  uint64_t v1;

  return sub_10035B778(a1, *(id *)(v1 + 16), *(double *)(v1 + 24));
}

uint64_t sub_10036495C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_100364980()
{
  uint64_t v0;

  return sub_100357F3C(*(_QWORD *)(v0 + 16), 1.0);
}

id sub_10036499C()
{
  uint64_t v0;

  return sub_100357F3C(*(_QWORD *)(v0 + 16), 0.95);
}

double sub_1003649C0(int a1)
{
  uint64_t v1;

  return sub_100357F98(a1, *(id *)(v1 + 16));
}

uint64_t sub_1003649C8(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;

  v2 = *(void **)(a1 + 16);
  v3 = *(id *)(a1 + 56);
  swift_bridgeObjectRetain();
  v4 = v2;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100364A14(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(void **)(a1 + 56);

  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v3);

  return a1;
}

uint64_t sub_100364A60(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;

  v2 = *(void **)(a1 + 16);
  v3 = *(void **)(a1 + 24);
  v4 = *(id *)(a1 + 112);
  swift_bridgeObjectRetain();
  v5 = v2;
  v6 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100364ABC(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(void **)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 96);
  v5 = *(void **)(a1 + 112);

  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v4);

  return a1;
}

void *sub_100364B18(void *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v7;

  if (result)
  {
    v7 = result;
    return (void *)sub_10003A434(a4, a5);
  }
  return result;
}

void *sub_100364B4C(void *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (result)
  {

    return (void *)sub_10003A5C8(a4, a5);
  }
  return result;
}

uint64_t sub_100364B80()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  id *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  id *v23;
  void *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;

  v1 = (int *)type metadata accessor for SymbolButton.Configuration(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);

  v6 = v0 + v4;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v7 = *(void **)(v0 + v4 + 200);
  if (v7 != (void *)1)
  {

    swift_bridgeObjectRelease();
  }
  v8 = *(void **)(v6 + 224);
  if (v8 != (void *)1)
  {

    swift_bridgeObjectRelease();
  }
  v29 = v5;
  v9 = v5 + v3;

  v10 = v6 + v1[9];
  v11 = type metadata accessor for UIView.Corner(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (!v13(v10, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  v14 = v9 + v4;
  v15 = (id *)(v6 + v1[10]);
  if (*v15)
  {

  }
  v16 = v14 & ~v3;
  v17 = *(void **)(v6 + v1[11] + 16);
  if (v17 != (void *)1)

  v18 = v6 + v1[16];
  v19 = v0 + v16;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v20 = *(void **)(v0 + v16 + 200);
  if (v20 != (void *)1)
  {

    swift_bridgeObjectRelease();
  }
  v21 = *(void **)(v19 + 224);
  if (v21 != (void *)1)
  {

    swift_bridgeObjectRelease();
  }

  v22 = v19 + v1[9];
  if (!v13(v22, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v22, v11);
  v23 = (id *)(v19 + v1[10]);
  if (*v23)
  {

  }
  v24 = *(void **)(v19 + v1[11] + 16);
  if (v24 != (void *)1)

  v25 = (v29 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v26 = v3 | 7;
  v27 = v19 + v1[16];

  swift_release(*(_QWORD *)(v0 + v25));
  return swift_deallocObject(v0, v25 + 8, v26);
}

uint64_t sub_100364E68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for SymbolButton.Configuration(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  return sub_100353F90(*(char **)(v0 + 16), v0 + ((v2 + 24) & ~v2), v0 + ((*(_QWORD *)(v1 + 64) + v2 + ((v2 + 24) & ~v2)) & ~v2), *(_QWORD *)(v0+ ((*(_QWORD *)(v1 + 64) + ((*(_QWORD *)(v1 + 64) + v2 + ((v2 + 24) & ~v2)) & ~v2) + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_100364EBC()
{
  return sub_100364EE0(64);
}

id sub_100364EC4()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "setAlpha:", *(double *)(v0 + 56));
}

uint64_t sub_100364ED8()
{
  return sub_100364EE0(56);
}

uint64_t sub_100364EE0(uint64_t a1)
{
  uint64_t v1;

  if (*(_QWORD *)(v1 + 40))
    swift_release(*(_QWORD *)(v1 + 48));
  return swift_deallocObject(v1, a1, 7);
}

id sub_100364F20()
{
  uint64_t v0;
  double v1;

  v1 = *(double *)(v0 + 24);
  if (*(_BYTE *)(v0 + 32))
    v1 = 0.0;
  return objc_msgSend(*(id *)(v0 + 16), "setAlpha:", v1);
}

uint64_t sub_100364F48()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

id sub_100364F74(id result, void *a2, void *a3)
{
  void *v4;
  id v5;
  id v6;

  if (result != (id)1)
  {
    v4 = result;
    swift_bridgeObjectRetain();
    v5 = v4;
    v6 = a2;
    return a3;
  }
  return result;
}

uint64_t _s11MusicCoreUI12SymbolButtonC8MaterialV5ColorOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10036500C + 4 * byte_1003A0045[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100365040 + 4 * asc_1003A0040[v4]))();
}

uint64_t sub_100365040(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100365048(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100365050);
  return result;
}

uint64_t sub_10036505C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100365064);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100365068(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100365070(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SymbolButton.Animation.TransitionStyle()
{
  return &type metadata for SymbolButton.Animation.TransitionStyle;
}

double destroy for SymbolButton.Transition(uint64_t a1)
{
  double result;
  void *v3;

  if (*(_QWORD *)a1)
  {

    if (*(_QWORD *)(a1 + 24))
      *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 32)).n128_u64[0];
  }
  v3 = *(void **)(a1 + 40);
  if (v3)
  {

    if (*(_QWORD *)(a1 + 64))
      *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 72)).n128_u64[0];
  }
  return result;
}

uint64_t initializeWithCopy for SymbolButton.Transition(uint64_t a1, uint64_t a2)
{
  void *v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  __int128 v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  __int128 v16;

  v4 = *(void **)a2;
  if (*(_QWORD *)a2)
  {
    v5 = (_OWORD *)(a2 + 24);
    v6 = *(_QWORD *)(a2 + 24);
    v7 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = v4;
    *(_QWORD *)(a1 + 8) = v7;
    *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
    v8 = v4;
    if (v6)
    {
      v9 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 24) = v6;
      *(_QWORD *)(a1 + 32) = v9;
      swift_retain(v9);
    }
    else
    {
      *(_OWORD *)(a1 + 24) = *v5;
    }
  }
  else
  {
    v10 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v10;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  }
  v11 = *(void **)(a2 + 40);
  if (v11)
  {
    v12 = *(_QWORD *)(a2 + 64);
    v13 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = v11;
    *(_QWORD *)(a1 + 48) = v13;
    *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
    v14 = v11;
    if (v12)
    {
      v15 = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 64) = v12;
      *(_QWORD *)(a1 + 72) = v15;
      swift_retain(v15);
    }
    else
    {
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    }
  }
  else
  {
    v16 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v16;
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  }
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  return a1;
}

uint64_t assignWithCopy for SymbolButton.Transition(uint64_t a1, __int128 *a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 *v21;
  void *v22;
  void *v23;
  __int128 *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  if (*(_QWORD *)a1)
  {
    if (!v5)
    {
      sub_100365410(a1);
      v17 = *((_QWORD *)a2 + 4);
      v18 = a2[1];
      *(_OWORD *)a1 = *a2;
      *(_OWORD *)(a1 + 16) = v18;
      *(_QWORD *)(a1 + 32) = v17;
      goto LABEL_17;
    }
    *(_QWORD *)a1 = v5;
    v6 = v5;

    v7 = *((_QWORD *)a2 + 1);
    v8 = *(_QWORD *)(a1 + 24);
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    *(_QWORD *)(a1 + 8) = v7;
    v9 = *((_QWORD *)a2 + 3);
    if (v8)
    {
      if (v9)
      {
        v10 = *((_QWORD *)a2 + 4);
        v11 = *(_QWORD *)(a1 + 32);
        *(_QWORD *)(a1 + 24) = v9;
        *(_QWORD *)(a1 + 32) = v10;
        swift_retain(v10);
        swift_release(v11);
        goto LABEL_17;
      }
      swift_release(*(_QWORD *)(a1 + 32));
      goto LABEL_15;
    }
    if (!v9)
    {
LABEL_15:
      *(_OWORD *)(a1 + 24) = *(__int128 *)((char *)a2 + 24);
      goto LABEL_17;
    }
    v16 = *((_QWORD *)a2 + 4);
    *(_QWORD *)(a1 + 24) = v9;
LABEL_12:
    *(_QWORD *)(a1 + 32) = v16;
    swift_retain(v16);
    goto LABEL_17;
  }
  if (!v5)
  {
    v19 = *a2;
    v20 = a2[1];
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    *(_OWORD *)a1 = v19;
    *(_OWORD *)(a1 + 16) = v20;
    goto LABEL_17;
  }
  *(_QWORD *)a1 = v5;
  v12 = *((_QWORD *)a2 + 1);
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  *(_QWORD *)(a1 + 8) = v12;
  v14 = (__int128 *)((char *)a2 + 24);
  v13 = *((_QWORD *)a2 + 3);
  v15 = v5;
  if (v13)
  {
    v16 = *((_QWORD *)a2 + 4);
    *(_QWORD *)(a1 + 24) = v13;
    goto LABEL_12;
  }
  *(_OWORD *)(a1 + 24) = *v14;
LABEL_17:
  v21 = (__int128 *)(a1 + 40);
  v22 = *(void **)(a1 + 40);
  v24 = (__int128 *)((char *)a2 + 40);
  v23 = (void *)*((_QWORD *)a2 + 5);
  if (!v22)
  {
    if (!v23)
    {
      v37 = *v24;
      v38 = *(__int128 *)((char *)a2 + 56);
      *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
      *(_OWORD *)(a1 + 56) = v38;
LABEL_32:
      *v21 = v37;
      goto LABEL_34;
    }
    *(_QWORD *)(a1 + 40) = v23;
    v31 = *((_QWORD *)a2 + 6);
    *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
    *(_QWORD *)(a1 + 48) = v31;
    v32 = *((_QWORD *)a2 + 8);
    v33 = v23;
    if (!v32)
    {
      *(_OWORD *)(a1 + 64) = a2[4];
      goto LABEL_34;
    }
    v34 = *((_QWORD *)a2 + 9);
    *(_QWORD *)(a1 + 64) = v32;
    goto LABEL_28;
  }
  if (!v23)
  {
    sub_100365410(a1 + 40);
    v35 = *((_QWORD *)a2 + 9);
    v36 = *(__int128 *)((char *)a2 + 56);
    *v21 = *v24;
    *(_OWORD *)(a1 + 56) = v36;
    *(_QWORD *)(a1 + 72) = v35;
    goto LABEL_34;
  }
  *(_QWORD *)(a1 + 40) = v23;
  v25 = v23;

  v26 = *((_QWORD *)a2 + 6);
  v21 = (__int128 *)(a1 + 64);
  v27 = *(_QWORD *)(a1 + 64);
  *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
  *(_QWORD *)(a1 + 48) = v26;
  v28 = *((_QWORD *)a2 + 8);
  if (!v27)
  {
    if (!v28)
    {
LABEL_31:
      v37 = a2[4];
      goto LABEL_32;
    }
    v34 = *((_QWORD *)a2 + 9);
    *(_QWORD *)(a1 + 64) = v28;
LABEL_28:
    *(_QWORD *)(a1 + 72) = v34;
    swift_retain(v34);
    goto LABEL_34;
  }
  if (!v28)
  {
    swift_release(*(_QWORD *)(a1 + 72));
    goto LABEL_31;
  }
  v29 = *((_QWORD *)a2 + 9);
  v30 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = v28;
  *(_QWORD *)(a1 + 72) = v29;
  swift_retain(v29);
  swift_release(v30);
LABEL_34:
  *(_BYTE *)(a1 + 80) = *((_BYTE *)a2 + 80);
  return a1;
}

uint64_t sub_100365410(uint64_t a1)
{
  destroy for SymbolButton.Transition.View(a1);
  return a1;
}

__n128 initializeWithTake for SymbolButton.Transition(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for SymbolButton.Transition(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v18;
  uint64_t v19;

  v4 = *(void **)a1;
  if (!*(_QWORD *)a1)
    goto LABEL_7;
  if (!*(_QWORD *)a2)
  {
    sub_100365410(a1);
LABEL_7:
    v9 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v9;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    goto LABEL_8;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  if (v6)
  {
    if (v5)
    {
      v7 = *(_QWORD *)(a2 + 32);
      v8 = *(_QWORD *)(a1 + 32);
      *(_QWORD *)(a1 + 24) = v5;
      *(_QWORD *)(a1 + 32) = v7;
      swift_release(v8);
      goto LABEL_8;
    }
    swift_release(*(_QWORD *)(a1 + 32));
  }
  else if (v5)
  {
    v18 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v5;
    *(_QWORD *)(a1 + 32) = v18;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
LABEL_8:
  v10 = *(void **)(a1 + 40);
  v11 = *(_QWORD *)(a2 + 40);
  if (!v10)
  {
LABEL_14:
    v16 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v16;
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    goto LABEL_15;
  }
  if (!v11)
  {
    sub_100365410(a1 + 40);
    goto LABEL_14;
  }
  *(_QWORD *)(a1 + 40) = v11;

  v12 = *(_QWORD *)(a2 + 64);
  v13 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  if (!v13)
  {
    if (v12)
    {
      v19 = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 64) = v12;
      *(_QWORD *)(a1 + 72) = v19;
      goto LABEL_15;
    }
LABEL_23:
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    goto LABEL_15;
  }
  if (!v12)
  {
    swift_release(*(_QWORD *)(a1 + 72));
    goto LABEL_23;
  }
  v14 = *(_QWORD *)(a2 + 72);
  v15 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = v12;
  *(_QWORD *)(a1 + 72) = v14;
  swift_release(v15);
LABEL_15:
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for SymbolButton.Transition(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 81))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SymbolButton.Transition(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 80) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 81) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 81) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for SymbolButton.Transition()
{
  return &type metadata for SymbolButton.Transition;
}

double destroy for SymbolButton.Transition.View(uint64_t a1)
{
  double result;

  if (*(_QWORD *)(a1 + 24))
    *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 32)).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for SymbolButton.Transition.View(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  id v8;
  uint64_t v9;

  v4 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = (_OWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 24);
  v8 = v4;
  if (v6)
  {
    v9 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 32) = v9;
    swift_retain(v9);
  }
  else
  {
    *(_OWORD *)(a1 + 24) = *v7;
  }
  return a1;
}

uint64_t assignWithCopy for SymbolButton.Transition.View(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a1 + 24);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = *(_QWORD *)(a2 + 24);
  if (!v8)
  {
    if (v9)
    {
      v12 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 24) = v9;
      *(_QWORD *)(a1 + 32) = v12;
      swift_retain(v12);
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    return a1;
  }
  if (!v9)
  {
    swift_release(*(_QWORD *)(a1 + 32));
    goto LABEL_7;
  }
  v10 = *(_QWORD *)(a2 + 32);
  v11 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = v9;
  *(_QWORD *)(a1 + 32) = v10;
  swift_retain(v10);
  swift_release(v11);
  return a1;
}

uint64_t assignWithTake for SymbolButton.Transition.View(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  if (!v6)
  {
    if (v5)
    {
      v9 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 24) = v5;
      *(_QWORD *)(a1 + 32) = v9;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    return a1;
  }
  if (!v5)
  {
    swift_release(*(_QWORD *)(a1 + 32));
    goto LABEL_7;
  }
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v7;
  swift_release(v8);
  return a1;
}

ValueMetadata *type metadata accessor for SymbolButton.Transition.View()
{
  return &type metadata for SymbolButton.Transition.View;
}

unint64_t sub_10036588C()
{
  unint64_t result;

  result = qword_1004A1598;
  if (!qword_1004A1598)
  {
    result = swift_getWitnessTable(&unk_1003A0660, &type metadata for SymbolButton.Animation.TransitionStyle);
    atomic_store(result, (unint64_t *)&qword_1004A1598);
  }
  return result;
}

_QWORD *sub_100365940(uint64_t a1)
{
  int64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_1002593C0(0, v1, 0);
    v3 = (_QWORD *)(a1 + 56);
    do
    {
      v4 = *(v3 - 3);
      v5 = *(v3 - 2);
      v6 = *((_BYTE *)v3 - 8);
      v7 = *v3;
      sub_10003B4C0(v4, v5, v6);
      v8 = _swiftEmptyArrayStorage[2];
      v9 = _swiftEmptyArrayStorage[3];
      swift_bridgeObjectRetain();
      if (v8 >= v9 >> 1)
        sub_1002593C0((char *)(v9 > 1), v8 + 1, 1);
      v3 += 6;
      _swiftEmptyArrayStorage[2] = v8 + 1;
      v10 = &_swiftEmptyArrayStorage[4 * v8];
      v10[4] = v4;
      v10[5] = v5;
      *((_BYTE *)v10 + 48) = v6;
      v10[7] = v7;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

char *sub_100365A3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (char *)_swiftEmptyArrayStorage;
  v2 = (uint64_t *)(swift_bridgeObjectRetain() + 72);
  v3 = (char *)_swiftEmptyArrayStorage;
  do
  {
    v5 = *v2;
    if (*v2)
    {
      v6 = *(v2 - 1);
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0)
        v3 = sub_100258074(0, *((_QWORD *)v3 + 2) + 1, 1, v3);
      v8 = *((_QWORD *)v3 + 2);
      v7 = *((_QWORD *)v3 + 3);
      if (v8 >= v7 >> 1)
        v3 = sub_100258074((char *)(v7 > 1), v8 + 1, 1, v3);
      *((_QWORD *)v3 + 2) = v8 + 1;
      v4 = &v3[16 * v8];
      *((_QWORD *)v4 + 4) = v6;
      *((_QWORD *)v4 + 5) = v5;
    }
    v2 += 6;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t TextArray.Element.init(text:accessibilityLabel:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  *(_QWORD *)a7 = result;
  *(_QWORD *)(a7 + 8) = a2;
  *(_BYTE *)(a7 + 16) = a3 & 1;
  *(_QWORD *)(a7 + 24) = a4;
  *(_QWORD *)(a7 + 32) = a5;
  *(_QWORD *)(a7 + 40) = a6;
  return result;
}

uint64_t TextArray.body.getter@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  uint64_t v44;
  uint64_t result;
  uint64_t *v46;
  _QWORD v47[4];
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char *v53;
  uint64_t v54;
  int v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  char *v60;
  uint64_t v61;
  char v62;
  uint64_t v63;

  v6 = a1;
  v59 = a4;
  v7 = sub_100365940(a1);
  v60 = a2;
  v61 = a3;
  v8 = sub_10024AF7C();
  swift_bridgeObjectRetain();
  v10 = Text.init<A>(_:)(&v60, &type metadata for String, v8);
  v12 = v11;
  v60 = (char *)v10;
  v61 = v13;
  v57 = v13;
  v62 = v11 & 1;
  v63 = v9;
  v14 = v7[2];
  if (v14)
  {
    v48 = (uint64_t)&v48;
    v50 = v9;
    v51 = v6;
    v52 = v8;
    v53 = a2;
    v15 = v7[4];
    v16 = v7[5];
    v17 = *((_BYTE *)v7 + 48);
    v54 = a3;
    v18 = v7[7];
    v19 = (2 * v14) | 1;
    __chkstk_darwin();
    v49 = v10;
    v47[2] = v20;
    sub_10003B4C0(v15, v16, v17);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v58 = sub_100365EB8(v15, v16, v17, v18, (void (*)(uint64_t *__return_ptr, uint64_t *, _QWORD *))sub_100366174, (uint64_t)v47, (uint64_t)v7, (uint64_t)(v7 + 4), 1, v19);
    v56 = v21;
    v23 = v22;
    swift_bridgeObjectRelease();
    v55 = v23 & 1;
    v10 = v49;
    v24 = v15;
    v25 = v16;
    v8 = v52;
    a2 = v53;
    v26 = v17;
    v6 = v51;
    sub_10003B4D0(v24, v25, v26);
    swift_bridgeObjectRelease();
    a3 = v54;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v58 = 0;
    v55 = 0;
    v56 = 0xE000000000000000;
  }
  sub_10003B4D0(v10, v57, v12 & 1);
  swift_bridgeObjectRelease();
  v60 = sub_100365A3C(v6);
  v27 = sub_100005574(&qword_10049AC08);
  v28 = sub_10027E304();
  v29 = BidirectionalCollection<>.joined(separator:)(a2, a3, v27, v28);
  v31 = v30;
  swift_bridgeObjectRelease();
  v60 = (char *)v29;
  v61 = v31;
  v32 = Text.init<A>(_:)(&v60, &type metadata for String, v8);
  v34 = v33;
  v36 = v35 & 1;
  v37 = v58;
  v38 = v56;
  v39 = v55;
  v54 = Text.accessibilityLabel(_:)();
  v41 = v40;
  v43 = v42;
  v57 = v44;
  sub_10003B4D0(v37, v38, v39);
  swift_bridgeObjectRelease();
  sub_10003B4D0(v32, v34, v36);
  result = swift_bridgeObjectRelease();
  v46 = v59;
  *v59 = v54;
  v46[1] = v41;
  *((_BYTE *)v46 + 16) = v43 & 1;
  v46[3] = v57;
  return result;
}

uint64_t sub_100365E3C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return TextArray.body.getter(*(_QWORD *)v1, *(char **)(v1 + 8), *(_QWORD *)(v1 + 16), a1);
}

uint64_t TextArray.Element.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v6;
  uint64_t result;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD v11[2];

  v11[0] = a1;
  v11[1] = a2;
  v6 = sub_10024AF7C();
  swift_bridgeObjectRetain();
  result = Text.init<A>(_:)(v11, &type metadata for String, v6);
  *(_QWORD *)a3 = result;
  *(_QWORD *)(a3 + 8) = v8;
  *(_BYTE *)(a3 + 16) = v9 & 1;
  *(_QWORD *)(a3 + 24) = v10;
  *(_QWORD *)(a3 + 32) = a1;
  *(_QWORD *)(a3 + 40) = a2;
  return result;
}

uint64_t sub_100365EB8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, void (*a5)(uint64_t *__return_ptr, uint64_t *, _QWORD *), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  uint64_t v10;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t result;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  _QWORD v32[2];
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;

  v12 = a3;
  v13 = a2;
  v14 = a1;
  v15 = a9;
  v35 = a1;
  v36 = a2;
  v37 = a3 & 1;
  v38 = a4;
  v16 = a10 >> 1;
  sub_10003B4C0(a1, a2, a3 & 1);
  if (a10 >> 1 == a9)
  {
    swift_bridgeObjectRetain();
    return v14;
  }
  else
  {
    swift_bridgeObjectRetain();
    result = swift_unknownObjectRetain(a7);
    v18 = a8 + 32 * a9 + 16;
    v24 = a7;
    while (v15 < v16)
    {
      v19 = v12;
      v26 = v13;
      v20 = *(_QWORD *)(v18 - 16);
      v21 = *(_QWORD *)(v18 - 8);
      v22 = *(_BYTE *)v18;
      v23 = *(_QWORD *)(v18 + 8);
      v32[0] = v20;
      v32[1] = v21;
      v33 = v22;
      v34 = v23;
      sub_10003B4C0(v20, v21, v22);
      swift_bridgeObjectRetain();
      a5(&v28, &v35, v32);
      if (v10)
      {
        sub_10003B4D0(v20, v21, v22);
        swift_unknownObjectRelease(v24);
        swift_bridgeObjectRelease();
        sub_10003B4D0(v14, v26, v19 & 1);
        swift_bridgeObjectRelease();
        return v14;
      }
      ++v15;
      sub_10003B4D0(v20, v21, v22);
      swift_bridgeObjectRelease();
      sub_10003B4D0(v14, v26, v19 & 1);
      result = swift_bridgeObjectRelease();
      v14 = v28;
      v13 = v29;
      v12 = v30;
      v35 = v28;
      v36 = v29;
      v37 = v30;
      v38 = v31;
      v18 += 32;
      v16 = a10 >> 1;
      if (a10 >> 1 == v15)
      {
        swift_unknownObjectRelease(v24);
        return v14;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100366094@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;

  v5 = *a2;
  v6 = a2[1];
  v7 = *((unsigned __int8 *)a2 + 16);
  v8 = a2[3];
  v9 = static Text.+ infix(_:_:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned __int8 *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)a3, *(_QWORD *)(a3 + 8), *(unsigned __int8 *)(a3 + 16), *(_QWORD *)(a3 + 24));
  v11 = v10;
  v13 = v12 & 1;
  v15 = static Text.+ infix(_:_:)(v9, v10, v12 & 1, v14, v5, v6, v7, v8);
  v17 = v16;
  LOBYTE(v7) = v18;
  v20 = v19;
  sub_10003B4D0(v9, v11, v13);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a4 = v15;
  *(_QWORD *)(a4 + 8) = v17;
  *(_BYTE *)(a4 + 16) = v7 & 1;
  *(_QWORD *)(a4 + 24) = v20;
  return result;
}

uint64_t sub_100366174@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_100366094(a1, a2, *(_QWORD *)(v3 + 16), a3);
}

uint64_t sub_10036618C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of TextArray.body>>, 1);
}

_QWORD *sub_1003661A0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for TextArray(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  a1[1] = a2[1];
  v5 = a2[2];
  v6 = a1[2];
  a1[2] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v6);
  return a1;
}

uint64_t *assignWithTake for TextArray(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v4);
  v5 = a2[2];
  v6 = a1[2];
  a1[1] = a2[1];
  a1[2] = v5;
  swift_bridgeObjectRelease(v6);
  return a1;
}

ValueMetadata *type metadata accessor for TextArray()
{
  return &type metadata for TextArray;
}

uint64_t destroy for TextArray.Element(uint64_t a1)
{
  sub_10003B4D0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TextArray.Element(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  sub_10003B4C0(*(_QWORD *)a2, v5, v6);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TextArray.Element(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  sub_10003B4C0(*(_QWORD *)a2, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  sub_10003B4D0(v7, v8, v9);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TextArray.Element(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v4 = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v4;
  sub_10003B4D0(v5, v6, v7);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for TextArray.Element()
{
  return &type metadata for TextArray.Element;
}

void *sub_100366448()
{
  return &protocol witness table for Text;
}

uint64_t Text.with<A>(style:configurator:)@<X0>(int a1@<W0>, void (*a2)(void)@<X1>, uint64_t a3@<X7>, uint64_t a4@<X8>, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v22;
  uint64_t v23;

  v22 = a4;
  v23 = a5;
  v8 = *(_QWORD *)(a3 - 8);
  __chkstk_darwin();
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100368800(v12, v13, v11 & 1, v14, a1);
  v16 = v15;
  v18 = v17;
  v20 = v19 & 1;
  a2();
  sub_100367540((uint64_t)v10, a1, a3, v23, v22);
  sub_10003B4D0(v16, v18, v20);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, a3);
}

uint64_t sub_10036654C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t KeyPath;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  __int128 v44;
  _OWORD *v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  char v66;
  __int128 v67;
  _OWORD *v68;
  __int128 v69;
  __int128 v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  _OWORD *v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char v106;
  BOOL v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  unint64_t v117;
  uint64_t v118;
  _OWORD *v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  _BOOL4 v136;
  char *v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  _OWORD *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  __int128 v161;
  uint64_t v162;
  __int16 v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  char v169;
  char v170;

  v152 = a4;
  v150 = a2;
  v148 = a1;
  v153 = a6;
  v7 = a3 & 1;
  v151 = sub_100005574(&qword_1004A1628);
  __chkstk_darwin();
  v9 = (char *)&v135 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v144 = sub_100005574(&qword_1004A1630);
  __chkstk_darwin();
  v146 = (_OWORD *)((char *)&v135 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v142 = sub_100005574(&qword_1004A1638);
  __chkstk_darwin();
  v12 = (char *)&v135 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v145 = sub_100005574(&qword_1004A1600);
  __chkstk_darwin();
  v143 = (char *)&v135 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v149 = sub_100005574(&qword_1004A15C0);
  __chkstk_darwin();
  v147 = (char *)&v135 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100005574(&qword_10049B888);
  __chkstk_darwin();
  v17 = (uint64_t *)((char *)&v135 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100005574(&qword_10049B890);
  __chkstk_darwin();
  v19 = (char *)&v135 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100005574(&qword_1004A1620);
  __chkstk_darwin();
  v22 = (char *)&v135 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_1004A1610);
  __chkstk_darwin();
  v24 = (char *)&v135 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __chkstk_darwin();
  v28 = (char *)&v135 - v27;
  switch(a5)
  {
    case 4:
    case 6:
      v29 = static Color.secondary.getter(v26);
      v142 = v29;
      KeyPath = swift_getKeyPath(&unk_1003A0810);
      v143 = (char *)KeyPath;
      v31 = swift_getKeyPath(&unk_1003A0840);
      v141 = v9;
      v32 = v31;
      v33 = swift_getKeyPath(&unk_1003A08A0);
      v139 = (char *)v33;
      v34 = v148;
      v35 = v150;
      v36 = v7;
      sub_10003B4C0(v148, v150, v7);
      v37 = v152;
      swift_bridgeObjectRetain();
      sub_10003B4C0(v34, v35, v7);
      swift_bridgeObjectRetain();
      swift_retain(KeyPath);
      swift_retain(v29);
      swift_retain(v32);
      sub_10003B4D0(v34, v35, v7);
      swift_release(v32);
      swift_release(v29);
      swift_release(KeyPath);
      swift_bridgeObjectRelease();
      v154 = v34;
      v155 = v35;
      v156 = v7;
      v157 = v37;
      v158 = KeyPath;
      v159 = v29;
      v160 = v32;
      v161 = xmmword_100384AA0;
      v162 = v33;
      v163 = 257;
      sub_10003B4C0(v34, v35, v7);
      swift_bridgeObjectRetain();
      swift_retain(KeyPath);
      swift_retain(v29);
      swift_retain(v32);
      swift_retain(v33);
      v38 = sub_100005574(&qword_1004A15E0);
      v138 = v38;
      v39 = sub_100005574(&qword_1004A15F0);
      v40 = sub_100368FC0(&qword_1004A15D8, &qword_1004A15E0, (unint64_t *)&qword_10049B870, &qword_10049B878);
      v41 = sub_100369040();
      _ConditionalContent<>.init(storage:)(&v154, v38, v39, v40, v41);
      v42 = v169;
      v43 = v170;
      v44 = v165;
      v45 = v146;
      *v146 = v164;
      v45[1] = v44;
      v46 = v167;
      v47 = v168;
      v45[2] = v166;
      v45[3] = v46;
      v45[4] = v47;
      *((_BYTE *)v45 + 80) = v42;
      *((_BYTE *)v45 + 81) = v43;
      swift_storeEnumTagMultiPayload(v45, v144, 0);
      v48 = sub_100005574(&qword_1004A15D0);
      v49 = sub_100368F34();
      v50 = sub_1003690DC();
      v51 = (uint64_t)v147;
      _ConditionalContent<>.init(storage:)(v45, v48, v145, v49, v50);
      v52 = (uint64_t)v141;
      sub_100014A7C(v51, (uint64_t)v141, &qword_1004A15C0);
      swift_storeEnumTagMultiPayload(v52, v151, 0);
      v53 = sub_100369100(&qword_1004A15B8, &qword_1004A15C0, (void (*)(void))sub_100368F34, (void (*)(void))sub_1003690DC);
      _ConditionalContent<>.init(storage:)(v52, v149, v138, v53, v40);
      sub_100008758(v51, &qword_1004A15C0);
      sub_10003B4D0(v34, v35, v36);
      swift_release(v139);
      swift_release(v32);
      swift_release(v142);
      swift_release(v143);
      return swift_bridgeObjectRelease();
    case 5:
      v140 = v7;
      v136 = v7 != 0;
      v139 = v28;
      v138 = v25;
      v135 = static Color.secondary.getter(v26);
      v76 = swift_getKeyPath(&unk_1003A0810);
      v137 = v12;
      v77 = v76;
      v78 = enum case for Text.Case.uppercase(_:);
      v79 = type metadata accessor for Text.Case(0);
      v141 = v9;
      v80 = v79;
      v81 = *(_QWORD *)(v79 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v81 + 104))(v19, v78, v79);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v19, 0, 1, v80);
      v82 = swift_getKeyPath(&unk_1003A0870);
      sub_100014A7C((uint64_t)v19, (uint64_t)v17 + *(int *)(v15 + 28), &qword_10049B890);
      *v17 = v82;
      sub_100014A7C((uint64_t)v17, (uint64_t)&v22[*(int *)(v20 + 36)], &qword_10049B888);
      v83 = v148;
      v84 = v150;
      *(_QWORD *)v22 = v148;
      *((_QWORD *)v22 + 1) = v84;
      v22[16] = v136;
      *((_QWORD *)v22 + 3) = v152;
      *((_QWORD *)v22 + 4) = v77;
      v85 = v135;
      *((_QWORD *)v22 + 5) = v135;
      v86 = v140;
      sub_10003B4C0(v83, v84, v140);
      swift_bridgeObjectRetain();
      sub_10003B4C0(v83, v84, v86);
      swift_bridgeObjectRetain();
      swift_retain(v77);
      swift_retain(v85);
      sub_100008758((uint64_t)v17, &qword_10049B888);
      sub_100008758((uint64_t)v19, &qword_10049B890);
      sub_10003B4D0(v83, v84, v86);
      swift_release(v85);
      swift_release(v77);
      swift_bridgeObjectRelease();
      v87 = swift_getKeyPath(&unk_1003A0840);
      sub_100014A7C((uint64_t)v22, (uint64_t)v24, &qword_1004A1620);
      v88 = v138;
      v89 = &v24[*(int *)(v138 + 36)];
      *(_QWORD *)v89 = v87;
      *((_QWORD *)v89 + 1) = 1;
      v89[16] = 0;
      sub_100008758((uint64_t)v22, &qword_1004A1620);
      v90 = (uint64_t)v139;
      sub_100369224((uint64_t)v24, (uint64_t)v139);
      v91 = (uint64_t)v137;
      sub_100014A7C(v90, (uint64_t)v137, &qword_1004A1610);
      swift_storeEnumTagMultiPayload(v91, v142, 0);
      v92 = sub_100005574(&qword_10049EB30);
      v93 = sub_100369170();
      v94 = sub_100304584();
      v95 = (uint64_t)v143;
      _ConditionalContent<>.init(storage:)(v91, v88, v92, v93, v94);
      v96 = v146;
      sub_100014A7C(v95, (uint64_t)v146, &qword_1004A1600);
      swift_storeEnumTagMultiPayload(v96, v144, 1);
      v97 = sub_100005574(&qword_1004A15D0);
      v98 = sub_100368F34();
      v99 = sub_1003690DC();
      v100 = (uint64_t)v147;
      _ConditionalContent<>.init(storage:)(v96, v97, v145, v98, v99);
      sub_100008758(v95, &qword_1004A1600);
      v101 = (uint64_t)v141;
      sub_100014A7C(v100, (uint64_t)v141, &qword_1004A15C0);
      swift_storeEnumTagMultiPayload(v101, v151, 0);
      v102 = sub_100005574(&qword_1004A15E0);
      v103 = sub_100369100(&qword_1004A15B8, &qword_1004A15C0, (void (*)(void))sub_100368F34, (void (*)(void))sub_1003690DC);
      v104 = sub_100368FC0(&qword_1004A15D8, &qword_1004A15E0, (unint64_t *)&qword_10049B870, &qword_10049B878);
      _ConditionalContent<>.init(storage:)(v101, v149, v102, v103, v104);
      sub_100008758(v100, &qword_1004A15C0);
      return sub_100008758(v90, &qword_1004A1610);
    case 7:
      v106 = v7;
      v140 = v7;
      v107 = (_DWORD)v7 != 0;
      v108 = v25;
      v109 = static Color.white.getter(v25);
      v110 = swift_getKeyPath(&unk_1003A0810);
      v111 = v148;
      v112 = v150;
      *(_QWORD *)v12 = v148;
      *((_QWORD *)v12 + 1) = v112;
      v12[16] = v107;
      *((_QWORD *)v12 + 3) = v152;
      *((_QWORD *)v12 + 4) = v110;
      v113 = v110;
      v141 = (char *)v110;
      *((_QWORD *)v12 + 5) = v109;
      v139 = (char *)v109;
      swift_storeEnumTagMultiPayload(v12, v142, 1);
      sub_10003B4C0(v111, v112, v106);
      swift_bridgeObjectRetain();
      sub_10003B4C0(v111, v112, v106);
      swift_bridgeObjectRetain();
      swift_retain(v113);
      swift_retain(v109);
      v114 = sub_100005574(&qword_10049EB30);
      v115 = (uint64_t)v9;
      v116 = sub_100369170();
      v117 = sub_100304584();
      v118 = (uint64_t)v143;
      _ConditionalContent<>.init(storage:)(v12, v108, v114, v116, v117);
      v119 = v146;
      sub_100014A7C(v118, (uint64_t)v146, &qword_1004A1600);
      swift_storeEnumTagMultiPayload(v119, v144, 1);
      v120 = sub_100005574(&qword_1004A15D0);
      v121 = sub_100368F34();
      v122 = sub_1003690DC();
      v123 = (uint64_t)v147;
      _ConditionalContent<>.init(storage:)(v119, v120, v145, v121, v122);
      sub_100008758(v118, &qword_1004A1600);
      sub_100014A7C(v123, v115, &qword_1004A15C0);
      swift_storeEnumTagMultiPayload(v115, v151, 0);
      v124 = sub_100005574(&qword_1004A15E0);
      v125 = sub_100369100(&qword_1004A15B8, &qword_1004A15C0, (void (*)(void))sub_100368F34, (void (*)(void))sub_1003690DC);
      v126 = sub_100368FC0(&qword_1004A15D8, &qword_1004A15E0, (unint64_t *)&qword_10049B870, &qword_10049B878);
      _ConditionalContent<>.init(storage:)(v115, v149, v124, v125, v126);
      sub_100008758(v123, &qword_1004A15C0);
      sub_10003B4D0(v111, v112, v140);
      swift_release(v139);
      swift_release(v141);
      return swift_bridgeObjectRelease();
    case 8:
      v127 = static Color.white.getter(v25);
      v128 = swift_getKeyPath(&unk_1003A0810);
      v129 = swift_getKeyPath(&unk_1003A0840);
      v130 = v148;
      v131 = v150;
      *(_QWORD *)v9 = v148;
      *((_QWORD *)v9 + 1) = v131;
      v9[16] = (_DWORD)v7 != 0;
      *((_QWORD *)v9 + 3) = v152;
      *((_QWORD *)v9 + 4) = v128;
      *((_QWORD *)v9 + 5) = v127;
      *((_QWORD *)v9 + 6) = v129;
      *((_QWORD *)v9 + 7) = 1;
      v9[64] = 0;
      swift_storeEnumTagMultiPayload(v9, v151, 1);
      sub_10003B4C0(v130, v131, v7);
      swift_bridgeObjectRetain();
      v132 = sub_100005574(&qword_1004A15E0);
      v133 = sub_100369100(&qword_1004A15B8, &qword_1004A15C0, (void (*)(void))sub_100368F34, (void (*)(void))sub_1003690DC);
      v134 = sub_100368FC0(&qword_1004A15D8, &qword_1004A15E0, (unint64_t *)&qword_10049B870, &qword_10049B878);
      return _ConditionalContent<>.init(storage:)(v9, v149, v132, v133, v134);
    default:
      v54 = static Color.primary.getter(v26);
      v55 = swift_getKeyPath(&unk_1003A0810);
      v56 = swift_getKeyPath(&unk_1003A0840);
      v57 = v148;
      v154 = v148;
      v58 = v150;
      v155 = v150;
      v59 = v7;
      v156 = v7;
      v157 = v152;
      v158 = v55;
      v143 = (char *)v55;
      v159 = v54;
      v160 = v56;
      v142 = v54;
      v141 = (char *)v56;
      v161 = 1uLL;
      v162 = 0;
      v163 = 0;
      sub_10003B4C0(v148, v150, v7);
      swift_bridgeObjectRetain();
      sub_10003B4C0(v57, v58, v7);
      swift_bridgeObjectRetain();
      swift_retain(v55);
      swift_retain(v54);
      swift_retain(v56);
      v60 = (uint64_t)v9;
      v61 = sub_100005574(&qword_1004A15E0);
      v139 = (char *)v61;
      v62 = sub_100005574(&qword_1004A15F0);
      v63 = sub_100368FC0(&qword_1004A15D8, &qword_1004A15E0, (unint64_t *)&qword_10049B870, &qword_10049B878);
      v64 = sub_100369040();
      _ConditionalContent<>.init(storage:)(&v154, v61, v62, v63, v64);
      v65 = v169;
      v66 = v170;
      v67 = v165;
      v68 = v146;
      *v146 = v164;
      v68[1] = v67;
      v69 = v167;
      v70 = v168;
      v68[2] = v166;
      v68[3] = v69;
      v68[4] = v70;
      *((_BYTE *)v68 + 80) = v65;
      *((_BYTE *)v68 + 81) = v66;
      swift_storeEnumTagMultiPayload(v68, v144, 0);
      v71 = sub_100005574(&qword_1004A15D0);
      v72 = sub_100368F34();
      v73 = sub_1003690DC();
      v74 = (uint64_t)v147;
      _ConditionalContent<>.init(storage:)(v68, v71, v145, v72, v73);
      sub_100014A7C(v74, v60, &qword_1004A15C0);
      swift_storeEnumTagMultiPayload(v60, v151, 0);
      v75 = sub_100369100(&qword_1004A15B8, &qword_1004A15C0, (void (*)(void))sub_100368F34, (void (*)(void))sub_1003690DC);
      _ConditionalContent<>.init(storage:)(v60, v149, v139, v75, v63);
      sub_100008758(v74, &qword_1004A15C0);
      sub_10003B4D0(v57, v58, v59);
      swift_release(v141);
      swift_release(v142);
      swift_release(v143);
      return swift_bridgeObjectRelease();
  }
}

uint64_t sub_100367540@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t WitnessTable;
  void (*v47)(_QWORD, _QWORD);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char **v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(_QWORD, _QWORD);
  void (*v75)(char *, uint64_t);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void (*v104)(uint64_t, uint64_t);
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  void (*v120)(char *, uint64_t);
  void (*v121)(char *, uint64_t);
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char **v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  void (*v144)(_QWORD, _QWORD);
  void (*v145)(char *, uint64_t);
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char **v181;
  uint64_t v182;
  uint64_t v183;
  void (*v184)(_QWORD, _QWORD);
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  void (*v217)(_QWORD, _QWORD);
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  void (*v225)(_QWORD, _QWORD);
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  char **v248;
  uint64_t v249;
  char **v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;

  v193 = a4;
  LODWORD(v184) = a2;
  v179 = a1;
  v187 = a5;
  v6 = sub_100005600((uint64_t *)&unk_10049E490);
  v7 = type metadata accessor for ModifiedContent(255, a3, v6);
  v8 = sub_100005600(&qword_10049B888);
  v9 = type metadata accessor for ModifiedContent(255, v7, v8);
  v10 = sub_100005600(&qword_10049B878);
  v11 = type metadata accessor for ModifiedContent(255, v9, v10);
  v12 = type metadata accessor for _ConditionalContent(0, v11, v7);
  v172 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin();
  v173 = (uint64_t)&v167 - v13;
  sub_100005574(&qword_10049B890);
  __chkstk_darwin();
  v15 = (char *)&v167 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v194 = v9;
  v168 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin();
  v167 = (char *)&v167 - v16;
  v195 = v11;
  v169 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin();
  v170 = (char *)&v167 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v171 = (char *)&v167 - v18;
  v19 = type metadata accessor for ModifiedContent(255, v7, v10);
  v20 = sub_100005600(&qword_10049C878);
  v21 = *(_QWORD *)(type metadata accessor for ModifiedContent(0, v19, v20) - 8);
  __chkstk_darwin();
  v23 = (char *)&v167 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v176 = (uint64_t)&v167 - v24;
  v189 = v25;
  v175 = *(_QWORD *)(type metadata accessor for _ConditionalContent(0, v19, v25) - 8);
  __chkstk_darwin();
  v174 = (char *)&v167 - v26;
  v192 = v27;
  v183 = v12;
  v178 = *(_QWORD *)(type metadata accessor for _ConditionalContent(0, v27, v12) - 8);
  __chkstk_darwin();
  v177 = (char *)&v167 - v28;
  v190 = v7;
  v180 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin();
  v30 = (char *)&v167 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v32 = (char *)&v167 - v31;
  v33 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin();
  v35 = (char *)&v167 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v181 = (char **)((char *)&v167 - v37);
  v182 = v36;
  v188 = v19;
  v38 = type metadata accessor for _ConditionalContent(0, v36, v19);
  v185 = *(_QWORD *)(v38 - 8);
  v186 = v38;
  v39 = __chkstk_darwin();
  v191 = (uint64_t)&v167 - v41;
  switch((char)v184)
  {
    case 4:
    case 6:
      v42 = static Color.secondary.getter(v40);
      v43 = v193;
      View.foregroundColor(_:)(v42, a3, v193);
      swift_release(v42);
      v44 = sub_100368E44(&qword_10049D560, (uint64_t *)&unk_10049E490);
      v226 = v43;
      v227 = v44;
      v45 = v190;
      WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v190);
      v47 = (void (*)(_QWORD, _QWORD))v181;
      View.lineLimit(_:)(2, 0, v45, WitnessTable);
      (*(void (**)(char *, uint64_t))(v180 + 8))(v32, v45);
      v184 = (void (*)(_QWORD, _QWORD))sub_100368E44((unint64_t *)&qword_10049B870, &qword_10049B878);
      v224 = WitnessTable;
      v225 = v184;
      v48 = v188;
      v49 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v188);
      View.multilineTextAlignment(_:)(1, v48, v49);
      (*(void (**)(_QWORD, uint64_t))(v33 + 8))(v47, v48);
      v50 = sub_100368E44(&qword_10049C870, &qword_10049C878);
      v222 = v49;
      v223 = v50;
      v51 = v189;
      v52 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v189);
      v53 = v176;
      sub_10003B690((uint64_t)v23, v51, v176);
      v54 = *(char ***)(v21 + 8);
      ((void (*)(char *, uint64_t))v54)(v23, v51);
      v181 = v54;
      sub_100035E98(v53, v51, (uint64_t)v23);
      v55 = (uint64_t)v174;
      sub_100035F74((uint64_t)v23, v48, v51, v49, v52);
      ((void (*)(char *, uint64_t))v54)(v23, v51);
      v220 = v49;
      v221 = v52;
      v56 = v192;
      v57 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v192);
      v58 = sub_100368E44(&qword_10049B8D0, &qword_10049B888);
      v218 = WitnessTable;
      v219 = v58;
      v216 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v194);
      v217 = v184;
      v214 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v195);
      v215 = WitnessTable;
      v59 = v183;
      v60 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v183);
      v61 = (uint64_t)v177;
      sub_100035EB0(v55, v56, v59, v57, v60);
      (*(void (**)(uint64_t, uint64_t))(v175 + 8))(v55, v56);
      v212 = v57;
      v213 = v60;
      v62 = v51;
      v63 = v182;
      v64 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v182);
      v65 = v190;
      sub_100035EB0(v61, v63, v48, v64, v49);
      (*(void (**)(uint64_t, uint64_t))(v178 + 8))(v61, v63);
      ((void (*)(uint64_t, uint64_t))v181)(v176, v62);
      goto LABEL_8;
    case 5:
      v87 = static Color.secondary.getter(v40);
      v88 = v193;
      View.foregroundColor(_:)(v87, a3, v193);
      swift_release(v87);
      v89 = enum case for Text.Case.uppercase(_:);
      v90 = type metadata accessor for Text.Case(0);
      v91 = *(_QWORD *)(v90 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v91 + 104))(v15, v89, v90);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v15, 0, 1, v90);
      v92 = sub_100368E44(&qword_10049D560, (uint64_t *)&unk_10049E490);
      v242 = v88;
      v243 = v92;
      v93 = v190;
      v94 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v190);
      v95 = v167;
      View.textCase(_:)(v15, v93, v94);
      sub_100008758((uint64_t)v15, &qword_10049B890);
      (*(void (**)(char *, uint64_t))(v180 + 8))(v32, v93);
      v96 = sub_100368E44(&qword_10049B8D0, &qword_10049B888);
      v240 = v94;
      v241 = v96;
      v97 = v194;
      v98 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v194);
      v99 = (uint64_t)v170;
      View.lineLimit(_:)(1, 0, v97, v98);
      (*(void (**)(char *, uint64_t))(v168 + 8))(v95, v97);
      v100 = sub_100368E44((unint64_t *)&qword_10049B870, &qword_10049B878);
      v238 = v98;
      v239 = v100;
      v101 = v195;
      v102 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v195);
      v103 = (uint64_t)v171;
      sub_10003B690(v99, v101, (uint64_t)v171);
      v104 = *(void (**)(uint64_t, uint64_t))(v169 + 8);
      v104(v99, v101);
      v184 = v104;
      sub_100035E98(v103, v101, v99);
      v105 = v173;
      sub_100035EB0(v99, v101, v93, v102, v94);
      v104(v99, v101);
      v236 = v94;
      v237 = v100;
      v106 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v188);
      v107 = sub_100368E44(&qword_10049C870, &qword_10049C878);
      v234 = v106;
      v235 = v107;
      v108 = v189;
      v109 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v189);
      v232 = v106;
      v233 = v109;
      v110 = v192;
      v111 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v192);
      v230 = v102;
      v231 = v94;
      v62 = v108;
      v59 = v183;
      v112 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v183);
      v113 = (uint64_t)v177;
      sub_100035F74(v105, v110, v59, v111, v112);
      (*(void (**)(uint64_t, uint64_t))(v172 + 8))(v105, v59);
      v228 = v111;
      v229 = v112;
      v48 = v188;
      v63 = v182;
      v114 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v182);
      v65 = v190;
      sub_100035EB0(v113, v63, v48, v114, v106);
      (*(void (**)(uint64_t, uint64_t))(v178 + 8))(v113, v63);
      v85 = v171;
      v86 = v195;
      goto LABEL_6;
    case 7:
      v115 = static Color.white.getter(v39);
      v116 = v193;
      View.foregroundColor(_:)(v115, a3, v193);
      swift_release(v115);
      v117 = sub_100368E44(&qword_10049D560, (uint64_t *)&unk_10049E490);
      v258 = v116;
      v259 = v117;
      v118 = v190;
      v119 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v190);
      sub_10003B690((uint64_t)v30, v118, (uint64_t)v32);
      v120 = *(void (**)(char *, uint64_t))(v180 + 8);
      v120(v30, v118);
      v121 = v120;
      v184 = (void (*)(_QWORD, _QWORD))v120;
      sub_100035E98((uint64_t)v32, v118, (uint64_t)v30);
      v122 = sub_100368E44(&qword_10049B8D0, &qword_10049B888);
      v256 = v119;
      v257 = v122;
      v123 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v194);
      v124 = sub_100368E44((unint64_t *)&qword_10049B870, &qword_10049B878);
      v254 = v123;
      v255 = v124;
      v125 = v195;
      v126 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v195);
      sub_100035F74((uint64_t)v30, v125, v118, v126, v119);
      v121(v30, v118);
      v252 = v119;
      v253 = v124;
      v127 = v188;
      v128 = (char **)swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v188);
      v181 = v128;
      v129 = sub_100368E44(&qword_10049C870, &qword_10049C878);
      v250 = v128;
      v251 = v129;
      v130 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v189);
      v248 = v128;
      v249 = v130;
      v131 = v192;
      v132 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v192);
      v246 = v126;
      v48 = v127;
      v247 = v119;
      v59 = v183;
      v133 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v183);
      v134 = (uint64_t)v177;
      v135 = v173;
      sub_100035F74(v173, v131, v59, v132, v133);
      (*(void (**)(uint64_t, uint64_t))(v172 + 8))(v135, v59);
      v244 = v132;
      v245 = v133;
      v63 = v182;
      v136 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v182);
      v62 = v189;
      sub_100035EB0(v134, v63, v48, v136, (uint64_t)v181);
      (*(void (**)(uint64_t, uint64_t))(v178 + 8))(v134, v63);
      v85 = v32;
      v65 = v118;
      v86 = v118;
      goto LABEL_6;
    case 8:
      v137 = static Color.white.getter(v39);
      v138 = v193;
      View.foregroundColor(_:)(v137, a3, v193);
      swift_release(v137);
      v139 = sub_100368E44(&qword_10049D560, (uint64_t *)&unk_10049E490);
      v292 = v138;
      v293 = v139;
      v140 = v190;
      v141 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v190);
      View.lineLimit(_:)(1, 0, v140, v141);
      (*(void (**)(char *, uint64_t))(v180 + 8))(v32, v140);
      v142 = sub_100368E44((unint64_t *)&qword_10049B870, &qword_10049B878);
      v290 = v141;
      v291 = v142;
      v48 = v188;
      v143 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v188);
      v144 = (void (*)(_QWORD, _QWORD))v181;
      sub_10003B690((uint64_t)v35, v48, (uint64_t)v181);
      v145 = *(void (**)(char *, uint64_t))(v33 + 8);
      v145(v35, v48);
      sub_100035E98((uint64_t)v144, v48, (uint64_t)v35);
      v146 = sub_100368E44(&qword_10049C870, &qword_10049C878);
      v288 = v143;
      v289 = v146;
      v147 = v189;
      v148 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v189);
      v286 = v143;
      v287 = v148;
      v149 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v192);
      v150 = sub_100368E44(&qword_10049B8D0, &qword_10049B888);
      v284 = v141;
      v285 = v150;
      v282 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v194);
      v283 = v142;
      v280 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v195);
      v281 = v141;
      v151 = v183;
      v152 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v183);
      v278 = v149;
      v279 = v152;
      v62 = v147;
      v63 = v182;
      v153 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v182);
      sub_100035F74((uint64_t)v35, v63, v48, v153, v143);
      v154 = v35;
      v59 = v151;
      v65 = v190;
      v145(v154, v48);
      v145((char *)v181, v48);
      goto LABEL_8;
    default:
      v66 = static Color.primary.getter(v40);
      v67 = v193;
      View.foregroundColor(_:)(v66, a3, v193);
      swift_release(v66);
      v68 = sub_100368E44(&qword_10049D560, (uint64_t *)&unk_10049E490);
      v210 = v67;
      v211 = v68;
      v69 = v190;
      v70 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v190);
      View.lineLimit(_:)(1, 0, v69, v70);
      (*(void (**)(char *, uint64_t))(v180 + 8))(v32, v69);
      v71 = sub_100368E44((unint64_t *)&qword_10049B870, &qword_10049B878);
      v208 = v70;
      v209 = v71;
      v72 = v188;
      v73 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v188);
      v74 = (void (*)(_QWORD, _QWORD))v181;
      sub_10003B690((uint64_t)v35, v72, (uint64_t)v181);
      v75 = *(void (**)(char *, uint64_t))(v33 + 8);
      v75(v35, v72);
      v184 = (void (*)(_QWORD, _QWORD))v75;
      sub_100035E98((uint64_t)v74, v72, (uint64_t)v35);
      v76 = sub_100368E44(&qword_10049C870, &qword_10049C878);
      v206 = v73;
      v207 = v76;
      v62 = v189;
      v77 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v189);
      v78 = (uint64_t)v174;
      sub_100035EB0((uint64_t)v35, v72, v62, v73, v77);
      v75(v35, v72);
      v204 = v73;
      v205 = v77;
      v79 = v192;
      v80 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v192);
      v81 = sub_100368E44(&qword_10049B8D0, &qword_10049B888);
      v202 = v70;
      v203 = v81;
      v200 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v194);
      v201 = v71;
      v198 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v195);
      v199 = v70;
      v59 = v183;
      v82 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v183);
      v83 = (uint64_t)v177;
      sub_100035EB0(v78, v79, v59, v80, v82);
      (*(void (**)(uint64_t, uint64_t))(v175 + 8))(v78, v79);
      v196 = v80;
      v197 = v82;
      v65 = v190;
      v48 = v72;
      v63 = v182;
      v84 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v182);
      sub_100035EB0(v83, v63, v72, v84, v73);
      (*(void (**)(uint64_t, uint64_t))(v178 + 8))(v83, v63);
      v85 = (char *)v181;
      v86 = v72;
LABEL_6:
      v184(v85, v86);
LABEL_8:
      v155 = sub_100368E44(&qword_10049D560, (uint64_t *)&unk_10049E490);
      v276 = v193;
      v277 = v155;
      v156 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v65);
      v157 = sub_100368E44((unint64_t *)&qword_10049B870, &qword_10049B878);
      v274 = v156;
      v275 = v157;
      v158 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v48);
      v159 = sub_100368E44(&qword_10049C870, &qword_10049C878);
      v272 = v158;
      v273 = v159;
      v160 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v62);
      v270 = v158;
      v271 = v160;
      v161 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v192);
      v162 = sub_100368E44(&qword_10049B8D0, &qword_10049B888);
      v268 = v156;
      v269 = v162;
      v266 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v194);
      v267 = v157;
      v264 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v195);
      v265 = v156;
      v163 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v59);
      v262 = v161;
      v263 = v163;
      v260 = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v63);
      v261 = v158;
      v164 = v186;
      swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v186);
      v165 = v191;
      sub_100035E98(v191, v164, v187);
      return (*(uint64_t (**)(uint64_t, uint64_t))(v185 + 8))(v165, v164);
  }
}

uint64_t Text.with(style:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;

  sub_100368800(a2, a3, a4 & 1, a5, a1);
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v15 = v14 & 1;
  sub_10003B4C0(v8, v10, v14 & 1);
  swift_bridgeObjectRetain();
  sub_10036654C(v9, v11, v15, v13, a1, a6);
  sub_10003B4D0(v9, v11, v15);
  swift_bridgeObjectRelease();
  sub_10003B4D0(v9, v11, v15);
  return swift_bridgeObjectRelease();
}

void sub_100368800(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  __asm { BR              X10 }
}

uint64_t sub_10036884C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  v4 = static Font.body.getter();
  v5 = Text.font(_:)(v4, v2, v1, v3 & 1, v0);
  swift_release(v4);
  return v5;
}

unint64_t sub_100368944()
{
  unint64_t result;

  result = qword_1004A15A0;
  if (!qword_1004A15A0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Text.TitleKind, &type metadata for Text.TitleKind);
    atomic_store(result, (unint64_t *)&qword_1004A15A0);
  }
  return result;
}

uint64_t _s5StyleOwet(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  unsigned int v7;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
  {
    v6 = *a1;
    if (v6 >= 3)
      v7 = v6 - 2;
    else
      v7 = 0;
    if (v7 >= 7)
      return v7 - 6;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 8;
    if (a2 + 8 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1003689D8 + 4 * byte_1003A076D[v4]))();
  }
}

uint64_t _s5StyleOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 8;
  if (a3 + 8 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xF8)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_100368A84 + 4 * byte_1003A0777[v5]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_100368AB8 + 4 * byte_1003A0772[v5]))();
}

uint64_t sub_100368AB8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100368AC0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100368AC8);
  return result;
}

uint64_t sub_100368AD4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100368ADCLL);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_100368AE0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100368AE8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100368AF4(unsigned __int8 *a1)
{
  unsigned int v1;

  v1 = *a1;
  if (v1 >= 3)
    return v1 - 2;
  else
    return 0;
}

_BYTE *sub_100368B08(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 2;
  return result;
}

ValueMetadata *type metadata accessor for Text.Style()
{
  return &type metadata for Text.Style;
}

uint64_t _s9TitleKindOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100368B74 + 4 * byte_1003A0781[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100368BA8 + 4 * byte_1003A077C[v4]))();
}

uint64_t sub_100368BA8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100368BB0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100368BB8);
  return result;
}

uint64_t sub_100368BC4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100368BCCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100368BD0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100368BD8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Text.TitleKind()
{
  return &type metadata for Text.TitleKind;
}

uint64_t sub_100368BF4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v1 = *a1;
  v2 = sub_100005600((uint64_t *)&unk_10049E490);
  v3 = type metadata accessor for ModifiedContent(255, v1, v2);
  v4 = sub_100005600(&qword_10049B878);
  v5 = type metadata accessor for ModifiedContent(255, v3, v4);
  v6 = sub_100005600(&qword_10049C878);
  v7 = type metadata accessor for ModifiedContent(255, v5, v6);
  v8 = type metadata accessor for _ConditionalContent(255, v5, v7);
  v9 = sub_100005600(&qword_10049B888);
  v10 = type metadata accessor for ModifiedContent(255, v3, v9);
  v11 = type metadata accessor for ModifiedContent(255, v10, v4);
  v12 = type metadata accessor for _ConditionalContent(255, v11, v3);
  v13 = type metadata accessor for _ConditionalContent(255, v8, v12);
  v15 = type metadata accessor for _ConditionalContent(255, v13, v5);
  sub_100368E44(&qword_10049D560, (uint64_t *)&unk_10049E490);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v3);
  sub_100368E44((unint64_t *)&qword_10049B870, &qword_10049B878);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v5);
  sub_100368E44(&qword_10049C870, &qword_10049C878);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v7);
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v8);
  sub_100368E44(&qword_10049B8D0, &qword_10049B888);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v10);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v11);
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v12);
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v13);
  return swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v15);
}

uint64_t sub_100368E44(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_100005600(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>, v4);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100368E88()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004A15A8;
  if (!qword_1004A15A8)
  {
    v1 = sub_100005600(&qword_1004A15B0);
    sub_100369100(&qword_1004A15B8, &qword_1004A15C0, (void (*)(void))sub_100368F34, (void (*)(void))sub_1003690DC);
    sub_100368FC0(&qword_1004A15D8, &qword_1004A15E0, (unint64_t *)&qword_10049B870, &qword_10049B878);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1004A15A8);
  }
  return result;
}

unint64_t sub_100368F34()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004A15C8;
  if (!qword_1004A15C8)
  {
    v1 = sub_100005600(&qword_1004A15D0);
    sub_100368FC0(&qword_1004A15D8, &qword_1004A15E0, (unint64_t *)&qword_10049B870, &qword_10049B878);
    sub_100369040();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1004A15C8);
  }
  return result;
}

uint64_t sub_100368FC0(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v8 = sub_100005600(a2);
    sub_100304584();
    sub_100368E44(a3, a4);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100369040()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004A15E8;
  if (!qword_1004A15E8)
  {
    v1 = sub_100005600(&qword_1004A15F0);
    sub_100368FC0(&qword_1004A15D8, &qword_1004A15E0, (unint64_t *)&qword_10049B870, &qword_10049B878);
    sub_100368E44(&qword_10049C870, &qword_10049C878);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1004A15E8);
  }
  return result;
}

uint64_t sub_1003690DC()
{
  return sub_100369100(&qword_1004A15F8, &qword_1004A1600, (void (*)(void))sub_100369170, (void (*)(void))sub_100304584);
}

uint64_t sub_100369100(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v8 = sub_100005600(a2);
    a3();
    a4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100369170()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1004A1608;
  if (!qword_1004A1608)
  {
    v1 = sub_100005600(&qword_1004A1610);
    sub_100368FC0(&qword_1004A1618, &qword_1004A1620, &qword_10049B8D0, &qword_10049B888);
    sub_100368E44((unint64_t *)&qword_10049B870, &qword_10049B878);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1004A1608);
  }
  return result;
}

uint64_t sub_100369224(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100005574(&qword_1004A1610);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t VerticalToggleSlider.packageDefinition.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageDefinition);
  swift_beginAccess(v3, v15, 0, 0);
  v4 = *v3;
  v5 = v3[1];
  v6 = (void *)v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  v10 = v3[6];
  v11 = v3[7];
  v14 = v3[9];
  v13 = v3[8];
  result = sub_100295140(*v3, v5, v6);
  *a1 = v4;
  a1[1] = v5;
  a1[2] = (uint64_t)v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;
  a1[7] = v11;
  a1[8] = v13;
  a1[9] = v14;
  return result;
}

_QWORD *VerticalToggleSlider.packageDefinition.setter(_QWORD *a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];
  _QWORD v16[10];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageDefinition);
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageDefinition, v15, 1, 0);
  sub_1002950F8((uint64_t)v3, (uint64_t)v16);
  v4 = v3[1];
  v5 = (void *)v3[2];
  v6 = v3[3];
  v7 = v3[4];
  v8 = v3[5];
  v9 = v3[6];
  v13 = v3[7];
  v14 = *v3;
  v10 = v3[8];
  v11 = v3[9];
  sub_1002950F8((uint64_t)a1, (uint64_t)v3);
  sub_1002951B0(v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100295140);
  sub_1002951B0(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100295140);
  sub_100295178(v14, v4, v5, v6, v7, v8, v9, v13, v10, v11);
  sub_10036CEF4((uint64_t)v16);
  sub_1002951B0(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100295178);
  return sub_1002951B0(v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100295178);
}

void (*VerticalToggleSlider.packageDefinition.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = malloc(0x118uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageDefinition;
  v3[33] = v1;
  v3[34] = v4;
  v5 = (uint64_t *)(v1 + v4);
  swift_beginAccess(v1 + v4, v3 + 30, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  v8 = (void *)v5[2];
  v9 = v5[3];
  v10 = v5[4];
  v11 = v5[5];
  v12 = v5[6];
  v13 = v5[7];
  v14 = v5[8];
  v15 = v5[9];
  v3[20] = *v5;
  v3[21] = v7;
  v3 += 20;
  v3[2] = v8;
  v3[3] = v9;
  v3[4] = v10;
  v3[5] = v11;
  v3[6] = v12;
  v3[7] = v13;
  v3[8] = v14;
  v3[9] = v15;
  sub_100295140(v6, v7, v8);
  return sub_1003694D4;
}

void sub_1003694D4(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 160);
  v5 = *(_QWORD *)(*a1 + 168);
  v4 = *(void **)(*a1 + 176);
  v7 = *(_QWORD *)(*a1 + 184);
  v6 = *(_QWORD *)(*a1 + 192);
  v9 = *(_QWORD *)(*a1 + 200);
  v8 = *(_QWORD *)(*a1 + 208);
  v10 = *(_QWORD *)(*a1 + 216);
  v34 = *(_QWORD *)(*a1 + 232);
  v35 = *(_QWORD *)(*a1 + 224);
  v12 = *(_QWORD *)(*a1 + 264);
  v11 = *(_QWORD *)(*a1 + 272);
  v13 = (uint64_t *)(v12 + v11);
  if ((a2 & 1) != 0)
  {
    sub_1002950F8(v12 + v11, v2);
    v30 = v13[1];
    v32 = *v13;
    v26 = v13[3];
    v28 = (void *)v13[2];
    v22 = v13[5];
    v24 = v13[4];
    v18 = v13[7];
    v20 = v13[6];
    v14 = v13[9];
    v16 = v13[8];
    *v13 = v3;
    v13[1] = v5;
    v13[2] = (uint64_t)v4;
    v13[3] = v7;
    v13[4] = v6;
    v13[5] = v9;
    v13[6] = v8;
    v13[7] = v10;
    v13[8] = v35;
    v13[9] = v34;
    sub_100295140(v3, v5, v4);
    sub_100295140(v3, v5, v4);
    sub_1002951B0((_QWORD *)v2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100295140);
    sub_100295178(v32, v30, v28, v26, v24, v22, v20, v18, v16, v14);
    sub_10036CEF4(v2);
    sub_100295178(v3, v5, v4, v7, v6, v9, v8, v10, v35, v34);
    sub_1002951B0((_QWORD *)v2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100295178);
    sub_100295178(*(_QWORD *)(v2 + 160), *(_QWORD *)(v2 + 168), *(void **)(v2 + 176), *(_QWORD *)(v2 + 184), *(_QWORD *)(v2 + 192), *(_QWORD *)(v2 + 200), *(_QWORD *)(v2 + 208), *(_QWORD *)(v2 + 216), *(_QWORD *)(v2 + 224), *(_QWORD *)(v2 + 232));
  }
  else
  {
    sub_1002950F8(v12 + v11, v2 + 80);
    v31 = v13[1];
    v33 = *v13;
    v27 = v13[3];
    v29 = (void *)v13[2];
    v23 = v13[5];
    v25 = v13[4];
    v19 = v13[7];
    v21 = v13[6];
    v15 = v13[9];
    v17 = v13[8];
    *v13 = v3;
    v13[1] = v5;
    v13[2] = (uint64_t)v4;
    v13[3] = v7;
    v13[4] = v6;
    v13[5] = v9;
    v13[6] = v8;
    v13[7] = v10;
    v13[8] = v35;
    v13[9] = v34;
    sub_1002951B0((_QWORD *)(v2 + 80), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100295140);
    sub_100295140(v3, v5, v4);
    sub_100295178(v33, v31, v29, v27, v25, v23, v21, v19, v17, v15);
    sub_10036CEF4(v2 + 80);
    sub_100295178(v3, v5, v4, v7, v6, v9, v8, v10, v35, v34);
    sub_1002951B0((_QWORD *)(v2 + 80), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100295178);
  }
  free((void *)v2);
}

BOOL VerticalToggleSlider.isOn.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode) != 2;
}

void VerticalToggleSlider.isOn.setter(char a1)
{
  uint64_t v1;
  char v2;
  unsigned __int8 v3;

  if ((a1 & 1) != 0)
    v2 = 0;
  else
    v2 = 2;
  v3 = *(_BYTE *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode) = v2;
  sub_10036DCEC(v3);
}

void (*VerticalToggleSlider.isOn.modify(uint64_t a1))(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode;
  *(_QWORD *)a1 = v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(v1 + v2) != 2;
  return sub_100369834;
}

void sub_100369834(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  unsigned __int8 v4;

  v2 = *a1;
  v1 = a1[1];
  if (*((_BYTE *)a1 + 16))
    v3 = 0;
  else
    v3 = 2;
  v4 = *(_BYTE *)(v2 + v1);
  *(_BYTE *)(v2 + v1) = v3;
  sub_10036DCEC(v4);
}

void VerticalToggleSlider.value.getter()
{
  uint64_t v0;

  if (*(float *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__minValue) > *(float *)(v0
                                                                                                 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__maxValue))
    __break(1u);
}

void VerticalToggleSlider.value.setter(float a1)
{
  uint64_t v1;
  float v2;
  float v3;

  v2 = *(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__minValue);
  v3 = *(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__maxValue);
  if (v2 > v3)
  {
    __break(1u);
  }
  else
  {
    if (v2 > a1)
      a1 = *(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__minValue);
    if (v3 < a1)
      a1 = *(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__maxValue);
    sub_10036B000(*(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValueRange)+ (float)((float)((float)(a1 - v2) / (float)(v3 - v2))* (float)(*(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValueRange + 4)- *(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValueRange))));
  }
}

void (*VerticalToggleSlider.value.modify(void (**a1)(float **a1, char a2)))(float **a1, char a2)
{
  uint64_t v1;
  void (*result)(float **, char);
  uint64_t v4;
  float v5;
  uint64_t v6;
  float v7;
  uint64_t v8;
  float *v9;
  float v10;
  float v11;

  result = (void (*)(float **, char))malloc(0x28uLL);
  *a1 = result;
  v4 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__minValue;
  *(_QWORD *)result = v1;
  *((_QWORD *)result + 1) = v4;
  v5 = *(float *)(v1 + v4);
  v6 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__maxValue;
  *((_QWORD *)result + 2) = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__maxValue;
  v7 = *(float *)(v1 + v6);
  if (v5 > v7)
  {
    __break(1u);
  }
  else
  {
    v8 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValueRange;
    *((_QWORD *)result + 3) = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValueRange;
    v9 = (float *)(v1 + v8);
    v10 = v9[1];
    v11 = *(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValue);
    if (*v9 > v11)
      v11 = *v9;
    if (v10 < v11)
      v11 = v9[1];
    *((float *)result + 8) = v5 + (float)((float)(v7 - v5) * (float)((float)(v11 - *v9) / (float)(v10 - *v9)));
    return sub_1003699E4;
  }
  return result;
}

void sub_1003699E4(float **a1, char a2)
{
  float *v2;
  uint64_t v3;
  float v4;
  float v5;
  float v6;

  v2 = *a1;
  v3 = *(_QWORD *)*a1;
  v4 = *(float *)(v3 + *((_QWORD *)*a1 + 1));
  v5 = *(float *)(v3 + *((_QWORD *)*a1 + 2));
  if ((a2 & 1) != 0)
  {
    if (v4 <= v5)
      goto LABEL_5;
    __break(1u);
  }
  if (v4 > v5)
  {
    __break(1u);
    return;
  }
LABEL_5:
  v6 = v2[8];
  if (v4 > v6)
    v6 = v4;
  if (v5 < v6)
    v6 = v5;
  sub_10036B000(*(float *)(v3 + *((_QWORD *)v2 + 3))+ (float)((float)(*(float *)(v3 + *((_QWORD *)v2 + 3) + 4) - *(float *)(v3 + *((_QWORD *)v2 + 3)))* (float)((float)(v6 - v4) / (float)(v5 - v4))));
  free(v2);
}

float VerticalToggleSlider.minValue.getter()
{
  uint64_t v0;

  return *(float *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__minValue);
}

void VerticalToggleSlider.minValue.setter(float a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  Swift::String v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  __n128 v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;

  v3 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__maxValue;
  if (*(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__maxValue) <= a1)
  {
    v17 = 0;
    v18 = 0xE000000000000000;
    _StringGuts.grow(_:)(145);
    v4._object = (void *)0x80000001003BBF10;
    v4._countAndFlagsBits = 0xD000000000000042;
    String.append(_:)(v4);
    Float.write<A>(to:)(&v17, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, a1);
    v5._countAndFlagsBits = 3026478;
    v5._object = (void *)0xE300000000000000;
    String.append(_:)(v5);
    Float.write<A>(to:)(&v17, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, *(float *)(v1 + v3));
    v6._countAndFlagsBits = 0xD000000000000048;
    v6._object = (void *)0x80000001003BBF60;
    String.append(_:)(v6);
    v9 = v17;
    v8 = (char *)v18;
    if (qword_100498908 != -1)
      swift_once(&qword_100498908, sub_100246198);
    v10 = type metadata accessor for Logger(0, v7);
    sub_1000086B4(v10, (uint64_t)qword_1004A31A0);
    v11 = swift_bridgeObjectRetain();
    v12 = Logger.logObject.getter(v11);
    v14 = static os_log_type_t.fault.getter(v13);
    if (os_log_type_enabled(v12, v14))
    {
      v15 = swift_slowAlloc(12, -1);
      v16 = swift_slowAlloc(32, -1);
      v17 = (char *)v16;
      *(_DWORD *)v15 = 136446210;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v15 + 4) = sub_100249A1C(v9, v8, (uint64_t *)&v17);
      swift_bridgeObjectRelease_n(v8, 3);
      _os_log_impl((void *)&_mh_execute_header, v12, v14, "%{public}s", (uint8_t *)v15, 0xCu);
      swift_arrayDestroy(v16, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v16, -1, -1);
      swift_slowDealloc(v15, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v8, 2);
    }
  }
  else
  {
    *(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__minValue) = a1;
  }
}

void (*VerticalToggleSlider.minValue.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__minValue);
  return sub_100369CE4;
}

void sub_100369CE4(uint64_t a1)
{
  VerticalToggleSlider.minValue.setter(*(float *)(a1 + 8));
}

float VerticalToggleSlider.maxValue.getter()
{
  uint64_t v0;

  return *(float *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__maxValue);
}

void VerticalToggleSlider.maxValue.setter(float a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  Swift::String v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  __n128 v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;

  v3 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__minValue;
  if (*(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__minValue) >= a1)
  {
    v17 = 0;
    v18 = 0xE000000000000000;
    _StringGuts.grow(_:)(145);
    v4._object = (void *)0x80000001003BBF10;
    v4._countAndFlagsBits = 0xD000000000000042;
    String.append(_:)(v4);
    Float.write<A>(to:)(&v17, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, *(float *)(v1 + v3));
    v5._countAndFlagsBits = 3026478;
    v5._object = (void *)0xE300000000000000;
    String.append(_:)(v5);
    Float.write<A>(to:)(&v17, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, a1);
    v6._countAndFlagsBits = 0xD000000000000048;
    v6._object = (void *)0x80000001003BBF60;
    String.append(_:)(v6);
    v9 = v17;
    v8 = (char *)v18;
    if (qword_100498908 != -1)
      swift_once(&qword_100498908, sub_100246198);
    v10 = type metadata accessor for Logger(0, v7);
    sub_1000086B4(v10, (uint64_t)qword_1004A31A0);
    v11 = swift_bridgeObjectRetain();
    v12 = Logger.logObject.getter(v11);
    v14 = static os_log_type_t.fault.getter(v13);
    if (os_log_type_enabled(v12, v14))
    {
      v15 = swift_slowAlloc(12, -1);
      v16 = swift_slowAlloc(32, -1);
      v17 = (char *)v16;
      *(_DWORD *)v15 = 136446210;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v15 + 4) = sub_100249A1C(v9, v8, (uint64_t *)&v17);
      swift_bridgeObjectRelease_n(v8, 3);
      _os_log_impl((void *)&_mh_execute_header, v12, v14, "%{public}s", (uint8_t *)v15, 0xCu);
      swift_arrayDestroy(v16, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v16, -1, -1);
      swift_slowDealloc(v15, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v8, 2);
    }
  }
  else
  {
    *(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__maxValue) = a1;
  }
}

void (*VerticalToggleSlider.maxValue.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__maxValue);
  return sub_100369F84;
}

void sub_100369F84(uint64_t a1)
{
  VerticalToggleSlider.maxValue.setter(*(float *)(a1 + 8));
}

void VerticalToggleSlider.valueRange.getter()
{
  uint64_t v0;

  if (*(float *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__minValue) > *(float *)(v0
                                                                                                 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__maxValue))
    __break(1u);
}

void VerticalToggleSlider.valueRange.setter(float a1, float a2)
{
  uint64_t v2;
  Swift::String v5;
  Swift::String v6;
  Swift::String v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  __n128 v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;

  if (a1 >= a2)
  {
    v18 = 0;
    v19 = 0xE000000000000000;
    _StringGuts.grow(_:)(164);
    v5._object = (void *)0x80000001003BBF10;
    v5._countAndFlagsBits = 0xD000000000000042;
    String.append(_:)(v5);
    Float.write<A>(to:)(&v18, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, a1);
    v6._countAndFlagsBits = 3026478;
    v6._object = (void *)0xE300000000000000;
    String.append(_:)(v6);
    Float.write<A>(to:)(&v18, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, a2);
    v7._countAndFlagsBits = 0xD00000000000005BLL;
    v7._object = (void *)0x80000001003BBFB0;
    String.append(_:)(v7);
    v10 = v18;
    v9 = (char *)v19;
    if (qword_100498908 != -1)
      swift_once(&qword_100498908, sub_100246198);
    v11 = type metadata accessor for Logger(0, v8);
    sub_1000086B4(v11, (uint64_t)qword_1004A31A0);
    v12 = swift_bridgeObjectRetain();
    v13 = Logger.logObject.getter(v12);
    v15 = static os_log_type_t.fault.getter(v14);
    if (os_log_type_enabled(v13, v15))
    {
      v16 = swift_slowAlloc(12, -1);
      v17 = swift_slowAlloc(32, -1);
      v18 = (char *)v17;
      *(_DWORD *)v16 = 136446210;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v16 + 4) = sub_100249A1C(v10, v9, (uint64_t *)&v18);
      swift_bridgeObjectRelease_n(v9, 3);
      _os_log_impl((void *)&_mh_execute_header, v13, v15, "%{public}s", (uint8_t *)v16, 0xCu);
      swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v17, -1, -1);
      swift_slowDealloc(v16, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v9, 2);
    }
  }
  else
  {
    *(float *)(v2 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__minValue) = a1;
    *(float *)(v2 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__maxValue) = a2;
  }
}

void (*VerticalToggleSlider.valueRange.modify(void (*result)(uint64_t a1)))(uint64_t a1)
{
  uint64_t v1;
  float v2;
  float v3;

  *(_QWORD *)result = v1;
  v2 = *(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__minValue);
  v3 = *(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__maxValue);
  if (v2 > v3)
  {
    __break(1u);
  }
  else
  {
    *((float *)result + 2) = v2;
    *((float *)result + 3) = v3;
    return sub_10036A258;
  }
  return result;
}

void sub_10036A258(uint64_t a1)
{
  VerticalToggleSlider.valueRange.setter(*(float *)(a1 + 8), *(float *)(a1 + 12));
}

float VerticalToggleSlider.minLevelOffsetRatio.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_minLevelOffsetRatio;
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_minLevelOffsetRatio, v3, 0, 0);
  return *(float *)v1;
}

void VerticalToggleSlider.minLevelOffsetRatio.setter(float a1)
{
  char *v1;
  float *v3;
  float v4;
  id v5;
  int v6;
  id v7;
  void *v8;
  double v9;
  id v10;
  _BYTE v11[24];

  v3 = (float *)&v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_minLevelOffsetRatio];
  swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_minLevelOffsetRatio], v11, 1, 0);
  v4 = *v3;
  *v3 = a1;
  if (v4 != a1)
  {
    sub_10036BB94(0x100000000);
    v5 = sub_10036B5AC();
    v6 = v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode];
    v7 = objc_msgSend(v1, "traitCollection");
    v8 = v7;
    if (v6 == 2)
    {

      v9 = 0.0;
    }
    else if ((v6 & 1) != 0)
    {

      v9 = 1.0;
    }
    else
    {
      v10 = objc_msgSend(v7, "accessibilityContrast");

      v9 = 0.5;
      if (v10 == (id)1)
        v9 = 1.0;
    }
    objc_msgSend(v5, "setAlpha:", v9);

  }
}

void (*VerticalToggleSlider.minLevelOffsetRatio.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _DWORD *v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_minLevelOffsetRatio;
  v3[3] = v1;
  v3[4] = v4;
  v5 = (_DWORD *)(v1 + v4);
  swift_beginAccess(v1 + v4, v3, 1, 0);
  *((_DWORD *)v3 + 10) = *v5;
  return sub_10036A434;
}

void sub_10036A434(uint64_t a1, char a2)
{
  _QWORD *v2;
  float v3;
  uint64_t v4;
  uint64_t v5;
  float v6;
  unsigned __int8 *v7;
  id v8;
  int v9;
  id v10;
  void *v11;
  double v12;
  id v13;

  v2 = *(_QWORD **)a1;
  v3 = *(float *)(*(_QWORD *)a1 + 40);
  if ((a2 & 1) != 0)
  {
    VerticalToggleSlider.minLevelOffsetRatio.setter(v3);
  }
  else
  {
    v5 = v2[3];
    v4 = v2[4];
    v6 = *(float *)(v5 + v4);
    *(float *)(v5 + v4) = v3;
    if (v3 != v6)
    {
      v7 = (unsigned __int8 *)v2[3];
      sub_10036BB94(0x100000000);
      v8 = sub_10036B5AC();
      v9 = v7[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode];
      v10 = objc_msgSend(v7, "traitCollection");
      v11 = v10;
      if (v9 == 2)
      {

        v12 = 0.0;
      }
      else if ((v9 & 1) != 0)
      {

        v12 = 1.0;
      }
      else
      {
        v13 = objc_msgSend(v10, "accessibilityContrast");

        v12 = 0.5;
        if (v13 == (id)1)
          v12 = 1.0;
      }
      objc_msgSend(v8, "setAlpha:", v12);

    }
  }
  free(v2);
}

uint64_t VerticalToggleSlider.interactionScaleFactor.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_interactionScaleFactor;
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_interactionScaleFactor, v3, 0, 0);
  return *(_QWORD *)v1;
}

void VerticalToggleSlider.interactionScaleFactor.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  _BYTE v6[24];

  v5 = v2 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_interactionScaleFactor;
  swift_beginAccess(v5, v6, 1, 0);
  *(_QWORD *)v5 = a1;
  *(_BYTE *)(v5 + 8) = a2 & 1;
}

uint64_t (*VerticalToggleSlider.interactionScaleFactor.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_interactionScaleFactor, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t VerticalToggleSlider.isTapToToggleEnabled.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_isTapToToggleEnabled);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_isTapToToggleEnabled, v3, 0, 0);
  return *v1;
}

void VerticalToggleSlider.isTapToToggleEnabled.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  _BYTE v4[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_isTapToToggleEnabled);
  swift_beginAccess(v3, v4, 1, 0);
  *v3 = a1;
}

uint64_t (*VerticalToggleSlider.isTapToToggleEnabled.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_isTapToToggleEnabled, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t VerticalToggleSlider.isVisuallyDisabled.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_isVisuallyDisabled);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_isVisuallyDisabled, v3, 0, 0);
  return *v1;
}

void VerticalToggleSlider.isVisuallyDisabled.setter(char a1)
{
  char *v1;
  int v3;
  char *v4;
  double v5;
  int v6;
  unsigned int v7;
  void *v8;
  double v9;
  id v10;
  void *v11;
  double v12;
  char v13[24];

  v3 = a1 & 1;
  v4 = &v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_isVisuallyDisabled];
  *(_QWORD *)&v5 = swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_isVisuallyDisabled], v13, 1, 0).n128_u64[0];
  v6 = *v4;
  *v4 = a1;
  if (v6 != v3)
  {
    if ((a1 & 1) != 0)
      v7 = 1;
    else
      v7 = objc_msgSend(v1, "isEnabled", v5) ^ 1;
    v8 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageView];
    if (v8)
    {
      v9 = 0.4;
      if (!v7)
        v9 = 1.0;
      objc_msgSend(v8, "setAlpha:", v9);
    }
    v10 = sub_10036B484();
    v11 = v10;
    v12 = 1.0;
    if (v7)
      v12 = 0.5;
    objc_msgSend(v10, "setAlpha:", v12);

  }
}

void (*VerticalToggleSlider.isVisuallyDisabled.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _BYTE *v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_isVisuallyDisabled;
  v3[3] = v1;
  v3[4] = v4;
  v5 = (_BYTE *)(v1 + v4);
  swift_beginAccess(v1 + v4, v3, 1, 0);
  *((_BYTE *)v3 + 40) = *v5;
  return sub_10036A87C;
}

void sub_10036A87C(uint64_t *a1, char a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  unsigned int v7;
  void *v8;
  double v9;
  id v10;
  void *v11;
  double v12;

  v2 = *a1;
  v3 = *(unsigned __int8 *)(*a1 + 40);
  if ((a2 & 1) != 0)
  {
    VerticalToggleSlider.isVisuallyDisabled.setter(v3);
  }
  else
  {
    v5 = *(_QWORD *)(v2 + 24);
    v4 = *(_QWORD *)(v2 + 32);
    v6 = *(unsigned __int8 *)(v5 + v4);
    *(_BYTE *)(v5 + v4) = v3;
    if (v3 != v6)
    {
      if ((v3 & 1) != 0)
        v7 = 1;
      else
        v7 = objc_msgSend(*(id *)(v2 + 24), "isEnabled") ^ 1;
      v8 = *(void **)(*(_QWORD *)(v2 + 24) + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageView);
      if (v8)
      {
        v9 = 0.4;
        if (!v7)
          v9 = 1.0;
        objc_msgSend(v8, "setAlpha:", v9);
      }
      v10 = sub_10036B484();
      v11 = v10;
      v12 = 1.0;
      if (v7)
        v12 = 0.5;
      objc_msgSend(v10, "setAlpha:", v12);

    }
  }
  free((void *)v2);
}

uint64_t VerticalToggleSlider.isContinuous.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_isContinuous);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_isContinuous, v3, 0, 0);
  return *v1;
}

void VerticalToggleSlider.isContinuous.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  _BYTE v4[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_isContinuous);
  swift_beginAccess(v3, v4, 1, 0);
  *v3 = a1;
}

uint64_t (*VerticalToggleSlider.isContinuous.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_isContinuous, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t VerticalToggleSlider.accessibilityAutomaticallyDisablesOnMaxValue.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_automaticallyDisablesOnMaxValue);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_automaticallyDisablesOnMaxValue, v3, 0, 0);
  return *v1;
}

void VerticalToggleSlider.automaticallyDisablesOnMaxValue.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  _BYTE v4[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_automaticallyDisablesOnMaxValue);
  swift_beginAccess(v3, v4, 1, 0);
  *v3 = a1;
}

uint64_t (*VerticalToggleSlider.automaticallyDisablesOnMaxValue.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_automaticallyDisablesOnMaxValue, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t VerticalToggleSlider.longPressMode.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_longPressMode);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_longPressMode, v3, 0, 0);
  return *v1;
}

void VerticalToggleSlider.longPressMode.setter(unsigned __int8 a1)
{
  uint64_t v1;
  unsigned __int8 *v3;
  int v4;
  _BYTE v5[24];

  v3 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_longPressMode);
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_longPressMode, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;
  if (v4 != a1)
    sub_10036C7AC();
}

void (*VerticalToggleSlider.longPressMode.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _BYTE *v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_longPressMode;
  v3[3] = v1;
  v3[4] = v4;
  v5 = (_BYTE *)(v1 + v4);
  swift_beginAccess(v1 + v4, v3, 1, 0);
  *((_BYTE *)v3 + 40) = *v5;
  return sub_10036ABF8;
}

void sub_10036ABF8(uint64_t a1)
{
  void *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;

  v1 = *(void **)a1;
  v2 = *(unsigned __int8 *)(*(_QWORD *)a1 + 40);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v5 = *(unsigned __int8 *)(v4 + v3);
  *(_BYTE *)(v4 + v3) = v2;
  if (v2 != v5)
    sub_10036C7AC();
  free(v1);
}

uint64_t VerticalToggleSlider.isBeingInteractedWith.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode) & 1;
}

uint64_t VerticalToggleSlider.growAnchorPoint.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_growAnchorPoint);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_growAnchorPoint, v3, 0, 0);
  return *v1;
}

void VerticalToggleSlider.growAnchorPoint.setter(char a1)
{
  char *v1;
  char *v3;
  id v4;
  id v5;
  double v6;
  double v7;
  double v8;
  double v9;
  id v10;
  char v11[24];

  v3 = &v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_growAnchorPoint];
  swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_growAnchorPoint], v11, 1, 0);
  *v3 = a1;
  v4 = sub_10036AF48();
  LOBYTE(v3) = *v3;
  v5 = objc_msgSend(v1, "traitCollection");
  sub_10036D250(v5, (char)v3);
  v7 = v6;
  v9 = v8;

  objc_msgSend(v4, "setAnchorPoint:", v7, v9);
  v10 = sub_10036AF48();
  objc_msgSend(v1, "bounds");
  objc_msgSend(v10, "setFrame:");

}

void (*VerticalToggleSlider.growAnchorPoint.modify(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_growAnchorPoint;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  return sub_10036ADC8;
}

void sub_10036ADC8(_QWORD *a1, char a2)
{
  _QWORD *v3;
  _BYTE *v4;
  uint64_t v5;
  id v6;
  id v7;
  double v8;
  double v9;
  double v10;
  double v11;
  id v12;

  v3 = (_QWORD *)*a1;
  swift_endAccess(*a1);
  if ((a2 & 1) == 0)
  {
    v4 = (_BYTE *)v3[3];
    v5 = v3[4];
    v6 = sub_10036AF48();
    LOBYTE(v5) = v4[v5];
    v7 = objc_msgSend(v4, "traitCollection");
    sub_10036D250(v7, v5);
    v9 = v8;
    v11 = v10;

    objc_msgSend(v6, "setAnchorPoint:", v9, v11);
    v12 = sub_10036AF48();
    objc_msgSend(v4, "bounds");
    objc_msgSend(v12, "setFrame:");

  }
  free(v3);
}

id sub_10036AE98()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  double v4;
  double v5;
  double v6;
  double v7;
  id v8;
  void *v9;
  id v10;

  v1 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___stretchView;
  v2 = *(void **)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___stretchView];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___stretchView];
  }
  else
  {
    objc_msgSend(v0, "bounds");
    v8 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", v4, v5, v6, v7);
    v9 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v8;
    v3 = v8;

    v2 = 0;
  }
  v10 = v2;
  return v3;
}

id sub_10036AF48()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  id v13;
  void *v14;
  id v15;

  v1 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___growView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___growView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___growView);
  }
  else
  {
    v4 = sub_10036AE98();
    objc_msgSend(v4, "bounds");
    v6 = v5;
    v8 = v7;
    v10 = v9;
    v12 = v11;

    v13 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", v6, v8, v10, v12);
    v14 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v13;
    v3 = v13;

    v2 = 0;
  }
  v15 = v2;
  return v3;
}

void sub_10036B000(float a1)
{
  char *v1;
  float v2;
  uint64_t v3;
  int v4;
  id v5;
  void *v6;
  double v7;
  id v8;
  id v9;

  v2 = *(float *)&v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValue];
  *(float *)&v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValue] = a1;
  if (v2 != a1)
  {
    v3 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode;
    if ((v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode] & 1) == 0)
    {
      sub_10036BB94(0x100000000);
      v9 = sub_10036B5AC();
      v4 = v1[v3];
      v5 = objc_msgSend(v1, "traitCollection");
      v6 = v5;
      if (v4 == 2)
      {

        v7 = 0.0;
      }
      else if ((v4 & 1) != 0)
      {

        v7 = 1.0;
      }
      else
      {
        v8 = objc_msgSend(v5, "accessibilityContrast");

        v7 = 0.5;
        if (v8 == (id)1)
          v7 = 1.0;
      }
      objc_msgSend(v9, "setAlpha:", v7);

    }
  }
}

id sub_10036B100()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___feedbackGenerator;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___feedbackGenerator);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___feedbackGenerator);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)_UIButtonFeedbackGenerator), "initWithStyle:", 1);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void sub_10036B174()
{
  unsigned __int8 *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  int v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  _QWORD v22[5];
  uint64_t v23;

  v1 = objc_msgSend(v0, "traitCollection");
  v2 = objc_msgSend(v1, "accessibilityContrast");

  v3 = sub_10036B484();
  v4 = objc_msgSend(v3, "contentView");

  v5 = objc_msgSend(v4, "layer");
  if (v2 != (id)1)
  {
    objc_msgSend(v5, "setCompositingFilter:", kCAFilterPlusL);

    v12 = sub_10036B484();
    v13 = objc_msgSend(v12, "contentView");

    v14 = (void *)objc_opt_self(UIColor);
    v15 = objc_msgSend(v14, "whiteColor");
    v16 = objc_msgSend(v15, "colorWithAlphaComponent:", 0.18);

    objc_msgSend(v13, "setBackgroundColor:", v16);
    v17 = sub_10036B5AC();
    v18 = objc_msgSend(v14, "whiteColor");
    objc_msgSend(v17, "setBackgroundColor:", v18);
LABEL_8:

    sub_10036C368();
    return;
  }
  objc_msgSend(v5, "setCompositingFilter:", 0);

  v6 = v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode];
  v7 = sub_10036B484();
  v8 = objc_msgSend(v7, "contentView");

  if (v6 != 2)
  {
    v19 = objc_allocWithZone((Class)UIColor);
    v22[4] = sub_10036DC6C;
    v23 = 0;
    v22[0] = _NSConcreteStackBlock;
    v22[1] = 1107296256;
    v22[2] = sub_100234A18;
    v22[3] = &unk_1004673C8;
    v20 = _Block_copy(v22);
    v21 = objc_msgSend(v19, "initWithDynamicProvider:", v20);
    _Block_release(v20);
    objc_msgSend(v8, "setBackgroundColor:", v21, swift_release(v23).n128_f64[0]);

    goto LABEL_7;
  }
  v9 = objc_msgSend(v0, "tintColor");
  if (v9)
  {
    v10 = v9;
    v11 = objc_msgSend(v9, "colorWithAlphaComponent:", 0.2);

    objc_msgSend(v8, "setBackgroundColor:", v11);
LABEL_7:
    v18 = sub_10036B5AC();
    v17 = objc_msgSend(v0, "tintColor");
    objc_msgSend(v18, "setBackgroundColor:", v17);
    goto LABEL_8;
  }
  __break(1u);
}

id sub_10036B484()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___visualEffectView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___visualEffectView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___visualEffectView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", *(_QWORD *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_blurEffect));
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void sub_10036B504(void *a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  id v5;
  char v6;
  id v7;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageView);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageView) = a1;
  v7 = a1;
  if (a1)
  {
    if (v3)
    {
      type metadata accessor for CoreAnimationPackageView();
      v4 = v3;
      v5 = v7;
      v6 = static NSObject.== infix(_:_:)(v5, v4);

      if ((v6 & 1) != 0)
        goto LABEL_7;
      goto LABEL_6;
    }
  }
  else if (v3)
  {
LABEL_6:
    objc_msgSend(v3, "removeFromSuperview");
    v4 = v3;
LABEL_7:

  }
}

id sub_10036B5AC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  id v13;
  void *v14;
  id v15;

  v1 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___levelView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___levelView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___levelView);
  }
  else
  {
    v4 = sub_10036B484();
    objc_msgSend(v4, "bounds");
    v6 = v5;
    v8 = v7;
    v10 = v9;
    v12 = v11;

    v13 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", v6, v8, v10, v12);
    v14 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v13;
    v3 = v13;

    v2 = 0;
  }
  v15 = v2;
  return v3;
}

void sub_10036B664()
{
  char *v0;
  uint64_t v1;
  _BYTE *v2;
  id v3;
  id v4;
  id v5;
  char *v6;
  double v7;
  id v8;
  double v9;
  double v10;
  double v11;
  double v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  NSString v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  uint64_t v56;
  int v57;
  id v58;
  void *v59;
  double v60;
  id v61;
  id v62;
  double v63;
  uint64_t v64;
  _BYTE v65[8];
  char v66[24];

  sub_100005574(&qword_1004A1050);
  __chkstk_darwin();
  v2 = &v65[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  objc_msgSend(v0, "setClipsToBounds:", 0);
  v3 = sub_10036AF48();
  objc_msgSend(v3, "setUserInteractionEnabled:", 0);

  v4 = sub_10036AF48();
  objc_msgSend(v4, "setAutoresizingMask:", 18);

  v5 = sub_10036AF48();
  v6 = &v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_growAnchorPoint];
  *(_QWORD *)&v7 = swift_beginAccess(&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_growAnchorPoint], v66, 0, 0).n128_u64[0];
  LOBYTE(v6) = *v6;
  v8 = objc_msgSend(v0, "traitCollection", v7);
  sub_10036D250(v8, (char)v6);
  v10 = v9;
  v12 = v11;

  objc_msgSend(v5, "setAnchorPoint:", v10, v12);
  v13 = sub_10036AF48();
  objc_msgSend(v0, "bounds");
  objc_msgSend(v13, "setFrame:");

  v14 = sub_10036AF48();
  objc_msgSend(v0, "addSubview:", v14);

  v15 = sub_10036AE98();
  objc_msgSend(v15, "setClipsToBounds:", 1);

  v16 = sub_10036AE98();
  objc_msgSend(v16, "setUserInteractionEnabled:", 0);

  v17 = sub_10036AE98();
  objc_msgSend(v17, "setAutoresizingMask:", 18);

  v18 = sub_10036AE98();
  v19 = sub_10036AF48();
  objc_msgSend(v19, "bounds");
  v21 = v20;
  v23 = v22;
  v25 = v24;
  v27 = v26;

  objc_msgSend(v18, "setFrame:", v21, v23, v25, v27);
  v28 = sub_10036AF48();
  v29 = sub_10036AE98();
  objc_msgSend(v28, "addSubview:", v29);

  v30 = sub_10036B484();
  objc_msgSend(v30, "setUserInteractionEnabled:", 0);

  v31 = sub_10036B484();
  objc_msgSend(v31, "setClipsToBounds:", 0);

  v32 = sub_10036B484();
  objc_msgSend(v32, "setAutoresizingMask:", 18);

  v33 = sub_10036B484();
  v34 = sub_10036AE98();
  objc_msgSend(v34, "bounds");
  v36 = v35;
  v38 = v37;
  v40 = v39;
  v42 = v41;

  objc_msgSend(v33, "setFrame:", v36, v38, v40, v42);
  v43 = sub_10036B484();
  v44 = objc_msgSend(v43, "contentView");

  v45 = objc_msgSend(v44, "layer");
  objc_msgSend(v45, "setCompositingFilter:", kCAFilterPlusL);

  v46 = sub_10036AE98();
  v47 = sub_10036B484();
  objc_msgSend(v46, "addSubview:", v47);

  v48 = sub_10036B5AC();
  objc_msgSend(v48, "setUserInteractionEnabled:", 0);

  v49 = sub_10036B5AC();
  v50 = String._bridgeToObjectiveC()();
  objc_msgSend(v49, "setAccessibilityIdentifier:", v50);

  v51 = sub_10036B5AC();
  objc_msgSend(v51, "setAutoresizingMask:", 26);

  v52 = sub_10036B484();
  v53 = objc_msgSend(v52, "contentView");

  v54 = sub_10036B5AC();
  objc_msgSend(v53, "addSubview:", v54);

  v65[4] = 1;
  sub_10036BB94(0x100000000);
  v55 = sub_10036B5AC();
  v56 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode;
  v57 = v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode];
  v58 = objc_msgSend(v0, "traitCollection");
  v59 = v58;
  if (v57 == 2)
  {

    v60 = 0.0;
  }
  else if ((v57 & 1) != 0)
  {

    v60 = 1.0;
  }
  else
  {
    v61 = objc_msgSend(v58, "accessibilityContrast");

    v60 = 0.5;
    if (v61 == (id)1)
      v60 = 1.0;
  }
  objc_msgSend(v55, "setAlpha:", v60);

  sub_10036B174();
  sub_10036BDD8();
  v62 = sub_10036AE98();
  v63 = 12.0;
  if (v0[v56] == 2)
    v63 = 10.0;
  static UIView.Corner.value(_:continuous:)(1, v63);
  v64 = type metadata accessor for UIView.Corner(0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v2, 0, 1, v64);
  UIView.corner.setter(v2);

}

void sub_10036BB94(uint64_t a1)
{
  uint64_t v1;
  id v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  id v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  double Height;
  float *v22;
  double v23;
  id v24;
  double v25;
  CGFloat v26;
  double v27;
  CGFloat v28;
  double v29;
  CGFloat v30;
  double v31;
  CGFloat v32;
  double v33;
  float v34;
  double v35;
  id v36;
  double v37;
  CGFloat v38;
  double v39;
  CGFloat v40;
  double v41;
  CGFloat v42;
  double v43;
  CGFloat v44;
  double v45;
  double v46;
  id v47;
  id v48;
  double v49;
  CGFloat v50;
  double v51;
  CGFloat v52;
  double v53;
  CGFloat v54;
  double v55;
  CGFloat v56;
  id v57;
  _BYTE v58[24];
  CGRect v59;
  CGRect v60;
  CGRect v61;
  CGRect v62;

  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode) == 2)
  {
    v57 = sub_10036B5AC();
    v2 = sub_10036B484();
    objc_msgSend(v2, "bounds");
    v4 = v3;
    v6 = v5;
    v8 = v7;
    v10 = v9;

    objc_msgSend(v57, "setFrame:", v4, v6, v8, v10);
  }
  else
  {
    v12 = sub_10036B484();
    objc_msgSend(v12, "bounds");
    v14 = v13;
    v16 = v15;
    v18 = v17;
    v20 = v19;

    v59.origin.x = v14;
    v59.origin.y = v16;
    v59.size.width = v18;
    v59.size.height = v20;
    Height = CGRectGetHeight(v59);
    v22 = (float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_minLevelOffsetRatio);
    swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_minLevelOffsetRatio, v58, 0, 0);
    v23 = Height * *v22;
    v24 = sub_10036B484();
    objc_msgSend(v24, "bounds");
    v26 = v25;
    v28 = v27;
    v30 = v29;
    v32 = v31;

    v60.origin.x = v26;
    v60.origin.y = v28;
    v60.size.width = v30;
    v60.size.height = v32;
    v33 = CGRectGetHeight(v60);
    if ((a1 & 0x100000000) != 0)
      v34 = *(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValue);
    else
      v34 = *(float *)&a1;
    v35 = v23 + (v33 - v23) * v34;
    v36 = sub_10036B484();
    objc_msgSend(v36, "bounds");
    v38 = v37;
    v40 = v39;
    v42 = v41;
    v44 = v43;

    v61.origin.x = v38;
    v61.origin.y = v40;
    v61.size.width = v42;
    v61.size.height = v44;
    v45 = CGRectGetHeight(v61) - v35;
    if (v45 < 0.0)
      v46 = 0.0;
    else
      v46 = v45;
    v47 = sub_10036B5AC();
    v48 = sub_10036B484();
    objc_msgSend(v48, "bounds");
    v50 = v49;
    v52 = v51;
    v54 = v53;
    v56 = v55;

    v62.origin.x = v50;
    v62.origin.y = v52;
    v62.size.width = v54;
    v62.size.height = v56;
    objc_msgSend(v47, "setFrame:", 0.0, v46, CGRectGetWidth(v62), v35);

  }
}

void sub_10036BDD8()
{
  char *v0;
  char *v1;
  uint64_t *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  char *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81[3];
  char v82[24];
  _QWORD v83[11];

  v1 = v0;
  v2 = (uint64_t *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageDefinition];
  swift_beginAccess(v2, v82, 0, 0);
  v3 = v2[1];
  if (v3)
  {
    v4 = (void *)v2[2];
    v5 = v2[4];
    v6 = v2[5];
    v8 = v2[6];
    v7 = v2[7];
    v10 = v2[8];
    v9 = v2[9];
    v78 = v2[3];
    v79 = *v2;
    v83[0] = *v2;
    v83[1] = v3;
    v83[2] = v4;
    v83[3] = v78;
    v83[4] = v5;
    v83[5] = v6;
    v83[6] = v8;
    v83[7] = v7;
    v83[8] = v10;
    v83[9] = v9;
    v80 = v9;
    v11 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageView];
    v77 = v7;
    if (v11)
    {
      v12 = v11;
      sub_100295140(v79, v3, v4);
      CoreAnimationPackageView.reset()();

    }
    else
    {
      v13 = objc_allocWithZone((Class)type metadata accessor for CoreAnimationPackageView());
      swift_bridgeObjectRetain_n(v3, 2);
      v14 = v4;
      swift_bridgeObjectRetain_n(v80, 2);
      v15 = v14;
      v16 = CoreAnimationPackageView.init(definition:)((uint64_t)v83);
      v17 = UIView.forAutolayout.getter();

      v12 = (char *)v17;
      objc_msgSend(v12, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      sub_10036B504(v12);
      v18 = sub_10036B484();
      v75 = v5;
      v19 = objc_msgSend(v18, "contentView");

      objc_msgSend(v19, "addSubview:", v12);
      v20 = sub_100005574(&qword_100499F50);
      v21 = swift_allocObject(v20, 72, 7);
      *(_OWORD *)(v21 + 16) = xmmword_100384B80;
      v73 = v10;
      v74 = v4;
      v22 = objc_msgSend(v12, "topAnchor");
      v23 = sub_10036B484();
      v24 = objc_msgSend(v23, "topAnchor");

      v25 = objc_msgSend(v22, "constraintGreaterThanOrEqualToAnchor:", v24);
      *(_QWORD *)(v21 + 32) = v25;
      v26 = objc_msgSend(v12, "leadingAnchor");
      v27 = sub_10036B484();
      v28 = objc_msgSend(v27, "leadingAnchor");

      v29 = objc_msgSend(v26, "constraintEqualToAnchor:", v28);
      *(_QWORD *)(v21 + 40) = v29;
      v30 = objc_msgSend(v12, "trailingAnchor");
      v31 = sub_10036B484();
      v32 = objc_msgSend(v31, "trailingAnchor");

      v33 = objc_msgSend(v30, "constraintEqualToAnchor:", v32);
      *(_QWORD *)(v21 + 48) = v33;
      v34 = objc_msgSend(v12, "bottomAnchor");
      v35 = sub_10036B484();
      v36 = objc_msgSend(v35, "bottomAnchor");

      v37 = objc_msgSend(v34, "constraintEqualToAnchor:", v36);
      *(_QWORD *)(v21 + 56) = v37;
      v38 = objc_msgSend(v12, "heightAnchor");
      v39 = objc_msgSend(v12, "widthAnchor");

      v40 = objc_msgSend(v38, "constraintEqualToAnchor:", v39);
      *(_QWORD *)(v21 + 64) = v40;
      v10 = v73;
      v4 = v74;
      v81[0] = v21;
      v5 = v75;
      specialized Array._endMutation()(v41);
      Array<A>.activate()(v81[0]);
      swift_bridgeObjectRelease();
    }
    v42 = (uint64_t *)&v12[OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_stateName];
    v43 = &v12[OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_stateName];
    if (v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode] == 2)
    {
      swift_beginAccess(v43, v81, 1, 0);
      v44 = v12;
      v45 = v8;
      v46 = v6;
      v47 = v5;
      v48 = *v42;
      v49 = v42[1];
      *(_OWORD *)v42 = xmmword_100395500;
      v50 = v44;
      sub_100243D3C(v48, v49);
      v51 = v47;
      v52 = v46;
      v53 = v45;
      v54 = v77;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_beginAccess(v43, v81, 1, 0);
      v76 = v3;
      v55 = v8;
      v56 = v6;
      v57 = v5;
      v58 = *v42;
      v59 = v42[1];
      *(_OWORD *)v42 = xmmword_1003954F0;
      sub_100243D3C(v58, v59);
      swift_bridgeObjectRelease();
      v60 = sub_1000087DC(0, (unint64_t *)&qword_100499FB0, OS_dispatch_queue_ptr);
      v68 = (void *)static OS_dispatch_queue.main.getter(v60, v61, v62, v63, v64, v65, v66, v67);
      v69 = swift_allocObject(&unk_100467360, 32, 7);
      *(_QWORD *)(v69 + 16) = v1;
      *(_QWORD *)(v69 + 24) = v12;
      v70 = v1;
      v50 = v12;
      v71 = v12;
      OS_dispatch_queue.asyncAfter(_:block:)((uint64_t)sub_100371D9C, v69, 1.0);

      v72 = v69;
      v51 = v57;
      v52 = v56;
      v53 = v55;
      v3 = v76;
      v54 = v77;
      swift_release(v72);
    }
    sub_10036C368();

    sub_100295178(v79, v3, v4, v78, v51, v52, v53, v54, v10, v80);
  }
  else
  {
    sub_10036B504(0);
  }
}

void sub_10036C368()
{
  char *v0;
  void *v1;
  int v2;
  objc_class *v3;
  Class v4;
  id v5;
  id v6;
  id v7;
  id v8;
  void **v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void **v15;
  void *v16;
  Class v17;
  void **v18;
  void *v19;
  void **v20;
  void *v21;
  void *v22;
  id v23;
  Class v24;
  void *v25;
  id v26;
  Class isa;
  id v28;
  void *v29;
  id v30;
  Class v31;
  void *v32;
  id v33;
  Class v34;
  id v35;
  id v36;
  _BYTE v37[24];

  v1 = *(void **)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageView];
  if (v1)
  {
    v2 = v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode];
    v3 = v1;
    v4 = v3;
    if (v2 != 2)
    {
      v12 = objc_msgSend(v0, "traitCollection");
      v13 = objc_msgSend(v12, "accessibilityContrast");

      if (v13 == (id)1)
      {
        v14 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
        v15 = (void **)((char *)v4 + OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_foregroundColor);
        swift_beginAccess((char *)v4 + OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_foregroundColor, v37, 1, 0);
        v16 = *v15;
        *v15 = v14;
        v17 = (Class)v14;

        if (*v15)
        {
          sub_100244BA4();
        }
        else
        {
          v25 = *(void **)((char *)v4 + OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_packageLayer);
          if (v25)
          {
            v26 = v25;
            isa = Array._bridgeToObjectiveC()().super.isa;
            objc_msgSend(v26, "setFilters:", isa);

            v17 = isa;
          }
        }

        v28 = -[objc_class layer](v4, "layer");
        objc_msgSend(v28, "setCompositingFilter:", 0);

      }
      else
      {
        v20 = (void **)((char *)v4 + OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_foregroundColor);
        swift_beginAccess((char *)v4 + OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_foregroundColor, v37, 1, 0);
        v21 = *v20;
        *v20 = 0;

        if (*v20)
        {
          sub_100244BA4();
        }
        else
        {
          v32 = *(void **)((char *)v4 + OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_packageLayer);
          if (v32)
          {
            v33 = v32;
            v34 = Array._bridgeToObjectiveC()().super.isa;
            objc_msgSend(v33, "setFilters:", v34);

          }
        }
        v35 = -[objc_class layer](v4, "layer");
        v36 = kCAFilterDestOut;
        objc_msgSend(v35, "setCompositingFilter:", v36);

      }
      goto LABEL_24;
    }
    v5 = -[objc_class layer](v3, "layer");
    objc_msgSend(v5, "setCompositingFilter:", 0);

    v6 = objc_msgSend(v0, "traitCollection");
    v7 = objc_msgSend(v6, "accessibilityContrast");

    if (v7 != (id)1)
    {
      v18 = (void **)((char *)v4 + OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_foregroundColor);
      swift_beginAccess((char *)v4 + OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_foregroundColor, v37, 1, 0);
      v19 = *v18;
      *v18 = 0;

      if (*v18)
      {
        sub_100244BA4();
      }
      else
      {
        v29 = *(void **)((char *)v4 + OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_packageLayer);
        if (v29)
        {
          v30 = v29;
          v31 = Array._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v30, "setFilters:", v31);

          v4 = v31;
        }
      }
      goto LABEL_24;
    }
    v8 = objc_msgSend(v0, "tintColor");
    v9 = (void **)((char *)v4 + OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_foregroundColor);
    swift_beginAccess((char *)v4 + OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_foregroundColor, v37, 1, 0);
    v10 = *v9;
    *v9 = v8;
    v11 = v8;

    if (*v9)
    {
      sub_100244BA4();
    }
    else
    {
      v22 = *(void **)((char *)v4 + OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_packageLayer);
      if (v22)
      {
        v23 = v22;
        v24 = Array._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v23, "setFilters:", v24);

        v4 = v24;
        goto LABEL_24;
      }
    }

    v4 = (Class)v11;
LABEL_24:

  }
}

void sub_10036C7AC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  char v7[24];

  v1 = &v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_longPressMode];
  swift_beginAccess(&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_longPressMode], v7, 0, 0);
  v2 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_longPressGestureRecognizer;
  v3 = *(void **)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_longPressGestureRecognizer];
  if (*v1 - 1 > 1)
  {
    if (!v3)
      return;
    v6 = v3;
    objc_msgSend(v0, "removeGestureRecognizer:", v6);
    v5 = *(void **)&v0[v2];
    *(_QWORD *)&v0[v2] = 0;

  }
  else
  {
    if (v3)
      return;
    v4 = objc_msgSend(objc_allocWithZone((Class)UILongPressGestureRecognizer), "initWithTarget:action:", v0, "longPressed:");
    objc_msgSend(v4, "setMinimumPressDuration:", 0.25);
    objc_msgSend(v0, "addGestureRecognizer:", v4);
    v5 = *(void **)&v0[v2];
    *(_QWORD *)&v0[v2] = v4;
  }

}

void sub_10036C8A0(void *a1)
{
  _BYTE *v1;
  unsigned __int8 *v3;
  double v4;
  int v5;
  char *v6;
  unsigned __int8 v7;
  id v8;
  double v9;
  double v10;
  double v11;
  double v12;
  char v13[24];

  v3 = &v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_longPressMode];
  *(_QWORD *)&v4 = swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_longPressMode], v13, 0, 0).n128_u64[0];
  v5 = *v3;
  if (v5 == 2 || v5 == 1 && v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode] != 2)
  {
    v6 = (char *)objc_msgSend(a1, "state", v4);
    if ((unint64_t)(v6 - 3) >= 3)
    {
      if (v6 == (char *)2)
      {
        v8 = sub_10036AF48();
        objc_msgSend(a1, "locationInView:", v8);
        v10 = v9;
        v12 = v11;

        sub_10036CC2C(v10, v12);
      }
      else if (v6 == (char *)1)
      {
        v7 = v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode];
        v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode] = 1;
        sub_10036DCEC(v7);
        objc_msgSend(v1, "sendActionsForControlEvents:", 0x10000);
        objc_msgSend(v1, "sendActionsForControlEvents:", 4096);
        *(_DWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_initialValue] = *(_DWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValue];
      }
    }
    else
    {
      sub_10036CB18();
    }
  }
}

void sub_10036C9DC(void *a1)
{
  char *v1;
  uint64_t v2;
  char *v4;
  unsigned __int8 v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  double v13;
  double v14;
  double v15;
  double v16;

  v2 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode;
  if (v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode] != 2)
  {
    v4 = (char *)objc_msgSend(a1, "state");
    if ((unint64_t)(v4 - 3) >= 3)
    {
      if (v4 == (char *)2)
      {
        v12 = sub_10036AF48();
        objc_msgSend(a1, "locationInView:", v12);
        v14 = v13;
        v16 = v15;

        sub_10036CC2C(v14, v16);
      }
      else if (v4 == (char *)1)
      {
        objc_msgSend(v1, "sendActionsForControlEvents:", 0x10000);
        v5 = v1[v2];
        v1[v2] = 1;
        sub_10036DCEC(v5);
        v6 = sub_10036AF48();
        objc_msgSend(a1, "locationInView:", v6);
        v8 = v7;
        v10 = v9;

        v11 = &v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_initialDraggingLocation];
        *(_QWORD *)v11 = v8;
        *((_QWORD *)v11 + 1) = v10;
        v11[16] = 0;
        *(_DWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_initialValue] = *(_DWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValue];
      }
    }
    else
    {
      sub_10036CB18();
    }
  }
}

void sub_10036CB18()
{
  _BYTE *v0;
  float v1;
  float v2;
  float v3;
  float v4;
  float v5;
  _BYTE *v6;
  unsigned __int8 v7;
  char *v8;
  _BYTE v9[24];

  v1 = *(float *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__minValue];
  v2 = *(float *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__maxValue];
  if (v1 > v2)
  {
    __break(1u);
  }
  else
  {
    v3 = *(float *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValue];
    v4 = *(float *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValueRange];
    v5 = *(float *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValueRange + 4];
    if (v4 > v3)
      v3 = *(float *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValueRange];
    if (v5 < v3)
      v3 = *(float *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValueRange + 4];
    if ((float)(v1 + (float)((float)(v2 - v1) * (float)((float)(v3 - v4) / (float)(v5 - v4)))) == v2
      && (v6 = &v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_automaticallyDisablesOnMaxValue],
          swift_beginAccess(&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_automaticallyDisablesOnMaxValue], v9, 0, 0), *v6 == 1))
    {
      v7 = v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode];
      v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode] = 2;
    }
    else
    {
      v7 = v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode];
      v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode] = 0;
    }
    sub_10036DCEC(v7);
    v8 = &v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_initialDraggingLocation];
    *(_QWORD *)v8 = 0;
    *((_QWORD *)v8 + 1) = 0;
    v8[16] = 1;
    objc_msgSend(v0, "sendActionsForControlEvents:", 0x40000);
  }
}

void sub_10036CC2C(double a1, double a2)
{
  _BYTE *v2;
  double *v4;
  double v5;
  id v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double Height;
  float *v16;
  double v17;
  double v18;
  float v19;
  float v20;
  double v21;
  double v22;
  double v24;
  double v25;
  float64x2_t *v26;
  double v27;
  double v28;
  double v29;
  double v30;
  _OWORD *v31;
  __int128 v32;
  id v33;
  int v34;
  id v35;
  void *v36;
  double v37;
  id v38;
  _BYTE *v39;
  double v40;
  uint64_t v41[3];
  char v42[24];
  CGRect v43;

  v4 = (double *)&v2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_initialDraggingLocation];
  if ((v2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_initialDraggingLocation + 16] & 1) != 0)
  {
    *v4 = a1;
    v4[1] = a2;
    v5 = a2;
    *((_BYTE *)v4 + 16) = 0;
  }
  else
  {
    v5 = v4[1];
  }
  v6 = sub_10036AF48();
  objc_msgSend(v6, "bounds");
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v14 = v13;

  v43.origin.x = v8;
  v43.origin.y = v10;
  v43.size.width = v12;
  v43.size.height = v14;
  Height = CGRectGetHeight(v43);
  v16 = (float *)&v2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_minLevelOffsetRatio];
  swift_beginAccess(&v2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_minLevelOffsetRatio], v42, 0, 0);
  v17 = Height * (1.0 - *v16);
  v18 = (v5 - a2) * (1.0 / v17) + *(float *)&v2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_initialValue];
  v19 = *(float *)&v2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValueRange];
  v20 = v18;
  if (v19 <= v20)
    v19 = v18;
  if (*(float *)&v2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValueRange + 4] < v19)
    v19 = *(float *)&v2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValueRange + 4];
  sub_10036B000(v19);
  if (v17 < 0.0)
  {
    __break(1u);
    goto LABEL_30;
  }
  v21 = 0.0;
  v22 = v17 * v18 + 0.0;
  if (v22 >= 0.0 && v22 <= v17)
  {
    if (qword_100498D68 == -1)
    {
LABEL_18:
      v31 = &v2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange];
      v27 = *(double *)&v2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange];
      v28 = *(double *)&v2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange + 8];
      v29 = *(double *)&v2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange + 16];
      v30 = *(double *)&v2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange + 24];
      v32 = *(_OWORD *)&qword_1004A1658;
      *v31 = xmmword_1004A1648;
      v31[1] = v32;
      goto LABEL_19;
    }
LABEL_30:
    swift_once(&qword_100498D68, sub_1003705DC);
    goto LABEL_18;
  }
  if (v22 >= 0.0)
    v21 = v17;
  v24 = vabdd_f64(v22, v21);
  v25 = (v22 - v21) * 0.01;
  v26 = (float64x2_t *)&v2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange];
  v27 = *(double *)&v2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange];
  v28 = *(double *)&v2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange + 8];
  v29 = *(double *)&v2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange + 16];
  v30 = *(double *)&v2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange + 24];
  *v26 = vmulq_n_f64((float64x2_t)xmmword_100395510, v24);
  v26[1].f64[0] = v24 * 0.01;
  v26[1].f64[1] = v25;
LABEL_19:
  sub_10037062C(v27, v28, v29, v30);
  LOBYTE(v41[0]) = 1;
  sub_10036BB94(0x100000000);
  v33 = sub_10036B5AC();
  v34 = v2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode];
  v35 = objc_msgSend(v2, "traitCollection", v41[0]);
  v36 = v35;
  if (v34 == 2)
  {

    v37 = 0.0;
  }
  else if ((v34 & 1) != 0)
  {

    v37 = 1.0;
  }
  else
  {
    v38 = objc_msgSend(v35, "accessibilityContrast");

    v37 = 0.5;
    if (v38 == (id)1)
      v37 = 1.0;
  }
  objc_msgSend(v33, "setAlpha:", v37);

  v39 = &v2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_isContinuous];
  *(_QWORD *)&v40 = swift_beginAccess(&v2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_isContinuous], v41, 0, 0).n128_u64[0];
  if ((*v39 & 1) != 0)
    objc_msgSend(v2, "sendActionsForControlEvents:", 4096, v40);
}

void sub_10036CEF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  void *v15;
  uint64_t v16;
  void *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  char v55[24];
  _QWORD v56[10];
  char v57[8];
  uint64_t v58;
  _QWORD v59[7];

  sub_1002950F8(a1, (uint64_t)v56);
  v3 = v56[0];
  v4 = v56[1];
  v23 = v56[3];
  v24 = v56[4];
  v25 = (void *)v56[5];
  v26 = v56[6];
  v27 = v56[7];
  v28 = v56[8];
  v29 = v56[2];
  v22 = (_QWORD *)v56[9];
  v5 = (uint64_t *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageDefinition);
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageDefinition, v55, 0, 0);
  v6 = v5[1];
  v7 = (void *)v5[2];
  v8 = v5[3];
  v9 = v5[4];
  v10 = v5[7];
  v31 = v5[5];
  v32 = v5[6];
  v11 = v5[8];
  v33 = (_QWORD *)v5[9];
  v34 = *v5;
  v12 = (_QWORD *)a1;
  if (!v6)
  {
    sub_1002950F8(a1, (uint64_t)v57);
    v13 = v34;
    if (!v58)
      return;
    goto LABEL_13;
  }
  sub_1002950F8(a1, (uint64_t)v57);
  v13 = v34;
  if (!v58)
  {
LABEL_13:
    v35 = v13;
    v36 = v6;
    v37 = v7;
    v38 = v8;
    v39 = v9;
    v40 = v31;
    v41 = v32;
    v42 = v10;
    v43 = v11;
    v44 = v33;
    v45 = v3;
    v46 = v4;
    v47 = v29;
    v48 = v23;
    v49 = v24;
    v50 = v25;
    v51 = v26;
    v52 = v27;
    v53 = v28;
    v54 = v22;
    sub_100295140(v13, v6, v7);
    sub_1002951B0(v12, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100295140);
    sub_100371ECC((uint64_t)&v35);
    goto LABEL_16;
  }
  v14 = v34 == v3 && v6 == v4;
  if (!v14 && (_stringCompareWithSmolCheck(_:_:expecting:)(v34, v6, v3, v4, 0) & 1) == 0)
    goto LABEL_16;
  sub_1000087DC(0, (unint64_t *)&qword_10049A0D0, NSObject_ptr);
  v15 = v7;
  v16 = v8;
  v17 = v15;
  sub_100295140(v34, v6, v15);
  sub_1002951B0(v12, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100295140);
  if ((static NSObject.== infix(_:_:)(v17, v29) & 1) == 0)
  {
    sub_1002951B0(v12, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100295178);
    sub_100295178(v34, v6, v17, v16, v9, v31, v32, v10, v11, (uint64_t)v33);
    goto LABEL_16;
  }
  v59[0] = v16;
  v59[1] = v9;
  v59[2] = v31;
  v59[3] = v32;
  v59[4] = v10;
  v59[5] = v11;
  v35 = v23;
  v36 = v24;
  v37 = v25;
  v38 = v26;
  v39 = v27;
  v40 = v28;
  v18 = static CGAffineTransform.== infix(_:_:)(v59, &v35);
  v19 = v16;
  v20 = v9;
  v21 = v19;
  if ((v18 & 1) == 0)
  {
    sub_1002951B0(v12, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100295178);
    sub_100295178(v34, v6, v17, v21, v20, v31, v32, v10, v11, (uint64_t)v33);
    goto LABEL_16;
  }
  v30 = sub_100252A34(v33, v22);
  sub_1002951B0(v12, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100295178);
  sub_100295178(v34, v6, v17, v21, v20, v31, v32, v10, v11, (uint64_t)v33);
  if ((v30 & 1) == 0)
  {
LABEL_16:
    sub_10036B504(0);
    sub_10036BDD8();
  }
}

void sub_10036D250(id a1, char a2)
{
  if (a1)
    objc_msgSend(a1, "layoutDirection");
  __asm { BR              X10 }
}

void sub_10036D298(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;

  if (v1 && (unint64_t)(a1 + 1) >= 2)
  {
    if (a1 != 1)
    {
      sub_10036D250(0);
      return;
    }
    v2 = CGPoint.topRight.unsafeMutableAddressor();
  }
  else
  {
    v2 = CGPoint.topLeft.unsafeMutableAddressor();
  }
  swift_beginAccess(v2, &v3, 0, 0);
}

id VerticalToggleSlider.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  uint64_t ObjectType;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  double v15;
  float v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  __int128 v22;
  char *v23;
  char *v24;
  id v25;
  uint64_t v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  objc_super v37;

  v5 = v4;
  ObjectType = swift_getObjectType();
  v11 = &v4[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageDefinition];
  *(_OWORD *)v11 = 0u;
  *((_OWORD *)v11 + 1) = 0u;
  *((_OWORD *)v11 + 2) = 0u;
  *((_OWORD *)v11 + 3) = 0u;
  *((_OWORD *)v11 + 4) = 0u;
  v12 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_minLevelOffsetRatio;
  v13 = qword_100498D88;
  v14 = v4;
  if (v13 != -1)
    swift_once(&qword_100498D88, sub_100370E40);
  v15 = 1.0 / *((double *)&xmmword_1004A1688 + 1);
  if (qword_100498D78 != -1)
    swift_once(&qword_100498D78, sub_100370E18);
  v16 = v15 * *(double *)&qword_1004A1670;
  *(float *)&v5[v12] = v16;
  v17 = &v14[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_interactionScaleFactor];
  *(_QWORD *)v17 = 0;
  v17[8] = 1;
  v14[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_isTapToToggleEnabled] = 1;
  v14[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_isVisuallyDisabled] = 0;
  v14[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_isContinuous] = 1;
  v14[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_automaticallyDisablesOnMaxValue] = 1;
  v14[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_longPressMode] = 1;
  v14[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_growAnchorPoint] = 8;
  *(_QWORD *)&v14[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___stretchView] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___growView] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValueRange] = 0x3F80000000000000;
  *(_DWORD *)&v14[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValue] = 1065353216;
  *(_DWORD *)&v14[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__minValue] = 0;
  *(_DWORD *)&v14[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__maxValue] = 1065353216;
  *(_QWORD *)&v14[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___feedbackGenerator] = 0;
  v14[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode] = 2;
  v18 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_blurEffect;
  if (qword_100498D60 != -1)
    swift_once(&qword_100498D60, sub_10036FC94);
  *(_QWORD *)&v14[v18] = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithBlurRadius:", *(double *)&qword_1004A1640);
  *(_QWORD *)&v14[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___visualEffectView] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageView] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___levelView] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_sceneActivationObserver] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_longPressGestureRecognizer] = 0;
  v19 = &v14[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_initialDraggingLocation];
  *(_QWORD *)v19 = 0;
  *((_QWORD *)v19 + 1) = 0;
  v19[16] = 1;
  *(_DWORD *)&v14[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_initialValue] = 0;
  v20 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange;
  if (qword_100498D68 != -1)
    swift_once(&qword_100498D68, sub_1003705DC);
  v21 = &v14[v20];
  v22 = *(_OWORD *)&qword_1004A1658;
  *(_OWORD *)v21 = xmmword_1004A1648;
  *((_OWORD *)v21 + 1) = v22;
  v23 = &v14[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_stretchTransform];
  *(_QWORD *)v23 = 0x3FF0000000000000;
  *((_QWORD *)v23 + 1) = 0;
  *((_QWORD *)v23 + 2) = 0;
  *((_QWORD *)v23 + 3) = 0x3FF0000000000000;
  *((_QWORD *)v23 + 4) = 0;
  *((_QWORD *)v23 + 5) = 0;
  v24 = &v14[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_growTransform];
  *(_QWORD *)v24 = 0x3FF0000000000000;
  *((_QWORD *)v24 + 1) = 0;
  *((_QWORD *)v24 + 2) = 0;
  *((_QWORD *)v24 + 3) = 0x3FF0000000000000;
  *((_QWORD *)v24 + 4) = 0;
  *((_QWORD *)v24 + 5) = 0;

  v37.receiver = v14;
  v37.super_class = (Class)type metadata accessor for VerticalToggleSlider();
  v25 = objc_msgSendSuper2(&v37, "initWithFrame:", a1, a2, a3, a4);
  objc_msgSend(v25, "setDeliversTouchesForGesturesToSuperview:", 0);
  sub_1000087DC(0, &qword_10049B098, UIAction_ptr);
  v26 = swift_allocObject(&unk_100467088, 24, 7);
  swift_unknownObjectWeakInit(v26 + 16);
  v27 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_100371414, v26);
  objc_msgSend(v25, "addAction:forControlEvents:", v27, 64);

  v28 = objc_msgSend(objc_allocWithZone((Class)UIPanGestureRecognizer), "initWithTarget:action:", v25, "dragged:");
  objc_msgSend(v25, "addGestureRecognizer:", v28);

  sub_10036C7AC();
  sub_10036B664();
  v29 = sub_100005574(&qword_10049AED0);
  v30 = swift_allocObject(v29, 48, 7);
  *(_OWORD *)(v30 + 16) = xmmword_100384A80;
  *(_QWORD *)(v30 + 32) = type metadata accessor for UITraitAccessibilityContrast(0);
  *(_QWORD *)(v30 + 40) = &protocol witness table for UITraitAccessibilityContrast;
  v31 = v25;
  v32 = UIView.registerForTraitChanges<A>(_:handler:)(v30, sub_10037141C, 0, ObjectType);
  swift_unknownObjectRelease(v32);

  swift_bridgeObjectRelease();
  v33 = swift_allocObject(v29, 48, 7);
  *(_OWORD *)(v33 + 16) = xmmword_100384A80;
  *(_QWORD *)(v33 + 32) = type metadata accessor for UITraitLayoutDirection(0);
  *(_QWORD *)(v33 + 40) = &protocol witness table for UITraitLayoutDirection;
  v34 = v31;
  v35 = UIView.registerForTraitChanges<A>(_:handler:)(v33, sub_10037143C, 0, ObjectType);
  swift_unknownObjectRelease(v35);
  swift_bridgeObjectRelease();

  return v34;
}

double VerticalToggleSlider.intrinsicContentSize.getter()
{
  uint64_t v0;
  __int128 *v1;

  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode) == 2)
  {
    if (qword_100498D80 != -1)
      swift_once(&qword_100498D80, sub_100370E28);
    v1 = &xmmword_1004A1678;
  }
  else
  {
    if (qword_100498D88 != -1)
      swift_once(&qword_100498D88, sub_100370E40);
    v1 = &xmmword_1004A1688;
  }
  return *(double *)v1;
}

id VerticalToggleSlider.isEnabled.getter()
{
  return sub_10036FF38((SEL *)&selRef_isEnabled);
}

uint64_t VerticalToggleSlider.isEnabled.setter(char a1)
{
  return sub_100370038(a1, (SEL *)&selRef_isEnabled, (SEL *)&selRef_setEnabled_, (uint64_t (*)(id))sub_10036DAA8);
}

void sub_10036DAA8(char a1)
{
  char *v1;
  char *v2;
  double v3;
  unsigned int v4;
  void *v5;
  double v6;
  id v7;
  void *v8;
  double v9;
  char v10[24];

  if (objc_msgSend(v1, "isEnabled") != (a1 & 1))
  {
    v2 = &v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_isVisuallyDisabled];
    *(_QWORD *)&v3 = swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_isVisuallyDisabled], v10, 0, 0).n128_u64[0];
    if ((*v2 & 1) != 0)
      v4 = 1;
    else
      v4 = objc_msgSend(v1, "isEnabled", v3) ^ 1;
    v5 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageView];
    if (v5)
    {
      v6 = 0.4;
      if (!v4)
        v6 = 1.0;
      objc_msgSend(v5, "setAlpha:", v6);
    }
    v7 = sub_10036B484();
    v8 = v7;
    v9 = 1.0;
    if (v4)
      v9 = 0.5;
    objc_msgSend(v7, "setAlpha:", v9);

  }
}

Swift::Void __swiftcall VerticalToggleSlider.tintColorDidChange()()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for VerticalToggleSlider();
  objc_msgSendSuper2(&v1, "tintColorDidChange");
  sub_10036B174();
}

id sub_10036DC6C(void *a1)
{
  id v1;

  v1 = objc_msgSend(a1, "userInterfaceStyle");
  if (qword_100498920 != -1)
    swift_once(&qword_100498920, sub_10024DEF0);
  return objc_msgSend((id)static UIColor.MusicTint.normal, "colorWithAlphaComponent:", dbl_100395520[v1 == (id)2]);
}

void sub_10036DCEC(unsigned __int8 a1)
{
  unsigned __int8 *v1;
  void *v2;
  int v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  int v7;
  id v8;
  void *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  void *v23;
  CGFloat v24;
  void *v25;
  CGFloat v26;
  id v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  void *v36;
  CGFloat v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  id v48;
  CGFloat v49;
  id v50;
  id v51;
  CGFloat v52;
  CGFloat v53;
  uint64_t *v54;
  uint64_t *v55;
  __int128 v56;
  __int128 v57;
  unsigned __int8 *v58;
  id v59;
  __int128 v60;
  id v61;
  int v62;
  id v63;
  void *v64;
  double v65;
  int v66;
  void *v67;
  CGFloat v68;
  id v69;
  double v70;
  double v71;
  double v72;
  double v73;
  double v74;
  double v75;
  double v76;
  double v77;
  void *v78;
  CGFloat v79;
  uint64_t v80;
  CGFloat v81;
  void *v82;
  id v83;
  void *v84;
  CGFloat v85;
  double v86;
  double v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  uint64_t v97;
  id v98;
  CGFloat v99;
  void *v100;
  CGFloat v101;
  id v102;
  id v103;
  int v104;
  CGFloat v105;
  uint64_t v106;
  id v107;
  void *v108;
  double v109;
  double v110;
  double v111;
  double v112;
  double v113;
  double v114;
  double v115;
  double v116;
  void *v117;
  CGFloat v118;
  void *v119;
  double v120;
  double v121;
  double v122;
  double v123;
  double v124;
  double v125;
  double v126;
  double v127;
  void *v128;
  id v129;
  double v130;
  uint64_t v131;
  id v132;
  uint64_t v133;
  id v134;
  void *v135;
  double v136;
  double v137;
  double v138;
  double v139;
  double v140;
  double v141;
  double v142;
  double v143;
  void *v144;
  CGFloat ty;
  void *v146;
  CGFloat v147;
  id v148;
  double v149;
  double v150;
  double v151;
  double v152;
  double v153;
  double v154;
  double v155;
  double v156;
  void *v157;
  CGFloat v158;
  uint64_t v159;
  id v160;
  void *v161;
  double v162;
  double v163;
  double v164;
  double v165;
  double v166;
  double v167;
  double v168;
  double v169;
  void *v170;
  CGFloat v171;
  void *v172;
  double v173;
  double v174;
  double v175;
  double v176;
  void *v177;
  CGFloat v178;
  _BYTE v179[24];
  char v180[24];
  CGAffineTransform aBlock;

  v2 = v1;
  v3 = a1;
  sub_100005574(&qword_1004A1050);
  __chkstk_darwin();
  v5 = &v179[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode;
  v7 = v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode];
  if (v7 == 2)
  {
    if (v3 == 2)
      return;
  }
  else if (v3 == 2)
  {
    if ((v7 & 1) != 0)
      sub_10036B000(1.0);
  }
  else if (((((v3 & 1) == 0) ^ v7) & 1) != 0)
  {
    return;
  }
  v8 = sub_10036B100();
  objc_msgSend(v8, "userInteractionStarted");

  v9 = (void *)objc_opt_self(UIView);
  if (objc_msgSend(v9, "areAnimationsEnabled"))
  {
    v10 = v1[v6];
    if (v3 == 2)
    {
      if (v10 == 2)
        return;
      v11 = swift_allocObject(&unk_100467608, 25, 7);
      *(_QWORD *)(v11 + 16) = v2;
      *(_BYTE *)(v11 + 24) = v10 & 1;
      if ((v10 & 1) != 0)
      {
        v133 = qword_100498DC8;
        v134 = v2;
        if (v133 != -1)
          swift_once(&qword_100498DC8, sub_100371034);
        v135 = (void *)qword_1004A16D8;
        objc_msgSend((id)qword_1004A16D8, "settlingDuration");
        v137 = v136;
        objc_msgSend(v135, "mass");
        v139 = v138;
        objc_msgSend(v135, "stiffness");
        v141 = v140;
        objc_msgSend(v135, "damping");
        v143 = v142;
        *(_QWORD *)&aBlock.tx = sub_100371E70;
        *(_QWORD *)&aBlock.ty = v11;
        *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
        *(_QWORD *)&aBlock.b = 1107296256;
        *(_QWORD *)&aBlock.c = sub_1000BED80;
        *(_QWORD *)&aBlock.d = &unk_1004676C0;
        v144 = _Block_copy(&aBlock);
        ty = aBlock.ty;
        swift_retain(v11);
        swift_release(*(_QWORD *)&ty);
        objc_msgSend(v9, "_animateUsingSpringWithDuration:delay:options:mass:stiffness:damping:initialVelocity:animations:completion:", 6, v144, 0, v137, 0.0, v139, v141, v143, 0.0);
        _Block_release(v144);
        if (qword_100498DD0 != -1)
          swift_once(&qword_100498DD0, sub_100371084);
        v146 = (void *)qword_1004A16E0;
        v147 = COERCE_DOUBLE(swift_allocObject(&unk_1004676F8, 24, 7));
        *(_QWORD *)(*(_QWORD *)&v147 + 16) = v134;
        v148 = v134;
        objc_msgSend(v146, "settlingDuration");
        v150 = v149;
        objc_msgSend(v146, "mass");
        v152 = v151;
        objc_msgSend(v146, "stiffness");
        v154 = v153;
        objc_msgSend(v146, "damping");
        v156 = v155;
        *(_QWORD *)&aBlock.tx = sub_100371E8C;
        aBlock.ty = v147;
        *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
        *(_QWORD *)&aBlock.b = 1107296256;
        *(_QWORD *)&aBlock.c = sub_1000BED80;
        *(_QWORD *)&aBlock.d = &unk_100467710;
        v157 = _Block_copy(&aBlock);
        v158 = aBlock.ty;
        swift_retain(*(_QWORD *)&v147);
        swift_release(*(_QWORD *)&v158);
        objc_msgSend(v9, "_animateUsingSpringWithDuration:delay:options:mass:stiffness:damping:initialVelocity:animations:completion:", 6, v157, 0, v150, 0.0, v152, v154, v156, 0.0);
        _Block_release(v157);
        v49 = v147;
      }
      else
      {
        v12 = qword_100498DA8;
        v13 = v2;
        if (v12 != -1)
          swift_once(&qword_100498DA8, sub_100370F0C);
        v14 = (void *)qword_1004A16B8;
        objc_msgSend((id)qword_1004A16B8, "settlingDuration");
        v16 = v15;
        objc_msgSend(v14, "mass");
        v18 = v17;
        objc_msgSend(v14, "stiffness");
        v20 = v19;
        objc_msgSend(v14, "damping");
        v22 = v21;
        *(_QWORD *)&aBlock.tx = sub_100371E70;
        *(_QWORD *)&aBlock.ty = v11;
        *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
        *(_QWORD *)&aBlock.b = 1107296256;
        *(_QWORD *)&aBlock.c = sub_1000BED80;
        *(_QWORD *)&aBlock.d = &unk_100467620;
        v23 = _Block_copy(&aBlock);
        v24 = aBlock.ty;
        swift_retain(v11);
        swift_release(*(_QWORD *)&v24);
        objc_msgSend(v9, "_animateUsingSpringWithDuration:delay:options:mass:stiffness:damping:initialVelocity:animations:completion:", 6, v23, 0, v16, 0.2, v18, v20, v22, 0.0);
        _Block_release(v23);
        if (qword_100498DA0 != -1)
          swift_once(&qword_100498DA0, sub_100370EBC);
        v25 = (void *)qword_1004A16B0;
        v26 = COERCE_DOUBLE(swift_allocObject(&unk_100467658, 24, 7));
        *(_QWORD *)(*(_QWORD *)&v26 + 16) = v13;
        v27 = v13;
        objc_msgSend(v25, "settlingDuration");
        v29 = v28;
        objc_msgSend(v25, "mass");
        v31 = v30;
        objc_msgSend(v25, "stiffness");
        v33 = v32;
        objc_msgSend(v25, "damping");
        v35 = v34;
        *(_QWORD *)&aBlock.tx = sub_100371E7C;
        aBlock.ty = v26;
        *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
        *(_QWORD *)&aBlock.b = 1107296256;
        *(_QWORD *)&aBlock.c = sub_1000BED80;
        *(_QWORD *)&aBlock.d = &unk_100467670;
        v36 = _Block_copy(&aBlock);
        v37 = aBlock.ty;
        swift_retain(*(_QWORD *)&v26);
        swift_release(*(_QWORD *)&v37);
        objc_msgSend(v9, "_animateUsingSpringWithDuration:delay:options:mass:stiffness:damping:initialVelocity:animations:completion:", 6, v36, 0, v29, 0.0, v31, v33, v35, 0.0);
        _Block_release(v36);
        swift_release(*(_QWORD *)&v26);
        v38 = sub_1000087DC(0, (unint64_t *)&qword_100499FB0, OS_dispatch_queue_ptr);
        v46 = (void *)static OS_dispatch_queue.main.getter(v38, v39, v40, v41, v42, v43, v44, v45);
        v47 = swift_allocObject(&unk_1004676A8, 24, 7);
        *(_QWORD *)(v47 + 16) = v27;
        v48 = v27;
        OS_dispatch_queue.asyncAfter(_:block:)((uint64_t)sub_100371E84, v47, 0.3);

        v49 = *(double *)&v47;
      }
LABEL_69:
      swift_release(*(_QWORD *)&v49);
      swift_release(v11);
      return;
    }
    v66 = v3 & 1;
    if (v10 != 2)
    {
      if ((((v66 != 0) ^ v10) & 1) == 0)
        return;
      v104 = v10 & 1;
      v105 = COERCE_DOUBLE(swift_allocObject(&unk_100467400, 25, 7));
      *(_QWORD *)(*(_QWORD *)&v105 + 16) = v2;
      *(_BYTE *)(*(_QWORD *)&v105 + 24) = v104;
      v11 = swift_allocObject(&unk_100467428, 25, 7);
      *(_QWORD *)(v11 + 16) = v2;
      *(_BYTE *)(v11 + 24) = v104;
      if (v104)
      {
        v106 = qword_100498DC8;
        v107 = v2;
        if (v106 != -1)
          swift_once(&qword_100498DC8, sub_100371034);
        v108 = (void *)qword_1004A16D8;
        objc_msgSend((id)qword_1004A16D8, "settlingDuration");
        v110 = v109;
        objc_msgSend(v108, "mass");
        v112 = v111;
        objc_msgSend(v108, "stiffness");
        v114 = v113;
        objc_msgSend(v108, "damping");
        v116 = v115;
        *(_QWORD *)&aBlock.tx = sub_100371DF4;
        aBlock.ty = v105;
        *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
        *(_QWORD *)&aBlock.b = 1107296256;
        *(_QWORD *)&aBlock.c = sub_1000BED80;
        *(_QWORD *)&aBlock.d = &unk_100467490;
        v117 = _Block_copy(&aBlock);
        v118 = aBlock.ty;
        swift_retain(*(_QWORD *)&v105);
        swift_release(*(_QWORD *)&v118);
        objc_msgSend(v9, "_animateUsingSpringWithDuration:delay:options:mass:stiffness:damping:initialVelocity:animations:completion:", 6, v117, 0, v110, 0.0, v112, v114, v116, 0.0);
        _Block_release(v117);
        if (qword_100498DD0 != -1)
          swift_once(&qword_100498DD0, sub_100371084);
        v119 = (void *)qword_1004A16E0;
        objc_msgSend((id)qword_1004A16E0, "settlingDuration");
        v121 = v120;
        objc_msgSend(v119, "mass");
        v123 = v122;
        objc_msgSend(v119, "stiffness");
        v125 = v124;
        objc_msgSend(v119, "damping");
        v127 = v126;
        *(_QWORD *)&aBlock.tx = sub_100371E00;
        *(_QWORD *)&aBlock.ty = v11;
        *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
        *(_QWORD *)&aBlock.b = 1107296256;
        v128 = &unk_1004674B8;
      }
      else
      {
        v159 = qword_100498DD8;
        v160 = v2;
        if (v159 != -1)
          swift_once(&qword_100498DD8, sub_1003710D4);
        v161 = (void *)qword_1004A16E8;
        objc_msgSend((id)qword_1004A16E8, "settlingDuration");
        v163 = v162;
        objc_msgSend(v161, "mass");
        v165 = v164;
        objc_msgSend(v161, "stiffness");
        v167 = v166;
        objc_msgSend(v161, "damping");
        v169 = v168;
        *(_QWORD *)&aBlock.tx = sub_100371DF4;
        aBlock.ty = v105;
        *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
        *(_QWORD *)&aBlock.b = 1107296256;
        *(_QWORD *)&aBlock.c = sub_1000BED80;
        *(_QWORD *)&aBlock.d = &unk_100467440;
        v170 = _Block_copy(&aBlock);
        v171 = aBlock.ty;
        swift_retain(*(_QWORD *)&v105);
        swift_release(*(_QWORD *)&v171);
        objc_msgSend(v9, "_animateUsingSpringWithDuration:delay:options:mass:stiffness:damping:initialVelocity:animations:completion:", 6, v170, 0, v163, 0.0, v165, v167, v169, 0.0);
        _Block_release(v170);
        if (qword_100498DE0 != -1)
          swift_once(&qword_100498DE0, sub_100371124);
        v172 = (void *)qword_1004A16F0;
        objc_msgSend((id)qword_1004A16F0, "settlingDuration");
        v121 = v173;
        objc_msgSend(v172, "mass");
        v123 = v174;
        objc_msgSend(v172, "stiffness");
        v125 = v175;
        objc_msgSend(v172, "damping");
        v127 = v176;
        *(_QWORD *)&aBlock.tx = sub_100371E00;
        *(_QWORD *)&aBlock.ty = v11;
        *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
        *(_QWORD *)&aBlock.b = 1107296256;
        v128 = &unk_100467468;
      }
      *(_QWORD *)&aBlock.c = sub_1000BED80;
      *(_QWORD *)&aBlock.d = v128;
      v177 = _Block_copy(&aBlock);
      v178 = aBlock.ty;
      swift_retain(v11);
      swift_release(*(_QWORD *)&v178);
      objc_msgSend(v9, "_animateUsingSpringWithDuration:delay:options:mass:stiffness:damping:initialVelocity:animations:completion:", 6, v177, 0, v121, 0.0, v123, v125, v127, 0.0);
      _Block_release(v177);
      v49 = v105;
      goto LABEL_69;
    }
    if ((v3 & 1) == 0)
    {
      if (qword_100498DB8 != -1)
        swift_once(&qword_100498DB8, sub_100370FA0);
      v67 = (void *)qword_1004A16C8;
      v68 = COERCE_DOUBLE(swift_allocObject(&unk_1004674F0, 24, 7));
      *(_QWORD *)(*(_QWORD *)&v68 + 16) = v2;
      v69 = v2;
      objc_msgSend(v67, "settlingDuration");
      v71 = v70;
      objc_msgSend(v67, "mass");
      v73 = v72;
      objc_msgSend(v67, "stiffness");
      v75 = v74;
      objc_msgSend(v67, "damping");
      v77 = v76;
      *(_QWORD *)&aBlock.tx = sub_100371E0C;
      aBlock.ty = v68;
      *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
      *(_QWORD *)&aBlock.b = 1107296256;
      *(_QWORD *)&aBlock.c = sub_1000BED80;
      *(_QWORD *)&aBlock.d = &unk_100467508;
      v78 = _Block_copy(&aBlock);
      v79 = aBlock.ty;
      swift_retain(*(_QWORD *)&v68);
      swift_release(*(_QWORD *)&v79);
      objc_msgSend(v9, "_animateUsingSpringWithDuration:delay:options:mass:stiffness:damping:initialVelocity:animations:completion:", 6, v78, 0, v71, 0.0, v73, v75, v77, 0.0);
      _Block_release(v78);
      swift_release(*(_QWORD *)&v68);
    }
    if (qword_100498DC0 != -1)
      swift_once(&qword_100498DC0, sub_100370FEC);
    v80 = qword_1004A16D0;
    v81 = COERCE_DOUBLE(swift_allocObject(&unk_100467540, 32, 7));
    *(_BYTE *)(*(_QWORD *)&v81 + 16) = v66;
    *(_QWORD *)(*(_QWORD *)&v81 + 24) = v2;
    v82 = (void *)objc_opt_self(CATransaction);
    v83 = v2;
    objc_msgSend(v82, "begin");
    objc_msgSend(v82, "setAnimationTimingFunction:", v80);
    *(_QWORD *)&aBlock.tx = sub_100371E38;
    aBlock.ty = v81;
    *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
    *(_QWORD *)&aBlock.b = 1107296256;
    *(_QWORD *)&aBlock.c = sub_1000BED80;
    *(_QWORD *)&aBlock.d = &unk_100467558;
    v84 = _Block_copy(&aBlock);
    v85 = aBlock.ty;
    swift_retain(*(_QWORD *)&v81);
    swift_release(*(_QWORD *)&v85);
    v86 = 0.0;
    if (v66)
    {
      v87 = 0.6;
    }
    else
    {
      v86 = 0.1;
      v87 = 0.7;
    }
    objc_msgSend(v9, "animateWithDuration:delay:options:animations:completion:", 2, v84, 0, 0.75, v86);
    _Block_release(v84);
    objc_msgSend(v82, "commit");
    swift_release(*(_QWORD *)&v81);
    v88 = sub_1000087DC(0, (unint64_t *)&qword_100499FB0, OS_dispatch_queue_ptr);
    v96 = (void *)static OS_dispatch_queue.main.getter(v88, v89, v90, v91, v92, v93, v94, v95);
    v97 = swift_allocObject(&unk_100467590, 24, 7);
    *(_QWORD *)(v97 + 16) = v83;
    v98 = v83;
    OS_dispatch_queue.asyncAfter(_:block:)((uint64_t)sub_100371E44, v97, v87);

    swift_release(v97);
    if (!v66)
    {
      v99 = COERCE_DOUBLE(swift_allocObject(&unk_1004675B8, 24, 7));
      *(_QWORD *)(*(_QWORD *)&v99 + 16) = v98;
      *(_QWORD *)&aBlock.tx = sub_100371E68;
      aBlock.ty = v99;
      *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
      *(_QWORD *)&aBlock.b = 1107296256;
      *(_QWORD *)&aBlock.c = sub_1000BED80;
      *(_QWORD *)&aBlock.d = &unk_1004675D0;
      v100 = _Block_copy(&aBlock);
      v101 = aBlock.ty;
      v102 = v98;
      swift_release(*(_QWORD *)&v101);
      objc_msgSend(v9, "animateWithDuration:delay:options:animations:completion:", 0, v100, 0, 0.25, 0.7);
      _Block_release(v100);
    }
  }
  else
  {
    objc_msgSend(v1, "invalidateIntrinsicContentSize");
    objc_msgSend(v1, "setNeedsUpdateConstraints");
    v50 = objc_msgSend(v1, "superview");
    objc_msgSend(v50, "setNeedsLayout");

    v51 = objc_msgSend(v1, "superview");
    objc_msgSend(v51, "layoutIfNeeded");

    objc_msgSend(v1, "updateConstraintsIfNeeded");
    v52 = 1.0;
    v53 = 1.0;
    if ((v1[v6] & 1) != 0)
    {
      v54 = (uint64_t *)&v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_interactionScaleFactor];
      swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_interactionScaleFactor], v179, 0, 0);
      if (*((_BYTE *)v54 + 8) == 1)
      {
        if (qword_100498D70 != -1)
          swift_once(&qword_100498D70, sub_100370E08);
        v54 = &qword_1004A1668;
      }
      v53 = *(double *)v54;
    }
    if ((v1[v6] & 1) != 0)
    {
      v55 = (uint64_t *)&v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_interactionScaleFactor];
      swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_interactionScaleFactor], v180, 0, 0);
      if (*((_BYTE *)v55 + 8) == 1)
      {
        if (qword_100498D70 != -1)
          swift_once(&qword_100498D70, sub_100370E08);
        v55 = &qword_1004A1668;
      }
      v52 = *(double *)v55;
    }
    CGAffineTransformMakeScale(&aBlock, v53, v52);
    v56 = *(_OWORD *)&aBlock.c;
    v57 = *(_OWORD *)&aBlock.tx;
    v58 = &v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_growTransform];
    *(_OWORD *)v58 = *(_OWORD *)&aBlock.a;
    *((_OWORD *)v58 + 1) = v56;
    *((_OWORD *)v58 + 2) = v57;
    v59 = sub_10036AF48();
    v60 = *((_OWORD *)v58 + 1);
    *(_OWORD *)&aBlock.a = *(_OWORD *)v58;
    *(_OWORD *)&aBlock.c = v60;
    *(_OWORD *)&aBlock.tx = *((_OWORD *)v58 + 2);
    objc_msgSend(v59, "setTransform:", &aBlock);

    sub_10036BDD8();
    LOBYTE(aBlock.a) = 1;
    sub_10036BB94(0x100000000);
    v61 = sub_10036B5AC();
    v62 = v1[v6];
    v63 = objc_msgSend(v1, "traitCollection");
    v64 = v63;
    if (v62 == 2)
    {

      v65 = 0.0;
    }
    else if ((v62 & 1) != 0)
    {

      v65 = 1.0;
    }
    else
    {
      v103 = objc_msgSend(v63, "accessibilityContrast");

      v65 = 0.5;
      if (v103 == (id)1)
        v65 = 1.0;
    }
    objc_msgSend(v61, "setAlpha:", v65);

    v129 = sub_10036AE98();
    v130 = 12.0;
    if (*((_BYTE *)v2 + v6) == 2)
      v130 = 10.0;
    static UIView.Corner.value(_:continuous:)(1, v130);
    v131 = type metadata accessor for UIView.Corner(0);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v131 - 8) + 56))(v5, 0, 1, v131);
    UIView.corner.setter(v5);

    v132 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
    UIView.Shadow.init(color:opacity:radius:offset:)((uint64_t)v132, (uint64_t)&aBlock, 0.0, 0.0, 0.0, 0.0);
    UIView.shadow.setter((uint64_t)&aBlock);
  }
}

void sub_10036EDDC(char *a1, char a2)
{
  uint64_t v4;
  _BYTE *v5;
  id v6;
  id v7;
  uint64_t v8;
  CGFloat v9;
  CGFloat v10;
  uint64_t *v11;
  uint64_t *v12;
  __int128 v13;
  __int128 v14;
  char *v15;
  id v16;
  __int128 v17;
  id v18;
  double v19;
  uint64_t v20;
  id v21;
  int v22;
  id v23;
  void *v24;
  double v25;
  id v26;
  _BYTE v27[24];
  char v28[24];
  CGAffineTransform v29;

  sub_100005574(&qword_1004A1050);
  __chkstk_darwin();
  v5 = &v27[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  objc_msgSend(a1, "invalidateIntrinsicContentSize");
  objc_msgSend(a1, "setNeedsUpdateConstraints");
  v6 = objc_msgSend(a1, "superview");
  objc_msgSend(v6, "setNeedsLayout");

  v7 = objc_msgSend(a1, "superview");
  objc_msgSend(v7, "layoutIfNeeded");

  objc_msgSend(a1, "updateConstraintsIfNeeded");
  v8 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode;
  v9 = 1.0;
  v10 = 1.0;
  if ((a1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode] & 1) != 0)
  {
    v11 = (uint64_t *)&a1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_interactionScaleFactor];
    swift_beginAccess(&a1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_interactionScaleFactor], v27, 0, 0);
    if (*((_BYTE *)v11 + 8) == 1)
    {
      if (qword_100498D70 != -1)
        swift_once(&qword_100498D70, sub_100370E08);
      v11 = &qword_1004A1668;
    }
    v10 = *(double *)v11;
  }
  if ((a1[v8] & 1) != 0)
  {
    v12 = (uint64_t *)&a1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_interactionScaleFactor];
    swift_beginAccess(&a1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_interactionScaleFactor], v28, 0, 0);
    if (*((_BYTE *)v12 + 8) == 1)
    {
      if (qword_100498D70 != -1)
        swift_once(&qword_100498D70, sub_100370E08);
      v12 = &qword_1004A1668;
    }
    v9 = *(double *)v12;
  }
  CGAffineTransformMakeScale(&v29, v10, v9);
  v13 = *(_OWORD *)&v29.c;
  v14 = *(_OWORD *)&v29.tx;
  v15 = &a1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_growTransform];
  *(_OWORD *)v15 = *(_OWORD *)&v29.a;
  *((_OWORD *)v15 + 1) = v13;
  *((_OWORD *)v15 + 2) = v14;
  v16 = sub_10036AF48();
  v17 = *((_OWORD *)v15 + 1);
  *(_OWORD *)&v29.a = *(_OWORD *)v15;
  *(_OWORD *)&v29.c = v17;
  *(_OWORD *)&v29.tx = *((_OWORD *)v15 + 2);
  objc_msgSend(v16, "setTransform:", &v29);

  v18 = sub_10036AE98();
  v19 = 12.0;
  if (a1[v8] == 2)
    v19 = 10.0;
  static UIView.Corner.value(_:continuous:)(1, v19);
  v20 = type metadata accessor for UIView.Corner(0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v5, 0, 1, v20);
  UIView.corner.setter(v5);

  if ((a2 & 1) != 0)
  {
    LOBYTE(v29.a) = 1;
    sub_10036BB94(0x100000000);
    v21 = sub_10036B5AC();
    v22 = a1[v8];
    v23 = objc_msgSend(a1, "traitCollection");
    v24 = v23;
    if (v22 == 2)
    {

      v25 = 0.0;
    }
    else if ((v22 & 1) != 0)
    {

      v25 = 1.0;
    }
    else
    {
      v26 = objc_msgSend(v23, "accessibilityContrast");

      v25 = 0.5;
      if (v26 == (id)1)
        v25 = 1.0;
    }
    objc_msgSend(v21, "setAlpha:", v25);

    sub_10036BDD8();
  }
  else
  {
    LOBYTE(v29.a) = 0;
    sub_10036BB94(1065353216);
  }
  sub_10036B174();
}

void sub_10036F13C()
{
  id v0;
  _BYTE v1[40];

  v0 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
  UIView.Shadow.init(color:opacity:radius:offset:)((uint64_t)v0, (uint64_t)v1, 0.3, 9.0, 0.0, 5.0);
  UIView.shadow.setter((uint64_t)v1);
}

void sub_10036F1A8(unsigned __int8 *a1)
{
  id v2;
  int v3;
  id v4;
  void *v5;
  double v6;
  id v7;
  id v8;
  _BYTE v9[40];

  v2 = sub_10036B5AC();
  v3 = a1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode];
  v4 = objc_msgSend(a1, "traitCollection");
  v5 = v4;
  if (v3 == 2)
  {

    v6 = 0.0;
  }
  else if ((v3 & 1) != 0)
  {

    v6 = 1.0;
  }
  else
  {
    v7 = objc_msgSend(v4, "accessibilityContrast");

    v6 = 0.5;
    if (v7 == (id)1)
      v6 = 1.0;
  }
  objc_msgSend(v2, "setAlpha:", v6);

  sub_10036BDD8();
  v8 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  UIView.Shadow.init(color:opacity:radius:offset:)((uint64_t)v8, (uint64_t)v9, 0.0, 0.0, 0.0, 0.0);
  UIView.shadow.setter((uint64_t)v9);
}

double sub_10036F2A8(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  uint64_t v8;
  double result;
  _QWORD v10[5];
  uint64_t v11;

  if (qword_100498DB0 != -1)
    swift_once(&qword_100498DB0, sub_100370F58);
  v2 = qword_1004A16C0;
  v3 = swift_allocObject(&unk_100467748, 24, 7);
  *(_QWORD *)(v3 + 16) = a1;
  v4 = (void *)objc_opt_self(CATransaction);
  v5 = a1;
  objc_msgSend(v4, "begin");
  objc_msgSend(v4, "setAnimationTimingFunction:", v2);
  v6 = (void *)objc_opt_self(UIView);
  v10[4] = sub_100371E94;
  v11 = v3;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_1000BED80;
  v10[3] = &unk_100467760;
  v7 = _Block_copy(v10);
  v8 = v11;
  swift_retain(v3);
  swift_release(v8);
  objc_msgSend(v6, "animateWithDuration:delay:options:animations:completion:", 2, v7, 0, 0.85, 0.0);
  _Block_release(v7);
  objc_msgSend(v4, "commit");
  *(_QWORD *)&result = swift_release(v3).n128_u64[0];
  return result;
}

void sub_10036F414(uint64_t a1)
{
  id v2;
  id v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  _OWORD *v12;
  double v13;
  double v14;
  double v15;
  double v16;
  __int128 v17;

  v2 = sub_10036B5AC();
  v3 = sub_10036B484();
  objc_msgSend(v3, "bounds");
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;

  objc_msgSend(v2, "setFrame:", v5, v7, v9, v11);
  if (qword_100498D68 != -1)
    swift_once(&qword_100498D68, sub_1003705DC);
  v12 = (_OWORD *)(a1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange);
  v13 = *(double *)(a1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange);
  v14 = *(double *)(a1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange + 8);
  v15 = *(double *)(a1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange + 16);
  v16 = *(double *)(a1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange + 24);
  v17 = *(_OWORD *)&qword_1004A1658;
  *v12 = xmmword_1004A1648;
  v12[1] = v17;
  sub_10037062C(v13, v14, v15, v16);
}

void sub_10036F4EC(char a1, char *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  __int128 v11;
  id v12;
  int v13;
  id v14;
  void *v15;
  double v16;
  id v17;
  char *v18;
  id v19;
  __int128 v20;
  id v21;
  id v22;
  id v23;
  double v24;
  uint64_t v25;
  id v26;
  _OWORD v27[3];

  sub_100005574(&qword_1004A1050);
  __chkstk_darwin();
  v5 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
  {
    if (qword_100498D68 != -1)
      swift_once(&qword_100498D68, sub_1003705DC);
    v6 = &a2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange];
    v7 = *(double *)&a2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange];
    v8 = *(double *)&a2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange + 8];
    v9 = *(double *)&a2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange + 16];
    v10 = *(double *)&a2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange + 24];
    v11 = *(_OWORD *)&qword_1004A1658;
    *(_OWORD *)v6 = xmmword_1004A1648;
    *((_OWORD *)v6 + 1) = v11;
    sub_10037062C(v7, v8, v9, v10);
    LOBYTE(v27[0]) = 1;
    sub_10036BB94(0x100000000);
    v12 = sub_10036B5AC();
    v13 = a2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode];
    v14 = objc_msgSend(a2, "traitCollection");
    v15 = v14;
    if (v13 == 2)
    {

      v16 = 0.0;
    }
    else if ((v13 & 1) != 0)
    {

      v16 = 1.0;
    }
    else
    {
      v17 = objc_msgSend(v14, "accessibilityContrast");

      v16 = 0.5;
      if (v17 == (id)1)
        v16 = 1.0;
    }
    objc_msgSend(v12, "setAlpha:", v16);

  }
  v18 = &a2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_growTransform];
  *(_QWORD *)v18 = 0x3FF0000000000000;
  *((_QWORD *)v18 + 1) = 0;
  *((_QWORD *)v18 + 2) = 0;
  *((_QWORD *)v18 + 3) = 0x3FF0000000000000;
  *((_QWORD *)v18 + 4) = 0;
  *((_QWORD *)v18 + 5) = 0;
  v19 = sub_10036AF48();
  v20 = *((_OWORD *)v18 + 1);
  v27[0] = *(_OWORD *)v18;
  v27[1] = v20;
  v27[2] = *((_OWORD *)v18 + 2);
  objc_msgSend(v19, "setTransform:", v27);

  objc_msgSend(a2, "invalidateIntrinsicContentSize");
  objc_msgSend(a2, "setNeedsUpdateConstraints");
  v21 = objc_msgSend(a2, "superview");
  objc_msgSend(v21, "setNeedsLayout");

  v22 = objc_msgSend(a2, "superview");
  objc_msgSend(v22, "layoutIfNeeded");

  objc_msgSend(a2, "updateConstraintsIfNeeded");
  v23 = sub_10036AE98();
  v24 = 12.0;
  if (a2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode] == 2)
    v24 = 10.0;
  static UIView.Corner.value(_:continuous:)(1, v24);
  v25 = type metadata accessor for UIView.Corner(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v5, 0, 1, v25);
  UIView.corner.setter(v5);

  v26 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  UIView.Shadow.init(color:opacity:radius:offset:)((uint64_t)v26, (uint64_t)v27, 0.0, 0.0, 0.0, 0.0);
  UIView.shadow.setter((uint64_t)v27);
}

void sub_10036F7CC(unsigned __int8 *a1)
{
  int v2;
  id v3;
  void *v4;
  double v5;
  id v6;
  id v7;

  v7 = sub_10036B5AC();
  v2 = a1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode];
  v3 = objc_msgSend(a1, "traitCollection");
  v4 = v3;
  if (v2 == 2)
  {

    v5 = 0.0;
  }
  else if ((v2 & 1) != 0)
  {

    v5 = 1.0;
  }
  else
  {
    v6 = objc_msgSend(v3, "accessibilityContrast");

    v5 = 0.5;
    if (v6 == (id)1)
      v5 = 1.0;
  }
  objc_msgSend(v7, "setAlpha:", v5);

}

void sub_10036F888(uint64_t a1, char a2)
{
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  CGFloat v7;
  CGFloat v8;
  uint64_t *v9;
  uint64_t *v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  id v14;
  __int128 v15;
  id v16;
  double v17;
  uint64_t v18;
  _OWORD *v19;
  double v20;
  double v21;
  double v22;
  double v23;
  __int128 v24;
  _BYTE v25[24];
  _BYTE v26[24];
  CGAffineTransform v27;

  sub_100005574(&qword_1004A1050);
  __chkstk_darwin();
  v5 = &v25[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode;
  v7 = 1.0;
  v8 = 1.0;
  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode) & 1) != 0)
  {
    v9 = (uint64_t *)(a1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_interactionScaleFactor);
    swift_beginAccess(a1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_interactionScaleFactor, v25, 0, 0);
    if (*((_BYTE *)v9 + 8) == 1)
    {
      if (qword_100498D70 != -1)
        swift_once(&qword_100498D70, sub_100370E08);
      v9 = &qword_1004A1668;
    }
    v8 = *(double *)v9;
  }
  if ((*(_BYTE *)(a1 + v6) & 1) != 0)
  {
    v10 = (uint64_t *)(a1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_interactionScaleFactor);
    swift_beginAccess(a1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_interactionScaleFactor, v26, 0, 0);
    if (*((_BYTE *)v10 + 8) == 1)
    {
      if (qword_100498D70 != -1)
        swift_once(&qword_100498D70, sub_100370E08);
      v10 = &qword_1004A1668;
    }
    v7 = *(double *)v10;
  }
  CGAffineTransformMakeScale(&v27, v8, v7);
  v11 = *(_OWORD *)&v27.c;
  v12 = *(_OWORD *)&v27.tx;
  v13 = (_OWORD *)(a1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_growTransform);
  *v13 = *(_OWORD *)&v27.a;
  v13[1] = v11;
  v13[2] = v12;
  v14 = sub_10036AF48();
  v15 = v13[1];
  *(_OWORD *)&v27.a = *v13;
  *(_OWORD *)&v27.c = v15;
  *(_OWORD *)&v27.tx = v13[2];
  objc_msgSend(v14, "setTransform:", &v27);

  v16 = sub_10036AE98();
  v17 = 12.0;
  if (*(_BYTE *)(a1 + v6) == 2)
    v17 = 10.0;
  static UIView.Corner.value(_:continuous:)(1, v17);
  v18 = type metadata accessor for UIView.Corner(0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v5, 0, 1, v18);
  UIView.corner.setter(v5);

  if ((a2 & 1) == 0)
  {
    if (qword_100498D68 != -1)
      swift_once(&qword_100498D68, sub_1003705DC);
    v19 = (_OWORD *)(a1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange);
    v20 = *(double *)(a1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange);
    v21 = *(double *)(a1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange + 8);
    v22 = *(double *)(a1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange + 16);
    v23 = *(double *)(a1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange + 24);
    v24 = *(_OWORD *)&qword_1004A1658;
    *v19 = xmmword_1004A1648;
    v19[1] = v24;
    sub_10037062C(v20, v21, v22, v23);
  }
}

void sub_10036FAEC(unsigned __int8 *a1, char a2)
{
  id v4;
  int v5;
  id v6;
  void *v7;
  double v8;
  id v9;
  void *v10;
  id v11;
  double v12;
  double v13;
  double v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;

  LOBYTE(v18) = 1;
  sub_10036BB94(0x100000000);
  v4 = sub_10036B5AC();
  v5 = a1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode];
  v6 = objc_msgSend(a1, "traitCollection");
  v7 = v6;
  if (v5 == 2)
  {

    v8 = 0.0;
  }
  else if ((v5 & 1) != 0)
  {

    v8 = 1.0;
  }
  else
  {
    v9 = objc_msgSend(v6, "accessibilityContrast");

    v8 = 0.5;
    if (v9 == (id)1)
      v8 = 1.0;
  }
  objc_msgSend(v4, "setAlpha:", v8);

  v10 = (void *)objc_opt_self(UIColor);
  if ((a2 & 1) != 0)
  {
    v11 = objc_msgSend(v10, "blackColor");
    v12 = 0.3;
    v13 = 9.0;
    v14 = 5.0;
  }
  else
  {
    v11 = objc_msgSend(v10, "clearColor");
    v12 = 0.0;
    v13 = 0.0;
    v14 = 0.0;
  }
  UIView.Shadow.init(color:opacity:radius:offset:)((uint64_t)v11, (uint64_t)&v15, v12, v13, 0.0, v14);
  v18 = v15;
  v19 = v16;
  v20 = v17;
  UIView.shadow.setter((uint64_t)&v18);
}

uint64_t sub_10036FC5C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  char v3;
  int v4;

  v2 = *a1;
  v3 = v2 == 2;
  v4 = *a2;
  if (v4 != 2)
    v3 = 0;
  if (v2 != 2 && v4 != 2)
    v3 = ((v2 & 1) == 0) ^ v4;
  return v3 & 1;
}

void sub_10036FC94()
{
  qword_1004A1640 = 0x4024000000000000;
}

uint64_t sub_10036FCA4(uint64_t result, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE v5[24];

  if (*(_BYTE *)(result + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode) != 2)
  {
    v2 = (uint64_t *)(a2 + OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_stateName);
    swift_beginAccess(a2 + OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_stateName, v5, 1, 0);
    v3 = *v2;
    v4 = v2[1];
    *(_OWORD *)v2 = xmmword_100395530;
    sub_100243D3C(v3, v4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

Swift::Void __swiftcall VerticalToggleSlider.didMoveToWindow()()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  NSString *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  objc_super v11;

  v1 = v0;
  v11.receiver = v0;
  v11.super_class = (Class)type metadata accessor for VerticalToggleSlider();
  objc_msgSendSuper2(&v11, "didMoveToWindow");
  v2 = objc_msgSend(v0, "window");
  if (v2 && (v3 = v2, v4 = objc_msgSend(v2, "windowScene"), v3, v4))
  {
    v5 = swift_allocObject(&unk_100467088, 24, 7);
    swift_unknownObjectWeakInit(v5 + 16);
    v6 = type metadata accessor for NotificationObserver();
    swift_allocObject(v6, 64, 7);
    v7 = UISceneDidActivateNotification;
    v8 = v4;
    v9 = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(v7, (uint64_t)v4, 1, 1, (uint64_t)sub_1003718E8, v5);
    v10 = *(_QWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_sceneActivationObserver];
    *(_QWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_sceneActivationObserver] = v9;

  }
  else
  {
    v10 = *(_QWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_sceneActivationObserver];
    *(_QWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_sceneActivationObserver] = 0;
  }
  swift_release(v10);
}

void sub_10036FE60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_10036BDD8();

  }
}

id sub_10036FEF0(void *a1, uint64_t a2, SEL *a3)
{
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for VerticalToggleSlider();
  return objc_msgSendSuper2(&v5, *a3);
}

id VerticalToggleSlider.isHighlighted.getter()
{
  return sub_10036FF38((SEL *)&selRef_isHighlighted);
}

id sub_10036FF38(SEL *a1)
{
  void *v1;
  objc_super v4;

  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for VerticalToggleSlider();
  return objc_msgSendSuper2(&v4, *a1);
}

void sub_10036FF8C(void *a1, uint64_t a2, uint64_t a3, const char **a4, SEL *a5, void (*a6)(id))
{
  objc_class *v11;
  const char *v12;
  id v13;
  id v14;
  objc_super v15;
  objc_super v16;

  v11 = (objc_class *)type metadata accessor for VerticalToggleSlider();
  v16.receiver = a1;
  v16.super_class = v11;
  v12 = *a4;
  v13 = a1;
  v14 = objc_msgSendSuper2(&v16, v12);
  v15.receiver = v13;
  v15.super_class = v11;
  objc_msgSendSuper2(&v15, *a5, a3);
  a6(v14);

}

uint64_t VerticalToggleSlider.isHighlighted.setter(char a1)
{
  return sub_100370038(a1, (SEL *)&selRef_isHighlighted, (SEL *)&selRef_setHighlighted_, (uint64_t (*)(id))sub_1003700B0);
}

uint64_t sub_100370038(char a1, SEL *a2, SEL *a3, uint64_t (*a4)(id))
{
  void *v4;
  objc_class *v9;
  id v10;
  objc_super v12;
  objc_super v13;

  v9 = (objc_class *)type metadata accessor for VerticalToggleSlider();
  v13.receiver = v4;
  v13.super_class = v9;
  v10 = objc_msgSendSuper2(&v13, *a2);
  v12.receiver = v4;
  v12.super_class = v9;
  objc_msgSendSuper2(&v12, *a3, a1 & 1);
  return a4(v10);
}

void sub_1003700B0(char a1)
{
  void *v1;
  void *v2;
  CGFloat v3;
  void *v4;
  char *v5;
  void *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  void *v15;
  CGFloat ty;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  void *v20;
  id v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  CGAffineTransform v25;

  v2 = v1;
  if (objc_msgSend(v1, "isHighlighted") != (a1 & 1))
  {
    v3 = COERCE_DOUBLE(swift_allocObject(&unk_100467388, 24, 7));
    *(_QWORD *)(*(_QWORD *)&v3 + 16) = v1;
    v4 = (void *)objc_opt_self(UIView);
    v5 = v2;
    if (objc_msgSend(v4, "areAnimationsEnabled"))
    {
      if (qword_100498D98 != -1)
        swift_once(&qword_100498D98, sub_100370E70);
      v6 = (void *)qword_1004A16A8;
      objc_msgSend((id)qword_1004A16A8, "settlingDuration");
      v8 = v7;
      objc_msgSend(v6, "mass");
      v10 = v9;
      objc_msgSend(v6, "stiffness");
      v12 = v11;
      objc_msgSend(v6, "damping");
      v14 = v13;
      *(_QWORD *)&v25.tx = sub_100371DC8;
      v25.ty = v3;
      *(_QWORD *)&v25.a = _NSConcreteStackBlock;
      *(_QWORD *)&v25.b = 1107296256;
      *(_QWORD *)&v25.c = sub_1000BED80;
      *(_QWORD *)&v25.d = &unk_1004673A0;
      v15 = _Block_copy(&v25);
      ty = v25.ty;
      swift_retain(*(_QWORD *)&v3);
      swift_release(*(_QWORD *)&ty);
      objc_msgSend(v4, "_animateUsingSpringWithDuration:delay:options:mass:stiffness:damping:initialVelocity:animations:completion:", 6, v15, 0, v8, 0.0, v10, v12, v14, 0.0);
      _Block_release(v15);
LABEL_12:
      swift_release(*(_QWORD *)&v3);
      return;
    }
    if (objc_msgSend(v5, "isHighlighted"))
    {
      CGAffineTransformMakeScale(&v25, 0.95, 0.95);
      v18 = *(_OWORD *)&v25.a;
      v17 = *(_OWORD *)&v25.c;
      v19 = *(_OWORD *)&v25.tx;
    }
    else
    {
      v17 = xmmword_100384BD0;
      v18 = xmmword_1003952A0;
      v19 = 0uLL;
    }
    *(_OWORD *)&v25.a = v18;
    *(_OWORD *)&v25.c = v17;
    *(_OWORD *)&v25.tx = v19;
    objc_msgSend(v5, "setTransform:", &v25);
    v20 = *(void **)&v5[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageView];
    if (!v20)
      goto LABEL_12;
    v21 = v20;
    if ((objc_msgSend(v5, "isHighlighted") & 1) != 0)
    {
      CGAffineTransformMakeScale(&v25, 0.9, 0.9);
      v23 = *(_OWORD *)&v25.a;
      v22 = *(_OWORD *)&v25.c;
      v24 = *(_OWORD *)&v25.tx;
    }
    else
    {
      v22 = xmmword_100384BD0;
      v23 = xmmword_1003952A0;
      v24 = 0uLL;
    }
    *(_OWORD *)&v25.a = v23;
    *(_OWORD *)&v25.c = v22;
    *(_OWORD *)&v25.tx = v24;
    objc_msgSend(v21, "setTransform:", &v25);
    swift_release(*(_QWORD *)&v3);

  }
}

void sub_100370360(char *a1)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  void *v5;
  id v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  CGAffineTransform v10;

  if (objc_msgSend(a1, "isHighlighted"))
  {
    CGAffineTransformMakeScale(&v10, 0.95, 0.95);
    v3 = *(_OWORD *)&v10.a;
    v2 = *(_OWORD *)&v10.c;
    v4 = *(_OWORD *)&v10.tx;
  }
  else
  {
    v2 = xmmword_100384BD0;
    v3 = xmmword_1003952A0;
    v4 = 0uLL;
  }
  *(_OWORD *)&v10.a = v3;
  *(_OWORD *)&v10.c = v2;
  *(_OWORD *)&v10.tx = v4;
  objc_msgSend(a1, "setTransform:", &v10);
  v5 = *(void **)&a1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageView];
  if (v5)
  {
    v6 = v5;
    if (objc_msgSend(a1, "isHighlighted"))
    {
      CGAffineTransformMakeScale(&v10, 0.9, 0.9);
      v8 = *(_OWORD *)&v10.a;
      v7 = *(_OWORD *)&v10.c;
      v9 = *(_OWORD *)&v10.tx;
    }
    else
    {
      v7 = xmmword_100384BD0;
      v8 = xmmword_1003952A0;
      v9 = 0uLL;
    }
    *(_OWORD *)&v10.a = v8;
    *(_OWORD *)&v10.c = v7;
    *(_OWORD *)&v10.tx = v9;
    objc_msgSend(v6, "setTransform:", &v10);

  }
}

void sub_100370468(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  unsigned __int8 *v4;
  _BYTE *v5;
  double v6;
  int v7;
  uint64_t v8;
  _BYTE v9[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (unsigned __int8 *)Strong;
    v5 = (_BYTE *)(Strong + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_isTapToToggleEnabled);
    *(_QWORD *)&v6 = swift_beginAccess(Strong + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_isTapToToggleEnabled, &v8, 0, 0).n128_u64[0];
    if (*v5 == 1)
    {
      objc_msgSend(v4, "sendActionsForControlEvents:", 0x10000, v6);
      v7 = v4[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode];
      v4[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode] = 2 * (v7 != 2);
      sub_10036DCEC(v7);
      objc_msgSend(v4, "sendActionsForControlEvents:", 4096);
      objc_msgSend(v4, "sendActionsForControlEvents:", 0x40000);
    }

  }
}

double sub_1003705DC()
{
  double result;

  result = 0.0;
  xmmword_1004A1648 = 0u;
  *(_OWORD *)&qword_1004A1658 = 0u;
  return result;
}

BOOL sub_1003705F0(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2] && a1[3] == a2[3];
}

void sub_10037062C(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  _BYTE *v5;
  uint64_t v10;
  char *v11;
  float64x2_t *v12;
  id v16;
  double v17;
  uint64_t v18;
  float64x2_t v19;
  float64x2_t v20;
  void *v21;
  uint64_t v22;
  CGFloat v23;
  void *v24;
  CGFloat ty;
  char *v26;
  __n128 v27;
  char isEscapingClosureAtFileLocation;
  id v29;
  double v30;
  CGFloat v31;
  double v32;
  CGFloat v33;
  double v34;
  CGFloat v35;
  double v36;
  CGFloat v37;
  CGFloat v38;
  id v39;
  double v40;
  CGFloat v41;
  double v42;
  CGFloat v43;
  double v44;
  CGFloat v45;
  double v46;
  CGFloat v47;
  CGFloat v48;
  id v49;
  double v50;
  CGFloat v51;
  double v52;
  CGFloat v53;
  double v54;
  CGFloat v55;
  double v56;
  CGFloat v57;
  CGFloat v58;
  id v59;
  double v60;
  CGFloat v61;
  double v62;
  CGFloat v63;
  double v64;
  CGFloat v65;
  double v66;
  CGFloat v67;
  CGFloat Height;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  CGFloat v72;
  char *v73;
  id v74;
  uint64_t v75;
  void *v76;
  void *v77;
  id v78;
  double v79;
  double v80;
  double v81;
  double v82;
  double *v83;
  id v84;
  id v85;
  _QWORD *v86;
  id v87;
  __int128 v88;
  void *v89;
  __int128 v90;
  id v91;
  float64x2_t v92;
  float64x2_t v93;
  CGAffineTransform v94;
  CGAffineTransform v95;
  _OWORD v96[3];
  CGAffineTransform v97;
  CGAffineTransform aBlock;
  CGRect v99;
  CGRect v100;
  CGRect v101;
  CGRect v102;

  v5 = v4;
  sub_100005574(&qword_1004A1050);
  __chkstk_darwin();
  v11 = (char *)&v92 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (float64x2_t *)&v4[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange];
  if (*(double *)&v4[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange] != a1
    || *(double *)&v4[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange + 8] != a2
    || *(double *)&v4[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange + 16] != a3
    || *(double *)&v4[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange + 24] != a4)
  {
    v16 = sub_10036AE98();
    v17 = 12.0;
    if (v5[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode] == 2)
      v17 = 10.0;
    static UIView.Corner.value(_:continuous:)(1, v17);
    v18 = type metadata accessor for UIView.Corner(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v11, 0, 1, v18);
    UIView.corner.setter(v11);

    v19 = *v12;
    v20 = v12[1];
    if (qword_100498D68 != -1)
    {
      v93 = *v12;
      v92 = v20;
      swift_once(&qword_100498D68, sub_1003705DC);
      v20 = v92;
      v19 = v93;
    }
    if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v19, (float64x2_t)xmmword_1004A1648), (int32x4_t)vceqq_f64(v20, *(float64x2_t *)&qword_1004A1658))), 0xFuLL))) & 1) != 0)
    {
      v78 = sub_10036AE98();
      objc_msgSend(v78, "anchorPoint");
      v80 = v79;
      v82 = v81;

      v83 = (double *)CGPoint.center.unsafeMutableAddressor();
      swift_beginAccess(v83, v96, 0, 0);
      if (v80 != *v83 || v82 != v83[1])
      {
        v84 = sub_10036AE98();
        swift_beginAccess(v83, &v95, 0, 0);
        objc_msgSend(v84, "setAnchorPoint:", *v83, v83[1]);

        v85 = sub_10036AE98();
        objc_msgSend(v5, "bounds");
        objc_msgSend(v85, "setFrame:");

      }
      v86 = &v5[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_stretchTransform];
      *v86 = 0x3FF0000000000000;
      v86[1] = 0;
      v86[2] = 0;
      v86[3] = 0x3FF0000000000000;
      v86[4] = 0;
      v86[5] = 0;
      v87 = sub_10036AE98();
      v88 = *((_OWORD *)v86 + 1);
      *(_OWORD *)&aBlock.a = *(_OWORD *)v86;
      *(_OWORD *)&aBlock.c = v88;
      *(_OWORD *)&aBlock.tx = *((_OWORD *)v86 + 2);
      objc_msgSend(v87, "setTransform:", &aBlock);

      v89 = *(void **)&v5[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageView];
      if (v89)
      {
        v90 = *((_OWORD *)v86 + 1);
        *(_OWORD *)&aBlock.a = *(_OWORD *)v86;
        *(_OWORD *)&aBlock.c = v90;
        *(_OWORD *)&aBlock.tx = *((_OWORD *)v86 + 2);
        CGAffineTransformInvert(&v97, &aBlock);
        aBlock = v97;
        objc_msgSend(v89, "setTransform:", &aBlock);
      }
      v91 = sub_10036AE98();
      objc_msgSend(v5, "bounds");
      objc_msgSend(v91, "setFrame:");

    }
    else
    {
      v21 = (void *)objc_opt_self(UIView);
      v22 = swift_allocObject(&unk_1004672E8, 24, 7);
      *(_QWORD *)(v22 + 16) = v5;
      v23 = COERCE_DOUBLE(swift_allocObject(&unk_100467310, 32, 7));
      *(_QWORD *)(*(_QWORD *)&v23 + 16) = sub_100371D40;
      *(_QWORD *)(*(_QWORD *)&v23 + 24) = v22;
      *(_QWORD *)&aBlock.tx = sub_1000B0290;
      aBlock.ty = v23;
      *(_QWORD *)&aBlock.a = _NSConcreteStackBlock;
      *(_QWORD *)&aBlock.b = 1107296256;
      *(_QWORD *)&aBlock.c = sub_100009BD0;
      *(_QWORD *)&aBlock.d = &unk_100467328;
      v24 = _Block_copy(&aBlock);
      ty = aBlock.ty;
      v26 = v5;
      swift_retain(*(_QWORD *)&v23);
      objc_msgSend(v21, "performWithoutAnimation:", v24, swift_release(*(_QWORD *)&ty).n128_f64[0]);
      _Block_release(v24);
      isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(*(_QWORD *)&v23, "", 129, 704, 48, 1, v27);
      swift_release(*(_QWORD *)&v23);
      if ((isEscapingClosureAtFileLocation & 1) != 0)
      {
        __break(1u);
      }
      else
      {
        v29 = sub_10036AF48();
        objc_msgSend(v29, "frame");
        v31 = v30;
        v33 = v32;
        v35 = v34;
        v37 = v36;

        v99.origin.x = v31;
        v99.origin.y = v33;
        v99.size.width = v35;
        v99.size.height = v37;
        v38 = CGRectGetWidth(v99) + v12->f64[1];
        v39 = sub_10036AF48();
        objc_msgSend(v39, "frame");
        v41 = v40;
        v43 = v42;
        v45 = v44;
        v47 = v46;

        v100.origin.x = v41;
        v100.origin.y = v43;
        v100.size.width = v45;
        v100.size.height = v47;
        v48 = v38 / CGRectGetWidth(v100);
        v49 = sub_10036AF48();
        objc_msgSend(v49, "frame");
        v51 = v50;
        v53 = v52;
        v55 = v54;
        v57 = v56;

        v101.origin.x = v51;
        v101.origin.y = v53;
        v101.size.width = v55;
        v101.size.height = v57;
        v58 = CGRectGetHeight(v101) + v12->f64[0];
        v59 = sub_10036AF48();
        objc_msgSend(v59, "frame");
        v61 = v60;
        v63 = v62;
        v65 = v64;
        v67 = v66;

        v102.origin.x = v61;
        v102.origin.y = v63;
        v102.size.width = v65;
        v102.size.height = v67;
        Height = CGRectGetHeight(v102);
        CGAffineTransformMakeScale(&aBlock, v48, v58 / Height);
        v69 = *(_OWORD *)&aBlock.a;
        v70 = *(_OWORD *)&aBlock.c;
        v71 = *(_OWORD *)&aBlock.tx;
        *(_OWORD *)&v97.a = *(_OWORD *)&aBlock.a;
        *(_OWORD *)&v97.c = *(_OWORD *)&aBlock.c;
        v72 = -v12[1].f64[1];
        *(_OWORD *)&v97.tx = *(_OWORD *)&aBlock.tx;
        CGAffineTransformMakeTranslation(&aBlock, 0.0, v72);
        static CGAffineTransform.+ infix(_:_:)(&v97, &aBlock, v96);
        v73 = &v26[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_stretchTransform];
        *(_OWORD *)v73 = v96[0];
        *((_OWORD *)v73 + 1) = v96[1];
        *((_OWORD *)v73 + 2) = v96[2];
        v74 = sub_10036AE98();
        v95 = *(CGAffineTransform *)v73;
        objc_msgSend(v74, "setTransform:", &v95);

        v75 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageView;
        v76 = *(void **)&v26[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageView];
        if (v76)
        {
          v95 = *(CGAffineTransform *)v73;
          CGAffineTransformInvert(&v94, &v95);
          v95 = v94;
          objc_msgSend(v76, "setTransform:", &v95);
          v77 = *(void **)&v26[v75];
          if (v77)
          {
            *(_OWORD *)&v95.a = v69;
            *(_OWORD *)&v95.c = v70;
            *(_OWORD *)&v95.tx = v71;
            CGAffineTransformInvert(&v94, &v95);
            v95 = v94;
            objc_msgSend(v77, "setTransform:", &v95);
          }
        }
        swift_release(v22);
      }
    }
  }
}

void sub_100370D20(char *a1)
{
  uint64_t *v2;
  double *v3;
  double v4;
  double v5;
  id v6;
  double v7;
  double v8;
  double v9;
  double v10;
  id v12;
  id v13;
  _BYTE v14[24];

  if (*(double *)&a1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange + 24] <= 0.0)
    v2 = CGPoint.topCenter.unsafeMutableAddressor();
  else
    v2 = CGPoint.bottomCenter.unsafeMutableAddressor();
  v3 = (double *)v2;
  swift_beginAccess(v2, v14, 0, 0);
  v5 = *v3;
  v4 = v3[1];
  v6 = sub_10036AE98();
  objc_msgSend(v6, "anchorPoint");
  v8 = v7;
  v10 = v9;

  if (v8 != v5 || v10 != v4)
  {
    v12 = sub_10036AE98();
    objc_msgSend(v12, "setAnchorPoint:", v5, v4);

    v13 = sub_10036AE98();
    objc_msgSend(a1, "bounds");
    objc_msgSend(v13, "setFrame:");

  }
}

void sub_100370E08()
{
  qword_1004A1668 = 0x4000000000000000;
}

void sub_100370E18()
{
  qword_1004A1670 = 0x4024000000000000;
}

int64x2_t sub_100370E28()
{
  int64x2_t result;

  result = vdupq_n_s64(0x4042000000000000uLL);
  xmmword_1004A1678 = (__int128)result;
  return result;
}

double sub_100370E40()
{
  double result;

  result = 36.0;
  xmmword_1004A1688 = xmmword_100395540;
  return result;
}

int64x2_t sub_100370E58()
{
  int64x2_t result;

  result = vdupq_n_s64(0x404A000000000000uLL);
  xmmword_1004A1698 = (__int128)result;
  return result;
}

id sub_100370E70()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 465.0, 21.0, 0.0, 0.0);
  qword_1004A16A8 = (uint64_t)result;
  return result;
}

id sub_100370EBC()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 300.0, 40.0, 0.0, 0.0);
  qword_1004A16B0 = (uint64_t)result;
  return result;
}

id sub_100370F0C()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 194.0, 24.0, 0.0, 0.0);
  qword_1004A16B8 = (uint64_t)result;
  return result;
}

id sub_100370F58()
{
  id v0;
  double v1;
  double v2;
  double v3;
  double v4;
  id result;

  v0 = objc_allocWithZone((Class)CAMediaTimingFunction);
  LODWORD(v1) = 1051931443;
  LODWORD(v2) = 0;
  LODWORD(v3) = 0.25;
  LODWORD(v4) = 1.0;
  result = objc_msgSend(v0, "initWithControlPoints::::", v1, v2, v3, v4);
  qword_1004A16C0 = (uint64_t)result;
  return result;
}

id sub_100370FA0()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 158.0, 25.0, 0.0, 0.0);
  qword_1004A16C8 = (uint64_t)result;
  return result;
}

id sub_100370FEC()
{
  id v0;
  double v1;
  double v2;
  double v3;
  double v4;
  id result;

  v0 = objc_allocWithZone((Class)CAMediaTimingFunction);
  LODWORD(v1) = 1051931443;
  LODWORD(v2) = 1.0;
  LODWORD(v3) = 0;
  LODWORD(v4) = 1.0;
  result = objc_msgSend(v0, "initWithControlPoints::::", v2, v3, v1, v4);
  qword_1004A16D0 = (uint64_t)result;
  return result;
}

id sub_100371034()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 288.0, 26.5, 0.0, 0.0);
  qword_1004A16D8 = (uint64_t)result;
  return result;
}

id sub_100371084()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 300.0, 40.0, 0.0, 0.0);
  qword_1004A16E0 = (uint64_t)result;
  return result;
}

id sub_1003710D4()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 2.0, 500.0, 40.0, 0.0, 0.0);
  qword_1004A16E8 = (uint64_t)result;
  return result;
}

id sub_100371124()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 300.0, 40.0, 0.0, 0.0);
  qword_1004A16F0 = (uint64_t)result;
  return result;
}

id VerticalToggleSlider.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VerticalToggleSlider();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void VerticalToggleSlider.accessibilitySetSliderValue(_:)(double a1)
{
  uint64_t v1;
  float v2;
  float v3;
  float v4;

  v2 = *(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__minValue);
  v3 = *(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__maxValue);
  if (v2 > v3)
  {
    __break(1u);
  }
  else
  {
    v4 = a1;
    if (v2 > v4)
      v4 = *(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__minValue);
    if (v3 < v4)
      v4 = *(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__maxValue);
    sub_10036B000(*(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValueRange)+ (float)((float)((float)(v4 - v2) / (float)(v3 - v2))* (float)(*(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValueRange + 4)- *(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValueRange))));
    sub_10036CB18();
  }
}

uint64_t type metadata accessor for VerticalToggleSlider()
{
  return objc_opt_self(_TtC11MusicCoreUI20VerticalToggleSlider);
}

uint64_t sub_1003713F0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100371414(uint64_t a1)
{
  uint64_t v1;

  sub_100370468(a1, v1);
}

void sub_10037141C()
{
  sub_10036B174();
}

void sub_10037143C(char *a1)
{
  id v2;
  char *v3;
  double v4;
  id v5;
  double v6;
  double v7;
  double v8;
  double v9;
  char v10[24];

  v2 = sub_10036AF48();
  v3 = &a1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_growAnchorPoint];
  *(_QWORD *)&v4 = swift_beginAccess(&a1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_growAnchorPoint], v10, 0, 0).n128_u64[0];
  LOBYTE(v3) = *v3;
  v5 = objc_msgSend(a1, "traitCollection", v4);
  sub_10036D250(v5, (char)v3);
  v7 = v6;
  v9 = v8;

  objc_msgSend(v2, "setAnchorPoint:", v7, v9);
}

void _s11MusicCoreUI20VerticalToggleSliderC5coderACSgSo7NSCoderC_tcfc_0()
{
  _BYTE *v0;
  _OWORD *v1;
  uint64_t v2;
  double v3;
  float v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _OWORD *v9;
  __int128 v10;
  _QWORD *v11;
  _QWORD *v12;

  v1 = &v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageDefinition];
  *v1 = 0u;
  v1[1] = 0u;
  v1[2] = 0u;
  v1[3] = 0u;
  v1[4] = 0u;
  v2 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_minLevelOffsetRatio;
  if (qword_100498D88 != -1)
    swift_once(&qword_100498D88, sub_100370E40);
  v3 = 1.0 / *((double *)&xmmword_1004A1688 + 1);
  if (qword_100498D78 != -1)
    swift_once(&qword_100498D78, sub_100370E18);
  v4 = v3 * *(double *)&qword_1004A1670;
  *(float *)&v0[v2] = v4;
  v5 = &v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_interactionScaleFactor];
  *(_QWORD *)v5 = 0;
  v5[8] = 1;
  v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_isTapToToggleEnabled] = 1;
  v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_isVisuallyDisabled] = 0;
  v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_isContinuous] = 1;
  v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_automaticallyDisablesOnMaxValue] = 1;
  v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_longPressMode] = 1;
  v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_growAnchorPoint] = 8;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___stretchView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___growView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValueRange] = 0x3F80000000000000;
  *(_DWORD *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValue] = 1065353216;
  *(_DWORD *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__minValue] = 0;
  *(_DWORD *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__maxValue] = 1065353216;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___feedbackGenerator] = 0;
  v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode] = 2;
  v6 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_blurEffect;
  if (qword_100498D60 != -1)
    swift_once(&qword_100498D60, sub_10036FC94);
  *(_QWORD *)&v0[v6] = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithBlurRadius:", *(double *)&qword_1004A1640);
  *(_QWORD *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___visualEffectView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___levelView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_sceneActivationObserver] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_longPressGestureRecognizer] = 0;
  v7 = &v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_initialDraggingLocation];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  v7[16] = 1;
  *(_DWORD *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_initialValue] = 0;
  v8 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange;
  if (qword_100498D68 != -1)
    swift_once(&qword_100498D68, sub_1003705DC);
  v9 = &v0[v8];
  v10 = *(_OWORD *)&qword_1004A1658;
  *v9 = xmmword_1004A1648;
  v9[1] = v10;
  v11 = &v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_stretchTransform];
  *v11 = 0x3FF0000000000000;
  v11[1] = 0;
  v11[2] = 0;
  v11[3] = 0x3FF0000000000000;
  v11[4] = 0;
  v11[5] = 0;
  v12 = &v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_growTransform];
  *v12 = 0x3FF0000000000000;
  v12[1] = 0;
  v12[2] = 0;
  v12[3] = 0x3FF0000000000000;
  v12[4] = 0;
  v12[5] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001003B2590, "MusicCoreUI/VerticalToggleSlider.swift", 38, 2, 152, 0);
  __break(1u);
}

BOOL _s11MusicCoreUI20VerticalToggleSliderC5point6inside4withSbSo7CGPointV_So7UIEventCSgtF_0(CGFloat a1, CGFloat a2)
{
  void *v2;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  double v14;
  double v15;
  CGFloat v16;
  CGFloat v17;
  CGPoint v19;
  CGRect v20;
  CGRect v21;

  objc_msgSend(v2, "bounds");
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;
  if (qword_100498D90 != -1)
    swift_once(&qword_100498D90, sub_100370E58);
  v13 = *(double *)&xmmword_1004A1698;
  if (qword_100498D80 != -1)
    swift_once(&qword_100498D80, sub_100370E28);
  v14 = v13 - *(double *)&xmmword_1004A1678;
  if (v13 - *(double *)&xmmword_1004A1678 < 0.0)
    v14 = 0.0;
  v15 = *((double *)&xmmword_1004A1698 + 1) - *((double *)&xmmword_1004A1678 + 1);
  if (*((double *)&xmmword_1004A1698 + 1) - *((double *)&xmmword_1004A1678 + 1) < 0.0)
    v15 = 0.0;
  v16 = -v14;
  v17 = -v15;
  v20.origin.x = v6;
  v20.origin.y = v8;
  v20.size.width = v10;
  v20.size.height = v12;
  v21 = CGRectInset(v20, v16, v17);
  v19.x = a1;
  v19.y = a2;
  return CGRectContainsPoint(v21, v19);
}

void sub_1003718E8(uint64_t a1)
{
  uint64_t v1;

  sub_10036FE60(a1, v1);
}

unint64_t sub_1003718F4()
{
  unint64_t result;

  result = qword_1004A17D8;
  if (!qword_1004A17D8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for VerticalToggleSlider.LongPressMode, &type metadata for VerticalToggleSlider.LongPressMode);
    atomic_store(result, (unint64_t *)&qword_1004A17D8);
  }
  return result;
}

unint64_t sub_10037193C()
{
  unint64_t result;

  result = qword_1004A17E0;
  if (!qword_1004A17E0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for VerticalToggleSlider.AnchorPoint, &type metadata for VerticalToggleSlider.AnchorPoint);
    atomic_store(result, (unint64_t *)&qword_1004A17E0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for VerticalToggleSlider.LongPressMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1003719CC + 4 * byte_1003A08DE[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100371A00 + 4 * byte_1003A08D9[v4]))();
}

uint64_t sub_100371A00(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100371A08(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100371A10);
  return result;
}

uint64_t sub_100371A1C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100371A24);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100371A28(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100371A30(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VerticalToggleSlider.LongPressMode()
{
  return &type metadata for VerticalToggleSlider.LongPressMode;
}

uint64_t getEnumTagSinglePayload for VerticalToggleSlider.AnchorPoint(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for VerticalToggleSlider.AnchorPoint(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_100371B28 + 4 * byte_1003A08E8[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_100371B5C + 4 * byte_1003A08E3[v4]))();
}

uint64_t sub_100371B5C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100371B64(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100371B6CLL);
  return result;
}

uint64_t sub_100371B78(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100371B80);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_100371B84(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100371B8C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VerticalToggleSlider.AnchorPoint()
{
  return &type metadata for VerticalToggleSlider.AnchorPoint;
}

ValueMetadata *type metadata accessor for VerticalToggleSlider.ShapeChange()
{
  return &type metadata for VerticalToggleSlider.ShapeChange;
}

uint64_t getEnumTagSinglePayload for VerticalToggleSlider.Mode(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  BOOL v7;
  unsigned int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
  {
    v6 = *a1;
    v7 = v6 >= 2;
    v8 = (v6 + 2147483646) & 0x7FFFFFFF;
    if (!v7)
      v8 = -1;
    if (v8 + 1 >= 2)
      return v8;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 2;
    if (a2 + 2 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_100371C08 + 4 * byte_1003A08ED[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for VerticalToggleSlider.Mode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 2;
  if (a3 + 2 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFE)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100371CC0 + 4 * byte_1003A08F7[v5]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100371CF4 + 4 * byte_1003A08F2[v5]))();
}

uint64_t sub_100371CF4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100371CFC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100371D04);
  return result;
}

uint64_t sub_100371D10(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100371D18);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100371D1C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100371D24(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VerticalToggleSlider.Mode()
{
  return &type metadata for VerticalToggleSlider.Mode;
}

void sub_100371D40()
{
  uint64_t v0;

  sub_100370D20(*(char **)(v0 + 16));
}

uint64_t sub_100371D48()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100371D58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100371D68(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

uint64_t sub_100371D70()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100371D9C()
{
  uint64_t v0;

  return sub_10036FCA4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100371DA4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100371DC8()
{
  uint64_t v0;

  sub_100370360(*(char **)(v0 + 16));
}

uint64_t sub_100371DD0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

void sub_100371DF4()
{
  uint64_t v0;

  sub_10036F888(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

void sub_100371E00()
{
  uint64_t v0;

  sub_10036FAEC(*(unsigned __int8 **)(v0 + 16), *(_BYTE *)(v0 + 24));
}

void sub_100371E0C()
{
  uint64_t v0;

  sub_10036F414(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100371E14()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100371E38()
{
  uint64_t v0;

  sub_10036F4EC(*(_BYTE *)(v0 + 16), *(char **)(v0 + 24));
}

void sub_100371E44()
{
  sub_10036B174();
  sub_10036BDD8();
}

void sub_100371E68()
{
  uint64_t v0;

  sub_10036F7CC(*(unsigned __int8 **)(v0 + 16));
}

void sub_100371E70()
{
  uint64_t v0;

  sub_10036EDDC(*(char **)(v0 + 16), *(_BYTE *)(v0 + 24));
}

void sub_100371E7C()
{
  uint64_t v0;

  sub_10036F1A8(*(unsigned __int8 **)(v0 + 16));
}

double sub_100371E84()
{
  uint64_t v0;

  return sub_10036F2A8(*(void **)(v0 + 16));
}

void sub_100371E8C()
{
  sub_10036F13C();
}

void sub_100371E94()
{
  sub_10036BB94(0x100000000);
}

uint64_t sub_100371ECC(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v12 = *(_QWORD *)(a1 + 80);
  v2 = *(_QWORD *)(a1 + 88);
  v3 = *(void **)(a1 + 96);
  v4 = *(_QWORD *)(a1 + 104);
  v5 = *(_QWORD *)(a1 + 112);
  v6 = *(_QWORD *)(a1 + 120);
  v7 = *(_QWORD *)(a1 + 128);
  v8 = *(_QWORD *)(a1 + 136);
  v9 = *(_QWORD *)(a1 + 144);
  v10 = *(_QWORD *)(a1 + 152);
  sub_100295178(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72));
  sub_100295178(v12, v2, v3, v4, v5, v6, v7, v8, v9, v10);
  return a1;
}

Swift::Int sub_10037200C(char a1)
{
  unint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v2 = 0xD000000000000015;
  Hasher.init(_seed:)(v5);
  if (a1)
  {
    if (a1 == 1)
    {
      v2 = 0xD000000000000014;
      v3 = 0x80000001003B78B0;
    }
    else
    {
      v3 = 0x80000001003B78D0;
    }
  }
  else
  {
    v3 = 0x80000001003B7890;
  }
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

_QWORD *sub_1003720B0(uint64_t a1)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if ((unint64_t)a1 >> 62)
    goto LABEL_14;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = _swiftEmptyArrayStorage;
    if (!v2)
      break;
    result = (_QWORD *)specialized ContiguousArray.reserveCapacity(_:)(v2);
    if (v2 < 0)
    {
      __break(1u);
      return result;
    }
    v4 = 0;
    while (v2 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, a1);
      else
        v5 = *(id *)(a1 + 8 * v4 + 32);
      v6 = v5;
      ++v4;
      v7 = objc_msgSend(v5, "layer");

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      v8 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v8);
      v9 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v8, v7);
      specialized ContiguousArray._endMutation()(v9);
      if (v2 == v4)
        return _swiftEmptyArrayStorage;
    }
    __break(1u);
LABEL_14:
    if (a1 < 0)
      v10 = a1;
    else
      v10 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v2 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a1);
  }
  return result;
}

unint64_t WaveformPlayIndicator.__allocating_init(settings:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return WaveformPlayIndicator.init(settings:)(a1);
}

unint64_t WaveformPlayIndicator.init(settings:)(void *a1)
{
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  _QWORD *v5;
  void *v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  objc_class *v25;
  unint64_t result;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t ObjectType;
  objc_super v42;
  char v43;

  v40 = a1;
  ObjectType = swift_getObjectType();
  v2 = sub_100005574(&qword_10049DAA0);
  v38 = *(_QWORD *)(v2 - 8);
  v39 = v2;
  __chkstk_darwin();
  v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_mode] = 0;
  v5 = &v1[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_colorPalette];
  v6 = (void *)objc_opt_self(UIColor);
  v7 = v1;
  v8 = objc_msgSend(v6, "tintColor");
  v9 = objc_msgSend(v6, "labelColor");
  v10 = objc_msgSend(v9, "colorWithAlphaComponent:", 0.35);

  v11 = objc_msgSend(v6, "labelColor");
  v12 = objc_msgSend(v11, "colorWithAlphaComponent:", 0.2);

  v13 = objc_msgSend(v6, "labelColor");
  v14 = objc_msgSend(v13, "colorWithAlphaComponent:", 0.6);

  *v5 = v8;
  v5[1] = v10;
  v5[2] = v12;
  v5[3] = v14;
  v15 = OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_waveform;
  *(_QWORD *)(v7 + v15) = objc_msgSend((id)objc_opt_self(MRUWaveformData), "zero");
  *(_QWORD *)(v7 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_exclusiveAnimation) = 0;
  *(_QWORD *)(v7 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_pulseTask) = 0;
  *(_QWORD *)(v7 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_barRatio) = 0x3FE0000000000000;
  v16 = v7 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator__isVisible;
  v43 = 0;
  Published.init(initialValue:)(&v43, &type metadata for Bool);
  (*(void (**)(uint64_t, char *, uint64_t))(v38 + 32))(v16, v4, v39);
  *(_QWORD *)(v7 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator____lazy_storage___bars) = 0;
  v17 = OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_cannedAnimationAsset;
  v18 = type metadata accessor for BouncyBarsAsset();
  swift_allocObject(v18, 56, 7);
  *(_QWORD *)(v7 + v17) = sub_1003775B8();
  v19 = v40;
  *(_QWORD *)(v7 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_settings) = v40;
  v20 = v19;
  v21 = objc_msgSend(v20, "stops");
  v22 = sub_1000087DC(0, &qword_100499B58, NSNumber_ptr);
  v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v21, v22);

  if ((unint64_t)v23 >> 62)
  {
    if (v23 < 0)
      v31 = v23;
    else
      v31 = v23 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v24 = _CocoaArrayWrapper.endIndex.getter(v31);
    swift_bridgeObjectRelease();
  }
  else
  {
    v24 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  v25 = (objc_class *)ObjectType;
  if (__OFSUB__(v24, 1))
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v7 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_numberOfBars) = v24 - 1;

    v42.receiver = (id)v7;
    v42.super_class = v25;
    v23 = (uint64_t)objc_msgSendSuper2(&v42, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    result = sub_100372690();
    v7 = result;
    if (!(result >> 62))
    {
      v27 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v27)
        goto LABEL_6;
LABEL_21:
      swift_bridgeObjectRelease();
      v33 = sub_100005574(&qword_10049AED0);
      v34 = swift_allocObject(v33, 48, 7);
      *(_OWORD *)(v34 + 16) = xmmword_100384A80;
      *(_QWORD *)(v34 + 32) = type metadata accessor for UITraitActiveAppearance(0);
      *(_QWORD *)(v34 + 40) = &protocol witness table for UITraitActiveAppearance;
      v35 = (id)v23;
      v36 = UIView.registerForTraitChanges<A>(_:handler:)(v34, sub_1003789F8, 0, v25);
      swift_unknownObjectRelease(v36);
      swift_bridgeObjectRelease();

      return (unint64_t)v35;
    }
  }
  if (v7 < 0)
    v32 = v7;
  else
    v32 = v7 & 0xFFFFFFFFFFFFFF8;
  result = _CocoaArrayWrapper.endIndex.getter(v32);
  v27 = result;
  if (!result)
    goto LABEL_21;
LABEL_6:
  if (v27 >= 1)
  {
    v28 = 0;
    do
    {
      if ((v7 & 0xC000000000000001) != 0)
        v29 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v28, v7);
      else
        v29 = *(id *)(v7 + 8 * v28 + 32);
      v30 = v29;
      ++v28;
      objc_msgSend((id)v23, "addSubview:", v29);
      objc_msgSend(v30, "setAlpha:", 0.0);

    }
    while (v27 != v28);
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

uint64_t sub_100372690()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator____lazy_storage___bars;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator____lazy_storage___bars))
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator____lazy_storage___bars);
  }
  else
  {
    sub_100376C68();
    v2 = v3;
    *(_QWORD *)(v0 + v1) = v3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

void sub_1003726F0()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v2[24];

  v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_mode;
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_mode, v2, 0, 0);
  __asm { BR              X10 }
}

uint64_t sub_100372748()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  id v7;
  void *v8;
  uint64_t v10;

  v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_colorPalette;
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_colorPalette, &v10, 0, 0);
  v2 = *(id *)(v1 + 8);
  v3 = sub_100372690();
  v4 = v3;
  if (!((unint64_t)v3 >> 62))
  {
    v5 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v5)
      goto LABEL_12;
    goto LABEL_3;
  }
  if (v3 >= 0)
    v3 &= 0xFFFFFFFFFFFFFF8uLL;
  v5 = _CocoaArrayWrapper.endIndex.getter(v3);
  if (v5)
  {
LABEL_3:
    if (v5 < 1)
    {
      __break(1u);
      JUMPOUT(0x1003729A4);
    }
    for (i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0)
        v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v4);
      else
        v7 = *(id *)(v4 + 8 * i + 32);
      v8 = v7;
      objc_msgSend(v7, "setBackgroundColor:", v2);

    }
  }
LABEL_12:

  return swift_bridgeObjectRelease();
}

void sub_1003729E8(unsigned __int8 a1, unsigned __int8 a2)
{
  char *v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  char *v21;
  id v22;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  int v27;
  id v28;
  id v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  id v35;
  char v36;
  unint64_t v37;
  unint64_t v38;
  char *v39;
  id v40;
  id v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  char *v45;
  id v46;
  char v47;
  unint64_t v48;
  unint64_t v49;
  char *v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void **v55;
  void *v56;
  void *v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  id v66;
  id v67;
  char *v68;
  id v69;
  char v70;
  unint64_t v71;
  unint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t i;
  id v76;
  void *v77;
  id v78;
  id v79;
  uint64_t v80;
  unsigned __int8 v81;
  uint64_t v82;
  void *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  id v87;
  char v88;
  unint64_t v89;
  unint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  char *v97;
  char v98;
  unint64_t v99;
  unint64_t v100;
  _QWORD *v101;
  unsigned __int8 v102;
  uint64_t v103;
  char *v104;
  unsigned __int8 v105;
  uint64_t v106;
  uint64_t v107;
  void **aBlock;
  uint64_t v109;
  void *v110;
  void *v111;
  void *v112;
  uint64_t v113;

  v3 = a2;
  v4 = a1;
  if (a1 == a2 && (a1 != 3 || (sub_100374184() & 1) != 0))
    return;
  v5 = sub_100372690();
  v6 = type metadata accessor for AnimationGroup();
  v7 = swift_allocObject(v6, 32, 7);
  v8 = (char *)_swiftEmptyArrayStorage;
  *(_QWORD *)(v7 + 16) = _swiftEmptyArrayStorage;
  *(_QWORD *)(v7 + 24) = _swiftEmptyArrayStorage;
  v9 = OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_pulseTask;
  v10 = *(_QWORD *)&v2[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_pulseTask];
  if (v10)
  {
    swift_retain(*(_QWORD *)&v2[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_pulseTask]);
    Task.cancel()();
    swift_release(v10);
    v11 = *(_QWORD *)&v2[v9];
  }
  else
  {
    v11 = 0;
  }
  *(_QWORD *)&v2[v9] = 0;
  swift_release(v11);
  if (v4 == 3)
    sub_100374494();
  v105 = v3;
  if (v3 != 1)
  {
    if (v3 == 4)
    {
      v12 = objc_msgSend(objc_allocWithZone((Class)UICubicTimingParameters), "initWithControlPoint1:controlPoint2:", 0.5, 1.0, 0.89, 1.0);
      v13 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:timingParameters:", v12, 0.25);

      v14 = swift_allocObject(&unk_100467C90, 24, 7);
      *(_QWORD *)(v14 + 16) = v2;
      v112 = sub_10037963C;
      v113 = v14;
      aBlock = _NSConcreteStackBlock;
      v109 = 1107296256;
      v110 = sub_1000BED80;
      v111 = &unk_100467CA8;
      v15 = _Block_copy(&aBlock);
      v16 = v113;
      v17 = v2;
      objc_msgSend(v13, "addAnimations:", v15, swift_release(v16).n128_f64[0]);
      _Block_release(v15);
      v18 = swift_allocObject(&unk_100467CE0, 25, 7);
      *(_QWORD *)(v18 + 16) = v17;
      *(_BYTE *)(v18 + 24) = 4;
      v112 = sub_100379644;
      v113 = v18;
      aBlock = _NSConcreteStackBlock;
      v109 = 1107296256;
      v110 = sub_100204BB4;
      v111 = &unk_100467CF8;
      v19 = _Block_copy(&aBlock);
      v20 = v113;
      v21 = v17;
      objc_msgSend(v13, "addCompletion:", v19, swift_release(v20).n128_f64[0]);
      _Block_release(v19);
      v22 = v13;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage);
      *(_QWORD *)(v7 + 16) = _swiftEmptyArrayStorage;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v8 = sub_100258E0C(0, _swiftEmptyArrayStorage[2] + 1, 1, (char *)_swiftEmptyArrayStorage);
        *(_QWORD *)(v7 + 16) = v8;
      }
      v25 = *((_QWORD *)v8 + 2);
      v24 = *((_QWORD *)v8 + 3);
      if (v25 >= v24 >> 1)
      {
        v8 = sub_100258E0C((char *)(v24 > 1), v25 + 1, 1, v8);
        *(_QWORD *)(v7 + 16) = v8;
      }
      *((_QWORD *)v8 + 2) = v25 + 1;
      v26 = &v8[16 * v25];
      *((_QWORD *)v26 + 4) = v22;
      *((_QWORD *)v26 + 5) = 0;

      v3 = v105;
    }
    if (v4)
      goto LABEL_17;
LABEL_31:
    v102 = v4;
    v107 = v7;
    v51 = swift_bridgeObjectRetain();
    v103 = v5;
    sub_100374DE0(v51);
    v53 = v52;
    v104 = v2;
    sub_100374888();
    v106 = *(_QWORD *)(v53 + 16);
    if (v106)
    {
      v54 = 0;
      v55 = (void **)(v53 + 40);
      do
      {
        v57 = *(v55 - 1);
        v56 = *v55;
        v58 = objc_allocWithZone((Class)UICubicTimingParameters);
        v59 = v56;
        v60 = v57;
        v61 = objc_msgSend(v58, "initWithControlPoint1:controlPoint2:", 0.32, 0.0, 0.67, 0.0);
        v62 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:timingParameters:", v61, 0.5);

        v63 = swift_allocObject(&unk_100467BF0, 32, 7);
        *(_QWORD *)(v63 + 16) = v60;
        *(_QWORD *)(v63 + 24) = v56;
        v112 = sub_1003795FC;
        v113 = v63;
        aBlock = _NSConcreteStackBlock;
        v109 = 1107296256;
        v110 = sub_1000BED80;
        v111 = &unk_100467C08;
        v64 = _Block_copy(&aBlock);
        v65 = v113;
        swift_retain_n(v63, 2);
        v66 = v60;
        v67 = v59;
        objc_msgSend(v62, "addAnimations:", v64, swift_release(v65).n128_f64[0]);
        _Block_release(v64);
        swift_release(v63);
        v68 = *(char **)(v107 + 16);
        v69 = v62;
        v70 = swift_isUniquelyReferenced_nonNull_native(v68);
        *(_QWORD *)(v107 + 16) = v68;
        if ((v70 & 1) == 0)
        {
          v68 = sub_100258E0C(0, *((_QWORD *)v68 + 2) + 1, 1, v68);
          *(_QWORD *)(v107 + 16) = v68;
        }
        v72 = *((_QWORD *)v68 + 2);
        v71 = *((_QWORD *)v68 + 3);
        if (v72 >= v71 >> 1)
        {
          v68 = sub_100258E0C((char *)(v71 > 1), v72 + 1, 1, v68);
          *(_QWORD *)(v107 + 16) = v68;
        }
        v55 += 2;
        *((_QWORD *)v68 + 2) = v72 + 1;
        v73 = &v68[16 * v72];
        *((_QWORD *)v73 + 4) = v69;
        *((double *)v73 + 5) = (double)v54 * 0.03;

        swift_release(v63);
        ++v54;
      }
      while (v106 != v54);
    }
    swift_bridgeObjectRelease();
    v7 = v107;
    v5 = v103;
    v2 = v104;
    v4 = v102;
    v27 = v105;
    if (v105)
      goto LABEL_18;
    goto LABEL_39;
  }
  v40 = objc_msgSend(objc_allocWithZone((Class)UICubicTimingParameters), "initWithControlPoint1:controlPoint2:", 0.33, 1.0, 0.67, 1.0);
  v41 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:timingParameters:", v40, 0.9);

  v42 = swift_allocObject(&unk_100467C40, 24, 7);
  *(_QWORD *)(v42 + 16) = v2;
  v112 = sub_100379634;
  v113 = v42;
  aBlock = _NSConcreteStackBlock;
  v109 = 1107296256;
  v110 = sub_1000BED80;
  v111 = &unk_100467C58;
  v43 = _Block_copy(&aBlock);
  v44 = v113;
  swift_retain_n(v42, 2);
  v45 = v2;
  objc_msgSend(v41, "addAnimations:", v43, swift_release(v44).n128_f64[0]);
  _Block_release(v43);
  swift_release(v42);
  v46 = v41;
  v47 = swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage);
  *(_QWORD *)(v7 + 16) = _swiftEmptyArrayStorage;
  if ((v47 & 1) == 0)
  {
    v8 = sub_100258E0C(0, _swiftEmptyArrayStorage[2] + 1, 1, (char *)_swiftEmptyArrayStorage);
    *(_QWORD *)(v7 + 16) = v8;
  }
  v49 = *((_QWORD *)v8 + 2);
  v48 = *((_QWORD *)v8 + 3);
  if (v49 >= v48 >> 1)
  {
    v8 = sub_100258E0C((char *)(v48 > 1), v49 + 1, 1, v8);
    *(_QWORD *)(v7 + 16) = v8;
  }
  v3 = v105;
  *((_QWORD *)v8 + 2) = v49 + 1;
  v50 = &v8[16 * v49];
  *((_QWORD *)v50 + 4) = v46;
  *((_QWORD *)v50 + 5) = 0;

  swift_release(v42);
  if (!v4)
    goto LABEL_31;
LABEL_17:
  v27 = v3;
  if (v3)
  {
LABEL_18:
    if (v27 == 2)
    {
      swift_bridgeObjectRelease();
      v78 = objc_msgSend(objc_allocWithZone((Class)UICubicTimingParameters), "initWithControlPoint1:controlPoint2:", 0.5, 1.0, 0.89, 1.0);
      v79 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:timingParameters:", v78, 0.15);

      v80 = swift_allocObject(&unk_100467B50, 25, 7);
      v81 = v4;
      v82 = v80;
      *(_QWORD *)(v80 + 16) = v2;
      *(_BYTE *)(v80 + 24) = v81;
      v112 = sub_1003795BC;
      v113 = v80;
      aBlock = _NSConcreteStackBlock;
      v109 = 1107296256;
      v110 = sub_1000BED80;
      v111 = &unk_100467B68;
      v83 = _Block_copy(&aBlock);
      v84 = v113;
      swift_retain_n(v82, 2);
      v85 = v2;
      objc_msgSend(v79, "addAnimations:", v83, swift_release(v84).n128_f64[0]);
      _Block_release(v83);
      swift_release(v82);
      v86 = *(char **)(v7 + 16);
      v87 = v79;
      v88 = swift_isUniquelyReferenced_nonNull_native(v86);
      *(_QWORD *)(v7 + 16) = v86;
      if ((v88 & 1) == 0)
      {
        v86 = sub_100258E0C(0, *((_QWORD *)v86 + 2) + 1, 1, v86);
        *(_QWORD *)(v7 + 16) = v86;
      }
      v90 = *((_QWORD *)v86 + 2);
      v89 = *((_QWORD *)v86 + 3);
      if (v90 >= v89 >> 1)
      {
        v86 = sub_100258E0C((char *)(v89 > 1), v90 + 1, 1, v86);
        *(_QWORD *)(v7 + 16) = v86;
      }
      *((_QWORD *)v86 + 2) = v90 + 1;
      v91 = &v86[16 * v90];
      *((_QWORD *)v91 + 4) = v87;
      *((_QWORD *)v91 + 5) = 0;

      swift_release(v82);
    }
    else
    {
      if (v27 == 3)
      {
        v28 = objc_msgSend(objc_allocWithZone((Class)UICubicTimingParameters), "initWithControlPoint1:controlPoint2:", 0.5, 1.0, 0.89, 1.0);
        v29 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:timingParameters:", v28, 0.15);

        v30 = swift_allocObject(&unk_100467BA0, 24, 7);
        *(_QWORD *)(v30 + 16) = v2;
        v112 = sub_1003795C8;
        v113 = v30;
        aBlock = _NSConcreteStackBlock;
        v109 = 1107296256;
        v110 = sub_1000BED80;
        v111 = &unk_100467BB8;
        v31 = _Block_copy(&aBlock);
        v32 = v113;
        swift_retain_n(v30, 2);
        v33 = v2;
        objc_msgSend(v29, "addAnimations:", v31, swift_release(v32).n128_f64[0]);
        _Block_release(v31);
        swift_release(v30);
        v34 = *(char **)(v7 + 16);
        v35 = v29;
        v36 = swift_isUniquelyReferenced_nonNull_native(v34);
        *(_QWORD *)(v7 + 16) = v34;
        if ((v36 & 1) == 0)
        {
          v34 = sub_100258E0C(0, *((_QWORD *)v34 + 2) + 1, 1, v34);
          *(_QWORD *)(v7 + 16) = v34;
        }
        v38 = *((_QWORD *)v34 + 2);
        v37 = *((_QWORD *)v34 + 3);
        if (v38 >= v37 >> 1)
        {
          v34 = sub_100258E0C((char *)(v37 > 1), v38 + 1, 1, v34);
          *(_QWORD *)(v7 + 16) = v34;
        }
        *((_QWORD *)v34 + 2) = v38 + 1;
        v39 = &v34[16 * v38];
        *((_QWORD *)v39 + 4) = v35;
        *((_QWORD *)v39 + 5) = 0;

        swift_release(v30);
      }
      swift_bridgeObjectRelease();
    }
    goto LABEL_57;
  }
LABEL_39:
  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v92 = v5;
    else
      v92 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v74 = _CocoaArrayWrapper.endIndex.getter(v92);
    swift_bridgeObjectRelease();
    if (v74)
      goto LABEL_41;
  }
  else
  {
    v74 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v74)
    {
LABEL_41:
      if (v74 < 1)
      {
        __break(1u);
        return;
      }
      for (i = 0; i != v74; ++i)
      {
        if ((v5 & 0xC000000000000001) != 0)
          v76 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v5);
        else
          v76 = *(id *)(v5 + 8 * i + 32);
        v77 = v76;
        objc_msgSend(v76, "setAlpha:", 0.0);

      }
    }
  }
  swift_bridgeObjectRelease();
  sub_100374888();
LABEL_57:
  v93 = *(_QWORD *)&v2[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_exclusiveAnimation];
  if (v93)
  {
    v94 = swift_allocObject(&unk_100467B00, 32, 7);
    *(_QWORD *)(v94 + 16) = v2;
    *(_QWORD *)(v94 + 24) = v7;
    v95 = swift_allocObject(&unk_100467B28, 32, 7);
    *(_QWORD *)(v95 + 16) = sub_100379590;
    *(_QWORD *)(v95 + 24) = v94;
    v96 = *(_QWORD **)(v93 + 24);
    v97 = v2;
    swift_retain(v93);
    swift_retain(v7);
    swift_retain(v94);
    v98 = swift_isUniquelyReferenced_nonNull_native(v96);
    *(_QWORD *)(v93 + 24) = v96;
    if ((v98 & 1) == 0)
    {
      v96 = sub_100258F0C(0, v96[2] + 1, 1, v96);
      *(_QWORD *)(v93 + 24) = v96;
    }
    v100 = v96[2];
    v99 = v96[3];
    if (v100 >= v99 >> 1)
    {
      v96 = sub_100258F0C((_QWORD *)(v99 > 1), v100 + 1, 1, v96);
      *(_QWORD *)(v93 + 24) = v96;
    }
    v96[2] = v100 + 1;
    v101 = &v96[2 * v100];
    v101[4] = sub_1000B0290;
    v101[5] = v95;
    swift_release(v93);
    swift_release(v94);
  }
  else
  {
    sub_100377008();
  }
  swift_release(v7);
}

uint64_t WaveformPlayIndicator.mode.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_mode);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_mode, v3, 0, 0);
  return *v1;
}

void WaveformPlayIndicator.mode.setter(unsigned __int8 a1)
{
  uint64_t v1;
  unsigned __int8 *v3;
  unsigned __int8 v4;
  _BYTE v5[24];

  v3 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_mode);
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_mode, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;
  sub_1003729E8(v4, a1);
}

void (*WaveformPlayIndicator.mode.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _BYTE *v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_mode;
  v3[3] = v1;
  v3[4] = v4;
  v5 = (_BYTE *)(v1 + v4);
  swift_beginAccess(v1 + v4, v3, 1, 0);
  *((_BYTE *)v3 + 40) = *v5;
  return sub_1003736FC;
}

void sub_1003736FC(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;
  unsigned __int8 v5;

  v1 = *(_BYTE **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v2 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v4 = *(_BYTE *)(v3 + v2);
  v5 = v1[40];
  *(_BYTE *)(v3 + v2) = v5;
  sub_1003729E8(v4, v5);
  free(v1);
}

uint64_t type metadata accessor for BouncyBarsAsset()
{
  return objc_opt_self(_TtC11MusicCoreUIP33_1239B5B087AAB7692D5EF8FD4F2B07D115BouncyBarsAsset);
}

void sub_100373754()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;

  v0 = (void *)objc_opt_self(UIColor);
  v1 = objc_msgSend(v0, "whiteColor");
  v2 = objc_msgSend(v0, "whiteColor");
  v3 = objc_msgSend(v0, "whiteColor");
  v4 = objc_msgSend(v3, "colorWithAlphaComponent:", 0.2);

  v5 = objc_msgSend(v0, "whiteColor");
  v6 = objc_msgSend(v5, "colorWithAlphaComponent:", 0.6);

  static WaveformPlayIndicator.ColorPalette.overlay = (uint64_t)v1;
  *(_QWORD *)algn_1004A41D8 = v2;
  qword_1004A41E0 = (uint64_t)v4;
  unk_1004A41E8 = v6;
}

uint64_t *WaveformPlayIndicator.ColorPalette.overlay.unsafeMutableAddressor()
{
  if (qword_100498DE8 != -1)
    swift_once(&qword_100498DE8, sub_100373754);
  return &static WaveformPlayIndicator.ColorPalette.overlay;
}

uint64_t static WaveformPlayIndicator.ColorPalette.overlay.getter()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;

  if (qword_100498DE8 != -1)
    swift_once(&qword_100498DE8, sub_100373754);
  v0 = static WaveformPlayIndicator.ColorPalette.overlay;
  v1 = *(void **)algn_1004A41D8;
  v2 = (void *)qword_1004A41E0;
  v3 = (void *)unk_1004A41E8;
  v4 = (id)static WaveformPlayIndicator.ColorPalette.overlay;
  v5 = v1;
  v6 = v2;
  v7 = v3;
  return v0;
}

uint64_t static WaveformPlayIndicator.ColorPalette.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1000087DC(0, (unint64_t *)&qword_10049A0D0, NSObject_ptr);
  if ((static NSObject.== infix(_:_:)(a1, a5) & 1) != 0
    && (static NSObject.== infix(_:_:)(a2, a6) & 1) != 0
    && (static NSObject.== infix(_:_:)(a3, a7) & 1) != 0)
  {
    return static NSObject.== infix(_:_:)(a4, a8) & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1003739C0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *a1;
  v2 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v7 = *a2;
  v6 = a2[1];
  v9 = a2[2];
  v8 = a2[3];
  sub_1000087DC(0, (unint64_t *)&qword_10049A0D0, NSObject_ptr);
  if ((static NSObject.== infix(_:_:)(v3, v7) & 1) != 0
    && (static NSObject.== infix(_:_:)(v2, v6) & 1) != 0
    && (static NSObject.== infix(_:_:)(v5, v9) & 1) != 0)
  {
    return static NSObject.== infix(_:_:)(v4, v8) & 1;
  }
  else
  {
    return 0;
  }
}

void sub_100373A6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  char v18;
  _BYTE v19[24];

  v9 = v4 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_colorPalette;
  swift_beginAccess(v9, v19, 0, 0);
  v10 = *(void **)v9;
  v11 = *(void **)(v9 + 8);
  v12 = *(void **)(v9 + 16);
  v13 = *(void **)(v9 + 24);
  sub_1000087DC(0, (unint64_t *)&qword_10049A0D0, NSObject_ptr);
  v14 = v10;
  v15 = v11;
  v16 = v12;
  v17 = v13;
  if ((static NSObject.== infix(_:_:)(a1, v14) & 1) == 0
    || (static NSObject.== infix(_:_:)(a2, v15) & 1) == 0
    || (static NSObject.== infix(_:_:)(a3, v16) & 1) == 0)
  {

    goto LABEL_7;
  }
  v18 = static NSObject.== infix(_:_:)(a4, v17);

  if ((v18 & 1) == 0)
LABEL_7:
    sub_1003726F0();
}

void *WaveformPlayIndicator.colorPalette.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  _BYTE v11[24];

  v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_colorPalette;
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_colorPalette, v11, 0, 0);
  v2 = *(void **)v1;
  v3 = *(void **)(v1 + 8);
  v5 = *(void **)(v1 + 16);
  v4 = *(void **)(v1 + 24);
  v6 = v2;
  v7 = v3;
  v8 = v5;
  v9 = v4;
  return v2;
}

void WaveformPlayIndicator.colorPalette.setter(void *a1, void *a2, void *a3, void *a4)
{
  uint64_t v4;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  _BYTE v18[24];

  v9 = v4 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_colorPalette;
  swift_beginAccess(v4 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_colorPalette, v18, 1, 0);
  v10 = *(void **)v9;
  v11 = *(void **)(v9 + 8);
  v12 = *(void **)(v9 + 16);
  v13 = *(void **)(v9 + 24);
  *(_QWORD *)v9 = a1;
  *(_QWORD *)(v9 + 8) = a2;
  *(_QWORD *)(v9 + 16) = a3;
  *(_QWORD *)(v9 + 24) = a4;
  v14 = a1;
  v15 = a2;
  v16 = a3;
  v17 = a4;
  sub_100373A6C((uint64_t)v10, (uint64_t)v11, (uint64_t)v12, (uint64_t)v13);

}

void (*WaveformPlayIndicator.colorPalette.modify(_QWORD *a1))(void ***a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;

  v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[7] = v1;
  v4 = v1 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_colorPalette;
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_colorPalette, v3 + 4, 0, 0);
  v5 = *(void **)v4;
  v6 = *(void **)(v4 + 8);
  v7 = *(void **)(v4 + 16);
  v8 = *(void **)(v4 + 24);
  *v3 = *(_QWORD *)v4;
  v3[1] = v6;
  v3[2] = v7;
  v3[3] = v8;
  v9 = v5;
  v10 = v6;
  v11 = v7;
  v12 = v8;
  return sub_100373D68;
}

void sub_100373D68(void ***a1, char a2)
{
  void **v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v2 = *a1;
  v3 = **a1;
  if ((a2 & 1) != 0)
  {
    WaveformPlayIndicator.colorPalette.setter(v3, v2[1], v2[2], v2[3]);
    v4 = v2[1];
    v5 = v2[2];
    v6 = v2[3];

  }
  else
  {
    WaveformPlayIndicator.colorPalette.setter(v3, v2[1], v2[2], v2[3]);
  }
  free(v2);
}

id WaveformPlayIndicator.waveform.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_waveform);
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_waveform, v3, 0, 0);
  return *v1;
}

void WaveformPlayIndicator.waveform.setter(void *a1)
{
  char *v1;
  void **v3;
  void *v4;
  id v5;
  char *v6;
  void *v7;
  void *v8;
  float v9;
  double v10;
  float v11;
  double v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  char *v16;
  _QWORD v17[5];
  uint64_t v18;
  char v19[24];
  char v20[24];

  v3 = (void **)&v1[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_waveform];
  swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_waveform], v20, 1, 0);
  v4 = *v3;
  *v3 = a1;
  v5 = a1;

  v6 = &v1[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_mode];
  swift_beginAccess(&v1[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_mode], v19, 0, 0);
  if (*v6 == 2)
  {
    v7 = (void *)objc_opt_self(UIView);
    v8 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_settings];
    objc_msgSend(v8, "animationDuration");
    v10 = v9;
    objc_msgSend(v8, "springDamping");
    v12 = v11;
    v13 = swift_allocObject(&unk_1004677D0, 24, 7);
    *(_QWORD *)(v13 + 16) = v1;
    v17[4] = sub_10037915C;
    v18 = v13;
    v17[0] = _NSConcreteStackBlock;
    v17[1] = 1107296256;
    v17[2] = sub_1000BED80;
    v17[3] = &unk_1004677E8;
    v14 = _Block_copy(v17);
    v15 = v18;
    v16 = v1;
    swift_release(v15);
    objc_msgSend(v7, "animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:", 0, v14, 0, v10, 0.0, v12, 0.0);
    _Block_release(v14);
  }

}

void (*WaveformPlayIndicator.waveform.modify(_QWORD *a1))(void ****a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x50uLL);
  *a1 = v3;
  v3[9] = v1;
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_waveform, v3, 33, 0);
  return sub_100374024;
}

void sub_100374024(void ****a1, char a2)
{
  void ***v3;
  _BYTE *v4;
  void **v5;
  void *v6;
  void *v7;
  float v8;
  double v9;
  float v10;
  double v11;
  uint64_t v12;
  void *v13;
  void **v14;
  char *v15;

  v3 = *a1;
  swift_endAccess(*a1);
  if ((a2 & 1) == 0)
  {
    v4 = (char *)v3[9] + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_mode;
    swift_beginAccess(v4, v3 + 6, 0, 0);
    if (*v4 == 2)
    {
      v5 = v3[9];
      v6 = (void *)objc_opt_self(UIView);
      v7 = *(void **)((char *)v5 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_settings);
      objc_msgSend(v7, "animationDuration");
      v9 = v8;
      objc_msgSend(v7, "springDamping");
      v11 = v10;
      v12 = swift_allocObject(&unk_100467820, 24, 7);
      *(_QWORD *)(v12 + 16) = v5;
      v3[4] = (void **)sub_100379B30;
      v3[5] = (void **)v12;
      *v3 = _NSConcreteStackBlock;
      v3[1] = (void **)1107296256;
      v3[2] = (void **)sub_1000BED80;
      v3[3] = (void **)&unk_100467838;
      v13 = _Block_copy(v3);
      v14 = v3[5];
      v15 = v5;
      swift_release(v14);
      objc_msgSend(v6, "animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:", 0, v13, 0, v9, 0.0, v11, 0.0);
      _Block_release(v13);
    }
  }
  free(v3);
}

uint64_t sub_100374184()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  NSString v8;
  id v9;
  id v10;
  NSString v11;
  id v12;
  id v13;
  NSString v14;
  id v15;
  uint64_t v17;

  v0 = sub_100372690();
  v1 = v0;
  if (v0 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((v0 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; v2 = _CocoaArrayWrapper.endIndex.getter(v17))
  {
    v3 = 4;
    while (1)
    {
      v4 = (v1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v3 - 4, v1)
         : *(id *)(v1 + 8 * v3);
      v5 = v4;
      v6 = v3 - 3;
      if (__OFADD__(v3 - 4, 1))
        break;
      v7 = objc_msgSend(v4, "layer");
      v8 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      v9 = objc_msgSend(v7, "animationForKey:", v8);

      if (!v9)
        goto LABEL_13;
      v10 = objc_msgSend(v5, "layer");
      v11 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      v12 = objc_msgSend(v10, "animationForKey:", v11);

      if (!v12
        || (v13 = objc_msgSend(v5, "layer"),
            v14 = String._bridgeToObjectiveC()(),
            swift_bridgeObjectRelease(),
            v15 = objc_msgSend(v13, "animationForKey:", v14),
            v15,
            v13,
            v14,
            !v15))
      {
LABEL_13:
        swift_bridgeObjectRelease_n(v1, 2);

        return 0;
      }

      ++v3;
      if (v6 == v2)
        goto LABEL_12;
    }
    __break(1u);
LABEL_15:
    if (v1 < 0)
      v17 = v1;
    else
      v17 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
LABEL_12:
  swift_bridgeObjectRelease_n(v1, 2);
  return 1;
}

uint64_t sub_100374494()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  id v4;
  void *v5;
  NSString v6;
  NSString v7;
  NSString v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;

  v0 = sub_100372690();
  v1 = (uint64_t)sub_1003720B0(v0);
  swift_bridgeObjectRelease();
  if ((unint64_t)v1 >> 62)
    goto LABEL_14;
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    v3 = 0;
    v15 = v1 & 0xC000000000000001;
    v14 = v1;
    v13 = v1 & 0xFFFFFFFFFFFFFF8;
    while (1)
    {
      if (v15)
      {
        v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v3, v1);
      }
      else
      {
        if (v3 >= *(_QWORD *)(v13 + 16))
          goto LABEL_13;
        v4 = *(id *)(v1 + 8 * v3 + 32);
      }
      v5 = v4;
      if (__OFADD__(v3, 1))
        break;
      v16 = v3 + 1;
      v6 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      objc_msgSend(v5, "removeAnimationForKey:", v6);

      v7 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      objc_msgSend(v5, "removeAnimationForKey:", v7);

      v8 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      objc_msgSend(v5, "removeAnimationForKey:", v8);

      v9 = objc_msgSend(v5, "presentationLayer");
      if (v9)
      {
        v10 = v9;
        objc_msgSend(v9, "frame");
        objc_msgSend(v5, "setFrame:");
        objc_msgSend(v10, "cornerRadius");
        objc_msgSend(v5, "setCornerRadius:");

      }
      ++v3;
      v1 = v14;
      if (v16 == v2)
        return swift_bridgeObjectRelease();
    }
    __break(1u);
LABEL_13:
    __break(1u);
LABEL_14:
    if (v1 < 0)
      v11 = v1;
    else
      v11 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v2 = _CocoaArrayWrapper.endIndex.getter(v11);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_100374780(uint64_t a1)
{
  uint64_t v2;
  id v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  id v8;
  void *v9;
  _BYTE v10[24];

  sub_100374888();
  v2 = a1 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_colorPalette;
  swift_beginAccess(a1 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_colorPalette, v10, 0, 0);
  v3 = *(id *)(v2 + 16);
  result = sub_100372690();
  v5 = result;
  if ((unint64_t)result >> 62)
  {
    if (result >= 0)
      result &= 0xFFFFFFFFFFFFFF8uLL;
    result = _CocoaArrayWrapper.endIndex.getter(result);
    v6 = result;
    if (!result)
      goto LABEL_12;
  }
  else
  {
    v6 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v6)
    {
LABEL_12:

      return swift_bridgeObjectRelease();
    }
  }
  if (v6 >= 1)
  {
    for (i = 0; i != v6; ++i)
    {
      if ((v5 & 0xC000000000000001) != 0)
        v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v5);
      else
        v8 = *(id *)(v5 + 8 * i + 32);
      v9 = v8;
      objc_msgSend(v8, "setBackgroundColor:", v3);

    }
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

unint64_t sub_100374888()
{
  char *v0;
  double Width;
  double v2;
  double v3;
  char *v4;
  id *v5;
  id v6;
  unint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  double v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  id v23;
  char v24[24];
  char v25[24];
  CGRect v26;
  CGRect v27;
  CGRect v28;
  CGRect v29;

  objc_msgSend(v0, "bounds");
  Width = CGRectGetWidth(v26);
  v2 = *(double *)&v0[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_numberOfBars];
  objc_msgSend(v0, "bounds");
  v3 = CGRectGetWidth(v27);
  v4 = &v0[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_mode];
  swift_beginAccess(&v0[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_mode], v25, 0, 0);
  if (*v4 == 2)
  {
    v5 = (id *)&v0[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_waveform];
    swift_beginAccess(&v0[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_waveform], v24, 0, 0);
    v6 = *v5;
  }
  else
  {
    v6 = objc_msgSend((id)objc_opt_self(MRUWaveformData), "zero");
  }
  v23 = v6;
  result = sub_100372690();
  v8 = result;
  if (result >> 62)
    goto LABEL_18;
  v9 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v9)
  {
LABEL_22:

    return swift_bridgeObjectRelease();
  }
LABEL_6:
  if (v9 >= 1)
  {
    v10 = 0;
    v11 = Width / (double)*(uint64_t *)&v2;
    Width = v11 * 0.5;
    v12 = v3 / (double)*(uint64_t *)&v2 - v11 * 0.5;
    v3 = v11 * 0.5 * 0.5;
    v13 = v12 * 0.5;
    while (1)
    {
      if ((v8 & 0xC000000000000001) != 0)
        v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v8);
      else
        v14 = *(id *)(v8 + 8 * v10 + 32);
      v15 = v14;
      v2 = v13 + v3 + v11 * (double)v10;
      objc_msgSend(v0, "bounds");
      objc_msgSend(v15, "setCenter:", v2, CGRectGetMidY(v28));
      v16 = objc_msgSend(v15, "layer");
      objc_msgSend(v16, "setCornerRadius:", v11 * 0.5 * 0.5);

      v17 = objc_msgSend(v23, "amplitudes");
      v18 = sub_1000087DC(0, &qword_100499B58, NSNumber_ptr);
      v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v17, v18);

      if ((v19 & 0xC000000000000001) != 0)
      {
        v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v19);
      }
      else
      {
        if ((unint64_t)v10 >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_18:
          if (v8 < 0)
            v22 = v8;
          else
            v22 = v8 & 0xFFFFFFFFFFFFFF8;
          result = _CocoaArrayWrapper.endIndex.getter(v22);
          v9 = result;
          if (!result)
            goto LABEL_22;
          goto LABEL_6;
        }
        v20 = *(id *)(v19 + 8 * v10 + 32);
      }
      v21 = v20;
      ++v10;
      swift_bridgeObjectRelease();
      objc_msgSend(v21, "doubleValue");

      objc_msgSend(v0, "bounds");
      CGRectGetHeight(v29);
      objc_msgSend(v15, "bounds");
      objc_msgSend(v15, "setBounds:");
      objc_msgSend(v15, "bounds");
      objc_msgSend(v15, "setBounds:");

      if (v9 == v10)
        goto LABEL_22;
    }
  }
  __break(1u);
  return result;
}

double sub_100374BB0(uint64_t a1, char *a2, char a3)
{
  uint64_t v5;
  char *v6;
  char *v7;
  double result;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char v16[24];

  sub_100005574(&qword_10049AEC0);
  __chkstk_darwin();
  v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = &a2[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_mode];
  *(_QWORD *)&result = swift_beginAccess(&a2[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_mode], v16, 0, 0).n128_u64[0];
  if (*v7 == a3)
  {
    v9 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v6, 1, 1, v9);
    type metadata accessor for MainActor(0);
    v10 = a2;
    v11 = static MainActor.shared.getter(v10);
    v12 = (_QWORD *)swift_allocObject(&unk_100467D30, 40, 7);
    v12[2] = v11;
    v12[3] = &protocol witness table for MainActor;
    v12[4] = v10;
    v13 = sub_100283A94((uint64_t)v6, (uint64_t)&unk_1004A1B08, (uint64_t)v12);
    v14 = *(_QWORD *)&v10[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_pulseTask];
    *(_QWORD *)&v10[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_pulseTask] = v13;
    *(_QWORD *)&result = swift_release(v14).n128_u64[0];
  }
  return result;
}

uint64_t sub_100374CD8(uint64_t a1)
{
  uint64_t v2;
  id v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  id v8;
  void *v9;
  _BYTE v10[24];

  sub_100374888();
  v2 = a1 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_colorPalette;
  swift_beginAccess(a1 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_colorPalette, v10, 0, 0);
  v3 = *(id *)(v2 + 8);
  result = sub_100372690();
  v5 = result;
  if ((unint64_t)result >> 62)
  {
    if (result >= 0)
      result &= 0xFFFFFFFFFFFFFF8uLL;
    result = _CocoaArrayWrapper.endIndex.getter(result);
    v6 = result;
    if (!result)
      goto LABEL_12;
  }
  else
  {
    v6 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v6)
    {
LABEL_12:

      return swift_bridgeObjectRelease();
    }
  }
  if (v6 >= 1)
  {
    for (i = 0; i != v6; ++i)
    {
      if ((v5 & 0xC000000000000001) != 0)
        v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v5);
      else
        v8 = *(id *)(v5 + 8 * i + 32);
      v9 = v8;
      objc_msgSend(v8, "setBackgroundColor:", v3);

    }
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

void sub_100374DE0(unint64_t a1)
{
  _QWORD *v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  _QWORD *v17;
  void *v18;
  _QWORD *v19;
  void *v20;
  unint64_t v21;
  id v22;

  v1 = (_QWORD *)sub_100378684(a1);
  v2 = v1[2];
  swift_bridgeObjectRelease();
  if (v2 < 2)
    return;
  v3 = 0;
  v4 = v2 >> 1;
  v5 = v2 - 1;
  v6 = 2 * v2;
  v7 = 5;
  v21 = v2 >> 1;
  while (1)
  {
    if (v3 == v5)
      goto LABEL_4;
    v8 = v1[2];
    if (v3 >= v8)
      break;
    if (v5 >= v8)
      goto LABEL_13;
    v9 = (void *)v1[v7 - 1];
    v10 = (void *)v1[v7];
    v11 = (void *)v1[v6 + 2];
    v12 = (void *)v1[v6 + 3];
    v13 = v12;
    v14 = v9;
    v15 = v10;
    v16 = v11;
    v22 = v14;
    if ((swift_isUniquelyReferenced_nonNull_native(v1) & 1) == 0)
      v1 = sub_100378364(v1);
    v17 = &v1[v7];
    v18 = (void *)v1[v7];

    *(v17 - 1) = v16;
    *v17 = v12;
    if (v5 >= v1[2])
      goto LABEL_14;
    v19 = &v1[v6];
    v20 = (void *)v1[v6 + 3];

    v19[2] = v22;
    v19[3] = v10;
    v4 = v21;
LABEL_4:
    ++v3;
    v7 += 2;
    --v5;
    v6 -= 2;
    if (v4 == v3)
      return;
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
}

void sub_100374F28(uint64_t a1)
{
  id *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  id v8;
  void *v9;
  _BYTE v10[24];

  sub_100374888();
  v2 = (id *)(a1 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_colorPalette);
  swift_beginAccess(a1 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_colorPalette, v10, 0, 0);
  v3 = *v2;
  v4 = sub_100372690();
  v5 = v4;
  if ((unint64_t)v4 >> 62)
  {
    if (v4 >= 0)
      v4 &= 0xFFFFFFFFFFFFFF8uLL;
    v6 = _CocoaArrayWrapper.endIndex.getter(v4);
    if (!v6)
      goto LABEL_12;
  }
  else
  {
    v6 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v6)
    {
LABEL_12:

      swift_bridgeObjectRelease();
      sub_100375034();
      return;
    }
  }
  if (v6 >= 1)
  {
    for (i = 0; i != v6; ++i)
    {
      if ((v5 & 0xC000000000000001) != 0)
        v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v5);
      else
        v8 = *(id *)(v5 + 8 * i + 32);
      v9 = v8;
      objc_msgSend(v8, "setBackgroundColor:", v3);

    }
    goto LABEL_12;
  }
  __break(1u);
}

void sub_100375034()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  id v8;
  void *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  id v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  id v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  id v25;
  id v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  unsigned int v30;
  double v31;
  __int128 v32;
  __int128 v33;

  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_cannedAnimationAsset);
  if (!v3)
    return;
  swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_cannedAnimationAsset));
  v4 = sub_1000A60A0(3uLL);
  if (v4 > 2)
  {
    __break(1u);
LABEL_46:
    if (v1 < 0)
      v29 = v1;
    else
      v29 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v6 = _CocoaArrayWrapper.endIndex.getter(v29);
    swift_bridgeObjectRelease();
    if (v6)
      goto LABEL_5;
LABEL_50:
    swift_release(v3);
    swift_bridgeObjectRelease();
    return;
  }
  v2 = *((unsigned __int8 *)&off_10045A0F0 + v4 + 32);
  v5 = sub_100372690();
  v1 = (uint64_t)sub_1003720B0(v5);
  swift_bridgeObjectRelease();
  if ((unint64_t)v1 >> 62)
    goto LABEL_46;
  v6 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v6)
    goto LABEL_50;
LABEL_5:
  if (v6 >= 1)
  {
    v7 = 0;
    v30 = v2;
    while (1)
    {
      if ((v1 & 0xC000000000000001) != 0)
        v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v1);
      else
        v8 = *(id *)(v1 + 8 * v7 + 32);
      v9 = v8;
      v10 = sub_100377834(v2, v7);
      if (v10)
      {
        v11 = v10;
        v12 = __chkstk_darwin();
        sub_100378A18(v12, (void (*)(uint64_t, id))sub_100379788);
        if (!v11[2]
          || (v13 = sub_10025A2A0(1), (v14 & 1) == 0)
          || (v15 = objc_msgSend(*(id *)(v11[7] + 8 * v13), "values")) == 0)
        {
          v32 = 0u;
          v33 = 0u;
          goto LABEL_20;
        }
        v16 = v15;
        v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v15, (char *)&type metadata for Any + 8);

        if (*(_QWORD *)(v17 + 16))
        {
          sub_10000684C(v17 + 32, (uint64_t)&v32);
        }
        else
        {
          v32 = 0u;
          v33 = 0u;
        }
        swift_bridgeObjectRelease();
        v2 = v30;
        if (!*((_QWORD *)&v33 + 1))
          goto LABEL_20;
        if ((swift_dynamicCast(&v31, &v32, (char *)&type metadata for Any + 8, &type metadata for CGFloat, 6) & 1) == 0)
          goto LABEL_7;
        if (!v11[2]
          || (v18 = sub_10025A2A0(0), (v19 & 1) == 0)
          || (v20 = objc_msgSend(*(id *)(v11[7] + 8 * v18), "values")) == 0)
        {
          v32 = 0u;
          v33 = 0u;
          v2 = v30;
LABEL_20:
          swift_bridgeObjectRelease();
LABEL_21:

          sub_10024ED50((uint64_t)&v32);
          goto LABEL_9;
        }
        v21 = v20;
        v22 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v20, (char *)&type metadata for Any + 8);

        if (*(_QWORD *)(v22 + 16))
        {
          sub_10000684C(v22 + 32, (uint64_t)&v32);
        }
        else
        {
          v32 = 0u;
          v33 = 0u;
        }
        v2 = v30;
        swift_bridgeObjectRelease();
        if (!*((_QWORD *)&v33 + 1))
          goto LABEL_20;
        if ((swift_dynamicCast(&v31, &v32, (char *)&type metadata for Any + 8, &type metadata for CGFloat, 6) & 1) != 0)
        {
          if (!v11[2] || (v23 = sub_10025A2A0(2), (v24 & 1) == 0))
          {
            swift_bridgeObjectRelease();
LABEL_40:
            v32 = 0u;
            v33 = 0u;
            v2 = v30;
            goto LABEL_21;
          }
          v25 = *(id *)(v11[7] + 8 * v23);
          swift_bridgeObjectRelease();
          v26 = objc_msgSend(v25, "values");

          if (!v26)
            goto LABEL_40;
          v27 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v26, (char *)&type metadata for Any + 8);

          if (*(_QWORD *)(v27 + 16))
          {
            sub_10000684C(v27 + 32, (uint64_t)&v32);
          }
          else
          {
            v32 = 0u;
            v33 = 0u;
          }
          v2 = v30;
          swift_bridgeObjectRelease();
          if (!*((_QWORD *)&v33 + 1))
            goto LABEL_21;
          if ((swift_dynamicCast(&v31, &v32, (char *)&type metadata for Any + 8, &type metadata for CGFloat, 6) & 1) != 0)
          {
            v28 = v31;
            objc_msgSend(v9, "frame");
            objc_msgSend(v9, "setFrame:");
            objc_msgSend(v9, "setCornerRadius:", v28);
          }
        }
        else
        {
LABEL_7:
          swift_bridgeObjectRelease();
        }
      }

LABEL_9:
      if (v6 == ++v7)
        goto LABEL_50;
    }
  }
  __break(1u);
}

void sub_10037549C(char *a1, char a2)
{
  id *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  float v14;
  double v15;
  float v16;
  double v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  char *v21;
  _QWORD aBlock[5];
  uint64_t v23;
  char v24[24];

  v4 = (id *)&a1[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_colorPalette];
  swift_beginAccess(&a1[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_colorPalette], v24, 0, 0);
  v5 = *v4;
  v6 = sub_100372690();
  v7 = v6;
  if ((unint64_t)v6 >> 62)
  {
    if (v6 >= 0)
      v6 &= 0xFFFFFFFFFFFFFF8uLL;
    v8 = _CocoaArrayWrapper.endIndex.getter(v6);
    if (!v8)
      goto LABEL_12;
  }
  else
  {
    v8 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v8)
      goto LABEL_12;
  }
  if (v8 < 1)
  {
    __break(1u);
    return;
  }
  for (i = 0; i != v8; ++i)
  {
    if ((v7 & 0xC000000000000001) != 0)
      v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v7);
    else
      v10 = *(id *)(v7 + 8 * i + 32);
    v11 = v10;
    objc_msgSend(v10, "setBackgroundColor:", v5);

  }
LABEL_12:

  swift_bridgeObjectRelease();
  if (a2 == 3)
  {
    v12 = (void *)objc_opt_self(UIView);
    v13 = *(void **)&a1[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_settings];
    objc_msgSend(v13, "animationDuration");
    v15 = v14;
    objc_msgSend(v13, "springDamping");
    v17 = v16;
    v18 = swift_allocObject(&unk_100467E98, 24, 7);
    *(_QWORD *)(v18 + 16) = a1;
    aBlock[4] = sub_100379B30;
    v23 = v18;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000BED80;
    aBlock[3] = &unk_100467EB0;
    v19 = _Block_copy(aBlock);
    v20 = v23;
    v21 = a1;
    swift_release(v20);
    objc_msgSend(v12, "animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:", 0, v19, 0, v15, 0.0, v17, 0.0);
    _Block_release(v19);
  }
}

void sub_1003756A4(char *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;

  v4 = *(_QWORD *)&a1[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_exclusiveAnimation];
  *(_QWORD *)&a1[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_exclusiveAnimation] = a2;
  swift_release(v4);
  v5 = swift_allocObject(&unk_100467EE8, 24, 7);
  *(_QWORD *)(v5 + 16) = a1;
  v6 = swift_allocObject(&unk_100467F10, 32, 7);
  *(_QWORD *)(v6 + 16) = sub_100379790;
  *(_QWORD *)(v6 + 24) = v5;
  v7 = *(_QWORD **)(a2 + 24);
  swift_retain(a2);
  v8 = a1;
  swift_retain(v5);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v7);
  *(_QWORD *)(a2 + 24) = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v7 = sub_100258F0C(0, v7[2] + 1, 1, v7);
    *(_QWORD *)(a2 + 24) = v7;
  }
  v11 = v7[2];
  v10 = v7[3];
  if (v11 >= v10 >> 1)
  {
    v7 = sub_100258F0C((_QWORD *)(v10 > 1), v11 + 1, 1, v7);
    *(_QWORD *)(a2 + 24) = v7;
  }
  v7[2] = v11 + 1;
  v12 = &v7[2 * v11];
  v12[4] = sub_1000B04E0;
  v12[5] = v6;
  swift_release(v5);
  sub_100377008();
}

id sub_1003757C8(char *a1)
{
  id result;
  objc_super v3;

  v3.receiver = a1;
  v3.super_class = (Class)swift_getObjectType();
  result = objc_msgSendSuper2(&v3, "layoutSubviews");
  if (!*(_QWORD *)&a1[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_exclusiveAnimation])
    return (id)sub_100374888();
  return result;
}

Swift::Void __swiftcall WaveformPlayIndicator.layoutSubviews()()
{
  char *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v1, "layoutSubviews");
  if (!*(_QWORD *)&v0[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_exclusiveAnimation])
    sub_100374888();
}

void sub_100375860()
{
  char *v0;
  void *v1;
  double Width;
  uint64_t v3;
  double Height;
  char *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  double v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  id v35;
  char *v36;
  id v37;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v39;
  unint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  char *v45;
  char v46;
  unint64_t v47;
  unint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  void *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  id v56;
  uint64_t v57;
  void **aBlock;
  uint64_t v59;
  void *v60;
  void *v61;
  id (*v62)(id);
  uint64_t v63;
  char v64[32];
  CGRect v65;
  CGRect v66;

  v1 = v0;
  objc_msgSend(v0, "bounds");
  Width = CGRectGetWidth(v65);
  v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_numberOfBars];
  objc_msgSend(v0, "bounds");
  Height = CGRectGetHeight(v66);
  v5 = &v0[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_colorPalette];
  swift_beginAccess(&v0[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_colorPalette], v64, 0, 0);
  v6 = (void *)*((_QWORD *)v5 + 2);
  v7 = (void *)*((_QWORD *)v5 + 3);
  v8 = type metadata accessor for AnimationGroup();
  v9 = swift_allocObject(v8, 32, 7);
  *(_QWORD *)(v9 + 16) = _swiftEmptyArrayStorage;
  *(_QWORD *)(v9 + 24) = _swiftEmptyArrayStorage;
  v57 = v9;
  v56 = v6;
  v55 = v7;
  v51 = v1;
  v10 = sub_100372690();
  v11 = v10;
  if ((unint64_t)v10 >> 62)
  {
    if (v10 >= 0)
      v10 &= 0xFFFFFFFFFFFFFF8uLL;
    v12 = _CocoaArrayWrapper.endIndex.getter(v10);
    if (!v12)
      goto LABEL_17;
  }
  else
  {
    v12 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v12)
      goto LABEL_17;
  }
  if (v12 < 1)
  {
    __break(1u);
    return;
  }
  v13 = 0;
  v52 = v11 & 0xC000000000000001;
  v14 = Width / (double)v3 * 0.5;
  v15 = Height * 0.7;
  v53 = v12;
  v54 = v11;
  do
  {
    if (v52)
      v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v11);
    else
      v16 = *(id *)(v11 + 8 * v13 + 32);
    v17 = v16;
    v18 = objc_msgSend(objc_allocWithZone((Class)UICubicTimingParameters), "initWithControlPoint1:controlPoint2:", 0.11, 0.0, 0.5, 0.0);
    v19 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:timingParameters:", v18, 0.25);

    v20 = swift_allocObject(&unk_100467D58, 40, 7);
    *(_QWORD *)(v20 + 16) = v17;
    *(_QWORD *)(v20 + 24) = v55;
    *(double *)(v20 + 32) = v15;
    v62 = (id (*)(id))sub_100379714;
    v63 = v20;
    aBlock = _NSConcreteStackBlock;
    v59 = 1107296256;
    v60 = sub_1000BED80;
    v61 = &unk_100467D70;
    v21 = _Block_copy(&aBlock);
    v22 = v63;
    v23 = v55;
    v24 = v17;
    objc_msgSend(v19, "addAnimations:", v21, swift_release(v22).n128_f64[0]);
    _Block_release(v21);
    v25 = objc_msgSend(objc_allocWithZone((Class)UICubicTimingParameters), "initWithControlPoint1:controlPoint2:", 0.11, 0.0, 0.5, 0.0);
    v26 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:timingParameters:", v25, 0.25);

    v27 = swift_allocObject(&unk_100467DA8, 40, 7);
    *(_QWORD *)(v27 + 16) = v24;
    *(_QWORD *)(v27 + 24) = v56;
    *(double *)(v27 + 32) = v14;
    v62 = (id (*)(id))sub_100379714;
    v63 = v27;
    aBlock = _NSConcreteStackBlock;
    v59 = 1107296256;
    v60 = sub_1000BED80;
    v61 = &unk_100467DC0;
    v28 = _Block_copy(&aBlock);
    v29 = v63;
    v30 = v56;
    v31 = v24;
    objc_msgSend(v26, "addAnimations:", v28, swift_release(v29).n128_f64[0]);
    _Block_release(v28);
    v32 = swift_allocObject(&unk_100467DF8, 24, 7);
    *(_QWORD *)(v32 + 16) = v26;
    v62 = sub_100379770;
    v63 = v32;
    aBlock = _NSConcreteStackBlock;
    v59 = 1107296256;
    v60 = sub_100204BB4;
    v61 = &unk_100467E10;
    v33 = _Block_copy(&aBlock);
    v34 = v63;
    v35 = v26;
    objc_msgSend(v19, "addCompletion:", v33, swift_release(v34).n128_f64[0]);
    _Block_release(v33);
    v36 = *(char **)(v57 + 16);
    v37 = v19;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v36);
    *(_QWORD *)(v57 + 16) = v36;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v36 = sub_100258E0C(0, *((_QWORD *)v36 + 2) + 1, 1, v36);
      *(_QWORD *)(v57 + 16) = v36;
    }
    v40 = *((_QWORD *)v36 + 2);
    v39 = *((_QWORD *)v36 + 3);
    if (v40 >= v39 >> 1)
    {
      v36 = sub_100258E0C((char *)(v39 > 1), v40 + 1, 1, v36);
      *(_QWORD *)(v57 + 16) = v36;
    }
    *((_QWORD *)v36 + 2) = v40 + 1;
    v41 = &v36[16 * v40];
    *((_QWORD *)v41 + 4) = v37;
    *((double *)v41 + 5) = (double)v13 * 0.1;

    ++v13;
    v11 = v54;
  }
  while (v53 != v13);
LABEL_17:
  swift_bridgeObjectRelease();
  v42 = swift_allocObject(&unk_100467E48, 24, 7);
  *(_QWORD *)(v42 + 16) = v51;
  v43 = swift_allocObject(&unk_100467E70, 32, 7);
  *(_QWORD *)(v43 + 16) = sub_100379AC0;
  *(_QWORD *)(v43 + 24) = v42;
  v44 = *(_QWORD **)(v57 + 24);
  v45 = v51;
  swift_retain(v42);
  v46 = swift_isUniquelyReferenced_nonNull_native(v44);
  *(_QWORD *)(v57 + 24) = v44;
  if ((v46 & 1) == 0)
  {
    v44 = sub_100258F0C(0, v44[2] + 1, 1, v44);
    *(_QWORD *)(v57 + 24) = v44;
  }
  v48 = v44[2];
  v47 = v44[3];
  if (v48 >= v47 >> 1)
  {
    v44 = sub_100258F0C((_QWORD *)(v47 > 1), v48 + 1, 1, v44);
    *(_QWORD *)(v57 + 24) = v44;
  }
  v44[2] = v48 + 1;
  v49 = &v44[2 * v48];
  v49[4] = sub_1000B04E0;
  v49[5] = v43;
  swift_release(v42);
  v50 = *(_QWORD *)&v45[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_exclusiveAnimation];
  *(_QWORD *)&v45[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_exclusiveAnimation] = v57;
  swift_retain(v57);
  swift_release(v50);
  sub_100377008();

  swift_release(v57);
}

uint64_t sub_100375E20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4[7] = a4;
  v5 = type metadata accessor for ContinuousClock.Instant(0);
  v4[8] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[9] = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[10] = swift_task_alloc(v7);
  v4[11] = swift_task_alloc(v7);
  v8 = type metadata accessor for ContinuousClock(0);
  v4[12] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v4[13] = v9;
  v4[14] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MainActor(0);
  v4[15] = static MainActor.shared.getter(v10);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v10, &protocol witness table for MainActor);
  v4[16] = v11;
  v4[17] = v12;
  return swift_task_switch(sub_100375EEC, v11, v12);
}

uint64_t sub_100375EEC(__n128 a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = static Task<>.isCancelled.getter(a1);
  if ((result & 1) != 0)
  {
    swift_release(*(_QWORD *)(v1 + 120));
    v3 = *(_QWORD *)(v1 + 80);
    v4 = *(_QWORD *)(v1 + 88);
    swift_task_dealloc(*(_QWORD *)(v1 + 112));
    swift_task_dealloc(v4);
    swift_task_dealloc(v3);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
  v5 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_numberOfBars);
  v6 = 100 * v5;
  if ((unsigned __int128)(v5 * (__int128)100) >> 64 != (100 * v5) >> 63)
  {
    __break(1u);
    goto LABEL_9;
  }
  v7 = __OFADD__(v6, 500);
  v8 = v6 + 500;
  if (v7)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v7 = __OFADD__(v8, 600);
  v9 = v8 + 600;
  *(_QWORD *)(v1 + 144) = v9;
  if (v7)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if ((v9 & 0x8000000000000000) == 0)
  {
    v10 = 1000000000000000 * v9;
    v11 = ((unint64_t)v9 * (unsigned __int128)0x38D7EA4C68000uLL) >> 64;
    sub_100375860();
    ContinuousClock.init()();
    *(_QWORD *)(v1 + 40) = v10;
    *(_QWORD *)(v1 + 48) = v11;
    *(_QWORD *)(v1 + 16) = 0;
    *(_QWORD *)(v1 + 24) = 0;
    *(_BYTE *)(v1 + 32) = 1;
    return swift_task_switch(sub_100375FEC, 0, 0);
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_100375FEC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  _QWORD *v8;

  v1 = v0[12];
  v3 = v0[9];
  v2 = v0[10];
  v4 = v0[8];
  v5 = sub_100006924(&qword_1004A1B10, (uint64_t (*)(uint64_t))&type metadata accessor for ContinuousClock, (uint64_t)&protocol conformance descriptor for ContinuousClock);
  dispatch thunk of Clock.now.getter(v1, v5);
  v6 = sub_100006924(&qword_1004A1B18, (uint64_t (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant, (uint64_t)&protocol conformance descriptor for ContinuousClock.Instant);
  dispatch thunk of InstantProtocol.advanced(by:)(v0 + 5, v4, v6);
  v7 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[19] = v7;
  v7(v2, v4);
  v8 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of Clock.sleep(until:tolerance:)[1]);
  v0[20] = v8;
  *v8 = v0;
  v8[1] = sub_1003760F8;
  return dispatch thunk of Clock.sleep(until:tolerance:)(v0[11], v0 + 2, v0[12], v5);
}

uint64_t sub_1003760F8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD **)v1;
  v4 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)v1 + 152);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 160);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  v6 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  *(_QWORD *)(*(_QWORD *)v1 + 168) = v0;
  swift_task_dealloc(v3);
  v4(v5, v6);
  if (v0)
  {
    v7 = sub_100376250;
    v8 = 0;
    v9 = 0;
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v2[13] + 8))(v2[14], v2[12]);
    v8 = v2[16];
    v9 = v2[17];
    v7 = sub_100376194;
  }
  return swift_task_switch(v7, v8, v9);
}

uint64_t sub_100376194(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if ((static Task<>.isCancelled.getter(a1) & 1) != 0)
  {
    swift_release(*(_QWORD *)(v1 + 120));
    v2 = *(_QWORD *)(v1 + 80);
    v3 = *(_QWORD *)(v1 + 88);
    swift_task_dealloc(*(_QWORD *)(v1 + 112));
    swift_task_dealloc(v3);
    swift_task_dealloc(v2);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
  else
  {
    v5 = *(_QWORD *)(v1 + 144);
    v6 = (v5 * (unsigned __int128)0x38D7EA4C68000uLL) >> 64;
    v7 = 1000000000000000 * v5;
    sub_100375860();
    ContinuousClock.init()();
    *(_QWORD *)(v1 + 40) = v7;
    *(_QWORD *)(v1 + 48) = v6;
    *(_QWORD *)(v1 + 16) = 0;
    *(_QWORD *)(v1 + 24) = 0;
    *(_BYTE *)(v1 + 32) = 1;
    return swift_task_switch(sub_100375FEC, 0, 0);
  }
}

uint64_t sub_100376250()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v0[13];
  v1 = v0[14];
  v3 = v0[12];
  swift_errorRelease(v0[21]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch(sub_100379AF4, v0[16], v0[17]);
}

Swift::Void __swiftcall WaveformPlayIndicator.tintColorDidChange()()
{
  char *v0;
  char *v1;
  double v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  id v9;
  void *v10;
  char v11[24];
  objc_super v12;

  v12.receiver = v0;
  v12.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v12, "tintColorDidChange");
  v1 = &v0[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_mode];
  *(_QWORD *)&v2 = swift_beginAccess(&v0[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_mode], v11, 0, 0).n128_u64[0];
  if (*v1 == 2)
  {
    v3 = objc_msgSend(v0, "tintColor", v2);
    if (v3)
    {
      v4 = v3;
      v5 = sub_100372690();
      v6 = v5;
      if ((unint64_t)v5 >> 62)
      {
        if (v5 >= 0)
          v5 &= 0xFFFFFFFFFFFFFF8uLL;
        v7 = _CocoaArrayWrapper.endIndex.getter(v5);
        if (!v7)
          goto LABEL_14;
      }
      else
      {
        v7 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (!v7)
        {
LABEL_14:

          swift_bridgeObjectRelease();
          return;
        }
      }
      if (v7 >= 1)
      {
        for (i = 0; i != v7; ++i)
        {
          if ((v6 & 0xC000000000000001) != 0)
            v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v6);
          else
            v9 = *(id *)(v6 + 8 * i + 32);
          v10 = v9;
          objc_msgSend(v9, "setBackgroundColor:", v4);

        }
        goto LABEL_14;
      }
      __break(1u);
    }
    __break(1u);
  }
}

Swift::Void __swiftcall WaveformPlayIndicator.didMoveToWindow()()
{
  void *v0;
  id v1;
  id v2;
  BOOL v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  objc_super v9;

  v9.receiver = v0;
  v9.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v9, "didMoveToWindow");
  v1 = objc_msgSend(v0, "window");
  v2 = v1;
  if (v1)

  v3 = v2 != 0;
  KeyPath = swift_getKeyPath(&unk_1003A0A90);
  v5 = swift_getKeyPath(&unk_1003A0AB8);
  static Published.subscript.getter(&v8, v0, KeyPath);
  swift_release(KeyPath);
  swift_release(v5);
  LOBYTE(KeyPath) = v8;
  v6 = swift_getKeyPath(&unk_1003A0A90);
  v7 = swift_getKeyPath(&unk_1003A0AB8);
  v8 = v3;
  static Published.subscript.setter(&v8, v0, v6, v7);
  sub_100376684(KeyPath);
}

void WaveformPlayIndicator.isVisible.setter(char a1)
{
  void *v1;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  KeyPath = swift_getKeyPath(&unk_1003A0A90);
  v4 = swift_getKeyPath(&unk_1003A0AB8);
  static Published.subscript.getter(&v8, v1, KeyPath);
  swift_release(KeyPath);
  swift_release(v4);
  LOBYTE(KeyPath) = v8;
  v5 = swift_getKeyPath(&unk_1003A0A90);
  v6 = swift_getKeyPath(&unk_1003A0AB8);
  v7 = a1;
  static Published.subscript.setter(&v7, v1, v5, v6);
  sub_100376684(KeyPath);
}

void sub_100376684(char a1)
{
  uint64_t v1;
  int v2;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1 & 1;
  KeyPath = swift_getKeyPath(&unk_1003A0A90);
  v4 = swift_getKeyPath(&unk_1003A0AB8);
  static Published.subscript.getter((uint64_t *)((char *)&v7 + 1), v1, KeyPath);
  swift_release(KeyPath);
  swift_release(v4);
  if (BYTE1(v7) != v2)
  {
    v5 = swift_getKeyPath(&unk_1003A0A90);
    v6 = swift_getKeyPath(&unk_1003A0AB8);
    static Published.subscript.getter(&v7, v1, v5);
    swift_release(v5);
    swift_release(v6);
    if (v7 == 1)
      sub_100374888();
  }
}

uint64_t WaveformPlayIndicator.isVisible.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_1003A0A90);
  v2 = swift_getKeyPath(&unk_1003A0AB8);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

void sub_1003767C4(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_1003A0A90);
  v5 = swift_getKeyPath(&unk_1003A0AB8);
  static Published.subscript.getter(&v6, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  *a2 = v6;
}

void sub_100376840(char *a1, void **a2)
{
  char v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_1003A0A90);
  v5 = swift_getKeyPath(&unk_1003A0AB8);
  static Published.subscript.getter(&v9, v3, KeyPath);
  swift_release(KeyPath);
  swift_release(v5);
  LOBYTE(KeyPath) = v9;
  v6 = swift_getKeyPath(&unk_1003A0A90);
  v7 = swift_getKeyPath(&unk_1003A0AB8);
  v8 = v2;
  static Published.subscript.setter(&v8, v3, v6, v7);
  sub_100376684(KeyPath);
}

void (*WaveformPlayIndicator.isVisible.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = (_QWORD *)(a1 + 9);
  *(_QWORD *)a1 = v1;
  KeyPath = swift_getKeyPath(&unk_1003A0A90);
  v5 = swift_getKeyPath(&unk_1003A0AB8);
  static Published.subscript.getter(v3, v1, KeyPath);
  swift_release(v5);
  swift_release(KeyPath);
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a1 + 9);
  return sub_100376998;
}

void sub_100376998(uint64_t a1)
{
  _QWORD *v2;
  char v3;
  uint64_t KeyPath;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  v2 = (_QWORD *)(a1 + 9);
  v3 = *(_BYTE *)(a1 + 8);
  KeyPath = swift_getKeyPath(&unk_1003A0A90);
  v5 = swift_getKeyPath(&unk_1003A0AB8);
  v6 = *(void **)a1;
  static Published.subscript.getter(v2, *(_QWORD *)a1, KeyPath);
  swift_release(v5);
  swift_release(KeyPath);
  LOBYTE(KeyPath) = *(_BYTE *)(a1 + 9);
  v7 = swift_getKeyPath(&unk_1003A0A90);
  v8 = swift_getKeyPath(&unk_1003A0AB8);
  *(_BYTE *)(a1 + 9) = v3;
  static Published.subscript.setter(v2, v6, v7, v8);
  sub_100376684(KeyPath);
}

uint64_t WaveformPlayIndicator.$isVisible.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator__isVisible, v3, 33, 0);
  v1 = sub_100005574(&qword_10049DAA0);
  Published.projectedValue.getter(v1);
  return swift_endAccess(v3);
}

uint64_t WaveformPlayIndicator.$isVisible.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE v10[24];

  v3 = sub_100005574(&qword_1004A0B30);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin();
  v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator__isVisible, v10, 33, 0);
  v7 = sub_100005574(&qword_10049DAA0);
  Published.projectedValue.setter(v6, v7);
  swift_endAccess(v10);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
}

void (*WaveformPlayIndicator.$isVisible.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_100005574(&qword_1004A0B30);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator__isVisible;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_100005574(&qword_10049DAA0);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_10015301C;
}

void sub_100376C68()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_numberOfBars);
  if (v1 < 0)
  {
    __break(1u);
  }
  else if (v1)
  {
    specialized ContiguousArray.reserveCapacity(_:)(v1);
    do
    {
      v2 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
      v3 = objc_msgSend(v2, "layer");
      objc_msgSend(v3, "setCornerCurve:", kCACornerCurveContinuous);

      v4 = objc_msgSend(v2, "layer");
      objc_msgSend(v4, "setAllowsEdgeAntialiasing:", 1);

      v5 = objc_msgSend(v2, "tintColor");
      objc_msgSend(v2, "setBackgroundColor:", v5);

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      v6 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v6);
      v7 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v6, v2);
      specialized ContiguousArray._endMutation()(v7);
      --v1;
    }
    while (v1);
  }
}

void sub_100376DCC(char a1, uint64_t a2, void *a3)
{
  unint64_t v5;
  id v6;

  if (a1)
  {
    if (a1 == 1)
      v5 = 0x80000001003B78B0;
    else
      v5 = 0x80000001003B78D0;
  }
  else
  {
    v5 = 0x80000001003B7890;
  }
  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v5);
  objc_msgSend(a3, "addAnimation:forKey:", a2, v6);

}

unint64_t sub_100376E84(char a1)
{
  unint64_t result;

  result = 0xD000000000000015;
  if (a1 == 1)
    return 0xD000000000000014;
  return result;
}

void WaveformPlayIndicator.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer("MusicCoreUI.WaveformPlayIndicator", 33, "init(frame:)", 12, 0);
  __break(1u);
}

void sub_100377008()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  void **v10;
  double *v11;
  void *v12;
  double v13;
  id v14;
  uint64_t v15;
  void *v16;
  void **v17;
  uint64_t v18;
  id v19;
  NSObject *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  __n128 v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  void **aBlock;
  uint64_t v48;
  void *v49;
  void *v50;
  void *v51;
  uint64_t v52;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin();
  v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v44 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v43 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = dispatch_group_create();
  v9 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + 16);
  v10 = _NSConcreteStackBlock;
  v45 = v3;
  if (v9)
  {
    v39 = v1;
    v40 = v6;
    v41 = v5;
    v42 = v2;
    v38 = swift_bridgeObjectRetain();
    v11 = (double *)(v38 + 40);
    do
    {
      v12 = (void *)*((_QWORD *)v11 - 1);
      v13 = *v11;
      v11 += 2;
      v14 = v12;
      dispatch_group_enter(v8);
      objc_msgSend(v14, "startAnimationAfterDelay:", v13);
      v15 = swift_allocObject(&unk_100467A88, 24, 7);
      *(_QWORD *)(v15 + 16) = v8;
      v51 = sub_100379554;
      v52 = v15;
      aBlock = v10;
      v48 = 1107296256;
      v49 = sub_100204BB4;
      v50 = &unk_100467AA0;
      v16 = _Block_copy(&aBlock);
      v17 = v10;
      v18 = v52;
      v19 = v14;
      v20 = v8;
      v21 = v18;
      v10 = v17;
      objc_msgSend(v19, "addCompletion:", v16, swift_release(v21).n128_f64[0]);
      _Block_release(v16);

      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
    v5 = v41;
    v2 = v42;
    v1 = v39;
    v6 = v40;
  }
  v22 = sub_1000087DC(0, (unint64_t *)&qword_100499FB0, OS_dispatch_queue_ptr);
  v30 = (void *)static OS_dispatch_queue.main.getter(v22, v23, v24, v25, v26, v27, v28, v29);
  v51 = sub_10037955C;
  v52 = v1;
  aBlock = v10;
  v48 = 1107296256;
  v49 = sub_1000BED80;
  v50 = &unk_100467AC8;
  v31 = _Block_copy(&aBlock);
  v32 = swift_retain(v1);
  v33 = v43;
  static DispatchQoS.unspecified.getter(v32);
  v46 = _swiftEmptyArrayStorage;
  v34 = sub_100006924((unint64_t *)&unk_10049B100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v35 = sub_100005574(&qword_100499718);
  v36 = sub_10002FFB8((unint64_t *)&qword_10049B110, &qword_100499718, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v46, v35, v36, v2, v34);
  OS_dispatch_group.notify(qos:flags:queue:execute:)(v33, v5, v30, v31);
  _Block_release(v31);

  (*(void (**)(char *, uint64_t))(v45 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v33, v6);
  swift_release(v52);
}

uint64_t sub_100377320(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;

  v1 = *(_QWORD *)(result + 24);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    v3 = (_QWORD *)(v1 + 40);
    do
    {
      v5 = (void (*)(uint64_t))*(v3 - 1);
      v4 = *v3;
      v6 = swift_retain(*v3);
      v5(v6);
      swift_release(v4);
      v3 += 2;
      --v2;
    }
    while (v2);
    return swift_bridgeObjectRelease(v1);
  }
  return result;
}

uint64_t sub_10037739C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t sub_1003773C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  NSString v8;
  NSString v9;
  id v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t result;
  uint64_t v13;

  v0 = type metadata accessor for URL(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin();
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005574(&qword_1004991A0);
  __chkstk_darwin();
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000086DC(v0, qword_1004A1810);
  v6 = sub_1000086B4(v0, (uint64_t)qword_1004A1810);
  if (qword_100498860 != -1)
    swift_once(&qword_100498860, sub_100232E30);
  v7 = (void *)qword_1004A2F90;
  v8 = String._bridgeToObjectiveC()();
  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend(v7, "URLForResource:withExtension:", v8, v9);

  if (v10)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v10);

    v11 = *(void (**)(char *, char *, uint64_t))(v1 + 32);
    v11(v5, v3, v0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1 + 56))(v5, 0, 1, v0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v1 + 48))(v5, 1, v0);
    if ((_DWORD)result != 1)
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v11)(v6, v5, v0);
  }
  else
  {
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56))(v5, 1, 1, v0);
  }
  __break(1u);
  return result;
}

void sub_1003775A8()
{
  qword_1004A1828 = 0x4059000000000000;
}

uint64_t sub_1003775B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v1 = v0;
  v2 = type metadata accessor for URL(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin();
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_OWORD *)(v1 + 16) = xmmword_100395550;
  *(_QWORD *)(v1 + 32) = 0x4030000000000000;
  if (qword_100498DF0 != -1)
    swift_once(&qword_100498DF0, sub_1003773C8);
  v6 = sub_1000086B4(v2, (uint64_t)qword_1004A1810);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  *(_QWORD *)(v1 + 40) = sub_100378B94((uint64_t)v5);
  *(_QWORD *)(v1 + 48) = v7;
  return v1;
}

id sub_100377834(uint64_t a1, unint64_t a2)
{
  double *v2;
  NSObject *v3;
  uint64_t v4;
  NSObject *v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  unint64_t v13;
  NSObject *v14;
  unint64_t v15;
  unint64_t v16;
  double v17;
  double v18;
  double v19;
  id result;
  void *v21;
  char *v22;
  Class isa;
  NSObject *v24;
  NSString v25;
  double v26;
  double v27;
  double v28;
  void *v29;
  char *v30;
  Class v31;
  NSObject *v32;
  NSString v33;
  void *v34;
  char *v35;
  Class v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t inited;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  os_log_type_t v48;
  NSObject *v49;
  NSObject *v50;
  uint8_t *v51;
  NSObject *v52;
  NSObject *v53;
  NSObject *v54;
  NSObject *v55;
  NSObject *v56;
  char v57[80];
  double v58;
  _OWORD v59[2];
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  unint64_t v63;
  __int128 v64;
  uint64_t v65;

  sub_100377F98(a1, a2);
  if (!v3)
  {
LABEL_29:
    if (qword_100498E00 != -1)
LABEL_47:
      swift_once(&qword_100498E00, sub_10037828C);
    v37 = type metadata accessor for Logger(0, v4);
    v38 = sub_1000086B4(v37, (uint64_t)qword_1004A1830);
    v39 = Logger.logObject.getter(v38);
    v40 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v39, v40))
    {
      v41 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v41 = 0;
      _os_log_impl((void *)&_mh_execute_header, v39, v40, "BouncyBars asset does not have expected layers / animations", v41, 2u);
      swift_slowDealloc(v41, -1, -1);
    }
LABEL_39:

    return 0;
  }
  v5 = v3;
  v6 = -[NSObject values](v3, "values");
  if (!v6)
  {

    goto LABEL_29;
  }
  v7 = v6;
  v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, (char *)&type metadata for Any + 8);

  v9 = -[NSObject copy](v5, "copy");
  _bridgeAnyObjectToAny(_:)(v9);
  swift_unknownObjectRelease(v9);
  v10 = sub_1000087DC(0, &qword_1004A1AE8, CAKeyframeAnimation_ptr);
  swift_dynamicCast(&v60, &v63, (char *)&type metadata for Any + 8, v10, 7);
  v56 = v60;
  v11 = -[NSObject copy](v5, "copy");
  _bridgeAnyObjectToAny(_:)(v11);
  swift_unknownObjectRelease(v11);
  swift_dynamicCast(&v60, &v63, (char *)&type metadata for Any + 8, v10, 7);
  v55 = v60;
  v53 = v5;
  v12 = -[NSObject copy](v5, "copy");
  _bridgeAnyObjectToAny(_:)(v12);
  swift_unknownObjectRelease(v12);
  swift_dynamicCast(&v60, &v63, (char *)&type metadata for Any + 8, v10, 7);
  v13 = 0;
  v54 = v60;
  while (1)
  {
    v14 = v56;
    v15 = *(_QWORD *)(v8 + 16);
    if (v13 == v15)
    {
      v62 = 0;
      v60 = 0u;
      v61 = 0u;
    }
    else
    {
      if (v13 >= v15)
        goto LABEL_46;
      sub_10000684C(v8 + 32 + 32 * v13, (uint64_t)v59);
      *(_QWORD *)&v60 = v13;
      sub_10009B168(v59, (__int128 *)((char *)&v60 + 8));
      ++v13;
    }
    sub_1000149A8((uint64_t)&v60, (uint64_t)&v63, &qword_1004A1AF0);
    if (!v65)
    {
      swift_bridgeObjectRelease();
      v42 = sub_100005574(&qword_1004A1AF8);
      inited = swift_initStackObject(v42, v57);
      *(_OWORD *)(inited + 16) = xmmword_100384A40;
      *(_BYTE *)(inited + 32) = 0;
      *(_QWORD *)(inited + 40) = v56;
      *(_BYTE *)(inited + 48) = 1;
      *(_QWORD *)(inited + 56) = v55;
      *(_BYTE *)(inited + 64) = 2;
      *(_QWORD *)(inited + 72) = v54;
      v44 = sub_100233A00(inited);

      return (id)v44;
    }
    v16 = v63;
    sub_10009B168(&v64, &v60);
    if (!swift_dynamicCast(&v58, &v60, (char *)&type metadata for Any + 8, &type metadata for CGFloat, 6))
    {
      swift_bridgeObjectRelease();
      if (qword_100498E00 != -1)
        swift_once(&qword_100498E00, sub_10037828C);
      v46 = type metadata accessor for Logger(0, v45);
      v47 = sub_1000086B4(v46, (uint64_t)qword_1004A1830);
      v39 = Logger.logObject.getter(v47);
      v48 = static os_log_type_t.default.getter();
      v49 = v53;
      if (os_log_type_enabled(v39, v48))
      {
        v50 = v53;
        v51 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v51 = 0;
        _os_log_impl((void *)&_mh_execute_header, v39, v48, "BouncyBars asset does not have expected layers / animations", v51, 2u);
        swift_slowDealloc(v51, -1, -1);
        v52 = v56;
        v14 = v54;
        v49 = v55;
      }
      else
      {
        v52 = v39;
        v50 = v54;
        v39 = v55;
      }

      goto LABEL_39;
    }
    v17 = v58;
    if (qword_100498DF8 != -1)
      swift_once(&qword_100498DF8, sub_1003775A8);
    v18 = v17 / *(double *)&qword_1004A1828;
    v19 = v18 * v2[4];
    *((_QWORD *)&v61 + 1) = &type metadata for CGFloat;
    *(double *)&v60 = v19;
    result = -[NSObject values](v56, "values");
    if (!result)
      break;
    v21 = result;
    v22 = (char *)static Array._unconditionallyBridgeFromObjectiveC(_:)(result, (char *)&type metadata for Any + 8);

    if ((swift_isUniquelyReferenced_nonNull_native(v22) & 1) != 0)
    {
      if ((v16 & 0x8000000000000000) != 0)
        goto LABEL_41;
    }
    else
    {
      v22 = sub_100378378((uint64_t)v22);
      if ((v16 & 0x8000000000000000) != 0)
      {
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
        goto LABEL_47;
      }
    }
    if (v16 >= *((_QWORD *)v22 + 2))
      goto LABEL_42;
    sub_10000682C(&v22[32 * v16 + 32]);
    sub_10009B168(&v60, &v22[32 * v16 + 32]);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    -[NSObject setValues:](v56, "setValues:", isa);

    v24 = v55;
    v25 = String._bridgeToObjectiveC()();
    -[NSObject setKeyPath:](v24, "setKeyPath:", v25);

    v26 = v2[3];
    v27 = v26 + v2[2];
    if (v26 > v27)
      goto LABEL_43;
    v28 = v26 + v18 * (v27 - v26);
    *((_QWORD *)&v61 + 1) = &type metadata for CGFloat;
    *(double *)&v60 = v28;
    result = -[NSObject values](v24, "values");
    if (!result)
      goto LABEL_49;
    v29 = result;
    v30 = (char *)static Array._unconditionallyBridgeFromObjectiveC(_:)(result, (char *)&type metadata for Any + 8);

    if ((swift_isUniquelyReferenced_nonNull_native(v30) & 1) == 0)
      v30 = sub_100378378((uint64_t)v30);
    if (v16 >= *((_QWORD *)v30 + 2))
      goto LABEL_44;
    sub_10000682C(&v30[32 * v16 + 32]);
    sub_10009B168(&v60, &v30[32 * v16 + 32]);
    v31 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    -[NSObject setValues:](v24, "setValues:", v31);

    v32 = v54;
    v33 = String._bridgeToObjectiveC()();
    -[NSObject setKeyPath:](v32, "setKeyPath:", v33);

    *((_QWORD *)&v61 + 1) = &type metadata for CGFloat;
    *(double *)&v60 = v28 * 0.5;
    result = -[NSObject values](v32, "values");
    if (!result)
      goto LABEL_50;
    v34 = result;
    v35 = (char *)static Array._unconditionallyBridgeFromObjectiveC(_:)(result, (char *)&type metadata for Any + 8);

    if ((swift_isUniquelyReferenced_nonNull_native(v35) & 1) == 0)
      v35 = sub_100378378((uint64_t)v35);
    if (v16 >= *((_QWORD *)v35 + 2))
      goto LABEL_45;
    sub_10000682C(&v35[32 * v16 + 32]);
    sub_10009B168(&v60, &v35[32 * v16 + 32]);
    v36 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    -[NSObject setValues:](v32, "setValues:", v36);

  }
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
  return result;
}

void sub_100377F98(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  NSString v18;
  id v19;
  __int128 v20;
  __int128 v21;
  void *v22;

  v4 = *(_QWORD *)(v2 + 40);
  if (*(_QWORD *)(v4 + 16))
  {
    v5 = (a1 << 56) + 0x41746E6169726156;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v6 = sub_10009ABAC(v5, 0xE800000000000000);
    if ((v7 & 1) != 0)
    {
      sub_10000684C(*(_QWORD *)(v4 + 56) + 32 * v6, (uint64_t)&v20);
    }
    else
    {
      v20 = 0u;
      v21 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v20 = 0u;
    v21 = 0u;
    swift_bridgeObjectRetain();
  }
  v8 = sub_100005574(&qword_10049B130);
  v9 = sub_1000087DC(0, &qword_100499970, CALayer_ptr);
  if ((swift_dynamicCast(&v22, &v20, v8, v9, 6) & 1) != 0)
  {
    v10 = v22;
  }
  else
  {
    v10 = 0;
    v22 = 0;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v10)
  {
    v11 = objc_msgSend(v10, "sublayers");

    if (v11)
    {
      v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, v9);

      if ((v12 & 0xC000000000000001) == 0)
      {
        if ((a2 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (*(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
        {
          v13 = *(id *)(v12 + 8 * a2 + 32);
          goto LABEL_16;
        }
        __break(1u);
        return;
      }
      v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a2, v12);
LABEL_16:
      v14 = v13;
      swift_bridgeObjectRelease();
      v15 = objc_msgSend(v14, "animationKeys");
      if (v15)
      {
        v16 = v15;
        v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v15, &type metadata for String);

        if (*(_QWORD *)(v17 + 16))
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v18 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          v19 = objc_msgSend(v14, "animationForKey:", v18);

          if (v19)
          {
            objc_opt_self(CAKeyframeAnimation);
            if (!swift_dynamicCastObjCClass(v19))

          }
        }
        else
        {

          swift_bridgeObjectRelease();
        }
      }
      else
      {

      }
    }
  }
}

uint64_t sub_100378204(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1002525B8(*a1, *a2);
}

Swift::Int sub_100378210()
{
  char *v0;

  return sub_10037200C(*v0);
}

uint64_t sub_100378218(uint64_t a1)
{
  char *v1;

  return sub_1002508E8(a1, *v1);
}

Swift::Int sub_100378220(uint64_t a1)
{
  char *v1;

  return sub_100252E58(a1, *v1);
}

unint64_t sub_100378228@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_100379A78(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_100378254@<X0>(unint64_t *a1@<X8>)
{
  char *v1;
  unint64_t result;
  unint64_t v4;

  result = sub_100376E84(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_10037827C(_QWORD *a1@<X8>)
{
  *a1 = &off_10045A180;
}

uint64_t sub_10037828C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for Logger(0, a2);
  sub_1000086DC(v2, qword_1004A1830);
  sub_1000086B4(v2, (uint64_t)qword_1004A1830);
  sub_1000087DC(0, (unint64_t *)&qword_1004999D8, OS_os_log_ptr);
  v3 = OS_os_log.init(musicCategory:)(0x614279636E756F42, 0xEF74657373417372);
  return Logger.init(_:)(v3);
}

uint64_t sub_100378318()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);

  swift_bridgeObjectRelease(v1);
  return swift_deallocClassInstance(v0, 56, 7);
}

_QWORD *sub_100378350(_QWORD *a1)
{
  return sub_100258AA8(0, a1[2], 0, a1);
}

_QWORD *sub_100378364(_QWORD *a1)
{
  return sub_10025902C(0, a1[2], 0, a1);
}

char *sub_100378378(uint64_t a1)
{
  return sub_10025914C(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

size_t sub_10037838C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  size_t result;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD v41[2];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  char *v48;
  uint64_t v49;

  v49 = sub_100005574((uint64_t *)&unk_10049E840);
  v2 = *(_QWORD *)(v49 - 8);
  __chkstk_darwin();
  v48 = (char *)v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v47 = (_QWORD *)((char *)v41 - v4);
  __chkstk_darwin();
  v6 = (char *)v41 - v5;
  v7 = *(unsigned __int8 *)(v2 + 80);
  v8 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  v9 = _swiftEmptyArrayStorage;
  v46 = v8;
  v41[1] = a1;
  if (v8)
  {
    v44 = (v7 + 32) & ~v7;
    v10 = (char *)_swiftEmptyArrayStorage + v44;
    v11 = 0;
    v12 = 0;
    v13 = *(_QWORD *)(type metadata accessor for PlaylistCurators.Curator(0) - 8);
    v14 = a1 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    v45 = *(_QWORD *)(v13 + 72);
    v42 = v2;
    v43 = v7 | 7;
    v15 = _swiftEmptyArrayStorage;
    while (1)
    {
      v17 = v2;
      v18 = v49;
      v19 = (uint64_t)&v48[*(int *)(v49 + 48)];
      sub_100261490(v14, v19);
      v20 = (uint64_t)v47;
      v21 = (uint64_t)v47 + *(int *)(v18 + 48);
      *v47 = v11;
      sub_100379810(v19, v21);
      result = sub_1000149A8(v20, (uint64_t)v6, (uint64_t *)&unk_10049E840);
      if (v12)
      {
        v9 = v15;
        v2 = v17;
        v16 = __OFSUB__(v12--, 1);
        if (v16)
          goto LABEL_27;
      }
      else
      {
        v23 = v15[3];
        if ((uint64_t)((v23 >> 1) + 0x4000000000000000) < 0)
        {
          __break(1u);
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
LABEL_36:
          __break(1u);
          return result;
        }
        v24 = v23 & 0xFFFFFFFFFFFFFFFELL;
        if (v24 <= 1)
          v25 = 1;
        else
          v25 = v24;
        v26 = sub_100005574(&qword_1004A1B58);
        v27 = *(_QWORD *)(v17 + 72);
        v28 = v44;
        v9 = (_QWORD *)swift_allocObject(v26, v44 + v27 * v25, v43);
        result = j__malloc_size(v9);
        if (!v27)
          goto LABEL_34;
        v29 = result - v28;
        if (result - v28 == 0x8000000000000000 && v27 == -1)
          goto LABEL_35;
        v31 = v49;
        v32 = v29 / v27;
        v9[2] = v25;
        v9[3] = 2 * (v29 / v27);
        v33 = (char *)v9 + v28;
        v34 = v15[3] >> 1;
        v35 = v34 * v27;
        if (v15[2])
        {
          if (v9 < v15 || v33 >= (char *)v15 + v44 + v35)
          {
            swift_arrayInitWithTakeFrontToBack(v33, (char *)v15 + v44, v34, v31);
          }
          else if (v9 != v15)
          {
            swift_arrayInitWithTakeBackToFront(v33);
          }
          v15[2] = 0;
        }
        v10 = &v33[v35];
        v37 = (v32 & 0x7FFFFFFFFFFFFFFFLL) - v34;
        swift_release(v15);
        v2 = v42;
        v16 = __OFSUB__(v37, 1);
        v12 = v37 - 1;
        if (v16)
        {
LABEL_27:
          __break(1u);
          break;
        }
      }
      ++v11;
      sub_1000149A8((uint64_t)v6, (uint64_t)v10, (uint64_t *)&unk_10049E840);
      v10 += *(_QWORD *)(v2 + 72);
      v14 += v45;
      v15 = v9;
      if (v46 == v11)
        goto LABEL_29;
    }
  }
  v12 = 0;
LABEL_29:
  result = swift_bridgeObjectRelease();
  v38 = v9[3];
  if (v38 >= 2)
  {
    v39 = v38 >> 1;
    v16 = __OFSUB__(v39, v12);
    v40 = v39 - v12;
    if (v16)
      goto LABEL_36;
    v9[2] = v40;
  }
  return (size_t)v9;
}

uint64_t sub_100378684(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  id v7;
  uint64_t isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  const void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v1 = a1;
  v38 = a1;
  if (a1 >> 62)
    goto LABEL_69;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
LABEL_3:
  v3 = _swiftEmptyArrayStorage;
  v4 = 0;
  if (v2)
  {
    v5 = &_swiftEmptyArrayStorage[4];
    while (1)
    {
      v6 = (unint64_t)v1 >> 62;
      if ((unint64_t)v1 >> 62)
      {
        if (v1 < 0)
          v13 = v1;
        else
          v13 = v1 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        v14 = _CocoaArrayWrapper.endIndex.getter(v13);
        swift_bridgeObjectRelease();
        if (!v14)
          goto LABEL_63;
        swift_bridgeObjectRetain();
        v15 = _CocoaArrayWrapper.endIndex.getter(v13);
        swift_bridgeObjectRelease();
        if (!v15)
          goto LABEL_64;
      }
      else if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_63;
      }
      if ((v1 & 0xC000000000000001) != 0)
      {
        v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v1);
        if (!v6)
          goto LABEL_10;
      }
      else
      {
        if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_63:
          __break(1u);
LABEL_64:
          __break(1u);
LABEL_65:
          __break(1u);
LABEL_66:
          __break(1u);
LABEL_67:
          __break(1u);
LABEL_68:
          __break(1u);
LABEL_69:
          if (v1 < 0)
            v37 = v1;
          else
            v37 = v1 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain();
          v2 = _CocoaArrayWrapper.endIndex.getter(v37);
          goto LABEL_3;
        }
        v7 = *(id *)(v1 + 32);
        if (!v6)
        {
LABEL_10:
          if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_67;
          goto LABEL_11;
        }
      }
      if (v1 < 0)
        v16 = v1;
      else
        v16 = v1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v17 = _CocoaArrayWrapper.endIndex.getter(v16);
      swift_bridgeObjectRelease();
      if (!v17)
        goto LABEL_67;
LABEL_11:
      sub_1002458F4(0, 1);
      v1 = v38;
      if ((unint64_t)v38 >> 62)
      {
        if (v38 < 0)
          v18 = v38;
        else
          v18 = v38 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        v19 = _CocoaArrayWrapper.endIndex.getter(v18);
        swift_bridgeObjectRelease();
        if (!v19)
        {
LABEL_38:
          v11 = 0;
          if (v4)
            goto LABEL_19;
          goto LABEL_39;
        }
      }
      else if (!*(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_38;
      }
      isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(v1);
      if (!(_DWORD)isUniquelyReferenced_nonNull_bridgeObject || v1 < 0 || (v1 & 0x4000000000000000) != 0)
      {
        isUniquelyReferenced_nonNull_bridgeObject = sub_1001B7088(v1);
        v1 = isUniquelyReferenced_nonNull_bridgeObject;
        v38 = isUniquelyReferenced_nonNull_bridgeObject;
      }
      v9 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v9)
        goto LABEL_66;
      v10 = v9 - 1;
      v11 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 8 * v10 + 0x20);
      *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v10;
      v1 = (uint64_t)&v38;
      specialized Array._endMutation()(isUniquelyReferenced_nonNull_bridgeObject);
      if (v4)
      {
LABEL_19:
        v12 = __OFSUB__(v4--, 1);
        if (v12)
          goto LABEL_65;
        goto LABEL_51;
      }
LABEL_39:
      v20 = v3[3];
      if ((uint64_t)((v20 >> 1) + 0x4000000000000000) < 0)
        goto LABEL_68;
      v21 = v20 & 0xFFFFFFFFFFFFFFFELL;
      if (v21 <= 1)
        v22 = 1;
      else
        v22 = v21;
      v23 = sub_100005574(&qword_100499E00);
      v1 = swift_allocObject(v23, 16 * v22 + 32, 7);
      v24 = j__malloc_size((const void *)v1);
      v25 = v24 - 32;
      if (v24 < 32)
        v25 = v24 - 17;
      v26 = v25 >> 4;
      *(_QWORD *)(v1 + 16) = v22;
      *(_QWORD *)(v1 + 24) = 2 * (v25 >> 4);
      v27 = v1 + 32;
      v28 = v3[3] >> 1;
      if (v3[2])
      {
        v29 = v3 + 4;
        if ((_QWORD *)v1 != v3 || v27 >= (unint64_t)v29 + 16 * v28)
          memmove((void *)(v1 + 32), v29, 16 * v28);
        v3[2] = 0;
      }
      v5 = (_QWORD *)(v27 + 16 * v28);
      v30 = (v26 & 0x7FFFFFFFFFFFFFFFLL) - v28;
      swift_release(v3);
      v3 = (_QWORD *)v1;
      v12 = __OFSUB__(v30, 1);
      v4 = v30 - 1;
      if (v12)
        goto LABEL_65;
LABEL_51:
      *v5 = v7;
      v5[1] = v11;
      v1 = v38;
      if ((unint64_t)v38 >> 62)
      {
        if (v38 < 0)
          v31 = v38;
        else
          v31 = v38 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        v32 = _CocoaArrayWrapper.endIndex.getter(v31);
        swift_bridgeObjectRelease();
        v5 += 2;
        if (!v32)
          break;
      }
      else
      {
        v5 += 2;
        if (!*(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10))
          break;
      }
    }
  }
  result = swift_bridgeObjectRelease();
  v34 = v3[3];
  if (v34 < 2)
    return (uint64_t)v3;
  v35 = v34 >> 1;
  v12 = __OFSUB__(v35, v4);
  v36 = v35 - v4;
  if (!v12)
  {
    v3[2] = v36;
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

void sub_1003789F8()
{
  sub_1003726F0();
}

void sub_100378A18(uint64_t a1, void (*a2)(uint64_t, id))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  id v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;

  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain();
  v9 = 0;
  while (1)
  {
    if (v7)
    {
      v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v11 = v10 | (v9 << 6);
      goto LABEL_5;
    }
    v14 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v14);
    ++v9;
    if (!v15)
    {
      v9 = v14 + 1;
      if (v14 + 1 >= v8)
        goto LABEL_23;
      v15 = *(_QWORD *)(v4 + 8 * v9);
      if (!v15)
      {
        v9 = v14 + 2;
        if (v14 + 2 >= v8)
          goto LABEL_23;
        v15 = *(_QWORD *)(v4 + 8 * v9);
        if (!v15)
        {
          v9 = v14 + 3;
          if (v14 + 3 >= v8)
            goto LABEL_23;
          v15 = *(_QWORD *)(v4 + 8 * v9);
          if (!v15)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v15 - 1) & v15;
    v11 = __clz(__rbit64(v15)) + (v9 << 6);
LABEL_5:
    v12 = *(unsigned __int8 *)(*(_QWORD *)(a1 + 48) + v11);
    v13 = *(id *)(*(_QWORD *)(a1 + 56) + 8 * v11);
    a2(v12, v13);

  }
  v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release(a1);
    return;
  }
  v15 = *(_QWORD *)(v4 + 8 * v16);
  if (v15)
  {
    v9 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    v9 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v9 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v9);
    ++v16;
    if (v15)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_100378B94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  unint64_t v14;
  char v15;
  void *v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  __n128 v21;
  _QWORD *v22;
  __int128 v23;
  __int128 v24;

  v4 = Data.init(contentsOf:options:)(a1, 0);
  if (v2)
    goto LABEL_2;
  v7 = v4;
  v8 = v5;
  v1 = sub_1000087DC(0, &qword_1004A1B20, NSKeyedUnarchiver_ptr);
  v9 = sub_100005574(&qword_1004A1B28);
  v10 = swift_allocObject(v9, 72, 7);
  *(_OWORD *)(v10 + 16) = xmmword_100384AE0;
  v11 = sub_1000087DC(0, &qword_100499970, CALayer_ptr);
  *(_QWORD *)(v10 + 32) = v11;
  *(_QWORD *)(v10 + 40) = sub_1000087DC(0, &qword_1004A1B30, NSMutableDictionary_ptr);
  *(_QWORD *)(v10 + 48) = sub_1000087DC(0, &qword_1004A1B38, NSArray_ptr);
  *(_QWORD *)(v10 + 56) = sub_1000087DC(0, &qword_1004A1B40, NSString_ptr);
  *(_QWORD *)(v10 + 64) = sub_1000087DC(0, &qword_100499B58, NSNumber_ptr);
  static NSKeyedUnarchiver.unarchivedObject(ofClasses:from:)(&v23, v10, v7, v8);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v24 + 1))
  {
LABEL_19:
    sub_10024ED50((uint64_t)&v23);
    goto LABEL_20;
  }
  v13 = sub_100005574(&qword_1004A1B50);
  if ((swift_dynamicCast(&v22, &v23, (char *)&type metadata for Any + 8, v13, 6) & 1) != 0)
  {
    v1 = (uint64_t)v22;
    if (v22[2])
    {
      v14 = sub_10009ABAC(0x6579614C746F6F72, 0xE900000000000072);
      if ((v15 & 1) != 0)
      {
        sub_10000684C(*(_QWORD *)(v1 + 56) + 32 * v14, (uint64_t)&v23);
        if ((swift_dynamicCast(&v22, &v23, (char *)&type metadata for Any + 8, v11, 6) & 1) != 0)
        {
          v16 = v22;
          if (*(_QWORD *)(v1 + 16) && (v17 = sub_10009ABAC(0xD000000000000010, 0x80000001003BC630), (v18 & 1) != 0))
          {
            sub_10000684C(*(_QWORD *)(v1 + 56) + 32 * v17, (uint64_t)&v23);
          }
          else
          {
            v23 = 0u;
            v24 = 0u;
          }
          swift_bridgeObjectRelease();
          if (*((_QWORD *)&v24 + 1))
          {
            if ((swift_dynamicCast(&v22, &v23, (char *)&type metadata for Any + 8, v13, 6) & 1) != 0)
            {
              sub_1000067E8(v7, v8);
              v1 = (uint64_t)v22;
              v19 = type metadata accessor for URL(0);
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(a1, v19);
              return v1;
            }

            goto LABEL_20;
          }

          goto LABEL_19;
        }
      }
    }
    swift_bridgeObjectRelease();
  }
LABEL_20:
  v20 = sub_1003797CC();
  swift_allocError(&type metadata for BouncyBarsAsset.MicaBundle.Error, v20, 0, 0);
  swift_willThrow(v21);
  sub_1000067E8(v7, v8);
LABEL_2:
  v6 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  return v1;
}

void _s11MusicCoreUI21WaveformPlayIndicatorC5coderACSgSo7NSCoderC_tcfc_0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v1 = v0;
  v2 = sub_100005574(&qword_10049DAA0);
  v19 = *(_QWORD *)(v2 - 8);
  v20 = v2;
  __chkstk_darwin();
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v0[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_mode] = 0;
  v5 = &v0[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_colorPalette];
  v6 = (void *)objc_opt_self(UIColor);
  v7 = objc_msgSend(v6, "tintColor");
  v8 = objc_msgSend(v6, "labelColor");
  v9 = objc_msgSend(v8, "colorWithAlphaComponent:", 0.35);

  v10 = objc_msgSend(v6, "labelColor");
  v11 = objc_msgSend(v10, "colorWithAlphaComponent:", 0.2);

  v12 = objc_msgSend(v6, "labelColor");
  v13 = objc_msgSend(v12, "colorWithAlphaComponent:", 0.6);

  *(_QWORD *)v5 = v7;
  *((_QWORD *)v5 + 1) = v9;
  *((_QWORD *)v5 + 2) = v11;
  *((_QWORD *)v5 + 3) = v13;
  v14 = OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_waveform;
  *(_QWORD *)&v1[v14] = objc_msgSend((id)objc_opt_self(MRUWaveformData), "zero");
  *(_QWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_exclusiveAnimation] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_pulseTask] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_barRatio] = 0x3FE0000000000000;
  v15 = &v1[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator__isVisible];
  v21 = 0;
  Published.init(initialValue:)(&v21, &type metadata for Bool);
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v15, v4, v20);
  *(_QWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator____lazy_storage___bars] = 0;
  v16 = OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_cannedAnimationAsset;
  v17 = type metadata accessor for BouncyBarsAsset();
  swift_allocObject(v17, 56, 7);
  *(_QWORD *)&v1[v16] = sub_1003775B8();

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "MusicCoreUI/WaveformPlayIndicator.swift", 39, 2, 32, 0);
  __break(1u);
}

uint64_t sub_100379138()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_10037915C()
{
  uint64_t v0;

  return sub_1003757C8(*(char **)(v0 + 16));
}

uint64_t sub_100379164(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

double sub_100379174(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 40)).n128_u64[0];
  return result;
}

unint64_t sub_100379188()
{
  unint64_t result;

  result = qword_1004A18A0;
  if (!qword_1004A18A0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for WaveformPlayIndicator.Mode, &type metadata for WaveformPlayIndicator.Mode);
    atomic_store(result, (unint64_t *)&qword_1004A18A0);
  }
  return result;
}

uint64_t sub_1003791CC()
{
  return type metadata accessor for WaveformPlayIndicator(0);
}

uint64_t type metadata accessor for WaveformPlayIndicator(uint64_t a1)
{
  uint64_t result;

  result = qword_1004A18D0;
  if (!qword_1004A18D0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for WaveformPlayIndicator);
  return result;
}

void sub_100379210(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[11];

  v4[0] = &unk_1003A0BC8;
  v4[1] = &unk_1003A0BE0;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[3] = &unk_1003A0BF8;
  v4[4] = &unk_1003A0BF8;
  v4[5] = (char *)&value witness table for Builtin.Int64 + 64;
  sub_1002FE958();
  if (v3 <= 0x3F)
  {
    v4[6] = *(_QWORD *)(v2 - 8) + 64;
    v4[7] = &unk_1003A0BF8;
    v4[8] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[9] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[10] = &unk_1003A0BF8;
    swift_updateClassMetadata2(a1, 256, 11, v4, a1 + 80);
  }
}

uint64_t storeEnumTagSinglePayload for WaveformPlayIndicator.Mode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_100379314 + 4 * byte_1003A0A75[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_100379348 + 4 * byte_1003A0A70[v4]))();
}

uint64_t sub_100379348(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100379350(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100379358);
  return result;
}

uint64_t sub_100379364(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10037936CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_100379370(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100379378(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WaveformPlayIndicator.Mode()
{
  return &type metadata for WaveformPlayIndicator.Mode;
}

ValueMetadata *type metadata accessor for WaveformPlayIndicator.ColorPalette()
{
  return &type metadata for WaveformPlayIndicator.ColorPalette;
}

uint64_t type metadata accessor for AnimationGroup()
{
  return objc_opt_self(_TtC11MusicCoreUIP33_1239B5B087AAB7692D5EF8FD4F2B07D114AnimationGroup);
}

_QWORD *initializeBufferWithCopyOfBuffer for BouncyBarsAsset.MicaBundle(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  id v4;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  v4 = v3;
  return a1;
}

void destroy for BouncyBarsAsset.MicaBundle(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)a1);

}

uint64_t *assignWithCopy for BouncyBarsAsset.MicaBundle(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;

  v4 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease(v4);
  v5 = (void *)a2[1];
  v6 = (void *)a1[1];
  a1[1] = (uint64_t)v5;
  v7 = v5;

  return a1;
}

_QWORD *assignWithTake for BouncyBarsAsset.MicaBundle(_QWORD *a1, _OWORD *a2)
{
  void *v4;

  swift_bridgeObjectRelease(*a1);
  v4 = (void *)a1[1];
  *(_OWORD *)a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for BouncyBarsAsset.MicaBundle()
{
  return &type metadata for BouncyBarsAsset.MicaBundle;
}

uint64_t assignWithCopy for AnimationGroup.Animator(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for AnimationGroup.Animator(uint64_t a1, _QWORD *a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  *(_QWORD *)(a1 + 8) = a2[1];
  return a1;
}

ValueMetadata *type metadata accessor for AnimationGroup.Animator()
{
  return &type metadata for AnimationGroup.Animator;
}

void sub_100379554()
{
  uint64_t v0;

  dispatch_group_leave(*(dispatch_group_t *)(v0 + 16));
}

uint64_t sub_10037955C()
{
  uint64_t v0;

  return sub_100377320(v0);
}

uint64_t sub_100379564()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100379590()
{
  uint64_t v0;

  sub_1003756A4(*(char **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100379598()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

void sub_1003795BC()
{
  uint64_t v0;

  sub_10037549C(*(char **)(v0 + 16), *(_BYTE *)(v0 + 24));
}

void sub_1003795C8()
{
  uint64_t v0;

  sub_100374F28(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1003795D0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_1003795FC()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 24);
  objc_msgSend(*(id *)(v0 + 16), "setAlpha:", 1.0);
  return objc_msgSend(v1, "setAlpha:", 1.0);
}

uint64_t sub_100379634()
{
  uint64_t v0;

  return sub_100374CD8(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10037963C()
{
  uint64_t v0;

  return sub_100374780(*(_QWORD *)(v0 + 16));
}

double sub_100379644(uint64_t a1)
{
  uint64_t v1;

  return sub_100374BB0(a1, *(char **)(v1 + 16), *(_BYTE *)(v1 + 24));
}

uint64_t sub_100379650()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10037967C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1004A1B04);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10000EA88;
  return sub_100375E20(a1, v4, v5, v6);
}

uint64_t sub_1003796E8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

id sub_100379718()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 16);
  objc_msgSend(v1, "setBackgroundColor:", *(_QWORD *)(v0 + 24));
  objc_msgSend(v1, "bounds");
  return objc_msgSend(v1, "setBounds:");
}

id sub_100379770(id result)
{
  uint64_t v1;

  if (!result)
    return objc_msgSend(*(id *)(v1 + 16), "startAnimation");
  return result;
}

void sub_100379788(char a1, uint64_t a2)
{
  uint64_t v2;

  sub_100376DCC(a1, a2, *(void **)(v2 + 16));
}

double sub_100379790()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double result;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_exclusiveAnimation);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_exclusiveAnimation) = 0;
  *(_QWORD *)&result = swift_release(v2).n128_u64[0];
  return result;
}

uint64_t sub_1003797A8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_1003797CC()
{
  unint64_t result;

  result = qword_1004A1B48;
  if (!qword_1004A1B48)
  {
    result = swift_getWitnessTable(&unk_1003A0DE4, &type metadata for BouncyBarsAsset.MicaBundle.Error);
    atomic_store(result, (unint64_t *)&qword_1004A1B48);
  }
  return result;
}

uint64_t sub_100379810(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PlaylistCurators.Curator(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t storeEnumTagSinglePayload for BouncyBarsAsset.MicaBundle.Error(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_100379894 + 4 * byte_1003A0A7A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1003798B4 + 4 * byte_1003A0A7F[v4]))();
}

_BYTE *sub_100379894(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1003798B4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1003798BC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1003798C4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1003798CC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1003798D4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for BouncyBarsAsset.MicaBundle.Error()
{
  return &type metadata for BouncyBarsAsset.MicaBundle.Error;
}

uint64_t storeEnumTagSinglePayload for BouncyBarsAsset.BarAnimationKey(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_10037993C + 4 * byte_1003A0A89[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100379970 + 4 * byte_1003A0A84[v4]))();
}

uint64_t sub_100379970(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100379978(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100379980);
  return result;
}

uint64_t sub_10037998C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100379994);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100379998(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003799A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BouncyBarsAsset.BarAnimationKey()
{
  return &type metadata for BouncyBarsAsset.BarAnimationKey;
}

uint64_t sub_1003799BC()
{
  return sub_10002FFB8(&qword_1004A1B60, &qword_1004A1B68, (uint64_t)&protocol conformance descriptor for [A]);
}

unint64_t sub_1003799EC()
{
  unint64_t result;

  result = qword_1004A1B70;
  if (!qword_1004A1B70)
  {
    result = swift_getWitnessTable(&unk_1003A0D54, &type metadata for BouncyBarsAsset.BarAnimationKey);
    atomic_store(result, (unint64_t *)&qword_1004A1B70);
  }
  return result;
}

unint64_t sub_100379A34()
{
  unint64_t result;

  result = qword_1004A1B78;
  if (!qword_1004A1B78)
  {
    result = swift_getWitnessTable(&unk_1003A0DBC, &type metadata for BouncyBarsAsset.MicaBundle.Error);
    atomic_store(result, (unint64_t *)&qword_1004A1B78);
  }
  return result;
}

unint64_t sub_100379A78(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10045A118, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3)
    return 3;
  else
    return v3;
}

void sub_10037A2E4(id a1)
{
  MusicMonogramArtworkDataSource *v1;
  void *v2;

  v1 = objc_alloc_init(MusicMonogramArtworkDataSource);
  v2 = (void *)qword_1004C96D0;
  qword_1004C96D0 = (uint64_t)v1;

}

void sub_10037A34C(id a1)
{
  dispatch_queue_attr_t v1;
  dispatch_queue_t v2;
  void *v3;
  NSObject *v4;

  v1 = dispatch_queue_attr_make_with_qos_class(0, QOS_CLASS_USER_INTERACTIVE, 0);
  v4 = objc_claimAutoreleasedReturnValue(v1);
  v2 = dispatch_queue_create("com.apple.Music.MusicMonogramArtworkDataSource.loadingQueue", v4);
  v3 = (void *)qword_1004C96E0;
  qword_1004C96E0 = (uint64_t)v2;

}

void sub_10037A478(uint64_t a1)
{
  void *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  void *v9;
  _QWORD v10[4];
  id v11;
  id v12;
  double v13;
  double v14;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "token"));
  objc_msgSend(*(id *)(a1 + 32), "fittingSize");
  v4 = v3;
  v6 = v5;
  objc_msgSend(*(id *)(a1 + 32), "destinationScale");
  v8 = v7;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_10037A558;
  v10[3] = &unk_100468170;
  v9 = *(void **)(a1 + 40);
  v11 = *(id *)(a1 + 32);
  v13 = v4;
  v14 = v6;
  v12 = *(id *)(a1 + 48);
  objc_msgSend(v9, "_monogramImageForToken:fittingSize:scale:completionHandler:", v2, v10, v4, v6, v8);

}

void sub_10037A558(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  void *v5;
  id v6;

  v3 = *(void **)(a1 + 32);
  v4 = a2;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "visualIdenticalityIdentifier"));
  v6 = (id)objc_claimAutoreleasedReturnValue(+[MPArtworkRepresentation representationForVisualIdentity:withSize:image:](MPArtworkRepresentation, "representationForVisualIdentity:withSize:image:", v5, v4, *(double *)(a1 + 48), *(double *)(a1 + 56)));

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void sub_10037A9BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class sub_10037AA4C(uint64_t a1)
{
  Class result;

  sub_10037AAA0();
  result = objc_getClass("CNAvatarImageRenderer");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    sub_10037B180();
  qword_1004C96F0 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_10037AAA0()
{
  void *v0;
  __int128 v1;
  uint64_t v2;

  v0 = 0;
  if (!qword_1004C96F8)
  {
    v1 = off_1004681E0;
    v2 = 0;
    qword_1004C96F8 = _sl_dlopen(&v1, &v0);
  }
  if (!qword_1004C96F8)
    sub_10037B1F8(&v0);
  if (v0)
    free(v0);
}

Class sub_10037AB44(uint64_t a1)
{
  Class result;

  sub_10037AAA0();
  result = objc_getClass("CNAvatarImageRendererSettings");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    sub_10037B274();
  qword_1004C9700 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

Class sub_10037AB98(uint64_t a1)
{
  Class result;

  sub_10037AAA0();
  result = objc_getClass("CNAvatarImageRenderingScope");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    sub_10037B2EC();
  qword_1004C9708 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

Class sub_10037ABEC(uint64_t a1)
{
  Class result;
  void *v3;
  __int128 v4;
  uint64_t v5;

  v3 = 0;
  if (!qword_1004C9718)
  {
    v4 = off_1004681F8;
    v5 = 0;
    qword_1004C9718 = _sl_dlopen(&v4, &v3);
  }
  if (!qword_1004C9718)
    sub_10037B364(&v3);
  if (v3)
    free(v3);
  result = objc_getClass("CNContact");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    sub_10037B3E0();
  qword_1004C9710 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

id sub_10037AD80(uint64_t a1, void *a2)
{
  return _objc_msgSend(a2, "darwinNotificationReceived");
}

void sub_10037AFAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class sub_10037AFC8(uint64_t a1)
{
  Class result;
  void *v3;
  __int128 v4;
  uint64_t v5;

  v3 = 0;
  if (!qword_1004C9728)
  {
    v4 = off_100468210;
    v5 = 0;
    qword_1004C9728 = _sl_dlopen(&v4, &v3);
  }
  if (!qword_1004C9728)
    sub_10037B458(&v3);
  if (v3)
    free(v3);
  result = objc_getClass("AFPreferences");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    sub_10037B4D4();
  qword_1004C9720 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

Class sub_10037B0A4(uint64_t a1)
{
  Class result;
  void *v3;
  __int128 v4;
  uint64_t v5;

  v3 = 0;
  if (!qword_1004C9738)
  {
    v4 = off_100468228;
    v5 = 0;
    qword_1004C9738 = _sl_dlopen(&v4, &v3);
  }
  if (!qword_1004C9738)
    sub_10037B54C(&v3);
  if (v3)
    free(v3);
  result = objc_getClass("VTPreferences");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    sub_10037B5C8();
  qword_1004C9730 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_10037B180()
{
  void *v0;
  void *v1;

  v0 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](NSAssertionHandler, "currentHandler"));
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "Class getCNAvatarImageRendererClass(void)_block_invoke"));
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("MonogramArtworkDataSource.m"), 22, CFSTR("Unable to find class %s"), "CNAvatarImageRenderer");

  __break(1u);
}

void sub_10037B1F8(_QWORD *a1)
{
  void *v2;
  void *v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](NSAssertionHandler, "currentHandler"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "void *ContactsUILibrary(void)"));
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("MonogramArtworkDataSource.m"), 21, CFSTR("%s"), *a1);

  __break(1u);
}

void sub_10037B274()
{
  void *v0;
  void *v1;

  v0 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](NSAssertionHandler, "currentHandler"));
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "Class getCNAvatarImageRendererSettingsClass(void)_block_invoke"));
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("MonogramArtworkDataSource.m"), 24, CFSTR("Unable to find class %s"), "CNAvatarImageRendererSettings");

  __break(1u);
}

void sub_10037B2EC()
{
  void *v0;
  void *v1;

  v0 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](NSAssertionHandler, "currentHandler"));
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "Class getCNAvatarImageRenderingScopeClass(void)_block_invoke"));
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("MonogramArtworkDataSource.m"), 23, CFSTR("Unable to find class %s"), "CNAvatarImageRenderingScope");

  __break(1u);
}

void sub_10037B364(_QWORD *a1)
{
  void *v2;
  void *v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](NSAssertionHandler, "currentHandler"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "void *ContactsLibrary(void)"));
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("MonogramArtworkDataSource.m"), 29, CFSTR("%s"), *a1);

  __break(1u);
}

void sub_10037B3E0()
{
  void *v0;
  void *v1;

  v0 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](NSAssertionHandler, "currentHandler"));
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "Class getCNContactClass(void)_block_invoke"));
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("MonogramArtworkDataSource.m"), 30, CFSTR("Unable to find class %s"), "CNContact");

  __break(1u);
}

void sub_10037B458(_QWORD *a1)
{
  void *v2;
  void *v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](NSAssertionHandler, "currentHandler"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "void *AssistantServicesLibrary(void)"));
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("MusicSiriUtilities.m"), 16, CFSTR("%s"), *a1);

  __break(1u);
}

void sub_10037B4D4()
{
  void *v0;
  void *v1;

  v0 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](NSAssertionHandler, "currentHandler"));
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "Class getAFPreferencesClass(void)_block_invoke"));
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("MusicSiriUtilities.m"), 17, CFSTR("Unable to find class %s"), "AFPreferences");

  __break(1u);
}

void sub_10037B54C(_QWORD *a1)
{
  void *v2;
  void *v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](NSAssertionHandler, "currentHandler"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "void *VoiceTriggerLibrary(void)"));
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("MusicSiriUtilities.m"), 19, CFSTR("%s"), *a1);

  __break(1u);
}

void sub_10037B5C8()
{
  void *v0;
  void *v1;

  v0 = (void *)objc_claimAutoreleasedReturnValue(+[NSAssertionHandler currentHandler](NSAssertionHandler, "currentHandler"));
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "Class getVTPreferencesClass(void)_block_invoke"));
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("MusicSiriUtilities.m"), 20, CFSTR("Unable to find class %s"), "VTPreferences");

  __break(1u);
}

BOOL sub_10037B640(int a1, int a2, int a3)
{
  BOOL v6;

  if (qword_1004C9750 == -1)
  {
    v6 = dword_1004C9740 < a1;
    if (dword_1004C9740 > a1)
      return 1;
  }
  else
  {
    dispatch_once_f(&qword_1004C9750, 0, (dispatch_function_t)sub_10037B728);
    v6 = dword_1004C9740 < a1;
    if (dword_1004C9740 > a1)
      return 1;
  }
  if (v6)
    return 0;
  if (dword_1004C9744 > a2)
    return 1;
  return dword_1004C9744 >= a2 && dword_1004C9748 >= a3;
}

uint64_t sub_10037B728()
{
  return sub_10037B8C0(1);
}

uint64_t sub_10037B730(int a1, int a2, int a3, int a4)
{
  BOOL v9;
  _DWORD v10[2];

  if (qword_1004C9758 == -1)
  {
    if (qword_1004C9760)
    {
LABEL_3:
      v10[0] = a1;
      v10[1] = (a2 << 16) | (a3 << 8) | a4;
      return _availability_version_check(1, v10);
    }
  }
  else
  {
    dispatch_once_f(&qword_1004C9758, 0, (dispatch_function_t)sub_10037B8B8);
    if (qword_1004C9760)
      goto LABEL_3;
  }
  if (qword_1004C9750 == -1)
  {
    v9 = dword_1004C9740 < a2;
    if (dword_1004C9740 > a2)
      return 1;
  }
  else
  {
    dispatch_once_f(&qword_1004C9750, 0, (dispatch_function_t)sub_10037B728);
    v9 = dword_1004C9740 < a2;
    if (dword_1004C9740 > a2)
      return 1;
  }
  if (v9)
    return 0;
  if (dword_1004C9744 > a3)
    return 1;
  return dword_1004C9744 >= a3 && dword_1004C9748 >= a4;
}

uint64_t sub_10037B8B8()
{
  return sub_10037B8C0(0);
}

uint64_t sub_10037B8C0(uint64_t result)
{
  void *v1;
  BOOL v2;
  unsigned __int8 *v4;
  uint64_t (*v5)(_QWORD);
  unint64_t v6;
  uint64_t (*v7)(_QWORD, uint64_t, _QWORD, _QWORD);
  uint64_t (*v8)(_QWORD, const char *, uint64_t, unsigned __int8 *);
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t (*v10)(uint64_t);
  uint64_t (*v11)(void);
  FILE *v12;
  FILE *v13;
  uint64_t v14;
  size_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  FILE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  FILE *v27;
  unsigned int (*v28)(uint64_t, char *, uint64_t, uint64_t);
  char v29[32];

  v1 = (void *)qword_1004C9760;
  if (qword_1004C9760)
    v2 = (_DWORD)result == 0;
  else
    v2 = 0;
  if (!v2)
  {
    if (&__availability_version_check)
    {
      qword_1004C9760 = (uint64_t)&__availability_version_check;
      v1 = &__availability_version_check;
    }
    if (!v1 || (_DWORD)result != 0)
    {
      result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "kCFAllocatorNull");
      if (result)
      {
        v4 = *(unsigned __int8 **)result;
        result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFDataCreateWithBytesNoCopy");
        if (result)
        {
          v5 = (uint64_t (*)(_QWORD))result;
          v6 = (unint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFPropertyListCreateWithData");
          result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFPropertyListCreateFromXMLData");
          if (v6 | result)
          {
            v7 = (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD))result;
            result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringCreateWithCStringNoCopy");
            if (result)
            {
              v8 = (uint64_t (*)(_QWORD, const char *, uint64_t, unsigned __int8 *))result;
              result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFDictionaryGetValue");
              if (result)
              {
                v9 = (uint64_t (*)(uint64_t, uint64_t))result;
                result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFGetTypeID");
                if (result)
                {
                  v10 = (uint64_t (*)(uint64_t))result;
                  result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringGetTypeID");
                  if (result)
                  {
                    v11 = (uint64_t (*)(void))result;
                    result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringGetCString");
                    v28 = (unsigned int (*)(uint64_t, char *, uint64_t, uint64_t))result;
                    if (result)
                    {
                      result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFRelease");
                      if (result)
                      {
                        v12 = (FILE *)result;
                        result = (uint64_t)fopen("/System/Library/CoreServices/SystemVersion.plist", "r");
                        if (result)
                        {
                          v13 = (FILE *)result;
                          v27 = v12;
                          fseek((FILE *)result, 0, 2);
                          v14 = ftell(v13);
                          if (v14 < 0)
                          {
                            v16 = 0;
                          }
                          else
                          {
                            v15 = v14;
                            rewind(v13);
                            v16 = malloc(v15);
                            if (v16)
                            {
                              v26 = v16;
                              if (fread(v16, 1uLL, v15, v13) == v15)
                              {
                                v17 = v5(0);
                                if (v17)
                                {
                                  v18 = v17;
                                  v19 = v13;
                                  if (v6)
                                    v20 = ((uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD, _QWORD))v6)(0, v17, 0, 0, 0);
                                  else
                                    v20 = v7(0, v17, 0, 0);
                                  v21 = v20;
                                  if (v20)
                                  {
                                    v22 = v8(0, "ProductVersion", 1536, v4);
                                    if (v22)
                                    {
                                      v23 = v22;
                                      v24 = v9(v21, v22);
                                      ((void (*)(uint64_t))v27)(v23);
                                      if (v24)
                                      {
                                        v25 = v10(v24);
                                        if (v25 == v11())
                                        {
                                          if (v28(v24, v29, 32, 134217984))
                                            sscanf(v29, "%d.%d.%d", &dword_1004C9740, &dword_1004C9744, &dword_1004C9748);
                                        }
                                      }
                                    }
                                    ((void (*)(uint64_t))v27)(v21);
                                    v19 = v13;
                                  }
                                  ((void (*)(uint64_t))v27)(v18);
                                }
                                else
                                {
                                  v19 = v13;
                                }
                                v16 = v26;
                              }
                              else
                              {
                                v16 = v26;
                                v19 = v13;
                              }
                              goto LABEL_41;
                            }
                          }
                          v19 = v13;
LABEL_41:
                          free(v16);
                          return fclose(v19);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0()
{
  return UUID.init()();
}

uint64_t _s9MusicCore6PlayerC18NowPlayingObserverC22__observationRegistrar33_031AD420BBF8BBF113A2662767DAC2BBLL11Observation0oH0Vvpfi_0()
{
  return ObservationRegistrar.init()();
}

uint64_t _s16MusicKitInternal13UploadedAudioV0A4CoreE3url10Foundation3URLVSgvg_0()
{
  return UploadedAudio.postURL.getter();
}

uint64_t _s16MusicKitInternal13UploadedVideoV0A4CoreE3url10Foundation3URLVSgvg_0()
{
  return UploadedVideo.postURL.getter();
}

uint64_t _s7SwiftUI4ViewP9MusicCoreE23accessibilityIdentifieryQrAD013AccessibilityG0VF_0()
{
  return View.accessibilityIdentifier(_:)();
}

id objc_msgSend__monogramImageForToken_fittingSize_scale_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_monogramImageForToken:fittingSize:scale:completionHandler:");
}

id objc_msgSend_addObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObject:");
}

id objc_msgSend_arrayWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithCapacity:");
}

id objc_msgSend_arrayWithObjects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObjects:count:");
}

id objc_msgSend_avatarImageForContacts_scope_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "avatarImageForContacts:scope:");
}

id objc_msgSend_camera(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "camera");
}

id objc_msgSend_cancel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancel");
}

id objc_msgSend_contactWithDisplayName_emailOrPhoneNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contactWithDisplayName:emailOrPhoneNumber:");
}

id objc_msgSend_coordinate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "coordinate");
}

id objc_msgSend_copy(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copy");
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "count");
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countByEnumeratingWithState:objects:count:");
}

id objc_msgSend_currentHandler(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentHandler");
}

id objc_msgSend_defaultSettings(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultSettings");
}

id objc_msgSend_destinationScale(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "destinationScale");
}

id objc_msgSend_didUpdateResults(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didUpdateResults");
}

id objc_msgSend_fittingSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fittingSize");
}

id objc_msgSend_fullName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fullName");
}

id objc_msgSend_handleFailureInFunction_file_lineNumber_description_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleFailureInFunction:file:lineNumber:description:");
}

id objc_msgSend_hash(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hash");
}

id objc_msgSend_initWithMapItems_mapSize_useSnapshotService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMapItems:mapSize:useSnapshotService:");
}

id objc_msgSend_initWithSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSettings:");
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToString:");
}

id objc_msgSend_languageCode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "languageCode");
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "length");
}

id objc_msgSend_loadingQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadingQueue");
}

id objc_msgSend_localizedTriggerPhraseForLanguageCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedTriggerPhraseForLanguageCode:");
}

id objc_msgSend_location(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "location");
}

id objc_msgSend_mainScreen(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mainScreen");
}

id objc_msgSend_mapItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mapItem");
}

id objc_msgSend_mapShapshotter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mapShapshotter");
}

id objc_msgSend_placemark(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "placemark");
}

id objc_msgSend_representationForVisualIdentity_withSize_image_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "representationForVisualIdentity:withSize:image:");
}

id objc_msgSend_results(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "results");
}

id objc_msgSend_rightToLeft(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rightToLeft");
}

id objc_msgSend_scale(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scale");
}

id objc_msgSend_scopeWithPointSize_scale_rightToLeft_style_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scopeWithPointSize:scale:rightToLeft:style:");
}

id objc_msgSend_searchCompleter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchCompleter");
}

id objc_msgSend_setCenterCoordinateDistance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCenterCoordinateDistance:");
}

id objc_msgSend_setCoordinate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCoordinate:");
}

id objc_msgSend_setDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDelegate:");
}

id objc_msgSend_setMapShapshotter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMapShapshotter:");
}

id objc_msgSend_setQueryFragment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setQueryFragment:");
}

id objc_msgSend_setResultTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setResultTypes:");
}

id objc_msgSend_setSearchCompleter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSearchCompleter:");
}

id objc_msgSend_setSubtitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSubtitle:");
}

id objc_msgSend_setTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTitle:");
}

id objc_msgSend_sharedPreferences(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedPreferences");
}

id objc_msgSend_startWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startWithCompletionHandler:");
}

id objc_msgSend_stringWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithFormat:");
}

id objc_msgSend_stringWithUTF8String_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithUTF8String:");
}

id objc_msgSend_subtitle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subtitle");
}

id objc_msgSend_title(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "title");
}

id objc_msgSend_token(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "token");
}

id objc_msgSend_visualIdenticalityIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "visualIdenticalityIdentifier");
}
